[+++ b/jadx-gui/src/main/java/jadx/gui/ui/CommonSearchDialog.java, +import javax.swing.SwingConstants;, +import java.util.HashMap;, +import java.util.Map;, +import org.jetbrains.annotations.Nullable;, +		private Map<Integer, Component> componentCache = new HashMap<Integer, Component>();, +, +		public ResultsTableCellRenderer() {, +			int id = (row << 2) | column;, +			Component comp = componentCache.get(id);, +			if (comp == null && (obj instanceof JNode)) {, +				comp = makeCell((JNode) obj, column);, +				componentCache.put(id, comp);, +			if (comp != null) {, +				updateSelection(comp, isSelected);, +			}, +			return comp;, +		}, +		private void updateSelection(Component comp, boolean isSelected) {, +				comp.setBackground(selectedBackground);, +				comp.setForeground(selectedForeground);, +				comp.setBackground(ContentArea.BACKGROUND);, +		}, +, +		@Nullable, +		protected Component makeCell(JNode node, int column) {, +			if (column == 0) {, +				JLabel label = new JLabel(node.makeLongString() + "  ", node.getIcon(), SwingConstants.LEFT);, +				label.setOpaque(true);, +				label.setToolTipText(label.getText());, +, +++ b/jadx-gui/src/main/java/jadx/gui/ui/CommonSearchDialog.java, +import javax.swing.SwingConstants;, +import java.util.HashMap;, +import java.util.Map;, +import org.jetbrains.annotations.Nullable;, +		private Map<Integer, Component> componentCache = new HashMap<Integer, Component>();, +, +		public ResultsTableCellRenderer() {, +			int id = (row << 2) | column;, +			Component comp = componentCache.get(id);, +			if (comp == null && (obj instanceof JNode)) {, +				comp = makeCell((JNode) obj, column);, +				componentCache.put(id, comp);, +			if (comp != null) {, +				updateSelection(comp, isSelected);, +			}, +			return comp;, +		}, +		private void updateSelection(Component comp, boolean isSelected) {, +				comp.setBackground(selectedBackground);, +				comp.setForeground(selectedForeground);, +				comp.setBackground(ContentArea.BACKGROUND);, +		}, +, +		@Nullable, +		protected Component makeCell(JNode node, int column) {, +			if (column == 0) {, +				JLabel label = new JLabel(node.makeLongString() + "  ", node.getIcon(), SwingConstants.LEFT);, +				label.setOpaque(true);, +				label.setToolTipText(label.getText());, +, +++ b/jadx-gui/src/main/java/jadx/gui/utils/Utils.java, +		return "<html><body><nobr>" + name, +				+ "<span style='color:#888888;'> : " + typeStr(type) + "</span>", +				+ "</nobr></body></html>";]