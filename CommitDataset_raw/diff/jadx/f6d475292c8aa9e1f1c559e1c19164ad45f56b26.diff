[+++ b/jadx-gui/src/main/java/jadx/gui/ui/MainWindow.java, +import jadx.gui.ui.SearchDialog.SearchOptions;, +import javax.swing.AbstractAction;, +import javax.swing.Action;, +import java.util.EnumSet;, +import static javax.swing.KeyStroke.getKeyStroke;, +, +	private void saveAll() {, +		tree.requestFocus();, +		Action openAction = new AbstractAction(NLS.str("file.open"), ICON_OPEN) {, +				openFile();, +		};, +		openAction.putValue(Action.SHORT_DESCRIPTION, NLS.str("file.open"));, +		openAction.putValue(Action.ACCELERATOR_KEY, getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_DOWN_MASK));, +, +		Action saveAllAction = new AbstractAction(NLS.str("file.save_all"), ICON_SAVE_ALL) {, +			@Override, +			public void actionPerformed(ActionEvent e) {, +				saveAll();, +			}, +		};, +		saveAllAction.putValue(Action.SHORT_DESCRIPTION, NLS.str("file.save_all"));, +		saveAllAction.putValue(Action.ACCELERATOR_KEY, getKeyStroke(KeyEvent.VK_S, KeyEvent.CTRL_DOWN_MASK));, +		Action prefsAction = new AbstractAction(NLS.str("menu.preferences"), ICON_PREF) {, +			@Override, +			public void actionPerformed(ActionEvent e) {, +				new JadxSettingsWindow(MainWindow.this, settings).setVisible(true);, +		prefsAction.putValue(Action.SHORT_DESCRIPTION, NLS.str("menu.preferences"));, +		prefsAction.putValue(Action.ACCELERATOR_KEY, getKeyStroke(KeyEvent.VK_P,, +				KeyEvent.CTRL_DOWN_MASK | KeyEvent.SHIFT_DOWN_MASK));, +		Action exitAction = new AbstractAction(NLS.str("file.exit"), ICON_CLOSE) {, +			@Override, +			public void actionPerformed(ActionEvent e) {, +				dispose();, +			}, +		};, +		Action syncAction = new AbstractAction(NLS.str("menu.sync"), ICON_SYNC) {, +		syncAction.putValue(Action.SHORT_DESCRIPTION, NLS.str("menu.sync"));, +		syncAction.putValue(Action.ACCELERATOR_KEY, getKeyStroke(KeyEvent.VK_T, KeyEvent.CTRL_DOWN_MASK));, +		Action textSearchAction = new AbstractAction(NLS.str("menu.text_search"), ICON_SEARCH) {, +				new SearchDialog(MainWindow.this, EnumSet.of(SearchOptions.CODE)).setVisible(true);, +		textSearchAction.putValue(Action.SHORT_DESCRIPTION, NLS.str("menu.text_search"));, +		textSearchAction.putValue(Action.ACCELERATOR_KEY, getKeyStroke(KeyEvent.VK_F,, +				KeyEvent.CTRL_DOWN_MASK | KeyEvent.SHIFT_DOWN_MASK));, +		Action clsSearchAction = new AbstractAction(NLS.str("menu.class_search"), ICON_FIND) {, +			@Override, +			public void actionPerformed(ActionEvent e) {, +				new SearchDialog(MainWindow.this, EnumSet.of(SearchOptions.CLASS)).setVisible(true);, +			}, +		};, +		clsSearchAction.putValue(Action.SHORT_DESCRIPTION, NLS.str("menu.class_search"));, +		clsSearchAction.putValue(Action.ACCELERATOR_KEY, getKeyStroke(KeyEvent.VK_N, KeyEvent.CTRL_DOWN_MASK));, +		Action logAction = new AbstractAction(NLS.str("menu.log"), ICON_LOG) {, +		logAction.putValue(Action.SHORT_DESCRIPTION, NLS.str("menu.log"));, +		logAction.putValue(Action.ACCELERATOR_KEY, getKeyStroke(KeyEvent.VK_L,, +				KeyEvent.CTRL_DOWN_MASK | KeyEvent.SHIFT_DOWN_MASK));, +, +		Action aboutAction = new AbstractAction(NLS.str("menu.about")) {, +			@Override, +			public void actionPerformed(ActionEvent e) {, +				new AboutDialog().setVisible(true);, +			}, +		};, +, +		Action backAction = new AbstractAction(NLS.str("nav.back"), ICON_BACK) {, +			@Override, +			public void actionPerformed(ActionEvent e) {, +				tabbedPane.navBack();, +			}, +		};, +		backAction.putValue(Action.SHORT_DESCRIPTION, NLS.str("nav.back"));, +		backAction.putValue(Action.ACCELERATOR_KEY, getKeyStroke(KeyEvent.VK_LEFT,, +				KeyEvent.CTRL_DOWN_MASK | KeyEvent.ALT_DOWN_MASK));, +, +		Action forwardAction = new AbstractAction(NLS.str("nav.forward"), ICON_FORWARD) {, +			@Override, +			public void actionPerformed(ActionEvent e) {, +				tabbedPane.navForward();, +			}, +		};, +		forwardAction.putValue(Action.SHORT_DESCRIPTION, NLS.str("nav.forward"));, +		forwardAction.putValue(Action.ACCELERATOR_KEY, getKeyStroke(KeyEvent.VK_RIGHT,, +				KeyEvent.CTRL_DOWN_MASK | KeyEvent.ALT_DOWN_MASK));, +, +		JMenu file = new JMenu(NLS.str("menu.file"));, +		file.setMnemonic(KeyEvent.VK_F);, +		file.add(openAction);, +		file.add(saveAllAction);, +		file.addSeparator();, +		file.add(recentFiles);, +		file.addSeparator();, +		file.add(prefsAction);, +		file.addSeparator();, +		file.add(exitAction);, +, +		JMenu view = new JMenu(NLS.str("menu.view"));, +		view.setMnemonic(KeyEvent.VK_V);, +		view.add(flatPkgMenuItem);, +		view.add(syncAction);, +]