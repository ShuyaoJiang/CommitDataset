[+++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java, +		BlockNode body = getNextBlock(block);, +		if (body == null) {, +			mth.add(AFlag.INCONSISTENT_CODE);, +			LOG.warn("Unexpected end of synchronized block");, +			return null;, +		}, +			exit = traverseMonitorExitsCross(body, exits, cacheSet);, +		synchRegion.getSubBlocks().add(makeRegion(body, stack));, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java, +		BlockNode body = getNextBlock(block);, +		if (body == null) {, +			mth.add(AFlag.INCONSISTENT_CODE);, +			LOG.warn("Unexpected end of synchronized block");, +			return null;, +		}, +			exit = traverseMonitorExitsCross(body, exits, cacheSet);, +		synchRegion.getSubBlocks().add(makeRegion(body, stack));, +++ b/jadx-core/src/main/java/jadx/core/utils/AsmUtils.java, +		String className = null;, +		FileInputStream in = null;, +		try {, +			in = new FileInputStream(file);, +			className = classReader.getClassName();, +		} finally {, +			if (in != null) {, +				in.close();, +			}, +		}, +		return className;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java, +		BlockNode body = getNextBlock(block);, +		if (body == null) {, +			mth.add(AFlag.INCONSISTENT_CODE);, +			LOG.warn("Unexpected end of synchronized block");, +			return null;, +		}, +			exit = traverseMonitorExitsCross(body, exits, cacheSet);, +		synchRegion.getSubBlocks().add(makeRegion(body, stack));, +++ b/jadx-core/src/main/java/jadx/core/utils/AsmUtils.java, +		String className = null;, +		FileInputStream in = null;, +		try {, +			in = new FileInputStream(file);, +			className = classReader.getClassName();, +		} finally {, +			if (in != null) {, +				in.close();, +			}, +		}, +		return className;, +++ b/jadx-core/src/main/java/jadx/core/utils/files/InputFile.java, +		FileOutputStream out = null;, +		JarOutputStream jo = null;, +		try {, +			out = new FileOutputStream(outFile);, +			jo = new JarOutputStream(out);, +			if (clsName == null) {, +				throw new IOException("Can't read class name from file: " + file);, +			}, +		} finally {, +			if (jo != null) {, +			}, +			if (out != null) {, +			}, +		}]