[+++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/TryCatchBlock.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/TryCatchBlock.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/BlockProcessingHelper.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/TryCatchBlock.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/BlockProcessingHelper.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ClassModifier.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/TryCatchBlock.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/BlockProcessingHelper.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ClassModifier.java, +import jadx.core.utils.InstructionRemover;, +++ /dev/null, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/TryCatchBlock.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/BlockProcessingHelper.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ClassModifier.java, +import jadx.core.utils.InstructionRemover;, +++ /dev/null, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ModVisitor.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/TryCatchBlock.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/BlockProcessingHelper.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ClassModifier.java, +import jadx.core.utils.InstructionRemover;, +++ /dev/null, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ModVisitor.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/TryCatchBlock.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/BlockProcessingHelper.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ClassModifier.java, +import jadx.core.utils.InstructionRemover;, +++ /dev/null, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ModVisitor.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java, +import jadx.core.utils.InstructionRemover;, +++ b/jadx-core/src/main/java/jadx/core/utils/InstructionRemover.java, +package jadx.core.utils;, +, +import jadx.core.dex.instructions.args.InsnArg;, +import jadx.core.dex.nodes.BlockNode;, +import jadx.core.dex.nodes.InsnNode;, +, +import java.util.ArrayList;, +import java.util.Iterator;, +import java.util.List;, +, +/**, + * Helper class for correct instructions removing,, + * can be used while iterating over instructions list, + */, +public class InstructionRemover {, +, +	private final List<InsnNode> insns;, +	private final List<InsnNode> toRemove;, +, +	public InstructionRemover(List<InsnNode> instructions) {, +		this.insns = instructions;, +		this.toRemove = new ArrayList<InsnNode>();, +	}, +, +	public void add(InsnNode insn) {, +		toRemove.add(insn);, +	}, +, +	public void perform() {, +		removeAll(insns, toRemove);, +		toRemove.clear();, +	}, +, +	public static void unbindInsnList(List<InsnNode> unbind) {, +		for (InsnNode rem : unbind), +			unbindInsn(rem);, +	}, +, +	public static void unbindInsn(InsnNode insn) {, +		if (insn.getResult() != null) {, +			InsnArg res = insn.getResult();, +			res.getTypedVar().getUseList().remove(res);, +		}, +		for (InsnArg arg : insn.getArguments()) {, +			if (arg.isRegister()) {, +				arg.getTypedVar().getUseList().remove(arg);, +			}, +		}, +	}]