[+++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +			LOG.debug("Class not found: {}", fullName);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +			LOG.debug("Class not found: {}", fullName);, +++ b/jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java, +		this.fullName = makeFullClsName(clsName);, +, +	public String makeFullClsName(String shortName) {, +		if (parentClass != null) {, +			return parentClass.fullName + "." + shortName;, +		}, +		return pkg.isEmpty() ? shortName : pkg + "." + shortName;, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +			LOG.debug("Class not found: {}", fullName);, +++ b/jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java, +		this.fullName = makeFullClsName(clsName);, +, +	public String makeFullClsName(String shortName) {, +		if (parentClass != null) {, +			return parentClass.fullName + "." + shortName;, +		}, +		return pkg.isEmpty() ? shortName : pkg + "." + shortName;, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +				addSourceFilenameAttr(fileName);, +	private void addSourceFilenameAttr(String fileName) {, +		if (fileName == null) {, +			return;, +		}, +		if (fileName.endsWith(".java")) {, +			fileName = fileName.substring(0, fileName.length() - 5);, +		}, +		if (fileName.isEmpty(), +				|| fileName.equals("SourceFile"), +				|| fileName.equals("\"")) {, +			return;, +		}, +		if (clsInfo != null) {, +			String name = clsInfo.getShortName();, +			if (fileName.equals(name)) {, +				return;, +			}, +			if (fileName.contains("$"), +					&& fileName.endsWith("$" + name)) {, +				return;, +			}, +		}, +		this.addAttr(new SourceFileAttr(fileName));, +		LOG.debug("Class '{}' compiled from '{}'", this, fileName);, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +			LOG.debug("Class not found: {}", fullName);, +++ b/jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java, +		this.fullName = makeFullClsName(clsName);, +, +	public String makeFullClsName(String shortName) {, +		if (parentClass != null) {, +			return parentClass.fullName + "." + shortName;, +		}, +		return pkg.isEmpty() ? shortName : pkg + "." + shortName;, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +				addSourceFilenameAttr(fileName);, +	private void addSourceFilenameAttr(String fileName) {, +		if (fileName == null) {, +			return;, +		}, +		if (fileName.endsWith(".java")) {, +			fileName = fileName.substring(0, fileName.length() - 5);, +		}, +		if (fileName.isEmpty(), +				|| fileName.equals("SourceFile"), +				|| fileName.equals("\"")) {, +			return;, +		}, +		if (clsInfo != null) {, +			String name = clsInfo.getShortName();, +			if (fileName.equals(name)) {, +				return;, +			}, +			if (fileName.contains("$"), +					&& fileName.endsWith("$" + name)) {, +				return;, +			}, +		}, +		this.addAttr(new SourceFileAttr(fileName));, +		LOG.debug("Class '{}' compiled from '{}'", this, fileName);, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/RootNode.java, +		for (DexNode dex : dexNodes) {, +				classes.addAll(dex.getClasses());, +				for (ClassNode cls : dex.getClasses()) {, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +			LOG.debug("Class not found: {}", fullName);, +++ b/jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java, +		this.fullName = makeFullClsName(clsName);, +, +	public String makeFullClsName(String shortName) {, +		if (parentClass != null) {, +			return parentClass.fullName + "." + shortName;]