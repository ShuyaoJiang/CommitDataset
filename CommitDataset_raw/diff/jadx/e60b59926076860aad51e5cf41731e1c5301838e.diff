[+++ b/src/main/java/jadx/dex/info/AccessInfo.java, +	@Override, +	public String toString() {, +		return "AccessInfo: " + type + " " + accFlags + " (" + makeString() + ")";, +	}, +++ b/src/main/java/jadx/dex/info/AccessInfo.java, +	@Override, +	public String toString() {, +		return "AccessInfo: " + type + " " + accFlags + " (" + makeString() + ")";, +	}, +++ b/src/main/java/jadx/dex/info/MethodInfo.java, +	public int getArgsCount() {, +		return args.size();, +	}, +, +++ b/src/main/java/jadx/dex/info/AccessInfo.java, +	@Override, +	public String toString() {, +		return "AccessInfo: " + type + " " + accFlags + " (" + makeString() + ")";, +	}, +++ b/src/main/java/jadx/dex/info/MethodInfo.java, +	public int getArgsCount() {, +		return args.size();, +	}, +, +++ b/src/main/java/jadx/dex/instructions/ArithNode.java, +	public ArithNode(DecodedInstruction insn, ArithOp op, ArgType type, boolean literal) {, +		super(InsnType.ARITH, 2);, +	public ArithNode(ArithOp op, RegisterArg res, InsnArg a, InsnArg b) {, +		super(InsnType.ARITH, 2);, +	public ArithNode(ArithOp op, RegisterArg res, InsnArg a) {, +		super(InsnType.ARITH, 1);, +++ b/src/main/java/jadx/dex/info/AccessInfo.java, +	@Override, +	public String toString() {, +		return "AccessInfo: " + type + " " + accFlags + " (" + makeString() + ")";, +	}, +++ b/src/main/java/jadx/dex/info/MethodInfo.java, +	public int getArgsCount() {, +		return args.size();, +	}, +, +++ b/src/main/java/jadx/dex/instructions/ArithNode.java, +	public ArithNode(DecodedInstruction insn, ArithOp op, ArgType type, boolean literal) {, +		super(InsnType.ARITH, 2);, +	public ArithNode(ArithOp op, RegisterArg res, InsnArg a, InsnArg b) {, +		super(InsnType.ARITH, 2);, +	public ArithNode(ArithOp op, RegisterArg res, InsnArg a) {, +		super(InsnType.ARITH, 1);, +++ b/src/main/java/jadx/dex/instructions/FillArrayOp.java, +	public FillArrayOp(int resReg, FillArrayDataPayloadDecodedInstruction payload) {, +		super(InsnType.FILL_ARRAY, 0);, +++ b/src/main/java/jadx/dex/info/AccessInfo.java, +	@Override, +	public String toString() {, +		return "AccessInfo: " + type + " " + accFlags + " (" + makeString() + ")";, +	}, +++ b/src/main/java/jadx/dex/info/MethodInfo.java, +	public int getArgsCount() {, +		return args.size();, +	}, +, +++ b/src/main/java/jadx/dex/instructions/ArithNode.java, +	public ArithNode(DecodedInstruction insn, ArithOp op, ArgType type, boolean literal) {, +		super(InsnType.ARITH, 2);, +	public ArithNode(ArithOp op, RegisterArg res, InsnArg a, InsnArg b) {, +		super(InsnType.ARITH, 2);, +	public ArithNode(ArithOp op, RegisterArg res, InsnArg a) {, +		super(InsnType.ARITH, 1);, +++ b/src/main/java/jadx/dex/instructions/FillArrayOp.java, +	public FillArrayOp(int resReg, FillArrayDataPayloadDecodedInstruction payload) {, +		super(InsnType.FILL_ARRAY, 0);, +++ b/src/main/java/jadx/dex/instructions/GotoNode.java, +	public GotoNode(int target) {, +		this(InsnType.GOTO, target);, +	protected GotoNode(InsnType type, int target) {, +		super(type);, +++ b/src/main/java/jadx/dex/info/AccessInfo.java, +	@Override, +	public String toString() {, +		return "AccessInfo: " + type + " " + accFlags + " (" + makeString() + ")";, +	}, +++ b/src/main/java/jadx/dex/info/MethodInfo.java, +	public int getArgsCount() {, +		return args.size();, +	}, +, +++ b/src/main/java/jadx/dex/instructions/ArithNode.java, +	public ArithNode(DecodedInstruction insn, ArithOp op, ArgType type, boolean literal) {, +		super(InsnType.ARITH, 2);, +	public ArithNode(ArithOp op, RegisterArg res, InsnArg a, InsnArg b) {, +		super(InsnType.ARITH, 2);, +	public ArithNode(ArithOp op, RegisterArg res, InsnArg a) {, +		super(InsnType.ARITH, 1);, +++ b/src/main/java/jadx/dex/instructions/FillArrayOp.java, +	public FillArrayOp(int resReg, FillArrayDataPayloadDecodedInstruction payload) {, +		super(InsnType.FILL_ARRAY, 0);, +++ b/src/main/java/jadx/dex/instructions/GotoNode.java, +	public GotoNode(int target) {, +		this(InsnType.GOTO, target);]