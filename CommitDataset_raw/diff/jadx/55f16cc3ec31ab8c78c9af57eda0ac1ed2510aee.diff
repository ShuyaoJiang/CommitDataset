[+++ b/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java, +		while((count+2)<=bytes.length) {, +			else if(type==0x0101) parseNameSpaceEnd();, +			else if(type==0x0103) parseElementEnd();, +			else if(type==0x0000) continue; // NullType is just doing nothing, +		//if(beginLineNumber!=2) die("NAMESPACE beginning line number != 2 not supported yet");, +		System.out.println("NAMESPACE BEGIN Line: " + beginLineNumber);, +	private void parseNameSpaceEnd() {, +		if(cInt16(bytes, count) != 0x0010) die("NAMESPACE header is not 0x0010");, +		if(cInt32(bytes, count) != 0x18) die("NAMESPACE header chunk is not 0x18 big");, +		int endLineNumber = cInt32(bytes, count);, +		//if(endLineNumber!=2) die("NAMESPACE begining line number != 2 not supported yet");, +		System.out.println("NAMESPACE END Line: " + endLineNumber);, +		System.out.println("Comment: 0x" + Integer.toHexString(cInt32(bytes, count)));, +		int endPrefix = cInt32(bytes, count);, +		System.out.println("Prefix: " + strings[endPrefix]);, +		nsPrefix = strings[endPrefix];, +		int endURI = cInt32(bytes, count);, +		System.out.println("URI: " + strings[endURI]);, +	}, +, +		//if(cInt32(bytes, count) != 0x0060) die("ELEMENT CHUNK SIZE is not 0x60");, +		count+=4;, +		System.out.println("<" + strings[startNSName] + "");, +			else System.out.println(strings[attributeName] + " = UNKNOWN DATA TYPE: " + attrValDataType);, +		System.out.println(">");, +	}, +, +	private void parseElementEnd() {, +		if(cInt16(bytes, count) != 0x0010) die("ELEMENT END header is not 0x0010");, +		if(cInt32(bytes, count) != 0x18) die("ELEMENT END header chunk is not 0x18 big");, +		int endLineNumber = cInt32(bytes, count);, +		//if(endLineNumber!=2) die("NAMESPACE beginning line number != 2 not supported yet");, +		System.out.println("ELEMENT END Line:" + endLineNumber);, +		System.out.println("Comment: 0x" + Integer.toHexString(cInt32(bytes, count)));, +		int elementNS = cInt32(bytes, count);, +		int elementName = cInt32(bytes, count);, +		System.out.print("</");, +		if(elementNS != -1) System.out.print(strings[elementNS]+":");, +		System.out.println(strings[elementName]+">");]