[+++ b/build.gradle, +		compile 'com.google.android:android:4.1.1.4', +++ b/build.gradle, +		compile 'com.google.android:android:4.1.1.4', +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +//import jadx.core.xmlgen.BinaryXMLParser;, +/*, +*/, +++ b/build.gradle, +		compile 'com.google.android:android:4.1.1.4', +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +//import jadx.core.xmlgen.BinaryXMLParser;, +/*, +*/, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java, +import java.lang.reflect.Field;, +, +import java.util.HashMap;, +import java.util.Map;, +, +import android.R.style;, +//import android.content.res.Resources;, +, +	Map<Integer, String> styleMap = null;, +		styleMap = new HashMap<Integer, String>();, +		if(null==styleMap) die("null==styleMap");, +		for(Field f : android.R.style.class.getFields()) {, +			try {, +				styleMap.put(f.getInt(f.getType()),f.getName());, +			} catch(IllegalAccessException iae) {, +				die("IAE");, +			}, +		}, +		, +		if(styleIndex!=0) System.out.println("startNS: styleIndex: " + styleIndex);, +			} else if(attrValDataType==0x1) {, +				if(attrValData<0x7f000000) {, +					//System.out.println("0x"+Integer.toHexString(attrValData));, +					//System.out.println(styleMap.get(attrValData));, +					//System.out.println(android.R.style.class);, +					writer.print("@*");, +					if(attributeNS != -1) writer.print(nsPrefix+":");, +					writer.print("style/"+styleMap.get(attrValData).replaceAll("_", "."));, +				} else {, +					writer.print("0x" + Integer.toHexString(attrValData));, +				}, +			}, +			else {, +/*, +	//System.out.println("ai["+i+"] ns: " + attributeNS);, +	//if(attributeNS!=-1) System.out.println("ai["+i+"] Sns: " + strings[attributeNS]);, +	//System.out.println("ai["+i+"] name: " + attributeName);, +	if(attributeName!=-1) System.out.println("ai["+i+"] Sns: " + strings[attributeName]);, +	System.out.println("ai["+i+"] rawval: " + attributeRawValue);, +	if(attributeRawValue!=-1) System.out.println("ai["+i+"] Sns: " + strings[attributeRawValue]);, +	System.out.println("ai["+i+"] dt: " + attrValDataType);, +	System.out.println("ai["+i+"] d: " + attrValData);, +*/, +				if("configChanges".equals(strings[attributeName])) {, +					if(attrValData==1152) writer.print("orientation");, +					else if(attrValData==4016) writer.print("keyboard|keyboardHidden|orientation|screenLayout|uiMode");, +					else if(attrValData==176) writer.print("keyboard|keyboardHidden|orientation");, +					else if(attrValData==160) writer.print("keyboardHidden|orientation");, +					else writer.print("UNKNOWN_DATA_"+Integer.toHexString(attrValData));, +				} else {, +					writer.print("UNKNOWN_DATA_TYPE_" + attrValDataType);, +				}, +			}]