[+++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +++ b/jadx-core/src/main/java/jadx/api/Decompiler.java, +	public ThreadPoolExecutor saveAll(File dir) {, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +++ b/jadx-core/src/main/java/jadx/api/Decompiler.java, +	public ThreadPoolExecutor saveAll(File dir) {, +++ b/jadx-core/src/main/java/jadx/api/JavaClass.java, +				if (!m.getAccessFlags().isSynthetic()) {, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +++ b/jadx-core/src/main/java/jadx/api/Decompiler.java, +	public ThreadPoolExecutor saveAll(File dir) {, +++ b/jadx-core/src/main/java/jadx/api/JavaClass.java, +				if (!m.getAccessFlags().isSynthetic()) {, +++ b/jadx-core/src/main/java/jadx/api/JavaField.java, +import jadx.core.dex.instructions.args.ArgType;, +	public ArgType getType() {, +		return field.getType();, +	}, +, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +++ b/jadx-core/src/main/java/jadx/api/Decompiler.java, +	public ThreadPoolExecutor saveAll(File dir) {, +++ b/jadx-core/src/main/java/jadx/api/JavaClass.java, +				if (!m.getAccessFlags().isSynthetic()) {, +++ b/jadx-core/src/main/java/jadx/api/JavaField.java, +import jadx.core.dex.instructions.args.ArgType;, +	public ArgType getType() {, +		return field.getType();, +	}, +, +++ b/jadx-core/src/main/java/jadx/api/JavaMethod.java, +import jadx.core.dex.instructions.args.ArgType;, +import java.util.List;, +, +	public List<ArgType> getArguments() {, +		return mth.getMethodInfo().getArgumentsTypes();, +	}, +, +	public ArgType getReturnType() {, +		return mth.getReturnType();, +	}, +, +	public boolean isConstructor() {, +		return mth.getMethodInfo().isConstructor();, +	}, +, +	public boolean isClassInit() {, +		return mth.getMethodInfo().isClassInit();, +	}, +, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +++ b/jadx-core/src/main/java/jadx/api/Decompiler.java, +	public ThreadPoolExecutor saveAll(File dir) {, +++ b/jadx-core/src/main/java/jadx/api/JavaClass.java, +				if (!m.getAccessFlags().isSynthetic()) {, +++ b/jadx-core/src/main/java/jadx/api/JavaField.java, +import jadx.core.dex.instructions.args.ArgType;, +	public ArgType getType() {, +		return field.getType();, +	}, +, +++ b/jadx-core/src/main/java/jadx/api/JavaMethod.java, +import jadx.core.dex.instructions.args.ArgType;, +import java.util.List;, +, +	public List<ArgType> getArguments() {, +		return mth.getMethodInfo().getArgumentsTypes();, +	}, +, +	public ArgType getReturnType() {, +		return mth.getReturnType();, +	}, +, +	public boolean isConstructor() {, +		return mth.getMethodInfo().isConstructor();, +	}, +, +	public boolean isClassInit() {, +		return mth.getMethodInfo().isClassInit();, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		// inline method, +				ClassInfo declClass = callMth.getDeclClass();, +				if (!insnCls.equals(declClass)) {, +					code.add(useClass(declClass)).add('.');, +				}, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +++ b/jadx-core/src/main/java/jadx/api/Decompiler.java, +	public ThreadPoolExecutor saveAll(File dir) {, +++ b/jadx-core/src/main/java/jadx/api/JavaClass.java, +				if (!m.getAccessFlags().isSynthetic()) {, +++ b/jadx-core/src/main/java/jadx/api/JavaField.java, +import jadx.core.dex.instructions.args.ArgType;, +	public ArgType getType() {, +		return field.getType();, +	}, +, +++ b/jadx-core/src/main/java/jadx/api/JavaMethod.java]