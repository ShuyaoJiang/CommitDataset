[+++ b/.gitignore, +++ b/.gitignore, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +++ b/.gitignore, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +import jadx.core.dex.visitors.DebugInfoVisitor;, +import jadx.core.dex.visitors.typeinference.FinishTypeInference;, +import jadx.core.dex.visitors.typeinference.TypeInference;, +			passes.add(new DebugInfoVisitor());, +			passes.add(new TypeInference());, +, +			if (args.isRawCFGOutput()) {, +				passes.add(DotGraphVisitor.dumpRaw());, +			}, +, +			passes.add(new FinishTypeInference());, +, +, +++ b/.gitignore, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +import jadx.core.dex.visitors.DebugInfoVisitor;, +import jadx.core.dex.visitors.typeinference.FinishTypeInference;, +import jadx.core.dex.visitors.typeinference.TypeInference;, +			passes.add(new DebugInfoVisitor());, +			passes.add(new TypeInference());, +, +			if (args.isRawCFGOutput()) {, +				passes.add(DotGraphVisitor.dumpRaw());, +			}, +, +			passes.add(new FinishTypeInference());, +, +, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +	private final Map<String, Set<String>> ancestorCache = Collections.synchronizedMap(new WeakHashMap<String, Set<String>>());, +++ b/.gitignore, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +import jadx.core.dex.visitors.DebugInfoVisitor;, +import jadx.core.dex.visitors.typeinference.FinishTypeInference;, +import jadx.core.dex.visitors.typeinference.TypeInference;, +			passes.add(new DebugInfoVisitor());, +			passes.add(new TypeInference());, +, +			if (args.isRawCFGOutput()) {, +				passes.add(DotGraphVisitor.dumpRaw());, +			}, +, +			passes.add(new FinishTypeInference());, +, +, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +	private final Map<String, Set<String>> ancestorCache = Collections.synchronizedMap(new WeakHashMap<String, Set<String>>());, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +import java.util.Arrays;, +				Object data = arrayNode.getData();, +				String arrStr;, +				if (data instanceof int[]) {, +					arrStr = Arrays.toString((int[]) data);, +				} else if (data instanceof short[]) {, +					arrStr = Arrays.toString((short[]) data);, +				} else if (data instanceof byte[]) {, +					arrStr = Arrays.toString((byte[]) data);, +				} else if (data instanceof long[]) {, +					arrStr = Arrays.toString((long[]) data);, +				} else {, +					arrStr = "?";, +				}, +++ b/.gitignore, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +import jadx.core.dex.visitors.DebugInfoVisitor;, +import jadx.core.dex.visitors.typeinference.FinishTypeInference;, +import jadx.core.dex.visitors.typeinference.TypeInference;, +			passes.add(new DebugInfoVisitor());, +			passes.add(new TypeInference());, +, +			if (args.isRawCFGOutput()) {, +				passes.add(DotGraphVisitor.dumpRaw());, +			}, +, +			passes.add(new FinishTypeInference());, +, +, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +	private final Map<String, Set<String>> ancestorCache = Collections.synchronizedMap(new WeakHashMap<String, Set<String>>());, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +import java.util.Arrays;, +				Object data = arrayNode.getData();, +				String arrStr;, +				if (data instanceof int[]) {, +					arrStr = Arrays.toString((int[]) data);, +				} else if (data instanceof short[]) {, +					arrStr = Arrays.toString((short[]) data);, +				} else if (data instanceof byte[]) {, +					arrStr = Arrays.toString((byte[]) data);, +				} else if (data instanceof long[]) {, +					arrStr = Arrays.toString((long[]) data);]