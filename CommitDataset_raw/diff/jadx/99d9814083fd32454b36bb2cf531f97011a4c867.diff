[+++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +			LOG.error("jadx error: {}", e.getMessage(), e);, +			LOG.info("output directory: {}", outDirName);, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +			LOG.error("jadx error: {}", e.getMessage(), e);, +			LOG.info("output directory: {}", outDirName);, +++ b/jadx-core/src/main/java/jadx/api/JavaPackage.java, +import org.jetbrains.annotations.NotNull;, +, +	public int compareTo(@NotNull JavaPackage o) {, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +			LOG.error("jadx error: {}", e.getMessage(), e);, +			LOG.info("output directory: {}", outDirName);, +++ b/jadx-core/src/main/java/jadx/api/JavaPackage.java, +import org.jetbrains.annotations.NotNull;, +, +	public int compareTo(@NotNull JavaPackage o) {, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +	public interface ResourceDecoder {, +				LOG.debug("Error close zip file: {}", zipRef, e);, +					LOG.error("Zip file close error: {}", file.getAbsolutePath(), e);, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +			LOG.error("jadx error: {}", e.getMessage(), e);, +			LOG.info("output directory: {}", outDirName);, +++ b/jadx-core/src/main/java/jadx/api/JavaPackage.java, +import org.jetbrains.annotations.NotNull;, +, +	public int compareTo(@NotNull JavaPackage o) {, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +	public interface ResourceDecoder {, +				LOG.debug("Error close zip file: {}", zipRef, e);, +					LOG.error("Zip file close error: {}", file.getAbsolutePath(), e);, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +			if (err != null) {, +, +			code.startLine("throw new UnsupportedOperationException(\"Method not decompiled: "), +					.add(mth.toString()), +					.add("\");");, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +			LOG.error("jadx error: {}", e.getMessage(), e);, +			LOG.info("output directory: {}", outDirName);, +++ b/jadx-core/src/main/java/jadx/api/JavaPackage.java, +import org.jetbrains.annotations.NotNull;, +, +	public int compareTo(@NotNull JavaPackage o) {, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +	public interface ResourceDecoder {, +				LOG.debug("Error close zip file: {}", zipRef, e);, +					LOG.error("Zip file close error: {}", file.getAbsolutePath(), e);, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +			if (err != null) {, +, +			code.startLine("throw new UnsupportedOperationException(\"Method not decompiled: "), +					.add(mth.toString()), +					.add("\");");, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +					throw new JadxRuntimeException("Unexpected key in switch: " + (k != null ? k.getClass() : null));, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +			LOG.error("jadx error: {}", e.getMessage(), e);, +			LOG.info("output directory: {}", outDirName);, +++ b/jadx-core/src/main/java/jadx/api/JavaPackage.java, +import org.jetbrains.annotations.NotNull;, +, +	public int compareTo(@NotNull JavaPackage o) {, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +	public interface ResourceDecoder {, +				LOG.debug("Error close zip file: {}", zipRef, e);, +					LOG.error("Zip file close error: {}", file.getAbsolutePath(), e);, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +			if (err != null) {, +, +			code.startLine("throw new UnsupportedOperationException(\"Method not decompiled: "), +					.add(mth.toString()), +					.add("\");");, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +					throw new JadxRuntimeException("Unexpected key in switch: " + (k != null ? k.getClass() : null));, +++ b/jadx-core/src/main/java/jadx/core/codegen/TypeGen.java, +					LOG.warn("Wrong object literal: {} for type: {}", lit, type);, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +			LOG.error("jadx error: {}", e.getMessage(), e);, +			LOG.info("output directory: {}", outDirName);, +++ b/jadx-core/src/main/java/jadx/api/JavaPackage.java, +import org.jetbrains.annotations.NotNull;, +, +	public int compareTo(@NotNull JavaPackage o) {, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +	public interface ResourceDecoder {, +				LOG.debug("Error close zip file: {}", zipRef, e);, +					LOG.error("Zip file close error: {}", file.getAbsolutePath(), e);, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +			if (err != null) {, +, +			code.startLine("throw new UnsupportedOperationException(\"Method not decompiled: "), +					.add(mth.toString()), +					.add("\");");, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +					throw new JadxRuntimeException("Unexpected key in switch: " + (k != null ? k.getClass() : null));, +++ b/jadx-core/src/main/java/jadx/core/codegen/TypeGen.java, +					LOG.warn("Wrong object literal: {} for type: {}", lit, type);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/CheckRegions.java]