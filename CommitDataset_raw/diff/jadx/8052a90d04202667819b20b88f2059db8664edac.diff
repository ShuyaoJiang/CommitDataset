[+++ b/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java, +import jadx.core.dex.instructions.ConstStringNode;, +, +          // If this is a 'new StringBuilder(xxx).append(yyy).append(zzz).toString(), , +          // convert it to STRING_CONCAT pseudo instruction., +	      int constrIndex = -1;  //RAF, +	      // Case where new StringBuilder() is called with NO args (the entire, +	      // string is created using .append() calls:, +	        constrIndex = 0;, +	      } else if (chain.size()>2 && chain.get(1).getType()==InsnType.CONSTRUCTOR) {, +	        //RAF Case where the first string element is String arg to the , +	        // new StringBuilder("xxx") constructor, +	        constrIndex = 1;, +	      } else if (chain.size()>3 && chain.get(2).getType()==InsnType.CONSTRUCTOR) {, +	        //RAF Case where the first string element is String.valueOf() arg , +	        // to the new StringBuilder(String.valueOf(zzz)) constructor, +	        constrIndex = 2;, +	      }, +, +	      if (constrIndex != -1) {  // If we found a CONSTRUCTOR, is it a StringBuilder?, +	        ConstructorInsn constr = (ConstructorInsn) chain.get(constrIndex);, +	        if (constr.getClassType().getFullName().equals(Consts.CLASS_STRING_BUILDER)) {, +	          int len = chain.size(),  argInd = 1;, +	          InsnNode argInsn;, +	          if (constrIndex > 0) {  // There was an arg to the StringBuilder constr, +	            InsnWrapArg iwa;, +	            if (constrIndex==2 , +	                && (argInsn = chain.get(1)).getType()==InsnType.INVOKE, +	                && ((InvokeNode)argInsn).getCallMth().getName().compareTo("valueOf")==0) {, +	              // The argument of new StringBuilder() is a String.valueOf(chainElement0), +	              iwa = (InsnWrapArg)argInsn.getArg(0);, +	              argInd = 3;  // Cause for loop below to skip to after the constructor, +	            } else {, +	              ConstStringNode csn = (ConstStringNode)chain.get(0);, +	              iwa = new InsnWrapArg(csn);, +	              argInd = 2;  // Cause for loop below to skip to after the constructor, +	            }, +	            concatInsn.addArg(iwa);, +	          }, +, +	          for (; argInd < len; argInd++) {  // Add the .append(xxx) arg string to concat , +	            concatInsn.addArg(chain.get(argInd).getArg(1));, +	        } // end of if constructor is for StringBuilder, +	      } // end of if we found a constructor early in the chain, +]