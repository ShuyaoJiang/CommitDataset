[+++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		if (callMthNode != null && callMthNode.isArgsOverload()) {, +			int argsCount = insn.getArgsCount();, +			List<ArgType> originalType = callMth.getArgumentsTypes();, +			int origPos = 0;, +, +			code.add('(');, +			for (int i = k; i < argsCount; i++) {, +				InsnArg arg = insn.getArg(i);, +				ArgType origType = originalType.get(origPos);, +				if (!arg.getType().equals(origType)) {, +					code.add('(').add(useType(origType)).add(')').add(arg(arg));, +				} else {, +					code.add(arg(arg));, +				}, +				if (i < argsCount - 1) {, +					code.add(", ");, +				}, +				origPos++;, +			}, +			code.add(')');, +		} else {, +	}, +		int argsCount = insn.getArgsCount();, +		if (k < argsCount) {, +			code.add(arg(insn, k));, +			for (int i = k + 1; i < argsCount; i++) {, +				code.add(arg(insn, i));, +			}, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		if (callMthNode != null && callMthNode.isArgsOverload()) {, +			int argsCount = insn.getArgsCount();, +			List<ArgType> originalType = callMth.getArgumentsTypes();, +			int origPos = 0;, +, +			code.add('(');, +			for (int i = k; i < argsCount; i++) {, +				InsnArg arg = insn.getArg(i);, +				ArgType origType = originalType.get(origPos);, +				if (!arg.getType().equals(origType)) {, +					code.add('(').add(useType(origType)).add(')').add(arg(arg));, +				} else {, +					code.add(arg(arg));, +				}, +				if (i < argsCount - 1) {, +					code.add(", ");, +				}, +				origPos++;, +			}, +			code.add(')');, +		} else {, +	}, +		int argsCount = insn.getArgsCount();, +		if (k < argsCount) {, +			code.add(arg(insn, k));, +			for (int i = k + 1; i < argsCount; i++) {, +				code.add(arg(insn, i));, +			}, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java, +	/**, +	 * Return true if exists method with same name and arguments count, +	 */, +	public boolean isArgsOverload() {, +		int argsCount = mthInfo.getArgumentsTypes().size();, +		if (argsCount == 0) {, +			return false;, +		}, +, +		String name = getName();, +		List<MethodNode> methods = parentClass.getMethods();, +		for (MethodNode method : methods) {, +			if (this != method, +					&& method.getName().equals(name), +					&& method.mthInfo.getArgumentsTypes().size() == argsCount), +				return true;, +		}, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		if (callMthNode != null && callMthNode.isArgsOverload()) {, +			int argsCount = insn.getArgsCount();, +			List<ArgType> originalType = callMth.getArgumentsTypes();, +			int origPos = 0;, +, +			code.add('(');, +			for (int i = k; i < argsCount; i++) {, +				InsnArg arg = insn.getArg(i);, +				ArgType origType = originalType.get(origPos);, +				if (!arg.getType().equals(origType)) {, +					code.add('(').add(useType(origType)).add(')').add(arg(arg));, +				} else {, +					code.add(arg(arg));, +				}, +				if (i < argsCount - 1) {, +					code.add(", ");, +				}, +				origPos++;, +			}, +			code.add(')');, +		} else {, +	}, +		int argsCount = insn.getArgsCount();]