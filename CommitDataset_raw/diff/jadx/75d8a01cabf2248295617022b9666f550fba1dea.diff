[+++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			MethodGen mthGen = new MethodGen(this, mth);, +			MethodGen mthGen;, +			if (badCode || mth.contains(AType.JADX_ERROR)) {, +				mthGen = MethodGen.getFallbackMethodGen(mth);, +			} else {, +				mthGen = new MethodGen(this, mth);, +			}, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			MethodGen mthGen = new MethodGen(this, mth);, +			MethodGen mthGen;, +			if (badCode || mth.contains(AType.JADX_ERROR)) {, +				mthGen = MethodGen.getFallbackMethodGen(mth);, +			} else {, +				mthGen = new MethodGen(this, mth);, +			}, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +		if (mth.contains(AType.JADX_ERROR), +				|| mth.contains(AFlag.INCONSISTENT_CODE), +				|| mth.getRegion() == null) {, +			code.startLine("throw new UnsupportedOperationException(\"Method not decompiled: "), +					.add(mth.toString()), +					.add("\");");, +			if (mth.contains(AType.JADX_ERROR)) {, +			}, +			RegionGen regionGen = new RegionGen(this);, +			regionGen.makeRegion(code, mth.getRegion());, +			code.startLine(nameGen.useArg(mth.getThisArg())).add(" = this;");, +	static MethodGen getFallbackMethodGen(MethodNode mth) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			MethodGen mthGen = new MethodGen(this, mth);, +			MethodGen mthGen;, +			if (badCode || mth.contains(AType.JADX_ERROR)) {, +				mthGen = MethodGen.getFallbackMethodGen(mth);, +			} else {, +				mthGen = new MethodGen(this, mth);, +			}, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +		if (mth.contains(AType.JADX_ERROR), +				|| mth.contains(AFlag.INCONSISTENT_CODE), +				|| mth.getRegion() == null) {, +			code.startLine("throw new UnsupportedOperationException(\"Method not decompiled: "), +					.add(mth.toString()), +					.add("\");");, +			if (mth.contains(AType.JADX_ERROR)) {, +			}, +			RegionGen regionGen = new RegionGen(this);, +			regionGen.makeRegion(code, mth.getRegion());, +			code.startLine(nameGen.useArg(mth.getThisArg())).add(" = this;");, +	static MethodGen getFallbackMethodGen(MethodNode mth) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/NameGen.java, +			if (name != null && !name.equals("this")) {]