[+++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			addImport(classInfo);, +	private void addImport(ClassInfo classInfo) {, +		if (parentGen != null) {, +			parentGen.addImport(classInfo);, +		} else {, +			imports.add(classInfo);, +		}, +	}, +, +		if (classNode != null) {, +		}, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			addImport(classInfo);, +	private void addImport(ClassInfo classInfo) {, +		if (parentGen != null) {, +			parentGen.addImport(classInfo);, +		} else {, +			imports.add(classInfo);, +		}, +	}, +, +		if (classNode != null) {, +		}, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				regArg.replaceTypedVar(f);, +				if (wrap) {, +					code.add('(');, +				}, +					code.add(')');, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			addImport(classInfo);, +	private void addImport(ClassInfo classInfo) {, +		if (parentGen != null) {, +			parentGen.addImport(classInfo);, +		} else {, +			imports.add(classInfo);, +		}, +	}, +, +		if (classNode != null) {, +		}, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				regArg.replaceTypedVar(f);, +				if (wrap) {, +					code.add('(');, +				}, +					code.add(')');, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			addImport(classInfo);, +	private void addImport(ClassInfo classInfo) {, +		if (parentGen != null) {, +			parentGen.addImport(classInfo);, +		} else {, +			imports.add(classInfo);, +		}, +	}, +, +		if (classNode != null) {, +		}, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				regArg.replaceTypedVar(f);, +				if (wrap) {, +					code.add('(');, +				}, +					code.add(')');, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/BlockRegState.java, +		regs[arg.getRegNum()] = arg;, +		arg.getTypedVar().getUseList().add(arg);, +		RegisterArg reg = regs[arg.getRegNum()];, +		TypedVar regType = reg.getTypedVar();, +			reg.forceSetTypedVar(regType);, +		arg.replaceTypedVar(reg);, +		reg.getTypedVar().getUseList().add(arg);, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			addImport(classInfo);, +	private void addImport(ClassInfo classInfo) {, +		if (parentGen != null) {, +			parentGen.addImport(classInfo);, +		} else {, +			imports.add(classInfo);, +		}, +	}, +, +		if (classNode != null) {, +		}, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				regArg.replaceTypedVar(f);, +				if (wrap) {, +					code.add('(');, +				}, +					code.add(')');, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/BlockRegState.java, +		regs[arg.getRegNum()] = arg;, +		arg.getTypedVar().getUseList().add(arg);, +		RegisterArg reg = regs[arg.getRegNum()];, +		TypedVar regType = reg.getTypedVar();]