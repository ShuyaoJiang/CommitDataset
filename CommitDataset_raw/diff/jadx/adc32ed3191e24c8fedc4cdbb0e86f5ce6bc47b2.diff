[+++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +			LOG.warn("Unknown array element type: {} in mth: {}", elType, mth);, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +			LOG.warn("Unknown array element type: {} in mth: {}", elType, mth);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/LoopRegionVisitor.java, +		RegisterArg iterVar = arrGetInsn.getResult();, +		if (iterVar == null) {, +			return null;, +		}, +		if (iterVar == null || !fixIterableType(iterableArg, iterVar)) {, +			LOG.debug(" LoopRegionVisitor: instruction not found: {}, mth: {}", parentInsn, mth);, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +			LOG.warn("Unknown array element type: {} in mth: {}", elType, mth);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/LoopRegionVisitor.java, +		RegisterArg iterVar = arrGetInsn.getResult();, +		if (iterVar == null) {, +			return null;, +		}, +		if (iterVar == null || !fixIterableType(iterableArg, iterVar)) {, +			LOG.debug(" LoopRegionVisitor: instruction not found: {}, mth: {}", parentInsn, mth);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ssa/SSATransform.java, +					if (j >= phiInsn.getArgsCount()) {, +						continue;, +					}, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +			LOG.warn("Unknown array element type: {} in mth: {}", elType, mth);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/LoopRegionVisitor.java, +		RegisterArg iterVar = arrGetInsn.getResult();, +		if (iterVar == null) {, +			return null;, +		}, +		if (iterVar == null || !fixIterableType(iterableArg, iterVar)) {, +			LOG.debug(" LoopRegionVisitor: instruction not found: {}, mth: {}", parentInsn, mth);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ssa/SSATransform.java, +					if (j >= phiInsn.getArgsCount()) {, +						continue;, +					}, +++ b/jadx-gui/src/main/java/jadx/gui/ui/CodeArea.java, +			// fast skip, +			if (token.length() == 1) {, +				char ch = token.getTextArray()[token.getTextOffset()];, +				if (ch == '.' || ch == ',' || ch == ';') {, +					return false;, +				}, +			}]