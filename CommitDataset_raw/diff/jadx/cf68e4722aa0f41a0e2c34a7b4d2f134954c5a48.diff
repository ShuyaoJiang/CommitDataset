[+++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +				InputFile inputFile = new InputFile(file);, +				inputFiles.add(inputFile);, +				while (inputFile.nextDexIndex != -1) {, +					inputFile = new InputFile(file, inputFile.nextDexIndex);, +					inputFiles.add(inputFile);, +				}, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +				InputFile inputFile = new InputFile(file);, +				inputFiles.add(inputFile);, +				while (inputFile.nextDexIndex != -1) {, +					inputFile = new InputFile(file, inputFile.nextDexIndex);, +					inputFiles.add(inputFile);, +				}, +++ b/jadx-core/src/main/java/jadx/core/clsp/ConvertToClsSet.java, +				InputFile inputFile = new InputFile(f);, +				inputFiles.add(inputFile);, +				while (inputFile.nextDexIndex != -1) {, +					inputFile = new InputFile(f, inputFile.nextDexIndex);, +					inputFiles.add(inputFile);, +				}, +				InputFile inputFile = new InputFile(file);, +				inputFiles.add(inputFile);, +				while (inputFile.nextDexIndex != -1) {, +					inputFile = new InputFile(file, inputFile.nextDexIndex);, +					inputFiles.add(inputFile);, +				}, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +				InputFile inputFile = new InputFile(file);, +				inputFiles.add(inputFile);, +				while (inputFile.nextDexIndex != -1) {, +					inputFile = new InputFile(file, inputFile.nextDexIndex);, +					inputFiles.add(inputFile);, +				}, +++ b/jadx-core/src/main/java/jadx/core/clsp/ConvertToClsSet.java, +				InputFile inputFile = new InputFile(f);, +				inputFiles.add(inputFile);, +				while (inputFile.nextDexIndex != -1) {, +					inputFile = new InputFile(f, inputFile.nextDexIndex);, +					inputFiles.add(inputFile);, +				}, +				InputFile inputFile = new InputFile(file);, +				inputFiles.add(inputFile);, +				while (inputFile.nextDexIndex != -1) {, +					inputFile = new InputFile(file, inputFile.nextDexIndex);, +					inputFiles.add(inputFile);, +				}, +++ b/jadx-core/src/main/java/jadx/core/utils/files/InputFile.java, +	public int nextDexIndex = -1;, +	private final int dexIndex;, +		this(file, 0);, +	}, +, +	public InputFile(File file, int dexIndex) throws IOException, DecodeException {, +		this.dexIndex = dexIndex;, +			Dex dex = loadFromZip(this,file);, +			Dex dex = loadFromZip(this,file);, +	private static Dex loadFromZip(InputFile ipf, File file) throws IOException {, +		String dexName = "classes.dex";, +		String futureDexName = "classes2.dex";, +		if (ipf.dexIndex != 0) {, +			dexName = "classes" + ipf.dexIndex + ".dex";, +			futureDexName = "classes" + (ipf.dexIndex + 1) + ".dex";, +		}, +		ZipEntry dex = zf.getEntry(dexName);, +		try {, +			ZipEntry futureDex = zf.getEntry(futureDexName);, +			if (futureDex != null) {, +				ipf.nextDexIndex = ipf.dexIndex == 0 ? 2 : ipf.dexIndex + 1;, +			}, +		} catch (Exception ex) {, +		}]