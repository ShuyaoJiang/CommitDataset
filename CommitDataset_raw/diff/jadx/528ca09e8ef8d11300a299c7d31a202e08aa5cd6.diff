[+++ b/.DS_Store, +++ b/.DS_Store, +++ b/jadx-core/.DS_Store, +++ b/.DS_Store, +++ b/jadx-core/.DS_Store, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +	private Map<ClassNode, JavaClass> classesMap = new HashMap<ClassNode, JavaClass>();, +	private Map<MethodNode, JavaMethod> methodsMap = new HashMap<MethodNode, JavaMethod>();, +	private Map<FieldNode, JavaField> fieldsMap = new HashMap<FieldNode, JavaField>();, +++ b/.DS_Store, +++ b/jadx-core/.DS_Store, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +	private Map<ClassNode, JavaClass> classesMap = new HashMap<ClassNode, JavaClass>();, +	private Map<MethodNode, JavaMethod> methodsMap = new HashMap<MethodNode, JavaMethod>();, +	private Map<FieldNode, JavaField> fieldsMap = new HashMap<FieldNode, JavaField>();, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +import jadx.core.utils.files.ZipSecurity;, +			if(!ZipSecurity.isValidZipEntry(entry)) {, +				return null;, +			}, +			, +				if(ZipSecurity.isValidZipEntry(entry)) {, +			}, +++ b/.DS_Store, +++ b/jadx-core/.DS_Store, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +	private Map<ClassNode, JavaClass> classesMap = new HashMap<ClassNode, JavaClass>();, +	private Map<MethodNode, JavaMethod> methodsMap = new HashMap<MethodNode, JavaMethod>();, +	private Map<FieldNode, JavaField> fieldsMap = new HashMap<FieldNode, JavaField>();, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +import jadx.core.utils.files.ZipSecurity;, +			if(!ZipSecurity.isValidZipEntry(entry)) {, +				return null;, +			}, +			, +				if(ZipSecurity.isValidZipEntry(entry)) {, +			}, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +import jadx.core.utils.files.ZipSecurity;, +						if (entry.getName().endsWith(CLST_EXTENSION) && ZipSecurity.isValidZipEntry(entry)) {, +++ b/.DS_Store, +++ b/jadx-core/.DS_Store, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +	private Map<ClassNode, JavaClass> classesMap = new HashMap<ClassNode, JavaClass>();, +	private Map<MethodNode, JavaMethod> methodsMap = new HashMap<MethodNode, JavaMethod>();, +	private Map<FieldNode, JavaField> fieldsMap = new HashMap<FieldNode, JavaField>();, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +import jadx.core.utils.files.ZipSecurity;, +			if(!ZipSecurity.isValidZipEntry(entry)) {, +				return null;, +			}, +			, +				if(ZipSecurity.isValidZipEntry(entry)) {, +			}, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +import jadx.core.utils.files.ZipSecurity;, +						if (entry.getName().endsWith(CLST_EXTENSION) && ZipSecurity.isValidZipEntry(entry)) {, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +	private final Map<String, Set<String>> ancestorCache = new WeakHashMap<String, Set<String>>();, +++ b/.DS_Store, +++ b/jadx-core/.DS_Store, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +	private Map<ClassNode, JavaClass> classesMap = new HashMap<ClassNode, JavaClass>();, +	private Map<MethodNode, JavaMethod> methodsMap = new HashMap<MethodNode, JavaMethod>();, +	private Map<FieldNode, JavaField> fieldsMap = new HashMap<FieldNode, JavaField>();, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +import jadx.core.utils.files.ZipSecurity;, +			if(!ZipSecurity.isValidZipEntry(entry)) {, +				return null;, +			}, +			, +				if(ZipSecurity.isValidZipEntry(entry)) {, +			}, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +import jadx.core.utils.files.ZipSecurity;, +						if (entry.getName().endsWith(CLST_EXTENSION) && ZipSecurity.isValidZipEntry(entry)) {, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +	private final Map<String, Set<String>> ancestorCache = new WeakHashMap<String, Set<String>>();, +++ b/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java, +		collectWhileDominates(dominator, start, result);, +	private static void collectWhileDominates(BlockNode dominator, BlockNode child, List<BlockNode> result) {, +				collectWhileDominates(dominator, node, result);, +++ b/.DS_Store, +++ b/jadx-core/.DS_Store, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +	private Map<ClassNode, JavaClass> classesMap = new HashMap<ClassNode, JavaClass>();, +	private Map<MethodNode, JavaMethod> methodsMap = new HashMap<MethodNode, JavaMethod>();, +	private Map<FieldNode, JavaField> fieldsMap = new HashMap<FieldNode, JavaField>();, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +import jadx.core.utils.files.ZipSecurity;, +			if(!ZipSecurity.isValidZipEntry(entry)) {, +				return null;, +			}, +			, +				if(ZipSecurity.isValidZipEntry(entry)) {, +			}, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +import jadx.core.utils.files.ZipSecurity;, +						if (entry.getName().endsWith(CLST_EXTENSION) && ZipSecurity.isValidZipEntry(entry)) {, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java]