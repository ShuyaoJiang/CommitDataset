[+++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +import jadx.api.ResourceFile.ZipRef;, +import jadx.core.codegen.CodeWriter;, +import jadx.core.utils.Utils;, +import jadx.core.utils.exceptions.JadxException;, +import jadx.core.utils.files.InputFile;, +import jadx.core.utils.files.ZipSecurity;, +import jadx.core.xmlgen.ResContainer;, +import jadx.core.xmlgen.ResTableParser;, +, +				try (InputStream inputStream = new BufferedInputStream(new FileInputStream(file))) {, +					return decoder.decode(file.length(), inputStream);, +			} else {, +				try (ZipFile zipFile = new ZipFile(zipRef.getZipFile())) {, +					ZipEntry entry = zipFile.getEntry(zipRef.getEntryName());, +					if (!ZipSecurity.isValidZipEntry(entry)) {, +						return null;, +					try (InputStream inputStream = new BufferedInputStream(zipFile.getInputStream(entry))) {, +						return decoder.decode(entry.getSize(), inputStream);, +					}, +				}, +			}, +, +			default:, +	}, +		try (ZipFile zip = new ZipFile(file)) {, +		} catch (Exception e) {, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +import jadx.api.ResourceFile.ZipRef;, +import jadx.core.codegen.CodeWriter;, +import jadx.core.utils.Utils;, +import jadx.core.utils.exceptions.JadxException;, +import jadx.core.utils.files.InputFile;, +import jadx.core.utils.files.ZipSecurity;, +import jadx.core.xmlgen.ResContainer;, +import jadx.core.xmlgen.ResTableParser;, +, +				try (InputStream inputStream = new BufferedInputStream(new FileInputStream(file))) {, +					return decoder.decode(file.length(), inputStream);, +			} else {, +				try (ZipFile zipFile = new ZipFile(zipRef.getZipFile())) {, +					ZipEntry entry = zipFile.getEntry(zipRef.getEntryName());, +					if (!ZipSecurity.isValidZipEntry(entry)) {, +						return null;, +					try (InputStream inputStream = new BufferedInputStream(zipFile.getInputStream(entry))) {, +						return decoder.decode(entry.getSize(), inputStream);, +					}, +				}, +			}, +, +			default:, +	}, +		try (ZipFile zip = new ZipFile(file)) {, +		} catch (Exception e) {, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +, +	private Consts() {, +	}, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +import jadx.api.ResourceFile.ZipRef;, +import jadx.core.codegen.CodeWriter;, +import jadx.core.utils.Utils;, +import jadx.core.utils.exceptions.JadxException;, +import jadx.core.utils.files.InputFile;, +import jadx.core.utils.files.ZipSecurity;, +import jadx.core.xmlgen.ResContainer;, +import jadx.core.xmlgen.ResTableParser;, +, +				try (InputStream inputStream = new BufferedInputStream(new FileInputStream(file))) {, +					return decoder.decode(file.length(), inputStream);, +			} else {, +				try (ZipFile zipFile = new ZipFile(zipRef.getZipFile())) {, +					ZipEntry entry = zipFile.getEntry(zipRef.getEntryName());, +					if (!ZipSecurity.isValidZipEntry(entry)) {, +						return null;, +					try (InputStream inputStream = new BufferedInputStream(zipFile.getInputStream(entry))) {, +						return decoder.decode(entry.getSize(), inputStream);, +					}, +				}, +			}, +, +			default:, +	}, +		try (ZipFile zip = new ZipFile(file)) {, +		} catch (Exception e) {, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +, +	private Consts() {, +	}, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.Comparator;, +import java.util.HashSet;, +import java.util.Iterator;, +import java.util.List;, +import java.util.Map;, +import java.util.Map.Entry;, +import java.util.Set;, +]