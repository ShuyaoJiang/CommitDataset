[+++ b/jadx-core/src/main/java/jadx/core/utils/StringUtils.java, +, +	public static String escapeXML(String str) {, +		int len = str.length();, +		StringBuilder sb = new StringBuilder(len);, +		for (int i = 0; i < len; i++) {, +			char c = str.charAt(i);, +			switch (c) {, +				case '&': sb.append("&amp;"); break;, +				case '<': sb.append("&lt;"); break;, +				case '>': sb.append("&gt;"); break;, +				case '"': sb.append("&quot;"); break;, +				case '\'': sb.append("&apos;"); break;, +				default:, +					sb.append(c);, +					break;, +			}, +		}, +		return sb.toString();, +	}, +++ b/jadx-core/src/main/java/jadx/core/utils/StringUtils.java, +, +	public static String escapeXML(String str) {, +		int len = str.length();, +		StringBuilder sb = new StringBuilder(len);, +		for (int i = 0; i < len; i++) {, +			char c = str.charAt(i);, +			switch (c) {, +				case '&': sb.append("&amp;"); break;, +				case '<': sb.append("&lt;"); break;, +				case '>': sb.append("&gt;"); break;, +				case '"': sb.append("&quot;"); break;, +				case '\'': sb.append("&apos;"); break;, +				default:, +					sb.append(c);, +					break;, +			}, +		}, +		return sb.toString();, +	}, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java, +import jadx.core.utils.StringUtils;, +				case RES_XML_CDATA_TYPE:, +					parseCData();, +					break;, +	private void parseCData() throws IOException {, +		if (is.readInt16() != 0x10) {, +			die("CDATA header is not 0x10");, +		}, +		if (is.readInt32() != 0x1C) {, +			die("CDATA header chunk is not 0x1C");, +		}, +		int lineNumber = is.readInt32();, +		is.skip(4);, +, +		int strIndex = is.readInt32();, +		String str = strings[strIndex];, +, +		writer.startLine().addIndent();, +		writer.attachSourceLine(lineNumber);, +		writer.add(StringUtils.escapeXML(str.trim())); // TODO: wrap into CDATA for easier reading, +, +		int size = is.readInt16();, +		is.skip(size - 2);, +	}, +]