[+++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + *, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + *, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + *, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InsnDecoder.java, +import com.android.dex.ClassData;, +import com.android.dex.FieldId;, +import jadx.core.dex.info.ClassInfo;, +import jadx.core.dex.nodes.ClassNode;, +import jadx.core.dex.nodes.FieldNode;, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + *, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InsnDecoder.java, +import com.android.dex.ClassData;, +import com.android.dex.FieldId;, +import jadx.core.dex.info.ClassInfo;, +import jadx.core.dex.nodes.ClassNode;, +import jadx.core.dex.nodes.FieldNode;, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + *, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InsnDecoder.java, +import com.android.dex.ClassData;, +import com.android.dex.FieldId;, +import jadx.core.dex.info.ClassInfo;, +import jadx.core.dex.nodes.ClassNode;, +import jadx.core.dex.nodes.FieldNode;, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/DexNode.java, +	@Deprecated, +	@Deprecated, +	@Nullable, +	FieldNode deepResolveField(@NotNull ClassNode cls, FieldInfo fieldInfo) {, +		FieldNode field = cls.searchFieldByName(fieldInfo.getName());, +		if (field != null) {, +			return field;, +		}, +		FieldNode found;, +		ArgType superClass = cls.getSuperClass();, +		if (superClass != null) {, +			ClassNode superNode = resolveClass(superClass);, +			if (superNode != null) {, +				found = deepResolveField(superNode, fieldInfo);, +				if (found != null) {, +					return found;, +				}, +			}, +		}, +		for (ArgType iFaceType : cls.getInterfaces()) {, +			ClassNode iFaceNode = resolveClass(iFaceType);, +			if (iFaceNode != null) {, +				found = deepResolveField(iFaceNode, fieldInfo);, +				if (found != null) {, +					return found;]