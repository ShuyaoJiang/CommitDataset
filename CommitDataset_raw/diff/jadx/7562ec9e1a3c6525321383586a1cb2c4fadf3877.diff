[+++ b/.gitignore, +++ b/.gitignore, +++ b/jadx-core/build.gradle, +, +    testCompile 'org.apache.commons:commons-lang3:3.7', +++ b/.gitignore, +++ b/jadx-core/build.gradle, +, +    testCompile 'org.apache.commons:commons-lang3:3.7', +++ b/jadx-core/src/test/java/jadx/tests/api/IntegrationTest.java, +	/**, +	 * Run auto check method if defined:, +	 * <pre>, +	 *     public static void check(), +	 * </pre>, +	 */, +	public static final String CHECK_METHOD_NAME = "check";, +, +				checkMth = origCls.getMethod(CHECK_METHOD_NAME);, +				rethrow("Original check failed", ie);, +++ b/.gitignore, +++ b/jadx-core/build.gradle, +, +    testCompile 'org.apache.commons:commons-lang3:3.7', +++ b/jadx-core/src/test/java/jadx/tests/api/IntegrationTest.java, +	/**, +	 * Run auto check method if defined:, +	 * <pre>, +	 *     public static void check(), +	 * </pre>, +	 */, +	public static final String CHECK_METHOD_NAME = "check";, +, +				checkMth = origCls.getMethod(CHECK_METHOD_NAME);, +				rethrow("Original check failed", ie);, +++ b/jadx-core/src/test/java/jadx/tests/external/.gitignore, +/ExternalTests.java, +++ b/.gitignore, +++ b/jadx-core/build.gradle, +, +    testCompile 'org.apache.commons:commons-lang3:3.7', +++ b/jadx-core/src/test/java/jadx/tests/api/IntegrationTest.java, +	/**, +	 * Run auto check method if defined:, +	 * <pre>, +	 *     public static void check(), +	 * </pre>, +	 */, +	public static final String CHECK_METHOD_NAME = "check";, +, +				checkMth = origCls.getMethod(CHECK_METHOD_NAME);, +				rethrow("Original check failed", ie);, +++ b/jadx-core/src/test/java/jadx/tests/external/.gitignore, +/ExternalTests.java, +++ b/jadx-core/src/test/java/jadx/tests/external/BaseExternalTest.java, +package jadx.tests.external;, +, +import java.io.File;, +import java.util.List;, +import java.util.regex.Pattern;, +, +import org.apache.commons.lang3.StringUtils;, +import org.jetbrains.annotations.NotNull;, +import org.jetbrains.annotations.Nullable;, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +, +import jadx.api.JadxArgs;, +import jadx.api.JadxDecompiler;, +import jadx.api.JadxInternalAccess;, +import jadx.api.JavaClass;, +import jadx.core.Jadx;, +import jadx.core.codegen.CodeGen;, +import jadx.core.codegen.CodeWriter;, +import jadx.core.dex.nodes.ClassNode;, +import jadx.core.dex.nodes.MethodNode;, +import jadx.core.dex.nodes.RootNode;, +import jadx.core.dex.visitors.DepthTraversal;, +import jadx.core.dex.visitors.IDexTreeVisitor;, +import jadx.core.utils.exceptions.JadxRuntimeException;, +import jadx.tests.api.IntegrationTest;, +, +import static org.hamcrest.Matchers.is;, +import static org.junit.Assert.assertThat;, +, +public abstract class BaseExternalTest extends IntegrationTest {, +	private static final Logger LOG = LoggerFactory.getLogger(BaseExternalTest.class);, +, +	protected abstract String getSamplesDir();, +, +	protected JadxArgs prepare(String inputFile) {, +		JadxArgs args = new JadxArgs();, +		args.getInputFiles().add(new File(getSamplesDir(), inputFile));, +		args.setOutDir(new File("../jadx-external-tests-tmp"));, +		return args;, +	}, +, +	protected void decompile(JadxArgs jadxArgs) {, +		decompile(jadxArgs, null, null);, +	}]