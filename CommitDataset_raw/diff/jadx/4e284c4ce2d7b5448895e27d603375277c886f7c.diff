[+++ b/src/main/java/jadx/codegen/ClassGen.java, +			clsCode.add("package ").add(cls.getPackage()).add(';');, +				clsCode.startLine("import ").add(imp).add(';');, +		clsCode.add('{');, +		clsCode.startLine('}');, +	private CodeWriter makeMethods(CodeWriter clsCode, List<MethodNode> mthList) {, +					code.add(';');, +					code.startLine('}');, +			code.add(' ');, +			code.add(';');, +			sb.append('<');, +			sb.append('>');, +++ b/src/main/java/jadx/codegen/ClassGen.java, +			clsCode.add("package ").add(cls.getPackage()).add(';');, +				clsCode.startLine("import ").add(imp).add(';');, +		clsCode.add('{');, +		clsCode.startLine('}');, +	private CodeWriter makeMethods(CodeWriter clsCode, List<MethodNode> mthList) {, +					code.add(';');, +					code.startLine('}');, +			code.add(' ');, +			code.add(';');, +			sb.append('<');, +			sb.append('>');, +++ b/src/main/java/jadx/codegen/CodeWriter.java, +	private static final String INDENT = "\t";, +++ b/src/main/java/jadx/codegen/ClassGen.java, +			clsCode.add("package ").add(cls.getPackage()).add(';');, +				clsCode.startLine("import ").add(imp).add(';');, +		clsCode.add('{');, +		clsCode.startLine('}');, +	private CodeWriter makeMethods(CodeWriter clsCode, List<MethodNode> mthList) {, +					code.add(';');, +					code.startLine('}');, +			code.add(' ');, +			code.add(';');, +			sb.append('<');, +			sb.append('>');, +++ b/src/main/java/jadx/codegen/CodeWriter.java, +	private static final String INDENT = "\t";, +++ b/src/main/java/jadx/codegen/InsnGen.java, +	public String declareVar(RegisterArg arg) {, +				code.add('(').add(arg(insn, 0)).add(" instanceof "), +						.add(useType((ArgType) ((IndexInsnNode) insn).getIndex())).add(')');, +					code.add("monitor-enter(").add(arg(insn.getArg(0))).add(')');, +					code.add("monitor-exit(").add(arg(insn.getArg(0))).add(')');, +				code.startLine('}');, +		code.add('{');, +		code.add('}');, +++ b/src/main/java/jadx/codegen/ClassGen.java, +			clsCode.add("package ").add(cls.getPackage()).add(';');, +				clsCode.startLine("import ").add(imp).add(';');, +		clsCode.add('{');, +		clsCode.startLine('}');, +	private CodeWriter makeMethods(CodeWriter clsCode, List<MethodNode> mthList) {, +					code.add(';');, +					code.startLine('}');, +			code.add(' ');, +			code.add(';');, +			sb.append('<');, +			sb.append('>');, +++ b/src/main/java/jadx/codegen/CodeWriter.java, +	private static final String INDENT = "\t";, +++ b/src/main/java/jadx/codegen/InsnGen.java, +	public String declareVar(RegisterArg arg) {, +				code.add('(').add(arg(insn, 0)).add(" instanceof "), +						.add(useType((ArgType) ((IndexInsnNode) insn).getIndex())).add(')');, +					code.add("monitor-enter(").add(arg(insn.getArg(0))).add(')');, +					code.add("monitor-exit(").add(arg(insn.getArg(0))).add(')');, +				code.startLine('}');, +		code.add('{');, +		code.add('}');, +++ b/src/main/java/jadx/codegen/MethodGen.java, +			argsCode.add(' ');, +		code.startLine('}');, +++ b/src/main/java/jadx/codegen/ClassGen.java, +			clsCode.add("package ").add(cls.getPackage()).add(';');, +				clsCode.startLine("import ").add(imp).add(';');, +		clsCode.add('{');, +		clsCode.startLine('}');, +	private CodeWriter makeMethods(CodeWriter clsCode, List<MethodNode> mthList) {, +					code.add(';');, +					code.startLine('}');, +			code.add(' ');, +			code.add(';');, +			sb.append('<');, +			sb.append('>');, +++ b/src/main/java/jadx/codegen/CodeWriter.java, +	private static final String INDENT = "\t";, +++ b/src/main/java/jadx/codegen/InsnGen.java, +	public String declareVar(RegisterArg arg) {, +				code.add('(').add(arg(insn, 0)).add(" instanceof "), +						.add(useType((ArgType) ((IndexInsnNode) insn).getIndex())).add(')');, +					code.add("monitor-enter(").add(arg(insn.getArg(0))).add(')');, +					code.add("monitor-exit(").add(arg(insn.getArg(0))).add(')');, +				code.startLine('}');, +		code.add('{');, +		code.add('}');, +++ b/src/main/java/jadx/codegen/MethodGen.java, +			argsCode.add(' ');]