[+++ b/jadx-core/src/main/java/jadx/core/Consts.java, +	public static final String ANONYMOUS_CLASS_PREFIX = "AnonymousClass";, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +	public static final String ANONYMOUS_CLASS_PREFIX = "AnonymousClass";, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +					|| innerCls.contains(AFlag.ANONYMOUS_CLASS)) {, +			if (!innerCls.contains(AFlag.ANONYMOUS_CLASS)) {, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +	public static final String ANONYMOUS_CLASS_PREFIX = "AnonymousClass";, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +					|| innerCls.contains(AFlag.ANONYMOUS_CLASS)) {, +			if (!innerCls.contains(AFlag.ANONYMOUS_CLASS)) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		if (cls != null && cls.contains(AFlag.ANONYMOUS_CLASS) && !fallback) {, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +	public static final String ANONYMOUS_CLASS_PREFIX = "AnonymousClass";, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +					|| innerCls.contains(AFlag.ANONYMOUS_CLASS)) {, +			if (!innerCls.contains(AFlag.ANONYMOUS_CLASS)) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		if (cls != null && cls.contains(AFlag.ANONYMOUS_CLASS) && !fallback) {, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/AFlag.java, +	ANONYMOUS_CLASS,, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +	public static final String ANONYMOUS_CLASS_PREFIX = "AnonymousClass";, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +					|| innerCls.contains(AFlag.ANONYMOUS_CLASS)) {, +			if (!innerCls.contains(AFlag.ANONYMOUS_CLASS)) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		if (cls != null && cls.contains(AFlag.ANONYMOUS_CLASS) && !fallback) {, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/AFlag.java, +	ANONYMOUS_CLASS,, +++ b/jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java, +	public ClassInfo getTopParentClass() {, +		if (parentClass != null) {, +			ClassInfo topCls = parentClass.getTopParentClass();, +			return topCls != null ? topCls : parentClass;, +		}, +		return null;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +	public static final String ANONYMOUS_CLASS_PREFIX = "AnonymousClass";, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +					|| innerCls.contains(AFlag.ANONYMOUS_CLASS)) {, +			if (!innerCls.contains(AFlag.ANONYMOUS_CLASS)) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		if (cls != null && cls.contains(AFlag.ANONYMOUS_CLASS) && !fallback) {, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/AFlag.java, +	ANONYMOUS_CLASS,, +++ b/jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java, +	public ClassInfo getTopParentClass() {, +		if (parentClass != null) {, +			ClassInfo topCls = parentClass.getTopParentClass();, +			return topCls != null ? topCls : parentClass;, +		}, +		return null;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +			ClassInfo parentClass = clsInfo.getTopParentClass();, +			if (parentClass != null && fileName.equals(parentClass.getShortName())) {, +				return;, +			}, +				&& clsInfo.getAlias().getShortName().startsWith(Consts.ANONYMOUS_CLASS_PREFIX), +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +	public static final String ANONYMOUS_CLASS_PREFIX = "AnonymousClass";, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +					|| innerCls.contains(AFlag.ANONYMOUS_CLASS)) {, +			if (!innerCls.contains(AFlag.ANONYMOUS_CLASS)) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		if (cls != null && cls.contains(AFlag.ANONYMOUS_CLASS) && !fallback) {, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/AFlag.java, +	ANONYMOUS_CLASS,, +++ b/jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java, +	public ClassInfo getTopParentClass() {, +		if (parentClass != null) {, +			ClassInfo topCls = parentClass.getTopParentClass();, +			return topCls != null ? topCls : parentClass;, +		}, +		return null;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +			ClassInfo parentClass = clsInfo.getTopParentClass();, +			if (parentClass != null && fileName.equals(parentClass.getShortName())) {, +				return;, +			}, +				&& clsInfo.getAlias().getShortName().startsWith(Consts.ANONYMOUS_CLASS_PREFIX), +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ClassModifier.java, +, +		markAnonymousClass(cls);, +	private void markAnonymousClass(ClassNode cls) {, +		if (cls.isAnonymous()) {, +			cls.add(AFlag.ANONYMOUS_CLASS);, +		}, +	}, +]