[+++ b/jadx-core/src/main/java/jadx/core/dex/instructions/CallMthInterface.java, +package jadx.core.dex.instructions;, +, +import jadx.core.dex.info.MethodInfo;, +, +public interface CallMthInterface {, +, +	public MethodInfo getCallMth();, +}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/CallMthInterface.java, +package jadx.core.dex.instructions;, +, +import jadx.core.dex.info.MethodInfo;, +, +public interface CallMthInterface {, +, +	public MethodInfo getCallMth();, +}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InvokeNode.java, +public class InvokeNode extends InsnNode implements CallMthInterface {, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/CallMthInterface.java, +package jadx.core.dex.instructions;, +, +import jadx.core.dex.info.MethodInfo;, +, +public interface CallMthInterface {, +, +	public MethodInfo getCallMth();, +}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InvokeNode.java, +public class InvokeNode extends InsnNode implements CallMthInterface {, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/mods/ConstructorInsn.java, +import jadx.core.dex.instructions.CallMthInterface;, +public class ConstructorInsn extends InsnNode implements CallMthInterface {, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/CallMthInterface.java, +package jadx.core.dex.instructions;, +, +import jadx.core.dex.info.MethodInfo;, +, +public interface CallMthInterface {, +, +	public MethodInfo getCallMth();, +}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InvokeNode.java, +public class InvokeNode extends InsnNode implements CallMthInterface {, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/mods/ConstructorInsn.java, +import jadx.core.dex.instructions.CallMthInterface;, +public class ConstructorInsn extends InsnNode implements CallMthInterface {, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java, +import jadx.core.dex.instructions.*;, +	/**, +	 * Simplify chains of calls to StringBuilder#append() plus constructor of StringBuilder., +	 * Those chains are usually automatically generated by the Java compiler when you create String, +	 * concatenations like <code>"text " + 1 + " text"</code>., +	 *, +	 * @param mth, +	 * @param insn, +	 * @return, +	 */, +							InsnNode node = chain.get(argInd);, +							MethodInfo method = ((CallMthInterface) node).getCallMth();, +							if (!(node.getArgsCount() < 2 && method.isConstructor() || method.getName().equals("append"))) {, +								// The chain contains other calls to StringBuilder methods than the constructor or append., +								// We can't simplify such chains, therefore we leave them as they are., +								return null;, +							}, +							// process only constructor and append() calls, +							concatInsn.addArg(node.getArg(1));, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/CallMthInterface.java, +package jadx.core.dex.instructions;, +, +import jadx.core.dex.info.MethodInfo;, +, +public interface CallMthInterface {, +, +	public MethodInfo getCallMth();, +}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InvokeNode.java, +public class InvokeNode extends InsnNode implements CallMthInterface {, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/mods/ConstructorInsn.java, +import jadx.core.dex.instructions.CallMthInterface;, +public class ConstructorInsn extends InsnNode implements CallMthInterface {, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java, +import jadx.core.dex.instructions.*;, +	/**, +	 * Simplify chains of calls to StringBuilder#append() plus constructor of StringBuilder., +	 * Those chains are usually automatically generated by the Java compiler when you create String, +	 * concatenations like <code>"text " + 1 + " text"</code>., +	 *, +	 * @param mth, +	 * @param insn, +	 * @return, +	 */, +							InsnNode node = chain.get(argInd);, +							MethodInfo method = ((CallMthInterface) node).getCallMth();, +							if (!(node.getArgsCount() < 2 && method.isConstructor() || method.getName().equals("append"))) {, +								// The chain contains other calls to StringBuilder methods than the constructor or append., +								// We can't simplify such chains, therefore we leave them as they are., +								return null;, +							}]