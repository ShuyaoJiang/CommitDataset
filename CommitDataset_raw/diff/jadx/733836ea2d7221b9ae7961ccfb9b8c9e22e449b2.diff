[+++ b/jadx-core/src/main/java/jadx/core/dex/nodes/parser/DebugInfoParser.java, +, +		RegisterArg activeReg = (RegisterArg) activeRegisters[var.getRegNum()];, +		if (activeReg != null) {, +			SSAVar ssaVar = activeReg.getSVar();, +			if ((ssaVar != null) && (ssaVar.getStartAddr() != -1)) {, +				if (ssaVar.getAssign() != null) {, +					if (ssaVar.getAssign().getParentInsn() != null) {, +						if (ssaVar.getAssign().getParentInsn().getOffset() >= 0) {, +							addr = ssaVar.getAssign().getParentInsn().getOffset();, +						}, +					}, +				}, +			}, +		}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/parser/DebugInfoParser.java, +, +		RegisterArg activeReg = (RegisterArg) activeRegisters[var.getRegNum()];, +		if (activeReg != null) {, +			SSAVar ssaVar = activeReg.getSVar();, +			if ((ssaVar != null) && (ssaVar.getStartAddr() != -1)) {, +				if (ssaVar.getAssign() != null) {, +					if (ssaVar.getAssign().getParentInsn() != null) {, +						if (ssaVar.getAssign().getParentInsn().getOffset() >= 0) {, +							addr = ssaVar.getAssign().getParentInsn().getOffset();, +						}, +					}, +				}, +			}, +		}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java, +import jadx.core.utils.InsnUtils;, +				ArgType castArgType = castArg.getType();, +, +				/*, +				 * Don't removes CHECK_CAST for wrapped INVOKE, +				 * if invoked method returns different type, +				 */, +				if (castArg.isInsnWrap()) {, +					InsnWrapArg castWrapArg = (InsnWrapArg) castArg;, +					InsnNode wrapInsn = castWrapArg.getWrapInsn();, +, +					if (wrapInsn.getType() == InsnType.INVOKE) {, +						InvokeNode invkInsn = (InvokeNode) wrapInsn;, +						castArgType = invkInsn.getCallMth().getReturnType();, +, +						if (invkInsn.getResult().getType(), +								!= invkInsn.getCallMth().getReturnType()) {, +							LOG.warn("Invoke without cast at {} in {}", InsnUtils.formatOffset(invkInsn.getOffset()), mth);, +						}, +					}, +				}, +, +				if (!ArgType.isCastNeeded(castArgType, castType)) {, +					insnNode.setOffset(insn.getOffset());]