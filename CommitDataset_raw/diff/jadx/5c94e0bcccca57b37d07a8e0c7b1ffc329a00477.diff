[+++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +				ErrorsCounter.methodError(mth, "Inconsistent code");, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +				ErrorsCounter.methodError(mth, "Inconsistent code");, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InsnDecoder.java, +import java.io.EOFException;, +, +import com.android.dx.io.instructions.ShortArrayCodeInput;, +	private DecodedInstruction[] insnArr;, +	public InsnDecoder(MethodNode mthNode) throws DecodeException {, +	public void decodeInsns(Code mthCode) throws DecodeException {, +		short[] encodedInstructions = mthCode.getInstructions();, +		int size = encodedInstructions.length;, +		DecodedInstruction[] decoded = new DecodedInstruction[size];, +		ShortArrayCodeInput in = new ShortArrayCodeInput(encodedInstructions);, +		try {, +			while (in.hasMore()) {, +				decoded[in.cursor()] = DecodedInstruction.decode(in);, +			}, +		} catch (EOFException e) {, +			throw new DecodeException(method, "", e);, +		}, +		insnArr = decoded;, +	}, +, +	public InsnNode[] process() throws DecodeException {, +		InsnNode[] instructions = new InsnNode[insnArr.length];, +		insnArr = null;, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +				ErrorsCounter.methodError(mth, "Inconsistent code");, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InsnDecoder.java, +import java.io.EOFException;, +, +import com.android.dx.io.instructions.ShortArrayCodeInput;, +	private DecodedInstruction[] insnArr;, +	public InsnDecoder(MethodNode mthNode) throws DecodeException {, +	public void decodeInsns(Code mthCode) throws DecodeException {, +		short[] encodedInstructions = mthCode.getInstructions();, +		int size = encodedInstructions.length;, +		DecodedInstruction[] decoded = new DecodedInstruction[size];, +		ShortArrayCodeInput in = new ShortArrayCodeInput(encodedInstructions);, +		try {, +			while (in.hasMore()) {, +				decoded[in.cursor()] = DecodedInstruction.decode(in);, +			}, +		} catch (EOFException e) {, +			throw new DecodeException(method, "", e);, +		}, +		insnArr = decoded;, +	}, +, +	public InsnNode[] process() throws DecodeException {, +		InsnNode[] instructions = new InsnNode[insnArr.length];, +		insnArr = null;, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java, +				if (arg != this && "this".equals(arg.getTypedVar().getName())) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +				ErrorsCounter.methodError(mth, "Inconsistent code");, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InsnDecoder.java, +import java.io.EOFException;, +, +import com.android.dx.io.instructions.ShortArrayCodeInput;, +	private DecodedInstruction[] insnArr;, +	public InsnDecoder(MethodNode mthNode) throws DecodeException {, +	public void decodeInsns(Code mthCode) throws DecodeException {, +		short[] encodedInstructions = mthCode.getInstructions();, +		int size = encodedInstructions.length;, +		DecodedInstruction[] decoded = new DecodedInstruction[size];, +		ShortArrayCodeInput in = new ShortArrayCodeInput(encodedInstructions);, +		try {, +			while (in.hasMore()) {, +				decoded[in.cursor()] = DecodedInstruction.decode(in);, +			}, +		} catch (EOFException e) {, +			throw new DecodeException(method, "", e);, +		}, +		insnArr = decoded;, +	}, +, +	public InsnNode[] process() throws DecodeException {, +		InsnNode[] instructions = new InsnNode[insnArr.length];, +		insnArr = null;, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java, +				if (arg != this && "this".equals(arg.getTypedVar().getName())) {, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +import jadx.core.dex.attributes.JadxErrorAttr;, +			try {, +			} catch (DecodeException e) {, +				LOG.error("Method load error", e);, +				mth.getAttributes().add(new JadxErrorAttr(e));, +			}, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +				ErrorsCounter.methodError(mth, "Inconsistent code");, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InsnDecoder.java, +import java.io.EOFException;, +, +import com.android.dx.io.instructions.ShortArrayCodeInput;, +	private DecodedInstruction[] insnArr;, +	public InsnDecoder(MethodNode mthNode) throws DecodeException {, +	public void decodeInsns(Code mthCode) throws DecodeException {]