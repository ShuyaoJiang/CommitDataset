[+++ b/build.gradle, +    id 'org.sonarqube' version '2.6.2', +    id 'com.github.ben-manes.versions' version '0.17.0', +        compile 'org.slf4j:slf4j-api:1.7.25', +        testCompile 'ch.qos.logback:logback-classic:1.2.3', +        testCompile 'org.mockito:mockito-core:2.15.0', +        testCompile 'org.spockframework:spock-core:1.1-groovy-2.4', +        testCompile 'cglib:cglib-nodep:3.2.6', +    jacoco {, +        toolVersion = "0.8.0", +    }, +dependencyUpdates.resolutionStrategy = {, +    componentSelection { rules ->, +        rules.all { ComponentSelection selection ->, +            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'atlassian'].any { qualifier ->, +                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/, +            }, +            if (rejected) {, +                selection.reject('Release candidate'), +            }, +        }, +    }, +}, +, +++ b/build.gradle, +    id 'org.sonarqube' version '2.6.2', +    id 'com.github.ben-manes.versions' version '0.17.0', +        compile 'org.slf4j:slf4j-api:1.7.25', +        testCompile 'ch.qos.logback:logback-classic:1.2.3', +        testCompile 'org.mockito:mockito-core:2.15.0', +        testCompile 'org.spockframework:spock-core:1.1-groovy-2.4', +        testCompile 'cglib:cglib-nodep:3.2.6', +    jacoco {, +        toolVersion = "0.8.0", +    }, +dependencyUpdates.resolutionStrategy = {, +    componentSelection { rules ->, +        rules.all { ComponentSelection selection ->, +            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'atlassian'].any { qualifier ->, +                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/, +            }, +            if (rejected) {, +                selection.reject('Release candidate'), +            }, +        }, +    }, +}, +, +++ b/gradle/wrapper/gradle-wrapper.jar, +++ b/build.gradle, +    id 'org.sonarqube' version '2.6.2', +    id 'com.github.ben-manes.versions' version '0.17.0', +        compile 'org.slf4j:slf4j-api:1.7.25', +        testCompile 'ch.qos.logback:logback-classic:1.2.3', +        testCompile 'org.mockito:mockito-core:2.15.0', +        testCompile 'org.spockframework:spock-core:1.1-groovy-2.4', +        testCompile 'cglib:cglib-nodep:3.2.6', +    jacoco {, +        toolVersion = "0.8.0", +    }, +dependencyUpdates.resolutionStrategy = {, +    componentSelection { rules ->, +        rules.all { ComponentSelection selection ->, +            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'atlassian'].any { qualifier ->, +                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/, +            }, +            if (rejected) {, +                selection.reject('Release candidate'), +            }, +        }, +    }, +}, +, +++ b/gradle/wrapper/gradle-wrapper.jar, +++ b/gradle/wrapper/gradle-wrapper.properties, +distributionUrl=https\://services.gradle.org/distributions/gradle-4.5.1-bin.zip, +++ b/build.gradle, +    id 'org.sonarqube' version '2.6.2', +    id 'com.github.ben-manes.versions' version '0.17.0', +        compile 'org.slf4j:slf4j-api:1.7.25', +        testCompile 'ch.qos.logback:logback-classic:1.2.3', +        testCompile 'org.mockito:mockito-core:2.15.0', +        testCompile 'org.spockframework:spock-core:1.1-groovy-2.4', +        testCompile 'cglib:cglib-nodep:3.2.6', +    jacoco {, +        toolVersion = "0.8.0", +    }, +dependencyUpdates.resolutionStrategy = {, +    componentSelection { rules ->, +        rules.all { ComponentSelection selection ->, +            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'atlassian'].any { qualifier ->, +                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/, +            }, +            if (rejected) {, +                selection.reject('Release candidate'), +            }, +        }, +    }, +}, +]