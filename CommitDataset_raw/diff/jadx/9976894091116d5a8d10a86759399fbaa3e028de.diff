[+++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +		Object result = null;, +			result = decoder.decode(entry.getSize(), inputStream);, +		return result;, +	public static CodeWriter loadToCodeWriter(InputStream is) throws IOException {, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +		Object result = null;, +			result = decoder.decode(entry.getSize(), inputStream);, +		return result;, +	public static CodeWriter loadToCodeWriter(InputStream is) throws IOException {, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java, +import jadx.api.ResourcesLoader;, +		is = new ParserStream(inputStream);, +		if (!isBinaryXml()) {, +			return ResourcesLoader.loadToCodeWriter(inputStream);, +		}, +	private boolean isBinaryXml() throws IOException {, +		is.mark(4);, +		int v = is.readInt16(); // version, +		int h = is.readInt16(); // header size, +		if (v == 0x0003 && h == 0x0008) {, +			return true;, +		}, +		is.reset();, +		return false;, +	}, +, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +		Object result = null;, +			result = decoder.decode(entry.getSize(), inputStream);, +		return result;, +	public static CodeWriter loadToCodeWriter(InputStream is) throws IOException {, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java, +import jadx.api.ResourcesLoader;, +		is = new ParserStream(inputStream);, +		if (!isBinaryXml()) {, +			return ResourcesLoader.loadToCodeWriter(inputStream);, +		}, +	private boolean isBinaryXml() throws IOException {, +		is.mark(4);, +		int v = is.readInt16(); // version, +		int h = is.readInt16(); // header size, +		if (v == 0x0003 && h == 0x0008) {, +			return true;, +		}, +		is.reset();, +		return false;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/ParserStream.java, +	public void mark(int len) throws IOException {, +		if (!input.markSupported()) {, +			throw new IOException("Mark not supported for input stream " + input.getClass());, +		}, +		input.mark(len);, +	}, +, +	public void reset() throws IOException {, +		input.reset();, +	}, +]