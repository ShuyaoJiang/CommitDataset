[+++ b/build.gradle, +    tasks.withType(JavaCompile) {, +        sourceCompatibility = JavaVersion.VERSION_1_6, +        targetCompatibility = JavaVersion.VERSION_1_6, +, +++ b/build.gradle, +    tasks.withType(JavaCompile) {, +        sourceCompatibility = JavaVersion.VERSION_1_6, +        targetCompatibility = JavaVersion.VERSION_1_6, +, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +import jadx.core.dex.visitors.DebugInfoVisitor;, +			passes.add(new DebugInfoVisitor());, +++ b/build.gradle, +    tasks.withType(JavaCompile) {, +        sourceCompatibility = JavaVersion.VERSION_1_6, +        targetCompatibility = JavaVersion.VERSION_1_6, +, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +import jadx.core.dex.visitors.DebugInfoVisitor;, +			passes.add(new DebugInfoVisitor());, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +			code.add(mgen.getNameGen().useArg((RegisterArg) arg));, +		code.add(mgen.getNameGen().assignArg(arg));, +++ b/build.gradle, +    tasks.withType(JavaCompile) {, +        sourceCompatibility = JavaVersion.VERSION_1_6, +        targetCompatibility = JavaVersion.VERSION_1_6, +, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +import jadx.core.dex.visitors.DebugInfoVisitor;, +			passes.add(new DebugInfoVisitor());, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +			code.add(mgen.getNameGen().useArg((RegisterArg) arg));, +		code.add(mgen.getNameGen().assignArg(arg));, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +	private final NameGen nameGen;, +		this.nameGen = new NameGen(classGen.isFallbackMode());, +	public NameGen getNameGen() {, +		return nameGen;, +	}, +, +		MethodParameters paramsAnnotation = mth.get(AType.ANNOTATION_MTH_PARAMETERS);, +			argsCode.add(nameGen.assignArg(arg));, +		InsnNode[] insnArr = mth.getInstructions();, +		if (insnArr == null) {, +			code.startLine(getFallbackMethodGen(mth).nameGen.useArg(mth.getThisArg())).add(" = this;");, +		addFallbackInsns(code, mth, insnArr, true);, +	public static void addFallbackInsns(CodeWriter code, MethodNode mth, InsnNode[] insnArr, boolean addLabels) {, +		for (InsnNode insn : insnArr) {, +			if (insn == null) {, +				continue;, +			}, +++ b/build.gradle, +    tasks.withType(JavaCompile) {, +        sourceCompatibility = JavaVersion.VERSION_1_6, +        targetCompatibility = JavaVersion.VERSION_1_6, +, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +import jadx.core.dex.visitors.DebugInfoVisitor;, +			passes.add(new DebugInfoVisitor());, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +			code.add(mgen.getNameGen().useArg((RegisterArg) arg));, +		code.add(mgen.getNameGen().assignArg(arg));, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +	private final NameGen nameGen;, +		this.nameGen = new NameGen(classGen.isFallbackMode());, +	public NameGen getNameGen() {, +		return nameGen;, +	}, +, +		MethodParameters paramsAnnotation = mth.get(AType.ANNOTATION_MTH_PARAMETERS);, +			argsCode.add(nameGen.assignArg(arg));, +		InsnNode[] insnArr = mth.getInstructions();, +		if (insnArr == null) {, +			code.startLine(getFallbackMethodGen(mth).nameGen.useArg(mth.getThisArg())).add(" = this;");, +		addFallbackInsns(code, mth, insnArr, true);, +	public static void addFallbackInsns(CodeWriter code, MethodNode mth, InsnNode[] insnArr, boolean addLabels) {, +		for (InsnNode insn : insnArr) {, +			if (insn == null) {, +				continue;, +			}, +++ b/jadx-core/src/main/java/jadx/core/codegen/NameGen.java, +package jadx.core.codegen;, +, +import jadx.core.Consts;, +import jadx.core.deobf.NameMapper;, +import jadx.core.dex.info.ClassInfo;, +import jadx.core.dex.instructions.args.ArgType;, +import jadx.core.dex.instructions.args.NamedArg;, +import jadx.core.dex.instructions.args.RegisterArg;, +import jadx.core.dex.instructions.args.SSAVar;, +import jadx.core.utils.Utils;, +, +import java.util.HashSet;, +import java.util.Set;, +, +public class NameGen {, +, +	private final Set<String> varNames = new HashSet<String>();]