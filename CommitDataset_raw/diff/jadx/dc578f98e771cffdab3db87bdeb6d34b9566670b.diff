[+++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + *, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + *, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + *, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +			ClassNode superClass = cls.getSuperClassNode();, +				collectClassHierarchy(superClass, collected);, +			for (ClassNode interfaceNode : cls.getInterfaceNodes()) {, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + *, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +			ClassNode superClass = cls.getSuperClassNode();, +				collectClassHierarchy(superClass, collected);, +			for (ClassNode interfaceNode : cls.getInterfaceNodes()) {, +++ b/jadx-core/src/main/java/jadx/core/dex/info/FieldInfo.java, +import com.android.dx.io.instructions.DecodedInstruction;, +import jadx.core.dex.nodes.ClassNode;, +import jadx.core.dex.nodes.FieldNode;, +import jadx.core.dex.nodes.MethodNode;, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + *, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +			ClassNode superClass = cls.getSuperClassNode();, +				collectClassHierarchy(superClass, collected);, +			for (ClassNode interfaceNode : cls.getInterfaceNodes()) {, +++ b/jadx-core/src/main/java/jadx/core/dex/info/FieldInfo.java, +import com.android.dx.io.instructions.DecodedInstruction;, +import jadx.core.dex.nodes.ClassNode;, +import jadx.core.dex.nodes.FieldNode;, +import jadx.core.dex.nodes.MethodNode;, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InsnDecoder.java, +import com.android.dex.ClassData;, +import com.android.dex.FieldId;, +import jadx.core.dex.info.ClassInfo;, +import jadx.core.dex.nodes.ClassNode;, +import jadx.core.dex.nodes.FieldNode;, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + *, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().root().deepResolveField(field);, +		if (fieldNode == null) {, +		} else {, +			code.add(fieldNode.getAlias());, +		}, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +			ClassNode superClass = cls.getSuperClassNode();, +				collectClassHierarchy(superClass, collected);, +			for (ClassNode interfaceNode : cls.getInterfaceNodes()) {, +++ b/jadx-core/src/main/java/jadx/core/dex/info/FieldInfo.java]