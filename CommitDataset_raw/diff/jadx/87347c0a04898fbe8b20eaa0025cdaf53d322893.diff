[+++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +			passes.add(new EnumVisitor());, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +			passes.add(new EnumVisitor());, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +import jadx.core.dex.instructions.mods.ConstructorInsn;, +			ConstructorInsn constrInsn = f.getConstrInsn();, +			if (constrInsn.getArgsCount() > f.getStartArg()) {, +				MethodNode callMth = cls.dex().resolveMethod(constrInsn.getCallMth());, +				igen.generateMethodArguments(code, constrInsn, f.getStartArg(), callMth);, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +			passes.add(new EnumVisitor());, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +import jadx.core.dex.instructions.mods.ConstructorInsn;, +			ConstructorInsn constrInsn = f.getConstrInsn();, +			if (constrInsn.getArgsCount() > f.getStartArg()) {, +				MethodNode callMth = cls.dex().resolveMethod(constrInsn.getCallMth());, +				igen.generateMethodArguments(code, constrInsn, f.getStartArg(), callMth);, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +	void generateMethodArguments(CodeWriter code, InsnNode insn, int startArgNum,, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +			passes.add(new EnumVisitor());, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +import jadx.core.dex.instructions.mods.ConstructorInsn;, +			ConstructorInsn constrInsn = f.getConstrInsn();, +			if (constrInsn.getArgsCount() > f.getStartArg()) {, +				MethodNode callMth = cls.dex().resolveMethod(constrInsn.getCallMth());, +				igen.generateMethodArguments(code, constrInsn, f.getStartArg(), callMth);, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +	void generateMethodArguments(CodeWriter code, InsnNode insn, int startArgNum,, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/nodes/EnumClassAttr.java, +import jadx.core.dex.instructions.mods.ConstructorInsn;, +		private final ConstructorInsn constrInsn;, +		private final int startArg;, +		public EnumField(String name, ConstructorInsn co, int startArg) {, +			this.constrInsn = co;, +			this.startArg = startArg;, +		public ConstructorInsn getConstrInsn() {, +			return constrInsn;, +		}, +, +		public int getStartArg() {, +			return startArg;, +			return name + "(" + constrInsn + ") " + cls;, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +			passes.add(new EnumVisitor());, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +import jadx.core.dex.instructions.mods.ConstructorInsn;, +			ConstructorInsn constrInsn = f.getConstrInsn();, +			if (constrInsn.getArgsCount() > f.getStartArg()) {, +				MethodNode callMth = cls.dex().resolveMethod(constrInsn.getCallMth());, +				igen.generateMethodArguments(code, constrInsn, f.getStartArg(), callMth);, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +	void generateMethodArguments(CodeWriter code, InsnNode insn, int startArgNum,, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/nodes/EnumClassAttr.java, +import jadx.core.dex.instructions.mods.ConstructorInsn;, +		private final ConstructorInsn constrInsn;, +		private final int startArg;, +		public EnumField(String name, ConstructorInsn co, int startArg) {, +			this.constrInsn = co;, +			this.startArg = startArg;, +		public ConstructorInsn getConstrInsn() {, +			return constrInsn;, +		}, +, +		public int getStartArg() {, +			return startArg;, +			return name + "(" + constrInsn + ") " + cls;, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java, +import jadx.core.utils.InsnUtils;, +		return InsnUtils.getConstValueByInsn(dex, parInsn);, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +			passes.add(new EnumVisitor());, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +import jadx.core.dex.instructions.mods.ConstructorInsn;, +			ConstructorInsn constrInsn = f.getConstrInsn();, +			if (constrInsn.getArgsCount() > f.getStartArg()) {, +				MethodNode callMth = cls.dex().resolveMethod(constrInsn.getCallMth());, +				igen.generateMethodArguments(code, constrInsn, f.getStartArg(), callMth);, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +	void generateMethodArguments(CodeWriter code, InsnNode insn, int startArgNum,, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/nodes/EnumClassAttr.java, +import jadx.core.dex.instructions.mods.ConstructorInsn;, +		private final ConstructorInsn constrInsn;, +		private final int startArg;, +		public EnumField(String name, ConstructorInsn co, int startArg) {, +			this.constrInsn = co;, +			this.startArg = startArg;, +		public ConstructorInsn getConstrInsn() {, +			return constrInsn;, +		}, +, +		public int getStartArg() {, +			return startArg;, +			return name + "(" + constrInsn + ") " + cls;, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java, +import jadx.core.utils.InsnUtils;, +		return InsnUtils.getConstValueByInsn(dex, parInsn);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/CodeShrinker.java, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java]