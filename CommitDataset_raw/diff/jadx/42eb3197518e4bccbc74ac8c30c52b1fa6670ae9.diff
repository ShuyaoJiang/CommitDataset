[+++ b/README.md, +[![Coverity Scan Build Status](https://scan.coverity.com/projects/2166/badge.svg)](https://scan.coverity.com/projects/2166), +++ b/README.md, +[![Coverity Scan Build Status](https://scan.coverity.com/projects/2166/badge.svg)](https://scan.coverity.com/projects/2166), +++ b/build.gradle, +            if (!"$it".contains(':jadx-samples:')) {, +++ b/README.md, +[![Coverity Scan Build Status](https://scan.coverity.com/projects/2166/badge.svg)](https://scan.coverity.com/projects/2166), +++ b/build.gradle, +            if (!"$it".contains(':jadx-samples:')) {, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +			JadxCLIArgs jadxArgs = new JadxCLIArgs();, +			if (processArgs(jadxArgs, args)) {, +			}, +		} catch (JadxException e) {, +	static void processAndSave(JadxCLIArgs jadxArgs) throws JadxException {, +			throw new JadxException("jadx error: " + e.getMessage(), e);, +		if (ErrorsCounter.getErrorCount() != 0) {, +			throw new JadxException("finished with errors");, +		LOG.info("done");, +, +	static boolean processArgs(JadxCLIArgs jadxArgs, String[] args) throws JadxException {, +		if (!jadxArgs.processArgs(args)) {, +			return false;, +		}, +			return false;, +		return true;, +++ b/README.md, +[![Coverity Scan Build Status](https://scan.coverity.com/projects/2166/badge.svg)](https://scan.coverity.com/projects/2166), +++ b/build.gradle, +            if (!"$it".contains(':jadx-samples:')) {, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +			JadxCLIArgs jadxArgs = new JadxCLIArgs();, +			if (processArgs(jadxArgs, args)) {, +			}, +		} catch (JadxException e) {, +	static void processAndSave(JadxCLIArgs jadxArgs) throws JadxException {, +			throw new JadxException("jadx error: " + e.getMessage(), e);, +		if (ErrorsCounter.getErrorCount() != 0) {, +			throw new JadxException("finished with errors");, +		LOG.info("done");, +, +	static boolean processArgs(JadxCLIArgs jadxArgs, String[] args) throws JadxException {, +		if (!jadxArgs.processArgs(args)) {, +			return false;, +		}, +			return false;, +		return true;, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +	public boolean processArgs(String[] args) {, +		return parse(args) && process();, +	private boolean parse(String[] args) {, +			return true;, +			return false;, +	private boolean process() {, +			return false;, +			return false;, +		return true;, +++ b/README.md, +[![Coverity Scan Build Status](https://scan.coverity.com/projects/2166/badge.svg)](https://scan.coverity.com/projects/2166), +++ b/build.gradle, +            if (!"$it".contains(':jadx-samples:')) {, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +			JadxCLIArgs jadxArgs = new JadxCLIArgs();, +			if (processArgs(jadxArgs, args)) {, +			}, +		} catch (JadxException e) {, +	static void processAndSave(JadxCLIArgs jadxArgs) throws JadxException {, +			throw new JadxException("jadx error: " + e.getMessage(), e);, +		if (ErrorsCounter.getErrorCount() != 0) {, +			throw new JadxException("finished with errors");, +		LOG.info("done");, +, +	static boolean processArgs(JadxCLIArgs jadxArgs, String[] args) throws JadxException {, +		if (!jadxArgs.processArgs(args)) {, +			return false;, +		}, +			return false;, +		return true;, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +	public boolean processArgs(String[] args) {, +		return parse(args) && process();, +	private boolean parse(String[] args) {, +			return true;, +			return false;, +	private boolean process() {, +			return false;, +			return false;, +		return true;, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +			ClassLoader classLoader = Utils.class.getClassLoader();, +			if (classLoader != null) {, +				Enumeration<URL> resources = classLoader.getResources("META-INF/MANIFEST.MF");, +			}, +		} catch (Exception e) {, +++ b/README.md, +[![Coverity Scan Build Status](https://scan.coverity.com/projects/2166/badge.svg)](https://scan.coverity.com/projects/2166), +++ b/build.gradle, +            if (!"$it".contains(':jadx-samples:')) {, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java]