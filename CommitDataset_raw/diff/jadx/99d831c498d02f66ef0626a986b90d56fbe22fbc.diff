[+++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +	protected int deobfuscationMaxLength = 64;, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +	protected int deobfuscationMaxLength = 64;, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +		insertRenameInfo(clsCode, cls);, +	private void insertRenameInfo(CodeWriter code, ClassNode cls) {, +		ClassInfo classInfo = cls.getClassInfo();, +		if (classInfo.isRenamed()) {, +			code.startLine("/* renamed from: ").add(classInfo.getFullName()).add(" */");, +		}, +	}, +, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +	protected int deobfuscationMaxLength = 64;, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +		insertRenameInfo(clsCode, cls);, +	private void insertRenameInfo(CodeWriter code, ClassNode cls) {, +		ClassInfo classInfo = cls.getClassInfo();, +		if (classInfo.isRenamed()) {, +			code.startLine("/* renamed from: ").add(classInfo.getFullName()).add(" */");, +		}, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +import jadx.core.dex.attributes.AType;, +import jadx.core.dex.attributes.nodes.SourceFileAttr;, +import org.jetbrains.annotations.NotNull;, +	@NotNull, +	private final int maxLength;, +	private final int minLength;, +	private final PackageNode rootPackage = new PackageNode("");, +	public Deobfuscator(IJadxArgs args, @NotNull List<DexNode> dexNodes, File deobfMapFile) {, +	private void process() {, +				if (!fullName.equals(clsInfo.getFullName())) {, +	}, +	private PackageNode getPackageNode(String fullPkgName, boolean create) {, +			if (result == null && create) {, +		} while (!fullPkgName.isEmpty() && result != null);, +		public final ClassNode cls;, +		public final PackageNode pkg;, +		public final String alias;, +		public DeobfClsInfo(ClassNode cls, PackageNode pkg, String alias) {, +			this.alias = alias;, +			return prefix + (this.alias != null ? this.alias : this.cls.getShortName());, +	private String getNameWithoutPackage(ClassInfo clsInfo) {, +		ClassInfo classInfo = cls.getClassInfo();, +		String pkgFullName = classInfo.getPackage();, +		String fullName = classInfo.getFullName();, +		if (preLoadClsMap.containsKey(fullName)) {, +			String alias = preLoadClsMap.get(fullName);, +			clsMap.put(classInfo, new DeobfClsInfo(cls, pkg, alias));, +		if (clsMap.containsKey(classInfo)) {, +		if (shouldRename(classInfo.getShortName())) {, +			String alias = makeClsAlias(cls);, +			clsMap.put(classInfo, new DeobfClsInfo(cls, pkg, alias));, +	private String makeClsAlias(ClassNode cls) {, +		SourceFileAttr sourceFileAttr = cls.get(AType.SOURCE_FILE);, +		if (sourceFileAttr != null) {, +			String name = sourceFileAttr.getFileName();, +			if (name.endsWith(".java")) {, +				name = name.substring(0, name.length() - ".java".length());, +			}, +			if (NameMapper.isValidIdentifier(name), +					&& !NameMapper.isReserved(name)) {, +				// TODO: check if no class with this name exists or already renamed, +				cls.remove(AType.SOURCE_FILE);, +				return name;, +			}, +		}, +		String clsName = cls.getClassInfo().getShortName();, +		return String.format("C%04d%s", clsIndex++, short4LongName(clsName));, +	}, +, +		}, +	private final Set<String> pkgSet = new TreeSet<String>();, +		// doPkg for all parent packages except root that not hasAliases, +	private void load() throws IOException {, +			l = l.trim();, +				String va[] = splitAndTrim(l);, +				String va[] = splitAndTrim(l);, +	private static String[] splitAndTrim(String str) {, +		String[] v = str.substring(2).split("=");, +		for (int i = 0; i < v.length; i++) {, +			v[i] = v[i].trim();, +		}, +		return v;, +	}, +, +	private void save() throws IOException {, +				list.add(String.format("c %s=%s",, +						deobfClsInfo.cls.getClassInfo().getFullName(), deobfClsInfo.alias));, +	private String getPackageName(String packageName) {, +	private String getClassName(ClassInfo clsInfo) {, +	private String getClassFullName(ClassNode cls) {, +	private String getClassFullName(ClassInfo clsInfo) {, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +	protected int deobfuscationMaxLength = 64;, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +		insertRenameInfo(clsCode, cls);]