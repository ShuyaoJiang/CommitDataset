[+++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlinerVisitor.java, +	 * This is method similar to PostTypeInference.process method,, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlinerVisitor.java, +	 * This is method similar to PostTypeInference.process method,, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/ReturnVisitor.java, +import jadx.core.utils.exceptions.JadxRuntimeException;, +						} else if (!isEmpty(subBlock)) {, +		/**, +		 * Check if container not contains instructions,, +		 * don't count one 'return' instruction (it will be removed later)., + 		 */, +		private static boolean isEmpty(IContainer container) {, +			if (container instanceof BlockNode) {, +				BlockNode block = (BlockNode) container;, +				return block.getInstructions().isEmpty() || block.contains(AFlag.RETURN);, +			} else if (container instanceof IRegion) {, +				IRegion region = (IRegion) container;, +				for (IContainer block : region.getSubBlocks()) {, +					if(!isEmpty(block)) {, +				}, +			} else {, +				throw new JadxRuntimeException("Unknown container type: " + container.getClass());, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlinerVisitor.java, +	 * This is method similar to PostTypeInference.process method,, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/ReturnVisitor.java, +import jadx.core.utils.exceptions.JadxRuntimeException;, +						} else if (!isEmpty(subBlock)) {, +		/**, +		 * Check if container not contains instructions,, +		 * don't count one 'return' instruction (it will be removed later)., + 		 */, +		private static boolean isEmpty(IContainer container) {, +			if (container instanceof BlockNode) {, +				BlockNode block = (BlockNode) container;, +				return block.getInstructions().isEmpty() || block.contains(AFlag.RETURN);, +			} else if (container instanceof IRegion) {, +				IRegion region = (IRegion) container;, +				for (IContainer block : region.getSubBlocks()) {, +					if(!isEmpty(block)) {, +				}, +			} else {, +				throw new JadxRuntimeException("Unknown container type: " + container.getClass());, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/FinishTypeInference.java, +					if (PostTypeInference.process(mth, insn)) {, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlinerVisitor.java, +	 * This is method similar to PostTypeInference.process method,, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/ReturnVisitor.java, +import jadx.core.utils.exceptions.JadxRuntimeException;, +						} else if (!isEmpty(subBlock)) {, +		/**, +		 * Check if container not contains instructions,, +		 * don't count one 'return' instruction (it will be removed later)., + 		 */, +		private static boolean isEmpty(IContainer container) {, +			if (container instanceof BlockNode) {, +				BlockNode block = (BlockNode) container;, +				return block.getInstructions().isEmpty() || block.contains(AFlag.RETURN);, +			} else if (container instanceof IRegion) {, +				IRegion region = (IRegion) container;, +				for (IContainer block : region.getSubBlocks()) {, +					if(!isEmpty(block)) {, +				}, +			} else {, +				throw new JadxRuntimeException("Unknown container type: " + container.getClass());, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/FinishTypeInference.java, +					if (PostTypeInference.process(mth, insn)) {, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/PostTypeInference.java, +	public static boolean process(MethodNode mth, InsnNode insn) {]