[+++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				if (arg.contains(AFlag.SKIP_ARG)) {, +				if (i != k) {, +					code.add(", ");, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				if (arg.contains(AFlag.SKIP_ARG)) {, +				if (i != k) {, +					code.add(", ");, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/AttrNode.java, +		AttributeStorage copyFrom = attrNode.storage;, +		if (!copyFrom.isEmpty()) {, +			initStorage().addAll(copyFrom);, +		}, +	private AttributeStorage initStorage() {, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				if (arg.contains(AFlag.SKIP_ARG)) {, +				if (i != k) {, +					code.add(", ");, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/AttrNode.java, +		AttributeStorage copyFrom = attrNode.storage;, +		if (!copyFrom.isEmpty()) {, +			initStorage().addAll(copyFrom);, +		}, +	private AttributeStorage initStorage() {, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/AttributeStorage.java, +	public boolean isEmpty() {, +		return flags.isEmpty() && attributes.isEmpty();, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				if (arg.contains(AFlag.SKIP_ARG)) {, +				if (i != k) {, +					code.add(", ");, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/AttrNode.java, +		AttributeStorage copyFrom = attrNode.storage;, +		if (!copyFrom.isEmpty()) {, +			initStorage().addAll(copyFrom);, +		}, +	private AttributeStorage initStorage() {, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/AttributeStorage.java, +	public boolean isEmpty() {, +		return flags.isEmpty() && attributes.isEmpty();, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/EmptyAttrStorage.java, +	public boolean isEmpty() {, +		return true;, +	}, +, +	@Override, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				if (arg.contains(AFlag.SKIP_ARG)) {, +				if (i != k) {, +					code.add(", ");, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/AttrNode.java, +		AttributeStorage copyFrom = attrNode.storage;, +		if (!copyFrom.isEmpty()) {, +			initStorage().addAll(copyFrom);, +		}, +	private AttributeStorage initStorage() {, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/AttributeStorage.java, +	public boolean isEmpty() {, +		return flags.isEmpty() && attributes.isEmpty();, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/EmptyAttrStorage.java, +	public boolean isEmpty() {, +		return true;, +	}, +, +	@Override, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java, +		dup.copyAttributesFrom(this);, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				if (arg.contains(AFlag.SKIP_ARG)) {, +				if (i != k) {, +					code.add(", ");, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/AttrNode.java, +		AttributeStorage copyFrom = attrNode.storage;, +		if (!copyFrom.isEmpty()) {, +			initStorage().addAll(copyFrom);, +		}, +	private AttributeStorage initStorage() {, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/AttributeStorage.java, +	public boolean isEmpty() {, +		return flags.isEmpty() && attributes.isEmpty();, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/EmptyAttrStorage.java, +	public boolean isEmpty() {, +		return true;, +	}, +, +	@Override, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java, +		dup.copyAttributesFrom(this);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/Typed.java, +import jadx.core.dex.attributes.AttrNode;, +public abstract class Typed extends AttrNode {, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java]