[+++ b/jadx-core/src/main/java/jadx/core/dex/regions/Compare.java, +	public IfNode getInsn() {, +		return insn;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/regions/Compare.java, +	public IfNode getInsn() {, +		return insn;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/regions/IfCondition.java, +import jadx.core.dex.instructions.InsnType;, +import jadx.core.dex.instructions.args.InsnWrapArg;, +import jadx.core.dex.nodes.InsnNode;, +			simplifyCmpOp(c);, +	private static void simplifyCmpOp(Compare c) {, +		if (!c.getA().isInsnWrap()) {, +			return;, +		}, +		if (!c.getB().isLiteral() || ((LiteralArg) c.getB()).getLiteral() != 0) {, +			return;, +		}, +		InsnNode wrapInsn = ((InsnWrapArg) c.getA()).getWrapInsn();, +		InsnType type = wrapInsn.getType();, +		if (type != InsnType.CMP_L && type != InsnType.CMP_G) {, +			return;, +		}, +		IfNode insn = c.getInsn();, +		insn.changeCondition(insn.getOp(), wrapInsn.getArg(0), wrapInsn.getArg(1));, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/regions/Compare.java, +	public IfNode getInsn() {, +		return insn;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/regions/IfCondition.java, +import jadx.core.dex.instructions.InsnType;, +import jadx.core.dex.instructions.args.InsnWrapArg;, +import jadx.core.dex.nodes.InsnNode;, +			simplifyCmpOp(c);, +	private static void simplifyCmpOp(Compare c) {, +		if (!c.getA().isInsnWrap()) {, +			return;, +		}, +		if (!c.getB().isLiteral() || ((LiteralArg) c.getB()).getLiteral() != 0) {, +			return;, +		}, +		InsnNode wrapInsn = ((InsnWrapArg) c.getA()).getWrapInsn();, +		InsnType type = wrapInsn.getType();, +		if (type != InsnType.CMP_L && type != InsnType.CMP_G) {, +			return;, +		}, +		IfNode insn = c.getInsn();, +		insn.changeCondition(insn.getOp(), wrapInsn.getArg(0), wrapInsn.getArg(1));, +	}, +, +++ b/jadx-core/src/test/java/jadx/tests/internal/conditions/TestCmpOp.java, +package jadx.tests.internal.conditions;, +, +import jadx.api.InternalJadxTest;, +import jadx.core.dex.nodes.ClassNode;, +, +import org.junit.Test;, +, +import static org.hamcrest.CoreMatchers.containsString;, +import static org.junit.Assert.assertThat;, +, +public class TestCmpOp extends InternalJadxTest {, +, +	public static class TestCls {, +		public boolean testGT(float a) {, +			return a > 3.0f;, +		}, +, +		public boolean testLT(float b) {, +			return b < 2.0f;, +		}, +, +		public boolean testEQ(float c) {, +			return c == 1.0f;, +		}, +, +		public boolean testNE(float d) {, +			return d != 0.0f;, +		}, +, +		public boolean testGE(float e) {, +			return e >= -1.0f;, +		}, +, +		public boolean testLE(float f) {, +			return f <= -2.0f;, +		}, +, +		public boolean testGT2(float g) {, +			return 4.0f > g;, +		}, +, +		public boolean testLT2(long h) {]