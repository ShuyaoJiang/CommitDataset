[+++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java, +			} else {, +				return currentIf;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java, +			} else {, +				return currentIf;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfRegionVisitor.java, +			return removeRedundantElseBlock(mth, (IfRegion) region);, +	private static boolean removeRedundantElseBlock(MethodNode mth, IfRegion ifRegion) {, +		if (ifRegion.getElseRegion() == null, +				|| ifRegion.contains(AFlag.ELSE_IF_CHAIN), +				|| ifRegion.getElseRegion().contains(AFlag.ELSE_IF_CHAIN)) {, +			return false;, +		}, +		if (!hasBranchTerminator(ifRegion.getThenRegion())) {, +			return false;, +		}, +		// code style check:, +		// will remove 'return;' from 'then' and 'else' with one instruction, +		// see #jadx.tests.integration.conditions.TestConditions9, +		if (mth.getReturnType() == ArgType.VOID, +				&& insnsCount(ifRegion.getThenRegion()) == 2, +				&& insnsCount(ifRegion.getElseRegion()) == 2) {, +			return false;, +		}, +	private static boolean hasBranchTerminator(IContainer region) {, +		return RegionUtils.hasExitBlock(region), +				|| RegionUtils.hasBreakInsn(region);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java, +			} else {, +				return currentIf;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfRegionVisitor.java, +			return removeRedundantElseBlock(mth, (IfRegion) region);, +	private static boolean removeRedundantElseBlock(MethodNode mth, IfRegion ifRegion) {, +		if (ifRegion.getElseRegion() == null, +				|| ifRegion.contains(AFlag.ELSE_IF_CHAIN), +				|| ifRegion.getElseRegion().contains(AFlag.ELSE_IF_CHAIN)) {, +			return false;, +		}, +		if (!hasBranchTerminator(ifRegion.getThenRegion())) {, +			return false;, +		}, +		// code style check:, +		// will remove 'return;' from 'then' and 'else' with one instruction, +		// see #jadx.tests.integration.conditions.TestConditions9, +		if (mth.getReturnType() == ArgType.VOID, +				&& insnsCount(ifRegion.getThenRegion()) == 2, +				&& insnsCount(ifRegion.getElseRegion()) == 2) {, +			return false;, +		}, +	private static boolean hasBranchTerminator(IContainer region) {, +		return RegionUtils.hasExitBlock(region), +				|| RegionUtils.hasBreakInsn(region);, +++ b/jadx-core/src/test/java/jadx/tests/integration/conditions/TestNestedIf2.java, +package jadx.tests.integration.conditions;, +, +import jadx.core.dex.nodes.ClassNode;, +import jadx.tests.api.IntegrationTest;, +, +import org.junit.Test;, +, +import static jadx.tests.api.utils.JadxMatchers.containsOne;, +import static org.hamcrest.CoreMatchers.containsString;, +import static org.hamcrest.CoreMatchers.not;, +import static org.junit.Assert.assertThat;, +, +public class TestNestedIf2 extends IntegrationTest {, +, +	public static class TestCls {, +		static int executedCount = 0;, +		static boolean finished = false;, +		static int repeatCount = 2;, +, +		static boolean test(float delta, Object object) {, +			if (executedCount != repeatCount && isRun(delta, object)) {, +				if (finished) {, +					return true;, +				}, +				if (repeatCount == -1) {, +					++executedCount;, +					action();, +					return false;, +				}, +				++executedCount;, +				if (executedCount >= repeatCount) {, +					return true;, +				}, +				action();, +			}, +			return false;, +		}, +, +		public static void action() {, +		}, +, +		public static boolean isRun(float delta, Object object) {, +			return delta == 0;, +		}, +	}, +]