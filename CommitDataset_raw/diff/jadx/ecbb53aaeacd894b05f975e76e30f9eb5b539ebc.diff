[+++ b/jadx-core/src/main/java/jadx/core/codegen/NameGen.java, +		if (arg.isThis()) {, +			return RegisterArg.THIS_ARG_NAME;, +		}, +		String varName = name != null ? name : guessName(arg);, +++ b/jadx-core/src/main/java/jadx/core/codegen/NameGen.java, +		if (arg.isThis()) {, +			return RegisterArg.THIS_ARG_NAME;, +		}, +		String varName = name != null ? name : guessName(arg);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnArg.java, +		return contains(AFlag.THIS);, +++ b/jadx-core/src/main/java/jadx/core/codegen/NameGen.java, +		if (arg.isThis()) {, +			return RegisterArg.THIS_ARG_NAME;, +		}, +		String varName = name != null ? name : guessName(arg);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnArg.java, +		return contains(AFlag.THIS);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java, +	public static final String THIS_ARG_NAME = "this";, +, +		if (isThis()) {, +			return THIS_ARG_NAME;, +		}, +		if (!isAttrStorageEmpty()) {, +			sb.append(' ').append(getAttributesString());, +		}, +++ b/jadx-core/src/main/java/jadx/core/codegen/NameGen.java, +		if (arg.isThis()) {, +			return RegisterArg.THIS_ARG_NAME;, +		}, +		String varName = name != null ? name : guessName(arg);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnArg.java, +		return contains(AFlag.THIS);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java, +	public static final String THIS_ARG_NAME = "this";, +, +		if (isThis()) {, +			return THIS_ARG_NAME;, +		}, +		if (!isAttrStorageEmpty()) {, +			sb.append(' ').append(getAttributesString());, +		}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/TypeImmutableArg.java, +++ b/jadx-core/src/main/java/jadx/core/codegen/NameGen.java, +		if (arg.isThis()) {, +			return RegisterArg.THIS_ARG_NAME;, +		}, +		String varName = name != null ? name : guessName(arg);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnArg.java, +		return contains(AFlag.THIS);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java, +	public static final String THIS_ARG_NAME = "this";, +, +		if (isThis()) {, +			return THIS_ARG_NAME;, +		}, +		if (!isAttrStorageEmpty()) {, +			sb.append(' ').append(getAttributesString());, +		}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/TypeImmutableArg.java, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/CodeShrinker.java, +			if (assignPos >= inlineBorder || !canMove(assignPos, inlineBorder)) {, +				// allow inline only one use arg, +						|| sVar.getVariableUseCount() != 1, +++ b/jadx-core/src/main/java/jadx/core/codegen/NameGen.java, +		if (arg.isThis()) {, +			return RegisterArg.THIS_ARG_NAME;, +		}, +		String varName = name != null ? name : guessName(arg);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnArg.java, +		return contains(AFlag.THIS);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java, +	public static final String THIS_ARG_NAME = "this";, +, +		if (isThis()) {, +			return THIS_ARG_NAME;, +		}, +		if (!isAttrStorageEmpty()) {, +			sb.append(' ').append(getAttributesString());, +		}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/TypeImmutableArg.java, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/CodeShrinker.java, +			if (assignPos >= inlineBorder || !canMove(assignPos, inlineBorder)) {, +				// allow inline only one use arg, +						|| sVar.getVariableUseCount() != 1, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ssa/SSATransform.java, +		markThisArgs(mth.getThisArg());, +	private static void markThisArgs(RegisterArg thisArg) {, +			markOneArgAsThis(thisArg);, +			thisArg.getSVar().getUseList().forEach(SSATransform::markOneArgAsThis);, +		}, +	}, +, +	private static void markOneArgAsThis(RegisterArg arg) {, +		if (arg == null) {, +			return;, +		}, +		arg.add(AFlag.THIS);]