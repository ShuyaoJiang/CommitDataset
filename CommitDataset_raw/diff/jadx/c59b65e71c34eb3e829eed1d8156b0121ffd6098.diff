[+++ b/.travis.yml, +script: gradle clean build, +++ b/.travis.yml, +script: gradle clean build, +++ b/README.md, +    ./gradlew dist, +     --cfg           - save methods control flow graph to dot file, +++ b/.travis.yml, +script: gradle clean build, +++ b/README.md, +    ./gradlew dist, +     --cfg           - save methods control flow graph to dot file, +++ b/build.gradle, +            if (!"${it}".contains(":jadx-samples:")) {, +    }, +    }, +task dist(dependsOn: pack) {, +task samples(dependsOn: 'jadx-samples:samples') {, +}, +, +task build(dependsOn: [dist, samples]) {, +}, +, +++ b/.travis.yml, +script: gradle clean build, +++ b/README.md, +    ./gradlew dist, +     --cfg           - save methods control flow graph to dot file, +++ b/build.gradle, +            if (!"${it}".contains(":jadx-samples:")) {, +    }, +    }, +task dist(dependsOn: pack) {, +task samples(dependsOn: 'jadx-samples:samples') {, +}, +, +task build(dependsOn: [dist, samples]) {, +}, +, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +	public static final String JADX_VERSION = Jadx.getVersion();, +++ b/.travis.yml, +script: gradle clean build, +++ b/README.md, +    ./gradlew dist, +     --cfg           - save methods control flow graph to dot file, +++ b/build.gradle, +            if (!"${it}".contains(":jadx-samples:")) {, +    }, +    }, +task dist(dependsOn: pack) {, +task samples(dependsOn: 'jadx-samples:samples') {, +}, +, +task build(dependsOn: [dist, samples]) {, +}, +, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +	public static final String JADX_VERSION = Jadx.getVersion();, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +import jadx.core.utils.Utils;, +import java.io.IOException;, +import java.net.URL;, +import java.util.Enumeration;, +import java.util.jar.Manifest;, +, +	public static String getVersion() {, +		try {, +			Enumeration<URL> resources = Utils.class.getClassLoader().getResources("META-INF/MANIFEST.MF");, +			while (resources.hasMoreElements()) {, +				Manifest manifest = new Manifest(resources.nextElement().openStream());, +				String ver = manifest.getMainAttributes().getValue("jadx-version");, +				if (ver != null), +					return ver;, +			}, +		} catch (IOException e) {, +			LOG.error("Can't get manifest file", e);, +		}, +		return "dev";, +	}, +++ b/.travis.yml, +script: gradle clean build, +++ b/README.md, +    ./gradlew dist, +     --cfg           - save methods control flow graph to dot file, +++ b/build.gradle, +            if (!"${it}".contains(":jadx-samples:")) {, +    }, +    }, +task dist(dependsOn: pack) {, +task samples(dependsOn: 'jadx-samples:samples') {, +}, +, +task build(dependsOn: [dist, samples]) {, +}, +, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +	public static final String JADX_VERSION = Jadx.getVersion();, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +import jadx.core.utils.Utils;]