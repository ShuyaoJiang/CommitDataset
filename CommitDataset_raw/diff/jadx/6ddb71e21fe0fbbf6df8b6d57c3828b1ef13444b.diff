[+++ b/.gitignore, +*-tmp/, +, +++ b/.gitignore, +*-tmp/, +, +++ b/build.gradle, +++ b/.gitignore, +*-tmp/, +, +++ b/build.gradle, +++ b/jadx-core/build.gradle, +ext.jadxClasspath = 'clsp-data/android-4.3.jar', +, +    compile 'ch.qos.logback:logback-classic:1.0.13', +, +    runtime files(jadxClasspath), +++ b/.gitignore, +*-tmp/, +, +++ b/build.gradle, +++ b/jadx-core/build.gradle, +ext.jadxClasspath = 'clsp-data/android-4.3.jar', +, +    compile 'ch.qos.logback:logback-classic:1.0.13', +, +    runtime files(jadxClasspath), +++ b/jadx-core/clsp-data/android-4.3.jar, +++ b/.gitignore, +*-tmp/, +, +++ b/build.gradle, +++ b/jadx-core/build.gradle, +ext.jadxClasspath = 'clsp-data/android-4.3.jar', +, +    compile 'ch.qos.logback:logback-classic:1.0.13', +, +    runtime files(jadxClasspath), +++ b/jadx-core/clsp-data/android-4.3.jar, +++ b/jadx-core/src/main/java/jadx/api/Decompiler.java, +		List<ClassNode> classNodeList = root.getClasses(false);, +		List<JavaClass> classes = new ArrayList<JavaClass>(classNodeList.size());, +		for (ClassNode classNode : classNodeList) {, +		for (ClassNode cls : root.getClasses(false)) {, +		root = new RootNode();, +		root.load(inputFiles);, +++ b/.gitignore, +*-tmp/, +, +++ b/build.gradle, +++ b/jadx-core/build.gradle, +ext.jadxClasspath = 'clsp-data/android-4.3.jar', +, +    compile 'ch.qos.logback:logback-classic:1.0.13', +, +    runtime files(jadxClasspath), +++ b/jadx-core/clsp-data/android-4.3.jar, +++ b/jadx-core/src/main/java/jadx/api/Decompiler.java, +		List<ClassNode> classNodeList = root.getClasses(false);, +		List<JavaClass> classes = new ArrayList<JavaClass>(classNodeList.size());, +		for (ClassNode classNode : classNodeList) {, +		for (ClassNode cls : root.getClasses(false)) {, +		root = new RootNode();, +		root.load(inputFiles);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +package jadx.core.clsp;, +, +import jadx.core.dex.info.ClassInfo;, +import jadx.core.dex.nodes.ClassNode;, +import jadx.core.dex.nodes.RootNode;, +import jadx.core.utils.Utils;, +import jadx.core.utils.exceptions.DecodeException;, +, +import java.io.BufferedOutputStream;, +import java.io.DataInputStream;, +import java.io.DataOutputStream;, +import java.io.File;, +import java.io.FileInputStream;, +import java.io.FileOutputStream;, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.OutputStream;, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +import java.util.zip.ZipEntry;, +import java.util.zip.ZipInputStream;, +import java.util.zip.ZipOutputStream;, +, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +, +/**, + * Classes list for import into classpath graph, + */, +public class ClsSet {, +	private static final Logger LOG = LoggerFactory.getLogger(ClsSet.class);, +, +	private static final String CLST_EXTENSION = ".jcst";]