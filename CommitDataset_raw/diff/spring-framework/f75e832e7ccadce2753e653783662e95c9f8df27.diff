[+++ b/org.springframework.web/src/main/java/org/springframework/http/server/ServletServerHttpRequest.java, +		return (request.getContentType() != null && request.getContentType().contains(FORM_CONTENT_TYPE) &&, +				METHOD_POST.equalsIgnoreCase(request.getMethod()));, +	 * Use {@link javax.servlet.ServletRequest#getParameterMap()} to reconstruct the, +	 * body of a form 'POST' providing a predictable outcome as opposed to reading, +++ b/org.springframework.web/src/main/java/org/springframework/http/server/ServletServerHttpRequest.java, +		return (request.getContentType() != null && request.getContentType().contains(FORM_CONTENT_TYPE) &&, +				METHOD_POST.equalsIgnoreCase(request.getMethod()));, +	 * Use {@link javax.servlet.ServletRequest#getParameterMap()} to reconstruct the, +	 * body of a form 'POST' providing a predictable outcome as opposed to reading, +++ b/org.springframework.web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java, +	 * or {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR SERVER_ERROR}., +	 * Can be overridden in subclasses., +	 * This default implementation throws a {@link HttpClientErrorException} if the response status code, +	 * is {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR}, a {@link HttpServerErrorException}, +	 * if it is {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR},, +	 * and a {@link RestClientException} in other cases., +		catch (IOException ex) {]