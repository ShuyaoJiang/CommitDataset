[+++ b/src/asciidoc/index.adoc, +Spring Framework allows `@Controller` and `@RestController` classes to have both, +, +	stompClient.connect({}, function(frame) {, +	}, +, +	stompClient.connect({}, function(frame) {, +	}, +Note that the stompClient above need does not specify a `login` and `passcode` headers., +Even if it did, they would be ignored, or rather overridden, on the server side. See the, +sections <<websocket-stomp-handle-broker-relay-configure>> and, +<<websocket-stomp-handle-user>> for more information on authentication., +The `@MessageMapping` annotation is supported on methods of `@Controller`, +as well as on `@RestController`-annotated classes., +sending loop, and is not suitable for clustering. Instead, applications can, +upgrade to using a full-featured message broker., +Check the STOMP documentation for your message broker of choice (e.g., +http://activemq.apache.org/stomp.html[ActiveMQ], or other), install and run the, +broker with STOMP support enabled. Then enable the STOMP broker relay in the, +Spring configuration instead of the simple broker., +Below is example configuration that enables a full-featured broker:, +The "STOMP broker relay" in the above configuration is a Spring, +http://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/messaging/MessageHandler.html[MessageHandler], +that handles messages by forwarding them to an external message broker., +To do so it establishes TCP connections to the broker, forwards all, +messages to it, and reversely forwards all messages received, +from the broker to clients through their WebSocket sessions. Essentially, +it acts as a "relay" forwarding messages in both directions., +[NOTE], +====, +Please add a dependency on `org.projectreactor:reactor-tcp` for TCP connection management., +====, +Furthermore, application components (e.g. HTTP request handling methods,, +business services, etc) can also send messages to the broker relay, as described, +in <<websocket-stomp-handle-send>>, in order to broadcast messages to, +subscribed WebSocket clients., +, +In effect, the broker relay enables robust and scalable message broadcasting., +, +[[websocket-stomp-handle-broker-relay-configure]], +===== Configuring Connections To The Full-Featured Broker, +, +A STOMP broker relay maintains a single "system" TCP connection to the broker., +This connection is used for messages originating from the server-side application, +only, not for receiving messages. You can configure the STOMP credentials, +for this connection, i.e. the STOMP frame `login` and `passcode` headers. This, +is exposed in both the XML namespace and the Java config as the, +`systemLogin`/`systemPasscode` properties with default values `guest`/`guest`., +, +The STOMP broker relay also creates a separate TCP connection for every connected, +WebSocket client. You can configure the STOMP credentials to use for all TCP, +connections created on behalf of clients. This is exposed in both the XML namespace, +and the Java config as the `clientLogin`/`clientPasscode` properties with default, +values `guest`/`guest`., +, +[NOTE], +====, +The STOMP broker relay always sets the `login` and `passcode` headers on every CONNECT, +frame it forwards to the broker on behalf of clients. Therefore WebSocket clients, +need not set those headers, they will be ignored. As the following section explains, +instead WebSocket clients should rely on HTTP authentication to protect the WebSocket, +endpoint and establish the client identity., +====, +, +The STOMP broker relay also sends and receives heartbeats to and from the message, +broker over the "system" TCP connection. You can configure the intervals for sending, +and receiving heartbeats (10 seconds each by default). If connectivity to the broker, +is lost, the broker relay will continue to try to reconnect, every 5 seconds,, +until it succeeds., +, +[NOTE], +====, +A Spring bean can implement `ApplicationListener<BrokerAvailabilityEvent>` in order, +to receive notifications when the "system" connection to the broker is lost and, +re-established. For example a Stock Quote service broadcasting stock quotes can, +stop trying to send messages when there is no active "system" connection., +====, +, +The STOMP broker relay can also be configured with a `virtualHost` property., +The value of this property will be set as the `host` header of every CONNECT frame, +and may be useful for example in a cloud environment where the actual host to which, +the TCP connection is established is different from the host providing the, +cloud-based STOMP service., +===== Authentication and Handling Messages to User Destinations]