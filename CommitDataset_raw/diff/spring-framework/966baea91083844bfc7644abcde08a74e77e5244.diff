[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.java, +import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;, +import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;, +		if (parent instanceof MockHttpServletRequestBuilder) {, +			MockHttpServletRequestBuilder copiedParent = MockMvcRequestBuilders.get("/");, +			copiedParent.merge(parent);, +			this.parentBuilder = copiedParent;, +		} else if (parent instanceof RequestBuilder) {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.java, +import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;, +import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;, +		if (parent instanceof MockHttpServletRequestBuilder) {, +			MockHttpServletRequestBuilder copiedParent = MockMvcRequestBuilders.get("/");, +			copiedParent.merge(parent);, +			this.parentBuilder = copiedParent;, +		} else if (parent instanceof RequestBuilder) {, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilderTests.java, +	@Test // SPR-14584, +	public void mergeDoesNotCorruptPathInfoOnParent() throws Exception {, +		String pathInfo = "/foo/bar";, +		MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new HelloController()), +				.defaultRequest(get("/")), +				.build();, +, +		assertThat(mockMvc.perform(get(pathInfo)).andReturn().getRequest().getPathInfo(), equalTo(pathInfo));, +, +		mockMvc.perform(requestBuilder);, +, +		assertThat(mockMvc.perform(get(pathInfo)).andReturn().getRequest().getPathInfo(), equalTo(pathInfo));, +	}, +]