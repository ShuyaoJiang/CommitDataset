[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/accept/PathExtensionContentTypeResolver.java, +import org.springframework.web.util.UriUtils;, +		String extension = UriUtils.extractFileExtension(path);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/accept/PathExtensionContentTypeResolver.java, +import org.springframework.web.util.UriUtils;, +		String extension = UriUtils.extractFileExtension(path);, +++ b/spring-web/src/main/java/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.java, +import org.springframework.web.util.UriUtils;, +		String extension = UriUtils.extractFileExtension(path);, +		return (StringUtils.hasText(extension) ? extension.toLowerCase(Locale.ENGLISH) : null);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/accept/PathExtensionContentTypeResolver.java, +import org.springframework.web.util.UriUtils;, +		String extension = UriUtils.extractFileExtension(path);, +++ b/spring-web/src/main/java/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.java, +import org.springframework.web.util.UriUtils;, +		String extension = UriUtils.extractFileExtension(path);, +		return (StringUtils.hasText(extension) ? extension.toLowerCase(Locale.ENGLISH) : null);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriUtils.java, + * Copyright 2002-2016 the original author or authors., + * @author Juergen Hoeller, +	/**, +	 * Extract the file extension from the given URI path., +	 * @param path the URI path (e.g. "/products/index.html"), +	 * @return the extracted file extension (e.g. "html"), +	 * @since 4.3.2, +	 */, +	public static String extractFileExtension(String path) {, +		int end = path.indexOf('?');, +		if (end == -1) {, +			end = path.indexOf('#');, +			if (end == -1) {, +				end = path.length();, +			}, +		}, +		int begin = path.lastIndexOf('/', end) + 1;, +		int paramIndex = path.indexOf(';', begin);, +		end = (paramIndex != -1 && paramIndex < end ? paramIndex : end);, +		int extIndex = path.lastIndexOf('.', end);, +		if (extIndex != -1 && extIndex > begin) {, +			return path.substring(extIndex + 1, end);, +		}, +		return null;, +	}, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/accept/PathExtensionContentTypeResolver.java, +import org.springframework.web.util.UriUtils;, +		String extension = UriUtils.extractFileExtension(path);, +++ b/spring-web/src/main/java/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.java, +import org.springframework.web.util.UriUtils;, +		String extension = UriUtils.extractFileExtension(path);, +		return (StringUtils.hasText(extension) ? extension.toLowerCase(Locale.ENGLISH) : null);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriUtils.java, + * Copyright 2002-2016 the original author or authors., + * @author Juergen Hoeller, +	/**, +	 * Extract the file extension from the given URI path., +	 * @param path the URI path (e.g. "/products/index.html"), +	 * @return the extracted file extension (e.g. "html"), +	 * @since 4.3.2, +	 */, +	public static String extractFileExtension(String path) {, +		int end = path.indexOf('?');, +		if (end == -1) {, +			end = path.indexOf('#');, +			if (end == -1) {, +				end = path.length();, +			}, +		}, +		int begin = path.lastIndexOf('/', end) + 1;, +		int paramIndex = path.indexOf(';', begin);, +		end = (paramIndex != -1 && paramIndex < end ? paramIndex : end);, +		int extIndex = path.lastIndexOf('.', end);, +		if (extIndex != -1 && extIndex > begin) {, +			return path.substring(extIndex + 1, end);, +		}, +		return null;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/util/WebUtils.java, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/accept/PathExtensionContentTypeResolver.java, +import org.springframework.web.util.UriUtils;, +		String extension = UriUtils.extractFileExtension(path);, +++ b/spring-web/src/main/java/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.java, +import org.springframework.web.util.UriUtils;, +		String extension = UriUtils.extractFileExtension(path);, +		return (StringUtils.hasText(extension) ? extension.toLowerCase(Locale.ENGLISH) : null);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriUtils.java, + * Copyright 2002-2016 the original author or authors., + * @author Juergen Hoeller, +	/**, +	 * Extract the file extension from the given URI path., +	 * @param path the URI path (e.g. "/products/index.html"), +	 * @return the extracted file extension (e.g. "html"), +	 * @since 4.3.2, +	 */, +	public static String extractFileExtension(String path) {, +		int end = path.indexOf('?');, +		if (end == -1) {, +			end = path.indexOf('#');, +			if (end == -1) {]