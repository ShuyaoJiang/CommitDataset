[+++ b/spring-core/src/main/java/org/springframework/core/convert/support/AbstractConditionalEnumConverter.java, + * Copyright 2002-2017 the original author or authors., +		for (Class<?> interfaceType : ClassUtils.getAllInterfacesForClassAsSet(sourceType.getType())) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/AbstractConditionalEnumConverter.java, + * Copyright 2002-2017 the original author or authors., +		for (Class<?> interfaceType : ClassUtils.getAllInterfacesForClassAsSet(sourceType.getType())) {, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/Projection.java, +		for (Class<?> nextInterface : ClassUtils.getAllInterfacesForClassAsSet(newType)) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/AbstractConditionalEnumConverter.java, + * Copyright 2002-2017 the original author or authors., +		for (Class<?> interfaceType : ClassUtils.getAllInterfacesForClassAsSet(sourceType.getType())) {, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/Projection.java, +		for (Class<?> nextInterface : ClassUtils.getAllInterfacesForClassAsSet(newType)) {, +++ b/src/docs/asciidoc/data-access.adoc, +=== Further resources, +====== Updating (INSERT/UPDATE/DELETE) with JdbcTemplate, +====== Other JdbcTemplate operations, +, +, +as any other bean in your application context. Additionally, XML namespace-based, +==== Consistent interfaces, +==== Consistent exception hierarchy, +=== XML configuration namespace, +===== XML configuration namespace, +===== XML configuration namespace, +===== XML configuration namespace, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/AbstractConditionalEnumConverter.java, + * Copyright 2002-2017 the original author or authors., +		for (Class<?> interfaceType : ClassUtils.getAllInterfacesForClassAsSet(sourceType.getType())) {, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/Projection.java, +		for (Class<?> nextInterface : ClassUtils.getAllInterfacesForClassAsSet(newType)) {, +++ b/src/docs/asciidoc/data-access.adoc, +=== Further resources, +====== Updating (INSERT/UPDATE/DELETE) with JdbcTemplate, +====== Other JdbcTemplate operations, +, +, +as any other bean in your application context. Additionally, XML namespace-based, +==== Consistent interfaces, +==== Consistent exception hierarchy, +=== XML configuration namespace, +===== XML configuration namespace, +===== XML configuration namespace, +===== XML configuration namespace, +++ b/src/docs/asciidoc/integration.adoc, +==== HTTP message conversion, +, +==== Synchronous reception, +==== Asynchronous reception: Message-Driven POJOs, +==== SessionAwareMessageListener interface, +==== MessageListenerAdapter, +==== MBeanInfoAssembler interface, +==== Using source-level metadata: Java annotations, +==== Source-level metadata types, +.Source-level metadata types, +.Source-level metadata parameters, +==== AutodetectCapableMBeanInfoAssembler interface, +==== Server-side connectors, +==== Client-side connectors, +=== Accessing MBeans via proxies, +==== Registering listeners for notifications, +=== Further resources, +==== Trigger interface, +into an existing Spring application. Similar to the <<data-access.adoc#transaction,transaction>>]