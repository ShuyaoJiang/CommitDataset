[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilter.java, + * Copyright 2002-2016 the original author or authors., + * @author Brian Clozel, +		/* Cache the index and prefix of the path within the DispatcherServlet mapping */, +		private String prefixLookupPath;, +, +			initLookupPath(resourceUrlProvider);, +			if (url.startsWith(this.prefixLookupPath)) {, +					return super.encodeURL(this.prefixLookupPath + lookupPath + suffix);, +		private void initLookupPath(ResourceUrlProvider urlProvider) {, +				this.prefixLookupPath = requestUri.substring(0, this.indexLookupPath);, +						this.prefixLookupPath = requestUri;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilter.java, + * Copyright 2002-2016 the original author or authors., + * @author Brian Clozel, +		/* Cache the index and prefix of the path within the DispatcherServlet mapping */, +		private String prefixLookupPath;, +, +			initLookupPath(resourceUrlProvider);, +			if (url.startsWith(this.prefixLookupPath)) {, +					return super.encodeURL(this.prefixLookupPath + lookupPath + suffix);, +		private void initLookupPath(ResourceUrlProvider urlProvider) {, +				this.prefixLookupPath = requestUri.substring(0, this.indexLookupPath);, +						this.prefixLookupPath = requestUri;, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilterTests.java, + * Copyright 2002-2016 the original author or authors., +	// SPR-13847, +	@Test, +	public void encodeUrlPreventStringOutOfBounds() throws Exception {, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/context-path/index");, +		request.setContextPath("/context-path");, +		request.setServletPath("");, +		request.setAttribute(ResourceUrlProviderExposingInterceptor.RESOURCE_URL_PROVIDER_ATTR, this.resourceUrlProvider);, +		MockHttpServletResponse response = new MockHttpServletResponse();, +, +		this.filter.doFilterInternal(request, response, new FilterChain() {, +			@Override, +			public void doFilter(ServletRequest request, ServletResponse response) throws IOException, ServletException {, +				String result = ((HttpServletResponse)response).encodeURL("index?key=value");, +				assertEquals("index?key=value", result);, +			}, +		});, +	}, +, +]