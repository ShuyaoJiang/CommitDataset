[+++ b/org.springframework.context/src/main/java/org/springframework/context/support/GenericXmlApplicationContext.java, +import org.springframework.core.io.ClassPathResource;, + * @author Chris Beams, +	/**, +	 * Create a new GenericXmlApplicationContext, loading bean definitions, +	 * from the given resource locations and automatically refreshing the context., +	 * @param relativeClass class whose package will be used as a prefix when, +	 * loading each specified resource name, +	 * @param resourceNames relatively-qualified names of resources to load, +	 */, +	public GenericXmlApplicationContext(Class<?> relativeClass, String... resourceNames) {, +		load(relativeClass, resourceNames);, +		refresh();, +	}, +	/**, +	 * Load bean definitions from the given XML resources., +	 * @param relativeClass class whose package will be used as a prefix when, +	 * loading each specified resource name, +	 * @param resourceNames relatively-qualified names of resources to load, +	 */, +	public void load(Class<?> relativeClass, String... resourceNames) {, +		Resource[] resources = new Resource[resourceNames.length];, +		for (int i = 0; i < resourceNames.length; i++) {, +			resources[i] = new ClassPathResource(resourceNames[i], relativeClass);, +		}, +		this.load(resources);, +	}, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/support/GenericXmlApplicationContext.java, +import org.springframework.core.io.ClassPathResource;, + * @author Chris Beams, +	/**, +	 * Create a new GenericXmlApplicationContext, loading bean definitions, +	 * from the given resource locations and automatically refreshing the context., +	 * @param relativeClass class whose package will be used as a prefix when, +	 * loading each specified resource name, +	 * @param resourceNames relatively-qualified names of resources to load, +	 */, +	public GenericXmlApplicationContext(Class<?> relativeClass, String... resourceNames) {, +		load(relativeClass, resourceNames);, +		refresh();, +	}, +	/**, +	 * Load bean definitions from the given XML resources., +	 * @param relativeClass class whose package will be used as a prefix when, +	 * loading each specified resource name, +	 * @param resourceNames relatively-qualified names of resources to load, +	 */, +	public void load(Class<?> relativeClass, String... resourceNames) {, +		Resource[] resources = new Resource[resourceNames.length];, +		for (int i = 0; i < resourceNames.length; i++) {, +			resources[i] = new ClassPathResource(resourceNames[i], relativeClass);, +		}, +		this.load(resources);, +	}, +, +++ b/org.springframework.context/src/test/java/org/springframework/context/support/GenericXmlApplicationContextTests-context.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<beans xmlns="http://www.springframework.org/schema/beans", +		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">, +, +	<bean id="testBean" class="java.lang.Object"/>, +, +</beans>, +++ b/org.springframework.context/src/main/java/org/springframework/context/support/GenericXmlApplicationContext.java, +import org.springframework.core.io.ClassPathResource;, + * @author Chris Beams, +	/**, +	 * Create a new GenericXmlApplicationContext, loading bean definitions, +	 * from the given resource locations and automatically refreshing the context., +	 * @param relativeClass class whose package will be used as a prefix when, +	 * loading each specified resource name, +	 * @param resourceNames relatively-qualified names of resources to load, +	 */, +	public GenericXmlApplicationContext(Class<?> relativeClass, String... resourceNames) {, +		load(relativeClass, resourceNames);, +		refresh();, +	}, +	/**, +	 * Load bean definitions from the given XML resources., +	 * @param relativeClass class whose package will be used as a prefix when, +	 * loading each specified resource name, +	 * @param resourceNames relatively-qualified names of resources to load, +	 */, +	public void load(Class<?> relativeClass, String... resourceNames) {, +		Resource[] resources = new Resource[resourceNames.length];, +		for (int i = 0; i < resourceNames.length; i++) {, +			resources[i] = new ClassPathResource(resourceNames[i], relativeClass);, +		}, +		this.load(resources);, +	}, +, +++ b/org.springframework.context/src/test/java/org/springframework/context/support/GenericXmlApplicationContextTests-context.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<beans xmlns="http://www.springframework.org/schema/beans", +		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">, +, +	<bean id="testBean" class="java.lang.Object"/>]