[+++ b/spring-context/src/main/java/org/springframework/messaging/MessageChannel.java, +public interface MessageChannel {, +	boolean send(Message<?> message);, +	boolean send(Message<?> message, long timeout);, +++ b/spring-context/src/main/java/org/springframework/messaging/MessageChannel.java, +public interface MessageChannel {, +	boolean send(Message<?> message);, +	boolean send(Message<?> message, long timeout);, +++ /dev/null, +++ b/spring-context/src/main/java/org/springframework/messaging/MessageChannel.java, +public interface MessageChannel {, +	boolean send(Message<?> message);, +	boolean send(Message<?> message, long timeout);, +++ /dev/null, +++ b/spring-context/src/main/java/org/springframework/messaging/MessageHandler.java, +public interface MessageHandler {, +	 * TODO: exceptions, +	void handleMessage(Message<?> message) throws MessagingException;, +++ b/spring-context/src/main/java/org/springframework/messaging/MessageChannel.java, +public interface MessageChannel {, +	boolean send(Message<?> message);, +	boolean send(Message<?> message, long timeout);, +++ /dev/null, +++ b/spring-context/src/main/java/org/springframework/messaging/MessageHandler.java, +public interface MessageHandler {, +	 * TODO: exceptions, +	void handleMessage(Message<?> message) throws MessagingException;, +++ b/spring-context/src/main/java/org/springframework/messaging/MessageHeaders.java, +	private static final long serialVersionUID = -4615750558355702881L;, +	public static final String CORRELATION_ID = "correlationId";, +, +	public static final String REPLY_CHANNEL = "replyChannel";, +, +	public static final String ERROR_CHANNEL = "errorChannel";, +, +	public static final String EXPIRATION_DATE = "expirationDate";, +, +	public static final String PRIORITY = "priority";, +, +	public static final String SEQUENCE_NUMBER = "sequenceNumber";, +, +	public static final String SEQUENCE_SIZE = "sequenceSize";, +, +	public static final String SEQUENCE_DETAILS = "sequenceDetails";, +, +	public static final String CONTENT_TYPE = "contentType";, +, +	public static final String POSTPROCESS_RESULT = "postProcessResult";, +, +, +	public Long getExpirationDate() {, +		return this.get(EXPIRATION_DATE, Long.class);, +	}, +, +	public Object getCorrelationId() {, +		return this.get(CORRELATION_ID);, +	}, +, +	public Integer getSequenceNumber() {, +		Integer sequenceNumber = this.get(SEQUENCE_NUMBER, Integer.class);, +		return (sequenceNumber != null ? sequenceNumber : 0);, +	}, +, +	public Integer getSequenceSize() {, +		Integer sequenceSize = this.get(SEQUENCE_SIZE, Integer.class);, +		return (sequenceSize != null ? sequenceSize : 0);, +	}, +, +	public Integer getPriority() {, +		return this.get(PRIORITY, Integer.class);, +	}, +, +	public Object getReplyChannel() {, +        return this.get(REPLY_CHANNEL);, +    }, +, +    public Object getErrorChannel() {, +        return this.get(ERROR_CHANNEL);, +    }, +, +++ b/spring-context/src/main/java/org/springframework/messaging/MessageChannel.java, +public interface MessageChannel {, +	boolean send(Message<?> message);, +	boolean send(Message<?> message, long timeout);, +++ /dev/null, +++ b/spring-context/src/main/java/org/springframework/messaging/MessageHandler.java, +public interface MessageHandler {, +	 * TODO: exceptions, +	void handleMessage(Message<?> message) throws MessagingException;, +++ b/spring-context/src/main/java/org/springframework/messaging/MessageHeaders.java, +	private static final long serialVersionUID = -4615750558355702881L;, +	public static final String CORRELATION_ID = "correlationId";, +, +	public static final String REPLY_CHANNEL = "replyChannel";, +, +	public static final String ERROR_CHANNEL = "errorChannel";, +, +	public static final String EXPIRATION_DATE = "expirationDate";, +, +	public static final String PRIORITY = "priority";]