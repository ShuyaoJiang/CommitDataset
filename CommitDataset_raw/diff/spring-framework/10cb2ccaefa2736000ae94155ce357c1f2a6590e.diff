[+++ b/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest;, +		if (!(request instanceof AbstractMultipartHttpServletRequest) ||, +				((AbstractMultipartHttpServletRequest) request).isResolved()) {, +	}, +++ b/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest;, +		if (!(request instanceof AbstractMultipartHttpServletRequest) ||, +				((AbstractMultipartHttpServletRequest) request).isResolved()) {, +	}, +++ b/spring-web/src/main/java/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.java, + * Copyright 2002-2018 the original author or authors., +	/**, +	 * Determine whether the underlying multipart request has been resolved., +	 * @return {@code true} when eagerly initialized or lazily triggered,, +	 * {@code false} in case of a lazy-resolution request that got aborted, +	 * before any parameters or multipart files have been accessed, +	 * @since 4.3.15, +	 * @see #getMultipartFiles(), +	 */, +	public boolean isResolved() {, +		return (this.multipartFiles != null);, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest;, +		if (!(request instanceof AbstractMultipartHttpServletRequest) ||, +				((AbstractMultipartHttpServletRequest) request).isResolved()) {, +	}, +++ b/spring-web/src/main/java/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.java, + * Copyright 2002-2018 the original author or authors., +	/**, +	 * Determine whether the underlying multipart request has been resolved., +	 * @return {@code true} when eagerly initialized or lazily triggered,, +	 * {@code false} in case of a lazy-resolution request that got aborted, +	 * before any parameters or multipart files have been accessed, +	 * @since 4.3.15, +	 * @see #getMultipartFiles(), +	 */, +	public boolean isResolved() {, +		return (this.multipartFiles != null);, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java, + * Copyright 2002-2018 the original author or authors., + * @see StandardServletMultipartResolver, +	 * @since 3.2.9, +	public StandardMultipartHttpServletRequest(HttpServletRequest request, boolean lazyParsing), +			throws MultipartException {, +++ b/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest;, +		if (!(request instanceof AbstractMultipartHttpServletRequest) ||, +				((AbstractMultipartHttpServletRequest) request).isResolved()) {, +	}, +++ b/spring-web/src/main/java/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.java, + * Copyright 2002-2018 the original author or authors., +	/**, +	 * Determine whether the underlying multipart request has been resolved., +	 * @return {@code true} when eagerly initialized or lazily triggered,, +	 * {@code false} in case of a lazy-resolution request that got aborted, +	 * before any parameters or multipart files have been accessed, +	 * @since 4.3.15, +	 * @see #getMultipartFiles(), +	 */, +	public boolean isResolved() {, +		return (this.multipartFiles != null);, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java, + * Copyright 2002-2018 the original author or authors., + * @see StandardServletMultipartResolver, +	 * @since 3.2.9, +	public StandardMultipartHttpServletRequest(HttpServletRequest request, boolean lazyParsing), +			throws MultipartException {, +++ b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java, +	 * @since 3.2.9, +		if (!(request instanceof AbstractMultipartHttpServletRequest) ||, +				((AbstractMultipartHttpServletRequest) request).isResolved()) {, +	}]