[+++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/JdbcTemplateTests.java, +		doTestStrings(null, null, null, null,, +				(template, sql, rch) -> template.query(sql, (Object[]) null, rch));, +		doTestStrings(null, null, null, argument,, +				(template, sql, rch) -> template.query(sql, new Object[] {argument}, rch));, +				4, new SqlParameterValue(Types.NUMERIC, 2, Float.valueOf(1.4142f)));, +				new BatchUpdateException(new int[] {1, Statement.EXECUTE_FAILED, 1, Statement.EXECUTE_FAILED}));, +		BatchPreparedStatementSetter setter = new BatchPreparedStatementSetter() {, +			public void setValues(PreparedStatement ps, int i) throws SQLException {, +			this.template.query(con -> con.prepareStatement("my query"), (ResultSetExtractor<Object>) rs2 -> {, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/JdbcTemplateTests.java, +		doTestStrings(null, null, null, null,, +				(template, sql, rch) -> template.query(sql, (Object[]) null, rch));, +		doTestStrings(null, null, null, argument,, +				(template, sql, rch) -> template.query(sql, new Object[] {argument}, rch));, +				4, new SqlParameterValue(Types.NUMERIC, 2, Float.valueOf(1.4142f)));, +				new BatchUpdateException(new int[] {1, Statement.EXECUTE_FAILED, 1, Statement.EXECUTE_FAILED}));, +		BatchPreparedStatementSetter setter = new BatchPreparedStatementSetter() {, +			public void setValues(PreparedStatement ps, int i) throws SQLException {, +			this.template.query(con -> con.prepareStatement("my query"), (ResultSetExtractor<Object>) rs2 -> {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java, +	private static final MethodFilter INIT_BINDER_METHODS = method ->, +	private static final MethodFilter MODEL_ATTRIBUTE_METHODS = method ->, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/JdbcTemplateTests.java, +		doTestStrings(null, null, null, null,, +				(template, sql, rch) -> template.query(sql, (Object[]) null, rch));, +		doTestStrings(null, null, null, argument,, +				(template, sql, rch) -> template.query(sql, new Object[] {argument}, rch));, +				4, new SqlParameterValue(Types.NUMERIC, 2, Float.valueOf(1.4142f)));, +				new BatchUpdateException(new int[] {1, Statement.EXECUTE_FAILED, 1, Statement.EXECUTE_FAILED}));, +		BatchPreparedStatementSetter setter = new BatchPreparedStatementSetter() {, +			public void setValues(PreparedStatement ps, int i) throws SQLException {, +			this.template.query(con -> con.prepareStatement("my query"), (ResultSetExtractor<Object>) rs2 -> {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java, +	private static final MethodFilter INIT_BINDER_METHODS = method ->, +	private static final MethodFilter MODEL_ATTRIBUTE_METHODS = method ->, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HandlerMethodAnnotationDetectionTests.java, + * Copyright 2002-2018 the original author or authors., +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/JdbcTemplateTests.java, +		doTestStrings(null, null, null, null,, +				(template, sql, rch) -> template.query(sql, (Object[]) null, rch));, +		doTestStrings(null, null, null, argument,, +				(template, sql, rch) -> template.query(sql, new Object[] {argument}, rch));, +				4, new SqlParameterValue(Types.NUMERIC, 2, Float.valueOf(1.4142f)));, +				new BatchUpdateException(new int[] {1, Statement.EXECUTE_FAILED, 1, Statement.EXECUTE_FAILED}));, +		BatchPreparedStatementSetter setter = new BatchPreparedStatementSetter() {, +			public void setValues(PreparedStatement ps, int i) throws SQLException {, +			this.template.query(con -> con.prepareStatement("my query"), (ResultSetExtractor<Object>) rs2 -> {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java, +	private static final MethodFilter INIT_BINDER_METHODS = method ->, +	private static final MethodFilter MODEL_ATTRIBUTE_METHODS = method ->, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HandlerMethodAnnotationDetectionTests.java, + * Copyright 2002-2018 the original author or authors., +++ b/src/docs/asciidoc/web/webmvc-view.adoc, +]