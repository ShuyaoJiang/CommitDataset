[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientRequest.java, +		 * Set the method of the request., +		 * @param method the new method, +		 * @return this builder, +		 */, +		Builder method(HttpMethod method);, +, +		/**, +		 * Set the url of the request., +		 * @param url the new url, +		 * @return this builder, +		 */, +		Builder url(URI url);, +, +		/**, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientRequest.java, +		 * Set the method of the request., +		 * @param method the new method, +		 * @return this builder, +		 */, +		Builder method(HttpMethod method);, +, +		/**, +		 * Set the url of the request., +		 * @param url the new url, +		 * @return this builder, +		 */, +		Builder url(URI url);, +, +		/**, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientRequestBuilder.java, +	private HttpMethod method;, +, +	private URI url;, +, +	@Override, +	public ClientRequest.Builder method(HttpMethod method) {, +		Assert.notNull(method, "'method' must not be null");, +		this.method = method;, +		return this;, +	}, +, +	@Override, +	public ClientRequest.Builder url(URI url) {, +		Assert.notNull(url, "'url' must not be null");, +		this.url = url;, +		return this;, +	}, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientRequest.java, +		 * Set the method of the request., +		 * @param method the new method, +		 * @return this builder, +		 */, +		Builder method(HttpMethod method);, +, +		/**, +		 * Set the url of the request., +		 * @param url the new url, +		 * @return this builder, +		 */, +		Builder url(URI url);, +, +		/**, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientRequestBuilder.java, +	private HttpMethod method;, +, +	private URI url;, +, +	@Override, +	public ClientRequest.Builder method(HttpMethod method) {, +		Assert.notNull(method, "'method' must not be null");, +		this.method = method;, +		return this;, +	}, +, +	@Override, +	public ClientRequest.Builder url(URI url) {, +		Assert.notNull(url, "'url' must not be null");, +		this.url = url;, +		return this;, +	}, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/client/DefaultClientRequestBuilderTests.java, +import static org.springframework.http.HttpMethod.OPTIONS;, +		ClientRequest.Builder builder = ClientRequest.method(DELETE, url);, +		assertEquals(DELETE, builder.build().method());, +, +		builder.method(OPTIONS);, +		assertEquals(OPTIONS, builder.build().method());, +	}, +, +	@Test, +	public void url() throws Exception {, +		URI url1 = new URI("http://example.com/foo");, +		URI url2 = new URI("http://example.com/bar");, +		ClientRequest.Builder builder = ClientRequest.method(DELETE, url1);, +		assertEquals(url1, builder.build().url());, +, +		builder.url(url2);, +		assertEquals(url2, builder.build().url());]