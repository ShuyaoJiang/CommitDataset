[+++ b/CONTRIBUTING.md, +## Take your first steps, +, +### Understand the basics, +### Search JIRA first; create an issue if necessary, +### Discuss non-trivial contribution ideas with committers, +### Sign the Contributor License Agreement, +## Create a branch, +### Branch from `master`, +### Use short branch names, +## Use Spring code style, +The complete [Spring Code Style][] reference is available on the wiki., +Here's a quick summary:, +, +### Mind the whitespace, +### Add Apache license header to all new classes, +### Update Apache license header to modified files as necessary, +### Use @since tags for newly-added public API types and methods, +## Prepare your commit, +, +### Submit JUnit test cases for all behavior changes, +### Squash commits, +### Use real name in git commits, +### Format commit messages, +## Run the final checklist, +, +### Run all tests prior to submission, +### Submit your pull request, +### Mention your pull request on the associated JIRA issue, +### Expect discussion and rework, +[Spring Code Style]: https://github.com/spring-projects/spring-framework/wiki/Spring-Code-Style, +++ b/CONTRIBUTING.md, +## Take your first steps, +, +### Understand the basics, +### Search JIRA first; create an issue if necessary, +### Discuss non-trivial contribution ideas with committers, +### Sign the Contributor License Agreement, +## Create a branch, +### Branch from `master`, +### Use short branch names, +## Use Spring code style, +The complete [Spring Code Style][] reference is available on the wiki., +Here's a quick summary:, +, +### Mind the whitespace, +### Add Apache license header to all new classes, +### Update Apache license header to modified files as necessary, +### Use @since tags for newly-added public API types and methods, +## Prepare your commit, +, +### Submit JUnit test cases for all behavior changes, +### Squash commits, +### Use real name in git commits, +### Format commit messages, +## Run the final checklist, +, +### Run all tests prior to submission, +### Submit your pull request, +### Mention your pull request on the associated JIRA issue, +### Expect discussion and rework, +[Spring Code Style]: https://github.com/spring-projects/spring-framework/wiki/Spring-Code-Style, +++ b/README.md, +[team members]: http://spring.io/team, +++ b/CONTRIBUTING.md, +## Take your first steps, +, +### Understand the basics, +### Search JIRA first; create an issue if necessary, +### Discuss non-trivial contribution ideas with committers, +### Sign the Contributor License Agreement, +## Create a branch, +### Branch from `master`, +### Use short branch names, +## Use Spring code style, +The complete [Spring Code Style][] reference is available on the wiki., +Here's a quick summary:, +, +### Mind the whitespace, +### Add Apache license header to all new classes, +### Update Apache license header to modified files as necessary, +### Use @since tags for newly-added public API types and methods, +## Prepare your commit, +, +### Submit JUnit test cases for all behavior changes, +### Squash commits, +### Use real name in git commits, +### Format commit messages, +## Run the final checklist, +, +### Run all tests prior to submission, +### Submit your pull request, +### Mention your pull request on the associated JIRA issue, +### Expect discussion and rework, +[Spring Code Style]: https://github.com/spring-projects/spring-framework/wiki/Spring-Code-Style, +++ b/README.md, +[team members]: http://spring.io/team, +++ b/import-into-idea.md, +1. Those steps don't work currently for Intellij IDEA 13+, +2. `spring-aspects` does not compile out of the box due to references to aspect types unknown to IDEA.]