[+++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java, +import java.util.ArrayList;, +	public static ParsedSql parseSqlStatement(final String sql) {, +		List<ParameterHolder> parameterList = new ArrayList<ParameterHolder>();, +						totalParameterCount = addNamedParameter(parameterList, totalParameterCount, escapes, i, j + 1, parameter);, +						totalParameterCount = addNamedParameter(parameterList, totalParameterCount, escapes, i, j, parameter);, +						sqlToUse = sqlToUse.substring(0, i - escapes) + sqlToUse.substring(i - escapes + 1);, +		ParsedSql parsedSql = new ParsedSql(sqlToUse);, +		for (ParameterHolder ph : parameterList) {, +			parsedSql.addNamedParameter(ph.getParameterName(), ph.getStartIndex(), ph.getEndIndex());, +		}, +	private static int addNamedParameter(List<ParameterHolder> parameterList, int totalParameterCount, int escapes, int i, int j,, +		parameterList.add(new ParameterHolder(parameter, i - escapes, j - escapes));, +	private static int addNewNamedParameter(Set<String> namedParameters, int namedParameterCount, String parameter) {, +	private static class ParameterHolder {, +		private String parameterName;, +		private int startIndex;, +		private int endIndex;, +, +		public ParameterHolder(String parameterName, int startIndex, int endIndex) {, +			super();, +			this.parameterName = parameterName;, +			this.startIndex = startIndex;, +			this.endIndex = endIndex;, +		}, +, +		public String getParameterName() {, +			return parameterName;, +		}, +, +		public int getStartIndex() {, +			return startIndex;, +		}, +		, +		public int getEndIndex() {, +			return endIndex;, +		}, +	}, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java, +import java.util.ArrayList;, +	public static ParsedSql parseSqlStatement(final String sql) {, +		List<ParameterHolder> parameterList = new ArrayList<ParameterHolder>();, +						totalParameterCount = addNamedParameter(parameterList, totalParameterCount, escapes, i, j + 1, parameter);, +						totalParameterCount = addNamedParameter(parameterList, totalParameterCount, escapes, i, j, parameter);, +						sqlToUse = sqlToUse.substring(0, i - escapes) + sqlToUse.substring(i - escapes + 1);, +		ParsedSql parsedSql = new ParsedSql(sqlToUse);, +		for (ParameterHolder ph : parameterList) {, +			parsedSql.addNamedParameter(ph.getParameterName(), ph.getStartIndex(), ph.getEndIndex());, +		}, +	private static int addNamedParameter(List<ParameterHolder> parameterList, int totalParameterCount, int escapes, int i, int j,, +		parameterList.add(new ParameterHolder(parameter, i - escapes, j - escapes));, +	private static int addNewNamedParameter(Set<String> namedParameters, int namedParameterCount, String parameter) {, +	private static class ParameterHolder {, +		private String parameterName;, +		private int startIndex;, +		private int endIndex;, +, +		public ParameterHolder(String parameterName, int startIndex, int endIndex) {, +			super();, +			this.parameterName = parameterName;, +			this.startIndex = startIndex;, +			this.endIndex = endIndex;, +		}, +, +		public String getParameterName() {, +			return parameterName;, +		}, +, +		public int getStartIndex() {, +			return startIndex;, +		}, +		, +		public int getEndIndex() {, +			return endIndex;, +		}, +	}, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/core/namedparam/NamedParameterUtilsTests.java, +		String expectedSql = "select '0\\:0' as a, foo from bar where baz < DATE(? 23:59:59) and baz = ?";, +		String sql = "select '0\\:0' as a, foo from bar where baz < DATE(:p1 23\\:59\\:59) and baz = :p2";]