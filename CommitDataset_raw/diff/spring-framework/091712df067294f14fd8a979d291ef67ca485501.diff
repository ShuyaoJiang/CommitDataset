[+++ b/spring-aop/src/main/java/org/springframework/aop/framework/Advised.java, + * Copyright 2002-2013 the original author or authors., +	Class<?>[] getProxiedInterfaces();, +	boolean isInterfaceProxied(Class<?> intf);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/Advised.java, + * Copyright 2002-2013 the original author or authors., +	Class<?>[] getProxiedInterfaces();, +	boolean isInterfaceProxied(Class<?> intf);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AdvisedSupport.java, +	public void setTargetClass(Class<?> targetClass) {, +	public void setInterfaces(Class<?>... interfaces) {, +	public void addInterface(Class<?> intf) {, +	public boolean removeInterface(Class<?> intf) {, +	public Class<?>[] getProxiedInterfaces() {, +	public boolean isInterfaceProxied(Class<?> intf) {, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/Advised.java, + * Copyright 2002-2013 the original author or authors., +	Class<?>[] getProxiedInterfaces();, +	boolean isInterfaceProxied(Class<?> intf);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AdvisedSupport.java, +	public void setTargetClass(Class<?> targetClass) {, +	public void setInterfaces(Class<?>... interfaces) {, +	public void addInterface(Class<?> intf) {, +	public boolean removeInterface(Class<?> intf) {, +	public Class<?>[] getProxiedInterfaces() {, +	public boolean isInterfaceProxied(Class<?> intf) {, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactory.java, + * Copyright 2002-2013 the original author or authors., +	public ProxyFactory(Class<?>... proxyInterfaces) {, +	public ProxyFactory(Class<?> proxyInterface, Interceptor interceptor) {, +	public ProxyFactory(Class<?> proxyInterface, TargetSource targetSource) {, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/Advised.java, + * Copyright 2002-2013 the original author or authors., +	Class<?>[] getProxiedInterfaces();, +	boolean isInterfaceProxied(Class<?> intf);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AdvisedSupport.java, +	public void setTargetClass(Class<?> targetClass) {, +	public void setInterfaces(Class<?>... interfaces) {, +	public void addInterface(Class<?> intf) {, +	public boolean removeInterface(Class<?> intf) {, +	public Class<?>[] getProxiedInterfaces() {, +	public boolean isInterfaceProxied(Class<?> intf) {, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactory.java, + * Copyright 2002-2013 the original author or authors., +	public ProxyFactory(Class<?>... proxyInterfaces) {, +	public ProxyFactory(Class<?> proxyInterface, Interceptor interceptor) {, +	public ProxyFactory(Class<?> proxyInterface, TargetSource targetSource) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/InjectionMetadata.java, + * Copyright 2002-2013 the original author or authors., +	private final Class<?> targetClass;, +	public InjectionMetadata(Class<?> targetClass, Collection<InjectedElement> elements) {, +		protected final Class<?> getResourceType() {, +		protected final void checkResourceType(Class<?> resourceType) {, +				Class<?> fieldType = ((Field) this.member).getType();, +				Class<?> paramType =, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/Advised.java, + * Copyright 2002-2013 the original author or authors., +	Class<?>[] getProxiedInterfaces();, +	boolean isInterfaceProxied(Class<?> intf);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AdvisedSupport.java, +	public void setTargetClass(Class<?> targetClass) {, +	public void setInterfaces(Class<?>... interfaces) {, +	public void addInterface(Class<?> intf) {, +	public boolean removeInterface(Class<?> intf) {, +	public Class<?>[] getProxiedInterfaces() {, +	public boolean isInterfaceProxied(Class<?> intf) {, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactory.java, + * Copyright 2002-2013 the original author or authors., +	public ProxyFactory(Class<?>... proxyInterfaces) {, +	public ProxyFactory(Class<?> proxyInterface, Interceptor interceptor) {, +	public ProxyFactory(Class<?> proxyInterface, TargetSource targetSource) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/InjectionMetadata.java, + * Copyright 2002-2013 the original author or authors., +	private final Class<?> targetClass;, +	public InjectionMetadata(Class<?> targetClass, Collection<InjectedElement> elements) {, +		protected final Class<?> getResourceType() {, +		protected final void checkResourceType(Class<?> resourceType) {, +				Class<?> fieldType = ((Field) this.member).getType();, +				Class<?> paramType =, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, + * Copyright 2002-2013 the original author or authors., +	private Class<?> declaringClass;]