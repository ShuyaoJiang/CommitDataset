[+++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java, +import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor;, +	/** NativeJdbcExtractor that can be used to retrieve the native connection */, +	protected NativeJdbcExtractor nativeJdbcExtractor = null;, +, +	public void setNativeJdbcExtractor(NativeJdbcExtractor nativeJdbcExtractor) {, +		this.nativeJdbcExtractor = nativeJdbcExtractor;, +	}, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java, +import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor;, +	/** NativeJdbcExtractor that can be used to retrieve the native connection */, +	protected NativeJdbcExtractor nativeJdbcExtractor = null;, +, +	public void setNativeJdbcExtractor(NativeJdbcExtractor nativeJdbcExtractor) {, +		this.nativeJdbcExtractor = nativeJdbcExtractor;, +	}, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java, +		Connection con = null;, +		if (nativeJdbcExtractor == null) {, +			con = databaseMetaData.getConnection();, +			if (logger.isDebugEnabled()) {, +				logger.debug("Using meta data JDBC connection: " + con.getClass().getName());, +			}, +		}, +		else {, +			con = nativeJdbcExtractor.getNativeConnection(databaseMetaData.getConnection());, +			if (logger.isDebugEnabled()) {, +				logger.debug("Using native JDBC connection: " + con.getClass().getName());, +			}, +		}, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java, +import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor;, +	/** NativeJdbcExtractor that can be used to retrieve the native connection */, +	protected NativeJdbcExtractor nativeJdbcExtractor = null;, +, +	public void setNativeJdbcExtractor(NativeJdbcExtractor nativeJdbcExtractor) {, +		this.nativeJdbcExtractor = nativeJdbcExtractor;, +	}, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java, +		Connection con = null;, +		if (nativeJdbcExtractor == null) {, +			con = databaseMetaData.getConnection();, +			if (logger.isDebugEnabled()) {, +				logger.debug("Using meta data JDBC connection: " + con.getClass().getName());, +			}, +		}, +		else {, +			con = nativeJdbcExtractor.getNativeConnection(databaseMetaData.getConnection());, +			if (logger.isDebugEnabled()) {, +				logger.debug("Using native JDBC connection: " + con.getClass().getName());, +			}, +		}, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java, +import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor;, +	/** NativeJdbcExtractor to be used to retrieve the native connection */, +	NativeJdbcExtractor nativeJdbcExtractor = null;, +, +	/**, +	 * Set {@link NativeJdbcExtractor} to be used to retrieve the native connection, +	 */, +	public void setNativeJdbcExtractor(NativeJdbcExtractor nativeJdbcExtractor) {, +		this.nativeJdbcExtractor = nativeJdbcExtractor;, +	}, +, +		this.metaDataProvider = TableMetaDataProviderFactory.createMetaDataProvider(dataSource, this, this.nativeJdbcExtractor);, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java, +import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor;, +	/** NativeJdbcExtractor that can be used to retrieve the native connection */, +	protected NativeJdbcExtractor nativeJdbcExtractor = null;, +, +	public void setNativeJdbcExtractor(NativeJdbcExtractor nativeJdbcExtractor) {, +		this.nativeJdbcExtractor = nativeJdbcExtractor;, +	}, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java, +		Connection con = null;, +		if (nativeJdbcExtractor == null) {, +			con = databaseMetaData.getConnection();, +			if (logger.isDebugEnabled()) {, +				logger.debug("Using meta data JDBC connection: " + con.getClass().getName());, +			}, +		}, +		else {, +			con = nativeJdbcExtractor.getNativeConnection(databaseMetaData.getConnection());, +			if (logger.isDebugEnabled()) {, +				logger.debug("Using native JDBC connection: " + con.getClass().getName());, +			}, +		}, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java, +import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor;, +	/** NativeJdbcExtractor to be used to retrieve the native connection */, +	NativeJdbcExtractor nativeJdbcExtractor = null;, +, +	/**, +	 * Set {@link NativeJdbcExtractor} to be used to retrieve the native connection, +	 */, +	public void setNativeJdbcExtractor(NativeJdbcExtractor nativeJdbcExtractor) {, +		this.nativeJdbcExtractor = nativeJdbcExtractor;, +	}, +, +		this.metaDataProvider = TableMetaDataProviderFactory.createMetaDataProvider(dataSource, this, this.nativeJdbcExtractor);]