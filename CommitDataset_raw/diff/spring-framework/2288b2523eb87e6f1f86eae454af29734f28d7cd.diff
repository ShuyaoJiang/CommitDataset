[+++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationControllerTests.java, +import java.util.Iterator;, +import org.springframework.util.MultiValueMap;, +	@Test, +	public void requestParamMap() throws Exception {, +		initServlet(RequestParamMapController.class);, +, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/map");, +		request.addParameter("key1", "value1");, +		request.addParameter("key2", new String[]{"value21", "value22"});, +		MockHttpServletResponse response = new MockHttpServletResponse();, +, +		servlet.service(request, response);, +		assertEquals("key1=value1,key2=value21", response.getContentAsString());, +, +		request.setRequestURI("/multiValueMap");, +		response = new MockHttpServletResponse();, +, +		servlet.service(request, response);, +		assertEquals("key1=[value1],key2=[value21,value22]", response.getContentAsString());, +	}, +, +	@Controller, +	public static class RequestParamMapController {, +, +		@RequestMapping("/map"), +		public void map(@RequestParam Map<String, String> params, Writer writer) throws IOException {, +			for (Iterator<Map.Entry<String, String>> it = params.entrySet().iterator(); it.hasNext();) {, +				Map.Entry<String, String> entry = it.next();, +				writer.write(entry.getKey() + "=" + entry.getValue());, +				if (it.hasNext()) {, +					writer.write(',');, +				}, +, +			}, +		}, +, +		@RequestMapping("/multiValueMap"), +		public void multiValueMap(@RequestParam MultiValueMap<String, String> params, Writer writer) throws IOException {, +			for (Iterator<Map.Entry<String, List<String>>> it1 = params.entrySet().iterator(); it1.hasNext();) {, +				Map.Entry<String, List<String>> entry = it1.next();, +				writer.write(entry.getKey() + "=[");, +				for (Iterator<String> it2 = entry.getValue().iterator(); it2.hasNext();) {, +					String value = it2.next();, +					writer.write(value);, +					if (it2.hasNext()) {, +						writer.write(',');, +					}, +				}, +				writer.write(']');, +				if (it1.hasNext()) {, +					writer.write(',');, +				}, +			}, +		}, +	}, +	, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationControllerTests.java, +import java.util.Iterator;, +import org.springframework.util.MultiValueMap;, +	@Test, +	public void requestParamMap() throws Exception {, +		initServlet(RequestParamMapController.class);, +, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/map");, +		request.addParameter("key1", "value1");, +		request.addParameter("key2", new String[]{"value21", "value22"});, +		MockHttpServletResponse response = new MockHttpServletResponse();, +, +		servlet.service(request, response);, +		assertEquals("key1=value1,key2=value21", response.getContentAsString());, +, +		request.setRequestURI("/multiValueMap");, +		response = new MockHttpServletResponse();, +, +		servlet.service(request, response);, +		assertEquals("key1=[value1],key2=[value21,value22]", response.getContentAsString());, +	}, +, +	@Controller, +	public static class RequestParamMapController {, +, +		@RequestMapping("/map"), +		public void map(@RequestParam Map<String, String> params, Writer writer) throws IOException {, +			for (Iterator<Map.Entry<String, String>> it = params.entrySet().iterator(); it.hasNext();) {, +				Map.Entry<String, String> entry = it.next();, +				writer.write(entry.getKey() + "=" + entry.getValue());, +				if (it.hasNext()) {, +					writer.write(',');, +				}, +, +			}, +		}, +, +		@RequestMapping("/multiValueMap"), +		public void multiValueMap(@RequestParam MultiValueMap<String, String> params, Writer writer) throws IOException {, +			for (Iterator<Map.Entry<String, List<String>>> it1 = params.entrySet().iterator(); it1.hasNext();) {, +				Map.Entry<String, List<String>> entry = it1.next();, +				writer.write(entry.getKey() + "=[");, +				for (Iterator<String> it2 = entry.getValue().iterator(); it2.hasNext();) {]