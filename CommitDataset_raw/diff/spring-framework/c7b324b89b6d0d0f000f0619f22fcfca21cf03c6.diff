[+++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		Object cacheKey = new AnnotatedElementKey(method, targetClass);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		Object cacheKey = new AnnotatedElementKey(method, targetClass);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		return new AnnotatedElementKey(method, targetClass);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		Object cacheKey = new AnnotatedElementKey(method, targetClass);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		return new AnnotatedElementKey(method, targetClass);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		private final AnnotatedElementKey methodCacheKey;, +			this.methodCacheKey = new AnnotatedElementKey(metadata.method, metadata.targetClass);, +		private final AnnotatedElementKey methodCacheKey;, +			this.methodCacheKey = new AnnotatedElementKey(method, targetClass);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		Object cacheKey = new AnnotatedElementKey(method, targetClass);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		return new AnnotatedElementKey(method, targetClass);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		private final AnnotatedElementKey methodCacheKey;, +			this.methodCacheKey = new AnnotatedElementKey(metadata.method, metadata.targetClass);, +		private final AnnotatedElementKey methodCacheKey;, +			this.methodCacheKey = new AnnotatedElementKey(method, targetClass);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheEvaluationContext.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +	private final Map<AnnotatedElementKey, Method> methodCache;, +			Object[] args, Class<?> targetClass, Map<AnnotatedElementKey, Method> methodCache) {, +		AnnotatedElementKey methodKey = new AnnotatedElementKey(this.method, this.targetClass);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		Object cacheKey = new AnnotatedElementKey(method, targetClass);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		return new AnnotatedElementKey(method, targetClass);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		private final AnnotatedElementKey methodCacheKey;, +			this.methodCacheKey = new AnnotatedElementKey(metadata.method, metadata.targetClass);, +		private final AnnotatedElementKey methodCacheKey;, +			this.methodCacheKey = new AnnotatedElementKey(method, targetClass);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheEvaluationContext.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +	private final Map<AnnotatedElementKey, Method> methodCache;, +			Object[] args, Class<?> targetClass, Map<AnnotatedElementKey, Method> methodCache) {, +		AnnotatedElementKey methodKey = new AnnotatedElementKey(this.method, this.targetClass);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/ExpressionEvaluator.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +import org.springframework.context.expression.CachedExpressionEvaluator;, + * using {@link AnnotatedElementKey}., +class ExpressionEvaluator extends CachedExpressionEvaluator {, +	private final Map<AnnotatedElementKey, Method> targetMethodCache =, +			new ConcurrentHashMap<AnnotatedElementKey, Method>(64);, +	public Object key(String keyExpression, AnnotatedElementKey methodKey, EvaluationContext evalContext) {, +		return getExpression(this.keyCache, methodKey, keyExpression).getValue(evalContext);, +	public boolean condition(String conditionExpression, AnnotatedElementKey methodKey, EvaluationContext evalContext) {, +		return getExpression(this.conditionCache, methodKey, conditionExpression).getValue(evalContext, boolean.class);, +	public boolean unless(String unlessExpression, AnnotatedElementKey methodKey, EvaluationContext evalContext) {, +		return getExpression(this.unlessCache, methodKey, unlessExpression).getValue(evalContext, boolean.class);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		Object cacheKey = new AnnotatedElementKey(method, targetClass);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		return new AnnotatedElementKey(method, targetClass);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.expression.AnnotatedElementKey;, +		private final AnnotatedElementKey methodCacheKey;, +			this.methodCacheKey = new AnnotatedElementKey(metadata.method, metadata.targetClass);, +		private final AnnotatedElementKey methodCacheKey;, +			this.methodCacheKey = new AnnotatedElementKey(method, targetClass);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheEvaluationContext.java, + * Copyright 2002-2015 the original author or authors.]