[+++ b/spring-web/src/main/java/org/springframework/web/context/request/async/AsyncTask.java, +public class AsyncTask<V> {, +	private final Callable<V> callable;, +	public AsyncTask(long timeout, Callable<V> callable) {, +	public AsyncTask(Long timeout, String executorName, Callable<V> callable) {, +	public AsyncTask(Long timeout, AsyncTaskExecutor executor, Callable<V> callable) {, +	private AsyncTask(Long timeout, AsyncTaskExecutor executor, String executorName, Callable<V> callable) {, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/AsyncTask.java, +public class AsyncTask<V> {, +	private final Callable<V> callable;, +	public AsyncTask(long timeout, Callable<V> callable) {, +	public AsyncTask(Long timeout, String executorName, Callable<V> callable) {, +	public AsyncTask(Long timeout, AsyncTaskExecutor executor, Callable<V> callable) {, +	private AsyncTask(Long timeout, AsyncTaskExecutor executor, String executorName, Callable<V> callable) {, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java, +	public void startCallableProcessing(AsyncTask<?> asyncTask, Object... processingContext) {, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/AsyncTask.java, +public class AsyncTask<V> {, +	private final Callable<V> callable;, +	public AsyncTask(long timeout, Callable<V> callable) {, +	public AsyncTask(Long timeout, String executorName, Callable<V> callable) {, +	public AsyncTask(Long timeout, AsyncTaskExecutor executor, Callable<V> callable) {, +	private AsyncTask(Long timeout, AsyncTaskExecutor executor, String executorName, Callable<V> callable) {, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java, +	public void startCallableProcessing(AsyncTask<?> asyncTask, Object... processingContext) {, +++ b/spring-web/src/test/java/org/springframework/web/context/request/async/WebAsyncManagerTests.java, +		@SuppressWarnings("unchecked"), +		AsyncTask<Object> asyncTask = new AsyncTask<Object>(1000L, executor, createMock(Callable.class));, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/AsyncTask.java, +public class AsyncTask<V> {, +	private final Callable<V> callable;, +	public AsyncTask(long timeout, Callable<V> callable) {, +	public AsyncTask(Long timeout, String executorName, Callable<V> callable) {, +	public AsyncTask(Long timeout, AsyncTaskExecutor executor, Callable<V> callable) {, +	private AsyncTask(Long timeout, AsyncTaskExecutor executor, String executorName, Callable<V> callable) {, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java, +	public void startCallableProcessing(AsyncTask<?> asyncTask, Object... processingContext) {, +++ b/spring-web/src/test/java/org/springframework/web/context/request/async/WebAsyncManagerTests.java, +		@SuppressWarnings("unchecked"), +		AsyncTask<Object> asyncTask = new AsyncTask<Object>(1000L, executor, createMock(Callable.class));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AsyncTaskMethodReturnValueHandler.java, +		AsyncTask<?> asyncTask = (AsyncTask<?>) returnValue;, +		WebAsyncUtils.getAsyncManager(webRequest).startCallableProcessing(asyncTask, mavContainer);]