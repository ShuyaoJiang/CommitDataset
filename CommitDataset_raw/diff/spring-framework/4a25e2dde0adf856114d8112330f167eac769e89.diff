[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/GenericTypeAwarePropertyDescriptor.java, +import java.util.HashSet;, +import java.util.Set;, +, +import org.apache.commons.logging.LogFactory;, +	private volatile Set<Method> ambiguousWriteMethods;, +, +		this.propertyEditorClass = propertyEditorClass;, +, +, +		if (this.writeMethod != null && this.readMethod == null) {, +			// Write method not matched against read method: potentially ambiguous through, +			// several overloaded variants, in which case an arbitrary winner has been chosen, +			// by the JDK's JavaBeans Introspector..., +			Set<Method> ambiguousCandidates = new HashSet<Method>();, +			for (Method method : beanClass.getMethods()) {, +				if (method.getName().equals(writeMethodToUse.getName()) &&, +						!method.equals(writeMethodToUse) && !method.isBridge()) {, +					ambiguousCandidates.add(method);, +				}, +			}, +			if (!ambiguousCandidates.isEmpty()) {, +				this.ambiguousWriteMethods = ambiguousCandidates;, +			}, +		}, +		Set<Method> ambiguousCandidates = this.ambiguousWriteMethods;, +		if (ambiguousCandidates != null) {, +			this.ambiguousWriteMethods = null;, +			LogFactory.getLog(GenericTypeAwarePropertyDescriptor.class).warn("Invalid JavaBean property '" +, +					getName() + "' being accessed! Ambiguous write methods found next to actually used [" +, +					this.writeMethod + "]: " + ambiguousCandidates);, +		}]