[+++ b/org.springframework.context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java, + * Copyright 2002-2011 the original author or authors., +import org.springframework.scheduling.support.ScheduledMethodRunnable;, +					Runnable runnable = new ScheduledMethodRunnable(bean, method);, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java, + * Copyright 2002-2011 the original author or authors., +import org.springframework.scheduling.support.ScheduledMethodRunnable;, +					Runnable runnable = new ScheduledMethodRunnable(bean, method);, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/config/ScheduledTasksBeanDefinitionParser.java, +import org.w3c.dom.Element;, +import org.w3c.dom.Node;, +import org.w3c.dom.NodeList;, +, +					createRunnableBean(ref, method, taskElement, parserContext));, +				"org.springframework.scheduling.support.ScheduledMethodRunnable");, +		builder.addConstructorArgReference(ref);, +		builder.addConstructorArgValue(method);, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java, + * Copyright 2002-2011 the original author or authors., +import org.springframework.scheduling.support.ScheduledMethodRunnable;, +					Runnable runnable = new ScheduledMethodRunnable(bean, method);, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/config/ScheduledTasksBeanDefinitionParser.java, +import org.w3c.dom.Element;, +import org.w3c.dom.Node;, +import org.w3c.dom.NodeList;, +, +					createRunnableBean(ref, method, taskElement, parserContext));, +				"org.springframework.scheduling.support.ScheduledMethodRunnable");, +		builder.addConstructorArgReference(ref);, +		builder.addConstructorArgValue(method);, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/support/DelegatingErrorHandlingRunnable.java, + * Copyright 2002-2011 the original author or authors., +import java.lang.reflect.UndeclaredThrowableException;, +, +		catch (UndeclaredThrowableException ex) {, +			this.errorHandler.handleError(ex.getUndeclaredThrowable());, +		}, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java, + * Copyright 2002-2011 the original author or authors., +import org.springframework.scheduling.support.ScheduledMethodRunnable;, +					Runnable runnable = new ScheduledMethodRunnable(bean, method);, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/config/ScheduledTasksBeanDefinitionParser.java, +import org.w3c.dom.Element;, +import org.w3c.dom.Node;, +import org.w3c.dom.NodeList;, +, +					createRunnableBean(ref, method, taskElement, parserContext));, +				"org.springframework.scheduling.support.ScheduledMethodRunnable");, +		builder.addConstructorArgReference(ref);, +		builder.addConstructorArgValue(method);, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/support/DelegatingErrorHandlingRunnable.java, + * Copyright 2002-2011 the original author or authors., +import java.lang.reflect.UndeclaredThrowableException;, +, +		catch (UndeclaredThrowableException ex) {, +			this.errorHandler.handleError(ex.getUndeclaredThrowable());, +		}, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/support/ScheduledMethodRunnable.java, +/*, + * Copyright 2002-2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.scheduling.support;, +, +import java.lang.reflect.InvocationTargetException;, +import java.lang.reflect.Method;, +import java.lang.reflect.UndeclaredThrowableException;, +, +import org.springframework.util.ReflectionUtils;, +, +/**, + * Variation of {@link MethodInvokingRunnable} meant to be used for processing, + * of no-arg scheduled methods. Propagates user exceptions to the caller,, + * assuming that an error strategy for Runnables is in place., + *, + * @author Juergen Hoeller, + * @since 3.0.6, + */, +public class ScheduledMethodRunnable implements Runnable {, +, +	private final Object target;, +, +	private final Method method;, +, +, +	public ScheduledMethodRunnable(Object target, Method method) {, +		this.target = target;, +		this.method = method;]