[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionReaderUtils.java, + * Copyright 2002-2016 the original author or authors., +	 * Generate a bean name for the given top-level bean definition,, +	 * unique within the given bean factory., +	 * @param beanDefinition the bean definition to generate a bean name for, +	 * @param registry the bean factory that the definition is going to be, +	 * registered with (to check for existing bean names), +	 * @return the generated bean name, +	 * @throws BeanDefinitionStoreException if no unique name can be generated, +	 * for the given bean definition, +	 * @see #generateBeanName(BeanDefinition, BeanDefinitionRegistry, boolean), +	 */, +	public static String generateBeanName(BeanDefinition beanDefinition, BeanDefinitionRegistry registry), +			throws BeanDefinitionStoreException {, +, +		return generateBeanName(beanDefinition, registry, false);, +	}, +, +	/**, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionReaderUtils.java, + * Copyright 2002-2016 the original author or authors., +	 * Generate a bean name for the given top-level bean definition,, +	 * unique within the given bean factory., +	 * @param beanDefinition the bean definition to generate a bean name for, +	 * @param registry the bean factory that the definition is going to be, +	 * registered with (to check for existing bean names), +	 * @return the generated bean name, +	 * @throws BeanDefinitionStoreException if no unique name can be generated, +	 * for the given bean definition, +	 * @see #generateBeanName(BeanDefinition, BeanDefinitionRegistry, boolean), +	 */, +	public static String generateBeanName(BeanDefinition beanDefinition, BeanDefinitionRegistry registry), +			throws BeanDefinitionStoreException {, +, +		return generateBeanName(beanDefinition, registry, false);, +	}, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/ConfigurableApplicationContext.java, +	 * @since 3.0, +	 * @since 2.5, +	 * @since 3.1, +	 * @since 3.0, +	 * @since 3.1, +	 * @since 3.1, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionReaderUtils.java, + * Copyright 2002-2016 the original author or authors., +	 * Generate a bean name for the given top-level bean definition,, +	 * unique within the given bean factory., +	 * @param beanDefinition the bean definition to generate a bean name for, +	 * @param registry the bean factory that the definition is going to be, +	 * registered with (to check for existing bean names), +	 * @return the generated bean name, +	 * @throws BeanDefinitionStoreException if no unique name can be generated, +	 * for the given bean definition, +	 * @see #generateBeanName(BeanDefinition, BeanDefinitionRegistry, boolean), +	 */, +	public static String generateBeanName(BeanDefinition beanDefinition, BeanDefinitionRegistry registry), +			throws BeanDefinitionStoreException {, +, +		return generateBeanName(beanDefinition, registry, false);, +	}, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/ConfigurableApplicationContext.java, +	 * @since 3.0, +	 * @since 2.5, +	 * @since 3.1, +	 * @since 3.0, +	 * @since 3.1, +	 * @since 3.1, +++ b/spring-context/src/main/java/org/springframework/context/support/GenericApplicationContext.java, +	 * @since 3.0, +	 * @since 3.0, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionReaderUtils.java, + * Copyright 2002-2016 the original author or authors., +	 * Generate a bean name for the given top-level bean definition,, +	 * unique within the given bean factory., +	 * @param beanDefinition the bean definition to generate a bean name for, +	 * @param registry the bean factory that the definition is going to be, +	 * registered with (to check for existing bean names), +	 * @return the generated bean name, +	 * @throws BeanDefinitionStoreException if no unique name can be generated, +	 * for the given bean definition, +	 * @see #generateBeanName(BeanDefinition, BeanDefinitionRegistry, boolean), +	 */, +	public static String generateBeanName(BeanDefinition beanDefinition, BeanDefinitionRegistry registry), +			throws BeanDefinitionStoreException {, +, +		return generateBeanName(beanDefinition, registry, false);, +	}, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/ConfigurableApplicationContext.java, +	 * @since 3.0, +	 * @since 2.5, +	 * @since 3.1, +	 * @since 3.0, +	 * @since 3.1, +	 * @since 3.1]