[+++ b/spring-web/src/main/java/org/springframework/web/util/DefaultUriBuilderFactory.java, +		 * Encode the URI template first, and URI variables later when expanded,, +		 * applying the following to each:, +		 * <ul>, +		 * <li>URI template is encoded by quoting <em>only</em> illegal, +		 * characters within a given URI component type., +		 * <li>URI variables are encoded strictly, by quoting both illegal, +		 * characters and characters with reserved meaning., +		 * </ul>, +		 * <p>For most cases this should be the preferred encoding mode., +		 * @since 5.0.8, +		 * @see UriComponentsBuilder#encode(), +		 */, +		TEMPLATE_AND_VALUES,, +, +		/**, +		 * Encode only URI variables strictly quoting both illegal characters, +		 * and characters with reserved meaning., +		 * @see UriUtils#encodeUriVariables(Object...), +		 * @see UriUtils#encodeUriVariables(Map), +		 * Expand URI variables first, and then encode the expanded URI component, +		 * @see UriComponents#encode(), +	 * Specify the {@link EncodingMode EncodingMode} to use to encode URIs., +			if (encodingMode.equals(EncodingMode.TEMPLATE_AND_VALUES)) {, +				result.encode();, +			}, +, +			if (parsePath && encodingMode.equals(EncodingMode.URI_COMPONENT)) {, +++ b/spring-web/src/main/java/org/springframework/web/util/DefaultUriBuilderFactory.java, +		 * Encode the URI template first, and URI variables later when expanded,, +		 * applying the following to each:, +		 * <ul>, +		 * <li>URI template is encoded by quoting <em>only</em> illegal, +		 * characters within a given URI component type., +		 * <li>URI variables are encoded strictly, by quoting both illegal, +		 * characters and characters with reserved meaning., +		 * </ul>, +		 * <p>For most cases this should be the preferred encoding mode., +		 * @since 5.0.8, +		 * @see UriComponentsBuilder#encode(), +		 */, +		TEMPLATE_AND_VALUES,, +, +		/**, +		 * Encode only URI variables strictly quoting both illegal characters, +		 * and characters with reserved meaning., +		 * @see UriUtils#encodeUriVariables(Object...), +		 * @see UriUtils#encodeUriVariables(Map), +		 * Expand URI variables first, and then encode the expanded URI component, +		 * @see UriComponents#encode(), +	 * Specify the {@link EncodingMode EncodingMode} to use to encode URIs., +			if (encodingMode.equals(EncodingMode.TEMPLATE_AND_VALUES)) {, +				result.encode();, +			}, +, +			if (parsePath && encodingMode.equals(EncodingMode.URI_COMPONENT)) {, +++ b/spring-web/src/test/java/org/springframework/web/util/DefaultUriBuilderFactoryTests.java, +	public void encodeTemplateAndValues() {, +		DefaultUriBuilderFactory factory = new DefaultUriBuilderFactory();, +		factory.setEncodingMode(EncodingMode.TEMPLATE_AND_VALUES);, +		UriBuilder uriBuilder = factory.uriString("/hotel list/{city} specials?q={value}");, +, +		String expected = "/hotel%20list/Z%C3%BCrich%20specials?q=a%2Bb";, +, +		Map<String, Object> vars = new HashMap<>();, +		vars.put("city", "Z\u00fcrich");, +		vars.put("value", "a+b");, +, +		assertEquals(expected, uriBuilder.build("Z\u00fcrich", "a+b").toString());, +		assertEquals(expected, uriBuilder.build(vars).toString());, +	}, +, +	@Test]