[+++ b/spring-core/src/main/java/org/springframework/core/ResolvableType.java, +				TypeVariable<?> v1 = SerializableTypeWrapper.unwrap(this.variables[i]);, +				TypeVariable<?> v2 = SerializableTypeWrapper.unwrap(variable);, +				if (ObjectUtils.nullSafeEquals(v1, v2)) {, +++ b/spring-core/src/main/java/org/springframework/core/ResolvableType.java, +				TypeVariable<?> v1 = SerializableTypeWrapper.unwrap(this.variables[i]);, +				TypeVariable<?> v2 = SerializableTypeWrapper.unwrap(variable);, +				if (ObjectUtils.nullSafeEquals(v1, v2)) {, +++ b/spring-core/src/test/java/org/springframework/core/ResolvableTypeTests.java, +import org.junit.Ignore;, +	@Ignore, +++ b/spring-core/src/main/java/org/springframework/core/ResolvableType.java, +				TypeVariable<?> v1 = SerializableTypeWrapper.unwrap(this.variables[i]);, +				TypeVariable<?> v2 = SerializableTypeWrapper.unwrap(variable);, +				if (ObjectUtils.nullSafeEquals(v1, v2)) {, +++ b/spring-core/src/test/java/org/springframework/core/ResolvableTypeTests.java, +import org.junit.Ignore;, +	@Ignore, +++ b/spring-web/src/test/java/org/springframework/web/method/ResolvableMethod.java, + * Copyright 2002-2018 the original author or authors., +	private static final ParameterNameDiscoverer nameDiscoverer = new LocalVariableTableParameterNameDiscoverer();, +			Assert.state(!methods.isEmpty(), () -> "No matching method: " + this);, +			Assert.state(methods.size() == 1, () -> "Multiple matching methods: " + this + formatMethods(methods));, +++ b/spring-core/src/main/java/org/springframework/core/ResolvableType.java, +				TypeVariable<?> v1 = SerializableTypeWrapper.unwrap(this.variables[i]);, +				TypeVariable<?> v2 = SerializableTypeWrapper.unwrap(variable);, +				if (ObjectUtils.nullSafeEquals(v1, v2)) {, +++ b/spring-core/src/test/java/org/springframework/core/ResolvableTypeTests.java, +import org.junit.Ignore;, +	@Ignore, +++ b/spring-web/src/test/java/org/springframework/web/method/ResolvableMethod.java, + * Copyright 2002-2018 the original author or authors., +	private static final ParameterNameDiscoverer nameDiscoverer = new LocalVariableTableParameterNameDiscoverer();, +			Assert.state(!methods.isEmpty(), () -> "No matching method: " + this);, +			Assert.state(methods.size() == 1, () -> "Multiple matching methods: " + this + formatMethods(methods));, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandlerTests.java, + * Copyright 2002-2018 the original author or authors.]