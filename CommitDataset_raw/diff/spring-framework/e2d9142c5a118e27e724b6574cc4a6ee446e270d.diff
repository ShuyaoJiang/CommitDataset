[+++ b/org.springframework.core/src/main/java/org/springframework/util/StringUtils.java, +		validateLocalePart(language);, +		validateLocalePart(country);, +	private static void validateLocalePart(String localePart) {, +		for (int i = 0; i < localePart.length(); i++) {, +			char ch = localePart.charAt(i);, +			if (ch != '_' && ch != ' ' && !Character.isLetterOrDigit(ch)) {, +				throw new IllegalArgumentException(, +						"Locale part \"" + localePart + "\" contains invalid characters");, +			}, +		}, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/util/StringUtils.java, +		validateLocalePart(language);, +		validateLocalePart(country);, +	private static void validateLocalePart(String localePart) {, +		for (int i = 0; i < localePart.length(); i++) {, +			char ch = localePart.charAt(i);, +			if (ch != '_' && ch != ' ' && !Character.isLetterOrDigit(ch)) {, +				throw new IllegalArgumentException(, +						"Locale part \"" + localePart + "\" contains invalid characters");, +			}, +		}, +	}, +, +++ b/org.springframework.core/src/test/java/org/springframework/util/StringUtilsTests.java, +	 * <a href="http://opensource.atlassian.com/projects/spring/browse/SPR-8637">See SPR-8637</a>., +	 */, +	public void testParseLocaleWithMultiSpecialCharactersInVariant() throws Exception {, +		final String variant = "proper-northern";, +		final String localeString = "en_GB_" + variant;, +		Locale locale = StringUtils.parseLocaleString(localeString);, +		assertEquals("Multi-valued variant portion of the Locale not extracted correctly.", variant, locale.getVariant());, +	}, +, +	/**]