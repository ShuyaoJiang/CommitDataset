[+++ b/spring-context/src/main/java/org/springframework/context/expression/MapAccessor.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.asm.MethodVisitor;, +import org.springframework.expression.spel.CodeFlow;, +import org.springframework.expression.spel.CompilablePropertyAccessor;, +public class MapAccessor implements CompilablePropertyAccessor {, +	@Override, +	public boolean isCompilable() {, +		return true;, +	}, +, +	@Override, +	public Class<?> getPropertyType() {, +		return Object.class;, +	}, +, +	@Override, +	public void generateCode(String propertyName, MethodVisitor mv, CodeFlow cf) {, +		String descriptor = cf.lastDescriptor();, +		if (descriptor == null || !descriptor.equals("Ljava/util/Map")) {, +			if (descriptor == null) {, +				cf.loadTarget(mv);, +			}, +			CodeFlow.insertCheckCast(mv, "Ljava/util/Map");, +		}, +		mv.visitLdcInsn(propertyName);, +		mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get","(Ljava/lang/Object;)Ljava/lang/Object;",true);, +	}, +, +++ b/spring-context/src/main/java/org/springframework/context/expression/MapAccessor.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.asm.MethodVisitor;, +import org.springframework.expression.spel.CodeFlow;, +import org.springframework.expression.spel.CompilablePropertyAccessor;, +public class MapAccessor implements CompilablePropertyAccessor {, +	@Override, +	public boolean isCompilable() {, +		return true;, +	}, +, +	@Override, +	public Class<?> getPropertyType() {, +		return Object.class;, +	}, +, +	@Override, +	public void generateCode(String propertyName, MethodVisitor mv, CodeFlow cf) {, +		String descriptor = cf.lastDescriptor();, +		if (descriptor == null || !descriptor.equals("Ljava/util/Map")) {, +			if (descriptor == null) {, +				cf.loadTarget(mv);, +			}, +			CodeFlow.insertCheckCast(mv, "Ljava/util/Map");, +		}, +		mv.visitLdcInsn(propertyName);, +		mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get","(Ljava/lang/Object;)Ljava/lang/Object;",true);, +	}, +, +++ b/spring-context/src/test/java/org/springframework/context/expression/MapAccessorTests.java, +/*, + * Copyright 2002-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.context.expression;, +, +import java.util.HashMap;, +import java.util.Map;, +, +import org.junit.Test;, +import org.springframework.expression.Expression;, +import org.springframework.expression.spel.standard.SpelCompiler;, +import org.springframework.expression.spel.standard.SpelExpressionParser;, +import org.springframework.expression.spel.support.StandardEvaluationContext;, +, +import static org.junit.Assert.*;, +, +/**, + * Unit tests for compilation of {@link MapAccessor}., + *, + * @author Andy Clement, + */, +public class MapAccessorTests {, +, +	@Test, +	public void mapAccessorCompilable() {, +		Map<String, Object> testMap = getSimpleTestMap();, +		StandardEvaluationContext sec = new StandardEvaluationContext();		, +		sec.addPropertyAccessor(new MapAccessor());]