[+++ b/org.springframework.context.support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, + * Copyright 2002-2009 the original author or authors., + * {@link FactoryBean} that creates a named EHCache {@link net.sf.ehcache.Cache} instance, +public class EhCacheFactoryBean implements FactoryBean<Ehcache>, BeanNameAware, InitializingBean {, +	public Ehcache getObject() {, +	public Class<? extends Ehcache> getObjectType() {, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, + * Copyright 2002-2009 the original author or authors., + * {@link FactoryBean} that creates a named EHCache {@link net.sf.ehcache.Cache} instance, +public class EhCacheFactoryBean implements FactoryBean<Ehcache>, BeanNameAware, InitializingBean {, +	public Ehcache getObject() {, +	public Class<? extends Ehcache> getObjectType() {, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.java, + * Copyright 2002-2009 the original author or authors., + * {@link FactoryBean} that exposes an EHCache {@link net.sf.ehcache.CacheManager}, + * instance (independent or shared), configured from a specified config location., +public class EhCacheManagerFactoryBean implements FactoryBean<CacheManager>, InitializingBean, DisposableBean {, +	public CacheManager getObject() {, +	public Class<? extends CacheManager> getObjectType() {, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, + * Copyright 2002-2009 the original author or authors., + * {@link FactoryBean} that creates a named EHCache {@link net.sf.ehcache.Cache} instance, +public class EhCacheFactoryBean implements FactoryBean<Ehcache>, BeanNameAware, InitializingBean {, +	public Ehcache getObject() {, +	public Class<? extends Ehcache> getObjectType() {, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.java, + * Copyright 2002-2009 the original author or authors., + * {@link FactoryBean} that exposes an EHCache {@link net.sf.ehcache.CacheManager}, + * instance (independent or shared), configured from a specified config location., +public class EhCacheManagerFactoryBean implements FactoryBean<CacheManager>, InitializingBean, DisposableBean {, +	public CacheManager getObject() {, +	public Class<? extends CacheManager> getObjectType() {, +++ b/org.springframework.context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java, +	private void doStart(Map<String, Lifecycle> lifecycleBeans, String beanName) {, +		Lifecycle bean = lifecycleBeans.get(beanName);, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, + * Copyright 2002-2009 the original author or authors., + * {@link FactoryBean} that creates a named EHCache {@link net.sf.ehcache.Cache} instance, +public class EhCacheFactoryBean implements FactoryBean<Ehcache>, BeanNameAware, InitializingBean {, +	public Ehcache getObject() {, +	public Class<? extends Ehcache> getObjectType() {, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.java, + * Copyright 2002-2009 the original author or authors., + * {@link FactoryBean} that exposes an EHCache {@link net.sf.ehcache.CacheManager}, + * instance (independent or shared), configured from a specified config location., +public class EhCacheManagerFactoryBean implements FactoryBean<CacheManager>, InitializingBean, DisposableBean {, +	public CacheManager getObject() {, +	public Class<? extends CacheManager> getObjectType() {, +++ b/org.springframework.context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java, +	private void doStart(Map<String, Lifecycle> lifecycleBeans, String beanName) {, +		Lifecycle bean = lifecycleBeans.get(beanName);, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java, + * Copyright 2002-2009 the original author or authors., +	/**, +	 * Set the specified PreparedStatement parameter to null,, +	 * respecting database-specific peculiarities., +	 */, +	private static void setNull(PreparedStatement ps, int paramIndex, int sqlType, String typeName), +			throws SQLException {, +, +		// Consider any CharSequence (including StringBuffer and StringBuilder) as a String., +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, + * Copyright 2002-2009 the original author or authors., + * {@link FactoryBean} that creates a named EHCache {@link net.sf.ehcache.Cache} instance, +public class EhCacheFactoryBean implements FactoryBean<Ehcache>, BeanNameAware, InitializingBean {, +	public Ehcache getObject() {, +	public Class<? extends Ehcache> getObjectType() {, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.java, + * Copyright 2002-2009 the original author or authors., + * {@link FactoryBean} that exposes an EHCache {@link net.sf.ehcache.CacheManager}, + * instance (independent or shared), configured from a specified config location., +public class EhCacheManagerFactoryBean implements FactoryBean<CacheManager>, InitializingBean, DisposableBean {, +	public CacheManager getObject() {, +	public Class<? extends CacheManager> getObjectType() {, +++ b/org.springframework.context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java, +	private void doStart(Map<String, Lifecycle> lifecycleBeans, String beanName) {, +		Lifecycle bean = lifecycleBeans.get(beanName);, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java, + * Copyright 2002-2009 the original author or authors., +	/**, +	 * Set the specified PreparedStatement parameter to null,, +	 * respecting database-specific peculiarities., +	 */, +	private static void setNull(PreparedStatement ps, int paramIndex, int sqlType, String typeName), +			throws SQLException {, +, +		// Consider any CharSequence (including StringBuffer and StringBuilder) as a String., +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.java, + * @deprecated as of Spring 3.0, in favor of using the listener-based test context framework, + * ({@link org.springframework.test.context.junit38.AbstractJUnit38SpringContextTests}), +@Deprecated, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, + * Copyright 2002-2009 the original author or authors., + * {@link FactoryBean} that creates a named EHCache {@link net.sf.ehcache.Cache} instance, +public class EhCacheFactoryBean implements FactoryBean<Ehcache>, BeanNameAware, InitializingBean {, +	public Ehcache getObject() {, +	public Class<? extends Ehcache> getObjectType() {, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.java, + * Copyright 2002-2009 the original author or authors., + * {@link FactoryBean} that exposes an EHCache {@link net.sf.ehcache.CacheManager}]