[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractAliasAwareAnnotationAttributeExtractor.java, +	AbstractAliasAwareAnnotationAttributeExtractor(, +			Class<? extends Annotation> annotationType, AnnotatedElement annotatedElement, S source) {, +		String attributeName = attributeMethod.getName();, +			Object defaultValue = AnnotationUtils.getDefaultValue(getAnnotationType(), attributeName);, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractAliasAwareAnnotationAttributeExtractor.java, +	AbstractAliasAwareAnnotationAttributeExtractor(, +			Class<? extends Annotation> annotationType, AnnotatedElement annotatedElement, S source) {, +		String attributeName = attributeMethod.getName();, +			Object defaultValue = AnnotationUtils.getDefaultValue(getAnnotationType(), attributeName);, +++ b/spring-core/src/main/java/org/springframework/core/annotation/MapAnnotationAttributeExtractor.java, +, +				if (Annotation.class.isAssignableFrom(requiredReturnType) &&, +						Map.class.isAssignableFrom(actualReturnType)) {, +					Class<? extends Annotation> nestedAnnotationType =, +							(Class<? extends Annotation>) requiredReturnType;, +				else if (requiredReturnType.isArray() && actualReturnType.isArray() &&, +						Annotation.class.isAssignableFrom(requiredReturnType.getComponentType()) &&, +						Map.class.isAssignableFrom(actualReturnType.getComponentType())) {, +					Class<? extends Annotation> nestedAnnotationType =, +							(Class<? extends Annotation>) requiredReturnType.getComponentType();, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractAliasAwareAnnotationAttributeExtractor.java, +	AbstractAliasAwareAnnotationAttributeExtractor(, +			Class<? extends Annotation> annotationType, AnnotatedElement annotatedElement, S source) {, +		String attributeName = attributeMethod.getName();, +			Object defaultValue = AnnotationUtils.getDefaultValue(getAnnotationType(), attributeName);, +++ b/spring-core/src/main/java/org/springframework/core/annotation/MapAnnotationAttributeExtractor.java, +, +				if (Annotation.class.isAssignableFrom(requiredReturnType) &&, +						Map.class.isAssignableFrom(actualReturnType)) {, +					Class<? extends Annotation> nestedAnnotationType =, +							(Class<? extends Annotation>) requiredReturnType;, +				else if (requiredReturnType.isArray() && actualReturnType.isArray() &&, +						Annotation.class.isAssignableFrom(requiredReturnType.getComponentType()) &&, +						Map.class.isAssignableFrom(actualReturnType.getComponentType())) {, +					Class<? extends Annotation> nestedAnnotationType =, +							(Class<? extends Annotation>) requiredReturnType.getComponentType();, +++ b/spring-core/src/test/java/org/springframework/core/type/AnnotationMetadataTests.java]