[+++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/HandlerMethod.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.core.GenericTypeResolver;, + * <p>The class may be created with a bean instance or with a bean name, + * (e.g. lazy-init bean, prototype bean). Use {@link #createWithResolvedBean()}, + * to obtain a {@code HandlerMethod} instance with a bean instance resolved, + * through the associated {@link BeanFactory}., +			HandlerMethodParameter parameter = new HandlerMethodParameter(i);, +			GenericTypeResolver.resolveParameterType(parameter, this.beanType);, +			result[i] = parameter;, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/HandlerMethod.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.core.GenericTypeResolver;, + * <p>The class may be created with a bean instance or with a bean name, + * (e.g. lazy-init bean, prototype bean). Use {@link #createWithResolvedBean()}, + * to obtain a {@code HandlerMethod} instance with a bean instance resolved, + * through the associated {@link BeanFactory}., +			HandlerMethodParameter parameter = new HandlerMethodParameter(i);, +			GenericTypeResolver.resolveParameterType(parameter, this.beanType);, +			result[i] = parameter;, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/InvocableHandlerMethod.java, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/HandlerMethod.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.core.GenericTypeResolver;, + * <p>The class may be created with a bean instance or with a bean name, + * (e.g. lazy-init bean, prototype bean). Use {@link #createWithResolvedBean()}, + * to obtain a {@code HandlerMethod} instance with a bean instance resolved, + * through the associated {@link BeanFactory}., +			HandlerMethodParameter parameter = new HandlerMethodParameter(i);, +			GenericTypeResolver.resolveParameterType(parameter, this.beanType);, +			result[i] = parameter;, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/InvocableHandlerMethod.java, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/InvocableHandlerMethod.java, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/HandlerMethod.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.core.GenericTypeResolver;, + * <p>The class may be created with a bean instance or with a bean name, + * (e.g. lazy-init bean, prototype bean). Use {@link #createWithResolvedBean()}, + * to obtain a {@code HandlerMethod} instance with a bean instance resolved, + * through the associated {@link BeanFactory}., +			HandlerMethodParameter parameter = new HandlerMethodParameter(i);, +			GenericTypeResolver.resolveParameterType(parameter, this.beanType);, +			result[i] = parameter;, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/InvocableHandlerMethod.java, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/InvocableHandlerMethod.java, +++ b/spring-web/src/main/java/org/springframework/web/method/HandlerMethod.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.core.GenericTypeResolver;, + * <p>The class may be created with a bean instance or with a bean name, + * (e.g. lazy-init bean, prototype bean). Use {@link #createWithResolvedBean()}, + * to obtain a {@code HandlerMethod} instance with a bean instance resolved, + * through the associated {@link BeanFactory}., +			HandlerMethodParameter parameter = new HandlerMethodParameter(i);, +			GenericTypeResolver.resolveParameterType(parameter, this.beanType);, +			result[i] = parameter;, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/HandlerMethod.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.core.GenericTypeResolver;, + * <p>The class may be created with a bean instance or with a bean name, + * (e.g. lazy-init bean, prototype bean). Use {@link #createWithResolvedBean()}, + * to obtain a {@code HandlerMethod} instance with a bean instance resolved, + * through the associated {@link BeanFactory}., +			HandlerMethodParameter parameter = new HandlerMethodParameter(i);, +			GenericTypeResolver.resolveParameterType(parameter, this.beanType);, +			result[i] = parameter;, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/InvocableHandlerMethod.java, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/InvocableHandlerMethod.java, +++ b/spring-web/src/main/java/org/springframework/web/method/HandlerMethod.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.core.GenericTypeResolver;, + * <p>The class may be created with a bean instance or with a bean name, + * (e.g. lazy-init bean, prototype bean). Use {@link #createWithResolvedBean()}, + * to obtain a {@code HandlerMethod} instance with a bean instance resolved, + * through the associated {@link BeanFactory}., +			HandlerMethodParameter parameter = new HandlerMethodParameter(i);, +			GenericTypeResolver.resolveParameterType(parameter, this.beanType);, +			result[i] = parameter;, +++ b/spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java]