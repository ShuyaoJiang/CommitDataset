[+++ b/org.springframework.context/src/main/java/org/springframework/mapping/support/SpelMapper.java, +	public MappingConfiguration addMapping(String sourceExpression, String targetExpression) {, +			sourceExp = expressionParser.parseExpression(sourceExpression);, +			throw new IllegalArgumentException("The mapping source '" + sourceExpression, +			targetExp = expressionParser.parseExpression(targetExpression);, +			throw new IllegalArgumentException("The mapping target '" + sourceExpression, +++ b/org.springframework.context/src/main/java/org/springframework/mapping/support/SpelMapper.java, +	public MappingConfiguration addMapping(String sourceExpression, String targetExpression) {, +			sourceExp = expressionParser.parseExpression(sourceExpression);, +			throw new IllegalArgumentException("The mapping source '" + sourceExpression, +			targetExp = expressionParser.parseExpression(targetExpression);, +			throw new IllegalArgumentException("The mapping target '" + sourceExpression, +++ b/org.springframework.context/src/test/java/org/springframework/mapping/support/SpelMapperTests.java, +	public void mapAutomatic() {, +	public void mapAutomaticWithExplictOverrides() {, +	public void mapSameSourceFieldToMultipleTargets() {, +	@Test, +	public void bean() {, +	}, +, +, +	public static class Employee {, +		, +		private String name;, +		, +		private int age;, +, +		public String getName() {, +			return name;, +		}, +, +		public void setName(String name) {, +			this.name = name;, +		}, +, +		public int getAge() {, +			return age;, +		}, +, +		public void setAge(int age) {, +			this.age = age;, +		}, +		, +	}, +++ b/org.springframework.context/src/main/java/org/springframework/mapping/support/SpelMapper.java, +	public MappingConfiguration addMapping(String sourceExpression, String targetExpression) {, +			sourceExp = expressionParser.parseExpression(sourceExpression);, +			throw new IllegalArgumentException("The mapping source '" + sourceExpression, +			targetExp = expressionParser.parseExpression(targetExpression);, +			throw new IllegalArgumentException("The mapping target '" + sourceExpression, +++ b/org.springframework.context/src/test/java/org/springframework/mapping/support/SpelMapperTests.java, +	public void mapAutomatic() {, +	public void mapAutomaticWithExplictOverrides() {, +	public void mapSameSourceFieldToMultipleTargets() {, +	@Test, +	public void bean() {, +	}, +, +, +	public static class Employee {, +		, +		private String name;, +		, +		private int age;, +, +		public String getName() {, +			return name;, +		}, +, +		public void setName(String name) {, +			this.name = name;, +		}, +, +		public int getAge() {, +			return age;, +		}, +, +		public void setAge(int age) {, +			this.age = age;, +		}, +		, +	}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionFailedException.java, +	private TypeDescriptor targetType;, +	public ConversionFailedException(Class<?> sourceType, TypeDescriptor targetType, Object value, Throwable cause) {, +	public TypeDescriptor getTargetType() {, +	private static String buildDefaultMessage(Object value, Class<?> sourceType, TypeDescriptor targetType, Throwable cause) {, +				ClassUtils.getQualifiedName(targetType.getType()) + "'; reason = '" + cause.getMessage() + "'";, +++ b/org.springframework.context/src/main/java/org/springframework/mapping/support/SpelMapper.java, +	public MappingConfiguration addMapping(String sourceExpression, String targetExpression) {, +			sourceExp = expressionParser.parseExpression(sourceExpression);, +			throw new IllegalArgumentException("The mapping source '" + sourceExpression, +			targetExp = expressionParser.parseExpression(targetExpression);, +			throw new IllegalArgumentException("The mapping target '" + sourceExpression, +++ b/org.springframework.context/src/test/java/org/springframework/mapping/support/SpelMapperTests.java, +	public void mapAutomatic() {, +	public void mapAutomaticWithExplictOverrides() {, +	public void mapSameSourceFieldToMultipleTargets() {, +	@Test, +	public void bean() {]