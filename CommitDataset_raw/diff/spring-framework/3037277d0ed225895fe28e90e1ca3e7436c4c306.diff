[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java, +	 * @param element the annotated element (never {@code null}), +	 * @param annotationType the annotation type to find (never {@code null}), +	 * @return the set of all merged, synthesized {@code Annotations} found,, +	 * or an empty set if none were found, +	 * @param element the annotated element (never {@code null}), +	 * @param annotationType the annotation type to find (never {@code null}), +	 * @return the set of all merged repeatable {@code Annotations} found,, +	 * or an empty set if none were found, +	 * @param element the annotated element (never {@code null}), +	 * @param annotationType the annotation type to find (never {@code null}), +	 * @return the set of all merged repeatable {@code Annotations} found,, +	 * or an empty set if none were found, +	 * @param element the annotated element (never {@code null}), +	 * @param annotationType the annotation type to find (never {@code null}), +	 * @return the set of all merged, synthesized {@code Annotations} found,, +	 * or an empty set if none were found, +	 * @param element the annotated element (never {@code null}), +	 * @param annotationType the annotation type to find (never {@code null}), +	 * @return the set of all merged repeatable {@code Annotations} found,, +	 * or an empty set if none were found, +	 * @param element the annotated element (never {@code null}), +	 * @param annotationType the annotation type to find (never {@code null}), +	 * @return the set of all merged repeatable {@code Annotations} found,, +	 * or an empty set if none were found, +			Class<? extends Annotation> currentAnnotationType = annotation.annotationType();, +			if (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {, +				if (currentAnnotationType == annotationType ||, +						currentAnnotationType.getName().equals(annotationName) ||, +				else if (currentAnnotationType == containerType) {, +			Class<? extends Annotation> currentAnnotationType = annotation.annotationType();, +			if (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {, +				T result = searchWithGetSemantics(currentAnnotationType, annotationType,, +	 * @param element the annotated element (never {@code null}), +					Class<? extends Annotation> currentAnnotationType = annotation.annotationType();, +					if (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {, +						if (currentAnnotationType == annotationType ||, +								currentAnnotationType.getName().equals(annotationName) ||, +								processor.alwaysProcesses()) {, +						else if (currentAnnotationType == containerType) {, +					Class<? extends Annotation> currentAnnotationType = annotation.annotationType();, +					if (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {, +						T result = searchWithFindSemantics(currentAnnotationType, annotationType, annotationName,, +							processor.postProcess(currentAnnotationType, annotation, result);, +	 * @return the container type (never {@code null}), +		 * @return the list of results aggregated by this processor, +		 * (never {@code null} unless {@link #aggregates} returns {@code false}), +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java, +	 * @param element the annotated element (never {@code null}), +	 * @param annotationType the annotation type to find (never {@code null}), +	 * @return the set of all merged, synthesized {@code Annotations} found,, +	 * or an empty set if none were found, +	 * @param element the annotated element (never {@code null}), +	 * @param annotationType the annotation type to find (never {@code null}), +	 * @return the set of all merged repeatable {@code Annotations} found,, +	 * or an empty set if none were found, +	 * @param element the annotated element (never {@code null}), +	 * @param annotationType the annotation type to find (never {@code null}), +	 * @return the set of all merged repeatable {@code Annotations} found,, +	 * or an empty set if none were found, +	 * @param element the annotated element (never {@code null}), +	 * @param annotationType the annotation type to find (never {@code null}), +	 * @return the set of all merged, synthesized {@code Annotations} found,, +	 * or an empty set if none were found, +	 * @param element the annotated element (never {@code null}), +	 * @param annotationType the annotation type to find (never {@code null}), +	 * @return the set of all merged repeatable {@code Annotations} found,, +	 * or an empty set if none were found, +	 * @param element the annotated element (never {@code null}), +	 * @param annotationType the annotation type to find (never {@code null}), +	 * @return the set of all merged repeatable {@code Annotations} found,, +	 * or an empty set if none were found, +			Class<? extends Annotation> currentAnnotationType = annotation.annotationType();, +			if (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {, +				if (currentAnnotationType == annotationType ||, +						currentAnnotationType.getName().equals(annotationName) ||, +				else if (currentAnnotationType == containerType) {, +			Class<? extends Annotation> currentAnnotationType = annotation.annotationType();, +			if (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {, +				T result = searchWithGetSemantics(currentAnnotationType, annotationType,, +	 * @param element the annotated element (never {@code null}), +					Class<? extends Annotation> currentAnnotationType = annotation.annotationType();, +					if (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {, +						if (currentAnnotationType == annotationType ||, +								currentAnnotationType.getName().equals(annotationName) ||, +								processor.alwaysProcesses()) {, +						else if (currentAnnotationType == containerType) {, +					Class<? extends Annotation> currentAnnotationType = annotation.annotationType();, +					if (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {, +						T result = searchWithFindSemantics(currentAnnotationType, annotationType, annotationName,, +							processor.postProcess(currentAnnotationType, annotation, result);, +	 * @return the container type (never {@code null}), +		 * @return the list of results aggregated by this processor, +		 * (never {@code null} unless {@link #aggregates} returns {@code false}), +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, + * javadoc for {@link AnnotatedElement} (in Java 8)., +			for (Annotation declaredAnn : annotatedElement.getDeclaredAnnotations()) {, +				Class<? extends Annotation> declaredType = declaredAnn.annotationType();, +				if (!isInJavaLangAnnotationPackage(declaredType) && visited.add(declaredAnn)) {, +					annotation = findAnnotation((AnnotatedElement) declaredType, annotationType, visited);]