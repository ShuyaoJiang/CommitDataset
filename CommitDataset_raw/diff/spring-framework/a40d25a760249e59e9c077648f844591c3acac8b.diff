[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java, +	@Nullable, +			return null;, +	@Nullable, +			return null;, +	@Nullable, +			return null;, +	 * Return a {@link org.springframework.validation.Validator, +	 * org.springframework.validation.Validators} instance for validating, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java, +	@Nullable, +			return null;, +	@Nullable, +			return null;, +	@Nullable, +			return null;, +	 * Return a {@link org.springframework.validation.Validator, +	 * org.springframework.validation.Validators} instance for validating, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/config/MessageBrokerConfigurationTests.java, +		Object nullBean = context.getBean("userRegistryMessageHandler");, +		assertTrue(nullBean.equals(null));, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java, +	@Nullable, +			return null;, +	@Nullable, +			return null;, +	@Nullable, +			return null;, +	 * Return a {@link org.springframework.validation.Validator, +	 * org.springframework.validation.Validators} instance for validating, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/config/MessageBrokerConfigurationTests.java, +		Object nullBean = context.getBean("userRegistryMessageHandler");, +		assertTrue(nullBean.equals(null));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +	@Nullable, +		if (handlerMapping == null) {, +			return null;, +		}, +	@Nullable, +		if (handlerMapping == null) {, +			return null;, +		}, +	@Nullable, +		return configurer.buildHandlerMapping();, +	 * Override this method to add custom {@link Converter}s and, +	 * {@link Formatter Converter}s and {@link Formatters}., +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java, +	@Nullable, +			return null;, +	@Nullable, +			return null;, +	@Nullable, +			return null;, +	 * Return a {@link org.springframework.validation.Validator, +	 * org.springframework.validation.Validators} instance for validating, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/config/MessageBrokerConfigurationTests.java, +		Object nullBean = context.getBean("userRegistryMessageHandler");, +		assertTrue(nullBean.equals(null));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +	@Nullable, +		if (handlerMapping == null) {, +			return null;, +		}, +	@Nullable, +		if (handlerMapping == null) {, +			return null;, +		}, +	@Nullable, +		return configurer.buildHandlerMapping();, +	 * Override this method to add custom {@link Converter}s and, +	 * {@link Formatter Converter}s and {@link Formatters}., +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupportTests.java, +import static com.fasterxml.jackson.databind.DeserializationFeature.*;, +import static com.fasterxml.jackson.databind.MapperFeature.*;, +import static org.junit.Assert.*;, +	public void emptyHandlerMappings() {, +		Object nullBean = context.getBean("viewControllerHandlerMapping");, +		assertTrue(nullBean.equals(null));, +, +		nullBean = context.getBean("resourceHandlerMapping");, +		assertTrue(nullBean.equals(null));, +, +		nullBean = context.getBean("defaultServletHandlerMapping");, +		assertTrue(nullBean.equals(null));]