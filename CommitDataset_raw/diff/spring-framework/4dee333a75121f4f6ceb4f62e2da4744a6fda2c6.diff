[+++ b/spring-web/src/main/java/org/springframework/http/client/support/BasicAuthorizationInterceptor.java, +	public BasicAuthorizationInterceptor(@Nullable String username, @Nullable String password) {, +		Assert.doesNotContain(username, ":", "Username must not contain a colon");, +		this.username = (username != null ? username : "");, +++ b/spring-web/src/main/java/org/springframework/http/client/support/BasicAuthorizationInterceptor.java, +	public BasicAuthorizationInterceptor(@Nullable String username, @Nullable String password) {, +		Assert.doesNotContain(username, ":", "Username must not contain a colon");, +		this.username = (username != null ? username : "");, +++ b/spring-web/src/test/java/org/springframework/http/client/support/BasicAuthorizationInterceptorTests.java, +	public void createWhenUsernameContainsColonShouldThrowException() {, +		this.thrown.expectMessage("Username must not contain a colon");, +		new BasicAuthorizationInterceptor("username:", "password");, +	public void createWhenUsernameIsNullShouldUseEmptyUsername() throws Exception {, +		BasicAuthorizationInterceptor interceptor = new BasicAuthorizationInterceptor(, +				null, "password");, +		assertEquals("", new DirectFieldAccessor(interceptor).getPropertyValue("username"));]