[+++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +	@Nullable, +	private ServletInputStream inputStream;, +, +	@Nullable, +	private BufferedReader reader;, +, +		if (this.inputStream != null) {, +			return this.inputStream;, +		else if (this.reader != null) {, +			throw new IllegalStateException(, +					"Cannot call getInputStream() after getReader() has already been called for the current request")			;, +, +		this.inputStream = (this.content != null ?, +				new DelegatingServletInputStream(new ByteArrayInputStream(this.content)) :, +				EMPTY_SERVLET_INPUT_STREAM);, +		return this.inputStream;, +		if (this.reader != null) {, +			return this.reader;, +		}, +		else if (this.inputStream != null) {, +			throw new IllegalStateException(, +					"Cannot call getReader() after getInputStream() has already been called for the current request")			;, +		}, +, +			this.reader = new BufferedReader(sourceReader);, +			this.reader = EMPTY_BUFFERED_READER;, +		return this.reader;, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +	@Nullable, +	private ServletInputStream inputStream;, +, +	@Nullable, +	private BufferedReader reader;, +, +		if (this.inputStream != null) {, +			return this.inputStream;, +		else if (this.reader != null) {, +			throw new IllegalStateException(, +					"Cannot call getInputStream() after getReader() has already been called for the current request")			;, +, +		this.inputStream = (this.content != null ?, +				new DelegatingServletInputStream(new ByteArrayInputStream(this.content)) :, +				EMPTY_SERVLET_INPUT_STREAM);, +		return this.inputStream;, +		if (this.reader != null) {, +			return this.reader;, +		}, +		else if (this.inputStream != null) {, +			throw new IllegalStateException(, +					"Cannot call getReader() after getInputStream() has already been called for the current request")			;, +		}, +, +			this.reader = new BufferedReader(sourceReader);, +			this.reader = EMPTY_BUFFERED_READER;, +		return this.reader;, +++ b/spring-test/src/test/java/org/springframework/mock/web/MockHttpServletRequestTests.java, + * @author Av Pinzur, +	@Test  // SPR-16505, +	public void getReaderTwice() throws IOException {, +		byte[] bytes = "body".getBytes(Charset.defaultCharset());, +		request.setContent(bytes);, +		assertSame(request.getReader(), request.getReader());, +	}, +, +	@Test  // SPR-16505, +	public void getInputStreamTwice() throws IOException {, +		byte[] bytes = "body".getBytes(Charset.defaultCharset());, +		request.setContent(bytes);, +		assertSame(request.getInputStream(), request.getInputStream());, +	}, +, +	@Test  // SPR-16499, +	public void getReaderAfterGettingInputStream() throws IOException {, +		exception.expect(IllegalStateException.class);, +		exception.expectMessage(, +				"Cannot call getReader() after getInputStream() has already been called for the current request");, +		request.getInputStream();, +		request.getReader();, +	}, +, +	@Test  // SPR-16499, +	public void getInputStreamAfterGettingReader() throws IOException {, +		exception.expect(IllegalStateException.class);, +		exception.expectMessage(, +				"Cannot call getInputStream() after getReader() has already been called for the current request");, +		request.getReader();, +		request.getInputStream();, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +	@Nullable, +	private ServletInputStream inputStream;, +, +	@Nullable, +	private BufferedReader reader;, +, +		if (this.inputStream != null) {, +			return this.inputStream;, +		else if (this.reader != null) {]