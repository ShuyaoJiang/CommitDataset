[+++ b/src/asciidoc/core-beans.adoc, +the box, the Spring Framework supports seven scopes, five of which are available only if, +| <<beans-factory-scopes-global-session,globalSession>>, +  only valid when used in a Portlet context. Only valid in the context of a web-aware, +, +| <<websocket-stomp-websocket-scope,websocket>>, +| Scopes a single bean definition to the lifecycle of a `WebSocket`. Only valid in, +  the context of a web-aware Spring `ApplicationContext`., +=== request, session, globalSession, application, and websocket scopes, +The `request`, `session`, `globalSession`, `application`, and `websocket` scopes are, +__only__ available if you use a web-aware Spring `ApplicationContext` implementation, +(such as `XmlWebApplicationContext`). If you use these scopes with regular Spring IoC, +containers such as the `ClassPathXmlApplicationContext`, an `IllegalStateException` will, +be thrown complaining about an unknown bean scope., +To support the scoping of beans at the `request`, `session`, `globalSession`,, +`application`, and `websocket` levels (web-scoped beans), some minor initial, +configuration is required before you define your beans. (This initial setup is __not__, +required for the standard scopes, `singleton` and `prototype`.), +The `globalSession` scope is similar to the standard HTTP `Session` scope, +application. Beans defined at the `globalSession` scope are scoped (or bound) to the, +as having `globalSession` scope, the standard HTTP `Session` scope is used, and no, +++ b/src/asciidoc/core-beans.adoc, +the box, the Spring Framework supports seven scopes, five of which are available only if, +| <<beans-factory-scopes-global-session,globalSession>>, +  only valid when used in a Portlet context. Only valid in the context of a web-aware, +, +| <<websocket-stomp-websocket-scope,websocket>>, +| Scopes a single bean definition to the lifecycle of a `WebSocket`. Only valid in, +  the context of a web-aware Spring `ApplicationContext`., +=== request, session, globalSession, application, and websocket scopes, +The `request`, `session`, `globalSession`, `application`, and `websocket` scopes are, +__only__ available if you use a web-aware Spring `ApplicationContext` implementation, +(such as `XmlWebApplicationContext`). If you use these scopes with regular Spring IoC, +containers such as the `ClassPathXmlApplicationContext`, an `IllegalStateException` will, +be thrown complaining about an unknown bean scope., +To support the scoping of beans at the `request`, `session`, `globalSession`,, +`application`, and `websocket` levels (web-scoped beans), some minor initial, +configuration is required before you define your beans. (This initial setup is __not__, +required for the standard scopes, `singleton` and `prototype`.), +The `globalSession` scope is similar to the standard HTTP `Session` scope, +application. Beans defined at the `globalSession` scope are scoped (or bound) to the, +as having `globalSession` scope, the standard HTTP `Session` scope is used, and no, +++ b/src/asciidoc/web-websocket.adoc, +It is also possible to declare a Spring-managed bean in the `websocket` scope., +@Scope(scopeName = "websocket", proxyMode = ScopedProxyMode.TARGET_CLASS)]