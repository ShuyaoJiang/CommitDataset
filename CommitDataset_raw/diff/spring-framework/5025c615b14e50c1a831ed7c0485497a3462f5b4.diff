[+++ b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspect.aj, +import org.springframework.core.annotation.AnnotatedElementUtils;, +		Async async = AnnotatedElementUtils.findMergedAnnotation(method, Async.class);, +			async = AnnotatedElementUtils.findMergedAnnotation(method.getDeclaringClass(), Async.class);, +++ b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspect.aj, +import org.springframework.core.annotation.AnnotatedElementUtils;, +		Async async = AnnotatedElementUtils.findMergedAnnotation(method, Async.class);, +			async = AnnotatedElementUtils.findMergedAnnotation(method.getDeclaringClass(), Async.class);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/BeanAnnotationHelper.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.annotation.AnnotatedElementUtils;, + * @author Juergen Hoeller, +		return AnnotatedElementUtils.hasAnnotation(method, Bean.class);, +		Bean bean = AnnotatedElementUtils.findMergedAnnotation(beanMethod, Bean.class);, +++ b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspect.aj, +import org.springframework.core.annotation.AnnotatedElementUtils;, +		Async async = AnnotatedElementUtils.findMergedAnnotation(method, Async.class);, +			async = AnnotatedElementUtils.findMergedAnnotation(method.getDeclaringClass(), Async.class);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/BeanAnnotationHelper.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.annotation.AnnotatedElementUtils;, + * @author Juergen Hoeller, +		return AnnotatedElementUtils.hasAnnotation(method, Bean.class);, +		Bean bean = AnnotatedElementUtils.findMergedAnnotation(beanMethod, Bean.class);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, +import org.springframework.core.annotation.AnnotatedElementUtils;, +			Scope scope = AnnotatedElementUtils.findMergedAnnotation(beanMethod, Scope.class);, +++ b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspect.aj, +import org.springframework.core.annotation.AnnotatedElementUtils;, +		Async async = AnnotatedElementUtils.findMergedAnnotation(method, Async.class);, +			async = AnnotatedElementUtils.findMergedAnnotation(method.getDeclaringClass(), Async.class);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/BeanAnnotationHelper.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.annotation.AnnotatedElementUtils;, + * @author Juergen Hoeller, +		return AnnotatedElementUtils.hasAnnotation(method, Bean.class);, +		Bean bean = AnnotatedElementUtils.findMergedAnnotation(beanMethod, Bean.class);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, +import org.springframework.core.annotation.AnnotatedElementUtils;, +			Scope scope = AnnotatedElementUtils.findMergedAnnotation(beanMethod, Scope.class);, +++ b/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java, + * Copyright 2002-2016 the original author or authors., +		return AnnotatedElementUtils.findMergedAnnotation(this.method, annotationType);, +++ b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspect.aj, +import org.springframework.core.annotation.AnnotatedElementUtils;, +		Async async = AnnotatedElementUtils.findMergedAnnotation(method, Async.class);, +			async = AnnotatedElementUtils.findMergedAnnotation(method.getDeclaringClass(), Async.class);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/BeanAnnotationHelper.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.annotation.AnnotatedElementUtils;, + * @author Juergen Hoeller, +		return AnnotatedElementUtils.hasAnnotation(method, Bean.class);, +		Bean bean = AnnotatedElementUtils.findMergedAnnotation(beanMethod, Bean.class);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, +import org.springframework.core.annotation.AnnotatedElementUtils;, +			Scope scope = AnnotatedElementUtils.findMergedAnnotation(beanMethod, Scope.class);, +++ b/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java, + * Copyright 2002-2016 the original author or authors., +		return AnnotatedElementUtils.findMergedAnnotation(this.method, annotationType);, +++ b/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.annotation.AnnotatedElementUtils;, +							return AnnotatedElementUtils.findMergedAnnotation(method, EventListener.class);, +++ b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspect.aj, +import org.springframework.core.annotation.AnnotatedElementUtils;, +		Async async = AnnotatedElementUtils.findMergedAnnotation(method, Async.class);, +			async = AnnotatedElementUtils.findMergedAnnotation(method.getDeclaringClass(), Async.class);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/BeanAnnotationHelper.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.annotation.AnnotatedElementUtils;, + * @author Juergen Hoeller, +		return AnnotatedElementUtils.hasAnnotation(method, Bean.class);, +		Bean bean = AnnotatedElementUtils.findMergedAnnotation(beanMethod, Bean.class);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, +import org.springframework.core.annotation.AnnotatedElementUtils;, +			Scope scope = AnnotatedElementUtils.findMergedAnnotation(beanMethod, Scope.class);, +++ b/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java, + * Copyright 2002-2016 the original author or authors., +		return AnnotatedElementUtils.findMergedAnnotation(this.method, annotationType);, +++ b/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.annotation.AnnotatedElementUtils;, +							return AnnotatedElementUtils.findMergedAnnotation(method, EventListener.class);, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/AnnotationAsyncExecutionInterceptor.java, +import org.springframework.core.annotation.AnnotatedElementUtils;, +		Async async = AnnotatedElementUtils.findMergedAnnotation(method, Async.class);, +			async = AnnotatedElementUtils.findMergedAnnotation(method.getDeclaringClass(), Async.class);, +++ b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspect.aj, +import org.springframework.core.annotation.AnnotatedElementUtils;, +		Async async = AnnotatedElementUtils.findMergedAnnotation(method, Async.class);, +			async = AnnotatedElementUtils.findMergedAnnotation(method.getDeclaringClass(), Async.class);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/BeanAnnotationHelper.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.annotation.AnnotatedElementUtils;, + * @author Juergen Hoeller, +		return AnnotatedElementUtils.hasAnnotation(method, Bean.class);, +		Bean bean = AnnotatedElementUtils.findMergedAnnotation(beanMethod, Bean.class);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, +import org.springframework.core.annotation.AnnotatedElementUtils;, +			Scope scope = AnnotatedElementUtils.findMergedAnnotation(beanMethod, Scope.class);]