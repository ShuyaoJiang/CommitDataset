[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +import org.springframework.web.servlet.view.InternalResourceViewResolver;, +	 * <p>An {@code InternalResourceViewResolver} is added by default if no other, +	 * resolvers are configured., +	 *, +		List<ViewResolver> viewResolvers = registry.getViewResolvers();, +		if (viewResolvers.isEmpty()) {, +			viewResolvers.add(new InternalResourceViewResolver());, +		}, +, +		composite.setViewResolvers(viewResolvers);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +import org.springframework.web.servlet.view.InternalResourceViewResolver;, +	 * <p>An {@code InternalResourceViewResolver} is added by default if no other, +	 * resolvers are configured., +	 *, +		List<ViewResolver> viewResolvers = registry.getViewResolvers();, +		if (viewResolvers.isEmpty()) {, +			viewResolvers.add(new InternalResourceViewResolver());, +		}, +, +		composite.setViewResolvers(viewResolvers);, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupportTests.java, +import org.springframework.web.servlet.view.InternalResourceViewResolver;, +		assertEquals(1, resolvers.size());, +		assertEquals(InternalResourceViewResolver.class, resolvers.get(0).getClass());]