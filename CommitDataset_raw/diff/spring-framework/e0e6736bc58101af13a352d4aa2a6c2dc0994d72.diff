[+++ b/spring-context/src/main/java/org/springframework/context/i18n/SimpleTimeZoneAwareLocaleContext.java, +	@Override, +++ b/spring-context/src/main/java/org/springframework/context/i18n/SimpleTimeZoneAwareLocaleContext.java, +	@Override, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerWebExchange.java, +import org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver;, +				ServerCodecConfigurer.create(), new AcceptHeaderLocaleContextResolver()));, +++ b/spring-context/src/main/java/org/springframework/context/i18n/SimpleTimeZoneAwareLocaleContext.java, +	@Override, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerWebExchange.java, +import org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver;, +				ServerCodecConfigurer.create(), new AcceptHeaderLocaleContextResolver()));, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchange.java, +import org.springframework.context.i18n.LocaleContext;, +import org.springframework.web.server.i18n.LocaleContextResolver;, +	 * Return the {@link LocaleContext} using the configured {@link LocaleContextResolver}., +	 */, +	LocaleContext getLocaleContext();, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/i18n/SimpleTimeZoneAwareLocaleContext.java, +	@Override, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerWebExchange.java, +import org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver;, +				ServerCodecConfigurer.create(), new AcceptHeaderLocaleContextResolver()));, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchange.java, +import org.springframework.context.i18n.LocaleContext;, +import org.springframework.web.server.i18n.LocaleContextResolver;, +	 * Return the {@link LocaleContext} using the configured {@link LocaleContextResolver}., +	 */, +	LocaleContext getLocaleContext();, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchangeDecorator.java, +import org.springframework.context.i18n.LocaleContext;, +	public LocaleContext getLocaleContext() {, +		return getDelegate().getLocaleContext();, +	}, +, +	@Override, +++ b/spring-context/src/main/java/org/springframework/context/i18n/SimpleTimeZoneAwareLocaleContext.java, +	@Override, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerWebExchange.java, +import org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver;, +				ServerCodecConfigurer.create(), new AcceptHeaderLocaleContextResolver()));, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchange.java, +import org.springframework.context.i18n.LocaleContext;, +import org.springframework.web.server.i18n.LocaleContextResolver;, +	 * Return the {@link LocaleContext} using the configured {@link LocaleContextResolver}., +	 */, +	LocaleContext getLocaleContext();, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchangeDecorator.java, +import org.springframework.context.i18n.LocaleContext;, +	public LocaleContext getLocaleContext() {, +		return getDelegate().getLocaleContext();, +	}, +, +	@Override, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/DefaultServerWebExchange.java, +import org.springframework.context.i18n.LocaleContext;, +import org.springframework.web.server.i18n.LocaleContextResolver;, +	private final LocaleContextResolver localeContextResolver;, +, +			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer, LocaleContextResolver localeContextResolver) {, +		Assert.notNull(localeContextResolver, "'localeContextResolver' is required");, +		this.localeContextResolver = localeContextResolver;, +	public LocaleContext getLocaleContext() {, +		return this.localeContextResolver.resolveLocaleContext(this);, +	}, +, +	@Override, +++ b/spring-context/src/main/java/org/springframework/context/i18n/SimpleTimeZoneAwareLocaleContext.java, +	@Override, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerWebExchange.java, +import org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver;, +				ServerCodecConfigurer.create(), new AcceptHeaderLocaleContextResolver()));, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchange.java, +import org.springframework.context.i18n.LocaleContext;, +import org.springframework.web.server.i18n.LocaleContextResolver;, +	 * Return the {@link LocaleContext} using the configured {@link LocaleContextResolver}., +	 */, +	LocaleContext getLocaleContext();, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchangeDecorator.java, +import org.springframework.context.i18n.LocaleContext;, +	public LocaleContext getLocaleContext() {, +		return getDelegate().getLocaleContext();, +	}, +, +	@Override, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/DefaultServerWebExchange.java, +import org.springframework.context.i18n.LocaleContext;, +import org.springframework.web.server.i18n.LocaleContextResolver;, +	private final LocaleContextResolver localeContextResolver;, +, +			WebSessionManager sessionManager, ServerCodecConfigurer codecConfigurer, LocaleContextResolver localeContextResolver) {, +		Assert.notNull(localeContextResolver, "'localeContextResolver' is required");]