[+++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +, +		@SuppressWarnings("unused"), +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +, +		@SuppressWarnings("unused"), +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +import static org.hamcrest.Matchers.instanceOf;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotSame;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertThat;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +import org.springframework.tests.sample.beans.ITestBean;, +import org.springframework.tests.sample.beans.TestBean;, +		assertThat(proxy, instanceOf(Lockable.class));, +		assertThat(modifiable, instanceOf(Modifiable.class));, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +, +		@SuppressWarnings("unused"), +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +import static org.hamcrest.Matchers.instanceOf;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotSame;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertThat;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +import org.springframework.tests.sample.beans.ITestBean;, +import org.springframework.tests.sample.beans.TestBean;, +		assertThat(proxy, instanceOf(Lockable.class));, +		assertThat(modifiable, instanceOf(Modifiable.class));, +++ b/spring-aop/src/test/java/org/springframework/aop/framework/adapter/ThrowsAdviceInterceptorTests.java, +	static class MyThrowsHandler extends MethodCounter implements ThrowsAdvice {, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +, +		@SuppressWarnings("unused"), +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +import static org.hamcrest.Matchers.instanceOf;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotSame;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertThat;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +import org.springframework.tests.sample.beans.ITestBean;, +import org.springframework.tests.sample.beans.TestBean;, +		assertThat(proxy, instanceOf(Lockable.class));, +		assertThat(modifiable, instanceOf(Modifiable.class));, +++ b/spring-aop/src/test/java/org/springframework/aop/framework/adapter/ThrowsAdviceInterceptorTests.java, +	static class MyThrowsHandler extends MethodCounter implements ThrowsAdvice {, +++ b/spring-aop/src/test/java/org/springframework/aop/support/DelegatingIntroductionInterceptorTests.java, +import static org.hamcrest.Matchers.instanceOf;, +import static org.junit.Assert.assertThat;, +		assertThat(ts, instanceOf(TimeStamped.class));, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +, +		@SuppressWarnings("unused"), +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +import static org.hamcrest.Matchers.instanceOf;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotSame;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertThat;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +import org.springframework.tests.sample.beans.ITestBean;, +import org.springframework.tests.sample.beans.TestBean;, +		assertThat(proxy, instanceOf(Lockable.class));, +		assertThat(modifiable, instanceOf(Modifiable.class));, +++ b/spring-aop/src/test/java/org/springframework/aop/framework/adapter/ThrowsAdviceInterceptorTests.java, +	static class MyThrowsHandler extends MethodCounter implements ThrowsAdvice {, +++ b/spring-aop/src/test/java/org/springframework/aop/support/DelegatingIntroductionInterceptorTests.java, +import static org.hamcrest.Matchers.instanceOf;, +import static org.junit.Assert.assertThat;, +		assertThat(ts, instanceOf(TimeStamped.class));, +++ b/spring-aspects/src/main/java/org/springframework/transaction/aspectj/AbstractTransactionAspect.aj, +		createTransactionIfNecessary(method, txObject.getClass());, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +, +		@SuppressWarnings("unused"), +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +import static org.hamcrest.Matchers.instanceOf;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotSame;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertThat;]