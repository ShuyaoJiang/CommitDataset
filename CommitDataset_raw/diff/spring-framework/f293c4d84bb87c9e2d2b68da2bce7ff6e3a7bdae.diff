[+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * <li>Request and/or response objects from the Servlet API., + * <li>{@link PathVariable @PathVariable} annotated parameters, + * <li>{@link MatrixVariable @MatrixVariable} annotated parameters, + * <li>{@link RequestBody @RequestBody} annotated parameters, + * <li>{@link RequestPart @RequestPart} annotated parameters for access to the content, + * for access to the Servlet request HTTP headers and contents., + * <li>{@link org.springframework.web.servlet.mvc.support.RedirectAttributes},, + * to specify the exact set of attributes, + * <li>{@code ModelAndView} object (from Servlet MVC),, + * <li>{@link org.springframework.ui.Model Model} object, with the view name implicitly, + * <li>{@link java.util.Map} object for exposing a model,, + * <li>{@link org.springframework.web.servlet.View} object, with the, + * <li>{@link String} value which is interpreted as view name,, + * <li>{@link ResponseBody @ResponseBody} annotated methods, + * <li>{@link org.springframework.http.HttpEntity HttpEntity&lt;?&gt;} or, + * to access to the Servlet response HTTP headers and contents., + * <li>{@link org.springframework.http.HttpHeaders HttpHeaders} object to, + * <li>{@link Callable} -- async computation in a Spring MVC managed thread.</li>, + * <li>{@link org.springframework.web.context.request.async.DeferredResult DeferredResult} --, + * async result produced later from an application managed, or any thread., + * <li>{@link org.springframework.util.concurrent.ListenableFuture ListenableFuture}, + * alternative, equivalent to {@code DeferredResult}.</li>, + * <li>{@link java.util.concurrent.CompletionStage CompletionStage} and, + * {@link java.util.concurrent.CompletableFuture CompletableFuture} --, + * alternative, equivalent to {@code DeferredResult}.</li>, + * <li>{@link org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter} --, + * {@code @ResponseBody}-style, asynchronous writing of a stream of Objects to the, + * response body.</li>, + * <li>{@link org.springframework.web.servlet.mvc.method.annotation.SseEmitter} --, + * variant of {@code ResponseBodyEmitter} for a Server-Sent Events formatted stream.</li>, + * <li>{@link org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBody} --, + * async writing directly to the response body {@link java.io.OutputStream}.</li>, + * <li>Reactive types (e.g. Reactor {@code Flux}/{@code Mono}, RxJava 1 &amp; 2, + * {@code Observable}/{@code Single}, or others via, + * {@link org.springframework.core.ReactiveAdapterRegistry ReactiveAdapterRegistry}) --, + * alternatives, equivalent to {@code DeferredResult} or {@code ResponseBodyEmitter}, + * and {@code SseEmitter} depending also on the requested media types (e.g., + * "text/event-stream", "application/json+stream").</li>, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * <li>Request and/or response objects from the Servlet API., + * <li>{@link PathVariable @PathVariable} annotated parameters, + * <li>{@link MatrixVariable @MatrixVariable} annotated parameters, + * <li>{@link RequestBody @RequestBody} annotated parameters, + * <li>{@link RequestPart @RequestPart} annotated parameters for access to the content, + * for access to the Servlet request HTTP headers and contents., + * <li>{@link org.springframework.web.servlet.mvc.support.RedirectAttributes},, + * to specify the exact set of attributes, + * <li>{@code ModelAndView} object (from Servlet MVC),, + * <li>{@link org.springframework.ui.Model Model} object, with the view name implicitly, + * <li>{@link java.util.Map} object for exposing a model,, + * <li>{@link org.springframework.web.servlet.View} object, with the, + * <li>{@link String} value which is interpreted as view name,, + * <li>{@link ResponseBody @ResponseBody} annotated methods, + * <li>{@link org.springframework.http.HttpEntity HttpEntity&lt;?&gt;} or, + * to access to the Servlet response HTTP headers and contents., + * <li>{@link org.springframework.http.HttpHeaders HttpHeaders} object to, + * <li>{@link Callable} -- async computation in a Spring MVC managed thread.</li>, + * <li>{@link org.springframework.web.context.request.async.DeferredResult DeferredResult} --, + * async result produced later from an application managed, or any thread., + * <li>{@link org.springframework.util.concurrent.ListenableFuture ListenableFuture}, + * alternative, equivalent to {@code DeferredResult}.</li>, + * <li>{@link java.util.concurrent.CompletionStage CompletionStage} and, + * {@link java.util.concurrent.CompletableFuture CompletableFuture} --, + * alternative, equivalent to {@code DeferredResult}.</li>, + * <li>{@link org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter} --, + * {@code @ResponseBody}-style, asynchronous writing of a stream of Objects to the, + * response body.</li>, + * <li>{@link org.springframework.web.servlet.mvc.method.annotation.SseEmitter} --, + * variant of {@code ResponseBodyEmitter} for a Server-Sent Events formatted stream.</li>, + * <li>{@link org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBody} --, + * async writing directly to the response body {@link java.io.OutputStream}.</li>, + * <li>Reactive types (e.g. Reactor {@code Flux}/{@code Mono}, RxJava 1 &amp; 2, + * {@code Observable}/{@code Single}, or others via, + * {@link org.springframework.core.ReactiveAdapterRegistry ReactiveAdapterRegistry}) --, + * alternatives, equivalent to {@code DeferredResult} or {@code ResponseBodyEmitter}, + * and {@code SseEmitter} depending also on the requested media types (e.g., + * "text/event-stream", "application/json+stream").</li>, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/AsyncSupportConfigurer.java, +	 * <p>As of 5.0 this executor is also used when a controller returns a reactive, +	 * type that does streaming (e.g. "text/event-stream" or, +	 * "application/stream+json") for the blocking writes to the, +	 * {@link javax.servlet.ServletOutputStream}., +	 *, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * <li>Request and/or response objects from the Servlet API., + * <li>{@link PathVariable @PathVariable} annotated parameters, + * <li>{@link MatrixVariable @MatrixVariable} annotated parameters, + * <li>{@link RequestBody @RequestBody} annotated parameters, + * <li>{@link RequestPart @RequestPart} annotated parameters for access to the content, + * for access to the Servlet request HTTP headers and contents., + * <li>{@link org.springframework.web.servlet.mvc.support.RedirectAttributes},, + * to specify the exact set of attributes, + * <li>{@code ModelAndView} object (from Servlet MVC),, + * <li>{@link org.springframework.ui.Model Model} object, with the view name implicitly, + * <li>{@link java.util.Map} object for exposing a model,, + * <li>{@link org.springframework.web.servlet.View} object, with the, + * <li>{@link String} value which is interpreted as view name,, + * <li>{@link ResponseBody @ResponseBody} annotated methods, + * <li>{@link org.springframework.http.HttpEntity HttpEntity&lt;?&gt;} or]