[+++ b/spring-test/src/test/java/org/springframework/test/context/BootstrapUtilsTests.java, + * Copyright 2002-2018 the original author or authors., +	public void resolveTestContextBootstrapperWithEmptyBootstrapWithAnnotation() {, +		BootstrapContext bootstrapContext = BootstrapTestUtils.buildBootstrapContext(EmptyBootstrapWithAnnotationClass.class, delegate);, +		, +		exception.expect(IllegalStateException.class);, +		exception.expectMessage("Specify @BootstrapWith's 'value' attribute");, +		, +		resolveTestContextBootstrapper(bootstrapContext);, +	}, +	, +	@Test, +	public void resolveTestContextBootstrapperWithDoubleMetaBootstrapWithAnnotations() {, +		BootstrapContext bootstrapContext = BootstrapTestUtils.buildBootstrapContext(, +			DoubleMetaAnnotatedBootstrapWithAnnotationClass.class, delegate);, +, +		exception.expect(IllegalStateException.class);, +		exception.expectMessage("Configuration error: found multiple declarations of @BootstrapWith");, +		exception.expectMessage(FooBootstrapper.class.getName());, +		exception.expectMessage(BarBootstrapper.class.getName());, +, +		resolveTestContextBootstrapper(bootstrapContext);, +	}, +, +	@Test, +	public void resolveTestContextBootstrapperWithDuplicatingMetaBootstrapWithAnnotations() {, +		assertBootstrapper(DuplicateMetaAnnotatedBootstrapWithAnnotationClass.class, FooBootstrapper.class);, +	@BootstrapWith(FooBootstrapper.class), +	@Retention(RetentionPolicy.RUNTIME), +	static @interface BootWithFooAgain {}, +, +	// Invalid, +	// Invalid, +	@BootWithBar, +	@BootWithFoo, +	static class DoubleMetaAnnotatedBootstrapWithAnnotationClass {}, +	, +	static class NonAnnotatedClass {}, +, +	@BootWithFooAgain, +	static class DuplicateMetaAnnotatedBootstrapWithAnnotationClass {}]