[+++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/HttpHandlerConnectorTests.java, +			response.addCookie(cookie);, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/HttpHandlerConnectorTests.java, +			response.addCookie(cookie);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +	public void addCookie(ResponseCookie cookie) {, +		Assert.notNull(cookie, "'cookie' must not be null");, +, +		if (this.state.get() == State.COMMITTED) {, +			throw new IllegalStateException("Can't add the cookie " + cookie +, +					"because the HTTP response has already been committed");, +		}, +		else {, +			getCookies().add(cookie.getName(), cookie);, +		}, +	}, +, +	@Override, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/HttpHandlerConnectorTests.java, +			response.addCookie(cookie);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +	public void addCookie(ResponseCookie cookie) {, +		Assert.notNull(cookie, "'cookie' must not be null");, +, +		if (this.state.get() == State.COMMITTED) {, +			throw new IllegalStateException("Can't add the cookie " + cookie +, +					"because the HTTP response has already been committed");, +		}, +		else {, +			getCookies().add(cookie.getName(), cookie);, +		}, +	}, +, +	@Override, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpResponse.java, + * Copyright 2002-2017 the original author or authors., +	 * Add the given {@code ResponseCookie}., +	 * @param cookie the cookie to add, +	 * @throws IllegalStateException if the response has already been committed, +	 */, +	void addCookie(ResponseCookie cookie);, +, +	/**, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/HttpHandlerConnectorTests.java, +			response.addCookie(cookie);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +	public void addCookie(ResponseCookie cookie) {, +		Assert.notNull(cookie, "'cookie' must not be null");, +, +		if (this.state.get() == State.COMMITTED) {, +			throw new IllegalStateException("Can't add the cookie " + cookie +, +					"because the HTTP response has already been committed");, +		}, +		else {, +			getCookies().add(cookie.getName(), cookie);, +		}, +	}, +, +	@Override, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpResponse.java, + * Copyright 2002-2017 the original author or authors., +	 * Add the given {@code ResponseCookie}., +	 * @param cookie the cookie to add, +	 * @throws IllegalStateException if the response has already been committed, +	 */, +	void addCookie(ResponseCookie cookie);, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpResponseDecorator.java, + * Copyright 2002-2017 the original author or authors., +	public void addCookie(ResponseCookie cookie) {, +		getDelegate().addCookie(cookie);, +	}, +, +	@Override]