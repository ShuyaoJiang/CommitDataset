[+++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, +import java.text.ParseException;, +	public long getDateHeader(String name) {, +		SimpleDateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT, Locale.US);, +		dateFormat.setTimeZone(GMT);, +		try {, +			return dateFormat.parse(getHeader(name)).getTime();, +		} catch (ParseException exception) {, +			throw new IllegalArgumentException(, +					"Value for header '" + name + "' is not a valid Date: " + getHeader(name));, +		}, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, +import java.text.ParseException;, +	public long getDateHeader(String name) {, +		SimpleDateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT, Locale.US);, +		dateFormat.setTimeZone(GMT);, +		try {, +			return dateFormat.parse(getHeader(name)).getTime();, +		} catch (ParseException exception) {, +			throw new IllegalArgumentException(, +					"Value for header '" + name + "' is not a valid Date: " + getHeader(name));, +		}, +	}, +, +++ b/spring-test/src/test/java/org/springframework/mock/web/MockHttpServletResponseTests.java, + * @author Brian Clozel, +	@Test, +	public void getDateHeader() {, +		long time = 1437472800000L;, +		response.setDateHeader("Last-Modified", time);, +		assertEquals("Tue, 21 Jul 2015 10:00:00 GMT", response.getHeader("Last-Modified"));, +		assertEquals(time, response.getDateHeader("Last-Modified"));, +	}, +, +	@Test(expected = IllegalArgumentException.class), +	public void getInvalidDateHeader() {, +		response.setHeader("Last-Modified", "invalid");, +		assertEquals("invalid", response.getHeader("Last-Modified"));, +		response.getDateHeader("Last-Modified");, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, +import java.text.ParseException;, +	public long getDateHeader(String name) {, +		SimpleDateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT, Locale.US);, +		dateFormat.setTimeZone(GMT);, +		try {, +			return dateFormat.parse(getHeader(name)).getTime();, +		} catch (ParseException exception) {, +			throw new IllegalArgumentException(, +					"Value for header '" + name + "' is not a valid Date: " + getHeader(name));, +		}, +	}, +, +++ b/spring-test/src/test/java/org/springframework/mock/web/MockHttpServletResponseTests.java, + * @author Brian Clozel, +	@Test, +	public void getDateHeader() {, +		long time = 1437472800000L;, +		response.setDateHeader("Last-Modified", time);, +		assertEquals("Tue, 21 Jul 2015 10:00:00 GMT", response.getHeader("Last-Modified"));, +		assertEquals(time, response.getDateHeader("Last-Modified"));, +	}, +, +	@Test(expected = IllegalArgumentException.class), +	public void getInvalidDateHeader() {, +		response.setHeader("Last-Modified", "invalid");, +		assertEquals("invalid", response.getHeader("Last-Modified"));, +		response.getDateHeader("Last-Modified");, +	}, +, +++ b/src/asciidoc/whats-new.adoc, +* `MockHttpServletRequest` and `MockHttpServletResponse` now better supports, +  date header formatting `getDateHeader` and `setDateHeader` methods.]