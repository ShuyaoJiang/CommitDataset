[+++ b/spring-web/src/main/java/org/springframework/web/context/request/async/DeferredResult.java, +	 * <p>By default not set in which case the default configured in the MVC, +	 * Java Config or the MVC namespace is used, or if that's not set, then the, +	 * timeout depends on the default of the underlying server., +	public DeferredResult(Long timeout) {, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/DeferredResult.java, +	 * <p>By default not set in which case the default configured in the MVC, +	 * Java Config or the MVC namespace is used, or if that's not set, then the, +	 * timeout depends on the default of the underlying server., +	public DeferredResult(Long timeout) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter.java, +	private final Long timeout;, +, +	 * Create a new ResponseBodyEmitter instance., +	 */, +	public ResponseBodyEmitter() {, +		this.timeout = null;, +	}, +, +	/**, +	 * Create a ResponseBodyEmitter with a custom timeout value., +	 * <p>By default not set in which case the default configured in the MVC, +	 * Java Config or the MVC namespace is used, or if that's not set, then the, +	 * timeout depends on the default of the underlying server., +	 * @param timeout timeout value in milliseconds, +	 */, +	public ResponseBodyEmitter(Long timeout) {, +		this.timeout = timeout;, +	}, +, +, +	/**, +	 * Return the configured timeout value, if any., +	 */, +	public Long getTimeout() {, +		return this.timeout;, +	}, +, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/DeferredResult.java, +	 * <p>By default not set in which case the default configured in the MVC, +	 * Java Config or the MVC namespace is used, or if that's not set, then the, +	 * timeout depends on the default of the underlying server., +	public DeferredResult(Long timeout) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter.java, +	private final Long timeout;, +, +	 * Create a new ResponseBodyEmitter instance., +	 */, +	public ResponseBodyEmitter() {, +		this.timeout = null;, +	}, +, +	/**, +	 * Create a ResponseBodyEmitter with a custom timeout value., +	 * <p>By default not set in which case the default configured in the MVC, +	 * Java Config or the MVC namespace is used, or if that's not set, then the, +	 * timeout depends on the default of the underlying server., +	 * @param timeout timeout value in milliseconds, +	 */, +	public ResponseBodyEmitter(Long timeout) {, +		this.timeout = timeout;, +	}, +, +, +	/**, +	 * Return the configured timeout value, if any., +	 */, +	public Long getTimeout() {, +		return this.timeout;, +	}, +, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitterReturnValueHandler.java, +		DeferredResult<?> deferredResult = new DeferredResult<Object>(emitter.getTimeout());, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/DeferredResult.java, +	 * <p>By default not set in which case the default configured in the MVC, +	 * Java Config or the MVC namespace is used, or if that's not set, then the, +	 * timeout depends on the default of the underlying server., +	public DeferredResult(Long timeout) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter.java, +	private final Long timeout;, +, +	 * Create a new ResponseBodyEmitter instance., +	 */, +	public ResponseBodyEmitter() {, +		this.timeout = null;, +	}, +, +	/**, +	 * Create a ResponseBodyEmitter with a custom timeout value., +	 * <p>By default not set in which case the default configured in the MVC, +	 * Java Config or the MVC namespace is used, or if that's not set, then the, +	 * timeout depends on the default of the underlying server., +	 * @param timeout timeout value in milliseconds, +	 */, +	public ResponseBodyEmitter(Long timeout) {, +		this.timeout = timeout;]