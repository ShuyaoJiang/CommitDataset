[+++ b/spring-context/src/main/java/org/springframework/jmx/export/annotation/AnnotationJmxAttributeSource.java, +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.beans.factory.BeanFactoryAware;, +import org.springframework.beans.factory.config.ConfigurableBeanFactory;, +public class AnnotationJmxAttributeSource implements JmxAttributeSource, BeanFactoryAware {, +	public void setBeanFactory(final BeanFactory beanFactory) {, +		if (beanFactory instanceof ConfigurableBeanFactory) {, +			// Not using EmbeddedValueResolverAware in order to avoid a spring-context dependency:, +			// ConfigurableBeanFactory and its resolveEmbeddedValue live in the spring-beans module., +			this.embeddedValueResolver = new StringValueResolver() {, +				public String resolveStringValue(String strVal) {, +					return ((ConfigurableBeanFactory) beanFactory).resolveEmbeddedValue(strVal);, +				}, +			};, +		}, +++ b/spring-context/src/main/java/org/springframework/jmx/export/annotation/AnnotationJmxAttributeSource.java, +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.beans.factory.BeanFactoryAware;, +import org.springframework.beans.factory.config.ConfigurableBeanFactory;, +public class AnnotationJmxAttributeSource implements JmxAttributeSource, BeanFactoryAware {, +	public void setBeanFactory(final BeanFactory beanFactory) {, +		if (beanFactory instanceof ConfigurableBeanFactory) {, +			// Not using EmbeddedValueResolverAware in order to avoid a spring-context dependency:, +			// ConfigurableBeanFactory and its resolveEmbeddedValue live in the spring-beans module., +			this.embeddedValueResolver = new StringValueResolver() {, +				public String resolveStringValue(String strVal) {, +					return ((ConfigurableBeanFactory) beanFactory).resolveEmbeddedValue(strVal);, +				}, +			};, +		}, +++ b/spring-context/src/main/java/org/springframework/jmx/export/annotation/AnnotationMBeanExporter.java, +import org.springframework.beans.factory.BeanFactory;, +public class AnnotationMBeanExporter extends MBeanExporter {, +	@Override, +	public void setBeanFactory(BeanFactory beanFactory) {, +		super.setBeanFactory(beanFactory);, +		this.annotationSource.setBeanFactory(beanFactory);]