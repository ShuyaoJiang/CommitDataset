[+++ b/spring-aop/src/main/java/org/springframework/aop/support/MethodMatchers.java, +			// Allow for matching with regular UnionMethodMatcher by providing same hash..., +			return super.hashCode();, +++ b/spring-aop/src/main/java/org/springframework/aop/support/MethodMatchers.java, +			// Allow for matching with regular UnionMethodMatcher by providing same hash..., +			return super.hashCode();, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +, +++ b/spring-aop/src/main/java/org/springframework/aop/support/MethodMatchers.java, +			// Allow for matching with regular UnionMethodMatcher by providing same hash..., +			return super.hashCode();, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +, +++ b/spring-web/src/main/java/org/springframework/http/ContentDisposition.java, +++ b/spring-aop/src/main/java/org/springframework/aop/support/MethodMatchers.java, +			// Allow for matching with regular UnionMethodMatcher by providing same hash..., +			return super.hashCode();, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +, +++ b/spring-web/src/main/java/org/springframework/http/ContentDisposition.java, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/GzipResourceResolver.java, + * @deprecated as of 5.1, in favor of using {@link EncodedResourceResolver}, +			HttpHeaders headers = (this.original instanceof HttpResource ?, +					((HttpResource) this.original).getResponseHeaders() : new HttpHeaders());, +++ b/spring-aop/src/main/java/org/springframework/aop/support/MethodMatchers.java, +			// Allow for matching with regular UnionMethodMatcher by providing same hash..., +			return super.hashCode();, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +, +++ b/spring-web/src/main/java/org/springframework/http/ContentDisposition.java, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/GzipResourceResolver.java, + * @deprecated as of 5.1, in favor of using {@link EncodedResourceResolver}, +			HttpHeaders headers = (this.original instanceof HttpResource ?, +					((HttpResource) this.original).getResponseHeaders() : new HttpHeaders());, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/VersionResourceResolver.java, +			HttpHeaders headers = (this.original instanceof HttpResource ?, +					((HttpResource) this.original).getResponseHeaders() : new HttpHeaders());, +++ b/spring-aop/src/main/java/org/springframework/aop/support/MethodMatchers.java, +			// Allow for matching with regular UnionMethodMatcher by providing same hash..., +			return super.hashCode();, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +, +++ b/spring-web/src/main/java/org/springframework/http/ContentDisposition.java, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/GzipResourceResolver.java, + * @deprecated as of 5.1, in favor of using {@link EncodedResourceResolver}, +			HttpHeaders headers = (this.original instanceof HttpResource ?, +					((HttpResource) this.original).getResponseHeaders() : new HttpHeaders());, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/VersionResourceResolver.java, +			HttpHeaders headers = (this.original instanceof HttpResource ?, +					((HttpResource) this.original).getResponseHeaders() : new HttpHeaders());, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler.java, +++ b/spring-aop/src/main/java/org/springframework/aop/support/MethodMatchers.java, +			// Allow for matching with regular UnionMethodMatcher by providing same hash..., +			return super.hashCode();, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +, +++ b/spring-web/src/main/java/org/springframework/http/ContentDisposition.java, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/GzipResourceResolver.java, + * @deprecated as of 5.1, in favor of using {@link EncodedResourceResolver}, +			HttpHeaders headers = (this.original instanceof HttpResource ?, +					((HttpResource) this.original).getResponseHeaders() : new HttpHeaders());, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/VersionResourceResolver.java, +			HttpHeaders headers = (this.original instanceof HttpResource ?, +					((HttpResource) this.original).getResponseHeaders() : new HttpHeaders());, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/GzipResourceResolver.java, + * @deprecated as of 5.1, in favor of using {@link EncodedResourceResolver}, +			HttpHeaders headers = (this.original instanceof HttpResource ?, +					((HttpResource) this.original).getResponseHeaders() : new HttpHeaders());, +++ b/spring-aop/src/main/java/org/springframework/aop/support/MethodMatchers.java, +			// Allow for matching with regular UnionMethodMatcher by providing same hash..., +			return super.hashCode();, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +, +++ b/spring-web/src/main/java/org/springframework/http/ContentDisposition.java, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/GzipResourceResolver.java, + * @deprecated as of 5.1, in favor of using {@link EncodedResourceResolver}, +			HttpHeaders headers = (this.original instanceof HttpResource ?, +					((HttpResource) this.original).getResponseHeaders() : new HttpHeaders());, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/VersionResourceResolver.java, +			HttpHeaders headers = (this.original instanceof HttpResource ?, +					((HttpResource) this.original).getResponseHeaders() : new HttpHeaders());, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/GzipResourceResolver.java, + * @deprecated as of 5.1, in favor of using {@link EncodedResourceResolver}, +			HttpHeaders headers = (this.original instanceof HttpResource ?, +					((HttpResource) this.original).getResponseHeaders() : new HttpHeaders());, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/VersionResourceResolver.java, +			HttpHeaders headers = (this.original instanceof HttpResource ?, +					((HttpResource) this.original).getResponseHeaders() : new HttpHeaders());]