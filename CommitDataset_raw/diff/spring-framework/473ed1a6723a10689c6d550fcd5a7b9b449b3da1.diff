[+++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/InternetAddressEditor.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/InternetAddressEditor.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/MimeMailMessage.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/InternetAddressEditor.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/MimeMailMessage.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java, +	private final ChannelInterceptor unsentDisconnectInterceptor = new UnsentDisconnectChannelInterceptor();, +	 * Check whether this message handler is currently running., +	 * <p>Note that even when this message handler is running the, +	 * {@link #isBrokerAvailable()} flag may still independently alternate between, +	 * being on and off depending on the concrete sub-class implementation., +	 */, +	@Override, +	public final boolean isRunning() {, +		synchronized (this.lifecycleMonitor) {, +			return this.running;, +		}, +	}, +, +	/**, +, +, +++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/InternetAddressEditor.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/MimeMailMessage.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java, +	private final ChannelInterceptor unsentDisconnectInterceptor = new UnsentDisconnectChannelInterceptor();, +	 * Check whether this message handler is currently running., +	 * <p>Note that even when this message handler is running the, +	 * {@link #isBrokerAvailable()} flag may still independently alternate between, +	 * being on and off depending on the concrete sub-class implementation., +	 */, +	@Override, +	public final boolean isRunning() {, +		synchronized (this.lifecycleMonitor) {, +			return this.running;, +		}, +	}, +, +	/**, +, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/support/ChannelInterceptor.java, +	 * <p>Note that this will be invoked only if {@link #preSend} successfully, +	 * completed and returned a Message, i.e. it did not return {@code null}., +	 * <p>Note that this will be invoked only if {@link #preReceive} successfully, +++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/InternetAddressEditor.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/MimeMailMessage.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java, +	private final ChannelInterceptor unsentDisconnectInterceptor = new UnsentDisconnectChannelInterceptor();, +	 * Check whether this message handler is currently running., +	 * <p>Note that even when this message handler is running the, +	 * {@link #isBrokerAvailable()} flag may still independently alternate between, +	 * being on and off depending on the concrete sub-class implementation., +	 */, +	@Override, +	public final boolean isRunning() {, +		synchronized (this.lifecycleMonitor) {, +			return this.running;, +		}, +	}, +, +	/**, +, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/support/ChannelInterceptor.java, +	 * <p>Note that this will be invoked only if {@link #preSend} successfully, +	 * completed and returned a Message, i.e. it did not return {@code null}., +	 * <p>Note that this will be invoked only if {@link #preReceive} successfully, +++ b/spring-messaging/src/main/java/org/springframework/messaging/support/InterceptableChannel.java, +, +++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/InternetAddressEditor.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/MimeMailMessage.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java, +	private final ChannelInterceptor unsentDisconnectInterceptor = new UnsentDisconnectChannelInterceptor();, +	 * Check whether this message handler is currently running., +	 * <p>Note that even when this message handler is running the, +	 * {@link #isBrokerAvailable()} flag may still independently alternate between, +	 * being on and off depending on the concrete sub-class implementation., +	 */, +	@Override, +	public final boolean isRunning() {, +		synchronized (this.lifecycleMonitor) {, +			return this.running;, +		}, +	}, +, +	/**, +, +]