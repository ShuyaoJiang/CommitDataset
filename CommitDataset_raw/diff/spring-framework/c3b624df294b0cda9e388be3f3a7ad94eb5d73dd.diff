[+++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +	static String encodeUriComponent(String source, String encoding, Type type) throws UnsupportedEncodingException {, +		for (byte b : source) {, +		Assert.state(!this.encoded, "Cannot expand an already encoded UriComponents object");, +		return ObjectUtils.nullSafeEquals(getScheme(), other.getScheme()) &&, +				ObjectUtils.nullSafeEquals(getUserInfo(), other.getUserInfo()) &&, +				ObjectUtils.nullSafeEquals(getHost(), other.getHost()) &&, +				getPort() == other.getPort() &&, +				this.path.equals(other.path) &&, +				this.queryParams.equals(other.queryParams) &&, +				ObjectUtils.nullSafeEquals(getFragment(), other.getFragment());, +	static final class FullPathComponent implements PathComponent {, +		public FullPathComponent(String path) {, +, +	static final class PathSegmentComponent implements PathComponent {, +		public PathSegmentComponent(List<String> pathSegments) {, +, +	static final class PathComponentComposite implements PathComponent {, +		public PathComponentComposite(List<PathComponent> pathComponents) {, +			List<PathComponent> encodedComponents = new ArrayList<PathComponent>(this.pathComponents.size());, +			for (PathComponent pathComponent : this.pathComponents) {, +			for (PathComponent pathComponent : this.pathComponents) {, +	static final PathComponent NULL_PATH_COMPONENT = new PathComponent() {, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +	static String encodeUriComponent(String source, String encoding, Type type) throws UnsupportedEncodingException {, +		for (byte b : source) {, +		Assert.state(!this.encoded, "Cannot expand an already encoded UriComponents object");, +		return ObjectUtils.nullSafeEquals(getScheme(), other.getScheme()) &&, +				ObjectUtils.nullSafeEquals(getUserInfo(), other.getUserInfo()) &&, +				ObjectUtils.nullSafeEquals(getHost(), other.getHost()) &&, +				getPort() == other.getPort() &&, +				this.path.equals(other.path) &&, +				this.queryParams.equals(other.queryParams) &&, +				ObjectUtils.nullSafeEquals(getFragment(), other.getFragment());, +	static final class FullPathComponent implements PathComponent {, +		public FullPathComponent(String path) {, +, +	static final class PathSegmentComponent implements PathComponent {, +		public PathSegmentComponent(List<String> pathSegments) {, +, +	static final class PathComponentComposite implements PathComponent {, +		public PathComponentComposite(List<PathComponent> pathComponents) {, +			List<PathComponent> encodedComponents = new ArrayList<PathComponent>(this.pathComponents.size());, +			for (PathComponent pathComponent : this.pathComponents) {, +			for (PathComponent pathComponent : this.pathComponents) {, +	static final PathComponent NULL_PATH_COMPONENT = new PathComponent() {, +++ b/spring-web/src/main/java/org/springframework/web/util/OpaqueUriComponents.java, +	public UriComponents normalize() {, +		return this;, +	}, +, +	@Override, +		return ObjectUtils.nullSafeEquals(getScheme(), other.getScheme()) &&, +				ObjectUtils.nullSafeEquals(this.ssp, other.ssp) &&, +				ObjectUtils.nullSafeEquals(getFragment(), other.getFragment());, +, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +	static String encodeUriComponent(String source, String encoding, Type type) throws UnsupportedEncodingException {, +		for (byte b : source) {, +		Assert.state(!this.encoded, "Cannot expand an already encoded UriComponents object");, +		return ObjectUtils.nullSafeEquals(getScheme(), other.getScheme()) &&, +				ObjectUtils.nullSafeEquals(getUserInfo(), other.getUserInfo()) &&, +				ObjectUtils.nullSafeEquals(getHost(), other.getHost()) &&, +				getPort() == other.getPort() &&, +				this.path.equals(other.path) &&, +				this.queryParams.equals(other.queryParams) &&, +				ObjectUtils.nullSafeEquals(getFragment(), other.getFragment());, +	static final class FullPathComponent implements PathComponent {, +		public FullPathComponent(String path) {, +, +	static final class PathSegmentComponent implements PathComponent {, +		public PathSegmentComponent(List<String> pathSegments) {, +, +	static final class PathComponentComposite implements PathComponent {, +		public PathComponentComposite(List<PathComponent> pathComponents) {, +			List<PathComponent> encodedComponents = new ArrayList<PathComponent>(this.pathComponents.size());, +			for (PathComponent pathComponent : this.pathComponents) {, +			for (PathComponent pathComponent : this.pathComponents) {, +	static final PathComponent NULL_PATH_COMPONENT = new PathComponent() {, +++ b/spring-web/src/main/java/org/springframework/web/util/OpaqueUriComponents.java, +	public UriComponents normalize() {, +		return this;, +	}, +, +	@Override, +		return ObjectUtils.nullSafeEquals(getScheme(), other.getScheme()) &&, +				ObjectUtils.nullSafeEquals(this.ssp, other.ssp) &&, +				ObjectUtils.nullSafeEquals(getFragment(), other.getFragment());, +, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, +		return this.scheme;, +	 * Encode all URI components using their specific encoding rules, and returns the, +	 * result as a new {@code UriComponents} instance. This method uses UTF-8 to encode., +	/**, +	 * Normalize the path removing sequences like "path/.."., +	 * @see org.springframework.util.StringUtils#cleanPath(String), +	 */, +	public abstract UriComponents normalize();, +, +	/**]