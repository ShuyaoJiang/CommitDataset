[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +			if (logger.isTraceEnabled()) {, +				logger.trace("HTTP response already committed. " +, +						"Status not set to " + (statusCode != null ? statusCode.toString() : "null"));, +		return !isCommitted() ? doCommit(null) : Mono.empty();, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +			if (logger.isTraceEnabled()) {, +				logger.trace("HTTP response already committed. " +, +						"Status not set to " + (statusCode != null ? statusCode.toString() : "null"));, +		return !isCommitted() ? doCommit(null) : Mono.empty();, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java, + * Copyright 2002-2017 the original author or authors., +			// Response may be committed but we'll try.., +			exchange.getResponse().setStatusCode(((ResponseStatusException) ex).getStatus());, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +			if (logger.isTraceEnabled()) {, +				logger.trace("HTTP response already committed. " +, +						"Status not set to " + (statusCode != null ? statusCode.toString() : "null"));, +		return !isCommitted() ? doCommit(null) : Mono.empty();, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java, + * Copyright 2002-2017 the original author or authors., +			// Response may be committed but we'll try.., +			exchange.getResponse().setStatusCode(((ResponseStatusException) ex).getStatus());, +++ b/spring-web/src/test/java/org/springframework/web/server/handler/ResponseStatusExceptionHandlerTests.java, +	@Test // SPR-16231, +	public void responseCommitted() throws Exception {, +		Throwable ex = new ResponseStatusException(HttpStatus.INTERNAL_SERVER_ERROR, "Oops");, +		this.exchange.getResponse().setStatusCode(HttpStatus.CREATED);, +		this.exchange.getResponse().setComplete(), +				.then(this.handler.handle(this.exchange, ex)), +				.block(Duration.ofSeconds(5));, +		assertEquals(HttpStatus.CREATED, this.exchange.getResponse().getStatusCode());, +	}, +]