[+++ b/org.springframework.transaction/src/main/java/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.java, + * Copyright 2002-2009 the original author or authors., +		private final XAResource xaResource;, +			if (xaResource == null) {, +				if (transactionFactory != null && !transactionFactory.supportsResourceAdapterManagedTransactions()) {, +			}, +			if (transactionFactory != null && this.xaResource != null) {, +++ b/org.springframework.transaction/src/main/java/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.java, + * Copyright 2002-2009 the original author or authors., +		private final XAResource xaResource;, +			if (xaResource == null) {, +				if (transactionFactory != null && !transactionFactory.supportsResourceAdapterManagedTransactions()) {, +			}, +			if (transactionFactory != null && this.xaResource != null) {, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +	public boolean supportsResourceAdapterManagedTransactions() {, +		return false;, +	}, +, +++ b/org.springframework.transaction/src/main/java/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.java, + * Copyright 2002-2009 the original author or authors., +		private final XAResource xaResource;, +			if (xaResource == null) {, +				if (transactionFactory != null && !transactionFactory.supportsResourceAdapterManagedTransactions()) {, +			}, +			if (transactionFactory != null && this.xaResource != null) {, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +	public boolean supportsResourceAdapterManagedTransactions() {, +		return false;, +	}, +, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/SimpleTransactionFactory.java, + * Copyright 2002-2009 the original author or authors., +	public boolean supportsResourceAdapterManagedTransactions() {, +		return false;, +	}, +, +++ b/org.springframework.transaction/src/main/java/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.java, + * Copyright 2002-2009 the original author or authors., +		private final XAResource xaResource;, +			if (xaResource == null) {, +				if (transactionFactory != null && !transactionFactory.supportsResourceAdapterManagedTransactions()) {, +			}, +			if (transactionFactory != null && this.xaResource != null) {, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +	public boolean supportsResourceAdapterManagedTransactions() {, +		return false;, +	}, +, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/SimpleTransactionFactory.java, + * Copyright 2002-2009 the original author or authors., +	public boolean supportsResourceAdapterManagedTransactions() {, +		return false;, +	}, +, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/TransactionFactory.java, + * Copyright 2002-2009 the original author or authors., +	 * @throws SystemException if the transaction manager failed to create the, +	/**, +	 * Determine whether the underlying transaction manager supports XA transactions, +	 * managed by a resource adapter (i.e. without explicit XA resource enlistment)., +	 * <p>Typically <code>false</code>. Checked by, +	 * {@link org.springframework.jca.endpoint.AbstractMessageEndpointFactory}, +	 * in order to differentiate between invalid configuration and valid, +	 * ResourceAdapter-managed transactions., +	 * @see javax.resource.spi.ResourceAdapter#endpointActivation, +	 * @see javax.resource.spi.endpoint.MessageEndpointFactory#isDeliveryTransacted, +	 */, +	boolean supportsResourceAdapterManagedTransactions();, +, +++ b/org.springframework.transaction/src/main/java/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.java, + * Copyright 2002-2009 the original author or authors., +		private final XAResource xaResource;, +			if (xaResource == null) {, +				if (transactionFactory != null && !transactionFactory.supportsResourceAdapterManagedTransactions()) {, +			}, +			if (transactionFactory != null && this.xaResource != null) {, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +	public boolean supportsResourceAdapterManagedTransactions() {, +		return false;, +	}, +, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/SimpleTransactionFactory.java, + * Copyright 2002-2009 the original author or authors., +	public boolean supportsResourceAdapterManagedTransactions() {, +		return false;, +	}, +, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/TransactionFactory.java, + * Copyright 2002-2009 the original author or authors., +	 * @throws SystemException if the transaction manager failed to create the, +	/**, +	 * Determine whether the underlying transaction manager supports XA transactions, +	 * managed by a resource adapter (i.e. without explicit XA resource enlistment)., +	 * <p>Typically <code>false</code>. Checked by, +	 * {@link org.springframework.jca.endpoint.AbstractMessageEndpointFactory}]