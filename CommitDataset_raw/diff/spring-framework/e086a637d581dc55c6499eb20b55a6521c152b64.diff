[+++ b/spring-test/src/main/java/org/springframework/test/annotation/DirtiesContext.java, + * Copyright 2002-2015 the original author or authors., + * associated with a test is <em>dirty</em> and should therefore be closed, + * and removed from the context cache., + * <p>Use this annotation if a test has modified the context &mdash; for, + * example, by modifying the state of a singleton bean, modifying the state, + * of an embedded database, etc. Subsequent tests that request the same, + * context will be supplied a new context., + * annotation within the same class or class hierarchy. In such scenarios, the, + * {@code ApplicationContext} will be marked as <em>dirty</em> before or , + * after any such annotated method as well as before or after the current test, + * class, depending on the configured {@link #methodMode} and {@link #classMode}., + * <h3>Supported Test Phases</h3>, + * <ul>, + * <li><strong>Before current test class</strong>: when declared at the class, + * level with class mode set to {@link ClassMode#BEFORE_CLASS BEFORE_CLASS}</li>, + * <li><strong>Before each test method in current test class</strong>: when, + * declared at the class level with class mode set to, + * {@link ClassMode#BEFORE_EACH_TEST_METHOD BEFORE_EACH_TEST_METHOD}</li>, + * <li><strong>Before current test method</strong>: when declared at the, + * method level with method mode set to, + * {@link MethodMode#BEFORE_METHOD BEFORE_METHOD}</li>, + * <li><strong>After current test method</strong>: when declared at the, + * method level with method mode set to, + * {@link MethodMode#AFTER_METHOD AFTER_METHOD}</li>, + * <li><strong>After each test method in current test class</strong>: when, + * declared at the class level with class mode set to, + * {@link ClassMode#AFTER_EACH_TEST_METHOD AFTER_EACH_TEST_METHOD}</li>, + * <li><strong>After current test class</strong>: when declared at the, + * class level with class mode set to, + * {@link ClassMode#AFTER_CLASS AFTER_CLASS}</li>, + * </ul>, + *, + * @see org.springframework.test.context.support.DirtiesContextTestExecutionListener, +	 * interpreted when used to annotate a test method., +	 *, +	 * @since 4.2, +	 */, +	static enum MethodMode {, +, +		/**, +		 * The associated {@code ApplicationContext} will be marked as, +		 * <em>dirty</em> before the corresponding test method., +		 */, +		BEFORE_METHOD,, +, +		/**, +		 * The associated {@code ApplicationContext} will be marked as, +		 * <em>dirty</em> after the corresponding test method., +		 */, +		AFTER_METHOD;, +	}, +, +	/**, +	 * Defines <i>modes</i> which determine how {@code @DirtiesContext} is, +		 * <em>dirty</em> before the test class., +		 *, +		 * @since 4.2, +		BEFORE_CLASS,, +, +		/**, +		 * The associated {@code ApplicationContext} will be marked as, +		 * <em>dirty</em> before each test method in the class., +		 *, +		 * @since 4.2, +		 */, +		BEFORE_EACH_TEST_METHOD,, +		AFTER_EACH_TEST_METHOD,, +, +		/**, +		 * The associated {@code ApplicationContext} will be marked as, +		 * <em>dirty</em> after the test class., +		 */, +		AFTER_CLASS;, +	 * The <i>mode</i> to use when a test method is annotated with, +	 * {@code @DirtiesContext}., +	 * <p>Defaults to {@link MethodMode#AFTER_METHOD AFTER_METHOD}., +	 * <p>Setting the method mode on an annotated test class has no meaning., +	 * For class-level control, use {@link #classMode} instead., +	 *, +	 * @since 4.2, +	 */, +	MethodMode methodMode() default MethodMode.AFTER_METHOD;, +, +	/**, +	 * <p>Setting the class mode on an annotated test method has no meaning., +	 * For method-level control, use {@link #methodMode} instead., +++ b/spring-test/src/main/java/org/springframework/test/annotation/DirtiesContext.java, + * Copyright 2002-2015 the original author or authors., + * associated with a test is <em>dirty</em> and should therefore be closed, + * and removed from the context cache., + * <p>Use this annotation if a test has modified the context &mdash; for, + * example, by modifying the state of a singleton bean, modifying the state, + * of an embedded database, etc. Subsequent tests that request the same, + * context will be supplied a new context., + * annotation within the same class or class hierarchy. In such scenarios, the, + * {@code ApplicationContext} will be marked as <em>dirty</em> before or , + * after any such annotated method as well as before or after the current test, + * class, depending on the configured {@link #methodMode} and {@link #classMode}., + * <h3>Supported Test Phases</h3>]