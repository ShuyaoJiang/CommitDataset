[+++ b/spring-framework-reference/src/cci.xml, +    <para>J2EE provides a specification to standardize access to enterprise, +    information systems (EIS): the JCA (Java Connector Architecture). This, +    specification is divided into several different parts:</para>, +        configuration, which is held outside the client application. A, +        connector can be used without an application server as well; in this, +        case, the application must configure it directly (non-managed, +        mode).</para>, +    <para>The aim of the Spring CCI support is to provide classes to access a, +    CCI connector in typical Spring style, leveraging the Spring Framework's, +    general resource and transaction management facilities.</para>, +      <interfacename>ConnectionFactory</interfacename> interface. The, +      connector used must provide an implementation of this interface.</para>, +      server and fetch the <interfacename>ConnectionFactory</interfacename>, +      from the server's JNDI environment (managed mode). The connector must be, +      characteristics. The actual name of the resource is specified when you, +      deploy it. To access it within Spring, simply use Spring's, +      <classname>JndiObjectFactoryBean</classname> /, +      <literal>&lt;jee:jndi-lookup&gt;</literal> fetch the factory by its JNDI, +      name.</para>, +      configure it. Spring offers the possibility to configure a connector as, +      a bean, through a provided <literal>FactoryBean</literal>, +      (<classname>LocalConnectionFactoryBean</classname>). In this manner, you, +      only need the connector library in the classpath (no RAR file and no, +      <filename>ra.xml</filename> descriptor needed). The library must be, +      extracted from the connector's RAR file, if necessary.</para>, +      <para>Once you have got access to your, +      <interfacename>ConnectionFactory</interfacename> instance, you can, +      inject it into your components. These components can either be coded, +      against the plain CCI API or leverage Spring's support classes for CCI, +      access (e.g. <classname>CciTemplate</classname>).</para>, +        <para>When you use a connector in non-managed mode, you can't use, +        global transactions because the resource is never enlisted / delisted, +        in the current global transaction of the current thread. The resource, +        is simply not aware of any global J2EE transactions that might be, +        running.</para>, +      <title><interfacename>ConnectionFactory</interfacename> configuration in, +      Spring</title>, +      <interfacename>ConnectionFactory</interfacename> from the application, +      server if you are in a managed mode, or directly from Spring if you are, +      in a non-managed mode.</para>, +      <para>In a managed mode, you access a, +      <interfacename>ConnectionFactory</interfacename> from JNDI; its, +      properties will be configured in the application server.</para>, +      <programlisting language="xml">&lt;jee:jndi-lookup id="eciConnectionFactory" jndi-name="eis/cicseci"/&gt;</programlisting>, +      <para>In non-managed mode, you must configure the, +      <interfacename>ConnectionFactory</interfacename> you want to use in the, +      configuration of Spring as a JavaBean. The, +      setup style, passing in the, +      <classname>ManagedConnectionFactory</classname> implementation of your, +      connector, exposing the application-level CCI, +      <interfacename>ConnectionFactory</interfacename>.</para>, +      <programlisting language="xml">&lt;bean id="eciManagedConnectionFactory" class="com.ibm.connector2.cics.ECIManagedConnectionFactory"&gt;, +  &lt;property name="serverName" value="TXSERIES"/&gt;, +  &lt;property name="connectionURL" value="tcp://localhost/"/&gt;, +  &lt;property name="portNumber" value="2006"/&gt;, +&lt;/bean&gt;, +&lt;bean id="eciConnectionFactory" class="org.springframework.jca.support.LocalConnectionFactoryBean"&gt;, +  &lt;property name="managedConnectionFactory" ref="eciManagedConnectionFactory"/&gt;, +&lt;/bean&gt;</programlisting>, +        <interfacename>ConnectionFactory</interfacename>. You need to go, +        through the corresponding implementation of the, +      EIS using the <interfacename>ConnectionSpec</interfacename>, +      implementation of your connector. In order to configure its properties,, +      you need to wrap the target connection factory with a dedicated adapter,, +      dedicated <interfacename>ConnectionSpec</interfacename> can be, +      configured with the property <literal>connectionSpec</literal> (as an, +      inner bean).</para>, +      <interfacename>ConnectionFactory</interfacename> interface defines two, +      different methods to obtain a CCI connection. Some of the, +      <interfacename>ConnectionSpec</interfacename> properties can often be, +      configured in the application server (in managed mode) or on the, +      corresponding local <classname>ManagedConnectionFactory</classname>, +      implementation.</para>, +      <programlisting language="java">public interface ConnectionFactory implements Serializable, Referenceable {, +}</programlisting>, +      <para>Spring provides a, +      <classname>ConnectionSpecConnectionFactoryAdapter</classname> that, +      allows for specifying a <interfacename>ConnectionSpec</interfacename>, +      instance to use for all operations on a given factory. If the adapter's, +      uses the <literal>getConnection</literal> variant without argument, else, +      the one with the <interfacename>ConnectionSpec</interfacename>, +      argument.</para>, +      <programlisting language="xml">&lt;bean id="managedConnectionFactory", +    class="com.sun.connector.cciblackbox.CciLocalTxManagedConnectionFactory"&gt;, +  &lt;property name="connectionURL" value="jdbc:hsqldb:hsql://localhost:9001"/&gt;, +  &lt;property name="driverName" value="org.hsqldb.jdbcDriver"/&gt;, +&lt;/bean&gt;, +&lt;bean id="targetConnectionFactory", +    class="org.springframework.jca.support.LocalConnectionFactoryBean"&gt;, +  &lt;property name="managedConnectionFactory" ref="managedConnectionFactory"/&gt;, +&lt;/bean&gt;, +&lt;bean id="connectionFactory", +    class="org.springframework.jca.cci.connection.ConnectionSpecConnectionFactoryAdapter"&gt;, +  &lt;property name="targetConnectionFactory" ref="targetConnectionFactory"/&gt;, +  &lt;property name="connectionSpec"&gt;, +    &lt;bean class="com.sun.connector.cciblackbox.CciConnectionSpec"&gt;, +      &lt;property name="user" value="sa"/&gt;, +      &lt;property name="password" value=""/&gt;, +    &lt;/bean&gt;]