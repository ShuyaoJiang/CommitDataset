[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/EvalTag.java, +import org.springframework.util.ObjectUtils;, +		if (this.var != null) {, +			Object result = this.expression.getValue(this.evaluationContext);, +			pageContext.setAttribute(this.var, result, this.scope);, +		}, +		else {, +				result = ObjectUtils.getDisplayString(result);, +				result = (isHtmlEscape() ? HtmlUtils.htmlEscape(result) : result);, +				result = (this.javaScriptEscape ? JavaScriptUtils.javaScriptEscape(result) : result);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/EvalTag.java, +import org.springframework.util.ObjectUtils;, +		if (this.var != null) {, +			Object result = this.expression.getValue(this.evaluationContext);, +			pageContext.setAttribute(this.var, result, this.scope);, +		}, +		else {, +				result = ObjectUtils.getDisplayString(result);, +				result = (isHtmlEscape() ? HtmlUtils.htmlEscape(result) : result);, +				result = (this.javaScriptEscape ? JavaScriptUtils.javaScriptEscape(result) : result);, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/tags/EvalTagTests.java, +	public void testPrintNullAsEmptyString() throws Exception {, +		tag.setExpression("bean.null");, +		int action = tag.doStartTag();, +		assertEquals(Tag.EVAL_BODY_INCLUDE, action);, +		action = tag.doEndTag();, +		assertEquals(Tag.EVAL_PAGE, action);, +		assertEquals("", ((MockHttpServletResponse) context.getResponse()).getContentAsString());, +	}, +, +, +		public Object getNull() {, +			return null;, +		}, +]