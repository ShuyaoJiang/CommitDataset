[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConfigurableBeanFactory.java, + * Copyright 2002-2012 the original author or authors., +	 * Explicitly control the current in-creation status of the specified bean., +	 * For container-internal use only., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConfigurableBeanFactory.java, + * Copyright 2002-2012 the original author or authors., +	 * Explicitly control the current in-creation status of the specified bean., +	 * For container-internal use only., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +	@Override, +	public boolean isActuallyInCreation(String beanName) {, +		return isSingletonCurrentlyInCreation(beanName) || isPrototypeCurrentlyInCreation(beanName);, +	}, +, +	/**, +	 * Return whether the specified prototype bean is currently in creation, +	 * (within the current thread)., +	 * @param beanName the name of the bean, +	 */, +	protected boolean isPrototypeCurrentlyInCreation(String beanName) {, +		Object curVal = this.prototypesCurrentlyInCreation.get();, +		return (curVal != null &&, +				(curVal.equals(beanName) || (curVal instanceof Set && ((Set<?>) curVal).contains(beanName))));, +	}, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConfigurableBeanFactory.java, + * Copyright 2002-2012 the original author or authors., +	 * Explicitly control the current in-creation status of the specified bean., +	 * For container-internal use only., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +	@Override, +	public boolean isActuallyInCreation(String beanName) {, +		return isSingletonCurrentlyInCreation(beanName) || isPrototypeCurrentlyInCreation(beanName);, +	}, +, +	/**, +	 * Return whether the specified prototype bean is currently in creation, +	 * (within the current thread)., +	 * @param beanName the name of the bean, +	 */, +	protected boolean isPrototypeCurrentlyInCreation(String beanName) {, +		Object curVal = this.prototypesCurrentlyInCreation.get();, +		return (curVal != null &&, +				(curVal.equals(beanName) || (curVal instanceof Set && ((Set<?>) curVal).contains(beanName))));, +	}, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java, +	/** Names of beans that are currently in creation (using a ConcurrentHashMap as a Set) */, +	private final Map<String, Boolean> singletonsCurrentlyInCreation = new ConcurrentHashMap<String, Boolean>();, +	/** Names of beans currently excluded from in creation checks (using a ConcurrentHashMap as a Set) */, +	private final Map<String, Boolean> inCreationCheckExclusions = new ConcurrentHashMap<String, Boolean>();, +		return getSingleton(beanName, true);, +		if (singletonObject == null && isSingletonCurrentlyInCreation(beanName)) {, +				if (singletonObject == null && allowEarlyReference) {, +	public void setCurrentlyInCreation(String beanName, boolean inCreation) {, +		Assert.notNull(beanName, "Bean name must not be null");, +		if (!inCreation) {, +			this.inCreationCheckExclusions.put(beanName, Boolean.TRUE);, +		}, +		else {, +			this.inCreationCheckExclusions.remove(beanName);, +		}, +	}, +, +	public boolean isCurrentlyInCreation(String beanName) {, +		Assert.notNull(beanName, "Bean name must not be null");, +		return (!this.inCreationCheckExclusions.containsKey(beanName) && isActuallyInCreation(beanName));, +	}, +, +	protected boolean isActuallyInCreation(String beanName) {, +		return isSingletonCurrentlyInCreation(beanName);, +	}, +, +	/**, +	 * Return whether the specified singleton bean is currently in creation, +	 * (within the entire factory)., +	 * @param beanName the name of the bean, +	 */, +	public boolean isSingletonCurrentlyInCreation(String beanName) {, +		return this.singletonsCurrentlyInCreation.containsKey(beanName);, +	}, +, +		if (!this.inCreationCheckExclusions.containsKey(beanName) &&, +				this.singletonsCurrentlyInCreation.put(beanName, Boolean.TRUE) != null) {, +		if (!this.inCreationCheckExclusions.containsKey(beanName) &&, +				!this.singletonsCurrentlyInCreation.remove(beanName)) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConfigurableBeanFactory.java, + * Copyright 2002-2012 the original author or authors., +	 * Explicitly control the current in-creation status of the specified bean., +	 * For container-internal use only., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +	@Override, +	public boolean isActuallyInCreation(String beanName) {, +		return isSingletonCurrentlyInCreation(beanName) || isPrototypeCurrentlyInCreation(beanName);, +	}, +, +	/**, +	 * Return whether the specified prototype bean is currently in creation, +	 * (within the current thread)., +	 * @param beanName the name of the bean]