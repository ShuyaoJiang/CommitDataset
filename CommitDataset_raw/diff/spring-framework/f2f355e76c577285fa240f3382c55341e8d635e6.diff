[+++ b/build.gradle, +		testCompile("xmlunit:xmlunit:1.5"), +		testCompile("xmlunit:xmlunit:1.5"), +		testCompile("xmlunit:xmlunit:1.5"), +		testCompile("xmlunit:xmlunit:1.5"), +		optional("xmlunit:xmlunit:1.5"), +++ b/build.gradle, +		testCompile("xmlunit:xmlunit:1.5"), +		testCompile("xmlunit:xmlunit:1.5"), +		testCompile("xmlunit:xmlunit:1.5"), +		testCompile("xmlunit:xmlunit:1.5"), +		optional("xmlunit:xmlunit:1.5"), +++ /dev/null, +++ b/build.gradle, +		testCompile("xmlunit:xmlunit:1.5"), +		testCompile("xmlunit:xmlunit:1.5"), +		testCompile("xmlunit:xmlunit:1.5"), +		testCompile("xmlunit:xmlunit:1.5"), +		optional("xmlunit:xmlunit:1.5"), +++ /dev/null, +++ b/spring-core/src/main/java/org/springframework/util/xml/AbstractStaxHandler.java, +/*, + * Copyright 2002-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.util.xml;, +, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +import javax.xml.XMLConstants;, +import javax.xml.namespace.QName;, +import javax.xml.stream.XMLStreamException;, +, +import org.xml.sax.Attributes;, +import org.xml.sax.ContentHandler;, +import org.xml.sax.SAXException;, +import org.xml.sax.ext.LexicalHandler;, +, +/**, + * Abstract base class for SAX {@code ContentHandler} and {@code LexicalHandler}, + * implementations that use StAX as a basis. All methods delegate to internal template, + * methods, capable of throwing a {@code XMLStreamException}. Additionally, an namespace, + * context stack is used to keep track of declared namespaces., + *, + * @author Arjen Poutsma, + * @since 4.0.3, + */, +abstract class AbstractStaxHandler implements ContentHandler, LexicalHandler {, +, +	private final List<Map<String, String>> namespaceMappings = new ArrayList<Map<String, String>>();, +, +	private boolean inCData;, +, +, +	@Override, +	public final void startDocument() throws SAXException {, +		removeAllNamespaceMappings();, +		newNamespaceMapping();, +		try {, +			startDocumentInternal();, +		}, +		catch (XMLStreamException ex) {, +			throw new SAXException("Could not handle startDocument: " + ex.getMessage(), ex);, +		}, +	}, +, +	@Override, +	public final void endDocument() throws SAXException {, +		removeAllNamespaceMappings();, +		try {, +			endDocumentInternal();, +		}, +		catch (XMLStreamException ex) {, +			throw new SAXException("Could not handle endDocument: " + ex.getMessage(), ex);, +		}, +	}, +, +	@Override, +	public final void startPrefixMapping(String prefix, String uri) {, +		currentNamespaceMapping().put(prefix, uri);, +	}, +, +	@Override, +	public final void endPrefixMapping(String prefix) {, +	}, +]