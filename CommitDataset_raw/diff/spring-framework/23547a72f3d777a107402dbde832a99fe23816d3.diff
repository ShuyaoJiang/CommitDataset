[+++ b/spring-core/src/test/java/org/springframework/core/LocalVariableTableParameterNameDiscovererTests.java, + * Copyright 2002-2015 the original author or authors., +import org.junit.Test;, +import static org.junit.Assert.*;, +, +public class LocalVariableTableParameterNameDiscovererTests {, +	private final LocalVariableTableParameterNameDiscoverer discoverer = new LocalVariableTableParameterNameDiscoverer();, +, +	@Test, +	public void methodParameterNameDiscoveryNoArgs() throws NoSuchMethodException {, +	@Test, +	public void methodParameterNameDiscoveryWithArgs() throws NoSuchMethodException {, +	@Test, +	public void consParameterNameDiscoveryNoArgs() throws NoSuchMethodException {, +	@Test, +	public void consParameterNameDiscoveryArgs() throws NoSuchMethodException {, +	@Test, +	public void staticMethodParameterNameDiscoveryNoArgs() throws NoSuchMethodException {, +	@Test, +	public void overloadedStaticMethod() throws Exception {, +	@Test, +	public void overloadedStaticMethodInInnerClass() throws Exception {, +	@Test, +	public void overloadedMethod() throws Exception {, +	@Test, +	public void overloadedMethodInInnerClass() throws Exception {, +	@Test, +	public void generifiedClass() throws Exception {, +		Class<?> clazz = GenerifiedClass.class;, +	@Ignore("Ignored because Ubuntu packages OpenJDK with debug symbols enabled. See SPR-8078."), +	@Test, +	public void classesWithoutDebugSymbols() throws Exception {, +++ b/spring-core/src/test/java/org/springframework/core/LocalVariableTableParameterNameDiscovererTests.java, + * Copyright 2002-2015 the original author or authors., +import org.junit.Test;, +import static org.junit.Assert.*;, +, +public class LocalVariableTableParameterNameDiscovererTests {, +	private final LocalVariableTableParameterNameDiscoverer discoverer = new LocalVariableTableParameterNameDiscoverer();, +, +	@Test, +	public void methodParameterNameDiscoveryNoArgs() throws NoSuchMethodException {, +	@Test, +	public void methodParameterNameDiscoveryWithArgs() throws NoSuchMethodException {, +	@Test, +	public void consParameterNameDiscoveryNoArgs() throws NoSuchMethodException {, +	@Test, +	public void consParameterNameDiscoveryArgs() throws NoSuchMethodException {, +	@Test, +	public void staticMethodParameterNameDiscoveryNoArgs() throws NoSuchMethodException {, +	@Test, +	public void overloadedStaticMethod() throws Exception {, +	@Test, +	public void overloadedStaticMethodInInnerClass() throws Exception {, +	@Test, +	public void overloadedMethod() throws Exception {, +	@Test, +	public void overloadedMethodInInnerClass() throws Exception {, +	@Test, +	public void generifiedClass() throws Exception {, +		Class<?> clazz = GenerifiedClass.class;, +	@Ignore("Ignored because Ubuntu packages OpenJDK with debug symbols enabled. See SPR-8078."), +	@Test, +	public void classesWithoutDebugSymbols() throws Exception {, +++ b/spring-core/src/test/java/org/springframework/core/PrioritizedParameterNameDiscovererTests.java, + * Copyright 2002-2015 the original author or authors., +import org.junit.Test;, +import static org.junit.Assert.*;, +, +public class PrioritizedParameterNameDiscovererTests {, +	private final ParameterNameDiscoverer returnsFooBar = new ParameterNameDiscoverer() {, +		public String[] getParameterNames(Constructor<?> ctor) {, +	private final ParameterNameDiscoverer returnsSomethingElse = new ParameterNameDiscoverer() {, +		public String[] getParameterNames(Constructor<?> ctor) {, +	@Test, +	public void noParametersDiscoverers() {, +		assertNull(pnd.getParameterNames((Constructor<?>) null));, +	@Test, +	public void orderedParameterDiscoverers1() {, +		assertTrue(Arrays.equals(FOO_BAR, pnd.getParameterNames((Constructor<?>) null)));, +		assertTrue(Arrays.equals(FOO_BAR, pnd.getParameterNames((Constructor<?>) null)));, +	@Test, +	public void orderedParameterDiscoverers2() {, +		assertTrue(Arrays.equals(SOMETHING_ELSE, pnd.getParameterNames((Constructor<?>) null)));, +		assertTrue(Arrays.equals(SOMETHING_ELSE, pnd.getParameterNames((Constructor<?>) null)));, +++ b/spring-core/src/test/java/org/springframework/core/LocalVariableTableParameterNameDiscovererTests.java, + * Copyright 2002-2015 the original author or authors., +import org.junit.Test;, +import static org.junit.Assert.*;, +, +public class LocalVariableTableParameterNameDiscovererTests {, +	private final LocalVariableTableParameterNameDiscoverer discoverer = new LocalVariableTableParameterNameDiscoverer();, +, +	@Test, +	public void methodParameterNameDiscoveryNoArgs() throws NoSuchMethodException {, +	@Test, +	public void methodParameterNameDiscoveryWithArgs() throws NoSuchMethodException {, +	@Test, +	public void consParameterNameDiscoveryNoArgs() throws NoSuchMethodException {, +	@Test]