[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +		Element errorHandlerElem = DomUtils.getChildElementByTagName(element, "stomp-error-handler");, +		if (errorHandlerElem != null) {, +			RuntimeBeanReference errorHandlerRef = new RuntimeBeanReference(errorHandlerElem.getAttribute("ref"));, +			stompHandlerDef.getPropertyValues().add("errorHandler", errorHandlerRef);, +		}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +		Element errorHandlerElem = DomUtils.getChildElementByTagName(element, "stomp-error-handler");, +		if (errorHandlerElem != null) {, +			RuntimeBeanReference errorHandlerRef = new RuntimeBeanReference(errorHandlerElem.getAttribute("ref"));, +			stompHandlerDef.getPropertyValues().add("errorHandler", errorHandlerRef);, +		}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/StompEndpointRegistry.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.web.socket.messaging.StompSubProtocolErrorHandler;, +, +	/**, +	 * Configure a handler for customizing or handling STOMP ERROR frames to clients., +	 * @param errorHandler the error handler, +	 * @since 4.2, +	 */, +	WebMvcStompEndpointRegistry setErrorHandler(StompSubProtocolErrorHandler errorHandler);, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +		Element errorHandlerElem = DomUtils.getChildElementByTagName(element, "stomp-error-handler");, +		if (errorHandlerElem != null) {, +			RuntimeBeanReference errorHandlerRef = new RuntimeBeanReference(errorHandlerElem.getAttribute("ref"));, +			stompHandlerDef.getPropertyValues().add("errorHandler", errorHandlerRef);, +		}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/StompEndpointRegistry.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.web.socket.messaging.StompSubProtocolErrorHandler;, +, +	/**, +	 * Configure a handler for customizing or handling STOMP ERROR frames to clients., +	 * @param errorHandler the error handler, +	 * @since 4.2, +	 */, +	WebMvcStompEndpointRegistry setErrorHandler(StompSubProtocolErrorHandler errorHandler);, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java, +import org.springframework.web.socket.messaging.StompSubProtocolErrorHandler;, +	@Override, +	public WebMvcStompEndpointRegistry setErrorHandler(StompSubProtocolErrorHandler errorHandler) {, +		this.stompHandler.setErrorHandler(errorHandler);, +		return this;, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +		Element errorHandlerElem = DomUtils.getChildElementByTagName(element, "stomp-error-handler");, +		if (errorHandlerElem != null) {, +			RuntimeBeanReference errorHandlerRef = new RuntimeBeanReference(errorHandlerElem.getAttribute("ref"));, +			stompHandlerDef.getPropertyValues().add("errorHandler", errorHandlerRef);, +		}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/StompEndpointRegistry.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.web.socket.messaging.StompSubProtocolErrorHandler;, +, +	/**, +	 * Configure a handler for customizing or handling STOMP ERROR frames to clients., +	 * @param errorHandler the error handler, +	 * @since 4.2, +	 */, +	WebMvcStompEndpointRegistry setErrorHandler(StompSubProtocolErrorHandler errorHandler);, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java, +import org.springframework.web.socket.messaging.StompSubProtocolErrorHandler;, +	@Override, +	public WebMvcStompEndpointRegistry setErrorHandler(StompSubProtocolErrorHandler errorHandler) {, +		this.stompHandler.setErrorHandler(errorHandler);, +		return this;, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolErrorHandler.java, +	 * after sending an ERROR frame. To prevent an ERROR frame from being sent,, +	 * a handler could return {@code null} and send a notification message, +	 * through the broker instead, e.g. via a user destination., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +		Element errorHandlerElem = DomUtils.getChildElementByTagName(element, "stomp-error-handler");, +		if (errorHandlerElem != null) {, +			RuntimeBeanReference errorHandlerRef = new RuntimeBeanReference(errorHandlerElem.getAttribute("ref"));, +			stompHandlerDef.getPropertyValues().add("errorHandler", errorHandlerRef);, +		}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/StompEndpointRegistry.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.web.socket.messaging.StompSubProtocolErrorHandler;, +, +	/**, +	 * Configure a handler for customizing or handling STOMP ERROR frames to clients., +	 * @param errorHandler the error handler, +	 * @since 4.2, +	 */, +	WebMvcStompEndpointRegistry setErrorHandler(StompSubProtocolErrorHandler errorHandler);, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java]