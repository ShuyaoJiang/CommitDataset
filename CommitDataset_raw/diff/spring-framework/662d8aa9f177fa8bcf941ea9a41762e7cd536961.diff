[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/UtilNamespaceHandler.java, + * Copyright 2002-2014 the original author or authors., +, +			String listClass = element.getAttribute("list-class");, +, +, +			String setClass = element.getAttribute("set-class");, +, +, +			String mapClass = element.getAttribute("map-class");, +, +	private static class PropertiesBeanDefinitionParser extends AbstractSingleBeanDefinitionParser {, +, +			String location = element.getAttribute("location");, +			if (StringUtils.hasLength(location)) {, +				String[] locations = StringUtils.commaDelimitedListToStringArray(location);, +				builder.addPropertyValue("locations", locations);, +			}, +, +			builder.addPropertyValue("ignoreResourceNotFound",, +					Boolean.valueOf(element.getAttribute("ignore-resource-not-found")));, +, +			builder.addPropertyValue("localOverride",, +					Boolean.valueOf(element.getAttribute("local-override")));, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/UtilNamespaceHandler.java, + * Copyright 2002-2014 the original author or authors., +, +			String listClass = element.getAttribute("list-class");, +, +, +			String setClass = element.getAttribute("set-class");, +, +, +			String mapClass = element.getAttribute("map-class");, +, +	private static class PropertiesBeanDefinitionParser extends AbstractSingleBeanDefinitionParser {, +, +			String location = element.getAttribute("location");, +			if (StringUtils.hasLength(location)) {, +				String[] locations = StringUtils.commaDelimitedListToStringArray(location);, +				builder.addPropertyValue("locations", locations);, +			}, +, +			builder.addPropertyValue("ignoreResourceNotFound",, +					Boolean.valueOf(element.getAttribute("ignore-resource-not-found")));, +, +			builder.addPropertyValue("localOverride",, +					Boolean.valueOf(element.getAttribute("local-override")));, +, +++ b/spring-beans/src/main/resources/org/springframework/beans/factory/xml/spring-util-4.1.xsd, +							<xsd:documentation><![CDATA[, +	The location of the properties file, as a Spring resource location: a URL,, +	a "classpath:" pseudo URL, or a relative file path. Multiple locations may be, +	specified, separated by commas., +				]]></xsd:documentation>, +					<xsd:attribute name="ignore-resource-not-found" type="xsd:boolean" default="false">, +						<xsd:annotation>, +							<xsd:documentation><![CDATA[, +	Specifies if failure to find the property resource location should be ignored., +	Default is "false", meaning that if there is no file in the location specified, +	an exception will be raised at runtime., +				]]></xsd:documentation>, +						</xsd:annotation>, +					</xsd:attribute>, +					<xsd:attribute name="local-override" type="xsd:boolean" default="false">, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/UtilNamespaceHandler.java, + * Copyright 2002-2014 the original author or authors., +, +			String listClass = element.getAttribute("list-class");, +, +, +			String setClass = element.getAttribute("set-class");, +, +, +			String mapClass = element.getAttribute("map-class");, +, +	private static class PropertiesBeanDefinitionParser extends AbstractSingleBeanDefinitionParser {, +, +			String location = element.getAttribute("location");, +			if (StringUtils.hasLength(location)) {, +				String[] locations = StringUtils.commaDelimitedListToStringArray(location);, +				builder.addPropertyValue("locations", locations);, +			}, +, +			builder.addPropertyValue("ignoreResourceNotFound",, +					Boolean.valueOf(element.getAttribute("ignore-resource-not-found")));, +, +			builder.addPropertyValue("localOverride",, +					Boolean.valueOf(element.getAttribute("local-override")));, +, +++ b/spring-beans/src/main/resources/org/springframework/beans/factory/xml/spring-util-4.1.xsd, +							<xsd:documentation><![CDATA[, +	The location of the properties file, as a Spring resource location: a URL,, +	a "classpath:" pseudo URL, or a relative file path. Multiple locations may be, +	specified, separated by commas., +				]]></xsd:documentation>, +					<xsd:attribute name="ignore-resource-not-found" type="xsd:boolean" default="false">, +						<xsd:annotation>, +							<xsd:documentation><![CDATA[]