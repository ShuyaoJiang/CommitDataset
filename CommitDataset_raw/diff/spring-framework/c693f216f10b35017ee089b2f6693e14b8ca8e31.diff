[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +			throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +			throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionGenericConverter.java, +				throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +			throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionGenericConverter.java, +				throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectGenericConverter.java, +					throw new ConverterNotFoundException(sourceElementType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +			throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionGenericConverter.java, +				throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectGenericConverter.java, +					throw new ConverterNotFoundException(sourceElementType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayGenericConverter.java, +				throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +			throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionGenericConverter.java, +				throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectGenericConverter.java, +					throw new ConverterNotFoundException(sourceElementType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayGenericConverter.java, +				throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToCollectionGenericConverter.java, +				Collection targetCollection = CollectionFactory.createCollection(targetType.getType(), sourceCollection, +						.size());, +			throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +			throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionGenericConverter.java, +				throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectGenericConverter.java, +					throw new ConverterNotFoundException(sourceElementType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayGenericConverter.java, +				throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToCollectionGenericConverter.java, +				Collection targetCollection = CollectionFactory.createCollection(targetType.getType(), sourceCollection, +						.size());, +			throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToObjectGenericConverter.java, +			Object firstElement = sourceCollection.iterator().next();			, +			if (sourceElementType == TypeDescriptor.NULL && firstElement != null) {, +				sourceElementType = TypeDescriptor.valueOf(firstElement.getClass());, +			}			, +				return firstElement;, +					throw new ConverterNotFoundException(sourceElementType, targetType);, +				return converter.convert(firstElement, sourceElementType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +			throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionGenericConverter.java, +				throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectGenericConverter.java, +					throw new ConverterNotFoundException(sourceElementType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayGenericConverter.java, +				throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToCollectionGenericConverter.java, +				Collection targetCollection = CollectionFactory.createCollection(targetType.getType(), sourceCollection, +						.size());, +			throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToObjectGenericConverter.java, +			Object firstElement = sourceCollection.iterator().next();			, +			if (sourceElementType == TypeDescriptor.NULL && firstElement != null) {, +				sourceElementType = TypeDescriptor.valueOf(firstElement.getClass());, +			}			, +				return firstElement;, +					throw new ConverterNotFoundException(sourceElementType, targetType);, +				return converter.convert(firstElement, sourceElementType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ObjectToArrayGenericConverter.java, +				throw new ConverterNotFoundException(sourceType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +			throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionGenericConverter.java, +				throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectGenericConverter.java, +					throw new ConverterNotFoundException(sourceElementType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayGenericConverter.java, +				throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToCollectionGenericConverter.java, +				Collection targetCollection = CollectionFactory.createCollection(targetType.getType(), sourceCollection, +						.size());, +			throw new ConverterNotFoundException(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToObjectGenericConverter.java, +			Object firstElement = sourceCollection.iterator().next();			, +			if (sourceElementType == TypeDescriptor.NULL && firstElement != null) {, +				sourceElementType = TypeDescriptor.valueOf(firstElement.getClass());, +			}			, +				return firstElement;, +					throw new ConverterNotFoundException(sourceElementType, targetType);, +				return converter.convert(firstElement, sourceElementType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ObjectToArrayGenericConverter.java, +				throw new ConverterNotFoundException(sourceType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ObjectToCollectionGenericConverter.java, +				throw new ConverterNotFoundException(sourceType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +			throw new ConverterNotFoundException(sourceElementType, targetElementType);]