[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.java, + * <p>This exception resolver is enabled by default in the common Spring, + * {@link org.springframework.web.servlet.DispatcherServlet}., + * @author Juergen Hoeller, +				return handleMethodArgumentNotValidException((MethodArgumentNotValidException) ex, request, response,, +						handler);, +				return handleMissingServletRequestPartException((MissingServletRequestPartException) ex, request,, +						response, handler);, +			if (logger.isWarnEnabled()) {, +		}, +	 * were found for the PUT or POSTed content., +	 * <p>The default implementation sends an HTTP 415 error, sets the "Accept" header,, +	 * and returns an empty {@code ModelAndView}. Alternatively, a fallback view could, +	 * be chosen, or the HttpMediaTypeNotSupportedException could be rethrown as-is., +		response.sendError(HttpServletResponse.SC_BAD_REQUEST, ex.getMessage());, +		if (logger.isWarnEnabled()) {, +			logger.warn("Failed to convert request element: " + ex);, +		}, +		if (logger.isWarnEnabled()) {, +			logger.warn("Failed to bind request element: " + ex);, +		}, +		if (logger.isWarnEnabled()) {, +			logger.warn("Failed to read HTTP message: " + ex);, +		}, +		if (logger.isWarnEnabled()) {, +			logger.warn("Failed to write HTTP message: " + ex);, +		}, +, +, +	 * By default, an HTTP 400 error is sent back to the client., +, +	 * <p>The default implementation sends an HTTP 404 error and returns an empty, +	 * {@code ModelAndView}. Alternatively, a fallback view could be chosen,, +	protected ModelAndView handleNoHandlerFoundException(NoHandlerFoundException ex,, +			HttpServletRequest request, HttpServletResponse response, Object handler) throws IOException {, +, +, +	/**, +	 * Invoked to send a server error. Sets the status to 500 and also sets the, +	 * request attribute "javax.servlet.error.exception" to the Exception., +	 */, +	protected void sendServerError(Exception ex, HttpServletRequest request, HttpServletResponse response), +			throws IOException {, +, +		request.setAttribute("javax.servlet.error.exception", ex);, +		response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);, +	}, +]