[+++ b/spring-websocket/src/main/java/org/springframework/web/messaging/PubSubChannelRegistry.java, +public interface PubSubChannelRegistry<M extends Message<?>, H extends MessageHandler<M>> {, +	SubscribableChannel<M, H> getClientInputChannel();, +	SubscribableChannel<M, H> getClientOutputChannel();, +	SubscribableChannel<M, H> getMessageBrokerChannel();, +++ b/spring-websocket/src/main/java/org/springframework/web/messaging/PubSubChannelRegistry.java, +public interface PubSubChannelRegistry<M extends Message<?>, H extends MessageHandler<M>> {, +	SubscribableChannel<M, H> getClientInputChannel();, +	SubscribableChannel<M, H> getClientOutputChannel();, +	SubscribableChannel<M, H> getMessageBrokerChannel();, +++ b/spring-websocket/src/main/java/org/springframework/web/messaging/support/AbstractPubSubChannelRegistry.java, +public class AbstractPubSubChannelRegistry<M extends Message<?>, H extends MessageHandler<M>> implements PubSubChannelRegistry<M, H>, InitializingBean {, +	private SubscribableChannel<M, H> clientInputChannel;, +	private SubscribableChannel<M, H> clientOutputChannel;, +	private SubscribableChannel<M, H> messageBrokerChannel;, +	@Override, +	public SubscribableChannel<M, H> getClientInputChannel() {, +		return this.clientInputChannel;, +	}, +, +	public void setClientInputChannel(SubscribableChannel<M, H> channel) {, +	public SubscribableChannel<M, H> getClientOutputChannel() {, +	public void setClientOutputChannel(SubscribableChannel<M, H> channel) {, +	public SubscribableChannel<M, H> getMessageBrokerChannel() {, +	public void setMessageBrokerChannel(SubscribableChannel<M, H> channel) {, +++ b/spring-websocket/src/main/java/org/springframework/web/messaging/PubSubChannelRegistry.java, +public interface PubSubChannelRegistry<M extends Message<?>, H extends MessageHandler<M>> {, +	SubscribableChannel<M, H> getClientInputChannel();, +	SubscribableChannel<M, H> getClientOutputChannel();, +	SubscribableChannel<M, H> getMessageBrokerChannel();, +++ b/spring-websocket/src/main/java/org/springframework/web/messaging/support/AbstractPubSubChannelRegistry.java, +public class AbstractPubSubChannelRegistry<M extends Message<?>, H extends MessageHandler<M>> implements PubSubChannelRegistry<M, H>, InitializingBean {, +	private SubscribableChannel<M, H> clientInputChannel;, +	private SubscribableChannel<M, H> clientOutputChannel;, +	private SubscribableChannel<M, H> messageBrokerChannel;, +	@Override, +	public SubscribableChannel<M, H> getClientInputChannel() {, +		return this.clientInputChannel;, +	}, +, +	public void setClientInputChannel(SubscribableChannel<M, H> channel) {, +	public SubscribableChannel<M, H> getClientOutputChannel() {, +	public void setClientOutputChannel(SubscribableChannel<M, H> channel) {, +	public SubscribableChannel<M, H> getMessageBrokerChannel() {, +	public void setMessageBrokerChannel(SubscribableChannel<M, H> channel) {, +++ b/spring-websocket/src/main/java/org/springframework/web/messaging/support/ReactorPubSubChannelRegistry.java, +import org.springframework.messaging.Message;, +import org.springframework.messaging.MessageHandler;, +public class ReactorPubSubChannelRegistry extends AbstractPubSubChannelRegistry<Message<?>, MessageHandler<Message<?>>> {]