[+++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.java, + * Copyright 2002-2019 the original author or authors., +	 * class-declared annotations, using the given supplier for obtaining a new, +	 * instance (possibly declared as a lambda expression or method reference)., +	 * @param annotatedClass the class of the bean, +	 * @param instanceSupplier a callback for creating an instance of the bean, +	 * (may be {@code null}), +	 * @param qualifiers specific qualifier annotations to consider,, +	 * in addition to qualifiers at the bean class level, +	 * @since 5.2, +	 */, +	@SuppressWarnings("unchecked"), +	public <T> void registerBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier,, +			Class<? extends Annotation>... qualifiers) {, +, +		doRegisterBean(annotatedClass, instanceSupplier, null, qualifiers);, +	}, +, +	/**, +	 * Register a bean from the given bean class, deriving its metadata from, +	 * class-declared annotations, using the given supplier for obtaining a new, +	 * instance (possibly declared as a lambda expression or method reference)., +	 * @param annotatedClass the class of the bean, +	 * @param name an explicit name for the bean, +	 * @param instanceSupplier a callback for creating an instance of the bean, +	 * (may be {@code null}), +	 * @param qualifiers specific qualifier annotations to consider,, +	 * in addition to qualifiers at the bean class level, +	 * @since 5.2, +	 */, +	@SuppressWarnings("unchecked"), +	public <T> void registerBean(Class<T> annotatedClass, String name, @Nullable Supplier<T> instanceSupplier,, +			Class<? extends Annotation>... qualifiers) {, +, +		doRegisterBean(annotatedClass, instanceSupplier, name, qualifiers);, +	}, +, +	/**, +	 * Register a bean from the given bean class, deriving its metadata from, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.java, + * Copyright 2002-2019 the original author or authors., +	 * class-declared annotations, using the given supplier for obtaining a new, +	 * instance (possibly declared as a lambda expression or method reference)., +	 * @param annotatedClass the class of the bean, +	 * @param instanceSupplier a callback for creating an instance of the bean, +	 * (may be {@code null}), +	 * @param qualifiers specific qualifier annotations to consider,, +	 * in addition to qualifiers at the bean class level, +	 * @since 5.2, +	 */, +	@SuppressWarnings("unchecked"), +	public <T> void registerBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier,, +			Class<? extends Annotation>... qualifiers) {, +, +		doRegisterBean(annotatedClass, instanceSupplier, null, qualifiers);, +	}, +, +	/**, +	 * Register a bean from the given bean class, deriving its metadata from, +	 * class-declared annotations, using the given supplier for obtaining a new, +	 * instance (possibly declared as a lambda expression or method reference)., +	 * @param annotatedClass the class of the bean, +	 * @param name an explicit name for the bean, +	 * @param instanceSupplier a callback for creating an instance of the bean, +	 * (may be {@code null}), +	 * @param qualifiers specific qualifier annotations to consider,, +	 * in addition to qualifiers at the bean class level, +	 * @since 5.2, +	 */, +	@SuppressWarnings("unchecked"), +	public <T> void registerBean(Class<T> annotatedClass, String name, @Nullable Supplier<T> instanceSupplier,, +			Class<? extends Annotation>... qualifiers) {, +, +		doRegisterBean(annotatedClass, instanceSupplier, name, qualifiers);, +	}, +, +	/**, +	 * Register a bean from the given bean class, deriving its metadata from, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigApplicationContext.java, + * Copyright 2002-2019 the original author or authors., +import java.lang.annotation.Annotation;, +	@Override, +	public final void register(Class<?>... annotatedClasses) {, +	@Override, +	public final void scan(String... basePackages) {, +	 * Register a bean from the given bean class., +	 * @param annotatedClass the class of the bean, +	 * @since 5.2, +	 */, +	public final <T> void registerBean(Class<T> annotatedClass) {, +		this.reader.doRegisterBean(annotatedClass, null, null, null);, +	}, +, +	/**, +	 * Register a bean from the given bean class, using the given supplier for, +	 * obtaining a new instance (typically declared as a lambda expression or, +	 * method reference)., +	 * @param annotatedClass the class of the bean, +	 * @param supplier a callback for creating an instance of the bean, +	 * @since 5.2]