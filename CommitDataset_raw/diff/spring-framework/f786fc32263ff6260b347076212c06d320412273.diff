[+++ b/spring-core/src/main/java/org/springframework/core/convert/support/ObjectToOptionalConverter.java, + * Copyright 2002-2015 the original author or authors., + * @author Juergen Hoeller, +		else if (source instanceof Optional) {, +			return source;, +		}, +		else if (targetType.getResolvableType() == null) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/ObjectToOptionalConverter.java, + * Copyright 2002-2015 the original author or authors., + * @author Juergen Hoeller, +		else if (source instanceof Optional) {, +			return source;, +		}, +		else if (targetType.getResolvableType() == null) {, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/DefaultConversionTests.java, + * Copyright 2002-2015 the original author or authors., +	@Test, +	public void convertExistingOptional() {, +		assertSame(Optional.empty(), conversionService.convert(Optional.empty(), TypeDescriptor.valueOf(Object.class),, +				TypeDescriptor.valueOf(Optional.class)));, +		assertSame(Optional.empty(), conversionService.convert(Optional.empty(), Optional.class));, +	}, +, +, +	@SuppressWarnings("serial"), +	public static class CustomNumber extends Number {, +, +		@Override, +		public double doubleValue() {, +			return 0;, +		}, +, +		@Override, +		public float floatValue() {, +			return 0;, +		}, +, +		@Override, +		public int intValue() {, +			return 0;, +		}, +, +		@Override, +		public long longValue() {, +			return 0;, +		}, +	}, +]