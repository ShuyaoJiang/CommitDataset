[+++ b/spring-framework-reference/src/aop.xml, +          example of a crosscutting concern in Java EE applications. In Spring, +      class loader hierarchy, and is thus suitable for use in a Java EE web, +      solution to most problems in Java EE applications that are amenable to, +++ b/spring-framework-reference/src/aop.xml, +          example of a crosscutting concern in Java EE applications. In Spring, +      class loader hierarchy, and is thus suitable for use in a Java EE web, +      solution to most problems in Java EE applications that are amenable to, +++ b/spring-framework-reference/src/cci.xml, +    <para>Java EE provides a specification to standardize access to enterprise, +    information systems (EIS): the JCA (J2EE Connector Architecture). This, +        can be deployed on a Java EE application server. In such a scenario, the, +      use the system contracts of a Java EE container (connection pooling, global, +        is simply not aware of any global Java EE transactions that might be, +      <para>In managed mode (that is, in a Java EE environment), the, +        <para>The original version of this connector is provided by the Java EE, +      <para>In managed mode (that is, in a Java EE environment), the, +      <para>In managed mode (that is, in a Java EE environment), the, +    Java EE server's distributed transaction coordinator underneath).</para>, +++ b/spring-framework-reference/src/aop.xml, +          example of a crosscutting concern in Java EE applications. In Spring, +      class loader hierarchy, and is thus suitable for use in a Java EE web, +      solution to most problems in Java EE applications that are amenable to, +++ b/spring-framework-reference/src/cci.xml, +    <para>Java EE provides a specification to standardize access to enterprise, +    information systems (EIS): the JCA (J2EE Connector Architecture). This, +        can be deployed on a Java EE application server. In such a scenario, the, +      use the system contracts of a Java EE container (connection pooling, global, +        is simply not aware of any global Java EE transactions that might be, +      <para>In managed mode (that is, in a Java EE environment), the, +        <para>The original version of this connector is provided by the Java EE, +      <para>In managed mode (that is, in a Java EE environment), the, +      <para>In managed mode (that is, in a Java EE environment), the, +    Java EE server's distributed transaction coordinator underneath).</para>, +++ b/spring-framework-reference/src/jdbc.xml, +      outside of a Java EE container, either as a, +      by a Java EE server.</para>, +      Java EE's standard <literal>DataSource.getConnection</literal>. This is, +++ b/spring-framework-reference/src/aop.xml, +          example of a crosscutting concern in Java EE applications. In Spring, +      class loader hierarchy, and is thus suitable for use in a Java EE web, +      solution to most problems in Java EE applications that are amenable to, +++ b/spring-framework-reference/src/cci.xml, +    <para>Java EE provides a specification to standardize access to enterprise, +    information systems (EIS): the JCA (J2EE Connector Architecture). This, +        can be deployed on a Java EE application server. In such a scenario, the, +      use the system contracts of a Java EE container (connection pooling, global, +        is simply not aware of any global Java EE transactions that might be, +      <para>In managed mode (that is, in a Java EE environment), the, +        <para>The original version of this connector is provided by the Java EE, +      <para>In managed mode (that is, in a Java EE environment), the, +      <para>In managed mode (that is, in a Java EE environment), the, +    Java EE server's distributed transaction coordinator underneath).</para>, +++ b/spring-framework-reference/src/jdbc.xml, +      outside of a Java EE container, either as a, +      by a Java EE server.</para>, +      Java EE's standard <literal>DataSource.getConnection</literal>. This is, +++ b/spring-framework-reference/src/jms.xml, +    Java EE's message-driven bean style, Spring provides a number of message, +      In order to use this implementation, Java EE containers typically require, +      <para>In a Java EE environment, the, +      your Java EE server's / JMS provider's documentation.)</para>, +      delegates to the Java EE server's transaction subsystem). Note that the, +      registered with your JTA transaction coordinator! (Check your Java EE, +            Java EE-style transaction management where the given, +++ b/spring-framework-reference/src/aop.xml, +          example of a crosscutting concern in Java EE applications. In Spring, +      class loader hierarchy, and is thus suitable for use in a Java EE web, +      solution to most problems in Java EE applications that are amenable to, +++ b/spring-framework-reference/src/cci.xml, +    <para>Java EE provides a specification to standardize access to enterprise, +    information systems (EIS): the JCA (J2EE Connector Architecture). This, +        can be deployed on a Java EE application server. In such a scenario, the, +      use the system contracts of a Java EE container (connection pooling, global, +        is simply not aware of any global Java EE transactions that might be, +      <para>In managed mode (that is, in a Java EE environment), the, +        <para>The original version of this connector is provided by the Java EE, +      <para>In managed mode (that is, in a Java EE environment), the, +      <para>In managed mode (that is, in a Java EE environment), the, +    Java EE server's distributed transaction coordinator underneath).</para>, +++ b/spring-framework-reference/src/jdbc.xml, +      outside of a Java EE container, either as a, +      by a Java EE server.</para>, +      Java EE's standard <literal>DataSource.getConnection</literal>. This is, +++ b/spring-framework-reference/src/jms.xml, +    Java EE's message-driven bean style, Spring provides a number of message, +      In order to use this implementation, Java EE containers typically require, +      <para>In a Java EE environment, the, +      your Java EE server's / JMS provider's documentation.)</para>, +      delegates to the Java EE server's transaction subsystem). Note that the, +      registered with your JTA transaction coordinator! (Check your Java EE, +            Java EE-style transaction management where the given, +++ b/spring-framework-reference/src/overview.xml, +<chapter id="overview">, +  <title>Introduction to Spring Framework</title>, +  <section id="overview-dependency-injection">, +  <section id="overview-modules">, +++ b/spring-framework-reference/src/aop.xml, +          example of a crosscutting concern in Java EE applications. In Spring, +      class loader hierarchy, and is thus suitable for use in a Java EE web]