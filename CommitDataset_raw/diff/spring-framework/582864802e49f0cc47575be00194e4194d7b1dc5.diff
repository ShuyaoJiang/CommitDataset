[+++ b/spring-web/src/main/java/org/springframework/web/method/support/ModelAndViewContainer.java, +			if (this.redirectModel == null) {, +				this.redirectModel = new ModelMap();, +			}, +			return this.redirectModel;, +++ b/spring-web/src/main/java/org/springframework/web/method/support/ModelAndViewContainer.java, +			if (this.redirectModel == null) {, +				this.redirectModel = new ModelMap();, +			}, +			return this.redirectModel;, +++ b/spring-web/src/test/java/org/springframework/web/method/support/ModelAndViewContainerTests.java, + * Copyright 2002-2016 the original author or authors., +	@Test // SPR-14045, +	public void ignoreDefaultModelAndWithoutRedirectModel() {, +		this.mavContainer.setIgnoreDefaultModelOnRedirect(true);, +		this.mavContainer.setRedirectModelScenario(true);, +		this.mavContainer.addAttribute("name", "value");, +, +		assertEquals(1, this.mavContainer.getModel().size());, +		assertEquals("value", this.mavContainer.getModel().get("name"));, +	}, +, +, +++ b/spring-web/src/main/java/org/springframework/web/method/support/ModelAndViewContainer.java, +			if (this.redirectModel == null) {, +				this.redirectModel = new ModelMap();, +			}, +			return this.redirectModel;, +++ b/spring-web/src/test/java/org/springframework/web/method/support/ModelAndViewContainerTests.java, + * Copyright 2002-2016 the original author or authors., +	@Test // SPR-14045, +	public void ignoreDefaultModelAndWithoutRedirectModel() {, +		this.mavContainer.setIgnoreDefaultModelOnRedirect(true);, +		this.mavContainer.setRedirectModelScenario(true);, +		this.mavContainer.addAttribute("name", "value");, +, +		assertEquals(1, this.mavContainer.getModel().size());, +		assertEquals("value", this.mavContainer.getModel().get("name"));, +	}, +, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/ModelAndViewMethodReturnValueHandlerTests.java, + * Copyright 2002-2016 the original author or authors., +	@Test // SPR-14045, +	public void handleRedirectWithIgnoreDefaultModel() throws Exception {, +		mavContainer.setIgnoreDefaultModelOnRedirect(true);, +, +		RedirectView redirectView = new RedirectView();, +		ModelAndView mav = new ModelAndView(redirectView, "name", "value");, +		handler.handleReturnValue(mav, returnParamModelAndView, mavContainer, webRequest);, +, +		ModelMap model = mavContainer.getModel();, +		assertSame(redirectView, mavContainer.getView());, +		assertEquals(1, model.size());, +		assertEquals("value", model.get("name"));, +	}, +]