[+++ b/org.springframework.context/src/main/java/org/springframework/ui/format/support/FormattingConversionServiceAdapter.java, +			if (source == null) {, +				return null;, +			}, +++ b/org.springframework.context/src/main/java/org/springframework/ui/format/support/FormattingConversionServiceAdapter.java, +			if (source == null) {, +				return null;, +			}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/TypeDescriptor.java, +	/**, +	 * Internal constructor for a Collection TypeDescriptor., +	 * @see #collection(Class, TypeDescriptor), +	 */, +	private TypeDescriptor(Class<?> collectionType, TypeDescriptor elementType) {, +	/**, +	 * Create a TypeDescriptor for a Collection type., +	 * @param type the collection type, +	 * @param elementType the collection's element type, +	 * @return the type descriptor, +	 */, +	public static TypeDescriptor collection(Class<?> type, TypeDescriptor elementType) {, +		return new TypeDescriptor(type, elementType);, +	}, +	, +++ b/org.springframework.context/src/main/java/org/springframework/ui/format/support/FormattingConversionServiceAdapter.java, +			if (source == null) {, +				return null;, +			}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/TypeDescriptor.java, +	/**, +	 * Internal constructor for a Collection TypeDescriptor., +	 * @see #collection(Class, TypeDescriptor), +	 */, +	private TypeDescriptor(Class<?> collectionType, TypeDescriptor elementType) {, +	/**, +	 * Create a TypeDescriptor for a Collection type., +	 * @param type the collection type, +	 * @param elementType the collection's element type, +	 * @return the type descriptor, +	 */, +	public static TypeDescriptor collection(Class<?> type, TypeDescriptor elementType) {, +		return new TypeDescriptor(type, elementType);, +	}, +	, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +++ b/org.springframework.context/src/main/java/org/springframework/ui/format/support/FormattingConversionServiceAdapter.java, +			if (source == null) {, +				return null;, +			}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/TypeDescriptor.java, +	/**, +	 * Internal constructor for a Collection TypeDescriptor., +	 * @see #collection(Class, TypeDescriptor), +	 */, +	private TypeDescriptor(Class<?> collectionType, TypeDescriptor elementType) {, +	/**, +	 * Create a TypeDescriptor for a Collection type., +	 * @param type the collection type, +	 * @param elementType the collection's element type, +	 * @return the type descriptor, +	 */, +	public static TypeDescriptor collection(Class<?> type, TypeDescriptor elementType) {, +		return new TypeDescriptor(type, elementType);, +	}, +	, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		if (source == null) {, +			return this.conversionService.convertNullSource(sourceType, targetType);, +		}		, +++ b/org.springframework.context/src/main/java/org/springframework/ui/format/support/FormattingConversionServiceAdapter.java, +			if (source == null) {, +				return null;, +			}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/TypeDescriptor.java, +	/**, +	 * Internal constructor for a Collection TypeDescriptor., +	 * @see #collection(Class, TypeDescriptor), +	 */, +	private TypeDescriptor(Class<?> collectionType, TypeDescriptor elementType) {, +	/**, +	 * Create a TypeDescriptor for a Collection type., +	 * @param type the collection type, +	 * @param elementType the collection's element type, +	 * @return the type descriptor, +	 */, +	public static TypeDescriptor collection(Class<?> type, TypeDescriptor elementType) {, +		return new TypeDescriptor(type, elementType);, +	}, +	, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		if (source == null) {, +			return this.conversionService.convertNullSource(sourceType, targetType);, +		}		, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayConverter.java, +		if (source == null) {, +			return this.conversionService.convertNullSource(sourceType, targetType);, +		}		, +++ b/org.springframework.context/src/main/java/org/springframework/ui/format/support/FormattingConversionServiceAdapter.java]