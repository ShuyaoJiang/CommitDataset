[+++ b/org.springframework.context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java, +, +, +, +++ b/org.springframework.context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java, +, +, +, +++ b/org.springframework.context/src/main/java/org/springframework/format/annotation/NumberFormat.java, +, +, +, +++ b/org.springframework.context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java, +, +, +, +++ b/org.springframework.context/src/main/java/org/springframework/format/annotation/NumberFormat.java, +, +, +, +++ b/org.springframework.context/src/main/java/org/springframework/format/datetime/joda/DateTimeFormatAnnotationFormatterFactory.java, +, +, + *, + * @author Juergen Hoeller, +, +, +		}, +		else if (ReadablePartial.class.isAssignableFrom(fieldType)) {, +		}, +		else if (Calendar.class.isAssignableFrom(fieldType)) {, +		}, +		else {, +, +		}, +		else if (annotation.iso() != ISO.NONE) {, +			return forIso(annotation.iso());, +		}, +		else {, +	private DateTimeFormatter forIso(ISO iso) {, +		}, +		else if (iso == ISO.TIME) {, +		}, +		else {, +++ b/org.springframework.context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java, +, +, +, +++ b/org.springframework.context/src/main/java/org/springframework/format/annotation/NumberFormat.java, +, +, +, +++ b/org.springframework.context/src/main/java/org/springframework/format/datetime/joda/DateTimeFormatAnnotationFormatterFactory.java, +, +, + *, + * @author Juergen Hoeller, +, +, +		}, +		else if (ReadablePartial.class.isAssignableFrom(fieldType)) {, +		}, +		else if (Calendar.class.isAssignableFrom(fieldType)) {, +		}, +		else {, +, +		}, +		else if (annotation.iso() != ISO.NONE) {, +			return forIso(annotation.iso());, +		}, +		else {, +	private DateTimeFormatter forIso(ISO iso) {, +		}, +		else if (iso == ISO.TIME) {, +		}, +		else {, +++ b/org.springframework.context/src/main/java/org/springframework/format/datetime/joda/JodaTimeFormattingConfigurer.java, +, +, + *, + * @author Juergen Hoeller, + * @see #setDateStyle, + * @see #setTimeStyle, + * @see #setDateTimeStyle, + * @see #setUseIsoFormat, + * @see #installJodaTimeFormatting, +	private boolean useIsoFormat;, +, +	 * Set the default format style of Joda {@link LocalDateTime} and {@link DateTime} objects,, +	 * as well as JDK {@link Date} and {@link Calendar} objects., +	public void setUseIsoFormat(boolean useIsoFormat) {, +		this.useIsoFormat = useIsoFormat;, +, +		JodaTimeConverters.registerConverters(formatterRegistry);, +		formatterRegistry.addFormatterForFieldType(LocalDate.class,, +				new ReadablePartialPrinter(jodaDateFormatter), new DateTimeParser(jodaDateFormatter));, +		formatterRegistry.addFormatterForFieldType(LocalTime.class,, +				new ReadablePartialPrinter(jodaTimeFormatter), new DateTimeParser(jodaTimeFormatter));, +		formatterRegistry.addFormatterForFieldType(LocalDateTime.class,, +				new ReadablePartialPrinter(jodaDateTimeFormatter), dateTimeParser);]