[+++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/SimpMessagingTemplateTests.java, + * Copyright 2002-2019 the original author or authors., +		assertEquals("/user/https:%2F%2Fjoe.openid.example.org%2F/queue/foo", headerAccessor.getDestination());, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/SimpMessagingTemplateTests.java, + * Copyright 2002-2019 the original author or authors., +		assertEquals("/user/https:%2F%2Fjoe.openid.example.org%2F/queue/foo", headerAccessor.getDestination());, +++ b/spring-oxm/src/test/java/org/springframework/oxm/AbstractMarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +		Attr namespace = expected.createAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:tns");, +		Attr namespace = expected.createAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:tns");, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/SimpMessagingTemplateTests.java, + * Copyright 2002-2019 the original author or authors., +		assertEquals("/user/https:%2F%2Fjoe.openid.example.org%2F/queue/foo", headerAccessor.getDestination());, +++ b/spring-oxm/src/test/java/org/springframework/oxm/AbstractMarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +		Attr namespace = expected.createAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:tns");, +		Attr namespace = expected.createAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:tns");, +++ b/spring-oxm/src/test/java/org/springframework/oxm/castor/CastorMarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +			" xmlns:java=\"http://java.sun.com\"" +, +			" xmlns:java=\"http://java.sun.com\"" +, +			" xmlns:java=\"http://java.sun.com\"" +, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/SimpMessagingTemplateTests.java, + * Copyright 2002-2019 the original author or authors., +		assertEquals("/user/https:%2F%2Fjoe.openid.example.org%2F/queue/foo", headerAccessor.getDestination());, +++ b/spring-oxm/src/test/java/org/springframework/oxm/AbstractMarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +		Attr namespace = expected.createAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:tns");, +		Attr namespace = expected.createAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:tns");, +++ b/spring-oxm/src/test/java/org/springframework/oxm/castor/CastorMarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +			" xmlns:java=\"http://java.sun.com\"" +, +			" xmlns:java=\"http://java.sun.com\"" +, +			" xmlns:java=\"http://java.sun.com\"" +, +++ b/spring-oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2UnmarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +				"<xop:Include href='cid:6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws' xmlns:xop='http://www.w3.org/2004/08/xop/include'/>" +, +				"<xop:Include href='cid:99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws' xmlns:xop='http://www.w3.org/2004/08/xop/include'/>" +, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/SimpMessagingTemplateTests.java, + * Copyright 2002-2019 the original author or authors., +		assertEquals("/user/https:%2F%2Fjoe.openid.example.org%2F/queue/foo", headerAccessor.getDestination());, +++ b/spring-oxm/src/test/java/org/springframework/oxm/AbstractMarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +		Attr namespace = expected.createAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:tns");, +		Attr namespace = expected.createAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:tns");, +++ b/spring-oxm/src/test/java/org/springframework/oxm/castor/CastorMarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +			" xmlns:java=\"http://java.sun.com\"" +, +			" xmlns:java=\"http://java.sun.com\"" +, +			" xmlns:java=\"http://java.sun.com\"" +, +++ b/spring-oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2UnmarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +				"<xop:Include href='cid:6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws' xmlns:xop='http://www.w3.org/2004/08/xop/include'/>" +, +				"<xop:Include href='cid:99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws' xmlns:xop='http://www.w3.org/2004/08/xop/include'/>" +, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilderTests.java, +		webRequest.setUrl(new URL("http://example.com/"));, +		assertThat(uri, equalTo("http://example.com/test/this/here"));, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/SimpMessagingTemplateTests.java, + * Copyright 2002-2019 the original author or authors., +		assertEquals("/user/https:%2F%2Fjoe.openid.example.org%2F/queue/foo", headerAccessor.getDestination());, +++ b/spring-oxm/src/test/java/org/springframework/oxm/AbstractMarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +		Attr namespace = expected.createAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:tns");, +		Attr namespace = expected.createAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:tns");, +++ b/spring-oxm/src/test/java/org/springframework/oxm/castor/CastorMarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +			" xmlns:java=\"http://java.sun.com\"" +, +			" xmlns:java=\"http://java.sun.com\"" +, +			" xmlns:java=\"http://java.sun.com\"" +, +++ b/spring-oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2UnmarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +				"<xop:Include href='cid:6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws' xmlns:xop='http://www.w3.org/2004/08/xop/include'/>" +, +				"<xop:Include href='cid:99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws' xmlns:xop='http://www.w3.org/2004/08/xop/include'/>" +, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilderTests.java, +		webRequest.setUrl(new URL("http://example.com/"));, +		assertThat(uri, equalTo("http://example.com/test/this/here"));, +++ b/spring-web/src/test/java/org/springframework/http/RequestEntityTests.java, +		String url = "https://www.{host}.com/{path}";, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/SimpMessagingTemplateTests.java, + * Copyright 2002-2019 the original author or authors., +		assertEquals("/user/https:%2F%2Fjoe.openid.example.org%2F/queue/foo", headerAccessor.getDestination());, +++ b/spring-oxm/src/test/java/org/springframework/oxm/AbstractMarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +		Attr namespace = expected.createAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:tns");, +		Attr namespace = expected.createAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:tns");, +++ b/spring-oxm/src/test/java/org/springframework/oxm/castor/CastorMarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +			" xmlns:java=\"http://java.sun.com\"" +, +			" xmlns:java=\"http://java.sun.com\"" +, +			" xmlns:java=\"http://java.sun.com\"" +, +++ b/spring-oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2UnmarshallerTests.java, + * Copyright 2002-2019 the original author or authors., +				"<xop:Include href='cid:6b76528d-7a9c-4def-8e13-095ab89e9bb7@http://springframework.org/spring-ws' xmlns:xop='http://www.w3.org/2004/08/xop/include'/>" +, +				"<xop:Include href='cid:99bd1592-0521-41a2-9688-a8bfb40192fb@http://springframework.org/spring-ws' xmlns:xop='http://www.w3.org/2004/08/xop/include'/>" +, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilderTests.java, +		webRequest.setUrl(new URL("http://example.com/"));, +		assertThat(uri, equalTo("http://example.com/test/this/here"));, +++ b/spring-web/src/test/java/org/springframework/http/RequestEntityTests.java, +		String url = "https://www.{host}.com/{path}";, +++ b/spring-web/src/test/java/org/springframework/http/server/ServletServerHttpRequestTests.java]