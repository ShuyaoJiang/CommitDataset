[+++ b/spring-context-support/src/test/java/org/springframework/cache/jcache/JCacheEhCacheTests.java, +import javax.annotation.Resource;, +import javax.cache.spi.CachingProvider;, +		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext();, +		context.getBeanFactory().registerSingleton("cachingProvider", getCachingProvider());, +		context.register(EnableCachingConfig.class);, +		context.refresh();, +	protected CachingProvider getCachingProvider() {, +		return Caching.getCachingProvider();, +	}, +, +, +		@Resource, +		CachingProvider cachingProvider;, +, +			CacheManager cacheManager = this.cachingProvider.getCacheManager();, +++ b/spring-context-support/src/test/java/org/springframework/cache/jcache/JCacheEhCacheTests.java, +import javax.annotation.Resource;, +import javax.cache.spi.CachingProvider;, +		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext();, +		context.getBeanFactory().registerSingleton("cachingProvider", getCachingProvider());, +		context.register(EnableCachingConfig.class);, +		context.refresh();, +	protected CachingProvider getCachingProvider() {, +		return Caching.getCachingProvider();, +	}, +, +, +		@Resource, +		CachingProvider cachingProvider;, +, +			CacheManager cacheManager = this.cachingProvider.getCacheManager();, +++ b/spring-test/src/test/java/org/springframework/cache/jcache/JCacheEhCache3Tests.java, +import javax.cache.Caching;, +import javax.cache.spi.CachingProvider;, +, + * @since 4.2.1, +	@Override, +	protected CachingProvider getCachingProvider() {, +		return Caching.getCachingProvider("org.ehcache.jsr107.EhcacheCachingProvider");, +	}, +]