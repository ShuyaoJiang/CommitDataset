[+++ b/spring-context/src/main/kotlin/org/springframework/context/support/BeanDefinitionDsl.kt, +import org.springframework.context.ApplicationContextInitializer, +class BeanDefinitionDsl(private val condition: (ConfigurableEnvironment) -> Boolean = { true }) : ApplicationContextInitializer<GenericApplicationContext> {, +	 * Register the bean defined via the DSL on the provided application context., +	override fun initialize(context: GenericApplicationContext) {, +			child.initialize(context), +++ b/spring-context/src/main/kotlin/org/springframework/context/support/BeanDefinitionDsl.kt, +import org.springframework.context.ApplicationContextInitializer, +class BeanDefinitionDsl(private val condition: (ConfigurableEnvironment) -> Boolean = { true }) : ApplicationContextInitializer<GenericApplicationContext> {, +	 * Register the bean defined via the DSL on the provided application context., +	override fun initialize(context: GenericApplicationContext) {, +			child.initialize(context), +++ b/spring-context/src/test/kotlin/org/springframework/context/support/BeanDefinitionDslTests.kt, +		val context = GenericApplicationContext().apply {, +			beans.initialize(this), +			refresh(), +		}, +		val context = GenericApplicationContext().apply {, +			beans.initialize(this), +			refresh(), +		}, +			beans.initialize(this), +			refresh()]