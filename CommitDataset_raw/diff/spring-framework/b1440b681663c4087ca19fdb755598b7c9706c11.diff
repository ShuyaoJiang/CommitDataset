[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-web/src/test/java/org/springframework/web/util/pattern/PathPatternParserTests.java, +		assertTrue(pp.matches(PathPatternTests.toPathContainer(path)));, +		assertFalse(pp.matches(PathPatternTests.toPathContainer(path)));, +		 return pp.matchAndExtract(PathPatternTests.toPathContainer(path));, +		return PathPatternTests.toPathContainer(path);, +++ /dev/null, +++ /dev/null, +++ b/spring-web/src/test/java/org/springframework/web/util/pattern/PathPatternParserTests.java, +		assertTrue(pp.matches(PathPatternTests.toPathContainer(path)));, +		assertFalse(pp.matches(PathPatternTests.toPathContainer(path)));, +		 return pp.matchAndExtract(PathPatternTests.toPathContainer(path));, +		return PathPatternTests.toPathContainer(path);, +++ b/spring-web/src/test/java/org/springframework/web/util/pattern/PathPatternTests.java, +/*, + * Copyright 2002-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.util.pattern;, +, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.Comparator;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +, +import org.hamcrest.Matchers;, +import org.junit.Ignore;, +import org.junit.Rule;, +import org.junit.Test;, +import org.junit.rules.ExpectedException;, +, +import org.springframework.http.server.PathContainer;, +import org.springframework.http.server.PathContainer.Element;, +import org.springframework.util.AntPathMatcher;, +import org.springframework.web.util.pattern.PathPattern.PathMatchResult;, +import org.springframework.web.util.pattern.PathPattern.PathRemainingMatchInfo;, +, +import static org.hamcrest.CoreMatchers.containsString;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertNull;, +import static org.junit.Assert.assertThat;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +, +/**, + * Exercise matching of {@link PathPattern} objects., + *, + * @author Andy Clement, + */, +public class PathPatternTests {, +, +	private char separator = PathPatternParser.DEFAULT_SEPARATOR;, +, +, +	@Test, +	public void pathContainer() {, +		assertEquals("[/][abc][/][def]",elementsToString(toPathContainer("/abc/def").elements()));, +		assertEquals("[abc][/][def]",elementsToString(toPathContainer("abc/def").elements()));, +		assertEquals("[abc][/][def][/]",elementsToString(toPathContainer("abc/def/").elements()));, +		assertEquals("[abc][/][/][def][/][/]",elementsToString(toPathContainer("abc//def//").elements()));, +		assertEquals("[/]",elementsToString(toPathContainer("/").elements()));, +		assertEquals("[/][/][/]",elementsToString(toPathContainer("///").elements()));, +	}, +, +	@Test, +	public void matching_LiteralPathElement() {, +		checkMatches("foo", "foo");, +		checkNoMatch("foo", "bar");, +		checkNoMatch("foo", "/foo");, +		checkNoMatch("/foo", "foo");, +		checkMatches("/f", "/f");, +		checkMatches("/foo", "/foo");, +		checkNoMatch("/foo", "/food");, +		checkNoMatch("/food", "/foo");, +		checkMatches("/foo/", "/foo/");, +		checkMatches("/foo/bar/woo", "/foo/bar/woo");, +		checkMatches("foo/bar/woo", "foo/bar/woo");, +	}, +, +	@Test]