[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerSupport.java, +/*, + * Copyright 2002-2012 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.web.servlet.mvc.method.annotation;, +, +import java.util.HashSet;, +import java.util.List;, +import java.util.Set;, +, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +import org.springframework.beans.ConversionNotSupportedException;, +import org.springframework.beans.TypeMismatchException;, +import org.springframework.http.HttpHeaders;, +import org.springframework.http.HttpMethod;, +import org.springframework.http.HttpStatus;, +import org.springframework.http.MediaType;, +import org.springframework.http.ResponseEntity;, +import org.springframework.http.converter.HttpMessageNotReadableException;, +import org.springframework.http.converter.HttpMessageNotWritableException;, +import org.springframework.util.CollectionUtils;, +import org.springframework.validation.BindException;, +import org.springframework.web.HttpMediaTypeNotAcceptableException;, +import org.springframework.web.HttpMediaTypeNotSupportedException;, +import org.springframework.web.HttpRequestMethodNotSupportedException;, +import org.springframework.web.bind.MethodArgumentNotValidException;, +import org.springframework.web.bind.MissingServletRequestParameterException;, +import org.springframework.web.bind.ServletRequestBindingException;, +import org.springframework.web.bind.annotation.ControllerAdvice;, +import org.springframework.web.bind.annotation.ExceptionHandler;, +import org.springframework.web.bind.annotation.RequestMapping;, +import org.springframework.web.context.request.WebRequest;, +import org.springframework.web.multipart.support.MissingServletRequestPartException;, +import org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException;, +, +/**, + * A convenient base for classes with {@link ExceptionHandler} methods providing, + * infrastructure to handle standard Spring MVC exceptions. The functionality is, + * equivalent to that of the {@link DefaultHandlerExceptionResolver} except it, + * can be customized to write error content to the body of the response. If there, + * is no need to write error content, use {@code DefaultHandlerExceptionResolver}, + * instead., + *, + * <p>It is expected the sub-classes will be annotated with, + * {@link ControllerAdvice @ControllerAdvice} and that, + * {@link ExceptionHandlerExceptionResolver} is configured to ensure this class, + * applies to exceptions from any {@link RequestMapping @RequestMapping} method., + *, + * @author Rossen Stoyanchev, + * @since 3.2, + *, + * @see org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver, + */, +public abstract class ExceptionHandlerSupport {, +, +	protected final Log logger = LogFactory.getLog(getClass());, +, +	/**, +	 * Log category to use when no mapped handler is found for a request., +	 * @see #pageNotFoundLogger, +	 */, +	public static final String PAGE_NOT_FOUND_LOG_CATEGORY = "org.springframework.web.servlet.PageNotFound";, +, +	/**, +	 * Additional logger to use when no mapped handler is found for a request., +	 * @see #PAGE_NOT_FOUND_LOG_CATEGORY, +	 */, +	protected static final Log pageNotFoundLogger = LogFactory.getLog(PAGE_NOT_FOUND_LOG_CATEGORY);, +, +, +	/**, +	 * Provides handling for standard Spring MVC exceptions., +	 * @param ex the target exception, +	 * @param request the current request, +	 */, +	@ExceptionHandler(value={, +			NoSuchRequestHandlingMethodException.class,, +			HttpRequestMethodNotSupportedException.class,, +			HttpMediaTypeNotSupportedException.class,, +			HttpMediaTypeNotAcceptableException.class,, +			MissingServletRequestParameterException.class,, +			ServletRequestBindingException.class,, +			ConversionNotSupportedException.class,, +			TypeMismatchException.class,, +			HttpMessageNotReadableException.class,, +			HttpMessageNotWritableException.class,, +			MethodArgumentNotValidException.class,]