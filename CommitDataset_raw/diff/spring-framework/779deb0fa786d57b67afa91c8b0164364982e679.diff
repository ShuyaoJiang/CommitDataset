[+++ b/spring-context/src/test/java/org/springframework/aop/aspectj/AroundAdviceBindingTests.java, + * Copyright 2002-2017 the original author or authors., +		verify(mockCollaborator).oneObjectArg(this.testBeanTarget);, +		verify(mockCollaborator).oneIntAndOneObject(5, this.testBeanProxy);, +		verify(mockCollaborator).justJoinPoint("getAge");, +++ b/spring-context/src/test/java/org/springframework/aop/aspectj/AroundAdviceBindingTests.java, + * Copyright 2002-2017 the original author or authors., +		verify(mockCollaborator).oneObjectArg(this.testBeanTarget);, +		verify(mockCollaborator).oneIntAndOneObject(5, this.testBeanProxy);, +		verify(mockCollaborator).justJoinPoint("getAge");, +++ b/spring-tx/src/main/java/org/springframework/transaction/support/TransactionSynchronizationManager.java, +		currentTransactionReadOnly.remove();, +		currentTransactionIsolationLevel.remove();, +++ b/spring-context/src/test/java/org/springframework/aop/aspectj/AroundAdviceBindingTests.java, + * Copyright 2002-2017 the original author or authors., +		verify(mockCollaborator).oneObjectArg(this.testBeanTarget);, +		verify(mockCollaborator).oneIntAndOneObject(5, this.testBeanProxy);, +		verify(mockCollaborator).justJoinPoint("getAge");, +++ b/spring-tx/src/main/java/org/springframework/transaction/support/TransactionSynchronizationManager.java, +		currentTransactionReadOnly.remove();, +		currentTransactionIsolationLevel.remove();, +++ b/spring-web/src/test/java/org/springframework/web/context/request/async/WebAsyncManagerTests.java, +		willThrow(exception).given(interceptor).postProcess(this.asyncWebRequest, deferredResult, 25);, +++ b/spring-context/src/test/java/org/springframework/aop/aspectj/AroundAdviceBindingTests.java, + * Copyright 2002-2017 the original author or authors., +		verify(mockCollaborator).oneObjectArg(this.testBeanTarget);, +		verify(mockCollaborator).oneIntAndOneObject(5, this.testBeanProxy);, +		verify(mockCollaborator).justJoinPoint("getAge");, +++ b/spring-tx/src/main/java/org/springframework/transaction/support/TransactionSynchronizationManager.java, +		currentTransactionReadOnly.remove();, +		currentTransactionIsolationLevel.remove();, +++ b/spring-web/src/test/java/org/springframework/web/context/request/async/WebAsyncManagerTests.java, +		willThrow(exception).given(interceptor).postProcess(this.asyncWebRequest, deferredResult, 25);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractXlsView.java, +		renderWorkbook(workbook, response);]