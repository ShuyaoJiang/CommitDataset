[+++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationAttributesReadingVisitor.java, + * Copyright 2002-2017 the original author or authors., +					this.attributesMap.add(annotationName,, +							AnnotationUtils.getAnnotationAttributes(annotation, false, true));, +			catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationAttributesReadingVisitor.java, + * Copyright 2002-2017 the original author or authors., +					this.attributesMap.add(annotationName,, +							AnnotationUtils.getAnnotationAttributes(annotation, false, true));, +			catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationReadingVisitorUtils.java, + * Copyright 2002-2017 the original author or authors., +			catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationAttributesReadingVisitor.java, + * Copyright 2002-2017 the original author or authors., +					this.attributesMap.add(annotationName,, +							AnnotationUtils.getAnnotationAttributes(annotation, false, true));, +			catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationReadingVisitorUtils.java, + * Copyright 2002-2017 the original author or authors., +			catch (Throwable ex) {, +++ b/spring-web/src/test/java/org/springframework/web/context/request/RequestScopeTests.java, + * Copyright 2002-2017 the original author or authors., +	public void setup() throws Exception {, +, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationAttributesReadingVisitor.java, + * Copyright 2002-2017 the original author or authors., +					this.attributesMap.add(annotationName,, +							AnnotationUtils.getAnnotationAttributes(annotation, false, true));, +			catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationReadingVisitorUtils.java, + * Copyright 2002-2017 the original author or authors., +			catch (Throwable ex) {, +++ b/spring-web/src/test/java/org/springframework/web/context/request/RequestScopeTests.java, + * Copyright 2002-2017 the original author or authors., +	public void setup() throws Exception {, +, +++ b/spring-web/src/test/java/org/springframework/web/context/request/RequestScopedProxyTests.java, + * Copyright 2002-2017 the original author or authors., +	private final DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory();, +, +	public void setup() {, +, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationAttributesReadingVisitor.java, + * Copyright 2002-2017 the original author or authors., +					this.attributesMap.add(annotationName,, +							AnnotationUtils.getAnnotationAttributes(annotation, false, true));, +			catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationReadingVisitorUtils.java, + * Copyright 2002-2017 the original author or authors., +			catch (Throwable ex) {, +++ b/spring-web/src/test/java/org/springframework/web/context/request/RequestScopeTests.java, + * Copyright 2002-2017 the original author or authors., +	public void setup() throws Exception {, +, +++ b/spring-web/src/test/java/org/springframework/web/context/request/RequestScopedProxyTests.java, + * Copyright 2002-2017 the original author or authors., +	private final DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory();, +, +	public void setup() {, +, +++ b/spring-web/src/test/java/org/springframework/web/context/request/ServletWebRequestHttpMethodsTests.java, + * Copyright 2002-2017 the original author or authors., +import static org.junit.Assert.*;, +, +, +	public void setup() {, +, +	@Test  // SPR-13516, +	@Test  // SPR-14224, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationAttributesReadingVisitor.java, + * Copyright 2002-2017 the original author or authors., +					this.attributesMap.add(annotationName,, +							AnnotationUtils.getAnnotationAttributes(annotation, false, true));, +			catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationReadingVisitorUtils.java, + * Copyright 2002-2017 the original author or authors., +			catch (Throwable ex) {, +++ b/spring-web/src/test/java/org/springframework/web/context/request/RequestScopeTests.java, + * Copyright 2002-2017 the original author or authors., +	public void setup() throws Exception {, +, +++ b/spring-web/src/test/java/org/springframework/web/context/request/RequestScopedProxyTests.java, + * Copyright 2002-2017 the original author or authors., +	private final DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory();, +, +	public void setup() {, +, +++ b/spring-web/src/test/java/org/springframework/web/context/request/ServletWebRequestHttpMethodsTests.java, + * Copyright 2002-2017 the original author or authors., +import static org.junit.Assert.*;, +, +, +	public void setup() {, +, +	@Test  // SPR-13516, +	@Test  // SPR-14224, +++ b/spring-web/src/test/java/org/springframework/web/context/request/ServletWebRequestTests.java, + * Copyright 2002-2017 the original author or authors., +import static org.junit.Assert.*;]