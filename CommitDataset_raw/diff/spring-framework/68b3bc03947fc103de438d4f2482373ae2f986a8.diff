[+++ b/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, +import org.springframework.util.Assert;, +				Assert.state(!NamingManager.hasInitialContextFactoryBuilder(),, +++ b/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, +import org.springframework.util.Assert;, +				Assert.state(!NamingManager.hasInitialContextFactoryBuilder(),, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockExpressionEvaluator.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.util.Assert;, +		Assert.isNull(variableResolver, "Custom VariableResolver not supported");, +		Assert.isNull(functionMapper, "Custom FunctionMapper not supported");, +++ b/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, +import org.springframework.util.Assert;, +				Assert.state(!NamingManager.hasInitialContextFactoryBuilder(),, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockExpressionEvaluator.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.util.Assert;, +		Assert.isNull(variableResolver, "Custom VariableResolver not supported");, +		Assert.isNull(functionMapper, "Custom FunctionMapper not supported");, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockFilterChain.java, + * Copyright 2002-2016 the original author or authors., +		Assert.state(this.request == null, "This FilterChain has already been called!");, +++ b/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, +import org.springframework.util.Assert;, +				Assert.state(!NamingManager.hasInitialContextFactoryBuilder(),, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockExpressionEvaluator.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.util.Assert;, +		Assert.isNull(variableResolver, "Custom VariableResolver not supported");, +		Assert.isNull(functionMapper, "Custom FunctionMapper not supported");, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockFilterChain.java, + * Copyright 2002-2016 the original author or authors., +		Assert.state(this.request == null, "This FilterChain has already been called!");, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +		Assert.state(this.active, "Request is not active anymore");, +		Assert.state(this.asyncSupported, "Async not supported");, +++ b/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, +import org.springframework.util.Assert;, +				Assert.state(!NamingManager.hasInitialContextFactoryBuilder(),, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockExpressionEvaluator.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.util.Assert;, +		Assert.isNull(variableResolver, "Custom VariableResolver not supported");, +		Assert.isNull(functionMapper, "Custom FunctionMapper not supported");, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockFilterChain.java, + * Copyright 2002-2016 the original author or authors., +		Assert.state(this.request == null, "This FilterChain has already been called!");, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +		Assert.state(this.active, "Request is not active anymore");, +		Assert.state(this.asyncSupported, "Async not supported");, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, +		Assert.state(this.outputStreamAccessAllowed, "OutputStream access not allowed");, +		Assert.state(this.writerAccessAllowed, "Writer access not allowed");, +		Assert.state(!isCommitted(), "Cannot reset buffer - response is already committed");, +		Assert.state(!isCommitted(), "Cannot set error status - response is already committed");, +		Assert.state(!isCommitted(), "Cannot set error status - response is already committed");, +		Assert.state(!isCommitted(), "Cannot send redirect - response is already committed");, +		Assert.state(count <= 1,, +				() -> "More than 1 URL included - check getIncludedUrls instead: " + this.includedUrls);, +++ b/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, +import org.springframework.util.Assert;, +				Assert.state(!NamingManager.hasInitialContextFactoryBuilder(),, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockExpressionEvaluator.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.util.Assert;, +		Assert.isNull(variableResolver, "Custom VariableResolver not supported");, +		Assert.isNull(functionMapper, "Custom FunctionMapper not supported");, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockFilterChain.java, + * Copyright 2002-2016 the original author or authors., +		Assert.state(this.request == null, "This FilterChain has already been called!");, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +		Assert.state(this.active, "Request is not active anymore");, +		Assert.state(this.asyncSupported, "Async not supported");, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, +		Assert.state(this.outputStreamAccessAllowed, "OutputStream access not allowed");, +		Assert.state(this.writerAccessAllowed, "Writer access not allowed");, +		Assert.state(!isCommitted(), "Cannot reset buffer - response is already committed");, +		Assert.state(!isCommitted(), "Cannot set error status - response is already committed");, +		Assert.state(!isCommitted(), "Cannot set error status - response is already committed");, +		Assert.state(!isCommitted(), "Cannot send redirect - response is already committed");, +		Assert.state(count <= 1,, +				() -> "More than 1 URL included - check getIncludedUrls instead: " + this.includedUrls);, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpSession.java, +		Assert.state(!isInvalid(), "The session has already been invalidated");, +++ b/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, +import org.springframework.util.Assert;, +				Assert.state(!NamingManager.hasInitialContextFactoryBuilder(),, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockExpressionEvaluator.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.util.Assert;, +		Assert.isNull(variableResolver, "Custom VariableResolver not supported");, +		Assert.isNull(functionMapper, "Custom FunctionMapper not supported");, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockFilterChain.java, + * Copyright 2002-2016 the original author or authors., +		Assert.state(this.request == null, "This FilterChain has already been called!");, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +		Assert.state(this.active, "Request is not active anymore");, +		Assert.state(this.asyncSupported, "Async not supported");, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, +		Assert.state(this.outputStreamAccessAllowed, "OutputStream access not allowed");]