[+++ b/spring-beans/src/test/java/org/springframework/beans/factory/parsing/CustomProblemReporterTests.java, + * Copyright 2002-2018 the original author or authors., +		private final List<Problem> errors = new ArrayList<>();, +		private final List<Problem> warnings = new ArrayList<>();, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/parsing/CustomProblemReporterTests.java, + * Copyright 2002-2018 the original author or authors., +		private final List<Problem> errors = new ArrayList<>();, +		private final List<Problem> warnings = new ArrayList<>();, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ComponentScanBeanDefinitionParser.java, + * Copyright 2002-2018 the original author or authors., +				catch (ClassNotFoundException ex) {, +					parserContext.getReaderContext().warning(, +							"Ignoring non-present type filter class: " + ex, parserContext.extractSource(element));, +				}, +	protected TypeFilter createTypeFilter(Element element, @Nullable ClassLoader classLoader,, +			ParserContext parserContext) throws ClassNotFoundException {, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/parsing/CustomProblemReporterTests.java, + * Copyright 2002-2018 the original author or authors., +		private final List<Problem> errors = new ArrayList<>();, +		private final List<Problem> warnings = new ArrayList<>();, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ComponentScanBeanDefinitionParser.java, + * Copyright 2002-2018 the original author or authors., +				catch (ClassNotFoundException ex) {, +					parserContext.getReaderContext().warning(, +							"Ignoring non-present type filter class: " + ex, parserContext.extractSource(element));, +				}, +	protected TypeFilter createTypeFilter(Element element, @Nullable ClassLoader classLoader,, +			ParserContext parserContext) throws ClassNotFoundException {, +++ b/spring-jms/src/main/java/org/springframework/jms/config/JmsListenerContainerParser.java, + * Copyright 2002-2018 the original author or authors.]