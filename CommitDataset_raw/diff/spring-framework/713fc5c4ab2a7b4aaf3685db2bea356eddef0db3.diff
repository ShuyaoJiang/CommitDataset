[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter.java, +	private Runnable timeoutCallback;, +, +	private Runnable completionCallback;, +, +			if (this.timeoutCallback != null) {, +				this.handler.onTimeout(this.timeoutCallback);, +			}, +			if (this.completionCallback != null) {, +				this.handler.onCompletion(this.completionCallback);, +			}, +	/**, +	 * Register code to invoke when the async request times out. This method is, +	 * called from a container thread when an async request times out., +	 */, +	public void onTimeout(Runnable callback) {, +		synchronized (this) {, +			this.timeoutCallback = callback;, +			if (this.handler != null) {, +				this.handler.onTimeout(callback);, +			}, +		}, +	}, +, +	/**, +	 * Register code to invoke when the async request completes. This method is, +	 * called from a container thread when an async request completed for any, +	 * reason including timeout and network error. This method is useful for, +	 * detecting that a {@code ResponseBodyEmitter} instance is no longer usable., +	 */, +	public void onCompletion(Runnable callback) {, +		synchronized (this) {, +			this.completionCallback = callback;, +			if (this.handler != null) {, +				this.handler.onCompletion(callback);, +			}, +		}, +	}, +, +, +		void onTimeout(Runnable callback);, +, +		void onCompletion(Runnable callback);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter.java, +	private Runnable timeoutCallback;, +, +	private Runnable completionCallback;, +, +			if (this.timeoutCallback != null) {, +				this.handler.onTimeout(this.timeoutCallback);, +			}, +			if (this.completionCallback != null) {, +				this.handler.onCompletion(this.completionCallback);, +			}, +	/**, +	 * Register code to invoke when the async request times out. This method is, +	 * called from a container thread when an async request times out., +	 */, +	public void onTimeout(Runnable callback) {, +		synchronized (this) {, +			this.timeoutCallback = callback;, +			if (this.handler != null) {, +				this.handler.onTimeout(callback);, +			}, +		}, +	}, +, +	/**, +	 * Register code to invoke when the async request completes. This method is, +	 * called from a container thread when an async request completed for any, +	 * reason including timeout and network error. This method is useful for, +	 * detecting that a {@code ResponseBodyEmitter} instance is no longer usable., +	 */, +	public void onCompletion(Runnable callback) {, +		synchronized (this) {, +			this.completionCallback = callback;, +			if (this.handler != null) {, +				this.handler.onCompletion(callback);, +			}, +		}, +	}, +, +, +		void onTimeout(Runnable callback);, +, +		void onCompletion(Runnable callback);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitterReturnValueHandler.java, +, +		@Override, +		public void onTimeout(Runnable callback) {, +			this.deferredResult.onTimeout(callback);, +		}, +, +		@Override, +		public void onCompletion(Runnable callback) {, +			this.deferredResult.onCompletion(callback);, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter.java, +	private Runnable timeoutCallback;, +]