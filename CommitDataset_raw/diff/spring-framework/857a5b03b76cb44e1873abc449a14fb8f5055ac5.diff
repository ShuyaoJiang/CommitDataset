[+++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java, + * Copyright 2002-2018 the original author or authors., +	private static final ThreadLocal<ResourceLoader> configTimeResourceLoaderHolder = new ThreadLocal<>();, +	private static final ThreadLocal<Executor> configTimeTaskExecutorHolder = new ThreadLocal<>();, +	private static final ThreadLocal<DataSource> configTimeDataSourceHolder = new ThreadLocal<>();, +	private static final ThreadLocal<DataSource> configTimeNonTransactionalDataSourceHolder = new ThreadLocal<>();, +	private SchedulerFactory schedulerFactory;, +, +	@Nullable, +	 * Set the Quartz {@link SchedulerFactory} implementation to use., +	 * Set an external Quartz {@link SchedulerFactory} instance to use., +	 * <p>Default is an internal {@link StdSchedulerFactory} instance., +	 * If this method is being called, it overrides any class specified, +	 * through {@link #setSchedulerFactoryClass}., +	 * @since 5.0.4, +	 * @see #setSchedulerFactoryClass, +	 */, +	public void setSchedulerFactory(SchedulerFactory schedulerFactory) {, +		this.schedulerFactory = schedulerFactory;, +	}, +, +	/**, +		// Initialize the SchedulerFactory instance..., +		SchedulerFactory schedulerFactory = (this.schedulerFactory != null ? this.schedulerFactory :, +				BeanUtils.instantiateClass(this.schedulerFactoryClass));]