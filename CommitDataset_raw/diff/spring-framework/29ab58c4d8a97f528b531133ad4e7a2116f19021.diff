[+++ b/org.springframework.core/src/main/java/org/springframework/core/io/support/ResourcePatternUtils.java, + * Copyright 2002-2010 the original author or authors., +	 * (may be <code>null</code> to indicate a default ResourceLoader), +		else if (resourceLoader != null) {, +		else {, +			return new PathMatchingResourcePatternResolver();, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/support/ResourcePatternUtils.java, + * Copyright 2002-2010 the original author or authors., +	 * (may be <code>null</code> to indicate a default ResourceLoader), +		else if (resourceLoader != null) {, +		else {, +			return new PathMatchingResourcePatternResolver();, +		}, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.java, + * Copyright 2002-2010 the original author or authors., +		this.resourcePatternResolver = ResourcePatternUtils.getResourcePatternResolver(resourceLoader);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/support/ResourcePatternUtils.java, + * Copyright 2002-2010 the original author or authors., +	 * (may be <code>null</code> to indicate a default ResourceLoader), +		else if (resourceLoader != null) {, +		else {, +			return new PathMatchingResourcePatternResolver();, +		}, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.java, + * Copyright 2002-2010 the original author or authors., +		this.resourcePatternResolver = ResourcePatternUtils.getResourcePatternResolver(resourceLoader);, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.java, +		this.resourcePatternResolver = ResourcePatternUtils.getResourcePatternResolver(resourceLoader);]