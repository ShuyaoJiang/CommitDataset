[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfo.java, +import java.util.List;, +, +import org.springframework.util.PathMatcher;, +import org.springframework.web.accept.ContentNegotiationManager;, +import org.springframework.web.util.UrlPathHelper;, +	/**, +	 * Create a new {@code RequestMappingInfo.Builder} with the given paths., +	 * @param paths the paths to use, +	 * @since 4.2, +	 */, +	public static Builder paths(String... paths) {, +		return new DefaultBuilder(paths);, +	}, +, +, +	/**, +	 * Defines a builder for creating a RequestMappingInfo., +	 * @since 4.2, +	 */, +	public interface Builder {, +, +		/**, +		 * Set the path patterns., +		 */, +		Builder paths(String... paths);, +, +		/**, +		 * Set the request method conditions., +		 */, +		Builder methods(RequestMethod... methods);, +, +		/**, +		 * Set the request param conditions., +		 */, +		Builder params(String... params);, +, +		/**, +		 * Set the header conditions., +		 * <p>By default this is not set., +		 */, +		Builder headers(String... headers);, +, +		/**, +		 * Set the consumes conditions., +		 */, +		Builder consumes(String... consumes);, +, +		/**, +		 * Set the produces conditions., +		 */, +		Builder produces(String... produces);, +, +		/**, +		 * Set the mapping name., +		 */, +		Builder mappingName(String name);, +, +		/**, +		 * Set a custom conditions to use., +		 */, +		Builder customCondition(RequestCondition<?> condition);, +, +		/**, +		 * Provide additional configuration needed for request mapping purposes., +		 */, +		Builder options(BuilderConfiguration options);, +, +		/**, +		 * Build the RequestMappingInfo., +		 */, +		RequestMappingInfo build();, +	}, +, +	private static class DefaultBuilder implements Builder {, +, +		private String[] paths;, +, +		private RequestMethod[] methods;, +, +		private String[] params;, +, +		private String[] headers;, +, +		private String[] consumes;, +, +		private String[] produces;, +, +		private String mappingName;, +, +		private RequestCondition<?> customCondition;, +, +		private BuilderConfiguration options = new BuilderConfiguration();, +, +, +		public DefaultBuilder(String... paths) {, +			this.paths = paths;, +		}, +, +]