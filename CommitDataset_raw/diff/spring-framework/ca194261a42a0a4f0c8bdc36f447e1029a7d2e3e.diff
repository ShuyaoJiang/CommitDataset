[+++ b/spring-core/src/main/java/org/springframework/core/io/VfsUtils.java, + * Copyright 2002-2013 the original author or authors., + * As of Spring 4.0, supports VFS 3.x on JBoss AS 6+ (package {@code org.jboss.vfs})., + * @author Juergen Hoeller, +			Class<?> vfsClass = loader.loadClass(VFS3_PKG + VFS_NAME);, +			VFS_METHOD_GET_ROOT_URL = ReflectionUtils.findMethod(vfsClass, "getChild", URL.class);, +			VFS_METHOD_GET_ROOT_URI = ReflectionUtils.findMethod(vfsClass, "getChild", URI.class);, +			Class<?> virtualFile = loader.loadClass(VFS3_PKG + "VirtualFile");, +			VIRTUAL_FILE_METHOD_GET_CHILD = ReflectionUtils.findMethod(virtualFile, "getChild", String.class);, +			VIRTUAL_FILE_VISITOR_INTERFACE = loader.loadClass(VFS3_PKG + "VirtualFileVisitor");, +			Class<?> visitorAttributesClass = loader.loadClass(VFS3_PKG + "VisitorAttributes");, +			throw new IllegalStateException("Could not detect JBoss VFS infrastructure", ex);, +, +++ b/spring-core/src/main/java/org/springframework/core/io/VfsUtils.java, + * Copyright 2002-2013 the original author or authors., + * As of Spring 4.0, supports VFS 3.x on JBoss AS 6+ (package {@code org.jboss.vfs})., + * @author Juergen Hoeller, +			Class<?> vfsClass = loader.loadClass(VFS3_PKG + VFS_NAME);, +			VFS_METHOD_GET_ROOT_URL = ReflectionUtils.findMethod(vfsClass, "getChild", URL.class);, +			VFS_METHOD_GET_ROOT_URI = ReflectionUtils.findMethod(vfsClass, "getChild", URI.class);, +			Class<?> virtualFile = loader.loadClass(VFS3_PKG + "VirtualFile");, +			VIRTUAL_FILE_METHOD_GET_CHILD = ReflectionUtils.findMethod(virtualFile, "getChild", String.class);, +			VIRTUAL_FILE_VISITOR_INTERFACE = loader.loadClass(VFS3_PKG + "VirtualFileVisitor");, +			Class<?> visitorAttributesClass = loader.loadClass(VFS3_PKG + "VisitorAttributes");, +			throw new IllegalStateException("Could not detect JBoss VFS infrastructure", ex);, +, +++ b/spring-core/src/main/java/org/springframework/core/io/support/VfsPatternUtils.java, +		Object visitorProxy = Proxy.newProxyInstance(, +				VIRTUAL_FILE_VISITOR_INTERFACE.getClassLoader(),]