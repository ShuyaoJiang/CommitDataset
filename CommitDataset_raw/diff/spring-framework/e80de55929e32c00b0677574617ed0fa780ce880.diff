[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/CookieResultMatchers.java, +	/**, +	 * Assert whether the cookie must be httpOnly., +	 */, +	public ResultMatcher httpOnly(final String name, final boolean httpOnly) {, +		return result -> {, +			Cookie cookie = result.getResponse().getCookie(name);, +			assertEquals("Response cookie httpOnly", httpOnly, cookie.isHttpOnly());, +		};, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/CookieResultMatchers.java, +	/**, +	 * Assert whether the cookie must be httpOnly., +	 */, +	public ResultMatcher httpOnly(final String name, final boolean httpOnly) {, +		return result -> {, +			Cookie cookie = result.getResponse().getCookie(name);, +			assertEquals("Response cookie httpOnly", httpOnly, cookie.isHttpOnly());, +		};, +	}, +, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/standalone/resultmatchers/CookieAssertionTests.java, +		localeResolver.setCookieHttpOnly(true);, +		this.mockMvc.perform(get("/")).andExpect(cookie().doesNotExist("unknownCookie"));, +	@Test, +	public void testHttpOnly() throws Exception {, +		this.mockMvc.perform(get("/")).andExpect(cookie().httpOnly(COOKIE_NAME, true));, +	}]