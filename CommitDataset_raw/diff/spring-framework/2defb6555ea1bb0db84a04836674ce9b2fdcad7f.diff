[+++ b/spring-aop/src/main/java/org/springframework/aop/config/AdvisorComponentDefinition.java, + * by the {@code <aop:advisor>} tag and the component definition, +++ b/spring-aop/src/main/java/org/springframework/aop/config/AdvisorComponentDefinition.java, + * by the {@code <aop:advisor>} tag and the component definition, +++ b/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceHandler.java, + * {@code <aop:config>} tag. A {@code config} tag can include nested, +++ b/spring-aop/src/main/java/org/springframework/aop/config/AdvisorComponentDefinition.java, + * by the {@code <aop:advisor>} tag and the component definition, +++ b/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceHandler.java, + * {@code <aop:config>} tag. A {@code config} tag can include nested, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * {@link BeanDefinitionParser} for the {@code <aop:config>} tag., +	 * created by the '{@code <aop:config/>}' tag. Will force class proxying if the, +	 * Parses the supplied {@code <advisor>} element and registers the resulting, +	 * Parses the supplied {@code <pointcut>} and registers the resulting, +++ b/spring-aop/src/main/java/org/springframework/aop/config/AdvisorComponentDefinition.java, + * by the {@code <aop:advisor>} tag and the component definition, +++ b/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceHandler.java, + * {@code <aop:config>} tag. A {@code config} tag can include nested, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * {@link BeanDefinitionParser} for the {@code <aop:config>} tag., +	 * created by the '{@code <aop:config/>}' tag. Will force class proxying if the, +	 * Parses the supplied {@code <advisor>} element and registers the resulting, +	 * Parses the supplied {@code <pointcut>} and registers the resulting, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ScopedProxyBeanDefinitionDecorator.java, + * {@code <aop:scoped-proxy/>} tag., +++ b/spring-aop/src/main/java/org/springframework/aop/config/AdvisorComponentDefinition.java, + * by the {@code <aop:advisor>} tag and the component definition, +++ b/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceHandler.java, + * {@code <aop:config>} tag. A {@code config} tag can include nested, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * {@link BeanDefinitionParser} for the {@code <aop:config>} tag., +	 * created by the '{@code <aop:config/>}' tag. Will force class proxying if the, +	 * Parses the supplied {@code <advisor>} element and registers the resulting, +	 * Parses the supplied {@code <pointcut>} and registers the resulting, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ScopedProxyBeanDefinitionDecorator.java, + * {@code <aop:scoped-proxy/>} tag., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanDefinition.java, +	 * as a helper for auto-proxying, created through {@code <aop:config>})., +++ b/spring-aop/src/main/java/org/springframework/aop/config/AdvisorComponentDefinition.java, + * by the {@code <aop:advisor>} tag and the component definition, +++ b/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceHandler.java, + * {@code <aop:config>} tag. A {@code config} tag can include nested, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * {@link BeanDefinitionParser} for the {@code <aop:config>} tag., +	 * created by the '{@code <aop:config/>}' tag. Will force class proxying if the, +	 * Parses the supplied {@code <advisor>} element and registers the resulting, +	 * Parses the supplied {@code <pointcut>} and registers the resulting, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ScopedProxyBeanDefinitionDecorator.java, + * {@code <aop:scoped-proxy/>} tag., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanDefinition.java, +	 * as a helper for auto-proxying, created through {@code <aop:config>})., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.java, + * {@code <util:properties/>} element matches the, +++ b/spring-aop/src/main/java/org/springframework/aop/config/AdvisorComponentDefinition.java, + * by the {@code <aop:advisor>} tag and the component definition, +++ b/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceHandler.java, + * {@code <aop:config>} tag. A {@code config} tag can include nested, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * {@link BeanDefinitionParser} for the {@code <aop:config>} tag., +	 * created by the '{@code <aop:config/>}' tag. Will force class proxying if the, +	 * Parses the supplied {@code <advisor>} element and registers the resulting, +	 * Parses the supplied {@code <pointcut>} and registers the resulting, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ScopedProxyBeanDefinitionDecorator.java, + * {@code <aop:scoped-proxy/>} tag., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanDefinition.java, +	 * as a helper for auto-proxying, created through {@code <aop:config>})., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.java, + * {@code <util:properties/>} element matches the, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionDecorator.java, + * to handle custom, nested (directly under a {@code <bean>}) tags., + * {@code <bean>} tag. Implementations are free to turn the metadata in the, + * {@code <bean>} tag, potentially even returning a completely different, +++ b/spring-aop/src/main/java/org/springframework/aop/config/AdvisorComponentDefinition.java, + * by the {@code <aop:advisor>} tag and the component definition, +++ b/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceHandler.java, + * {@code <aop:config>} tag. A {@code config} tag can include nested, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * {@link BeanDefinitionParser} for the {@code <aop:config>} tag., +	 * created by the '{@code <aop:config/>}' tag. Will force class proxying if the, +	 * Parses the supplied {@code <advisor>} element and registers the resulting, +	 * Parses the supplied {@code <pointcut>} and registers the resulting, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ScopedProxyBeanDefinitionDecorator.java, + * {@code <aop:scoped-proxy/>} tag., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanDefinition.java, +	 * as a helper for auto-proxying, created through {@code <aop:config>})., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.java, + * {@code <util:properties/>} element matches the, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionDecorator.java, + * to handle custom, nested (directly under a {@code <bean>}) tags., + * {@code <bean>} tag. Implementations are free to turn the metadata in the, + * {@code <bean>} tag, potentially even returning a completely different, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +	 * the attributes of the top-level {@code <beans/>} element., +	 * attribute of the top-level {@code <beans/>} element., +	 * Parses the supplied {@code <bean>} element. May return {@code null}, +	 * Parses the supplied {@code <bean>} element. May return {@code null}, +	 * {@code <value>} tag that might be created, +++ b/spring-aop/src/main/java/org/springframework/aop/config/AdvisorComponentDefinition.java, + * by the {@code <aop:advisor>} tag and the component definition]