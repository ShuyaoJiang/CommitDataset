[+++ b/src/docs/asciidoc/web/webflux.adoc, +[[webflux-ann-requestmapping-registration]], +==== Explicit Registrations, +[.small]#<<web.adoc#mvc-ann-requestmapping-registration,Same in Spring MVC>>#, +, +Handler methods can be registered programmatically which can be used for dynamic, +registrations, or for advanced cases such as different instances of the same handler, +under different URLs. Below is an example:, +, +[source,java,indent=0], +[subs="verbatim,quotes"], +----, +@Configuration, +public class MyConfig {, +, +	@Autowired, +	public void setHandlerMapping(RequestMappingHandlerMapping mapping, UserHandler handler) <1>, +			throws NoSuchMethodException {, +, +		RequestMappingInfo info = RequestMappingInfo, +				.paths("/user/{id}").methods(RequestMethod.GET).build(); <2>, +, +		Method method = UserHandler.class.getMethod("getUser", Long.class); <3>, +, +		mapping.registerMapping(info, handler, method); <4>, +	}, +, +}, +----, +, +<1> Inject target handler(s) and the handler mapping for controllers., +<2> Prepare the request mapping meta data., +<3> Get the handler method., +<4> Add the registration., +, +, +++ b/src/docs/asciidoc/web/webflux.adoc, +[[webflux-ann-requestmapping-registration]], +==== Explicit Registrations, +[.small]#<<web.adoc#mvc-ann-requestmapping-registration,Same in Spring MVC>>#, +, +Handler methods can be registered programmatically which can be used for dynamic, +registrations, or for advanced cases such as different instances of the same handler, +under different URLs. Below is an example:, +, +[source,java,indent=0], +[subs="verbatim,quotes"], +----, +@Configuration, +public class MyConfig {, +, +	@Autowired, +	public void setHandlerMapping(RequestMappingHandlerMapping mapping, UserHandler handler) <1>, +			throws NoSuchMethodException {, +, +		RequestMappingInfo info = RequestMappingInfo, +				.paths("/user/{id}").methods(RequestMethod.GET).build(); <2>, +, +		Method method = UserHandler.class.getMethod("getUser", Long.class); <3>, +, +		mapping.registerMapping(info, handler, method); <4>, +	}, +, +}, +----, +, +<1> Inject target handler(s) and the handler mapping for controllers., +<2> Prepare the request mapping meta data., +<3> Get the handler method., +<4> Add the registration., +, +, +++ b/src/docs/asciidoc/web/webmvc.adoc, +[[mvc-ann-requestmapping-registration]], +==== Explicit Registrations, +[.small]#<<web-reactive.adoc#webflux-ann-requestmapping-registration,Same in Spring WebFlux>>#, +, +Handler methods can be registered programmatically which can be used for dynamic, +registrations, or for advanced cases such as different instances of the same handler, +under different URLs. Below is an example:, +, +[source,java,indent=0], +[subs="verbatim,quotes"], +----, +@Configuration, +public class MyConfig {, +, +	@Autowired, +	public void setHandlerMapping(RequestMappingHandlerMapping mapping, UserHandler handler) <1>, +			throws NoSuchMethodException {, +, +		RequestMappingInfo info = RequestMappingInfo, +				.paths("/user/{id}").methods(RequestMethod.GET).build(); <2>, +, +		Method method = UserHandler.class.getMethod("getUser", Long.class); <3>, +, +		mapping.registerMapping(info, handler, method); <4>, +	}, +, +}]