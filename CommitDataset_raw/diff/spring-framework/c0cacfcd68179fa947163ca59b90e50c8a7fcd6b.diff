[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/form/FormTag.java, +, +	private String servletRelativeAction;, +, +	 * Set the value of the '{@code action}' attribute., +	 * <p>May be a runtime expression., +	 */, +	public void setServletRelativeAction(String servletRelativeaction) {, +		this.servletRelativeAction = (servletRelativeaction != null ? servletRelativeaction : "");, +	}, +, +	/**, +	 * Get the value of the '{@code action}' attribute., +	 */, +	protected String getServletRelativeAction() {, +		return this.servletRelativeAction;, +	}, +, +	/**, +	 * <p>If the user configured an '{@code action}' value then the result of, +	 * evaluating this value is used. If the user configured an, +	 * '{@code servletRelativeAction}' value then the value is prepended, +	 * with the context and servlet paths, and the result is used. Otherwise, the, +	 * {@link org.springframework.web.servlet.support.RequestContext#getRequestUri(), +	 * originating URI} is used., +	 *, +		String servletRelativeAction = getServletRelativeAction();, +		else if (StringUtils.hasText(servletRelativeAction)) {, +			String pathToServlet = getRequestContext().getPathToServlet();, +			if (servletRelativeAction.startsWith("/") && !servletRelativeAction.startsWith(getRequestContext().getContextPath())) {, +				servletRelativeAction = pathToServlet + servletRelativeAction;, +			}, +			servletRelativeAction = getDisplayString(evaluate(ACTION_ATTRIBUTE, servletRelativeAction));, +			return processAction(servletRelativeAction);, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/form/FormTag.java, +, +	private String servletRelativeAction;, +, +	 * Set the value of the '{@code action}' attribute., +	 * <p>May be a runtime expression., +	 */, +	public void setServletRelativeAction(String servletRelativeaction) {, +		this.servletRelativeAction = (servletRelativeaction != null ? servletRelativeaction : "");, +	}, +, +	/**, +	 * Get the value of the '{@code action}' attribute., +	 */, +	protected String getServletRelativeAction() {, +		return this.servletRelativeAction;, +	}, +, +	/**, +	 * <p>If the user configured an '{@code action}' value then the result of, +	 * evaluating this value is used. If the user configured an, +	 * '{@code servletRelativeAction}' value then the value is prepended, +	 * with the context and servlet paths, and the result is used. Otherwise, the, +	 * {@link org.springframework.web.servlet.support.RequestContext#getRequestUri(), +	 * originating URI} is used., +	 *, +		String servletRelativeAction = getServletRelativeAction();, +		else if (StringUtils.hasText(servletRelativeAction)) {, +			String pathToServlet = getRequestContext().getPathToServlet();, +			if (servletRelativeAction.startsWith("/") && !servletRelativeAction.startsWith(getRequestContext().getContextPath())) {, +				servletRelativeAction = pathToServlet + servletRelativeAction;, +			}, +			servletRelativeAction = getDisplayString(evaluate(ACTION_ATTRIBUTE, servletRelativeAction));, +			return processAction(servletRelativeAction);, +		}, +++ b/spring-webmvc/src/main/resources/META-INF/spring-form.tld, +			<description>HTML Required Attribute</description>, +			<name>servletRelativeAction</name>, +			<required>false</required>, +			<rtexprvalue>true</rtexprvalue>, +		</attribute>, +		<attribute>, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/form/FormTag.java, +, +	private String servletRelativeAction;, +, +	 * Set the value of the '{@code action}' attribute., +	 * <p>May be a runtime expression., +	 */, +	public void setServletRelativeAction(String servletRelativeaction) {, +		this.servletRelativeAction = (servletRelativeaction != null ? servletRelativeaction : "");, +	}, +, +	/**, +	 * Get the value of the '{@code action}' attribute., +	 */, +	protected String getServletRelativeAction() {, +		return this.servletRelativeAction;, +	}, +, +	/**, +	 * <p>If the user configured an '{@code action}' value then the result of, +	 * evaluating this value is used. If the user configured an, +	 * '{@code servletRelativeAction}' value then the value is prepended, +	 * with the context and servlet paths, and the result is used. Otherwise, the]