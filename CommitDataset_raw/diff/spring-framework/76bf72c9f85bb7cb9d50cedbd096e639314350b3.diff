[+++ b/org.springframework.core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +		Assert.notNull(profiles, "Profile array must not be null");, +		for (String profile : profiles) {, +			this.addActiveProfile(profile);, +		}, +	}, +, +	public void addActiveProfile(String profile) {, +		this.validateProfile(profile);, +		this.activeProfiles.add(profile);, +		Assert.notNull(profiles, "Profile array must not be null");, +	 * @see #addActiveProfile, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +		Assert.notNull(profiles, "Profile array must not be null");, +		for (String profile : profiles) {, +			this.addActiveProfile(profile);, +		}, +	}, +, +	public void addActiveProfile(String profile) {, +		this.validateProfile(profile);, +		this.activeProfiles.add(profile);, +		Assert.notNull(profiles, "Profile array must not be null");, +	 * @see #addActiveProfile, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/ConfigurableEnvironment.java, + * Configuration interface to be implemented by most if not all {@link Environment} types., + * Provides facilities for setting active and default profiles as well, + * as accessing underlying {@linkplain #getPropertySources() property sources}., +	 * with zero arguments to clear the current set of active profiles. Use, +	 * {@link #addActiveProfile} to add a profile while preserving the existing set., +	 * @see #addActiveProfile, +	 * Add a profile to the current set of active profiles., +	 * @see #setActiveProfiles, +	 * @throws IllegalArgumentException if the profile is null, empty or whitespace-only, +	 */, +	void addActiveProfile(String profile);, +, +	/**, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +		Assert.notNull(profiles, "Profile array must not be null");, +		for (String profile : profiles) {, +			this.addActiveProfile(profile);, +		}, +	}, +, +	public void addActiveProfile(String profile) {, +		this.validateProfile(profile);, +		this.activeProfiles.add(profile);, +		Assert.notNull(profiles, "Profile array must not be null");, +	 * @see #addActiveProfile, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/ConfigurableEnvironment.java, + * Configuration interface to be implemented by most if not all {@link Environment} types., + * Provides facilities for setting active and default profiles as well, + * as accessing underlying {@linkplain #getPropertySources() property sources}., +	 * with zero arguments to clear the current set of active profiles. Use, +	 * {@link #addActiveProfile} to add a profile while preserving the existing set., +	 * @see #addActiveProfile, +	 * Add a profile to the current set of active profiles., +	 * @see #setActiveProfiles, +	 * @throws IllegalArgumentException if the profile is null, empty or whitespace-only, +	 */, +	void addActiveProfile(String profile);, +, +	/**, +++ b/org.springframework.core/src/test/java/org/springframework/core/env/EnvironmentTests.java, +	public void addActiveProfile() {, +		assertThat(environment.getActiveProfiles().length, is(0));, +		environment.setActiveProfiles("local", "embedded");, +		assertThat(Arrays.asList(environment.getActiveProfiles()), hasItems("local", "embedded"));, +		assertThat(environment.getActiveProfiles().length, is(2));, +		environment.addActiveProfile("p1");, +		assertThat(Arrays.asList(environment.getActiveProfiles()), hasItems("p1"));, +		assertThat(environment.getActiveProfiles().length, is(3));, +		environment.addActiveProfile("p2");, +		environment.addActiveProfile("p3");, +		assertThat(Arrays.asList(environment.getActiveProfiles()), hasItems("p2", "p3"));, +		assertThat(environment.getActiveProfiles().length, is(5));, +	}, +, +	@Test]