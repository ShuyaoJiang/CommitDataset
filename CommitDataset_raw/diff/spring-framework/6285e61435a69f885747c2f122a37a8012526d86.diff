[+++ b/org.springframework.testsuite/src/test/java/org/springframework/jca/cci/CciLocalTransactionTests.java, +import static org.easymock.EasyMock.*;, +import static org.junit.Assert.assertTrue;, +, +import org.junit.Test;, + * @author Thierry Templier, + * @author Chris Beams, +public class CciLocalTransactionTests {, +	@Test, +		final ConnectionFactory connectionFactory = createMock(ConnectionFactory.class);, +		Connection connection = createMock(Connection.class);, +		Interaction interaction = createMock(Interaction.class);, +		LocalTransaction localTransaction = createMock(LocalTransaction.class);, +		final Record record = createMock(Record.class);, +		final InteractionSpec interactionSpec = createMock(InteractionSpec.class);, +		expect(connectionFactory.getConnection()).andReturn(connection);, +		expect(connection.getLocalTransaction()).andReturn(localTransaction);, +		expect(connection.createInteraction()).andReturn(interaction);, +		expect(interaction.execute(interactionSpec, record, record)).andReturn(true);, +		expect(connection.getLocalTransaction()).andReturn(localTransaction);, +		replay(connectionFactory, connection, localTransaction, interaction, record);, +		verify(connectionFactory, connection, localTransaction, interaction, record);, +	@Test, +		final ConnectionFactory connectionFactory = createMock(ConnectionFactory.class);, +		Connection connection = createMock(Connection.class);, +		Interaction interaction = createMock(Interaction.class);, +		LocalTransaction localTransaction = createMock(LocalTransaction.class);, +		final Record record = createMock(Record.class);, +		final InteractionSpec interactionSpec = createMock(InteractionSpec.class);, +		expect(connectionFactory.getConnection()).andReturn(connection);, +		expect(connection.getLocalTransaction()).andReturn(localTransaction);, +		expect(connection.createInteraction()).andReturn(interaction);, +		expect(interaction.execute(interactionSpec, record, record)).andReturn(true);, +		expect(connection.getLocalTransaction()).andReturn(localTransaction);, +		replay(connectionFactory, connection, localTransaction, interaction, record);, +			tt.execute(new TransactionCallback() {, +		verify(connectionFactory, connection, localTransaction, interaction, record);, +++ b/org.springframework.testsuite/src/test/java/org/springframework/jca/cci/CciLocalTransactionTests.java, +import static org.easymock.EasyMock.*;, +import static org.junit.Assert.assertTrue;, +, +import org.junit.Test;, + * @author Thierry Templier, + * @author Chris Beams, +public class CciLocalTransactionTests {, +	@Test, +		final ConnectionFactory connectionFactory = createMock(ConnectionFactory.class);, +		Connection connection = createMock(Connection.class);, +		Interaction interaction = createMock(Interaction.class);, +		LocalTransaction localTransaction = createMock(LocalTransaction.class);, +		final Record record = createMock(Record.class);, +		final InteractionSpec interactionSpec = createMock(InteractionSpec.class);, +		expect(connectionFactory.getConnection()).andReturn(connection);, +		expect(connection.getLocalTransaction()).andReturn(localTransaction);, +		expect(connection.createInteraction()).andReturn(interaction);, +		expect(interaction.execute(interactionSpec, record, record)).andReturn(true);, +		expect(connection.getLocalTransaction()).andReturn(localTransaction);, +		replay(connectionFactory, connection, localTransaction, interaction, record);, +		verify(connectionFactory, connection, localTransaction, interaction, record);, +	@Test, +		final ConnectionFactory connectionFactory = createMock(ConnectionFactory.class);, +		Connection connection = createMock(Connection.class);, +		Interaction interaction = createMock(Interaction.class);, +		LocalTransaction localTransaction = createMock(LocalTransaction.class);, +		final Record record = createMock(Record.class);, +		final InteractionSpec interactionSpec = createMock(InteractionSpec.class);, +		expect(connectionFactory.getConnection()).andReturn(connection);, +		expect(connection.getLocalTransaction()).andReturn(localTransaction);, +		expect(connection.createInteraction()).andReturn(interaction);, +		expect(interaction.execute(interactionSpec, record, record)).andReturn(true);, +		expect(connection.getLocalTransaction()).andReturn(localTransaction);, +		replay(connectionFactory, connection, localTransaction, interaction, record);, +			tt.execute(new TransactionCallback() {, +		verify(connectionFactory, connection, localTransaction, interaction, record);, +++ b/org.springframework.testsuite/src/test/java/org/springframework/jca/cci/CciTemplateTests.java, +import static org.easymock.EasyMock.*;, +import static org.junit.Assert.*;, +, +import org.junit.Test;, + * @author Chris Beams, +public class CciTemplateTests {, +	@Test, +		ConnectionFactory connectionFactory = createMock(ConnectionFactory.class);, +		RecordFactory recordFactory = createMock(RecordFactory.class);, +		IndexedRecord indexedRecord = createMock(IndexedRecord.class);, +		expect(connectionFactory.getRecordFactory()).andReturn(recordFactory);, +		expect(recordFactory.createIndexedRecord("name")).andReturn(indexedRecord);, +		replay(connectionFactory, recordFactory);, +		verify(connectionFactory, recordFactory);, +	@Test, +		ConnectionFactory connectionFactory = createMock(ConnectionFactory.class);, +		RecordFactory recordFactory = createMock(RecordFactory.class);, +		MappedRecord mappedRecord = createMock(MappedRecord.class);, +		expect(connectionFactory.getRecordFactory()).andReturn(recordFactory);, +		expect(recordFactory.createMappedRecord("name")).andReturn(mappedRecord);, +		replay(connectionFactory, recordFactory);, +		verify(connectionFactory, recordFactory);, +	@Test, +		ConnectionFactory connectionFactory = createMock(ConnectionFactory.class);, +		Connection connection = createMock(Connection.class);]