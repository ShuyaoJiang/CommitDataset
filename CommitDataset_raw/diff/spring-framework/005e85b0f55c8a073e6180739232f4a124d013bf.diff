[+++ b/spring-web/src/main/java/org/springframework/http/codec/DecoderHttpMessageReader.java, +				.onErrorMap(this::mapError);, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/codec/DecoderHttpMessageReader.java, +				.onErrorMap(this::mapError);, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/codec/DecoderHttpMessageReader.java, +				.onErrorMap(this::mapError);, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorHttpHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/http/codec/DecoderHttpMessageReader.java, +				.onErrorMap(this::mapError);, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorHttpHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/RxNettyHttpHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/http/codec/DecoderHttpMessageReader.java, +				.onErrorMap(this::mapError);, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorHttpHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/RxNettyHttpHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/http/codec/DecoderHttpMessageReader.java, +				.onErrorMap(this::mapError);, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorHttpHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/RxNettyHttpHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/ExceptionHandlingWebHandler.java, +			completion = completion.onErrorResume(ex -> handler.handle(exchange, ex));, +++ b/spring-web/src/main/java/org/springframework/http/codec/DecoderHttpMessageReader.java, +				.onErrorMap(this::mapError);, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorHttpHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/RxNettyHttpHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/ExceptionHandlingWebHandler.java, +			completion = completion.onErrorResume(ex -> handler.handle(exchange, ex));, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/ServerHttpResponseTests.java, +		response.writeWith(Flux.error(error)).onErrorResume(ex -> Mono.empty()).block();, +++ b/spring-web/src/main/java/org/springframework/http/codec/DecoderHttpMessageReader.java, +				.onErrorMap(this::mapError);, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorHttpHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/RxNettyHttpHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/ExceptionHandlingWebHandler.java, +			completion = completion.onErrorResume(ex -> handler.handle(exchange, ex));, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/ServerHttpResponseTests.java, +		response.writeWith(Flux.error(error)).onErrorResume(ex -> Mono.empty()).block();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/DispatcherHandler.java, +				.onErrorResume(ex -> result.applyExceptionHandler(ex).flatMap(exceptionResult ->, +++ b/spring-web/src/main/java/org/springframework/http/codec/DecoderHttpMessageReader.java, +				.onErrorMap(this::mapError);, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, +				.onErrorMap(this::mapError);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorHttpHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/RxNettyHttpHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, +				.onErrorResume(ex -> {, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/ExceptionHandlingWebHandler.java, +			completion = completion.onErrorResume(ex -> handler.handle(exchange, ex));, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/ServerHttpResponseTests.java, +		response.writeWith(Flux.error(error)).onErrorResume(ex -> Mono.empty()).block();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/DispatcherHandler.java, +				.onErrorResume(ex -> result.applyExceptionHandler(ex).flatMap(exceptionResult ->, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java, +		return mono.onErrorMap(UnsupportedMediaTypeException.class, ERROR_MAPPER);, +		return flux.onErrorMap(UnsupportedMediaTypeException.class, ERROR_MAPPER);]