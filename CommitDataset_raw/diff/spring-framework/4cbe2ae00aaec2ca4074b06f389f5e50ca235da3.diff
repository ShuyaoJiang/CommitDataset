[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/SmartContextLoader.java, +	 * TODO Document supports(MergedContextConfiguration)., +	 *, +	 * @param mergedConfig, +	 * @return, +	 */, +	boolean supports(MergedContextConfiguration mergedConfig);, +, +	/**, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/SmartContextLoader.java, +	 * TODO Document supports(MergedContextConfiguration)., +	 *, +	 * @param mergedConfig, +	 * @return, +	 */, +	boolean supports(MergedContextConfiguration mergedConfig);, +, +	/**, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/support/AbstractContextLoader.java, +import org.springframework.test.context.MergedContextConfiguration;, +	/**, +	 * TODO Document default supports(MergedContextConfiguration) implementation., +	 */, +	public boolean supports(MergedContextConfiguration mergedConfig) {, +		return !ObjectUtils.isEmpty(mergedConfig.getLocations());, +	}, +, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/SmartContextLoader.java, +	 * TODO Document supports(MergedContextConfiguration)., +	 *, +	 * @param mergedConfig, +	 * @return, +	 */, +	boolean supports(MergedContextConfiguration mergedConfig);, +, +	/**, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/support/AbstractContextLoader.java, +import org.springframework.test.context.MergedContextConfiguration;, +	/**, +	 * TODO Document default supports(MergedContextConfiguration) implementation., +	 */, +	public boolean supports(MergedContextConfiguration mergedConfig) {, +		return !ObjectUtils.isEmpty(mergedConfig.getLocations());, +	}, +, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/support/AnnotationConfigContextLoader.java, +	/**, +	 * TODO Document overridden supports(MergedContextConfiguration) implementation., +	 */, +	@Override, +	public boolean supports(MergedContextConfiguration mergedConfig) {, +		return ObjectUtils.isEmpty(mergedConfig.getLocations()) && !ObjectUtils.isEmpty(mergedConfig.getClasses());, +	}, +, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/SmartContextLoader.java, +	 * TODO Document supports(MergedContextConfiguration)., +	 *, +	 * @param mergedConfig, +	 * @return, +	 */, +	boolean supports(MergedContextConfiguration mergedConfig);, +, +	/**, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/support/AbstractContextLoader.java, +import org.springframework.test.context.MergedContextConfiguration;, +	/**, +	 * TODO Document default supports(MergedContextConfiguration) implementation., +	 */, +	public boolean supports(MergedContextConfiguration mergedConfig) {, +		return !ObjectUtils.isEmpty(mergedConfig.getLocations());, +	}, +, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/support/AnnotationConfigContextLoader.java, +	/**, +	 * TODO Document overridden supports(MergedContextConfiguration) implementation., +	 */, +	@Override, +	public boolean supports(MergedContextConfiguration mergedConfig) {, +		return ObjectUtils.isEmpty(mergedConfig.getLocations()) && !ObjectUtils.isEmpty(mergedConfig.getClasses());, +	}, +, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/support/DelegatingSmartContextLoader.java, +import org.springframework.util.ObjectUtils;, +, +		final String[] originalLocations = configAttributes.getLocations();, +		final Class<?>[] originalClasses = configAttributes.getClasses();, +		final boolean emptyResources = ObjectUtils.isEmpty(originalLocations) && ObjectUtils.isEmpty(originalClasses);, +, +			if (!emptyResources) {, +				loader.processContextConfiguration(configAttributes);, +			}, +			else {, +				if (loader.generatesDefaults()) {, +		}, +		// If any loader claims to generate defaults but none actually did,, +		// throw an exception., +	}, +, +	/**, +	 * TODO Document supports(MergedContextConfiguration) implementation.]