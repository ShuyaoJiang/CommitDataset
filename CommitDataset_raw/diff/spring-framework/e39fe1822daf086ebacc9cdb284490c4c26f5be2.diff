[+++ b/spring-web/src/main/java/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.java, +	@Override, +		boolean emptyArgValue = "".equals(arg);, +, +		if (emptyArgValue && (arg == null)) {, +			handleMissingValue(namedValueInfo.name, parameter);, +		}, +, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.java, +	@Override, +		boolean emptyArgValue = "".equals(arg);, +, +		if (emptyArgValue && (arg == null)) {, +			handleMissingValue(namedValueInfo.name, parameter);, +		}, +, +++ b/spring-web/src/test/java/org/springframework/web/method/annotation/RequestParamMethodArgumentResolverTests.java, +import org.springframework.beans.propertyeditors.StringTrimmerEditor;, +import org.springframework.web.bind.WebDataBinder;, +import org.springframework.web.bind.support.WebDataBinderFactory;, +import org.springframework.web.bind.support.WebRequestDataBinder;, +import static org.junit.Assert.*;, +import static org.mockito.BDDMockito.*;, +import static org.mockito.Mockito.*;, +, +	// SPR-10402, +, +	@Test(expected = MissingServletRequestParameterException.class), +	public void missingRequestParamEmptyValueConvertedToNull() throws Exception {, +, +		WebDataBinder binder = new WebRequestDataBinder(null);, +		binder.registerCustomEditor(String.class, new StringTrimmerEditor(true));, +, +		WebDataBinderFactory binderFactory = mock(WebDataBinderFactory.class);, +		given(binderFactory.createBinder(webRequest, null, "stringNotAnnot")).willReturn(binder);, +, +		this.request.addParameter("stringNotAnnot", "");, +, +		resolver.resolveArgument(paramStringNotAnnot, null, webRequest, binderFactory);, +		fail("Expected exception");, +	}, +]