[+++ b/spring-web/src/main/java/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.java, + * Copyright 2002-2019 the original author or authors., +		// Ignore LOOKUP_PATH attribute, use our own "fixed" UrlPathHelper with decoding off, +++ b/spring-web/src/main/java/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.java, + * Copyright 2002-2019 the original author or authors., +		// Ignore LOOKUP_PATH attribute, use our own "fixed" UrlPathHelper with decoding off, +++ b/spring-web/src/main/java/org/springframework/web/cors/UrlBasedCorsConfigurationSource.java, + * Copyright 2002-2019 the original author or authors., +	@Nullable, +	private String lookupPathAttributeName;, +, +	 * Optionally configure the name of the attribute that caches the lookupPath., +	 * This is used to make the call to, +	 * {@link UrlPathHelper#getLookupPathForRequest(HttpServletRequest, String)}, +	 * @param lookupPathAttributeName the request attribute to check, +	 * @since 5.2, +	 */, +	public void setLookupPathAttributeName(@Nullable String lookupPathAttributeName) {, +		this.lookupPathAttributeName = lookupPathAttributeName;, +	}, +, +	/**, +		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request, this.lookupPathAttributeName);, +++ b/spring-web/src/main/java/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.java, + * Copyright 2002-2019 the original author or authors., +		// Ignore LOOKUP_PATH attribute, use our own "fixed" UrlPathHelper with decoding off, +++ b/spring-web/src/main/java/org/springframework/web/cors/UrlBasedCorsConfigurationSource.java, + * Copyright 2002-2019 the original author or authors., +	@Nullable, +	private String lookupPathAttributeName;, +, +	 * Optionally configure the name of the attribute that caches the lookupPath., +	 * This is used to make the call to, +	 * {@link UrlPathHelper#getLookupPathForRequest(HttpServletRequest, String)}, +	 * @param lookupPathAttributeName the request attribute to check, +	 * @since 5.2, +	 */, +	public void setLookupPathAttributeName(@Nullable String lookupPathAttributeName) {, +		this.lookupPathAttributeName = lookupPathAttributeName;, +	}, +, +	/**, +		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request, this.lookupPathAttributeName);, +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, + * Copyright 2002-2019 the original author or authors., +	 * Variant of {@link #getLookupPathForRequest(HttpServletRequest)} that, +	 * automates checking for a previously computed lookupPath saved as a, +	 * request attribute. The attribute is only used for lookup purposes., +	 * @param request current HTTP request, +	 * @param lookupPathAttributeName the request attribute to check, +	 * @return the lookup path, +	 * @since 5.2, +	 * @see org.springframework.web.servlet.HandlerMapping#LOOKUP_PATH, +	 */, +	public String getLookupPathForRequest(HttpServletRequest request, @Nullable String lookupPathAttributeName) {, +		if (lookupPathAttributeName != null) {, +			String result = (String) request.getAttribute(lookupPathAttributeName);, +			if (result != null) {, +				return result;, +			}, +		}, +		return getLookupPathForRequest(request);, +	}, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/web/accept/PathExtensionContentNegotiationStrategy.java, + * Copyright 2002-2019 the original author or authors., +		// Ignore LOOKUP_PATH attribute, use our own "fixed" UrlPathHelper with decoding off, +++ b/spring-web/src/main/java/org/springframework/web/cors/UrlBasedCorsConfigurationSource.java, + * Copyright 2002-2019 the original author or authors., +	@Nullable, +	private String lookupPathAttributeName;, +, +	 * Optionally configure the name of the attribute that caches the lookupPath., +	 * This is used to make the call to, +	 * {@link UrlPathHelper#getLookupPathForRequest(HttpServletRequest, String)}, +	 * @param lookupPathAttributeName the request attribute to check, +	 * @since 5.2, +	 */, +	public void setLookupPathAttributeName(@Nullable String lookupPathAttributeName) {, +		this.lookupPathAttributeName = lookupPathAttributeName;, +	}, +, +	/**, +		String lookupPath = this.urlPathHelper.getLookupPathForRequest(request, this.lookupPathAttributeName);, +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, + * Copyright 2002-2019 the original author or authors., +	 * Variant of {@link #getLookupPathForRequest(HttpServletRequest)} that, +	 * automates checking for a previously computed lookupPath saved as a, +	 * request attribute. The attribute is only used for lookup purposes., +	 * @param request current HTTP request, +	 * @param lookupPathAttributeName the request attribute to check, +	 * @return the lookup path, +	 * @since 5.2, +	 * @see org.springframework.web.servlet.HandlerMapping#LOOKUP_PATH, +	 */, +	public String getLookupPathForRequest(HttpServletRequest request, @Nullable String lookupPathAttributeName) {, +		if (lookupPathAttributeName != null) {, +			String result = (String) request.getAttribute(lookupPathAttributeName);, +			if (result != null) {]