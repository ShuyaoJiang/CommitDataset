[+++ b/build.gradle, +		sourceCompatibility = 1.8  // can be switched to 11 for testing, +		sourceCompatibility = 1.8  // can be switched to 11 for testing, +++ b/build.gradle, +		sourceCompatibility = 1.8  // can be switched to 11 for testing, +		sourceCompatibility = 1.8  // can be switched to 11 for testing, +++ b/spring-context/src/test/java/org/springframework/cache/config/EnableCachingIntegrationTests.java, +	interface FooService {, +	static class FooServiceImpl implements FooService {, +++ b/build.gradle, +		sourceCompatibility = 1.8  // can be switched to 11 for testing, +		sourceCompatibility = 1.8  // can be switched to 11 for testing, +++ b/spring-context/src/test/java/org/springframework/cache/config/EnableCachingIntegrationTests.java, +	interface FooService {, +	static class FooServiceImpl implements FooService {, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/spr/RequestContextHolderTests.java, +import static org.hamcrest.CoreMatchers.*;, +import static org.junit.Assert.*;, +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;, +import static org.springframework.test.web.servlet.setup.MockMvcBuilders.*;, +	static class SingletonController {, +	static class RequestScopedController {, +	static class RequestScopedService {, +	static class SessionScopedService {, +	static class ControllerWithRequestScopedService {, +	static class ControllerWithSessionScopedService {, +	static class FilterWithSessionScopedService extends GenericFilterBean {, +	static class RequestFilter extends GenericFilterBean {, +	static class RequestAttributesFilter extends GenericFilterBean {, +++ b/build.gradle, +		sourceCompatibility = 1.8  // can be switched to 11 for testing, +		sourceCompatibility = 1.8  // can be switched to 11 for testing, +++ b/spring-context/src/test/java/org/springframework/cache/config/EnableCachingIntegrationTests.java, +	interface FooService {, +	static class FooServiceImpl implements FooService {, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/spr/RequestContextHolderTests.java, +import static org.hamcrest.CoreMatchers.*;, +import static org.junit.Assert.*;, +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;, +import static org.springframework.test.web.servlet.setup.MockMvcBuilders.*;, +	static class SingletonController {, +	static class RequestScopedController {, +	static class RequestScopedService {, +	static class SessionScopedService {, +	static class ControllerWithRequestScopedService {, +	static class ControllerWithSessionScopedService {, +	static class FilterWithSessionScopedService extends GenericFilterBean {, +	static class RequestFilter extends GenericFilterBean {, +	static class RequestAttributesFilter extends GenericFilterBean {, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/result/method/InvocableHandlerMethodTests.java, + * Copyright 2002-2018 the original author or authors., +import static org.hamcrest.Matchers.*;, +import static org.mockito.Mockito.*;, +import static org.springframework.mock.http.server.reactive.test.MockServerHttpRequest.*;, +import static org.springframework.web.method.ResolvableMethod.*;, +	static class TestController {, +, +	static class VoidController {, +++ b/build.gradle, +		sourceCompatibility = 1.8  // can be switched to 11 for testing, +		sourceCompatibility = 1.8  // can be switched to 11 for testing, +++ b/spring-context/src/test/java/org/springframework/cache/config/EnableCachingIntegrationTests.java, +	interface FooService {, +	static class FooServiceImpl implements FooService {, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/spr/RequestContextHolderTests.java, +import static org.hamcrest.CoreMatchers.*;, +import static org.junit.Assert.*;, +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;, +import static org.springframework.test.web.servlet.setup.MockMvcBuilders.*;, +	static class SingletonController {, +	static class RequestScopedController {, +	static class RequestScopedService {, +	static class SessionScopedService {, +	static class ControllerWithRequestScopedService {, +	static class ControllerWithSessionScopedService {, +	static class FilterWithSessionScopedService extends GenericFilterBean {, +	static class RequestFilter extends GenericFilterBean {, +	static class RequestAttributesFilter extends GenericFilterBean {, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/result/method/InvocableHandlerMethodTests.java, + * Copyright 2002-2018 the original author or authors., +import static org.hamcrest.Matchers.*;, +import static org.mockito.Mockito.*;, +import static org.springframework.mock.http.server.reactive.test.MockServerHttpRequest.*;, +import static org.springframework.web.method.ResolvableMethod.*;, +	static class TestController {, +, +	static class VoidController {, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolverTests.java, + * Copyright 2002-2018 the original author or authors., +, +import static org.junit.Assert.*;, + *, +	public void setup() {, +	public void requestMappingArgumentResolvers() {, +	public void modelAttributeArgumentResolvers() {, +		List<InvocableHandlerMethod> methods = this.methodResolver.getModelAttributeMethods(this.handlerMethod);, +	public void initBinderArgumentResolvers() {]