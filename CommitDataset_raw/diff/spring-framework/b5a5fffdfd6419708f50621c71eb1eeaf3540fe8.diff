[+++ b/src/asciidoc/index.adoc, +.Bean scopes, +, +| <<beans-factory-scopes-application,application>>, +| Scopes a single bean definition to the lifecycle of a `ServletContext`. Only valid in, +  the context of a web-aware Spring `ApplicationContext`., +[[beans-factory-scopes-application]], +===== Application scope, +Consider the following bean definition:, +, +[source,xml,indent=0], +[subs="verbatim,quotes"], +----, +	<bean id="appPreferences" class="com.foo.AppPreferences" scope="application"/>, +----, +, +The Spring container creates a new instance of the `AppPreferences` bean by using the, +`appPreferences` bean definition once for the entire web application. That is, the, +`appPreferences` bean is scoped at the `ServletContext` level, stored as a regular, +`ServletContext` attribute. This is somewhat similar to a Spring singleton bean but, +differs in two important ways: It is a singleton per `ServletContext`, not per Spring, +'ApplicationContext' (or which there may be several in any given web application),, +and it is actually exposed and therefore visible as a `ServletContext` attribute., +, +, +CGLIB proxies only intercept public method calls! Do not call non-public methods, +on such a proxy; they will not be delegated to the actual scoped target object.]