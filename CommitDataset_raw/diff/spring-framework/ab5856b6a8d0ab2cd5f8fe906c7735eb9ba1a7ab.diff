[+++ b/spring-core/src/main/java/org/springframework/asm/ClassReader.java, +                        Label l = labels[label];, +                        while (l.line > 0) {, +                            if (l.next == null) {, +                                l.next = new Label();, +                            }, +                            l = l.next;, +                        }, +                        l.line = readUnsignedShort(v + 12);, +                Label next = l.next;, +                l.next = null;, +                    while (next != null) {, +                        mv.visitLineNumber(next.line, l);, +                        next = next.next;, +                    }, +++ b/spring-core/src/main/java/org/springframework/asm/ClassReader.java, +                        Label l = labels[label];, +                        while (l.line > 0) {, +                            if (l.next == null) {, +                                l.next = new Label();, +                            }, +                            l = l.next;, +                        }, +                        l.line = readUnsignedShort(v + 12);, +                Label next = l.next;, +                l.next = null;, +                    while (next != null) {, +                        mv.visitLineNumber(next.line, l);, +                        next = next.next;, +                    }, +++ b/spring-core/src/main/java/org/springframework/asm/Label.java, +     * The line number corresponding to this label, if known. If there are, +     * several lines, each line is stored in a separate label, all linked via, +     * their next field (these links are created in ClassReader and removed just, +     * before visitLabel is called, so that this does not impact the rest of the, +     * code)., +     * information is needed in {@link MethodWriter#visitMaxs}, after all, +     * {@link #visitSubroutine} to avoid using a recursive method, and in, +     * ClassReader to temporarily store multiple source lines for a label.]