[+++ b/spring-framework-reference/src/orm.xml, +        section entitled <xref linkend="transaction-declarative" /> if you, +        have not done so to get a more detailed coverage of Spring's, +        declarative transaction support.</para>, +      underlying JDBC <interfacename>Connection</interfacename>. Out of the, +      box, Spring provides dialects for the Toplink, Hibernate and OpenJPA JPA, +    <section id="orm-jpa-dialect">, +      <title><interfacename>JpaDialect</interfacename></title>, +, +      <para>As an advanced feature <classname>JpaTemplate</classname>,, +      <classname>JpaTransactionManager</classname> and subclasses of, +      <classname>AbstractEntityManagerFactoryBean</classname> support a custom, +      <interfacename>JpaDialect</interfacename>, to be passed into the, +      "jpaDialect" bean property. In such a scenario, the DAOs won't receive, +      an <interfacename>EntityManagerFactory</interfacename> reference but, +      rather a full <classname>JpaTemplate</classname> instance instead (for, +      example, passed into <classname>JpaDaoSupport</classname>'s, +      "jpaTemplate" property). A <interfacename>JpaDialect</interfacename>, +      implementation can enable some advanced features supported by Spring,, +      usually in a vendor-specific manner:</para>, +, +      <itemizedlist>, +        <listitem>, +          <para>applying specific transaction semantics (such as custom, +          isolation level or transaction timeout)</para>, +        </listitem>, +, +        <listitem>, +          <para>retrieving the transactional JDBC, +          <interfacename>Connection</interfacename> (for exposure to, +          JDBC-based DAOs)</para>, +        </listitem>, +, +        <listitem>, +          <para>advanced translation of, +          <literal>PersistenceExceptions</literal> to Spring, +          <literal>DataAccessExceptions</literal></para>, +        </listitem>, +      </itemizedlist>, +, +      <para>This is particularly valuable for special transaction semantics, +      and for advanced translation of exception. Note that the default, +      implementation used (<classname>DefaultJpaDialect</classname>) doesn't, +      provide any special capabilities and if the above features are required,, +      the appropriate dialect has to be specified.</para>, +, +      <para>See the <interfacename>JpaDialect</interfacename> Javadoc for more, +      details of its operations and how they are used within Spring's JPA, +      support.</para>, +    </section>, +  </section>, +]