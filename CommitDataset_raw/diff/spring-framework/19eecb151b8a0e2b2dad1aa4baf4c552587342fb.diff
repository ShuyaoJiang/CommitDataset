[+++ b/spring-context/src/test/java/org/springframework/validation/beanvalidation/ValidatorFactoryTests.java, +import org.junit.Ignore;, +import static org.hamcrest.Matchers.instanceOf;, +	@Ignore, +	public void testSpringValidationFieldType() throws Exception {, +		LocalValidatorFactoryBean validator = new LocalValidatorFactoryBean();, +		validator.afterPropertiesSet();, +		ValidPerson person = new ValidPerson();, +		person.setName("Phil");, +		person.getAddress().setStreet("Phil's Street");, +		BeanPropertyBindingResult errors = new BeanPropertyBindingResult(person, "person");, +		validator.validate(person, errors);, +		assertEquals(1, errors.getErrorCount());, +		assertThat("Field/Value type missmatch",, +				errors.getFieldError("address").getRejectedValue(),, +				instanceOf(ValidAddress.class));, +	}, +, +	@Test, +		public boolean isValid(ValidPerson value, ConstraintValidatorContext context) {, +			boolean valid = (value.name == null || !value.address.street.contains(value.name));, +			if (!valid && "Phil".equals(value.name)) {, +				context.buildConstraintViolationWithTemplate(, +						context.getDefaultConstraintMessageTemplate()).addNode("address").addConstraintViolation().disableDefaultConstraintViolation();, +			}, +			return valid;]