[+++ b/org.springframework.orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryAccessor.java, + * Copyright 2002-2011 the original author or authors., +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.beans.factory.BeanFactoryAware;, +import org.springframework.beans.factory.ListableBeanFactory;, +public abstract class EntityManagerFactoryAccessor implements BeanFactoryAware {, +	private String persistenceUnitName;, +, +	 * Set the name of the persistence unit to access the EntityManagerFactory for., +	 * <p>This is an alternative to specifying the EntityManagerFactory by direct reference,, +	 * resolving it by its persistence unit name instead. If no EntityManagerFactory and, +	 * no persistence unit name have been specified, a default EntityManagerFactory will, +	 * be retrieved through finding a single unique bean of type EntityManagerFactory., +	 * @see #setEntityManagerFactory, +	 */, +	public void setPersistenceUnitName(String persistenceUnitName) {, +		this.persistenceUnitName = persistenceUnitName;, +	}, +, +	/**, +	 * Return the name of the persistence unit to access the EntityManagerFactory for, if any., +	 */, +	public String getPersistenceUnitName() {, +		return this.persistenceUnitName;, +	}, +, +	/**, +	/**, +	 * Retrieves an EntityManagerFactory by persistence unit name, if none set explicitly., +	 * Falls back to a default EntityManagerFactory bean if no persistence unit specified., +	 * @see #setPersistenceUnitName, +	 */, +	public void setBeanFactory(BeanFactory beanFactory) throws BeansException {, +		if (getEntityManagerFactory() == null) {, +			if (!(beanFactory instanceof ListableBeanFactory)) {, +				throw new IllegalStateException("Cannot retrieve EntityManagerFactory by persistence unit name " +, +						"in a non-listable BeanFactory: " + beanFactory);, +			}, +			ListableBeanFactory lbf = (ListableBeanFactory) beanFactory;, +			setEntityManagerFactory(EntityManagerFactoryUtils.findEntityManagerFactory(lbf, getPersistenceUnitName()));, +		}, +	}, +, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryAccessor.java, + * Copyright 2002-2011 the original author or authors., +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.beans.factory.BeanFactoryAware;, +import org.springframework.beans.factory.ListableBeanFactory;, +public abstract class EntityManagerFactoryAccessor implements BeanFactoryAware {, +	private String persistenceUnitName;, +, +	 * Set the name of the persistence unit to access the EntityManagerFactory for., +	 * <p>This is an alternative to specifying the EntityManagerFactory by direct reference,, +	 * resolving it by its persistence unit name instead. If no EntityManagerFactory and, +	 * no persistence unit name have been specified, a default EntityManagerFactory will, +	 * be retrieved through finding a single unique bean of type EntityManagerFactory., +	 * @see #setEntityManagerFactory, +	 */, +	public void setPersistenceUnitName(String persistenceUnitName) {, +		this.persistenceUnitName = persistenceUnitName;, +	}, +, +	/**, +	 * Return the name of the persistence unit to access the EntityManagerFactory for, if any., +	 */, +	public String getPersistenceUnitName() {, +		return this.persistenceUnitName;, +	}, +, +	/**, +	/**, +	 * Retrieves an EntityManagerFactory by persistence unit name, if none set explicitly., +	 * Falls back to a default EntityManagerFactory bean if no persistence unit specified., +	 * @see #setPersistenceUnitName, +	 */, +	public void setBeanFactory(BeanFactory beanFactory) throws BeansException {, +		if (getEntityManagerFactory() == null) {, +			if (!(beanFactory instanceof ListableBeanFactory)) {, +				throw new IllegalStateException("Cannot retrieve EntityManagerFactory by persistence unit name " +, +						"in a non-listable BeanFactory: " + beanFactory);, +			}, +			ListableBeanFactory lbf = (ListableBeanFactory) beanFactory;, +			setEntityManagerFactory(EntityManagerFactoryUtils.findEntityManagerFactory(lbf, getPersistenceUnitName()));, +		}, +	}, +, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryUtils.java, + * Copyright 2002-2011 the original author or authors., +import org.springframework.util.StringUtils;, +	 * @param unitName the name of the persistence unit (may be <code>null</code> or empty,, +	 * in which case a single bean of type EntityManagerFactory will be searched for), +		if (StringUtils.hasLength(unitName)) {, +		else {, +			return BeanFactoryUtils.beanOfType(beanFactory, EntityManagerFactory.class);, +		}, +	}, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryAccessor.java, + * Copyright 2002-2011 the original author or authors.]