[+++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequestFactory.java, + * Copyright 2002-2015 the original author or authors., +public class HttpComponentsAsyncClientHttpRequestFactory extends HttpComponentsClientHttpRequestFactory, +	 * {@linkplain #createAsyncRequest(URI, HttpMethod) asynchronous execution}., +		return this.httpAsyncClient;, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequestFactory.java, + * Copyright 2002-2015 the original author or authors., +public class HttpComponentsAsyncClientHttpRequestFactory extends HttpComponentsClientHttpRequestFactory, +	 * {@linkplain #createAsyncRequest(URI, HttpMethod) asynchronous execution}., +		return this.httpAsyncClient;, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequest.java, + * Copyright 2002-2015 the original author or authors., +import org.apache.http.HttpResponse;, +import org.apache.http.client.HttpClient;, +	private final HttpClient httpClient;, +	HttpComponentsClientHttpRequest(HttpClient httpClient, HttpUriRequest httpRequest, HttpContext httpContext) {, +		HttpResponse httpResponse = this.httpClient.execute(this.httpRequest, this.httpContext);, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequestFactory.java, + * Copyright 2002-2015 the original author or authors., +public class HttpComponentsAsyncClientHttpRequestFactory extends HttpComponentsClientHttpRequestFactory, +	 * {@linkplain #createAsyncRequest(URI, HttpMethod) asynchronous execution}., +		return this.httpAsyncClient;, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequest.java, + * Copyright 2002-2015 the original author or authors., +import org.apache.http.HttpResponse;, +import org.apache.http.client.HttpClient;, +	private final HttpClient httpClient;, +	HttpComponentsClientHttpRequest(HttpClient httpClient, HttpUriRequest httpRequest, HttpContext httpContext) {, +		HttpResponse httpResponse = this.httpClient.execute(this.httpRequest, this.httpContext);, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java, + * Copyright 2002-2015 the original author or authors., +import java.io.Closeable;, +	private HttpClient httpClient;, +		Assert.notNull(httpClient, "HttpClient must not be null");, +		this.httpClient = httpClient;, +	 * {@linkplain #createRequest(URI, HttpMethod) synchronous execution}., +		this.httpClient = httpClient;, +	@SuppressWarnings("deprecation"), +		HttpClient client = getHttpClient();, +	 * Create a default {@link RequestConfig} to use with the given client., +	 * Can return {@code null} to indicate that no custom request config should, +	 * be set and the defaults of the {@link HttpClient} should be used., +	 * <p>The default implementation tries to merge the defaults of the client, +	 * with the local customizations of this instance, if any., +	 * @since 4.2, +	protected RequestConfig createRequestConfig(HttpClient client) {, +		if (this.httpClient instanceof Closeable) {, +			((Closeable) this.httpClient).close();, +		}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequestFactory.java, + * Copyright 2002-2015 the original author or authors., +public class HttpComponentsAsyncClientHttpRequestFactory extends HttpComponentsClientHttpRequestFactory, +	 * {@linkplain #createAsyncRequest(URI, HttpMethod) asynchronous execution}., +		return this.httpAsyncClient;, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequest.java, + * Copyright 2002-2015 the original author or authors., +import org.apache.http.HttpResponse;, +import org.apache.http.client.HttpClient;, +	private final HttpClient httpClient;, +	HttpComponentsClientHttpRequest(HttpClient httpClient, HttpUriRequest httpRequest, HttpContext httpContext) {, +		HttpResponse httpResponse = this.httpClient.execute(this.httpRequest, this.httpContext);, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java, + * Copyright 2002-2015 the original author or authors., +import java.io.Closeable;, +	private HttpClient httpClient;, +		Assert.notNull(httpClient, "HttpClient must not be null");, +		this.httpClient = httpClient;, +	 * {@linkplain #createRequest(URI, HttpMethod) synchronous execution}., +		this.httpClient = httpClient;, +	@SuppressWarnings("deprecation"), +		HttpClient client = getHttpClient();, +	 * Create a default {@link RequestConfig} to use with the given client., +	 * Can return {@code null} to indicate that no custom request config should, +	 * be set and the defaults of the {@link HttpClient} should be used., +	 * <p>The default implementation tries to merge the defaults of the client, +	 * with the local customizations of this instance, if any., +	 * @since 4.2, +	protected RequestConfig createRequestConfig(HttpClient client) {, +		if (this.httpClient instanceof Closeable) {, +			((Closeable) this.httpClient).close();, +		}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpResponse.java, + * Copyright 2002-2015 the original author or authors., +import java.io.Closeable;, +import org.apache.http.HttpResponse;, +	private final HttpResponse httpResponse;, +	HttpComponentsClientHttpResponse(HttpResponse httpResponse) {, +				if (this.httpResponse instanceof Closeable) {, +					((Closeable) this.httpResponse).close();, +				}, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequestFactory.java, + * Copyright 2002-2015 the original author or authors., +public class HttpComponentsAsyncClientHttpRequestFactory extends HttpComponentsClientHttpRequestFactory, +	 * {@linkplain #createAsyncRequest(URI, HttpMethod) asynchronous execution}.]