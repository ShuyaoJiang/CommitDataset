[+++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java, + * Copyright 2002-2018 the original author or authors., +	private static final MediaType DEFAULT_FORM_DATA_MEDIA_TYPE =, +			new MediaType(MediaType.APPLICATION_FORM_URLENCODED, DEFAULT_CHARSET);, +	private static final ResolvableType MULTIVALUE_TYPE =, +			ResolvableType.forClassWithGenerics(MultiValueMap.class, String.class, String.class);, +, +		mediaType = (mediaType != null ? mediaType : DEFAULT_FORM_DATA_MEDIA_TYPE);, +		Charset charset;, +		if (mediaType.getCharset() == null) {, +			charset = getDefaultCharset();, +			mediaType = new MediaType(mediaType, charset);, +		else {, +			charset = mediaType.getCharset();, +		}, +		message.getHeaders().setContentType(mediaType);, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java, + * Copyright 2002-2018 the original author or authors., +	private static final MediaType DEFAULT_FORM_DATA_MEDIA_TYPE =, +			new MediaType(MediaType.APPLICATION_FORM_URLENCODED, DEFAULT_CHARSET);, +	private static final ResolvableType MULTIVALUE_TYPE =, +			ResolvableType.forClassWithGenerics(MultiValueMap.class, String.class, String.class);, +, +		mediaType = (mediaType != null ? mediaType : DEFAULT_FORM_DATA_MEDIA_TYPE);, +		Charset charset;, +		if (mediaType.getCharset() == null) {, +			charset = getDefaultCharset();, +			mediaType = new MediaType(mediaType, charset);, +		else {, +			charset = mediaType.getCharset();, +		}, +		message.getHeaders().setContentType(mediaType);, +++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java, +	private static final MediaType DEFAULT_FORM_DATA_MEDIA_TYPE =, +			new MediaType(MediaType.APPLICATION_FORM_URLENCODED, DEFAULT_CHARSET);, +, +		contentType = (contentType != null ? contentType : DEFAULT_FORM_DATA_MEDIA_TYPE);, +		Charset charset = contentType.getCharset();, +		if (charset == null) {, +			contentType = new MediaType(contentType, charset);, +		outputMessage.getHeaders().setContentType(contentType);, +, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java, + * Copyright 2002-2018 the original author or authors., +	private static final MediaType DEFAULT_FORM_DATA_MEDIA_TYPE =, +			new MediaType(MediaType.APPLICATION_FORM_URLENCODED, DEFAULT_CHARSET);, +	private static final ResolvableType MULTIVALUE_TYPE =, +			ResolvableType.forClassWithGenerics(MultiValueMap.class, String.class, String.class);, +, +		mediaType = (mediaType != null ? mediaType : DEFAULT_FORM_DATA_MEDIA_TYPE);, +		Charset charset;, +		if (mediaType.getCharset() == null) {, +			charset = getDefaultCharset();, +			mediaType = new MediaType(mediaType, charset);, +		else {, +			charset = mediaType.getCharset();, +		}, +		message.getHeaders().setContentType(mediaType);, +++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java, +	private static final MediaType DEFAULT_FORM_DATA_MEDIA_TYPE =, +			new MediaType(MediaType.APPLICATION_FORM_URLENCODED, DEFAULT_CHARSET);, +, +		contentType = (contentType != null ? contentType : DEFAULT_FORM_DATA_MEDIA_TYPE);, +		Charset charset = contentType.getCharset();, +		if (charset == null) {, +			contentType = new MediaType(contentType, charset);, +		outputMessage.getHeaders().setContentType(contentType);, +, +++ b/spring-web/src/test/java/org/springframework/http/codec/FormHttpMessageWriterTests.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.http.HttpHeaders;, +		HttpHeaders headers = response.getHeaders();, +		assertEquals("application/x-www-form-urlencoded;charset=UTF-8", headers.getContentType().toString());, +		assertEquals(responseBody.getBytes().length, headers.getContentLength());, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java, + * Copyright 2002-2018 the original author or authors., +	private static final MediaType DEFAULT_FORM_DATA_MEDIA_TYPE =, +			new MediaType(MediaType.APPLICATION_FORM_URLENCODED, DEFAULT_CHARSET);, +	private static final ResolvableType MULTIVALUE_TYPE =, +			ResolvableType.forClassWithGenerics(MultiValueMap.class, String.class, String.class);, +, +		mediaType = (mediaType != null ? mediaType : DEFAULT_FORM_DATA_MEDIA_TYPE);, +		Charset charset;, +		if (mediaType.getCharset() == null) {, +			charset = getDefaultCharset();, +			mediaType = new MediaType(mediaType, charset);, +		else {, +			charset = mediaType.getCharset();, +		}, +		message.getHeaders().setContentType(mediaType);, +++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java, +	private static final MediaType DEFAULT_FORM_DATA_MEDIA_TYPE =, +			new MediaType(MediaType.APPLICATION_FORM_URLENCODED, DEFAULT_CHARSET);, +, +		contentType = (contentType != null ? contentType : DEFAULT_FORM_DATA_MEDIA_TYPE);, +		Charset charset = contentType.getCharset();, +		if (charset == null) {, +			contentType = new MediaType(contentType, charset);, +		outputMessage.getHeaders().setContentType(contentType);, +]