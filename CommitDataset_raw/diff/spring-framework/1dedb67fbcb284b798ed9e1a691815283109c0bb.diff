[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java, +	private String virtualHost;, +, +	 * Set the value of the "host" header to use in STOMP CONNECT frames. When this, +	 * property is configured, a "host" header will be added to every STOMP frame sent to, +	 * the STOMP broker. This may be useful for example in a cloud environment where the, +	 * actual host to which the TCP connection is established is different from the host, +	 * providing the cloud-based STOMP service., +	 * <p>By default this property is not set., +	 */, +	public StompBrokerRelayRegistration setVirtualHost(String virtualHost) {, +		this.virtualHost = virtualHost;, +		return this;, +	}, +, +	/**, +		if(this.virtualHost != null) {, +			handler.setVirtualHost(this.virtualHost);, +		}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java, +	private String virtualHost;, +, +	 * Set the value of the "host" header to use in STOMP CONNECT frames. When this, +	 * property is configured, a "host" header will be added to every STOMP frame sent to, +	 * the STOMP broker. This may be useful for example in a cloud environment where the, +	 * actual host to which the TCP connection is established is different from the host, +	 * providing the cloud-based STOMP service., +	 * <p>By default this property is not set., +	 */, +	public StompBrokerRelayRegistration setVirtualHost(String virtualHost) {, +		this.virtualHost = virtualHost;, +		return this;, +	}, +, +	/**, +		if(this.virtualHost != null) {, +			handler.setVirtualHost(this.virtualHost);, +		}, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistrationTests.java, +		registration.setVirtualHost("example.org");, +		assertEquals("example.org", relayMessageHandler.getVirtualHost());]