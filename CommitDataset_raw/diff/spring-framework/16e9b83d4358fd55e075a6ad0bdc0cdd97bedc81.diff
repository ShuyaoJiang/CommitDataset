[+++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/JavaMailSenderImpl.java, +import javax.mail.Address;, +					Address[] addresses = mimeMessage.getAllRecipients();, +					transport.sendMessage(mimeMessage, (addresses != null ? addresses : new Address[0]));, +++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/JavaMailSenderImpl.java, +import javax.mail.Address;, +					Address[] addresses = mimeMessage.getAllRecipients();, +					transport.sendMessage(mimeMessage, (addresses != null ? addresses : new Address[0]));, +++ b/spring-context-support/src/test/java/org/springframework/mail/javamail/JavaMailSenderTests.java, + * Copyright 2002-2018 the original author or authors., +, +		simpleMessage.setCc("he@mail.org", "she@mail.org");, +		simpleMessage.setBcc("us@mail.org", "them@mail.org");, +	@Test, +	public void javaMailSenderWithSimpleMessages() throws MessagingException {, +	@Test, +	public void javaMailSenderWithMimeMessage() throws MessagingException {, +	public void failedMailServerConnect() {, +	public void failedMailServerClose() {, +	public void failedSimpleMessage() throws MessagingException {, +	public void failedMimeMessage() throws MessagingException {, +	public void testConnection() throws MessagingException {, +	public void testConnectionWithFailure() throws MessagingException {, +			if (addresses == null || (message.getAllRecipients() == null ? addresses.length > 0 :, +					!ObjectUtils.nullSafeEquals(addresses, message.getAllRecipients()))) {]