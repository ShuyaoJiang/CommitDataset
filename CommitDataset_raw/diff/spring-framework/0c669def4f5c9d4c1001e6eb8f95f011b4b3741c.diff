[+++ b/src/docs/asciidoc/web/web-uris.adoc, +By default `UriComponents` encodes only characters that are illegal within a given URI, +component, but not all characters with reserved meaning. More specifically `UriComponents`, +does the following:, +. Expand URI variables., +. Encode each URI component (path, query, etc) individually, by applying percent encoding, +to illegal characters such as non-US-ASCII characters as well as any characters that are, +illegal within the URI component, as per RFC 3986., +This is comparable to the way the `java.net.URI` multi-argument constructor works and is, +described in the "Escaped octets, quotation, encoding, and decoding" section of its Javadoc., +In some cases, you may want to ensure that expanded URI variables do not impact the, +structure and meaning of the URI. That means encoding not only illegal characters but also, +all characters with reserved meaning in a URI., +The `WebClient` and the `RestTemplate` can be switched to a different encoding mode, +through the <<web-uribuilder,UriBuilderFactory>> strategy:, +	WebClient client = WebClient.builder().uriBuilderFactory(factory).build();, +, +	RestTemplate restTemplate = new RestTemplate();, +	restTemplate.setUriTemplateHandler(factory);, +Internally `DefaultUriBuilderFactory` delegates to `UriUtils.encode(String, Charset)` to, +encode each URI variable value prior to expanding it, effectively encoding both all, +non-US-ASCII characters, and characters with reserved meaning in a URI.]