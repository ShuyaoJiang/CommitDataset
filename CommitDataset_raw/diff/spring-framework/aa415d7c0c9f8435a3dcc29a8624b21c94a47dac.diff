[+++ b/spring-web/src/main/java/org/springframework/web/context/support/JacksonObjectMapperFactoryBean.java, +/*, + * Copyright 2002-2012 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.context.support;, +, +import java.text.DateFormat;, +import java.text.SimpleDateFormat;, +import java.util.HashMap;, +import java.util.Map;, +, +import org.codehaus.jackson.JsonGenerator;, +import org.codehaus.jackson.JsonParser;, +import org.codehaus.jackson.map.AnnotationIntrospector;, +import org.codehaus.jackson.map.DeserializationConfig;, +import org.codehaus.jackson.map.ObjectMapper;, +import org.codehaus.jackson.map.SerializationConfig;, +import org.springframework.beans.FatalBeanException;, +import org.springframework.beans.factory.FactoryBean;, +import org.springframework.beans.factory.InitializingBean;, +, +/**, + * A FactoryBean for creating a Jackson {@link ObjectMapper} with setters to, + * enable or disable Jackson features from within XML configuration., + *, + * <p>Example usage with MappingJacksonHttpMessageConverter:</p>, + * <pre>, + * &lt;bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">, + * 	&lt;property name="objectMapper">, + * 		&lt;bean class="org.springframework.web.context.support.JacksonObjectMapperFactoryBean", + * 			p:autoDetectFields="false", + * 			p:autoDetectGettersSetters="false", + * 			p:annotationIntrospector-ref="jaxbAnnotationIntrospector" />, + * 	&lt;/property>, + * &lt;/bean>, + * </pre>, + *, + * <p>Example usage with MappingJacksonJsonView:</p>, + * <pre>, + * &lt;bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">, + * 	&lt;property name="objectMapper">, + * 		&lt;bean class="org.springframework.web.context.support.JacksonObjectMapperFactoryBean", + * 			p:autoDetectFields="false", + * 			p:autoDetectGettersSetters="false", + * 			p:annotationIntrospector-ref="jaxbAnnotationIntrospector" />, + * 	&lt;/property>, + * &lt;/bean>, + * </pre>, + *, + * <p>In case there are no specific setters provided (for some rarely used, + * options), you can still use the more general methods, + * {@link #setFeaturesToEnable(Object[])} and {@link #setFeaturesToDisable(Object[])}., + *, + * <pre>, + * &lt;bean class="org.springframework.web.context.support.JacksonObjectMapperFactoryBean">, + * 	&lt;property name="featuresToEnable">, + * 		&lt;array>, + * 			&lt;util:constant static-field="org.codehaus.jackson.map.SerializationConfig$Feature.WRAP_ROOT_VALUE"/>, + * 			&lt;util:constant static-field="org.codehaus.jackson.map.SerializationConfig$Feature.CLOSE_CLOSEABLE"/>, + * 		&lt;/array>, + * 	&lt;/property>, + * 	&lt;property name="featuresToDisable">, + * 		&lt;array>, + * 			&lt;util:constant static-field="org.codehaus.jackson.map.DeserializationConfig$Feature.USE_ANNOTATIONS"/>, + * 		&lt;/array>, + * 	&lt;/property>, + * &lt;/bean>, + * </pre>, + *, + * <p>Note: This BeanFctory is singleton, so if you need more than one, you'll, + * need to configure multiple instances., + *, + * @author <a href="mailto:dmitry.katsubo@gmail.com">Dmitry Katsubo</a>, + * @author Rossen Stoyanchev, + *, + * @since 3.2, + */, +public class JacksonObjectMapperFactoryBean implements FactoryBean<ObjectMapper>, InitializingBean {, +, +	private ObjectMapper objectMapper;, +, +	private Map<Object, Boolean> features = new HashMap<Object, Boolean>();, +, +	private AnnotationIntrospector annotationIntrospector;, +, +	private DateFormat dateFormat;, +]