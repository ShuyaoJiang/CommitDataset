[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilter.java, +				int suffixIndex = getQueryParamsIndex(url);, +				String suffix = url.substring(suffixIndex);, +				String lookupPath = url.substring(this.indexLookupPath, suffixIndex);, +					return super.encodeURL(prefix + lookupPath + suffix);, +, +		private int getQueryParamsIndex(String url) {, +			int index = url.indexOf("?");, +			return index > 0 ? index : url.length();, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilter.java, +				int suffixIndex = getQueryParamsIndex(url);, +				String suffix = url.substring(suffixIndex);, +				String lookupPath = url.substring(this.indexLookupPath, suffixIndex);, +					return super.encodeURL(prefix + lookupPath + suffix);, +, +		private int getQueryParamsIndex(String url) {, +			int index = url.indexOf("?");, +			return index > 0 ? index : url.length();, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlProvider.java, +		int prefixIndex = getLookupPathIndex(request);, +		int suffixIndex = getQueryParamsIndex(requestUrl);, +		String prefix = requestUrl.substring(0, prefixIndex);, +		String suffix = requestUrl.substring(suffixIndex);, +		String lookupPath = requestUrl.substring(prefixIndex, suffixIndex);, +		return (resolvedLookupPath != null) ? prefix + resolvedLookupPath + suffix : null;, +	private int getQueryParamsIndex(String lookupPath) {, +		int index = lookupPath.indexOf("?");, +		return index > 0 ? index : lookupPath.length();, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilter.java, +				int suffixIndex = getQueryParamsIndex(url);, +				String suffix = url.substring(suffixIndex);, +				String lookupPath = url.substring(this.indexLookupPath, suffixIndex);, +					return super.encodeURL(prefix + lookupPath + suffix);, +, +		private int getQueryParamsIndex(String url) {, +			int index = url.indexOf("?");, +			return index > 0 ? index : url.length();, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlProvider.java, +		int prefixIndex = getLookupPathIndex(request);, +		int suffixIndex = getQueryParamsIndex(requestUrl);, +		String prefix = requestUrl.substring(0, prefixIndex);, +		String suffix = requestUrl.substring(suffixIndex);, +		String lookupPath = requestUrl.substring(prefixIndex, suffixIndex);, +		return (resolvedLookupPath != null) ? prefix + resolvedLookupPath + suffix : null;, +	private int getQueryParamsIndex(String lookupPath) {, +		int index = lookupPath.indexOf("?");, +		return index > 0 ? index : lookupPath.length();, +	}, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilterTests.java, + * Copyright 2002-2015 the original author or authors., +	// SPR-13374, +	@Test, +	public void encodeURLWithRequestParams() throws Exception {, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/foo");, +		request.setContextPath("/");, +		request.setAttribute(ResourceUrlProviderExposingInterceptor.RESOURCE_URL_PROVIDER_ATTR, this.resourceUrlProvider);, +		MockHttpServletResponse response = new MockHttpServletResponse();, +, +		this.filter.doFilterInternal(request, response, new FilterChain() {, +			@Override, +			public void doFilter(ServletRequest request, ServletResponse response) throws IOException, ServletException {, +				String result = ((HttpServletResponse)response).encodeURL("/resources/bar.css?foo=bar&url=http://example.org");, +				assertEquals("/resources/bar-11e16cf79faee7ac698c805cf28248d2.css?foo=bar&url=http://example.org", result);, +			}, +		});, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilter.java, +				int suffixIndex = getQueryParamsIndex(url);, +				String suffix = url.substring(suffixIndex);, +				String lookupPath = url.substring(this.indexLookupPath, suffixIndex);, +					return super.encodeURL(prefix + lookupPath + suffix);, +, +		private int getQueryParamsIndex(String url) {, +			int index = url.indexOf("?");, +			return index > 0 ? index : url.length();, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlProvider.java, +		int prefixIndex = getLookupPathIndex(request);, +		int suffixIndex = getQueryParamsIndex(requestUrl);, +		String prefix = requestUrl.substring(0, prefixIndex);, +		String suffix = requestUrl.substring(suffixIndex);, +		String lookupPath = requestUrl.substring(prefixIndex, suffixIndex);, +		return (resolvedLookupPath != null) ? prefix + resolvedLookupPath + suffix : null;, +	private int getQueryParamsIndex(String lookupPath) {, +		int index = lookupPath.indexOf("?");, +		return index > 0 ? index : lookupPath.length();, +	}, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilterTests.java, + * Copyright 2002-2015 the original author or authors., +	// SPR-13374, +	@Test, +	public void encodeURLWithRequestParams() throws Exception {]