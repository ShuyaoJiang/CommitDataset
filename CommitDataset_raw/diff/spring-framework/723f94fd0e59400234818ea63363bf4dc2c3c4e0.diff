[+++ b/org.springframework.oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +	public void setContextPaths(String... contextPaths) {, +	public void setClassesToBeBound(Class<?>... classesToBeBound) {, +		Assert.notEmpty(classesToBeBound, "'classesToBeBound' must not be empty");, +++ b/org.springframework.oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +	public void setContextPaths(String... contextPaths) {, +	public void setClassesToBeBound(Class<?>... classesToBeBound) {, +		Assert.notEmpty(classesToBeBound, "'classesToBeBound' must not be empty");, +++ b/org.springframework.oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2MarshallerTests.java, +		marshaller.setClassesToBeBound(FlightType.class);, +		marshaller.setClassesToBeBound(Flights.class, FlightType.class);, +		marshaller.setClassesToBeBound(DummyRootElement.class, DummyType.class);, +		marshaller.setClassesToBeBound(BinaryObject.class);, +++ b/org.springframework.oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +	public void setContextPaths(String... contextPaths) {, +	public void setClassesToBeBound(Class<?>... classesToBeBound) {, +		Assert.notEmpty(classesToBeBound, "'classesToBeBound' must not be empty");, +++ b/org.springframework.oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2MarshallerTests.java, +		marshaller.setClassesToBeBound(FlightType.class);, +		marshaller.setClassesToBeBound(Flights.class, FlightType.class);, +		marshaller.setClassesToBeBound(DummyRootElement.class, DummyType.class);, +		marshaller.setClassesToBeBound(BinaryObject.class);, +++ b/org.springframework.oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2UnmarshallerTests.java, + * Copyright 2002-2010 the original author or authors., +		unmarshaller.setClassesToBeBound(BinaryObject.class);, +++ b/org.springframework.oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +	public void setContextPaths(String... contextPaths) {, +	public void setClassesToBeBound(Class<?>... classesToBeBound) {, +		Assert.notEmpty(classesToBeBound, "'classesToBeBound' must not be empty");, +++ b/org.springframework.oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2MarshallerTests.java, +		marshaller.setClassesToBeBound(FlightType.class);, +		marshaller.setClassesToBeBound(Flights.class, FlightType.class);, +		marshaller.setClassesToBeBound(DummyRootElement.class, DummyType.class);, +		marshaller.setClassesToBeBound(BinaryObject.class);, +++ b/org.springframework.oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2UnmarshallerTests.java, + * Copyright 2002-2010 the original author or authors., +		unmarshaller.setClassesToBeBound(BinaryObject.class);, +++ b/org.springframework.web/src/main/java/org/springframework/http/converter/xml/MarshallingHttpMessageConverter.java, +import org.springframework.beans.TypeMismatchException;, +			Object result = this.unmarshaller.unmarshal(source);, +			if (!clazz.isInstance(result)) {, +				throw new TypeMismatchException(result, clazz);, +			}, +			return result;]