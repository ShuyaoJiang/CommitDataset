[+++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequest.java, +		final HttpResponseFutureCallback callback = new HttpResponseFutureCallback(this.httpRequest);, +		private final HttpUriRequest httpRequest;, +, +, +		public HttpResponseFutureCallback(HttpUriRequest httpRequest) {, +			this.httpRequest = httpRequest;, +		}, +, +, +			this.httpRequest.abort();, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequest.java, +		final HttpResponseFutureCallback callback = new HttpResponseFutureCallback(this.httpRequest);, +		private final HttpUriRequest httpRequest;, +, +, +		public HttpResponseFutureCallback(HttpUriRequest httpRequest) {, +			this.httpRequest = httpRequest;, +		}, +, +, +			this.httpRequest.abort();, +++ b/spring-web/src/test/java/org/springframework/http/client/AbstractAsyncHttpRequestFactoryTestCase.java, + * Copyright 2002-2016 the original author or authors., +	@Test, +	public void cancel() throws Exception {, +		URI uri = new URI(baseUrl + "/status/notfound");, +		AsyncClientHttpRequest request = this.factory.createAsyncRequest(uri, HttpMethod.GET);, +		Future<ClientHttpResponse> futureResponse = request.executeAsync();, +		futureResponse.cancel(true);, +		assertTrue(futureResponse.isCancelled());, +	}, +, +]