[+++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java, +	protected final Map<CacheKey, InvokerPair> readerCache = new ConcurrentHashMap<CacheKey, InvokerPair>();, +	protected final Map<CacheKey, Member> writerCache = new ConcurrentHashMap<CacheKey, Member>();, +	protected final Map<CacheKey, TypeDescriptor> typeDescriptorCache = new ConcurrentHashMap<CacheKey, TypeDescriptor>();, +, +		if (type.isArray() && name.equals("length")) {, +			Method method = (Method) (invoker != null ? invoker.member : null);, +			}, +			catch (IntrospectionException ex) {, +			}, +			catch (EvaluationException evaluationException) {, +				}, +				else if (canWrite(context, target, name)) {, +			}, +			catch (AccessException ex) {, +				// continue with null type descriptor, +			}, +			else {, +			}, +			else {, +				}, +				catch (Exception ex) {, +					throw new AccessException("Unable to access property '" + name + "' through getter", ex);, +]