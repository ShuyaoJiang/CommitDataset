[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/RootBeanDefinition.java, +	 * Return a {@link ResolvableType} for this bean definition,, +	 * either from runtime-cached type information or from configuration-time, +	 * {@link #setTargetType(ResolvableType)} or {@link #setBeanClass(Class)}., +	 * @since 5.1, +	 * @see #getTargetType(), +	 * @see #getBeanClass(), +	 */, +	public ResolvableType getResolvableType() {, +		ResolvableType targetType = this.targetType;, +		return (targetType != null ? targetType : ResolvableType.forClass(getBeanClass()));, +	}, +, +	/**, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/RootBeanDefinition.java, +	 * Return a {@link ResolvableType} for this bean definition,, +	 * either from runtime-cached type information or from configuration-time, +	 * {@link #setTargetType(ResolvableType)} or {@link #setBeanClass(Class)}., +	 * @since 5.1, +	 * @see #getTargetType(), +	 * @see #getBeanClass(), +	 */, +	public ResolvableType getResolvableType() {, +		ResolvableType targetType = this.targetType;, +		return (targetType != null ? targetType : ResolvableType.forClass(getBeanClass()));, +	}, +, +	/**, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessorTests.java, +		assertEquals(ResolvableType.forClass(GenericInterface1Impl.class), bd.getResolvableType());, +		assertEquals(ResolvableType.forClass(GenericInterface1Impl.class), bd.getResolvableType());, +	public void testGenericsBasedInjectionWithBeanDefinitionTargetResolvableType() {, +		assertEquals(ResolvableType.forClassWithGenerics(GenericInterface2Bean.class, String.class), bd1.getResolvableType());, +		assertEquals(ResolvableType.forClassWithGenerics(GenericInterface2Bean.class, Integer.class), bd2.getResolvableType());]