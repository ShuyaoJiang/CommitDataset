[+++ b/src/docs/asciidoc/web/webflux.adoc, +Note that use of `@RequestParam` is optional, e.g. to set its attributes., +See "Any other argument" further below in this table., +, +|For access to the model that is used in HTML controllers and exposed to templates as, +part of view rendering., +|`@ModelAttribute`, +|For access to an existing attribute in the model (instantiated if not present) with, +data binding and validation applied. See <<webflux-ann-modelattrib-method-args>> as well, +as <<webflux-ann-modelattrib-methods>> and <<webflux-ann-initbinder>>., +Note that use of `@ModelAttribute` is optional, e.g. to set its attributes., +See "Any other argument" further below in this table., +|For access to errors from the data binding and validation applied to a command object;, +this argument must be declared immediately after a command object (i.e., +`@ModelAttribute` argument). If this is not declared in the controller method signature,, +errors result in a `BindException`. See <<webflux-ann-modelattrib-method-args>> for more, +details., +|`SessionStatus` + class-level `@SessionAttributes`, +declared through a class-level `@SessionAttributes` annotation. See, +<<webflux-ann-sessionattributes>> for more details., +// See <<webflux-uri-building>>., +as a result of a class-level `@SessionAttributes` declaration. See, +<<webflux-ann-sessionattribute>> for more details., +|For access to request attributes. See <<webflux-ann-requestattrib>> for more details., +, +|Any other argument, +|If a method argument is not matched to any of the above, by default it is resolved as, +an `@RequestParam` if it is a simple type, as determined by, +{api-spring-framework}/beans/BeanUtils.html#isSimpleProperty-java.lang.Class-[BeanUtils#isSimpleProperty],, +or as an `@ModelAttribute` otherwise., +based on the request path., +, +|`@ModelAttribute`, +|An attribute to be added to the model with the view name implicitly determined based, +on the request path., +, +Note that `@ModelAttribute` is optional. See "Any other return value" further below in, +this table., +|Any other return value, +|If a return value is not matched to any of the above, by default it is treated as a view, +name, if it is `String` or `void` (default view name selection applies); or as a model, +attribute to be added to the model, unless it is a simple type, as determined by, +{api-spring-framework}/beans/BeanUtils.html#isSimpleProperty-java.lang.Class-[BeanUtils#isSimpleProperty], +in which case it remains unresolved., +Note that use of `@RequestParam` is optional, e.g. to set its attributes., +By default any argument that is a simple value type, as determined by, +{api-spring-framework}/beans/BeanUtils.html#isSimpleProperty-java.lang.Class-[BeanUtils#isSimpleProperty],, +and is not resolved by any other argument resolver, is treated as if it was annotated, +with `@RequestParam`., +, +values of query parameters and form fields whose names match to field names. This is, +Note that use of `@ModelAttribute` is optional, e.g. to set its attributes., +By default any argument that is not a simple value type, as determined by, +{api-spring-framework}/beans/BeanUtils.html#isSimpleProperty-java.lang.Class-[BeanUtils#isSimpleProperty],, +and is not resolved by any other argument resolver, is treated as if it was annotated, +with `@ModelAttribute`., +, +	@GetMapping("/"), +[[webflux-ann-requestattrib]], +==== @RequestAttribute, +[.small]#<<web.adoc#mvc-ann-requestattrib,Same in Spring MVC>>#, +, +Similar to `@SessionAttribute` the `@RequestAttribute` annotation can be used to, +access pre-existing request attributes created earlier, e.g. by a `WebFilter`:, +, +[source,java,indent=0], +[subs="verbatim,quotes"], +----, +	@GetMapping("/"), +	public String handle(**@RequestAttribute** Client client) {, +		// ..., +	}, +----, +, +, +++ b/src/docs/asciidoc/web/webflux.adoc, +Note that use of `@RequestParam` is optional, e.g. to set its attributes., +See "Any other argument" further below in this table., +, +|For access to the model that is used in HTML controllers and exposed to templates as, +part of view rendering., +|`@ModelAttribute`, +|For access to an existing attribute in the model (instantiated if not present) with, +data binding and validation applied. See <<webflux-ann-modelattrib-method-args>> as well, +as <<webflux-ann-modelattrib-methods>> and <<webflux-ann-initbinder>>., +Note that use of `@ModelAttribute` is optional, e.g. to set its attributes., +See "Any other argument" further below in this table., +|For access to errors from the data binding and validation applied to a command object;, +this argument must be declared immediately after a command object (i.e., +`@ModelAttribute` argument). If this is not declared in the controller method signature,, +errors result in a `BindException`. See <<webflux-ann-modelattrib-method-args>> for more, +details., +|`SessionStatus` + class-level `@SessionAttributes`, +declared through a class-level `@SessionAttributes` annotation. See, +<<webflux-ann-sessionattributes>> for more details., +// See <<webflux-uri-building>>., +as a result of a class-level `@SessionAttributes` declaration. See, +<<webflux-ann-sessionattribute>> for more details., +|For access to request attributes. See <<webflux-ann-requestattrib>> for more details., +]