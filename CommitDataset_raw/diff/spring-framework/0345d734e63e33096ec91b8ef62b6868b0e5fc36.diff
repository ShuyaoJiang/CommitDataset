[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.java, + * Copyright 2002-2016 the original author or authors., +, +			ModelAndView result = doResolveException(request, response, handler, ex);, +			if (result != null) {, +				logException(ex, request);, +			}, +			return result;, +		return "Resolved exception caused by Handler execution: " + ex;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.java, + * Copyright 2002-2016 the original author or authors., +, +			ModelAndView result = doResolveException(request, response, handler, ex);, +			if (result != null) {, +				logException(ex, request);, +			}, +			return result;, +		return "Resolved exception caused by Handler execution: " + ex;, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolverTests.java, + * Copyright 2002-2016 the original author or authors., +import org.junit.Before;, +	@Before, +	public void setup() {, +		exceptionResolver.setWarnLogCategory(exceptionResolver.getClass().getName());, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.java, + * Copyright 2002-2016 the original author or authors., +, +			ModelAndView result = doResolveException(request, response, handler, ex);, +			if (result != null) {, +				logException(ex, request);, +			}, +			return result;, +		return "Resolved exception caused by Handler execution: " + ex;, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolverTests.java, + * Copyright 2002-2016 the original author or authors., +import org.junit.Before;, +	@Before, +	public void setup() {, +		exceptionResolver.setWarnLogCategory(exceptionResolver.getClass().getName());, +	}, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolverTests.java, +		this.resolver.setWarnLogCategory(this.resolver.getClass().getName());, +		@Bean, +		public TestExceptionResolver testExceptionResolver() {, +		@Bean, +		public AnotherTestExceptionResolver anotherTestExceptionResolver() {, +		@Bean, +		public NotCalledTestExceptionResolver notCalledTestExceptionResolver() {, +		@Bean, +		public BasePackageTestExceptionResolver basePackageTestExceptionResolver() {, +		@Bean, +		public DefaultTestExceptionResolver defaultTestExceptionResolver() {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.java, + * Copyright 2002-2016 the original author or authors., +, +			ModelAndView result = doResolveException(request, response, handler, ex);, +			if (result != null) {, +				logException(ex, request);, +			}, +			return result;, +		return "Resolved exception caused by Handler execution: " + ex;, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolverTests.java, + * Copyright 2002-2016 the original author or authors., +import org.junit.Before;, +	@Before, +	public void setup() {, +		exceptionResolver.setWarnLogCategory(exceptionResolver.getClass().getName());, +	}, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolverTests.java, +		this.resolver.setWarnLogCategory(this.resolver.getClass().getName());, +		@Bean, +		public TestExceptionResolver testExceptionResolver() {, +		@Bean, +		public AnotherTestExceptionResolver anotherTestExceptionResolver() {, +		@Bean, +		public NotCalledTestExceptionResolver notCalledTestExceptionResolver() {, +		@Bean, +		public BasePackageTestExceptionResolver basePackageTestExceptionResolver() {, +		@Bean, +		public DefaultTestExceptionResolver defaultTestExceptionResolver() {, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolverTests.java, +		exceptionResolver.setWarnLogCategory(exceptionResolver.getClass().getName());]