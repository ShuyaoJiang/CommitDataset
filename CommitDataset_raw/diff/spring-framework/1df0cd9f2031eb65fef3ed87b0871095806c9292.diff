[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/DispatcherServlet.java, +import javax.servlet.ServletContext;, +import org.springframework.web.servlet.support.RequestContextUtils;, +	 * Well-known name for the FlashMapManager object in the bean factory for this namespace., +	 */, +	public static final String FLASH_MAP_MANAGER_BEAN_NAME = "flashMapManager";, +, +	/**, +	/** FlashMapManager used by this servlet */, +	private FlashMapManager flashMapManager;, +	, +		initFlashMapManager(context);, +	 * Initialize the {@link FlashMapManager} used by this servlet instance., +	 * <p>If no implementation is configured then we default to DefaultFlashMapManager., +	 */, +	private void initFlashMapManager(ApplicationContext context) {, +		try {, +			this.flashMapManager =, +					context.getBean(FLASH_MAP_MANAGER_BEAN_NAME, FlashMapManager.class);, +			if (logger.isDebugEnabled()) {, +				logger.debug("Using FlashMapManager [" + this.flashMapManager + "]");, +			}, +		}, +		catch (NoSuchBeanDefinitionException ex) {, +			// We need to use the default., +			this.flashMapManager = getDefaultStrategy(context, FlashMapManager.class);, +			if (logger.isDebugEnabled()) {, +				logger.debug("Unable to locate FlashMapManager with name '" +, +						FLASH_MAP_MANAGER_BEAN_NAME + "': using default [" + this.flashMapManager + "]");, +			}, +		}, +	}, +, +	/**, +		boolean flashInitialized = this.flashMapManager.requestStarted(request);, +, +			if (flashInitialized) {, +				this.flashMapManager.requestCompleted(request);, +			}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/DispatcherServlet.java, +import javax.servlet.ServletContext;, +import org.springframework.web.servlet.support.RequestContextUtils;, +	 * Well-known name for the FlashMapManager object in the bean factory for this namespace., +	 */, +	public static final String FLASH_MAP_MANAGER_BEAN_NAME = "flashMapManager";, +, +	/**, +	/** FlashMapManager used by this servlet */, +	private FlashMapManager flashMapManager;, +	, +		initFlashMapManager(context);, +	 * Initialize the {@link FlashMapManager} used by this servlet instance., +	 * <p>If no implementation is configured then we default to DefaultFlashMapManager., +	 */, +	private void initFlashMapManager(ApplicationContext context) {, +		try {, +			this.flashMapManager =, +					context.getBean(FLASH_MAP_MANAGER_BEAN_NAME, FlashMapManager.class);, +			if (logger.isDebugEnabled()) {, +				logger.debug("Using FlashMapManager [" + this.flashMapManager + "]");, +			}, +		}, +		catch (NoSuchBeanDefinitionException ex) {, +			// We need to use the default., +			this.flashMapManager = getDefaultStrategy(context, FlashMapManager.class);, +			if (logger.isDebugEnabled()) {, +				logger.debug("Unable to locate FlashMapManager with name '" +, +						FLASH_MAP_MANAGER_BEAN_NAME + "': using default [" + this.flashMapManager + "]");, +			}, +		}, +	}, +, +	/**, +		boolean flashInitialized = this.flashMapManager.requestStarted(request);, +, +			if (flashInitialized) {, +				this.flashMapManager.requestCompleted(request);, +			}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/DispatcherServlet.properties, +, +org.springframework.web.servlet.FlashMapManager=org.springframework.web.servlet.support.DefaultFlashMapManager, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/DispatcherServlet.java, +import javax.servlet.ServletContext;, +import org.springframework.web.servlet.support.RequestContextUtils;, +	 * Well-known name for the FlashMapManager object in the bean factory for this namespace., +	 */, +	public static final String FLASH_MAP_MANAGER_BEAN_NAME = "flashMapManager";, +, +	/**, +	/** FlashMapManager used by this servlet */, +	private FlashMapManager flashMapManager;, +	, +		initFlashMapManager(context);, +	 * Initialize the {@link FlashMapManager} used by this servlet instance., +	 * <p>If no implementation is configured then we default to DefaultFlashMapManager., +	 */, +	private void initFlashMapManager(ApplicationContext context) {, +		try {, +			this.flashMapManager =, +					context.getBean(FLASH_MAP_MANAGER_BEAN_NAME, FlashMapManager.class);]