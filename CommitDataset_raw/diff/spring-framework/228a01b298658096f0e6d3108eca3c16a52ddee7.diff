[+++ /dev/null, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/RoutingFunction.java, + * @see RoutingFunctions, +					map(RoutingFunctions::cast);, +					.map(RoutingFunctions::cast);, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/RoutingFunction.java, + * @see RoutingFunctions, +					map(RoutingFunctions::cast);, +					.map(RoutingFunctions::cast);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/RoutingFunctions.java, + * <strong>Central entry point to Spring's functional web framework.</strong>, + * {@linkplain #route(RequestPredicate, HandlerFunction) create} a {@code RoutingFunction} given a, + * {@code RequestPredicate} and {@code HandlerFunction}, and to do further, + * {@code RoutingFunction} into an {@code HttpHandler}, which can be run in Servlet 3.1+,, + * Reactor, RxNetty, or Undertow., + * And it can {@linkplain #toHandlerMapping(RoutingFunction, Configuration) transform} a, + * {@code RoutingFunction} into an {@code HandlerMapping}, which can be run in a, + * {@code DispatcherHandler}., + *, +	 * <ul>, +	 * <li>Servlet 3.1+ using the, +	 * {@link org.springframework.http.server.reactive.ServletHttpHandlerAdapter},</li>, +	 * <li>Reactor using the, +	 * {@link org.springframework.http.server.reactive.ReactorHttpHandlerAdapter},</li>, +	 * <li>RxNetty using the, +	 * {@link org.springframework.http.server.reactive.RxNettyHttpHandlerAdapter}, or </li>, +	 * <li>Undertow using the, +	 * {@link org.springframework.http.server.reactive.UndertowHttpHandlerAdapter}.</li>, +	 * </ul>, +	 * <ul>, +	 * <li>Servlet 3.1+ using the, +	 * {@link org.springframework.http.server.reactive.ServletHttpHandlerAdapter},</li>, +	 * <li>Reactor using the, +	 * {@link org.springframework.http.server.reactive.ReactorHttpHandlerAdapter},</li>, +	 * <li>RxNetty using the, +	 * {@link org.springframework.http.server.reactive.RxNettyHttpHandlerAdapter}, or </li>, +	 * <li>Undertow using the, +	 * {@link org.springframework.http.server.reactive.UndertowHttpHandlerAdapter}.</li>, +	 * </ul>, +	 * Converts the given {@code RoutingFunction} into a {@code HandlerMapping}., +	 * <p>The returned {@code HandlerMapping} can be run in a, +	 * <p>The returned {@code HandlerMapping} can be run in a, +	@SuppressWarnings("unchecked"), +	static <T> HandlerFunction<T> cast(HandlerFunction<?> handlerFunction) {, +		return (HandlerFunction<T>) handlerFunction;, +	}, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/RoutingFunction.java, + * @see RoutingFunctions, +					map(RoutingFunctions::cast);, +					.map(RoutingFunctions::cast);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/RoutingFunctions.java, + * <strong>Central entry point to Spring's functional web framework.</strong>, + * {@linkplain #route(RequestPredicate, HandlerFunction) create} a {@code RoutingFunction} given a, + * {@code RequestPredicate} and {@code HandlerFunction}, and to do further, + * {@code RoutingFunction} into an {@code HttpHandler}, which can be run in Servlet 3.1+,, + * Reactor, RxNetty, or Undertow., + * And it can {@linkplain #toHandlerMapping(RoutingFunction, Configuration) transform} a, + * {@code RoutingFunction} into an {@code HandlerMapping}, which can be run in a, + * {@code DispatcherHandler}., + *, +	 * <ul>, +	 * <li>Servlet 3.1+ using the, +	 * {@link org.springframework.http.server.reactive.ServletHttpHandlerAdapter},</li>, +	 * <li>Reactor using the, +	 * {@link org.springframework.http.server.reactive.ReactorHttpHandlerAdapter},</li>, +	 * <li>RxNetty using the, +	 * {@link org.springframework.http.server.reactive.RxNettyHttpHandlerAdapter}, or </li>, +	 * <li>Undertow using the, +	 * {@link org.springframework.http.server.reactive.UndertowHttpHandlerAdapter}.</li>, +	 * </ul>, +	 * <ul>, +	 * <li>Servlet 3.1+ using the, +	 * {@link org.springframework.http.server.reactive.ServletHttpHandlerAdapter},</li>, +	 * <li>Reactor using the, +	 * {@link org.springframework.http.server.reactive.ReactorHttpHandlerAdapter},</li>, +	 * <li>RxNetty using the, +	 * {@link org.springframework.http.server.reactive.RxNettyHttpHandlerAdapter}, or </li>, +	 * <li>Undertow using the, +	 * {@link org.springframework.http.server.reactive.UndertowHttpHandlerAdapter}.</li>, +	 * </ul>, +	 * Converts the given {@code RoutingFunction} into a {@code HandlerMapping}., +	 * <p>The returned {@code HandlerMapping} can be run in a, +	 * <p>The returned {@code HandlerMapping} can be run in a, +	@SuppressWarnings("unchecked"), +	static <T> HandlerFunction<T> cast(HandlerFunction<?> handlerFunction) {, +		return (HandlerFunction<T>) handlerFunction;, +	}, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/support/ResponseResultHandler.java, +	/**, +	 * Create a {@code ResponseResultHandler} with a default configuration., +	 */, +	/**, +	 * Create a {@code ResponseResultHandler} with the given configuration., +	 */, +		return result.getReturnValue(), +				.filter(o -> o instanceof Response), +				.isPresent();]