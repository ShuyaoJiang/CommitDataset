[+++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +			else {, +				inputSource = new InputSource(streamSource.getSystemId());, +			}, +++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +			else {, +				inputSource = new InputSource(streamSource.getSystemId());, +			}, +++ b/spring-oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2UnmarshallerTests.java, +import java.io.File;, +import java.io.IOException;, +import static org.junit.Assert.*;, +import static org.mockito.BDDMockito.given;, +import static org.mockito.BDDMockito.mock;, +, +	@Test, +	public void unmarshalFile() throws IOException {, +		Resource resource = new ClassPathResource("jaxb2.xml", getClass());, +		File file = resource.getFile();, +, +		Flights f = (Flights) unmarshaller.unmarshal(new StreamSource(file));, +		testFlights(f);, +	}, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +			else {, +				inputSource = new InputSource(streamSource.getSystemId());, +			}, +++ b/spring-oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2UnmarshallerTests.java, +import java.io.File;, +import java.io.IOException;, +import static org.junit.Assert.*;, +import static org.mockito.BDDMockito.given;, +import static org.mockito.BDDMockito.mock;, +, +	@Test, +	public void unmarshalFile() throws IOException {, +		Resource resource = new ClassPathResource("jaxb2.xml", getClass());, +		File file = resource.getFile();, +, +		Flights f = (Flights) unmarshaller.unmarshal(new StreamSource(file));, +		testFlights(f);, +	}, +, +++ b/spring-oxm/src/test/resources/org/springframework/oxm/jaxb/jaxb2.xml, +<tns:flights xmlns:tns="http://samples.springframework.org/flight">, +    <tns:flight>, +        <tns:number>42</tns:number>, +    </tns:flight>, +</tns:flights>]