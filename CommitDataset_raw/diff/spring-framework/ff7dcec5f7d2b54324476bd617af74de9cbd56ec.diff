[+++ b/spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, +					if (firstAttemptEx == null && !requiredType.isInterface() && !requiredType.isEnum()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, +					if (firstAttemptEx == null && !requiredType.isInterface() && !requiredType.isEnum()) {, +++ b/spring-context/src/test/java/org/springframework/format/datetime/joda/JodaTimeFormattingTests.java, + * Copyright 2002-2012 the original author or authors., +, +import static org.junit.Assert.*;, +, +	public void testBindDateWithErrorAvoidingDateConstructor() {, +		MutablePropertyValues propertyValues = new MutablePropertyValues();, +		propertyValues.add("date", "Sat, 12 Aug 1995 13:30:00 GMT");, +		binder.bind(propertyValues);, +		assertEquals(1, binder.getBindingResult().getErrorCount());, +		assertEquals("Sat, 12 Aug 1995 13:30:00 GMT", binder.getBindingResult().getFieldValue("date"));, +	}, +, +	@Test, +	public void testBindDateWithoutErrorFallingBackToDateConstructor() {, +		DataBinder binder = new DataBinder(new JodaTimeBean());, +		MutablePropertyValues propertyValues = new MutablePropertyValues();, +		propertyValues.add("date", "Sat, 12 Aug 1995 13:30:00 GMT");, +		binder.bind(propertyValues);, +		assertEquals(0, binder.getBindingResult().getErrorCount());, +	}, +, +	@Test]