[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessagingTemplate.java, +		Assert.hasText(prefix, "'userDestinationPrefix' must not be empty");, +		this.userDestinationPrefix = prefix.endsWith("/") ? prefix : prefix + "/";, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessagingTemplate.java, +		Assert.hasText(prefix, "'userDestinationPrefix' must not be empty");, +		this.userDestinationPrefix = prefix.endsWith("/") ? prefix : prefix + "/";, +, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/SimpMessagingTemplateTests.java, +	// SPR-11868, +, +	@Test, +	public void convertAndSendWithCustomDestinationPrefix() {, +		this.messagingTemplate.setUserDestinationPrefix("/prefix");, +		this.messagingTemplate.convertAndSendToUser("joe", "/queue/foo", "data");, +		List<Message<byte[]>> messages = this.messageChannel.getMessages();, +, +		assertEquals(1, messages.size());, +, +		Message<byte[]> message = messages.get(0);, +		SimpMessageHeaderAccessor headerAccessor =, +				MessageHeaderAccessor.getAccessor(message, SimpMessageHeaderAccessor.class);, +, +		assertNotNull(headerAccessor);, +		assertEquals(SimpMessageType.MESSAGE, headerAccessor.getMessageType());, +		assertEquals("/prefix/joe/queue/foo", headerAccessor.getDestination());, +	}, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessagingTemplate.java, +		Assert.hasText(prefix, "'userDestinationPrefix' must not be empty");, +		this.userDestinationPrefix = prefix.endsWith("/") ? prefix : prefix + "/";, +, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/SimpMessagingTemplateTests.java, +	// SPR-11868, +, +	@Test, +	public void convertAndSendWithCustomDestinationPrefix() {, +		this.messagingTemplate.setUserDestinationPrefix("/prefix");, +		this.messagingTemplate.convertAndSendToUser("joe", "/queue/foo", "data");, +		List<Message<byte[]>> messages = this.messageChannel.getMessages();, +, +		assertEquals(1, messages.size());, +, +		Message<byte[]> message = messages.get(0);, +		SimpMessageHeaderAccessor headerAccessor =, +				MessageHeaderAccessor.getAccessor(message, SimpMessageHeaderAccessor.class);, +, +		assertNotNull(headerAccessor);, +		assertEquals(SimpMessageType.MESSAGE, headerAccessor.getMessageType());, +		assertEquals("/prefix/joe/queue/foo", headerAccessor.getDestination());, +	}, +, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParserTests.java, +		assertEquals("/personal/", simpMessagingTemplate.getUserDestinationPrefix());]