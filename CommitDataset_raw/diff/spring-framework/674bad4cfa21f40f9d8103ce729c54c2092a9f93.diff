[+++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java, + * <p>Note that even if, + * {@link org.springframework.jms.connection.JmsTransactionManager} used to, + * only provide fully synchronized Spring transactions based, + * on local JMS transactions, "sessionTransacted" offers now the same feature and, + * is the recommended option when transactions are not managed externally. In, + * other words, set the transaction manager only if you are using JTA , or, + * synchronizing transactions., +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java, + * <p>Note that even if, + * {@link org.springframework.jms.connection.JmsTransactionManager} used to, + * only provide fully synchronized Spring transactions based, + * on local JMS transactions, "sessionTransacted" offers now the same feature and, + * is the recommended option when transactions are not managed externally. In, + * other words, set the transaction manager only if you are using JTA , or, + * synchronizing transactions., +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java, +	 * {@link SessionAwareMessageListener} (e.g. sending a response message). This, +	 * allows for fully synchronized Spring transactions based on local JMS, +	 * transactions, similar to what, +	 * {@link org.springframework.jms.connection.JmsTransactionManager} provides. Check, +	 * {@link AbstractMessageListenerContainer}'s javadoc for, +	 * @see #setSessionTransacted(boolean), +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java, + * <p>Note that even if, + * {@link org.springframework.jms.connection.JmsTransactionManager} used to, + * only provide fully synchronized Spring transactions based, + * on local JMS transactions, "sessionTransacted" offers now the same feature and, + * is the recommended option when transactions are not managed externally. In, + * other words, set the transaction manager only if you are using JTA , or, + * synchronizing transactions., +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java, +	 * {@link SessionAwareMessageListener} (e.g. sending a response message). This, +	 * allows for fully synchronized Spring transactions based on local JMS, +	 * transactions, similar to what, +	 * {@link org.springframework.jms.connection.JmsTransactionManager} provides. Check, +	 * {@link AbstractMessageListenerContainer}'s javadoc for, +	 * @see #setSessionTransacted(boolean), +++ b/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java, +	 * <p>Some JavaEE servers only register their JMS resources with an ongoing XA, +	 * However, depending on how smart your JavaEE server is with respect to the caching, +	 * of transactional resource, consider switching this setting to at least, +	 * {@link #CACHE_CONNECTION} or {@link #CACHE_SESSION} even in conjunction with an, +	 * external transaction manager., +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java, + * <p>Note that even if, + * {@link org.springframework.jms.connection.JmsTransactionManager} used to, + * only provide fully synchronized Spring transactions based, + * on local JMS transactions, "sessionTransacted" offers now the same feature and, + * is the recommended option when transactions are not managed externally. In, + * other words, set the transaction manager only if you are using JTA , or, + * synchronizing transactions., +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java, +	 * {@link SessionAwareMessageListener} (e.g. sending a response message). This, +	 * allows for fully synchronized Spring transactions based on local JMS, +	 * transactions, similar to what, +	 * {@link org.springframework.jms.connection.JmsTransactionManager} provides. Check, +	 * {@link AbstractMessageListenerContainer}'s javadoc for, +	 * @see #setSessionTransacted(boolean), +++ b/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java, +	 * <p>Some JavaEE servers only register their JMS resources with an ongoing XA, +	 * However, depending on how smart your JavaEE server is with respect to the caching, +	 * of transactional resource, consider switching this setting to at least, +	 * {@link #CACHE_CONNECTION} or {@link #CACHE_SESSION} even in conjunction with an, +	 * external transaction manager., +++ b/spring-jms/src/main/java/org/springframework/jms/support/JmsAccessor.java, +	 * transaction) being present. This has the effect of a local JMS]