[+++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/context/PortletWebRequest.java, + * Copyright 2002-2010 the original author or authors., +import javax.portlet.filter.PortletRequestWrapper;, +import javax.portlet.filter.PortletResponseWrapper;, +	@SuppressWarnings("unchecked"), +	public <T> T getNativeRequest(Class<T> requiredType) {, +		if (requiredType != null) {, +			PortletRequest request = getRequest();, +			while (request != null) {, +				if (requiredType.isInstance(request)) {, +					return (T) request;, +				}, +				else if (request instanceof PortletRequestWrapper) {, +					request = ((PortletRequestWrapper) request).getRequest();, +				}, +				else {, +					request = null;, +				}, +			}, +		}, +		return null;, +	}, +, +	@SuppressWarnings("unchecked"), +	public <T> T getNativeResponse(Class<T> requiredType) {, +		if (requiredType != null) {, +			PortletResponse response = getResponse();, +			while (response != null) {, +				if (requiredType.isInstance(response)) {, +					return (T) response;, +				}, +				else if (response instanceof PortletResponseWrapper) {, +					response = ((PortletResponseWrapper) response).getResponse();, +				}, +				else {, +					response = null;, +				}, +			}, +		}, +		return null;, +	}, +, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/context/PortletWebRequest.java, + * Copyright 2002-2010 the original author or authors., +import javax.portlet.filter.PortletRequestWrapper;, +import javax.portlet.filter.PortletResponseWrapper;, +	@SuppressWarnings("unchecked"), +	public <T> T getNativeRequest(Class<T> requiredType) {, +		if (requiredType != null) {, +			PortletRequest request = getRequest();, +			while (request != null) {, +				if (requiredType.isInstance(request)) {, +					return (T) request;, +				}, +				else if (request instanceof PortletRequestWrapper) {, +					request = ((PortletRequestWrapper) request).getRequest();, +				}, +				else {, +					request = null;, +				}, +			}, +		}, +		return null;, +	}, +, +	@SuppressWarnings("unchecked"), +	public <T> T getNativeResponse(Class<T> requiredType) {, +		if (requiredType != null) {, +			PortletResponse response = getResponse();, +			while (response != null) {, +				if (requiredType.isInstance(response)) {, +					return (T) response;, +				}, +				else if (response instanceof PortletResponseWrapper) {, +					response = ((PortletResponseWrapper) response).getResponse();, +				}, +				else {, +					response = null;, +				}, +			}, +		}, +		return null;, +	}, +, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, + * Copyright 2002-2010 the original author or authors., +					webRequest.getNativeRequest(PortletRequest.class), target, objectName);, +			portletBinder.bind(webRequest.getNativeRequest(PortletRequest.class));, +			PortletRequest portletRequest = webRequest.getNativeRequest(PortletRequest.class);, +			PortletRequest request = webRequest.getNativeRequest(PortletRequest.class);, +			PortletResponse response = webRequest.getNativeResponse(PortletResponse.class);, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/context/PortletWebRequest.java, + * Copyright 2002-2010 the original author or authors., +import javax.portlet.filter.PortletRequestWrapper;, +import javax.portlet.filter.PortletResponseWrapper;, +	@SuppressWarnings("unchecked"), +	public <T> T getNativeRequest(Class<T> requiredType) {, +		if (requiredType != null) {, +			PortletRequest request = getRequest();, +			while (request != null) {]