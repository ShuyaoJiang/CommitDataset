[+++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriComponents.java, +	public UriComponents expand(Map<String, ?> uriVariables) {, +		Assert.notNull(uriVariables, "'uriVariables' must not be null");, +		return expandInternal(new MapTemplateVariables(uriVariables));, +    static enum Type {, +	 * Represents a collection of PathComponents., +	 */, +	final static class PathComponentComposite implements PathComponent {, +, +		private final List<PathComponent> pathComponents;, +, +		PathComponentComposite(List<PathComponent> pathComponents) {, +			this.pathComponents = pathComponents;, +		}, +, +		public String getPath() {, +			StringBuilder pathBuilder = new StringBuilder();, +			for (PathComponent pathComponent : pathComponents) {, +				pathBuilder.append(pathComponent.getPath());, +			}, +			return pathBuilder.toString();, +		}, +, +		public List<String> getPathSegments() {, +			List<String> result = new ArrayList<String>();, +			for (PathComponent pathComponent : pathComponents) {, +				result.addAll(pathComponent.getPathSegments());, +			}, +			return result;, +		}, +, +		public PathComponent encode(String encoding) throws UnsupportedEncodingException {, +			List<PathComponent> encodedComponents = new ArrayList<PathComponent>(pathComponents.size());, +			for (PathComponent pathComponent : pathComponents) {, +				encodedComponents.add(pathComponent.encode(encoding));, +			}, +			return new PathComponentComposite(encodedComponents);, +		}, +, +		public PathComponent expand(UriTemplateVariables uriVariables) {, +			List<PathComponent> expandedComponents = new ArrayList<PathComponent>(pathComponents.size());, +			for (PathComponent pathComponent : pathComponents) {, +				expandedComponents.add(pathComponent.expand(uriVariables));, +			}, +			return new PathComponentComposite(expandedComponents);, +		}, +	}, +, +	, +, +	/**, +++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriComponents.java, +	public UriComponents expand(Map<String, ?> uriVariables) {, +		Assert.notNull(uriVariables, "'uriVariables' must not be null");, +		return expandInternal(new MapTemplateVariables(uriVariables));, +    static enum Type {, +	 * Represents a collection of PathComponents., +	 */, +	final static class PathComponentComposite implements PathComponent {, +, +		private final List<PathComponent> pathComponents;, +, +		PathComponentComposite(List<PathComponent> pathComponents) {, +			this.pathComponents = pathComponents;, +		}, +, +		public String getPath() {, +			StringBuilder pathBuilder = new StringBuilder();, +			for (PathComponent pathComponent : pathComponents) {, +				pathBuilder.append(pathComponent.getPath());, +			}, +			return pathBuilder.toString();, +		}, +, +		public List<String> getPathSegments() {, +			List<String> result = new ArrayList<String>();, +			for (PathComponent pathComponent : pathComponents) {, +				result.addAll(pathComponent.getPathSegments());, +			}, +			return result;, +		}, +, +		public PathComponent encode(String encoding) throws UnsupportedEncodingException {, +			List<PathComponent> encodedComponents = new ArrayList<PathComponent>(pathComponents.size());, +			for (PathComponent pathComponent : pathComponents) {, +				encodedComponents.add(pathComponent.encode(encoding));, +			}, +			return new PathComponentComposite(encodedComponents);, +		}, +, +		public PathComponent expand(UriTemplateVariables uriVariables) {, +			List<PathComponent> expandedComponents = new ArrayList<PathComponent>(pathComponents.size());, +			for (PathComponent pathComponent : pathComponents) {, +				expandedComponents.add(pathComponent.expand(uriVariables));, +			}, +			return new PathComponentComposite(expandedComponents);, +		}, +	}, +, +	]