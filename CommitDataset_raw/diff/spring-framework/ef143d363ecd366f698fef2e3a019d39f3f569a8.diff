[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +				logger.debug(format("Could not create new PropertyDescriptor for readMethod [%s] writeMethod [%s] " +, +				logger.debug(format("Could not add write method [%s] for property [%s]. Reason: %s",, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +				logger.debug(format("Could not create new PropertyDescriptor for readMethod [%s] writeMethod [%s] " +, +				logger.debug(format("Could not add write method [%s] for property [%s]. Reason: %s",, +++ b/org.springframework.beans/src/test/java/org/springframework/beans/ExtendedBeanInfoTests.java, +	@Test, +	public void cornerSpr8949() throws IntrospectionException {, +		class A {, +			@SuppressWarnings("unused"), +			public boolean isTargetMethod() {, +				return false;, +			}, +		}, +, +		class B extends A {, +			@Override, +			public boolean isTargetMethod() {, +				return false;, +			}, +		}, +, +		BeanInfo bi = Introspector.getBeanInfo(B.class);, +, +		/* first, demonstrate the 'problem':, +		for (PropertyDescriptor pd : bi.getPropertyDescriptors()) {, +		// and now demonstrate that we've indeed fixed the problem, +	static class X {, +	static class Y extends X {]