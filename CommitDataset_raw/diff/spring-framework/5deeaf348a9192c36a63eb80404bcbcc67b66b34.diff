[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractAliasAwareAnnotationAttributeExtractor.java, + * @param <S> the type of source supported by this extractor, +abstract class AbstractAliasAwareAnnotationAttributeExtractor<S> implements AnnotationAttributeExtractor<S> {, +	private final S source;, +			AnnotatedElement annotatedElement, S source) {, +	public final S getSource() {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractAliasAwareAnnotationAttributeExtractor.java, + * @param <S> the type of source supported by this extractor, +abstract class AbstractAliasAwareAnnotationAttributeExtractor<S> implements AnnotationAttributeExtractor<S> {, +	private final S source;, +			AnnotatedElement annotatedElement, S source) {, +	public final S getSource() {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributeExtractor.java, + * @param <S> the type of source supported by this extractor, +interface AnnotationAttributeExtractor<S> {, +	S getSource();, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractAliasAwareAnnotationAttributeExtractor.java, + * @param <S> the type of source supported by this extractor, +abstract class AbstractAliasAwareAnnotationAttributeExtractor<S> implements AnnotationAttributeExtractor<S> {, +	private final S source;, +			AnnotatedElement annotatedElement, S source) {, +	public final S getSource() {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributeExtractor.java, + * @param <S> the type of source supported by this extractor, +interface AnnotationAttributeExtractor<S> {, +	S getSource();, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +		DefaultAnnotationAttributeExtractor attributeExtractor =, +		MapAnnotationAttributeExtractor attributeExtractor =, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractAliasAwareAnnotationAttributeExtractor.java, + * @param <S> the type of source supported by this extractor, +abstract class AbstractAliasAwareAnnotationAttributeExtractor<S> implements AnnotationAttributeExtractor<S> {, +	private final S source;, +			AnnotatedElement annotatedElement, S source) {, +	public final S getSource() {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributeExtractor.java, + * @param <S> the type of source supported by this extractor, +interface AnnotationAttributeExtractor<S> {, +	S getSource();, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +		DefaultAnnotationAttributeExtractor attributeExtractor =, +		MapAnnotationAttributeExtractor attributeExtractor =, +++ b/spring-core/src/main/java/org/springframework/core/annotation/DefaultAnnotationAttributeExtractor.java, +class DefaultAnnotationAttributeExtractor extends AbstractAliasAwareAnnotationAttributeExtractor<Annotation> {, +		Method attributeMethod = ReflectionUtils.findMethod(getAnnotationType(), attributeName);, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractAliasAwareAnnotationAttributeExtractor.java, + * @param <S> the type of source supported by this extractor, +abstract class AbstractAliasAwareAnnotationAttributeExtractor<S> implements AnnotationAttributeExtractor<S> {, +	private final S source;, +			AnnotatedElement annotatedElement, S source) {, +	public final S getSource() {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributeExtractor.java, + * @param <S> the type of source supported by this extractor, +interface AnnotationAttributeExtractor<S> {, +	S getSource();, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +		DefaultAnnotationAttributeExtractor attributeExtractor =, +		MapAnnotationAttributeExtractor attributeExtractor =, +++ b/spring-core/src/main/java/org/springframework/core/annotation/DefaultAnnotationAttributeExtractor.java, +class DefaultAnnotationAttributeExtractor extends AbstractAliasAwareAnnotationAttributeExtractor<Annotation> {, +		Method attributeMethod = ReflectionUtils.findMethod(getAnnotationType(), attributeName);, +++ b/spring-core/src/main/java/org/springframework/core/annotation/MapAnnotationAttributeExtractor.java, +class MapAnnotationAttributeExtractor extends AbstractAliasAwareAnnotationAttributeExtractor<Map<String, Object>> {, +		return getRawAttributeValue(attributeMethod.getName());, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractAliasAwareAnnotationAttributeExtractor.java, + * @param <S> the type of source supported by this extractor, +abstract class AbstractAliasAwareAnnotationAttributeExtractor<S> implements AnnotationAttributeExtractor<S> {, +	private final S source;, +			AnnotatedElement annotatedElement, S source) {, +	public final S getSource() {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributeExtractor.java, + * @param <S> the type of source supported by this extractor, +interface AnnotationAttributeExtractor<S> {, +	S getSource();, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +		DefaultAnnotationAttributeExtractor attributeExtractor =, +		MapAnnotationAttributeExtractor attributeExtractor =, +++ b/spring-core/src/main/java/org/springframework/core/annotation/DefaultAnnotationAttributeExtractor.java, +class DefaultAnnotationAttributeExtractor extends AbstractAliasAwareAnnotationAttributeExtractor<Annotation> {, +		Method attributeMethod = ReflectionUtils.findMethod(getAnnotationType(), attributeName);, +++ b/spring-core/src/main/java/org/springframework/core/annotation/MapAnnotationAttributeExtractor.java, +class MapAnnotationAttributeExtractor extends AbstractAliasAwareAnnotationAttributeExtractor<Map<String, Object>> {, +		return getRawAttributeValue(attributeMethod.getName());, +++ b/spring-core/src/main/java/org/springframework/core/annotation/SynthesizedAnnotationInvocationHandler.java, +	private final AnnotationAttributeExtractor<?> attributeExtractor;, +	SynthesizedAnnotationInvocationHandler(AnnotationAttributeExtractor<?> attributeExtractor) {]