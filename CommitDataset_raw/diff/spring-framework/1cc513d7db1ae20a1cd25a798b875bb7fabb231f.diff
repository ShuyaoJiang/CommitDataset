[+++ b/spring-context-support/src/main/java/org/springframework/mail/SimpleMailMessage.java, + * Copyright 2002-2018 the original author or authors., +		this.to = copyOrNull(original.getTo());, +		this.cc = copyOrNull(original.getCc());, +		this.bcc = copyOrNull(original.getBcc());, +		Assert.notNull(target, "'target' MailMessage must not be null");, +			target.setTo(copy(getTo()));, +			target.setCc(copy(getCc()));, +			target.setBcc(copy(getBcc()));, +	public boolean equals(Object other) {, +		if (this == other) {, +			return true;, +		}, +		if (!(other instanceof SimpleMailMessage)) {, +			return false;, +		}, +		SimpleMailMessage otherMessage = (SimpleMailMessage) other;, +		return (ObjectUtils.nullSafeEquals(this.from, otherMessage.from) &&, +				ObjectUtils.nullSafeEquals(this.replyTo, otherMessage.replyTo) &&, +				ObjectUtils.nullSafeEquals(this.to, otherMessage.to) &&, +				ObjectUtils.nullSafeEquals(this.cc, otherMessage.cc) &&, +				ObjectUtils.nullSafeEquals(this.bcc, otherMessage.bcc) &&, +				ObjectUtils.nullSafeEquals(this.sentDate, otherMessage.sentDate) &&, +				ObjectUtils.nullSafeEquals(this.subject, otherMessage.subject) &&, +				ObjectUtils.nullSafeEquals(this.text, otherMessage.text));, +	}, +, +	@Override, +	public int hashCode() {, +		int hashCode = ObjectUtils.nullSafeHashCode(this.from);, +		hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.replyTo);, +		hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.to);, +		hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.cc);, +		hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.bcc);, +		hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.sentDate);, +		hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.subject);, +		return hashCode;, +	}, +, +	@Override, +	@Nullable, +	private static String[] copyOrNull(@Nullable String[] state) {, +		if (state == null) {, +			return null;, +		return copy(state);]