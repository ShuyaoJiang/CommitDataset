[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/AbstractNameValueCondition.java, +	public int getWeight() {, +		return 1;, +	}, +, +	@Override, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/AbstractNameValueCondition.java, +	public int getWeight() {, +		return 1;, +	}, +, +	@Override, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/AbstractRequestCondition.java, +	public abstract int getWeight();, +		return other.getWeight() - this.getWeight();, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/AbstractNameValueCondition.java, +	public int getWeight() {, +		return 1;, +	}, +, +	@Override, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/AbstractRequestCondition.java, +	public abstract int getWeight();, +		return other.getWeight() - this.getWeight();, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/ConsumesRequestCondition.java, +	@Override, +	public int getWeight() {, +		return 1;, +	}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/AbstractNameValueCondition.java, +	public int getWeight() {, +		return 1;, +	}, +, +	@Override, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/AbstractRequestCondition.java, +	public abstract int getWeight();, +		return other.getWeight() - this.getWeight();, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/ConsumesRequestCondition.java, +	@Override, +	public int getWeight() {, +		return 1;, +	}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/RequestConditionComposite.java, +import org.springframework.util.Assert;, +, +		Assert.notEmpty(conditions, "'conditions' must not be empty");, +	@Override, +	public int getWeight() {, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/AbstractNameValueCondition.java, +	public int getWeight() {, +		return 1;, +	}, +, +	@Override, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/AbstractRequestCondition.java, +	public abstract int getWeight();, +		return other.getWeight() - this.getWeight();, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/ConsumesRequestCondition.java, +	@Override, +	public int getWeight() {, +		return 1;, +	}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/RequestConditionComposite.java, +import org.springframework.util.Assert;, +, +		Assert.notEmpty(conditions, "'conditions' must not be empty");, +	@Override, +	public int getWeight() {, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/condition/RequestConditionFactory.java, +	private static final RequestCondition TRUE_CONDITION = new AbstractRequestCondition() {, +		public int getWeight() {, +			return 0;, +		}, +, +		@Override, +	private static final RequestCondition FALSE_CONDITION = new AbstractRequestCondition() {, +		public int getWeight() {, +			return 0;, +		}, +		, +, +		@Override]