[+++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.java, + * Copyright 2002-2015 the original author or authors., + * @author Juergen Hoeller, +	 * Specify the set of handlers that this exception resolver should apply to., +	 * <p>The exception mappings and the default error view will only apply to the specified handlers., +	 * <p>If no handlers or handler classes are set, the exception mappings and the default error, +	 * view will apply to all handlers. This means that a specified default error view will be used, +	 * as a fallback for all exceptions; any further HandlerExceptionResolvers in the chain will be, +	 * ignored in this case., +	 * <p>The exception mappings and the default error view will only apply to handlers of the, +	 * specified types; the specified types may be interfaces or superclasses of handlers as well., +	 * <p>If no handlers or handler classes are set, the exception mappings and the default error, +	 * view will apply to all handlers. This means that a specified default error view will be used, +	 * as a fallback for all exceptions; any further HandlerExceptionResolvers in the chain will be, +	 * ignored in this case., +	public void setMappedHandlerClasses(Class<?>... mappedHandlerClasses) {, +	 * Set the log category for warn logging. The name will be passed to the underlying logger, +	 * implementation through Commons Logging, getting interpreted as a log category according, +	 * to the logger's configuration., +	 * <p>Default is no warn logging. Specify this setting to activate warn logging into a specific, +	 * category. Alternatively, override the {@link #logException} method for custom logging., +	 * <p>Calls {@link #buildLogMessage} in order to determine the concrete message to log., +			this.warnLogger.warn(buildLogMessage(ex, request));, +	 * Build a log message for the given exception, occurred during processing the given request., +		return "Handler execution resulted in exception: " + ex;, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.java, + * Copyright 2002-2015 the original author or authors., + * @author Juergen Hoeller, +	 * Specify the set of handlers that this exception resolver should apply to., +	 * <p>The exception mappings and the default error view will only apply to the specified handlers., +	 * <p>If no handlers or handler classes are set, the exception mappings and the default error, +	 * view will apply to all handlers. This means that a specified default error view will be used, +	 * as a fallback for all exceptions; any further HandlerExceptionResolvers in the chain will be, +	 * ignored in this case., +	 * <p>The exception mappings and the default error view will only apply to handlers of the, +	 * specified types; the specified types may be interfaces or superclasses of handlers as well., +	 * <p>If no handlers or handler classes are set, the exception mappings and the default error, +	 * view will apply to all handlers. This means that a specified default error view will be used, +	 * as a fallback for all exceptions; any further HandlerExceptionResolvers in the chain will be, +	 * ignored in this case., +	public void setMappedHandlerClasses(Class<?>... mappedHandlerClasses) {, +	 * Set the log category for warn logging. The name will be passed to the underlying logger, +	 * implementation through Commons Logging, getting interpreted as a log category according, +	 * to the logger's configuration., +	 * <p>Default is no warn logging. Specify this setting to activate warn logging into a specific, +	 * category. Alternatively, override the {@link #logException} method for custom logging., +	 * <p>Calls {@link #buildLogMessage} in order to determine the concrete message to log., +			this.warnLogger.warn(buildLogMessage(ex, request));, +	 * Build a log message for the given exception, occurred during processing the given request., +		return "Handler execution resulted in exception: " + ex;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.java, +	public void setMappedHandlerClasses(Class<?>... mappedHandlerClasses) {, +, +]