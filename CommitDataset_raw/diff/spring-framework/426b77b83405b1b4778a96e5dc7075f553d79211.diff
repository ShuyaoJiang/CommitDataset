[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/UrlTag.java, +			else {, +				template = URL_TEMPLATE_DELIMITER_PREFIX + "/" + param.getName() + URL_TEMPLATE_DELIMITER_SUFFIX;, +				if (uri.contains(template)) {, +					usedParams.add(param.getName());, +					try {, +						uri = uri.replace(template, UriUtils.encodePathSegment(param.getValue(), encoding));, +					}, +					catch (UnsupportedEncodingException ex) {, +						throw new JspException(ex);, +					}, +				}, +			}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/UrlTag.java, +			else {, +				template = URL_TEMPLATE_DELIMITER_PREFIX + "/" + param.getName() + URL_TEMPLATE_DELIMITER_SUFFIX;, +				if (uri.contains(template)) {, +					usedParams.add(param.getName());, +					try {, +						uri = uri.replace(template, UriUtils.encodePathSegment(param.getValue(), encoding));, +					}, +					catch (UnsupportedEncodingException ex) {, +						throw new JspException(ex);, +					}, +				}, +			}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/tags/UrlTagTests.java, +	// SPR-11401, +, +	public void testReplaceUriTemplateParamsTemplateWithPathSegment(), +			throws JspException {, +		List<Param> params = new LinkedList<Param>();, +		Set<String> usedParams = new HashSet<String>();, +, +		Param param = new Param();, +		param.setName("name");, +		param.setValue("my/Id");, +		params.add(param);, +, +		String uri = tag.replaceUriTemplateParams("url/{/name}", params, usedParams);, +, +		assertEquals("url/my%2FId", uri);, +		assertEquals(1, usedParams.size());, +		assertTrue(usedParams.contains("name"));, +	}, +, +	public void testReplaceUriTemplateParamsTemplateWithPath(), +			throws JspException {, +		List<Param> params = new LinkedList<Param>();, +		Set<String> usedParams = new HashSet<String>();, +, +		Param param = new Param();, +		param.setName("name");, +		param.setValue("my/Id");, +		params.add(param);, +, +		String uri = tag.replaceUriTemplateParams("url/{name}", params, usedParams);, +, +		assertEquals("url/my/Id", uri);, +		assertEquals(1, usedParams.size());, +		assertTrue(usedParams.contains("name"));, +	}, +]