[+++ b/spring-web/src/main/java/org/springframework/web/filter/ForwardedHeaderFilter.java, +, + * from "Forwarded" or "X-Forwarded-*" headers. In effect the wrapped request, +		FORWARDED_HEADER_NAMES = new HashSet<String>(5);, +		FORWARDED_HEADER_NAMES.add("X-Forwarded-Prefix");, +, +			this.contextPath = initContextPath(request, pathHelper);, +			this.requestUri = initRequestUri(request, pathHelper);, +, +		private static String initContextPath(HttpServletRequest request, ContextPathHelper pathHelper) {, +		private static String initRequestUri(HttpServletRequest request, ContextPathHelper pathHelper) {, +		private static String prependForwardedPrefix(HttpServletRequest request, String value) {, +			String header = request.getHeader("X-Forwarded-Prefix");, +			if (StringUtils.hasText(header)) {, +				while (header.endsWith("/")) {, +					header = header.substring(0, header.length() - 1);, +				}, +				value = header + value;, +			}, +			return value;, +		}, +, +++ b/spring-web/src/main/java/org/springframework/web/filter/ForwardedHeaderFilter.java, +, + * from "Forwarded" or "X-Forwarded-*" headers. In effect the wrapped request, +		FORWARDED_HEADER_NAMES = new HashSet<String>(5);, +		FORWARDED_HEADER_NAMES.add("X-Forwarded-Prefix");, +, +			this.contextPath = initContextPath(request, pathHelper);, +			this.requestUri = initRequestUri(request, pathHelper);, +, +		private static String initContextPath(HttpServletRequest request, ContextPathHelper pathHelper) {, +		private static String initRequestUri(HttpServletRequest request, ContextPathHelper pathHelper) {, +		private static String prependForwardedPrefix(HttpServletRequest request, String value) {, +			String header = request.getHeader("X-Forwarded-Prefix");, +			if (StringUtils.hasText(header)) {, +				while (header.endsWith("/")) {, +					header = header.substring(0, header.length() - 1);, +				}, +				value = header + value;, +			}, +			return value;, +		}, +, +++ b/spring-web/src/test/java/org/springframework/web/filter/ForwardedHeaderFilterTests.java, + * @author Eddú Meléndez, +		assertEquals("http://localhost/prefix/mvc-showcase", actual.getRequestURL().toString());, +		assertEquals("http://localhost/prefix/mvc-showcase", actual.getRequestURL().toString());]