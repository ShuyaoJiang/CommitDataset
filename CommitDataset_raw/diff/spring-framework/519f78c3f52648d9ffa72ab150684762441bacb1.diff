[+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +						this.importStack.registerImport(importingClassMetadata, candidate.getMetadata().getClassName());, +		AnnotationMetadata getImportingClassFor(String importedClass);, +		private final Map<String, AnnotationMetadata> imports = new HashMap<String, AnnotationMetadata>();, +		public void registerImport(AnnotationMetadata importingClass, String importedClass) {, +		public AnnotationMetadata getImportingClassFor(String importedClass) {, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +						this.importStack.registerImport(importingClassMetadata, candidate.getMetadata().getClassName());, +		AnnotationMetadata getImportingClassFor(String importedClass);, +		private final Map<String, AnnotationMetadata> imports = new HashMap<String, AnnotationMetadata>();, +		public void registerImport(AnnotationMetadata importingClass, String importedClass) {, +		public AnnotationMetadata getImportingClassFor(String importedClass) {, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java, +	private static class ImportAwareBeanPostProcessor implements BeanPostProcessor, BeanFactoryAware, PriorityOrdered {, +		public int getOrder() {, +			return Ordered.HIGHEST_PRECEDENCE;, +		}, +, +		@Override, +				AnnotationMetadata importingClass = importRegistry.getImportingClassFor(bean.getClass().getSuperclass().getName());, +					((ImportAware) bean).setImportMetadata(importingClass);]