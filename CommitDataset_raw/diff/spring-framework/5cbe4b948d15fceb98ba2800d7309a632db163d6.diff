[+++ b/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java, +	private static final String DEFAULT_CACHE_AWARE_CONTEXT_LOADER_DELEGATE_CLASS_NAME = "org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate";, +	 * that uses a {@link org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate}., +++ b/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java, +	private static final String DEFAULT_CACHE_AWARE_CONTEXT_LOADER_DELEGATE_CLASS_NAME = "org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate";, +	 * that uses a {@link org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate}., +++ b/spring-test/src/main/java/org/springframework/test/context/CacheAwareContextLoaderDelegate.java, + * contexts, interacting transparently with a, + * {@link org.springframework.test.context.cache.ContextCache ContextCache}, + * behind the scenes., +	 * {@link org.springframework.test.context.cache.ContextCache#logStatistics()}., +++ b/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java, +	private static final String DEFAULT_CACHE_AWARE_CONTEXT_LOADER_DELEGATE_CLASS_NAME = "org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate";, +	 * that uses a {@link org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate}., +++ b/spring-test/src/main/java/org/springframework/test/context/CacheAwareContextLoaderDelegate.java, + * contexts, interacting transparently with a, + * {@link org.springframework.test.context.cache.ContextCache ContextCache}, + * behind the scenes., +	 * {@link org.springframework.test.context.cache.ContextCache#logStatistics()}., +++ /dev/null, +++ b/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java, +	private static final String DEFAULT_CACHE_AWARE_CONTEXT_LOADER_DELEGATE_CLASS_NAME = "org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate";, +	 * that uses a {@link org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate}., +++ b/spring-test/src/main/java/org/springframework/test/context/CacheAwareContextLoaderDelegate.java, + * contexts, interacting transparently with a, + * {@link org.springframework.test.context.cache.ContextCache ContextCache}, + * behind the scenes., +	 * {@link org.springframework.test.context.cache.ContextCache#logStatistics()}., +++ /dev/null, +++ b/spring-test/src/main/java/org/springframework/test/context/cache/ContextCache.java, +/*, + * Copyright 2002-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.test.context.cache;, +, +import org.springframework.context.ApplicationContext;, +import org.springframework.test.annotation.DirtiesContext.HierarchyMode;, +import org.springframework.test.context.MergedContextConfiguration;, +, +/**, + * {@code ContextCache} defines the SPI for caching Spring, + * {@link ApplicationContext ApplicationContexts} within the <em>Spring, + * TestContext Framework</em>., + *, + * <p>A {@code ContextCache} maintains a cache of {@code ApplicationContexts}, + * keyed by {@link MergedContextConfiguration} instances., + *, + * <h3>Rationale</h3>, + * <p>Context caching can have significant performance benefits if context, + * initialization is complex. Although the initialization of a Spring context, + * itself is typically very quick, some beans in a context &mdash; for example,, + * an embedded database or a {@code LocalContainerEntityManagerFactoryBean} for, + * working with JPA &mdash; may take several seconds to initialize. Hence it, + * often makes sense to perform that initialization only once per test suite or, + * JVM process., + *, + * @author Sam Brannen, + * @author Juergen Hoeller, + * @since 4.2, + */, +public interface ContextCache {, +, +	/**, +	 * The name of the logging category used for reporting {@code ContextCache}, +	 * statistics., +	 */, +	public static final String CONTEXT_CACHE_LOGGING_CATEGORY = "org.springframework.test.context.cache";, +, +, +	/**, +	 * Determine whether there is a cached context for the given key., +	 * @param key the context key (never {@code null}), +	 * @return {@code true} if the cache contains a context with the given key, +	 */, +	boolean contains(MergedContextConfiguration key);, +, +	/**, +	 * Obtain a cached {@code ApplicationContext} for the given key., +	 * <p>The {@link #getHitCount() hit} and {@link #getMissCount() miss} counts, +	 * must be updated accordingly., +	 * @param key the context key (never {@code null}), +	 * @return the corresponding {@code ApplicationContext} instance, or {@code null}, +	 * if not found in the cache, +	 * @see #remove, +	 */, +	ApplicationContext get(MergedContextConfiguration key);, +]