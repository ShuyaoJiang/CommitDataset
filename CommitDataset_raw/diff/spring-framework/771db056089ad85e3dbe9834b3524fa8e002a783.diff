[+++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractFileResolvingResource.java, +	public long contentLength() throws IOException {, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractFileResolvingResource.java, +	public long contentLength() throws IOException {, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractResource.java, +	public long contentLength() throws IOException {, +		return getFile().length();, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractFileResolvingResource.java, +	public long contentLength() throws IOException {, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractResource.java, +	public long contentLength() throws IOException {, +		return getFile().length();, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/Resource.java, +	long contentLength() throws IOException;, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractFileResolvingResource.java, +	public long contentLength() throws IOException {, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractResource.java, +	public long contentLength() throws IOException {, +		return getFile().length();, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/Resource.java, +	long contentLength() throws IOException;, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +		long length = resource.contentLength();, +		if (length > Integer.MAX_VALUE) {, +			throw new IOException("Resource content too long (beyond Integer.MAX_VALUE): " + resource);, +		}, +		response.setContentLength((int) length);]