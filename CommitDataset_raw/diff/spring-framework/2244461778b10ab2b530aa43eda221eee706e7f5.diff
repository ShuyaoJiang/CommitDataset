[+++ b/spring-test/src/main/java/org/springframework/test/context/ContextConfigurationAttributes.java, + * Copyright 2002-2016 the original author or authors., + * @author Phillip Webb, +	private static final String[] EMPTY_LOCATIONS = new String[0];, +, +	private static final Class<?>[] EMPTY_CLASSES = new Class<?>[0];, +, +	 * Construct a new {@link ContextConfigurationAttributes} instance with default, +	 * values., +	 * @param declaringClass the test class that declared {@code @ContextConfiguration},, +	 * either explicitly or implicitly, +	 * @since 4.3, +	 */, +	@SuppressWarnings("unchecked"), +	public ContextConfigurationAttributes(Class<?> declaringClass) {, +		this(declaringClass, EMPTY_LOCATIONS, EMPTY_CLASSES, false, (Class[]) EMPTY_CLASSES, true, ContextLoader.class);, +	}, +, +	/**, +	 * {@link ContextConfiguration @ContextConfiguration} annotation, either explicitly, +	 * or implicitly., +++ b/spring-test/src/main/java/org/springframework/test/context/ContextConfigurationAttributes.java, + * Copyright 2002-2016 the original author or authors., + * @author Phillip Webb, +	private static final String[] EMPTY_LOCATIONS = new String[0];, +, +	private static final Class<?>[] EMPTY_CLASSES = new Class<?>[0];, +, +	 * Construct a new {@link ContextConfigurationAttributes} instance with default, +	 * values., +	 * @param declaringClass the test class that declared {@code @ContextConfiguration},, +	 * either explicitly or implicitly, +	 * @since 4.3, +	 */, +	@SuppressWarnings("unchecked"), +	public ContextConfigurationAttributes(Class<?> declaringClass) {, +		this(declaringClass, EMPTY_LOCATIONS, EMPTY_CLASSES, false, (Class[]) EMPTY_CLASSES, true, ContextLoader.class);, +	}, +, +	/**, +	 * {@link ContextConfiguration @ContextConfiguration} annotation, either explicitly, +	 * or implicitly., +++ b/spring-test/src/main/java/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-test/src/main/java/org/springframework/test/context/ContextConfigurationAttributes.java, + * Copyright 2002-2016 the original author or authors., + * @author Phillip Webb, +	private static final String[] EMPTY_LOCATIONS = new String[0];, +, +	private static final Class<?>[] EMPTY_CLASSES = new Class<?>[0];, +, +	 * Construct a new {@link ContextConfigurationAttributes} instance with default, +	 * values., +	 * @param declaringClass the test class that declared {@code @ContextConfiguration},, +	 * either explicitly or implicitly, +	 * @since 4.3, +	 */, +	@SuppressWarnings("unchecked"), +	public ContextConfigurationAttributes(Class<?> declaringClass) {, +		this(declaringClass, EMPTY_LOCATIONS, EMPTY_CLASSES, false, (Class[]) EMPTY_CLASSES, true, ContextLoader.class);, +	}, +, +	/**, +	 * {@link ContextConfiguration @ContextConfiguration} annotation, either explicitly, +	 * or implicitly., +++ b/spring-test/src/main/java/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java, + * Copyright 2002-2016 the original author or authors., +import java.util.Collection;, + * @author Phillip Webb, +			return buildDefaultMergedContextConfiguration(testClass, cacheAwareContextLoaderDelegate);, +					cacheAwareContextLoaderDelegate, true);, +				cacheAwareContextLoaderDelegate, true);, +	 * @since 4.3, +	 */, +	private MergedContextConfiguration buildDefaultMergedContextConfiguration(Class<?> testClass,, +			CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) {, +, +		List<ContextConfigurationAttributes> defaultConfigAttributesList, +			= Collections.singletonList(new ContextConfigurationAttributes(testClass));, +, +		ContextLoader contextLoader = resolveContextLoader(testClass, defaultConfigAttributesList);, +		if (logger.isInfoEnabled()) {, +			logger.info(String.format(, +				"Neither @ContextConfiguration nor @ContextHierarchy found for test class [%s], using %s",, +				testClass.getName(), contextLoader.getClass().getSimpleName()));, +		}, +		return buildMergedContextConfiguration(testClass, defaultConfigAttributesList, null,, +			cacheAwareContextLoaderDelegate, false);, +	}, +, +	/**, +	 * @param requireLocationsClassesOrInitializers whether locations, classes, or, +	 * initializers are required; typically {@code true} but may be set to {@code false}, +	 * if the configured loader supports empty configuration, +			CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate,, +			boolean requireLocationsClassesOrInitializers) {, +, +		Assert.notEmpty(configAttributesList, "ContextConfigurationAttributes list must not be null or empty");]