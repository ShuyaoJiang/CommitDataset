[+++ b/spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java, +	 * Obtain the annotation of the specified {@code annotationType} that is on this type descriptor., +	 * <p>As of Spring Framework 4.2, this method supports arbitrary levels of meta-annotations., +			if (annotation.annotationType() == annotationType) {, +			if (!other.hasAnnotation(ann.annotationType())) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java, +	 * Obtain the annotation of the specified {@code annotationType} that is on this type descriptor., +	 * <p>As of Spring Framework 4.2, this method supports arbitrary levels of meta-annotations., +			if (annotation.annotationType() == annotationType) {, +			if (!other.hasAnnotation(ann.annotationType())) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/ObjectToObjectConverter.java, +	private static boolean hasToMethodOrFactoryMethodOrConstructor(Class<?> targetClass, Class<?> sourceClass) {, +		return (getToMethod(targetClass, sourceClass) != null);, +		return (getFactoryMethod(targetClass, sourceClass) != null);, +		return (getFactoryConstructor(targetClass, sourceClass) != null);]