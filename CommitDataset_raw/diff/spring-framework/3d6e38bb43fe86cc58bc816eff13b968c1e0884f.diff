[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistry.java, +	 * Provide the TaskScheduler to use for SockJS endpoints for which a task, +	 * scheduler has not been explicitly registered. This method must be called, +	 * prior to {@link #getHandlerMapping()}., +				.forEach(registration -> registration.setTaskScheduler(scheduler));, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistry.java, +	 * Provide the TaskScheduler to use for SockJS endpoints for which a task, +	 * scheduler has not been explicitly registered. This method must be called, +	 * prior to {@link #getHandlerMapping()}., +				.forEach(registration -> registration.setTaskScheduler(scheduler));, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebSocketConfigurationSupport.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.util.Assert;, +			TaskScheduler scheduler = defaultSockJsTaskScheduler();, +			Assert.notNull(scheduler, "Expected default TaskScheduler bean");, +			registry.setTaskScheduler(scheduler);, +	 * The default TaskScheduler to use if none is registered explicitly via, +	 * {@link SockJsServiceRegistration#setTaskScheduler}:, +	 *     registry.addHandler(myHandler(), "/echo"), +	 *             .withSockJS(), +	 *             .setTaskScheduler(myScheduler());, +	@Nullable, +		if (initHandlerRegistry().requiresTaskScheduler()) {]