[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerResult.java, +import org.springframework.web.reactive.result.method.BindingContext;, + * Represent the result of the invocation of a handler or a handler method., +	private final Object returnValue;, +	private final BindingContext bindingContext;, +	 * @param context the binding context used for request handling, +	public HandlerResult(Object handler, Object returnValue, MethodParameter returnType,, +			BindingContext context) {, +, +		this.returnValue = returnValue;, +		this.bindingContext = (context != null ? context : new BindingContext());, +		return Optional.ofNullable(this.returnValue);, +	 * Return the BindingContext used for request handling., +	 */, +	public BindingContext getBindingContext() {, +		return this.bindingContext;, +	}, +, +	/**, +	 * Return the model used for request handling. This is a shortcut for, +	 * {@code getBindingContext().getModel()}., +		return this.bindingContext.getModel();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerResult.java, +import org.springframework.web.reactive.result.method.BindingContext;, + * Represent the result of the invocation of a handler or a handler method., +	private final Object returnValue;, +	private final BindingContext bindingContext;, +	 * @param context the binding context used for request handling, +	public HandlerResult(Object handler, Object returnValue, MethodParameter returnType,, +			BindingContext context) {, +, +		this.returnValue = returnValue;, +		this.bindingContext = (context != null ? context : new BindingContext());, +		return Optional.ofNullable(this.returnValue);, +	 * Return the BindingContext used for request handling., +	 */, +	public BindingContext getBindingContext() {, +		return this.bindingContext;, +	}, +, +	/**, +	 * Return the model used for request handling. This is a shortcut for, +	 * {@code getBindingContext().getModel()}., +		return this.bindingContext.getModel();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/InvocableHandlerMethod.java, +				HandlerResult result = new HandlerResult(this, value, getReturnType(), bindingContext);, +				return Mono.just(result);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerResult.java, +import org.springframework.web.reactive.result.method.BindingContext;, + * Represent the result of the invocation of a handler or a handler method., +	private final Object returnValue;, +	private final BindingContext bindingContext;, +	 * @param context the binding context used for request handling, +	public HandlerResult(Object handler, Object returnValue, MethodParameter returnType,, +			BindingContext context) {, +, +		this.returnValue = returnValue;, +		this.bindingContext = (context != null ? context : new BindingContext());, +		return Optional.ofNullable(this.returnValue);, +	 * Return the BindingContext used for request handling., +	 */, +	public BindingContext getBindingContext() {, +		return this.bindingContext;, +	}, +, +	/**, +	 * Return the model used for request handling. This is a shortcut for, +	 * {@code getBindingContext().getModel()}., +		return this.bindingContext.getModel();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/InvocableHandlerMethod.java, +				HandlerResult result = new HandlerResult(this, value, getReturnType(), bindingContext);, +				return Mono.just(result);, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandlerTests.java, +import org.springframework.http.server.reactive.ServerHttpRequest;, +		HandlerResult handlerResult = new HandlerResult(hm, null, hm.getReturnType());, +		handlerResult = new HandlerResult(hm, null, hm.getReturnType());, +		HandlerResult handlerResult = new HandlerResult(hm, null, hm.getReturnType());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerResult.java, +import org.springframework.web.reactive.result.method.BindingContext;, + * Represent the result of the invocation of a handler or a handler method., +	private final Object returnValue;, +	private final BindingContext bindingContext;, +	 * @param context the binding context used for request handling, +	public HandlerResult(Object handler, Object returnValue, MethodParameter returnType,, +			BindingContext context) {, +, +		this.returnValue = returnValue;, +		this.bindingContext = (context != null ? context : new BindingContext());, +		return Optional.ofNullable(this.returnValue);, +	 * Return the BindingContext used for request handling., +	 */, +	public BindingContext getBindingContext() {, +		return this.bindingContext;, +	}, +, +	/**, +	 * Return the model used for request handling. This is a shortcut for, +	 * {@code getBindingContext().getModel()}., +		return this.bindingContext.getModel();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/InvocableHandlerMethod.java]