[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java, +	private Locale defaultLocale;, +, +	/**, +	 * Configure a fixed default locale to fall back on if the request does not, +	 * have an "Accept-Language" header., +	 * <p>By default this is not set in which case when there is "Accept-Lanaguage", +	 * header, the default locale for the server is used as defined in, +	 * {@link HttpServletRequest#getLocale()}., +	 * @param defaultLocale the default locale to use, +	 * @since 4.3, +	 */, +	public void setDefaultLocale(Locale defaultLocale) {, +		this.defaultLocale = defaultLocale;, +	}, +, +	/**, +	 * The configured default locale., +	 */, +	public Locale getDefaultLocale() {, +		return this.defaultLocale;, +	}, +, +		if (getDefaultLocale() != null  && request.getHeader("Accept-Language") == null) {, +			return getDefaultLocale();, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java, +	private Locale defaultLocale;, +, +	/**, +	 * Configure a fixed default locale to fall back on if the request does not, +	 * have an "Accept-Language" header., +	 * <p>By default this is not set in which case when there is "Accept-Lanaguage", +	 * header, the default locale for the server is used as defined in, +	 * {@link HttpServletRequest#getLocale()}., +	 * @param defaultLocale the default locale to use, +	 * @since 4.3, +	 */, +	public void setDefaultLocale(Locale defaultLocale) {, +		this.defaultLocale = defaultLocale;, +	}, +, +	/**, +	 * The configured default locale., +	 */, +	public Locale getDefaultLocale() {, +		return this.defaultLocale;, +	}, +, +		if (getDefaultLocale() != null  && request.getHeader("Accept-Language") == null) {, +			return getDefaultLocale();, +		}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolverTests.java, +import static java.util.Locale.JAPANESE;, +	@Test, +	public void defaultLocale() throws Exception {, +		this.resolver.setDefaultLocale(JAPANESE);, +		MockHttpServletRequest request = new MockHttpServletRequest();, +		assertEquals(JAPANESE, this.resolver.resolveLocale(request));, +, +		request.addHeader("Accept-Language", US.toString());, +		request.setPreferredLocales(Collections.singletonList(US));, +		assertEquals(US, this.resolver.resolveLocale(request));, +	}, +]