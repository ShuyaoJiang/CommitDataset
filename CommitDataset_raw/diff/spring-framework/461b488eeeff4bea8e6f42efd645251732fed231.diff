[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, + * Implementation of the {@link org.springframework.web.servlet.HandlerAdapter} interface, + * that maps handler methods based on HTTP paths, HTTP methods and request parameters, + * expressed through the {@link RequestMapping} annotation., + * <p>Supports request parameter binding through the {@link RequestParam} annotation., + * Also supports the {@link ModelAttribute} annotation for exposing model attribute, + * values to the view, as well as {@link InitBinder} for binder initialization methods, + * and {@link SessionAttributes} for automatic session management of specific attributes., + * <p>This adapter can be customized through various bean properties., + * A common use case is to apply shared binder initialization logic through, + * a custom {@link #setWebBindingInitializer WebBindingInitializer}., + * @since 2.5, +	protected ServletRequestDataBinder createBinder(HttpServletRequest request, Object target, String objectName), +			throws Exception {, +			else if (returnValue instanceof HttpEntity) {, +			else if (returnValue instanceof ModelAndView) {, +, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, + * Implementation of the {@link org.springframework.web.servlet.HandlerAdapter} interface, + * that maps handler methods based on HTTP paths, HTTP methods and request parameters, + * expressed through the {@link RequestMapping} annotation., + * <p>Supports request parameter binding through the {@link RequestParam} annotation., + * Also supports the {@link ModelAttribute} annotation for exposing model attribute, + * values to the view, as well as {@link InitBinder} for binder initialization methods, + * and {@link SessionAttributes} for automatic session management of specific attributes., + * <p>This adapter can be customized through various bean properties., + * A common use case is to apply shared binder initialization logic through, + * a custom {@link #setWebBindingInitializer WebBindingInitializer}., + * @since 2.5, +	protected ServletRequestDataBinder createBinder(HttpServletRequest request, Object target, String objectName), +			throws Exception {, +			else if (returnValue instanceof HttpEntity) {, +			else if (returnValue instanceof ModelAndView) {, +, +++ b/org.springframework.web/src/main/java/org/springframework/web/bind/annotation/ResponseBody.java, + * Copyright 2002-2010 the original author or authors., + * Annotation which indicates that a method return value should be bound to the web response body., + * Supported for annotated handler methods in Servlet environments., + * @since 3.0]