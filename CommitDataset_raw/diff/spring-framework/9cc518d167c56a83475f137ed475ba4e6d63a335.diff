[+++ b/spring-web/src/test/java/org/springframework/http/converter/StringHttpMessageConverterTests.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.http.HttpHeaders;, +/**, + * @author Arjen Poutsma, + * @author Rossen Stoyanchev, + */, +	public static final Charset UTF_8 = Charset.forName("UTF-8");, +, +	public static final MediaType TEXT_PLAIN_UTF_8 = new MediaType("text", "plain", UTF_8);, +, +, +	private MockHttpOutputMessage outputMessage;, +, +, +		this.converter = new StringHttpMessageConverter();, +		this.outputMessage = new MockHttpOutputMessage();, +, +		assertTrue(this.converter.canRead(String.class, MediaType.TEXT_PLAIN));, +		assertTrue(this.converter.canWrite(String.class, MediaType.TEXT_PLAIN));, +		assertTrue(this.converter.canWrite(String.class, MediaType.ALL));, +		MockHttpInputMessage inputMessage = new MockHttpInputMessage(body.getBytes(UTF_8));, +		inputMessage.getHeaders().setContentType(TEXT_PLAIN_UTF_8);, +		String result = this.converter.read(String.class, inputMessage);, +, +		this.converter.write(body, null, this.outputMessage);, +, +		HttpHeaders headers = this.outputMessage.getHeaders();, +		assertEquals(body, this.outputMessage.getBodyAsString(iso88591));, +		assertEquals(new MediaType("text", "plain", iso88591), headers.getContentType());, +		assertEquals(body.getBytes(iso88591).length, headers.getContentLength());, +		assertFalse(headers.getAcceptCharset().isEmpty());, +		this.converter.write(body, TEXT_PLAIN_UTF_8, this.outputMessage);, +, +		HttpHeaders headers = this.outputMessage.getHeaders();, +		assertEquals(body, this.outputMessage.getBodyAsString(UTF_8));, +		assertEquals(TEXT_PLAIN_UTF_8, headers.getContentType());, +		assertEquals(body.getBytes(UTF_8).length, headers.getContentLength());, +		assertFalse(headers.getAcceptCharset().isEmpty());, +		MediaType requestedContentType = new MediaType("text", "html");, +, +		HttpHeaders headers = this.outputMessage.getHeaders();, +		headers.setContentType(TEXT_PLAIN_UTF_8);, +		this.converter.write(body, requestedContentType, this.outputMessage);, +, +		assertEquals(body, this.outputMessage.getBodyAsString(UTF_8));, +		assertEquals(TEXT_PLAIN_UTF_8, headers.getContentType());, +		assertEquals(body.getBytes(UTF_8).length, headers.getContentLength());, +		assertFalse(headers.getAcceptCharset().isEmpty());, +]