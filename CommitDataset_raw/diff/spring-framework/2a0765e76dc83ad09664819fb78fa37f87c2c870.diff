[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketNamespaceUtils.java, +			attrValue = sockJsElement.getAttribute("message-codec");, +			if (!attrValue.isEmpty()) {, +				sockJsServiceDef.getPropertyValues().add("messageCodec", new RuntimeBeanReference(attrValue));, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketNamespaceUtils.java, +			attrValue = sockJsElement.getAttribute("message-codec");, +			if (!attrValue.isEmpty()) {, +				sockJsServiceDef.getPropertyValues().add("messageCodec", new RuntimeBeanReference(attrValue));, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/SockJsServiceRegistration.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.web.socket.sockjs.frame.SockJsMessageCodec;, +	private SockJsMessageCodec messageCodec;, +, +	/**, +	 * The codec to use for encoding and decoding SockJS messages., +	 * <p>By default {@code Jackson2SockJsMessageCodec} is used requiring the, +	 * Jackson library to be present on the classpath., +	 * @param codec the codec to use., +	 * @since 4.1, +	 */, +	public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {, +		this.messageCodec = codec;, +		return this;, +	}, +, +		if (this.messageCodec != null) {, +			service.setMessageCodec(this.messageCodec);, +		}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketNamespaceUtils.java, +			attrValue = sockJsElement.getAttribute("message-codec");, +			if (!attrValue.isEmpty()) {, +				sockJsServiceDef.getPropertyValues().add("messageCodec", new RuntimeBeanReference(attrValue));, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/SockJsServiceRegistration.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.web.socket.sockjs.frame.SockJsMessageCodec;, +	private SockJsMessageCodec messageCodec;, +, +	/**, +	 * The codec to use for encoding and decoding SockJS messages., +	 * <p>By default {@code Jackson2SockJsMessageCodec} is used requiring the, +	 * Jackson library to be present on the classpath., +	 * @param codec the codec to use., +	 * @since 4.1, +	 */, +	public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {, +		this.messageCodec = codec;, +		return this;, +	}, +, +		if (this.messageCodec != null) {, +			service.setMessageCodec(this.messageCodec);, +		}, +++ b/spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.1.xsd, +		<xsd:attribute name="message-codec" type="xsd:string">, +			<xsd:annotation>, +				<xsd:documentation source="java:org.springframework.web.socket.sockjs.support.AbstractSockJsService"><![CDATA[, +	The bean name of a SockJsMessageCodec to use for encoding and decoding SockJS messages., +	By default Jackson2SockJsMessageCodec is used requiring the Jackson library to be present on the classpath., +                ]]></xsd:documentation>, +			</xsd:annotation>, +		</xsd:attribute>, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketNamespaceUtils.java, +			attrValue = sockJsElement.getAttribute("message-codec");, +			if (!attrValue.isEmpty()) {, +				sockJsServiceDef.getPropertyValues().add("messageCodec", new RuntimeBeanReference(attrValue));, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/SockJsServiceRegistration.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.web.socket.sockjs.frame.SockJsMessageCodec;, +	private SockJsMessageCodec messageCodec;, +, +	/**, +	 * The codec to use for encoding and decoding SockJS messages., +	 * <p>By default {@code Jackson2SockJsMessageCodec} is used requiring the, +	 * Jackson library to be present on the classpath., +	 * @param codec the codec to use., +	 * @since 4.1, +	 */, +	public SockJsServiceRegistration setMessageCodec(SockJsMessageCodec codec) {, +		this.messageCodec = codec;, +		return this;, +	}, +, +		if (this.messageCodec != null) {, +			service.setMessageCodec(this.messageCodec);, +		}, +++ b/spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.1.xsd, +		<xsd:attribute name="message-codec" type="xsd:string">, +			<xsd:annotation>, +				<xsd:documentation source="java:org.springframework.web.socket.sockjs.support.AbstractSockJsService"><![CDATA[, +	The bean name of a SockJsMessageCodec to use for encoding and decoding SockJS messages., +	By default Jackson2SockJsMessageCodec is used requiring the Jackson library to be present on the classpath., +                ]]></xsd:documentation>, +			</xsd:annotation>, +		</xsd:attribute>, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/config/HandlersBeanDefinitionParserTests.java, +import java.io.IOException;]