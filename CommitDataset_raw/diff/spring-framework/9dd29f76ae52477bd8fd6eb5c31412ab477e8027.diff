[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/handler/AbstractHandlerMapping.java, +	 * the headers from the "Access-Control-Request-Headers" header., +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/handler/AbstractHandlerMapping.java, +	 * the headers from the "Access-Control-Request-Headers" header., +++ b/src/docs/asciidoc/web/webmvc-cors.adoc, +== @CrossOrigin, +	@GetMapping("/{id}"), +	@DeleteMapping("/{id}"), +	@GetMapping("/{id}"), +	@DeleteMapping("/{id}"), + * {api-spring-framework}/web/servlet/handler/AbstractHandlerMapping.html#setCorsConfigurations-java.util.Map-[`AbstractHandlerMapping#setCorsConfigurations()`], +You can apply CORS support through the built-in, +{api-spring-framework}/web/filter/CorsFilter.html[`CorsFilter`]., +, +[NOTE], +====, +Spring Security now provides, +https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#cors[builtin support for CORS], +so you don't need to use a `CorsFilter`., +====, +, +To configure the filter pass a, +You can also easily permit all cross-origin requests for GET, HEAD, and POST requests by writing, +[source,java,indent=0], +, +----, +CorsFilter filter = new CorsFilter(exchange -> new CorsConfiguration().applyPermitDefaultValues());, +----, +]