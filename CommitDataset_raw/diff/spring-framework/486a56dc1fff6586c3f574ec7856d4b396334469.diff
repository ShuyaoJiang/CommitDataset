[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/support/TomcatRequestUpgradeStrategy.java, +import java.lang.reflect.Method;, +import javax.websocket.server.ServerEndpointConfig;, +import org.apache.tomcat.websocket.server.WsHandshakeRequest;, +import org.apache.tomcat.websocket.server.WsHttpUpgradeHandler;, +import org.springframework.util.ReflectionUtils;, +		if (hasDoUpgrade) {, +			doUpgrade(servletRequest, servletResponse, acceptedProtocol, endpoint);, +		}, +		else {, +			upgradeTomcat80RC1(servletRequest, acceptedProtocol, endpoint);, +		}, +	}, +, +	private void doUpgrade(HttpServletRequest servletRequest, HttpServletResponse servletResponse,, +			String acceptedProtocol, Endpoint endpoint) {, +, +		StringBuffer requestUrl = servletRequest.getRequestURL();, +					"Servlet request failed to upgrade to WebSocket, uri=" + requestUrl, ex);, +					"Response update failed during upgrade to WebSocket, uri=" + requestUrl, ex);, +	// FIXME: Remove this after RC2 is out, +, +	private void upgradeTomcat80RC1(HttpServletRequest request, String protocol, Endpoint endpoint) {, +, +		WsHttpUpgradeHandler upgradeHandler;, +		try {, +			upgradeHandler = request.upgrade(WsHttpUpgradeHandler.class);, +		}, +		catch (Exception e) {, +			throw new HandshakeFailureException("Unable to create UpgardeHandler", e);, +		}, +, +		WsHandshakeRequest webSocketRequest = new WsHandshakeRequest(request);, +		try {, +			Method method = ReflectionUtils.findMethod(WsHandshakeRequest.class, "finished");, +			ReflectionUtils.makeAccessible(method);, +			method.invoke(webSocketRequest);, +		}, +		catch (Exception ex) {, +			throw new HandshakeFailureException("Failed to upgrade HttpServletRequest", ex);, +		}, +, +		ServerEndpointConfig endpointConfig = new ServerEndpointRegistration("/shouldntmatter", endpoint);, +, +		upgradeHandler.preInit(endpoint, endpointConfig, getContainer(request), webSocketRequest,, +				protocol, Collections.<String, String> emptyMap(), request.isSecure());, +	}, +, +	private static boolean hasDoUpgrade = (ReflectionUtils.findMethod(WsServerContainer.class,, +			"doUpgrade", HttpServletRequest.class, HttpServletResponse.class,, +			ServerEndpointConfig.class, Map.class) != null);, +]