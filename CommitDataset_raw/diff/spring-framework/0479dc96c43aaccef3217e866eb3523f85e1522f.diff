[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/ContentResultMatchers.java, + *, +		return result -> {, +		return result -> {, +		return result -> {, +		return result -> assertThat("Response content", result.getResponse().getContentAsString(), matcher);, +		return result -> assertEquals("Response content", expectedContent, result.getResponse().getContentAsString());, +		return result -> assertEquals("Response content", expectedContent, result.getResponse().getContentAsByteArray());, +		return result -> {, +		return result -> {, +		return result -> {, +	 * Parse the response content and the given string as JSON and assert the two are "similar" -, +	 * i.e. they contain the same attribute-value pairs regardless of formatting., +		return result -> {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/ContentResultMatchers.java, + *, +		return result -> {, +		return result -> {, +		return result -> {, +		return result -> assertThat("Response content", result.getResponse().getContentAsString(), matcher);, +		return result -> assertEquals("Response content", expectedContent, result.getResponse().getContentAsString());, +		return result -> assertEquals("Response content", expectedContent, result.getResponse().getContentAsByteArray());, +		return result -> {, +		return result -> {, +		return result -> {, +	 * Parse the response content and the given string as JSON and assert the two are "similar" -, +	 * i.e. they contain the same attribute-value pairs regardless of formatting., +		return result -> {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/CookieResultMatchers.java, + * Copyright 2002-2017 the original author or authors., + *, +		return result -> {, +			assertTrue("Response cookie '" + name + "' not found", cookie != null);, +			assertThat("Response cookie '" + name + "'", cookie.getValue(), matcher);, +		return result -> {, +			assertTrue("Response cookie '" + name + "' not found", cookie != null);, +		return result -> {, +			assertTrue("No cookie with name '" + name + "'", cookie != null);, +		return result -> {, +			assertTrue("Unexpected cookie with name '" + name + "'", cookie == null);, +		return result -> {, +			assertTrue("No cookie with name '" + name + "'", cookie != null);, +			assertThat("Response cookie '" + name + "' maxAge", cookie.getMaxAge(), matcher);, +		return result -> {, +			assertEquals("Response cookie '" + name + "' maxAge", maxAge, cookie.getMaxAge());, +		return result -> {, +			assertThat("Response cookie '" + name + "' path", cookie.getPath(), matcher);, +		return result -> {, +			assertEquals("Response cookie '" + name + "' path", path, cookie.getPath());, +		return result -> {, +			assertThat("Response cookie '" + name + "' domain", cookie.getDomain(), matcher);, +		return result -> {, +			assertEquals("Response cookie '" + name + "' domain", domain, cookie.getDomain());, +		return result -> {, +			assertThat("Response cookie '" + name + "' comment", cookie.getComment(), matcher);, +		return result -> {, +			assertEquals("Response cookie '" + name + "' comment", comment, cookie.getComment());, +		return result -> {, +			assertThat("Response cookie '" + name + "' version", cookie.getVersion(), matcher);, +		return result -> {, +			assertEquals("Response cookie '" + name + "' version", version, cookie.getVersion());, +		return result -> {, +			assertEquals("Response cookie '" + name + "' secure", secure, cookie.getSecure());, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/ContentResultMatchers.java, + *, +		return result -> {, +		return result -> {, +		return result -> {, +		return result -> assertThat("Response content", result.getResponse().getContentAsString(), matcher);, +		return result -> assertEquals("Response content", expectedContent, result.getResponse().getContentAsString());, +		return result -> assertEquals("Response content", expectedContent, result.getResponse().getContentAsByteArray());, +		return result -> {, +		return result -> {, +		return result -> {, +	 * Parse the response content and the given string as JSON and assert the two are "similar" -, +	 * i.e. they contain the same attribute-value pairs regardless of formatting., +		return result -> {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/CookieResultMatchers.java, + * Copyright 2002-2017 the original author or authors., + *, +		return result -> {, +			assertTrue("Response cookie '" + name + "' not found", cookie != null);, +			assertThat("Response cookie '" + name + "'", cookie.getValue(), matcher);, +		return result -> {, +			assertTrue("Response cookie '" + name + "' not found", cookie != null);, +		return result -> {, +			assertTrue("No cookie with name '" + name + "'", cookie != null);, +		return result -> {, +			assertTrue("Unexpected cookie with name '" + name + "'", cookie == null);, +		return result -> {, +			assertTrue("No cookie with name '" + name + "'", cookie != null);, +			assertThat("Response cookie '" + name + "' maxAge", cookie.getMaxAge(), matcher);, +		return result -> {, +			assertEquals("Response cookie '" + name + "' maxAge", maxAge, cookie.getMaxAge());, +		return result -> {, +			assertThat("Response cookie '" + name + "' path", cookie.getPath(), matcher);, +		return result -> {, +			assertEquals("Response cookie '" + name + "' path", path, cookie.getPath());, +		return result -> {, +			assertThat("Response cookie '" + name + "' domain", cookie.getDomain(), matcher);]