[+++ b/spring-web/src/main/java/org/springframework/web/multipart/support/DefaultMultipartHttpServletRequest.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +import org.springframework.util.StringUtils;, +		String[] parameterValues = super.getParameterValues(name);, +		String[] mpValues = getMultipartParameters().get(name);, +		if (mpValues == null) {, +			return parameterValues;, +		if (parameterValues == null || getQueryString() == null) {, +			return mpValues;, +		}, +		else {, +			String[] result = new String[mpValues.length + parameterValues.length];, +			System.arraycopy(mpValues, 0, result, 0, mpValues.length);, +			System.arraycopy(parameterValues, 0, result, mpValues.length, parameterValues.length);, +			return result;, +		}, +		paramNames.addAll(Collections.list(super.getParameterNames()));, +		Map<String, String[]> result = new LinkedHashMap<>();, +		Enumeration<String> names = getParameterNames();, +		while (names.hasMoreElements()) {, +			String name = names.nextElement();, +			result.put(name, getParameterValues(name));, +		return result;, +++ b/spring-web/src/main/java/org/springframework/web/multipart/support/DefaultMultipartHttpServletRequest.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +import org.springframework.util.StringUtils;, +		String[] parameterValues = super.getParameterValues(name);, +		String[] mpValues = getMultipartParameters().get(name);, +		if (mpValues == null) {, +			return parameterValues;, +		if (parameterValues == null || getQueryString() == null) {, +			return mpValues;, +		}, +		else {, +			String[] result = new String[mpValues.length + parameterValues.length];, +			System.arraycopy(mpValues, 0, result, 0, mpValues.length);, +			System.arraycopy(parameterValues, 0, result, mpValues.length, parameterValues.length);, +			return result;, +		}, +		paramNames.addAll(Collections.list(super.getParameterNames()));, +		Map<String, String[]> result = new LinkedHashMap<>();, +		Enumeration<String> names = getParameterNames();, +		while (names.hasMoreElements()) {, +			String name = names.nextElement();, +			result.put(name, getParameterValues(name));, +		return result;, +++ b/spring-web/src/test/java/org/springframework/web/multipart/support/DefaultMultipartHttpServletRequestTests.java, +/*, + * Copyright 2002-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.web.multipart.support;, +, +import java.util.HashMap;, +import java.util.LinkedHashMap;, +import java.util.Map;, +, +import org.junit.Test;, +, +import org.springframework.mock.web.test.MockHttpServletRequest;, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +, +import static org.junit.Assert.*;, +, +/**, + * Unit tests for {@link DefaultMultipartHttpServletRequest}., + *, + * @author Rossen Stoyanchev, + */, +public class DefaultMultipartHttpServletRequestTests {, +, +	private final MockHttpServletRequest servletRequest = new MockHttpServletRequest();, +, +	private final Map<String, String[]> multipartParams = new LinkedHashMap<>();, +, +	private final MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>();, +, +, +	@Test // SPR-16590, +	public void parameterValues() {, +, +		this.multipartParams.put("key", new String[] {"p"});, +		this.queryParams.add("key", "q");, +]