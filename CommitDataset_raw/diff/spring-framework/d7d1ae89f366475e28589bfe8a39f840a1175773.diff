[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.java, +			throw new HttpMediaTypeNotSupportedException("Cannot extract @RequestBody: no Content-Type found");, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.java, +			throw new HttpMediaTypeNotSupportedException("Cannot extract @RequestBody: no Content-Type found");, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.java, +import org.springframework.util.CollectionUtils;, +		if (!CollectionUtils.isEmpty(mediaTypes)) {, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.java, +			throw new HttpMediaTypeNotSupportedException("Cannot extract @RequestBody: no Content-Type found");, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.java, +import org.springframework.util.CollectionUtils;, +		if (!CollectionUtils.isEmpty(mediaTypes)) {, +++ b/org.springframework.web/src/main/java/org/springframework/web/HttpMediaTypeNotSupportedException.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +import java.util.Collections;, + * not supported by request handler., +	private final MediaType contentType;, +	private final List<MediaType> supportedMediaTypes;, +, +	/**, +	 * Create a new HttpMediaTypeNotSupportedException., +	 * @param message the exception message, +	 */, +	public HttpMediaTypeNotSupportedException(String message) {, +		super(message);, +		this.contentType = null;, +		this.supportedMediaTypes = Collections.emptyList();, +	}]