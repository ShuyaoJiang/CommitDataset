[+++ b/spring-test/src/main/java/org/springframework/mock/web/server/MockWebSession.java, +, +import org.springframework.lang.Nullable;, +import org.springframework.util.Assert;, +	public MockWebSession(@Nullable Clock clock) {, +		WebSession session = sessionStore.createWebSession().block();, +		Assert.state(session != null, "WebSession must not be null");, +		this.delegate = session;, +++ b/spring-test/src/main/java/org/springframework/mock/web/server/MockWebSession.java, +, +import org.springframework.lang.Nullable;, +import org.springframework.util.Assert;, +	public MockWebSession(@Nullable Clock clock) {, +		WebSession session = sessionStore.createWebSession().block();, +		Assert.state(session != null, "WebSession must not be null");, +		this.delegate = session;, +++ b/spring-web/src/main/java/org/springframework/http/codec/support/ClientDefaultCodecsImpl.java, +, +import java.util.Collections;, +		return (this.sseDecoder != null ? this.sseDecoder : jackson2Present ? getJackson2JsonDecoder() : null);, +		if (this.multipartCodecs != null) {, +			return this.multipartCodecs.getWriters();, +		}, +		else if (this.partWritersSupplier != null) {, +			return this.partWritersSupplier.get();, +		}, +		else {, +			return Collections.emptyList();, +		}, +++ b/spring-test/src/main/java/org/springframework/mock/web/server/MockWebSession.java, +, +import org.springframework.lang.Nullable;, +import org.springframework.util.Assert;, +	public MockWebSession(@Nullable Clock clock) {, +		WebSession session = sessionStore.createWebSession().block();, +		Assert.state(session != null, "WebSession must not be null");, +		this.delegate = session;, +++ b/spring-web/src/main/java/org/springframework/http/codec/support/ClientDefaultCodecsImpl.java, +, +import java.util.Collections;, +		return (this.sseDecoder != null ? this.sseDecoder : jackson2Present ? getJackson2JsonDecoder() : null);, +		if (this.multipartCodecs != null) {, +			return this.multipartCodecs.getWriters();, +		}, +		else if (this.partWritersSupplier != null) {, +			return this.partWritersSupplier.get();, +		}, +		else {, +			return Collections.emptyList();, +		}, +++ b/spring-web/src/main/java/org/springframework/http/codec/support/DefaultClientCodecConfigurer.java, +++ b/spring-test/src/main/java/org/springframework/mock/web/server/MockWebSession.java, +, +import org.springframework.lang.Nullable;, +import org.springframework.util.Assert;, +	public MockWebSession(@Nullable Clock clock) {, +		WebSession session = sessionStore.createWebSession().block();, +		Assert.state(session != null, "WebSession must not be null");, +		this.delegate = session;, +++ b/spring-web/src/main/java/org/springframework/http/codec/support/ClientDefaultCodecsImpl.java, +, +import java.util.Collections;, +		return (this.sseDecoder != null ? this.sseDecoder : jackson2Present ? getJackson2JsonDecoder() : null);, +		if (this.multipartCodecs != null) {, +			return this.multipartCodecs.getWriters();, +		}, +		else if (this.partWritersSupplier != null) {, +			return this.partWritersSupplier.get();, +		}, +		else {, +			return Collections.emptyList();, +		}, +++ b/spring-web/src/main/java/org/springframework/http/codec/support/DefaultClientCodecConfigurer.java, +++ b/spring-web/src/main/java/org/springframework/http/codec/support/DefaultServerCodecConfigurer.java, +++ b/spring-test/src/main/java/org/springframework/mock/web/server/MockWebSession.java, +, +import org.springframework.lang.Nullable;, +import org.springframework.util.Assert;, +	public MockWebSession(@Nullable Clock clock) {, +		WebSession session = sessionStore.createWebSession().block();, +		Assert.state(session != null, "WebSession must not be null");, +		this.delegate = session;, +++ b/spring-web/src/main/java/org/springframework/http/codec/support/ClientDefaultCodecsImpl.java, +, +import java.util.Collections;, +		return (this.sseDecoder != null ? this.sseDecoder : jackson2Present ? getJackson2JsonDecoder() : null);, +		if (this.multipartCodecs != null) {, +			return this.multipartCodecs.getWriters();, +		}, +		else if (this.partWritersSupplier != null) {, +			return this.partWritersSupplier.get();, +		}, +		else {, +			return Collections.emptyList();, +		}, +++ b/spring-web/src/main/java/org/springframework/http/codec/support/DefaultClientCodecConfigurer.java, +++ b/spring-web/src/main/java/org/springframework/http/codec/support/DefaultServerCodecConfigurer.java, +++ b/spring-web/src/test/java/org/springframework/mock/web/test/server/MockWebSession.java, +, +import org.springframework.lang.Nullable;]