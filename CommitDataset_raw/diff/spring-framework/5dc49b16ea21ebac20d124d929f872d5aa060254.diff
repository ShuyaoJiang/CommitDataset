[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerReadPublisher.java, +	private final String logPrefix;, +, +, +	public AbstractListenerReadPublisher() {, +		this("");, +	}, +, +	/**, +	 * Create an instance with the given log prefix., +	 * @since 5.1, +	 */, +	public AbstractListenerReadPublisher(String logPrefix) {, +		this.logPrefix = logPrefix;, +	}, +, +, +	/**, +	 * Return the configured log message prefix., +	 * @since 5.1, +	 */, +	public String getLogPrefix() {, +		return this.logPrefix;, +	}, +, +		logger.trace(getLogPrefix() + "onDataAvailable");, +		logger.trace(getLogPrefix() + "onAllDataRead");, +			logger.trace(getLogPrefix() + "Connection error: " + ex);, +					logger.trace(getLogPrefix() + "Publishing data read");, +					logger.trace(getLogPrefix() + "No more data to read");, +			logger.trace(getLogPrefix() + oldState + " -> " + newState);, +				logger.trace(getLogPrefix() + n + " requested");, +				logger.trace(getLogPrefix() + "Cancellation");, +					String logPrefix = publisher.getLogPrefix();, +						publisher.logger.trace(logPrefix + "Completed before demand");, +							publisher.logger.trace(logPrefix + "Completed with error before demand: " + ex);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerReadPublisher.java, +	private final String logPrefix;, +, +, +	public AbstractListenerReadPublisher() {, +		this("");, +	}, +, +	/**, +	 * Create an instance with the given log prefix., +	 * @since 5.1, +	 */, +	public AbstractListenerReadPublisher(String logPrefix) {, +		this.logPrefix = logPrefix;, +	}, +, +, +	/**, +	 * Return the configured log message prefix., +	 * @since 5.1, +	 */, +	public String getLogPrefix() {, +		return this.logPrefix;, +	}, +, +		logger.trace(getLogPrefix() + "onDataAvailable");, +		logger.trace(getLogPrefix() + "onAllDataRead");, +			logger.trace(getLogPrefix() + "Connection error: " + ex);, +					logger.trace(getLogPrefix() + "Publishing data read");, +					logger.trace(getLogPrefix() + "No more data to read");, +			logger.trace(getLogPrefix() + oldState + " -> " + newState);, +				logger.trace(getLogPrefix() + n + " requested");, +				logger.trace(getLogPrefix() + "Cancellation");, +					String logPrefix = publisher.getLogPrefix();, +						publisher.logger.trace(logPrefix + "Completed before demand");, +							publisher.logger.trace(logPrefix + "Completed with error before demand: " + ex);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor.java, +	private final WriteResultPublisher resultPublisher;, +, +	private final String logPrefix;, +, +, +	public AbstractListenerWriteFlushProcessor() {, +		this("");, +	}, +, +	/**, +	 * Create an instance with the given log prefix., +	 * @since 5.1, +	 */, +	public AbstractListenerWriteFlushProcessor(String logPrefix) {, +		this.logPrefix = logPrefix;, +		this.resultPublisher = new WriteResultPublisher(logPrefix);, +	}, +, +, +	/**, +	 * Create an instance with the given log prefix., +	 * @since 5.1, +	 */, +	public String getLogPrefix() {, +		return this.logPrefix;, +	}, +		if (logger.isTraceEnabled()) {]