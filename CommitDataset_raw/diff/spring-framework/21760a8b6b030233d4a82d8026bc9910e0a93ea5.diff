[+++ b/spring-context/src/main/java/org/springframework/validation/DefaultMessageCodesResolver.java, + * Copyright 2002-2012 the original author or authors., +import java.util.Collection;, +import java.util.LinkedHashSet;, +import java.util.Set;, + * <p>Will create two message codes for an object error, in the following order (when, + * using the {@link Style#PREFIX_ERROR_CODE prefixed} {@link #setStyle(Style) style}):, + * <p>By default the {@code errorCode}s will be placed at the beginning of constructed, + * message strings.  The {@link #setStyle(Style) style} property can be used to specify, + * alternative {@link Style styles} of concatination., + *, + * @author Phillip Webb, +	private static final Style DEFAULT_STYLE = Style.PREFIX_ERROR_CODE;, +, +	private Style style = DEFAULT_STYLE;, +, +	 * Specify the style of message code that will be built by this resolver., +	 * <p>Default is {@link Style#PREFIX_ERROR_CODE}., +	 */, +	public void setStyle(Style style) {, +		this.style = (style == null ? DEFAULT_STYLE : style);, +	}, +, +	/**, +		return resolveMessageCodes(errorCode, objectName, "", null);, +		Set<String> codeList = new LinkedHashSet<String>();, +		addCodes(codeList, errorCode, objectName, fieldList);, +		addCodes(codeList, errorCode, null, fieldList);, +			addCode(codeList, errorCode, null, fieldType.getName());, +		addCode(codeList, errorCode, null, null);, +	private void addCodes(Collection<String> codeList, String errorCode, String objectName, Iterable<String> fields) {, +		for (String field : fields) {, +			addCode(codeList, errorCode, objectName, field);, +		}, +	}, +, +	private void addCode(Collection<String> codeList, String errorCode, String objectName, String field) {, +		String code = getCode(errorCode, objectName, field);, +		codeList.add(postProcessMessageCode(code));, +	}, +, +	private String getCode(String errorCode, String objectName, String field) {, +		switch (this.style) {, +			case PREFIX_ERROR_CODE:, +				return toDelimitedString(errorCode, objectName, field);, +			case POSTFIX_ERROR_CODE:, +				return toDelimitedString(objectName, field, errorCode);, +		}, +		throw new IllegalStateException("Unknown style " + this.style);, +	}, +, +	private String toDelimitedString(String... elements) {, +		StringBuilder rtn = new StringBuilder();, +		for (String element : elements) {, +			if(StringUtils.hasLength(element)) {, +				rtn.append(rtn.length() == 0 ? "" : CODE_SEPARATOR);, +				rtn.append(element);, +			}, +		}, +		return rtn.toString();, +	}, +, +, +	/**, +	 * The various styles that can be used to construct message codes., +	 */, +	public static enum Style {, +, +		/**, +		 * Prefix the error code at the beginning of the generated message code. eg:, +		 * {@code errorCode + "." + object name + "." + field}, +		 */, +		PREFIX_ERROR_CODE,, +, +		/**, +		 * Postfix the error code at the end of the generated message code. eg:, +		 * {@code object name + "." + field + "." + errorCode}, +		 */, +		POSTFIX_ERROR_CODE, +	}, +, +++ b/spring-context/src/main/java/org/springframework/validation/DefaultMessageCodesResolver.java, + * Copyright 2002-2012 the original author or authors., +import java.util.Collection;, +import java.util.LinkedHashSet;, +import java.util.Set;, + * <p>Will create two message codes for an object error, in the following order (when, + * using the {@link Style#PREFIX_ERROR_CODE prefixed} {@link #setStyle(Style) style}):, + * <p>By default the {@code errorCode}s will be placed at the beginning of constructed, + * message strings.  The {@link #setStyle(Style) style} property can be used to specify, + * alternative {@link Style styles} of concatination., + *, + * @author Phillip Webb, +	private static final Style DEFAULT_STYLE = Style.PREFIX_ERROR_CODE;, +, +	private Style style = DEFAULT_STYLE;, +, +	 * Specify the style of message code that will be built by this resolver., +	 * <p>Default is {@link Style#PREFIX_ERROR_CODE}., +	 */]