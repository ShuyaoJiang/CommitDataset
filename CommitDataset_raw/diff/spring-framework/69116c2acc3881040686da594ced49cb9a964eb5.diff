[+++ b/src/asciidoc/core-beans.adoc, +As of Spring Framework 4.3, you may also declare a factory method parameter of type, +`InjectionPoint` (or its more specific subclass `DependencyDescriptor`) in order to, +access the requesting injection point that triggers the creation of the current bean., +Note that this will only apply to the actual creation of bean instances, not to the, +injection of existing instances. As a consequence, this feature makes most sense for, +beans of prototype scope. For other scopes, the factory method will only ever see the, +injection point which triggered the creation of a new bean instance in the given scope:, +for example, the dependency that triggered the creation of a lazy singleton bean., +Use the provided injection point metadata with semantic care in such scenarios., +, +[source,java,indent=0], +[subs="verbatim,quotes"], +----, +	@Component, +	public class FactoryMethodComponent {, +, +		@Bean @Scope("prototype"), +		public TestBean prototypeInstance(InjectionPoint injectionPoint) {, +			return new TestBean("prototypeInstance for " + injectionPoint.getMember());, +		}, +	}, +----, +, +The `@Bean` methods in a regular Spring component are processed differently than their]