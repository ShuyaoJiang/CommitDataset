[+++ b/spring-context/src/test/java/org/springframework/jmx/export/annotation/EnableMBeanExportConfigurationTests.java, + * Copyright 2002-2016 the original author or authors., +		}, +		finally {, +		}, +		finally {, +++ b/spring-context/src/test/java/org/springframework/jmx/export/annotation/EnableMBeanExportConfigurationTests.java, + * Copyright 2002-2016 the original author or authors., +		}, +		finally {, +		}, +		finally {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/EnumToStringConverter.java, + * Copyright 2002-2016 the original author or authors., + * Calls {@link Enum#name()} to convert a source Enum to a String., + * This converter will not match enums with interfaces that can be converted., + *, +, +, +			if (this.conversionService.canConvert(TypeDescriptor.valueOf(interfaceType), targetType)) {, +++ b/spring-context/src/test/java/org/springframework/jmx/export/annotation/EnableMBeanExportConfigurationTests.java, + * Copyright 2002-2016 the original author or authors., +		}, +		finally {, +		}, +		finally {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/EnumToStringConverter.java, + * Copyright 2002-2016 the original author or authors., + * Calls {@link Enum#name()} to convert a source Enum to a String., + * This converter will not match enums with interfaces that can be converted., + *, +, +, +			if (this.conversionService.canConvert(TypeDescriptor.valueOf(interfaceType), targetType)) {, +++ b/spring-core/src/main/java/org/springframework/core/env/PropertySourcesPropertyResolver.java, + * Copyright 2002-2016 the original author or authors., +				Object value = propertySource.getProperty(key);, +				if (value != null) {]