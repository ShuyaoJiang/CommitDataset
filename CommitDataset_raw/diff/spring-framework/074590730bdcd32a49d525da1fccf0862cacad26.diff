[+++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpRequest.java, + * Copyright 2002-2014 the original author or authors., +		Assert.notNull(servletRequest, "HttpServletRequest must not be null");, +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpRequest.java, + * Copyright 2002-2014 the original author or authors., +		Assert.notNull(servletRequest, "HttpServletRequest must not be null");, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +		String encodedScheme = encodeUriComponent(getScheme(), encoding, Type.SCHEME);, +, +		verifyUriComponent(this.userInfo, Type.USER_INFO);, +		verifyUriComponent(this.host, getHostType());, +		String expandedScheme = expandUriComponent(getScheme(), uriVariables);, +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpRequest.java, + * Copyright 2002-2014 the original author or authors., +		Assert.notNull(servletRequest, "HttpServletRequest must not be null");, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +		String encodedScheme = encodeUriComponent(getScheme(), encoding, Type.SCHEME);, +, +		verifyUriComponent(this.userInfo, Type.USER_INFO);, +		verifyUriComponent(this.host, getHostType());, +		String expandedScheme = expandUriComponent(getScheme(), uriVariables);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java, +	/** Perform cleanup of request attributes after include request? */, +	private boolean cleanupAfterInclude = true;, +, +	 * <p>Note that if {@link org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler}, +	 * is used, then requests will always be forwarded to the default servlet and a, +	 * NoHandlerFoundException would never be thrown in that case., +	 * <p>Default is "false", meaning the DispatcherServlet sends a NOT_FOUND error through the, +	 * Servlet response., +		if (this.throwExceptionIfNoHandlerFound) {, +			ServletServerHttpRequest sshr = new ServletServerHttpRequest(request);, +			throw new NoHandlerFoundException(, +					sshr.getMethod().name(), sshr.getServletRequest().getRequestURI(), sshr.getHeaders());]