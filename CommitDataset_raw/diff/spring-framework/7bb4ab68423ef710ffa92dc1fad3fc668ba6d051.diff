[+++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +	 * @since 4.1.3, +	 * @since 4.0, +	 * @since 4.2, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +	 * @since 4.1.3, +	 * @since 4.0, +	 * @since 4.2, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +	/**, +	 * Return the associated Spring {@link ApplicationContext}., +	 * @since 4.2, +	 */, +	/**, +	 * Return the associated {@link javax.servlet.ServletContext}., +	 * @since 4.2, +	 */, +	 * Protected method for plugging in a custom subclass of, +	 * @since 4.0, +	 * Return a global {@link PathMatcher} instance for path matching, +	 * patterns in {@link HandlerMapping}s., +	 * This instance can be configured using the {@link PathMatchConfigurer}, +	 * in {@link #configurePathMatch(PathMatchConfigurer)}., +	 * @since 4.1, +	 */, +	@Bean, +	public PathMatcher mvcPathMatcher() {, +		PathMatcher pathMatcher = getPathMatchConfigurer().getPathMatcher();, +		return (pathMatcher != null ? pathMatcher : new AntPathMatcher());, +	}, +, +	/**, +	 * Return a global {@link UrlPathHelper} instance for path matching, +	 * patterns in {@link HandlerMapping}s., +	 * This instance can be configured using the {@link PathMatchConfigurer}, +	 * in {@link #configurePathMatch(PathMatchConfigurer)}., +	 * @since 4.1, +	 */, +	@Bean, +	public UrlPathHelper mvcUrlPathHelper() {, +		UrlPathHelper pathHelper = getPathMatchConfigurer().getUrlPathHelper();, +		return (pathHelper != null ? pathHelper : new UrlPathHelper());, +	}, +, +	/**, +			handlerMapping.setInterceptors(new ResourceUrlProviderExposingInterceptor(mvcResourceUrlProvider()));, +	/**, +	 * A {@link ResourceUrlProvider} bean for use with the MVC dispatcher., +	 * @since 4.1, +	 */, +	 * Protected method for plugging in a custom subclass of, +	 * @since 4.3, +	 * @since 4.3, +	 * @since 4.3, +	 * @since 4.0, +	 * Protected method for plugging in a custom subclass of, +	 * @since 4.3, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +	 * @since 4.1.3, +	 * @since 4.0, +	 * @since 4.2, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +	/**, +	 * Return the associated Spring {@link ApplicationContext}., +	 * @since 4.2, +	 */, +	/**, +	 * Return the associated {@link javax.servlet.ServletContext}., +	 * @since 4.2, +	 */, +	 * Protected method for plugging in a custom subclass of, +	 * @since 4.0, +	 * Return a global {@link PathMatcher} instance for path matching, +	 * patterns in {@link HandlerMapping}s., +	 * This instance can be configured using the {@link PathMatchConfigurer}, +	 * in {@link #configurePathMatch(PathMatchConfigurer)}., +	 * @since 4.1, +	 */, +	@Bean, +	public PathMatcher mvcPathMatcher() {, +		PathMatcher pathMatcher = getPathMatchConfigurer().getPathMatcher();, +		return (pathMatcher != null ? pathMatcher : new AntPathMatcher());, +	}, +, +	/**, +	 * Return a global {@link UrlPathHelper} instance for path matching, +	 * patterns in {@link HandlerMapping}s., +	 * This instance can be configured using the {@link PathMatchConfigurer}, +	 * in {@link #configurePathMatch(PathMatchConfigurer)}., +	 * @since 4.1, +	 */, +	@Bean, +	public UrlPathHelper mvcUrlPathHelper() {, +		UrlPathHelper pathHelper = getPathMatchConfigurer().getUrlPathHelper();, +		return (pathHelper != null ? pathHelper : new UrlPathHelper());, +	}, +, +	/**, +			handlerMapping.setInterceptors(new ResourceUrlProviderExposingInterceptor(mvcResourceUrlProvider()));, +	/**]