[+++ b/spring-expression/src/main/java/org/springframework/expression/common/ExpressionUtils.java, + * Copyright 2002-2012 the original author or authors., +		if ((targetType == null) || (value != null && ClassUtils.isAssignableValue(targetType, value))) {, +++ b/spring-expression/src/main/java/org/springframework/expression/common/ExpressionUtils.java, + * Copyright 2002-2012 the original author or authors., +		if ((targetType == null) || (value != null && ClassUtils.isAssignableValue(targetType, value))) {, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/OpAnd.java, + * Copyright 2002-2012 the original author or authors., + * @author Oliver Becker, +		if (getBooleanValue(state, getLeftOperand()) == false) {, +			// no need to evaluate right operand, +			return BooleanTypedValue.FALSE;, +		}, +		return BooleanTypedValue.forValue(getBooleanValue(state, getRightOperand()));, +	}, +	private boolean getBooleanValue(ExpressionState state, SpelNodeImpl operand) {, +			Boolean value = operand.getValue(state, Boolean.class);, +			assertValueNotNull(value);, +			return value;, +			ee.setPosition(operand.getStartPosition());, +	private void assertValueNotNull(Boolean value) {, +		if (value == null) {, +++ b/spring-expression/src/main/java/org/springframework/expression/common/ExpressionUtils.java, + * Copyright 2002-2012 the original author or authors., +		if ((targetType == null) || (value != null && ClassUtils.isAssignableValue(targetType, value))) {, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/OpAnd.java, + * Copyright 2002-2012 the original author or authors., + * @author Oliver Becker, +		if (getBooleanValue(state, getLeftOperand()) == false) {, +			// no need to evaluate right operand, +			return BooleanTypedValue.FALSE;, +		}, +		return BooleanTypedValue.forValue(getBooleanValue(state, getRightOperand()));, +	}, +	private boolean getBooleanValue(ExpressionState state, SpelNodeImpl operand) {, +			Boolean value = operand.getValue(state, Boolean.class);, +			assertValueNotNull(value);, +			return value;, +			ee.setPosition(operand.getStartPosition());, +	private void assertValueNotNull(Boolean value) {, +		if (value == null) {, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/OpOr.java, + * Copyright 2002-2012 the original author or authors., + * @author Oliver Becker, +		if (getBooleanValue(state, getLeftOperand())) {, +			// no need to evaluate right operand, +			return BooleanTypedValue.TRUE;, +		}, +		return BooleanTypedValue.forValue(getBooleanValue(state, getRightOperand()));, +	}, +, +	private boolean getBooleanValue(ExpressionState state, SpelNodeImpl operand) {, +			Boolean value = operand.getValue(state, Boolean.class);, +			assertValueNotNull(value);, +			return value;, +		catch (SpelEvaluationException ee) {, +			ee.setPosition(operand.getStartPosition());, +			throw ee;, +		}, +	private void assertValueNotNull(Boolean value) {, +		if (value == null) {, +++ b/spring-expression/src/main/java/org/springframework/expression/common/ExpressionUtils.java, + * Copyright 2002-2012 the original author or authors., +		if ((targetType == null) || (value != null && ClassUtils.isAssignableValue(targetType, value))) {, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/OpAnd.java, + * Copyright 2002-2012 the original author or authors., + * @author Oliver Becker, +		if (getBooleanValue(state, getLeftOperand()) == false) {, +			// no need to evaluate right operand, +			return BooleanTypedValue.FALSE;, +		}, +		return BooleanTypedValue.forValue(getBooleanValue(state, getRightOperand()));, +	}, +	private boolean getBooleanValue(ExpressionState state, SpelNodeImpl operand) {, +			Boolean value = operand.getValue(state, Boolean.class);, +			assertValueNotNull(value);, +			return value;, +			ee.setPosition(operand.getStartPosition());, +	private void assertValueNotNull(Boolean value) {, +		if (value == null) {, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/OpOr.java, + * Copyright 2002-2012 the original author or authors., + * @author Oliver Becker, +		if (getBooleanValue(state, getLeftOperand())) {, +			// no need to evaluate right operand, +			return BooleanTypedValue.TRUE;, +		}, +		return BooleanTypedValue.forValue(getBooleanValue(state, getRightOperand()));, +	}, +, +	private boolean getBooleanValue(ExpressionState state, SpelNodeImpl operand) {, +			Boolean value = operand.getValue(state, Boolean.class);, +			assertValueNotNull(value);, +			return value;, +		catch (SpelEvaluationException ee) {, +			ee.setPosition(operand.getStartPosition());, +			throw ee;, +		}, +	private void assertValueNotNull(Boolean value) {, +		if (value == null) {]