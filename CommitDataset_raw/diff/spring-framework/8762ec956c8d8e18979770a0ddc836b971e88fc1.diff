[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/HandlerMapping.java, + * Copyright 2002-2010 the original author or authors., +	 * Name of the boolean {@link HttpServletRequest} attribute that indicates, +	 * whether type-level mappings should be inspected., +	 * <p>Note: This attribute is not required to be supported by all, +	 * HandlerMapping implementations., +	 */, +	String INTROSPECT_TYPE_LEVEL_MAPPING = HandlerMapping.class.getName() + ".introspectTypeLevelMapping";, +, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/HandlerMapping.java, + * Copyright 2002-2010 the original author or authors., +	 * Name of the boolean {@link HttpServletRequest} attribute that indicates, +	 * whether type-level mappings should be inspected., +	 * <p>Note: This attribute is not required to be supported by all, +	 * HandlerMapping implementations., +	 */, +	String INTROSPECT_TYPE_LEVEL_MAPPING = HandlerMapping.class.getName() + ".introspectTypeLevelMapping";, +, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java, +	/**, +	 * Indicates whether this handler mapping support type-level mappings. Default to {@code false}., +	 */, +	protected boolean supportsTypeLevelMappings() {, +		return false;, +	}, +, +			request.setAttribute(HandlerMapping.INTROSPECT_TYPE_LEVEL_MAPPING, supportsTypeLevelMappings());, +	}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/HandlerMapping.java, + * Copyright 2002-2010 the original author or authors., +	 * Name of the boolean {@link HttpServletRequest} attribute that indicates, +	 * whether type-level mappings should be inspected., +	 * <p>Note: This attribute is not required to be supported by all, +	 * HandlerMapping implementations., +	 */, +	String INTROSPECT_TYPE_LEVEL_MAPPING = HandlerMapping.class.getName() + ".introspectTypeLevelMapping";, +, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java, +	/**, +	 * Indicates whether this handler mapping support type-level mappings. Default to {@code false}., +	 */, +	protected boolean supportsTypeLevelMappings() {, +		return false;, +	}, +, +			request.setAttribute(HandlerMapping.INTROSPECT_TYPE_LEVEL_MAPPING, supportsTypeLevelMappings());, +	}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +, +				else if (useTypeLevelMapping(request)) {, +					String[] typeLevelPatterns = getTypeLevelMapping().value();, +					for (String typeLevelPattern : typeLevelPatterns) {, +						if (!typeLevelPattern.startsWith("/")) {, +							typeLevelPattern = "/" + typeLevelPattern;, +						}, +						if (isPathMatchInternal(typeLevelPattern, lookupPath)) {, +							if (mappingInfo.matches(request)) {, +								match = true;, +								mappingInfo.addMatchedPattern(typeLevelPattern);, +							}, +							else {, +								if (!mappingInfo.matchesRequestMethod(request)) {, +									allowedMethods.addAll(mappingInfo.methodNames());, +								}, +								break;, +							}, +						}, +					}, +					mappingInfo.sortMatchedPatterns(pathComparator);, +				}, +		private boolean useTypeLevelMapping(HttpServletRequest request) {, +			if (!hasTypeLevelMapping() || ObjectUtils.isEmpty(getTypeLevelMapping().value())) {, +				return false;, +			}, +			return (Boolean) request.getAttribute(, +							HandlerMapping.INTROSPECT_TYPE_LEVEL_MAPPING);, +		}, +, +			if (useTypeLevelMapping(request)) {, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/HandlerMapping.java, + * Copyright 2002-2010 the original author or authors., +	 * Name of the boolean {@link HttpServletRequest} attribute that indicates, +	 * whether type-level mappings should be inspected., +	 * <p>Note: This attribute is not required to be supported by all, +	 * HandlerMapping implementations., +	 */, +	String INTROSPECT_TYPE_LEVEL_MAPPING = HandlerMapping.class.getName() + ".introspectTypeLevelMapping";, +, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java, +	/**, +	 * Indicates whether this handler mapping support type-level mappings. Default to {@code false}., +	 */, +	protected boolean supportsTypeLevelMappings() {, +		return false;, +	}, +]