[+++ b/spring-web/src/main/java/org/springframework/web/filter/ShallowEtagHeaderFilter.java, +import org.springframework.http.HttpMethod;, +	private static final String HEADER_CACHE_CONTROL = "Cache-Control";, +, +	private static final String DIRECTIVE_NO_STORE = "no-store";, +, +	 * <p>The default implementation returns {@code true} if all conditions match:, +	 * <ul>, +	 * <li>response status codes in the {@code 2xx} series</li>, +	 * <li>request method is a GET</li>, +	 * <li>response Cache-Control header is null or does not contain a "no-store" directive</li>, +	 * </ul>, +	 *, +		return (responseStatusCode >= 200 && responseStatusCode < 300), +				&& HttpMethod.GET.name().equals(request.getMethod()), +				&& (response.getHeader(HEADER_CACHE_CONTROL) == null, +					|| !response.getHeader(HEADER_CACHE_CONTROL).contains(DIRECTIVE_NO_STORE));, +++ b/spring-web/src/main/java/org/springframework/web/filter/ShallowEtagHeaderFilter.java, +import org.springframework.http.HttpMethod;, +	private static final String HEADER_CACHE_CONTROL = "Cache-Control";, +, +	private static final String DIRECTIVE_NO_STORE = "no-store";, +, +	 * <p>The default implementation returns {@code true} if all conditions match:, +	 * <ul>, +	 * <li>response status codes in the {@code 2xx} series</li>, +	 * <li>request method is a GET</li>, +	 * <li>response Cache-Control header is null or does not contain a "no-store" directive</li>, +	 * </ul>, +	 *, +		return (responseStatusCode >= 200 && responseStatusCode < 300), +				&& HttpMethod.GET.name().equals(request.getMethod()), +				&& (response.getHeader(HEADER_CACHE_CONTROL) == null, +					|| !response.getHeader(HEADER_CACHE_CONTROL).contains(DIRECTIVE_NO_STORE));, +++ b/spring-web/src/test/java/org/springframework/web/filter/ShallowEtagHeaderFilterTests.java, + * Copyright 2002-2014 the original author or authors., +, +		request = new MockHttpServletRequest("POST", "/hotels");, +		assertFalse(filter.isEligibleForEtag(request, response, 200, new byte[0]));, +, +		request = new MockHttpServletRequest("POST", "/hotels");, +		request.addHeader("Cache-Control","must-revalidate, no-store");, +		assertFalse(filter.isEligibleForEtag(request, response, 200, new byte[0]));]