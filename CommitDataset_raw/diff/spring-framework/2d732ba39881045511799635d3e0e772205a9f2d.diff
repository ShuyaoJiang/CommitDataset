[+++ b/org.springframework.expression/src/main/java/org/springframework/expression/CacheablePropertyAccessor.java, + * A CacheablePropertyAccessor is an optimized PropertyAccessor where the two parts of accessing the property are, + * separated: (1) resolving the property and (2) retrieving its value. In some cases there is a large cost to, + * discovering which property an expression refers to and once discovered it will always resolve to the same property., + * In these situations a CacheablePropertyAccessor enables the resolution to be done once and a reusable object (an, + * executor) returned that can be called over and over to retrieve the property value without going through resolution, + * again., +	 * Attempt to resolve the named property and return an executor that can be called to get the value of that, +	 * property. Return null if the property cannot be resolved., +	 * Attempt to resolve the named property and return an executor that can be called to set the value of that, +	 * property. Return null if the property cannot be resolved., +	public final void write(EvaluationContext context, Object target, Object name, Object newValue), +			throws AccessException {]