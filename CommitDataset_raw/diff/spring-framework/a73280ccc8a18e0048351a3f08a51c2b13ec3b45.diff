[+++ /dev/null, +++ /dev/null, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/mock/servlet/samples/context/JavaTestContextTests.java, +import static org.springframework.test.web.mock.servlet.request.MockMvcRequestBuilders.*;, +import static org.springframework.test.web.mock.servlet.result.MockMvcResultMatchers.*;, +import org.springframework.test.context.web.WebAppConfiguration;, + * @author Rossen Stoyanchev, + * @author Sam Brannen, +@WebAppConfiguration("src/test/resources/META-INF/web-resources"), +@ContextConfiguration(classes = WebConfig.class), +, +		this.mockMvc.perform(get("/"))//, +		.andExpect(status().isOk())//, +++ /dev/null, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/mock/servlet/samples/context/JavaTestContextTests.java, +import static org.springframework.test.web.mock.servlet.request.MockMvcRequestBuilders.*;, +import static org.springframework.test.web.mock.servlet.result.MockMvcResultMatchers.*;, +import org.springframework.test.context.web.WebAppConfiguration;, + * @author Rossen Stoyanchev, + * @author Sam Brannen, +@WebAppConfiguration("src/test/resources/META-INF/web-resources"), +@ContextConfiguration(classes = WebConfig.class), +, +		this.mockMvc.perform(get("/"))//, +		.andExpect(status().isOk())//, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/mock/servlet/samples/context/SpringSecurityTests.java, +, +import org.springframework.test.context.web.WebAppConfiguration;, + * <p>Note that currently there are no {@linkplain ResultMatcher ResultMatchers}, + * built specifically for asserting the Spring Security context. However, it's, + * quite easy to put them together as shown below, and Spring Security extensions, + * will become available in the near future., + * @author Sam Brannen, +@WebAppConfiguration("src/test/resources/META-INF/web-resources"), +@ContextConfiguration({ "security.xml", "../servlet-context.xml" }), +	private static final String SEC_CONTEXT_ATTR = HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY;, +, +		this.mockMvc = MockMvcBuilders.webAppContextSetup(this.wac)//, +		.addFilters(this.springSecurityFilterChain)//, +		.build();, +		mockMvc.perform(get("/user")).//, +		andExpect(redirectedUrl("http://localhost/spring_security_login"));, +		this.mockMvc.perform(get("/").//, +		with(userDeatilsService("user"))).//, +		andExpect(status().isOk()).//, +		andExpect(forwardedUrl("/WEB-INF/layouts/standardLayout.jsp"));, +		this.mockMvc.perform(get("/")//, +		.with(user("user").roles("DENIED")))//, +		mockMvc.perform(post("/j_spring_security_check").//, +		param("j_username", username).//, +		param("j_password", "password")).//, +		andExpect(redirectedUrl("/")).//, +		andExpect(new ResultMatcher() {, +, +		mockMvc.perform(post("/j_spring_security_check").//, +		param("j_username", username).//, +		param("j_password", "invalid")).//, +		andExpect(redirectedUrl("/spring_security_login?login_error")).//, +		andExpect(new ResultMatcher() {, +, +++ /dev/null, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/mock/servlet/samples/context/JavaTestContextTests.java, +import static org.springframework.test.web.mock.servlet.request.MockMvcRequestBuilders.*;, +import static org.springframework.test.web.mock.servlet.result.MockMvcResultMatchers.*;, +import org.springframework.test.context.web.WebAppConfiguration;, + * @author Rossen Stoyanchev, + * @author Sam Brannen, +@WebAppConfiguration("src/test/resources/META-INF/web-resources"), +@ContextConfiguration(classes = WebConfig.class), +, +		this.mockMvc.perform(get("/"))//, +		.andExpect(status().isOk())//, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/mock/servlet/samples/context/SpringSecurityTests.java, +, +import org.springframework.test.context.web.WebAppConfiguration;, + * <p>Note that currently there are no {@linkplain ResultMatcher ResultMatchers}, + * built specifically for asserting the Spring Security context. However, it's, + * quite easy to put them together as shown below, and Spring Security extensions, + * will become available in the near future., + * @author Sam Brannen, +@WebAppConfiguration("src/test/resources/META-INF/web-resources"), +@ContextConfiguration({ "security.xml", "../servlet-context.xml" }), +	private static final String SEC_CONTEXT_ATTR = HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY;, +, +		this.mockMvc = MockMvcBuilders.webAppContextSetup(this.wac)//, +		.addFilters(this.springSecurityFilterChain)//, +		.build();, +		mockMvc.perform(get("/user")).//, +		andExpect(redirectedUrl("http://localhost/spring_security_login"));, +		this.mockMvc.perform(get("/").//, +		with(userDeatilsService("user"))).//, +		andExpect(status().isOk()).//, +		andExpect(forwardedUrl("/WEB-INF/layouts/standardLayout.jsp"));, +		this.mockMvc.perform(get("/")//, +		.with(user("user").roles("DENIED")))//, +		mockMvc.perform(post("/j_spring_security_check").//, +		param("j_username", username).//, +		param("j_password", "password")).//, +		andExpect(redirectedUrl("/")).//, +		andExpect(new ResultMatcher() {]