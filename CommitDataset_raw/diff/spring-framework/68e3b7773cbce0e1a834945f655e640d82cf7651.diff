[+++ b/spring-aspects/src/test/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspectTests.java, + * Copyright 2002-2013 the original author or authors., +import org.springframework.tests.Assume;, +import org.springframework.tests.TestGroup;, +import static org.hamcrest.CoreMatchers.*;, +import static org.hamcrest.Matchers.not;, +		Assume.group(TestGroup.PERFORMANCE);, +, +		Assume.group(TestGroup.PERFORMANCE);, +, +++ b/spring-aspects/src/test/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspectTests.java, + * Copyright 2002-2013 the original author or authors., +import org.springframework.tests.Assume;, +import org.springframework.tests.TestGroup;, +import static org.hamcrest.CoreMatchers.*;, +import static org.hamcrest.Matchers.not;, +		Assume.group(TestGroup.PERFORMANCE);, +, +		Assume.group(TestGroup.PERFORMANCE);, +, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/ConcurrentBeanFactoryTests.java, + * Copyright 2002-2013 the original author or authors., +, +, +import org.springframework.tests.Assume;, +import org.springframework.tests.TestGroup;, +, +import static org.junit.Assert.*;, +import static test.util.TestResourceUtils.*;, +		Assume.group(TestGroup.PERFORMANCE);, +, +++ b/spring-aspects/src/test/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspectTests.java, + * Copyright 2002-2013 the original author or authors., +import org.springframework.tests.Assume;, +import org.springframework.tests.TestGroup;, +import static org.hamcrest.CoreMatchers.*;, +import static org.hamcrest.Matchers.not;, +		Assume.group(TestGroup.PERFORMANCE);, +, +		Assume.group(TestGroup.PERFORMANCE);, +, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/ConcurrentBeanFactoryTests.java, + * Copyright 2002-2013 the original author or authors., +, +, +import org.springframework.tests.Assume;, +import org.springframework.tests.TestGroup;, +, +import static org.junit.Assert.*;, +import static test.util.TestResourceUtils.*;, +		Assume.group(TestGroup.PERFORMANCE);, +, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/support/BeanFactoryGenericsTests.java, + * Copyright 2002-2013 the original author or authors., +import org.springframework.tests.Assume;, +import org.springframework.tests.TestGroup;, +		Assume.group(TestGroup.LONG_RUNNING);, +, +++ b/spring-aspects/src/test/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspectTests.java, + * Copyright 2002-2013 the original author or authors., +import org.springframework.tests.Assume;, +import org.springframework.tests.TestGroup;, +import static org.hamcrest.CoreMatchers.*;, +import static org.hamcrest.Matchers.not;, +		Assume.group(TestGroup.PERFORMANCE);, +, +		Assume.group(TestGroup.PERFORMANCE);, +, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/ConcurrentBeanFactoryTests.java, + * Copyright 2002-2013 the original author or authors., +, +, +import org.springframework.tests.Assume;, +import org.springframework.tests.TestGroup;, +, +import static org.junit.Assert.*;, +import static test.util.TestResourceUtils.*;, +		Assume.group(TestGroup.PERFORMANCE);, +, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/support/BeanFactoryGenericsTests.java, + * Copyright 2002-2013 the original author or authors., +import org.springframework.tests.Assume;, +import org.springframework.tests.TestGroup;, +		Assume.group(TestGroup.LONG_RUNNING);, +, +++ b/spring-beans/src/test/java/org/springframework/beans/support/PagedListHolderTests.java, + * Copyright 2002-2013 the original author or authors., +, +import org.junit.Test;, +, +import org.springframework.tests.Assume;, +import org.springframework.tests.TestGroup;, +, +import static org.junit.Assert.*;, + * @author Chris Beams, +public class PagedListHolderTests {, +	@Test, +		Assume.group(TestGroup.LONG_RUNNING);, +, +++ b/spring-aspects/src/test/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspectTests.java]