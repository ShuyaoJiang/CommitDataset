[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/RedirectView.java, +import java.net.URLEncoder;, +			targetUrl.append(request.getContextPath());, +		targetUrl.append(getUrl());, +			appendQueryProperties(targetUrl, model, enc);, +		}, +, +		sendRedirect(request, response, targetUrl.toString(), this.http10Compatible);, +			Iterator valueIter = null;, +				String encodedKey = urlEncode(entry.getKey(), encodingScheme);, +				String encodedValue = (value != null ? urlEncode(value.toString(), encodingScheme) : "");, +	 * URL-encode the given input String with the given encoding scheme., +	 * <p>The default implementation uses <code>URLEncoder.encode(input, enc)</code>., +	 * @param input the unencoded input String, +	 * @param encodingScheme the encoding scheme, +	 * @return the encoded output String, +	 * @throws UnsupportedEncodingException if thrown by the JDK URLEncoder, +	 * @see java.net.URLEncoder#encode(String, String), +	 * @see java.net.URLEncoder#encode(String), +	 */, +	protected String urlEncode(String input, String encodingScheme) throws UnsupportedEncodingException {, +		return (input != null ? URLEncoder.encode(input, encodingScheme) : null);, +	}, +, +	/**, +	 * property if set, or the value of the {@link #RESPONSE_STATUS_ATTRIBUTE} attribute. If neither are, +	 * set, it defaults to {@link HttpStatus#SEE_OTHER} (303)., +	 * @return the response, +	protected HttpStatus getHttp11StatusCode(HttpServletRequest request, HttpServletResponse response, String targetUrl) {, +		if (statusCode != null) {, +			return statusCode;]