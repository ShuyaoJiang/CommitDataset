[+++ b/spring-context/src/main/java/org/springframework/scripting/support/StandardScriptEvaluator.java, + * Copyright 2002-2015 the original author or authors., +	private String engineName;, +	 * Construct a new {@code StandardScriptEvaluator}., +	 * Construct a new {@code StandardScriptEvaluator} for the given class loader., +	/**, +	 * Construct a new {@code StandardScriptEvaluator} for the given JSR-223, +	 * {@link ScriptEngineManager} to obtain script engines from., +	 * @param scriptEngineManager the ScriptEngineManager (or subclass thereof) to use, +	 * @since 4.2.2, +	 */, +	public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager) {, +		this.scriptEngineManager = scriptEngineManager;, +	}, +, +	/**, +	 * Set the name of the language meant for evaluating the scripts (e.g. "Groovy")., +	 * <p>This is effectively an alias for {@link #setEngineName "engineName"},, +	 * potentially (but not yet) providing common abbreviations for certain languages, +	 * beyond what the JSR-223 script engine factory exposes., +	 * @see #setEngineName, +	 */, +	public void setLanguage(String language) {, +		this.engineName = language;, +	 * Set the name of the script engine for evaluating the scripts (e.g. "Groovy"),, +	 * as exposed by the JSR-223 script engine factory., +	 * @since 4.2.2, +	 * @see #setLanguage, +	public void setEngineName(String engineName) {, +		this.engineName = engineName;, +	}, +, +	/**, +	 * Set the globally scoped bindings on the underlying script engine manager,, +	 * shared by all scripts, as an alternative to script argument bindings., +	 * @since 4.2.2, +	 * @see #evaluate(ScriptSource, Map), +	 * @see javax.script.ScriptEngineManager#setBindings(Bindings), +	 * @see javax.script.SimpleBindings, +	 */, +	public void setGlobalBindings(Map<String, Object> globalBindings) {, +		if (globalBindings != null) {, +			this.scriptEngineManager.setBindings(StandardScriptUtils.getBindings(globalBindings));, +		}, +	}, +, +	@Override, +	public void setBeanClassLoader(ClassLoader classLoader) {, +		if (this.scriptEngineManager == null) {, +			this.scriptEngineManager = new ScriptEngineManager(classLoader);, +		}, +	public Object evaluate(ScriptSource script, Map<String, Object> argumentBindings) {, +			if (CollectionUtils.isEmpty(argumentBindings)) {, +				return engine.eval(script.getScriptAsString());, +			}, +			else {, +				Bindings bindings = StandardScriptUtils.getBindings(argumentBindings);, +				return engine.eval(script.getScriptAsString(), bindings);, +			}, +, +		if (StringUtils.hasText(this.engineName)) {, +			return StandardScriptUtils.retrieveEngineByName(this.scriptEngineManager, this.engineName);, +++ b/spring-context/src/main/java/org/springframework/scripting/support/StandardScriptEvaluator.java, + * Copyright 2002-2015 the original author or authors., +	private String engineName;, +	 * Construct a new {@code StandardScriptEvaluator}., +	 * Construct a new {@code StandardScriptEvaluator} for the given class loader., +	/**, +	 * Construct a new {@code StandardScriptEvaluator} for the given JSR-223, +	 * {@link ScriptEngineManager} to obtain script engines from., +	 * @param scriptEngineManager the ScriptEngineManager (or subclass thereof) to use, +	 * @since 4.2.2, +	 */, +	public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager) {, +		this.scriptEngineManager = scriptEngineManager;, +	}, +, +	/**, +	 * Set the name of the language meant for evaluating the scripts (e.g. "Groovy")., +	 * <p>This is effectively an alias for {@link #setEngineName "engineName"},, +	 * potentially (but not yet) providing common abbreviations for certain languages, +	 * beyond what the JSR-223 script engine factory exposes., +	 * @see #setEngineName, +	 */, +	public void setLanguage(String language) {, +		this.engineName = language;, +	 * Set the name of the script engine for evaluating the scripts (e.g. "Groovy"),, +	 * as exposed by the JSR-223 script engine factory., +	 * @since 4.2.2, +	 * @see #setLanguage, +	public void setEngineName(String engineName) {, +		this.engineName = engineName;, +	}, +, +	/**, +	 * Set the globally scoped bindings on the underlying script engine manager,, +	 * shared by all scripts, as an alternative to script argument bindings., +	 * @since 4.2.2, +	 * @see #evaluate(ScriptSource, Map), +	 * @see javax.script.ScriptEngineManager#setBindings(Bindings)]