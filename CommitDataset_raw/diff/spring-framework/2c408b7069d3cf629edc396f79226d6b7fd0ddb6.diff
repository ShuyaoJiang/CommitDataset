[+++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +import java.util.Arrays;, +			String delimiter = new String(new char[]{PATH_DELIMITER});, +			String[] pathSegments = StringUtils.tokenizeToStringArray(path, delimiter);, +			return Collections.unmodifiableList(Arrays.asList(pathSegments));, +			String encodedPath = encodeUriComponent(getPath(),encoding, Type.PATH);, +			return new FullPathComponent(encodedPath);		}, +			verifyUriComponent(this.path, Type.PATH);, +			String expandedPath = expandUriComponent(getPath(), uriVariables);, +			return new FullPathComponent(expandedPath);, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +import java.util.Arrays;, +			String delimiter = new String(new char[]{PATH_DELIMITER});, +			String[] pathSegments = StringUtils.tokenizeToStringArray(path, delimiter);, +			return Collections.unmodifiableList(Arrays.asList(pathSegments));, +			String encodedPath = encodeUriComponent(getPath(),encoding, Type.PATH);, +			return new FullPathComponent(encodedPath);		}, +			verifyUriComponent(this.path, Type.PATH);, +			String expandedPath = expandUriComponent(getPath(), uriVariables);, +			return new FullPathComponent(expandedPath);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, +	private static final Pattern NAMES_PATTERN = Pattern.compile("\\{([^/]+?)\\}");, +		Object SKIP_VALUE = UriTemplateVariables.class;, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +import java.util.Arrays;, +			String delimiter = new String(new char[]{PATH_DELIMITER});, +			String[] pathSegments = StringUtils.tokenizeToStringArray(path, delimiter);, +			return Collections.unmodifiableList(Arrays.asList(pathSegments));, +			String encodedPath = encodeUriComponent(getPath(),encoding, Type.PATH);, +			return new FullPathComponent(encodedPath);		}, +			verifyUriComponent(this.path, Type.PATH);, +			String expandedPath = expandUriComponent(getPath(), uriVariables);, +			return new FullPathComponent(expandedPath);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, +	private static final Pattern NAMES_PATTERN = Pattern.compile("\\{([^/]+?)\\}");, +		Object SKIP_VALUE = UriTemplateVariables.class;, +++ b/spring-web/src/test/java/org/springframework/web/util/UriComponentsBuilderTests.java, +import static org.hamcrest.Matchers.*;, +import static org.junit.Assert.*;, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +import java.util.Arrays;, +			String delimiter = new String(new char[]{PATH_DELIMITER});, +			String[] pathSegments = StringUtils.tokenizeToStringArray(path, delimiter);, +			return Collections.unmodifiableList(Arrays.asList(pathSegments));, +			String encodedPath = encodeUriComponent(getPath(),encoding, Type.PATH);, +			return new FullPathComponent(encodedPath);		}, +			verifyUriComponent(this.path, Type.PATH);, +			String expandedPath = expandUriComponent(getPath(), uriVariables);, +			return new FullPathComponent(expandedPath);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, +	private static final Pattern NAMES_PATTERN = Pattern.compile("\\{([^/]+?)\\}");, +		Object SKIP_VALUE = UriTemplateVariables.class;, +++ b/spring-web/src/test/java/org/springframework/web/util/UriComponentsBuilderTests.java, +import static org.hamcrest.Matchers.*;, +import static org.junit.Assert.*;, +++ b/spring-web/src/test/java/org/springframework/web/util/UriComponentsTests.java, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +import java.util.Arrays;, +			String delimiter = new String(new char[]{PATH_DELIMITER});, +			String[] pathSegments = StringUtils.tokenizeToStringArray(path, delimiter);, +			return Collections.unmodifiableList(Arrays.asList(pathSegments));, +			String encodedPath = encodeUriComponent(getPath(),encoding, Type.PATH);, +			return new FullPathComponent(encodedPath);		}, +			verifyUriComponent(this.path, Type.PATH);, +			String expandedPath = expandUriComponent(getPath(), uriVariables);, +			return new FullPathComponent(expandedPath);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, +	private static final Pattern NAMES_PATTERN = Pattern.compile("\\{([^/]+?)\\}");, +		Object SKIP_VALUE = UriTemplateVariables.class;, +++ b/spring-web/src/test/java/org/springframework/web/util/UriComponentsBuilderTests.java, +import static org.hamcrest.Matchers.*;, +import static org.junit.Assert.*;, +++ b/spring-web/src/test/java/org/springframework/web/util/UriComponentsTests.java, +++ b/spring-web/src/test/java/org/springframework/web/util/UriTemplateTests.java]