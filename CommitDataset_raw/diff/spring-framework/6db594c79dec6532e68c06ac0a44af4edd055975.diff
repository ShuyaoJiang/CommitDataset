[+++ b/org.springframework.context/src/main/java/org/springframework/jndi/JndiPropertySource.java, + * <p>Note that {@link org.springframework.web.context.support.StandardServletEnvironment, + * StandardServletEnvironment} includes a {@code JndiPropertySource} by default, and any, + * customization of the underlying {@link JndiLocatorDelegate} may be performed within an, + * {@link org.springframework.context.ApplicationContextInitializer, + * ApplicationContextInitializer} or {@link org.springframework.web.WebApplicationInitializer, + * WebApplicationInitializer}., +++ b/org.springframework.context/src/main/java/org/springframework/jndi/JndiPropertySource.java, + * <p>Note that {@link org.springframework.web.context.support.StandardServletEnvironment, + * StandardServletEnvironment} includes a {@code JndiPropertySource} by default, and any, + * customization of the underlying {@link JndiLocatorDelegate} may be performed within an, + * {@link org.springframework.context.ApplicationContextInitializer, + * ApplicationContextInitializer} or {@link org.springframework.web.WebApplicationInitializer, + * WebApplicationInitializer}., +++ b/org.springframework.context/src/test/java/org/springframework/jndi/JndiPropertySourceTests.java, +		JndiPropertySource ps = new JndiPropertySource("jndiProperties");, +		JndiPropertySource ps = new JndiPropertySource("jndiProperties", jndiLocator);, +		JndiPropertySource ps = new JndiPropertySource("jndiProperties", jndiLocator);, +++ b/org.springframework.context/src/main/java/org/springframework/jndi/JndiPropertySource.java, + * <p>Note that {@link org.springframework.web.context.support.StandardServletEnvironment, + * StandardServletEnvironment} includes a {@code JndiPropertySource} by default, and any, + * customization of the underlying {@link JndiLocatorDelegate} may be performed within an, + * {@link org.springframework.context.ApplicationContextInitializer, + * ApplicationContextInitializer} or {@link org.springframework.web.WebApplicationInitializer, + * WebApplicationInitializer}., +++ b/org.springframework.context/src/test/java/org/springframework/jndi/JndiPropertySourceTests.java, +		JndiPropertySource ps = new JndiPropertySource("jndiProperties");, +		JndiPropertySource ps = new JndiPropertySource("jndiProperties", jndiLocator);, +		JndiPropertySource ps = new JndiPropertySource("jndiProperties", jndiLocator);, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/support/StandardServletEnvironment.java, +import org.springframework.core.env.StandardEnvironment;, + * <p>Contributes {@code ServletConfig}, {@code ServletContext}, and JNDI-based, + * {@link PropertySource} instances. See {@link #customizePropertySources} method, + * documentation for details., +	/** JNDI property source name: {@value} */, +	public static final String JNDI_PROPERTY_SOURCE_NAME = "jndiProperties";, +	 * <li>{@value #JNDI_PROPERTY_SOURCE_NAME}, +	 * take precedence over those in {@value #SERVLET_CONTEXT_PROPERTY_SOURCE_NAME}, and, +	 * properties found in either of the above take precedence over those found in, +	 * {@value #JNDI_PROPERTY_SOURCE_NAME}., +		propertySources.addLast(new JndiPropertySource(JNDI_PROPERTY_SOURCE_NAME));, +++ b/org.springframework.context/src/main/java/org/springframework/jndi/JndiPropertySource.java, + * <p>Note that {@link org.springframework.web.context.support.StandardServletEnvironment, + * StandardServletEnvironment} includes a {@code JndiPropertySource} by default, and any, + * customization of the underlying {@link JndiLocatorDelegate} may be performed within an, + * {@link org.springframework.context.ApplicationContextInitializer, + * ApplicationContextInitializer} or {@link org.springframework.web.WebApplicationInitializer, + * WebApplicationInitializer}., +++ b/org.springframework.context/src/test/java/org/springframework/jndi/JndiPropertySourceTests.java, +		JndiPropertySource ps = new JndiPropertySource("jndiProperties");, +		JndiPropertySource ps = new JndiPropertySource("jndiProperties", jndiLocator);, +		JndiPropertySource ps = new JndiPropertySource("jndiProperties", jndiLocator);, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/support/StandardServletEnvironment.java, +import org.springframework.core.env.StandardEnvironment;, + * <p>Contributes {@code ServletConfig}, {@code ServletContext}, and JNDI-based, + * {@link PropertySource} instances. See {@link #customizePropertySources} method, + * documentation for details., +	/** JNDI property source name: {@value} */, +	public static final String JNDI_PROPERTY_SOURCE_NAME = "jndiProperties";, +	 * <li>{@value #JNDI_PROPERTY_SOURCE_NAME}, +	 * take precedence over those in {@value #SERVLET_CONTEXT_PROPERTY_SOURCE_NAME}, and, +	 * properties found in either of the above take precedence over those found in, +	 * {@value #JNDI_PROPERTY_SOURCE_NAME}., +		propertySources.addLast(new JndiPropertySource(JNDI_PROPERTY_SOURCE_NAME));, +++ b/org.springframework.web/src/test/java/org/springframework/web/context/support/StandardServletEnvironmentTests.java, +		assertThat(sources.precedenceOf(PropertySource.named(StandardServletEnvironment.JNDI_PROPERTY_SOURCE_NAME)), equalTo(2));]