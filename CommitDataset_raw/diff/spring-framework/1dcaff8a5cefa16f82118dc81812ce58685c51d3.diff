[+++ b/spring-web-reactive/src/main/java/org/springframework/http/server/reactive/FilterChainHttpHandler.java, + * {@link HttpHandler} that delegates to a chain of {@link HttpFilter}s followed, + * by a target {@link HttpHandler}., +++ b/spring-web-reactive/src/main/java/org/springframework/http/server/reactive/FilterChainHttpHandler.java, + * {@link HttpHandler} that delegates to a chain of {@link HttpFilter}s followed, + * by a target {@link HttpHandler}., +++ b/spring-web-reactive/src/main/java/org/springframework/http/server/reactive/HttpFilter.java, + * Contract for interception-style, chained processing of HTTP requests., + *, + * <p>Filters may be used to implement cross-cutting, application-agnostic, + * requirements such as security, timeouts, and others., + *, + * <p>{@link FilterChainHttpHandler} provides a way of constructing a chain of, + * {@link HttpFilter}s followed by a target {@link HttpHandler}., + *, + * @see FilterChainHttpHandler, +	/**, +	 * Process the given request and optionally delegate to the next HttpFilter., +	 *, +	 * @param request current HTTP request., +	 * @param response current HTTP response., +	 * @param chain provides a way to delegate to the next HttpFilter., +	 * @return Publisher to indicate when request processing is complete., +	 */, +++ b/spring-web-reactive/src/main/java/org/springframework/http/server/reactive/FilterChainHttpHandler.java, + * {@link HttpHandler} that delegates to a chain of {@link HttpFilter}s followed, + * by a target {@link HttpHandler}., +++ b/spring-web-reactive/src/main/java/org/springframework/http/server/reactive/HttpFilter.java, + * Contract for interception-style, chained processing of HTTP requests., + *, + * <p>Filters may be used to implement cross-cutting, application-agnostic, + * requirements such as security, timeouts, and others., + *, + * <p>{@link FilterChainHttpHandler} provides a way of constructing a chain of, + * {@link HttpFilter}s followed by a target {@link HttpHandler}., + *, + * @see FilterChainHttpHandler, +	/**, +	 * Process the given request and optionally delegate to the next HttpFilter., +	 *, +	 * @param request current HTTP request., +	 * @param response current HTTP response., +	 * @param chain provides a way to delegate to the next HttpFilter., +	 * @return Publisher to indicate when request processing is complete., +	 */, +++ b/spring-web-reactive/src/main/java/org/springframework/http/server/reactive/HttpFilterChain.java, + * Represents a chain of {@link HttpFilter}s allowing each {@link HttpFilter} to, + * delegate to the next in the chain., + *, +	/**, +	 *, +	 * @param request current HTTP request., +	 * @param response current HTTP response., +	 * @return Publisher to indicate when request handling is complete., +	 */, +++ b/spring-web-reactive/src/main/java/org/springframework/http/server/reactive/FilterChainHttpHandler.java, + * {@link HttpHandler} that delegates to a chain of {@link HttpFilter}s followed, + * by a target {@link HttpHandler}., +++ b/spring-web-reactive/src/main/java/org/springframework/http/server/reactive/HttpFilter.java, + * Contract for interception-style, chained processing of HTTP requests., + *, + * <p>Filters may be used to implement cross-cutting, application-agnostic, + * requirements such as security, timeouts, and others., + *, + * <p>{@link FilterChainHttpHandler} provides a way of constructing a chain of, + * {@link HttpFilter}s followed by a target {@link HttpHandler}., + *, + * @see FilterChainHttpHandler, +	/**, +	 * Process the given request and optionally delegate to the next HttpFilter., +	 *, +	 * @param request current HTTP request., +	 * @param response current HTTP response., +	 * @param chain provides a way to delegate to the next HttpFilter., +	 * @return Publisher to indicate when request processing is complete., +	 */, +++ b/spring-web-reactive/src/main/java/org/springframework/http/server/reactive/HttpFilterChain.java, + * Represents a chain of {@link HttpFilter}s allowing each {@link HttpFilter} to, + * delegate to the next in the chain., + *, +	/**, +	 *, +	 * @param request current HTTP request., +	 * @param response current HTTP response., +	 * @return Publisher to indicate when request handling is complete., +	 */, +++ b/spring-web-reactive/src/main/java/org/springframework/http/server/reactive/HttpHandler.java, + * Contract for handling HTTP requests in a non-blocking way., + * @see HttpFilter, +	 * Handle the given request and generate a response., +	 * @param request current HTTP request., +	 * @param response current HTTP response., +	 * @return Publisher to indicate when request handling is complete.]