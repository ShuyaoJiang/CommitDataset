[+++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, +	private boolean allowOptionalTrailingSlash;, +	PathPattern(String patternText, PathPatternParser parser, @Nullable PathElement head,, +			char separator, boolean caseSensitive, boolean allowOptionalTrailingSlash) {, +, +	public PathRemainingMatchInfo getPathRemaining(String path) {, +		return getPathRemaining(PathContainer.parse(path, StandardCharsets.UTF_8));, +	public PathRemainingMatchInfo getPathRemaining(PathContainer pathContainer) {, +		PathMatchResult(Map<String, String> uriVars,, +		PathRemainingMatchInfo(PathContainer pathRemaining) {, +		PathRemainingMatchInfo(PathContainer pathRemaining, PathMatchResult pathMatchResult) {, +			return this.pathRemaining.value();, +	private boolean hasLength(@Nullable PathContainer container) {, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, +	private boolean allowOptionalTrailingSlash;, +	PathPattern(String patternText, PathPatternParser parser, @Nullable PathElement head,, +			char separator, boolean caseSensitive, boolean allowOptionalTrailingSlash) {, +, +	public PathRemainingMatchInfo getPathRemaining(String path) {, +		return getPathRemaining(PathContainer.parse(path, StandardCharsets.UTF_8));, +	public PathRemainingMatchInfo getPathRemaining(PathContainer pathContainer) {, +		PathMatchResult(Map<String, String> uriVars,, +		PathRemainingMatchInfo(PathContainer pathRemaining) {, +		PathRemainingMatchInfo(PathContainer pathRemaining, PathMatchResult pathMatchResult) {, +			return this.pathRemaining.value();, +	private boolean hasLength(@Nullable PathContainer container) {, +++ b/spring-web/src/test/java/org/springframework/web/util/pattern/PathPatternMatcherTests.java, +import static org.junit.Assert.assertNotNull;, +		assertNotNull(pri);, +		assertNotNull(pri);, +		assertNotNull(pri);]