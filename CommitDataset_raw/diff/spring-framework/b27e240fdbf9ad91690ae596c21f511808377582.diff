[+++ b/spring-oxm/src/main/java/org/springframework/oxm/castor/CastorMarshaller.java, +	private Class<?>[] targetClasses;, +	public void setMappingLocations(Resource... mappingLocations) {, +	public void setTargetClass(Class<?> targetClass) {, +		this.targetClasses = new Class<?>[] {targetClass};, +	public void setTargetClasses(Class<?>... targetClasses) {, +	public void setTargetPackages(String... targetPackages) {, +	protected XMLContext createXMLContext(Resource[] mappingLocations, Class<?>[] targetClasses,, +			String[] targetPackages) throws MappingException, ResolverException, IOException {, +, +	protected void marshalDomNode(Object graph, Node node) throws XmlMappingException {, +	protected void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) throws XmlMappingException {, +	protected void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) throws XmlMappingException {, +	@Override, +	protected void marshalSaxHandlers(Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler), +			throws XmlMappingException {, +, +		Marshaller marshaller = xmlContext.createMarshaller();, +		marshaller.setContentHandler(contentHandler);, +		doMarshal(graph, marshaller);, +	}, +, +	@Override, +	protected void marshalOutputStream(Object graph, OutputStream outputStream) throws XmlMappingException, IOException {, +		marshalWriter(graph, new OutputStreamWriter(outputStream, encoding));, +	}, +, +	@Override, +	protected void marshalWriter(Object graph, Writer writer) throws XmlMappingException, IOException {, +		Marshaller marshaller = xmlContext.createMarshaller();, +		marshaller.setWriter(writer);, +		doMarshal(graph, marshaller);, +	}, +, +	private void doMarshal(Object graph, Marshaller marshaller) {, +, +	protected Object unmarshalDomNode(Node node) throws XmlMappingException {, +	protected Object unmarshalXmlEventReader(XMLEventReader eventReader) {, +			return createUnmarshaller().unmarshal(eventReader);, +	protected Object unmarshalXmlStreamReader(XMLStreamReader streamReader) {, +			return createUnmarshaller().unmarshal(streamReader);, +	protected Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource), +	protected Object unmarshalInputStream(InputStream inputStream) throws XmlMappingException, IOException {, +			return createUnmarshaller().unmarshal(new InputSource(inputStream));, +	protected Object unmarshalReader(Reader reader) throws XmlMappingException, IOException {, +			return createUnmarshaller().unmarshal(new InputSource(reader));, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/castor/CastorMarshaller.java, +	private Class<?>[] targetClasses;, +	public void setMappingLocations(Resource... mappingLocations) {, +	public void setTargetClass(Class<?> targetClass) {, +		this.targetClasses = new Class<?>[] {targetClass};, +	public void setTargetClasses(Class<?>... targetClasses) {, +	public void setTargetPackages(String... targetPackages) {, +	protected XMLContext createXMLContext(Resource[] mappingLocations, Class<?>[] targetClasses,, +			String[] targetPackages) throws MappingException, ResolverException, IOException {, +, +	protected void marshalDomNode(Object graph, Node node) throws XmlMappingException {, +	protected void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) throws XmlMappingException {, +	protected void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) throws XmlMappingException {, +	@Override, +	protected void marshalSaxHandlers(Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler), +			throws XmlMappingException {, +, +		Marshaller marshaller = xmlContext.createMarshaller();, +		marshaller.setContentHandler(contentHandler);, +		doMarshal(graph, marshaller);, +	}, +, +	@Override, +	protected void marshalOutputStream(Object graph, OutputStream outputStream) throws XmlMappingException, IOException {, +		marshalWriter(graph, new OutputStreamWriter(outputStream, encoding));, +	}, +, +	@Override, +	protected void marshalWriter(Object graph, Writer writer) throws XmlMappingException, IOException {, +		Marshaller marshaller = xmlContext.createMarshaller();, +		marshaller.setWriter(writer);, +		doMarshal(graph, marshaller);, +	}, +, +	private void doMarshal(Object graph, Marshaller marshaller) {, +, +	protected Object unmarshalDomNode(Node node) throws XmlMappingException {, +	protected Object unmarshalXmlEventReader(XMLEventReader eventReader) {, +			return createUnmarshaller().unmarshal(eventReader);, +	protected Object unmarshalXmlStreamReader(XMLStreamReader streamReader) {, +			return createUnmarshaller().unmarshal(streamReader);, +	protected Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource), +	protected Object unmarshalInputStream(InputStream inputStream) throws XmlMappingException, IOException {, +			return createUnmarshaller().unmarshal(new InputSource(inputStream));, +	protected Object unmarshalReader(Reader reader) throws XmlMappingException, IOException {, +			return createUnmarshaller().unmarshal(new InputSource(reader));, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +	public void setAdapters(XmlAdapter<?, ?>... adapters) {, +	public void setSchemas(Resource... schemaResources) {, +++ b/spring-oxm/src/main/java/org/springframework/oxm/castor/CastorMarshaller.java, +	private Class<?>[] targetClasses;, +	public void setMappingLocations(Resource... mappingLocations) {]