[+++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, + * Represents an immutable collection of URI components, mapping component type to, + * String values. Contains convenience getters for all components. Effectively similar, + * to {@link java.net.URI}, but with more powerful encoding options and support for, + * URI template variables., +	 * @return the encoded URI components, +	 * Replace all URI template variables with the values from a given map., +	 * <p>The given map keys represent variable names; the corresponding values, +	 * represent variable values. The order of variables is not significant., +	 * @return the expanded URI components, +	 * Replace all URI template variables with the values from a given array., +	 * <p>The given array represents variable values. The order of variables is significant., +	 * @param uriVariableValues the URI variable values, +	 * @return the expanded URI components, +	 * Replace all URI template variables with the values from the given, +	 * {@link UriTemplateVariables}., +	 * @param uriVariables the URI template values, +	 * @return the expanded URI components, +	public final UriComponents expand(UriTemplateVariables uriVariables) {, +		Assert.notNull(uriVariables, "'uriVariables' must not be null");, +		return expandInternal(uriVariables);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, + * Represents an immutable collection of URI components, mapping component type to, + * String values. Contains convenience getters for all components. Effectively similar, + * to {@link java.net.URI}, but with more powerful encoding options and support for, + * URI template variables., +	 * @return the encoded URI components, +	 * Replace all URI template variables with the values from a given map., +	 * <p>The given map keys represent variable names; the corresponding values, +	 * represent variable values. The order of variables is not significant., +	 * @return the expanded URI components, +	 * Replace all URI template variables with the values from a given array., +	 * <p>The given array represents variable values. The order of variables is significant., +	 * @param uriVariableValues the URI variable values, +	 * @return the expanded URI components, +	 * Replace all URI template variables with the values from the given, +	 * {@link UriTemplateVariables}., +	 * @param uriVariables the URI template values, +	 * @return the expanded URI components, +	public final UriComponents expand(UriTemplateVariables uriVariables) {, +		Assert.notNull(uriVariables, "'uriVariables' must not be null");, +		return expandInternal(uriVariables);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, + * Copyright 2002-2014 the original author or authors., + * <p>Typical usage involves:, + * <li>Create a {@code UriComponentsBuilder} with one of the static factory methods, + * (such as {@link #fromPath(String)} or {@link #fromUri(URI)})</li>, +	 * @since 4.1, +	 * Initialize all components of this URI builder with the components of the given URI., +	 * Set the URI scheme. The given scheme may contain URI template variables,, +	 * Set the URI user info. The given user info may contain URI template variables,, +	 * and may also be {@code null} to clear the user info of this builder., +	 * Set the URI host. The given host may contain URI template variables,, +	 * and may also be {@code null} to clear the host of this builder., +	 * Set the URI port. Passing {@code -1} will clear the port of this builder., +	 * Append the given path to the existing path of this builder., +	 * The given path may contain URI template variables., +	 * Set the path of this builder overriding all existing path and path segment values., +	 * Append the given path segments to the existing path of this builder., +	 * Each given path segment may contain URI template variables., +	 * Append the given query to the existing query of this builder., +	 * Set the query of this builder overriding all existing query parameters., +	 * Append the given query parameter to the existing query parameters. The, +	 * Add the given query parameters., +	 * Set the query parameter values overriding all existing query values for, +	 * the same parameter. If no values are given, the query parameter is removed., +	 * Set the URI fragment. The given fragment may contain URI template variables,, +	 * and may also be {@code null} to clear the fragment of this builder., +]