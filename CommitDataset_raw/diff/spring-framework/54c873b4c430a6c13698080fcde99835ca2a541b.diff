[+++ b/spring-context/src/main/java/org/springframework/validation/DataBinder.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.List;, +	private final List<Validator> validators = new ArrayList<Validator>();, +	 * @see #addValidators(Validator...), +	 * @see #replaceValidators(Validator...), +		assertValidators(validator);, +		this.validators.clear();, +		this.validators.add(validator);, +	}, +, +	private void assertValidators(Validator... validators) {, +		Assert.notNull(validators, "Validators required");, +		for (Validator validator : validators) {, +		}, +	 * Add Validators to apply after each binding step., +	 * @see #setValidator(Validator), +	 * @see #replaceValidators(Validator...), +	public void addValidators(Validator... validators) {, +		assertValidators(validators);, +		this.validators.addAll(Arrays.asList(validators));, +	/**, +	 * Replace the Validators to apply after each binding step., +	 * @see #setValidator(Validator), +	 * @see #addValidators(Validator...), +	 */, +	public void replaceValidators(Validator... validators) {, +		assertValidators(validators);, +		this.validators.clear();, +		this.validators.addAll(Arrays.asList(validators));, +	}, +, +	/**, +	 * Return the primary Validator to apply after each binding step, if any., +	 */, +	public Validator getValidator() {, +		return this.validators.size() > 0 ? this.validators.get(0) : null;, +	}, +, +	/**, +	 * Return the Validators to apply after data binding., +	 */, +	public List<Validator> getValidators() {, +		return Collections.unmodifiableList(this.validators);, +	}, +	 * Invoke the specified Validators, if any., +		for (Validator validator : this.validators) {, +			validator.validate(getTarget(), getBindingResult());, +		}, +	 * Invoke the specified Validators, if any, with the given validation hints., +		for (Validator validator : getValidators()) {, +	}]