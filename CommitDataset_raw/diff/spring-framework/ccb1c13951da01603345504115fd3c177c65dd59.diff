[+++ b/spring-web/src/test/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilderTests.java, +import org.joda.time.DateTimeZone;, +		Long timestamp = 1322903730000L;, +		DateTime dateTime = new DateTime(timestamp, DateTimeZone.UTC);, +		assertEquals(timestamp.toString(), new String(objectMapper.writeValueAsBytes(dateTime), "UTF-8"));, +		DateTime dateTime = new DateTime(1322903730000L, DateTimeZone.UTC);, +		DateTime dateTime = new DateTime(1322903730000L, DateTimeZone.UTC);, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilderTests.java, +import org.joda.time.DateTimeZone;, +		Long timestamp = 1322903730000L;, +		DateTime dateTime = new DateTime(timestamp, DateTimeZone.UTC);, +		assertEquals(timestamp.toString(), new String(objectMapper.writeValueAsBytes(dateTime), "UTF-8"));, +		DateTime dateTime = new DateTime(1322903730000L, DateTimeZone.UTC);, +		DateTime dateTime = new DateTime(1322903730000L, DateTimeZone.UTC);, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBeanTests.java, +import org.joda.time.DateTimeZone;, +		Long timestamp = 1322903730000L;, +		DateTime dateTime = new DateTime(timestamp, DateTimeZone.UTC);, +		assertEquals(timestamp.toString(), new String(objectMapper.writeValueAsBytes(dateTime), "UTF-8"));, +		DateTime dateTime = new DateTime(1322903730000L, DateTimeZone.UTC);, +		DateTime dateTime = new DateTime(1322903730000L, DateTimeZone.UTC);]