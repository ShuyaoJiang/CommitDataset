[+++ b/org.springframework.context/src/main/java/org/springframework/ui/format/FormatterRegistry.java, +	 * On format, the decorator first coerses the instance of type to &lt;T&gt;, then delegates to <code>targetFormatter</code> to format the value., +	 * On parse, the decorator first delegates to the formatter to parse a &lt;T&gt;, then coerses the parsed value to type., +	 * Adds a AnnotationFormatterFactory that returns the Formatter for properties annotated with a specific annotation., +	 * @return the Formatter, or <code>null</code> if no suitable one is registered, +++ b/org.springframework.context/src/main/java/org/springframework/ui/format/FormatterRegistry.java, +	 * On format, the decorator first coerses the instance of type to &lt;T&gt;, then delegates to <code>targetFormatter</code> to format the value., +	 * On parse, the decorator first delegates to the formatter to parse a &lt;T&gt;, then coerses the parsed value to type., +	 * Adds a AnnotationFormatterFactory that returns the Formatter for properties annotated with a specific annotation., +	 * @return the Formatter, or <code>null</code> if no suitable one is registered, +++ /dev/null, +++ b/org.springframework.context/src/main/java/org/springframework/ui/format/FormatterRegistry.java, +	 * On format, the decorator first coerses the instance of type to &lt;T&gt;, then delegates to <code>targetFormatter</code> to format the value., +	 * On parse, the decorator first delegates to the formatter to parse a &lt;T&gt;, then coerses the parsed value to type., +	 * Adds a AnnotationFormatterFactory that returns the Formatter for properties annotated with a specific annotation., +	 * @return the Formatter, or <code>null</code> if no suitable one is registered, +++ /dev/null, +++ b/org.springframework.context/src/test/java/org/springframework/ui/format/GenericFormatterRegistryTests.java, +import java.lang.annotation.Documented;, +import java.lang.annotation.ElementType;, +import java.lang.annotation.Retention;, +import java.lang.annotation.RetentionPolicy;, +import java.lang.annotation.Target;, +	@Currency, +			AnnotationFormatterFactory<Currency, BigDecimal> {, +		public Formatter<BigDecimal> getFormatter(Currency annotation) {, +	@Target( { ElementType.METHOD, ElementType.FIELD }), +	@Retention(RetentionPolicy.RUNTIME), +	@Documented, +	public @interface Currency {, +, +	}, +]