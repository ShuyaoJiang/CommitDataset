[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/AbstractHttpMessageWriterResponse.java, +import java.util.function.Supplier;, +		return exchange.<Supplier<Stream<HttpMessageWriter<?>>>>getAttribute(Router.HTTP_MESSAGE_WRITERS_ATTRIBUTE), +				.orElseThrow(() -> new IllegalStateException("Could not find HttpMessageWriters in ServerWebExchange")), +				.get();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/AbstractHttpMessageWriterResponse.java, +import java.util.function.Supplier;, +		return exchange.<Supplier<Stream<HttpMessageWriter<?>>>>getAttribute(Router.HTTP_MESSAGE_WRITERS_ATTRIBUTE), +				.orElseThrow(() -> new IllegalStateException("Could not find HttpMessageWriters in ServerWebExchange")), +				.get();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultRequest.java, +import java.util.function.Supplier;, +			return exchange.<Supplier<Stream<HttpMessageReader<?>>>>getAttribute(Router.HTTP_MESSAGE_READERS_ATTRIBUTE), +					.orElseThrow(() -> new IllegalStateException("Could not find HttpMessageReaders in ServerWebExchange")), +					.get();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/AbstractHttpMessageWriterResponse.java, +import java.util.function.Supplier;, +		return exchange.<Supplier<Stream<HttpMessageWriter<?>>>>getAttribute(Router.HTTP_MESSAGE_WRITERS_ATTRIBUTE), +				.orElseThrow(() -> new IllegalStateException("Could not find HttpMessageWriters in ServerWebExchange")), +				.get();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultRequest.java, +import java.util.function.Supplier;, +			return exchange.<Supplier<Stream<HttpMessageReader<?>>>>getAttribute(Router.HTTP_MESSAGE_READERS_ATTRIBUTE), +					.orElseThrow(() -> new IllegalStateException("Could not find HttpMessageReaders in ServerWebExchange")), +					.get();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultResponseBuilder.java, +	public <T, S extends Publisher<T>> Response<S> stream(S publisher, Class<T> elementClass) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/AbstractHttpMessageWriterResponse.java, +import java.util.function.Supplier;, +		return exchange.<Supplier<Stream<HttpMessageWriter<?>>>>getAttribute(Router.HTTP_MESSAGE_WRITERS_ATTRIBUTE), +				.orElseThrow(() -> new IllegalStateException("Could not find HttpMessageWriters in ServerWebExchange")), +				.get();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultRequest.java, +import java.util.function.Supplier;, +			return exchange.<Supplier<Stream<HttpMessageReader<?>>>>getAttribute(Router.HTTP_MESSAGE_READERS_ATTRIBUTE), +					.orElseThrow(() -> new IllegalStateException("Could not find HttpMessageReaders in ServerWebExchange")), +					.get();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultResponseBuilder.java, +	public <T, S extends Publisher<T>> Response<S> stream(S publisher, Class<T> elementClass) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/PublisherResponse.java, +class PublisherResponse<T, S extends Publisher<T>> extends AbstractHttpMessageWriterResponse<S> {, +	private final S body;, +									 S body, Class<T> aClass) {, +	public S body() {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/AbstractHttpMessageWriterResponse.java, +import java.util.function.Supplier;, +		return exchange.<Supplier<Stream<HttpMessageWriter<?>>>>getAttribute(Router.HTTP_MESSAGE_WRITERS_ATTRIBUTE), +				.orElseThrow(() -> new IllegalStateException("Could not find HttpMessageWriters in ServerWebExchange")), +				.get();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultRequest.java, +import java.util.function.Supplier;, +			return exchange.<Supplier<Stream<HttpMessageReader<?>>>>getAttribute(Router.HTTP_MESSAGE_READERS_ATTRIBUTE), +					.orElseThrow(() -> new IllegalStateException("Could not find HttpMessageReaders in ServerWebExchange")), +					.get();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultResponseBuilder.java, +	public <T, S extends Publisher<T>> Response<S> stream(S publisher, Class<T> elementClass) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/PublisherResponse.java, +class PublisherResponse<T, S extends Publisher<T>> extends AbstractHttpMessageWriterResponse<S> {, +	private final S body;, +									 S body, Class<T> aClass) {, +	public S body() {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/Response.java, +		<T, S extends Publisher<T>> Response<S> stream(S publisher, Class<T> elementClass);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/AbstractHttpMessageWriterResponse.java, +import java.util.function.Supplier;, +		return exchange.<Supplier<Stream<HttpMessageWriter<?>>>>getAttribute(Router.HTTP_MESSAGE_WRITERS_ATTRIBUTE), +				.orElseThrow(() -> new IllegalStateException("Could not find HttpMessageWriters in ServerWebExchange")), +				.get();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultRequest.java, +import java.util.function.Supplier;, +			return exchange.<Supplier<Stream<HttpMessageReader<?>>>>getAttribute(Router.HTTP_MESSAGE_READERS_ATTRIBUTE), +					.orElseThrow(() -> new IllegalStateException("Could not find HttpMessageReaders in ServerWebExchange")), +					.get();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultResponseBuilder.java, +	public <T, S extends Publisher<T>> Response<S> stream(S publisher, Class<T> elementClass) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/PublisherResponse.java, +class PublisherResponse<T, S extends Publisher<T>> extends AbstractHttpMessageWriterResponse<S> {, +	private final S body;, +									 S body, Class<T> aClass) {, +	public S body() {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/Response.java, +		<T, S extends Publisher<T>> Response<S> stream(S publisher, Class<T> elementClass);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/Router.java, +	 * Name of the {@link ServerWebExchange} attribute that contains a {@link Supplier} to the, +	 * Name of the {@link ServerWebExchange} attribute that contains a {@link Supplier} to the, +		attributes.put(HTTP_MESSAGE_READERS_ATTRIBUTE, configuration.messageReaders());, +		attributes.put(HTTP_MESSAGE_WRITERS_ATTRIBUTE, configuration.messageWriters());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/AbstractHttpMessageWriterResponse.java, +import java.util.function.Supplier;, +		return exchange.<Supplier<Stream<HttpMessageWriter<?>>>>getAttribute(Router.HTTP_MESSAGE_WRITERS_ATTRIBUTE), +				.orElseThrow(() -> new IllegalStateException("Could not find HttpMessageWriters in ServerWebExchange")), +				.get();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultRequest.java, +import java.util.function.Supplier;, +			return exchange.<Supplier<Stream<HttpMessageReader<?>>>>getAttribute(Router.HTTP_MESSAGE_READERS_ATTRIBUTE), +					.orElseThrow(() -> new IllegalStateException("Could not find HttpMessageReaders in ServerWebExchange")), +					.get();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultResponseBuilder.java, +	public <T, S extends Publisher<T>> Response<S> stream(S publisher, Class<T> elementClass) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/PublisherResponse.java]