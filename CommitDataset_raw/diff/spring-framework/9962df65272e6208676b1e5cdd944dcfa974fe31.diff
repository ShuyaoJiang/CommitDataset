[+++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.java, + * Copyright 2002-2018 the original author or authors., +				if (instance == null) {, +		}, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.java, + * Copyright 2002-2018 the original author or authors., +				if (instance == null) {, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, + * Copyright 2002-2018 the original author or authors., +		return (pd != null ? new BeanPropertyHandler(pd) : null);, +		throw new NotWritablePropertyException(getRootClass(), getNestedPath() + propertyName,, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.java, + * Copyright 2002-2018 the original author or authors., +				if (instance == null) {, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, + * Copyright 2002-2018 the original author or authors., +		return (pd != null ? new BeanPropertyHandler(pd) : null);, +		throw new NotWritablePropertyException(getRootClass(), getNestedPath() + propertyName,, +++ b/spring-beans/src/main/java/org/springframework/beans/DirectFieldAccessor.java, + * Copyright 2002-2018 the original author or authors., +	@Nullable, +		}, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.java, + * Copyright 2002-2018 the original author or authors., +				if (instance == null) {, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, + * Copyright 2002-2018 the original author or authors., +		return (pd != null ? new BeanPropertyHandler(pd) : null);, +		throw new NotWritablePropertyException(getRootClass(), getNestedPath() + propertyName,, +++ b/spring-beans/src/main/java/org/springframework/beans/DirectFieldAccessor.java, + * Copyright 2002-2018 the original author or authors., +	@Nullable, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +			// A previously detected exception with proper bean creation context already,, +			// or illegal singleton state to be communicated up to DefaultSingletonBeanRegistry., +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.java, + * Copyright 2002-2018 the original author or authors., +				if (instance == null) {, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, + * Copyright 2002-2018 the original author or authors., +		return (pd != null ? new BeanPropertyHandler(pd) : null);, +		throw new NotWritablePropertyException(getRootClass(), getNestedPath() + propertyName,, +++ b/spring-beans/src/main/java/org/springframework/beans/DirectFieldAccessor.java, + * Copyright 2002-2018 the original author or authors., +	@Nullable, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +			// A previously detected exception with proper bean creation context already,, +			// or illegal singleton state to be communicated up to DefaultSingletonBeanRegistry., +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/PathEditor.java, + * Copyright 2002-2018 the original author or authors., +				// Not a valid URI (let's try as Spring resource location),, +				// or a URI scheme not registered for NIO (let's try URL, +				// protocol handlers via Spring's resource mechanism)., +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.java, + * Copyright 2002-2018 the original author or authors., +				if (instance == null) {, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, + * Copyright 2002-2018 the original author or authors., +		return (pd != null ? new BeanPropertyHandler(pd) : null);, +		throw new NotWritablePropertyException(getRootClass(), getNestedPath() + propertyName,, +++ b/spring-beans/src/main/java/org/springframework/beans/DirectFieldAccessor.java, + * Copyright 2002-2018 the original author or authors., +	@Nullable, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +			// A previously detected exception with proper bean creation context already,, +			// or illegal singleton state to be communicated up to DefaultSingletonBeanRegistry., +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/PathEditor.java, + * Copyright 2002-2018 the original author or authors., +				// Not a valid URI (let's try as Spring resource location),, +				// or a URI scheme not registered for NIO (let's try URL, +				// protocol handlers via Spring's resource mechanism)., +++ /dev/null, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.java, + * Copyright 2002-2018 the original author or authors., +				if (instance == null) {, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, + * Copyright 2002-2018 the original author or authors., +		return (pd != null ? new BeanPropertyHandler(pd) : null);, +		throw new NotWritablePropertyException(getRootClass(), getNestedPath() + propertyName,, +++ b/spring-beans/src/main/java/org/springframework/beans/DirectFieldAccessor.java, + * Copyright 2002-2018 the original author or authors., +	@Nullable, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +			// A previously detected exception with proper bean creation context already,, +			// or illegal singleton state to be communicated up to DefaultSingletonBeanRegistry., +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/PathEditor.java, + * Copyright 2002-2018 the original author or authors., +				// Not a valid URI (let's try as Spring resource location),, +				// or a URI scheme not registered for NIO (let's try URL, +				// protocol handlers via Spring's resource mechanism).]