[+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +				propertySources.addFirst(propertySource);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +				propertySources.addFirst(propertySource);, +++ b/spring-context/src/test/java/org/springframework/context/annotation/PropertySourceAnnotationTests.java, +	@Test, +	public void orderingWithAndWithoutNameAndFourResourceLocations() {, +		// SPR-12198: p4 should 'win' as it was registered last, +		AnnotationConfigApplicationContext ctxWithoutName = new AnnotationConfigApplicationContext(ConfigWithFourResourceLocations.class);, +		assertThat(ctxWithoutName.getEnvironment().getProperty("testbean.name"), equalTo("p4TestBean"));, +	}, +, +	@Import(ConfigImportedWithSameSourceImportedInDifferentOrder.class), +, +	@Configuration, +	@PropertySource(, +			value = {, +					"classpath:org/springframework/context/annotation/p1.properties",, +					"classpath:org/springframework/context/annotation/p2.properties",, +					"classpath:org/springframework/context/annotation/p3.properties",, +					"classpath:org/springframework/context/annotation/p4.properties", +			}), +	static class ConfigWithFourResourceLocations {, +	}, +, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +				propertySources.addFirst(propertySource);, +++ b/spring-context/src/test/java/org/springframework/context/annotation/PropertySourceAnnotationTests.java, +	@Test, +	public void orderingWithAndWithoutNameAndFourResourceLocations() {, +		// SPR-12198: p4 should 'win' as it was registered last, +		AnnotationConfigApplicationContext ctxWithoutName = new AnnotationConfigApplicationContext(ConfigWithFourResourceLocations.class);, +		assertThat(ctxWithoutName.getEnvironment().getProperty("testbean.name"), equalTo("p4TestBean"));, +	}, +, +	@Import(ConfigImportedWithSameSourceImportedInDifferentOrder.class), +, +	@Configuration, +	@PropertySource(, +			value = {, +					"classpath:org/springframework/context/annotation/p1.properties",, +					"classpath:org/springframework/context/annotation/p2.properties",, +					"classpath:org/springframework/context/annotation/p3.properties",, +					"classpath:org/springframework/context/annotation/p4.properties", +			}), +	static class ConfigWithFourResourceLocations {, +	}, +, +++ b/spring-context/src/test/java/org/springframework/context/annotation/p3.properties, +testbean.name=p3TestBean, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +				propertySources.addFirst(propertySource);, +++ b/spring-context/src/test/java/org/springframework/context/annotation/PropertySourceAnnotationTests.java, +	@Test, +	public void orderingWithAndWithoutNameAndFourResourceLocations() {, +		// SPR-12198: p4 should 'win' as it was registered last, +		AnnotationConfigApplicationContext ctxWithoutName = new AnnotationConfigApplicationContext(ConfigWithFourResourceLocations.class);, +		assertThat(ctxWithoutName.getEnvironment().getProperty("testbean.name"), equalTo("p4TestBean"));, +	}, +, +	@Import(ConfigImportedWithSameSourceImportedInDifferentOrder.class), +, +	@Configuration, +	@PropertySource(, +			value = {, +					"classpath:org/springframework/context/annotation/p1.properties",, +					"classpath:org/springframework/context/annotation/p2.properties",, +					"classpath:org/springframework/context/annotation/p3.properties",, +					"classpath:org/springframework/context/annotation/p4.properties", +			}), +	static class ConfigWithFourResourceLocations {, +	}, +, +++ b/spring-context/src/test/java/org/springframework/context/annotation/p3.properties, +testbean.name=p3TestBean, +++ b/spring-context/src/test/java/org/springframework/context/annotation/p4.properties, +testbean.name=p4TestBean]