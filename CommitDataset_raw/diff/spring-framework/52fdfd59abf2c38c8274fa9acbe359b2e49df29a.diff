[+++ b/spring-test/src/main/java/org/springframework/test/util/XpathExpectationsHelper.java, +import static org.hamcrest.MatcherAssert.*;, +import static org.springframework.test.util.AssertionErrors.*;, +, +++ b/spring-test/src/main/java/org/springframework/test/util/XpathExpectationsHelper.java, +import static org.hamcrest.MatcherAssert.*;, +import static org.springframework.test.util.AssertionErrors.*;, +, +++ b/spring-web/src/main/java/org/springframework/web/client/HttpMessageConverterExtractor.java, + * Response extractor that uses the given {@linkplain HttpMessageConverter entity converters}, + * to convert the response into a type {@code T}., + * @see RestTemplate, +, +	 * Create a new instance of the {@code HttpMessageConverterExtractor} with the given response, +	 * type and message converters. The given converters must support the response type., +	 * Creates a new instance of the {@code HttpMessageConverterExtractor} with the given response, +	 * type and message converters. The given converters must support the response type., +, +, +		throw new RestClientException("Could not extract response: no suitable HttpMessageConverter found " +, +				"for response type [" + this.responseType + "] and content type [" + contentType + "]");, +++ b/spring-test/src/main/java/org/springframework/test/util/XpathExpectationsHelper.java, +import static org.hamcrest.MatcherAssert.*;, +import static org.springframework.test.util.AssertionErrors.*;, +, +++ b/spring-web/src/main/java/org/springframework/web/client/HttpMessageConverterExtractor.java, + * Response extractor that uses the given {@linkplain HttpMessageConverter entity converters}, + * to convert the response into a type {@code T}., + * @see RestTemplate, +, +	 * Create a new instance of the {@code HttpMessageConverterExtractor} with the given response, +	 * type and message converters. The given converters must support the response type., +	 * Creates a new instance of the {@code HttpMessageConverterExtractor} with the given response, +	 * type and message converters. The given converters must support the response type., +, +, +		throw new RestClientException("Could not extract response: no suitable HttpMessageConverter found " +, +				"for response type [" + this.responseType + "] and content type [" + contentType + "]");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, +++ b/spring-test/src/main/java/org/springframework/test/util/XpathExpectationsHelper.java, +import static org.hamcrest.MatcherAssert.*;, +import static org.springframework.test.util.AssertionErrors.*;, +, +++ b/spring-web/src/main/java/org/springframework/web/client/HttpMessageConverterExtractor.java, + * Response extractor that uses the given {@linkplain HttpMessageConverter entity converters}, + * to convert the response into a type {@code T}., + * @see RestTemplate, +, +	 * Create a new instance of the {@code HttpMessageConverterExtractor} with the given response, +	 * type and message converters. The given converters must support the response type., +	 * Creates a new instance of the {@code HttpMessageConverterExtractor} with the given response, +	 * type and message converters. The given converters must support the response type., +, +, +		throw new RestClientException("Could not extract response: no suitable HttpMessageConverter found " +, +				"for response type [" + this.responseType + "] and content type [" + contentType + "]");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceChainRegistration.java, +, +++ b/spring-test/src/main/java/org/springframework/test/util/XpathExpectationsHelper.java, +import static org.hamcrest.MatcherAssert.*;, +import static org.springframework.test.util.AssertionErrors.*;, +, +++ b/spring-web/src/main/java/org/springframework/web/client/HttpMessageConverterExtractor.java, + * Response extractor that uses the given {@linkplain HttpMessageConverter entity converters}, + * to convert the response into a type {@code T}., + * @see RestTemplate, +, +	 * Create a new instance of the {@code HttpMessageConverterExtractor} with the given response, +	 * type and message converters. The given converters must support the response type., +	 * Creates a new instance of the {@code HttpMessageConverterExtractor} with the given response, +	 * type and message converters. The given converters must support the response type., +, +, +		throw new RestClientException("Could not extract response: no suitable HttpMessageConverter found " +, +				"for response type [" + this.responseType + "] and content type [" + contentType + "]");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceChainRegistration.java, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/CachingResourceResolver.java, +++ b/spring-test/src/main/java/org/springframework/test/util/XpathExpectationsHelper.java, +import static org.hamcrest.MatcherAssert.*;, +import static org.springframework.test.util.AssertionErrors.*;, +, +++ b/spring-web/src/main/java/org/springframework/web/client/HttpMessageConverterExtractor.java, + * Response extractor that uses the given {@linkplain HttpMessageConverter entity converters}, + * to convert the response into a type {@code T}., + * @see RestTemplate, +, +	 * Create a new instance of the {@code HttpMessageConverterExtractor} with the given response, +	 * type and message converters. The given converters must support the response type., +	 * Creates a new instance of the {@code HttpMessageConverterExtractor} with the given response, +	 * type and message converters. The given converters must support the response type., +, +, +		throw new RestClientException("Could not extract response: no suitable HttpMessageConverter found " +, +				"for response type [" + this.responseType + "] and content type [" + contentType + "]");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceChainRegistration.java, +]