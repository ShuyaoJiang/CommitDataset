[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanUtils.java, + * @author Sam Brannen, +	private static final Map<Class<?>, Boolean> unknownEditorTypes =, +			Collections.synchronizedMap(new WeakHashMap<Class<?>, Boolean>());, +	public static <T> T instantiateClass(Class<T> clazz) throws BeanInstantiationException {, +	public static <T> T instantiateClass(Constructor<T> ctor, Object... args) throws BeanInstantiationException {, +	public static Method findMethod(Class<?> clazz, String methodName, Class<?>... paramTypes) {, +	public static Method findDeclaredMethod(Class<?> clazz, String methodName, Class<?>[] paramTypes) {, +	public static Method findMethodWithMinimalParameters(Class<?> clazz, String methodName), +	public static Method findDeclaredMethodWithMinimalParameters(Class<?> clazz, String methodName), +	public static Method resolveSignature(String signature, Class<?> clazz) {, +			Class<?>[] parameterTypes = new Class[parameterTypeNames.length];, +	public static PropertyDescriptor[] getPropertyDescriptors(Class<?> clazz) throws BeansException {, +	public static PropertyDescriptor getPropertyDescriptor(Class<?> clazz, String propertyName), +	public static PropertyEditor findEditorByConvention(Class<?> targetType) {, +			Class<?> editorClass = cl.loadClass(editorName);, +	public static Class<?> findPropertyType(String propertyName, Class<?>[] beanClasses) {, +			for (Class<?> beanClass : beanClasses) {, +	public static boolean isSimpleProperty(Class<?> clazz) {, +	public static boolean isSimpleValueType(Class<?> clazz) {, +	public static void copyProperties(Object source, Object target, Class<?> editable), +	private static void copyProperties(Object source, Object target, Class<?> editable, String[] ignoreProperties), +		Class<?> actualEditable = target.getClass();, +		List<String> ignoreList = (ignoreProperties != null) ? Arrays.asList(ignoreProperties) : null;]