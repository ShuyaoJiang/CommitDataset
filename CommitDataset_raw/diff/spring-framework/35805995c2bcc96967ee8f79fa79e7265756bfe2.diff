[+++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, +		MediaType contentType = updateContentType(message, mediaType);, +		Flux<DataBuffer> body = this.encoder.encode(, +				inputStream, message.bufferFactory(), elementType, contentType, hints);, +		return isStreamingMediaType(contentType) ?, +	private MediaType updateContentType(ReactiveHttpOutputMessage message, MediaType mediaType) {, +		MediaType result = message.getHeaders().getContentType();, +		if (result != null) {, +			return result;, +		}, +		MediaType fallback = this.defaultMediaType;, +		result = useFallback(mediaType, fallback) ? fallback : mediaType;, +		if (result != null) {, +			result = addDefaultCharset(result, fallback);, +			message.getHeaders().setContentType(result);, +		}, +		return result;, +	}, +]