[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.java, +	 * @see java.sql.ResultSet#getDate(int), +	 */, +	@Override, +	public Date getDate(int columnIndex) throws InvalidResultSetAccessException {, +		try {, +			return this.resultSet.getDate(columnIndex);, +		}, +		catch (SQLException se) {, +			throw new InvalidResultSetAccessException(se);, +		}, +	}, +, +	/**, +	 * @see java.sql.ResultSet#getDate(String), +	 */, +	@Override, +	public Date getDate(String columnLabel) throws InvalidResultSetAccessException {, +		return getDate(findColumn(columnLabel));, +	}, +, +	/**, +	 * @see java.sql.ResultSet#getDate(int, Calendar), +	 * @see java.sql.ResultSet#getDate(String, Calendar), +, +	 * @see java.sql.ResultSet#getNString(int), +	public String getNString(int columnIndex) throws InvalidResultSetAccessException {, +			return this.resultSet.getNString(columnIndex);, +	 * @see java.sql.ResultSet#getNString(String), +	 */, +	@Override, +	public String getNString(String columnLabel) throws InvalidResultSetAccessException {, +		return getNString(findColumn(columnLabel));, +	}, +, +	/**, +	 * @see java.sql.ResultSet#getObject(String), +	 */, +	@Override, +	public Object getObject(String columnLabel) throws InvalidResultSetAccessException {, +		return getObject(findColumn(columnLabel));, +	}, +, +	/**, +	 * @see java.sql.ResultSet#getObject(int, Map), +	 */, +	@Override, +	public Object getObject(int columnIndex, Map<String, Class<?>> map) throws InvalidResultSetAccessException {, +		try {, +			return this.resultSet.getObject(columnIndex, map);, +		}, +		catch (SQLException se) {, +			throw new InvalidResultSetAccessException(se);, +		}, +	}, +, +	/**, +	 * @see java.sql.ResultSet#getObject(String, Map), +	 * @see java.sql.ResultSet#getObject(int, Class), +	public <T> T getObject(int columnIndex, Class<T> type) throws InvalidResultSetAccessException {, +		try {, +			return this.resultSet.getObject(columnIndex, type);, +		}, +		catch (SQLException se) {, +			throw new InvalidResultSetAccessException(se);, +		}, +	}, +, +	/**, +	 * @see java.sql.ResultSet#getObject(String, Class), +	 */, +	@Override, +	public <T> T getObject(String columnLabel, Class<T> type) throws InvalidResultSetAccessException {, +		return getObject(findColumn(columnLabel), type);, +	 * @see java.sql.ResultSet#getTime(int, Calendar), +	public Time getTime(int columnIndex, Calendar cal) throws InvalidResultSetAccessException {, +			return this.resultSet.getTime(columnIndex, cal);, +	 * @see java.sql.ResultSet#getTime(String, Calendar), +	 */, +	@Override, +	public Time getTime(String columnLabel, Calendar cal) throws InvalidResultSetAccessException {, +		return getTime(findColumn(columnLabel), cal);, +	}, +, +	/**, +	/**, +	 * @see java.sql.ResultSet#getTimestamp(int, Calendar), +	 */, +	@Override, +	public Timestamp getTimestamp(int columnIndex, Calendar cal) throws InvalidResultSetAccessException {, +		try {, +			return this.resultSet.getTimestamp(columnIndex, cal);, +		}, +		catch (SQLException se) {, +			throw new InvalidResultSetAccessException(se);, +		}, +	}, +, +	/**, +	 * @see java.sql.ResultSet#getTimestamp(String, Calendar)]