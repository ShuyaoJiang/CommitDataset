[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/DatabasePopulatorConfigUtils.java, + * Copyright 2002-2016 the original author or authors., + * @author Stephane Nicoll, +			String separator = getSeparator(element, scriptElement);, +			if (separator != null) {, +				delegate.addPropertyValue("separator", new TypedStringValue(separator));, +	private static String getSeparator(Element element, Element scriptElement) {, +		String scriptSeparator = scriptElement.getAttribute("separator");, +		if (StringUtils.hasLength(scriptSeparator)) {, +			return scriptSeparator;, +		}, +		String elementSeparator = element.getAttribute("separator");, +		if (StringUtils.hasLength(elementSeparator)) {, +			return elementSeparator;, +		}, +		return null;, +	}, +, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/DatabasePopulatorConfigUtils.java, + * Copyright 2002-2016 the original author or authors., + * @author Stephane Nicoll, +			String separator = getSeparator(element, scriptElement);, +			if (separator != null) {, +				delegate.addPropertyValue("separator", new TypedStringValue(separator));, +	private static String getSeparator(Element element, Element scriptElement) {, +		String scriptSeparator = scriptElement.getAttribute("separator");, +		if (StringUtils.hasLength(scriptSeparator)) {, +			return scriptSeparator;, +		}, +		String elementSeparator = element.getAttribute("separator");, +		if (StringUtils.hasLength(elementSeparator)) {, +			return elementSeparator;, +		}, +		return null;, +	}, +, +++ b/spring-jdbc/src/main/resources/org/springframework/jdbc/config/spring-jdbc-4.3.xsd, +					<xsd:attribute name="separator" type="xsd:string">, +						<xsd:annotation>, +							<xsd:documentation><![CDATA[, +	The default statement separator to use (the default is to use ';' if it is present, +	in the script, or '\n' otherwise)., +				]]></xsd:documentation>, +						</xsd:annotation>, +					</xsd:attribute>, +			<xsd:attribute name="separator" type="xsd:string">, +				<xsd:annotation>, +					<xsd:documentation><![CDATA[, +	The default statement separator to use (the default is to use ';' if it is present, +	in the script, or '\n' otherwise)., +				]]></xsd:documentation>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/DatabasePopulatorConfigUtils.java, + * Copyright 2002-2016 the original author or authors., + * @author Stephane Nicoll, +			String separator = getSeparator(element, scriptElement);, +			if (separator != null) {, +				delegate.addPropertyValue("separator", new TypedStringValue(separator));, +	private static String getSeparator(Element element, Element scriptElement) {, +		String scriptSeparator = scriptElement.getAttribute("separator");, +		if (StringUtils.hasLength(scriptSeparator)) {, +			return scriptSeparator;, +		}, +		String elementSeparator = element.getAttribute("separator");, +		if (StringUtils.hasLength(elementSeparator)) {, +			return elementSeparator;, +		}, +		return null;, +	}, +, +++ b/spring-jdbc/src/main/resources/org/springframework/jdbc/config/spring-jdbc-4.3.xsd, +					<xsd:attribute name="separator" type="xsd:string">, +						<xsd:annotation>, +							<xsd:documentation><![CDATA[, +	The default statement separator to use (the default is to use ';' if it is present, +	in the script, or '\n' otherwise)., +				]]></xsd:documentation>, +						</xsd:annotation>, +					</xsd:attribute>, +			<xsd:attribute name="separator" type="xsd:string">, +				<xsd:annotation>, +					<xsd:documentation><![CDATA[, +	The default statement separator to use (the default is to use ';' if it is present, +	in the script, or '\n' otherwise)., +				]]></xsd:documentation>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/config/JdbcNamespaceIntegrationTests.java, + * Copyright 2002-2016 the original author or authors., + * @author Stephane Nicoll, +	@Test, +	public void initializeWithCustomSeparator() throws Exception {, +		assertCorrectSetupAndCloseContext("jdbc-initialize-custom-separator.xml", 2, "dataSource");, +	}, +, +	@Test, +	public void embeddedWithCustomSeparator() throws Exception {, +		assertCorrectSetupAndCloseContext("jdbc-config-custom-separator.xml", 2, "dataSource");, +	}]