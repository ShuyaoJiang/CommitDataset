[+++ b/build.gradle, +        compile("org.hibernate:hibernate-entitymanager:3.4.0.GA", optional), +project('spring-orm-hibernate4') {, +    description = 'Spring Object/Relational Mapping - Hibernate 4 support', +    ext.mergeIntoProject = project(':spring-orm'), +    apply from: "${gradleScriptDir}/merge-artifacts.gradle", +    dependencies {, +        compile project(":spring-orm").sourceSets.main.output, +        compile project(":spring-tx"), +        compile project(":spring-jdbc"), +        compile("org.hibernate:hibernate-core:4.1.0.Final", optional), +        compile("org.hibernate:hibernate-entitymanager:4.1.0.Final", optional), +        compile(project(":spring-web")) { dep ->, +            optional dep, +            exclude group: 'javax.persistence', module: 'persistence-api', +        }, +        compile("javax.servlet:servlet-api:2.5", optional), +    }, +}, +, +++ b/build.gradle, +        compile("org.hibernate:hibernate-entitymanager:3.4.0.GA", optional), +project('spring-orm-hibernate4') {, +    description = 'Spring Object/Relational Mapping - Hibernate 4 support', +    ext.mergeIntoProject = project(':spring-orm'), +    apply from: "${gradleScriptDir}/merge-artifacts.gradle", +    dependencies {, +        compile project(":spring-orm").sourceSets.main.output, +        compile project(":spring-tx"), +        compile project(":spring-jdbc"), +        compile("org.hibernate:hibernate-core:4.1.0.Final", optional), +        compile("org.hibernate:hibernate-entitymanager:4.1.0.Final", optional), +        compile(project(":spring-web")) { dep ->, +            optional dep, +            exclude group: 'javax.persistence', module: 'persistence-api', +        }, +        compile("javax.servlet:servlet-api:2.5", optional), +    }, +}, +, +++ b/settings.gradle, +include 'spring-orm-hibernate4', +++ b/build.gradle, +        compile("org.hibernate:hibernate-entitymanager:3.4.0.GA", optional), +project('spring-orm-hibernate4') {, +    description = 'Spring Object/Relational Mapping - Hibernate 4 support', +    ext.mergeIntoProject = project(':spring-orm'), +    apply from: "${gradleScriptDir}/merge-artifacts.gradle", +    dependencies {, +        compile project(":spring-orm").sourceSets.main.output, +        compile project(":spring-tx"), +        compile project(":spring-jdbc"), +        compile("org.hibernate:hibernate-core:4.1.0.Final", optional), +        compile("org.hibernate:hibernate-entitymanager:4.1.0.Final", optional), +        compile(project(":spring-web")) { dep ->, +            optional dep, +            exclude group: 'javax.persistence', module: 'persistence-api', +        }, +        compile("javax.servlet:servlet-api:2.5", optional), +    }, +}, +, +++ b/settings.gradle, +include 'spring-orm-hibernate4', +++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/ConfigurableJtaPlatform.java, +/*, + * Copyright 2002-2012 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.orm.hibernate4;, +, +import javax.transaction.TransactionManager;, +import javax.transaction.UserTransaction;, +, +import org.hibernate.service.jta.platform.internal.AbstractJtaPlatform;, +, +import org.springframework.transaction.jta.UserTransactionAdapter;, +import org.springframework.util.Assert;, +, +/**, + * Implementation of Hibernate 4's {@link org.hibernate.service.jta.platform.spi.JtaPlatform}, + * SPI, exposing passed-in {@link TransactionManager} and {@link UserTransaction} references., + *, + * @author Juergen Hoeller, + * @since 3.1.2, + */, +class ConfigurableJtaPlatform extends AbstractJtaPlatform {, +]