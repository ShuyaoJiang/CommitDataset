[+++ b/spring-beans/src/test/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessorTests.java, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessorTests.java, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.java, +		else if ("".equals(arg) && namedValueInfo.defaultValue != null) {, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessorTests.java, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.java, +		else if ("".equals(arg) && namedValueInfo.defaultValue != null) {, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/RequestHeaderMapMethodArgumentResolver.java, + * Copyright 2002-2014 the original author or authors., +		return parameter.hasParameterAnnotation(RequestHeader.class) &&, +				Map.class.isAssignableFrom(parameter.getParameterType());, +, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessorTests.java, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.java, +		else if ("".equals(arg) && namedValueInfo.defaultValue != null) {, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/RequestHeaderMapMethodArgumentResolver.java, + * Copyright 2002-2014 the original author or authors., +		return parameter.hasParameterAnnotation(RequestHeader.class) &&, +				Map.class.isAssignableFrom(parameter.getParameterType());, +, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/RequestHeaderMethodArgumentResolver.java, +		return parameter.hasParameterAnnotation(RequestHeader.class) &&, +				!Map.class.isAssignableFrom(parameter.getParameterType());, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessorTests.java, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.java, +		else if ("".equals(arg) && namedValueInfo.defaultValue != null) {, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/RequestHeaderMapMethodArgumentResolver.java, + * Copyright 2002-2014 the original author or authors., +		return parameter.hasParameterAnnotation(RequestHeader.class) &&, +				Map.class.isAssignableFrom(parameter.getParameterType());, +, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/RequestHeaderMethodArgumentResolver.java, +		return parameter.hasParameterAnnotation(RequestHeader.class) &&, +				!Map.class.isAssignableFrom(parameter.getParameterType());, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/RequestParamMethodArgumentResolver.java, +		return (annotation != null) ? new RequestParamNamedValueInfo(annotation) : new RequestParamNamedValueInfo();, +			List<MultipartFile> multipartFiles = multipartRequest.getFiles(name);, +			arg = multipartFiles.toArray(new MultipartFile[multipartFiles.size()]);, +]