[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMappingTests.java, +import org.springframework.http.MediaType;, +import org.springframework.web.HttpMediaTypeNotAcceptableException;, +import org.springframework.web.HttpMediaTypeNotSupportedException;, +import org.springframework.web.bind.annotation.RequestBody;, +	public void requestMethodNotAllowed() throws Exception {, +	public void mediaTypeNotSupported() throws Exception {, +		testMediaTypeNotSupported("/person/1");, +		testMediaTypeNotSupported("/person/1/");	// SPR-8462, +		testMediaTypeNotSupported("/person/1.json");, +	}, +, +	private void testMediaTypeNotSupported(String url) throws Exception {, +		try {, +			MockHttpServletRequest request = new MockHttpServletRequest("PUT", url);, +			request.setContentType("application/json");, +			mapping.getHandler(request);, +			fail("HttpMediaTypeNotSupportedException expected");, +		}, +		catch (HttpMediaTypeNotSupportedException ex) {, +			assertEquals("Invalid supported consumable media types", , +					Arrays.asList(new MediaType("application", "xml")), ex.getSupportedMediaTypes());, +		}, +	}, +	, +	@Test, +	public void mediaTypeNotAccepted() throws Exception {, +		testMediaTypeNotAccepted("/persons");, +		testMediaTypeNotAccepted("/persons/");	// SPR-8462, +		testMediaTypeNotAccepted("/persons.json");, +	}, +, +	private void testMediaTypeNotAccepted(String url) throws Exception {, +		try {, +			MockHttpServletRequest request = new MockHttpServletRequest("GET", url);, +			request.addHeader("Accept", "application/json");, +			mapping.getHandler(request);, +			fail("HttpMediaTypeNotAcceptableException expected");, +		}, +		catch (HttpMediaTypeNotAcceptableException ex) {, +			assertEquals("Invalid supported producible media types", , +					Arrays.asList(new MediaType("application", "xml")), ex.getSupportedMediaTypes());, +		}, +	}, +, +	@Test, +, +		@RequestMapping(value = "/person/{id}", method = RequestMethod.PUT, consumes="application/xml"), +		public void consumes(@RequestBody String text) {, +		}, +, +		@RequestMapping(value = "/persons", produces="application/xml"), +		public String produces() {, +			return "";, +		}]