[+++ b/spring-web/src/main/java/org/springframework/http/codec/multipart/MultipartHttpMessageWriter.java, +		if (body instanceof Resource) {, +			outputMessage.getHeaders().setContentDispositionFormData(name, ((Resource) body).getFilename());, +		}, +		else if (Resource.class.equals(resolvableType.getRawClass())) {, +			body = (T) Mono.from((Publisher<?>) body).doOnNext(o -> {, +				outputMessage.getHeaders().setContentDispositionFormData(name, ((Resource) o).getFilename());, +			});, +		}, +		else {, +			outputMessage.getHeaders().setContentDispositionFormData(name, null);, +		}, +++ b/spring-web/src/main/java/org/springframework/http/codec/multipart/MultipartHttpMessageWriter.java, +		if (body instanceof Resource) {, +			outputMessage.getHeaders().setContentDispositionFormData(name, ((Resource) body).getFilename());, +		}, +		else if (Resource.class.equals(resolvableType.getRawClass())) {, +			body = (T) Mono.from((Publisher<?>) body).doOnNext(o -> {, +				outputMessage.getHeaders().setContentDispositionFormData(name, ((Resource) o).getFilename());, +			});, +		}, +		else {, +			outputMessage.getHeaders().setContentDispositionFormData(name, null);, +		}, +++ b/spring-web/src/test/java/org/springframework/http/codec/multipart/MultipartHttpMessageWriterTests.java, +		assertTrue(part instanceof FilePart);, +		assertEquals("logo.jpg", ((FilePart) part).filename());]