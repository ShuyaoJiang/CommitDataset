[+++ b/spring-web/src/main/java/org/springframework/http/client/SimpleClientHttpResponse.java, + * Copyright 2002-2019 the original author or authors., +		String result = this.connection.getResponseMessage();, +		return (result != null) ? result : "";, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleClientHttpResponse.java, + * Copyright 2002-2019 the original author or authors., +		String result = this.connection.getResponseMessage();, +		return (result != null) ? result : "";, +++ b/spring-web/src/main/java/org/springframework/web/client/HttpStatusCodeException.java, + * Copyright 2002-2019 the original author or authors., +import org.springframework.util.StringUtils;, +		super(getMessage(statusCode, statusText), statusCode.value(), statusText,, +	private static String getMessage(HttpStatus statusCode, String statusText) {, +		if (!StringUtils.hasLength(statusText)) {, +			statusText = statusCode.getReasonPhrase();, +		}, +		return statusCode.value() + " " + statusText;, +	}, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleClientHttpResponse.java, + * Copyright 2002-2019 the original author or authors., +		String result = this.connection.getResponseMessage();, +		return (result != null) ? result : "";, +++ b/spring-web/src/main/java/org/springframework/web/client/HttpStatusCodeException.java, + * Copyright 2002-2019 the original author or authors., +import org.springframework.util.StringUtils;, +		super(getMessage(statusCode, statusText), statusCode.value(), statusText,, +	private static String getMessage(HttpStatus statusCode, String statusText) {, +		if (!StringUtils.hasLength(statusText)) {, +			statusText = statusCode.getReasonPhrase();, +		}, +		return statusCode.value() + " " + statusText;, +	}, +++ b/spring-web/src/test/java/org/springframework/web/client/HttpStatusCodeExceptionTests.java, + * Copyright 2002-2019 the original author or authors., +import static org.hamcrest.CoreMatchers.equalTo;, +	@Test, +	public void emptyStatusText() {, +		HttpStatusCodeException ex = new HttpClientErrorException(HttpStatus.NOT_FOUND, "");, +, +		assertEquals("404 Not Found", ex.getMessage());, +	}, +]