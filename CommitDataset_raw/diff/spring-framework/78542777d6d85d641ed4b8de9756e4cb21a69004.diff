[+++ b/spring-context/src/test/java/org/springframework/context/annotation/AnnotationBeanNameGeneratorTests.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.stereotype.Controller;, + * Unit tests for {@link AnnotationBeanNameGenerator}., + *, + * @author Sam Brannen, +	public void generateBeanNameWithNamedComponent() {, +	public void generateBeanNameWithDefaultNamedComponent() {, +	public void generateBeanNameWithNamedComponentWhereTheNameIsBlank() {, +	public void generateBeanNameWithAnonymousComponentYieldsGeneratedBeanName() {, +	public void generateBeanNameFromMetaComponentWithStringValue() {, +	public void generateBeanNameFromMetaComponentWithNonStringValue() {, +	/**, +	 * @since 4.0.1, +	 * @see https://jira.springsource.org/browse/SPR-11360, +	 */, +	@Test, +	public void generateBeanNameFromComposedControllerAnnotationWithoutName() {, +		BeanDefinitionRegistry registry = new SimpleBeanDefinitionRegistry();, +		AnnotatedBeanDefinition bd = new AnnotatedGenericBeanDefinition(ComposedControllerAnnotationWithoutName.class);, +		String beanName = this.beanNameGenerator.generateBeanName(bd, registry);, +		String expectedGeneratedBeanName = this.beanNameGenerator.buildDefaultBeanName(bd);, +		assertEquals(expectedGeneratedBeanName, beanName);, +	}, +, +	/**, +	 * @since 4.0.1, +	 * @see https://jira.springsource.org/browse/SPR-11360, +	 */, +	@Test, +	public void generateBeanNameFromComposedControllerAnnotationWithBlankName() {, +		BeanDefinitionRegistry registry = new SimpleBeanDefinitionRegistry();, +		AnnotatedBeanDefinition bd = new AnnotatedGenericBeanDefinition(ComposedControllerAnnotationWithBlankName.class);, +		String beanName = this.beanNameGenerator.generateBeanName(bd, registry);, +		String expectedGeneratedBeanName = this.beanNameGenerator.buildDefaultBeanName(bd);, +		assertEquals(expectedGeneratedBeanName, beanName);, +	}, +, +	/**, +	 * @since 4.0.1, +	 * @see https://jira.springsource.org/browse/SPR-11360, +	 */, +	@Test, +	public void generateBeanNameFromComposedControllerAnnotationWithStringValue() {, +		BeanDefinitionRegistry registry = new SimpleBeanDefinitionRegistry();, +		AnnotatedBeanDefinition bd = new AnnotatedGenericBeanDefinition(, +			ComposedControllerAnnotationWithStringValue.class);, +		String beanName = this.beanNameGenerator.generateBeanName(bd, registry);, +		assertEquals("restController", beanName);, +	}, +, +, +	/**, +	 * @see org.springframework.web.bind.annotation.RestController, +	 */, +	@Retention(RetentionPolicy.RUNTIME), +	@Target(ElementType.TYPE), +	@Controller, +	public static @interface TestRestController {, +, +		String value() default "";, +	}, +, +	@TestRestController, +	public static class ComposedControllerAnnotationWithoutName {, +	}, +, +	@TestRestController(" "), +	public static class ComposedControllerAnnotationWithBlankName {, +	}, +, +	@TestRestController("restController"), +	public static class ComposedControllerAnnotationWithStringValue {, +	}, +, +++ b/spring-context/src/test/java/org/springframework/context/annotation/AnnotationBeanNameGeneratorTests.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.stereotype.Controller;, + * Unit tests for {@link AnnotationBeanNameGenerator}., + *, + * @author Sam Brannen, +	public void generateBeanNameWithNamedComponent() {, +	public void generateBeanNameWithDefaultNamedComponent() {, +	public void generateBeanNameWithNamedComponentWhereTheNameIsBlank() {, +	public void generateBeanNameWithAnonymousComponentYieldsGeneratedBeanName() {, +	public void generateBeanNameFromMetaComponentWithStringValue() {, +	public void generateBeanNameFromMetaComponentWithNonStringValue() {, +	/**, +	 * @since 4.0.1, +	 * @see https://jira.springsource.org/browse/SPR-11360, +	 */, +	@Test, +	public void generateBeanNameFromComposedControllerAnnotationWithoutName() {, +		BeanDefinitionRegistry registry = new SimpleBeanDefinitionRegistry();, +		AnnotatedBeanDefinition bd = new AnnotatedGenericBeanDefinition(ComposedControllerAnnotationWithoutName.class);, +		String beanName = this.beanNameGenerator.generateBeanName(bd, registry);, +		String expectedGeneratedBeanName = this.beanNameGenerator.buildDefaultBeanName(bd);, +		assertEquals(expectedGeneratedBeanName, beanName);, +	}, +]