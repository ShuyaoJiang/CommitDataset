[+++ b/spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java, +++ b/spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/ObjectToObjectConverter.java, +++ b/spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/ObjectToObjectConverter.java, +++ b/spring-core/src/main/java/org/springframework/core/env/ConfigurablePropertyResolver.java, + * Copyright 2002-2016 the original author or authors., + * Configuration interface to be implemented by most if not all {@link PropertyResolver}, + * types. Provides facilities for accessing and customizing the, + * {@link org.springframework.core.convert.ConversionService ConversionService}, + * used when converting property values from one type to another., +	 * Return the {@link ConfigurableConversionService} used when performing type, +	 * <p><strong>Note:</strong> as an alternative to fully replacing the, +	 * {@code ConversionService}, consider adding or removing individual, +	 * {@code Converter} instances by drilling into {@link #getConversionService()}, +	 * and calling methods such as {@code #addConverter}., +++ b/spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/ObjectToObjectConverter.java, +++ b/spring-core/src/main/java/org/springframework/core/env/ConfigurablePropertyResolver.java, + * Copyright 2002-2016 the original author or authors., + * Configuration interface to be implemented by most if not all {@link PropertyResolver}, + * types. Provides facilities for accessing and customizing the, + * {@link org.springframework.core.convert.ConversionService ConversionService}, + * used when converting property values from one type to another., +	 * Return the {@link ConfigurableConversionService} used when performing type, +	 * <p><strong>Note:</strong> as an alternative to fully replacing the, +	 * {@code ConversionService}, consider adding or removing individual, +	 * {@code Converter} instances by drilling into {@link #getConversionService()}, +	 * and calling methods such as {@code #addConverter}., +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/AbstractRequestAttributesArgumentResolverTests.java, +, +import static org.junit.Assert.*;, +import static org.mockito.BDDMockito.*;, +		assertFalse(this.resolver.supportsParameter(new MethodParameter(this.handleMethod, -1)));, +, +, +++ b/spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/ObjectToObjectConverter.java, +++ b/spring-core/src/main/java/org/springframework/core/env/ConfigurablePropertyResolver.java, + * Copyright 2002-2016 the original author or authors., + * Configuration interface to be implemented by most if not all {@link PropertyResolver}, + * types. Provides facilities for accessing and customizing the, + * {@link org.springframework.core.convert.ConversionService ConversionService}, + * used when converting property values from one type to another., +	 * Return the {@link ConfigurableConversionService} used when performing type, +	 * <p><strong>Note:</strong> as an alternative to fully replacing the, +	 * {@code ConversionService}, consider adding or removing individual, +	 * {@code Converter} instances by drilling into {@link #getConversionService()}, +	 * and calling methods such as {@code #addConverter}., +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/AbstractRequestAttributesArgumentResolverTests.java, +, +import static org.junit.Assert.*;, +import static org.mockito.BDDMockito.*;, +		assertFalse(this.resolver.supportsParameter(new MethodParameter(this.handleMethod, -1)));, +, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestAttributeMethodArgumentResolverTests.java, +, + *, + * @since 4.3, +public class RequestAttributeMethodArgumentResolverTests extends AbstractRequestAttributesArgumentResolverTests {, +++ b/spring-context/src/test/java/org/springframework/format/datetime/standard/DateTimeFormattingTests.java, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/ObjectToObjectConverter.java, +++ b/spring-core/src/main/java/org/springframework/core/env/ConfigurablePropertyResolver.java, + * Copyright 2002-2016 the original author or authors., + * Configuration interface to be implemented by most if not all {@link PropertyResolver}, + * types. Provides facilities for accessing and customizing the, + * {@link org.springframework.core.convert.ConversionService ConversionService}, + * used when converting property values from one type to another., +	 * Return the {@link ConfigurableConversionService} used when performing type, +	 * <p><strong>Note:</strong> as an alternative to fully replacing the, +	 * {@code ConversionService}, consider adding or removing individual, +	 * {@code Converter} instances by drilling into {@link #getConversionService()}, +	 * and calling methods such as {@code #addConverter}., +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/AbstractRequestAttributesArgumentResolverTests.java, +, +import static org.junit.Assert.*;, +import static org.mockito.BDDMockito.*;, +		assertFalse(this.resolver.supportsParameter(new MethodParameter(this.handleMethod, -1)));, +, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestAttributeMethodArgumentResolverTests.java, +, + *, + * @since 4.3, +public class RequestAttributeMethodArgumentResolverTests extends AbstractRequestAttributesArgumentResolverTests {, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/SessionAttributeMethodArgumentResolverTests.java, +, + *, + * @since 4.3, +public class SessionAttributeMethodArgumentResolverTests extends AbstractRequestAttributesArgumentResolverTests {]