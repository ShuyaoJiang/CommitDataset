[+++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/ResourceBundleEditor.java, + * Copyright 2002-2015 the original author or authors., + * {@link java.beans.PropertyEditor} implementation for standard JDK, + * <p>Only supports conversion <i>from</i> a String, but not <i>to</i> a String., + * Find below some examples of using this class in a (properly configured), + * Spring container using XML-based metadata:, + * @author Juergen Hoeller, +	 * The separator used to distinguish between the base name and the locale, +	 * (if any) when {@link #setAsText(String) converting from a String}., +		String name = text.trim();, +, +		int separator = name.indexOf(BASE_NAME_SEPARATOR);, +		if (separator == -1) {, +			setValue(ResourceBundle.getBundle(name));, +			// Tge basename potentially has locale information, +			String baseName = name.substring(0, separator);, +				throw new IllegalArgumentException("Invalid ResourceBundle name: '" + text + "'");, +			String localeString = name.substring(separator + 1);, +			setValue((StringUtils.hasText(localeString)) ? ResourceBundle.getBundle(baseName, locale) :, +					ResourceBundle.getBundle(baseName));, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/ResourceBundleEditor.java, + * Copyright 2002-2015 the original author or authors., + * {@link java.beans.PropertyEditor} implementation for standard JDK, + * <p>Only supports conversion <i>from</i> a String, but not <i>to</i> a String., + * Find below some examples of using this class in a (properly configured), + * Spring container using XML-based metadata:, + * @author Juergen Hoeller, +	 * The separator used to distinguish between the base name and the locale, +	 * (if any) when {@link #setAsText(String) converting from a String}., +		String name = text.trim();, +, +		int separator = name.indexOf(BASE_NAME_SEPARATOR);, +		if (separator == -1) {, +			setValue(ResourceBundle.getBundle(name));, +			// Tge basename potentially has locale information, +			String baseName = name.substring(0, separator);, +				throw new IllegalArgumentException("Invalid ResourceBundle name: '" + text + "'");, +			String localeString = name.substring(separator + 1);, +			setValue((StringUtils.hasText(localeString)) ? ResourceBundle.getBundle(baseName, locale) :, +					ResourceBundle.getBundle(baseName));, +++ b/spring-beans/src/test/java/org/springframework/beans/propertyeditors/ResourceBundleEditorTests.java, + * Copyright 2002-2015 the original author or authors., +public class ResourceBundleEditorTests {, +]