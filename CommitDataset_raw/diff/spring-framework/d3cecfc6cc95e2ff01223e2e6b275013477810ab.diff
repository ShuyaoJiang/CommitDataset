[+++ b/build.gradle, +project("spring-messaging") {, +	description = "Spring Messaging", +, +	dependencies {, +		compile(project(":spring-beans")), +		compile(project(":spring-core")), +		compile(project(":spring-context")), +		optional(project(":spring-web")) // TODO: MediaType/HandlerMethod/EHMR, +		optional(project(":spring-websocket")), +		optional("com.fasterxml.jackson.core:jackson-databind:2.2.0"), +		optional("org.projectreactor:reactor-core:1.0.0.BUILD-SNAPSHOT"), +		optional("org.projectreactor:reactor-tcp:1.0.0.BUILD-SNAPSHOT"), +		optional("com.lmax:disruptor:3.1.1"), +		testCompile("commons-dbcp:commons-dbcp:1.2.2"), +		testCompile("javax.inject:javax.inject-tck:1"), +	}, +, +	repositories {, +		maven { url 'http://repo.springsource.org/snapshot' } // reactor, +	}, +}, +, +	description = "Spring WebSocket", +++ b/build.gradle, +project("spring-messaging") {, +	description = "Spring Messaging", +, +	dependencies {, +		compile(project(":spring-beans")), +		compile(project(":spring-core")), +		compile(project(":spring-context")), +		optional(project(":spring-web")) // TODO: MediaType/HandlerMethod/EHMR, +		optional(project(":spring-websocket")), +		optional("com.fasterxml.jackson.core:jackson-databind:2.2.0"), +		optional("org.projectreactor:reactor-core:1.0.0.BUILD-SNAPSHOT"), +		optional("org.projectreactor:reactor-tcp:1.0.0.BUILD-SNAPSHOT"), +		optional("com.lmax:disruptor:3.1.1"), +		testCompile("commons-dbcp:commons-dbcp:1.2.2"), +		testCompile("javax.inject:javax.inject-tck:1"), +	}, +, +	repositories {, +		maven { url 'http://repo.springsource.org/snapshot' } // reactor, +	}, +}, +, +	description = "Spring WebSocket", +++ b/settings.gradle, +include "spring-messaging", +++ b/build.gradle, +project("spring-messaging") {, +	description = "Spring Messaging", +, +	dependencies {, +		compile(project(":spring-beans")), +		compile(project(":spring-core")), +		compile(project(":spring-context")), +		optional(project(":spring-web")) // TODO: MediaType/HandlerMethod/EHMR, +		optional(project(":spring-websocket")), +		optional("com.fasterxml.jackson.core:jackson-databind:2.2.0"), +		optional("org.projectreactor:reactor-core:1.0.0.BUILD-SNAPSHOT"), +		optional("org.projectreactor:reactor-tcp:1.0.0.BUILD-SNAPSHOT"), +		optional("com.lmax:disruptor:3.1.1"), +		testCompile("commons-dbcp:commons-dbcp:1.2.2"), +		testCompile("javax.inject:javax.inject-tck:1"), +	}, +, +	repositories {, +		maven { url 'http://repo.springsource.org/snapshot' } // reactor, +	}, +}, +, +	description = "Spring WebSocket", +++ b/settings.gradle, +include "spring-messaging", +++ b/spring-messaging/src/main/java/org/springframework/messaging/Message.java, +/*, + * Copyright 2002-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.messaging;, +, +/**, + * A generic message representation with headers and body., + *, + * @author Mark Fisher, + * @author Arjen Poutsma]