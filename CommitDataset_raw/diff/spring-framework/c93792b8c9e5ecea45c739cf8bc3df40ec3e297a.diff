[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultPathContainer.java, +import java.nio.charset.StandardCharsets;, +	static PathContainer createFromPath(String path, String separator) {, +		return parsePathInternal(path, separator, DefaultPathSegment::new);, +	private static PathContainer parsePathInternal(String path, String separator,, +			Function<String, PathSegment> segmentParser) {, +, +		Separator separatorElement = separator.equals(SEPARATOR.value()) ? SEPARATOR : () -> separator;, +		if (path.length() > 0 && path.startsWith(separator)) {, +			begin = separator.length();, +			elements.add(separatorElement);, +			int end = path.indexOf(separator, begin);, +			elements.add(separatorElement);, +			begin = end + separator.length();, +	static PathContainer createFromUrlPath(String path) {, +		return parsePathInternal(path, "/", segment -> {, +			Charset charset = StandardCharsets.UTF_8;, +			int index = segment.indexOf(';');, +				String valueToMatch = StringUtils.uriDecode(segment, charset);, +				return new DefaultUrlPathSegment(segment, valueToMatch, EMPTY_MAP);, +				String valueToMatch = StringUtils.uriDecode(segment.substring(0, index), charset);, +				String pathParameterContent = segment.substring(index);, +				return new DefaultUrlPathSegment(segment, valueToMatch, parameters);, +		});, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultPathContainer.java, +import java.nio.charset.StandardCharsets;, +	static PathContainer createFromPath(String path, String separator) {, +		return parsePathInternal(path, separator, DefaultPathSegment::new);, +	private static PathContainer parsePathInternal(String path, String separator,, +			Function<String, PathSegment> segmentParser) {, +, +		Separator separatorElement = separator.equals(SEPARATOR.value()) ? SEPARATOR : () -> separator;, +		if (path.length() > 0 && path.startsWith(separator)) {, +			begin = separator.length();, +			elements.add(separatorElement);, +			int end = path.indexOf(separator, begin);, +			elements.add(separatorElement);, +			begin = end + separator.length();, +	static PathContainer createFromUrlPath(String path) {, +		return parsePathInternal(path, "/", segment -> {, +			Charset charset = StandardCharsets.UTF_8;, +			int index = segment.indexOf(';');, +				String valueToMatch = StringUtils.uriDecode(segment, charset);, +				return new DefaultUrlPathSegment(segment, valueToMatch, EMPTY_MAP);, +				String valueToMatch = StringUtils.uriDecode(segment.substring(0, index), charset);, +				String pathParameterContent = segment.substring(index);, +				return new DefaultUrlPathSegment(segment, valueToMatch, parameters);, +		});, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/PathContainer.java, +		return parsePath(path, "/");, +	}, +, +	/**, +	 * Parse the path value into a sequence of {@link Separator Separator} and, +	 * {@link PathSegment PathSegment} elements., +	 * @param path the path value to parse, +	 * @param separator the value to treat as separator, +	 * @return the parsed path, +	 */, +	static PathContainer parsePath(String path, String separator) {, +		return DefaultPathContainer.createFromPath(path, separator);, +		return DefaultPathContainer.createFromUrlPath(path);]