[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessagingTemplate.java, +import org.springframework.messaging.support.MessageHeaderInitializer;, +	private MessageHeaderInitializer headerInitializer;, +, +	 * Configure a {@link MessageHeaderInitializer} to apply to the headers of all, +	 * messages created through the {@code SimpMessagingTemplate}., +	 *, +	 * <p>By default this property is not set., +	 */, +	public void setHeaderInitializer(MessageHeaderInitializer headerInitializer) {, +		this.headerInitializer = headerInitializer;, +	}, +, +	/**, +	 * @return the configured header initializer., +	 */, +	public MessageHeaderInitializer getHeaderInitializer() {, +		return this.headerInitializer;, +	}, +, +	/**, +				initHeaders(simpAccessor);, +			initHeaders(simpAccessor);, +	private void initHeaders(SimpMessageHeaderAccessor simpAccessor) {, +		if (getHeaderInitializer() != null) {, +			getHeaderInitializer().initHeaders(simpAccessor);, +		}, +	}, +			initHeaders(headerAccessor);, +		initHeaders(headerAccessor);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessagingTemplate.java, +import org.springframework.messaging.support.MessageHeaderInitializer;, +	private MessageHeaderInitializer headerInitializer;, +, +	 * Configure a {@link MessageHeaderInitializer} to apply to the headers of all, +	 * messages created through the {@code SimpMessagingTemplate}., +	 *, +	 * <p>By default this property is not set., +	 */, +	public void setHeaderInitializer(MessageHeaderInitializer headerInitializer) {, +		this.headerInitializer = headerInitializer;, +	}, +, +	/**, +	 * @return the configured header initializer., +	 */, +	public MessageHeaderInitializer getHeaderInitializer() {, +		return this.headerInitializer;, +	}, +, +	/**, +				initHeaders(simpAccessor);, +			initHeaders(simpAccessor);, +	private void initHeaders(SimpMessageHeaderAccessor simpAccessor) {, +		if (getHeaderInitializer() != null) {, +			getHeaderInitializer().initHeaders(simpAccessor);, +		}, +	}, +			initHeaders(headerAccessor);, +		initHeaders(headerAccessor);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SendToMethodReturnValueHandler.java, +import org.springframework.messaging.support.MessageHeaderInitializer;, +	private MessageHeaderInitializer headerInitializer;, +, +	/**, +	 * Configure a {@link MessageHeaderInitializer} to apply to the headers of all, +	 * messages sent to the client outbound channel., +	 *, +	 * <p>By default this property is not set., +	 */, +	public void setHeaderInitializer(MessageHeaderInitializer headerInitializer) {, +		this.headerInitializer = headerInitializer;, +	}, +, +	/**, +	 * @return the configured header initializer., +	 */, +	public MessageHeaderInitializer getHeaderInitializer() {, +		return this.headerInitializer;, +	}, +, +		if (getHeaderInitializer() != null) {, +			getHeaderInitializer().initHeaders(headerAccessor);, +		}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessagingTemplate.java, +import org.springframework.messaging.support.MessageHeaderInitializer;, +	private MessageHeaderInitializer headerInitializer;, +, +	 * Configure a {@link MessageHeaderInitializer} to apply to the headers of all, +	 * messages created through the {@code SimpMessagingTemplate}., +	 *, +	 * <p>By default this property is not set., +	 */, +	public void setHeaderInitializer(MessageHeaderInitializer headerInitializer) {, +		this.headerInitializer = headerInitializer;, +	}, +, +	/**, +	 * @return the configured header initializer., +	 */]