[+++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java, +			try {, +				DefaultTransactionStatus status = instantiateTransactionStatus(, +				prepareSynchronization(status, definition);, +				DefaultTransactionStatus status = instantiateTransactionStatus(, +				prepareSynchronization(status, definition);, +				DefaultTransactionStatus status = instantiateTransactionStatus(, +				prepareSynchronization(status, definition);, +	 * also initializing transaction synchronization as appropriate., +		DefaultTransactionStatus status = instantiateTransactionStatus(, +				definition, transaction, newTransaction, newSynchronization, debug, suspendedResources);, +		prepareSynchronization(status, definition);, +		return status;, +	}, +, +	/**, +	 * Create a rae TransactionStatus instance for the given arguments., +	 */, +	private DefaultTransactionStatus instantiateTransactionStatus(, +			TransactionDefinition definition, Object transaction, boolean newTransaction,, +			boolean newSynchronization, boolean debug, Object suspendedResources) {, +, +		return new DefaultTransactionStatus(, +				transaction, newTransaction, actualNewSynchronization,, +				definition.isReadOnly(), debug, suspendedResources);, +	}, +, +	/**, +	 * Initialize transaction synchronization as appropriate., +	 */, +	private void prepareSynchronization(DefaultTransactionStatus status, TransactionDefinition definition) {, +		if (status.isNewSynchronization()) {, +			TransactionSynchronizationManager.setActualTransactionActive(status.hasTransaction());]