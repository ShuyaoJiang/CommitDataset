[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/freemarker/FreeMarkerView.java, +, +	private Optional<Charset> getCharset(MediaType mediaType) {, +		return (mediaType != null ? Optional.ofNullable(mediaType.getCharset()) : Optional.empty());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/freemarker/FreeMarkerView.java, +, +	private Optional<Charset> getCharset(MediaType mediaType) {, +		return (mediaType != null ? Optional.ofNullable(mediaType.getCharset()) : Optional.empty());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/JettyWebSocketSession.java, +		// no-op, +		// no-op, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/freemarker/FreeMarkerView.java, +, +	private Optional<Charset> getCharset(MediaType mediaType) {, +		return (mediaType != null ? Optional.ofNullable(mediaType.getCharset()) : Optional.empty());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/JettyWebSocketSession.java, +		// no-op, +		// no-op, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/RxNettyWebSocketSession.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/freemarker/FreeMarkerView.java, +, +	private Optional<Charset> getCharset(MediaType mediaType) {, +		return (mediaType != null ? Optional.ofNullable(mediaType.getCharset()) : Optional.empty());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/JettyWebSocketSession.java, +		// no-op, +		// no-op, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/RxNettyWebSocketSession.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/TomcatWebSocketSession.java, +		// no-op, +		// no-op, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/freemarker/FreeMarkerView.java, +, +	private Optional<Charset> getCharset(MediaType mediaType) {, +		return (mediaType != null ? Optional.ofNullable(mediaType.getCharset()) : Optional.empty());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/JettyWebSocketSession.java, +		// no-op, +		// no-op, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/RxNettyWebSocketSession.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/TomcatWebSocketSession.java, +		// no-op, +		// no-op, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/UndertowWebSocketSession.java, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/freemarker/FreeMarkerView.java, +, +	private Optional<Charset> getCharset(MediaType mediaType) {, +		return (mediaType != null ? Optional.ofNullable(mediaType.getCharset()) : Optional.empty());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/JettyWebSocketSession.java, +		// no-op, +		// no-op, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/RxNettyWebSocketSession.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/TomcatWebSocketSession.java, +		// no-op, +		// no-op, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/UndertowWebSocketSession.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java, +	private void addContentDispositionHeader(ServletServerHttpRequest request, ServletServerHttpResponse response) {, +			// ignore, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/freemarker/FreeMarkerView.java, +, +	private Optional<Charset> getCharset(MediaType mediaType) {, +		return (mediaType != null ? Optional.ofNullable(mediaType.getCharset()) : Optional.empty());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/JettyWebSocketSession.java, +		// no-op, +		// no-op, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/RxNettyWebSocketSession.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/TomcatWebSocketSession.java, +		// no-op, +		// no-op, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/adapter/UndertowWebSocketSession.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java, +	private void addContentDispositionHeader(ServletServerHttpRequest request, ServletServerHttpResponse response) {, +			// ignore, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorTests.java, +import static org.junit.Assert.*;, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +]