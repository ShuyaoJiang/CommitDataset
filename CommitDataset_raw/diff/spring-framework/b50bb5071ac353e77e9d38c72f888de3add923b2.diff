[+++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +import org.springframework.core.BridgeMethodResolver;, +			Method method = resolveMethod(md.getMethod());, +					Method readMethod = readMethodFor(pd);, +					Method writeMethod = writeMethodFor(pd);, +					Method readMethod = readMethodFor(ipd);, +					Method writeMethod = writeMethodFor(ipd);, +					Method indexedReadMethod = indexedReadMethodFor(ipd);, +					Method indexedWriteMethod = indexedWriteMethodFor(ipd);, +				Method readMethod = readMethodFor(pd);, +						if (readMethodFor(existingPD) == null) {, +							this.addOrUpdatePropertyDescriptor(pd, propertyName, method, writeMethodFor(pd));, +						|| (pd instanceof IndexedPropertyDescriptor && method.equals(indexedReadMethodFor((IndexedPropertyDescriptor) pd)))) {, +						this.addOrUpdatePropertyDescriptor(pd, propertyName, readMethod, writeMethodFor(pd), indexedReadMethodFor((IndexedPropertyDescriptor)pd), indexedWriteMethodFor((IndexedPropertyDescriptor)pd));, +						this.addOrUpdatePropertyDescriptor(pd, propertyName, readMethod, writeMethodFor(pd));, +, +	private static Method resolveMethod(Method method) {, +		return BridgeMethodResolver.findBridgedMethod(method);, +	}, +, +	private static Method readMethodFor(PropertyDescriptor pd) {, +		return resolveMethod(pd.getReadMethod());, +	}, +, +	private static Method writeMethodFor(PropertyDescriptor pd) {, +		return resolveMethod(pd.getWriteMethod());, +	}, +, +	private static Method indexedReadMethodFor(IndexedPropertyDescriptor ipd) {, +		return resolveMethod(ipd.getIndexedReadMethod());, +	}, +, +	private static Method indexedWriteMethodFor(IndexedPropertyDescriptor ipd) {, +		return resolveMethod(ipd.getIndexedWriteMethod());, +	}, +, +				if (readMethodFor(existingPD) != null) {, +					if (readMethod != null && readMethodFor(existingPD).getReturnType() != readMethod.getReturnType(), +							|| writeMethod != null && readMethodFor(existingPD).getReturnType() != writeMethod.getParameterTypes()[0]) {, +				if (writeMethodFor(existingPD) != null) {, +					if (readMethod != null && writeMethodFor(existingPD).getParameterTypes()[0] != readMethod.getReturnType(), +							|| writeMethod != null && writeMethodFor(existingPD).getParameterTypes()[0] != writeMethod.getParameterTypes()[0]) {, +					if (indexedReadMethodFor(existingIPD) != null) {, +						if (indexedReadMethod != null && indexedReadMethodFor(existingIPD).getReturnType() != indexedReadMethod.getReturnType(), +								|| indexedWriteMethod != null && indexedReadMethodFor(existingIPD).getReturnType() != indexedWriteMethod.getParameterTypes()[1]) {, +					if (indexedWriteMethodFor(existingIPD) != null) {, +						if (indexedReadMethod != null && indexedWriteMethodFor(existingIPD).getParameterTypes()[1] != indexedReadMethod.getReturnType(), +								|| indexedWriteMethod != null && indexedWriteMethodFor(existingIPD).getParameterTypes()[1] != indexedWriteMethod.getParameterTypes()[1]) {, +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +import org.springframework.core.BridgeMethodResolver;, +			Method method = resolveMethod(md.getMethod());, +					Method readMethod = readMethodFor(pd);, +					Method writeMethod = writeMethodFor(pd);, +					Method readMethod = readMethodFor(ipd);, +					Method writeMethod = writeMethodFor(ipd);, +					Method indexedReadMethod = indexedReadMethodFor(ipd);, +					Method indexedWriteMethod = indexedWriteMethodFor(ipd);, +				Method readMethod = readMethodFor(pd);, +						if (readMethodFor(existingPD) == null) {, +							this.addOrUpdatePropertyDescriptor(pd, propertyName, method, writeMethodFor(pd));, +						|| (pd instanceof IndexedPropertyDescriptor && method.equals(indexedReadMethodFor((IndexedPropertyDescriptor) pd)))) {, +						this.addOrUpdatePropertyDescriptor(pd, propertyName, readMethod, writeMethodFor(pd), indexedReadMethodFor((IndexedPropertyDescriptor)pd), indexedWriteMethodFor((IndexedPropertyDescriptor)pd));, +						this.addOrUpdatePropertyDescriptor(pd, propertyName, readMethod, writeMethodFor(pd));, +, +	private static Method resolveMethod(Method method) {, +		return BridgeMethodResolver.findBridgedMethod(method);, +	}, +, +	private static Method readMethodFor(PropertyDescriptor pd) {, +		return resolveMethod(pd.getReadMethod());, +	}, +, +	private static Method writeMethodFor(PropertyDescriptor pd) {, +		return resolveMethod(pd.getWriteMethod());, +	}, +, +	private static Method indexedReadMethodFor(IndexedPropertyDescriptor ipd) {, +		return resolveMethod(ipd.getIndexedReadMethod());, +	}, +, +	private static Method indexedWriteMethodFor(IndexedPropertyDescriptor ipd) {, +		return resolveMethod(ipd.getIndexedWriteMethod());, +	}, +, +				if (readMethodFor(existingPD) != null) {, +					if (readMethod != null && readMethodFor(existingPD).getReturnType() != readMethod.getReturnType(), +							|| writeMethod != null && readMethodFor(existingPD).getReturnType() != writeMethod.getParameterTypes()[0]) {, +				if (writeMethodFor(existingPD) != null) {, +					if (readMethod != null && writeMethodFor(existingPD).getParameterTypes()[0] != readMethod.getReturnType(), +							|| writeMethod != null && writeMethodFor(existingPD).getParameterTypes()[0] != writeMethod.getParameterTypes()[0]) {, +					if (indexedReadMethodFor(existingIPD) != null) {, +						if (indexedReadMethod != null && indexedReadMethodFor(existingIPD).getReturnType() != indexedReadMethod.getReturnType(), +								|| indexedWriteMethod != null && indexedReadMethodFor(existingIPD).getReturnType() != indexedWriteMethod.getParameterTypes()[1]) {, +					if (indexedWriteMethodFor(existingIPD) != null) {, +						if (indexedReadMethod != null && indexedWriteMethodFor(existingIPD).getParameterTypes()[1] != indexedReadMethod.getReturnType(), +								|| indexedWriteMethod != null && indexedWriteMethodFor(existingIPD).getParameterTypes()[1] != indexedWriteMethod.getParameterTypes()[1]) {, +++ b/spring-beans/src/test/java/org/springframework/beans/ExtendedBeanInfoTests.java, +, +import org.junit.Ignore;, +]