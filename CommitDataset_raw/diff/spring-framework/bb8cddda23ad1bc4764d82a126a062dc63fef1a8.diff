[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, + * Copyright 2002-2018 the original author or authors., +		Assert.isTrue(checkInstances(controllers), "Controller instances are required");, +		Assert.isTrue(checkInstances(controllerAdvice), "ControllerAdvice instances are required");, +	private boolean checkInstances(Object[] objects) {, +		return Arrays.stream(objects).noneMatch(Class.class::isInstance);, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, + * Copyright 2002-2018 the original author or authors., +		Assert.isTrue(checkInstances(controllers), "Controller instances are required");, +		Assert.isTrue(checkInstances(controllerAdvice), "ControllerAdvice instances are required");, +	private boolean checkInstances(Object[] objects) {, +		return Arrays.stream(objects).noneMatch(Class.class::isInstance);, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.java, + * Copyright 2002-2018 the original author or authors., +		Assert.isTrue(checkInstances(controllers), "Controller instances are required");, +		Assert.isTrue(checkInstances(controllerAdvice), "ControllerAdvice instances are required");, +	private boolean checkInstances(Object[] objects) {, +		return Arrays.stream(objects).noneMatch(Class.class::isInstance);, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, + * Copyright 2002-2018 the original author or authors., +		Assert.isTrue(checkInstances(controllers), "Controller instances are required");, +		Assert.isTrue(checkInstances(controllerAdvice), "ControllerAdvice instances are required");, +	private boolean checkInstances(Object[] objects) {, +		return Arrays.stream(objects).noneMatch(Class.class::isInstance);, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.java, + * Copyright 2002-2018 the original author or authors., +		Assert.isTrue(checkInstances(controllers), "Controller instances are required");, +		Assert.isTrue(checkInstances(controllerAdvice), "ControllerAdvice instances are required");, +	private boolean checkInstances(Object[] objects) {, +		return Arrays.stream(objects).noneMatch(Class.class::isInstance);, +	}, +, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/DefaultControllerSpecTests.java, + * Copyright 2002-2018 the original author or authors., +	public void controller() {, +	public void controllerAdvice() {, +	@Test(expected = IllegalArgumentException.class), +	public void controllerIsAnObjectInstance() {, +		new DefaultControllerSpec(MyController.class);, +	}, +, +	@Test(expected = IllegalArgumentException.class), +	public void controllerAdviceIsAnObjectInstance() {, +		new DefaultControllerSpec(new MyController()).controllerAdvice(MyControllerAdvice.class);, +	}, +, +	public void configurerConsumers() {, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, + * Copyright 2002-2018 the original author or authors., +		Assert.isTrue(checkInstances(controllers), "Controller instances are required");, +		Assert.isTrue(checkInstances(controllerAdvice), "ControllerAdvice instances are required");, +	private boolean checkInstances(Object[] objects) {, +		return Arrays.stream(objects).noneMatch(Class.class::isInstance);, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.java, + * Copyright 2002-2018 the original author or authors., +		Assert.isTrue(checkInstances(controllers), "Controller instances are required");, +		Assert.isTrue(checkInstances(controllerAdvice), "ControllerAdvice instances are required");, +	private boolean checkInstances(Object[] objects) {, +		return Arrays.stream(objects).noneMatch(Class.class::isInstance);, +	}, +, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/DefaultControllerSpecTests.java, + * Copyright 2002-2018 the original author or authors., +	public void controller() {, +	public void controllerAdvice() {, +	@Test(expected = IllegalArgumentException.class), +	public void controllerIsAnObjectInstance() {, +		new DefaultControllerSpec(MyController.class);, +	}, +, +	@Test(expected = IllegalArgumentException.class), +	public void controllerAdviceIsAnObjectInstance() {, +		new DefaultControllerSpec(new MyController()).controllerAdvice(MyControllerAdvice.class);, +	}, +, +	public void configurerConsumers() {, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilderTests.java, + * Copyright 2002-2018 the original author or authors., +	@Test(expected = IllegalArgumentException.class), +	public void controllerIsAnObjectInstance() {, +		new StandaloneMockMvcBuilder(PersonController.class);, +	}, +, +	@Test(expected = IllegalArgumentException.class), +	public void controllerAdviceIsAnObjectInstance() {, +		new StandaloneMockMvcBuilder(new PersonController()).setControllerAdvice(PersonController.class);, +	}, +, +]