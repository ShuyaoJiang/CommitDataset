[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/AbstractCollectionConverter.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/AbstractCollectionConverter.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArray.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/AbstractCollectionConverter.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArray.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollection.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/AbstractCollectionConverter.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArray.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollection.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CharacterToNumberFactory.java, +		public T convert(Character source) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/AbstractCollectionConverter.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArray.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollection.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CharacterToNumberFactory.java, +		public T convert(Character source) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/DefaultConversionService.java, +		addConverter(new StringToBooleanConverter());, +		addConverter(new StringToCharacterConverter());, +		addConverter(new StringToLocaleConverter());, +		addConverter(new NumberToCharacterConverter());, +		addConverter(new ObjectToStringConverter());, +		addConverterFactory(new StringToNumberConverterFactory());, +		addConverterFactory(new StringToEnumConverterFactory());, +		addConverterFactory(new NumberToNumberConverterFactory());, +		addConverterFactory(new CharacterToNumberFactory());, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/AbstractCollectionConverter.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArray.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollection.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CharacterToNumberFactory.java, +		public T convert(Character source) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/DefaultConversionService.java, +		addConverter(new StringToBooleanConverter());, +		addConverter(new StringToCharacterConverter());, +		addConverter(new StringToLocaleConverter());, +		addConverter(new NumberToCharacterConverter());, +		addConverter(new ObjectToStringConverter());, +		addConverterFactory(new StringToNumberConverterFactory());, +		addConverterFactory(new StringToEnumConverterFactory());, +		addConverterFactory(new NumberToNumberConverterFactory());, +		addConverterFactory(new CharacterToNumberFactory());, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, + * @see #addConverterFactory(ConverterFactory), +	 * Registers the converter factories in the set provided., +	 * JavaBean-friendly alternative to calling {@link #addConverterFactory(ConverterFactory)}., +	 * @see #addConverterFactory(ConverterFactory), +			addConverterFactory(converterFactory);, +			throw new IllegalArgumentException("Unable to the determine sourceType <S> and targetType <T> your Converter<S, T> converts between; declare these types or implement ConverterInfo");, +	public void addConverterFactory(ConverterFactory<?, ?> converterFactory) {, +			throw new IllegalArgumentException("Unable to the determine sourceType <S> and targetType <T> your ConverterFactory<S, T> creates Converters to convert between; declare these types or implement ConverterInfo");, +	public void removeConvertible(Class<?> sourceType, Class<?> targetType) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/AbstractCollectionConverter.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArray.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollection.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CharacterToNumberFactory.java, +		public T convert(Character source) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/DefaultConversionService.java, +		addConverter(new StringToBooleanConverter());, +		addConverter(new StringToCharacterConverter());, +		addConverter(new StringToLocaleConverter());, +		addConverter(new NumberToCharacterConverter());, +		addConverter(new ObjectToStringConverter());, +		addConverterFactory(new StringToNumberConverterFactory());, +		addConverterFactory(new StringToEnumConverterFactory());, +		addConverterFactory(new NumberToNumberConverterFactory());, +		addConverterFactory(new CharacterToNumberFactory());, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, + * @see #addConverterFactory(ConverterFactory), +	 * Registers the converter factories in the set provided., +	 * JavaBean-friendly alternative to calling {@link #addConverterFactory(ConverterFactory)}., +	 * @see #addConverterFactory(ConverterFactory), +			addConverterFactory(converterFactory);, +			throw new IllegalArgumentException("Unable to the determine sourceType <S> and targetType <T> your Converter<S, T> converts between; declare these types or implement ConverterInfo");, +	public void addConverterFactory(ConverterFactory<?, ?> converterFactory) {, +			throw new IllegalArgumentException("Unable to the determine sourceType <S> and targetType <T> your ConverterFactory<S, T> creates Converters to convert between; declare these types or implement ConverterInfo");, +	public void removeConvertible(Class<?> sourceType, Class<?> targetType) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapEntryConverter.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/AbstractCollectionConverter.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArray.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollection.java, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CharacterToNumberFactory.java, +		public T convert(Character source) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/DefaultConversionService.java, +		addConverter(new StringToBooleanConverter());, +		addConverter(new StringToCharacterConverter());, +		addConverter(new StringToLocaleConverter());, +		addConverter(new NumberToCharacterConverter());, +		addConverter(new ObjectToStringConverter());, +		addConverterFactory(new StringToNumberConverterFactory());, +		addConverterFactory(new StringToEnumConverterFactory());, +		addConverterFactory(new NumberToNumberConverterFactory());, +		addConverterFactory(new CharacterToNumberFactory());, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, + * @see #addConverterFactory(ConverterFactory), +	 * Registers the converter factories in the set provided., +	 * JavaBean-friendly alternative to calling {@link #addConverterFactory(ConverterFactory)}., +	 * @see #addConverterFactory(ConverterFactory), +			addConverterFactory(converterFactory);, +			throw new IllegalArgumentException("Unable to the determine sourceType <S> and targetType <T> your Converter<S, T> converts between; declare these types or implement ConverterInfo");, +	public void addConverterFactory(ConverterFactory<?, ?> converterFactory) {]