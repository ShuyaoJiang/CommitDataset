[+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +, +, +			logger.debug("Registered bean definition for imported class '" + configBeanName + "'");, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +, +, +			logger.debug("Registered bean definition for imported class '" + configBeanName + "'");, +++ b/spring-context/src/main/java/org/springframework/context/annotation/Import.java, + * Copyright 2002-2015 the original author or authors., + * Allows for importing {@code @Configuration} classes, {@link ImportSelector} and, + * {@link ImportBeanDefinitionRegistrar} implementations, as well as regular component, + * classes (as of 4.2; analogous to {@link AnnotationConfigApplicationContext#register})., + * <p>{@code @Bean} definitions declared in imported {@code @Configuration} classes should be, + * accessed by using {@link org.springframework.beans.factory.annotation.Autowired @Autowired}, + * declaring the bean can be autowired. The latter approach allows for explicit, IDE-friendly, + * navigation between {@code @Configuration} class methods., + * imported, use the {@link ImportResource @ImportResource} annotation instead., + * @author Juergen Hoeller, +	 * @{@link Configuration}, {@link ImportSelector}, {@link ImportBeanDefinitionRegistrar}, +	 * or regular component classes to import., +, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +, +, +			logger.debug("Registered bean definition for imported class '" + configBeanName + "'");, +++ b/spring-context/src/main/java/org/springframework/context/annotation/Import.java, + * Copyright 2002-2015 the original author or authors., + * Allows for importing {@code @Configuration} classes, {@link ImportSelector} and, + * {@link ImportBeanDefinitionRegistrar} implementations, as well as regular component, + * classes (as of 4.2; analogous to {@link AnnotationConfigApplicationContext#register})., + * <p>{@code @Bean} definitions declared in imported {@code @Configuration} classes should be, + * accessed by using {@link org.springframework.beans.factory.annotation.Autowired @Autowired}, + * declaring the bean can be autowired. The latter approach allows for explicit, IDE-friendly, + * navigation between {@code @Configuration} class methods., + * imported, use the {@link ImportResource @ImportResource} annotation instead., + * @author Juergen Hoeller, +	 * @{@link Configuration}, {@link ImportSelector}, {@link ImportBeanDefinitionRegistrar}, +	 * or regular component classes to import., +, +++ b/spring-context/src/test/java/org/springframework/context/annotation/configuration/ImportTests.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.annotation.DependsOn;, + * @author Juergen Hoeller, +		beanFactory.preInstantiateSingletons();, +		for (Class<?> clazz : classes) {, +			beanFactory.getBean(clazz);, +		}, +, +		int configClasses = 4;, +		assertBeanDefinitionCount(configClasses + beansInClasses, FirstLevel.class);, +		assertBeanDefinitionCount((configClasses + beansInClasses), WithMultipleArgumentsToImportAnnotation.class);, +	@Import({ThirdLevel.class, InitBean.class}), +	@DependsOn("org.springframework.context.annotation.configuration.ImportTests$InitBean"), +		public ThirdLevel() {, +			assertTrue(InitBean.initialized);, +		}, +, +	static class InitBean {, +		public static boolean initialized = false;, +, +		public InitBean() {, +			initialized = true;, +		}, +	}, +, +	@Test, +	public void testImportNonConfigurationAnnotationClass() {, +		int configClasses = 2;, +		int beansInClasses = 0;, +		assertBeanDefinitionCount((configClasses + beansInClasses), ConfigAnnotated.class);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +, +, +			logger.debug("Registered bean definition for imported class '" + configBeanName + "'");, +++ b/spring-context/src/main/java/org/springframework/context/annotation/Import.java, + * Copyright 2002-2015 the original author or authors., + * Allows for importing {@code @Configuration} classes, {@link ImportSelector} and, + * {@link ImportBeanDefinitionRegistrar} implementations, as well as regular component, + * classes (as of 4.2; analogous to {@link AnnotationConfigApplicationContext#register})., + * <p>{@code @Bean} definitions declared in imported {@code @Configuration} classes should be, + * accessed by using {@link org.springframework.beans.factory.annotation.Autowired @Autowired}, + * declaring the bean can be autowired. The latter approach allows for explicit, IDE-friendly, + * navigation between {@code @Configuration} class methods., + * imported, use the {@link ImportResource @ImportResource} annotation instead., + * @author Juergen Hoeller, +	 * @{@link Configuration}, {@link ImportSelector}, {@link ImportBeanDefinitionRegistrar}, +	 * or regular component classes to import., +, +++ b/spring-context/src/test/java/org/springframework/context/annotation/configuration/ImportTests.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.annotation.DependsOn;, + * @author Juergen Hoeller, +		beanFactory.preInstantiateSingletons();, +		for (Class<?> clazz : classes) {, +			beanFactory.getBean(clazz);, +		}, +, +		int configClasses = 4;, +		assertBeanDefinitionCount(configClasses + beansInClasses, FirstLevel.class);]