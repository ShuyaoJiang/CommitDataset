[+++ b/org.springframework.core/src/main/java/org/springframework/core/io/VfsResource.java, + * Supports the corresponding VFS API versions on JBoss AS 5.x as well as 6.x., +, +, +		return VfsUtils.exists(this.resource);, +		return VfsUtils.isReadable(this.resource);, +		return VfsUtils.getLastModified(this.resource);, +		return VfsUtils.getInputStream(this.resource);, +			return VfsUtils.getURL(this.resource);, +		}, +		catch (Exception ex) {, +			return VfsUtils.getURI(this.resource);, +		}, +		catch (Exception ex) {, +		return VfsUtils.getFile(this.resource);, +				return new VfsResource(VfsUtils.getChild(this.resource, relativePath));, +			}, +			catch (IOException ex) {, +				// fall back to getRelative, +		return VfsUtils.getName(this.resource);, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/VfsResource.java, + * Supports the corresponding VFS API versions on JBoss AS 5.x as well as 6.x., +, +, +		return VfsUtils.exists(this.resource);, +		return VfsUtils.isReadable(this.resource);, +		return VfsUtils.getLastModified(this.resource);, +		return VfsUtils.getInputStream(this.resource);, +			return VfsUtils.getURL(this.resource);, +		}, +		catch (Exception ex) {, +			return VfsUtils.getURI(this.resource);, +		}, +		catch (Exception ex) {, +		return VfsUtils.getFile(this.resource);, +				return new VfsResource(VfsUtils.getChild(this.resource, relativePath));, +			}, +			catch (IOException ex) {, +				// fall back to getRelative, +		return VfsUtils.getName(this.resource);, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/VfsUtils.java, + * Copyright 2002-2010 the original author or authors., + * JBoss AS 5+ uses VFS 2.x (package <code>org.jboss.virtual</code>) while, + * JBoss AS 6+ uses VFS 3.x (package <code>org.jboss.vfs</code>)., + * <p>Thanks go to Marius Bogoevici for the initial patch., + * @since 3.0.3, +	private static final Log logger = LogFactory.getLog(VfsUtils.class);, +	private static enum VFS_VER { V2, V3 }, +	private static VFS_VER version;, +		String pkg;, +		Class<?> vfsClass;, +		// check for JBoss 6, +			if (logger.isDebugEnabled()) {, +				logger.debug("JBoss VFS packages for JBoss AS 6 found");, +			}, +		}, +		catch (ClassNotFoundException ex) {, +			if (logger.isDebugEnabled()), +				logger.debug("JBoss VFS packages for JBoss AS 6 not found; falling back to JBoss AS 5 packages");, +				if (logger.isDebugEnabled()), +					logger.debug("JBoss VFS packages for JBoss AS 5 found");, +				logger.error("JBoss VFS packages (for both JBoss AS 5 and 6) were not found - JBoss VFS support disabled");, +		}, +		catch (ClassNotFoundException ex) {, +		}, +		catch (InvocationTargetException ex) {, +		}, +		catch (Exception ex) {, +		}, +		catch (IOException ex) {, +		}, +		catch (IOException ex) {, +		}, +		catch (IOException ex) {, +			}, +			catch (Exception ex) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/VfsResource.java, + * Supports the corresponding VFS API versions on JBoss AS 5.x as well as 6.x., +, +, +		return VfsUtils.exists(this.resource);, +		return VfsUtils.isReadable(this.resource);, +		return VfsUtils.getLastModified(this.resource);, +		return VfsUtils.getInputStream(this.resource);, +			return VfsUtils.getURL(this.resource);, +		}, +		catch (Exception ex) {, +			return VfsUtils.getURI(this.resource);, +		}, +		catch (Exception ex) {, +		return VfsUtils.getFile(this.resource);, +				return new VfsResource(VfsUtils.getChild(this.resource, relativePath));, +			}, +			catch (IOException ex) {, +				// fall back to getRelative, +		return VfsUtils.getName(this.resource);, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/VfsUtils.java]