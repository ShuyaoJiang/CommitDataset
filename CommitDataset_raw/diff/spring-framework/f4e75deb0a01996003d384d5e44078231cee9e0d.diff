[+++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/core/BatchUpdateTestHelper.java, +import java.util.Map;, +	public static void prepareBatchUpdateMocks(String sqlToUse, Object ids, int[] sqlTypes,, +		else if (ids instanceof Map[]) {, +			idLength = ((Map[])ids).length;, +		}, +				if (sqlTypes != null) {, +					mockPreparedStatement.setObject(1, ((SqlParameterSource[])ids)[i].getValue("id"), sqlTypes[0]);, +				}, +				else {, +			}, +			else if (ids instanceof Map[]) {, +				if (sqlTypes != null) {, +					mockPreparedStatement.setObject(1, ((Map[])ids)[i].get("id"), sqlTypes[0]);, +				}, +				else {, +					mockPreparedStatement.setObject(1, ((Map[])ids)[i].get("id"));, +				}, +			}, +			else {, +				if (sqlTypes != null) {, +					mockPreparedStatement.setObject(1, ((Object[])((List)ids).get(i))[0], sqlTypes[0]);, +				}, +			}, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/core/BatchUpdateTestHelper.java, +import java.util.Map;, +	public static void prepareBatchUpdateMocks(String sqlToUse, Object ids, int[] sqlTypes,, +		else if (ids instanceof Map[]) {, +			idLength = ((Map[])ids).length;, +		}, +				if (sqlTypes != null) {, +					mockPreparedStatement.setObject(1, ((SqlParameterSource[])ids)[i].getValue("id"), sqlTypes[0]);, +				}, +				else {, +			}, +			else if (ids instanceof Map[]) {, +				if (sqlTypes != null) {, +					mockPreparedStatement.setObject(1, ((Map[])ids)[i].get("id"), sqlTypes[0]);, +				}, +				else {, +					mockPreparedStatement.setObject(1, ((Map[])ids)[i].get("id"));, +				}, +			}, +			else {, +				if (sqlTypes != null) {, +					mockPreparedStatement.setObject(1, ((Object[])((List)ids).get(i))[0], sqlTypes[0]);, +				}, +			}, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplateTests.java, +import java.util.Collections;, +	public void testBatchUpdateWithPlainMap() throws Exception {, +, +		final String sqlToUse = "UPDATE NOSUCHTABLE SET DATE_DISPATCHED = SYSDATE WHERE ID = ?";, +		final String sql = "UPDATE NOSUCHTABLE SET DATE_DISPATCHED = SYSDATE WHERE ID = :id";, +		final Map[] ids = new Map[2];, +		ids[0] = Collections.singletonMap("id", 100);, +		ids[1] = Collections.singletonMap("id", 200);, +		final int[] rowsAffected = new int[] { 1, 2 };, +, +		MockControl ctrlDataSource = MockControl.createControl(DataSource.class);, +		DataSource mockDataSource = (DataSource) ctrlDataSource.getMock();, +		MockControl ctrlConnection = MockControl.createControl(Connection.class);, +		Connection mockConnection = (Connection) ctrlConnection.getMock();, +		MockControl ctrlPreparedStatement = MockControl.createControl(PreparedStatement.class);, +		PreparedStatement mockPreparedStatement = (PreparedStatement) ctrlPreparedStatement.getMock();, +		MockControl ctrlDatabaseMetaData = MockControl.createControl(DatabaseMetaData.class);, +		DatabaseMetaData mockDatabaseMetaData = (DatabaseMetaData) ctrlDatabaseMetaData.getMock();, +, +		BatchUpdateTestHelper.prepareBatchUpdateMocks(sqlToUse, ids, null, rowsAffected, ctrlDataSource, mockDataSource, ctrlConnection,, +				mockConnection, ctrlPreparedStatement, mockPreparedStatement, ctrlDatabaseMetaData,, +				mockDatabaseMetaData);, +, +		BatchUpdateTestHelper.replayBatchUpdateMocks(ctrlDataSource, ctrlConnection, ctrlPreparedStatement, ctrlDatabaseMetaData);, +, +		JdbcTemplate template = new JdbcTemplate(mockDataSource, false);, +		NamedParameterJdbcTemplate namedParameterJdbcTemplate = new NamedParameterJdbcTemplate(template);, +, +		int[] actualRowsAffected = namedParameterJdbcTemplate.batchUpdate(sql, ids);, +, +		assertTrue("executed 2 updates", actualRowsAffected.length == 2);, +		assertEquals(rowsAffected[0], actualRowsAffected[0]);, +		assertEquals(rowsAffected[1], actualRowsAffected[1]);, +, +		BatchUpdateTestHelper.verifyBatchUpdateMocks(ctrlPreparedStatement, ctrlDatabaseMetaData);, +, +	}, +, +		BatchUpdateTestHelper.prepareBatchUpdateMocks(sqlToUse, ids, null, rowsAffected, ctrlDataSource, mockDataSource, ctrlConnection,, +				mockConnection, ctrlPreparedStatement, mockPreparedStatement, ctrlDatabaseMetaData,, +				mockDatabaseMetaData);, +, +		BatchUpdateTestHelper.replayBatchUpdateMocks(ctrlDataSource, ctrlConnection, ctrlPreparedStatement, ctrlDatabaseMetaData);, +, +		JdbcTemplate template = new JdbcTemplate(mockDataSource, false);, +		NamedParameterJdbcTemplate namedParameterJdbcTemplate = new NamedParameterJdbcTemplate(template);, +, +		int[] actualRowsAffected = namedParameterJdbcTemplate.batchUpdate(sql, ids);, +, +		assertTrue("executed 2 updates", actualRowsAffected.length == 2);, +		assertEquals(rowsAffected[0], actualRowsAffected[0]);]