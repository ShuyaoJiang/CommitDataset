[+++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheResolver.java, + * Copyright 2002-2015 the original author or authors., + * <p>Implementations must be thread-safe., +	 * @return the cache(s) to use (never {@code null}), +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheResolver.java, + * Copyright 2002-2015 the original author or authors., + * <p>Implementations must be thread-safe., +	 * @return the cache(s) to use (never {@code null}), +++ b/spring-web/src/main/java/org/springframework/http/ResponseEntity.java, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheResolver.java, + * Copyright 2002-2015 the original author or authors., + * <p>Implementations must be thread-safe., +	 * @return the cache(s) to use (never {@code null}), +++ b/spring-web/src/main/java/org/springframework/http/ResponseEntity.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.java, + * @author Brian Clozel, +, +, +		return (HttpEntity.class.equals(parameter.getParameterType()) ||, +				RequestEntity.class.equals(parameter.getParameterType()));, +		return (HttpEntity.class.isAssignableFrom(returnType.getParameterType()) &&, +				!RequestEntity.class.isAssignableFrom(returnType.getParameterType()));, +				// Ensure headers are flushed, no body should be written., +				// Skip call to converters, as they may update the body., +		// Ensure headers are flushed even if no body was written.]