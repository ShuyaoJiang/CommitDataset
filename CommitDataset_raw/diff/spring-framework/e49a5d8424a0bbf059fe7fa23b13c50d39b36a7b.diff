[+++ b/build.gradle, +	ext.kotlinVersion = '1.1.2-eap-73', +		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }, +	ext.annotationApiVersion   = "1.2", +	ext.caffeineVersion        = "2.4.0", +	ext.ehcacheVersion         = "2.10.3", +	ext.groovyVersion          = "2.4.10", +	ext.jackson2Version        = "2.9.0.pr2", +	ext.jettyVersion           = "9.4.3.v20170317", +	ext.nettyVersion           = "4.1.9.Final", +	ext.okhttp3Version         = "3.6.0", +	ext.poiVersion             = "3.15", +	ext.protobufVersion        = "3.2.0", +	ext.quartzVersion          = "2.2.3", +	ext.reactorVersion         = "Bismuth-BUILD-SNAPSHOT", +	ext.romeVersion            = "1.7.1", +	ext.rxjavaVersion          = '1.2.9', +	ext.rxjava2Version         = '2.0.8', +	ext.tomcatVersion          = "8.5.13", +	ext.undertowVersion        = "1.4.12.Final", +	ext.xnioVersion            = "3.4.5.Final", +	// Kotlin compiler does not support JDK 9 yet, see https://youtrack.jetbrains.com/issue/KT-14988, +	if (!JavaVersion.current().java9Compatible) {, +	}, +		maven { url "https://repo.spring.io/libs-snapshot" }, +		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }, +		optional("org.apache.logging.log4j:log4j-api:${log4jVersion}"), +		optional("org.slf4j:slf4j-api:${slf4jVersion}"), +		optional("io.netty:netty-buffer:${nettyVersion}"), +		optional("io.netty:netty-all:${nettyVersion}"), +		testCompile("io.netty:netty-all:${nettyVersion}"), +		testRuntime("javax.activation:activation:${activationApiVersion}"), +, +	if (JavaVersion.current().java9Compatible) {, +		// Reactor2TcpClient's use of Netty requires access to sun.nio.ch.SelectorImpl, +		test.jvmArgs(["--add-exports", "java.base/sun.nio.ch=ALL-UNNAMED"]), +	}, +		testRuntime("javax.activation:activation:${activationApiVersion}"), +		optional("com.h2database:h2:1.4.194"), +		optional("javax.activation:activation:${activationApiVersion}"), +		optional("org.jboss.xnio:xnio-api:${xnioVersion}"), +		optional("io.netty:netty-buffer:${nettyVersion}")  // temporarily for JsonObjectDecoder, +		optional("io.netty:netty-all:${nettyVersion}"), +		optional("javax.json.bind:javax.json.bind-api:1.0.0-M1"), +		testCompile(project(":spring-context-support"))  // for JafMediaTypeFactory, +		testCompile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jackson2Version}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +		testRuntime("org.jboss.logging:jboss-logging:3.3.1.Final"), +	}, +, +	if (JavaVersion.current().java9Compatible) {, +		// Netty4ClientHttpRequestFactory requires access to sun.nio.ch.SelectorImpl, +		test.jvmArgs(["--add-exports", "java.base/sun.nio.ch=ALL-UNNAMED"]), +		testCompile("org.jboss.xnio:xnio-api:${xnioVersion}"), +		testRuntime("javax.el:javax.el-api:${elApiVersion}"), +		testRuntime("javax.activation:activation:${activationApiVersion}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +		testRuntime("org.jboss.logging:jboss-logging:3.3.1.Final"), +		testRuntime("org.webjars:underscorejs:1.8.3"), +		testRuntime("org.jruby:jruby:9.1.8.0"), +		testRuntime("org.python:jython-standalone:2.5.3"), +		testRuntime("org.jetbrains.kotlin:kotlin-compiler:${kotlinVersion}"), +		testCompile("org.jetbrains.kotlin:kotlin-script-runtime:${kotlinVersion}"), +		testRuntime("org.jetbrains.kotlin:kotlin-script-util:${kotlinVersion}"), +	}, +, +	if (JavaVersion.current().java9Compatible) {, +		// ReactorClientHttpConnector requires access to sun.nio.ch.SelectorImpl, +		test.jvmArgs(["--add-exports", "java.base/sun.nio.ch=ALL-UNNAMED"]), +		testRuntime("org.jetbrains.kotlin:kotlin-compiler:${kotlinVersion}"), +		testCompile("org.jetbrains.kotlin:kotlin-script-runtime:${kotlinVersion}"), +		testRuntime("org.jetbrains.kotlin:kotlin-script-util:${kotlinVersion}"), +		testRuntime("javax.activation:activation:${activationApiVersion}"), +		optional("org.jboss.xnio:xnio-api:${xnioVersion}"), +		testCompile("io.netty:netty-all:${nettyVersion}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +		testRuntime("org.jboss.logging:jboss-logging:3.3.1.Final"), +	}, +, +	if (JavaVersion.current().java9Compatible) {, +		// Reactor2TcpClient's use of Netty requires access to sun.nio.ch.SelectorImpl, +		test.jvmArgs(["--add-exports", "java.base/sun.nio.ch=ALL-UNNAMED"]), +		optional("org.seleniumhq.selenium:selenium-java:3.3.1") {, +		optional("org.skyscreamer:jsonassert:1.4.0"), +		// Pull in the latest Launcher API and the Vintage engine so, +		// that we can run JUnit 4 tests in IntelliJ IDEA., +++ b/build.gradle, +	ext.kotlinVersion = '1.1.2-eap-73', +		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }, +	ext.annotationApiVersion   = "1.2", +	ext.caffeineVersion        = "2.4.0", +	ext.ehcacheVersion         = "2.10.3", +	ext.groovyVersion          = "2.4.10", +	ext.jackson2Version        = "2.9.0.pr2", +	ext.jettyVersion           = "9.4.3.v20170317", +	ext.nettyVersion           = "4.1.9.Final", +	ext.okhttp3Version         = "3.6.0", +	ext.poiVersion             = "3.15", +	ext.protobufVersion        = "3.2.0", +	ext.quartzVersion          = "2.2.3"]