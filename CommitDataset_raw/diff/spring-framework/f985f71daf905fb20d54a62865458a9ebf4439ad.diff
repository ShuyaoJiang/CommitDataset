[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +		bdd.setAutowireMode(getAutowireMode(DEFAULT_VALUE));, +		else if (this.defaults.getInitMethod() != null) {, +		else if (this.defaults.getDestroyMethod() != null) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +		bdd.setAutowireMode(getAutowireMode(DEFAULT_VALUE));, +		else if (this.defaults.getInitMethod() != null) {, +		else if (this.defaults.getDestroyMethod() != null) {, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/AbstractClientHttpRequest.java, +	 * @param writeAction the action to write the request body (may be {@code null}), +, +	 * Apply header changes from {@link #getHeaders()} to the underlying response., +	 * This method is called once only., +	 * Add cookies from {@link #getHeaders()} to the underlying response., +	 * This method is called once only., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +		bdd.setAutowireMode(getAutowireMode(DEFAULT_VALUE));, +		else if (this.defaults.getInitMethod() != null) {, +		else if (this.defaults.getDestroyMethod() != null) {, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/AbstractClientHttpRequest.java, +	 * @param writeAction the action to write the request body (may be {@code null}), +, +	 * Apply header changes from {@link #getHeaders()} to the underlying response., +	 * This method is called once only., +	 * Add cookies from {@link #getHeaders()} to the underlying response., +	 * This method is called once only., +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +	 * @param writeAction the action to write the response body (may be {@code null}), +	 * Write to the underlying the response., +	 * Write to the underlying the response, and flush after each {@code Publisher<DataBuffer>}., +	 * Write the status code to the underlying response., +	 * Apply header changes from {@link #getHeaders()} to the underlying response., +	 * This method is called once only., +	 * Add cookies from {@link #getHeaders()} to the underlying response., +	 * This method is called once only.]