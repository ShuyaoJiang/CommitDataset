[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.java, +		hm.afterPropertiesSet();, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.java, +		hm.afterPropertiesSet();, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilderTests.java, +import org.springframework.web.bind.annotation.PathVariable;, +	// SPR-10825, +	@Test, +	public void placeHoldersInRequestMapping() throws Exception {, +	// SPR-13637, +, +	@Test, +	public void suffixPatternMatch() throws Exception {, +		TestStandaloneMockMvcBuilder builder = new TestStandaloneMockMvcBuilder(new PersonController());, +		builder.setUseSuffixPatternMatch(false);, +		builder.build();, +, +		RequestMappingHandlerMapping hm = builder.wac.getBean(RequestMappingHandlerMapping.class);, +, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/persons");, +		HandlerExecutionChain chain = hm.getHandler(request);, +		assertNotNull(chain);, +		assertEquals("persons", ((HandlerMethod) chain.getHandler()).getMethod().getName());, +, +		request = new MockHttpServletRequest("GET", "/persons.xml");, +		chain = hm.getHandler(request);, +		assertNull(chain);, +	}, +, +	// SPR-12553, +, +	@Test, +	// SPR-13375, +, +	@Test, +	@SuppressWarnings("unused"), +	@SuppressWarnings("unused"), +, +		@RequestMapping(value="/persons"), +		public String persons() {, +			return null;, +		}, +, +, +]