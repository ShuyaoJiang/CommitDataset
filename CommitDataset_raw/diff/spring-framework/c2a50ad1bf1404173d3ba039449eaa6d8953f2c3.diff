[+++ b/spring-web/src/main/java/org/springframework/web/filter/ForwardedHeaderFilter.java, +	private final UrlPathHelper pathHelper = new UrlPathHelper();, +		filterChain.doFilter(new ForwardedHeaderRequestWrapper(request, this.pathHelper), response);, +, +		public ForwardedHeaderRequestWrapper(HttpServletRequest request, UrlPathHelper pathHelper) {, +			String prefix = getForwardedPrefix(request);, +			this.contextPath = (prefix != null ? prefix : request.getContextPath());, +			this.requestUri = this.contextPath + pathHelper.getPathWithinApplication(request);, +			this.requestUrl = new StringBuffer(this.scheme + "://" + this.host +, +					(port == -1 ? "" : ":" + port) + this.requestUri);, +		private static String getForwardedPrefix(HttpServletRequest request) {, +			String header = request.getHeader("X-Forwarded-Prefix");, +			if (header != null) {, +				while (header.endsWith("/")) {, +					header = header.substring(0, header.length() - 1);, +			return header;, +		// Override header accessors to not expose forwarded headers, +++ b/spring-web/src/main/java/org/springframework/web/filter/ForwardedHeaderFilter.java, +	private final UrlPathHelper pathHelper = new UrlPathHelper();, +		filterChain.doFilter(new ForwardedHeaderRequestWrapper(request, this.pathHelper), response);, +, +		public ForwardedHeaderRequestWrapper(HttpServletRequest request, UrlPathHelper pathHelper) {, +			String prefix = getForwardedPrefix(request);, +			this.contextPath = (prefix != null ? prefix : request.getContextPath());, +			this.requestUri = this.contextPath + pathHelper.getPathWithinApplication(request);, +			this.requestUrl = new StringBuffer(this.scheme + "://" + this.host +, +					(port == -1 ? "" : ":" + port) + this.requestUri);, +		private static String getForwardedPrefix(HttpServletRequest request) {, +			String header = request.getHeader("X-Forwarded-Prefix");, +			if (header != null) {, +				while (header.endsWith("/")) {, +					header = header.substring(0, header.length() - 1);, +			return header;, +		// Override header accessors to not expose forwarded headers, +++ b/spring-web/src/test/java/org/springframework/web/filter/ForwardedHeaderFilterTests.java, +		this.request.addHeader("X-Forwarded-Prefix", "");, +		this.request.addHeader("X-Forwarded-Prefix", "/foo/bar/");, +		this.request.addHeader("X-Forwarded-Prefix", "/foo/bar/baz///");, +		this.request.addHeader("X-Forwarded-Prefix", "/");, +		assertEquals("", actual.getContextPath());, +		this.request.addHeader("X-Forwarded-Prefix", "/");, +		assertEquals("", actual.getContextPath());, +		this.request.addHeader("X-Forwarded-Prefix", "/");, +		assertEquals("", actual.getContextPath());, +		this.request.addHeader("X-Forwarded-Prefix", "/");, +		assertEquals("", actual.getContextPath());, +		assertEquals("/prefix", actual);, +		assertEquals("/prefix", actual);]