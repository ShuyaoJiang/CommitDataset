[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler.java, +			if(httpEntity.getBody() == null) {, +				exchange.getResponse().setComplete();, +				return Mono.empty();, +			}, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler.java, +			if(httpEntity.getBody() == null) {, +				exchange.getResponse().setComplete();, +				return Mono.empty();, +			}, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandlerTests.java, +import static org.springframework.http.ResponseEntity.notFound;, +	public void handleResponseEntityWithNullBody() throws Exception {, +		Object returnValue = Mono.just(notFound().build());, +		ResolvableType returnType = forClassWithGenerics(Mono.class, responseEntity(String.class));, +		HandlerResult result = handlerResult(returnValue, returnType);, +		this.resultHandler.handleResult(this.exchange, result).block(Duration.ofSeconds(5));, +		assertEquals(HttpStatus.NOT_FOUND, this.response.getStatusCode());, +		assertNull(this.response.getBody());, +	}, +, +	@Test]