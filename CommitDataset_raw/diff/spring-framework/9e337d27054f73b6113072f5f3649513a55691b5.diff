[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlRowSetResultSetExtractor.java, + * Copyright 2002-2012 the original author or authors., +import javax.sql.rowset.RowSetFactory;, +import javax.sql.rowset.RowSetProvider;, +import org.springframework.core.JdkVersion;, + * {@link ResultSetExtractor} implementation that returns a Spring {@link SqlRowSet}, + * representation for each given {@link ResultSet}., +	private static final CachedRowSetFactory cachedRowSetFactory;, +		if (JdkVersion.getMajorJavaVersion() >= JdkVersion.JAVA_17) {, +			// using JDBC 4.1 RowSetProvider, +			cachedRowSetFactory = new StandardCachedRowSetFactory();, +		else {, +			cachedRowSetFactory = new SunCachedRowSetFactory();, +	 * <p>The default implementation uses JDBC 4.1's RowSetProvider, +	 * when running on JDK 7 or higher, falling back to Sun's, +	 * <code>com.sun.rowset.CachedRowSetImpl</code> class on older JDKs., +		return cachedRowSetFactory.createCachedRowSet();, +, +, +	/**, +	 * Internal strategy interface for the creation of CachedRowSet instances., +	 */, +	private interface CachedRowSetFactory {, +, +		CachedRowSet createCachedRowSet() throws SQLException;, +	}, +, +, +	/**, +	 * Inner class to avoid a hard dependency on JDBC 4.1 RowSetProvider class., +	 */, +	private static class StandardCachedRowSetFactory implements CachedRowSetFactory {, +, +		private final RowSetFactory rowSetFactory;, +, +		public StandardCachedRowSetFactory() {, +			try {, +				this.rowSetFactory = RowSetProvider.newFactory();, +			}, +			catch (SQLException ex) {, +				throw new IllegalStateException("Cannot create RowSetFactory through RowSetProvider", ex);, +			}, +		}, +, +		public CachedRowSet createCachedRowSet() throws SQLException {, +			return this.rowSetFactory.createCachedRowSet();, +		}, +	}, +, +, +	/**, +	 * Inner class to avoid a hard dependency on Sun's CachedRowSetImpl class., +	 */, +	private static class SunCachedRowSetFactory implements CachedRowSetFactory {, +, +		public CachedRowSet createCachedRowSet() throws SQLException {]