[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.java, + * @see #handleMethodArgumentNotValidException, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.java, + * @see #handleMethodArgumentNotValidException, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/support/DefaultFlashMapManager.java, +			FlashMap match = matches.remove(0);, +			allMaps.remove(match);, +			return match;, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.java, + * @see #handleMethodArgumentNotValidException, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/support/DefaultFlashMapManager.java, +			FlashMap match = matches.remove(0);, +			allMaps.remove(match);, +			return match;, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/FlashMapTests.java, +/*, + * Copyright 2002-2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.servlet;, +, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +, +import org.junit.Test;, +import org.springframework.mock.web.MockHttpServletRequest;, +import org.springframework.ui.ModelMap;, +import org.springframework.web.servlet.FlashMap;, +, +/**, + * Test fixture for {@link FlashMap} tests., + * , + * @author Rossen Stoyanchev, + */, +public class FlashMapTests {, +, +	@Test, +	public void matchAnyUrlPath() {, +		FlashMap flashMap = new FlashMap();, +, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "")));, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "/")));, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "/yes")));, +	}, +, +	@Test, +	public void matchUrlPath() {, +		FlashMap flashMap = new FlashMap();, +		flashMap.setExpectedUrlPath(null, "/yes");, +, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "/yes")));, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "/yes/")));, +		assertFalse(flashMap.matches(new MockHttpServletRequest("GET", "/yes/but")));, +		assertFalse(flashMap.matches(new MockHttpServletRequest("GET", "/no")));, +, +		flashMap.setExpectedUrlPath(null, "/thats it?");, +, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "/thats it")));, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "/thats%20it")));, +	}, +, +	@Test, +	public void matchRelativeUrlPath() {, +		FlashMap flashMap = new FlashMap();, +, +		flashMap.setExpectedUrlPath(new MockHttpServletRequest("GET", "/oh/no"), "yes");, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "/oh/yes")));, +, +		flashMap.setExpectedUrlPath(new MockHttpServletRequest("GET", "/oh/not/again"), "../ok");, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "/oh/ok")));, +, +		flashMap.setExpectedUrlPath(new MockHttpServletRequest("GET", "/yes/it/is"), "..");, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "/yes")));, +, +		flashMap.setExpectedUrlPath(new MockHttpServletRequest("GET", "/yes/it/is"), "../");, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "/yes")));, +, +		flashMap.setExpectedUrlPath(new MockHttpServletRequest("GET", "/thats it/really"), "./");, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "/thats%20it")));, +	}, +, +	@Test, +	public void matchAbsoluteUrlPath() {, +		FlashMap flashMap = new FlashMap();, +		flashMap.setExpectedUrlPath(new MockHttpServletRequest(), "http://example.com");, +, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "")));]