[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java, +							exchange.getResponse().getHeaders().set(HttpHeaders.ACCEPT_RANGES, "bytes");, +					catch (IOException ex) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java, +							exchange.getResponse().getHeaders().set(HttpHeaders.ACCEPT_RANGES, "bytes");, +					catch (IOException ex) {, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/resource/ResourceWebHandlerTests.java, +		TestSubscriber.subscribe(this.handler.handle(this.exchange)).assertComplete();, +, +		assertEquals(HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE, this.response.getStatusCode());, +		assertEquals("bytes", this.response.getHeaders().getFirst("Accept-Ranges"));, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java, +							exchange.getResponse().getHeaders().set(HttpHeaders.ACCEPT_RANGES, "bytes");, +					catch (IOException ex) {, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/resource/ResourceWebHandlerTests.java, +		TestSubscriber.subscribe(this.handler.handle(this.exchange)).assertComplete();, +, +		assertEquals(HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE, this.response.getStatusCode());, +		assertEquals("bytes", this.response.getHeaders().getFirst("Accept-Ranges"));, +++ b/spring-web/src/main/java/org/springframework/http/codec/ResourceHttpMessageWriter.java, +		try {, +			response.getHeaders().set(HttpHeaders.ACCEPT_RANGES, "bytes");, +		catch (IllegalArgumentException exc) {, +			response.setStatusCode(HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE);, +			return response.setComplete();, +		}, +	}, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java, +							exchange.getResponse().getHeaders().set(HttpHeaders.ACCEPT_RANGES, "bytes");, +					catch (IOException ex) {, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/resource/ResourceWebHandlerTests.java, +		TestSubscriber.subscribe(this.handler.handle(this.exchange)).assertComplete();, +, +		assertEquals(HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE, this.response.getStatusCode());, +		assertEquals("bytes", this.response.getHeaders().getFirst("Accept-Ranges"));, +++ b/spring-web/src/main/java/org/springframework/http/codec/ResourceHttpMessageWriter.java, +		try {, +			response.getHeaders().set(HttpHeaders.ACCEPT_RANGES, "bytes");, +		catch (IllegalArgumentException exc) {, +			response.setStatusCode(HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE);, +			return response.setComplete();, +		}, +	}, +++ b/spring-web/src/test/java/org/springframework/http/codec/ResourceHttpMessageWriterTests.java, +import org.springframework.http.HttpStatus;, +		assertThat(this.response.getHeaders().getFirst(HttpHeaders.ACCEPT_RANGES), is("bytes"));, +		assertThat(this.response.getHeaders().getFirst(HttpHeaders.ACCEPT_RANGES), is("bytes"));, +	public void shouldSetRangeNotSatisfiableStatus() throws Exception {, +, +		assertThat(this.response.getHeaders().getFirst(HttpHeaders.ACCEPT_RANGES), is("bytes"));, +		assertThat(this.response.getStatusCode(), is(HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE));]