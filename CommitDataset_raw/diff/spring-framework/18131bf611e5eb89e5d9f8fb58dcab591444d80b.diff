[+++ b/spring-aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(JdkDynamicAopProxy.class);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(JdkDynamicAopProxy.class);, +++ b/spring-context/src/main/java/org/springframework/validation/ValidationUtils.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(ValidationUtils.class);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(JdkDynamicAopProxy.class);, +++ b/spring-context/src/main/java/org/springframework/validation/ValidationUtils.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(ValidationUtils.class);, +++ b/spring-core/src/main/java/org/springframework/core/LocalVariableTableParameterNameDiscoverer.java, +	private static final Log logger = LogFactory.getLog(LocalVariableTableParameterNameDiscoverer.class);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(JdkDynamicAopProxy.class);, +++ b/spring-context/src/main/java/org/springframework/validation/ValidationUtils.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(ValidationUtils.class);, +++ b/spring-core/src/main/java/org/springframework/core/LocalVariableTableParameterNameDiscoverer.java, +	private static final Log logger = LogFactory.getLog(LocalVariableTableParameterNameDiscoverer.class);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.java, +	private static final Log logger = LogFactory.getLog(EmbeddedDatabaseFactory.class);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(JdkDynamicAopProxy.class);, +++ b/spring-context/src/main/java/org/springframework/validation/ValidationUtils.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(ValidationUtils.class);, +++ b/spring-core/src/main/java/org/springframework/core/LocalVariableTableParameterNameDiscoverer.java, +	private static final Log logger = LogFactory.getLog(LocalVariableTableParameterNameDiscoverer.class);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.java, +	private static final Log logger = LogFactory.getLog(EmbeddedDatabaseFactory.class);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/HandlerMethodReturnValueHandlerComposite.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(HandlerMethodReturnValueHandlerComposite.class);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(JdkDynamicAopProxy.class);, +++ b/spring-context/src/main/java/org/springframework/validation/ValidationUtils.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(ValidationUtils.class);, +++ b/spring-core/src/main/java/org/springframework/core/LocalVariableTableParameterNameDiscoverer.java, +	private static final Log logger = LogFactory.getLog(LocalVariableTableParameterNameDiscoverer.class);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.java, +	private static final Log logger = LogFactory.getLog(EmbeddedDatabaseFactory.class);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/HandlerMethodReturnValueHandlerComposite.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(HandlerMethodReturnValueHandlerComposite.class);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpAttributes.java, +	public static final String SESSION_MUTEX_NAME = SimpAttributes.class.getName() + ".MUTEX";, +	public static final String SESSION_COMPLETED_NAME = SimpAttributes.class.getName() + ".COMPLETED";, +	public static final String DESTRUCTION_CALLBACK_NAME_PREFIX = SimpAttributes.class.getName() + ".DESTRUCTION_CALLBACK.";, +, +	private static final Log logger = LogFactory.getLog(SimpAttributes.class);, +				catch (Throwable ex) {, +					logger.error("Uncaught error in session attribute destruction callback", ex);, +, +, +	/**, +	 * Extract the SiMP session attributes from the given message, wrap them in, +	 * a {@link SimpAttributes} instance., +	 * @param message the message to extract session attributes from, +	 */, +	public static SimpAttributes fromMessage(Message<?> message) {, +		Assert.notNull(message);, +		MessageHeaders headers = message.getHeaders();, +		String sessionId = SimpMessageHeaderAccessor.getSessionId(headers);, +		Map<String, Object> sessionAttributes = SimpMessageHeaderAccessor.getSessionAttributes(headers);, +		if (sessionId == null || sessionAttributes == null) {, +			throw new IllegalStateException(, +					"Message does not contain SiMP session id or attributes: " + message);, +		}, +		return new SimpAttributes(sessionId, sessionAttributes);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(JdkDynamicAopProxy.class);, +++ b/spring-context/src/main/java/org/springframework/validation/ValidationUtils.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(ValidationUtils.class);, +++ b/spring-core/src/main/java/org/springframework/core/LocalVariableTableParameterNameDiscoverer.java, +	private static final Log logger = LogFactory.getLog(LocalVariableTableParameterNameDiscoverer.class);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.java, +	private static final Log logger = LogFactory.getLog(EmbeddedDatabaseFactory.class);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/HandlerMethodReturnValueHandlerComposite.java, + * Copyright 2002-2014 the original author or authors., +	private static final Log logger = LogFactory.getLog(HandlerMethodReturnValueHandlerComposite.class);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpAttributes.java, +	public static final String SESSION_MUTEX_NAME = SimpAttributes.class.getName() + ".MUTEX";, +	public static final String SESSION_COMPLETED_NAME = SimpAttributes.class.getName() + ".COMPLETED";, +	public static final String DESTRUCTION_CALLBACK_NAME_PREFIX = SimpAttributes.class.getName() + ".DESTRUCTION_CALLBACK.";, +, +	private static final Log logger = LogFactory.getLog(SimpAttributes.class);, +				catch (Throwable ex) {, +					logger.error("Uncaught error in session attribute destruction callback", ex);, +]