[+++ b/build.gradle, +configure(allprojects) {, +	if (rootProject.hasProperty("VERSION_QUALIFIER")) {, +		def qualifier = rootProject.getProperty("VERSION_QUALIFIER"), +		if (qualifier.startsWith("SPR-")) { // topic branch, e.g. SPR-1234, +			// replace 3.2.0.BUILD-SNAPSHOT for 3.2.0.SPR-1234-SNAPSHOT, +			version = version.replace('BUILD', qualifier), +		}, +	}, +, +	group = "org.springframework", +, +	test.systemProperty("java.awt.headless", "true"), +		maven { url "http://repo.springsource.org/ebr-maven-external" }, +configure(allprojects.findAll{it.name in ["spring", "spring-jms", "spring-orm",, +		"spring-orm-hibernate4", "spring-oxm", "spring-struts", "spring-test",, +		"spring-test-mvc", "spring-tx", "spring-web", "spring-webmvc",, +		"spring-webmvc-portlet", "spring-webmvc-tiles3"]}) {, +	dependencies {, +		testCompile("org.easymock:easymock:${easymockVersion}"), +		testCompile "org.easymock:easymockclassextension:${easymockVersion}", +	}, +}, +, +configure(allprojects) {, +	dependencies {, +		testCompile("junit:junit:${junitVersion}"), +		testCompile("org.hamcrest:hamcrest-all:1.3"), +	}, +	test.systemProperties.put("testGroups", properties.get("testGroups")), +}, +, +		testCompile("javax.inject:com.springsource.org.atinject.tck:1.0.0"), +++ b/build.gradle, +configure(allprojects) {, +	if (rootProject.hasProperty("VERSION_QUALIFIER")) {, +		def qualifier = rootProject.getProperty("VERSION_QUALIFIER"), +		if (qualifier.startsWith("SPR-")) { // topic branch, e.g. SPR-1234, +			// replace 3.2.0.BUILD-SNAPSHOT for 3.2.0.SPR-1234-SNAPSHOT, +			version = version.replace('BUILD', qualifier), +		}, +	}, +, +	group = "org.springframework", +, +	test.systemProperty("java.awt.headless", "true"), +		maven { url "http://repo.springsource.org/ebr-maven-external" }, +configure(allprojects.findAll{it.name in ["spring", "spring-jms", "spring-orm",, +		"spring-orm-hibernate4", "spring-oxm", "spring-struts", "spring-test",, +		"spring-test-mvc", "spring-tx", "spring-web", "spring-webmvc",, +		"spring-webmvc-portlet", "spring-webmvc-tiles3"]}) {, +	dependencies {, +		testCompile("org.easymock:easymock:${easymockVersion}"), +		testCompile "org.easymock:easymockclassextension:${easymockVersion}", +	}, +}, +, +configure(allprojects) {, +	dependencies {, +		testCompile("junit:junit:${junitVersion}"), +		testCompile("org.hamcrest:hamcrest-all:1.3"), +	}, +	test.systemProperties.put("testGroups", properties.get("testGroups")), +}, +, +		testCompile("javax.inject:com.springsource.org.atinject.tck:1.0.0"), +++ b/buildSrc/src/main/groovy/org/springframework/build/gradle/TestSourceSetDependenciesPlugin.groovy, +			Set<ProjectDependency> projectDependencies = new LinkedHashSet<>(), +++ b/build.gradle, +configure(allprojects) {, +	if (rootProject.hasProperty("VERSION_QUALIFIER")) {, +		def qualifier = rootProject.getProperty("VERSION_QUALIFIER"), +		if (qualifier.startsWith("SPR-")) { // topic branch, e.g. SPR-1234, +			// replace 3.2.0.BUILD-SNAPSHOT for 3.2.0.SPR-1234-SNAPSHOT, +			version = version.replace('BUILD', qualifier), +		}, +	}, +, +	group = "org.springframework", +, +	test.systemProperty("java.awt.headless", "true"), +		maven { url "http://repo.springsource.org/ebr-maven-external" }, +configure(allprojects.findAll{it.name in ["spring", "spring-jms", "spring-orm",, +		"spring-orm-hibernate4", "spring-oxm", "spring-struts", "spring-test",, +		"spring-test-mvc", "spring-tx", "spring-web", "spring-webmvc",, +		"spring-webmvc-portlet", "spring-webmvc-tiles3"]}) {, +	dependencies {, +		testCompile("org.easymock:easymock:${easymockVersion}"), +		testCompile "org.easymock:easymockclassextension:${easymockVersion}", +	}, +}, +, +configure(allprojects) {, +	dependencies {, +		testCompile("junit:junit:${junitVersion}"), +		testCompile("org.hamcrest:hamcrest-all:1.3"), +	}, +	test.systemProperties.put("testGroups", properties.get("testGroups")), +}, +]