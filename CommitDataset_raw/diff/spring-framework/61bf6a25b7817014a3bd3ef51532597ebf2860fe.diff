[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/RoutingFunction.java, +	 * and then invokes the {@code other} function (of the same type {@code T}) if this route had, +	 * @param other the function of type {@code T} to apply when this function has no result, +	default RoutingFunction<T> andSame(RoutingFunction<T> other) {, +	 * and then invokes the {@code other} function (of a different type) if this route had, +	default RoutingFunction<?> and(RoutingFunction<?> other) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/RoutingFunction.java, +	 * and then invokes the {@code other} function (of the same type {@code T}) if this route had, +	 * @param other the function of type {@code T} to apply when this function has no result, +	default RoutingFunction<T> andSame(RoutingFunction<T> other) {, +	 * and then invokes the {@code other} function (of a different type) if this route had, +	default RoutingFunction<?> and(RoutingFunction<?> other) {, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/function/RoutingFunctionTests.java, +	public void andSame() throws Exception {, +		RoutingFunction<Void> result = routingFunction1.andSame(routingFunction2);, +	public void and() throws Exception {, +		RoutingFunction<?> result = routingFunction1.and(routingFunction2);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/RoutingFunction.java, +	 * and then invokes the {@code other} function (of the same type {@code T}) if this route had, +	 * @param other the function of type {@code T} to apply when this function has no result, +	default RoutingFunction<T> andSame(RoutingFunction<T> other) {, +	 * and then invokes the {@code other} function (of a different type) if this route had, +	default RoutingFunction<?> and(RoutingFunction<?> other) {, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/function/RoutingFunctionTests.java, +	public void andSame() throws Exception {, +		RoutingFunction<Void> result = routingFunction1.andSame(routingFunction2);, +	public void and() throws Exception {, +		RoutingFunction<?> result = routingFunction1.and(routingFunction2);, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/function/SseHandlerFunctionIntegrationTests.java, +				.and(route(RequestPredicates.GET("/person"), sseHandler::person)), +				.and(route(RequestPredicates.GET("/event"), sseHandler::sse));]