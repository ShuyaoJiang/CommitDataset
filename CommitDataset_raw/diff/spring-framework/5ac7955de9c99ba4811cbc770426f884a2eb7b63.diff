[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/ExchangeMutatingWebFilter.java, +		String id = WiretapConnector.getRequestIdHeader(exchange.getRequest().getHeaders());, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/ExchangeMutatingWebFilter.java, +		String id = WiretapConnector.getRequestIdHeader(exchange.getRequest().getHeaders());, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WiretapConnector.java, +	public static final String REQUEST_ID_HEADER_NAME = "webtestclient-request-id";, +					String requestId = getRequestIdHeader(wrappedRequest.getHeaders());, +	public static String getRequestIdHeader(HttpHeaders headers) {, +		Assert.notNull(requestId, "No \"" + REQUEST_ID_HEADER_NAME + "\" header");, +		Assert.notNull(result, "No match for request with header " + REQUEST_ID_HEADER_NAME + "=" + requestId);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/ExchangeMutatingWebFilter.java, +		String id = WiretapConnector.getRequestIdHeader(exchange.getRequest().getHeaders());, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WiretapConnector.java, +	public static final String REQUEST_ID_HEADER_NAME = "webtestclient-request-id";, +					String requestId = getRequestIdHeader(wrappedRequest.getHeaders());, +	public static String getRequestIdHeader(HttpHeaders headers) {, +		Assert.notNull(requestId, "No \"" + REQUEST_ID_HEADER_NAME + "\" header");, +		Assert.notNull(result, "No match for request with header " + REQUEST_ID_HEADER_NAME + "=" + requestId);, +++ b/spring-web/src/main/java/org/springframework/http/ReactiveHttpOutputMessage.java, +, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/ExchangeMutatingWebFilter.java, +		String id = WiretapConnector.getRequestIdHeader(exchange.getRequest().getHeaders());, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WiretapConnector.java, +	public static final String REQUEST_ID_HEADER_NAME = "webtestclient-request-id";, +					String requestId = getRequestIdHeader(wrappedRequest.getHeaders());, +	public static String getRequestIdHeader(HttpHeaders headers) {, +		Assert.notNull(requestId, "No \"" + REQUEST_ID_HEADER_NAME + "\" header");, +		Assert.notNull(result, "No match for request with header " + REQUEST_ID_HEADER_NAME + "=" + requestId);, +++ b/spring-web/src/main/java/org/springframework/http/ReactiveHttpOutputMessage.java, +, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/WebHttpHandlerBuilder.java, +that's	 */]