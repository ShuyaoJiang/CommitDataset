[+++ b/spring-tx/src/main/java/org/springframework/transaction/jta/WebLogicJtaTransactionManager.java, + * Copyright 2002-2013 the original author or authors., + * <p><b>NOTE: This JtaTransactionManager is intended to refine specific transaction, + * demarcation behavior on Spring's side. It will happily co-exist with independently, + * configured WebLogic transaction strategies in your persistence provider, with no, + * need to specifically connect those setups in any way.</b>, + *, +				Class<?> transactionHelperClass = getClass().getClassLoader().loadClass(TRANSACTION_HELPER_CLASS_NAME);, +			Class<?> userTransactionClass = getClass().getClassLoader().loadClass(USER_TRANSACTION_CLASS_NAME);, +			Class<?> transactionManagerClass =, +				Class<?> transactionClass = getClass().getClassLoader().loadClass(TRANSACTION_CLASS_NAME);, +++ b/spring-tx/src/main/java/org/springframework/transaction/jta/WebLogicJtaTransactionManager.java, + * Copyright 2002-2013 the original author or authors., + * <p><b>NOTE: This JtaTransactionManager is intended to refine specific transaction, + * demarcation behavior on Spring's side. It will happily co-exist with independently, + * configured WebLogic transaction strategies in your persistence provider, with no, + * need to specifically connect those setups in any way.</b>, + *, +				Class<?> transactionHelperClass = getClass().getClassLoader().loadClass(TRANSACTION_HELPER_CLASS_NAME);, +			Class<?> userTransactionClass = getClass().getClassLoader().loadClass(USER_TRANSACTION_CLASS_NAME);, +			Class<?> transactionManagerClass =, +				Class<?> transactionClass = getClass().getClassLoader().loadClass(TRANSACTION_CLASS_NAME);, +++ b/spring-tx/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java, + * Copyright 2002-2013 the original author or authors., + * <p><b>NOTE: This JtaTransactionManager is intended to refine specific transaction, + * demarcation behavior on Spring's side. It will happily co-exist with independently, + * configured WebSphere transaction strategies in your persistence provider, with no, + * need to specifically connect those setups in any way.</b>, + *]