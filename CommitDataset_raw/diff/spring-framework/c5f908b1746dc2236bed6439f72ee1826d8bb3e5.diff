[+++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, +	private final ResponseExtractor<HttpHeaders> headersExtractor = new HeadersExtractor();, +, +	 * @since 3.2.7, +, +, +		return execute(url, HttpMethod.HEAD, null, headersExtractor(), urlVariables);, +		return execute(url, HttpMethod.HEAD, null, headersExtractor(), urlVariables);, +		return execute(url, HttpMethod.HEAD, null, headersExtractor());, +		HttpHeaders headers = execute(url, HttpMethod.POST, requestCallback, headersExtractor(), urlVariables);, +	public URI postForLocation(String url, Object request, Map<String, ?> urlVariables) throws RestClientException {, +		HttpHeaders headers = execute(url, HttpMethod.POST, requestCallback, headersExtractor(), urlVariables);, +		HttpHeaders headers = execute(url, HttpMethod.POST, requestCallback, headersExtractor());, +, +, +	 * Execute the given method on the provided URI., +	 * <p>The {@link ClientHttpRequest} is processed using the {@link RequestCallback};, +	 * the response with the {@link ResponseExtractor}., +						response.getStatusCode() + " (" + response.getStatusText() + ")");, +				logger.warn(method.name() + " request for \"" + url + "\" resulted in " +, +						response.getStatusCode() + " (" + response.getStatusText() + "); invoking error handler");, +	protected <T> RequestCallback httpEntityCallback(Object requestBody, Type responseType) {]