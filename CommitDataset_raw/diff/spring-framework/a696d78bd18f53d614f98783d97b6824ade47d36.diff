[+++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +	private boolean strict = false;, +	public void setStrict(boolean strict) {, +		this.strict = strict;, +	}, +, +		if (propertyType.isAnnotation()) {, +			annotationFormatters.put(propertyType, formatter);, +		} else {, +		if (binding == null && !strict) {, +			return add(new BindingConfiguration(property, null));, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +	private boolean strict = false;, +	public void setStrict(boolean strict) {, +		this.strict = strict;, +	}, +, +		if (propertyType.isAnnotation()) {, +			annotationFormatters.put(propertyType, formatter);, +		} else {, +		if (binding == null && !strict) {, +			return add(new BindingConfiguration(property, null));, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/BindingConfiguration.java, +	public BindingConfiguration(String property, Formatter<?> formatter) {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +	private boolean strict = false;, +	public void setStrict(boolean strict) {, +		this.strict = strict;, +	}, +, +		if (propertyType.isAnnotation()) {, +			annotationFormatters.put(propertyType, formatter);, +		} else {, +		if (binding == null && !strict) {, +			return add(new BindingConfiguration(property, null));, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/BindingConfiguration.java, +	public BindingConfiguration(String property, Formatter<?> formatter) {, +++ b/org.springframework.context/src/test/java/org/springframework/ui/binding/BinderTests.java, +import static org.junit.Assert.assertNull;, +		binder.add(new BindingConfiguration("date", new DateFormatter()));, +		binder.add(new BindingConfiguration("date", new DateFormatter()));, +		binder.add(new CurrencyFormatter(), Currency.class);, +	public void getBindingStrict() {, +		Binder<TestBean> binder = new Binder<TestBean>(new TestBean());, +		binder.setStrict(true);, +		Binding b = binder.getBinding("integer");, +		assertNull(b);, +		binder.add(new BindingConfiguration("integer", null));, +		b = binder.getBinding("integer");, +		assertFalse(b.isCollection());, +		assertEquals("0", b.getValue());, +		b.setValue("5");, +		assertEquals("5", b.getValue());, +	}, +, +	@Test, +		binder.add(new BindingConfiguration("currency", new CurrencyFormatter()));, +		assertTrue(b.isCollection());, +		assertTrue(b.isCollection());, +		binder.add(new BindingConfiguration("currency", new CurrencyFormatter()));]