[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/Configuration.java, +	// Instance methods, +, +	/**, +	 * Supply a {@linkplain Stream stream} of {@link HttpMessageReader}s to be used for request, +	 * body conversion., +	 * @return the stream of message readers, +	 */, +	Supplier<Stream<HttpMessageReader<?>>> messageReaders();, +, +	/**, +	 * Supply a {@linkplain Stream stream} of {@link HttpMessageWriter}s to be used for response, +	 * body conversion., +	 * @return the stream of message writers, +	 */, +	Supplier<Stream<HttpMessageWriter<?>>> messageWriters();, +, +	/**, +	 * Supply a {@linkplain Stream stream} of {@link ViewResolver}s to be used for view name, +	 * resolution., +	 * @return the stream of view resolvers, +	 */, +	Supplier<Stream<ViewResolver>> viewResolvers();, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/Configuration.java, +	// Instance methods, +, +	/**, +	 * Supply a {@linkplain Stream stream} of {@link HttpMessageReader}s to be used for request, +	 * body conversion., +	 * @return the stream of message readers, +	 */, +	Supplier<Stream<HttpMessageReader<?>>> messageReaders();, +, +	/**, +	 * Supply a {@linkplain Stream stream} of {@link HttpMessageWriter}s to be used for response, +	 * body conversion., +	 * @return the stream of message writers, +	 */, +	Supplier<Stream<HttpMessageWriter<?>>> messageWriters();, +, +	/**, +	 * Supply a {@linkplain Stream stream} of {@link ViewResolver}s to be used for view name, +	 * resolution., +	 * @return the stream of view resolvers, +	 */, +	Supplier<Stream<ViewResolver>> viewResolvers();, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/Request.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/Configuration.java, +	// Instance methods, +, +	/**, +	 * Supply a {@linkplain Stream stream} of {@link HttpMessageReader}s to be used for request, +	 * body conversion., +	 * @return the stream of message readers, +	 */, +	Supplier<Stream<HttpMessageReader<?>>> messageReaders();, +, +	/**, +	 * Supply a {@linkplain Stream stream} of {@link HttpMessageWriter}s to be used for response, +	 * body conversion., +	 * @return the stream of message writers, +	 */, +	Supplier<Stream<HttpMessageWriter<?>>> messageWriters();, +, +	/**, +	 * Supply a {@linkplain Stream stream} of {@link ViewResolver}s to be used for view name, +	 * resolution., +	 * @return the stream of view resolvers, +	 */, +	Supplier<Stream<ViewResolver>> viewResolvers();, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/Request.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/Response.java, +	// Instance methods, +, +	/**, +	 * Return the status code of this response., +	 */, +	HttpStatus statusCode();, +, +	/**, +	 * Return the headers of this response., +	 */, +	HttpHeaders headers();, +, +	/**, +	 * Return the body of this response., +	 */, +	T body();, +, +	/**, +	 * Writes this response to the given web exchange., +	 *, +	 * @param exchange the web exchange to write to, +	 * @return {@code Mono<Void>} to indicate when request handling is complete, +	 */]