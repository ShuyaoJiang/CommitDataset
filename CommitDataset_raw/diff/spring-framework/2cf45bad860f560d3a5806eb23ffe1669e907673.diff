[+++ b/spring-aop/src/main/java/org/springframework/aop/framework/ReflectiveMethodInvocation.java, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ReflectiveMethodInvocation.java, +++ b/spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java, +				logger.debug("No target for prototype '" + getTargetBeanName() +, +						"' bound to thread: " +, +						"creating one and binding it to thread '" +, +						Thread.currentThread().getName() + "'");, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ReflectiveMethodInvocation.java, +++ b/spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java, +				logger.debug("No target for prototype '" + getTargetBeanName() +, +						"' bound to thread: " +, +						"creating one and binding it to thread '" +, +						Thread.currentThread().getName() + "'");, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ReflectiveMethodInvocation.java, +++ b/spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java, +				logger.debug("No target for prototype '" + getTargetBeanName() +, +						"' bound to thread: " +, +						"creating one and binding it to thread '" +, +						Thread.currentThread().getName() + "'");, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TrickyAspectJPointcutExpressionTests.java, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ReflectiveMethodInvocation.java, +++ b/spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java, +				logger.debug("No target for prototype '" + getTargetBeanName() +, +						"' bound to thread: " +, +						"creating one and binding it to thread '" +, +						Thread.currentThread().getName() + "'");, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TrickyAspectJPointcutExpressionTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TypePatternClassFilterTests.java, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ReflectiveMethodInvocation.java, +++ b/spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java, +				logger.debug("No target for prototype '" + getTargetBeanName() +, +						"' bound to thread: " +, +						"creating one and binding it to thread '" +, +						Thread.currentThread().getName() + "'");, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TrickyAspectJPointcutExpressionTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TypePatternClassFilterTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +, +, +, +								// argNames should be suported in Around as it is in Pointcut, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ReflectiveMethodInvocation.java, +++ b/spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java, +				logger.debug("No target for prototype '" + getTargetBeanName() +, +						"' bound to thread: " +, +						"creating one and binding it to thread '" +, +						Thread.currentThread().getName() + "'");, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TrickyAspectJPointcutExpressionTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TypePatternClassFilterTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +, +, +, +								// argNames should be suported in Around as it is in Pointcut, +++ b/spring-aop/src/test/java/org/springframework/aop/framework/MethodInvocationTests.java, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ReflectiveMethodInvocation.java, +++ b/spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java, +				logger.debug("No target for prototype '" + getTargetBeanName() +, +						"' bound to thread: " +, +						"creating one and binding it to thread '" +, +						Thread.currentThread().getName() + "'");, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TrickyAspectJPointcutExpressionTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TypePatternClassFilterTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +, +, +, +								// argNames should be suported in Around as it is in Pointcut, +++ b/spring-aop/src/test/java/org/springframework/aop/framework/MethodInvocationTests.java, +++ b/spring-aspects/src/main/java/org/springframework/beans/factory/aspectj/GenericInterfaceDrivenDependencyInjectionAspect.aj, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ReflectiveMethodInvocation.java, +++ b/spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java, +				logger.debug("No target for prototype '" + getTargetBeanName() +, +						"' bound to thread: " +, +						"creating one and binding it to thread '" +, +						Thread.currentThread().getName() + "'");, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TrickyAspectJPointcutExpressionTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TypePatternClassFilterTests.java, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +, +, +, +								// argNames should be suported in Around as it is in Pointcut, +++ b/spring-aop/src/test/java/org/springframework/aop/framework/MethodInvocationTests.java, +++ b/spring-aspects/src/main/java/org/springframework/beans/factory/aspectj/GenericInterfaceDrivenDependencyInjectionAspect.aj, +++ b/spring-aspects/src/main/java/org/springframework/orm/jpa/aspectj/JpaExceptionTranslatorAspect.aj, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ReflectiveMethodInvocation.java, +++ b/spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java, +				logger.debug("No target for prototype '" + getTargetBeanName() +, +						"' bound to thread: " +, +						"creating one and binding it to thread '" +, +						Thread.currentThread().getName() + "'");, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java]