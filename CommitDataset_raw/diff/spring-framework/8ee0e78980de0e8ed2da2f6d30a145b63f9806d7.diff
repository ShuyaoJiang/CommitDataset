[+++ b/spring-web/src/main/java/org/springframework/web/cors/CorsUtils.java, +		return (isCorsRequest(request) && request.getMethod().equals(HttpMethod.OPTIONS.name()), +				&& request.getHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD) != null);, +++ b/spring-web/src/main/java/org/springframework/web/cors/CorsUtils.java, +		return (isCorsRequest(request) && request.getMethod().equals(HttpMethod.OPTIONS.name()), +				&& request.getHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD) != null);, +++ b/spring-web/src/test/java/org/springframework/web/cors/CorsUtilsTests.java, +import org.springframework.http.HttpMethod;, +		request.setMethod(HttpMethod.OPTIONS.name());, +		request.setMethod(HttpMethod.OPTIONS.name());, +		request.setMethod(HttpMethod.OPTIONS.name());, +++ b/spring-web/src/main/java/org/springframework/web/cors/CorsUtils.java, +		return (isCorsRequest(request) && request.getMethod().equals(HttpMethod.OPTIONS.name()), +				&& request.getHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD) != null);, +++ b/spring-web/src/test/java/org/springframework/web/cors/CorsUtilsTests.java, +import org.springframework.http.HttpMethod;, +		request.setMethod(HttpMethod.OPTIONS.name());, +		request.setMethod(HttpMethod.OPTIONS.name());, +		request.setMethod(HttpMethod.OPTIONS.name());, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java, +import org.springframework.web.cors.CorsUtils;, +		if (this.dispatchOptionsRequest || CorsUtils.isPreFlightRequest(request)) {]