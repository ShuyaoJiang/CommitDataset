[+++ b/spring-test/src/main/java/org/springframework/mock/web/MockPart.java, + * @author Juergen Hoeller, + * @since 4.3.12, + * @see MockHttpServletRequest#addPart, + * @see MockMultipartFile, +	public MockPart(String name, @Nullable String filename, @Nullable byte[] content) {, +	public void write(String fileName) throws IOException {, +		throw new UnsupportedOperationException();, +	}, +, +	@Override, +	public void delete() throws IOException {, +		throw new UnsupportedOperationException();, +	}, +, +	@Override, +	 * Return the {@link HttpHeaders} backing header related accessor methods,, +	 * allowing for populating selected header entries., +	public final HttpHeaders getHeaders() {, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockPart.java, + * @author Juergen Hoeller, + * @since 4.3.12, + * @see MockHttpServletRequest#addPart, + * @see MockMultipartFile, +	public MockPart(String name, @Nullable String filename, @Nullable byte[] content) {, +	public void write(String fileName) throws IOException {, +		throw new UnsupportedOperationException();, +	}, +, +	@Override, +	public void delete() throws IOException {, +		throw new UnsupportedOperationException();, +	}, +, +	@Override, +	 * Return the {@link HttpHeaders} backing header related accessor methods,, +	 * allowing for populating selected header entries., +	public final HttpHeaders getHeaders() {, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/standalone/MultipartControllerTests.java, +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;, +import static org.springframework.test.web.servlet.setup.MockMvcBuilders.*;, +		MockPart filePart = new MockPart("file", "orig", fileContent);, +		MockPart jsonPart = new MockPart("json", "json", json);, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockPart.java, + * @author Juergen Hoeller, + * @since 4.3.12, + * @see MockHttpServletRequest#addPart, + * @see MockMultipartFile, +	public MockPart(String name, @Nullable String filename, @Nullable byte[] content) {, +	public void write(String fileName) throws IOException {, +		throw new UnsupportedOperationException();, +	}, +, +	@Override, +	public void delete() throws IOException {, +		throw new UnsupportedOperationException();, +	}, +, +	@Override, +	 * Return the {@link HttpHeaders} backing header related accessor methods,, +	 * allowing for populating selected header entries., +	public final HttpHeaders getHeaders() {, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/standalone/MultipartControllerTests.java, +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;, +import static org.springframework.test.web.servlet.setup.MockMvcBuilders.*;, +		MockPart filePart = new MockPart("file", "orig", fileContent);, +		MockPart jsonPart = new MockPart("json", "json", json);, +++ b/spring-web/src/test/java/org/springframework/mock/web/test/MockPart.java, + * @author Juergen Hoeller, + * @see MockHttpServletRequest#addPart, + * @see MockMultipartFile, +	public MockPart(String name, String filename, byte[] content) {, +	public void write(String fileName) throws IOException {, +		throw new UnsupportedOperationException();, +	}, +, +	@Override, +	public void delete() throws IOException {, +		throw new UnsupportedOperationException();, +	}, +, +	@Override, +	 * Return the {@link HttpHeaders} backing header related accessor methods,, +	 * allowing for populating selected header entries., +	public final HttpHeaders getHeaders() {, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockPart.java, + * @author Juergen Hoeller, + * @since 4.3.12, + * @see MockHttpServletRequest#addPart, + * @see MockMultipartFile, +	public MockPart(String name, @Nullable String filename, @Nullable byte[] content) {, +	public void write(String fileName) throws IOException {, +		throw new UnsupportedOperationException();, +	}, +, +	@Override, +	public void delete() throws IOException {, +		throw new UnsupportedOperationException();]