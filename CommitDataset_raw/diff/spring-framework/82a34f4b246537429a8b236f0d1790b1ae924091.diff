[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +import java.util.Map;, +		public HeaderSpec uri(String uriTemplate, Map<String, ?> uriVariables) {, +			return uri(getUriBuilderFactory().expand(uriTemplate, uriVariables));, +		}, +, +		@Override, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +import java.util.Map;, +		public HeaderSpec uri(String uriTemplate, Map<String, ?> uriVariables) {, +			return uri(getUriBuilderFactory().expand(uriTemplate, uriVariables));, +		}, +, +		@Override, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClientBuilder.java, +import java.util.Map;, +	private String baseUrl;, +, +	private Map<String, ?> defaultUriVariables;, +, +	private HttpHeaders defaultHeaders;, +, +	private MultiValueMap<String, String> defaultCookies;, +, +	@Override, +	public WebClient.Builder baseUrl(String baseUrl) {, +		this.baseUrl = baseUrl;, +		return this;, +	@Override, +	public WebClient.Builder defaultUriVariables(Map<String, ?> defaultUriVariables) {, +		this.defaultUriVariables = defaultUriVariables;, +		return this;, +	@Override, +	public WebClient.Builder uriBuilderFactory(UriBuilderFactory uriBuilderFactory) {, +	public WebClient.Builder clientConnector(ClientHttpConnector connector) {, +		this.connector = connector;, +		return this;, +	}, +, +	@Override, +	public WebClient.Builder exchangeStrategies(ExchangeStrategies strategies) {, +		Assert.notNull(strategies, "ExchangeStrategies is required.");, +		this.exchangeStrategies = strategies;, +		return this;, +	}, +, +	@Override, +	public WebClient.Builder exchangeFunction(ExchangeFunction exchangeFunction) {, +		this.exchangeFunction = exchangeFunction;, +		return this;, +	}, +, +	@Override, +		return new DefaultWebClient(initExchangeFunction(), initUriBuilderFactory(),, +				this.defaultHeaders, this.defaultCookies);, +	}, +, +	private UriBuilderFactory initUriBuilderFactory() {, +		if (this.uriBuilderFactory != null) {, +			return this.uriBuilderFactory;, +		}, +		DefaultUriBuilderFactory factory = this.baseUrl != null ?, +				new DefaultUriBuilderFactory(this.baseUrl) : new DefaultUriBuilderFactory();, +, +		factory.setDefaultUriVariables(this.defaultUriVariables);, +		return factory;, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +import java.util.Map;, +		public HeaderSpec uri(String uriTemplate, Map<String, ?> uriVariables) {, +			return uri(getUriBuilderFactory().expand(uriTemplate, uriVariables));, +		}, +, +		@Override, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClientBuilder.java, +import java.util.Map;, +	private String baseUrl;, +, +	private Map<String, ?> defaultUriVariables;, +, +	private HttpHeaders defaultHeaders;, +, +	private MultiValueMap<String, String> defaultCookies;, +, +	@Override, +	public WebClient.Builder baseUrl(String baseUrl) {, +		this.baseUrl = baseUrl;, +		return this;, +	@Override, +	public WebClient.Builder defaultUriVariables(Map<String, ?> defaultUriVariables) {, +		this.defaultUriVariables = defaultUriVariables;, +		return this;, +	@Override, +	public WebClient.Builder uriBuilderFactory(UriBuilderFactory uriBuilderFactory) {, +	public WebClient.Builder clientConnector(ClientHttpConnector connector) {, +		this.connector = connector;, +		return this;, +	}, +, +	@Override, +	public WebClient.Builder exchangeStrategies(ExchangeStrategies strategies) {]