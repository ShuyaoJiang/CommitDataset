[+++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +	 * <p><strong>Note:</strong> The presence of reserved characters can prevent, +	 * correct parsing of the URI string. For example if a query parameter, +	 * contains {@code '='} or {@code '&'} characters, the query string cannot, +	 * be parsed unambiguously. Such values should be substituted for URI, +	 * variables to enable correct parsing:, +	 *, +	 * <pre>, +	 * String uriString = &quot;/hotels/42?filter={value}&quot;;, +	 * UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot;hot&amp;cold&quot;);, +	 * </pre>, +	 *, +	 * @param uri, +	 *            the URI string to initialize with, +	 * <p><strong>Note:</strong> The presence of reserved characters can prevent, +	 * correct parsing of the URI string. For example if a query parameter, +	 * contains {@code '='} or {@code '&'} characters, the query string cannot, +	 * be parsed unambiguously. Such values should be substituted for URI, +	 * variables to enable correct parsing:, +	 *, +	 * <pre>, +	 * String uriString = &quot;/hotels/42?filter={value}&quot;;, +	 * UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot;hot&amp;cold&quot;);, +	 * </pre>, +	 *, +	 * Builds a {@code UriComponents} instance from the various components, +	 * contained in this builder., +	 * @param encoded whether all the components set in this builder are, +	 * 	encoded ({@code true}) or not ({@code false})., +	 * Sets the URI scheme. The given scheme may contain URI template variables,, +	 * and may also be {@code null} to clear the scheme of this builder., +	 * @param scheme, +	 *            the URI scheme, +	 * Sets the URI user info. The given user info may contain URI template, +	 * variables, and may also be {@code null} to clear the user info of this, +	 * builder., +	 * @param userInfo, +	 *            the URI user info, +	 * Sets the URI host. The given host may contain URI template variables, and, +	 * may also be {@code null} to clear the host of this builder., +	 * @param host, +	 *            the URI host, +	 * Appends the given path to the existing path of this builder. The given, +	 * path may contain URI template variables., +	 * @param path, +	 *            the URI path, +	 * Appends the given query to the existing query of this builder., +	 * The given query may contain URI template variables., +	 *, +	 * <p><strong>Note:</strong> The presence of reserved characters can prevent, +	 * correct parsing of the URI string. For example if a query parameter, +	 * contains {@code '='} or {@code '&'} characters, the query string cannot, +	 * be parsed unambiguously. Such values should be substituted for URI, +	 * variables to enable correct parsing:, +	 *, +	 * <pre>, +	 * String uriString = &quot;/hotels/42?filter={value}&quot;;, +	 * UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot;hot&amp;cold&quot;);, +	 * </pre>, +	 * Appends the given query parameter to the existing query parameters. The, +	 * given name or any of the values may contain URI template variables. If no, +	 * values are given, the resulting URI will contain the query parameter name, +	 * only (i.e. {@code ?foo} instead of {@code ?foo=bar}., +	 * @param name, +	 *            the query parameter name, +	 * @param values, +	 *            the query parameter values, +	 * Sets the query parameter values overriding all existing query values for, +	 * the same parameter. If no values are given, the query parameter is, +	 * removed., +	 * @param name, +	 *            the query parameter name, +	 * @param values, +	 *            the query parameter values, +	 * Sets the URI fragment. The given fragment may contain URI template, +	 * variables, and may also be {@code null} to clear the fragment of this, +	 * builder., +	 * @param fragment, +	 *            the URI fragment]