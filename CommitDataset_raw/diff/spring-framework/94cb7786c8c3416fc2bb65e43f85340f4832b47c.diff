[+++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +, +++ b/spring-context/src/main/java/org/springframework/context/expression/AnnotatedElementKey.java, + * Copyright 2002-2016 the original author or authors., + * @since 4.2, +, +		Assert.notNull(element, "AnnotatedElement must not be null");, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +, +++ b/spring-context/src/main/java/org/springframework/context/expression/AnnotatedElementKey.java, + * Copyright 2002-2016 the original author or authors., + * @since 4.2, +, +		Assert.notNull(element, "AnnotatedElement must not be null");, +++ b/spring-context/src/main/java/org/springframework/context/expression/CachedExpressionEvaluator.java, + * Copyright 2002-2016 the original author or authors., + * @since 4.2, +, +, +, +, +, +			return this.key.hashCode() + (this.expression != null ? this.expression.hashCode() * 29 : 0);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +, +++ b/spring-context/src/main/java/org/springframework/context/expression/AnnotatedElementKey.java, + * Copyright 2002-2016 the original author or authors., + * @since 4.2, +, +		Assert.notNull(element, "AnnotatedElement must not be null");, +++ b/spring-context/src/main/java/org/springframework/context/expression/CachedExpressionEvaluator.java, + * Copyright 2002-2016 the original author or authors., + * @since 4.2, +, +, +, +, +, +			return this.key.hashCode() + (this.expression != null ? this.expression.hashCode() * 29 : 0);, +++ b/spring-context/src/main/java/org/springframework/context/expression/MethodBasedEvaluationContext.java, + * Copyright 2002-2016 the original author or authors., + *, + * <p>Expose the actual method arguments using the following aliases:, + * @since 4.2, +, +, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +, +++ b/spring-context/src/main/java/org/springframework/context/expression/AnnotatedElementKey.java, + * Copyright 2002-2016 the original author or authors., + * @since 4.2, +, +		Assert.notNull(element, "AnnotatedElement must not be null");, +++ b/spring-context/src/main/java/org/springframework/context/expression/CachedExpressionEvaluator.java, + * Copyright 2002-2016 the original author or authors., + * @since 4.2, +, +, +, +, +, +			return this.key.hashCode() + (this.expression != null ? this.expression.hashCode() * 29 : 0);, +++ b/spring-context/src/main/java/org/springframework/context/expression/MethodBasedEvaluationContext.java, + * Copyright 2002-2016 the original author or authors., + *, + * <p>Expose the actual method arguments using the following aliases:, + * @since 4.2, +, +, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/JsonPathResultMatchers.java, +, +	 * @since 4.3, +				String reason = String.format("Expected a JSON payload prefixed with \"%s\" but found: %s",, +						this.prefix, StringUtils.quote(content.substring(0, this.prefix.length())));, +				throw new AssertionError(, +						"JSON prefix \"" + this.prefix + "\" not found, exception: " + oobe.getMessage());, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +, +++ b/spring-context/src/main/java/org/springframework/context/expression/AnnotatedElementKey.java, + * Copyright 2002-2016 the original author or authors., + * @since 4.2, +, +		Assert.notNull(element, "AnnotatedElement must not be null");, +++ b/spring-context/src/main/java/org/springframework/context/expression/CachedExpressionEvaluator.java, + * Copyright 2002-2016 the original author or authors., + * @since 4.2, +, +, +, +, +, +			return this.key.hashCode() + (this.expression != null ? this.expression.hashCode() * 29 : 0);, +++ b/spring-context/src/main/java/org/springframework/context/expression/MethodBasedEvaluationContext.java, + * Copyright 2002-2016 the original author or authors., + *, + * <p>Expose the actual method arguments using the following aliases:, + * @since 4.2, +]