[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +	public static final String MESSAGING_TEMPLATE_BEAN_NAME = "brokerMessagingTemplate";, +, +	public static final String MESSAGE_CONVERTER_BEAN_NAME = "brokerMessageConverter";, +, +		String name = MESSAGE_CONVERTER_BEAN_NAME;, +		registerBeanDefByName(name, messageConverterDef, context, source);, +		return new RuntimeBeanReference(name);, +		String name = MESSAGING_TEMPLATE_BEAN_NAME;, +		registerBeanDefByName(name, beanDef, context, source);, +		return new RuntimeBeanReference(name);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +	public static final String MESSAGING_TEMPLATE_BEAN_NAME = "brokerMessagingTemplate";, +, +	public static final String MESSAGE_CONVERTER_BEAN_NAME = "brokerMessageConverter";, +, +		String name = MESSAGE_CONVERTER_BEAN_NAME;, +		registerBeanDefByName(name, messageConverterDef, context, source);, +		return new RuntimeBeanReference(name);, +		String name = MESSAGING_TEMPLATE_BEAN_NAME;, +		registerBeanDefByName(name, beanDef, context, source);, +		return new RuntimeBeanReference(name);, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParserTests.java, + * Copyright 2002-2017 the original author or authors., +		String name = MessageBrokerBeanDefinitionParser.MESSAGE_CONVERTER_BEAN_NAME;, +		CompositeMessageConverter compositeMessageConverter = this.appContext.getBean(name, CompositeMessageConverter.class);, +		name = MessageBrokerBeanDefinitionParser.MESSAGING_TEMPLATE_BEAN_NAME;, +		SimpMessagingTemplate simpMessagingTemplate = this.appContext.getBean(name, SimpMessagingTemplate.class);]