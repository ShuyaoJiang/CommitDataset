[+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +				String resolvedResource = this.environment.resolveRequiredPlaceholders(resource);, +				configClass.addImportedResource(resolvedResource, readerClass);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +				String resolvedResource = this.environment.resolveRequiredPlaceholders(resource);, +				configClass.addImportedResource(resolvedResource, readerClass);, +++ b/spring-context/src/test/java/org/springframework/context/annotation/configuration/ImportResourceTests.java, +import java.util.Collections;, +, +, +, +import org.springframework.core.env.MapPropertySource;, +import org.springframework.core.env.PropertySource;, +	, +	@Test, +	public void importWithPlaceHolder() throws Exception {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		PropertySource<?> propertySource = new MapPropertySource("test", , +				Collections.<String, Object> singletonMap("test", "springframework"));, +		ctx.getEnvironment().getPropertySources().addFirst(propertySource);, +		ctx.register(ImportXmlConfig.class);, +		ctx.refresh();, +		assertTrue("did not contain xml-declared bean", ctx.containsBean("xmlDeclaredBean"));, +	}, +, +	@Configuration, +	@ImportResource("classpath:org/${test}/context/annotation/configuration/ImportXmlConfig-context.xml"), +	static class ImportWithPlaceHolder {, +	}, +	, +	]