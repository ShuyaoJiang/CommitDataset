[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/TestContextManager.java, + * <li>{@link #beforeTestClass() before test class execution}: prior to any, + * <em>before class methods</em> of a particular testing framework (e.g., JUnit, + * 4's {@link org.junit.BeforeClass &#064;BeforeClass})</li>, + * <em>after class methods</em> of a particular testing framework (e.g., JUnit, + * 4's {@link org.junit.AfterClass &#064;AfterClass})</li>, +	 * Gets a copy of the {@link TestExecutionListener TestExecutionListeners}, +	 * registered for this <code>TestContextManager</code> in reverse order., +	 */, +	private List<TestExecutionListener> getReversedTestExecutionListeners() {, +		List<TestExecutionListener> listenersReversed = new ArrayList<TestExecutionListener>(, +			getTestExecutionListeners());, +		Collections.reverse(listenersReversed);, +		return listenersReversed;, +	}, +, +	/**, +		getTestContext().updateState(null, null, null);, +		Exception afterTestMethodException = null;, +		for (TestExecutionListener testExecutionListener : getReversedTestExecutionListeners()) {, +		getTestContext().updateState(null, null, null);, +		// Traverse the TestExecutionListeners in reverse order to ensure proper, +		// "wrapper"-style execution of listeners., +		for (TestExecutionListener testExecutionListener : getReversedTestExecutionListeners()) {]