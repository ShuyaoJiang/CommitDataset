[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/RedirectView.java, +	private String[] hosts;, +, +	 * Configure one or more hosts associated with the application. All other, +	 * hosts will be considered external hosts. In effect this property, +	 * provides a way turn off encoding via, +	 * {@link HttpServletResponse#encodeRedirectURL} for URLs that have a host, +	 * and that host is not listed as a known host., +	 * <p>If not set (the default) all URLs are encoded through the response., +	 * @param hosts one or more application hosts, +	 * @since 4.3, +	 */, +	public void setHosts(String[] hosts) {, +		this.hosts = hosts;, +	}, +, +	/**, +	 * Return the configured application hosts., +	 */, +	public String[] getHosts() {, +		return this.hosts;, +	}, +, +	/**, +		String encodedURL = (isRemoteHost(targetUrl) ? targetUrl : response.encodeRedirectURL(targetUrl));, +				response.setHeader("Location", encodedURL);, +				response.setHeader("Location", encodedURL);, +				response.sendRedirect(encodedURL);, +			response.setHeader("Location", encodedURL);, +	 * Whether the given targetUrl has a host that is a "foreign" system in which, +	 * case {@link HttpServletResponse#encodeRedirectURL} will not be applied., +	 * This method returns {@code true} if the {@link #setHosts(String[])}, +	 * property is configured and the target URL has a host that does not match., +	 * @param targetUrl the target redirect URL, +	 * @return {@code true} the target URL has a remote host, {@code false} if it, +	 * the URL does not have a host or the "host" property is not configured., +	 * @since 4.3, +	 */, +	protected boolean isRemoteHost(String targetUrl) {, +		if (ObjectUtils.isEmpty(getHosts())) {, +			return false;, +		}, +		String targetHost = UriComponentsBuilder.fromUriString(targetUrl).build().getHost();, +		if (StringUtils.isEmpty(targetHost)) {, +			return false;, +		}, +		for (String host : getHosts()) {, +			if (targetHost.equals(host)) {, +				return false;, +			}, +		}, +		return true;, +	}, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/RedirectView.java, +	private String[] hosts;, +, +	 * Configure one or more hosts associated with the application. All other, +	 * hosts will be considered external hosts. In effect this property, +	 * provides a way turn off encoding via, +	 * {@link HttpServletResponse#encodeRedirectURL} for URLs that have a host, +	 * and that host is not listed as a known host., +	 * <p>If not set (the default) all URLs are encoded through the response., +	 * @param hosts one or more application hosts, +	 * @since 4.3, +	 */, +	public void setHosts(String[] hosts) {, +		this.hosts = hosts;, +	}, +, +	/**, +	 * Return the configured application hosts., +	 */, +	public String[] getHosts() {, +		return this.hosts;, +	}, +, +	/**, +		String encodedURL = (isRemoteHost(targetUrl) ? targetUrl : response.encodeRedirectURL(targetUrl));, +				response.setHeader("Location", encodedURL);, +				response.setHeader("Location", encodedURL);, +				response.sendRedirect(encodedURL);, +			response.setHeader("Location", encodedURL);, +	 * Whether the given targetUrl has a host that is a "foreign" system in which, +	 * case {@link HttpServletResponse#encodeRedirectURL} will not be applied., +	 * This method returns {@code true} if the {@link #setHosts(String[])}, +	 * property is configured and the target URL has a host that does not match., +	 * @param targetUrl the target redirect URL, +	 * @return {@code true} the target URL has a remote host, {@code false} if it, +	 * the URL does not have a host or the "host" property is not configured., +	 * @since 4.3, +	 */, +	protected boolean isRemoteHost(String targetUrl) {, +		if (ObjectUtils.isEmpty(getHosts())) {, +			return false;, +		}, +		String targetHost = UriComponentsBuilder.fromUriString(targetUrl).build().getHost();, +		if (StringUtils.isEmpty(targetHost)) {, +			return false;]