[+++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractCacheInvoker.java, + * Copyright 2002-2016 the original author or authors., +, +	protected AbstractCacheInvoker() {, +		this(new SimpleCacheErrorHandler());, +	}, +, +, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCacheGetError(ex, cache, key);, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCachePutError(ex, cache, key, result);, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCacheEvictError(ex, cache, key);, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCacheClearError(ex, cache);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractCacheInvoker.java, + * Copyright 2002-2016 the original author or authors., +, +	protected AbstractCacheInvoker() {, +		this(new SimpleCacheErrorHandler());, +	}, +, +, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCacheGetError(ex, cache, key);, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCachePutError(ex, cache, key, result);, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCacheEvictError(ex, cache, key);, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCacheClearError(ex, cache);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +			catch (VariableNotAvailableException ex) {, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractCacheInvoker.java, + * Copyright 2002-2016 the original author or authors., +, +	protected AbstractCacheInvoker() {, +		this(new SimpleCacheErrorHandler());, +	}, +, +, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCacheGetError(ex, cache, key);, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCachePutError(ex, cache, key, result);, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCacheEvictError(ex, cache, key);, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCacheClearError(ex, cache);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +			catch (VariableNotAvailableException ex) {, +++ b/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java, +				catch (Exception ex) {, +					logger.info("Failed to set JMSCorrelationID - skipping", ex);, +				catch (Exception ex) {, +					logger.info("Failed to set JMSReplyTo - skipping", ex);, +				catch (Exception ex) {, +					logger.info("Failed to set JMSType - skipping", ex);, +						catch (Exception ex) {, +									logger.trace("Skipping reserved header '" + headerName +, +											"' since it cannot be set by client");, +								logger.warn("Failed to map message header '" + headerName + "' to JMS property", ex);, +				logger.warn("Error occurred while mapping from MessageHeaders to JMS properties", ex);, +				logger.info("Failed to read JMSCorrelationID property - skipping", ex);, +				logger.info("Failed to read JMSDestination property - skipping", ex);, +				logger.info("Failed to read JMSDeliveryMode property - skipping", ex);, +				logger.info("Failed to read JMSExpiration property - skipping", ex);, +				logger.info("Failed to read JMSMessageID property - skipping", ex);, +				logger.info("Failed to read JMSPriority property - skipping", ex);, +				logger.info("Failed to read JMSReplyTo property - skipping", ex);, +				logger.info("Failed to read JMSRedelivered property - skipping", ex);, +				logger.info("Failed to read JMSType property - skipping", ex);, +				logger.info("Failed to read JMSTimestamp property - skipping", ex);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractCacheInvoker.java, + * Copyright 2002-2016 the original author or authors., +, +	protected AbstractCacheInvoker() {, +		this(new SimpleCacheErrorHandler());, +	}, +, +, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCacheGetError(ex, cache, key);, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCachePutError(ex, cache, key, result);, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCacheEvictError(ex, cache, key);, +		catch (RuntimeException ex) {, +			getErrorHandler().handleCacheClearError(ex, cache);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +			catch (VariableNotAvailableException ex) {, +++ b/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java, +				catch (Exception ex) {, +					logger.info("Failed to set JMSCorrelationID - skipping", ex);, +				catch (Exception ex) {, +					logger.info("Failed to set JMSReplyTo - skipping", ex);, +				catch (Exception ex) {, +					logger.info("Failed to set JMSType - skipping", ex);, +						catch (Exception ex) {]