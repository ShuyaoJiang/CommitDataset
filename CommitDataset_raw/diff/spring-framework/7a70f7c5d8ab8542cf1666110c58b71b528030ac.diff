[+++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/annotation/support/SendToMethodReturnValueHandlerTests.java, +	private MethodParameter noAnnotationsReturnType = param("handleNoAnnotations");, +	private MethodParameter sendToReturnType = param("handleAndSendTo");, +	private MethodParameter sendToDefaultDestReturnType = param("handleAndSendToDefaultDest");, +	private MethodParameter sendToWithPlaceholdersReturnType = param("handleAndSendToWithPlaceholders");, +	private MethodParameter sendToUserReturnType = param("handleAndSendToUser");, +	private MethodParameter sendToUserInSessionReturnType = param("handleAndSendToUserInSession");, +	private MethodParameter sendToUserDefaultDestReturnType = param("handleAndSendToUserDefaultDest");, +	private MethodParameter sendToUserInSessionDefaultDestReturnType = param("handleAndSendToUserDefaultDestInSession");, +	private MethodParameter jsonViewReturnType = param("handleAndSendToJsonView");, +	private MethodParameter defaultNoAnnotation = param(SendToTestBean.class, "handleNoAnnotation");, +	private MethodParameter defaultEmptyAnnotation = param(SendToTestBean.class, "handleAndSendToDefaultDest");, +	private MethodParameter defaultOverrideAnnotation = param(SendToTestBean.class, "handleAndSendToOverride");, +	private MethodParameter userDefaultNoAnnotation = param(SendToUserTestBean.class, "handleNoAnnotation");, +	private MethodParameter userDefaultEmptyAnnotation = param(SendToUserTestBean.class, "handleAndSendToDefaultDest");, +	private MethodParameter userDefaultOverrideAnnotation = param(SendToUserTestBean.class, "handleAndSendToOverride");, +, +	private MethodParameter param(String methodName) {, +		return param(getClass(), methodName);, +	}, +, +	private static MethodParameter param(Class<?> clazz, String methodName) {, +		try {, +			return new SynthesizingMethodParameter(clazz.getDeclaredMethod(methodName), -1);, +		}, +		catch (NoSuchMethodException ex) {, +			throw new IllegalArgumentException("No such method", ex);, +		}, +	}, +		this.handler.handleReturnValue(PAYLOAD, this.sendToUserInSessionReturnType, inputMessage);, +		assertEquals(this.sendToUserInSessionReturnType,, +		assertEquals(this.sendToUserInSessionReturnType,, +		this.handler.handleReturnValue(PAYLOAD, this.sendToUserInSessionDefaultDestReturnType, message);, +		assertEquals(this.sendToUserInSessionDefaultDestReturnType,, +	String handleAndSendToDefaultDest() {, +	String handleAndSendToUserDefaultDest() {, +	String handleAndSendToUserDefaultDestInSession() {, +	String handleAndSendToUserInSession() {, +		String handleAndSendToDefaultDest() {, +		String handleAndSendToDefaultDest() {]