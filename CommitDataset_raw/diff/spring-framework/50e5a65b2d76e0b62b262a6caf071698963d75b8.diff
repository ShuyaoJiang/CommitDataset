[+++ b/spring-core/src/main/java/org/springframework/util/LinkedCaseInsensitiveMap.java, + * Copyright 2002-2017 the original author or authors., +			public boolean containsKey(Object key) {, +				return LinkedCaseInsensitiveMap.this.containsKey(key);, +			}, +			@Override, +	public boolean containsValue(Object value) {, +		return this.targetMap.containsValue(value);, +	}, +, +	@Override, +	public V put(String key, V value) {, +		String oldKey = this.caseInsensitiveKeys.put(convertKey(key), key);, +		if (oldKey != null && !oldKey.equals(key)) {, +			this.targetMap.remove(oldKey);, +		}, +		return this.targetMap.put(key, value);, +	}, +, +	@Override, +	public void putAll(Map<? extends String, ? extends V> map) {, +		if (map.isEmpty()) {, +			return;, +		}, +		for (Map.Entry<? extends String, ? extends V> entry : map.entrySet()) {, +			put(entry.getKey(), entry.getValue());, +		}, +	}, +, +	@Override, +	@Override, +	public Set<String> keySet() {, +		return this.targetMap.keySet();, +	}, +, +	@Override, +	public Collection<V> values() {, +		return this.targetMap.values();, +	}, +, +	@Override, +	public Set<Entry<String, V>> entrySet() {, +		return this.targetMap.entrySet();, +	}, +++ b/spring-core/src/main/java/org/springframework/util/LinkedCaseInsensitiveMap.java, + * Copyright 2002-2017 the original author or authors., +			public boolean containsKey(Object key) {, +				return LinkedCaseInsensitiveMap.this.containsKey(key);, +			}, +			@Override, +	public boolean containsValue(Object value) {, +		return this.targetMap.containsValue(value);, +	}, +, +	@Override, +	public V put(String key, V value) {, +		String oldKey = this.caseInsensitiveKeys.put(convertKey(key), key);, +		if (oldKey != null && !oldKey.equals(key)) {, +			this.targetMap.remove(oldKey);, +		}, +		return this.targetMap.put(key, value);, +	}, +, +	@Override, +	public void putAll(Map<? extends String, ? extends V> map) {, +		if (map.isEmpty()) {, +			return;, +		}, +		for (Map.Entry<? extends String, ? extends V> entry : map.entrySet()) {, +			put(entry.getKey(), entry.getValue());, +		}, +	}, +, +	@Override, +	@Override, +	public Set<String> keySet() {, +		return this.targetMap.keySet();, +	}, +, +	@Override, +	public Collection<V> values() {, +		return this.targetMap.values();, +	}, +, +	@Override, +	public Set<Entry<String, V>> entrySet() {, +		return this.targetMap.entrySet();, +	}, +++ b/spring-core/src/test/java/org/springframework/util/LinkedCaseInsensitiveMapTests.java, + * Copyright 2002-2017 the original author or authors., +		assertTrue(map.containsKey("key"));, +		assertTrue(map.containsKey("KEY"));, +		assertTrue(map.containsKey("Key"));, +		assertTrue(map.keySet().contains("key"));, +		assertTrue(map.keySet().contains("KEY"));, +		assertTrue(map.keySet().contains("Key"));, +		assertTrue(map.containsKey("key"));, +		assertTrue(map.containsKey("KEY"));, +		assertTrue(map.containsKey("Key"));, +		assertTrue(map.keySet().contains("key"));]