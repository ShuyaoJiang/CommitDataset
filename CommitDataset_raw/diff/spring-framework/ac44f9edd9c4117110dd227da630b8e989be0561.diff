[+++ b/spring-context/src/main/java/org/springframework/context/support/DefaultMessageSourceResolvable.java, +		return (this.codes != null && this.codes.length > 0 ? this.codes[this.codes.length - 1] : null);, +		return (ObjectUtils.nullSafeEquals(getCodes(), otherResolvable.getCodes()) &&, +				ObjectUtils.nullSafeEquals(getDefaultMessage(), otherResolvable.getDefaultMessage()));, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultMessageSourceResolvable.java, +		return (this.codes != null && this.codes.length > 0 ? this.codes[this.codes.length - 1] : null);, +		return (ObjectUtils.nullSafeEquals(getCodes(), otherResolvable.getCodes()) &&, +				ObjectUtils.nullSafeEquals(getDefaultMessage(), otherResolvable.getDefaultMessage()));, +++ b/spring-context/src/main/java/org/springframework/validation/FieldError.java, + * Copyright 2002-2016 the original author or authors., +		return (getField().equals(otherError.getField()) &&, +				isBindingFailure() == otherError.isBindingFailure());, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultMessageSourceResolvable.java, +		return (this.codes != null && this.codes.length > 0 ? this.codes[this.codes.length - 1] : null);, +		return (ObjectUtils.nullSafeEquals(getCodes(), otherResolvable.getCodes()) &&, +				ObjectUtils.nullSafeEquals(getDefaultMessage(), otherResolvable.getDefaultMessage()));, +++ b/spring-context/src/main/java/org/springframework/validation/FieldError.java, + * Copyright 2002-2016 the original author or authors., +		return (getField().equals(otherError.getField()) &&, +				isBindingFailure() == otherError.isBindingFailure());, +++ b/spring-context/src/main/java/org/springframework/validation/ObjectError.java, + * Copyright 2002-2016 the original author or authors., +		if (other == null || other.getClass() != getClass() || !super.equals(other)) {, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultMessageSourceResolvable.java, +		return (this.codes != null && this.codes.length > 0 ? this.codes[this.codes.length - 1] : null);, +		return (ObjectUtils.nullSafeEquals(getCodes(), otherResolvable.getCodes()) &&, +				ObjectUtils.nullSafeEquals(getDefaultMessage(), otherResolvable.getDefaultMessage()));, +++ b/spring-context/src/main/java/org/springframework/validation/FieldError.java, + * Copyright 2002-2016 the original author or authors., +		return (getField().equals(otherError.getField()) &&, +				isBindingFailure() == otherError.isBindingFailure());, +++ b/spring-context/src/main/java/org/springframework/validation/ObjectError.java, + * Copyright 2002-2016 the original author or authors., +		if (other == null || other.getClass() != getClass() || !super.equals(other)) {, +++ b/spring-test/src/main/java/org/springframework/test/context/MergedContextConfiguration.java, + * Copyright 2002-2016 the original author or authors., +		if (other == null || other.getClass() != getClass()) {, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultMessageSourceResolvable.java, +		return (this.codes != null && this.codes.length > 0 ? this.codes[this.codes.length - 1] : null);, +		return (ObjectUtils.nullSafeEquals(getCodes(), otherResolvable.getCodes()) &&, +				ObjectUtils.nullSafeEquals(getDefaultMessage(), otherResolvable.getDefaultMessage()));, +++ b/spring-context/src/main/java/org/springframework/validation/FieldError.java, + * Copyright 2002-2016 the original author or authors., +		return (getField().equals(otherError.getField()) &&, +				isBindingFailure() == otherError.isBindingFailure());, +++ b/spring-context/src/main/java/org/springframework/validation/ObjectError.java, + * Copyright 2002-2016 the original author or authors., +		if (other == null || other.getClass() != getClass() || !super.equals(other)) {, +++ b/spring-test/src/main/java/org/springframework/test/context/MergedContextConfiguration.java, + * Copyright 2002-2016 the original author or authors., +		if (other == null || other.getClass() != getClass()) {, +++ b/spring-test/src/main/java/org/springframework/test/context/web/WebMergedContextConfiguration.java, + * Copyright 2002-2016 the original author or authors., +		return (this == other || (super.equals(other) &&, +				this.resourceBasePath.equals(((WebMergedContextConfiguration) other).resourceBasePath)));, +		return super.hashCode() * 31 + this.resourceBasePath.hashCode();]