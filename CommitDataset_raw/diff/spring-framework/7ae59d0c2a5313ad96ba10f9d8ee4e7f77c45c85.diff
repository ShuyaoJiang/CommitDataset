[+++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +import org.springframework.util.Assert;, +		Assert.state(this.beanFactory != null, "BeanFactory required for resolving interceptor names");, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +import org.springframework.util.Assert;, +		Assert.state(this.beanFactory != null, "BeanFactory required for resolving interceptor names");, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +	public Object convertForProperty(@Nullable Object value, String propertyName) throws TypeMismatchException {, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +import org.springframework.util.Assert;, +		Assert.state(this.beanFactory != null, "BeanFactory required for resolving interceptor names");, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +	public Object convertForProperty(@Nullable Object value, String propertyName) throws TypeMismatchException {, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +		@Nullable, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +import org.springframework.util.Assert;, +		Assert.state(this.beanFactory != null, "BeanFactory required for resolving interceptor names");, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +	public Object convertForProperty(@Nullable Object value, String propertyName) throws TypeMismatchException {, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyValue.java, +	public PropertyValue(PropertyValue original, @Nullable Object newValue) {, +	public synchronized void setConvertedValue(@Nullable Object value) {, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +import org.springframework.util.Assert;, +		Assert.state(this.beanFactory != null, "BeanFactory required for resolving interceptor names");, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +	public Object convertForProperty(@Nullable Object value, String propertyName) throws TypeMismatchException {, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyValue.java, +	public PropertyValue(PropertyValue original, @Nullable Object newValue) {, +	public synchronized void setConvertedValue(@Nullable Object value) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +import org.springframework.util.Assert;, +		Assert.state(this.beanFactory != null, "BeanFactory required for resolving interceptor names");, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +	public Object convertForProperty(@Nullable Object value, String propertyName) throws TypeMismatchException {, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyValue.java, +	public PropertyValue(PropertyValue original, @Nullable Object newValue) {, +	public synchronized void setConvertedValue(@Nullable Object value) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		if (pvs.isEmpty()) {, +	private Object convertForProperty(, +			@Nullable Object value, String propertyName, BeanWrapper bw, TypeConverter converter) {, +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +import org.springframework.util.Assert;, +		Assert.state(this.beanFactory != null, "BeanFactory required for resolving interceptor names");, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +	public Object convertForProperty(@Nullable Object value, String propertyName) throws TypeMismatchException {, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyValue.java, +	public PropertyValue(PropertyValue original, @Nullable Object newValue) {, +	public synchronized void setConvertedValue(@Nullable Object value) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		if (pvs.isEmpty()) {, +	private Object convertForProperty(, +			@Nullable Object value, String propertyName, BeanWrapper bw, TypeConverter converter) {, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AutowireUtils.java, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +import org.springframework.util.Assert;, +		Assert.state(this.beanFactory != null, "BeanFactory required for resolving interceptor names");, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +	public Object convertForProperty(@Nullable Object value, String propertyName) throws TypeMismatchException {, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyValue.java, +	public PropertyValue(PropertyValue original, @Nullable Object newValue) {, +	public synchronized void setConvertedValue(@Nullable Object value) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		if (pvs.isEmpty()) {, +	private Object convertForProperty(, +			@Nullable Object value, String propertyName, BeanWrapper bw, TypeConverter converter) {, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AutowireUtils.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/ParserContext.java, +	@Nullable, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +import org.springframework.util.Assert;, +		Assert.state(this.beanFactory != null, "BeanFactory required for resolving interceptor names");, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +	public Object convertForProperty(@Nullable Object value, String propertyName) throws TypeMismatchException {, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyValue.java, +	public PropertyValue(PropertyValue original, @Nullable Object newValue) {, +	public synchronized void setConvertedValue(@Nullable Object value) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java]