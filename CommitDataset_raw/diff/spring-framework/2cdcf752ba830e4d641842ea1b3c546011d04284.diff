[+++ b/spring-web/src/main/java/org/springframework/web/method/annotation/RequestParamMethodArgumentResolver.java, +			if (requestParam != null) {, +				if (!requestParam.required() || !requestParam.defaultValue().equals(ValueConstants.DEFAULT_NONE)) {, +					return;, +				}, +			}, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/RequestParamMethodArgumentResolver.java, +			if (requestParam != null) {, +				if (!requestParam.required() || !requestParam.defaultValue().equals(ValueConstants.DEFAULT_NONE)) {, +					return;, +				}, +			}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilderTests.java, + * Copyright 2012-2016 the original author or authors., +	@Test // SPR-14405, +	public void testFromMappingNameWithOptionalParam() throws Exception {, +		UriComponents uriComponents = fromMethodName(ControllerWithMethods.class,, +				"methodWithOptionalParam", new Object[] {null}).build();, +, +		assertThat(uriComponents.toUriString(), is("http://localhost/something/optional-param"));, +	}, +, +	private class PersonControllerImpl implements PersonController {, +	private static class PersonsAddressesController {, +		HttpEntity<Void> getAddressesForCountry(@PathVariable String country) {, +	private class InvalidController {, +	private class UnmappedController {, +, +		@RequestMapping("/optional-param"), +		HttpEntity<Void> methodWithOptionalParam(@RequestParam(defaultValue = "") String q) {, +			return null;, +		}, +	@RequestMapping("/extended") @SuppressWarnings("WeakerAccess"), +	private static class UserContactController {, +	private static class PersonCrudController extends AbstractCrudController<Person, Long> {, +	private static class MetaAnnotationController {, +	private @interface PostJson {]