[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/handler/SimpleBrokerMessageHandler.java, +		return Arrays.asList(SimpMessageType.MESSAGE, SimpMessageType.SUBSCRIBE,, +				SimpMessageType.UNSUBSCRIBE, SimpMessageType.DISCONNECT);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/handler/SimpleBrokerMessageHandler.java, +		return Arrays.asList(SimpMessageType.MESSAGE, SimpMessageType.SUBSCRIBE,, +				SimpMessageType.UNSUBSCRIBE, SimpMessageType.DISCONNECT);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompWebSocketHandler.java, +	private MessageChannel clientInputChannel;, +	 * @param clientInputChannel the channel to which incoming STOMP/WebSocket messages should, +	public StompWebSocketHandler(MessageChannel clientInputChannel) {, +		Assert.notNull(clientInputChannel, "clientInputChannel is required");, +		this.clientInputChannel = clientInputChannel;, +		Assert.notNull(this.clientInputChannel, "No output channel for STOMP messages.");, +				this.clientInputChannel.send(message);, +		this.clientInputChannel.send(message);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/handler/SimpleBrokerMessageHandler.java, +		return Arrays.asList(SimpMessageType.MESSAGE, SimpMessageType.SUBSCRIBE,, +				SimpMessageType.UNSUBSCRIBE, SimpMessageType.DISCONNECT);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompWebSocketHandler.java, +	private MessageChannel clientInputChannel;, +	 * @param clientInputChannel the channel to which incoming STOMP/WebSocket messages should, +	public StompWebSocketHandler(MessageChannel clientInputChannel) {, +		Assert.notNull(clientInputChannel, "clientInputChannel is required");, +		this.clientInputChannel = clientInputChannel;, +		Assert.notNull(this.clientInputChannel, "No output channel for STOMP messages.");, +				this.clientInputChannel.send(message);, +		this.clientInputChannel.send(message);, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/handler/SimpleBrokerWebMessageHandlerTests.java, +		assertEquals(Arrays.asList(SimpMessageType.MESSAGE, SimpMessageType.SUBSCRIBE,, +				SimpMessageType.UNSUBSCRIBE, SimpMessageType.DISCONNECT),]