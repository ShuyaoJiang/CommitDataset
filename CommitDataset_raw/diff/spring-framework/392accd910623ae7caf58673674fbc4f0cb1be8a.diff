[+++ b/org.springframework.context/src/main/java/org/springframework/context/EmbeddedValueResolverAware.java, +/*, + * Copyright 2002-2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.context;, +, +import org.springframework.util.StringValueResolver;, +, +/**, + * Interface to be implemented by any object that wishes to be notified of a, + * <b>StringValueResolver</b> for the <b> resolution of embedded definition values., + *, + * <p>This is an alternative to a full ConfigurableBeanFactory dependency via the, + * ApplicationContextAware/BeanFactoryAware interfaces., + *, + * @author Juergen Hoeller, + * @since 3.0.3, + * @see org.springframework.beans.factory.config.ConfigurableBeanFactory#resolveEmbeddedValue, + */, +public interface EmbeddedValueResolverAware {, +, +	/**, +	 * Set the StringValueResolver to use for resolving embedded definition values., +	 */, +	void setEmbeddedValueResolver(StringValueResolver resolver);, +, +}, +++ b/org.springframework.context/src/main/java/org/springframework/context/EmbeddedValueResolverAware.java, +/*, + * Copyright 2002-2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.context;, +, +import org.springframework.util.StringValueResolver;, +, +/**, + * Interface to be implemented by any object that wishes to be notified of a, + * <b>StringValueResolver</b> for the <b> resolution of embedded definition values., + *, + * <p>This is an alternative to a full ConfigurableBeanFactory dependency via the, + * ApplicationContextAware/BeanFactoryAware interfaces., + *, + * @author Juergen Hoeller, + * @since 3.0.3, + * @see org.springframework.beans.factory.config.ConfigurableBeanFactory#resolveEmbeddedValue, + */, +public interface EmbeddedValueResolverAware {, +, +	/**, +	 * Set the StringValueResolver to use for resolving embedded definition values., +	 */, +	void setEmbeddedValueResolver(StringValueResolver resolver);, +, +}, +++ b/org.springframework.context/src/main/java/org/springframework/context/support/ApplicationContextAwareProcessor.java, +import org.springframework.beans.factory.config.ConfigurableBeanFactory;, +import org.springframework.context.EmbeddedValueResolverAware;, +import org.springframework.util.StringValueResolver;, +		if (bean instanceof EmbeddedValueResolverAware) {, +			((EmbeddedValueResolverAware) bean).setEmbeddedValueResolver(, +					new EmbeddedValueResolver(this.applicationContext.getBeanFactory()));, +		}, +, +	private static class EmbeddedValueResolver implements StringValueResolver {, +, +		private final ConfigurableBeanFactory beanFactory;, +, +		public EmbeddedValueResolver(ConfigurableBeanFactory beanFactory) {, +			this.beanFactory = beanFactory;, +		}, +, +		public String resolveStringValue(String strVal) {, +			return this.beanFactory.resolveEmbeddedValue(strVal);, +		}]