[+++ b/spring-web-reactive/src/main/java/org/springframework/http/converter/reactive/CodecHttpMessageConverter.java, + * @author Rossen Stoyanchev, +, +, +, +		return this.decoder.decode(inputMessage.getBody(), type, contentType);, +			MediaType contentType, ReactiveHttpOutputMessage outputMessage) {, +, +		DataBufferFactory bufferFactory = outputMessage.bufferFactory();, +		Flux<DataBuffer> body = this.encoder.encode(inputStream, bufferFactory, type, contentType);, +	 * Return the default content type for the given {@code ResolvableType}., +	 * Used when {@link #write} is called without a concrete content type., +	 *, +	 * <p>By default returns the first of {@link Encoder#getEncodableMimeTypes(), +	 * encodableMimeTypes}, if any., +	 *, +	 * @param elementType the type of element for encoding, +	 * @return the content type, or {@code null}, +	protected MediaType getDefaultContentType(ResolvableType elementType) {, +]