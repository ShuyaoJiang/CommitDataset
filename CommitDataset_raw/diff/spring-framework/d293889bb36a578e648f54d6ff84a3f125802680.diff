[+++ b/spring-core/src/main/java/org/springframework/util/AntPathMatcher.java, +		boolean pathStarted = false;, +		for (int segment = 0; segment < patternParts.length; segment++) {, +			String patternPart = patternParts[segment];, +			if (patternPart.indexOf('*') > -1 || patternPart.indexOf('?') > -1) {, +				for (; segment < pathParts.length; segment++) {, +					if (pathStarted || (segment == 0 && !pattern.startsWith(this.pathSeparator))) {, +					builder.append(pathParts[segment]);, +					pathStarted = true;, +++ b/spring-core/src/main/java/org/springframework/util/AntPathMatcher.java, +		boolean pathStarted = false;, +		for (int segment = 0; segment < patternParts.length; segment++) {, +			String patternPart = patternParts[segment];, +			if (patternPart.indexOf('*') > -1 || patternPart.indexOf('?') > -1) {, +				for (; segment < pathParts.length; segment++) {, +					if (pathStarted || (segment == 0 && !pattern.startsWith(this.pathSeparator))) {, +					builder.append(pathParts[segment]);, +					pathStarted = true;, +++ b/spring-core/src/test/java/org/springframework/util/AntPathMatcherTests.java, +		//SPR-10515, +		assertEquals("/docs/cvs/other/commit.html", pathMatcher.extractPathWithinPattern("**/commit.html", "/docs/cvs/other/commit.html"));, +		assertEquals("cvs/other/commit.html", pathMatcher.extractPathWithinPattern("/docs/**/commit.html", "/docs/cvs/other/commit.html"));, +		assertEquals("cvs/other/commit.html", pathMatcher.extractPathWithinPattern("/docs/**/**/**/**", "/docs/cvs/other/commit.html"));]