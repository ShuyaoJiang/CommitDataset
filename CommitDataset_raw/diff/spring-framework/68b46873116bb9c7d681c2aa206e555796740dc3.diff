[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextConfiguration.java, + * {@code ContextConfiguration} defines class-level metadata that is, + * used to determine how to load and configure an, + * {@link org.springframework.context.ApplicationContext ApplicationContext}, + * for test classes., + * , + * <p>Prior to Spring 3.1, only path-based resource locations were supported., + * As of Spring 3.1 {@link #loader context loaders} may choose to support, + * either path-based or class-based resources (but not both). Consequently, + * {@code @ContextConfiguration} can be used to declare either path-based, + * resource locations (via the {@link #locations} or {@link #value}, + * attribute) <i>or</i> configuration classes (via the {@link #classes}, + * attribute)., +	 * , +	 * <p>This attribute may <strong>not</strong> be used in conjunction, +	 * with {@link #locations} or {@link #classes}, but it may be used, +	 * instead of {@link #locations}., +	 * , +	 * , +	 * , +	 * <p>This attribute may <strong>not</strong> be used in conjunction, +	 * with {@link #value} or {@link #classes}, but it may be used, +	 * instead of {@link #value}., +	 * The {@link org.springframework.context.annotation.Configuration configuration classes}, +	 * to use for loading an, +	 * {@link org.springframework.context.ApplicationContext ApplicationContext}., +	 * <p>To enable support for configuration class processing, an appropriate, +	 * {@link ContextLoader} must be {@link #loader configured}., +	 * {@link org.springframework.test.context.support.AnnotationConfigContextLoader AnnotationConfigContextLoader}, +	 * is one such loader provided by the Spring Framework., +	 * , +	 * <p>Check out the javadoc for, +	 * {@link org.springframework.test.context.support.AnnotationConfigContextLoader#generateDefaultLocations AnnotationConfigContextLoader.generateDefaultLocations()}, +	 * for details on the default configuration classes that will be used if none are specified., +	 * , +	 * <p>Note that this attribute may <strong>not</strong> be used in, +	 * conjunction with {@link #locations} or {@link #value}., +	 * @see org.springframework.context.annotation.Configuration, +	 * @see org.springframework.test.context.support.AnnotationConfigContextLoader, +	 * Whether or not {@link #locations resource locations} or, +	 * {@link #classes configuration classes} from superclasses should be, +	 * <em>inherited</em>., +	 * class will <em>inherit</em> the resource locations or configuration, +	 * classes defined by an annotated superclass. Specifically, the resource, +	 * locations or configuration classes for an annotated class will be, +	 * appended to the list of resource locations or configuration classes, +	 * <em>extending</em> the list of resource locations or configuration, +	 * classes., +	 * , +	 * <p>If <code>inheritLocations</code> is set to <code>false</code>, the, +	 * resource locations or configuration classes for the annotated class, +	 * will <em>shadow</em> and effectively replace any resource locations , +	 * or configuration classes defined by a superclass., +	 * , +	 * <p>In the following example that uses path-based resource locations, the, +	 * {@link org.springframework.context.ApplicationContext ApplicationContext}, +	 * for {@code ExtendedTest} will be loaded from, +	 * , +	 * <p>Similarly, in the following example that uses configuration, +	 * classes, the, +	 * {@link org.springframework.context.ApplicationContext ApplicationContext}, +	 * for {@code ExtendedTest} will be loaded from the, +	 * {@code BaseConfig} <strong>and</strong> {@code ExtendedConfig} , +	 * configuration classes, in that order. Beans defined in, +	 * {@code ExtendedConfig} may therefore override those defined in, +	 * {@code BaseConfig}., +	 * <pre class="code">, +	 * &#064;ContextConfiguration(classes=BaseConfig.class, loader=AnnotationConfigContextLoader.class), +	 * public class BaseTest {, +	 *     // ..., +	 * }, +	 * , +	 * &#064;ContextConfiguration(classes=ExtendedConfig.class, loader=AnnotationConfigContextLoader.class), +	 * public class ExtendedTest extends BaseTest {, +	 *     // ..., +	 * }, +	 * </pre>, +	 * , +	 * , +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextConfiguration.java, + * {@code ContextConfiguration} defines class-level metadata that is, + * used to determine how to load and configure an, + * {@link org.springframework.context.ApplicationContext ApplicationContext}, + * for test classes., + * , + * <p>Prior to Spring 3.1, only path-based resource locations were supported., + * As of Spring 3.1 {@link #loader context loaders} may choose to support, + * either path-based or class-based resources (but not both). Consequently, + * {@code @ContextConfiguration} can be used to declare either path-based, + * resource locations (via the {@link #locations} or {@link #value}, + * attribute) <i>or</i> configuration classes (via the {@link #classes}, + * attribute)., +	 * , +	 * <p>This attribute may <strong>not</strong> be used in conjunction, +	 * with {@link #locations} or {@link #classes}, but it may be used, +	 * instead of {@link #locations}., +	 * , +	 * , +	 * , +	 * <p>This attribute may <strong>not</strong> be used in conjunction]