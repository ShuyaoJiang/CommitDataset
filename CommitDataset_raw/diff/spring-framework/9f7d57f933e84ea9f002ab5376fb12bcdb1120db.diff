[+++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +		this.pathContainer = RequestPath.parse(uri, contextPath);, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +		this.pathContainer = RequestPath.parse(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +		this.path = RequestPath.parse(uri, contextPath);, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +		this.pathContainer = RequestPath.parse(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +		this.path = RequestPath.parse(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultRequestPath.java, +	DefaultRequestPath(URI uri, @Nullable String contextPath) {, +		this.fullPath = PathContainer.parse(uri.getRawPath(), StandardCharsets.UTF_8);, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +		this.pathContainer = RequestPath.parse(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +		this.path = RequestPath.parse(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultRequestPath.java, +	DefaultRequestPath(URI uri, @Nullable String contextPath) {, +		this.fullPath = PathContainer.parse(uri.getRawPath(), StandardCharsets.UTF_8);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder.java, +		if (uriToUse == null && this.contextPath == null) {, +		else if (uriToUse == null) {, +			return RequestPath.parse(uriToUse, this.contextPath);, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +		this.pathContainer = RequestPath.parse(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +		this.path = RequestPath.parse(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultRequestPath.java, +	DefaultRequestPath(URI uri, @Nullable String contextPath) {, +		this.fullPath = PathContainer.parse(uri.getRawPath(), StandardCharsets.UTF_8);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder.java, +		if (uriToUse == null && this.contextPath == null) {, +		else if (uriToUse == null) {, +			return RequestPath.parse(uriToUse, this.contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/RequestPath.java, +, +import org.springframework.lang.Nullable;, +, +	static RequestPath parse(URI uri, @Nullable String contextPath) {, +		return new DefaultRequestPath(uri, contextPath);, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +		this.pathContainer = RequestPath.parse(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +		this.path = RequestPath.parse(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultRequestPath.java, +	DefaultRequestPath(URI uri, @Nullable String contextPath) {, +		this.fullPath = PathContainer.parse(uri.getRawPath(), StandardCharsets.UTF_8);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder.java, +		if (uriToUse == null && this.contextPath == null) {, +		else if (uriToUse == null) {, +			return RequestPath.parse(uriToUse, this.contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/RequestPath.java, +, +import org.springframework.lang.Nullable;, +, +	static RequestPath parse(URI uri, @Nullable String contextPath) {, +		return new DefaultRequestPath(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, +		// TODO: implement extractPathWithinPattern for PathContainer, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +		this.pathContainer = RequestPath.parse(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +		this.path = RequestPath.parse(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultRequestPath.java, +	DefaultRequestPath(URI uri, @Nullable String contextPath) {, +		this.fullPath = PathContainer.parse(uri.getRawPath(), StandardCharsets.UTF_8);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder.java, +		if (uriToUse == null && this.contextPath == null) {, +		else if (uriToUse == null) {, +			return RequestPath.parse(uriToUse, this.contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/RequestPath.java, +, +import org.springframework.lang.Nullable;, +, +	static RequestPath parse(URI uri, @Nullable String contextPath) {, +		return new DefaultRequestPath(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, +		// TODO: implement extractPathWithinPattern for PathContainer, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/DefaultRequestPathTests.java, +		RequestPath requestPath = RequestPath.parse(uri, contextPath);, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +		this.pathContainer = RequestPath.parse(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +		this.path = RequestPath.parse(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultRequestPath.java, +	DefaultRequestPath(URI uri, @Nullable String contextPath) {, +		this.fullPath = PathContainer.parse(uri.getRawPath(), StandardCharsets.UTF_8);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder.java, +		if (uriToUse == null && this.contextPath == null) {, +		else if (uriToUse == null) {, +			return RequestPath.parse(uriToUse, this.contextPath);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/RequestPath.java, +, +import org.springframework.lang.Nullable;, +, +	static RequestPath parse(URI uri, @Nullable String contextPath) {, +		return new DefaultRequestPath(uri, contextPath);, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, +		// TODO: implement extractPathWithinPattern for PathContainer]