[+++ b/build.gradle, +		optional("org.projectreactor:reactor-core:1.0.1.RELEASE"), +		optional("org.projectreactor:reactor-tcp:1.0.1.RELEASE"), +		testCompile("org.projectreactor:reactor-core:1.0.1.RELEASE"), +		testCompile("org.projectreactor:reactor-tcp:1.0.1.RELEASE"), +++ b/build.gradle, +		optional("org.projectreactor:reactor-core:1.0.1.RELEASE"), +		optional("org.projectreactor:reactor-tcp:1.0.1.RELEASE"), +		testCompile("org.projectreactor:reactor-core:1.0.1.RELEASE"), +		testCompile("org.projectreactor:reactor-tcp:1.0.1.RELEASE"), +++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorTcpClient.java, +import java.lang.reflect.Modifier;, + * based on the TCP client support of the Reactor project., +	private final TcpClient<Message<P>, Message<P>> tcpClient;, +, +	private final Environment environment;, +, +		// Revisit in 1.1: is Environment still required w/ sync dispatcher?, +		this.environment = new Environment();, +, +				.env(this.environment), +, +		checkReactorVersion();, +		this.environment = null;, +		checkReactorVersion();, +	}, +, +	private static void checkReactorVersion() {, +		Class<?> type = null;, +		try {, +			type = ReactorTcpClient.class.getClassLoader().loadClass("reactor.event.dispatch.BaseDispatcher");, +			Assert.isTrue(Modifier.isPublic(type.getModifiers()),, +					"Detected older version of reactor-tcp. Switch to 1.0.1.RELEASE or higher.");, +		}, +		catch (ClassNotFoundException e) {, +			// Ignore, must be 1.1+, +		}, +		try {, +		finally {, +			this.environment.shutdown();, +, +		}, +	}]