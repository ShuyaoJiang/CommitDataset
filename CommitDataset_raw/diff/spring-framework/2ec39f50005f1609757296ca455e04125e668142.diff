[+++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	public static final TypedValue NULL = new TypedValue(null, TypeDescriptor.NULL);, +			this.typeDescriptor = TypeDescriptor.forObject(this.value);, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	public static final TypedValue NULL = new TypedValue(null, TypeDescriptor.NULL);, +			this.typeDescriptor = TypeDescriptor.forObject(this.value);, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, +			return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	public static final TypedValue NULL = new TypedValue(null, TypeDescriptor.NULL);, +			this.typeDescriptor = TypeDescriptor.forObject(this.value);, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, +			return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java, +				return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	public static final TypedValue NULL = new TypedValue(null, TypeDescriptor.NULL);, +			this.typeDescriptor = TypeDescriptor.forObject(this.value);, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, +			return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java, +				return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/NullLiteral.java, +		return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	public static final TypedValue NULL = new TypedValue(null, TypeDescriptor.NULL);, +			this.typeDescriptor = TypeDescriptor.forObject(this.value);, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, +			return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java, +				return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/NullLiteral.java, +		return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OpAnd.java, +		if (TypedValue.NULL.equals(typedValue)) {, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	public static final TypedValue NULL = new TypedValue(null, TypeDescriptor.NULL);, +			this.typeDescriptor = TypeDescriptor.forObject(this.value);, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, +			return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java, +				return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/NullLiteral.java, +		return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OpAnd.java, +		if (TypedValue.NULL.equals(typedValue)) {, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OpOr.java, +		if (TypedValue.NULL.equals(typedValue)) {, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	public static final TypedValue NULL = new TypedValue(null, TypeDescriptor.NULL);, +			this.typeDescriptor = TypeDescriptor.forObject(this.value);, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, +			return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java, +				return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/NullLiteral.java, +		return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OpAnd.java, +		if (TypedValue.NULL.equals(typedValue)) {, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OpOr.java, +		if (TypedValue.NULL.equals(typedValue)) {, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorNot.java, +			if (TypedValue.NULL.equals(typedValue)) {, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	public static final TypedValue NULL = new TypedValue(null, TypeDescriptor.NULL);, +			this.typeDescriptor = TypeDescriptor.forObject(this.value);, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, +			return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java, +				return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/NullLiteral.java, +		return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OpAnd.java, +		if (TypedValue.NULL.equals(typedValue)) {, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OpOr.java, +		if (TypedValue.NULL.equals(typedValue)) {, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorNot.java, +			if (TypedValue.NULL.equals(typedValue)) {, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/Projection.java, +					return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	public static final TypedValue NULL = new TypedValue(null, TypeDescriptor.NULL);, +			this.typeDescriptor = TypeDescriptor.forObject(this.value);, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, +			return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java, +				return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/NullLiteral.java, +		return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OpAnd.java, +		if (TypedValue.NULL.equals(typedValue)) {, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OpOr.java, +		if (TypedValue.NULL.equals(typedValue)) {, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorNot.java, +			if (TypedValue.NULL.equals(typedValue)) {, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/Projection.java, +					return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/PropertyOrFieldReference.java, +			return TypedValue.NULL;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java]