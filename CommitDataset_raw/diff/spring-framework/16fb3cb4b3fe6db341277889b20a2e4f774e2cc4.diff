[+++ b/org.springframework.core/src/test/java/org/springframework/util/ReflectionUtilsTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertNull;, +import static org.junit.Assert.assertThat;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +import org.junit.Ignore;, +		} catch (IllegalArgumentException ex) {, +		} catch (IllegalArgumentException ex) {, +		} catch (IllegalArgumentException ex) {, +	@Ignore("[SPR-8644] findMethod() does not currently support var-args"), +	@Test, +	public void findMethodWithVarArgs() throws Exception {, +		assertNotNull(ReflectionUtils.findMethod(B.class, "add", int.class, int.class, int.class));, +	}, +, +			public void CGLIB$m1$123() {, +			}, +, +			public void CGLIB$m1$0() {, +			}, +, +			public void CGLIB$$0() {, +			}, +, +			public void CGLIB$m1$() {, +			}, +, +			public void CGLIB$m1() {, +			}, +, +			public void m1() {, +			}, +, +			public void m1$() {, +			}, +, +			public void m1$1() {, +			}, +			@SuppressWarnings("unused"), +		@SuppressWarnings("unused"), +		@SuppressWarnings("unused"), +		@SuppressWarnings("unused"), +		@SuppressWarnings("unused"), +	@SuppressWarnings("unused"), +, +		int add(int... args) {, +			int sum = 0;, +			for (int i = 0; i < args.length; i++) {, +				sum += args[i];, +			}, +			return sum;, +		}]