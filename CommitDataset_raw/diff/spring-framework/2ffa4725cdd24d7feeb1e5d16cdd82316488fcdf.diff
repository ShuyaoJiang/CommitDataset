[+++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +					stmt.execute(statement);, +					int rowsAffected = stmt.getUpdateCount();, +						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement);, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +					stmt.execute(statement);, +					int rowsAffected = stmt.getUpdateCount();, +						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement);, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/datasource/init/DatabasePopulatorTests.java, +	private void assertUsersDatabaseCreated() {, +		assertUsersDatabaseCreated();, +	}, +, +	@Test, +	public void testBuildWithSelectStatements() throws Exception {, +		databasePopulator.addScript(resourceLoader.getResource("db-schema.sql"));, +		databasePopulator.addScript(resourceLoader.getResource("db-test-data-select.sql"));, +		Connection connection = db.getConnection();, +		try {, +			databasePopulator.populate(connection);, +		} finally {, +			connection.close();, +		}, +, +		assertEquals(1, jdbcTemplate.queryForInt("select COUNT(NAME) from T_TEST where NAME='Keith'"));, +		assertEquals(1, jdbcTemplate.queryForInt("select COUNT(NAME) from T_TEST where NAME='Dave'"));, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +					stmt.execute(statement);, +					int rowsAffected = stmt.getUpdateCount();, +						logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement);, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/datasource/init/DatabasePopulatorTests.java, +	private void assertUsersDatabaseCreated() {, +		assertUsersDatabaseCreated();, +	}, +, +	@Test, +	public void testBuildWithSelectStatements() throws Exception {, +		databasePopulator.addScript(resourceLoader.getResource("db-schema.sql"));, +		databasePopulator.addScript(resourceLoader.getResource("db-test-data-select.sql"));, +		Connection connection = db.getConnection();, +		try {, +			databasePopulator.populate(connection);, +		} finally {, +			connection.close();, +		}, +, +		assertEquals(1, jdbcTemplate.queryForInt("select COUNT(NAME) from T_TEST where NAME='Keith'"));, +		assertEquals(1, jdbcTemplate.queryForInt("select COUNT(NAME) from T_TEST where NAME='Dave'"));, +++ b/org.springframework.jdbc/src/test/resources/org/springframework/jdbc/datasource/init/db-test-data-select.sql, +insert into T_TEST (NAME) values ('Keith');, +insert into T_TEST (NAME) values ('Dave');, +select NAME from T_TEST where NAME = 'Keith';]