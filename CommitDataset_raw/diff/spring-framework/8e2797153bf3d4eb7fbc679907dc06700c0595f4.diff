[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +				Object convertedValue;, +					convertedValue = valueHolder.getConvertedValue();, +						convertedValue = converter.convertIfNecessary(originalValue, paramType,, +				args.arguments[paramIndex] = convertedValue;, +				if (mbd.isLenientConstructorResolution()) {, +					args.rawArguments[paramIndex] = originalValue;, +				}, +				else {, +					args.rawArguments[paramIndex] =, +							((sourceValue instanceof TypedStringValue && !((TypedStringValue) sourceValue).hasTargetType()) ?, +							convertedValue : originalValue);, +				}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +				Object convertedValue;, +					convertedValue = valueHolder.getConvertedValue();, +						convertedValue = converter.convertIfNecessary(originalValue, paramType,, +				args.arguments[paramIndex] = convertedValue;, +				if (mbd.isLenientConstructorResolution()) {, +					args.rawArguments[paramIndex] = originalValue;, +				}, +				else {, +					args.rawArguments[paramIndex] =, +							((sourceValue instanceof TypedStringValue && !((TypedStringValue) sourceValue).hasTargetType()) ?, +							convertedValue : originalValue);, +				}, +++ b/org.springframework.context/src/test/java/org/springframework/beans/factory/xml/XmlBeanFactoryTests-constructorArg.xml, +	<bean id="string" class="java.lang.String" autowire-candidate="false">, +		<constructor-arg><value type="java.lang.String">test</value></constructor-arg>, +	</bean>, +, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +				Object convertedValue;, +					convertedValue = valueHolder.getConvertedValue();, +						convertedValue = converter.convertIfNecessary(originalValue, paramType,, +				args.arguments[paramIndex] = convertedValue;, +				if (mbd.isLenientConstructorResolution()) {, +					args.rawArguments[paramIndex] = originalValue;, +				}, +				else {, +					args.rawArguments[paramIndex] =, +							((sourceValue instanceof TypedStringValue && !((TypedStringValue) sourceValue).hasTargetType()) ?, +							convertedValue : originalValue);, +				}, +++ b/org.springframework.context/src/test/java/org/springframework/beans/factory/xml/XmlBeanFactoryTests-constructorArg.xml, +	<bean id="string" class="java.lang.String" autowire-candidate="false">, +		<constructor-arg><value type="java.lang.String">test</value></constructor-arg>, +	</bean>, +, +++ b/org.springframework.context/src/test/java/org/springframework/beans/factory/xml/XmlBeanFactoryTests.java, +import org.springframework.beans.factory.support.AbstractBeanDefinition;, +			// expected, +	public @Test void testStringConstructor() {, +		XmlBeanFactory xbf = new XmlBeanFactory(CONSTRUCTOR_ARG_CONTEXT);, +		AbstractBeanDefinition bd = (AbstractBeanDefinition) xbf.getBeanDefinition("string");, +		bd.setLenientConstructorResolution(false);, +		String str = (String) xbf.getBean("string");, +		assertEquals("test", str);, +	}, +]