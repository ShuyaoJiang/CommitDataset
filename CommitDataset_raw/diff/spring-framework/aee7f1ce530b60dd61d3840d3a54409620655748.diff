[+++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Configuration.java, + *    <li>Configuration classes must have a default/no-arg constructor and may not use, + *        {@link Autowired} constructor parameters, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Configuration.java, + *    <li>Configuration classes must have a default/no-arg constructor and may not use, + *        {@link Autowired} constructor parameters, +++ b/org.springframework.context/src/test/java/org/springframework/context/annotation/configuration/AutowiredConfigurationTests.java, +import org.springframework.beans.factory.BeanCreationException;, +import org.springframework.beans.factory.support.RootBeanDefinition;, +import org.springframework.beans.factory.xml.XmlBeanFactory;, +import org.springframework.context.support.GenericApplicationContext;, +import org.springframework.core.io.ClassPathResource;, +, +	@Test , +	public void testAutowiredConfigurationDependencies() {, +		@Autowired, +		private Colour colour;, +		@Bean, +		public TestBean testBean() {, +, +		@Bean, +		public Colour colour() {, +	/**, +	 * {@link Autowired} constructors are not supported on {@link Configuration} classes, +	 * due to CGLIB constraints, +	 */, +	@Test(expected=BeanCreationException.class), +	public void testAutowiredConfigurationConstructorsAreNotSupported() {, +		XmlBeanFactory factory = new XmlBeanFactory(new ClassPathResource("annotation-config.xml", AutowiredConstructorConfig.class));, +		GenericApplicationContext ctx = new GenericApplicationContext(factory);, +		ctx.registerBeanDefinition("config1", new RootBeanDefinition(AutowiredConstructorConfig.class));, +		ctx.registerBeanDefinition("config2", new RootBeanDefinition(ColorConfig.class));, +		ctx.refresh(); // should throw, +	}, +	@Configuration, +	static class AutowiredConstructorConfig {, +		Colour colour;, +, +		@Autowired, +		AutowiredConstructorConfig(Colour colour) {, +			this.colour = colour;, +		}, +	}, +, +	@Test, +	public void testValueInjection() {, +		@Bean, +		public TestBean testBean() {, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Configuration.java, + *    <li>Configuration classes must have a default/no-arg constructor and may not use, + *        {@link Autowired} constructor parameters, +++ b/org.springframework.context/src/test/java/org/springframework/context/annotation/configuration/AutowiredConfigurationTests.java, +import org.springframework.beans.factory.BeanCreationException;, +import org.springframework.beans.factory.support.RootBeanDefinition;, +import org.springframework.beans.factory.xml.XmlBeanFactory;, +import org.springframework.context.support.GenericApplicationContext;, +import org.springframework.core.io.ClassPathResource;, +, +	@Test , +	public void testAutowiredConfigurationDependencies() {, +		@Autowired, +		private Colour colour;, +		@Bean, +		public TestBean testBean() {, +, +		@Bean, +		public Colour colour() {, +	/**, +	 * {@link Autowired} constructors are not supported on {@link Configuration} classes, +	 * due to CGLIB constraints, +	 */, +	@Test(expected=BeanCreationException.class), +	public void testAutowiredConfigurationConstructorsAreNotSupported() {, +		XmlBeanFactory factory = new XmlBeanFactory(new ClassPathResource("annotation-config.xml", AutowiredConstructorConfig.class));, +		GenericApplicationContext ctx = new GenericApplicationContext(factory);, +		ctx.registerBeanDefinition("config1", new RootBeanDefinition(AutowiredConstructorConfig.class));, +		ctx.registerBeanDefinition("config2", new RootBeanDefinition(ColorConfig.class));, +		ctx.refresh(); // should throw, +	}, +	@Configuration, +	static class AutowiredConstructorConfig {, +		Colour colour;, +, +		@Autowired, +		AutowiredConstructorConfig(Colour colour) {, +			this.colour = colour;, +		}, +	}, +, +	@Test, +	public void testValueInjection() {, +		@Bean, +		public TestBean testBean() {, +++ b/org.springframework.context/src/test/java/org/springframework/context/annotation/configuration/annotation-config.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<beans xmlns="http://www.springframework.org/schema/beans", +	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd, +		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd", +	xmlns:context="http://www.springframework.org/schema/context">]