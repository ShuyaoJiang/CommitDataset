[+++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/ext/Bean.java, +         validatorTypes={BeanValidator.class, IllegalBeanOverrideValidator.class}), +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/ext/Bean.java, +         validatorTypes={BeanValidator.class, IllegalBeanOverrideValidator.class}), +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/ext/Bean.java, +         validatorTypes={BeanValidator.class, IllegalBeanOverrideValidator.class}), +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/internal/factory/support/ConfigurationClassBeanDefinitionReader.java, +/*, + * Copyright 2002-2008 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.config.java.internal.factory.support;, +, +import java.util.ArrayList;, +import java.util.Map;, +, +import org.springframework.beans.factory.BeanDefinitionStoreException;, +import org.springframework.beans.factory.support.BeanDefinitionReader;, +import org.springframework.beans.factory.support.DefaultListableBeanFactory;, +import org.springframework.config.java.Configuration;, +import org.springframework.config.java.ConfigurationModel;, +import org.springframework.config.java.MalformedJavaConfigurationException;, +import org.springframework.config.java.UsageError;, +import org.springframework.config.java.internal.parsing.ConfigurationParser;, +import org.springframework.core.io.ClassPathResource;, +, +, +/**, + * Uses ASM to parse {@link Configuration @Configuration} classes. Fashioned after the, + * {@link BeanDefinitionReader} hierarchy, but does not extend or implement any of its, + * types because differences were significant enough to merit the departure., + *, + * @see     AsmConfigurationParser, + * , + * @author  Chris Beams, + */, +public class ConfigurationClassBeanDefinitionReader {, +, +    private final ConfigurationModelBeanDefinitionReader modelBeanDefinitionReader;, +, +    /**, +     * Creates a new {@link ConfigurationClassBeanDefinitionReader}., +     * , +     * @param beanFactory {@link DefaultListableBeanFactory} into which new bean definitions will be, +     *            registered as they are read from Configuration classes., +     */, +    public ConfigurationClassBeanDefinitionReader(DefaultListableBeanFactory beanFactory) {, +        this.modelBeanDefinitionReader = new ConfigurationModelBeanDefinitionReader(beanFactory);, +    }, +, +    /**, +     * Parses each {@link Configuration} class specified by <var>configClassResources</var> and registers, +     * individual bean definitions from those Configuration classes into the BeanDefinitionRegistry, +     * supplied during construction., +     */, +    public int loadBeanDefinitions(ConfigurationModel model, Map<String, ClassPathResource> configClassResources) throws BeanDefinitionStoreException {, +        ConfigurationParser parser = new ConfigurationParser(model);, +        , +        for (String id : configClassResources.keySet()), +            parser.parse(configClassResources.get(id), id);, +, +        ArrayList<UsageError> errors = new ArrayList<UsageError>();, +        model.validate(errors);, +        if (errors.size() > 0), +            throw new MalformedJavaConfigurationException(errors.toArray(new UsageError[] { }));, +, +        return modelBeanDefinitionReader.loadBeanDefinitions(model);, +    }, +, +}, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/ext/Bean.java, +         validatorTypes={BeanValidator.class, IllegalBeanOverrideValidator.class}), +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/internal/factory/support/ConfigurationClassBeanDefinitionReader.java, +/*, + * Copyright 2002-2008 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and]