[+++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java, + * Base class for transactional aspects, such as the {@link TransactionInterceptor}, + * or an AspectJ aspect., + * <p>This enables the underlying Spring transaction infrastructure to be used easily, + * to implement an aspect for any aspect system., + * <p>Subclasses are responsible for calling methods in this class in the correct order., + * <p>If no transaction name has been specified in the <code>TransactionAttribute</code>,, + * the exposed name will be the <code>fully-qualified class name + "." + method name</code>, + * <p>Uses the <b>Strategy</b> design pattern. A <code>PlatformTransactionManager</code>, + * implementation will perform the actual transaction management, and a, + * <code>TransactionAttributeSource</code> is used for determining transaction definitions., + * <p>A transaction aspect is serializable if its <code>PlatformTransactionManager</code>, + * and <code>TransactionAttributeSource</code> are serializable., +		if (this.transactionManager != null || this.beanFactory == null) {]