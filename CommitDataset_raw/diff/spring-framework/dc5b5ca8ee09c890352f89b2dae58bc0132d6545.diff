[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java, +import java.net.InetSocketAddress;, +import java.security.Principal;, +			else {, +				if (session.getPrincipal() != null) {, +					if (!session.getPrincipal().equals(request.getPrincipal())) {, +						logger.debug("The user for the session does not match the user for the request.");, +						response.setStatusCode(HttpStatus.NOT_FOUND);, +						return;, +					}, +				}, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java, +import java.net.InetSocketAddress;, +import java.security.Principal;, +			else {, +				if (session.getPrincipal() != null) {, +					if (!session.getPrincipal().equals(request.getPrincipal())) {, +						logger.debug("The user for the session does not match the user for the request.");, +						response.setStatusCode(HttpStatus.NOT_FOUND);, +						return;, +					}, +				}, +			}, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/sockjs/transport/handler/DefaultSockJsServiceTests.java, +import org.springframework.web.socket.handler.TestPrincipal;, +	public void handleTransportRequestXhrSendWithDifferentUser() throws Exception {, +		String sockJsPath = sessionUrlPrefix + "xhr";, +		setRequest("POST", sockJsPrefix + sockJsPath);, +		this.service.handleRequest(this.request, this.response, sockJsPath, this.wsHandler);, +, +		assertEquals(200, this.servletResponse.getStatus()); // session created, +		verify(this.xhrHandler).handleRequest(this.request, this.response, this.wsHandler, this.session);, +, +		this.session.setPrincipal(new TestPrincipal("little red riding hood"));, +		this.servletRequest.setUserPrincipal(new TestPrincipal("wolf"));, +, +		resetResponse();, +		reset(this.xhrSendHandler);, +		sockJsPath = sessionUrlPrefix + "xhr_send";, +		setRequest("POST", sockJsPrefix + sockJsPath);, +		this.service.handleRequest(this.request, this.response, sockJsPath, this.wsHandler);, +, +		assertEquals(404, this.servletResponse.getStatus());, +		verifyNoMoreInteractions(this.xhrSendHandler);, +	}, +, +	@Test]