[+++ b/spring-webflux/src/main/kotlin/org/springframework/web/reactive/function/client/ClientResponseExtensions.kt, +import kotlinx.coroutines.reactive.awaitFirstOrNull, + * Non-nullable Coroutines variant of [ClientResponse.bodyToMono]., + * Nullable coroutines variant of [ClientResponse.bodyToMono]., + *, + * @author Sebastien Deleuze, + * @since 5.2, + */, +suspend inline fun <reified T : Any> ClientResponse.awaitBodyOrNull(): T? =, +		bodyToMono<T>().awaitFirstOrNull(), +, +/**, +++ b/spring-webflux/src/main/kotlin/org/springframework/web/reactive/function/client/ClientResponseExtensions.kt, +import kotlinx.coroutines.reactive.awaitFirstOrNull, + * Non-nullable Coroutines variant of [ClientResponse.bodyToMono]., + * Nullable coroutines variant of [ClientResponse.bodyToMono]., + *, + * @author Sebastien Deleuze, + * @since 5.2, + */, +suspend inline fun <reified T : Any> ClientResponse.awaitBodyOrNull(): T? =, +		bodyToMono<T>().awaitFirstOrNull(), +, +/**, +++ b/spring-webflux/src/main/kotlin/org/springframework/web/reactive/function/client/WebClientExtensions.kt, +suspend fun WebClient.RequestHeadersSpec<out WebClient.RequestHeadersSpec<*>>.awaitExchange(): ClientResponse =, +++ b/spring-webflux/src/main/kotlin/org/springframework/web/reactive/function/client/ClientResponseExtensions.kt, +import kotlinx.coroutines.reactive.awaitFirstOrNull, + * Non-nullable Coroutines variant of [ClientResponse.bodyToMono]., + * Nullable coroutines variant of [ClientResponse.bodyToMono]., + *, + * @author Sebastien Deleuze, + * @since 5.2, + */, +suspend inline fun <reified T : Any> ClientResponse.awaitBodyOrNull(): T? =, +		bodyToMono<T>().awaitFirstOrNull(), +, +/**, +++ b/spring-webflux/src/main/kotlin/org/springframework/web/reactive/function/client/WebClientExtensions.kt, +suspend fun WebClient.RequestHeadersSpec<out WebClient.RequestHeadersSpec<*>>.awaitExchange(): ClientResponse =, +++ b/spring-webflux/src/main/kotlin/org/springframework/web/reactive/function/server/ServerRequestExtensions.kt, + * Non-nullable Coroutines variant of [ServerRequest.bodyToMono]., +suspend inline fun <reified T : Any> ServerRequest.awaitBody(): T =, +		bodyToMono<T>().awaitSingle(), +, +/**, + * Nullable Coroutines variant of [ServerRequest.bodyToMono]., + *, + * @author Sebastien Deleuze, + * @since 5.2, + */, +suspend inline fun <reified T : Any> ServerRequest.awaitBodyOrNull(): T? =, +suspend fun ServerRequest.awaitPrincipal(): Principal? =, +		principal().awaitFirstOrNull(), +++ b/spring-webflux/src/main/kotlin/org/springframework/web/reactive/function/client/ClientResponseExtensions.kt, +import kotlinx.coroutines.reactive.awaitFirstOrNull, + * Non-nullable Coroutines variant of [ClientResponse.bodyToMono]., + * Nullable coroutines variant of [ClientResponse.bodyToMono]., + *, + * @author Sebastien Deleuze, + * @since 5.2, + */, +suspend inline fun <reified T : Any> ClientResponse.awaitBodyOrNull(): T? =, +		bodyToMono<T>().awaitFirstOrNull(), +, +/**, +++ b/spring-webflux/src/main/kotlin/org/springframework/web/reactive/function/client/WebClientExtensions.kt, +suspend fun WebClient.RequestHeadersSpec<out WebClient.RequestHeadersSpec<*>>.awaitExchange(): ClientResponse =, +++ b/spring-webflux/src/main/kotlin/org/springframework/web/reactive/function/server/ServerRequestExtensions.kt, + * Non-nullable Coroutines variant of [ServerRequest.bodyToMono]., +suspend inline fun <reified T : Any> ServerRequest.awaitBody(): T =, +		bodyToMono<T>().awaitSingle(), +, +/**, + * Nullable Coroutines variant of [ServerRequest.bodyToMono]., + *, + * @author Sebastien Deleuze, + * @since 5.2, + */, +suspend inline fun <reified T : Any> ServerRequest.awaitBodyOrNull(): T? =, +suspend fun ServerRequest.awaitPrincipal(): Principal? =, +		principal().awaitFirstOrNull(), +++ b/spring-webflux/src/test/kotlin/org/springframework/web/reactive/function/client/ClientResponseExtensionsTests.kt, +import org.junit.Assert.assertNull, +	fun awaitBodyOrNull() {, +		val response = mockk<ClientResponse>(), +		every { response.bodyToMono<String>() } returns Mono.empty(), +		runBlocking {, +			assertNull(response.awaitBodyOrNull<String>()), +		}, +	}, +, +	@Test, +++ b/spring-webflux/src/main/kotlin/org/springframework/web/reactive/function/client/ClientResponseExtensions.kt, +import kotlinx.coroutines.reactive.awaitFirstOrNull, + * Non-nullable Coroutines variant of [ClientResponse.bodyToMono]., + * Nullable coroutines variant of [ClientResponse.bodyToMono]., + *, + * @author Sebastien Deleuze, + * @since 5.2]