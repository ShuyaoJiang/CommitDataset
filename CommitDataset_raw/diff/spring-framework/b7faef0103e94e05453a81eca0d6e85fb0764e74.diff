[+++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/JavaMailSenderImpl.java, + * Copyright 2002-2014 the original author or authors., +		catch (Exception ex) {, +		Transport transport = null;, +, +			for (int i = 0; i < mimeMessages.length; i++) {, +, +				// Check transport connection first..., +				if (transport == null || !transport.isConnected()) {, +					if (transport != null) {, +						try {, +							transport.close();, +						}, +						catch (Exception ex) {, +							// Ignore - we're reconnecting anyway, +						}, +						transport = null;, +					}, +					try {, +						transport = connectTransport();, +					catch (Exception ex) {, +						// Effectively, all remaining messages failed..., +						for (int j = i; j < mimeMessages.length; j++) {, +							Object original = (originalMessages != null ? originalMessages[j] : mimeMessages[j]);, +				}, +				// Send message via current transport..., +				catch (Exception ex) {, +				if (transport != null) {, +			}, +			catch (Exception ex) {, +	 * Obtain and connect a Transport from the underlying JavaMail Session,, +	 * passing in the specified host, port, username, and password., +	 * @return the connected Transport object, +	 * @throws MessagingException if the connect attempt failed, +	 * @since 4.1.2, +	 * @see #getTransport, +	 * @see #getHost(), +	 * @see #getPort(), +	 * @see #getUsername(), +	 * @see #getPassword(), +	 */, +	protected Transport connectTransport() throws MessagingException {, +		String username = getUsername();, +		String password = getPassword();, +		if ("".equals(username)) {  // probably from a placeholder, +			username = null;, +			if ("".equals(password)) {  // in conjunction with "" username, this means no password to use, +				password = null;, +			}, +		}, +, +		Transport transport = getTransport(getSession());, +		transport.connect(getHost(), getPort(), username, password);, +		return transport;, +	}, +, +	/**, +	 * @see #getSession(), +++ b/spring-context-support/src/main/java/org/springframework/mail/javamail/JavaMailSenderImpl.java, + * Copyright 2002-2014 the original author or authors., +		catch (Exception ex) {, +		Transport transport = null;, +, +			for (int i = 0; i < mimeMessages.length; i++) {, +, +				// Check transport connection first..., +				if (transport == null || !transport.isConnected()) {, +					if (transport != null) {, +						try {, +							transport.close();, +						}, +						catch (Exception ex) {, +							// Ignore - we're reconnecting anyway, +						}, +						transport = null;, +					}, +					try {, +						transport = connectTransport();, +					catch (Exception ex) {, +						// Effectively, all remaining messages failed..., +						for (int j = i; j < mimeMessages.length; j++) {, +							Object original = (originalMessages != null ? originalMessages[j] : mimeMessages[j]);, +				}, +				// Send message via current transport..., +				catch (Exception ex) {, +				if (transport != null) {, +			}, +			catch (Exception ex) {, +	 * Obtain and connect a Transport from the underlying JavaMail Session,, +	 * passing in the specified host, port, username, and password., +	 * @return the connected Transport object, +	 * @throws MessagingException if the connect attempt failed, +	 * @since 4.1.2, +	 * @see #getTransport, +	 * @see #getHost(), +	 * @see #getPort(), +	 * @see #getUsername(), +	 * @see #getPassword(), +	 */, +	protected Transport connectTransport() throws MessagingException {]