[+++ b/org.springframework.context/src/test/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, + * Copyright 2002-2009 the original author or authors., +			// The activate() call will cause an assignment to the activated variable., +	private final Hashtable<String,Object> boundObjects = new Hashtable<String,Object>();, +	 * <p>Call <code>activate()</code> again in order to expose this context builder's own, +	public InitialContextFactory createInitialContextFactory(Hashtable<?,?> environment) {, +				Class<?> icfClass = null;, +					icfClass = (Class<?>) icf;, +			@SuppressWarnings("unchecked"), +			public Context getInitialContext(Hashtable<?,?> environment) {, +				return new SimpleNamingContext("", boundObjects, (Hashtable<String, Object>) environment);, +++ b/org.springframework.context/src/test/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, + * Copyright 2002-2009 the original author or authors., +			// The activate() call will cause an assignment to the activated variable., +	private final Hashtable<String,Object> boundObjects = new Hashtable<String,Object>();, +	 * <p>Call <code>activate()</code> again in order to expose this context builder's own, +	public InitialContextFactory createInitialContextFactory(Hashtable<?,?> environment) {, +				Class<?> icfClass = null;, +					icfClass = (Class<?>) icf;, +			@SuppressWarnings("unchecked"), +			public Context getInitialContext(Hashtable<?,?> environment) {, +				return new SimpleNamingContext("", boundObjects, (Hashtable<String, Object>) environment);, +++ b/org.springframework.orm/src/test/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, + * Copyright 2002-2009 the original author or authors., +			// The activate() call will cause an assignment to the activated variable., +	private final Hashtable<String,Object> boundObjects = new Hashtable<String,Object>();, +	 * <p>Call <code>activate()</code> again in order to expose this context builder's own, +	public InitialContextFactory createInitialContextFactory(Hashtable<?,?> environment) {, +				Class<?> icfClass = null;, +					icfClass = (Class<?>) icf;, +			@SuppressWarnings("unchecked"), +			public Context getInitialContext(Hashtable<?,?> environment) {, +				return new SimpleNamingContext("", boundObjects, (Hashtable<String, Object>) environment);, +++ b/org.springframework.context/src/test/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, + * Copyright 2002-2009 the original author or authors., +			// The activate() call will cause an assignment to the activated variable., +	private final Hashtable<String,Object> boundObjects = new Hashtable<String,Object>();, +	 * <p>Call <code>activate()</code> again in order to expose this context builder's own, +	public InitialContextFactory createInitialContextFactory(Hashtable<?,?> environment) {, +				Class<?> icfClass = null;, +					icfClass = (Class<?>) icf;, +			@SuppressWarnings("unchecked"), +			public Context getInitialContext(Hashtable<?,?> environment) {, +				return new SimpleNamingContext("", boundObjects, (Hashtable<String, Object>) environment);, +++ b/org.springframework.orm/src/test/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, + * Copyright 2002-2009 the original author or authors., +			// The activate() call will cause an assignment to the activated variable., +	private final Hashtable<String,Object> boundObjects = new Hashtable<String,Object>();, +	 * <p>Call <code>activate()</code> again in order to expose this context builder's own, +	public InitialContextFactory createInitialContextFactory(Hashtable<?,?> environment) {, +				Class<?> icfClass = null;, +					icfClass = (Class<?>) icf;, +			@SuppressWarnings("unchecked"), +			public Context getInitialContext(Hashtable<?,?> environment) {, +				return new SimpleNamingContext("", boundObjects, (Hashtable<String, Object>) environment);, +++ b/org.springframework.test/src/main/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, + * Copyright 2002-2009 the original author or authors., +			// The activate() call will cause an assignment to the activated variable., +	private final Hashtable<String,Object> boundObjects = new Hashtable<String,Object>();, +	 * <p>Call <code>activate()</code> again in order to expose this context builder's own, +	public InitialContextFactory createInitialContextFactory(Hashtable<?,?> environment) {, +				Class<?> icfClass = null;, +					icfClass = (Class<?>) icf;, +			@SuppressWarnings("unchecked"), +			public Context getInitialContext(Hashtable<?,?> environment) {, +				return new SimpleNamingContext("", boundObjects, (Hashtable<String, Object>) environment);, +++ b/org.springframework.context/src/test/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, + * Copyright 2002-2009 the original author or authors., +			// The activate() call will cause an assignment to the activated variable., +	private final Hashtable<String,Object> boundObjects = new Hashtable<String,Object>();, +	 * <p>Call <code>activate()</code> again in order to expose this context builder's own, +	public InitialContextFactory createInitialContextFactory(Hashtable<?,?> environment) {, +				Class<?> icfClass = null;, +					icfClass = (Class<?>) icf;, +			@SuppressWarnings("unchecked"), +			public Context getInitialContext(Hashtable<?,?> environment) {, +				return new SimpleNamingContext("", boundObjects, (Hashtable<String, Object>) environment);, +++ b/org.springframework.orm/src/test/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, + * Copyright 2002-2009 the original author or authors., +			// The activate() call will cause an assignment to the activated variable., +	private final Hashtable<String,Object> boundObjects = new Hashtable<String,Object>();, +	 * <p>Call <code>activate()</code> again in order to expose this context builder's own, +	public InitialContextFactory createInitialContextFactory(Hashtable<?,?> environment) {, +				Class<?> icfClass = null;, +					icfClass = (Class<?>) icf;, +			@SuppressWarnings("unchecked"), +			public Context getInitialContext(Hashtable<?,?> environment) {, +				return new SimpleNamingContext("", boundObjects, (Hashtable<String, Object>) environment);, +++ b/org.springframework.test/src/main/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java, + * Copyright 2002-2009 the original author or authors., +			// The activate() call will cause an assignment to the activated variable., +	private final Hashtable<String,Object> boundObjects = new Hashtable<String,Object>();, +	 * <p>Call <code>activate()</code> again in order to expose this context builder's own, +	public InitialContextFactory createInitialContextFactory(Hashtable<?,?> environment) {, +				Class<?> icfClass = null;, +					icfClass = (Class<?>) icf;, +			@SuppressWarnings("unchecked"), +			public Context getInitialContext(Hashtable<?,?> environment) {, +				return new SimpleNamingContext("", boundObjects, (Hashtable<String, Object>) environment);, +++ b/org.springframework.transaction/src/test/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java]