[+++ b/org.springframework.context/src/main/java/org/springframework/jndi/JndiPropertySource.java, +++ b/org.springframework.context/src/main/java/org/springframework/jndi/JndiPropertySource.java, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/support/StandardServletEnvironment.java, +	 * Name of property used to determine if a {@link JndiPropertySource}, +	 * should be registered by default: {@value}, +	 */, +	public static final String JNDI_PROPERTY_SOURCE_ENABLED_FLAG = "jndiPropertySourceEnabled";, +, +, +	/**, +		if (this.getProperty(JNDI_PROPERTY_SOURCE_ENABLED_FLAG, boolean.class, false)) {, +++ b/org.springframework.context/src/main/java/org/springframework/jndi/JndiPropertySource.java, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/support/StandardServletEnvironment.java, +	 * Name of property used to determine if a {@link JndiPropertySource}, +	 * should be registered by default: {@value}, +	 */, +	public static final String JNDI_PROPERTY_SOURCE_ENABLED_FLAG = "jndiPropertySourceEnabled";, +, +, +	/**, +		if (this.getProperty(JNDI_PROPERTY_SOURCE_ENABLED_FLAG, boolean.class, false)) {, +++ b/org.springframework.web/src/test/java/org/springframework/web/context/support/StandardServletEnvironmentTests.java, +import static org.springframework.web.context.support.StandardServletEnvironment.JNDI_PROPERTY_SOURCE_ENABLED_FLAG;, +		System.setProperty(JNDI_PROPERTY_SOURCE_ENABLED_FLAG, "true");, +		System.clearProperty(JNDI_PROPERTY_SOURCE_ENABLED_FLAG);, +		System.setProperty(JNDI_PROPERTY_SOURCE_ENABLED_FLAG, "false");, +		System.clearProperty(JNDI_PROPERTY_SOURCE_ENABLED_FLAG);]