[+++ b/.gitignore, +derby.log, +# IDEA artifacts and output dirs, +test-output, +atlassian-ide-plugin.xml, +++ b/.gitignore, +derby.log, +# IDEA artifacts and output dirs, +test-output, +atlassian-ide-plugin.xml, +++ b/import-into-idea.md, +The following has been tested against Intellij IDEA 12.0, +1. Generate IDEA metadata with `./gradlew :spring-oxm:compileTestJava cleanIdea idea`, +1. `spring-aspects` does not compile out of the box due to references to aspect types unknown to IDEA., +See http://youtrack.jetbrains.com/issue/IDEA-64446 for details. In the meantime, you may want to, +exclude `spring-aspects` from the overall project to avoid compilation errors., +2. While all JUnit tests pass from the command line with Gradle, many will fail when run from IDEA., +Resolving this is a work in progress. If attempting to run all JUnit tests from within IDEA, you will, +likely need to set the following VM options to avoid out of memory errors:, +    -XX:MaxPermSize=2048m -Xmx2048m -XX:MaxHeapSize=2048m, +In any case, please do not check in your own generated .iml, .ipr, or .iws files., +You'll notice these files are already intentionally in .gitignore. The same policy goes for eclipse metadata., +A. Keep an eye on http://youtrack.jetbrains.com/issue/IDEA-53476, +++ b/.gitignore, +derby.log, +# IDEA artifacts and output dirs, +test-output, +atlassian-ide-plugin.xml, +++ b/import-into-idea.md, +The following has been tested against Intellij IDEA 12.0, +1. Generate IDEA metadata with `./gradlew :spring-oxm:compileTestJava cleanIdea idea`, +1. `spring-aspects` does not compile out of the box due to references to aspect types unknown to IDEA., +See http://youtrack.jetbrains.com/issue/IDEA-64446 for details. In the meantime, you may want to, +exclude `spring-aspects` from the overall project to avoid compilation errors., +2. While all JUnit tests pass from the command line with Gradle, many will fail when run from IDEA., +Resolving this is a work in progress. If attempting to run all JUnit tests from within IDEA, you will, +likely need to set the following VM options to avoid out of memory errors:, +    -XX:MaxPermSize=2048m -Xmx2048m -XX:MaxHeapSize=2048m, +In any case, please do not check in your own generated .iml, .ipr, or .iws files., +You'll notice these files are already intentionally in .gitignore. The same policy goes for eclipse metadata., +A. Keep an eye on http://youtrack.jetbrains.com/issue/IDEA-53476, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/access/SingletonBeanFactoryLocatorTests.java, + * Copyright 2002-2012 the original author or authors., +public class SingletonBeanFactoryLocatorTests {, +++ b/.gitignore, +derby.log, +# IDEA artifacts and output dirs, +test-output, +atlassian-ide-plugin.xml, +++ b/import-into-idea.md, +The following has been tested against Intellij IDEA 12.0, +1. Generate IDEA metadata with `./gradlew :spring-oxm:compileTestJava cleanIdea idea`, +1. `spring-aspects` does not compile out of the box due to references to aspect types unknown to IDEA., +See http://youtrack.jetbrains.com/issue/IDEA-64446 for details. In the meantime, you may want to, +exclude `spring-aspects` from the overall project to avoid compilation errors., +2. While all JUnit tests pass from the command line with Gradle, many will fail when run from IDEA., +Resolving this is a work in progress. If attempting to run all JUnit tests from within IDEA, you will, +likely need to set the following VM options to avoid out of memory errors:, +    -XX:MaxPermSize=2048m -Xmx2048m -XX:MaxHeapSize=2048m, +In any case, please do not check in your own generated .iml, .ipr, or .iws files., +You'll notice these files are already intentionally in .gitignore. The same policy goes for eclipse metadata., +A. Keep an eye on http://youtrack.jetbrains.com/issue/IDEA-53476, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/access/SingletonBeanFactoryLocatorTests.java, + * Copyright 2002-2012 the original author or authors., +public class SingletonBeanFactoryLocatorTests {, +++ b/spring-context/src/test/java/org/springframework/scripting/groovy/Messenger.groovy, +class GroovyMessenger2 extends ConcreteMessenger {]