[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +							if (value != null || this.required) {, +						if (arguments[i] == null && !this.required) {, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +							if (value != null || this.required) {, +						if (arguments[i] == null && !this.required) {, +++ b/org.springframework.context/src/test/java/org/springframework/context/annotation/configuration/AutowiredConfigurationTests.java, + * Copyright 2002-2010 the original author or authors., +import test.beans.Colour;, +import test.beans.TestBean;, +, +import org.springframework.context.annotation.Scope;, + * @author Juergen Hoeller, +		System.clearProperty("myProp");, +, +		assertNull(testBean.getName());, +, +		testBean = factory.getBean("testBean2", TestBean.class);, +		assertNull(testBean.getName());, +, +		System.setProperty("myProp", "foo");, +, +		testBean = factory.getBean("testBean", TestBean.class);, +, +		testBean = factory.getBean("testBean2", TestBean.class);, +		assertThat(testBean.getName(), equalTo("foo"));, +, +		System.clearProperty("myProp");, +, +		testBean = factory.getBean("testBean", TestBean.class);, +		assertNull(testBean.getName());, +, +		testBean = factory.getBean("testBean2", TestBean.class);, +		assertNull(testBean.getName());, +		@Value("#{systemProperties[myProp]}"), +		private String name;, +		private String name2;, +, +		@Value("#{systemProperties[myProp]}"), +		public void setName2(String name) {, +			this.name2 = name;, +		}, +, +		@Bean @Scope("prototype"), +, +		@Bean @Scope("prototype"), +		public TestBean testBean2() {, +			return new TestBean(name2);, +		}]