[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +	 * @param strategies the strategies to use, +	T extract(ServerHttpRequest request, StrategiesSupplier strategies);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +	 * @param strategies the strategies to use, +	T extract(ServerHttpRequest request, StrategiesSupplier strategies);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java, +		return (request, strategies) -> readWithMessageReaders(request, strategies,, +		return (request, strategies) -> readWithMessageReaders(request, strategies,, +			StrategiesSupplier strategies,, +		Supplier<Stream<HttpMessageReader<?>>> messageReaders = strategies.messageReaders();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +	 * @param strategies the strategies to use, +	T extract(ServerHttpRequest request, StrategiesSupplier strategies);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java, +		return (request, strategies) -> readWithMessageReaders(request, strategies,, +		return (request, strategies) -> readWithMessageReaders(request, strategies,, +			StrategiesSupplier strategies,, +		Supplier<Stream<HttpMessageReader<?>>> messageReaders = strategies.messageReaders();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInserter.java, +	 * @param strategies the strategies to use, +	Mono<Void> insert(ServerHttpResponse response, StrategiesSupplier strategies);, +	static <T> BodyInserter<T> of(BiFunction<ServerHttpResponse, StrategiesSupplier, Mono<Void>> writer,, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +	 * @param strategies the strategies to use, +	T extract(ServerHttpRequest request, StrategiesSupplier strategies);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java, +		return (request, strategies) -> readWithMessageReaders(request, strategies,, +		return (request, strategies) -> readWithMessageReaders(request, strategies,, +			StrategiesSupplier strategies,, +		Supplier<Stream<HttpMessageReader<?>>> messageReaders = strategies.messageReaders();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInserter.java, +	 * @param strategies the strategies to use, +	Mono<Void> insert(ServerHttpResponse response, StrategiesSupplier strategies);, +	static <T> BodyInserter<T> of(BiFunction<ServerHttpResponse, StrategiesSupplier, Mono<Void>> writer,, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInserters.java, +				(response, strategies) -> writeWithMessageWriters(response, strategies,, +				(response, strategies) -> writeWithMessageWriters(response, strategies,, +				(response, strategies) -> {, +				(response, strategies) -> {, +				(response, strategies) -> {, +			StrategiesSupplier strategies,, +		return strategies.messageWriters().get(), +		private final BiFunction<ServerHttpResponse, StrategiesSupplier, Mono<Void>> writer;, +				BiFunction<ServerHttpResponse, StrategiesSupplier, Mono<Void>> writer,, +		public Mono<Void> insert(ServerHttpResponse response, StrategiesSupplier strategies) {, +			return this.writer.apply(response, strategies);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +	 * @param strategies the strategies to use, +	T extract(ServerHttpRequest request, StrategiesSupplier strategies);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java, +		return (request, strategies) -> readWithMessageReaders(request, strategies,, +		return (request, strategies) -> readWithMessageReaders(request, strategies,, +			StrategiesSupplier strategies,, +		Supplier<Stream<HttpMessageReader<?>>> messageReaders = strategies.messageReaders();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInserter.java, +	 * @param strategies the strategies to use, +	Mono<Void> insert(ServerHttpResponse response, StrategiesSupplier strategies);, +	static <T> BodyInserter<T> of(BiFunction<ServerHttpResponse, StrategiesSupplier, Mono<Void>> writer,, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInserters.java, +				(response, strategies) -> writeWithMessageWriters(response, strategies,, +				(response, strategies) -> writeWithMessageWriters(response, strategies,, +				(response, strategies) -> {, +				(response, strategies) -> {, +				(response, strategies) -> {, +			StrategiesSupplier strategies,, +		return strategies.messageWriters().get(), +		private final BiFunction<ServerHttpResponse, StrategiesSupplier, Mono<Void>> writer;, +				BiFunction<ServerHttpResponse, StrategiesSupplier, Mono<Void>> writer,, +		public Mono<Void> insert(ServerHttpResponse response, StrategiesSupplier strategies) {, +			return this.writer.apply(response, strategies);, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +	 * @param strategies the strategies to use, +	T extract(ServerHttpRequest request, StrategiesSupplier strategies);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java, +		return (request, strategies) -> readWithMessageReaders(request, strategies,, +		return (request, strategies) -> readWithMessageReaders(request, strategies,, +			StrategiesSupplier strategies,, +		Supplier<Stream<HttpMessageReader<?>>> messageReaders = strategies.messageReaders();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInserter.java, +	 * @param strategies the strategies to use, +	Mono<Void> insert(ServerHttpResponse response, StrategiesSupplier strategies);, +	static <T> BodyInserter<T> of(BiFunction<ServerHttpResponse, StrategiesSupplier, Mono<Void>> writer,, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInserters.java, +				(response, strategies) -> writeWithMessageWriters(response, strategies,, +				(response, strategies) -> writeWithMessageWriters(response, strategies,, +				(response, strategies) -> {, +				(response, strategies) -> {, +				(response, strategies) -> {, +			StrategiesSupplier strategies,, +		return strategies.messageWriters().get(), +		private final BiFunction<ServerHttpResponse, StrategiesSupplier, Mono<Void>> writer;, +				BiFunction<ServerHttpResponse, StrategiesSupplier, Mono<Void>> writer,, +		public Mono<Void> insert(ServerHttpResponse response, StrategiesSupplier strategies) {, +			return this.writer.apply(response, strategies);, +++ /dev/null, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +	 * @param strategies the strategies to use]