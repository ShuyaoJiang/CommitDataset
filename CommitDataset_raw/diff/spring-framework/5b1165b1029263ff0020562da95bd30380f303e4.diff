[+++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +		return this.removeSemicolonContent ?, +				removeSemicolonContentInternal(requestUri) : removeJsessionid(requestUri);, +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +		return this.removeSemicolonContent ?, +				removeSemicolonContentInternal(requestUri) : removeJsessionid(requestUri);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +		return this.removeSemicolonContent ?, +				removeSemicolonContentInternal(requestUri) : removeJsessionid(requestUri);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +		return this.removeSemicolonContent ?, +				removeSemicolonContentInternal(requestUri) : removeJsessionid(requestUri);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java, +	 * <p>The default value is {@code false}., +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +		return this.removeSemicolonContent ?, +				removeSemicolonContentInternal(requestUri) : removeJsessionid(requestUri);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java, +	 * <p>The default value is {@code false}., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java, +import org.springframework.web.util.UrlPathHelper;, +	public AbstractHandlerMethodMapping() {, +		UrlPathHelper pathHelper = new UrlPathHelper();, +		pathHelper.setRemoveSemicolonContent(false);, +		setUrlPathHelper(pathHelper);, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +		return this.removeSemicolonContent ?, +				removeSemicolonContentInternal(requestUri) : removeJsessionid(requestUri);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java, +	 * <p>The default value is {@code false}., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java, +import org.springframework.web.util.UrlPathHelper;, +	public AbstractHandlerMethodMapping() {, +		UrlPathHelper pathHelper = new UrlPathHelper();, +		pathHelper.setRemoveSemicolonContent(false);, +		setUrlPathHelper(pathHelper);, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java, +	private static UrlPathHelper pathHelperNoSemicolonContent;, +, +	static {, +		pathHelperNoSemicolonContent = new UrlPathHelper();, +		pathHelperNoSemicolonContent.setRemoveSemicolonContent(true);, +	}, +, +	private final UrlPathHelper pathHelper;, +		this.pathHelper = urlPathHelper != null ? urlPathHelper : new UrlPathHelper();, +		return new PatternsRequestCondition(result, this.pathHelper, this.pathMatcher, this.useSuffixPatternMatch,, +, +		String lookupPath = this.pathHelper.getLookupPathForRequest(request);, +		String lookupPathNoSemicolonContent = (lookupPath.indexOf(';') != -1) ?, +				pathHelperNoSemicolonContent.getLookupPathForRequest(request) : null;, +, +			if (match == null && lookupPathNoSemicolonContent != null) {, +				match = getMatchingPattern(pattern, lookupPathNoSemicolonContent);, +			}, +			new PatternsRequestCondition(matches, this.pathHelper, this.pathMatcher, this.useSuffixPatternMatch,, +			if (!this.fileExtensions.isEmpty() && lookupPath.indexOf('.') != -1) {, +		String lookupPath = this.pathHelper.getLookupPathForRequest(request);, +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +		return this.removeSemicolonContent ?, +				removeSemicolonContentInternal(requestUri) : removeJsessionid(requestUri);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java, +	 * <p>The default value is {@code false}., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java, +import org.springframework.web.util.UrlPathHelper;, +	public AbstractHandlerMethodMapping() {, +		UrlPathHelper pathHelper = new UrlPathHelper();, +		pathHelper.setRemoveSemicolonContent(false);, +		setUrlPathHelper(pathHelper);, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java, +	private static UrlPathHelper pathHelperNoSemicolonContent;, +, +	static {, +		pathHelperNoSemicolonContent = new UrlPathHelper();, +		pathHelperNoSemicolonContent.setRemoveSemicolonContent(true);, +	}, +, +	private final UrlPathHelper pathHelper;, +		this.pathHelper = urlPathHelper != null ? urlPathHelper : new UrlPathHelper();, +		return new PatternsRequestCondition(result, this.pathHelper, this.pathMatcher, this.useSuffixPatternMatch,, +, +		String lookupPath = this.pathHelper.getLookupPathForRequest(request);, +		String lookupPathNoSemicolonContent = (lookupPath.indexOf(';') != -1) ?]