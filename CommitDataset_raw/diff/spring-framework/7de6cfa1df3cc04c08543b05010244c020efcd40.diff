[+++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/MockServerIntegrationTests.java, +						.map(session -> session.getAttributeOrDefault("foo", "none")), +							byte[] bytes = value.getBytes(UTF_8);, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/MockServerIntegrationTests.java, +						.map(session -> session.getAttributeOrDefault("foo", "none")), +							byte[] bytes = value.getBytes(UTF_8);, +++ b/spring-web/src/main/java/org/springframework/web/server/WebSession.java, +import org.springframework.lang.Nullable;, +import org.springframework.util.Assert;, +, +	 * Return the session attribute value if present., +	@SuppressWarnings("unchecked"), +	@Nullable, +	default <T> T getAttribute(String name) {, +		return (T) getAttributes().get(name);, +	}, +, +	/**, +	 * Return the session attribute value or if not present raise an, +	 * {@link IllegalArgumentException}., +	 * @param name the attribute name, +	 * @param <T> the attribute type, +	 * @return the attribute value, +	 */, +	@SuppressWarnings("unchecked"), +	default <T> T getRequiredAttribute(String name) {, +		T value = getAttribute(name);, +		Assert.notNull(value, "Required attribute '" + name + "' is missing.");, +		return value;, +	}, +, +	/**, +	 * Return the session attribute value, or a default, fallback value., +	 * @param name the attribute name, +	 * @param defaultValue a default value to return instead, +	 * @param <T> the attribute type, +	 * @return the attribute value, +	 */, +	@SuppressWarnings("unchecked"), +	default <T> T getAttributeOrDefault(String name, T defaultValue) {, +		return (T) getAttributes().getOrDefault(name, defaultValue);, +	}, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/MockServerIntegrationTests.java, +						.map(session -> session.getAttributeOrDefault("foo", "none")), +							byte[] bytes = value.getBytes(UTF_8);, +++ b/spring-web/src/main/java/org/springframework/web/server/WebSession.java, +import org.springframework.lang.Nullable;, +import org.springframework.util.Assert;, +, +	 * Return the session attribute value if present., +	@SuppressWarnings("unchecked"), +	@Nullable, +	default <T> T getAttribute(String name) {, +		return (T) getAttributes().get(name);, +	}, +, +	/**, +	 * Return the session attribute value or if not present raise an, +	 * {@link IllegalArgumentException}., +	 * @param name the attribute name, +	 * @param <T> the attribute type, +	 * @return the attribute value, +	 */, +	@SuppressWarnings("unchecked"), +	default <T> T getRequiredAttribute(String name) {, +		T value = getAttribute(name);, +		Assert.notNull(value, "Required attribute '" + name + "' is missing.");, +		return value;, +	}, +, +	/**, +	 * Return the session attribute value, or a default, fallback value., +	 * @param name the attribute name, +	 * @param defaultValue a default value to return instead, +	 * @param <T> the attribute type, +	 * @return the attribute value, +	 */, +	@SuppressWarnings("unchecked"), +	default <T> T getAttributeOrDefault(String name, T defaultValue) {, +		return (T) getAttributes().getOrDefault(name, defaultValue);, +	}, +++ b/spring-web/src/main/java/org/springframework/web/server/session/DefaultWebSession.java, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/MockServerIntegrationTests.java, +						.map(session -> session.getAttributeOrDefault("foo", "none")), +							byte[] bytes = value.getBytes(UTF_8);, +++ b/spring-web/src/main/java/org/springframework/web/server/WebSession.java, +import org.springframework.lang.Nullable;, +import org.springframework.util.Assert;, +, +	 * Return the session attribute value if present., +	@SuppressWarnings("unchecked"), +	@Nullable, +	default <T> T getAttribute(String name) {, +		return (T) getAttributes().get(name);, +	}, +, +	/**, +	 * Return the session attribute value or if not present raise an, +	 * {@link IllegalArgumentException}., +	 * @param name the attribute name]