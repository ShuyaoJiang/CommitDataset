[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, +	/**, +	 * A heartbeat is setup once a CONNECTED frame is received which contains, +	 * the heartbeat settings we need. If we don't receive CONNECTED within, +	 * a minute, the connection is closed proactively., +	 */, +	private static final int MAX_TIME_TO_CONNECTED_FRAME = 60 * 1000;, +, +, +			this.tcpConnection.onReadInactivity(new Runnable() {, +				@Override, +				public void run() {, +					if (tcpConnection != null && !isStompConnected) {, +						handleTcpConnectionFailure("No CONNECTED frame received in " +, +								MAX_TIME_TO_CONNECTED_FRAME + " ms.", null);, +					}, +				}, +			}, MAX_TIME_TO_CONNECTED_FRAME);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, +	/**, +	 * A heartbeat is setup once a CONNECTED frame is received which contains, +	 * the heartbeat settings we need. If we don't receive CONNECTED within, +	 * a minute, the connection is closed proactively., +	 */, +	private static final int MAX_TIME_TO_CONNECTED_FRAME = 60 * 1000;, +, +, +			this.tcpConnection.onReadInactivity(new Runnable() {, +				@Override, +				public void run() {, +					if (tcpConnection != null && !isStompConnected) {, +						handleTcpConnectionFailure("No CONNECTED frame received in " +, +								MAX_TIME_TO_CONNECTED_FRAME + " ms.", null);, +					}, +				}, +			}, MAX_TIME_TO_CONNECTED_FRAME);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java, +		final Runnable cleanupTask;, +						cleanupTask.run();]