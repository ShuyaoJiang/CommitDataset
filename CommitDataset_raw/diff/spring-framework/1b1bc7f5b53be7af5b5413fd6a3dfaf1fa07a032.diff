[+++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/DataBufferEncoder.java, +		if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/DataBufferEncoder.java, +		if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/Hints.java, +	public static boolean isLoggingSuppressed(@Nullable Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/DataBufferEncoder.java, +		if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/Hints.java, +	public static boolean isLoggingSuppressed(@Nullable Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceEncoder.java, +		if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/DataBufferEncoder.java, +		if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/Hints.java, +	public static boolean isLoggingSuppressed(@Nullable Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceEncoder.java, +		if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceRegionEncoder.java, +		if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/DataBufferEncoder.java, +		if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/Hints.java, +	public static boolean isLoggingSuppressed(@Nullable Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceEncoder.java, +		if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceRegionEncoder.java, +		if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-web/src/main/java/org/springframework/http/codec/CodecConfigurer.java, +		 * Whether to log form data at DEBUG level, and headers at TRACE level., +		 * Both may contain sensitive information., +		 * <p>By default set to {@code false} so that request details are not shown., +		 * @param enable whether to enable or not, +		void enableLoggingRequestDetails(boolean enable);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +			if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/DataBufferEncoder.java, +		if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/Hints.java, +	public static boolean isLoggingSuppressed(@Nullable Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceEncoder.java, +		if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceRegionEncoder.java, +		if (logger.isDebugEnabled() && !Hints.isLoggingSuppressed(hints)) {, +++ b/spring-web/src/main/java/org/springframework/http/codec/CodecConfigurer.java, +		 * Whether to log form data at DEBUG level, and headers at TRACE level., +		 * Both may contain sensitive information., +		 * <p>By default set to {@code false} so that request details are not shown., +		 * @param enable whether to enable or not, +		void enableLoggingRequestDetails(boolean enable);, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageReader.java, +					if (logger.isDebugEnabled()) {, +						String details = isEnableLoggingRequestDetails() ?, +								formData.toString() : "form fields " + formData.keySet() + " (content masked)";]