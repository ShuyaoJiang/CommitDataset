[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAwareOrderComparator.java, + * Copyright 2002-2013 the original author or authors., +import java.util.Arrays;, +import java.util.Collections;, +import java.util.List;, +, +	public static final AnnotationAwareOrderComparator INSTANCE = new AnnotationAwareOrderComparator();, +, +	/**, +	 * Sort the given List with a default AnnotationAwareOrderComparator., +	 * <p>Optimized to skip sorting for lists with size 0 or 1,, +	 * in order to avoid unnecessary array extraction., +	 * @param list the List to sort, +	 * @see java.util.Collections#sort(java.util.List, java.util.Comparator), +	 */, +	public static void sort(List<?> list) {, +		if (list.size() > 1) {, +			Collections.sort(list, INSTANCE);, +		}, +	}, +, +	/**, +	 * Sort the given array with a default AnnotationAwareOrderComparator., +	 * <p>Optimized to skip sorting for lists with size 0 or 1,, +	 * in order to avoid unnecessary array extraction., +	 * @param array the array to sort, +	 * @see java.util.Arrays#sort(Object[], java.util.Comparator), +	 */, +	public static void sort(Object[] array) {, +		if (array.length > 1) {, +			Arrays.sort(array, INSTANCE);, +		}, +	}, +]