[+++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageConversionException.java, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageConversionException.java, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageNotReadableException.java, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageConversionException.java, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageNotReadableException.java, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.java, +import org.springframework.http.converter.HttpMessageConversionException;, +			throw new HttpMessageConversionException("Type definition error: " + ex.getMessage(), ex);, +		}, +		catch (JsonProcessingException ex) {, +			throw new HttpMessageNotReadableException("JSON parse error: " + ex.getMessage(), ex);, +			throw new HttpMessageNotReadableException("I/O error while reading: " + ex.getMessage(), ex);, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageConversionException.java, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageNotReadableException.java, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.java, +import org.springframework.http.converter.HttpMessageConversionException;, +			throw new HttpMessageConversionException("Type definition error: " + ex.getMessage(), ex);, +		}, +		catch (JsonProcessingException ex) {, +			throw new HttpMessageNotReadableException("JSON parse error: " + ex.getMessage(), ex);, +			throw new HttpMessageNotReadableException("I/O error while reading: " + ex.getMessage(), ex);, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverterTests.java, +import org.springframework.http.converter.HttpMessageConversionException;, +import static org.hamcrest.CoreMatchers.containsString;, +import static org.hamcrest.CoreMatchers.endsWith;, +import static org.hamcrest.CoreMatchers.not;, +import static org.hamcrest.CoreMatchers.startsWith;, +import static org.junit.Assert.assertArrayEquals;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertThat;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +		catch (HttpMessageConversionException ex) {, +			assertTrue(ex.getMessage(), ex.getMessage().startsWith("Type definition error:"));, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageConversionException.java, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageNotReadableException.java, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.java, +import org.springframework.http.converter.HttpMessageConversionException;, +			throw new HttpMessageConversionException("Type definition error: " + ex.getMessage(), ex);, +		}, +		catch (JsonProcessingException ex) {, +			throw new HttpMessageNotReadableException("JSON parse error: " + ex.getMessage(), ex);, +			throw new HttpMessageNotReadableException("I/O error while reading: " + ex.getMessage(), ex);, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverterTests.java, +import org.springframework.http.converter.HttpMessageConversionException;, +import static org.hamcrest.CoreMatchers.containsString;, +import static org.hamcrest.CoreMatchers.endsWith;, +import static org.hamcrest.CoreMatchers.not;, +import static org.hamcrest.CoreMatchers.startsWith;, +import static org.junit.Assert.assertArrayEquals;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertThat;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +		catch (HttpMessageConversionException ex) {, +			assertTrue(ex.getMessage(), ex.getMessage().startsWith("Type definition error:"));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.java, +		response.sendError(HttpServletResponse.SC_BAD_REQUEST);, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageConversionException.java, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageNotReadableException.java, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.java, +import org.springframework.http.converter.HttpMessageConversionException;, +			throw new HttpMessageConversionException("Type definition error: " + ex.getMessage(), ex);, +		}, +		catch (JsonProcessingException ex) {, +			throw new HttpMessageNotReadableException("JSON parse error: " + ex.getMessage(), ex);, +			throw new HttpMessageNotReadableException("I/O error while reading: " + ex.getMessage(), ex);, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverterTests.java, +import org.springframework.http.converter.HttpMessageConversionException;, +import static org.hamcrest.CoreMatchers.containsString;, +import static org.hamcrest.CoreMatchers.endsWith;, +import static org.hamcrest.CoreMatchers.not;, +import static org.hamcrest.CoreMatchers.startsWith;, +import static org.junit.Assert.assertArrayEquals;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertThat;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +		catch (HttpMessageConversionException ex) {, +			assertTrue(ex.getMessage(), ex.getMessage().startsWith("Type definition error:"));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.java, +		response.sendError(HttpServletResponse.SC_BAD_REQUEST);, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/ServletAnnotationControllerHandlerMethodTests.java, +import static org.junit.Assert.assertArrayEquals;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertNull;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;]