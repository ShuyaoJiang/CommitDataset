[+++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/bind/PortletRequestDataBinder.java, + * Copyright 2002-2010 the original author or authors., +			bindMultipart(multipartRequest.getMultiFileMap(), mpvs);, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/bind/PortletRequestDataBinder.java, + * Copyright 2002-2010 the original author or authors., +			bindMultipart(multipartRequest.getMultiFileMap(), mpvs);, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationControllerTests.java, +import org.springframework.mock.web.MockMultipartFile;, +import org.springframework.mock.web.MockMultipartHttpServletRequest;, +import org.springframework.web.multipart.support.StringMultipartFileEditor;, +	@Test, +	public void multipartFileAsSingleString() throws Exception {, +		initServlet(MultipartController.class);, +, +		MockMultipartHttpServletRequest request = new MockMultipartHttpServletRequest();, +		request.setRequestURI("/singleString");, +		request.addFile(new MockMultipartFile("content", "Juergen".getBytes()));, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		servlet.service(request, response);, +		assertEquals("Juergen", response.getContentAsString());, +	}, +, +	@Test, +	public void multipartFileAsStringArray() throws Exception {, +		initServlet(MultipartController.class);, +, +		MockMultipartHttpServletRequest request = new MockMultipartHttpServletRequest();, +		request.setRequestURI("/stringArray");, +		request.addFile(new MockMultipartFile("content", "Juergen".getBytes()));, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		servlet.service(request, response);, +		assertEquals("Juergen", response.getContentAsString());, +	}, +, +	@Test, +	public void multipartFilesAsStringArray() throws Exception {, +		initServlet(MultipartController.class);, +, +		MockMultipartHttpServletRequest request = new MockMultipartHttpServletRequest();, +		request.setRequestURI("/stringArray");, +		request.addFile(new MockMultipartFile("content", "Juergen".getBytes()));, +		request.addFile(new MockMultipartFile("content", "Eva".getBytes()));, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		servlet.service(request, response);, +		assertEquals("Juergen,Eva", response.getContentAsString());, +	}, +, +	@Controller, +	public static class MultipartController {, +, +		@InitBinder, +		public void initBinder(WebDataBinder binder) {, +			binder.registerCustomEditor(String.class, new StringMultipartFileEditor());, +		}, +, +		@RequestMapping("/singleString"), +		public void processMultipart(@RequestParam("content") String content, HttpServletResponse response) throws IOException {, +			response.getWriter().write(content);, +		}, +, +		@RequestMapping("/stringArray"), +		public void processMultipart(@RequestParam("content") String[] content, HttpServletResponse response) throws IOException {, +			response.getWriter().write(StringUtils.arrayToCommaDelimitedString(content));, +		}, +	}, +, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/bind/PortletRequestDataBinder.java, + * Copyright 2002-2010 the original author or authors., +			bindMultipart(multipartRequest.getMultiFileMap(), mpvs);, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationControllerTests.java, +import org.springframework.mock.web.MockMultipartFile;, +import org.springframework.mock.web.MockMultipartHttpServletRequest;, +import org.springframework.web.multipart.support.StringMultipartFileEditor;, +	@Test, +	public void multipartFileAsSingleString() throws Exception {, +		initServlet(MultipartController.class);, +, +		MockMultipartHttpServletRequest request = new MockMultipartHttpServletRequest();, +		request.setRequestURI("/singleString");, +		request.addFile(new MockMultipartFile("content", "Juergen".getBytes()));, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		servlet.service(request, response);, +		assertEquals("Juergen", response.getContentAsString());, +	}, +, +	@Test, +	public void multipartFileAsStringArray() throws Exception {, +		initServlet(MultipartController.class);, +, +		MockMultipartHttpServletRequest request = new MockMultipartHttpServletRequest();, +		request.setRequestURI("/stringArray");, +		request.addFile(new MockMultipartFile("content", "Juergen".getBytes()));, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		servlet.service(request, response);, +		assertEquals("Juergen", response.getContentAsString());, +	}, +, +	@Test, +	public void multipartFilesAsStringArray() throws Exception {, +		initServlet(MultipartController.class);]