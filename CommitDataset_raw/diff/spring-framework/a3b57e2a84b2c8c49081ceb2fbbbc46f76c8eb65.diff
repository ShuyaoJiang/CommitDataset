[+++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binding.java, +	BindingStatus getBindingStatus();, +, +	/**, +	 * The current validation status., +	 * Initially {@link ValidationStatus#NOT_VALIDATED}., +	 * Is {@link ValidationStatus#VALID} after value is successfully validated., +	 * Is {@link ValidationStatus#INVALID} after value fails validation., +	 * Resets to {@value ValidationStatus#NOT_VALIDATED} when value changes., +	 */, +	ValidationStatus getValidationStatus();, +	 * Validate the model value., +	 * Sets to {@link ValidationStatus#VALID} if succeeds., +	 * Sets to {@link ValidationStatus#INVALID} if fails., +	 */, +	void validate();, +	, +	/**, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binding.java, +	BindingStatus getBindingStatus();, +, +	/**, +	 * The current validation status., +	 * Initially {@link ValidationStatus#NOT_VALIDATED}., +	 * Is {@link ValidationStatus#VALID} after value is successfully validated., +	 * Is {@link ValidationStatus#INVALID} after value fails validation., +	 * Resets to {@value ValidationStatus#NOT_VALIDATED} when value changes., +	 */, +	ValidationStatus getValidationStatus();, +	 * Validate the model value., +	 * Sets to {@link ValidationStatus#VALID} if succeeds., +	 * Sets to {@link ValidationStatus#INVALID} if fails., +	 */, +	void validate();, +	, +	/**, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/binder/GenericBinder.java, +			if (binding.getBindingStatus() == BindingStatus.DIRTY) {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binding.java, +	BindingStatus getBindingStatus();, +, +	/**, +	 * The current validation status., +	 * Initially {@link ValidationStatus#NOT_VALIDATED}., +	 * Is {@link ValidationStatus#VALID} after value is successfully validated., +	 * Is {@link ValidationStatus#INVALID} after value fails validation., +	 * Resets to {@value ValidationStatus#NOT_VALIDATED} when value changes., +	 */, +	ValidationStatus getValidationStatus();, +	 * Validate the model value., +	 * Sets to {@link ValidationStatus#VALID} if succeeds., +	 * Sets to {@link ValidationStatus#INVALID} if fails., +	 */, +	void validate();, +	, +	/**, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/binder/GenericBinder.java, +			if (binding.getBindingStatus() == BindingStatus.DIRTY) {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinding.java, +import org.springframework.ui.binding.ValidationStatus;, +	private BindingStatus bindingStatus;, +		bindingStatus = BindingStatus.CLEAN;, +		if (bindingStatus == BindingStatus.DIRTY || bindingStatus == BindingStatus.COMMIT_FAILURE) {, +				bindingStatus = BindingStatus.DIRTY;, +				bindingStatus = BindingStatus.INVALID_SOURCE_VALUE;, +				bindingStatus = BindingStatus.INVALID_SOURCE_VALUE;, +						bindingStatus = BindingStatus.INVALID_SOURCE_VALUE;, +						bindingStatus = BindingStatus.INVALID_SOURCE_VALUE;, +			if (bindingStatus != BindingStatus.INVALID_SOURCE_VALUE) {, +					bindingStatus = BindingStatus.DIRTY;, +					bindingStatus = BindingStatus.INVALID_SOURCE_VALUE;, +				bindingStatus = BindingStatus.DIRTY;, +				bindingStatus = BindingStatus.INVALID_SOURCE_VALUE;, +		if (bindingStatus != BindingStatus.INVALID_SOURCE_VALUE) {, +	public BindingStatus getBindingStatus() {, +		return bindingStatus;, +	}, +, +	public ValidationStatus getValidationStatus() {, +		return ValidationStatus.NOT_VALIDATED;, +		if (bindingStatus == BindingStatus.INVALID_SOURCE_VALUE) {, +		} else if (bindingStatus == BindingStatus.COMMIT_FAILURE) {, +		} else if (bindingStatus == BindingStatus.COMMITTED) {, +	public void validate() {, +	}, +, +		if (bindingStatus == BindingStatus.DIRTY) {, +				bindingStatus = BindingStatus.COMMIT_FAILURE;, +				bindingStatus = BindingStatus.COMMITTED;, +		if (bindingStatus == BindingStatus.INVALID_SOURCE_VALUE) {, +			bindingStatus = BindingStatus.CLEAN;, +		} else if (bindingStatus == BindingStatus.DIRTY || bindingStatus == BindingStatus.COMMIT_FAILURE) {, +			bindingStatus = BindingStatus.CLEAN;, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binding.java, +	BindingStatus getBindingStatus();, +, +	/**, +	 * The current validation status., +	 * Initially {@link ValidationStatus#NOT_VALIDATED}., +	 * Is {@link ValidationStatus#VALID} after value is successfully validated.]