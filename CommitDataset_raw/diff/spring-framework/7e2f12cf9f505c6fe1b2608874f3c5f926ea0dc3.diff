[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/EmbeddedDatabaseBeanDefinitionParser.java, + * Copyright 2002-2015 the original author or authors., +import org.w3c.dom.Element;, +, + * {@link org.springframework.beans.factory.xml.BeanDefinitionParser} that, + * parses an {@code embedded-database} element and creates a {@link BeanDefinition}, + * for an {@link EmbeddedDatabaseFactoryBean}., + *, + * <p>Picks up nested {@code script} elements and configures a, + * {@link ResourceDatabasePopulator} for each of them., + * @author Sam Brannen, + * @see DatabasePopulatorConfigUtils, +		useIdAsDatabaseNameIfGiven(element, builder);, +	@Override, +	protected boolean shouldGenerateIdAsFallback() {, +		return true;, +	}, +, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/EmbeddedDatabaseBeanDefinitionParser.java, + * Copyright 2002-2015 the original author or authors., +import org.w3c.dom.Element;, +, + * {@link org.springframework.beans.factory.xml.BeanDefinitionParser} that, + * parses an {@code embedded-database} element and creates a {@link BeanDefinition}, + * for an {@link EmbeddedDatabaseFactoryBean}., + *, + * <p>Picks up nested {@code script} elements and configures a, + * {@link ResourceDatabasePopulator} for each of them., + * @author Sam Brannen, + * @see DatabasePopulatorConfigUtils, +		useIdAsDatabaseNameIfGiven(element, builder);, +	@Override, +	protected boolean shouldGenerateIdAsFallback() {, +		return true;, +	}, +, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/config/JdbcNamespaceIntegrationTests.java, + * Copyright 2002-2015 the original author or authors., +	public void createWithAnonymousDataSource() throws Exception {, +		assertCorrectSetupAndCloseContextForSingleDataSource("jdbc-config-anonymous-datasource.xml", 1);, +	}, +, +	@Test, +	private void assertCorrectSetupAndCloseContextForSingleDataSource(String file, int count) {, +		ConfigurableApplicationContext context = context(file);, +		try {, +			DataSource dataSource = context.getBean(DataSource.class);, +			JdbcTemplate template = new JdbcTemplate(dataSource);, +			assertNumRowsInTestTable(template, count);, +		}, +		finally {, +			context.close();, +		}, +	}, +, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/EmbeddedDatabaseBeanDefinitionParser.java, + * Copyright 2002-2015 the original author or authors., +import org.w3c.dom.Element;, +, + * {@link org.springframework.beans.factory.xml.BeanDefinitionParser} that, + * parses an {@code embedded-database} element and creates a {@link BeanDefinition}, + * for an {@link EmbeddedDatabaseFactoryBean}., + *, + * <p>Picks up nested {@code script} elements and configures a, + * {@link ResourceDatabasePopulator} for each of them., + * @author Sam Brannen, + * @see DatabasePopulatorConfigUtils, +		useIdAsDatabaseNameIfGiven(element, builder);, +	@Override, +	protected boolean shouldGenerateIdAsFallback() {, +		return true;, +	}, +, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/config/JdbcNamespaceIntegrationTests.java, + * Copyright 2002-2015 the original author or authors., +	public void createWithAnonymousDataSource() throws Exception {, +		assertCorrectSetupAndCloseContextForSingleDataSource("jdbc-config-anonymous-datasource.xml", 1);, +	}, +, +	@Test, +	private void assertCorrectSetupAndCloseContextForSingleDataSource(String file, int count) {, +		ConfigurableApplicationContext context = context(file);, +		try {, +			DataSource dataSource = context.getBean(DataSource.class);, +			JdbcTemplate template = new JdbcTemplate(dataSource);, +			assertNumRowsInTestTable(template, count);, +		}, +		finally {, +			context.close();, +		}, +	}, +, +++ b/spring-jdbc/src/test/resources/org/springframework/jdbc/config/jdbc-config-anonymous-datasource.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<beans xmlns="http://www.springframework.org/schema/beans" xmlns:jdbc="http://www.springframework.org/schema/jdbc", +	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd, +		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd">, +, +	<jdbc:embedded-database>]