[+++ b/org.springframework.beans/src/test/java/com/foo/Component.java, +package com.foo;, +, +import java.util.ArrayList;, +import java.util.List;, +, +public class Component {, +	private String name;, +	private List<Component> components = new ArrayList<Component>();, +, +	// mmm, there is no setter method for the 'components', +	public void addComponent(Component component) {, +		this.components.add(component);, +	}, +, +	public List<Component> getComponents() {, +		return components;, +	}, +, +	public String getName() {, +		return name;, +	}, +, +	public void setName(String name) {, +		this.name = name;, +	}, +}, +++ b/org.springframework.beans/src/test/java/com/foo/Component.java, +package com.foo;, +, +import java.util.ArrayList;, +import java.util.List;, +, +public class Component {, +	private String name;, +	private List<Component> components = new ArrayList<Component>();, +, +	// mmm, there is no setter method for the 'components', +	public void addComponent(Component component) {, +		this.components.add(component);, +	}, +, +	public List<Component> getComponents() {, +		return components;, +	}, +, +	public String getName() {, +		return name;, +	}, +, +	public void setName(String name) {, +		this.name = name;, +	}, +}, +++ b/org.springframework.beans/src/test/java/com/foo/ComponentBeanDefinitionParser.java, +package com.foo;, +, +import java.util.List;, +, +import org.springframework.beans.factory.config.BeanDefinition;, +import org.springframework.beans.factory.support.AbstractBeanDefinition;, +import org.springframework.beans.factory.support.BeanDefinitionBuilder;, +import org.springframework.beans.factory.support.ManagedList;, +import org.springframework.beans.factory.xml.AbstractBeanDefinitionParser;, +import org.springframework.beans.factory.xml.ParserContext;, +import org.springframework.util.xml.DomUtils;, +import org.w3c.dom.Element;, +, +public class ComponentBeanDefinitionParser extends AbstractBeanDefinitionParser {, +, +	protected AbstractBeanDefinition parseInternal(Element element,, +			ParserContext parserContext) {, +		return parseComponentElement(element);, +	}, +, +	private static AbstractBeanDefinition parseComponentElement(Element element) {, +		BeanDefinitionBuilder factory = BeanDefinitionBuilder, +				.rootBeanDefinition(ComponentFactoryBean.class);, +, +		factory.addPropertyValue("parent", parseComponent(element));, +, +		List<Element> childElements = DomUtils.getChildElementsByTagName(, +				element, "component");, +		if (childElements != null && childElements.size() > 0) {, +			parseChildComponents(childElements, factory);, +		}, +, +		return factory.getBeanDefinition();, +	}, +, +	private static BeanDefinition parseComponent(Element element) {, +		BeanDefinitionBuilder component = BeanDefinitionBuilder, +				.rootBeanDefinition(Component.class);, +		component.addPropertyValue("name", element.getAttribute("name"));, +		return component.getBeanDefinition();, +	}, +, +	private static void parseChildComponents(List<Element> childElements,, +			BeanDefinitionBuilder factory) {, +		ManagedList<BeanDefinition> children = new ManagedList<BeanDefinition>(]