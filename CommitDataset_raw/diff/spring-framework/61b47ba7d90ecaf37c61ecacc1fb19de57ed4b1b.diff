[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java, +		if (annot == null || ObjectUtils.isEmpty(annot.value()) || StringUtils.isEmpty(annot.value()[0])) {, +		if (annot.value().length > 1 && logger.isWarnEnabled()) {, +	 * Create a {@link UriComponentsBuilder} from the mapping of a controller, +	 * method and an array of method argument values. This method delegates, +	 * to {@link #fromMethod(java.lang.reflect.Method, Object...)}., +	 * @throws IllegalArgumentException if there is no matching or, +	 * if there is more than one matching method, +	private static Method getMethod(Class<?> controllerType, String methodName, Object... argumentValues) {, +					throw new IllegalArgumentException("Found two methods named '" + methodName + "' having " +, +	 * @throws IllegalArgumentException if the mapping name is not found or, +	 * if there is no unique match, +	 * @since 4.1, +		if (handlerMethods == null) {, +			throw new IllegalArgumentException("Mapping name not found: " + name);, +		}, +		if (handlerMethods.size() != 1) {, +			throw new IllegalArgumentException("No unique match for mapping name " + name + ": " + handlerMethods);, +		}, +		if (annot == null) {, +			throw new IllegalArgumentException("No @RequestMapping on: " + method.toGenericString());, +		}, +		if (annot.value().length > 1 && logger.isWarnEnabled()) {, +	private static UriComponents applyContributors(UriComponentsBuilder builder, Method method, Object... args) {, +		if (paramCount != argCount) {, +			throw new IllegalArgumentException("Number of method parameters " + paramCount +, +		}]