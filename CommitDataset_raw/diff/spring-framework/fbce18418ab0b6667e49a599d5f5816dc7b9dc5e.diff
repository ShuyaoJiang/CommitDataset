[+++ b/spring-context/src/main/java/org/springframework/context/config/PropertyOverrideBeanDefinitionParser.java, + * Copyright 2002-2015 the original author or authors., +, +++ b/spring-context/src/main/java/org/springframework/context/config/PropertyOverrideBeanDefinitionParser.java, + * Copyright 2002-2015 the original author or authors., +, +++ b/spring-context/src/main/java/org/springframework/context/config/PropertyPlaceholderBeanDefinitionParser.java, + * Copyright 2002-2015 the original author or authors., +, +, +, +		if (element.hasAttribute("null-value")) {, +			builder.addPropertyValue("nullValue", element.getAttribute("null-value"));, +		}, +++ b/spring-context/src/main/java/org/springframework/context/config/PropertyOverrideBeanDefinitionParser.java, + * Copyright 2002-2015 the original author or authors., +, +++ b/spring-context/src/main/java/org/springframework/context/config/PropertyPlaceholderBeanDefinitionParser.java, + * Copyright 2002-2015 the original author or authors., +, +, +, +		if (element.hasAttribute("null-value")) {, +			builder.addPropertyValue("nullValue", element.getAttribute("null-value"));, +		}, +++ b/spring-context/src/main/resources/org/springframework/context/config/spring-context-4.2.xsd, +	<xsd:complexType name="propertyLoading">, +				<xsd:extension base="propertyLoading">, +					<xsd:attribute name="null-value">, +						<xsd:annotation>, +							<xsd:documentation><![CDATA[, +	A value that should be treated as {@code null} when resolved as a placeholder value:, +	e.g. "" (empty String) or "null". By default, no such null value is defined., +				]]></xsd:documentation>, +						</xsd:annotation>, +					</xsd:attribute>, +				<xsd:extension base="propertyLoading"/>, +++ b/spring-context/src/main/java/org/springframework/context/config/PropertyOverrideBeanDefinitionParser.java, + * Copyright 2002-2015 the original author or authors., +, +++ b/spring-context/src/main/java/org/springframework/context/config/PropertyPlaceholderBeanDefinitionParser.java, + * Copyright 2002-2015 the original author or authors., +, +, +, +		if (element.hasAttribute("null-value")) {, +			builder.addPropertyValue("nullValue", element.getAttribute("null-value"));, +		}, +++ b/spring-context/src/main/resources/org/springframework/context/config/spring-context-4.2.xsd, +	<xsd:complexType name="propertyLoading">, +				<xsd:extension base="propertyLoading">, +					<xsd:attribute name="null-value">, +						<xsd:annotation>, +							<xsd:documentation><![CDATA[, +	A value that should be treated as {@code null} when resolved as a placeholder value:, +	e.g. "" (empty String) or "null". By default, no such null value is defined., +				]]></xsd:documentation>, +						</xsd:annotation>, +					</xsd:attribute>, +				<xsd:extension base="propertyLoading"/>, +++ b/spring-context/src/test/java/org/springframework/context/config/ContextNamespaceHandlerTests.java, + * Copyright 2002-2015 the original author or authors., +, +		assertEquals("bar", s);, +		assertEquals("null", applicationContext.getBean("nullString"));, +			assertEquals("spam", s);, +		}, +		finally {, +		assertEquals("spam", s);, +		assertEquals("bar", s);, +		assertEquals("foo", s);, +		assertEquals("maps", s);, +		assertEquals("${bar}", s);, +		assertEquals("null", applicationContext.getBean("nullString"));, +		assertEquals(42, calendar.get(Calendar.MINUTE));, +, +++ b/spring-context/src/main/java/org/springframework/context/config/PropertyOverrideBeanDefinitionParser.java, + * Copyright 2002-2015 the original author or authors., +, +++ b/spring-context/src/main/java/org/springframework/context/config/PropertyPlaceholderBeanDefinitionParser.java, + * Copyright 2002-2015 the original author or authors., +, +, +, +		if (element.hasAttribute("null-value")) {, +			builder.addPropertyValue("nullValue", element.getAttribute("null-value"));, +		}, +++ b/spring-context/src/main/resources/org/springframework/context/config/spring-context-4.2.xsd, +	<xsd:complexType name="propertyLoading">, +				<xsd:extension base="propertyLoading">, +					<xsd:attribute name="null-value">, +						<xsd:annotation>, +							<xsd:documentation><![CDATA[, +	A value that should be treated as {@code null} when resolved as a placeholder value:, +	e.g. "" (empty String) or "null". By default, no such null value is defined., +				]]></xsd:documentation>, +						</xsd:annotation>, +					</xsd:attribute>, +				<xsd:extension base="propertyLoading"/>, +++ b/spring-context/src/test/java/org/springframework/context/config/ContextNamespaceHandlerTests.java]