[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +import java.io.UnsupportedEncodingException;, +import java.net.URLDecoder;, +import java.nio.charset.StandardCharsets;, +	 * A method for decoding name and value string in a name-value pair., +	 * <p>Note that the plus sign "+" is converted into a space character " ".</p>, +	 * @param encodedString the string to be decoded, +	 * @return the decoded string, +	 * @see java.net.URLDecoder#decode(String, String), +	 */, +	private static String decodeQueryParam(final String encodedString) {, +		try {, +			return URLDecoder.decode(encodedString, StandardCharsets.UTF_8.name());, +		} catch (UnsupportedEncodingException e) {, +			// StandardCharsets are guaranteed to be available on every implementation of the Java platform, so this should never happen., +			throw new IllegalStateException(e);, +		}, +	}, +, +	/**, +				queryParams.add(decodeQueryParam(name),, +						value != null ? decodeQueryParam(value) : null);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +import java.io.UnsupportedEncodingException;, +import java.net.URLDecoder;, +import java.nio.charset.StandardCharsets;, +	 * A method for decoding name and value string in a name-value pair., +	 * <p>Note that the plus sign "+" is converted into a space character " ".</p>, +	 * @param encodedString the string to be decoded, +	 * @return the decoded string, +	 * @see java.net.URLDecoder#decode(String, String), +	 */, +	private static String decodeQueryParam(final String encodedString) {, +		try {, +			return URLDecoder.decode(encodedString, StandardCharsets.UTF_8.name());, +		} catch (UnsupportedEncodingException e) {, +			// StandardCharsets are guaranteed to be available on every implementation of the Java platform, so this should never happen., +			throw new IllegalStateException(e);, +		}, +	}, +, +	/**, +				queryParams.add(decodeQueryParam(name),, +						value != null ? decodeQueryParam(value) : null);, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/ServerHttpRequestTests.java, +	public void queryParamsWithUrlEncodedValue() throws Exception {, +		MultiValueMap<String, String> params = createHttpRequest("/path?a=%20%2B+%C3%A0").getQueryParams();, +		assertEquals(1, params.size());, +		assertEquals(Collections.singletonList(" + \u00e0"), params.get("a"));, +	}, +, +	@Test]