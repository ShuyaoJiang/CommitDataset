[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistration.java, + * Encapsulates information required to create a resource handler., +	 * @return the same {@link ResourceHandlerRegistration} instance, for chained method invocation, +	 * @return the same {@link ResourceHandlerRegistration} instance, for chained method invocation, +	 * by the resource handler., +	 * @return the same {@link ResourceHandlerRegistration} instance, for chained method invocation, +	 * can be useful, for example, to apply a version strategy to resource URLs., +	 * development, especially when applying a version strategy), +	 * @return the same {@link ResourceHandlerRegistration} instance, for chained method invocation, +	 * can be useful, for example, to apply a version strategy to resource URLs., +	 * development, especially when applying a version strategy, +	 * is used. Since Resources aren't serializable and can be dependent on the, +	 * application host, one should not use a distributed cache but rather an, +	 * in-memory cache., +	 * @return the same {@link ResourceHandlerRegistration} instance, for chained method invocation, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistration.java, + * Encapsulates information required to create a resource handler., +	 * @return the same {@link ResourceHandlerRegistration} instance, for chained method invocation, +	 * @return the same {@link ResourceHandlerRegistration} instance, for chained method invocation, +	 * by the resource handler., +	 * @return the same {@link ResourceHandlerRegistration} instance, for chained method invocation, +	 * can be useful, for example, to apply a version strategy to resource URLs., +	 * development, especially when applying a version strategy), +	 * @return the same {@link ResourceHandlerRegistration} instance, for chained method invocation, +	 * can be useful, for example, to apply a version strategy to resource URLs., +	 * development, especially when applying a version strategy, +	 * is used. Since Resources aren't serializable and can be dependent on the, +	 * application host, one should not use a distributed cache but rather an, +	 * in-memory cache., +	 * @return the same {@link ResourceHandlerRegistration} instance, for chained method invocation, +++ b/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc-4.2.xsd, +	Since Resources aren't serializable and can be dependent on the application host, one should not use a]