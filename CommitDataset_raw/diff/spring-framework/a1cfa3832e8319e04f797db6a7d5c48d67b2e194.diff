[+++ b/build.gradle, +		optional("reactor:reactor-core:1.0.0.BUILD-SNAPSHOT"), +		maven { url 'http://repo.springsource.org/snapshot' } // reactor, +		optional("org.testng:testng:6.5.2"), +			def gradleOpts = "-XX:MaxPermSize=1024m -Xmx1024m", +++ b/build.gradle, +		optional("reactor:reactor-core:1.0.0.BUILD-SNAPSHOT"), +		maven { url 'http://repo.springsource.org/snapshot' } // reactor, +		optional("org.testng:testng:6.5.2"), +			def gradleOpts = "-XX:MaxPermSize=1024m -Xmx1024m", +++ b/gradlew, +GRADLE_OPTS="-XX:MaxPermSize=1024m -Xmx1024m $GRADLE_OPTS", +++ b/build.gradle, +		optional("reactor:reactor-core:1.0.0.BUILD-SNAPSHOT"), +		maven { url 'http://repo.springsource.org/snapshot' } // reactor, +		optional("org.testng:testng:6.5.2"), +			def gradleOpts = "-XX:MaxPermSize=1024m -Xmx1024m", +++ b/gradlew, +GRADLE_OPTS="-XX:MaxPermSize=1024m -Xmx1024m $GRADLE_OPTS", +++ b/gradlew.bat, +set GRADLE_OPTS=-XX:MaxPermSize=1024m -Xmx1024m -XX:MaxHeapSize=256m %GRADLE_OPTS%, +++ b/build.gradle, +		optional("reactor:reactor-core:1.0.0.BUILD-SNAPSHOT"), +		maven { url 'http://repo.springsource.org/snapshot' } // reactor, +		optional("org.testng:testng:6.5.2"), +			def gradleOpts = "-XX:MaxPermSize=1024m -Xmx1024m", +++ b/gradlew, +GRADLE_OPTS="-XX:MaxPermSize=1024m -Xmx1024m $GRADLE_OPTS", +++ b/gradlew.bat, +set GRADLE_OPTS=-XX:MaxPermSize=1024m -Xmx1024m -XX:MaxHeapSize=256m %GRADLE_OPTS%, +++ b/spring-aop/src/main/java/org/springframework/aop/target/CommonsPoolTargetSource.java, + * Copyright 2002-2012 the original author or authors., + * properties are explictly not mirrored because the implementation of, +++ b/build.gradle, +		optional("reactor:reactor-core:1.0.0.BUILD-SNAPSHOT"), +		maven { url 'http://repo.springsource.org/snapshot' } // reactor, +		optional("org.testng:testng:6.5.2"), +			def gradleOpts = "-XX:MaxPermSize=1024m -Xmx1024m", +++ b/gradlew, +GRADLE_OPTS="-XX:MaxPermSize=1024m -Xmx1024m $GRADLE_OPTS", +++ b/gradlew.bat, +set GRADLE_OPTS=-XX:MaxPermSize=1024m -Xmx1024m -XX:MaxHeapSize=256m %GRADLE_OPTS%, +++ b/spring-aop/src/main/java/org/springframework/aop/target/CommonsPoolTargetSource.java, + * Copyright 2002-2012 the original author or authors., + * properties are explictly not mirrored because the implementation of, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/support/BeanFactoryGenericsTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotSame;, +import static org.junit.Assert.assertNull;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +, +, +		List input = new ArrayList();, +	 * Tests support for parameterized {@code factory-method} declarations such, +	 * as Mockito {@code mock()} method which has the following signature., +	 * <pre>{@code, +	 * }</pre>, +	public void parameterizedFactoryMethod() {, +++ b/build.gradle, +		optional("reactor:reactor-core:1.0.0.BUILD-SNAPSHOT"), +		maven { url 'http://repo.springsource.org/snapshot' } // reactor, +		optional("org.testng:testng:6.5.2"), +			def gradleOpts = "-XX:MaxPermSize=1024m -Xmx1024m", +++ b/gradlew, +GRADLE_OPTS="-XX:MaxPermSize=1024m -Xmx1024m $GRADLE_OPTS", +++ b/gradlew.bat, +set GRADLE_OPTS=-XX:MaxPermSize=1024m -Xmx1024m -XX:MaxHeapSize=256m %GRADLE_OPTS%, +++ b/spring-aop/src/main/java/org/springframework/aop/target/CommonsPoolTargetSource.java, + * Copyright 2002-2012 the original author or authors., + * properties are explictly not mirrored because the implementation of, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/support/BeanFactoryGenericsTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotSame;, +import static org.junit.Assert.assertNull;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +, +, +		List input = new ArrayList();, +	 * Tests support for parameterized {@code factory-method} declarations such, +	 * as Mockito {@code mock()} method which has the following signature., +	 * <pre>{@code, +	 * }</pre>, +	public void parameterizedFactoryMethod() {, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.java, +	private Environment environment;, +, +		this.environment = environment;, +	 * {@link Profile @Profile}-annotated component classes should be registered., +		this.environment = environment;, +		if (ConditionalAnnotationHelper.shouldSkip(abd, this.registry,, +				this.environment, this.beanNameGenerator)) {, +++ b/build.gradle, +		optional("reactor:reactor-core:1.0.0.BUILD-SNAPSHOT"), +		maven { url 'http://repo.springsource.org/snapshot' } // reactor, +		optional("org.testng:testng:6.5.2"), +			def gradleOpts = "-XX:MaxPermSize=1024m -Xmx1024m"]