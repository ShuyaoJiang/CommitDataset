[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +		public <T> Mono<ResponseEntity<T>> toEntity(Class<T> bodyType) {, +		public <T> Mono<ResponseEntity<List<T>>> toEntityList(Class<T> responseType) {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +		public <T> Mono<ResponseEntity<T>> toEntity(Class<T> bodyType) {, +		public <T> Mono<ResponseEntity<List<T>>> toEntityList(Class<T> responseType) {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/WebClient.java, +		<T> Mono<ResponseEntity<T>> toEntity(Class<T> bodyType);, +		<T> Mono<ResponseEntity<List<T>>> toEntityList(Class<T> elementType);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +		public <T> Mono<ResponseEntity<T>> toEntity(Class<T> bodyType) {, +		public <T> Mono<ResponseEntity<List<T>>> toEntityList(Class<T> responseType) {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/WebClient.java, +		<T> Mono<ResponseEntity<T>> toEntity(Class<T> bodyType);, +		<T> Mono<ResponseEntity<List<T>>> toEntityList(Class<T> elementType);, +++ b/spring-webflux/src/main/kotlin/org/springframework/web/reactive/function/client/WebClientExtensions.kt, + * Extension for [WebClient.ResponseSpec.toEntity] providing a [KClass] based variant., +fun <T : Any> WebClient.ResponseSpec.toEntity(type: KClass<T>): Mono<ResponseEntity<T>> = toEntity(type.java), + * Extension for [WebClient.ResponseSpec.toEntity] providing a `bodyToEntity<Foo>()` variant., +inline fun <reified T : Any> WebClient.ResponseSpec.toEntity(): Mono<ResponseEntity<T>> = toEntity(T::class.java), + * Extension for [WebClient.ResponseSpec.toEntityList] providing a [KClass] based variant., +fun <T : Any> WebClient.ResponseSpec.toEntityList(type: KClass<T>): Mono<ResponseEntity<List<T>>> = toEntityList(type.java), + * Extension for [WebClient.ResponseSpec.toEntityList] providing a `bodyToEntityList<Foo>()` variant., +inline fun <reified T : Any> WebClient.ResponseSpec.toEntityList(): Mono<ResponseEntity<List<T>>> = toEntityList(T::class.java), +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +		public <T> Mono<ResponseEntity<T>> toEntity(Class<T> bodyType) {, +		public <T> Mono<ResponseEntity<List<T>>> toEntityList(Class<T> responseType) {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/WebClient.java, +		<T> Mono<ResponseEntity<T>> toEntity(Class<T> bodyType);, +		<T> Mono<ResponseEntity<List<T>>> toEntityList(Class<T> elementType);, +++ b/spring-webflux/src/main/kotlin/org/springframework/web/reactive/function/client/WebClientExtensions.kt, + * Extension for [WebClient.ResponseSpec.toEntity] providing a [KClass] based variant., +fun <T : Any> WebClient.ResponseSpec.toEntity(type: KClass<T>): Mono<ResponseEntity<T>> = toEntity(type.java), + * Extension for [WebClient.ResponseSpec.toEntity] providing a `bodyToEntity<Foo>()` variant., +inline fun <reified T : Any> WebClient.ResponseSpec.toEntity(): Mono<ResponseEntity<T>> = toEntity(T::class.java), + * Extension for [WebClient.ResponseSpec.toEntityList] providing a [KClass] based variant., +fun <T : Any> WebClient.ResponseSpec.toEntityList(type: KClass<T>): Mono<ResponseEntity<List<T>>> = toEntityList(type.java), + * Extension for [WebClient.ResponseSpec.toEntityList] providing a `bodyToEntityList<Foo>()` variant., +inline fun <reified T : Any> WebClient.ResponseSpec.toEntityList(): Mono<ResponseEntity<List<T>>> = toEntityList(T::class.java), +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/client/WebClientIntegrationTests.java, +import static org.junit.Assert.*;, +				.toEntity(String.class);, +				.toEntityList(Pojo.class);]