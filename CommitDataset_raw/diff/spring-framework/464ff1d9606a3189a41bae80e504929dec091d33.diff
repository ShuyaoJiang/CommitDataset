[+++ b/spring-web-reactive/build.gradle, +	compile "io.projectreactor:reactor-core:2.1.0.BUILD-SNAPSHOT", +, +	optional "com.fasterxml.jackson.core:jackson-databind:2.6.1", +++ b/spring-web-reactive/build.gradle, +	compile "io.projectreactor:reactor-core:2.1.0.BUILD-SNAPSHOT", +, +	optional "com.fasterxml.jackson.core:jackson-databind:2.6.1", +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/JacksonJsonDecoder.java, +import reactor.Publishers;, +, +import java.io.IOException;, +import java.nio.ByteBuffer;, +		return Publishers.map(inputStream, chunk -> {, +			} catch (IOException e) {, +++ b/spring-web-reactive/build.gradle, +	compile "io.projectreactor:reactor-core:2.1.0.BUILD-SNAPSHOT", +, +	optional "com.fasterxml.jackson.core:jackson-databind:2.6.1", +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/JacksonJsonDecoder.java, +import reactor.Publishers;, +, +import java.io.IOException;, +import java.nio.ByteBuffer;, +		return Publishers.map(inputStream, chunk -> {, +			} catch (IOException e) {, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/Jaxb2Decoder.java, +import org.xml.sax.InputSource;, +import org.xml.sax.SAXException;, +import org.xml.sax.XMLReader;, +import org.xml.sax.helpers.XMLReaderFactory;, +import reactor.Publishers;, +, +import javax.xml.bind.*;, +import javax.xml.bind.annotation.XmlRootElement;, +import javax.xml.transform.Source;, +import javax.xml.transform.sax.SAXSource;, +import javax.xml.transform.stream.StreamSource;, +import java.nio.ByteBuffer;, +import java.util.concurrent.ConcurrentHashMap;, +import java.util.concurrent.ConcurrentMap;, +				return Publishers.just(unmarshaller.unmarshal(source));, +				return Publishers.just(jaxbElement.getValue());, +			return Publishers.error(, +			  new CodecException("Could not unmarshal to [" + outputClass + "]: " + ex.getMessage(), ex));, +			return Publishers.error(new CodecException("Could not instantiate JAXBContext: " + ex.getMessage(), ex));, +++ b/spring-web-reactive/build.gradle, +	compile "io.projectreactor:reactor-core:2.1.0.BUILD-SNAPSHOT", +, +	optional "com.fasterxml.jackson.core:jackson-databind:2.6.1", +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/JacksonJsonDecoder.java, +import reactor.Publishers;, +, +import java.io.IOException;, +import java.nio.ByteBuffer;, +		return Publishers.map(inputStream, chunk -> {, +			} catch (IOException e) {, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/Jaxb2Decoder.java, +import org.xml.sax.InputSource;, +import org.xml.sax.SAXException;, +import org.xml.sax.XMLReader;, +import org.xml.sax.helpers.XMLReaderFactory;, +import reactor.Publishers;, +, +import javax.xml.bind.*;, +import javax.xml.bind.annotation.XmlRootElement;, +import javax.xml.transform.Source;, +import javax.xml.transform.sax.SAXSource;, +import javax.xml.transform.stream.StreamSource;, +import java.nio.ByteBuffer;, +import java.util.concurrent.ConcurrentHashMap;, +import java.util.concurrent.ConcurrentMap;, +				return Publishers.just(unmarshaller.unmarshal(source));, +				return Publishers.just(jaxbElement.getValue());, +			return Publishers.error(, +			  new CodecException("Could not unmarshal to [" + outputClass + "]: " + ex.getMessage(), ex));, +			return Publishers.error(new CodecException("Could not instantiate JAXBContext: " + ex.getMessage(), ex));, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/JsonObjectDecoder.java, +import reactor.Publishers;, +import reactor.fn.Function;, +import reactor.rx.Promise;, +import rx.Observable;, +, +import java.nio.ByteBuffer;, +import java.util.ArrayList;, +import java.util.List;, +		return Publishers.flatMap(inputStream, new Function<ByteBuffer, Publisher<? extends ByteBuffer>>() {, +					return Publishers.error(new IllegalStateException("Corrupted stream"));, +					return Publishers.error(new IllegalStateException(, +						return Publishers.error(new IllegalStateException(, +				return Publishers.from(chunks);, +++ b/spring-web-reactive/build.gradle, +	compile "io.projectreactor:reactor-core:2.1.0.BUILD-SNAPSHOT", +, +	optional "com.fasterxml.jackson.core:jackson-databind:2.6.1", +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/JacksonJsonDecoder.java, +import reactor.Publishers;, +, +import java.io.IOException;, +import java.nio.ByteBuffer;]