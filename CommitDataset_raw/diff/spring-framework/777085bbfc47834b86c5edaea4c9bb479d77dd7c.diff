[+++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, + * <p>Compatible with Jackson 2.1 and higher., +				JsonGenerator generator = this.objectMapper.getFactory().createGenerator(out, encoding);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, + * <p>Compatible with Jackson 2.1 and higher., +				JsonGenerator generator = this.objectMapper.getFactory().createGenerator(out, encoding);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, + * <p>Compatible with Jackson 2.1 and higher., +		JsonGenerator generator = this.objectMapper.getFactory().createGenerator(outputMessage.getBody(), encoding);, +				generator.writeRaw(this.jsonPrefix);, +				generator.writeRaw(jsonpFunction + "(");, +				this.objectMapper.writerWithView(serializationView).writeValue(generator, object);, +				this.objectMapper.writeValue(generator, object);, +				generator.writeRaw(");");, +				generator.flush();, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, + * <p>Compatible with Jackson 2.1 and higher., +				JsonGenerator generator = this.objectMapper.getFactory().createGenerator(out, encoding);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, + * <p>Compatible with Jackson 2.1 and higher., +		JsonGenerator generator = this.objectMapper.getFactory().createGenerator(outputMessage.getBody(), encoding);, +				generator.writeRaw(this.jsonPrefix);, +				generator.writeRaw(jsonpFunction + "(");, +				this.objectMapper.writerWithView(serializationView).writeValue(generator, object);, +				this.objectMapper.writeValue(generator, object);, +				generator.writeRaw(");");, +				generator.flush();, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/json/MappingJackson2JsonView.java, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.LinkedHashSet;, +import java.util.Map;, +import java.util.Set;, + * <p>Compatible with Jackson 2.1 and higher., + *, +	/**, +	 * Default content type for JSONP: "application/javascript"., +	 */, +	private Set<String> jsonpParameterNames = new LinkedHashSet<String>(Arrays.asList("jsonp", "callback"));, +, +	/**, +	 * Set JSONP request parameter names. Each time a request has one of those, +	 * parameters, the resulting JSON will be wrapped into a function named as, +	 * specified by the JSONP request parameter value., +	 * <p>The parameter names configured by default are "jsonp" and "callback"., +	 * @since 4.1, +	 * @see <a href="http://en.wikipedia.org/wiki/JSONP">JSONP Wikipedia article</a>, +	 */, +	public void setJsonpParameterNames(Set<String> jsonpParameterNames) {, +		this.jsonpParameterNames = jsonpParameterNames;, +	}, +, +, +		if (this.jsonpParameterNames != null) {, +		}, +		Set<String> modelKeys = (!CollectionUtils.isEmpty(this.modelKeys) ? this.modelKeys : model.keySet());, +			if (!(entry.getValue() instanceof BindingResult) && modelKeys.contains(entry.getKey()) &&, +					!entry.getKey().equals(JsonView.class.getName())) {, +		JsonGenerator generator = this.objectMapper.getFactory().createGenerator(stream, this.encoding);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, + * <p>Compatible with Jackson 2.1 and higher., +				JsonGenerator generator = this.objectMapper.getFactory().createGenerator(out, encoding);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, + * <p>Compatible with Jackson 2.1 and higher., +		JsonGenerator generator = this.objectMapper.getFactory().createGenerator(outputMessage.getBody(), encoding);, +				generator.writeRaw(this.jsonPrefix);, +				generator.writeRaw(jsonpFunction + "(");, +				this.objectMapper.writerWithView(serializationView).writeValue(generator, object);, +				this.objectMapper.writeValue(generator, object);, +				generator.writeRaw(");");, +				generator.flush();, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/json/MappingJackson2JsonView.java, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.LinkedHashSet;, +import java.util.Map;, +import java.util.Set;, + * <p>Compatible with Jackson 2.1 and higher., + *, +	/**, +	 * Default content type for JSONP: "application/javascript"., +	 */, +	private Set<String> jsonpParameterNames = new LinkedHashSet<String>(Arrays.asList("jsonp", "callback"));, +, +	/**, +	 * Set JSONP request parameter names. Each time a request has one of those, +	 * parameters, the resulting JSON will be wrapped into a function named as, +	 * specified by the JSONP request parameter value., +	 * <p>The parameter names configured by default are "jsonp" and "callback"., +	 * @since 4.1, +	 * @see <a href="http://en.wikipedia.org/wiki/JSONP">JSONP Wikipedia article</a>, +	 */, +	public void setJsonpParameterNames(Set<String> jsonpParameterNames) {, +		this.jsonpParameterNames = jsonpParameterNames;, +	}, +, +, +		if (this.jsonpParameterNames != null) {]