[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExtendedServletRequestDataBinder.java, + * Copyright 2002-2012 the original author or authors., +import java.util.Map.Entry;, +, +	 * Merge URI variables into the property values to use for data binding., +		Map<String, String> uriVars = (Map<String, String>) request.getAttribute(attr);, +		if (uriVars != null) {, +			for (Entry<String, String> entry : uriVars.entrySet()) {, +				if (mpvs.contains(entry.getKey())) {, +					logger.warn("Skipping URI variable '" + entry.getKey(), +							+ "' since the request contains a bind value with the same name.");, +				}, +				else {, +					mpvs.addPropertyValue(entry.getKey(), entry.getValue());, +				}, +			}, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExtendedServletRequestDataBinder.java, + * Copyright 2002-2012 the original author or authors., +import java.util.Map.Entry;, +, +	 * Merge URI variables into the property values to use for data binding., +		Map<String, String> uriVars = (Map<String, String>) request.getAttribute(attr);, +		if (uriVars != null) {, +			for (Entry<String, String> entry : uriVars.entrySet()) {, +				if (mpvs.contains(entry.getKey())) {, +					logger.warn("Skipping URI variable '" + entry.getKey(), +							+ "' since the request contains a bind value with the same name.");, +				}, +				else {, +					mpvs.addPropertyValue(entry.getKey(), entry.getValue());, +				}, +			}, +		}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/ExtendedServletRequestDataBinderTests.java, +		assertEquals(35, target.getAge());]