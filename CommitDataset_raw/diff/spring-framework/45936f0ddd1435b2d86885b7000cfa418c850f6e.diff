[+++ b/spring-core/src/main/java/org/springframework/asm/ClassReader.java, +   * The String objects corresponding to the CONSTANT_Utf8 constant pool items. This cache avoids, +   * multiple parsing of a given CONSTANT_Utf8 constant pool item., +  private final String[] constantUtf8Values;, +, +  /**, +   * The ConstantDynamic objects corresponding to the CONSTANT_Dynamic constant pool items. This, +   * cache avoids multiple parsing of a given CONSTANT_Dynamic constant pool item., +   */, +  private final ConstantDynamic[] constantDynamicValues;, +    b = classFileBuffer;, +    constantUtf8Values = new String[constantPoolCount];, +    boolean hasConstantDynamic = false;, +    boolean hasConstantInvokeDynamic = false;, +          hasConstantDynamic = true;, +          break;, +        case Symbol.CONSTANT_INVOKE_DYNAMIC_TAG:, +          cpInfoSize = 5;, +          hasConstantInvokeDynamic = true;, +    maxStringLength = currentMaxStringLength;, +    header = currentCpInfoOffset;, +, +    // Allocate the cache of ConstantDynamic values, if there is at least one., +    constantDynamicValues = hasConstantDynamic ? new ConstantDynamic[constantPoolCount] : null;, +    bootstrapMethodOffsets =, +        (hasConstantDynamic | hasConstantInvokeDynamic), +            ? readBootstrapMethodsAttribute(currentMaxStringLength), +            : null;, +    String value = constantUtf8Values[constantPoolEntryIndex];, +    return constantUtf8Values[constantPoolEntryIndex] =, +        readUTF(cpInfoOffset + 2, readUnsignedShort(cpInfoOffset), charBuffer);, +    ConstantDynamic constantDynamic = constantDynamicValues[constantPoolEntryIndex];, +    return constantDynamicValues[constantPoolEntryIndex] =, +        new ConstantDynamic(name, descriptor, handle, bootstrapMethodArguments);]