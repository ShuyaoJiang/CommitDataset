[+++ b/spring-context/src/main/java/org/springframework/context/annotation/ComponentScanAnnotationParser.java, +	public ComponentScanAnnotationParser(ResourceLoader resourceLoader, Environment environment,, +				new ClassPathBeanDefinitionScanner(this.registry, componentScan.getBoolean("useDefaultFilters"));, +		scanner.setBeanNameGenerator(useInheritedGenerator ? this.beanNameGenerator :, +				BeanUtils.instantiateClass(generatorClass));, +		}, +		else {, +		return scanner.doScan(StringUtils.toStringArray(basePackages));, +, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ComponentScanAnnotationParser.java, +	public ComponentScanAnnotationParser(ResourceLoader resourceLoader, Environment environment,, +				new ClassPathBeanDefinitionScanner(this.registry, componentScan.getBoolean("useDefaultFilters"));, +		scanner.setBeanNameGenerator(useInheritedGenerator ? this.beanNameGenerator :, +				BeanUtils.instantiateClass(generatorClass));, +		}, +		else {, +		return scanner.doScan(StringUtils.toStringArray(basePackages));, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/RedirectView.java, +, +, +		sendRedirect(request, response, targetUrl, this.http10Compatible);, +	@SuppressWarnings("unchecked")]