[+++ b/org.springframework.context/src/main/java/org/springframework/format/support/FormattingConversionServiceFactoryBean.java, +import org.springframework.context.EmbeddedValueResolverAware;, +import org.springframework.util.StringValueResolver;, +		implements FactoryBean<FormattingConversionService>, EmbeddedValueResolverAware, InitializingBean {, +	private StringValueResolver embeddedValueResolver;, +, +	public void setEmbeddedValueResolver(StringValueResolver embeddedValueResolver) {, +		this.embeddedValueResolver = embeddedValueResolver;, +	}, +, +		this.conversionService.setEmbeddedValueResolver(this.embeddedValueResolver);, +++ b/org.springframework.context/src/main/java/org/springframework/format/support/FormattingConversionServiceFactoryBean.java, +import org.springframework.context.EmbeddedValueResolverAware;, +import org.springframework.util.StringValueResolver;, +		implements FactoryBean<FormattingConversionService>, EmbeddedValueResolverAware, InitializingBean {, +	private StringValueResolver embeddedValueResolver;, +, +	public void setEmbeddedValueResolver(StringValueResolver embeddedValueResolver) {, +		this.embeddedValueResolver = embeddedValueResolver;, +	}, +, +		this.conversionService.setEmbeddedValueResolver(this.embeddedValueResolver);, +++ b/org.springframework.context/src/test/java/org/springframework/format/support/FormattingConversionServiceTests.java, +import org.springframework.beans.factory.support.RootBeanDefinition;, +		formattingService.addFormatterForFieldAnnotation(new JodaDateTimeFormatAnnotationFormatterFactory());, +		formattingService.addFormatterForFieldAnnotation(new JodaDateTimeFormatAnnotationFormatterFactory());, +		doTestFormatFieldForAnnotation(ModelWithPlaceholders.class);, +	}, +, +	@Test, +	public void testFormatFieldForAnnotationWithPlaceholdersAndFactoryBean() throws Exception {, +		GenericApplicationContext context = new GenericApplicationContext();, +		PropertyPlaceholderConfigurer ppc = new PropertyPlaceholderConfigurer();, +		Properties props = new Properties();, +		props.setProperty("dateStyle", "S-");, +		props.setProperty("datePattern", "M/d/yy");, +		ppc.setProperties(props);, +		context.registerBeanDefinition("formattingService", new RootBeanDefinition(FormattingConversionServiceFactoryBean.class));, +		context.getBeanFactory().registerSingleton("ppc", ppc);, +		context.refresh();, +		formattingService = context.getBean("formattingService", FormattingConversionService.class);]