[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/MockMvc.java, +import javax.servlet.DispatcherType;, +		if (DispatcherType.ASYNC.equals(request.getDispatcherType()) &&, +				request.getAsyncContext() != null & !request.isAsyncStarted()) {, +, +			request.getAsyncContext().complete();, +		}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/MockMvc.java, +import javax.servlet.DispatcherType;, +		if (DispatcherType.ASYNC.equals(request.getDispatcherType()) &&, +				request.getAsyncContext() != null & !request.isAsyncStarted()) {, +, +			request.getAsyncContext().complete();, +		}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/request/MockMvcRequestBuilders.java, +import javax.servlet.DispatcherType;, +				request.setDispatcherType(DispatcherType.ASYNC);, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/MockMvc.java, +import javax.servlet.DispatcherType;, +		if (DispatcherType.ASYNC.equals(request.getDispatcherType()) &&, +				request.getAsyncContext() != null & !request.isAsyncStarted()) {, +, +			request.getAsyncContext().complete();, +		}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/request/MockMvcRequestBuilders.java, +import javax.servlet.DispatcherType;, +				request.setDispatcherType(DispatcherType.ASYNC);, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/context/AsyncControllerJavaConfigTests.java, +/*, + * Copyright 2002-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.test.web.servlet.samples.context;, +, +import java.util.Collections;, +import java.util.Map;, +import java.util.concurrent.Callable;, +, +import org.junit.Before;, +import org.junit.Test;, +import org.junit.runner.RunWith;, +import org.mockito.Mockito;, +, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.http.MediaType;, +import org.springframework.test.context.ContextConfiguration;, +import org.springframework.test.context.ContextHierarchy;, +import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;, +import org.springframework.test.context.web.WebAppConfiguration;, +import org.springframework.test.web.servlet.MockMvc;, +import org.springframework.test.web.servlet.MvcResult;, +import org.springframework.test.web.servlet.setup.MockMvcBuilders;, +import org.springframework.web.bind.annotation.RequestMapping;, +import org.springframework.web.bind.annotation.RestController;, +import org.springframework.web.context.WebApplicationContext;, +import org.springframework.web.context.request.async.CallableProcessingInterceptor;, +import org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer;, +import org.springframework.web.servlet.config.annotation.EnableWebMvc;, +import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;, +, +import static org.mockito.Matchers.any;, +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.asyncDispatch;, +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.request;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;, +, +/**, + * Tests with Java configuration., + *, + * @author Rossen Stoyanchev, + */, +@RunWith(SpringJUnit4ClassRunner.class), +@WebAppConfiguration, +@ContextHierarchy(@ContextConfiguration(classes = AsyncControllerJavaConfigTests.WebConfig.class)), +public class AsyncControllerJavaConfigTests {, +, +	@Autowired, +	private WebApplicationContext wac;, +, +	@Autowired, +	private CallableProcessingInterceptor callableInterceptor;, +]