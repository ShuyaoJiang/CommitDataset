[+++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/standalone/resultmatchers/HeaderAssertionTests.java, +import org.springframework.http.HttpHeaders;, +	private SimpleDateFormat dateFormat;, +, +		this.dateFormat = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz", Locale.US);, +		this.dateFormat.setTimeZone(TimeZone.getTimeZone("GMT"));, +	@Test, +	public void stringWithMatcherAndIncorrectResponseHeaderValue() throws Exception {, +		long secondLater = this.currentTime + 1000;, +		String expected = this.dateFormat.format(new Date(secondLater));, +		assertIncorrectResponseHeader(header().string(LAST_MODIFIED, expected), expected);, +		assertIncorrectResponseHeader(header().string(LAST_MODIFIED, equalTo(expected)), expected);, +		// Comparison by date uses HttpHeaders to format the date in the error message., +		HttpHeaders headers = new HttpHeaders();, +		headers.setDate("expected", secondLater);, +		assertIncorrectResponseHeader(header().dateValue(LAST_MODIFIED, secondLater), headers.getFirst("expected"));, +	}, +	private void assertIncorrectResponseHeader(ResultMatcher matcher, String expected) throws Exception {, +			assertMessageContains(err, expected);, +			assertMessageContains(err, this.now);, +		assertTrue("Failure message should contain [" + expected + "], actual is [" + error.getMessage() + "]",, +				error.getMessage().contains(expected));, +					.lastModified(this.timestamp)]