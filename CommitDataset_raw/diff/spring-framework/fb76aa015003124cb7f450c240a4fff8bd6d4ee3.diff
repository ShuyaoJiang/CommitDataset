[+++ b/spring-context-indexer/src/main/java/org/springframework/context/index/CandidateComponentsIndexer.java, +import java.util.EnumSet;, +import javax.lang.model.element.ElementKind;, +import javax.lang.model.element.Modifier;, +	private static final Set<ElementKind> TYPE_KINDS =, +			Collections.unmodifiableSet(EnumSet.of(ElementKind.CLASS,, +					ElementKind.INTERFACE));, +, +		addMetadataFor(element);, +		staticTypesIn(element.getEnclosedElements()).forEach(this::processElement);, +	}, +, +	private void addMetadataFor(Element element) {, +	private static List<TypeElement> staticTypesIn(Iterable<? extends Element> elements) {, +		List<TypeElement> list = new ArrayList<>();, +		for (Element e : elements) {, +			if (TYPE_KINDS.contains(e.getKind()), +					&& e.getModifiers().contains(Modifier.STATIC)), +				list.add(TypeElement.class.cast(e));, +		}, +		return list;, +	}, +, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/CandidateComponentsIndexer.java, +import java.util.EnumSet;, +import javax.lang.model.element.ElementKind;, +import javax.lang.model.element.Modifier;, +	private static final Set<ElementKind> TYPE_KINDS =, +			Collections.unmodifiableSet(EnumSet.of(ElementKind.CLASS,, +					ElementKind.INTERFACE));, +, +		addMetadataFor(element);, +		staticTypesIn(element.getEnclosedElements()).forEach(this::processElement);, +	}, +, +	private void addMetadataFor(Element element) {, +	private static List<TypeElement> staticTypesIn(Iterable<? extends Element> elements) {, +		List<TypeElement> list = new ArrayList<>();, +		for (Element e : elements) {, +			if (TYPE_KINDS.contains(e.getKind()), +					&& e.getModifiers().contains(Modifier.STATIC)), +				list.add(TypeElement.class.cast(e));, +		}, +		return list;, +	}, +, +++ b/spring-context-indexer/src/test/java/org/springframework/context/index/CandidateComponentsIndexerTests.java, +import org.springframework.context.index.sample.SampleNonStaticEmbedded;, +import org.springframework.context.index.sample.SampleEmbedded;, +import org.springframework.util.ClassUtils;, +	@Test, +	public void embeddedCandidatesAreDetected(), +			throws IOException, ClassNotFoundException {, +		// Validate nested type structure, +		String nestedType = "org.springframework.context.index.sample.SampleEmbedded.Another$AnotherPublicCandidate";, +		Class<?> type = ClassUtils.forName(nestedType, getClass().getClassLoader());, +		assertThat(type, sameInstance(SampleEmbedded.Another.AnotherPublicCandidate.class));, +, +		CandidateComponentsMetadata metadata = compile(SampleEmbedded.class);, +		assertThat(metadata, hasComponent(, +				SampleEmbedded.PublicCandidate.class, Component.class));, +		assertThat(metadata, hasComponent(nestedType, Component.class.getName()));, +		assertThat(metadata.getItems(), hasSize(2));, +	}, +, +	@Test, +	public void embeddedNonStaticCandidateAreIgnored() throws IOException {, +		CandidateComponentsMetadata metadata = compile(SampleNonStaticEmbedded.class);, +		assertThat(metadata.getItems(), hasSize(0));, +	}, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/CandidateComponentsIndexer.java, +import java.util.EnumSet;, +import javax.lang.model.element.ElementKind;, +import javax.lang.model.element.Modifier;, +	private static final Set<ElementKind> TYPE_KINDS =, +			Collections.unmodifiableSet(EnumSet.of(ElementKind.CLASS,, +					ElementKind.INTERFACE));, +, +		addMetadataFor(element);, +		staticTypesIn(element.getEnclosedElements()).forEach(this::processElement);, +	}, +, +	private void addMetadataFor(Element element) {, +	private static List<TypeElement> staticTypesIn(Iterable<? extends Element> elements) {, +		List<TypeElement> list = new ArrayList<>();, +		for (Element e : elements) {, +			if (TYPE_KINDS.contains(e.getKind()), +					&& e.getModifiers().contains(Modifier.STATIC)), +				list.add(TypeElement.class.cast(e));, +		}, +		return list;, +	}, +, +++ b/spring-context-indexer/src/test/java/org/springframework/context/index/CandidateComponentsIndexerTests.java, +import org.springframework.context.index.sample.SampleNonStaticEmbedded;, +import org.springframework.context.index.sample.SampleEmbedded;, +import org.springframework.util.ClassUtils;, +	@Test, +	public void embeddedCandidatesAreDetected(), +			throws IOException, ClassNotFoundException {]