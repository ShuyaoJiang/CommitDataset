[+++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/HibernateOperations.java, +	List<?> find(String queryString, Object... values) throws DataAccessException;, +	List<?> findByNamedParam(String queryString, String paramName, Object value) throws DataAccessException;, +	List<?> findByNamedParam(String queryString, String[] paramNames, Object[] values) throws DataAccessException;, +	List<?> findByValueBean(String queryString, Object valueBean) throws DataAccessException;, +	List<?> findByNamedQuery(String queryName, Object... values) throws DataAccessException;, +	List<?> findByNamedQueryAndNamedParam(String queryName, String paramName, Object value), +	List<?> findByNamedQueryAndNamedParam(String queryName, String[] paramNames, Object[] values), +	List<?> findByNamedQueryAndValueBean(String queryName, Object valueBean) throws DataAccessException;, +	List<?> findByCriteria(DetachedCriteria criteria) throws DataAccessException;, +	List<?> findByCriteria(DetachedCriteria criteria, int firstResult, int maxResults) throws DataAccessException;, +	<T> List<T> findByExample(T exampleEntity) throws DataAccessException;, +	<T> List<T> findByExample(String entityName, T exampleEntity) throws DataAccessException;, +	<T> List<T> findByExample(T exampleEntity, int firstResult, int maxResults) throws DataAccessException;, +	<T> List<T> findByExample(String entityName, T exampleEntity, int firstResult, int maxResults), +	Iterator<?> iterate(String queryString, Object... values) throws DataAccessException;, +++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/HibernateOperations.java, +	List<?> find(String queryString, Object... values) throws DataAccessException;, +	List<?> findByNamedParam(String queryString, String paramName, Object value) throws DataAccessException;, +	List<?> findByNamedParam(String queryString, String[] paramNames, Object[] values) throws DataAccessException;, +	List<?> findByValueBean(String queryString, Object valueBean) throws DataAccessException;, +	List<?> findByNamedQuery(String queryName, Object... values) throws DataAccessException;, +	List<?> findByNamedQueryAndNamedParam(String queryName, String paramName, Object value), +	List<?> findByNamedQueryAndNamedParam(String queryName, String[] paramNames, Object[] values), +	List<?> findByNamedQueryAndValueBean(String queryName, Object valueBean) throws DataAccessException;, +	List<?> findByCriteria(DetachedCriteria criteria) throws DataAccessException;, +	List<?> findByCriteria(DetachedCriteria criteria, int firstResult, int maxResults) throws DataAccessException;, +	<T> List<T> findByExample(T exampleEntity) throws DataAccessException;, +	<T> List<T> findByExample(String entityName, T exampleEntity) throws DataAccessException;, +	<T> List<T> findByExample(T exampleEntity, int firstResult, int maxResults) throws DataAccessException;, +	<T> List<T> findByExample(String entityName, T exampleEntity, int firstResult, int maxResults), +	Iterator<?> iterate(String queryString, Object... values) throws DataAccessException;, +++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/HibernateTemplate.java, +			@SuppressWarnings("unchecked"), +			@SuppressWarnings("unchecked"), +	public List<?> find(final String queryString, final Object... values) throws DataAccessException {, +		return executeWithNativeSession(new HibernateCallback<List<?>>() {, +			public List<?> doInHibernate(Session session) throws HibernateException {, +	public List<?> findByNamedParam(String queryString, String paramName, Object value), +	public List<?> findByNamedParam(final String queryString, final String[] paramNames, final Object[] values), +		return executeWithNativeSession(new HibernateCallback<List<?>>() {, +			public List<?> doInHibernate(Session session) throws HibernateException {, +	public List<?> findByValueBean(final String queryString, final Object valueBean), +		return executeWithNativeSession(new HibernateCallback<List<?>>() {, +			public List<?> doInHibernate(Session session) throws HibernateException {, +	public List<?> findByNamedQuery(final String queryName, final Object... values) throws DataAccessException {, +		return executeWithNativeSession(new HibernateCallback<List<?>>() {, +			public List<?> doInHibernate(Session session) throws HibernateException {, +	public List<?> findByNamedQueryAndNamedParam(String queryName, String paramName, Object value), +	public List<?> findByNamedQueryAndNamedParam(, +		return executeWithNativeSession(new HibernateCallback<List<?>>() {, +			public List<?> doInHibernate(Session session) throws HibernateException {, +	public List<?> findByNamedQueryAndValueBean(final String queryName, final Object valueBean), +		return executeWithNativeSession(new HibernateCallback<List<?>>() {, +			public List<?> doInHibernate(Session session) throws HibernateException {, +	public List<?> findByCriteria(DetachedCriteria criteria) throws DataAccessException {, +	public List<?> findByCriteria(final DetachedCriteria criteria, final int firstResult, final int maxResults), +		return executeWithNativeSession(new HibernateCallback<List<?>>() {, +			public List<?> doInHibernate(Session session) throws HibernateException {, +	public <T> List<T> findByExample(T exampleEntity) throws DataAccessException {, +	public <T> List<T> findByExample(String entityName, T exampleEntity) throws DataAccessException {, +	public <T> List<T> findByExample(T exampleEntity, int firstResult, int maxResults) throws DataAccessException {, +	public <T> List<T> findByExample(, +			final String entityName, final T exampleEntity, final int firstResult, final int maxResults), +		return executeWithNativeSession(new HibernateCallback<List<T>>() {, +			public List<T> doInHibernate(Session session) throws HibernateException {, +	public Iterator<?> iterate(final String queryString, final Object... values) throws DataAccessException {, +		return executeWithNativeSession(new HibernateCallback<Iterator<?>>() {, +			public Iterator<?> doInHibernate(Session session) throws HibernateException {, +	 * @throws HibernateException if thrown by the Query object, +++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/HibernateOperations.java, +	List<?> find(String queryString, Object... values) throws DataAccessException;, +	List<?> findByNamedParam(String queryString, String paramName, Object value) throws DataAccessException;, +	List<?> findByNamedParam(String queryString, String[] paramNames, Object[] values) throws DataAccessException;, +	List<?> findByValueBean(String queryString, Object valueBean) throws DataAccessException;, +	List<?> findByNamedQuery(String queryName, Object... values) throws DataAccessException;, +	List<?> findByNamedQueryAndNamedParam(String queryName, String paramName, Object value), +	List<?> findByNamedQueryAndNamedParam(String queryName, String[] paramNames, Object[] values), +	List<?> findByNamedQueryAndValueBean(String queryName, Object valueBean) throws DataAccessException;, +	List<?> findByCriteria(DetachedCriteria criteria) throws DataAccessException;, +	List<?> findByCriteria(DetachedCriteria criteria, int firstResult, int maxResults) throws DataAccessException;, +	<T> List<T> findByExample(T exampleEntity) throws DataAccessException;, +	<T> List<T> findByExample(String entityName, T exampleEntity) throws DataAccessException;, +	<T> List<T> findByExample(T exampleEntity, int firstResult, int maxResults) throws DataAccessException;, +	<T> List<T> findByExample(String entityName, T exampleEntity, int firstResult, int maxResults), +	Iterator<?> iterate(String queryString, Object... values) throws DataAccessException;, +++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/HibernateTemplate.java, +			@SuppressWarnings("unchecked"), +			@SuppressWarnings("unchecked"), +	public List<?> find(final String queryString, final Object... values) throws DataAccessException {, +		return executeWithNativeSession(new HibernateCallback<List<?>>() {, +			public List<?> doInHibernate(Session session) throws HibernateException {, +	public List<?> findByNamedParam(String queryString, String paramName, Object value), +	public List<?> findByNamedParam(final String queryString, final String[] paramNames, final Object[] values), +		return executeWithNativeSession(new HibernateCallback<List<?>>() {, +			public List<?> doInHibernate(Session session) throws HibernateException {, +	public List<?> findByValueBean(final String queryString, final Object valueBean), +		return executeWithNativeSession(new HibernateCallback<List<?>>() {, +			public List<?> doInHibernate(Session session) throws HibernateException {, +	public List<?> findByNamedQuery(final String queryName, final Object... values) throws DataAccessException {]