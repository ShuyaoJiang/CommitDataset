[+++ b/org.springframework.oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +import org.springframework.core.annotation.AnnotationUtils;, +		else if (AnnotationUtils.findAnnotation(clazz, XmlRootElement.class) != null) {, +++ b/org.springframework.oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +import org.springframework.core.annotation.AnnotationUtils;, +		else if (AnnotationUtils.findAnnotation(clazz, XmlRootElement.class) != null) {, +++ b/org.springframework.oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2MarshallerTests.java, +, +	@Test, +	public void subclass() throws Exception {, +		assertTrue("Flights subclass is not supported", marshaller.supports(FlightsSubclass.class));, +		FlightType flight = new FlightType();, +		flight.setNumber(42L);, +		FlightsSubclass flights = new FlightsSubclass();, +		flights.getFlight().add(flight);, +		StringWriter writer = new StringWriter();, +		marshaller.marshal(flights, new StreamResult(writer));, +		assertXMLEqual("Marshaller writes invalid StreamResult", EXPECTED_STRING, writer.toString());, +	}, +, +	private static class FlightsSubclass extends Flights {, +, +	}]