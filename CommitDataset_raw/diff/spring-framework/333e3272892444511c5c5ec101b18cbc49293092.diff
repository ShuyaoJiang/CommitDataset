[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/Aware.java, + * Copyright 2002-2018 the original author or authors., + * A marker superinterface indicating that a bean is eligible to be notified by the, + * Spring container of a particular framework object through a callback-style method., + * The actual method signature is determined by individual subinterfaces but should, + * typically consist of just one void-returning method that accepts a single argument., + * <p>Note that merely implementing {@link Aware} provides no default functionality., + * Rather, processing must be done explicitly, for example in a, + * {@link org.springframework.beans.factory.config.BeanPostProcessor}., + * for an example of processing specific {@code *Aware} interface callbacks., + * @author Juergen Hoeller, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/Aware.java, + * Copyright 2002-2018 the original author or authors., + * A marker superinterface indicating that a bean is eligible to be notified by the, + * Spring container of a particular framework object through a callback-style method., + * The actual method signature is determined by individual subinterfaces but should, + * typically consist of just one void-returning method that accepts a single argument., + * <p>Note that merely implementing {@link Aware} provides no default functionality., + * Rather, processing must be done explicitly, for example in a, + * {@link org.springframework.beans.factory.config.BeanPostProcessor}., + * for an example of processing specific {@code *Aware} interface callbacks., + * @author Juergen Hoeller, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/Autowired.java, + * Marks a constructor, field, setter method or config method as to be autowired by, + * Spring's dependency injection facilities., + * <p>Only one constructor (at max) of any given bean class may declare this annotation, + * with the 'required' parameter set to {@code true}, indicating <i>the</i> constructor, + * to autowire when used as a Spring bean. If multiple <i>non-required</i> constructors, + * declare the annotation, they will be considered as candidates for autowiring., + * The constructor with the greatest number of dependencies that can be satisfied by, + * matching beans in the Spring container will be chosen. If none of the candidates, + * can be satisfied, then a primary/default constructor (if present) will be used., + * If a class only declares a single constructor to begin with, it will always be used,, + * even if not annotated. An annotated constructor does not have to be public., + * <p>Fields are injected right after construction of a bean, before any config methods, + * are invoked. Such a config field does not have to be public., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/Aware.java, + * Copyright 2002-2018 the original author or authors., + * A marker superinterface indicating that a bean is eligible to be notified by the, + * Spring container of a particular framework object through a callback-style method., + * The actual method signature is determined by individual subinterfaces but should, + * typically consist of just one void-returning method that accepts a single argument., + * <p>Note that merely implementing {@link Aware} provides no default functionality., + * Rather, processing must be done explicitly, for example in a, + * {@link org.springframework.beans.factory.config.BeanPostProcessor}., + * for an example of processing specific {@code *Aware} interface callbacks., + * @author Juergen Hoeller, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/Autowired.java, + * Marks a constructor, field, setter method or config method as to be autowired by, + * Spring's dependency injection facilities., + * <p>Only one constructor (at max) of any given bean class may declare this annotation, + * with the 'required' parameter set to {@code true}, indicating <i>the</i> constructor, + * to autowire when used as a Spring bean. If multiple <i>non-required</i> constructors, + * declare the annotation, they will be considered as candidates for autowiring., + * The constructor with the greatest number of dependencies that can be satisfied by, + * matching beans in the Spring container will be chosen. If none of the candidates, + * can be satisfied, then a primary/default constructor (if present) will be used., + * If a class only declares a single constructor to begin with, it will always be used,, + * even if not annotated. An annotated constructor does not have to be public., + * <p>Fields are injected right after construction of a bean, before any config methods, + * are invoked. Such a config field does not have to be public., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, + * <p>Only one constructor (at max) of any given bean class may declare this annotation, + * with the 'required' parameter set to {@code true}, indicating <i>the</i> constructor, + * to autowire when used as a Spring bean. If multiple <i>non-required</i> constructors, + * declare the annotation, they will be considered as candidates for autowiring., + * The constructor with the greatest number of dependencies that can be satisfied by, + * matching beans in the Spring container will be chosen. If none of the candidates, + * can be satisfied, then a primary/default constructor (if present) will be used., + * If a class only declares a single constructor to begin with, it will always be used,, + * even if not annotated. An annotated constructor does not have to be public., +	 * <p>The default autowired annotation type is the Spring-provided {@link Autowired}, +	 * annotation, as well as {@link Value}., +	 * (non-Spring-specific) annotation type to indicate that a member is supposed, +	 * to be autowired., +	 * <p>The default autowired annotation type is the Spring-provided {@link Autowired}, +	 * annotation, as well as {@link Value}., +	 * (non-Spring-specific) annotation types to indicate that a member is supposed, +	 * to be autowired., +	 * Set the name of a parameter of the annotation that specifies whether it is required., +	 * <p>For example if using 'required=true' (the default), this value should be, +	 * {@code true}; but if using 'optional=false', this value should be {@code false}.]