[+++ b/spring-context/src/test/java/org/springframework/context/annotation/ConfigurationClassPostProcessorTests.java, +import org.springframework.beans.factory.ObjectProvider;, +	@Test  // SPR-15384, +	@Test  // SPR-16734, +	public void innerConfigurationClassesProcessedInCorrectOrder() {, +		beanFactory.registerBeanDefinition("config", new RootBeanDefinition(ConfigWithOrderedInnerClasses.class));, +		ConfigurationClassPostProcessor pp = new ConfigurationClassPostProcessor();, +		pp.postProcessBeanFactory(beanFactory);, +		beanFactory.addBeanPostProcessor(new AutowiredAnnotationBeanPostProcessor());, +, +		Foo foo = beanFactory.getBean(Foo.class);, +		assertTrue(foo instanceof ExtendedFoo);, +		Bar bar = beanFactory.getBean(Bar.class);, +		assertSame(foo, bar.foo);, +	}, +, +	@Configuration, +	static class ConfigWithOrderedInnerClasses {, +, +		@Configuration, +		@Order(1), +		class SingletonBeanConfig {, +, +			public SingletonBeanConfig(ConfigWithOrderedInnerClasses other) {, +			}, +, +			public @Bean Foo foo() {, +				return new Foo();, +			}, +, +			public @Bean Bar bar() {, +				return new Bar(foo());, +			}, +		}, +, +		@Configuration, +		@Order(2), +		class OverridingSingletonBeanConfig {, +, +			public OverridingSingletonBeanConfig(ObjectProvider<SingletonBeanConfig> other) {, +				other.getObject();, +			}, +, +			public @Bean ExtendedFoo foo() {, +				return new ExtendedFoo();, +			}, +, +			public @Bean Bar bar() {, +				return new Bar(foo());, +			}, +		}, +	}, +]