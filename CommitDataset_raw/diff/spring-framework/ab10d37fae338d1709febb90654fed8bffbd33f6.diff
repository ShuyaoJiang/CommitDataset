[+++ b/spring-framework-reference/src/validation.xml, +				Use the <classname>LocalValidatorFactoryBean</classname> to configure a default JSR-303 Validator as a Spring bean:					, +, +			<tip>, +				<title>Using LocalValidatorFactoryBean programmatically</title>, +				<para>If you choose to use <classname>LocalValidatorFactoryBean</classname>, +				programmatically – i.e., by instantiating it directly – make sure, +				you call its <literal>afterPropertiesSet()</literal> method. Otherwise, the, +				<classname>LocalValidatorFactoryBean</classname> will not be, +				initialized properly.</para>, +			</tip>, +, +					<classname>LocalValidatorFactoryBean</classname> implements both <code>javax.validation.Validator</code> and <code>org.springframework.validation.Validator</code>., +				<programlisting language="java">import javax.validation.Validator;, +					By default, the <classname>LocalValidatorFactoryBean</classname> configures a <code>SpringConstraintValidatorFactory</code> that uses Spring to create ConstraintValidator instances., +					The default <classname>LocalValidatorFactoryBean</classname> configuration should prove sufficient for most cases., +					See the JavaDocs of <classname>LocalValidatorFactoryBean</classname> more information on these options., +				Any validation Errors are automatically added to the binder's BindingResult., +			<programlisting language="java">Foo target = new Foo();, +<lineannotation>// bind to the target object</lineannotation>, +<lineannotation>// validate the target object</lineannotation>, +<lineannotation>// get BindingResult that includes any validation errors</lineannotation>, +BindingResult results = binder.getBindingResult();, +				<programlisting language="java">@Controller, +    public void processFoo(<emphasis role="bold">@Valid</emphasis> Foo foo) { <lineannotation>/* ... */</lineannotation> }, +					To configure such a general purpose Validator for use by Spring MVC, simply inject a <classname>LocalValidatorFactoryBean</classname> reference into the <code>WebBindingInitializer</code>., +					Any ConstaintViolations will automatically be exposed as errors in the BindingResult renderable by standard Spring MVC form tags.]