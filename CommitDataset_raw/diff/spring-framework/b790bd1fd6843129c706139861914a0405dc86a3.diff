[+++ b/spring-core/src/main/java/org/springframework/util/LinkedCaseInsensitiveMap.java, + * Copyright 2002-2018 the original author or authors., +import java.util.function.Function;, +	@Nullable, +	@Nullable, +		V oldKeyValue = null;, +			oldKeyValue = this.targetMap.remove(oldKey);, +		V oldValue = this.targetMap.put(key, value);, +		return (oldKeyValue != null ? oldKeyValue : oldValue);, +	public V putIfAbsent(String key, @Nullable V value) {, +		String oldKey = this.caseInsensitiveKeys.putIfAbsent(convertKey(key), key);, +		if (oldKey != null) {, +			return this.targetMap.get(oldKey);, +		}, +		return this.targetMap.putIfAbsent(key, value);, +	}, +, +	@Override, +	@Nullable, +	public V computeIfAbsent(String key, Function<? super String, ? extends V> mappingFunction) {, +		String oldKey = this.caseInsensitiveKeys.putIfAbsent(convertKey(key), key);, +		if (oldKey != null) {, +			return this.targetMap.get(oldKey);, +		}, +		return this.targetMap.computeIfAbsent(key, mappingFunction);, +	}, +, +	@Override, +	@Nullable, +++ b/spring-core/src/main/java/org/springframework/util/LinkedCaseInsensitiveMap.java, + * Copyright 2002-2018 the original author or authors., +import java.util.function.Function;, +	@Nullable, +	@Nullable, +		V oldKeyValue = null;, +			oldKeyValue = this.targetMap.remove(oldKey);, +		V oldValue = this.targetMap.put(key, value);, +		return (oldKeyValue != null ? oldKeyValue : oldValue);, +	public V putIfAbsent(String key, @Nullable V value) {, +		String oldKey = this.caseInsensitiveKeys.putIfAbsent(convertKey(key), key);, +		if (oldKey != null) {, +			return this.targetMap.get(oldKey);, +		}, +		return this.targetMap.putIfAbsent(key, value);, +	}, +, +	@Override, +	@Nullable, +	public V computeIfAbsent(String key, Function<? super String, ? extends V> mappingFunction) {, +		String oldKey = this.caseInsensitiveKeys.putIfAbsent(convertKey(key), key);, +		if (oldKey != null) {, +			return this.targetMap.get(oldKey);, +		}, +		return this.targetMap.computeIfAbsent(key, mappingFunction);, +	}, +, +	@Override, +	@Nullable, +++ b/spring-core/src/test/java/org/springframework/util/LinkedCaseInsensitiveMapTests.java, + * Copyright 2002-2018 the original author or authors., +		assertNull(map.put("key", "value1"));, +		assertEquals("value1", map.put("key", "value2"));, +		assertEquals("value2", map.put("key", "value3"));, +		assertNull(map.put("key", "value1"));, +		assertEquals("value1", map.put("KEY", "value2"));, +		assertEquals("value2", map.put("Key", "value3"));, +		assertNull(map.put("key", "value1"));, +		assertEquals("value1", map.put("KEY", "value2"));, +		assertEquals("value2", map.put("Key", "value3"));, +		assertNull(map.put("key", null));, +		assertNull(map.put("KEY", null));, +		assertNull(map.put("Key", null));, +		assertNull(map.putIfAbsent("key", "value1"));, +		assertEquals("value1", map.putIfAbsent("KEY", "value2"));, +		assertEquals("value1", map.put("Key", "value3"));, +		assertNull(map.put("key", "value1"));]