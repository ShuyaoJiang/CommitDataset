[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java, + * Copyright 2002-2015 the original author or authors., +			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java, + * Copyright 2002-2015 the original author or authors., +			exceptionHandlerMethod.invokeAndHandle(webRequest, mavContainer, exception, handlerMethod);, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolverTests.java, + * Copyright 2002-2015 the original author or authors., +	// SPR-12605, +, +	@Test, +	public void resolveExceptionWithHandlerMethodArg() throws Exception {, +		AnnotationConfigApplicationContext cxt = new AnnotationConfigApplicationContext(MyConfig.class);, +		this.resolver.setApplicationContext(cxt);, +		this.resolver.afterPropertiesSet();, +, +		ArrayIndexOutOfBoundsException ex = new ArrayIndexOutOfBoundsException();, +		HandlerMethod handlerMethod = new HandlerMethod(new ResponseBodyController(), "handle");, +		ModelAndView mav = this.resolver.resolveException(this.request, this.response, handlerMethod, ex);, +, +		assertNotNull("Exception was not handled", mav);, +		assertTrue(mav.isEmpty());, +		assertEquals("HandlerMethod: handle", this.response.getContentAsString());, +	}, +, +, +		@ExceptionHandler(ArrayIndexOutOfBoundsException.class), +		@ResponseBody, +		public String handleWithHandlerMethod(HandlerMethod handlerMethod) {, +			return "HandlerMethod: " + handlerMethod.getMethod().getName();, +		}]