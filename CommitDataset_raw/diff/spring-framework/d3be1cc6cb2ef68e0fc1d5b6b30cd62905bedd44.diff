[+++ b/build.gradle, +		maven { url 'https://repo.spring.io/plugins-release' }, +		classpath('io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'), +		classpath('org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.16'), +	id 'io.spring.dependency-management' version '1.0.5.RELEASE' apply false, +	id 'org.jetbrains.kotlin.jvm' version '1.2.60' apply false, +	id 'org.jetbrains.dokka' version '0.9.17', +	id 'org.asciidoctor.convert' version '1.5.7', +	aspectjVersion       = '1.9.1', +	freemarkerVersion    = '2.3.28', +	groovyVersion        = '2.5.2', +	hsqldbVersion        = '2.4.1', +	jackson2Version      = '2.9.6', +	jettyVersion         = '9.4.12.RC1', +	kotlinVersion        = '1.2.60', +	log4jVersion         = '2.11.1', +	nettyVersion         = '4.1.28.Final', +	reactorVersion       = 'Californium-M1', +	rxjavaVersion        = '1.3.8', +	rxjavaAdapterVersion = '1.2.1', +	rxjava2Version       = '2.2.0', +	slf4jVersion         = '1.7.25'	  // spring-jcl + consistent 3rd party deps, +	tiles3Version        = '3.0.8', +	tomcatVersion        = '9.0.10', +	undertowVersion      = '2.0.12.Final', +		exclude group: 'org.slf4j', module: 'jcl-over-slf4j', +	group = 'org.springframework', +	apply plugin: 'propdeps', +	apply plugin: 'java', +	apply plugin: 'test-source-set-dependencies', +	apply plugin: 'io.spring.dependency-management', +	apply plugin: 'checkstyle', +		toolVersion = '8.10.1', +		configDir = rootProject.file('src/checkstyle'), +	apply plugin: 'kotlin', +			jvmTarget = '1.8', +			freeCompilerArgs = ['-Xjsr305=strict'], +			apiVersion = '1.1', +			languageVersion = '1.1', +			jvmTarget = '1.8', +			freeCompilerArgs = ['-Xjsr305=strict'], +			['-Xlint:serial', '-Xlint:cast', '-Xlint:classfile', '-Xlint:dep-ann',, +			 '-Xlint:divzero', '-Xlint:empty', '-Xlint:finally', '-Xlint:overrides',, +			 '-Xlint:path', '-Xlint:processing', '-Xlint:static', '-Xlint:try', '-Xlint:-options'], +			['-Xlint:varargs', '-Xlint:fallthrough', '-Xlint:rawtypes',, +			 '-Xlint:deprecation', '-Xlint:unchecked', '-Werror'], +			['-Xlint:-varargs', '-Xlint:-fallthrough', '-Xlint:-rawtypes',, +			 '-Xlint:-deprecation', '-Xlint:-unchecked'], +		options.compilerArgs += '-parameters', +		systemProperty('java.awt.headless', 'true'), +		systemProperty('testGroups', project.properties.get('testGroups')), +		include(['**/*Tests.class', '**/*Test.class']), +		exclude(['**/Abstract*.class', '**/*$*']), +		maven { url 'https://repo.spring.io/libs-release' }, +		maven { url 'https://repo.spring.io/milestone' }  // for Reactor, +		testCompile('org.mockito:mockito-core:2.21.0') {, +		testCompile('com.nhaarman:mockito-kotlin:1.6.0') {, +		testCompile('org.hamcrest:hamcrest-all:1.3'), +		compileOnly('com.google.code.findbugs:jsr305:3.0.2'), +		testCompileOnly('com.google.code.findbugs:jsr305:3.0.2'), +		checkstyle('io.spring.javaformat:spring-javaformat-checkstyle:0.0.5'), +		'http://docs.oracle.com/javase/8/docs/api/',, +		'http://docs.oracle.com/javaee/7/api/',, +		'http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/',  // CommonJ, +		'http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/',, +		'http://glassfish.java.net/nonav/docs/v3/api/',, +		'http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/',, +		'http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/',, +		'http://tiles.apache.org/tiles-request/apidocs/',, +		'http://tiles.apache.org/framework/apidocs/',, +		'http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/',, +		'http://ehcache.org/apidocs/2.10.4',, +		'http://quartz-scheduler.org/api/2.2.1/',, +		'http://fasterxml.github.io/jackson-core/javadoc/2.8/',, +		'http://fasterxml.github.io/jackson-databind/javadoc/2.8/',, +		'http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.8/',, +		'http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/', +configure(subprojects - project(':spring-build-src')) { subproject ->, +		manifest.attributes['Implementation-Title'] = subproject.name, +		manifest.attributes['Implementation-Version'] = subproject.version, +		manifest.attributes['Automatic-Module-Name'] = subproject.name.replace('-', '.')  // for Jigsaw, +		manifest.attributes['Created-By'] =, +				"${System.getProperty('java.version')} (${System.getProperty('java.specification.vendor')})", +			include 'license.txt', +			include 'notice.txt', +			into 'META-INF', +			expand(copyright: new Date().format('yyyy'), version: project.version), +		description = 'Generates project-level javadoc for use in -javadoc jar', +		classifier = 'javadoc', +	description = 'Spring Framework', +	apply plugin: 'groovy', +		testCompile(project(':spring-aop')), +		testCompile(project(':spring-beans')), +		testCompile(project(':spring-context')), +		testCompile(project(':spring-core')), +		testCompile(project(':spring-expression')), +		testCompile(project(':spring-jdbc')), +		testCompile(project(':spring-orm')), +		testCompile(project(':spring-test')), +		testCompile(project(':spring-tx'))]