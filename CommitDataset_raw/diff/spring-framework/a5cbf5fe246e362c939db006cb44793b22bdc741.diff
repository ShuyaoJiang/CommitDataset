[+++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * Copyright 2002-2018 the original author or authors., +		BeanDefinition[] beanDefArray = beanDefs.toArray(new BeanDefinition[0]);, +		BeanReference[] beanRefArray = beanRefs.toArray(new BeanReference[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * Copyright 2002-2018 the original author or authors., +		BeanDefinition[] beanDefArray = beanDefs.toArray(new BeanDefinition[0]);, +		BeanReference[] beanRefArray = beanRefs.toArray(new BeanReference[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AdvisedSupport.java, + * Copyright 2002-2018 the original author or authors., +		return ClassUtils.toClassArray(this.interfaces);, +		this.advisorArray = this.advisors.toArray(new Advisor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * Copyright 2002-2018 the original author or authors., +		BeanDefinition[] beanDefArray = beanDefs.toArray(new BeanDefinition[0]);, +		BeanReference[] beanRefArray = beanRefs.toArray(new BeanReference[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AdvisedSupport.java, + * Copyright 2002-2018 the original author or authors., +		return ClassUtils.toClassArray(this.interfaces);, +		this.advisorArray = this.advisors.toArray(new Advisor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry.java, + * Copyright 2002-2018 the original author or authors., +		return interceptors.toArray(new MethodInterceptor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * Copyright 2002-2018 the original author or authors., +		BeanDefinition[] beanDefArray = beanDefs.toArray(new BeanDefinition[0]);, +		BeanReference[] beanRefArray = beanRefs.toArray(new BeanReference[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AdvisedSupport.java, + * Copyright 2002-2018 the original author or authors., +		return ClassUtils.toClassArray(this.interfaces);, +		this.advisorArray = this.advisors.toArray(new Advisor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry.java, + * Copyright 2002-2018 the original author or authors., +		return interceptors.toArray(new MethodInterceptor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +		return advisors.toArray(new Advisor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * Copyright 2002-2018 the original author or authors., +		BeanDefinition[] beanDefArray = beanDefs.toArray(new BeanDefinition[0]);, +		BeanReference[] beanRefArray = beanRefs.toArray(new BeanReference[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AdvisedSupport.java, + * Copyright 2002-2018 the original author or authors., +		return ClassUtils.toClassArray(this.interfaces);, +		this.advisorArray = this.advisors.toArray(new Advisor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry.java, + * Copyright 2002-2018 the original author or authors., +		return interceptors.toArray(new MethodInterceptor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +		return advisors.toArray(new Advisor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/support/DefaultIntroductionAdvisor.java, + * Copyright 2002-2018 the original author or authors., +		return ClassUtils.toClassArray(this.interfaces);, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * Copyright 2002-2018 the original author or authors., +		BeanDefinition[] beanDefArray = beanDefs.toArray(new BeanDefinition[0]);, +		BeanReference[] beanRefArray = beanRefs.toArray(new BeanReference[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AdvisedSupport.java, + * Copyright 2002-2018 the original author or authors., +		return ClassUtils.toClassArray(this.interfaces);, +		this.advisorArray = this.advisors.toArray(new Advisor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry.java, + * Copyright 2002-2018 the original author or authors., +		return interceptors.toArray(new MethodInterceptor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +		return advisors.toArray(new Advisor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/support/DefaultIntroductionAdvisor.java, + * Copyright 2002-2018 the original author or authors., +		return ClassUtils.toClassArray(this.interfaces);, +++ b/spring-aop/src/main/java/org/springframework/aop/support/IntroductionInfoSupport.java, +		return ClassUtils.toClassArray(this.publishedInterfaces);, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * Copyright 2002-2018 the original author or authors., +		BeanDefinition[] beanDefArray = beanDefs.toArray(new BeanDefinition[0]);, +		BeanReference[] beanRefArray = beanRefs.toArray(new BeanReference[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AdvisedSupport.java, + * Copyright 2002-2018 the original author or authors., +		return ClassUtils.toClassArray(this.interfaces);, +		this.advisorArray = this.advisors.toArray(new Advisor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry.java, + * Copyright 2002-2018 the original author or authors., +		return interceptors.toArray(new MethodInterceptor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +		return advisors.toArray(new Advisor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/support/DefaultIntroductionAdvisor.java, + * Copyright 2002-2018 the original author or authors., +		return ClassUtils.toClassArray(this.interfaces);, +++ b/spring-aop/src/main/java/org/springframework/aop/support/IntroductionInfoSupport.java, +		return ClassUtils.toClassArray(this.publishedInterfaces);, +++ b/spring-beans/src/main/java/org/springframework/beans/AbstractPropertyAccessor.java, + * Copyright 2002-2018 the original author or authors., +			PropertyAccessException[] paeArray = propertyAccessExceptions.toArray(new PropertyAccessException[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/config/ConfigBeanDefinitionParser.java, + * Copyright 2002-2018 the original author or authors., +		BeanDefinition[] beanDefArray = beanDefs.toArray(new BeanDefinition[0]);, +		BeanReference[] beanRefArray = beanRefs.toArray(new BeanReference[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AdvisedSupport.java, + * Copyright 2002-2018 the original author or authors., +		return ClassUtils.toClassArray(this.interfaces);, +		this.advisorArray = this.advisors.toArray(new Advisor[0]);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry.java]