[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.jdbc.support.JdbcUtils;, + * @author Juergen Hoeller, +			if (logger.isWarnEnabled()) {, +				logger.warn("Error retrieving 'DatabaseMetaData.getGeneratedKeys': " + ex.getMessage());, +			}, +				if (logger.isDebugEnabled()) {, +				}, +					if (logger.isDebugEnabled()) {, +					}, +			if (logger.isWarnEnabled()) {, +				logger.warn("Error retrieving 'DatabaseMetaData.getDatabaseProductName': " + ex.getMessage());, +		}, +, +			if (logger.isWarnEnabled()) {, +				logger.warn("Error retrieving 'DatabaseMetaData.getDatabaseProductVersion': " + ex.getMessage());, +		}, +, +			if (logger.isWarnEnabled()) {, +				logger.warn("Error retrieving 'DatabaseMetaData.storesUpperCaseIdentifiers': " + ex.getMessage());, +		}, +, +			if (logger.isWarnEnabled()) {, +				logger.warn("Error retrieving 'DatabaseMetaData.storesLowerCaseIdentifiers': " + ex.getMessage());, +			}, +		return this.userName;, +	private void locateTableAndProcessMetaData(, +			DatabaseMetaData databaseMetaData, String catalogName, String schemaName, String tableName) {, +					catalogNameToUse(catalogName), schemaNameToUse(schemaName), tableNameToUse(tableName), null);, +			if (logger.isWarnEnabled()) {, +				logger.warn("Error while accessing table meta data results: " + ex.getMessage());, +			}, +			JdbcUtils.closeResultSet(tables);, +, +		if (tableMeta.isEmpty()) {, +			if (logger.isWarnEnabled()) {, +				logger.warn("Unable to locate table meta data for '" + tableName + "': column names must be provided");, +		else {, +			processTableColumns(databaseMetaData, findTableMetaData(schemaName, tableName, tableMeta));, +		}, +	private TableMetaData findTableMetaData(String schemaName, String tableName, Map<String, TableMetaData> tableMeta) {, +		if (schemaName != null) {, +			TableMetaData tmd = tableMeta.get(schemaName.toUpperCase());, +			if (tmd == null) {, +				throw new DataAccessResourceFailureException("Unable to locate table meta data for '" +, +						tableName + "' in the '" + schemaName + "' schema");, +			}, +			return tmd;, +		}, +		else if (tableMeta.size() == 1) {, +			return tableMeta.values().iterator().next();, +			TableMetaData tmd = tableMeta.get(getDefaultSchema());, +				tmd = tableMeta.get(this.userName != null ? this.userName.toUpperCase() : "");, +				throw new DataAccessResourceFailureException(, +						"Unable to locate table meta data for '" + tableName + "' in the default schema");, +			return tmd;, +							logger.debug("Overriding metadata: " + columnName + " now NUMERIC instead of DECIMAL");, +					logger.debug("Retrieved metadata: " + meta.getParameterName() + " " +, +							meta.getSqlType() + " " + meta.isNullable());, +			if (logger.isWarnEnabled()) {, +		}, +			JdbcUtils.closeResultSet(tableColumns);]