[+++ b/spring-framework-reference/src/remoting.xml, +              url="http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/client/RestTemplate.html#delete(String,%20Object...)">delete</ulink></entry>, +              url="http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/client/RestTemplate.html#getForObject(String,%20Class,%20Object...)">getForObject</ulink></entry>, +            </row>, +, +            <row>, +              <entry></entry>, +, +              <entry><ulink, +              url="http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/client/RestTemplate.html#getForEntity(String,%20Class,%20Object...)">getForEntity</ulink></entry>, +              url="http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/client/RestTemplate.html#headForHeaders(String,%20Object...)">headForHeaders(String, +              url="http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/client/RestTemplate.html#optionsForAllow(String,%20Object...)">optionsForAllow(String, +              url="http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/client/RestTemplate.html#postForLocation(String,%20Object,%20Object...)">postForLocation(String, +              url="http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/client/RestTemplate.html#put(String,%20Object,%20Object...)">put(String, +, +      <section>, +        <title>Dealing with request and response headers</title>, +, +        <para>Besides the methods described above, the <classname>RestTemplate</classname>, +        also has the <methodname>exchange</methodname> method, which can be, +        used for arbitrary HTTP method execution based on the <classname>HttpEntity</classname>, +        class.</para>, +, +        <para>Perhaps most importantly, the <methodname>execute</methodname> , +        method can be used to add request headers and read response headers., +        For example:</para>, +, +        <programlisting language="java">HttpHeaders requestHeaders = new HttpHeaders();, +requestHeaders.set("MyRequestHeader", "MyValue");, +HttpEntity&lt;?&gt; requestEntity = new HttpEntity(requestHeaders);, +, +HttpEntity&lt;String&gt; response = template.exchange("http://example.com/hotels/{hotel}",, +  HttpMethod.GET, requestEntity, String.class, "42");, +, +String responseHeader = response.getHeaders().getFirst("MyResponseHeader");, +String body = response.getBody();</programlisting>, +, +        <para>In the above example, we first prepare a request entity that contains the, +        <literal>MyRequestHeader</literal> header. We then retrieve the response, and, +        read the <literal>MyResponseHeader</literal> and body.</para>, +        </section>, +      // Indicate whether the given class and media type can be read by this converter., +      boolean canRead(Class&lt;?&gt; clazz, MediaType mediaType);, +, +      // Indicate whether the given class and media type can be written by this converter., +      boolean canWrite(Class&lt;?&gt; clazz, MediaType mediaType);]