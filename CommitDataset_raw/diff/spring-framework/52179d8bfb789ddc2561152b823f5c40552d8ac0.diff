[+++ b/org.springframework.expression/src/main/java/org/springframework/expression/common/TemplateParserContext.java, + * Copyright 2002-2010 the original author or authors., +, +	 * Create a new TemplateParserContext with the default "#{" prefix and "}" suffix., +++ b/org.springframework.expression/src/main/java/org/springframework/expression/common/TemplateParserContext.java, + * Copyright 2002-2010 the original author or authors., +, +	 * Create a new TemplateParserContext with the default "#{" prefix and "}" suffix., +++ b/spring-framework-reference/src/expressions.xml, +      <literal>#{ }</literal> as the delimiters. For example,</para>, +   parser.parseExpression("random number is #{T(java.lang.Math).random()}", , +                          new TemplateParserContext()).getValue(String.class);, +      number is ' with the result of evaluating the expression inside the #{ }, +      <classname>TemplateParserContext</classname> is shown below.</para>, +      <programlisting language="java">public class TemplateParserContext implements ParserContext {, +    return "#{";]