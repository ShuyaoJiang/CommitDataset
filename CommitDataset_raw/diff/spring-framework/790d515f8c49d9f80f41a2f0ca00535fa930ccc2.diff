[+++ b/spring-web/src/main/java/org/springframework/web/method/HandlerMethod.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +		@Nullable, +		private volatile Annotation[] combinedAnnotations;, +, +		public Annotation[] getParameterAnnotations() {, +			Annotation[] anns = this.combinedAnnotations;, +			if (anns == null) {, +				anns = super.getParameterAnnotations();, +				Class<?>[] ifcs = getDeclaringClass().getInterfaces();, +				for (Class<?> ifc : ifcs) {, +					try {, +						Method method = ifc.getMethod(getExecutable().getName(), getExecutable().getParameterTypes());, +						Annotation[] paramAnns = method.getParameterAnnotations()[getParameterIndex()];, +						if (paramAnns.length > 0) {, +							List<Annotation> merged = new ArrayList<>(anns.length + paramAnns.length);, +							merged.addAll(Arrays.asList(anns));, +							for (Annotation fieldAnn : paramAnns) {, +								boolean existingType = false;, +								for (Annotation ann : anns) {, +									if (ann.annotationType() == fieldAnn.annotationType()) {, +										existingType = true;, +										break;, +									}, +								}, +								if (!existingType) {, +									merged.add(fieldAnn);, +								}, +							}, +							anns = merged.toArray(new Annotation[0]);, +						}, +					}, +					catch (NoSuchMethodException ex) {, +					}, +				}, +				this.combinedAnnotations = anns;, +			}, +			return anns;, +		}, +, +		@Override, +++ b/spring-web/src/main/java/org/springframework/web/method/HandlerMethod.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +		@Nullable, +		private volatile Annotation[] combinedAnnotations;, +, +		public Annotation[] getParameterAnnotations() {, +			Annotation[] anns = this.combinedAnnotations;, +			if (anns == null) {, +				anns = super.getParameterAnnotations();, +				Class<?>[] ifcs = getDeclaringClass().getInterfaces();, +				for (Class<?> ifc : ifcs) {, +					try {, +						Method method = ifc.getMethod(getExecutable().getName(), getExecutable().getParameterTypes());, +						Annotation[] paramAnns = method.getParameterAnnotations()[getParameterIndex()];, +						if (paramAnns.length > 0) {, +							List<Annotation> merged = new ArrayList<>(anns.length + paramAnns.length);, +							merged.addAll(Arrays.asList(anns));, +							for (Annotation fieldAnn : paramAnns) {, +								boolean existingType = false;, +								for (Annotation ann : anns) {, +									if (ann.annotationType() == fieldAnn.annotationType()) {, +										existingType = true;, +										break;, +									}, +								}, +								if (!existingType) {, +									merged.add(fieldAnn);, +								}, +							}, +							anns = merged.toArray(new Annotation[0]);, +						}, +					}, +					catch (NoSuchMethodException ex) {, +					}, +				}, +				this.combinedAnnotations = anns;, +			}, +			return anns;, +		}, +, +		@Override, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapterIntegrationTests.java, + * Copyright 2002-2018 the original author or authors., +	public void handleInInterface() throws Exception {, +		Class<?>[] parameterTypes = new Class<?>[] {int.class, String.class, String.class, String.class, Map.class,, +				Date.class, Map.class, String.class, String.class, TestBean.class, Errors.class, TestBean.class,, +				Color.class, HttpServletRequest.class, HttpServletResponse.class, TestBean.class, TestBean.class,, +				User.class, OtherUser.class, Model.class, UriComponentsBuilder.class};, +, +		String datePattern = "yyyy.MM.dd";, +		String formattedDate = "2011.03.16";, +		Date date = new GregorianCalendar(2011, Calendar.MARCH, 16).getTime();, +		TestBean sessionAttribute = new TestBean();, +		TestBean requestAttribute = new TestBean();, +]