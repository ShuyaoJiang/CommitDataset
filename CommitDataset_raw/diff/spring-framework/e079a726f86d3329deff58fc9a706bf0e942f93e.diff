[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +				List<MediaType> mediaTypes = getContentNegotiationManager().resolveMediaTypes(webRequest);, +				if(!mediaTypes.isEmpty()) {, +					mediaType = mediaTypes.get(0);, +				}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +				List<MediaType> mediaTypes = getContentNegotiationManager().resolveMediaTypes(webRequest);, +				if(!mediaTypes.isEmpty()) {, +					mediaType = mediaTypes.get(0);, +				}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.java, + * @author Brian Clozel, +	@Test // SPR-13658, +	public void getResourceWithRegisteredMediaTypeDefaultStrategy() throws Exception {, +		ContentNegotiationManagerFactoryBean factory = new ContentNegotiationManagerFactoryBean();, +		factory.setFavorPathExtension(false);, +		factory.setDefaultContentType(new MediaType("foo", "bar"));, +		factory.afterPropertiesSet();, +		ContentNegotiationManager manager = factory.getObject();, +, +		List<Resource> paths = Collections.singletonList(new ClassPathResource("test/", getClass()));, +		this.handler = new ResourceHttpRequestHandler();, +		this.handler.setLocations(paths);, +		this.handler.setContentNegotiationManager(manager);, +		this.handler.afterPropertiesSet();, +, +		this.request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, "foo.css");, +		this.handler.handleRequest(this.request, this.response);, +, +		assertEquals("foo/bar", this.response.getContentType());, +		assertEquals("h1 { color:red; }", this.response.getContentAsString());, +	}, +]