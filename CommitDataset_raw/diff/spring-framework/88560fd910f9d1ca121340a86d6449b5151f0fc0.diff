[+++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java, +	private void ensurePropertyAccessorsInitialized() {, +		if (this.propertyAccessors == null) {, +			initializePropertyAccessors();, +		}, +	}, +, +	private synchronized void initializePropertyAccessors() {, +		if (this.propertyAccessors == null) {, +			List<PropertyAccessor> defaultAccessors = new ArrayList<PropertyAccessor>();, +			defaultAccessors.add(new ReflectivePropertyAccessor());, +			this.propertyAccessors = defaultAccessors;, +		}, +	}, +, +	private void ensureMethodResolversInitialized() {, +		if (this.methodResolvers == null) {, +			initializeMethodResolvers();, +		}, +	}, +, +	private synchronized void initializeMethodResolvers() {, +		if (this.methodResolvers == null) {, +			List<MethodResolver> defaultResolvers = new ArrayList<MethodResolver>();, +			defaultResolvers.add(reflectiveMethodResolver = new ReflectiveMethodResolver());, +			this.methodResolvers = defaultResolvers;, +		}, +	}, +, +	private void ensureConstructorResolversInitialized() {, +		if (this.constructorResolvers == null) {, +			initializeConstructorResolvers();, +		}, +	}, +, +	private synchronized void initializeConstructorResolvers() {, +		if (this.constructorResolvers == null) {, +			List<ConstructorResolver> defaultResolvers = new ArrayList<ConstructorResolver>();, +			defaultResolvers.add(new ReflectiveConstructorResolver());, +			this.constructorResolvers = defaultResolvers;, +		}, +	}, +]