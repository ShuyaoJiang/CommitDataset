[+++ b/spring-web/src/main/java/org/springframework/web/util/pattern/InternalPathPatternParser.java, +	private final PathPatternParser parser;, +	private final char separator = '/';, +	InternalPathPatternParser(PathPatternParser parentParser) {, +		this.parser = parentParser;, +		return new PathPattern(pathPattern, this.parser, this.headPE, this.separator,, +				this.parser.isCaseSensitive(), this.parser.isMatchOptionalTrailingSlash());, +								this.parser.isCaseSensitive(), this.separator);, +						getPathElementText(), this.parser.isCaseSensitive(),, +							this.parser.isCaseSensitive(), this.pathPatternData, this.separator);, +						this.singleCharWildcardCount, this.parser.isCaseSensitive(), this.separator);, +						this.parser.isCaseSensitive(), this.separator);, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/InternalPathPatternParser.java, +	private final PathPatternParser parser;, +	private final char separator = '/';, +	InternalPathPatternParser(PathPatternParser parentParser) {, +		this.parser = parentParser;, +		return new PathPattern(pathPattern, this.parser, this.headPE, this.separator,, +				this.parser.isCaseSensitive(), this.parser.isMatchOptionalTrailingSlash());, +								this.parser.isCaseSensitive(), this.separator);, +						getPathElementText(), this.parser.isCaseSensitive(),, +							this.parser.isCaseSensitive(), this.pathPatternData, this.separator);, +						this.singleCharWildcardCount, this.parser.isCaseSensitive(), this.separator);, +						this.parser.isCaseSensitive(), this.separator);, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPatternParser.java, +	 * Whether optional trailing slashing match is enabled., +	 */, +	public boolean isMatchOptionalTrailingSlash() {, +		return this.matchOptionalTrailingSlash;, +	}, +, +	/**, +	/**, +	 * Whether case-sensitive pattern matching is enabled., +	 */, +	public boolean isCaseSensitive() {, +		return this.caseSensitive;, +	}, +, +		return new InternalPathPatternParser(this).parse(pathPattern);, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/InternalPathPatternParser.java, +	private final PathPatternParser parser;, +	private final char separator = '/';, +	InternalPathPatternParser(PathPatternParser parentParser) {, +		this.parser = parentParser;, +		return new PathPattern(pathPattern, this.parser, this.headPE, this.separator,, +				this.parser.isCaseSensitive(), this.parser.isMatchOptionalTrailingSlash());, +								this.parser.isCaseSensitive(), this.separator);, +						getPathElementText(), this.parser.isCaseSensitive(),, +							this.parser.isCaseSensitive(), this.pathPatternData, this.separator);, +						this.singleCharWildcardCount, this.parser.isCaseSensitive(), this.separator);, +						this.parser.isCaseSensitive(), this.separator);, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPatternParser.java, +	 * Whether optional trailing slashing match is enabled., +	 */, +	public boolean isMatchOptionalTrailingSlash() {, +		return this.matchOptionalTrailingSlash;, +	}, +, +	/**, +	/**, +	 * Whether case-sensitive pattern matching is enabled., +	 */, +	public boolean isCaseSensitive() {, +		return this.caseSensitive;, +	}, +, +		return new InternalPathPatternParser(this).parse(pathPattern);, +++ b/spring-web/src/test/java/org/springframework/web/util/pattern/PathPatternParserTests.java, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/InternalPathPatternParser.java, +	private final PathPatternParser parser;, +	private final char separator = '/';, +	InternalPathPatternParser(PathPatternParser parentParser) {, +		this.parser = parentParser;, +		return new PathPattern(pathPattern, this.parser, this.headPE, this.separator,, +				this.parser.isCaseSensitive(), this.parser.isMatchOptionalTrailingSlash());, +								this.parser.isCaseSensitive(), this.separator);, +						getPathElementText(), this.parser.isCaseSensitive(),, +							this.parser.isCaseSensitive(), this.pathPatternData, this.separator);, +						this.singleCharWildcardCount, this.parser.isCaseSensitive(), this.separator);, +						this.parser.isCaseSensitive(), this.separator);, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPatternParser.java, +	 * Whether optional trailing slashing match is enabled., +	 */, +	public boolean isMatchOptionalTrailingSlash() {, +		return this.matchOptionalTrailingSlash;, +	}, +, +	/**, +	/**, +	 * Whether case-sensitive pattern matching is enabled., +	 */, +	public boolean isCaseSensitive() {, +		return this.caseSensitive;, +	}, +, +		return new InternalPathPatternParser(this).parse(pathPattern);, +++ b/spring-web/src/test/java/org/springframework/web/util/pattern/PathPatternParserTests.java, +++ b/spring-web/src/test/java/org/springframework/web/util/pattern/PathPatternTests.java, +		PathPatternParser parser = new PathPatternParser();]