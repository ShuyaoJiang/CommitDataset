[+++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, + * Implementation of the {@code GenericMarshaller} interface for JAXB 2.1/2.2,, + * as included in JDK 6 update 4+ and Java 7/8., +++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, + * Implementation of the {@code GenericMarshaller} interface for JAXB 2.1/2.2,, + * as included in JDK 6 update 4+ and Java 7/8., +++ b/spring-web/src/main/java/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.java, + * Copyright 2002-2013 the original author or authors., + * (through the JAX-WS {@link javax.jws.WebService} annotation). Compatible with, + * JAX-WS 2.1 and 2.2, as included in JDK 6 update 4+ and Java 7/8., +	private WebServiceFeature[] endpointFeatures;, +, +	 * Specify WebServiceFeature objects (e.g. as inner bean definitions), +	 * to apply to JAX-WS endpoint creation., +	 * @since 4.0, +	 */, +	public void setEndpointFeatures(WebServiceFeature... endpointFeatures) {, +		this.endpointFeatures = endpointFeatures;, +	}, +, +	/**, +	 * <p>As of Spring 4.0, this is effectively just an alternative way of, +	 * specifying {@link #setEndpointFeatures "endpointFeatures"}. Do not specify, +	 * both properties at the same time; prefer "endpointFeatures" moving forward., +	 * @deprecated as of Spring 4.0, in favor of {@link #setEndpointFeatures}, +	@Deprecated, +		if (this.endpointFeatures != null || this.webServiceFeatures != null) {, +			WebServiceFeature[] endpointFeaturesToUse = this.endpointFeatures;, +			if (endpointFeaturesToUse == null) {, +				endpointFeaturesToUse = new WebServiceFeature[this.webServiceFeatures.length];, +				for (int i = 0; i < this.webServiceFeatures.length; i++) {, +					endpointFeaturesToUse[i] = convertWebServiceFeature(this.webServiceFeatures[i]);, +				}, +			}, +			return Endpoint.create(this.bindingType, bean, endpointFeaturesToUse);, +, +, +	/**, +	 * Actually publish the given endpoint. To be implemented by subclasses., +	 * @param endpoint the JAX-WS Endpoint object, +	 * @param annotation the service bean's WebService annotation, +	 */, +	protected abstract void publishEndpoint(Endpoint endpoint, WebService annotation);, +, +	/**, +	 * Actually publish the given provider endpoint. To be implemented by subclasses., +	 * @param endpoint the JAX-WS Provider Endpoint object, +	 * @param annotation the service bean's WebServiceProvider annotation, +	 */, +	protected abstract void publishEndpoint(Endpoint endpoint, WebServiceProvider annotation);, +, +, +	/**, +	 * Stops all published endpoints, taking the web services offline., +	 */, +	@Override, +	public void destroy() {, +		for (Endpoint endpoint : this.publishedEndpoints) {, +			endpoint.stop();, +		}, +++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, + * Implementation of the {@code GenericMarshaller} interface for JAXB 2.1/2.2,, + * as included in JDK 6 update 4+ and Java 7/8., +++ b/spring-web/src/main/java/org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.java, + * Copyright 2002-2013 the original author or authors., + * (through the JAX-WS {@link javax.jws.WebService} annotation). Compatible with, + * JAX-WS 2.1 and 2.2, as included in JDK 6 update 4+ and Java 7/8., +	private WebServiceFeature[] endpointFeatures;, +, +	 * Specify WebServiceFeature objects (e.g. as inner bean definitions), +	 * to apply to JAX-WS endpoint creation., +	 * @since 4.0, +	 */, +	public void setEndpointFeatures(WebServiceFeature... endpointFeatures) {, +		this.endpointFeatures = endpointFeatures;, +	}, +, +	/**, +	 * <p>As of Spring 4.0, this is effectively just an alternative way of, +	 * specifying {@link #setEndpointFeatures "endpointFeatures"}. Do not specify, +	 * both properties at the same time; prefer "endpointFeatures" moving forward., +	 * @deprecated as of Spring 4.0, in favor of {@link #setEndpointFeatures}, +	@Deprecated, +		if (this.endpointFeatures != null || this.webServiceFeatures != null) {, +			WebServiceFeature[] endpointFeaturesToUse = this.endpointFeatures;, +			if (endpointFeaturesToUse == null) {, +				endpointFeaturesToUse = new WebServiceFeature[this.webServiceFeatures.length];, +				for (int i = 0; i < this.webServiceFeatures.length; i++) {, +					endpointFeaturesToUse[i] = convertWebServiceFeature(this.webServiceFeatures[i]);, +				}, +			}, +			return Endpoint.create(this.bindingType, bean, endpointFeaturesToUse);, +, +, +	/**, +	 * Actually publish the given endpoint. To be implemented by subclasses., +	 * @param endpoint the JAX-WS Endpoint object, +	 * @param annotation the service bean's WebService annotation, +	 */, +	protected abstract void publishEndpoint(Endpoint endpoint, WebService annotation);]