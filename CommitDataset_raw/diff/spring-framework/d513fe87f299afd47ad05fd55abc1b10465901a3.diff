[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/ExchangeActions.java, +import java.util.Collections;, +import java.util.List;, +import java.util.Map;, +import reactor.core.publisher.Mono;, +import static org.springframework.web.reactive.function.BodyExtractors.toMono;, +, + * Entry point for applying assertions and actions on a performed exchange., +	 * Assert value(s) of the specified header name., +	 * @param headerName the header name, +	 * @return options for asserting the header value(s), +	public ResponseHeaderAssertions assertHeader(String headerName) {, +		List<String> values = headers.getOrDefault(headerName, Collections.emptyList());, +		return new ResponseHeaderAssertions(this, headerName, values);, +	 * Assert the response does not have any content., +	public ExchangeActions assertBodyIsEmpty() {, +		Flux<?> body = this.exchangeInfo.getResponse().bodyToFlux(ByteBuffer.class);, +		StepVerifier.create(body).expectComplete().verify(this.exchangeInfo.getResponseTimeout());, +		return this;, +	public <T> ResponseEntityAssertions<T> assertEntity(Class<T> entityType) {, +		return assertEntity(ResolvableType.forClass(entityType));, +	 * Assert the content of the response., +	public <T> ResponseEntityAssertions<T> assertEntity(ResolvableType entityType) {, +		return new ResponseEntityAssertions<T>(this, this.exchangeInfo, entityType);, +	}, +, +	/**, +	 * Assert the response decoded as a Map of the given key and value types., +	 */, +	public <K, V> MapAssertions<K, V> assertBodyAsMap(Class<K> keyType, Class<V> valueType) {, +		ResolvableType type = ResolvableType.forClassWithGenerics(Map.class, keyType, valueType);, +		Mono<Map<K, V>> mono = this.exchangeInfo.getResponse().body(toMono(type));, +		Map<K, V> map = mono.block(this.exchangeInfo.getResponseTimeout());, +		return new MapAssertions<>(this, map, "Response body map");, +	/**, +	 * Return {@link ExchangeInfo} for direct access to request and response., +	 */, +	public ExchangeInfo andReturn() {, +		return this.exchangeInfo;, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/ExchangeActions.java, +import java.util.Collections;, +import java.util.List;, +import java.util.Map;, +import reactor.core.publisher.Mono;, +import static org.springframework.web.reactive.function.BodyExtractors.toMono;, +, + * Entry point for applying assertions and actions on a performed exchange., +	 * Assert value(s) of the specified header name., +	 * @param headerName the header name, +	 * @return options for asserting the header value(s), +	public ResponseHeaderAssertions assertHeader(String headerName) {, +		List<String> values = headers.getOrDefault(headerName, Collections.emptyList());, +		return new ResponseHeaderAssertions(this, headerName, values);, +	 * Assert the response does not have any content., +	public ExchangeActions assertBodyIsEmpty() {, +		Flux<?> body = this.exchangeInfo.getResponse().bodyToFlux(ByteBuffer.class);, +		StepVerifier.create(body).expectComplete().verify(this.exchangeInfo.getResponseTimeout());, +		return this;, +	public <T> ResponseEntityAssertions<T> assertEntity(Class<T> entityType) {, +		return assertEntity(ResolvableType.forClass(entityType));, +	 * Assert the content of the response., +	public <T> ResponseEntityAssertions<T> assertEntity(ResolvableType entityType) {, +		return new ResponseEntityAssertions<T>(this, this.exchangeInfo, entityType);, +	}, +, +	/**, +	 * Assert the response decoded as a Map of the given key and value types., +	 */, +	public <K, V> MapAssertions<K, V> assertBodyAsMap(Class<K> keyType, Class<V> valueType) {, +		ResolvableType type = ResolvableType.forClassWithGenerics(Map.class, keyType, valueType);, +		Mono<Map<K, V>> mono = this.exchangeInfo.getResponse().body(toMono(type));, +		Map<K, V> map = mono.block(this.exchangeInfo.getResponseTimeout());, +		return new MapAssertions<>(this, map, "Response body map");, +	/**, +	 * Return {@link ExchangeInfo} for direct access to request and response., +	 */, +	public ExchangeInfo andReturn() {, +		return this.exchangeInfo;, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/ListAssertions.java, +/*, + * Copyright 2002-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.test.web.reactive.server;, +]