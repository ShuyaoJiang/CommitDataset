[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/AbstractCachingViewResolver.java, + * Copyright 2002-2011 the original author or authors., +	/** Whether we should refrain from resolving views again if unresolved once */, +	private boolean cacheUnresolved = true;, +	 * <p>Default is "true": unresolved view names are being cached, as of Spring 3.1., +	 * Note that this flag only applies if the general {@link #setCache "cache"}, +	 * flag is kept at its default of "true" as well., +	 * implementations (FreeMarker, Velocity, Tiles) to check if an underlying, +		return this.cacheUnresolved;, +, +				if (view == null && (!this.cacheUnresolved || !this.viewCache.containsKey(cacheKey))) {, +					if (view != null || this.cacheUnresolved) {, +				}]