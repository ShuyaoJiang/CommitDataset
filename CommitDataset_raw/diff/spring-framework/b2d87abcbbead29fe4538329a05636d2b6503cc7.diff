[+++ b/spring-core/src/test/java/org/springframework/util/ConcurrentReferenceHashMapTests.java, +				public Reference<K, V> createReference(Entry<K, V> entry, int hash, @Nullable Reference<K, V> next) {, +++ b/spring-core/src/test/java/org/springframework/util/ConcurrentReferenceHashMapTests.java, +				public Reference<K, V> createReference(Entry<K, V> entry, int hash, @Nullable Reference<K, V> next) {, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java, +	public void propertyAccessOnNullTarget_SPR5663() throws AccessException {, +++ b/spring-core/src/test/java/org/springframework/util/ConcurrentReferenceHashMapTests.java, +				public Reference<K, V> createReference(Entry<K, V> entry, int hash, @Nullable Reference<K, V> next) {, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java, +	public void propertyAccessOnNullTarget_SPR5663() throws AccessException {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, +						"Return of a ResultSet from a stored procedure is not supported");, +++ b/spring-core/src/test/java/org/springframework/util/ConcurrentReferenceHashMapTests.java, +				public Reference<K, V> createReference(Entry<K, V> entry, int hash, @Nullable Reference<K, V> next) {, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java, +	public void propertyAccessOnNullTarget_SPR5663() throws AccessException {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, +						"Return of a ResultSet from a stored procedure is not supported");, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java, +	 * Create a {@link CallMetaDataProvider} based on the database meta-data., +	 * @param dataSource the JDBC DataSource to use for retrieving meta-data, +++ b/spring-core/src/test/java/org/springframework/util/ConcurrentReferenceHashMapTests.java, +				public Reference<K, V> createReference(Entry<K, V> entry, int hash, @Nullable Reference<K, V> next) {, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java, +	public void propertyAccessOnNullTarget_SPR5663() throws AccessException {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, +						"Return of a ResultSet from a stored procedure is not supported");, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java, +	 * Create a {@link CallMetaDataProvider} based on the database meta-data., +	 * @param dataSource the JDBC DataSource to use for retrieving meta-data, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java, +	 * Specify whether the database supports the use of catalog name in procedure calls., +	 * Does the database support the use of catalog name in procedure calls?, +	 * Specify whether the database supports the use of schema name in procedure calls., +	 * Does the database support the use of schema name in procedure calls?, +	 * Specify whether the database uses upper case for identifiers., +	 * Does the database use upper case for identifiers?, +	 * Specify whether the database uses lower case for identifiers., +	 * Does the database use lower case for identifiers?, +	 * Process the procedure column meta-data., +++ b/spring-core/src/test/java/org/springframework/util/ConcurrentReferenceHashMapTests.java, +				public Reference<K, V> createReference(Entry<K, V> entry, int hash, @Nullable Reference<K, V> next) {, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java, +	public void propertyAccessOnNullTarget_SPR5663() throws AccessException {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, +						"Return of a ResultSet from a stored procedure is not supported");, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java, +	 * Create a {@link CallMetaDataProvider} based on the database meta-data., +	 * @param dataSource the JDBC DataSource to use for retrieving meta-data, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java, +	 * Specify whether the database supports the use of catalog name in procedure calls., +	 * Does the database support the use of catalog name in procedure calls?, +	 * Specify whether the database supports the use of schema name in procedure calls., +	 * Does the database support the use of schema name in procedure calls?, +	 * Specify whether the database uses upper case for identifiers., +	 * Does the database use upper case for identifiers?, +	 * Specify whether the database uses lower case for identifiers., +	 * Does the database use lower case for identifiers?, +	 * Process the procedure column meta-data., +++ b/spring-web/src/main/java/org/springframework/http/converter/BufferedImageHttpMessageConverter.java]