[+++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +import java.io.StringReader;, +import org.xml.sax.EntityResolver;, +			String name = "http://xml.org/sax/features/external-general-entities";, +			xmlReader.setFeature(name, isProcessExternalEntities());, +			if (!isProcessExternalEntities()) {, +				xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER);, +			}, +	private static final EntityResolver NO_OP_ENTITY_RESOLVER = new EntityResolver() {, +		@Override, +		public InputSource resolveEntity(String publicId, String systemId) {, +			return new InputSource(new StringReader(""));, +		}, +	};, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +import java.io.StringReader;, +import org.xml.sax.EntityResolver;, +			String name = "http://xml.org/sax/features/external-general-entities";, +			xmlReader.setFeature(name, isProcessExternalEntities());, +			if (!isProcessExternalEntities()) {, +				xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER);, +			}, +	private static final EntityResolver NO_OP_ENTITY_RESOLVER = new EntityResolver() {, +		@Override, +		public InputSource resolveEntity(String publicId, String systemId) {, +			return new InputSource(new StringReader(""));, +		}, +	};, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/support/AbstractMarshaller.java, +import java.io.StringReader;, +import org.xml.sax.EntityResolver;, +		if (!isProcessExternalEntities()) {, +			xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER);, +		}, +, +	private static final EntityResolver NO_OP_ENTITY_RESOLVER = new EntityResolver() {, +		@Override, +		public InputSource resolveEntity(String publicId, String systemId) {, +			return new InputSource(new StringReader(""));, +		}, +	};, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +import java.io.StringReader;, +import org.xml.sax.EntityResolver;, +			String name = "http://xml.org/sax/features/external-general-entities";, +			xmlReader.setFeature(name, isProcessExternalEntities());, +			if (!isProcessExternalEntities()) {, +				xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER);, +			}, +	private static final EntityResolver NO_OP_ENTITY_RESOLVER = new EntityResolver() {, +		@Override, +		public InputSource resolveEntity(String publicId, String systemId) {, +			return new InputSource(new StringReader(""));, +		}, +	};, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/support/AbstractMarshaller.java, +import java.io.StringReader;, +import org.xml.sax.EntityResolver;, +		if (!isProcessExternalEntities()) {, +			xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER);, +		}, +, +	private static final EntityResolver NO_OP_ENTITY_RESOLVER = new EntityResolver() {, +		@Override, +		public InputSource resolveEntity(String publicId, String systemId) {, +			return new InputSource(new StringReader(""));, +		}, +	};, +, +++ b/spring-web/src/main/java/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.java, +import java.io.ByteArrayInputStream;, +import javax.xml.stream.XMLResolver;, +		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER);, +, +	private static final XMLResolver NO_OP_XML_RESOLVER = new XMLResolver() {, +		@Override, +		public Object resolveEntity(String publicID, String systemID, String base, String ns) {, +			return new ByteArrayInputStream(new byte[0]);, +		}, +	};, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +import java.io.StringReader;, +import org.xml.sax.EntityResolver;, +			String name = "http://xml.org/sax/features/external-general-entities";, +			xmlReader.setFeature(name, isProcessExternalEntities());, +			if (!isProcessExternalEntities()) {, +				xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER);, +			}, +	private static final EntityResolver NO_OP_ENTITY_RESOLVER = new EntityResolver() {, +		@Override, +		public InputSource resolveEntity(String publicId, String systemId) {, +			return new InputSource(new StringReader(""));, +		}, +	};, +]