[+++ b/spring-aop/src/main/java/org/springframework/aop/MethodMatcher.java, + * Copyright 2002-2015 the original author or authors., +	boolean matches(Method method, Class<?> targetClass, Object... args);, +++ b/spring-aop/src/main/java/org/springframework/aop/MethodMatcher.java, + * Copyright 2002-2015 the original author or authors., +	boolean matches(Method method, Class<?> targetClass, Object... args);, +++ b/spring-aop/src/main/java/org/springframework/aop/TrueMethodMatcher.java, + * Copyright 2002-2015 the original author or authors., +, +, +	public boolean matches(Method method, Class<?> targetClass, Object... args) {, +, +	@Override, +	public String toString() {, +		return "MethodMatcher.TRUE";, +	}, +, +++ b/spring-aop/src/main/java/org/springframework/aop/MethodMatcher.java, + * Copyright 2002-2015 the original author or authors., +	boolean matches(Method method, Class<?> targetClass, Object... args);, +++ b/spring-aop/src/main/java/org/springframework/aop/TrueMethodMatcher.java, + * Copyright 2002-2015 the original author or authors., +, +, +	public boolean matches(Method method, Class<?> targetClass, Object... args) {, +, +	@Override, +	public String toString() {, +		return "MethodMatcher.TRUE";, +	}, +, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java, +	public boolean matches(Method method, Class<?> targetClass, Object... args) {, +++ b/spring-aop/src/main/java/org/springframework/aop/MethodMatcher.java, + * Copyright 2002-2015 the original author or authors., +	boolean matches(Method method, Class<?> targetClass, Object... args);, +++ b/spring-aop/src/main/java/org/springframework/aop/TrueMethodMatcher.java, + * Copyright 2002-2015 the original author or authors., +, +, +	public boolean matches(Method method, Class<?> targetClass, Object... args) {, +, +	@Override, +	public String toString() {, +		return "MethodMatcher.TRUE";, +	}, +, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java, +	public boolean matches(Method method, Class<?> targetClass, Object... args) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.java, + * Copyright 2002-2015 the original author or authors., +, +	/**, +	 * Find and return the first AspectJ annotation on the given method, +	 * (there <i>should</i> only be one anyway...), +	 */, +	@SuppressWarnings("unchecked"), +	protected static AspectJAnnotation<?> findAspectJAnnotationOnMethod(Method method) {, +		Class<?>[] classesToLookFor = new Class<?>[] {, +				Before.class, Around.class, After.class, AfterReturning.class, AfterThrowing.class, Pointcut.class};, +		for (Class<?> c : classesToLookFor) {, +			AspectJAnnotation<?> foundAnnotation = findAnnotation(method, (Class<Annotation>) c);, +			if (foundAnnotation != null) {, +				return foundAnnotation;, +			}, +		}, +		return null;, +	}, +, +	private static <A extends Annotation> AspectJAnnotation<A> findAnnotation(Method method, Class<A> toLookFor) {, +		A result = AnnotationUtils.findAnnotation(method, toLookFor);, +		if (result != null) {, +			return new AspectJAnnotation<A>(result);, +		}, +		else {, +			return null;, +		}, +	}, +, +, +, +++ b/spring-aop/src/main/java/org/springframework/aop/MethodMatcher.java, + * Copyright 2002-2015 the original author or authors., +	boolean matches(Method method, Class<?> targetClass, Object... args);, +++ b/spring-aop/src/main/java/org/springframework/aop/TrueMethodMatcher.java, + * Copyright 2002-2015 the original author or authors., +, +, +	public boolean matches(Method method, Class<?> targetClass, Object... args) {, +, +	@Override, +	public String toString() {, +		return "MethodMatcher.TRUE";, +	}, +, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java, +	public boolean matches(Method method, Class<?> targetClass, Object... args) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.java, + * Copyright 2002-2015 the original author or authors., +]