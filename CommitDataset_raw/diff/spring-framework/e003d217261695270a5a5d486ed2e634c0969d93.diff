[+++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.java, +import org.springframework.util.ClassUtils;, +	// ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy(boolean) only available on JDK 1.7+, +	private static final boolean setRemoveOnCancelPolicyAvailable =, +			ClassUtils.hasMethod(ScheduledThreadPoolExecutor.class, "setRemoveOnCancelPolicy", boolean.class);, +, +, +	private boolean removeOnCancelPolicy;, +		if (this.removeOnCancelPolicy) {, +			if (setRemoveOnCancelPolicyAvailable && executor instanceof ScheduledThreadPoolExecutor) {, +				((ScheduledThreadPoolExecutor) executor).setRemoveOnCancelPolicy(true);, +			}, +			else {, +				logger.info("Could not apply remove-on-cancel policy - not a Java 7+ ScheduledThreadPoolExecutor");, +			}, +, +++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.java, +import org.springframework.util.ClassUtils;, +	// ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy(boolean) only available on JDK 1.7+, +	private static final boolean setRemoveOnCancelPolicyAvailable =, +			ClassUtils.hasMethod(ScheduledThreadPoolExecutor.class, "setRemoveOnCancelPolicy", boolean.class);, +, +, +	private boolean removeOnCancelPolicy;, +		if (this.removeOnCancelPolicy) {, +			if (setRemoveOnCancelPolicyAvailable && executor instanceof ScheduledThreadPoolExecutor) {, +				((ScheduledThreadPoolExecutor) executor).setRemoveOnCancelPolicy(true);, +			}, +			else {, +				logger.info("Could not apply remove-on-cancel policy - not a Java 7+ ScheduledThreadPoolExecutor");, +			}, +, +++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java, +import org.springframework.util.ClassUtils;, +	// ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy(boolean) only available on JDK 1.7+, +	private static final boolean setRemoveOnCancelPolicyAvailable =, +			ClassUtils.hasMethod(ScheduledThreadPoolExecutor.class, "setRemoveOnCancelPolicy", boolean.class);, +, +, +	private volatile boolean removeOnCancelPolicy;, +		if (setRemoveOnCancelPolicyAvailable && this.scheduledExecutor instanceof ScheduledThreadPoolExecutor) {, +		else if (removeOnCancelPolicy && this.scheduledExecutor != null) {, +			logger.info("Could not apply remove-on-cancel policy - not a Java 7+ ScheduledThreadPoolExecutor");, +		}, +, +		if (this.removeOnCancelPolicy) {, +			if (setRemoveOnCancelPolicyAvailable && this.scheduledExecutor instanceof ScheduledThreadPoolExecutor) {, +				((ScheduledThreadPoolExecutor) this.scheduledExecutor).setRemoveOnCancelPolicy(true);, +			}, +			else {, +				logger.info("Could not apply remove-on-cancel policy - not a Java 7+ ScheduledThreadPoolExecutor");, +			}, +			// Not initialized yet: return our setting for the time being., +			return (setRemoveOnCancelPolicyAvailable && this.removeOnCancelPolicy);]