[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java, +import org.springframework.http.server.ServletServerHttpRequest;, +	/** Throw a NoHandlerFoundException if no Handler was found to process this request? **/, +	private boolean throwExceptionIfNoHandlerFound = false;, +, +	 * Set whether to throw a NoHandlerFoundException when no Handler was found for this request., +	 * This exception can then be caught with a HandlerExceptionResolver or an, +	 * {@code @ExceptionHandler} controller method., +	 *, +	 * <p>Note that if, +	 * {@link org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler}, +	 * is used, then requests will always be forwarded to the default servlet and, +	 * a NoHandlerFoundException would never be thrown in that case., +	 *, +	 * <p>Default is "false", meaning the DispatcherServlet sends a NOT_FOUND error, +	 * through the Servlet response., +	 * @since 4.0, +	 */, +	public void setThrowExceptionIfNoHandlerFound(boolean throwExceptionIfNoHandlerFound) {, +		this.throwExceptionIfNoHandlerFound = throwExceptionIfNoHandlerFound;, +	}, +, +	/**, +		if(throwExceptionIfNoHandlerFound) {, +			ServletServerHttpRequest req = new ServletServerHttpRequest(request);, +			throw new NoHandlerFoundException(req.getMethod().name(),, +					req.getServletRequest().getRequestURI(),req.getHeaders());, +		} else {, +	}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java, +import org.springframework.http.server.ServletServerHttpRequest;, +	/** Throw a NoHandlerFoundException if no Handler was found to process this request? **/, +	private boolean throwExceptionIfNoHandlerFound = false;, +, +	 * Set whether to throw a NoHandlerFoundException when no Handler was found for this request., +	 * This exception can then be caught with a HandlerExceptionResolver or an, +	 * {@code @ExceptionHandler} controller method., +	 *, +	 * <p>Note that if, +	 * {@link org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler}, +	 * is used, then requests will always be forwarded to the default servlet and, +	 * a NoHandlerFoundException would never be thrown in that case., +	 *, +	 * <p>Default is "false", meaning the DispatcherServlet sends a NOT_FOUND error, +	 * through the Servlet response., +	 * @since 4.0, +	 */, +	public void setThrowExceptionIfNoHandlerFound(boolean throwExceptionIfNoHandlerFound) {, +		this.throwExceptionIfNoHandlerFound = throwExceptionIfNoHandlerFound;, +	}, +, +	/**, +		if(throwExceptionIfNoHandlerFound) {, +			ServletServerHttpRequest req = new ServletServerHttpRequest(request);, +			throw new NoHandlerFoundException(req.getMethod().name(),, +					req.getServletRequest().getRequestURI(),req.getHeaders());, +		} else {, +	}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/NoHandlerFoundException.java, +/*, + * Copyright 2002-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.web.servlet;, +, +import javax.servlet.ServletException;, +, +import org.springframework.http.HttpHeaders;, +, +/**, + * Exception to be thrown if DispatcherServlet is unable to determine, + * a corresponding handler for an incoming HTTP request., + * The DispatcherServlet throws this exception only if its, + * throwExceptionIfNoHandlerFound property is set to "true"., + *, + * @author Brian Clozel, + * @since 4.0, + * @see org.springframework.web.servlet.DispatcherServlet, + */, +@SuppressWarnings("serial"), +public class NoHandlerFoundException extends ServletException {, +, +	private final String httpMethod;, +, +	private final String requestURL;, +, +	private final HttpHeaders headers;, +, +]