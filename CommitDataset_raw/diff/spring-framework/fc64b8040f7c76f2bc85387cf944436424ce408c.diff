[+++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/DeclareParentsAdvisor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/DeclareParentsAdvisor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, + * Copyright 2002-2017 the original author or authors., +		matches.sort((m1, m2) -> m2.toString().compareTo(m1.toString()));, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/DeclareParentsAdvisor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, + * Copyright 2002-2017 the original author or authors., +		matches.sort((m1, m2) -> m2.toString().compareTo(m1.toString()));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/DeclareParentsAdvisor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, + * Copyright 2002-2017 the original author or authors., +		matches.sort((m1, m2) -> m2.toString().compareTo(m1.toString()));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/DeclareParentsAdvisor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, + * Copyright 2002-2017 the original author or authors., +		matches.sort((m1, m2) -> m2.toString().compareTo(m1.toString()));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheInterceptor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/DeclareParentsAdvisor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, + * Copyright 2002-2017 the original author or authors., +		matches.sort((m1, m2) -> m2.toString().compareTo(m1.toString()));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheInterceptor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/AnnotationCacheOperationSource.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/DeclareParentsAdvisor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, + * Copyright 2002-2017 the original author or authors., +		matches.sort((m1, m2) -> m2.toString().compareTo(m1.toString()));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheInterceptor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/AnnotationCacheOperationSource.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheInterceptor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/DeclareParentsAdvisor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, + * Copyright 2002-2017 the original author or authors., +		matches.sort((m1, m2) -> m2.toString().compareTo(m1.toString()));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheInterceptor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/AnnotationCacheOperationSource.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheInterceptor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/DeclareParentsAdvisor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, + * Copyright 2002-2017 the original author or authors., +		matches.sort((m1, m2) -> m2.toString().compareTo(m1.toString()));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheInterceptor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/AnnotationCacheOperationSource.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheInterceptor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java, +		configCandidates.sort((bd1, bd2) -> {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/DeclareParentsAdvisor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, + * Copyright 2002-2017 the original author or authors., +		matches.sort((m1, m2) -> m2.toString().compareTo(m1.toString()));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheInterceptor.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/AnnotationCacheOperationSource.java]