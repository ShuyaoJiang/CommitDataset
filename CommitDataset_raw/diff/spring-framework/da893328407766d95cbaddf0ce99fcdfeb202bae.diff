[+++ b/spring-test/src/main/java/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.java, +import org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks;, +import org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks;, +	 * @see #methodInvoker(FrameworkMethod, Object), +	 * @see #withBeforeTestExecutionCallbacks(FrameworkMethod, Object, Statement), +	 * @see #withAfterTestExecutionCallbacks(FrameworkMethod, Object, Statement), +		statement = withBeforeTestExecutionCallbacks(frameworkMethod, testInstance, statement);, +		statement = withAfterTestExecutionCallbacks(frameworkMethod, testInstance, statement);, +	 * Wrap the supplied {@link Statement} with a {@code RunBeforeTestExecutionCallbacks}, +	 * statement, thus preserving the default functionality while adding support for the, +	 * Spring TestContext Framework., +	 * @see RunBeforeTestExecutionCallbacks, +	 */, +	protected Statement withBeforeTestExecutionCallbacks(FrameworkMethod frameworkMethod, Object testInstance, Statement statement) {, +		return new RunBeforeTestExecutionCallbacks(statement, testInstance, frameworkMethod.getMethod(), getTestContextManager());, +	}, +, +	/**, +	 * Wrap the supplied {@link Statement} with a {@code RunAfterTestExecutionCallbacks}, +	 * statement, thus preserving the default functionality while adding support for the, +	 * Spring TestContext Framework., +	 * @see RunAfterTestExecutionCallbacks, +	 */, +	protected Statement withAfterTestExecutionCallbacks(FrameworkMethod frameworkMethod, Object testInstance, Statement statement) {, +		return new RunAfterTestExecutionCallbacks(statement, testInstance, frameworkMethod.getMethod(), getTestContextManager());, +	}, +, +	/**, +		return new RunBeforeTestMethodCallbacks(junitBefores, testInstance, frameworkMethod.getMethod(), getTestContextManager());, +		return new RunAfterTestMethodCallbacks(junitAfters, testInstance, frameworkMethod.getMethod(), getTestContextManager());, +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.java, +import org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks;, +import org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks;, +	 * @see #methodInvoker(FrameworkMethod, Object), +	 * @see #withBeforeTestExecutionCallbacks(FrameworkMethod, Object, Statement), +	 * @see #withAfterTestExecutionCallbacks(FrameworkMethod, Object, Statement), +		statement = withBeforeTestExecutionCallbacks(frameworkMethod, testInstance, statement);, +		statement = withAfterTestExecutionCallbacks(frameworkMethod, testInstance, statement);, +	 * Wrap the supplied {@link Statement} with a {@code RunBeforeTestExecutionCallbacks}, +	 * statement, thus preserving the default functionality while adding support for the, +	 * Spring TestContext Framework., +	 * @see RunBeforeTestExecutionCallbacks, +	 */, +	protected Statement withBeforeTestExecutionCallbacks(FrameworkMethod frameworkMethod, Object testInstance, Statement statement) {, +		return new RunBeforeTestExecutionCallbacks(statement, testInstance, frameworkMethod.getMethod(), getTestContextManager());, +	}, +, +	/**, +	 * Wrap the supplied {@link Statement} with a {@code RunAfterTestExecutionCallbacks}, +	 * statement, thus preserving the default functionality while adding support for the, +	 * Spring TestContext Framework., +	 * @see RunAfterTestExecutionCallbacks, +	 */, +	protected Statement withAfterTestExecutionCallbacks(FrameworkMethod frameworkMethod, Object testInstance, Statement statement) {, +		return new RunAfterTestExecutionCallbacks(statement, testInstance, frameworkMethod.getMethod(), getTestContextManager());, +	}, +, +	/**, +		return new RunBeforeTestMethodCallbacks(junitBefores, testInstance, frameworkMethod.getMethod(), getTestContextManager());, +		return new RunAfterTestMethodCallbacks(junitAfters, testInstance, frameworkMethod.getMethod(), getTestContextManager());, +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/rules/SpringMethodRule.java, + * Copyright 2002-2016 the original author or authors., + * {@code SpringMethodRule} is a custom JUnit 4 {@link MethodRule} that, + * <p><strong>WARNING:</strong> Due to the shortcomings of JUnit rules, the, + * {@code SpringMethodRule} does <strong>not</strong> support the, + * {@code beforeTestExecution()} and {@code afterTestExecution()} callbacks of the, + * {@link org.springframework.test.context.TestExecutionListener TestExecutionListener}, + * API., + *, +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.java, +import org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks;, +import org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks;, +	 * @see #methodInvoker(FrameworkMethod, Object), +	 * @see #withBeforeTestExecutionCallbacks(FrameworkMethod, Object, Statement), +	 * @see #withAfterTestExecutionCallbacks(FrameworkMethod, Object, Statement), +		statement = withBeforeTestExecutionCallbacks(frameworkMethod, testInstance, statement);, +		statement = withAfterTestExecutionCallbacks(frameworkMethod, testInstance, statement);, +	 * Wrap the supplied {@link Statement} with a {@code RunBeforeTestExecutionCallbacks}, +	 * statement, thus preserving the default functionality while adding support for the, +	 * Spring TestContext Framework., +	 * @see RunBeforeTestExecutionCallbacks, +	 */, +	protected Statement withBeforeTestExecutionCallbacks(FrameworkMethod frameworkMethod, Object testInstance, Statement statement) {, +		return new RunBeforeTestExecutionCallbacks(statement, testInstance, frameworkMethod.getMethod(), getTestContextManager());, +	}, +, +	/**, +	 * Wrap the supplied {@link Statement} with a {@code RunAfterTestExecutionCallbacks}, +	 * statement, thus preserving the default functionality while adding support for the, +	 * Spring TestContext Framework., +	 * @see RunAfterTestExecutionCallbacks, +	 */, +	protected Statement withAfterTestExecutionCallbacks(FrameworkMethod frameworkMethod, Object testInstance, Statement statement) {, +		return new RunAfterTestExecutionCallbacks(statement, testInstance, frameworkMethod.getMethod(), getTestContextManager());, +	}, +, +	/**, +		return new RunBeforeTestMethodCallbacks(junitBefores, testInstance, frameworkMethod.getMethod(), getTestContextManager());, +		return new RunAfterTestMethodCallbacks(junitAfters, testInstance, frameworkMethod.getMethod(), getTestContextManager());, +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/rules/SpringMethodRule.java]