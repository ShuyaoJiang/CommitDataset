[+++ b/spring-aspects/src/test/java/org/springframework/transaction/aspectj/TransactionAspectTests.java, + * Copyright 2002-2016 the original author or authors., +import org.junit.Before;, +import org.junit.Test;, +, +import static org.junit.Assert.*;, +, +public class TransactionAspectTests {, +	private final CallCountingTransactionManager txManager = new CallCountingTransactionManager();, +	private final TransactionalAnnotationOnlyOnClassWithNoInterface annotationOnlyOnClassWithNoInterface =, +			new TransactionalAnnotationOnlyOnClassWithNoInterface();, +	private final ClassWithProtectedAnnotatedMember beanWithAnnotatedProtectedMethod =, +			new ClassWithProtectedAnnotatedMember();, +	private final ClassWithPrivateAnnotatedMember beanWithAnnotatedPrivateMethod =, +			new ClassWithPrivateAnnotatedMember();, +	private final MethodAnnotationOnClassWithNoInterface methodAnnotationOnly =, +			new MethodAnnotationOnClassWithNoInterface();, +	@Before, +	public void initContext() {, +		AnnotationTransactionAspect.aspectOf().setTransactionManager(txManager);, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +, +, +, +, +, +++ b/spring-aspects/src/test/java/org/springframework/transaction/aspectj/TransactionAspectTests.java, + * Copyright 2002-2016 the original author or authors., +import org.junit.Before;, +import org.junit.Test;, +, +import static org.junit.Assert.*;, +, +public class TransactionAspectTests {, +	private final CallCountingTransactionManager txManager = new CallCountingTransactionManager();, +	private final TransactionalAnnotationOnlyOnClassWithNoInterface annotationOnlyOnClassWithNoInterface =, +			new TransactionalAnnotationOnlyOnClassWithNoInterface();, +	private final ClassWithProtectedAnnotatedMember beanWithAnnotatedProtectedMethod =, +			new ClassWithProtectedAnnotatedMember();, +	private final ClassWithPrivateAnnotatedMember beanWithAnnotatedPrivateMethod =, +			new ClassWithPrivateAnnotatedMember();, +	private final MethodAnnotationOnClassWithNoInterface methodAnnotationOnly =, +			new MethodAnnotationOnClassWithNoInterface();, +	@Before, +	public void initContext() {, +		AnnotationTransactionAspect.aspectOf().setTransactionManager(txManager);, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +, +, +, +, +, +++ b/spring-aspects/src/test/resources/org/springframework/transaction/aspectj/TransactionAspectTests-context.xml, +++ b/spring-aspects/src/test/java/org/springframework/transaction/aspectj/TransactionAspectTests.java, + * Copyright 2002-2016 the original author or authors., +import org.junit.Before;, +import org.junit.Test;, +, +import static org.junit.Assert.*;, +, +public class TransactionAspectTests {, +	private final CallCountingTransactionManager txManager = new CallCountingTransactionManager();, +	private final TransactionalAnnotationOnlyOnClassWithNoInterface annotationOnlyOnClassWithNoInterface =, +			new TransactionalAnnotationOnlyOnClassWithNoInterface();, +	private final ClassWithProtectedAnnotatedMember beanWithAnnotatedProtectedMethod =, +			new ClassWithProtectedAnnotatedMember();, +	private final ClassWithPrivateAnnotatedMember beanWithAnnotatedPrivateMethod =, +			new ClassWithPrivateAnnotatedMember();, +	private final MethodAnnotationOnClassWithNoInterface methodAnnotationOnly =, +			new MethodAnnotationOnClassWithNoInterface();, +	@Before, +	public void initContext() {, +		AnnotationTransactionAspect.aspectOf().setTransactionManager(txManager);, +	@Test, +	@Test, +	@Test]