[+++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilderTests.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.servlet.mvc.method.annotation;, +, +import org.hamcrest.Matchers;, +import org.joda.time.DateTime;, +import org.joda.time.format.ISODateTimeFormat;, +import org.junit.After;, +import org.junit.Before;, +import org.junit.Test;, +import org.springframework.format.annotation.DateTimeFormat;, +import org.springframework.format.annotation.DateTimeFormat.ISO;, +import org.springframework.http.HttpEntity;, +import org.springframework.mock.web.test.MockHttpServletRequest;, +import org.springframework.util.MultiValueMap;, +import org.springframework.web.bind.annotation.PathVariable;, +import org.springframework.web.bind.annotation.RequestBody;, +import org.springframework.web.bind.annotation.RequestMapping;, +import org.springframework.web.bind.annotation.RequestParam;, +import org.springframework.web.context.request.RequestContextHolder;, +import org.springframework.web.context.request.ServletRequestAttributes;, +import org.springframework.web.util.UriComponents;, +, +import java.util.Arrays;, +import java.util.List;, +, +import static org.hamcrest.Matchers.*;, +import static org.junit.Assert.assertThat;, +import static org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder.*;, +, +/**, + * Unit tests for {@link org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder}., + *, + * @author Oliver Gierke, + * @author Dietrich Schulten, + * @author Rossen Stoyanchev, + */, +public class MvcUriComponentsBuilderTests {, +, +	private MockHttpServletRequest request;, +, +, +	@Before, +	public void setUp() {, +		this.request = new MockHttpServletRequest();, +		RequestContextHolder.setRequestAttributes(new ServletRequestAttributes(this.request));, +	}, +, +	@After, +	public void tearDown() {, +		RequestContextHolder.resetRequestAttributes();, +	}, +, +, +	@Test, +	public void testFromController() {, +		UriComponents uriComponents = fromController(PersonControllerImpl.class).build();, +		assertThat(uriComponents.toUriString(), Matchers.endsWith("/people"));, +	}, +, +	@Test, +	public void testFromControllerUriTemplate() {, +		UriComponents uriComponents = fromController(PersonsAddressesController.class).buildAndExpand(15);, +		assertThat(uriComponents.toUriString(), endsWith("/people/15/addresses"));, +	}, +, +	@Test, +	public void testFromControllerSubResource() {, +		UriComponents uriComponents = fromController(PersonControllerImpl.class).pathSegment("something").build();, +, +		assertThat(uriComponents.toUriString(), endsWith("/people/something"));, +	}, +, +	@Test, +	public void testFromControllerTwoTypeLevelMappings() {, +		UriComponents uriComponents = fromController(InvalidController.class).build();, +		assertThat(uriComponents.toUriString(), is("http://localhost/persons"));, +	}, +, +	@Test, +	public void testFromControllerNotMapped() {, +		UriComponents uriComponents = fromController(UnmappedController.class).build();, +		assertThat(uriComponents.toUriString(), is("http://localhost/"));, +	}, +]