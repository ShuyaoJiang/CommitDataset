[+++ b/spring-context/src/main/java/org/springframework/cache/annotation/AnnotationCacheOperationSource.java, +import java.util.Arrays;, +		this.annotationParsers = Collections.singleton(new SpringCacheAnnotationParser());, +		this.annotationParsers = new LinkedHashSet<>(Arrays.asList(annotationParsers));, +	protected Collection<CacheOperation> findCacheOperations(Class<?> clazz) {, +	protected Collection<CacheOperation> findCacheOperations(Method method) {, +	 * {@link CacheAnnotationParser CacheAnnotationParsers}, +	 * for parsing known annotations into Spring's metadata attribute class., +	 * <p>Can be overridden to support custom annotations that carry caching metadata., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/AnnotationCacheOperationSource.java, +import java.util.Arrays;, +		this.annotationParsers = Collections.singleton(new SpringCacheAnnotationParser());, +		this.annotationParsers = new LinkedHashSet<>(Arrays.asList(annotationParsers));, +	protected Collection<CacheOperation> findCacheOperations(Class<?> clazz) {, +	protected Collection<CacheOperation> findCacheOperations(Method method) {, +	 * {@link CacheAnnotationParser CacheAnnotationParsers}, +	 * for parsing known annotations into Spring's metadata attribute class., +	 * <p>Can be overridden to support custom annotations that carry caching metadata., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/ProxyCachingConfiguration.java, +		BeanFactoryCacheOperationSourceAdvisor advisor = new BeanFactoryCacheOperationSourceAdvisor();, +++ b/spring-context/src/main/java/org/springframework/cache/annotation/AnnotationCacheOperationSource.java, +import java.util.Arrays;, +		this.annotationParsers = Collections.singleton(new SpringCacheAnnotationParser());, +		this.annotationParsers = new LinkedHashSet<>(Arrays.asList(annotationParsers));, +	protected Collection<CacheOperation> findCacheOperations(Class<?> clazz) {, +	protected Collection<CacheOperation> findCacheOperations(Method method) {, +	 * {@link CacheAnnotationParser CacheAnnotationParsers}, +	 * for parsing known annotations into Spring's metadata attribute class., +	 * <p>Can be overridden to support custom annotations that carry caching metadata., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/ProxyCachingConfiguration.java, +		BeanFactoryCacheOperationSourceAdvisor advisor = new BeanFactoryCacheOperationSourceAdvisor();, +++ b/spring-tx/src/main/java/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.java, +import java.util.Arrays;, +		if (jta12Present || ejb3Present) {, +			this.annotationParsers = new LinkedHashSet<>(4);, +		else {, +			this.annotationParsers = Collections.singleton(new SpringTransactionAnnotationParser());, +		}, +	}, +		this.annotationParsers = new LinkedHashSet<>(Arrays.asList(annotationParsers));]