[+++ b/spring-core/src/main/java/org/springframework/util/MimeType.java, + * Copyright 2002-2018 the original author or authors., +				// Wildcard with suffix, e.g. application/*+xml, +			// Wildcard with suffix? e.g. application/*+xml, +, +, +			if (PARAM_CHARSET.equals(thisAttribute)) {, +				Charset thisCharset = getCharset();, +				Charset otherCharset = other.getCharset();, +				if (thisCharset != otherCharset) {, +					if (thisCharset == null) {, +						return -1;, +					}, +					if (otherCharset == null) {, +						return 1;, +					}, +					comp = thisCharset.compareTo(otherCharset);, +					if (comp != 0) {, +						return comp;, +					}, +				}, +			}, +			else {, +		}, +, +			return Integer.compare(paramsSize2, paramsSize1);  // audio/basic;level=1 < audio/basic, +++ b/spring-core/src/main/java/org/springframework/util/MimeType.java, + * Copyright 2002-2018 the original author or authors., +				// Wildcard with suffix, e.g. application/*+xml, +			// Wildcard with suffix? e.g. application/*+xml, +, +, +			if (PARAM_CHARSET.equals(thisAttribute)) {, +				Charset thisCharset = getCharset();, +				Charset otherCharset = other.getCharset();, +				if (thisCharset != otherCharset) {, +					if (thisCharset == null) {, +						return -1;, +					}, +					if (otherCharset == null) {, +						return 1;, +					}, +					comp = thisCharset.compareTo(otherCharset);, +					if (comp != 0) {, +						return comp;, +					}, +				}, +			}, +			else {, +		}, +, +			return Integer.compare(paramsSize2, paramsSize1);  // audio/basic;level=1 < audio/basic, +++ b/spring-core/src/test/java/org/springframework/util/MimeTypeTests.java, + * Copyright 2002-2018 the original author or authors., +import static java.util.Collections.*;, +import static org.junit.Assert.*;, +		assertEquals(0, m1.compareTo(m2));, +		assertEquals(0, m2.compareTo(m1));]