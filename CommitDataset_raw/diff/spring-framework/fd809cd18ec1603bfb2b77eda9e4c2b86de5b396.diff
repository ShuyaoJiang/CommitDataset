[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +		try {, +		catch (Exception ex) {, +			// Assuming nested Class values not resolvable within annotation attributes..., +			// We're probably hitting a non-present optional arrangement - let's back out., +			return null;, +		}, +	}, +		try {, +		catch (Exception ex) {, +			// Assuming nested Class values not resolvable within annotation attributes..., +			// We're probably hitting a non-present optional arrangement - let's back out., +			return null;, +		}, +	}, +		try {, +		catch (Exception ex) {, +			// Assuming nested Class values not resolvable within annotation attributes..., +			// We're probably hitting a non-present optional arrangement - let's back out., +			return null;, +		}, +	}, +		try {, +			if (annotatedElement.getAnnotations().length > 0) {, +		}, +		catch (Exception ex) {, +			// Assuming nested Class values not resolvable within annotation attributes..., +			// We're probably hitting a non-present optional arrangement - let's back out., +		}, +		return Collections.emptySet();, +	}, +				try {, +				catch (Exception ex) {, +					// Assuming nested Class values not resolvable within annotation attributes..., +					// We're probably hitting a non-present optional arrangement - let's back out., +				}, +			}, +			try {, +			catch (Exception ex) {, +				// Assuming nested Class values not resolvable within annotation attributes..., +				// We're probably hitting a non-present optional arrangement - let's back out., +				return null;, +			}, +		}, +		try {, +		}, +		catch (Exception ex) {, +			// Assuming nested Class values not resolvable within annotation attributes..., +			// We're probably hitting a non-present optional arrangement - let's back out., +		}, +						this.result.addAll(getValue(annotation));, +		private List<A> getValue(Annotation annotation) {, +				return Arrays.asList((A[]) method.invoke(annotation));, +				// Unable to read value from repeating annotation container -> ignore it., +				return Collections.emptyList();]