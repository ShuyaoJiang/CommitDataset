[+++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java, +	private final ScheduledTaskRegistrar registrar;, +, +	/**, +	 * Create a default {@code ScheduledAnnotationBeanPostProcessor}., +	 */, +	public ScheduledAnnotationBeanPostProcessor() {, +		this.registrar = new ScheduledTaskRegistrar();, +	}, +, +	/**, +	 * Create a {@code ScheduledAnnotationBeanPostProcessor} delegating to the, +	 * specified {@link ScheduledTaskRegistrar}., +	 * @param registrar the ScheduledTaskRegistrar to register @Scheduled tasks on, +	 * @since 5.1, +	 */, +	public ScheduledAnnotationBeanPostProcessor(ScheduledTaskRegistrar registrar) {, +		Assert.notNull(registrar, "ScheduledTaskRegistrar is required");, +		this.registrar = registrar;, +	}, +, +, +	/**, +	 * Process the given {@code @Scheduled} method declaration on the given bean., +	 * @param scheduled the @Scheduled annotation, +	 * @param method the method that the annotation has been declared on, +	 * @param bean the target bean instance, +	 * @see #createRunnable(Object, Method), +	 */, +			Runnable runnable = createRunnable(bean, method);, +	/**, +	 * Create a {@link Runnable} for the given bean instance,, +	 * calling the specified scheduled method., +	 * <p>The default implementation creates a {@link ScheduledMethodRunnable}., +	 * @param target the target bean instance, +	 * @param method the scheduled method to call, +	 * @since 5.1, +	 * @see ScheduledMethodRunnable#ScheduledMethodRunnable(Object, Method), +	 */, +	protected Runnable createRunnable(Object target, Method method) {, +		Assert.isTrue(method.getParameterCount() == 0,, +				"Only no-arg methods may be annotated with @Scheduled");, +, +		Method invocableMethod = AopUtils.selectInvocableMethod(method, target.getClass());, +		return new ScheduledMethodRunnable(target, invocableMethod);, +	}, +]