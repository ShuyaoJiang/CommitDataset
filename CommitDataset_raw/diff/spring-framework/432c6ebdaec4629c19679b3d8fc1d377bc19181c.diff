[+++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/DateTimeFormatterFactory.java, + * Factory that creates a Joda {@link DateTimeFormatter}. Formatters will be, + * @see #createDateTimeFormatter(), + * @see #createDateTimeFormatter(DateTimeFormatter), + * @see #setPattern(String), + * @see #setIso(org.springframework.format.annotation.DateTimeFormat.ISO), + * @see #setStyle(String), + * @see DateTimeFormatterFactoryBean, +public class DateTimeFormatterFactory {, +	 * Create a new {@code DateTimeFormatter} using this factory. If no specific, +	 * @see #createDateTimeFormatter(DateTimeFormatter), +	public DateTimeFormatter createDateTimeFormatter() {, +		return createDateTimeFormatter(DateTimeFormat.mediumDateTime());, +	 * Create a new {@code DateTimeFormatter} using this factory. If no specific, +	public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter) {, +		DateTimeFormatter dateTimeFormatter = null;, +		if (StringUtils.hasLength(pattern)) {, +			dateTimeFormatter = DateTimeFormat.forPattern(pattern);, +		}, +		else if (iso != null && iso != ISO.NONE) {, +			if (iso == ISO.DATE) {, +				dateTimeFormatter = ISODateTimeFormat.date();, +			}, +			else if (iso == ISO.TIME) {, +				dateTimeFormatter = ISODateTimeFormat.time();, +			}, +			else {, +				dateTimeFormatter = ISODateTimeFormat.dateTime();, +			}, +		}, +		else if (StringUtils.hasLength(style)) {, +			dateTimeFormatter = DateTimeFormat.forStyle(style);, +		}, +, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/DateTimeFormatterFactory.java, + * Factory that creates a Joda {@link DateTimeFormatter}. Formatters will be, + * @see #createDateTimeFormatter(), + * @see #createDateTimeFormatter(DateTimeFormatter), + * @see #setPattern(String), + * @see #setIso(org.springframework.format.annotation.DateTimeFormat.ISO), + * @see #setStyle(String), + * @see DateTimeFormatterFactoryBean, +public class DateTimeFormatterFactory {, +	 * Create a new {@code DateTimeFormatter} using this factory. If no specific, +	 * @see #createDateTimeFormatter(DateTimeFormatter), +	public DateTimeFormatter createDateTimeFormatter() {, +		return createDateTimeFormatter(DateTimeFormat.mediumDateTime());, +	 * Create a new {@code DateTimeFormatter} using this factory. If no specific, +	public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter) {, +		DateTimeFormatter dateTimeFormatter = null;, +		if (StringUtils.hasLength(pattern)) {, +			dateTimeFormatter = DateTimeFormat.forPattern(pattern);, +		}, +		else if (iso != null && iso != ISO.NONE) {, +			if (iso == ISO.DATE) {, +				dateTimeFormatter = ISODateTimeFormat.date();, +			}, +			else if (iso == ISO.TIME) {, +				dateTimeFormatter = ISODateTimeFormat.time();, +			}, +			else {, +				dateTimeFormatter = ISODateTimeFormat.dateTime();, +			}, +		}, +		else if (StringUtils.hasLength(style)) {, +			dateTimeFormatter = DateTimeFormat.forStyle(style);, +		}, +, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/DateTimeFormatterFactoryBean.java, +/*, + * Copyright 2002-2012 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.format.datetime.joda;, +, +import org.joda.time.format.DateTimeFormatter;, +import org.springframework.beans.factory.FactoryBean;, +import org.springframework.beans.factory.InitializingBean;, +, +/**, + * {@link FactoryBean} that creates a Joda {@link DateTimeFormatter}. See the base class, + * {@linkplain DateTimeFormatterFactory} for configuration details., + *, + * @author Phillip Webb, + * @author Sam Brannen, + * @see #setPattern(String), + * @see #setIso(org.springframework.format.annotation.DateTimeFormat.ISO), + * @see #setStyle(String)]