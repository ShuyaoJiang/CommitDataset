[+++ b/spring-context/src/main/java/org/springframework/context/ApplicationEvent.java, + * Copyright 2002-2019 the original author or authors., + * @see org.springframework.context.ApplicationListener, + * @see org.springframework.context.event.EventListener, +	 * Create a new {@code ApplicationEvent}., +	 * @param source the object on which the event initially occurred or with, +	 * which the event is associated (never {@code null}), +	 * Return the system time in milliseconds when the event occurred., +++ b/spring-context/src/main/java/org/springframework/context/ApplicationEvent.java, + * Copyright 2002-2019 the original author or authors., + * @see org.springframework.context.ApplicationListener, + * @see org.springframework.context.event.EventListener, +	 * Create a new {@code ApplicationEvent}., +	 * @param source the object on which the event initially occurred or with, +	 * which the event is associated (never {@code null}), +	 * Return the system time in milliseconds when the event occurred., +++ b/spring-context/src/main/java/org/springframework/context/ApplicationEventPublisher.java, + * Copyright 2002-2019 the original author or authors., + *, + * <p>Serves as a super-interface for {@link ApplicationContext}., +++ b/spring-context/src/main/java/org/springframework/context/ApplicationEvent.java, + * Copyright 2002-2019 the original author or authors., + * @see org.springframework.context.ApplicationListener, + * @see org.springframework.context.event.EventListener, +	 * Create a new {@code ApplicationEvent}., +	 * @param source the object on which the event initially occurred or with, +	 * which the event is associated (never {@code null}), +	 * Return the system time in milliseconds when the event occurred., +++ b/spring-context/src/main/java/org/springframework/context/ApplicationEventPublisher.java, + * Copyright 2002-2019 the original author or authors., + *, + * <p>Serves as a super-interface for {@link ApplicationContext}., +++ b/spring-context/src/main/java/org/springframework/context/ApplicationListener.java, + * Copyright 2002-2019 the original author or authors., + *, + * <p>Based on the standard {@code java.util.EventListener} interface, + * <p>As of Spring 3.0, an {@code ApplicationListener} can generically declare, + * the event type that it is interested in. When registered with a Spring, + * {@code ApplicationContext}, events will be filtered accordingly, with the, + * listener getting invoked for matching event objects only., + * @param <E> the specific {@code ApplicationEvent} subclass to listen to, + * @see org.springframework.context.ApplicationEvent, + * @see org.springframework.context.event.EventListener, +++ b/spring-context/src/main/java/org/springframework/context/ApplicationEvent.java, + * Copyright 2002-2019 the original author or authors., + * @see org.springframework.context.ApplicationListener, + * @see org.springframework.context.event.EventListener, +	 * Create a new {@code ApplicationEvent}., +	 * @param source the object on which the event initially occurred or with, +	 * which the event is associated (never {@code null}), +	 * Return the system time in milliseconds when the event occurred., +++ b/spring-context/src/main/java/org/springframework/context/ApplicationEventPublisher.java, + * Copyright 2002-2019 the original author or authors., + *, + * <p>Serves as a super-interface for {@link ApplicationContext}., +++ b/spring-context/src/main/java/org/springframework/context/ApplicationListener.java, + * Copyright 2002-2019 the original author or authors., + *, + * <p>Based on the standard {@code java.util.EventListener} interface, + * <p>As of Spring 3.0, an {@code ApplicationListener} can generically declare, + * the event type that it is interested in. When registered with a Spring, + * {@code ApplicationContext}, events will be filtered accordingly, with the, + * listener getting invoked for matching event objects only., + * @param <E> the specific {@code ApplicationEvent} subclass to listen to, + * @see org.springframework.context.ApplicationEvent, + * @see org.springframework.context.event.EventListener, +++ b/spring-context/src/main/java/org/springframework/context/event/ApplicationEventMulticaster.java, + * Copyright 2002-2019 the original author or authors., + * {@link ApplicationListener} objects and publish events to them., + * {@code ApplicationEventMulticaster} as a delegate for actually publishing events., + * @see ApplicationListener, +	 * @param listenerBeanName the name of the listener bean to remove, +	 * on event notification until new listeners are registered., +	 * if possible as it provides better support for generics-based events., +	 * @param eventType the type of event (can be {@code null})]