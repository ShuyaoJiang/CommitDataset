[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder.java, +import org.springframework.http.HttpHeaders;, + * @author Sebastien Deleuze, +	private HttpHeaders httpHeaders;, +, +	public ServerHttpRequest.Builder header(String key, String value) {, +		if (this.httpHeaders == null) {, +			this.httpHeaders = new HttpHeaders();, +		}, +		this.httpHeaders.add(key, value);, +		return this;, +	}, +, +	@Override, +		return new MutativeDecorator(this.delegate, this.httpMethod, uri, this.contextPath, this.httpHeaders);, +		private final HttpHeaders httpHeaders;, +, +				URI uri, String contextPath, HttpHeaders httpHeaders) {, +			if (httpHeaders != null) {, +				this.httpHeaders = new HttpHeaders();, +				this.httpHeaders.putAll(super.getHeaders());, +				this.httpHeaders.putAll(httpHeaders);, +			}, +			else {, +				this.httpHeaders = null;, +			}, +		@Override, +		public HttpHeaders getHeaders() {, +			return (this.httpHeaders != null ? this.httpHeaders : super.getHeaders());, +		}, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder.java, +import org.springframework.http.HttpHeaders;, + * @author Sebastien Deleuze, +	private HttpHeaders httpHeaders;, +, +	public ServerHttpRequest.Builder header(String key, String value) {, +		if (this.httpHeaders == null) {, +			this.httpHeaders = new HttpHeaders();, +		}, +		this.httpHeaders.add(key, value);, +		return this;, +	}, +, +	@Override, +		return new MutativeDecorator(this.delegate, this.httpMethod, uri, this.contextPath, this.httpHeaders);, +		private final HttpHeaders httpHeaders;, +, +				URI uri, String contextPath, HttpHeaders httpHeaders) {, +			if (httpHeaders != null) {, +				this.httpHeaders = new HttpHeaders();, +				this.httpHeaders.putAll(super.getHeaders());, +				this.httpHeaders.putAll(httpHeaders);, +			}, +			else {, +				this.httpHeaders = null;, +			}, +		@Override, +		public HttpHeaders getHeaders() {, +			return (this.httpHeaders != null ? this.httpHeaders : super.getHeaders());, +		}, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpRequest.java, +		 * Set or override the specified header., +		 */, +		Builder header(String key, String value);, +, +		/**]