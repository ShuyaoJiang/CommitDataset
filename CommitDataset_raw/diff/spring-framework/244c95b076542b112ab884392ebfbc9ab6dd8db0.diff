[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.java, +import java.util.Arrays;, +import org.springframework.http.HttpMethod;, +	private static final List<HttpMethod> SUPPORTED_METHODS =, +			Arrays.asList(HttpMethod.POST, HttpMethod.PUT, HttpMethod.PATCH);, +, +		ServletServerHttpRequest inputMessage = new ServletServerHttpRequest(servletRequest);, +		Object arg = null;, +		if (webRequest.getHeader("Content-Type") != null ||, +				SUPPORTED_METHODS.contains(inputMessage.getMethod())) {, +			arg = readWithMessageConverters(inputMessage, methodParam, paramType);, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.java, +import java.util.Arrays;, +import org.springframework.http.HttpMethod;, +	private static final List<HttpMethod> SUPPORTED_METHODS =, +			Arrays.asList(HttpMethod.POST, HttpMethod.PUT, HttpMethod.PATCH);, +, +		ServletServerHttpRequest inputMessage = new ServletServerHttpRequest(servletRequest);, +		Object arg = null;, +		if (webRequest.getHeader("Content-Type") != null ||, +				SUPPORTED_METHODS.contains(inputMessage.getMethod())) {, +			arg = readWithMessageConverters(inputMessage, methodParam, paramType);, +		}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapterIntegrationTests.java, +		request.setMethod("POST");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.java, +import java.util.Arrays;, +import org.springframework.http.HttpMethod;, +	private static final List<HttpMethod> SUPPORTED_METHODS =, +			Arrays.asList(HttpMethod.POST, HttpMethod.PUT, HttpMethod.PATCH);, +, +		ServletServerHttpRequest inputMessage = new ServletServerHttpRequest(servletRequest);, +		Object arg = null;, +		if (webRequest.getHeader("Content-Type") != null ||, +				SUPPORTED_METHODS.contains(inputMessage.getMethod())) {, +			arg = readWithMessageConverters(inputMessage, methodParam, paramType);, +		}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapterIntegrationTests.java, +		request.setMethod("POST");, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorMockTests.java, +		servletRequest.setMethod("POST");, +	@Test(expected = HttpMediaTypeNotSupportedException.class), +	public void resolveArgumentNotGetRequests() throws Exception {, +		servletRequest.setMethod("GET");, +		servletRequest.setContent(new byte[0]);, +		given(messageConverter.canRead(String.class, MediaType.APPLICATION_OCTET_STREAM)).willReturn(false);, +		assertNull(processor.resolveArgument(paramStringNotRequired, mavContainer, webRequest, new ValidatingBinderFactory()));, +	}, +, +	@Test, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.java, +import java.util.Arrays;, +import org.springframework.http.HttpMethod;, +	private static final List<HttpMethod> SUPPORTED_METHODS =, +			Arrays.asList(HttpMethod.POST, HttpMethod.PUT, HttpMethod.PATCH);, +, +		ServletServerHttpRequest inputMessage = new ServletServerHttpRequest(servletRequest);, +		Object arg = null;, +		if (webRequest.getHeader("Content-Type") != null ||, +				SUPPORTED_METHODS.contains(inputMessage.getMethod())) {, +			arg = readWithMessageConverters(inputMessage, methodParam, paramType);, +		}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapterIntegrationTests.java, +		request.setMethod("POST");, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorMockTests.java, +		servletRequest.setMethod("POST");, +	@Test(expected = HttpMediaTypeNotSupportedException.class), +	public void resolveArgumentNotGetRequests() throws Exception {, +		servletRequest.setMethod("GET");, +		servletRequest.setContent(new byte[0]);, +		given(messageConverter.canRead(String.class, MediaType.APPLICATION_OCTET_STREAM)).willReturn(false);, +		assertNull(processor.resolveArgument(paramStringNotRequired, mavContainer, webRequest, new ValidatingBinderFactory()));, +	}, +, +	@Test, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorTests.java, +		servletRequest.setMethod("POST");, +		this.servletRequest.setMethod("GET");]