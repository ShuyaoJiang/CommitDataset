[+++ b/spring-framework-reference/src/validation.xml, +				Built on the Spring Expression Language (SpEL), this system is capable of mapping between a variety of object types, including JavaBeans, Arrays, Collections, and Maps., +				It can perform field-to-field, field-to-multi-field, multi-field to field, and conditional mappings., +				It also can carry out type conversion and recursive mapping, which are often required with rich object models., +					To obtain a general purpose object Mapper with its default configuration, simply call <methodname>MappingFactory.getDefaultMapper()</methodname>., +					Explicit mapping rules always override the default rule., +						Since these two field names are not the same, the default auto-mapping rule would not apply., +						Handle a requirement like this by explicitly registering a mapping rule:, +					<title>Mapping a single field to multiple fields</title>, +					<title>Mapping multiple fields to a single field</title>, +						No default mapping is performed for <literal>activationDay</literal> or <literal>activationTime</literal> since an explicit mapping rule has been configured for these fields., +					</para>, +				</section>, +				<section id="mapping.SpelMapper-Explicit-conditionalMappings">, +					<title>Mapping conditionally</title>, +					<para>, +						Suppose you need to map <literal>Map.countryCode</literal> to <literal>PhoneNumber.countryCode</literal> only if the source Map contains a international phone number., +						Handle conditional mapping requirements like this by explicitly registering a mapping rule:, +					</para>, +					<programlisting language="java"><![CDATA[, +builder.addConditionalMapping("countryCode", "international == 'true'");]]>, +					</programlisting>			, +					<para>, +						In the example above, the <literal>countryCode</literal> field will only be mapped if the international field is 'true'., +						<literal>international == 'true'</literal> is a boolean expression that must evaluate to true for the mapping to be executed., +						No default mapping is performed for <literal>countryCode</literal> since an explicit mapping rule has been configured for this field., +				<programlisting language="java"><![CDATA[, +builder.setExcludedFields("name");]]>, +				</programlisting>, +					You may also register custom Converters to convert values between mapped field of different types:]