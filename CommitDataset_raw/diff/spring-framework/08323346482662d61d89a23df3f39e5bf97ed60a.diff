[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/xml/DocumentLoader.java, + * Copyright 2002-2009 the original author or authors., +	 * @param namespaceAware <code>true</code> if support for XML namespaces is to be provided, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/xml/DocumentLoader.java, + * Copyright 2002-2009 the original author or authors., +	 * @param namespaceAware <code>true</code> if support for XML namespaces is to be provided, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.java, + * Copyright 2002-2009 the original author or authors., +	private boolean namespaceAware = false;, +, +	 * Set whether or not the XML parser should be XML namespace aware., +	 * Default is "false"., +	 */, +	public void setNamespaceAware(boolean namespaceAware) {, +		this.namespaceAware = namespaceAware;, +	}, +, +	/**, +	 * Return whether or not the XML parser should be XML namespace aware., +	 */, +	public boolean isNamespaceAware() {, +		return this.namespaceAware;, +	}, +, +	/**, +	 * Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use., +	 * <p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}, +	 * which exhibits fail fast behaviour. External tools can provide an alternative implementation, +	 * that collates errors and warnings for display in the tool UI., +	 * Specify which {@link ReaderEventListener} to use., +	 * <p>The default implementation is EmptyReaderEventListener which discards every event notification., +	 * External tools can provide an alternative implementation to monitor the components being, +	 * registered in the BeanFactory., +	 * Specify the {@link SourceExtractor} to use., +	 * <p>The default implementation is {@link NullSourceExtractor} which simply returns <code>null</code>, +	 * as the source object. This means that - during normal runtime execution -, +	 * no additional source metadata is attached to the bean configuration metadata., +	 * Specify the {@link NamespaceHandlerResolver} to use., +	 * <p>If none is specified, a default instance will be created through, +	 * {@link #createDefaultNamespaceHandlerResolver()}., +	 * Specify the {@link DocumentLoader} to use., +	 * <p>The default implementation is {@link DefaultDocumentLoader}, +	 * which loads {@link Document} instances using JAXP., +	 * Set a SAX entity resolver to be used for parsing., +	 * <p>By default, {@link ResourceEntityResolver} will be used. Can be overridden, +	 * for custom entity resolution, for example relative to some specific base path., +	 * Specify the {@link BeanDefinitionDocumentReader} implementation to use,, +	 * <p>The default is {@link DefaultBeanDefinitionDocumentReader}.]