[+++ b/spring-web/src/main/java/org/springframework/http/codec/ClientCodecConfigurer.java, + * Extension of {@link CodecConfigurer} for HTTP message reader and writer, + * options relevant on the client side., +	/**, +	 * {@inheritDoc}, +	 * <p>On the client side, built-in default also include customizations related, +	 * to multipart readers and writers, as well as the decoder for SSE., +	 */, +	 * Static factory method for a {@code ClientCodecConfigurer}., +	 * {@link CodecConfigurer.DefaultCodecs} extension with extra client-side options., +++ b/spring-web/src/main/java/org/springframework/http/codec/ClientCodecConfigurer.java, + * Extension of {@link CodecConfigurer} for HTTP message reader and writer, + * options relevant on the client side., +	/**, +	 * {@inheritDoc}, +	 * <p>On the client side, built-in default also include customizations related, +	 * to multipart readers and writers, as well as the decoder for SSE., +	 */, +	 * Static factory method for a {@code ClientCodecConfigurer}., +	 * {@link CodecConfigurer.DefaultCodecs} extension with extra client-side options., +++ b/spring-web/src/main/java/org/springframework/http/codec/CodecConfigurer.java, + * Copyright 2002-2018 the original author or authors., + * message readers and writers. This is used as follows:, + * <ul>, + * <li>Use {@link ClientCodecConfigurer#create()} or, + * {@link ServerCodecConfigurer#create()} to create an instance., + * <li>Use {@link #defaultCodecs()} to customize HTTP message readers or writers, + * registered by default., + * <li>Use {@link #customCodecs()} to add custom HTTP message readers or writers., + * <li>Use {@link #getReaders()} and {@link #getWriters()} to obtain the list of, + * configured HTTP message readers and writers., + * </ul>, + *, + * <p>HTTP message readers and writers are divided into 3 categories that are, + * ordered as follows:, + * <ol>, + * <li>Typed readers and writers that support specific types, e.g. byte[], String., + * <li>Object readers and writers, e.g. JSON, XML., + * <li>Catch-all readers or writers, e.g. String with any media type., + * </ol>, + *, + * <p>Typed and object readers are further sub-divided and ordered as follows:, + * <ol>, + * <li>Default HTTP reader and writer registrations., + * <li>Custom readers and writers., + * </ol>, +	 * Provides a way to customize or replace HTTP message readers and writers, +	 * registered by default., +	 * @see #registerDefaults(boolean), +	 * Register custom HTTP message readers or writers in addition to the ones, +	 * registered by default., +	 */, +	CustomCodecs customCodecs();, +, +	/**, +	 * Provides a way to completely turn off registration of default HTTP message, +	 * readers and writers, and instead rely only on the ones provided via, +	 * {@link #customCodecs()}., +	 * <p>By default this is set to {@code "true"} in which case default, +	 * registrations are made; setting this to {@code false} disables default, +	 * registrations., +	 * Customize or replace the HTTP message readers and writers registered by, +	 * default. The options are further extended by, +	 * {@link ClientCodecConfigurer.ClientDefaultCodecs ClientDefaultCodecs} and, +	 * {@link ServerCodecConfigurer.ServerDefaultCodecs ServerDefaultCodecs}., +	 * Registry for custom HTTP message readers and writers., +++ b/spring-web/src/main/java/org/springframework/http/codec/ClientCodecConfigurer.java, + * Extension of {@link CodecConfigurer} for HTTP message reader and writer, + * options relevant on the client side., +	/**, +	 * {@inheritDoc}, +	 * <p>On the client side, built-in default also include customizations related, +	 * to multipart readers and writers, as well as the decoder for SSE., +	 */, +	 * Static factory method for a {@code ClientCodecConfigurer}., +	 * {@link CodecConfigurer.DefaultCodecs} extension with extra client-side options., +++ b/spring-web/src/main/java/org/springframework/http/codec/CodecConfigurer.java, + * Copyright 2002-2018 the original author or authors., + * message readers and writers. This is used as follows:, + * <ul>, + * <li>Use {@link ClientCodecConfigurer#create()} or, + * {@link ServerCodecConfigurer#create()} to create an instance., + * <li>Use {@link #defaultCodecs()} to customize HTTP message readers or writers, + * registered by default., + * <li>Use {@link #customCodecs()} to add custom HTTP message readers or writers., + * <li>Use {@link #getReaders()} and {@link #getWriters()} to obtain the list of, + * configured HTTP message readers and writers., + * </ul>, + *, + * <p>HTTP message readers and writers are divided into 3 categories that are, + * ordered as follows:, + * <ol>, + * <li>Typed readers and writers that support specific types, e.g. byte[], String., + * <li>Object readers and writers, e.g. JSON, XML., + * <li>Catch-all readers or writers, e.g. String with any media type., + * </ol>, + *, + * <p>Typed and object readers are further sub-divided and ordered as follows:, + * <ol>, + * <li>Default HTTP reader and writer registrations.]