[+++ b/spring-web/src/main/java/org/springframework/web/client/RestOperations.java, + * Copyright 2002-2016 the original author or authors., +	// PATCH, +, +	/**, +	 * Update a resource by PATCHing the given object to the URI template,, +	 * and returns the representation found in the response., +	 * <p>URI Template variables are expanded using the given URI variables, if any., +	 * <p>The {@code request} parameter can be a {@link HttpEntity} in order to, +	 * add additional HTTP headers to the request., +	 * @param url the URL, +	 * @param request the Object to be PATCHed, may be {@code null}, +	 * @param responseType the type of the return value, +	 * @param uriVariables the variables to expand the template, +	 * @return the converted object, +	 * @see HttpEntity, +	 * @since 5.0, +	 */, +	<T> T patchForObject(String url, Object request, Class<T> responseType, Object... uriVariables), +			throws RestClientException;, +, +	/**, +	 * Update a resource by PATCHing the given object to the URI template,, +	 * and returns the representation found in the response., +	 * <p>URI Template variables are expanded using the given map., +	 * <p>The {@code request} parameter can be a {@link HttpEntity} in order to, +	 * add additional HTTP headers to the request., +	 * @param url the URL, +	 * @param request the Object to be PATCHed, may be {@code null}, +	 * @param responseType the type of the return value, +	 * @param uriVariables the variables to expand the template, +	 * @return the converted object, +	 * @see HttpEntity, +	 */, +	<T> T patchForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables), +			throws RestClientException;, +, +	/**, +	 * Update a resource by PATCHing the given object to the URL,, +	 * and returns the representation found in the response., +	 * <p>The {@code request} parameter can be a {@link HttpEntity} in order to, +	 * add additional HTTP headers to the request., +	 * @param url the URL, +	 * @param request the Object to be POSTed, may be {@code null}, +	 * @param responseType the type of the return value, +	 * @return the converted object, +	 * @see HttpEntity, +	 */, +	<T> T patchForObject(URI url, Object request, Class<T> responseType) throws RestClientException;, +, +, +, +++ b/spring-web/src/main/java/org/springframework/web/client/RestOperations.java, + * Copyright 2002-2016 the original author or authors., +	// PATCH, +, +	/**, +	 * Update a resource by PATCHing the given object to the URI template,, +	 * and returns the representation found in the response., +	 * <p>URI Template variables are expanded using the given URI variables, if any., +	 * <p>The {@code request} parameter can be a {@link HttpEntity} in order to, +	 * add additional HTTP headers to the request., +	 * @param url the URL, +	 * @param request the Object to be PATCHed, may be {@code null}, +	 * @param responseType the type of the return value, +	 * @param uriVariables the variables to expand the template, +	 * @return the converted object, +	 * @see HttpEntity, +	 * @since 5.0, +	 */, +	<T> T patchForObject(String url, Object request, Class<T> responseType, Object... uriVariables), +			throws RestClientException;, +, +	/**, +	 * Update a resource by PATCHing the given object to the URI template,, +	 * and returns the representation found in the response., +	 * <p>URI Template variables are expanded using the given map., +	 * <p>The {@code request} parameter can be a {@link HttpEntity} in order to, +	 * add additional HTTP headers to the request., +	 * @param url the URL, +	 * @param request the Object to be PATCHed, may be {@code null}, +	 * @param responseType the type of the return value, +	 * @param uriVariables the variables to expand the template, +	 * @return the converted object, +	 * @see HttpEntity, +	 */, +	<T> T patchForObject(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables), +			throws RestClientException;, +, +	/**, +	 * Update a resource by PATCHing the given object to the URL,, +	 * and returns the representation found in the response., +	 * <p>The {@code request} parameter can be a {@link HttpEntity} in order to, +	 * add additional HTTP headers to the request., +	 * @param url the URL, +	 * @param request the Object to be POSTed, may be {@code null}, +	 * @param responseType the type of the return value, +	 * @return the converted object, +	 * @see HttpEntity, +	 */]