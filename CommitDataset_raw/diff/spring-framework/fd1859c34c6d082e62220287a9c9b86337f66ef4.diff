[+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java, +		this(opts -> opts.host(host).port(port), codec);, +	 * Alternate constructor with a {@link ClientOptions.Builder<?>} consumer, +	 * providing additional control beyond a host and a port., +	public ReactorNettyTcpClient(Consumer<ClientOptions.Builder<?>> optionsConsumer, ReactorNettyCodec<P> codec) {, +		Assert.notNull(optionsConsumer, "Consumer<ClientOptions.Builder<?> is required");, +		Consumer<ClientOptions.Builder<?>> builtInConsumer = opts -> opts, +++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java, +		this(opts -> opts.host(host).port(port), codec);, +	 * Alternate constructor with a {@link ClientOptions.Builder<?>} consumer, +	 * providing additional control beyond a host and a port., +	public ReactorNettyTcpClient(Consumer<ClientOptions.Builder<?>> optionsConsumer, ReactorNettyCodec<P> codec) {, +		Assert.notNull(optionsConsumer, "Consumer<ClientOptions.Builder<?> is required");, +		Consumer<ClientOptions.Builder<?>> builtInConsumer = opts -> opts, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpConnector.java, +	 * Create a Reactor Netty {@link ClientHttpConnector} with the given, +	 * {@link HttpClientOptions.Builder}, +	public ReactorClientHttpConnector(Consumer<? super HttpClientOptions.Builder> clientOptions) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java, +		this(opts -> opts.host(host).port(port), codec);, +	 * Alternate constructor with a {@link ClientOptions.Builder<?>} consumer, +	 * providing additional control beyond a host and a port., +	public ReactorNettyTcpClient(Consumer<ClientOptions.Builder<?>> optionsConsumer, ReactorNettyCodec<P> codec) {, +		Assert.notNull(optionsConsumer, "Consumer<ClientOptions.Builder<?> is required");, +		Consumer<ClientOptions.Builder<?>> builtInConsumer = opts -> opts, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpConnector.java, +	 * Create a Reactor Netty {@link ClientHttpConnector} with the given, +	 * {@link HttpClientOptions.Builder}, +	public ReactorClientHttpConnector(Consumer<? super HttpClientOptions.Builder> clientOptions) {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/socket/client/ReactorNettyWebSocketClient.java, +	 * Constructor that accepts an {@link HttpClientOptions.Builder} consumer, +	 * to supply to {@link HttpClient#create(Consumer)}., +	public ReactorNettyWebSocketClient(Consumer<? super HttpClientOptions.Builder> clientOptions) {]