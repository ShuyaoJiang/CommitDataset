[+++ b/spring-test/src/main/java/org/springframework/test/context/jdbc/SqlScriptsTestExecutionListener.java, +			new TransactionTemplate(transactionManager, transactionAttribute).execute(status -> {, +				return null;, +++ b/spring-test/src/main/java/org/springframework/test/context/jdbc/SqlScriptsTestExecutionListener.java, +			new TransactionTemplate(transactionManager, transactionAttribute).execute(status -> {, +				return null;, +++ b/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java, +import java.util.Arrays;, +import java.util.stream.Collectors;, +		return Arrays.stream(ReflectionUtils.getUniqueDeclaredMethods(clazz)), +				.filter(method -> AnnotatedElementUtils.hasAnnotation(method, annotationType)), +				.collect(Collectors.toList());, +++ b/spring-test/src/main/java/org/springframework/test/context/jdbc/SqlScriptsTestExecutionListener.java, +			new TransactionTemplate(transactionManager, transactionAttribute).execute(status -> {, +				return null;, +++ b/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java, +import java.util.Arrays;, +import java.util.stream.Collectors;, +		return Arrays.stream(ReflectionUtils.getUniqueDeclaredMethods(clazz)), +				.filter(method -> AnnotatedElementUtils.hasAnnotation(method, annotationType)), +				.collect(Collectors.toList());, +++ b/spring-test/src/main/java/org/springframework/test/context/util/TestContextResourceUtils.java, +import java.util.Arrays;, +import java.util.stream.Collectors;, +import java.util.stream.Stream;, +		return stream(resourceLoader, paths).toArray(Resource[]::new);, +		return stream(resourceLoader, paths).collect(Collectors.toList());, +, +	private static Stream<Resource> stream(ResourceLoader resourceLoader, String... paths) {, +		return Arrays.stream(paths).map(resourceLoader::getResource);]