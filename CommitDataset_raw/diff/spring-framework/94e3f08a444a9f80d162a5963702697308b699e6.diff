[+++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JcaListenerContainerParser.java, + * Copyright 2002-2012 the original author or authors., +	@Override, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JcaListenerContainerParser.java, + * Copyright 2002-2012 the original author or authors., +	@Override, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JmsListenerContainerParser.java, + * Copyright 2002-2012 the original author or authors., +	private static final String RECEIVE_TIMEOUT_ATTRIBUTE = "receive-timeout";, +, +		String receiveTimeout = containerEle.getAttribute(RECEIVE_TIMEOUT_ATTRIBUTE);, +		if (StringUtils.hasText(receiveTimeout)) {, +			if (containerType.startsWith("default")) {, +				containerDef.getPropertyValues().add("receiveTimeout", new Integer(receiveTimeout));, +			}, +		}, +, +	@Override, +	@Override, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JcaListenerContainerParser.java, + * Copyright 2002-2012 the original author or authors., +	@Override, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JmsListenerContainerParser.java, + * Copyright 2002-2012 the original author or authors., +	private static final String RECEIVE_TIMEOUT_ATTRIBUTE = "receive-timeout";, +, +		String receiveTimeout = containerEle.getAttribute(RECEIVE_TIMEOUT_ATTRIBUTE);, +		if (StringUtils.hasText(receiveTimeout)) {, +			if (containerType.startsWith("default")) {, +				containerDef.getPropertyValues().add("receiveTimeout", new Integer(receiveTimeout));, +			}, +		}, +, +	@Override, +	@Override, +++ b/org.springframework.jms/src/main/resources/org/springframework/jms/config/spring-jms-3.1.xsd, +			<xsd:attribute name="receive-timeout" type="xsd:int">, +				<xsd:annotation>, +					<xsd:documentation><![CDATA[, +	The timeout to use for receive calls (in milliseconds)., +	The default is 1000 ms (1 sec); -1 indicates no timeout at all., +					]]></xsd:documentation>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JcaListenerContainerParser.java, + * Copyright 2002-2012 the original author or authors., +	@Override, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JmsListenerContainerParser.java, + * Copyright 2002-2012 the original author or authors., +	private static final String RECEIVE_TIMEOUT_ATTRIBUTE = "receive-timeout";, +, +		String receiveTimeout = containerEle.getAttribute(RECEIVE_TIMEOUT_ATTRIBUTE);, +		if (StringUtils.hasText(receiveTimeout)) {, +			if (containerType.startsWith("default")) {, +				containerDef.getPropertyValues().add("receiveTimeout", new Integer(receiveTimeout));, +			}, +		}, +, +	@Override, +	@Override, +++ b/org.springframework.jms/src/main/resources/org/springframework/jms/config/spring-jms-3.1.xsd, +			<xsd:attribute name="receive-timeout" type="xsd:int">, +				<xsd:annotation>, +					<xsd:documentation><![CDATA[, +	The timeout to use for receive calls (in milliseconds)., +	The default is 1000 ms (1 sec); -1 indicates no timeout at all., +					]]></xsd:documentation>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/org.springframework.jms/src/test/java/org/springframework/jms/config/jmsNamespaceHandlerTests.xml, +				http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd">, +			transaction-manager="testTransactionManager" error-handler="testErrorHandler", +			concurrency="1-2" prefetch="50" receive-timeout="100" phase="99">]