[+++ b/build.gradle, +	ext.jackson2Version        = "2.9.0.pr1", +	ext.log4jVersion           = '2.8.1', +		testCompile("commons-io:commons-io:2.5"), +		optional("net.sourceforge.htmlunit:htmlunit:2.25"), +		optional("org.seleniumhq.selenium:htmlunit-driver:2.25"), +		optional("org.seleniumhq.selenium:selenium-java:3.2.0") {, +++ b/build.gradle, +	ext.jackson2Version        = "2.9.0.pr1", +	ext.log4jVersion           = '2.8.1', +		testCompile("commons-io:commons-io:2.5"), +		optional("net.sourceforge.htmlunit:htmlunit:2.25"), +		optional("org.seleniumhq.selenium:htmlunit-driver:2.25"), +		optional("org.seleniumhq.selenium:selenium-java:3.2.0") {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.java, + * Copyright 2002-2017 the original author or authors., +import java.nio.charset.Charset;, +import java.nio.charset.StandardCharsets;, + * <p>By default the first path segment of the URL is used as the context path., +, +, +		Charset charset = getCharset();, +		request.setCharacterEncoding(charset.name());, +	private Charset getCharset() {, +		Charset charset = this.webRequest.getCharset();, +		return (charset != null ? charset : StandardCharsets.ISO_8859_1);, +	}, +, +	private void content(MockHttpServletRequest request, Charset charset) {, +++ b/build.gradle, +	ext.jackson2Version        = "2.9.0.pr1", +	ext.log4jVersion           = '2.8.1', +		testCompile("commons-io:commons-io:2.5"), +		optional("net.sourceforge.htmlunit:htmlunit:2.25"), +		optional("org.seleniumhq.selenium:htmlunit-driver:2.25"), +		optional("org.seleniumhq.selenium:selenium-java:3.2.0") {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.java, + * Copyright 2002-2017 the original author or authors., +import java.nio.charset.Charset;, +import java.nio.charset.StandardCharsets;, + * <p>By default the first path segment of the URL is used as the context path., +, +, +		Charset charset = getCharset();, +		request.setCharacterEncoding(charset.name());, +	private Charset getCharset() {, +		Charset charset = this.webRequest.getCharset();, +		return (charset != null ? charset : StandardCharsets.ISO_8859_1);, +	}, +, +	private void content(MockHttpServletRequest request, Charset charset) {, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/htmlunit/DelegatingWebConnectionTests.java, +	private DelegatingWebConnection webConnection;, +, +	private WebRequest request;, +, +	private WebResponse expectedResponse;, +, +, +	public void setup() throws Exception {, +, +++ b/build.gradle, +	ext.jackson2Version        = "2.9.0.pr1", +	ext.log4jVersion           = '2.8.1', +		testCompile("commons-io:commons-io:2.5"), +		optional("net.sourceforge.htmlunit:htmlunit:2.25"), +		optional("org.seleniumhq.selenium:htmlunit-driver:2.25"), +		optional("org.seleniumhq.selenium:selenium-java:3.2.0") {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.java, + * Copyright 2002-2017 the original author or authors., +import java.nio.charset.Charset;, +import java.nio.charset.StandardCharsets;, + * <p>By default the first path segment of the URL is used as the context path., +, +, +		Charset charset = getCharset();, +		request.setCharacterEncoding(charset.name());, +	private Charset getCharset() {, +		Charset charset = this.webRequest.getCharset();, +		return (charset != null ? charset : StandardCharsets.ISO_8859_1);, +	}, +, +	private void content(MockHttpServletRequest request, Charset charset) {, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/htmlunit/DelegatingWebConnectionTests.java, +	private DelegatingWebConnection webConnection;, +, +	private WebRequest request;, +, +	private WebResponse expectedResponse;, +, +, +	public void setup() throws Exception {, +, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilderTests.java, + * Copyright 2002-2017 the original author or authors., +import java.nio.charset.StandardCharsets;, +import com.gargoylesoftware.htmlunit.HttpMethod;, +import com.gargoylesoftware.htmlunit.WebClient;, +import com.gargoylesoftware.htmlunit.WebRequest;, +import com.gargoylesoftware.htmlunit.util.NameValuePair;]