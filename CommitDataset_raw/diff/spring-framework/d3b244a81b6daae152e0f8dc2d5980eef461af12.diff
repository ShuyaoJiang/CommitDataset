[+++ b/spring-context/src/main/java/org/springframework/cache/annotation/CachingConfigurationSelector.java, +	private static final boolean jsr107Present;, +	private static final boolean jcacheImplPresent;, +, +	static {, +		ClassLoader classLoader = CachingConfigurationSelector.class.getClassLoader();, +		jsr107Present = ClassUtils.isPresent("javax.cache.Cache", classLoader);, +		jcacheImplPresent = ClassUtils.isPresent(PROXY_JCACHE_CONFIGURATION_CLASS, classLoader);, +	}, +++ b/spring-context/src/main/java/org/springframework/cache/annotation/CachingConfigurationSelector.java, +	private static final boolean jsr107Present;, +	private static final boolean jcacheImplPresent;, +, +	static {, +		ClassLoader classLoader = CachingConfigurationSelector.class.getClassLoader();, +		jsr107Present = ClassUtils.isPresent("javax.cache.Cache", classLoader);, +		jcacheImplPresent = ClassUtils.isPresent(PROXY_JCACHE_CONFIGURATION_CLASS, classLoader);, +	}, +++ b/spring-context/src/main/java/org/springframework/cache/config/AnnotationDrivenCacheBeanDefinitionParser.java, +	private static final boolean jsr107Present;, +	private static final boolean jcacheImplPresent;, +, +	static {, +		ClassLoader classLoader = AnnotationDrivenCacheBeanDefinitionParser.class.getClassLoader();, +		jsr107Present = ClassUtils.isPresent("javax.cache.Cache", classLoader);, +		jcacheImplPresent = ClassUtils.isPresent(, +				"org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource", classLoader);, +	}, +++ b/spring-context/src/main/java/org/springframework/cache/annotation/CachingConfigurationSelector.java, +	private static final boolean jsr107Present;, +	private static final boolean jcacheImplPresent;, +, +	static {, +		ClassLoader classLoader = CachingConfigurationSelector.class.getClassLoader();, +		jsr107Present = ClassUtils.isPresent("javax.cache.Cache", classLoader);, +		jcacheImplPresent = ClassUtils.isPresent(PROXY_JCACHE_CONFIGURATION_CLASS, classLoader);, +	}, +++ b/spring-context/src/main/java/org/springframework/cache/config/AnnotationDrivenCacheBeanDefinitionParser.java, +	private static final boolean jsr107Present;, +	private static final boolean jcacheImplPresent;, +, +	static {, +		ClassLoader classLoader = AnnotationDrivenCacheBeanDefinitionParser.class.getClassLoader();, +		jsr107Present = ClassUtils.isPresent("javax.cache.Cache", classLoader);, +		jcacheImplPresent = ClassUtils.isPresent(, +				"org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource", classLoader);, +	}, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java, +	private static final boolean jsr250Present;, +	private static final boolean jpaPresent;, +, +	static {, +		ClassLoader classLoader = AnnotationConfigUtils.class.getClassLoader();, +		jsr250Present = ClassUtils.isPresent("javax.annotation.Resource", classLoader);, +		jpaPresent = ClassUtils.isPresent("javax.persistence.EntityManagerFactory", classLoader) &&, +				ClassUtils.isPresent(PERSISTENCE_ANNOTATION_PROCESSOR_CLASS_NAME, classLoader);, +	}, +++ b/spring-context/src/main/java/org/springframework/cache/annotation/CachingConfigurationSelector.java, +	private static final boolean jsr107Present;, +	private static final boolean jcacheImplPresent;, +, +	static {, +		ClassLoader classLoader = CachingConfigurationSelector.class.getClassLoader();, +		jsr107Present = ClassUtils.isPresent("javax.cache.Cache", classLoader);, +		jcacheImplPresent = ClassUtils.isPresent(PROXY_JCACHE_CONFIGURATION_CLASS, classLoader);, +	}, +++ b/spring-context/src/main/java/org/springframework/cache/config/AnnotationDrivenCacheBeanDefinitionParser.java, +	private static final boolean jsr107Present;, +	private static final boolean jcacheImplPresent;, +, +	static {, +		ClassLoader classLoader = AnnotationDrivenCacheBeanDefinitionParser.class.getClassLoader();, +		jsr107Present = ClassUtils.isPresent("javax.cache.Cache", classLoader);, +		jcacheImplPresent = ClassUtils.isPresent(, +				"org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource", classLoader);, +	}, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java, +	private static final boolean jsr250Present;, +	private static final boolean jpaPresent;, +, +	static {, +		ClassLoader classLoader = AnnotationConfigUtils.class.getClassLoader();, +		jsr250Present = ClassUtils.isPresent("javax.annotation.Resource", classLoader);, +		jpaPresent = ClassUtils.isPresent("javax.persistence.EntityManagerFactory", classLoader) &&, +				ClassUtils.isPresent(PERSISTENCE_ANNOTATION_PROCESSOR_CLASS_NAME, classLoader);, +	}, +++ b/spring-context/src/main/java/org/springframework/context/config/MBeanServerBeanDefinitionParser.java, + * Copyright 2002-2018 the original author or authors., +	private static final boolean weblogicPresent;, +	private static final boolean webspherePresent;, +, +	static {, +		ClassLoader classLoader = MBeanServerBeanDefinitionParser.class.getClassLoader();, +		weblogicPresent = ClassUtils.isPresent("weblogic.management.Helper", classLoader);, +		webspherePresent = ClassUtils.isPresent("com.ibm.websphere.management.AdminServiceFactory", classLoader);, +	}, +++ b/spring-context/src/main/java/org/springframework/cache/annotation/CachingConfigurationSelector.java, +	private static final boolean jsr107Present;, +	private static final boolean jcacheImplPresent;, +]