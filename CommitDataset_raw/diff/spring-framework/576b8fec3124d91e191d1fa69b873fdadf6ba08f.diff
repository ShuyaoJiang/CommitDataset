[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/converter/GenericConverter.java, + * Copyright 2002-2011 the original author or authors., +import java.util.Set;, +, +, +        @Override, +        public boolean equals(Object obj) {, +            if (this == obj) {, +				return true;, +			}, +            if (obj == null || obj.getClass() != ConvertiblePair.class) {, +				return false;, +			}, +            ConvertiblePair other = (ConvertiblePair) obj;, +            return this.sourceType.equals(other.sourceType) && this.targetType.equals(other.targetType);, +, +        }, +, +        @Override, +        public int hashCode() {, +            return this.sourceType.hashCode() * 31 + this.targetType.hashCode();, +        }, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/converter/GenericConverter.java, + * Copyright 2002-2011 the original author or authors., +import java.util.Set;, +, +, +        @Override, +        public boolean equals(Object obj) {, +            if (this == obj) {, +				return true;, +			}, +            if (obj == null || obj.getClass() != ConvertiblePair.class) {, +				return false;, +			}, +            ConvertiblePair other = (ConvertiblePair) obj;, +            return this.sourceType.equals(other.sourceType) && this.targetType.equals(other.targetType);, +, +        }, +, +        @Override, +        public int hashCode() {, +            return this.sourceType.hashCode() * 31 + this.targetType.hashCode();, +        }, +++ b/org.springframework.core/src/test/java/org/springframework/core/convert/support/CollectionToCollectionConverterTests.java, +/*, + * Copyright 2002-2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.core.convert.support;, +import java.util.Collection;, +import java.util.Vector;, +, +import static org.junit.Assert.*;, +, +/**, + * @author Keith Donald, + */, +, +	@Test, +	public void convertEmptyVector_shouldReturnEmptyArrayList() {, +		Vector<String> vector = new Vector<String>();, +		vector.add("Element");, +		testCollectionConversionToArrayList(vector);, +	@Test, +	public void convertNonEmptyVector_shouldReturnNonEmptyArrayList() {, +		Vector<String> vector = new Vector<String>();, +		vector.add("Element");, +		testCollectionConversionToArrayList(vector);, +	}, +, +	private void testCollectionConversionToArrayList(Collection<String> aSource) {, +		Object myConverted = (new CollectionToCollectionConverter(new GenericConversionService())).convert(, +				aSource, TypeDescriptor.forObject(aSource), TypeDescriptor.forObject(new ArrayList()));, +		assertTrue(myConverted instanceof ArrayList<?>);, +		assertEquals(aSource.size(), ((ArrayList<?>) myConverted).size());, +	}, +, +}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/converter/GenericConverter.java, + * Copyright 2002-2011 the original author or authors., +import java.util.Set;, +, +, +        @Override, +        public boolean equals(Object obj) {, +            if (this == obj) {, +				return true;, +			}]