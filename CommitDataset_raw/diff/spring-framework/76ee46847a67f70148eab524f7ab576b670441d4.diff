[+++ b/spring-web/src/main/java/org/springframework/web/filter/CharacterEncodingFilter.java, + * Copyright 2002-2016 the original author or authors., +, +	private boolean forceRequestEncoding = false;, +, +	private boolean forceResponseEncoding = false;, +		this(encoding, forceEncoding, forceEncoding);, +	/**, +	 * Create a {@code CharacterEncodingFilter} for the given encoding., +	 * @param encoding the encoding to apply, +	 * @param forceRequestEncoding whether the specified encoding is supposed to, +	 * override existing request encodings, +	 * @param forceResponseEncoding whether the specified encoding is supposed to, +	 * override existing response encodings, +	 * @since 4.3.0, +	 * @see #setEncoding, +	 * @see #setForceRequestEncoding(boolean), +	 * @see #setForceResponseEncoding(boolean), +	 */, +	public CharacterEncodingFilter(String encoding, boolean forceRequestEncoding, boolean forceResponseEncoding) {, +		Assert.hasLength(encoding, "Encoding must not be empty");, +		this.encoding = encoding;, +		this.forceRequestEncoding = forceRequestEncoding;, +		this.forceResponseEncoding = forceResponseEncoding;, +	}, +	 * <p>This is the equivalent to setting both {@link #setForceRequestEncoding(boolean)}, +	 * and {@link #setForceResponseEncoding(boolean)}., +	 * @see #setForceRequestEncoding(boolean), +	 * @see #setForceResponseEncoding(boolean), +		this.forceRequestEncoding = forceEncoding;, +		this.forceResponseEncoding = forceEncoding;, +	/**, +	 * Set whether the configured {@link #setEncoding encoding} of this filter, +	 * is supposed to override existing request encodings., +	 * <p>Default is "false", i.e. do not modify the encoding if, +	 * {@link javax.servlet.http.HttpServletRequest#getCharacterEncoding()}, +	 * returns a non-null value. Switch this to "true" to enforce the specified, +	 * encoding in any case., +	 * @since 4.3.0, +	 */, +	public void setForceRequestEncoding(boolean forceRequestEncoding) {, +		this.forceRequestEncoding = forceRequestEncoding;, +	}, +, +	/**, +	 * Set whether the configured {@link #setEncoding encoding} of this filter, +	 * is supposed to override existing response encodings., +	 * <p>Default is "false", i.e. do not modify the encoding., +	 * Switch this to "true" to enforce the specified encoding, +	 * for responses in any case., +	 * @since 4.3.0, +	 */, +	public void setForceResponseEncoding(boolean forceResponseEncoding) {, +		this.forceResponseEncoding = forceResponseEncoding;, +	}, +		if (this.encoding != null) {, +			if (this.forceRequestEncoding || request.getCharacterEncoding() == null) {, +			}, +			if (this.forceResponseEncoding) {, +++ b/spring-web/src/main/java/org/springframework/web/filter/CharacterEncodingFilter.java, + * Copyright 2002-2016 the original author or authors., +, +	private boolean forceRequestEncoding = false;, +, +	private boolean forceResponseEncoding = false;, +		this(encoding, forceEncoding, forceEncoding);, +	/**, +	 * Create a {@code CharacterEncodingFilter} for the given encoding., +	 * @param encoding the encoding to apply, +	 * @param forceRequestEncoding whether the specified encoding is supposed to, +	 * override existing request encodings, +	 * @param forceResponseEncoding whether the specified encoding is supposed to, +	 * override existing response encodings, +	 * @since 4.3.0, +	 * @see #setEncoding, +	 * @see #setForceRequestEncoding(boolean), +	 * @see #setForceResponseEncoding(boolean), +	 */, +	public CharacterEncodingFilter(String encoding, boolean forceRequestEncoding, boolean forceResponseEncoding) {, +		Assert.hasLength(encoding, "Encoding must not be empty");, +		this.encoding = encoding;, +		this.forceRequestEncoding = forceRequestEncoding;, +		this.forceResponseEncoding = forceResponseEncoding;, +	}, +	 * <p>This is the equivalent to setting both {@link #setForceRequestEncoding(boolean)}, +	 * and {@link #setForceResponseEncoding(boolean)}., +	 * @see #setForceRequestEncoding(boolean), +	 * @see #setForceResponseEncoding(boolean), +		this.forceRequestEncoding = forceEncoding;, +		this.forceResponseEncoding = forceEncoding;, +	/**, +	 * Set whether the configured {@link #setEncoding encoding} of this filter, +	 * is supposed to override existing request encodings., +	 * <p>Default is "false", i.e. do not modify the encoding if, +	 * {@link javax.servlet.http.HttpServletRequest#getCharacterEncoding()}, +	 * returns a non-null value. Switch this to "true" to enforce the specified, +	 * encoding in any case., +	 * @since 4.3.0, +	 */, +	public void setForceRequestEncoding(boolean forceRequestEncoding) {]