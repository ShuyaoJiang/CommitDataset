[+++ b/org.springframework.oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, + * Copyright 2002-2011 the original author or authors., +	private boolean supportJaxbElementClass = false;, +, +	/**, +	 * Specify whether the {@link #supports(Class)} returns {@code true} for the {@link JAXBElement} class., +	 * <p>Default is {@code false}, meaning that {@code supports(Class)} always returns {@code false} for, +	 * {@code JAXBElement} classes (though {@link #supports(Type)} can return {@code true}, since it can obtain the, +	 * type parameters of {@code JAXBElement})., +	 * <p>This property is typically enabled in combination with usage of classes like, +	 * {@link org.springframework.web.servlet.view.xml.MarshallingView MarshallingView}, since the {@code ModelAndView}, +	 * does not offer type parameter information at runtime., +	 *, +	 * @see #supports(Class), +	 * @see #supports(Type), +	 */, +	public void setSupportJaxbElementClass(boolean supportJaxbElementClass) {, +		this.supportJaxbElementClass = supportJaxbElementClass;, +	}, +, +		if (supportJaxbElementClass && JAXBElement.class.isAssignableFrom(clazz)) {, +			return true;, +		}, +++ b/org.springframework.oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, + * Copyright 2002-2011 the original author or authors., +	private boolean supportJaxbElementClass = false;, +, +	/**, +	 * Specify whether the {@link #supports(Class)} returns {@code true} for the {@link JAXBElement} class., +	 * <p>Default is {@code false}, meaning that {@code supports(Class)} always returns {@code false} for, +	 * {@code JAXBElement} classes (though {@link #supports(Type)} can return {@code true}, since it can obtain the, +	 * type parameters of {@code JAXBElement})., +	 * <p>This property is typically enabled in combination with usage of classes like, +	 * {@link org.springframework.web.servlet.view.xml.MarshallingView MarshallingView}, since the {@code ModelAndView}, +	 * does not offer type parameter information at runtime., +	 *, +	 * @see #supports(Class), +	 * @see #supports(Type), +	 */, +	public void setSupportJaxbElementClass(boolean supportJaxbElementClass) {, +		this.supportJaxbElementClass = supportJaxbElementClass;, +	}, +, +		if (supportJaxbElementClass && JAXBElement.class.isAssignableFrom(clazz)) {, +			return true;, +		}, +++ b/org.springframework.oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2MarshallerTests.java, + * Copyright 2002-2011 the original author or authors., +import javax.xml.namespace.QName;, +import static org.custommonkey.xmlunit.XMLAssert.assertFalse;, +import static org.custommonkey.xmlunit.XMLAssert.*;, +import static org.custommonkey.xmlunit.XMLAssert.fail;, +import static org.easymock.EasyMock.*;, +import static org.junit.Assert.assertTrue;, +, +	public void lazyInit() throws Exception {, +		marshaller.setSupportJaxbElementClass(true);, +		JAXBElement<FlightType> flightTypeJAXBElement = new JAXBElement<FlightType>(new QName("http://springframework.org", "flight"), FlightType.class,, +				new FlightType());, +		assertTrue("Jaxb2Marshaller does not support JAXBElement<FlightsType>", marshaller.supports(flightTypeJAXBElement.getClass()));, +]