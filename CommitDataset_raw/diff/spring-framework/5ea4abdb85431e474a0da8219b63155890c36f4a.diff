[+++ b/spring-web/src/main/java/org/springframework/web/HttpRequestMethodNotSupportedException.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.util.StringUtils;, +	 * @param supportedMethods the actually supported HTTP methods (may be {@code null}), +	 */, +	public HttpRequestMethodNotSupportedException(String method, Collection<String> supportedMethods) {, +		this(method, StringUtils.toStringArray(supportedMethods));, +	}, +, +	/**, +	 * Create a new HttpRequestMethodNotSupportedException., +	 * @param method the unsupported HTTP request method, +	 * @param supportedMethods the actually supported HTTP methods (may be {@code null}), +	 */, +	public HttpRequestMethodNotSupportedException(String method, String[] supportedMethods) {, +		this(method, supportedMethods, "Request method '" + method + "' not supported");, +	}, +, +	/**, +	 * Create a new HttpRequestMethodNotSupportedException., +	 * @param method the unsupported HTTP request method, +	 * Return the actually supported HTTP methods, or {@code null} if not known., +	 * Return the actually supported HTTP methods as {@link HttpMethod} instances,, +	 * or {@code null} if not known., +	 * @since 3.2, +		if (this.supportedMethods == null) {, +			return null;, +		}, +++ b/spring-web/src/main/java/org/springframework/web/HttpRequestMethodNotSupportedException.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.util.StringUtils;, +	 * @param supportedMethods the actually supported HTTP methods (may be {@code null}), +	 */, +	public HttpRequestMethodNotSupportedException(String method, Collection<String> supportedMethods) {, +		this(method, StringUtils.toStringArray(supportedMethods));, +	}, +, +	/**, +	 * Create a new HttpRequestMethodNotSupportedException., +	 * @param method the unsupported HTTP request method, +	 * @param supportedMethods the actually supported HTTP methods (may be {@code null}), +	 */, +	public HttpRequestMethodNotSupportedException(String method, String[] supportedMethods) {, +		this(method, supportedMethods, "Request method '" + method + "' not supported");, +	}, +, +	/**, +	 * Create a new HttpRequestMethodNotSupportedException., +	 * @param method the unsupported HTTP request method, +	 * Return the actually supported HTTP methods, or {@code null} if not known., +	 * Return the actually supported HTTP methods as {@link HttpMethod} instances,, +	 * or {@code null} if not known., +	 * @since 3.2, +		if (this.supportedMethods == null) {, +			return null;, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.java, +		if (!CollectionUtils.isEmpty(supportedMethods)) {, +++ b/spring-web/src/main/java/org/springframework/web/HttpRequestMethodNotSupportedException.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.util.StringUtils;, +	 * @param supportedMethods the actually supported HTTP methods (may be {@code null}), +	 */, +	public HttpRequestMethodNotSupportedException(String method, Collection<String> supportedMethods) {, +		this(method, StringUtils.toStringArray(supportedMethods));, +	}, +, +	/**, +	 * Create a new HttpRequestMethodNotSupportedException., +	 * @param method the unsupported HTTP request method, +	 * @param supportedMethods the actually supported HTTP methods (may be {@code null}), +	 */, +	public HttpRequestMethodNotSupportedException(String method, String[] supportedMethods) {, +		this(method, supportedMethods, "Request method '" + method + "' not supported");, +	}, +, +	/**, +	 * Create a new HttpRequestMethodNotSupportedException., +	 * @param method the unsupported HTTP request method, +	 * Return the actually supported HTTP methods, or {@code null} if not known., +	 * Return the actually supported HTTP methods as {@link HttpMethod} instances,, +	 * or {@code null} if not known., +	 * @since 3.2, +		if (this.supportedMethods == null) {, +			return null;, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.java, +		if (!CollectionUtils.isEmpty(supportedMethods)) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/WebContentGenerator.java, +			throw new HttpRequestMethodNotSupportedException(method, this.supportedMethods);]