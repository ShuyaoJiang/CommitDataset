[+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, + * <p>By default all origins and headers are permitted, credentials are not allowed,, +	boolean DEFAULT_ALLOW_CREDENTIALS = false;, +	 * domain of the request being annotated. Be aware that enabling this option could, +	 * increase the surface attack of the web application (for example via exposing, +	 * sensitive user-specific information like CSRF tokens)., +	 * <p>Set to {@code "true"} means that the pre-flight response will include the header, +	 * {@code Access-Control-Allow-Credentials=true} so such cookies should be included., +	 * <p>If undefined or set to {@code "false"}, such header is not included and, +	 * credentials are not allowed., +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, + * <p>By default all origins and headers are permitted, credentials are not allowed,, +	boolean DEFAULT_ALLOW_CREDENTIALS = false;, +	 * domain of the request being annotated. Be aware that enabling this option could, +	 * increase the surface attack of the web application (for example via exposing, +	 * sensitive user-specific information like CSRF tokens)., +	 * <p>Set to {@code "true"} means that the pre-flight response will include the header, +	 * {@code Access-Control-Allow-Credentials=true} so such cookies should be included., +	 * <p>If undefined or set to {@code "false"}, such header is not included and, +	 * credentials are not allowed., +++ b/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, + * <p>By default all origins and headers are permitted, credentials are not allowed,, +	boolean DEFAULT_ALLOW_CREDENTIALS = false;, +	 * domain of the request being annotated. Be aware that enabling this option could, +	 * increase the surface attack of the web application (for example via exposing, +	 * sensitive user-specific information like CSRF tokens)., +	 * <p>Set to {@code "true"} means that the pre-flight response will include the header, +	 * {@code Access-Control-Allow-Credentials=true} so such cookies should be included., +	 * <p>If undefined or set to {@code "false"}, such header is not included and, +	 * credentials are not allowed., +++ b/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java, +	 * Whether user credentials are supported. Be aware that enabling this option, +	 * could increase the surface attack of the web application (for example via, +	 * exposing sensitive user-specific information like CSRF tokens)., +	 * <p>By default credentials are not allowed., +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, + * <p>By default all origins and headers are permitted, credentials are not allowed,, +	boolean DEFAULT_ALLOW_CREDENTIALS = false;, +	 * domain of the request being annotated. Be aware that enabling this option could, +	 * increase the surface attack of the web application (for example via exposing, +	 * sensitive user-specific information like CSRF tokens)., +	 * <p>Set to {@code "true"} means that the pre-flight response will include the header, +	 * {@code Access-Control-Allow-Credentials=true} so such cookies should be included., +	 * <p>If undefined or set to {@code "false"}, such header is not included and, +	 * credentials are not allowed., +++ b/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java, +	 * Whether user credentials are supported. Be aware that enabling this option, +	 * could increase the surface attack of the web application (for example via, +	 * exposing sensitive user-specific information like CSRF tokens)., +	 * <p>By default credentials are not allowed., +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/CrossOriginAnnotationIntegrationTests.java, +		assertEquals("*", entity.getHeaders().getAccessControlAllowOrigin());, +		assertEquals(false, entity.getHeaders().getAccessControlAllowCredentials());, +		assertEquals("*", entity.getHeaders().getAccessControlAllowOrigin());, +		assertEquals(false, entity.getHeaders().getAccessControlAllowCredentials());, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, + * <p>By default all origins and headers are permitted, credentials are not allowed,, +	boolean DEFAULT_ALLOW_CREDENTIALS = false;, +	 * domain of the request being annotated. Be aware that enabling this option could, +	 * increase the surface attack of the web application (for example via exposing, +	 * sensitive user-specific information like CSRF tokens)., +	 * <p>Set to {@code "true"} means that the pre-flight response will include the header, +	 * {@code Access-Control-Allow-Credentials=true} so such cookies should be included., +	 * <p>If undefined or set to {@code "false"}, such header is not included and, +	 * credentials are not allowed., +++ b/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java, +	 * Whether user credentials are supported. Be aware that enabling this option, +	 * could increase the surface attack of the web application (for example via, +	 * exposing sensitive user-specific information like CSRF tokens)., +	 * <p>By default credentials are not allowed., +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/CrossOriginAnnotationIntegrationTests.java, +		assertEquals("*", entity.getHeaders().getAccessControlAllowOrigin());, +		assertEquals(false, entity.getHeaders().getAccessControlAllowCredentials());, +		assertEquals("*", entity.getHeaders().getAccessControlAllowOrigin());, +		assertEquals(false, entity.getHeaders().getAccessControlAllowCredentials());, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/GlobalCorsConfigIntegrationTests.java, +		assertEquals("*", entity.getHeaders().getAccessControlAllowOrigin());, +		assertEquals("*", entity.getHeaders().getAccessControlAllowOrigin());, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, + * <p>By default all origins and headers are permitted, credentials are not allowed,, +	boolean DEFAULT_ALLOW_CREDENTIALS = false;, +	 * domain of the request being annotated. Be aware that enabling this option could, +	 * increase the surface attack of the web application (for example via exposing, +	 * sensitive user-specific information like CSRF tokens)., +	 * <p>Set to {@code "true"} means that the pre-flight response will include the header, +	 * {@code Access-Control-Allow-Credentials=true} so such cookies should be included., +	 * <p>If undefined or set to {@code "false"}, such header is not included and, +	 * credentials are not allowed., +++ b/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java, +	 * Whether user credentials are supported. Be aware that enabling this option, +	 * could increase the surface attack of the web application (for example via, +	 * exposing sensitive user-specific information like CSRF tokens)., +	 * <p>By default credentials are not allowed., +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/CrossOriginAnnotationIntegrationTests.java, +		assertEquals("*", entity.getHeaders().getAccessControlAllowOrigin());]