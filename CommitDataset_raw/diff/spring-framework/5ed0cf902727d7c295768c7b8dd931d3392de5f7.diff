[+++ b/spring-web/src/main/java/org/springframework/web/server/adapter/AbstractReactiveWebInitializer.java, +import javax.servlet.ServletContextEvent;, +import javax.servlet.ServletContextListener;, +import org.springframework.context.ConfigurableApplicationContext;, +		refreshApplicationContext(applicationContext);, +		registerCloseListener(servletContext, applicationContext);, +, +		context.register(configClasses);, +	 * Specify {@link org.springframework.context.annotation.Configuration @Configuration}, +	 * and/or {@link org.springframework.stereotype.Component @Component}, +	 * classes that make up the application configuration. The config classes, +	 * are given to {@linkplain #createApplicationContext()}., +	 * Refresh the given application context, if necessary., +	 */, +	protected void refreshApplicationContext(ApplicationContext context) {, +		if (context instanceof ConfigurableApplicationContext) {, +			ConfigurableApplicationContext cac = (ConfigurableApplicationContext) context;, +			if (!cac.isActive()) {, +				cac.refresh();, +			}, +		}, +	}, +, +	/**, +	 * Register a {@link ServletContextListener} that closes the given, +	 * application context when the servlet context is destroyed., +	 * @param servletContext the servlet context to listen to, +	 * @param applicationContext the application context that is to be, +	 * closed when {@code servletContext} is destroyed, +	 */, +	protected void registerCloseListener(ServletContext servletContext, ApplicationContext applicationContext) {, +		if (applicationContext instanceof ConfigurableApplicationContext) {, +			ConfigurableApplicationContext cac = (ConfigurableApplicationContext) applicationContext;, +			ServletContextDestroyedListener listener = new ServletContextDestroyedListener(cac);, +			servletContext.addListener(listener);, +		}, +	}, +, +	/**, +, +	private static class ServletContextDestroyedListener implements ServletContextListener {, +, +		private final ConfigurableApplicationContext applicationContext;, +, +		public ServletContextDestroyedListener(ConfigurableApplicationContext applicationContext) {, +			this.applicationContext = applicationContext;, +		}, +, +		@Override, +		public void contextInitialized(ServletContextEvent sce) {, +		}, +, +		@Override, +		public void contextDestroyed(ServletContextEvent sce) {, +			this.applicationContext.close();, +		}, +	}, +]