[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/json/MappingJackson2JsonView.java, +, +import com.fasterxml.jackson.core.JsonEncoding;, +import com.fasterxml.jackson.core.JsonGenerator;, +import com.fasterxml.jackson.databind.ObjectMapper;, +import com.fasterxml.jackson.databind.SerializationFeature;, +, +		this.jsonPrefix = prefixJson ? "{} && " : "";, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/json/MappingJackson2JsonView.java, +, +import com.fasterxml.jackson.core.JsonEncoding;, +import com.fasterxml.jackson.core.JsonGenerator;, +import com.fasterxml.jackson.databind.ObjectMapper;, +import com.fasterxml.jackson.databind.SerializationFeature;, +, +		this.jsonPrefix = prefixJson ? "{} && " : "";, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/json/MappingJacksonJsonView.java, +, +		this.jsonPrefix = prefixJson ? "{} && " : "";, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/json/MappingJackson2JsonView.java, +, +import com.fasterxml.jackson.core.JsonEncoding;, +import com.fasterxml.jackson.core.JsonGenerator;, +import com.fasterxml.jackson.databind.ObjectMapper;, +import com.fasterxml.jackson.databind.SerializationFeature;, +, +		this.jsonPrefix = prefixJson ? "{} && " : "";, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/json/MappingJacksonJsonView.java, +, +		this.jsonPrefix = prefixJson ? "{} && " : "";, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/view/json/MappingJackson2JsonViewTests.java, +import org.junit.Before;, +import org.junit.Test;, +import org.mozilla.javascript.Context;, +import org.mozilla.javascript.ContextFactory;, +import org.mozilla.javascript.ScriptableObject;, +import org.springframework.http.MediaType;, +import org.springframework.mock.web.test.MockHttpServletRequest;, +import org.springframework.mock.web.test.MockHttpServletResponse;, +import org.springframework.ui.ModelMap;, +import org.springframework.validation.BindingResult;, +import org.springframework.web.servlet.View;, +, +import static org.mockito.Mockito.*;, +		assertTrue(response.getContentAsString().startsWith("{} && "));, +	}, +, +	@Test, +	public void renderSimpleBeanNotPrefixed() throws Exception {, +		view.setPrefixJson(false);, +		renderSimpleBean();, +		assertFalse(response.getContentAsString().startsWith("{} && "));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/json/MappingJackson2JsonView.java, +, +import com.fasterxml.jackson.core.JsonEncoding;, +import com.fasterxml.jackson.core.JsonGenerator;, +import com.fasterxml.jackson.databind.ObjectMapper;, +import com.fasterxml.jackson.databind.SerializationFeature;, +, +		this.jsonPrefix = prefixJson ? "{} && " : "";, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/json/MappingJacksonJsonView.java, +, +		this.jsonPrefix = prefixJson ? "{} && " : "";, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/view/json/MappingJackson2JsonViewTests.java, +import org.junit.Before;, +import org.junit.Test;, +import org.mozilla.javascript.Context;, +import org.mozilla.javascript.ContextFactory;, +import org.mozilla.javascript.ScriptableObject;, +import org.springframework.http.MediaType;, +import org.springframework.mock.web.test.MockHttpServletRequest;, +import org.springframework.mock.web.test.MockHttpServletResponse;, +import org.springframework.ui.ModelMap;, +import org.springframework.validation.BindingResult;, +import org.springframework.web.servlet.View;, +, +import static org.mockito.Mockito.*;, +		assertTrue(response.getContentAsString().startsWith("{} && "));, +	}, +, +	@Test, +	public void renderSimpleBeanNotPrefixed() throws Exception {, +		view.setPrefixJson(false);, +		renderSimpleBean();, +		assertFalse(response.getContentAsString().startsWith("{} && "));, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/view/json/MappingJacksonJsonViewTests.java, +import static org.mockito.Mockito.*;, +		assertTrue(response.getContentAsString().startsWith("{} && "));, +	}, +, +	@Test, +	public void renderSimpleBeanNotPrefixed() throws Exception {, +		view.setPrefixJson(false);, +		renderSimpleBean();, +		assertFalse(response.getContentAsString().startsWith("{} && "));]