[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/ParserContext.java, + * Copyright 2002-2018 the original author or authors., +	private final Deque<CompositeComponentDefinition> containingComponents = new ArrayDeque<>();, +		return this.containingComponents.peek();, +		return this.containingComponents.pop();, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/ParserContext.java, + * Copyright 2002-2018 the original author or authors., +	private final Deque<CompositeComponentDefinition> containingComponents = new ArrayDeque<>();, +		return this.containingComponents.peek();, +		return this.containingComponents.pop();, +++ b/spring-context/src/main/java/org/springframework/validation/AbstractErrors.java, + * Copyright 2002-2018 the original author or authors., +import java.util.NoSuchElementException;, +	public void popNestedPath() throws IllegalStateException {, +		catch (NoSuchElementException ex) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/ParserContext.java, + * Copyright 2002-2018 the original author or authors., +	private final Deque<CompositeComponentDefinition> containingComponents = new ArrayDeque<>();, +		return this.containingComponents.peek();, +		return this.containingComponents.pop();, +++ b/spring-context/src/main/java/org/springframework/validation/AbstractErrors.java, + * Copyright 2002-2018 the original author or authors., +import java.util.NoSuchElementException;, +	public void popNestedPath() throws IllegalStateException {, +		catch (NoSuchElementException ex) {, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, + * Copyright 2002-2018 the original author or authors., +import java.util.NoSuchElementException;, + * @author Juergen Hoeller, +		try {, +		catch (NoSuchElementException ex) {, +			throw new IllegalStateException("Cannot pop active context object: stack is empty");, +		}, +	}, +		for (VariableScope scope : initVariableScopes()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/ParserContext.java, + * Copyright 2002-2018 the original author or authors., +	private final Deque<CompositeComponentDefinition> containingComponents = new ArrayDeque<>();, +		return this.containingComponents.peek();, +		return this.containingComponents.pop();, +++ b/spring-context/src/main/java/org/springframework/validation/AbstractErrors.java, + * Copyright 2002-2018 the original author or authors., +import java.util.NoSuchElementException;, +	public void popNestedPath() throws IllegalStateException {, +		catch (NoSuchElementException ex) {, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, + * Copyright 2002-2018 the original author or authors., +import java.util.NoSuchElementException;, + * @author Juergen Hoeller, +		try {, +		catch (NoSuchElementException ex) {, +			throw new IllegalStateException("Cannot pop active context object: stack is empty");, +		}, +	}, +		for (VariableScope scope : initVariableScopes()) {, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/ExpressionStateTests.java, + * Copyright 2002-2018 the original author or authors., + * @author Juergen Hoeller, +		catch (IllegalStateException ese) {, +	public void testOperators() {]