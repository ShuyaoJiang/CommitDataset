[+++ b/spring-web/src/main/java/org/springframework/web/client/RequestCallback.java, + * Copyright 2002-2018 the original author or authors., +import java.lang.reflect.Type;, + * Callback interface for code that operates on a {@link ClientHttpRequest}., + * Allows manipulating the request headers, and write to the request body., + * <p>Used internally by the {@link RestTemplate}, but also useful for, + * application code. There several available factory methods:, + * <ul>, + * <li>{@link RestTemplate#acceptHeaderRequestCallback(Class)}, + * <li>{@link RestTemplate#httpEntityCallback(Object)}, + * <li>{@link RestTemplate#httpEntityCallback(Object, Type)}, + * </ul>, +++ b/spring-web/src/main/java/org/springframework/web/client/RequestCallback.java, + * Copyright 2002-2018 the original author or authors., +import java.lang.reflect.Type;, + * Callback interface for code that operates on a {@link ClientHttpRequest}., + * Allows manipulating the request headers, and write to the request body., + * <p>Used internally by the {@link RestTemplate}, but also useful for, + * application code. There several available factory methods:, + * <ul>, + * <li>{@link RestTemplate#acceptHeaderRequestCallback(Class)}, + * <li>{@link RestTemplate#httpEntityCallback(Object)}, + * <li>{@link RestTemplate#httpEntityCallback(Object, Type)}, + * </ul>, +++ b/spring-web/src/main/java/org/springframework/web/client/ResponseExtractor.java, + * Copyright 2002-2018 the original author or authors., +import java.lang.reflect.Type;, + * <p>Used internally by the {@link RestTemplate}, but also useful for, + * application code. There is one available factory method, see, + * {@link RestTemplate#responseEntityExtractor(Type)}., +++ b/spring-web/src/main/java/org/springframework/web/client/RequestCallback.java, + * Copyright 2002-2018 the original author or authors., +import java.lang.reflect.Type;, + * Callback interface for code that operates on a {@link ClientHttpRequest}., + * Allows manipulating the request headers, and write to the request body., + * <p>Used internally by the {@link RestTemplate}, but also useful for, + * application code. There several available factory methods:, + * <ul>, + * <li>{@link RestTemplate#acceptHeaderRequestCallback(Class)}, + * <li>{@link RestTemplate#httpEntityCallback(Object)}, + * <li>{@link RestTemplate#httpEntityCallback(Object, Type)}, + * </ul>, +++ b/spring-web/src/main/java/org/springframework/web/client/ResponseExtractor.java, + * Copyright 2002-2018 the original author or authors., +import java.lang.reflect.Type;, + * <p>Used internally by the {@link RestTemplate}, but also useful for, + * application code. There is one available factory method, see, + * {@link RestTemplate#responseEntityExtractor(Type)}., +++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, +	/**, +	 * {@inheritDoc}, +	 * <p>To provide a {@code RequestCallback} or {@code ResponseExtractor} only,, +	 * but not both, consider using:, +	 * <ul>, +	 * <li>{@link #acceptHeaderRequestCallback(Class)}, +	 * <li>{@link #httpEntityCallback(Object)}, +	 * <li>{@link #httpEntityCallback(Object, Type)}, +	 * <li>{@link #responseEntityExtractor(Type)}, +	 * </ul>, +	 */, +	/**, +	 * {@inheritDoc}, +	 * <p>To provide a {@code RequestCallback} or {@code ResponseExtractor} only,, +	 * but not both, consider using:, +	 * <ul>, +	 * <li>{@link #acceptHeaderRequestCallback(Class)}, +	 * <li>{@link #httpEntityCallback(Object)}, +	 * <li>{@link #httpEntityCallback(Object, Type)}, +	 * <li>{@link #responseEntityExtractor(Type)}, +	 * </ul>, +	 */, +	/**, +	 * {@inheritDoc}, +	 * <p>To provide a {@code RequestCallback} or {@code ResponseExtractor} only,, +	 * but not both, consider using:, +	 * <ul>, +	 * <li>{@link #acceptHeaderRequestCallback(Class)}, +	 * <li>{@link #httpEntityCallback(Object)}, +	 * <li>{@link #httpEntityCallback(Object, Type)}, +	 * <li>{@link #responseEntityExtractor(Type)}, +	 * </ul>, +	 */, +	 * Return a {@code RequestCallback} that sets the request {@code Accept}, +	 * header based on the given response type, cross-checked against the, +	 * configured message converters., +	public <T> RequestCallback acceptHeaderRequestCallback(Class<T> responseType) {, +	 * Return a {@code RequestCallback} implementation that writes the given, +	 * object to the request stream., +	public <T> RequestCallback httpEntityCallback(@Nullable Object requestBody) {, +	 * Return a {@code RequestCallback} implementation that:, +	 * <ol>, +	 * <li>Sets the request {@code Accept} header based on the given response, +	 * type, cross-checked against the configured message converters., +	 * <li>Writes the given object to the request stream., +	 * </ol>, +	public <T> RequestCallback httpEntityCallback(@Nullable Object requestBody, Type responseType) {, +	 * Return a {@code ResponseExtractor} that prepares a {@link ResponseEntity}., +	public <T> ResponseExtractor<ResponseEntity<T>> responseEntityExtractor(Type responseType) {]