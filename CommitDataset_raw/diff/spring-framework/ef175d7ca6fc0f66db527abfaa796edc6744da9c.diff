[+++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +		public static <T> T instantiateClass(Constructor<T> ctor, Object... args) throws IllegalAccessException, InvocationTargetException, InstantiationException {, +				return ctor.newInstance(args);, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +		public static <T> T instantiateClass(Constructor<T> ctor, Object... args) throws IllegalAccessException, InvocationTargetException, InstantiationException {, +				return ctor.newInstance(args);, +++ b/spring-beans/src/test/kotlin/org/springframework/beans/BeanUtilsKotlinTests.kt, +		val foo = BeanUtils.instantiateClass(constructor, "a", 3), +		assertEquals("a", foo.param1), +		val bar = BeanUtils.instantiateClass(constructor, "a", 8), +		assertEquals("a", bar.param1), +		val bar = BeanUtils.instantiateClass(constructor, "a"), +		assertEquals("a", bar.param1), +		val bar = BeanUtils.instantiateClass(constructor, "a", null), +		assertEquals("a", bar.param1), +	@Test  // SPR-15851, +	fun `Instantiate mutable class with declared constructor and default values for all parameters`() {, +		val baz = BeanUtils.instantiateClass(Baz::class.java.getDeclaredConstructor()), +		assertEquals("a", baz.param1), +		assertEquals(12, baz.param2), +	}, +, +	class Baz(var param1: String = "a", var param2: Int = 12), +]