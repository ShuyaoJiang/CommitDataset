[+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, +	String[] DEFAULT_ORIGIN = { "*" };, +, +	String[] DEFAULT_ALLOWED_HEADERS = { "*" };, +, +	boolean DEFAULT_ALLOW_CREDENTIALS = true;, +, +	long DEFAULT_MAX_AGE = 1800;, +, +, +	String[] value() default {};, +	 * {@code "*"} means that all origins are allowed., +	 * <p>If undefined, all origins are allowed., +	String[] origin() default {};, +	 * {@code "*"}  means that all headers requested by the client are allowed., +	 * <p>If undefined, all requested headers are allowed., +	String[] allowedHeaders() default {};, +	 * <p>If undefined, an empty exposed header list is used., +	 * <p>If undefined, methods defined by {@link RequestMapping} annotation, +	 * are used., +	 * An empty string ({@code ""}) means <em>undefined</em>., +	 * {@code "true"} means that the pre-flight response will include the header, +	 * <p>If undefined, credentials are allowed., +	String allowCredentials() default "";, +	 * A negative value means <em>undefined</em>., +	 * <p>If undefined, max age is set to {@code 1800} seconds (i.e., 30 minutes)., +	long maxAge() default -1;, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, +	String[] DEFAULT_ORIGIN = { "*" };, +, +	String[] DEFAULT_ALLOWED_HEADERS = { "*" };, +, +	boolean DEFAULT_ALLOW_CREDENTIALS = true;, +, +	long DEFAULT_MAX_AGE = 1800;, +, +, +	String[] value() default {};, +	 * {@code "*"} means that all origins are allowed., +	 * <p>If undefined, all origins are allowed., +	String[] origin() default {};, +	 * {@code "*"}  means that all headers requested by the client are allowed., +	 * <p>If undefined, all requested headers are allowed., +	String[] allowedHeaders() default {};, +	 * <p>If undefined, an empty exposed header list is used., +	 * <p>If undefined, methods defined by {@link RequestMapping} annotation, +	 * are used., +	 * An empty string ({@code ""}) means <em>undefined</em>., +	 * {@code "true"} means that the pre-flight response will include the header, +	 * <p>If undefined, credentials are allowed., +	String allowCredentials() default "";, +	 * A negative value means <em>undefined</em>., +	 * <p>If undefined, max age is set to {@code 1800} seconds (i.e., 30 minutes)., +	long maxAge() default -1;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java, +import java.util.Arrays;, +		if (CollectionUtils.isEmpty(config.getAllowedOrigins())) {, +			config.setAllowedOrigins(Arrays.asList(CrossOrigin.DEFAULT_ORIGIN));, +		}, +			config.setAllowedHeaders(Arrays.asList(CrossOrigin.DEFAULT_ALLOWED_HEADERS));, +		if (config.getAllowCredentials() == null) {, +			config.setAllowCredentials(CrossOrigin.DEFAULT_ALLOW_CREDENTIALS);, +		if (config.getMaxAge() == null) {, +			config.setMaxAge(CrossOrigin.DEFAULT_MAX_AGE);, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, +	String[] DEFAULT_ORIGIN = { "*" };, +, +	String[] DEFAULT_ALLOWED_HEADERS = { "*" };, +, +	boolean DEFAULT_ALLOW_CREDENTIALS = true;, +, +	long DEFAULT_MAX_AGE = 1800;, +, +, +	String[] value() default {};, +	 * {@code "*"} means that all origins are allowed., +	 * <p>If undefined, all origins are allowed., +	String[] origin() default {};, +	 * {@code "*"}  means that all headers requested by the client are allowed., +	 * <p>If undefined, all requested headers are allowed., +	String[] allowedHeaders() default {};, +	 * <p>If undefined, an empty exposed header list is used., +	 * <p>If undefined, methods defined by {@link RequestMapping} annotation, +	 * are used., +	 * An empty string ({@code ""}) means <em>undefined</em>., +	 * {@code "true"} means that the pre-flight response will include the header, +	 * <p>If undefined, credentials are allowed., +	String allowCredentials() default "";, +	 * A negative value means <em>undefined</em>., +	 * <p>If undefined, max age is set to {@code 1800} seconds (i.e., 30 minutes)., +	long maxAge() default -1;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java, +import java.util.Arrays;, +		if (CollectionUtils.isEmpty(config.getAllowedOrigins())) {, +			config.setAllowedOrigins(Arrays.asList(CrossOrigin.DEFAULT_ORIGIN));, +		}, +			config.setAllowedHeaders(Arrays.asList(CrossOrigin.DEFAULT_ALLOWED_HEADERS));, +		if (config.getAllowCredentials() == null) {, +			config.setAllowCredentials(CrossOrigin.DEFAULT_ALLOW_CREDENTIALS);, +		if (config.getMaxAge() == null) {]