[+++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/CacheRemoveEntryInterceptor.java, + * Copyright 2002-2018 the original author or authors., +		catch (CacheOperationInvoker.ThrowableWrapper wrapperException) {, +			Throwable ex = wrapperException.getOriginal();, +			throw wrapperException;, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/CacheRemoveEntryInterceptor.java, + * Copyright 2002-2018 the original author or authors., +		catch (CacheOperationInvoker.ThrowableWrapper wrapperException) {, +			Throwable ex = wrapperException.getOriginal();, +			throw wrapperException;, +++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java, +			catch (Throwable ex) {, +				this.errorHandler.handleError(ex);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/CacheRemoveEntryInterceptor.java, + * Copyright 2002-2018 the original author or authors., +		catch (CacheOperationInvoker.ThrowableWrapper wrapperException) {, +			Throwable ex = wrapperException.getOriginal();, +			throw wrapperException;, +++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java, +			catch (Throwable ex) {, +				this.errorHandler.handleError(ex);, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/DefaultMvcResult.java, +		catch (InterruptedException ex) {, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/CacheRemoveEntryInterceptor.java, + * Copyright 2002-2018 the original author or authors., +		catch (CacheOperationInvoker.ThrowableWrapper wrapperException) {, +			Throwable ex = wrapperException.getOriginal();, +			throw wrapperException;, +++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java, +			catch (Throwable ex) {, +				this.errorHandler.handleError(ex);, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/DefaultMvcResult.java, +		catch (InterruptedException ex) {, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/CallableInterceptorChain.java, + * Copyright 2002-2018 the original author or authors., +			catch (Throwable ex) {, +				return ex;, +			catch (Throwable ex) {, +				return ex;, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/CacheRemoveEntryInterceptor.java, + * Copyright 2002-2018 the original author or authors., +		catch (CacheOperationInvoker.ThrowableWrapper wrapperException) {, +			Throwable ex = wrapperException.getOriginal();, +			throw wrapperException;, +++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java, +			catch (Throwable ex) {, +				this.errorHandler.handleError(ex);, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/DefaultMvcResult.java, +		catch (InterruptedException ex) {, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/CallableInterceptorChain.java, + * Copyright 2002-2018 the original author or authors., +			catch (Throwable ex) {, +				return ex;, +			catch (Throwable ex) {, +				return ex;, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RouterFunctions.java, +		catch (Throwable ex) {, +			return Mono.error(ex);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/CacheRemoveEntryInterceptor.java, + * Copyright 2002-2018 the original author or authors., +		catch (CacheOperationInvoker.ThrowableWrapper wrapperException) {, +			Throwable ex = wrapperException.getOriginal();, +			throw wrapperException;, +++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java, +			catch (Throwable ex) {, +				this.errorHandler.handleError(ex);, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/DefaultMvcResult.java, +		catch (InterruptedException ex) {, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/CallableInterceptorChain.java, + * Copyright 2002-2018 the original author or authors., +			catch (Throwable ex) {, +				return ex;, +			catch (Throwable ex) {, +				return ex;, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RouterFunctions.java, +		catch (Throwable ex) {, +			return Mono.error(ex);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/socket/adapter/StandardWebSocketSession.java, + * Copyright 2002-2018 the original author or authors., +		catch (IOException ex) {, +			return Mono.error(ex);]