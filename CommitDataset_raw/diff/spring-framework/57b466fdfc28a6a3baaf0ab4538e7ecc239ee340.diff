[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +		// First, check whether a matching resource exists, +		Resource resource = getResource(request);, +		if (resource == null) {, +			logger.trace("No matching resource found - returning 404");, +			response.sendError(HttpServletResponse.SC_NOT_FOUND);, +			return;, +		}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +		// First, check whether a matching resource exists, +		Resource resource = getResource(request);, +		if (resource == null) {, +			logger.trace("No matching resource found - returning 404");, +			response.sendError(HttpServletResponse.SC_NOT_FOUND);, +			return;, +		}, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.java, +import org.springframework.http.HttpMethod;, +import org.springframework.http.HttpStatus;, +	public void invalidPathForDelete() throws Exception {, +		invalidPath(HttpMethod.DELETE);, +	}, +, +	@Test, +	public void invalidPathForGet() throws Exception {, +		invalidPath(HttpMethod.GET);, +	}, +, +	@Test, +	public void invalidPathForHead() throws Exception {, +		invalidPath(HttpMethod.HEAD);, +	}, +, +	@Test, +	public void invalidPathForOptions() throws Exception {, +		invalidPath(HttpMethod.OPTIONS);, +	}, +, +	@Test, +	public void invalidPathForPost() throws Exception {, +		invalidPath(HttpMethod.POST);, +	}, +, +	@Test, +	public void invalidPathForPut() throws Exception {, +		invalidPath(HttpMethod.PUT);, +	}, +, +	@Test, +	public void invalidPathForPatch() throws Exception {, +		invalidPath(HttpMethod.PATCH);, +	}, +, +	@Test, +	public void invalidPathForTrace() throws Exception {, +		invalidPath(HttpMethod.TRACE);, +	}, +, +	private void invalidPath(HttpMethod httpMethod) throws Exception {, +		this.request.setMethod(httpMethod.name());, +		assertEquals(HttpStatus.NOT_FOUND.value(), this.response.getStatus());, +	public void resourceNotFoundForDelete() throws Exception {, +		resourceNotFound(HttpMethod.DELETE);, +	}, +, +	@Test, +	public void resourceNotFoundForGet() throws Exception {, +		resourceNotFound(HttpMethod.GET);, +	}, +, +	@Test, +	public void resourceNotFoundForHead() throws Exception {, +		resourceNotFound(HttpMethod.HEAD);, +	}, +, +	@Test, +	public void resourceNotFoundForOptions() throws Exception {, +		resourceNotFound(HttpMethod.OPTIONS);, +	}, +, +	@Test, +	public void resourceNotFoundForPost() throws Exception {, +		resourceNotFound(HttpMethod.POST);, +	}, +, +	@Test, +	public void resourceNotFoundForPut() throws Exception {, +		resourceNotFound(HttpMethod.PUT);, +	}, +, +	@Test, +	public void resourceNotFoundForPatch() throws Exception {, +		resourceNotFound(HttpMethod.PATCH);, +	}, +, +	@Test, +	public void resourceNotFoundForTrace() throws Exception {, +		resourceNotFound(HttpMethod.TRACE);]