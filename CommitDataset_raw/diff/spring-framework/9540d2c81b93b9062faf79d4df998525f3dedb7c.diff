[+++ b/spring-aop/src/main/java/org/springframework/aop/Advisor.java, +	 * Typical Advisor implementations always return {@code true}., +++ b/spring-aop/src/main/java/org/springframework/aop/Advisor.java, +	 * Typical Advisor implementations always return {@code true}., +++ b/spring-aop/src/main/java/org/springframework/aop/AfterReturningAdvice.java, +	 * @param target target of the method invocation. May be {@code null}., +++ b/spring-aop/src/main/java/org/springframework/aop/Advisor.java, +	 * Typical Advisor implementations always return {@code true}., +++ b/spring-aop/src/main/java/org/springframework/aop/AfterReturningAdvice.java, +	 * @param target target of the method invocation. May be {@code null}., +++ b/spring-aop/src/main/java/org/springframework/aop/IntroductionAwareMethodMatcher.java, +	 * @param targetClass the target class (may be {@code null}, in which case, +	 * @param hasIntroductions {@code true} if the object on whose behalf we are, +	 * asking is the subject on one or more introductions; {@code false} otherwise, +++ b/spring-aop/src/main/java/org/springframework/aop/Advisor.java, +	 * Typical Advisor implementations always return {@code true}., +++ b/spring-aop/src/main/java/org/springframework/aop/AfterReturningAdvice.java, +	 * @param target target of the method invocation. May be {@code null}., +++ b/spring-aop/src/main/java/org/springframework/aop/IntroductionAwareMethodMatcher.java, +	 * @param targetClass the target class (may be {@code null}, in which case, +	 * @param hasIntroductions {@code true} if the object on whose behalf we are, +	 * asking is the subject on one or more introductions; {@code false} otherwise, +++ b/spring-aop/src/main/java/org/springframework/aop/MethodBeforeAdvice.java, +	 * @param target target of the method invocation. May be {@code null}., +++ b/spring-aop/src/main/java/org/springframework/aop/Advisor.java, +	 * Typical Advisor implementations always return {@code true}., +++ b/spring-aop/src/main/java/org/springframework/aop/AfterReturningAdvice.java, +	 * @param target target of the method invocation. May be {@code null}., +++ b/spring-aop/src/main/java/org/springframework/aop/IntroductionAwareMethodMatcher.java, +	 * @param targetClass the target class (may be {@code null}, in which case, +	 * @param hasIntroductions {@code true} if the object on whose behalf we are, +	 * asking is the subject on one or more introductions; {@code false} otherwise, +++ b/spring-aop/src/main/java/org/springframework/aop/MethodBeforeAdvice.java, +	 * @param target target of the method invocation. May be {@code null}., +++ b/spring-aop/src/main/java/org/springframework/aop/MethodMatcher.java, + * <p>If an implementation returns {@code false} from its {@link #isRuntime()}, + * if the {@link #isRuntime()} method returns {@code false}, the 3-arg, + * <p>If an implementation returns {@code true} from its 2-arg, + * returns {@code true}, the 3-arg {@link #matches(java.lang.reflect.Method, Class, Object[])}, +	 * returns {@code false} or if the {@link #isRuntime()} method, +	 * returns {@code false}, no runtime check (i.e. no., +	 * @param targetClass the target class (may be {@code null}, in which case, +	 * runtime even if the 2-arg matches method returns {@code true}?, +	 * {@code true} for the given method and target class, and if the, +	 * {@link #isRuntime()} method returns {@code true}. Invoked, +	 * @param targetClass the target class (may be {@code null}, in which case, +++ b/spring-aop/src/main/java/org/springframework/aop/Advisor.java, +	 * Typical Advisor implementations always return {@code true}., +++ b/spring-aop/src/main/java/org/springframework/aop/AfterReturningAdvice.java, +	 * @param target target of the method invocation. May be {@code null}., +++ b/spring-aop/src/main/java/org/springframework/aop/IntroductionAwareMethodMatcher.java, +	 * @param targetClass the target class (may be {@code null}, in which case, +	 * @param hasIntroductions {@code true} if the object on whose behalf we are, +	 * asking is the subject on one or more introductions; {@code false} otherwise, +++ b/spring-aop/src/main/java/org/springframework/aop/MethodBeforeAdvice.java, +	 * @param target target of the method invocation. May be {@code null}., +++ b/spring-aop/src/main/java/org/springframework/aop/MethodMatcher.java, + * <p>If an implementation returns {@code false} from its {@link #isRuntime()}, + * if the {@link #isRuntime()} method returns {@code false}, the 3-arg, + * <p>If an implementation returns {@code true} from its 2-arg, + * returns {@code true}, the 3-arg {@link #matches(java.lang.reflect.Method, Class, Object[])}, +	 * returns {@code false} or if the {@link #isRuntime()} method, +	 * returns {@code false}, no runtime check (i.e. no., +	 * @param targetClass the target class (may be {@code null}, in which case, +	 * runtime even if the 2-arg matches method returns {@code true}?, +	 * {@code true} for the given method and target class, and if the, +	 * {@link #isRuntime()} method returns {@code true}. Invoked, +	 * @param targetClass the target class (may be {@code null}, in which case, +++ b/spring-aop/src/main/java/org/springframework/aop/Pointcut.java, +	 * @return the ClassFilter (never {@code null}), +	 * @return the MethodMatcher (never {@code null}), +++ b/spring-aop/src/main/java/org/springframework/aop/Advisor.java, +	 * Typical Advisor implementations always return {@code true}., +++ b/spring-aop/src/main/java/org/springframework/aop/AfterReturningAdvice.java, +	 * @param target target of the method invocation. May be {@code null}., +++ b/spring-aop/src/main/java/org/springframework/aop/IntroductionAwareMethodMatcher.java, +	 * @param targetClass the target class (may be {@code null}, in which case, +	 * @param hasIntroductions {@code true} if the object on whose behalf we are, +	 * asking is the subject on one or more introductions; {@code false} otherwise, +++ b/spring-aop/src/main/java/org/springframework/aop/MethodBeforeAdvice.java, +	 * @param target target of the method invocation. May be {@code null}., +++ b/spring-aop/src/main/java/org/springframework/aop/MethodMatcher.java, + * <p>If an implementation returns {@code false} from its {@link #isRuntime()}, + * if the {@link #isRuntime()} method returns {@code false}, the 3-arg, + * <p>If an implementation returns {@code true} from its 2-arg, + * returns {@code true}, the 3-arg {@link #matches(java.lang.reflect.Method, Class, Object[])}, +	 * returns {@code false} or if the {@link #isRuntime()} method, +	 * returns {@code false}, no runtime check (i.e. no., +	 * @param targetClass the target class (may be {@code null}, in which case, +	 * runtime even if the 2-arg matches method returns {@code true}?, +	 * {@code true} for the given method and target class, and if the, +	 * {@link #isRuntime()} method returns {@code true}. Invoked, +	 * @param targetClass the target class (may be {@code null}, in which case, +++ b/spring-aop/src/main/java/org/springframework/aop/Pointcut.java, +	 * @return the ClassFilter (never {@code null}), +	 * @return the MethodMatcher (never {@code null}), +++ b/spring-aop/src/main/java/org/springframework/aop/ProxyMethodInvocation.java, +	 * Create a clone of this object. If cloning is done before {@code proceed()}, +	 * is invoked on this object, {@code proceed()} can be invoked once per clone, +	 * {@code proceed()} can be called once per clone.]