[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/CannotGetJdbcConnectionException.java, + * @author Juergen Hoeller, +	 * @since 5.0, +	 */, +	public CannotGetJdbcConnectionException(String msg) {, +		super(msg);, +	}, +, +	/**, +	 * Constructor for CannotGetJdbcConnectionException., +	 * @param msg the detail message, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/CannotGetJdbcConnectionException.java, + * @author Juergen Hoeller, +	 * @since 5.0, +	 */, +	public CannotGetJdbcConnectionException(String msg) {, +		super(msg);, +	}, +, +	/**, +	 * Constructor for CannotGetJdbcConnectionException., +	 * @param msg the detail message, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceUtils.java, +			throw new CannotGetJdbcConnectionException("Failed to obtain JDBC Connection", ex);, +		}, +		catch (IllegalStateException ex) {, +			throw new CannotGetJdbcConnectionException("Failed to obtain JDBC Connection: " + ex.getMessage());, +				conHolder.setConnection(fetchConnection(dataSource));, +		Connection con = fetchConnection(dataSource);, +	 * Actually fetch a {@link Connection} from the given {@link DataSource},, +	 * defensively turning an unexpected {@code null} return value from, +	 * {@link DataSource#getConnection()} into an {@link IllegalStateException}., +	 * @param dataSource the DataSource to obtain Connections from, +	 * @return a JDBC Connection from the given DataSource (never {@code null}), +	 * @throws SQLException if thrown by JDBC methods, +	 * @throws IllegalStateException if the DataSource returned a null value, +	 * @see DataSource#getConnection(), +	 */, +	private static Connection fetchConnection(DataSource dataSource) throws SQLException {, +		Connection con = dataSource.getConnection();, +		if (con == null) {, +			throw new IllegalStateException("DataSource returned null from getConnection(): " + dataSource);, +		}, +		return con;, +	}, +, +	/**, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/CannotGetJdbcConnectionException.java, + * @author Juergen Hoeller, +	 * @since 5.0, +	 */, +	public CannotGetJdbcConnectionException(String msg) {, +		super(msg);, +	}, +, +	/**, +	 * Constructor for CannotGetJdbcConnectionException., +	 * @param msg the detail message, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceUtils.java, +			throw new CannotGetJdbcConnectionException("Failed to obtain JDBC Connection", ex);, +		}, +		catch (IllegalStateException ex) {, +			throw new CannotGetJdbcConnectionException("Failed to obtain JDBC Connection: " + ex.getMessage());, +				conHolder.setConnection(fetchConnection(dataSource));, +		Connection con = fetchConnection(dataSource);, +	 * Actually fetch a {@link Connection} from the given {@link DataSource},, +	 * defensively turning an unexpected {@code null} return value from, +	 * {@link DataSource#getConnection()} into an {@link IllegalStateException}., +	 * @param dataSource the DataSource to obtain Connections from, +	 * @return a JDBC Connection from the given DataSource (never {@code null}), +	 * @throws SQLException if thrown by JDBC methods, +	 * @throws IllegalStateException if the DataSource returned a null value, +	 * @see DataSource#getConnection(), +	 */, +	private static Connection fetchConnection(DataSource dataSource) throws SQLException {, +		Connection con = dataSource.getConnection();, +		if (con == null) {, +			throw new IllegalStateException("DataSource returned null from getConnection(): " + dataSource);, +		}, +		return con;, +	}, +, +	/**, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/AbstractEmbeddedDatabaseConfigurer.java, + * Copyright 2002-2017 the original author or authors., +			if (con != null) {, +		}, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/CannotGetJdbcConnectionException.java, + * @author Juergen Hoeller, +	 * @since 5.0, +	 */, +	public CannotGetJdbcConnectionException(String msg) {, +		super(msg);, +	}, +, +	/**, +	 * Constructor for CannotGetJdbcConnectionException., +	 * @param msg the detail message, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceUtils.java, +			throw new CannotGetJdbcConnectionException("Failed to obtain JDBC Connection", ex);]