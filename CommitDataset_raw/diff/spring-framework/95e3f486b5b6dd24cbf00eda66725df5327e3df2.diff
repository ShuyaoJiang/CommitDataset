[+++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractBindingResult.java, + * Copyright 2002-2012 the original author or authors., +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractBindingResult.java, + * Copyright 2002-2012 the original author or authors., +++ b/org.springframework.context/src/main/java/org/springframework/validation/BindException.java, + * Copyright 2002-2012 the original author or authors., +	public String[] resolveMessageCodes(String errorCode) {, +		return this.bindingResult.resolveMessageCodes(errorCode);, +	}, +, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractBindingResult.java, + * Copyright 2002-2012 the original author or authors., +++ b/org.springframework.context/src/main/java/org/springframework/validation/BindException.java, + * Copyright 2002-2012 the original author or authors., +	public String[] resolveMessageCodes(String errorCode) {, +		return this.bindingResult.resolveMessageCodes(errorCode);, +	}, +, +++ b/org.springframework.context/src/main/java/org/springframework/validation/BindingResult.java, + * Copyright 2002-2012 the original author or authors., +	 * Resolve the given error code into message codes., +	 * <p>Calls the configured {@link MessageCodesResolver} with appropriate parameters., +	 * @param errorCode the error code to resolve into message codes, +	 * @return the resolved message codes, +	 */, +	String[] resolveMessageCodes(String errorCode);, +, +	/**, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractBindingResult.java, + * Copyright 2002-2012 the original author or authors., +++ b/org.springframework.context/src/main/java/org/springframework/validation/BindException.java, + * Copyright 2002-2012 the original author or authors., +	public String[] resolveMessageCodes(String errorCode) {, +		return this.bindingResult.resolveMessageCodes(errorCode);, +	}, +, +++ b/org.springframework.context/src/main/java/org/springframework/validation/BindingResult.java, + * Copyright 2002-2012 the original author or authors., +	 * Resolve the given error code into message codes., +	 * <p>Calls the configured {@link MessageCodesResolver} with appropriate parameters., +	 * @param errorCode the error code to resolve into message codes, +	 * @return the resolved message codes, +	 */, +	String[] resolveMessageCodes(String errorCode);, +, +	/**, +++ b/org.springframework.context/src/main/java/org/springframework/validation/beanvalidation/SpringValidatorAdapter.java, + * Copyright 2002-2012 the original author or authors., +							String[] errorCodes = bindingResult.resolveMessageCodes(errorCode);, +							bindingResult.addError(new ObjectError(, +									errors.getObjectName(), errorCodes, errorArgs, violation.getMessage()));, +							String[] errorCodes = bindingResult.resolveMessageCodes(errorCode, field);, +							bindingResult.addError(new FieldError(, +									errorCodes, errorArgs, violation.getMessage()));, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractBindingResult.java, + * Copyright 2002-2012 the original author or authors., +++ b/org.springframework.context/src/main/java/org/springframework/validation/BindException.java, + * Copyright 2002-2012 the original author or authors., +	public String[] resolveMessageCodes(String errorCode) {, +		return this.bindingResult.resolveMessageCodes(errorCode);, +	}, +, +++ b/org.springframework.context/src/main/java/org/springframework/validation/BindingResult.java, + * Copyright 2002-2012 the original author or authors., +	 * Resolve the given error code into message codes., +	 * <p>Calls the configured {@link MessageCodesResolver} with appropriate parameters., +	 * @param errorCode the error code to resolve into message codes, +	 * @return the resolved message codes, +	 */, +	String[] resolveMessageCodes(String errorCode);, +, +	/**, +++ b/org.springframework.context/src/main/java/org/springframework/validation/beanvalidation/SpringValidatorAdapter.java, + * Copyright 2002-2012 the original author or authors., +							String[] errorCodes = bindingResult.resolveMessageCodes(errorCode);, +							bindingResult.addError(new ObjectError(, +									errors.getObjectName(), errorCodes, errorArgs, violation.getMessage()));, +							String[] errorCodes = bindingResult.resolveMessageCodes(errorCode, field);, +							bindingResult.addError(new FieldError(, +									errorCodes, errorArgs, violation.getMessage()));, +++ b/org.springframework.context/src/test/java/org/springframework/validation/beanvalidation/ValidatorFactoryTests.java, + * Copyright 2002-2012 the original author or authors., +		List<String> errorCodes = Arrays.asList(fieldError.getCodes());, +		assertEquals(4, errorCodes.size());, +		assertTrue(errorCodes.contains("NotNull.person.name"));, +		assertTrue(errorCodes.contains("NotNull.name"));, +		assertTrue(errorCodes.contains("NotNull.java.lang.String"));, +		assertTrue(errorCodes.contains("NotNull"));, +		errorCodes = Arrays.asList(fieldError.getCodes());, +		assertEquals(5, errorCodes.size());, +		assertTrue(errorCodes.contains("NotNull.person.address.street"));, +		assertTrue(errorCodes.contains("NotNull.address.street"));, +		assertTrue(errorCodes.contains("NotNull.street"));, +		assertTrue(errorCodes.contains("NotNull.java.lang.String"));, +		assertTrue(errorCodes.contains("NotNull"));, +		List<String> errorCodes = Arrays.asList(globalError.getCodes());, +		assertEquals(2, errorCodes.size());, +		assertTrue(errorCodes.contains("NameAddressValid.person"));, +		assertTrue(errorCodes.contains("NameAddressValid"));]