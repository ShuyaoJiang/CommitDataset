[+++ b/spring-beans/src/main/java/org/springframework/beans/BeanInfoFactory.java, + * Copyright 2002-2013 the original author or authors., + * Strategy interface for creating {@link BeanInfo} instances for Spring beans., + * Can be used to plug in custom bean property resolution strategies (e.g. for other, + * languages on the JVM) or more efficient {@link BeanInfo} retrieval algorithms., + * by using the {@link org.springframework.core.io.support.SpringFactoriesLoader}, + * utility class., + * will iterate through the discovered factories, calling {@link #getBeanInfo(Class)}, + * on each one. If {@code null} is returned, the next factory will be queried., + * If none of the factories support the class, a standard {@link BeanInfo} will be, + * created as a default., + * {@link org.springframework.core.annotation.Order @Order}, so that ones with a, + * higher precedence come first., + * @see CachedIntrospectionResults, + * @see org.springframework.core.io.support.SpringFactoriesLoader, +	 * Return the bean info for the given class, if supported., +	 * @return the BeanInfo, or {@code null} if the given class is not supported, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanInfoFactory.java, + * Copyright 2002-2013 the original author or authors., + * Strategy interface for creating {@link BeanInfo} instances for Spring beans., + * Can be used to plug in custom bean property resolution strategies (e.g. for other, + * languages on the JVM) or more efficient {@link BeanInfo} retrieval algorithms., + * by using the {@link org.springframework.core.io.support.SpringFactoriesLoader}, + * utility class., + * will iterate through the discovered factories, calling {@link #getBeanInfo(Class)}, + * on each one. If {@code null} is returned, the next factory will be queried., + * If none of the factories support the class, a standard {@link BeanInfo} will be, + * created as a default., + * {@link org.springframework.core.annotation.Order @Order}, so that ones with a, + * higher precedence come first., + * @see CachedIntrospectionResults, + * @see org.springframework.core.io.support.SpringFactoriesLoader, +	 * Return the bean info for the given class, if supported., +	 * @return the BeanInfo, or {@code null} if the given class is not supported, +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfoFactory.java, + * Copyright 2002-2013 the original author or authors., + * "non-standard" JavaBeans setter methods and are thus candidates for introspection, + * by Spring's (package-visible) {@code ExtendedBeanInfo} implementation., + * @see CachedIntrospectionResults, +public class ExtendedBeanInfoFactory implements BeanInfoFactory, Ordered {, +	 * Return an {@link ExtendedBeanInfo} for the given bean class, if applicable., +		return (supports(beanClass) ? new ExtendedBeanInfo(Introspector.getBeanInfo(beanClass)) : null);, +	 * Return whether the given bean class declares or inherits any non-void, +	 * returning bean property or indexed property setter methods.]