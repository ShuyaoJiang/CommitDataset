[+++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.java, + * Copyright 2002-2009 the original author or authors., +	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action), +	<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse), +	void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException;, +	<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper), +	<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper), +	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType), +	Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	long queryForLong(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	int queryForInt(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType), +	List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	int update(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	public int[] batchUpdate(String sql, Map<String, ?>[] batchValues);, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.java, + * Copyright 2002-2009 the original author or authors., +	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action), +	<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse), +	void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException;, +	<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper), +	<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper), +	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType), +	Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	long queryForLong(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	int queryForInt(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType), +	List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	int update(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	public int[] batchUpdate(String sql, Map<String, ?>[] batchValues);, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.java, + * Copyright 2002-2009 the original author or authors., +	public <T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action), +	public <T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse), +	public void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch), +	public <T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper), +	public <T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T>rowMapper), +	public <T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType), +	public Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException {, +	public long queryForLong(String sql, Map<String, ?> paramMap) throws DataAccessException {, +	public int queryForInt(String sql, Map<String, ?> paramMap) throws DataAccessException {, +	public <T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType), +	public List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap), +	public SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException {, +	public int update(String sql, Map<String, ?> paramMap) throws DataAccessException {, +	public int[] batchUpdate(String sql, Map<String, ?>[] batchValues) {, +		for (Map<String, ?> values : batchValues) {, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.java, + * Copyright 2002-2009 the original author or authors., +	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action), +	<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse), +	void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException;, +	<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper), +	<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper), +	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType), +	Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	long queryForLong(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	int queryForInt(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType), +	List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	int update(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	public int[] batchUpdate(String sql, Map<String, ?>[] batchValues);, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.java, + * Copyright 2002-2009 the original author or authors., +	public <T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action), +	public <T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse), +	public void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch), +	public <T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper), +	public <T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T>rowMapper), +	public <T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType), +	public Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException {, +	public long queryForLong(String sql, Map<String, ?> paramMap) throws DataAccessException {, +	public int queryForInt(String sql, Map<String, ?> paramMap) throws DataAccessException {, +	public <T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType), +	public List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap), +	public SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException {, +	public int update(String sql, Map<String, ?> paramMap) throws DataAccessException {, +	public int[] batchUpdate(String sql, Map<String, ?>[] batchValues) {, +		for (Map<String, ?> values : batchValues) {, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcCall.java, + * Copyright 2002-2009 the original author or authors., +	public <T> T executeFunction(Class<T> returnType, Map<String, ?> args) {, +	public <T> T executeObject(Class<T> returnType, Map<String, ?> args) {, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.java, + * Copyright 2002-2009 the original author or authors., +	<T> T execute(String sql, Map<String, ?> paramMap, PreparedStatementCallback<T> action), +	<T> T query(String sql, Map<String, ?> paramMap, ResultSetExtractor<T> rse), +	void query(String sql, Map<String, ?> paramMap, RowCallbackHandler rch) throws DataAccessException;, +	<T> List<T> query(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper), +	<T> T queryForObject(String sql, Map<String, ?> paramMap, RowMapper<T> rowMapper), +	<T> T queryForObject(String sql, Map<String, ?> paramMap, Class<T> requiredType), +	Map<String, Object> queryForMap(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	long queryForLong(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	int queryForInt(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	<T> List<T> queryForList(String sql, Map<String, ?> paramMap, Class<T> elementType), +	List<Map<String, Object>> queryForList(String sql, Map<String, ?> paramMap) throws DataAccessException;, +	SqlRowSet queryForRowSet(String sql, Map<String, ?> paramMap) throws DataAccessException;]