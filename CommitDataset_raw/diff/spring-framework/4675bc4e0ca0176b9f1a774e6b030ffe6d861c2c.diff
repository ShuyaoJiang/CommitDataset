[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +import org.springframework.util.StringUtils;, +		// Fall back to class name as cache key, for backwards compatibility with custom callers., +		String cacheKey = (StringUtils.hasLength(beanName) ? beanName : clazz.getName());, +		InjectionMetadata metadata = this.injectionMetadataCache.get(cacheKey);, +				metadata = this.injectionMetadataCache.get(cacheKey);, +					this.injectionMetadataCache.put(cacheKey, metadata);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +import org.springframework.util.StringUtils;, +		// Fall back to class name as cache key, for backwards compatibility with custom callers., +		String cacheKey = (StringUtils.hasLength(beanName) ? beanName : clazz.getName());, +		InjectionMetadata metadata = this.injectionMetadataCache.get(cacheKey);, +				metadata = this.injectionMetadataCache.get(cacheKey);, +					this.injectionMetadataCache.put(cacheKey, metadata);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java, +		// Fall back to class name as cache key, for backwards compatibility with custom callers., +		String cacheKey = (StringUtils.hasLength(beanName) ? beanName : clazz.getName());, +		InjectionMetadata metadata = this.injectionMetadataCache.get(cacheKey);, +				metadata = this.injectionMetadataCache.get(cacheKey);, +					this.injectionMetadataCache.put(cacheKey, metadata);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +import org.springframework.util.StringUtils;, +		// Fall back to class name as cache key, for backwards compatibility with custom callers., +		String cacheKey = (StringUtils.hasLength(beanName) ? beanName : clazz.getName());, +		InjectionMetadata metadata = this.injectionMetadataCache.get(cacheKey);, +				metadata = this.injectionMetadataCache.get(cacheKey);, +					this.injectionMetadataCache.put(cacheKey, metadata);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java, +		// Fall back to class name as cache key, for backwards compatibility with custom callers., +		String cacheKey = (StringUtils.hasLength(beanName) ? beanName : clazz.getName());, +		InjectionMetadata metadata = this.injectionMetadataCache.get(cacheKey);, +				metadata = this.injectionMetadataCache.get(cacheKey);, +					this.injectionMetadataCache.put(cacheKey, metadata);, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.java, +import org.springframework.util.StringUtils;, +		// Fall back to class name as cache key, for backwards compatibility with custom callers., +		String cacheKey = (StringUtils.hasLength(beanName) ? beanName : clazz.getName());, +		InjectionMetadata metadata = this.injectionMetadataCache.get(cacheKey);, +				metadata = this.injectionMetadataCache.get(cacheKey);, +					this.injectionMetadataCache.put(cacheKey, metadata);]