[+++ b/build.gradle, +		optional("net.sourceforge.jexcelapi:jxl:2.6.12"), +++ b/build.gradle, +		optional("net.sourceforge.jexcelapi:jxl:2.6.12"), +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/view/document/ExcelViewTests.java, + * Copyright 2002-2014 the original author or authors., +import java.lang.reflect.Field;, +import jxl.WorkbookSettings;, +import jxl.read.biff.WorkbookParser;, +, +import org.springframework.util.ReflectionUtils;, +		AbstractJExcelView excelView = new UnixSafeAbstractJExcelView() {, +		AbstractJExcelView excelView = new UnixSafeAbstractJExcelView() {, +		AbstractJExcelView excelView = new UnixSafeAbstractJExcelView() {, +		AbstractJExcelView excelView = new UnixSafeAbstractJExcelView() {, +, +	/**, +	 * Workaround JXL bug that causes ArrayIndexOutOfBounds exceptions when running in, +	 * *nix machines. Same bug as reported at http://jira.pentaho.com/browse/PDI-5031., +	 *, +	 * We want to use the latest JXL code because it doesn't include log4j config files, +	 * inside the jar. Since the project appears to be abandoned AbstractJExcelView, +	 * will be deprecated., +	 */, +	private static abstract class UnixSafeAbstractJExcelView extends AbstractJExcelView {, +, +		@Override, +		protected Workbook getTemplateSource(String url, HttpServletRequest request), +				throws Exception {, +			Workbook workbook = super.getTemplateSource(url, request);, +			Field field = WorkbookParser.class.getDeclaredField("settings");, +			field.setAccessible(true);, +			WorkbookSettings settings = (WorkbookSettings) ReflectionUtils.getField(field, workbook);, +			settings.setWriteAccess(null);, +			return workbook;, +		}, +, +	}]