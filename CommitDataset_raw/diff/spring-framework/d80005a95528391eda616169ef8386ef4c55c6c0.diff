[+++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java, +import org.w3c.dom.Element;, +import org.w3c.dom.Node;, +import org.w3c.dom.NodeList;, +		else {, +		}, +			if (!StringUtils.hasText(messageConverter)) {, +				parserContext.getReaderContext().error(, +						"Listener container 'message-converter' attribute contains empty value.", containerEle);, +			}, +			else {, +		}, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java, +import org.w3c.dom.Element;, +import org.w3c.dom.Node;, +import org.w3c.dom.NodeList;, +		else {, +		}, +			if (!StringUtils.hasText(messageConverter)) {, +				parserContext.getReaderContext().error(, +						"Listener container 'message-converter' attribute contains empty value.", containerEle);, +			}, +			else {, +		}, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JcaListenerContainerParser.java, +import org.w3c.dom.Element;, +			else {, +			}, +		}, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java, +import org.w3c.dom.Element;, +import org.w3c.dom.Node;, +import org.w3c.dom.NodeList;, +		else {, +		}, +			if (!StringUtils.hasText(messageConverter)) {, +				parserContext.getReaderContext().error(, +						"Listener container 'message-converter' attribute contains empty value.", containerEle);, +			}, +			else {, +		}, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JcaListenerContainerParser.java, +import org.w3c.dom.Element;, +			else {, +			}, +		}, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JmsListenerContainerParser.java, +import org.w3c.dom.Element;, +		if (StringUtils.hasText(connectionFactoryBeanName)) {, +		}]