[+++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/BeanPropertyRowMapper.java, + * Copyright 2002-2009 the original author or authors., +	 * <p>Consider using the {@link #newInstance} factory method instead,, +	 * which allows for specifying the mapped type once only., +	 * Set whether we're defaulting Java primitives in the case of mapping a null value, +	 * from corresponding database fields., +	public void setPrimitivesDefaultedForNullValue(boolean primitivesDefaultedForNullValue) {, +		this.primitivesDefaultedForNullValue = primitivesDefaultedForNullValue;, +	}, +, +	/**, +	 * Return whether we're defaulting Java primitives in the case of mapping a null value, +	 * from corresponding database fields., +	 */, +, +	/**, +	 * Static factory method to create a new BeanPropertyRowMapper, +	 * (with the mapped class specified only once)., +	 * @param mappedClass the class that each row should be mapped to, +	 */, +	public static <T> BeanPropertyRowMapper<T> newInstance(Class<T> mappedClass) {, +		BeanPropertyRowMapper<T> newInstance = new BeanPropertyRowMapper<T>();, +		newInstance.setMappedClass(mappedClass);, +		return newInstance;, +	}, +, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/BeanPropertyRowMapper.java, + * Copyright 2002-2009 the original author or authors., +	 * <p>Consider using the {@link #newInstance} factory method instead,, +	 * which allows for specifying the mapped type once only., +	 * Set whether we're defaulting Java primitives in the case of mapping a null value, +	 * from corresponding database fields., +	public void setPrimitivesDefaultedForNullValue(boolean primitivesDefaultedForNullValue) {, +		this.primitivesDefaultedForNullValue = primitivesDefaultedForNullValue;, +	}, +, +	/**, +	 * Return whether we're defaulting Java primitives in the case of mapping a null value, +	 * from corresponding database fields., +	 */, +, +	/**, +	 * Static factory method to create a new BeanPropertyRowMapper, +	 * (with the mapped class specified only once)., +	 * @param mappedClass the class that each row should be mapped to, +	 */, +	public static <T> BeanPropertyRowMapper<T> newInstance(Class<T> mappedClass) {, +		BeanPropertyRowMapper<T> newInstance = new BeanPropertyRowMapper<T>();, +		newInstance.setMappedClass(mappedClass);, +		return newInstance;, +	}, +, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/simple/ParameterizedBeanPropertyRowMapper.java, + * Copyright 2002-2009 the original author or authors., + * <p>The mapper can be configured to use the primitives default value when mapping null values, + * by setting the {@link #setPrimitivesDefaultedForNullValue 'primitivesDefaultedForNullValue'}, + * flag to 'true'.]