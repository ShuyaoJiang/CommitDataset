[+++ b/spring-orm-hibernate4/src/test/java/org/springframework/orm/hibernate4/HibernateTransactionManagerTests.java, +++ b/spring-orm-hibernate4/src/test/java/org/springframework/orm/hibernate4/HibernateTransactionManagerTests.java, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * Abstract {@link org.springframework.beans.factory.FactoryBean} that creates, + * a local JPA {@link javax.persistence.EntityManagerFactory} instance within, + * a Spring application context., + * <p>Encapsulates the common functionality between the different JPA bootstrap, + * contracts (standalone as well as container)., + * <p>Implements support for standard JPA configuration conventions as well as, + * Spring's customizable {@link JpaVendorAdapter} mechanism, and controls the, +++ b/spring-orm-hibernate4/src/test/java/org/springframework/orm/hibernate4/HibernateTransactionManagerTests.java, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * Abstract {@link org.springframework.beans.factory.FactoryBean} that creates, + * a local JPA {@link javax.persistence.EntityManagerFactory} instance within, + * a Spring application context., + * <p>Encapsulates the common functionality between the different JPA bootstrap, + * contracts (standalone as well as container)., + * <p>Implements support for standard JPA configuration conventions as well as, + * Spring's customizable {@link JpaVendorAdapter} mechanism, and controls the, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryAccessor.java, + * Copyright 2002-2014 the original author or authors., + * Base class for any class that needs to access a JPA {@link EntityManagerFactory},, + * usually in order to obtain a JPA {@link EntityManager}. Defines common properties., +++ b/spring-orm-hibernate4/src/test/java/org/springframework/orm/hibernate4/HibernateTransactionManagerTests.java, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * Abstract {@link org.springframework.beans.factory.FactoryBean} that creates, + * a local JPA {@link javax.persistence.EntityManagerFactory} instance within, + * a Spring application context., + * <p>Encapsulates the common functionality between the different JPA bootstrap, + * contracts (standalone as well as container)., + * <p>Implements support for standard JPA configuration conventions as well as, + * Spring's customizable {@link JpaVendorAdapter} mechanism, and controls the, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryAccessor.java, + * Copyright 2002-2014 the original author or authors., + * Base class for any class that needs to access a JPA {@link EntityManagerFactory},, + * usually in order to obtain a JPA {@link EntityManager}. Defines common properties., +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryUtils.java, + * Copyright 2002-2014 the original author or authors., +, +	 * Obtain a JPA EntityManager from the given factory. Is aware of a corresponding, +	 * EntityManager bound to the current thread, e.g. when using JpaTransactionManager., +	 * Obtain a JPA EntityManager from the given factory. Is aware of a corresponding, +	 * EntityManager bound to the current thread, e.g. when using JpaTransactionManager., +	 * Obtain a JPA EntityManager from the given factory. Is aware of a corresponding, +	 * EntityManager bound to the current thread, e.g. when using JpaTransactionManager., +	 * Obtain a JPA EntityManager from the given factory. Is aware of a corresponding, +	 * EntityManager bound to the current thread, e.g. when using JpaTransactionManager., +		// Use same EntityManager for further JPA operations within the transaction., +		// Thread-bound object will get removed by synchronization at transaction completion., +			// Unsynchronized - just scope it for the transaction, as demanded by the JPA 2.1 spec..., +++ b/spring-orm-hibernate4/src/test/java/org/springframework/orm/hibernate4/HibernateTransactionManagerTests.java, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * Abstract {@link org.springframework.beans.factory.FactoryBean} that creates, + * a local JPA {@link javax.persistence.EntityManagerFactory} instance within, + * a Spring application context., + * <p>Encapsulates the common functionality between the different JPA bootstrap, + * contracts (standalone as well as container)., + * <p>Implements support for standard JPA configuration conventions as well as, + * Spring's customizable {@link JpaVendorAdapter} mechanism, and controls the, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryAccessor.java, + * Copyright 2002-2014 the original author or authors., + * Base class for any class that needs to access a JPA {@link EntityManagerFactory},, + * usually in order to obtain a JPA {@link EntityManager}. Defines common properties., +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryUtils.java, + * Copyright 2002-2014 the original author or authors., +, +	 * Obtain a JPA EntityManager from the given factory. Is aware of a corresponding, +	 * EntityManager bound to the current thread, e.g. when using JpaTransactionManager., +	 * Obtain a JPA EntityManager from the given factory. Is aware of a corresponding, +	 * EntityManager bound to the current thread, e.g. when using JpaTransactionManager., +	 * Obtain a JPA EntityManager from the given factory. Is aware of a corresponding, +	 * EntityManager bound to the current thread, e.g. when using JpaTransactionManager., +	 * Obtain a JPA EntityManager from the given factory. Is aware of a corresponding, +	 * EntityManager bound to the current thread, e.g. when using JpaTransactionManager., +		// Use same EntityManager for further JPA operations within the transaction., +		// Thread-bound object will get removed by synchronization at transaction completion., +			// Unsynchronized - just scope it for the transaction, as demanded by the JPA 2.1 spec..., +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/ExtendedEntityManagerCreator.java, +	 * @since 4.0, +	 * @since 4.0, +++ b/spring-orm-hibernate4/src/test/java/org/springframework/orm/hibernate4/HibernateTransactionManagerTests.java, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * Abstract {@link org.springframework.beans.factory.FactoryBean} that creates, + * a local JPA {@link javax.persistence.EntityManagerFactory} instance within, + * a Spring application context., + * <p>Encapsulates the common functionality between the different JPA bootstrap, + * contracts (standalone as well as container)., + * <p>Implements support for standard JPA configuration conventions as well as, + * Spring's customizable {@link JpaVendorAdapter} mechanism, and controls the, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryAccessor.java, + * Copyright 2002-2014 the original author or authors., + * Base class for any class that needs to access a JPA {@link EntityManagerFactory},, + * usually in order to obtain a JPA {@link EntityManager}. Defines common properties., +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryUtils.java, + * Copyright 2002-2014 the original author or authors.]