[+++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/LocalRegionFactoryProxy.java, +		RegionFactory rf = (RegionFactory) LocalSessionFactoryBean.getConfigTimeRegionFactory();, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/LocalRegionFactoryProxy.java, +		RegionFactory rf = (RegionFactory) LocalSessionFactoryBean.getConfigTimeRegionFactory();, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/LocalSessionFactoryBean.java, + * <p><b>Requires Hibernate 3.2 or later, with Hibernate 3.3 being recommended.</b>, + * Note that this factory will use "on_close" as default Hibernate connection, + * release mode, unless in the case of a "jtaTransactionManager" specified,, + * for the reason that this is appropriate for most Spring-based applications, + * (in particular when using Spring's HibernateTransactionManager)., +	private static final ThreadLocal<Object> configTimeRegionFactoryHolder =, +			new ThreadLocal<Object>();, +	static Object getConfigTimeRegionFactory() {, +	private Object cacheRegionFactory;, +	 * For Hibernate 3.2 compatibility purposes, the accepted reference is of type, +	 * Object: the actual type is <code>org.hibernate.cache.RegionFactory</code>., +	 * @see org.hibernate.cache.RegionFactory, +	public void setCacheRegionFactory(Object cacheRegionFactory) {, +				config.setProperty(Environment.CACHE_REGION_FACTORY,, +						"org.springframework.orm.hibernate3.LocalRegionFactoryProxy");]