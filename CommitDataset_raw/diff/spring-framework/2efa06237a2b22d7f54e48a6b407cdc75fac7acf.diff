[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +      this.customEditors.forEach(, +        (requiredType, editorClass), +            -> registry.registerCustomEditor(requiredType, BeanUtils.instantiateClass(editorClass)), +      );, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +      this.customEditors.forEach(, +        (requiredType, editorClass), +            -> registry.registerCustomEditor(requiredType, BeanUtils.instantiateClass(editorClass)), +      );, +++ b/spring-context/src/main/java/org/springframework/validation/support/BindingAwareConcurrentModel.java, +		map.forEach(this::removeBindingResultIfNecessary);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +      this.customEditors.forEach(, +        (requiredType, editorClass), +            -> registry.registerCustomEditor(requiredType, BeanUtils.instantiateClass(editorClass)), +      );, +++ b/spring-context/src/main/java/org/springframework/validation/support/BindingAwareConcurrentModel.java, +		map.forEach(this::removeBindingResultIfNecessary);, +++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, +		this.targetMap.forEach((k, v) -> copy.put(k, new LinkedList<>(v)));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +      this.customEditors.forEach(, +        (requiredType, editorClass), +            -> registry.registerCustomEditor(requiredType, BeanUtils.instantiateClass(editorClass)), +      );, +++ b/spring-context/src/main/java/org/springframework/validation/support/BindingAwareConcurrentModel.java, +		map.forEach(this::removeBindingResultIfNecessary);, +++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, +		this.targetMap.forEach((k, v) -> copy.put(k, new LinkedList<>(v)));, +++ b/spring-web/src/main/java/org/springframework/web/util/UriUtils.java, +		uriVariables.forEach((key, value) -> {, +			String stringValue = (value != null ? value.toString() : "");, +			result.put(key, encode(stringValue, StandardCharsets.UTF_8));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +      this.customEditors.forEach(, +        (requiredType, editorClass), +            -> registry.registerCustomEditor(requiredType, BeanUtils.instantiateClass(editorClass)), +      );, +++ b/spring-context/src/main/java/org/springframework/validation/support/BindingAwareConcurrentModel.java, +		map.forEach(this::removeBindingResultIfNecessary);, +++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, +		this.targetMap.forEach((k, v) -> copy.put(k, new LinkedList<>(v)));, +++ b/spring-web/src/main/java/org/springframework/web/util/UriUtils.java, +		uriVariables.forEach((key, value) -> {, +			String stringValue = (value != null ? value.toString() : "");, +			result.put(key, encode(stringValue, StandardCharsets.UTF_8));, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientRequestBuilder.java, +				this.cookies.forEach(( name , values) ->, +						values.forEach(value -> {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +				parentResult.forEach((beanName, beanType) -> {, +						result.put(beanName, beanType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +      this.customEditors.forEach(, +        (requiredType, editorClass), +            -> registry.registerCustomEditor(requiredType, BeanUtils.instantiateClass(editorClass)), +      );, +++ b/spring-context/src/main/java/org/springframework/validation/support/BindingAwareConcurrentModel.java, +		map.forEach(this::removeBindingResultIfNecessary);, +++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java]