[+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, + * Copyright 2002-2017 the original author or authors., + * Annotation for permitting cross-origin requests on specific handler classes, + * and/or handler methods. Processed if an appropriate {@code HandlerMapping}, + * is configured., + * <p>Both Spring Web MVC and Spring WebFlux support this annotation through the, + * {@code RequestMappingHandlerMapping} in their respective modules. The values, + * from each type and method level pair of annotations are added to a, + * {@link CorsConfiguration} and then default values are applied via, + * {@link CorsConfiguration#applyPermitDefaultValues()}., +	/** @deprecated as of Spring 5.0, in favor {@link CorsConfiguration#applyPermitDefaultValues} */, +	/** @deprecated as of Spring 5.0, in favor {@link CorsConfiguration#applyPermitDefaultValues} */, +	/** @deprecated as of Spring 5.0, in favor {@link CorsConfiguration#applyPermitDefaultValues} */, +	/** @deprecated as of Spring 5.0, in favor {@link CorsConfiguration#applyPermitDefaultValues} */, +	 * The list of allowed origins that be specific origins, e.g., +	 * {@code "http://domain1.com"}, or {@code "*"} for all origins., +	 * <p>A matched origin is listed in the {@code Access-Control-Allow-Origin}, +	 * response header of preflight actual CORS requests., +	 * <p>By default all origins are allowed., +	 * The list of request headers that are permitted in actual requests,, +	 * possibly {@code "*"}  to allow all headers., +	 * <p>Allowed headers are listed in the {@code Access-Control-Allow-Headers}, +	 * response header of preflight requests., +	 * <p>A header name is not required to be listed if it is one of:, +	 * {@code Cache-Control}, {@code Content-Language}, {@code Expires},, +	 * {@code Last-Modified}, or {@code Pragma} as per the CORS spec., +	 * <p>By default all requested headers are allowed., +	 * The List of response headers that the user-agent will allow the client, +	 * to access on an actual response, other than "simple" headers, i.e., +	 * {@code Cache-Control}, {@code Content-Language}, {@code Content-Type},, +	 * {@code Expires}, {@code Last-Modified}, or {@code Pragma},, +	 * <p>Exposed headers are listed in the {@code Access-Control-Expose-Headers}, +	 * response header of actual CORS requests., +	 * <p>By default no headers are listed as exposed., +	 * The list of supported HTTP request methods., +	 * <p>By default the supported methods are the same as the ones to which a, +	 * controller method is mapped., +	 * Whether the browser should send credentials, such as cookies along with, +	 * cross domain requests, to the annotated endpoint. The configured value is, +	 * set on the {@code Access-Control-Allow-Credentials} response header of, +	 * preflight requests., +	 * <p><strong>NOTE:</strong> Be aware that this option establishes a high, +	 * level of trust with the configured domains and also increases the surface, +	 * attack of the web application by exposing sensitive user-specific, +	 * information such as cookies and CSRF tokens., +	 * <p>By default this is not set in which case the, +	 * {@code Access-Control-Allow-Credentials} header is also not set and, +	 * credentials are therefore not allowed., +	 * The maximum age (in seconds) of the cache duration for preflight responses., +	 * response header of preflight requests., +	 * <p>Setting this to a reasonable value can reduce the number of preflight, +	 * <p>By default this is set to {@code 1800} seconds (30 minutes)., +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, + * Copyright 2002-2017 the original author or authors., + * Annotation for permitting cross-origin requests on specific handler classes, + * and/or handler methods. Processed if an appropriate {@code HandlerMapping}, + * is configured., + * <p>Both Spring Web MVC and Spring WebFlux support this annotation through the, + * {@code RequestMappingHandlerMapping} in their respective modules. The values, + * from each type and method level pair of annotations are added to a, + * {@link CorsConfiguration} and then default values are applied via, + * {@link CorsConfiguration#applyPermitDefaultValues()}., +	/** @deprecated as of Spring 5.0, in favor {@link CorsConfiguration#applyPermitDefaultValues} */, +	/** @deprecated as of Spring 5.0, in favor {@link CorsConfiguration#applyPermitDefaultValues} */, +	/** @deprecated as of Spring 5.0, in favor {@link CorsConfiguration#applyPermitDefaultValues} */, +	/** @deprecated as of Spring 5.0, in favor {@link CorsConfiguration#applyPermitDefaultValues} */, +	 * The list of allowed origins that be specific origins, e.g., +	 * {@code "http://domain1.com"}, or {@code "*"} for all origins., +	 * <p>A matched origin is listed in the {@code Access-Control-Allow-Origin}, +	 * response header of preflight actual CORS requests., +	 * <p>By default all origins are allowed., +	 * The list of request headers that are permitted in actual requests,, +	 * possibly {@code "*"}  to allow all headers., +	 * <p>Allowed headers are listed in the {@code Access-Control-Allow-Headers}, +	 * response header of preflight requests., +	 * <p>A header name is not required to be listed if it is one of:, +	 * {@code Cache-Control}, {@code Content-Language}, {@code Expires},, +	 * {@code Last-Modified}, or {@code Pragma} as per the CORS spec., +	 * <p>By default all requested headers are allowed., +	 * The List of response headers that the user-agent will allow the client, +	 * to access on an actual response, other than "simple" headers, i.e., +	 * {@code Cache-Control}, {@code Content-Language}, {@code Content-Type},, +	 * {@code Expires}, {@code Last-Modified}, or {@code Pragma},, +	 * <p>Exposed headers are listed in the {@code Access-Control-Expose-Headers}, +	 * response header of actual CORS requests., +	 * <p>By default no headers are listed as exposed., +	 * The list of supported HTTP request methods., +	 * <p>By default the supported methods are the same as the ones to which a, +	 * controller method is mapped., +	 * Whether the browser should send credentials, such as cookies along with, +	 * cross domain requests, to the annotated endpoint. The configured value is, +	 * set on the {@code Access-Control-Allow-Credentials} response header of, +	 * preflight requests., +	 * <p><strong>NOTE:</strong> Be aware that this option establishes a high, +	 * level of trust with the configured domains and also increases the surface, +	 * attack of the web application by exposing sensitive user-specific, +	 * information such as cookies and CSRF tokens., +	 * <p>By default this is not set in which case the, +	 * {@code Access-Control-Allow-Credentials} header is also not set and, +	 * credentials are therefore not allowed.]