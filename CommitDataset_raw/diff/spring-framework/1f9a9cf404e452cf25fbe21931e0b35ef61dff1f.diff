[+++ b/build.gradle, +		testCompile("com.fasterxml.jackson.module:jackson-module-kotlin:${jackson2Version}"), +++ b/build.gradle, +		testCompile("com.fasterxml.jackson.module:jackson-module-kotlin:${jackson2Version}"), +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, + * <li><a href="https://github.com/FasterXML/jackson-module-kotlin">jackson-module-kotlin</a>: support for Kotlin classes and data classes</li>, +, +		// Kotlin present?, +		if (ClassUtils.isPresent("kotlin.Unit", this.moduleClassLoader)) {, +			try {, +				Class<? extends Module> kotlinModule = (Class<? extends Module>), +						ClassUtils.forName("com.fasterxml.jackson.module.kotlin.KotlinModule", this.moduleClassLoader);, +				objectMapper.registerModule(BeanUtils.instantiate(kotlinModule));, +			}, +			catch (ClassNotFoundException ex) {, +				// jackson-module-kotlin not available, +			}, +		}, +++ b/build.gradle, +		testCompile("com.fasterxml.jackson.module:jackson-module-kotlin:${jackson2Version}"), +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, + * <li><a href="https://github.com/FasterXML/jackson-module-kotlin">jackson-module-kotlin</a>: support for Kotlin classes and data classes</li>, +, +		// Kotlin present?, +		if (ClassUtils.isPresent("kotlin.Unit", this.moduleClassLoader)) {, +			try {, +				Class<? extends Module> kotlinModule = (Class<? extends Module>), +						ClassUtils.forName("com.fasterxml.jackson.module.kotlin.KotlinModule", this.moduleClassLoader);, +				objectMapper.registerModule(BeanUtils.instantiate(kotlinModule));, +			}, +			catch (ClassNotFoundException ex) {, +				// jackson-module-kotlin not available, +			}, +		}, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.java, + * <li><a href="https://github.com/FasterXML/jackson-module-kotlin">jackson-module-kotlin</a>: support for Kotlin classes and data classes</li>, +++ b/build.gradle, +		testCompile("com.fasterxml.jackson.module:jackson-module-kotlin:${jackson2Version}"), +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, + * <li><a href="https://github.com/FasterXML/jackson-module-kotlin">jackson-module-kotlin</a>: support for Kotlin classes and data classes</li>, +, +		// Kotlin present?, +		if (ClassUtils.isPresent("kotlin.Unit", this.moduleClassLoader)) {, +			try {, +				Class<? extends Module> kotlinModule = (Class<? extends Module>), +						ClassUtils.forName("com.fasterxml.jackson.module.kotlin.KotlinModule", this.moduleClassLoader);, +				objectMapper.registerModule(BeanUtils.instantiate(kotlinModule));, +			}, +			catch (ClassNotFoundException ex) {, +				// jackson-module-kotlin not available, +			}, +		}, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.java, + * <li><a href="https://github.com/FasterXML/jackson-module-kotlin">jackson-module-kotlin</a>: support for Kotlin classes and data classes</li>, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilderTests.java, +import kotlin.ranges.IntRange;, +, +		// Kotlin module, +		IntRange range = new IntRange(1, 3);, +		assertEquals("{\"start\":1,\"end\":3}", new String(objectMapper.writeValueAsBytes(range), "UTF-8"));, +		ObjectMapper objectMapper = Jackson2ObjectMapperBuilder.json().modules(), +				.mixIn(target, mixInSource).build();, +		ObjectMapper objectMapper = Jackson2ObjectMapperBuilder.json().modules(), +				.mixIns(mixIns).build();, +++ b/build.gradle, +		testCompile("com.fasterxml.jackson.module:jackson-module-kotlin:${jackson2Version}"), +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, + * <li><a href="https://github.com/FasterXML/jackson-module-kotlin">jackson-module-kotlin</a>: support for Kotlin classes and data classes</li>, +, +		// Kotlin present?, +		if (ClassUtils.isPresent("kotlin.Unit", this.moduleClassLoader)) {, +			try {, +				Class<? extends Module> kotlinModule = (Class<? extends Module>), +						ClassUtils.forName("com.fasterxml.jackson.module.kotlin.KotlinModule", this.moduleClassLoader);, +				objectMapper.registerModule(BeanUtils.instantiate(kotlinModule));, +			}, +			catch (ClassNotFoundException ex) {, +				// jackson-module-kotlin not available, +			}, +		}, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.java, + * <li><a href="https://github.com/FasterXML/jackson-module-kotlin">jackson-module-kotlin</a>: support for Kotlin classes and data classes</li>, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilderTests.java, +import kotlin.ranges.IntRange;, +, +		// Kotlin module, +		IntRange range = new IntRange(1, 3);, +		assertEquals("{\"start\":1,\"end\":3}", new String(objectMapper.writeValueAsBytes(range), "UTF-8"));, +		ObjectMapper objectMapper = Jackson2ObjectMapperBuilder.json().modules(), +				.mixIn(target, mixInSource).build();, +		ObjectMapper objectMapper = Jackson2ObjectMapperBuilder.json().modules(), +				.mixIns(mixIns).build();, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBeanTests.java, +		this.factory.setModules(Collections.emptyList());]