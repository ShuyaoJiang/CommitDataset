[+++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/ConnectionProperties.java, + * DataSourceFactory helper that allows essential JDBC connection properties to be configured consistently,, + * independent of the actual DataSource implementation., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/ConnectionProperties.java, + * DataSourceFactory helper that allows essential JDBC connection properties to be configured consistently,, + * independent of the actual DataSource implementation., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DataSourceFactory.java, + * Encapsulates the creation of a particular DataSource implementation, such as a {@link SimpleDriverDataSource} or connection pool such as Apache DBCP or c3p0., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/ConnectionProperties.java, + * DataSourceFactory helper that allows essential JDBC connection properties to be configured consistently,, + * independent of the actual DataSource implementation., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DataSourceFactory.java, + * Encapsulates the creation of a particular DataSource implementation, such as a {@link SimpleDriverDataSource} or connection pool such as Apache DBCP or c3p0., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DatabasePopulator.java, + * Strategy used to populate an embedded database during initialization., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/ConnectionProperties.java, + * DataSourceFactory helper that allows essential JDBC connection properties to be configured consistently,, + * independent of the actual DataSource implementation., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DataSourceFactory.java, + * Encapsulates the creation of a particular DataSource implementation, such as a {@link SimpleDriverDataSource} or connection pool such as Apache DBCP or c3p0., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DatabasePopulator.java, + * Strategy used to populate an embedded database during initialization., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseConfigurerFactory.java, + * Maps well-known {@link EmbeddedDatabaseType embedded database types} to, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/ConnectionProperties.java, + * DataSourceFactory helper that allows essential JDBC connection properties to be configured consistently,, + * independent of the actual DataSource implementation., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DataSourceFactory.java, + * Encapsulates the creation of a particular DataSource implementation, such as a {@link SimpleDriverDataSource} or connection pool such as Apache DBCP or c3p0., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DatabasePopulator.java, + * Strategy used to populate an embedded database during initialization., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseConfigurerFactory.java, + * Maps well-known {@link EmbeddedDatabaseType embedded database types} to, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.java, + * Creates a {@link EmbeddedDatabase} instance., + * Callers are guaranteed that the returned database has been fully initialized and populated., + * Call {@link #setDatabaseConfigurer(EmbeddedDatabaseConfigurer)} to configure support for your own embedded database type.<br>, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/ConnectionProperties.java, + * DataSourceFactory helper that allows essential JDBC connection properties to be configured consistently,, + * independent of the actual DataSource implementation., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DataSourceFactory.java, + * Encapsulates the creation of a particular DataSource implementation, such as a {@link SimpleDriverDataSource} or connection pool such as Apache DBCP or c3p0., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DatabasePopulator.java, + * Strategy used to populate an embedded database during initialization., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseConfigurerFactory.java, + * Maps well-known {@link EmbeddedDatabaseType embedded database types} to, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.java, + * Creates a {@link EmbeddedDatabase} instance., + * Callers are guaranteed that the returned database has been fully initialized and populated., + * Call {@link #setDatabaseConfigurer(EmbeddedDatabaseConfigurer)} to configure support for your own embedded database type.<br>, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseType.java, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/ConnectionProperties.java, + * DataSourceFactory helper that allows essential JDBC connection properties to be configured consistently,, + * independent of the actual DataSource implementation., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DataSourceFactory.java, + * Encapsulates the creation of a particular DataSource implementation, such as a {@link SimpleDriverDataSource} or connection pool such as Apache DBCP or c3p0., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DatabasePopulator.java, + * Strategy used to populate an embedded database during initialization., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseConfigurerFactory.java, + * Maps well-known {@link EmbeddedDatabaseType embedded database types} to, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.java, + * Creates a {@link EmbeddedDatabase} instance., + * Callers are guaranteed that the returned database has been fully initialized and populated., + * Call {@link #setDatabaseConfigurer(EmbeddedDatabaseConfigurer)} to configure support for your own embedded database type.<br>, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseType.java, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/ResourceDatabasePopulator.java, + * <p>, + * May be configured:<br>, + * Call {@link #setSchemaLocation(Resource)} to configure the location of the database schema file.<br>, + * Call {@link #setTestDataLocation(Resource)} to configure the location of the test data file.<br>, + * Call {@link #setSqlScriptEncoding(String)} to set the encoding for the schema and test data SQL.<br>, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/ConnectionProperties.java, + * DataSourceFactory helper that allows essential JDBC connection properties to be configured consistently,, + * independent of the actual DataSource implementation., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DataSourceFactory.java, + * Encapsulates the creation of a particular DataSource implementation, such as a {@link SimpleDriverDataSource} or connection pool such as Apache DBCP or c3p0., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DatabasePopulator.java, + * Strategy used to populate an embedded database during initialization., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseConfigurerFactory.java, + * Maps well-known {@link EmbeddedDatabaseType embedded database types} to, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.java, + * Creates a {@link EmbeddedDatabase} instance., + * Callers are guaranteed that the returned database has been fully initialized and populated., + * Call {@link #setDatabaseConfigurer(EmbeddedDatabaseConfigurer)} to configure support for your own embedded database type.<br>, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseType.java, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/ResourceDatabasePopulator.java, + * <p>, + * May be configured:<br>, + * Call {@link #setSchemaLocation(Resource)} to configure the location of the database schema file.<br>, + * Call {@link #setTestDataLocation(Resource)} to configure the location of the test data file.<br>, + * Call {@link #setSqlScriptEncoding(String)} to set the encoding for the schema and test data SQL.<br>, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/SimpleDriverDataSourceFactory.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0]