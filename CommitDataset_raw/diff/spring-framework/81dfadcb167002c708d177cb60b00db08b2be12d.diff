[+++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, +			resource = (query != null ? resource.substring(0, resource.indexOf('?')) : resource);, +++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, +			resource = (query != null ? resource.substring(0, resource.indexOf('?')) : resource);, +++ b/spring-web/src/test/java/org/springframework/web/client/RestTemplateTests.java, +	, +	@Test, +	public void ioExceptionWithEmptyQueryString() throws Exception {, +		, +		String scheme = "http";	, +        String authority = "example.com";, +        String path = "/resource";, +        URI uri = new URI(scheme, authority, path, "", null); // http://example.com/resource?, +        , +		given(converter.canRead(String.class, null)).willReturn(true);, +		MediaType mediaType = new MediaType("foo", "bar");, +		given(converter.getSupportedMediaTypes()).willReturn(Collections.singletonList(mediaType));, +		given(requestFactory.createRequest(uri, HttpMethod.GET)).willReturn(request);, +		given(request.getHeaders()).willReturn(new HttpHeaders());, +		given(request.execute()).willThrow(new IOException("Socket failure"));, +, +		try {, +			template.getForObject(uri, String.class);, +			fail("RestClientException expected");, +		}, +		catch (ResourceAccessException ex) {, +			assertEquals("I/O error on GET request for \"http://example.com/resource\": " +, +					"Socket failure; nested exception is java.io.IOException: Socket failure",, +					ex.getMessage());, +		}, +	}]