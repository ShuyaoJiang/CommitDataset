[+++ b/spring-test/src/test/java/org/springframework/test/web/client/samples/SampleAsyncTests.java, +@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/client/samples/SampleAsyncTests.java, +@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/WebTestClientConnectorTests.java, +import static java.time.Duration.*;, +		function.exchange(clientRequest).block(ofMillis(0));, +++ b/spring-test/src/test/java/org/springframework/test/web/client/samples/SampleAsyncTests.java, +@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/WebTestClientConnectorTests.java, +import static java.time.Duration.*;, +		function.exchange(clientRequest).block(ofMillis(0));, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/samples/ResponseEntityTests.java, +import java.time.Duration;, +import static java.time.Duration.*;, +			return Flux.interval(ofMillis(100)).onBackpressureBuffer(10).map(index -> new Person("N" + index));, +++ b/spring-test/src/test/java/org/springframework/test/web/client/samples/SampleAsyncTests.java, +@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/WebTestClientConnectorTests.java, +import static java.time.Duration.*;, +		function.exchange(clientRequest).block(ofMillis(0));, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/samples/ResponseEntityTests.java, +import java.time.Duration;, +import static java.time.Duration.*;, +			return Flux.interval(ofMillis(100)).onBackpressureBuffer(10).map(index -> new Person("N" + index));, +++ b/spring-web/src/test/java/org/springframework/http/client/AbstractAsyncHttpRequestFactoryTestCase.java, +@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/client/samples/SampleAsyncTests.java, +@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/WebTestClientConnectorTests.java, +import static java.time.Duration.*;, +		function.exchange(clientRequest).block(ofMillis(0));, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/samples/ResponseEntityTests.java, +import java.time.Duration;, +import static java.time.Duration.*;, +			return Flux.interval(ofMillis(100)).onBackpressureBuffer(10).map(index -> new Person("N" + index));, +++ b/spring-web/src/test/java/org/springframework/http/client/AbstractAsyncHttpRequestFactoryTestCase.java, +@SuppressWarnings("deprecation"), +++ b/spring-web/src/test/java/org/springframework/http/client/BufferedSimpleAsyncHttpRequestFactoryTests.java, +	@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/client/samples/SampleAsyncTests.java, +@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/WebTestClientConnectorTests.java, +import static java.time.Duration.*;, +		function.exchange(clientRequest).block(ofMillis(0));, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/samples/ResponseEntityTests.java, +import java.time.Duration;, +import static java.time.Duration.*;, +			return Flux.interval(ofMillis(100)).onBackpressureBuffer(10).map(index -> new Person("N" + index));, +++ b/spring-web/src/test/java/org/springframework/http/client/AbstractAsyncHttpRequestFactoryTestCase.java, +@SuppressWarnings("deprecation"), +++ b/spring-web/src/test/java/org/springframework/http/client/BufferedSimpleAsyncHttpRequestFactoryTests.java, +	@SuppressWarnings("deprecation"), +++ b/spring-web/src/test/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequestFactoryTests.java, +@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/client/samples/SampleAsyncTests.java, +@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/WebTestClientConnectorTests.java, +import static java.time.Duration.*;, +		function.exchange(clientRequest).block(ofMillis(0));, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/samples/ResponseEntityTests.java, +import java.time.Duration;, +import static java.time.Duration.*;, +			return Flux.interval(ofMillis(100)).onBackpressureBuffer(10).map(index -> new Person("N" + index));, +++ b/spring-web/src/test/java/org/springframework/http/client/AbstractAsyncHttpRequestFactoryTestCase.java, +@SuppressWarnings("deprecation"), +++ b/spring-web/src/test/java/org/springframework/http/client/BufferedSimpleAsyncHttpRequestFactoryTests.java, +	@SuppressWarnings("deprecation"), +++ b/spring-web/src/test/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequestFactoryTests.java, +@SuppressWarnings("deprecation"), +++ b/spring-web/src/test/java/org/springframework/http/client/Netty4AsyncClientHttpRequestFactoryTests.java, +	@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/client/samples/SampleAsyncTests.java, +@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/WebTestClientConnectorTests.java, +import static java.time.Duration.*;, +		function.exchange(clientRequest).block(ofMillis(0));, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/samples/ResponseEntityTests.java, +import java.time.Duration;, +import static java.time.Duration.*;, +			return Flux.interval(ofMillis(100)).onBackpressureBuffer(10).map(index -> new Person("N" + index));, +++ b/spring-web/src/test/java/org/springframework/http/client/AbstractAsyncHttpRequestFactoryTestCase.java, +@SuppressWarnings("deprecation"), +++ b/spring-web/src/test/java/org/springframework/http/client/BufferedSimpleAsyncHttpRequestFactoryTests.java, +	@SuppressWarnings("deprecation"), +++ b/spring-web/src/test/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequestFactoryTests.java, +@SuppressWarnings("deprecation"), +++ b/spring-web/src/test/java/org/springframework/http/client/Netty4AsyncClientHttpRequestFactoryTests.java, +	@SuppressWarnings("deprecation"), +++ b/spring-web/src/test/java/org/springframework/http/client/OkHttp3AsyncClientHttpRequestFactoryTests.java, +	@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/client/samples/SampleAsyncTests.java, +@SuppressWarnings("deprecation"), +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/WebTestClientConnectorTests.java, +import static java.time.Duration.*;, +		function.exchange(clientRequest).block(ofMillis(0));, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/samples/ResponseEntityTests.java, +import java.time.Duration;, +import static java.time.Duration.*;, +			return Flux.interval(ofMillis(100)).onBackpressureBuffer(10).map(index -> new Person("N" + index));]