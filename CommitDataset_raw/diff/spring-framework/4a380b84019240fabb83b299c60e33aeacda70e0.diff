[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java, +	/** Well-known name for the RequestDataValueProcessor in the bean factory. */, +	public static final String REQUEST_DATA_VALUE_PROCESSOR_BEAN_NAME = "requestDataValueProcessor";, +, +, +		return new RequestContext(exchange, model, getApplicationContext(), getRequestDataValueProcessor());, +	}, +, +	/**, +	 * Return the {@link RequestDataValueProcessor} to use., +	 * <p>The default implementation looks in the {@link #getApplicationContext(), +	 * Spring configuration} for a {@code RequestDataValueProcessor} bean with, +	 * the name {@link #REQUEST_DATA_VALUE_PROCESSOR_BEAN_NAME}., +	 */, +	protected RequestDataValueProcessor getRequestDataValueProcessor() {, +		if (getApplicationContext() != null) {, +			String beanName = REQUEST_DATA_VALUE_PROCESSOR_BEAN_NAME;, +			return getApplicationContext().getBean(beanName, RequestDataValueProcessor.class);, +		}, +		return null;, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java, +	/** Well-known name for the RequestDataValueProcessor in the bean factory. */, +	public static final String REQUEST_DATA_VALUE_PROCESSOR_BEAN_NAME = "requestDataValueProcessor";, +, +, +		return new RequestContext(exchange, model, getApplicationContext(), getRequestDataValueProcessor());, +	}, +, +	/**, +	 * Return the {@link RequestDataValueProcessor} to use., +	 * <p>The default implementation looks in the {@link #getApplicationContext(), +	 * Spring configuration} for a {@code RequestDataValueProcessor} bean with, +	 * the name {@link #REQUEST_DATA_VALUE_PROCESSOR_BEAN_NAME}., +	 */, +	protected RequestDataValueProcessor getRequestDataValueProcessor() {, +		if (getApplicationContext() != null) {, +			String beanName = REQUEST_DATA_VALUE_PROCESSOR_BEAN_NAME;, +			return getApplicationContext().getBean(beanName, RequestDataValueProcessor.class);, +		}, +		return null;, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/RedirectView.java, +	 * Create the target URL and, if necessary, pre-pend the contextPath, expand, +	 * URI template variables, append the current request query, and apply the, +	 * configured {@link #getRequestDataValueProcessor(), +	 * RequestDataValueProcessor}., +		String result = targetUrl.toString();, +, +		RequestDataValueProcessor processor = getRequestDataValueProcessor();, +		return (processor != null ? processor.processUrl(exchange, result) : result);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java, +	/** Well-known name for the RequestDataValueProcessor in the bean factory. */, +	public static final String REQUEST_DATA_VALUE_PROCESSOR_BEAN_NAME = "requestDataValueProcessor";, +, +, +		return new RequestContext(exchange, model, getApplicationContext(), getRequestDataValueProcessor());, +	}, +, +	/**, +	 * Return the {@link RequestDataValueProcessor} to use., +	 * <p>The default implementation looks in the {@link #getApplicationContext(), +	 * Spring configuration} for a {@code RequestDataValueProcessor} bean with, +	 * the name {@link #REQUEST_DATA_VALUE_PROCESSOR_BEAN_NAME}., +	 */, +	protected RequestDataValueProcessor getRequestDataValueProcessor() {, +		if (getApplicationContext() != null) {, +			String beanName = REQUEST_DATA_VALUE_PROCESSOR_BEAN_NAME;, +			return getApplicationContext().getBean(beanName, RequestDataValueProcessor.class);, +		}, +		return null;, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/RedirectView.java, +	 * Create the target URL and, if necessary, pre-pend the contextPath, expand, +	 * URI template variables, append the current request query, and apply the, +	 * configured {@link #getRequestDataValueProcessor(), +	 * RequestDataValueProcessor}., +		String result = targetUrl.toString();, +, +		RequestDataValueProcessor processor = getRequestDataValueProcessor();, +		return (processor != null ? processor.processUrl(exchange, result) : result);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/RequestContext.java, +	private Boolean defaultHtmlEscape;, +	private Map<String, Errors> errorsMap;, +, +	private RequestDataValueProcessor dataValueProcessor;, +, +, +	public RequestContext(ServerWebExchange exchange, Map<String, Object> model, MessageSource messageSource) {, +		this(exchange, model, messageSource, null);, +	}, +, +	public RequestContext(ServerWebExchange exchange, Map<String, Object> model, MessageSource messageSource,, +			RequestDataValueProcessor dataValueProcessor) {, +, +		this.defaultHtmlEscape = null; // TODO, +		this.dataValueProcessor = dataValueProcessor;, +	 * Return the {@link RequestDataValueProcessor} instance to apply to in form, +	 * tag libraries and to redirect URLs., +	 */, +	public Optional<RequestDataValueProcessor> getRequestDataValueProcessor() {, +		return Optional.ofNullable(this.dataValueProcessor);, +	}]