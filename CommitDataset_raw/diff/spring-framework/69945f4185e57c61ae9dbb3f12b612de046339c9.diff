[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +							this::monoThrowableToMono));, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +							this::monoThrowableToMono));, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/client/WebClientIntegrationTests.java, +import static org.junit.Assert.*;, +	public void shouldApplyCustomStatusHandlerParameterizedTypeReference() throws Exception {, +		prepareResponse(response -> response.setResponseCode(500), +				.setHeader("Content-Type", "text/plain").setBody("Internal Server error"));, +, +		Mono<String> result = this.webClient.get(), +				.uri("/greeting?name=Spring"), +				.retrieve(), +				.onStatus(HttpStatus::is5xxServerError, response -> Mono.just(new MyException("500 error!"))), +				.bodyToMono(new ParameterizedTypeReference<String>() {});, +, +		StepVerifier.create(result), +				.expectError(MyException.class), +				.verify(Duration.ofSeconds(3));, +, +		expectRequestCount(1);, +		expectRequest(request -> {, +			assertEquals("*/*", request.getHeader(HttpHeaders.ACCEPT));, +			assertEquals("/greeting?name=Spring", request.getPath());, +		});, +	}, +, +	@Test]