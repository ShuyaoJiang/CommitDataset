[+++ b/spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, + * Copyright 2002-2018 the original author or authors., +				ReflectionUtils.makeAccessible(enumField);, +++ b/spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, + * Copyright 2002-2018 the original author or authors., +				ReflectionUtils.makeAccessible(enumField);, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperEnumTests.java, + * Copyright 2002-2018 the original author or authors., +	@Test, +	public void testNonPublicEnum() {, +		NonPublicEnumHolder holder = new NonPublicEnumHolder();, +		BeanWrapper bw = new BeanWrapperImpl(holder);, +		bw.setPropertyValue("nonPublicEnum", "VALUE_1");, +		assertEquals(NonPublicEnum.VALUE_1, holder.getNonPublicEnum());, +	}, +, +, +	enum NonPublicEnum {, +, +		VALUE_1, VALUE_2;, +	}, +, +, +	static class NonPublicEnumHolder {, +, +		private NonPublicEnum nonPublicEnum;, +, +		public NonPublicEnum getNonPublicEnum() {, +			return nonPublicEnum;, +		}, +, +		public void setNonPublicEnum(NonPublicEnum nonPublicEnum) {, +			this.nonPublicEnum = nonPublicEnum;, +		}, +	}, +, +++ b/spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, + * Copyright 2002-2018 the original author or authors., +				ReflectionUtils.makeAccessible(enumField);, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperEnumTests.java, + * Copyright 2002-2018 the original author or authors., +	@Test, +	public void testNonPublicEnum() {, +		NonPublicEnumHolder holder = new NonPublicEnumHolder();, +		BeanWrapper bw = new BeanWrapperImpl(holder);, +		bw.setPropertyValue("nonPublicEnum", "VALUE_1");, +		assertEquals(NonPublicEnum.VALUE_1, holder.getNonPublicEnum());, +	}, +, +, +	enum NonPublicEnum {, +, +		VALUE_1, VALUE_2;, +	}, +, +, +	static class NonPublicEnumHolder {, +, +		private NonPublicEnum nonPublicEnum;, +, +		public NonPublicEnum getNonPublicEnum() {, +			return nonPublicEnum;, +		}, +, +		public void setNonPublicEnum(NonPublicEnum nonPublicEnum) {, +			this.nonPublicEnum = nonPublicEnum;, +		}, +	}, +, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/DefaultListableBeanFactoryTests.java, + * Copyright 2002-2018 the original author or authors., +	@Test, +	public void testNonPublicEnum() {, +		DefaultListableBeanFactory bf = new DefaultListableBeanFactory();, +		RootBeanDefinition bd = new RootBeanDefinition(NonPublicEnumHolder.class);, +		bd.getConstructorArgumentValues().addGenericArgumentValue("VALUE_1");, +		bf.registerBeanDefinition("holderBean", bd);, +		NonPublicEnumHolder holder = (NonPublicEnumHolder) bf.getBean("holderBean");, +		assertEquals(NonPublicEnum.VALUE_1, holder.getNonPublicEnum());, +	}, +, +, +	enum NonPublicEnum {, +, +		VALUE_1, VALUE_2;, +	}, +, +, +	static class NonPublicEnumHolder {, +, +		final NonPublicEnum nonPublicEnum;, +, +		public NonPublicEnumHolder(NonPublicEnum nonPublicEnum) {, +			this.nonPublicEnum = nonPublicEnum;, +		}, +, +		public NonPublicEnum getNonPublicEnum() {, +			return nonPublicEnum;, +		}, +	}]