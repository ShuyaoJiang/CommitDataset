[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/HsqlTableMetaDataProvider.java, + * Copyright 2002-2014 the original author or authors., + * The HSQL specific implementation of {@link TableMetaDataProvider}., + * Supports a feature for retrieving generated keys without the JDBC 3.0, + * {@code getGeneratedKeys} support., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/HsqlTableMetaDataProvider.java, + * Copyright 2002-2014 the original author or authors., + * The HSQL specific implementation of {@link TableMetaDataProvider}., + * Supports a feature for retrieving generated keys without the JDBC 3.0, + * {@code getGeneratedKeys} support., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/PostgresTableMetaDataProvider.java, + * Copyright 2002-2014 the original author or authors., + * The PostgreSQL specific implementation of {@link TableMetaDataProvider}., + * Supports a feature for retrieving generated keys without the JDBC 3.0, + * {@code getGeneratedKeys} support., +			if (logger.isWarnEnabled()) {, +				logger.warn("PostgreSQL does not support getGeneratedKeys or INSERT ... RETURNING in version " +, +						getDatabaseVersion());, +			}, +, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/HsqlTableMetaDataProvider.java, + * Copyright 2002-2014 the original author or authors., + * The HSQL specific implementation of {@link TableMetaDataProvider}., + * Supports a feature for retrieving generated keys without the JDBC 3.0, + * {@code getGeneratedKeys} support., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/PostgresTableMetaDataProvider.java, + * Copyright 2002-2014 the original author or authors., + * The PostgreSQL specific implementation of {@link TableMetaDataProvider}., + * Supports a feature for retrieving generated keys without the JDBC 3.0, + * {@code getGeneratedKeys} support., +			if (logger.isWarnEnabled()) {, +				logger.warn("PostgreSQL does not support getGeneratedKeys or INSERT ... RETURNING in version " +, +						getDatabaseVersion());, +			}, +, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java, + * Copyright 2002-2014 the original author or authors., + * uses a {@code javax.sql.DataSource} as its {@code Connection} factory mechanism., + * Binds a JDBC Connection from the specified DataSource to the current thread,, + * potentially allowing for one thread-bound Connection per DataSource., + * <p>This transaction manager supports nested transactions via the JDBC 3.0, + * {@link java.sql.Savepoint} mechanism. The, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/HsqlTableMetaDataProvider.java, + * Copyright 2002-2014 the original author or authors., + * The HSQL specific implementation of {@link TableMetaDataProvider}., + * Supports a feature for retrieving generated keys without the JDBC 3.0, + * {@code getGeneratedKeys} support., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/PostgresTableMetaDataProvider.java, + * Copyright 2002-2014 the original author or authors., + * The PostgreSQL specific implementation of {@link TableMetaDataProvider}., + * Supports a feature for retrieving generated keys without the JDBC 3.0, + * {@code getGeneratedKeys} support., +			if (logger.isWarnEnabled()) {, +				logger.warn("PostgreSQL does not support getGeneratedKeys or INSERT ... RETURNING in version " +, +						getDatabaseVersion());, +			}, +, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java, + * Copyright 2002-2014 the original author or authors., + * uses a {@code javax.sql.DataSource} as its {@code Connection} factory mechanism., + * Binds a JDBC Connection from the specified DataSource to the current thread,, + * potentially allowing for one thread-bound Connection per DataSource., + * <p>This transaction manager supports nested transactions via the JDBC 3.0, + * {@link java.sql.Savepoint} mechanism. The, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/object/StoredProcedure.java, + * Copyright 2002-2014 the original author or authors., +import java.util.Map;, + * procedure in the RDBMS., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/HsqlTableMetaDataProvider.java, + * Copyright 2002-2014 the original author or authors., + * The HSQL specific implementation of {@link TableMetaDataProvider}., + * Supports a feature for retrieving generated keys without the JDBC 3.0, + * {@code getGeneratedKeys} support., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/PostgresTableMetaDataProvider.java, + * Copyright 2002-2014 the original author or authors., + * The PostgreSQL specific implementation of {@link TableMetaDataProvider}., + * Supports a feature for retrieving generated keys without the JDBC 3.0, + * {@code getGeneratedKeys} support., +			if (logger.isWarnEnabled()) {, +				logger.warn("PostgreSQL does not support getGeneratedKeys or INSERT ... RETURNING in version " +, +						getDatabaseVersion());, +			}, +, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java, + * Copyright 2002-2014 the original author or authors., + * uses a {@code javax.sql.DataSource} as its {@code Connection} factory mechanism., + * Binds a JDBC Connection from the specified DataSource to the current thread,, + * potentially allowing for one thread-bound Connection per DataSource., + * <p>This transaction manager supports nested transactions via the JDBC 3.0, + * {@link java.sql.Savepoint} mechanism. The, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/object/StoredProcedure.java, + * Copyright 2002-2014 the original author or authors., +import java.util.Map;, + * procedure in the RDBMS., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/incrementer/DerbyMaxValueIncrementer.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/HsqlTableMetaDataProvider.java, + * Copyright 2002-2014 the original author or authors., + * The HSQL specific implementation of {@link TableMetaDataProvider}., + * Supports a feature for retrieving generated keys without the JDBC 3.0]