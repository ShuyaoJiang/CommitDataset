[+++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/LocalSessionFactoryBuilder.java, + * Copyright 2002-2013 the original author or authors., +	private static final String PACKAGE_INFO_SUFFIX = ".package-info";, +, +						if (matchesEntityTypeFilter(reader, readerFactory)) {, +							addAnnotatedClass(this.resourcePatternResolver.getClassLoader().loadClass(className));, +						}, +						else if (className.endsWith(PACKAGE_INFO_SUFFIX)) {, +							addPackage(className.substring(0, className.length() - PACKAGE_INFO_SUFFIX.length()));, +	private boolean matchesEntityTypeFilter(MetadataReader reader, MetadataReaderFactory readerFactory) throws IOException {, +++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/LocalSessionFactoryBuilder.java, + * Copyright 2002-2013 the original author or authors., +	private static final String PACKAGE_INFO_SUFFIX = ".package-info";, +, +						if (matchesEntityTypeFilter(reader, readerFactory)) {, +							addAnnotatedClass(this.resourcePatternResolver.getClassLoader().loadClass(className));, +						}, +						else if (className.endsWith(PACKAGE_INFO_SUFFIX)) {, +							addPackage(className.substring(0, className.length() - PACKAGE_INFO_SUFFIX.length()));, +	private boolean matchesEntityTypeFilter(MetadataReader reader, MetadataReaderFactory readerFactory) throws IOException {, +++ b/spring-orm/src/main/java/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.java, + * Copyright 2002-2013 the original author or authors., +	private static final String PACKAGE_INFO_SUFFIX = ".package-info";, +, +	public void setConfigurationClass(Class<?> configurationClass) {, +							if (matchesEntityTypeFilter(reader, readerFactory)) {, +							else if (className.endsWith(PACKAGE_INFO_SUFFIX)) {, +								config.addPackage(className.substring(0, className.length() - PACKAGE_INFO_SUFFIX.length()));, +							}, +	private boolean matchesEntityTypeFilter(MetadataReader reader, MetadataReaderFactory readerFactory) throws IOException {]