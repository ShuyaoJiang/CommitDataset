[+++ /dev/null, +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanMethod.java, + * @see ConfigurationClass, + * @see ConfigurationModel, + * @see ConfigurationParser, + * @see ConfigurationModelBeanDefinitionReader, +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanMethod.java, + * @see ConfigurationClass, + * @see ConfigurationModel, + * @see ConfigurationParser, + * @see ConfigurationModelBeanDefinitionReader, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanMethodInterceptor.java, +class BeanMethodInterceptor implements MethodInterceptor {, +	private static final Log log = LogFactory.getLog(BeanMethodInterceptor.class);, +, +	private final DefaultListableBeanFactory beanFactory;, +, +	public BeanMethodInterceptor(DefaultListableBeanFactory beanFactory) {, +		this.beanFactory = beanFactory;, +		// by default the bean name is the name of the @Bean-annotated method, +		String beanName = method.getName();, +, +		if(bean != null && bean.name().length > 0), +		String scopedBeanName = ConfigurationModelBeanDefinitionReader.resolveHiddenScopedProxyBeanName(beanName);, +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanMethod.java, + * @see ConfigurationClass, + * @see ConfigurationModel, + * @see ConfigurationParser, + * @see ConfigurationModelBeanDefinitionReader, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanMethodInterceptor.java, +class BeanMethodInterceptor implements MethodInterceptor {, +	private static final Log log = LogFactory.getLog(BeanMethodInterceptor.class);, +, +	private final DefaultListableBeanFactory beanFactory;, +, +	public BeanMethodInterceptor(DefaultListableBeanFactory beanFactory) {, +		this.beanFactory = beanFactory;, +		// by default the bean name is the name of the @Bean-annotated method, +		String beanName = method.getName();, +, +		if(bean != null && bean.name().length > 0), +		String scopedBeanName = ConfigurationModelBeanDefinitionReader.resolveHiddenScopedProxyBeanName(beanName);, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanMethod.java, + * @see ConfigurationClass, + * @see ConfigurationModel, + * @see ConfigurationParser, + * @see ConfigurationModelBeanDefinitionReader, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanMethodInterceptor.java, +class BeanMethodInterceptor implements MethodInterceptor {, +	private static final Log log = LogFactory.getLog(BeanMethodInterceptor.class);, +, +	private final DefaultListableBeanFactory beanFactory;, +, +	public BeanMethodInterceptor(DefaultListableBeanFactory beanFactory) {, +		this.beanFactory = beanFactory;, +		// by default the bean name is the name of the @Bean-annotated method, +		String beanName = method.getName();, +, +		if(bean != null && bean.name().length > 0), +		String scopedBeanName = ConfigurationModelBeanDefinitionReader.resolveHiddenScopedProxyBeanName(beanName);, +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationClass.java, + * Represents a user-defined {@link Configuration @Configuration} class., +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanMethod.java, + * @see ConfigurationClass, + * @see ConfigurationModel, + * @see ConfigurationParser, + * @see ConfigurationModelBeanDefinitionReader, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanMethodInterceptor.java, +class BeanMethodInterceptor implements MethodInterceptor {, +	private static final Log log = LogFactory.getLog(BeanMethodInterceptor.class);, +, +	private final DefaultListableBeanFactory beanFactory;, +, +	public BeanMethodInterceptor(DefaultListableBeanFactory beanFactory) {, +		this.beanFactory = beanFactory;, +		// by default the bean name is the name of the @Bean-annotated method, +		String beanName = method.getName();, +, +		if(bean != null && bean.name().length > 0), +		String scopedBeanName = ConfigurationModelBeanDefinitionReader.resolveHiddenScopedProxyBeanName(beanName);, +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationClass.java, + * Represents a user-defined {@link Configuration @Configuration} class., +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/ConfigurationClassMethodVisitor.java, +import org.springframework.asm.MethodVisitor;, + * ASM {@link MethodVisitor} that visits a single method declared in a given, + * {@link Configuration} class. Determines whether the method is a {@link Bean}, + * method and if so, adds it to the {@link ConfigurationClass}., +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanMethod.java, + * @see ConfigurationClass, + * @see ConfigurationModel, + * @see ConfigurationParser]