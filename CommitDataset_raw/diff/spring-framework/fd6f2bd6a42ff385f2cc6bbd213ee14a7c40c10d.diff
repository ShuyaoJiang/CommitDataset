[+++ b/spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java, +	public void SPR5899() {, +	public void SPR5905_InnerTypeReferences() {, +	public void SPR5804() {, +	public void SPR5847() {, +	public void NPE_SPR5673() {, +	static class C {, +, +		public List<String> ls;, +, +		public String[] as;, +, +		public Map<String, String> ms;, +, +		C() {, +			ls = new ArrayList<>();, +			ls.add("abc");, +			ls.add("def");, +			as = new String[] { "abc", "def" };, +			ms = new HashMap<>();, +			ms.put("abc", "xyz");, +			ms.put("def", "pqr");, +		}, +	}, +, +, +	static class D {, +, +		public String a;, +, +		private D(String s) {, +			a = s;, +		}, +, +		@Override, +		public String toString() {, +			return "D(" + a + ")";, +		}, +	}, +, +, +	private void checkTemplateParsing(String expression, String expectedValue) {, +	private void checkTemplateParsing(String expression, ParserContext context, String expectedValue) {, +	private void checkTemplateParsingError(String expression, String expectedMessage) {, +	private void checkTemplateParsingError(String expression, ParserContext context, String expectedMessage) {, +	public void mapOfMap_SPR7244() {, +	public void projectionTypeDescriptors_1() {, +	public void projectionTypeDescriptors_2() {, +	public void projectionTypeDescriptors_3() {, +	public void greaterThanWithNulls_SPR7840() {, +	public void reservedWords_8228() {, +	public void reservedWordProperties_9862() {, +	public void SPR9486_floatFunctionResolver() {, +	public void SPR16123() {, +		ExpressionParser parser = new SpelExpressionParser();, +		parser.parseExpression("simpleProperty").setValue(new BooleanHolder(), null);, +, +		try {, +			parser.parseExpression("primitiveProperty").setValue(new BooleanHolder(), null);, +			fail("Should have thrown EvaluationException");, +		}, +		catch (EvaluationException ex) {, +			// expected, +		}, +	}, +, +	@Test, +	public void SPR10146_malformedExpressions() {, +	public void SPR10125() {, +	public void SPR10210() {, +	public void SPR10328() {, +	public void SPR10452() {, +	public void SPR9495() {, +	public void SPR10486() {, +	public void SPR11142() {, +	public void SPR13055() {]