[+++ b/.gitignore, +activemq-data/, +++ b/.gitignore, +activemq-data/, +++ b/build.gradle, +		testCompile(project(":spring-test")), +		testCompile("com.thoughtworks.xstream:xstream:1.4.4"), +		testCompile("org.apache.activemq:activemq-broker:5.8.0"), +		testCompile("org.apache.activemq:activemq-kahadb-store:5.8.0") {, +			exclude group: "org.springframework", module: "spring-context", +		}, +		testCompile("org.apache.activemq:activemq-stomp:5.8.0"), +		testCompile("org.slf4j:slf4j-jcl:${slf4jVersion}"), +		testCompile("log4j:log4j:1.2.17"), +++ b/.gitignore, +activemq-data/, +++ b/build.gradle, +		testCompile(project(":spring-test")), +		testCompile("com.thoughtworks.xstream:xstream:1.4.4"), +		testCompile("org.apache.activemq:activemq-broker:5.8.0"), +		testCompile("org.apache.activemq:activemq-kahadb-store:5.8.0") {, +			exclude group: "org.springframework", module: "spring-context", +		}, +		testCompile("org.apache.activemq:activemq-stomp:5.8.0"), +		testCompile("org.slf4j:slf4j-jcl:${slf4jVersion}"), +		testCompile("log4j:log4j:1.2.17"), +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, +		if ((this.applicationEventPublisher != null) && this.brokerAvailable.compareAndSet(false, true)) {, +			if (logger.isTraceEnabled()) {, +				logger.trace("Publishing BrokerAvailabilityEvent (available)");, +			}, +		if ((this.applicationEventPublisher != null) && this.brokerAvailable.compareAndSet(true, false)) {, +			if (logger.isTraceEnabled()) {, +				logger.trace("Publishing BrokerAvailabilityEvent (unavailable)");, +			}, +			if (localConnection == null) {, +				return false;, +, +			if (logger.isTraceEnabled()) {, +				logger.trace("Forwarding to STOMP broker, message: " + message);, +			}, +, +			String payload = new String(bytes, Charset.forName("UTF-8"));, +					deferred.accept(success);, +					if (StompHeaderAccessor.wrap(message).getCommand() != StompCommand.DISCONNECT) {, +				}, +			}, +			catch (InterruptedException ie) {, +			return (success != null) ? success : false;, +++ b/.gitignore, +activemq-data/, +++ b/build.gradle, +		testCompile(project(":spring-test")), +		testCompile("com.thoughtworks.xstream:xstream:1.4.4"), +		testCompile("org.apache.activemq:activemq-broker:5.8.0"), +		testCompile("org.apache.activemq:activemq-kahadb-store:5.8.0") {, +			exclude group: "org.springframework", module: "spring-context", +		}, +		testCompile("org.apache.activemq:activemq-stomp:5.8.0"), +		testCompile("org.slf4j:slf4j-jcl:${slf4jVersion}"), +		testCompile("log4j:log4j:1.2.17"), +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, +		if ((this.applicationEventPublisher != null) && this.brokerAvailable.compareAndSet(false, true)) {, +			if (logger.isTraceEnabled()) {, +				logger.trace("Publishing BrokerAvailabilityEvent (available)");, +			}, +		if ((this.applicationEventPublisher != null) && this.brokerAvailable.compareAndSet(true, false)) {, +			if (logger.isTraceEnabled()) {, +				logger.trace("Publishing BrokerAvailabilityEvent (unavailable)");, +			}, +			if (localConnection == null) {, +				return false;, +, +			if (logger.isTraceEnabled()) {, +				logger.trace("Forwarding to STOMP broker, message: " + message);, +			}, +, +			String payload = new String(bytes, Charset.forName("UTF-8"));, +					deferred.accept(success);, +					if (StompHeaderAccessor.wrap(message).getCommand() != StompCommand.DISCONNECT) {, +				}, +			}, +			catch (InterruptedException ie) {, +			return (success != null) ? success : false;, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompCommand.java, +	private static Set<StompCommand> subscriptionIdRequiredLookup =, +			new HashSet<StompCommand>(Arrays.asList(SUBSCRIBE, UNSUBSCRIBE, MESSAGE));, +, +	public boolean requiresSubscriptionId() {, +		return subscriptionIdRequiredLookup.contains(this);, +	}, +, +++ b/.gitignore, +activemq-data/, +++ b/build.gradle, +		testCompile(project(":spring-test")), +		testCompile("com.thoughtworks.xstream:xstream:1.4.4"), +		testCompile("org.apache.activemq:activemq-broker:5.8.0"), +		testCompile("org.apache.activemq:activemq-kahadb-store:5.8.0") {, +			exclude group: "org.springframework", module: "spring-context"]