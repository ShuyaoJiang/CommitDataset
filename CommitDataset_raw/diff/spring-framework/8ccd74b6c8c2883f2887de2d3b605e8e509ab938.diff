[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.java, +		tagWriter.writeAttribute("value", convertToDisplayString(value));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.java, +		tagWriter.writeAttribute("value", convertToDisplayString(value));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.java, +	 * Get a display String for the given value, converted by a PropertyEditor, +	 * that the BindStatus may have registered for the value's Class., +	 */, +	protected String convertToDisplayString(Object value) throws JspException {, +		PropertyEditor editor = (value != null ? getBindStatus().findEditor(value.getClass()) : null);, +		return getDisplayString(value, editor);, +	}, +, +, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.java, +		tagWriter.writeAttribute("value", convertToDisplayString(value));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.java, +	 * Get a display String for the given value, converted by a PropertyEditor, +	 * that the BindStatus may have registered for the value's Class., +	 */, +	protected String convertToDisplayString(Object value) throws JspException {, +		PropertyEditor editor = (value != null ? getBindStatus().findEditor(value.getClass()) : null);, +		return getDisplayString(value, editor);, +	}, +, +, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/form/AbstractMultiCheckedElementTag.java, + * Copyright 2002-2010 the original author or authors., +			throw new IllegalArgumentException("Attribute 'items' must be an array, a Collection or a Map");, +		tagWriter.appendValue(convertToDisplayString(label));]