[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +++ b/spring-context/src/test/java/org/springframework/context/annotation/configuration/BeanMethodQualificationTests.java, +		// TODO: assertTrue(BeanFactoryAnnotationUtils.isQualifierMatch(value -> value.equals("boring"),, +		//		"testBean2", ctx.getDefaultListableBeanFactory()));, +		TestBean testBean2 = BeanFactoryAnnotationUtils.qualifiedBeanOfType(, +				ctx.getDefaultListableBeanFactory(), TestBean.class, "boring");, +		assertThat(testBean2.getName(), equalTo("boring"));, +		public TestBean testBean2(@Lazy TestBean testBean1) {, +			TestBean tb = new TestBean("boring");, +			tb.setSpouse(testBean1);, +			return tb;, +		public TestBean testBean2(TestBean testBean1) {, +			TestBean tb = new TestBean("boring");, +			tb.setSpouse(testBean1);, +			return tb;, +		public TestBean testBean2(TestBean testBean1) {, +			TestBean tb = new TestBean("boring");, +			tb.setSpouse(testBean1);, +			return tb;, +		public TestBean testBean2(@Lazy TestBean testBean1) {, +			TestBean tb = new TestBean("boring");, +			tb.setSpouse(testBean1);, +			return tb;, +		public TestBean testBean2(@Lazy TestBean testBean1) {, +			TestBean tb = new TestBean("boring");, +			tb.setSpouse(testBean1);, +			return tb;]