[+++ b/spring-core/src/main/java/org/springframework/core/ResolvableType.java, +@SuppressWarnings("serial"), +	 * The underlying Java type being managed (only ever {@code null} for {@link #NONE})., +	private final TypeProvider typeProvider;, +	 * @param type the underlying Java type (may only be {@code null} for {@link #NONE}), +	private ResolvableType(, +			Type type, TypeProvider typeProvider, VariableResolver variableResolver, ResolvableType componentType) {, +, +		if (this == obj) {, +		if (!(obj instanceof ResolvableType)) {, +		ResolvableType other = (ResolvableType) obj;, +		return (ObjectUtils.nullSafeEquals(this.type, other.type) &&, +				ObjectUtils.nullSafeEquals(getSource(), other.getSource()) &&, +				variableResolverSourceEquals(other.variableResolver) &&, +				ObjectUtils.nullSafeEquals(this.componentType, other.componentType));, +	}, +		return ObjectUtils.nullSafeHashCode(this.type);, +	private boolean variableResolverSourceEquals(VariableResolver other) {, +		if (this.variableResolver == null) {, +			return (other == null);, +		}, +		if (other == null) {, +			return false;, +		}, +		Object src = this.variableResolver.getSource();, +		return (src == this ? src == other.getSource() : ObjectUtils.nullSafeEquals(src, other.getSource()));, +, +	public static ResolvableType forArrayComponent(ResolvableType componentType) {, +		 * Resolve the specified variable.]