[+++ b/spring-test/src/main/java/org/springframework/test/web/ModelAndViewAssert.java, + * Copyright 2002-2012 the original author or authors., +import static org.springframework.test.util.AssertionErrors.*;, +, +		assertTrue("ModelAndView is null", mav != null);, +		assertTrue("Model is null", mav.getModel() != null);, +		assertTrue("Model attribute with name '" + modelName + "' is null", obj != null);, +		assertTrue("Model attribute is not of expected type '" + expectedType.getName() + "' but rather of type '", +				+ obj.getClass().getName() + "'", expectedType.isAssignableFrom(obj.getClass()));, +		assertTrue("ModelAndView is null", mav != null);, +		assertTrue(, +			"Size of model list is '" + modelList.size() + "' while size of expected list is '" + expectedList.size(), +					+ "'", expectedList.size() == modelList.size());, +		assertTrue("List in model under name '" + modelName + "' is not equal to the expected list.",, +			expectedList.equals(modelList));, +		assertTrue("ModelAndView is null", mav != null);, +		assertTrue("Model is null", mav.getModel() != null);, +		assertTrue("Model attribute with name '" + modelName + "' is not available",, +			mav.getModel().containsKey(modelName));, +		assertTrue("ModelAndView is null", mav != null);, +		assertTrue("Model value with name '" + modelName + "' is not the same as the expected value which was '", +				+ expectedValue + "'", modelValue.equals(expectedValue));, +		assertTrue("ModelAndView is null", mav != null);, +		assertTrue("Model is null", mav.getModel() != null);, +		assertTrue("ModelAndView is null", mav != null);, +		assertTrue(, +			"Size of model list is '" + modelList.size() + "' while size of expected list is '" + expectedList.size(), +					+ "'", expectedList.size() == modelList.size());, +		assertTrue("List in model under name '" + modelName + "' is not equal to the expected list.",, +			expectedList.equals(modelList));, +		assertTrue("ModelAndView is null", mav != null);, +		assertTrue("View name is not equal to '" + expectedName + "' but was '" + mav.getViewName() + "'",, +			ObjectUtils.nullSafeEquals(expectedName, mav.getViewName()));]