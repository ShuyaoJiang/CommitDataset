[+++ b/src/docs/asciidoc/appendix.adoc, +== Migrating to Spring Framework 4.3 / 5.0, +++ b/src/docs/asciidoc/appendix.adoc, +== Migrating to Spring Framework 4.3 / 5.0, +++ b/src/docs/asciidoc/data-access.adoc, +As of Spring Framework 5.0, Spring requires Hibernate ORM 4.3 or later for JPA support, +and even Hibernate ORM 5.0+ for programming against the native Hibernate Session API., +Note that the Hibernate team does not maintain any versions prior to 5.0 anymore and, +is likely to focus on 5.2+ exclusively soon., +++ b/src/docs/asciidoc/appendix.adoc, +== Migrating to Spring Framework 4.3 / 5.0, +++ b/src/docs/asciidoc/data-access.adoc, +As of Spring Framework 5.0, Spring requires Hibernate ORM 4.3 or later for JPA support, +and even Hibernate ORM 5.0+ for programming against the native Hibernate Session API., +Note that the Hibernate team does not maintain any versions prior to 5.0 anymore and, +is likely to focus on 5.2+ exclusively soon., +++ b/src/docs/asciidoc/overview.adoc, +need to embrace the Java language in an enterprise environment, with support for Groovy, +and Kotlin as alternative languages on the JVM, and with the flexibility to create many, +kinds of architectures depending on an application's needs. As of Spring Framework 5.0,, +Spring requires JDK 8+ (Java SE 8+) and provides out-of-the-box support for JDK 9 already., +The term "Spring" means different things in different contexts. It can be used to refer to, +projects have been built on top of the Spring Framework. Most often, when people say, +"Spring", they mean the entire family of projects. This reference documentation focuses on, +the foundation: the Spring Framework itself., +persistence, and web. It also includes the Servlet-based Spring MVC web framework and, in, +A note about modules: Spring's framework jars allow for deployment to JDK 9's module path, +("Jigsaw"). For use in Jigsaw-enabled applications, the Spring Framework 5 jars come with, +"Automatic-Module-Name" manifest entries which define stable language-level module names, +("spring.core", "spring.context" etc) independent from jar artifact names (the jars follow, +the same naming pattern with "-" instead of ".", e.g. "spring-core" and "spring-context")., +Of course, Spring's framework jars keep working fine on the classpath on both JDK 8 and 9., +, +to Java EE. The Spring programming model does not embrace the Java EE platform specification;, +rather, it integrates with carefully selected individual specifications from the EE umbrella:, +* WebSocket API (https://www.jcp.org/en/jsr/detail?id=356[JSR 356]), +* Concurrency Utilities (https://www.jcp.org/en/jsr/detail?id=236[JSR 236]), +* JPA (https://jcp.org/en/jsr/detail?id=338[JSR 338]), +* JMS (https://jcp.org/en/jsr/detail?id=914[JSR 914]), +* as well as JTA/JCA setups for transaction coordination, if necessary., +may choose to use instead of the Spring-specific mechanisms provided by the Spring Framework., +, +As of Spring Framework 5.0, Spring requires the Java EE 7 level (e.g. Servlet 3.1+, JPA 2.1+), +as a minimum - while at the same time providing out-of-the-box integration with newer APIs, +at the Java EE 8 level (e.g. Servlet 4.0, JSON Binding API) when encountered at runtime., +This keeps Spring fully compatible with e.g. Tomcat 8 and 9, WebSphere 9, and JBoss EAP 7., +cloud-friendly way, with the Servlet container embedded and trivial to change., +As of Spring Framework 5, a WebFlux application does not even use the Servlet API directly, +and can run on servers (such as Netty) that are not Servlet containers.]