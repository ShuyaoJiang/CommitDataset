[+++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java, +	 * <p>If the return type of the method is a {@link Future} object, the original, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java, +	 * <p>If the return type of the method is a {@link Future} object, the original, +++ b/spring-context/src/test/java/org/springframework/scheduling/config/ExecutorBeanDefinitionParserTests.java, + * Copyright 2002-2015 the original author or authors., +, +		ThreadPoolTaskExecutor executor = this.context.getBean("default", ThreadPoolTaskExecutor.class);, +, +		executor.execute(task);, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java, +	 * <p>If the return type of the method is a {@link Future} object, the original, +++ b/spring-context/src/test/java/org/springframework/scheduling/config/ExecutorBeanDefinitionParserTests.java, + * Copyright 2002-2015 the original author or authors., +, +		ThreadPoolTaskExecutor executor = this.context.getBean("default", ThreadPoolTaskExecutor.class);, +, +		executor.execute(task);, +++ b/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartFile.java, +, +		// Check for Unix-style path, +			// Check for Windows-style path, +			// Any sort of path separator found..., +			// A plain name]