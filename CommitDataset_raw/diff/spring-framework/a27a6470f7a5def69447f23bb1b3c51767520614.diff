[+++ b/spring-aop/src/main/java/org/springframework/aop/support/ControlFlowPointcut.java, + * Copyright 2002-2019 the original author or authors., +	 * Subclasses can override this if it's possible to filter out some candidate classes., +++ b/spring-aop/src/main/java/org/springframework/aop/support/ControlFlowPointcut.java, + * Copyright 2002-2019 the original author or authors., +	 * Subclasses can override this if it's possible to filter out some candidate classes., +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/jboss/JBossLoadTimeWeaver.java, + * Copyright 2002-2019 the original author or authors., + * As of Spring Framework 5.1.5, it also supports WildFly 13+., +	private static final String WRAPPER_TRANSFORMER_CLASS_NAME =, +			"org.jboss.modules.JLIClassTransformer";, +, +					throw new IllegalArgumentException(, +							"Could not find 'transformer' field on JBoss JLIClassTransformer: " +, +++ b/spring-aop/src/main/java/org/springframework/aop/support/ControlFlowPointcut.java, + * Copyright 2002-2019 the original author or authors., +	 * Subclasses can override this if it's possible to filter out some candidate classes., +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/jboss/JBossLoadTimeWeaver.java, + * Copyright 2002-2019 the original author or authors., + * As of Spring Framework 5.1.5, it also supports WildFly 13+., +	private static final String WRAPPER_TRANSFORMER_CLASS_NAME =, +			"org.jboss.modules.JLIClassTransformer";, +, +					throw new IllegalArgumentException(, +							"Could not find 'transformer' field on JBoss JLIClassTransformer: " +, +++ b/spring-core/src/main/java/org/springframework/core/CollectionFactory.java, + * Copyright 2002-2019 the original author or authors., +	 * @param collectionType the desired type of the target collection (never {@code null}), +	 * @param collectionType the desired type of the target collection (never {@code null}), +	 * @param mapType the desired type of the target map (never {@code null}), +++ b/spring-aop/src/main/java/org/springframework/aop/support/ControlFlowPointcut.java, + * Copyright 2002-2019 the original author or authors., +	 * Subclasses can override this if it's possible to filter out some candidate classes., +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/jboss/JBossLoadTimeWeaver.java, + * Copyright 2002-2019 the original author or authors., + * As of Spring Framework 5.1.5, it also supports WildFly 13+., +	private static final String WRAPPER_TRANSFORMER_CLASS_NAME =, +			"org.jboss.modules.JLIClassTransformer";, +, +					throw new IllegalArgumentException(, +							"Could not find 'transformer' field on JBoss JLIClassTransformer: " +, +++ b/spring-core/src/main/java/org/springframework/core/CollectionFactory.java, + * Copyright 2002-2019 the original author or authors., +	 * @param collectionType the desired type of the target collection (never {@code null}), +	 * @param collectionType the desired type of the target collection (never {@code null}), +	 * @param mapType the desired type of the target map (never {@code null}), +++ b/spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java, + * Copyright 2002-2019 the original author or authors., +			int currCount = this.count.get();, +			boolean needsResize = (currCount > 0 && currCount >= this.resizeThreshold);, +++ b/spring-aop/src/main/java/org/springframework/aop/support/ControlFlowPointcut.java, + * Copyright 2002-2019 the original author or authors., +	 * Subclasses can override this if it's possible to filter out some candidate classes., +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/jboss/JBossLoadTimeWeaver.java, + * Copyright 2002-2019 the original author or authors., + * As of Spring Framework 5.1.5, it also supports WildFly 13+., +	private static final String WRAPPER_TRANSFORMER_CLASS_NAME =, +			"org.jboss.modules.JLIClassTransformer";, +, +					throw new IllegalArgumentException(, +							"Could not find 'transformer' field on JBoss JLIClassTransformer: " +, +++ b/spring-core/src/main/java/org/springframework/core/CollectionFactory.java, + * Copyright 2002-2019 the original author or authors., +	 * @param collectionType the desired type of the target collection (never {@code null}), +	 * @param collectionType the desired type of the target collection (never {@code null}), +	 * @param mapType the desired type of the target map (never {@code null}), +++ b/spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java, + * Copyright 2002-2019 the original author or authors., +			int currCount = this.count.get();, +			boolean needsResize = (currCount > 0 && currCount >= this.resizeThreshold);, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelExpression.java, + * Copyright 2002-2019 the original author or authors., +import java.util.concurrent.atomic.AtomicInteger;, +, +++ b/spring-aop/src/main/java/org/springframework/aop/support/ControlFlowPointcut.java, + * Copyright 2002-2019 the original author or authors., +	 * Subclasses can override this if it's possible to filter out some candidate classes., +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/jboss/JBossLoadTimeWeaver.java, + * Copyright 2002-2019 the original author or authors., + * As of Spring Framework 5.1.5, it also supports WildFly 13+., +	private static final String WRAPPER_TRANSFORMER_CLASS_NAME =, +			"org.jboss.modules.JLIClassTransformer";, +, +					throw new IllegalArgumentException(, +							"Could not find 'transformer' field on JBoss JLIClassTransformer: " +, +++ b/spring-core/src/main/java/org/springframework/core/CollectionFactory.java, + * Copyright 2002-2019 the original author or authors., +	 * @param collectionType the desired type of the target collection (never {@code null}), +	 * @param collectionType the desired type of the target collection (never {@code null}), +	 * @param mapType the desired type of the target map (never {@code null}), +++ b/spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java, + * Copyright 2002-2019 the original author or authors., +			int currCount = this.count.get();, +			boolean needsResize = (currCount > 0 && currCount >= this.resizeThreshold);, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelExpression.java, + * Copyright 2002-2019 the original author or authors., +import java.util.concurrent.atomic.AtomicInteger;, +, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLStateSQLExceptionTranslator.java, + * Copyright 2002-2019 the original author or authors.]