[+++ b/spring-orm-hibernate5/src/main/java/org/springframework/orm/hibernate5/LocalSessionFactoryBean.java, +import org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider;, +	private MultiTenantConnectionProvider multiTenantConnectionProvider;, +, +	 * Set a {@link MultiTenantConnectionProvider} to be passed on to the SessionFactory., +	 * @since 4.3, +	 * @see LocalSessionFactoryBuilder#setMultiTenantConnectionProvider, +	 */, +	public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider) {, +		this.multiTenantConnectionProvider = multiTenantConnectionProvider;, +	}, +, +	/**, +		if (this.multiTenantConnectionProvider != null) {, +			sfb.setMultiTenantConnectionProvider(this.multiTenantConnectionProvider);, +		}, +, +++ b/spring-orm-hibernate5/src/main/java/org/springframework/orm/hibernate5/LocalSessionFactoryBean.java, +import org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider;, +	private MultiTenantConnectionProvider multiTenantConnectionProvider;, +, +	 * Set a {@link MultiTenantConnectionProvider} to be passed on to the SessionFactory., +	 * @since 4.3, +	 * @see LocalSessionFactoryBuilder#setMultiTenantConnectionProvider, +	 */, +	public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider) {, +		this.multiTenantConnectionProvider = multiTenantConnectionProvider;, +	}, +, +	/**, +		if (this.multiTenantConnectionProvider != null) {, +			sfb.setMultiTenantConnectionProvider(this.multiTenantConnectionProvider);, +		}, +, +++ b/spring-orm-hibernate5/src/main/java/org/springframework/orm/hibernate5/LocalSessionFactoryBuilder.java, +import org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider;, +	 * Set a {@link MultiTenantConnectionProvider} to be passed on to the SessionFactory., +	 * @since 4.3, +	 * @see AvailableSettings#MULTI_TENANT_CONNECTION_PROVIDER, +	 */, +	public LocalSessionFactoryBuilder setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider) {, +		getProperties().put(AvailableSettings.MULTI_TENANT_CONNECTION_PROVIDER, multiTenantConnectionProvider);, +		return this;, +	}, +, +	/**]