[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionFailedException.java, +public final class ConversionFailedException extends ConversionException {, +	private final TypeDescriptor sourceType;, +	private final TypeDescriptor targetType;, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionFailedException.java, +public final class ConversionFailedException extends ConversionException {, +	private final TypeDescriptor sourceType;, +	private final TypeDescriptor targetType;, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConverterNotFoundException.java, +public final class ConverterNotFoundException extends ConversionException {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionFailedException.java, +public final class ConversionFailedException extends ConversionException {, +	private final TypeDescriptor sourceType;, +	private final TypeDescriptor targetType;, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConverterNotFoundException.java, +public final class ConverterNotFoundException extends ConversionException {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +final class ArrayToArrayGenericConverter implements GenericConverter {, +	private final GenericConversionService conversionService;, +		GenericConverter converter = this.conversionService.getConverter(sourceElementType, targetElementType);		, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionFailedException.java, +public final class ConversionFailedException extends ConversionException {, +	private final TypeDescriptor sourceType;, +	private final TypeDescriptor targetType;, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConverterNotFoundException.java, +public final class ConverterNotFoundException extends ConversionException {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +final class ArrayToArrayGenericConverter implements GenericConverter {, +	private final GenericConversionService conversionService;, +		GenericConverter converter = this.conversionService.getConverter(sourceElementType, targetElementType);		, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionGenericConverter.java, +final class ArrayToCollectionGenericConverter implements GenericConverter {, +	private final GenericConversionService conversionService;, +			GenericConverter converter = this.conversionService.getConverter(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionFailedException.java, +public final class ConversionFailedException extends ConversionException {, +	private final TypeDescriptor sourceType;, +	private final TypeDescriptor targetType;, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConverterNotFoundException.java, +public final class ConverterNotFoundException extends ConversionException {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +final class ArrayToArrayGenericConverter implements GenericConverter {, +	private final GenericConversionService conversionService;, +		GenericConverter converter = this.conversionService.getConverter(sourceElementType, targetElementType);		, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionGenericConverter.java, +final class ArrayToCollectionGenericConverter implements GenericConverter {, +	private final GenericConversionService conversionService;, +			GenericConverter converter = this.conversionService.getConverter(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectGenericConverter.java, +final class ArrayToObjectGenericConverter implements GenericConverter {, +	private final GenericConversionService conversionService;, +				GenericConverter converter = this.conversionService.getConverter(sourceElementType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionFailedException.java, +public final class ConversionFailedException extends ConversionException {, +	private final TypeDescriptor sourceType;, +	private final TypeDescriptor targetType;, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConverterNotFoundException.java, +public final class ConverterNotFoundException extends ConversionException {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +final class ArrayToArrayGenericConverter implements GenericConverter {, +	private final GenericConversionService conversionService;, +		GenericConverter converter = this.conversionService.getConverter(sourceElementType, targetElementType);		, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionGenericConverter.java, +final class ArrayToCollectionGenericConverter implements GenericConverter {, +	private final GenericConversionService conversionService;, +			GenericConverter converter = this.conversionService.getConverter(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectGenericConverter.java, +final class ArrayToObjectGenericConverter implements GenericConverter {, +	private final GenericConversionService conversionService;, +				GenericConverter converter = this.conversionService.getConverter(sourceElementType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CharacterToNumberFactory.java, +final class CharacterToNumberFactory implements ConverterFactory<Character, Number> {, +	private static final class CharacterToNumber<T extends Number> implements Converter<Character, T> {, +			return NumberUtils.convertNumberToTargetClass((short) source.charValue(), this.targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionFailedException.java, +public final class ConversionFailedException extends ConversionException {, +	private final TypeDescriptor sourceType;, +	private final TypeDescriptor targetType;, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConverterNotFoundException.java, +public final class ConverterNotFoundException extends ConversionException {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayGenericConverter.java, +final class ArrayToArrayGenericConverter implements GenericConverter {, +	private final GenericConversionService conversionService;, +		GenericConverter converter = this.conversionService.getConverter(sourceElementType, targetElementType);		, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionGenericConverter.java, +final class ArrayToCollectionGenericConverter implements GenericConverter {, +	private final GenericConversionService conversionService;, +			GenericConverter converter = this.conversionService.getConverter(sourceElementType, targetElementType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectGenericConverter.java, +final class ArrayToObjectGenericConverter implements GenericConverter {, +	private final GenericConversionService conversionService;, +				GenericConverter converter = this.conversionService.getConverter(sourceElementType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CharacterToNumberFactory.java, +final class CharacterToNumberFactory implements ConverterFactory<Character, Number> {, +	private static final class CharacterToNumber<T extends Number> implements Converter<Character, T> {, +			return NumberUtils.convertNumberToTargetClass((short) source.charValue(), this.targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayGenericConverter.java, +final class CollectionToArrayGenericConverter implements GenericConverter {, +	private final GenericConversionService conversionService;, +			GenericConverter converter = this.conversionService.getConverter(sourceElementType, targetElementType);]