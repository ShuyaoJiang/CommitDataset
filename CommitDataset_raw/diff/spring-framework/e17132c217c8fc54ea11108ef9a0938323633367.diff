[+++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/DispatcherHandlerErrorTests.java, +		this.request = new MockServerHttpRequest(HttpMethod.GET, "/");, +		this.request.setUri("/does-not-exist");, +		this.request.setUri("/unknown-argument-type");, +		this.request.setUri("/error-signal");, +		this.request.setUri("/raise-exception");, +		this.request.setUri("/unknown-return-type");, +		this.request.setUri("/request-body").setHeader("Accept", "application/json").setBody("body");, +		this.request.setUri("/request-body").setBody(Mono.error(EXCEPTION));, +		this.request.setUri("/unknown-argument-type");, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/DispatcherHandlerErrorTests.java, +		this.request = new MockServerHttpRequest(HttpMethod.GET, "/");, +		this.request.setUri("/does-not-exist");, +		this.request.setUri("/unknown-argument-type");, +		this.request.setUri("/error-signal");, +		this.request.setUri("/raise-exception");, +		this.request.setUri("/unknown-return-type");, +		this.request.setUri("/request-body").setHeader("Accept", "application/json").setBody("body");, +		this.request.setUri("/request-body").setBody(Mono.error(EXCEPTION));, +		this.request.setUri("/unknown-argument-type");, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/accept/CompositeContentTypeResolverBuilderTests.java, +		ServerHttpRequest request = new MockServerHttpRequest(HttpMethod.GET, path);, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/DispatcherHandlerErrorTests.java, +		this.request = new MockServerHttpRequest(HttpMethod.GET, "/");, +		this.request.setUri("/does-not-exist");, +		this.request.setUri("/unknown-argument-type");, +		this.request.setUri("/error-signal");, +		this.request.setUri("/raise-exception");, +		this.request.setUri("/unknown-return-type");, +		this.request.setUri("/request-body").setHeader("Accept", "application/json").setBody("body");, +		this.request.setUri("/request-body").setBody(Mono.error(EXCEPTION));, +		this.request.setUri("/unknown-argument-type");, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/accept/CompositeContentTypeResolverBuilderTests.java, +		ServerHttpRequest request = new MockServerHttpRequest(HttpMethod.GET, path);, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/accept/HeaderContentTypeResolverTests.java, +		ServerHttpRequest request = new MockServerHttpRequest(HttpMethod.GET, "/");, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/DispatcherHandlerErrorTests.java, +		this.request = new MockServerHttpRequest(HttpMethod.GET, "/");, +		this.request.setUri("/does-not-exist");, +		this.request.setUri("/unknown-argument-type");, +		this.request.setUri("/error-signal");, +		this.request.setUri("/raise-exception");, +		this.request.setUri("/unknown-return-type");, +		this.request.setUri("/request-body").setHeader("Accept", "application/json").setBody("body");, +		this.request.setUri("/request-body").setBody(Mono.error(EXCEPTION));, +		this.request.setUri("/unknown-argument-type");, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/accept/CompositeContentTypeResolverBuilderTests.java, +		ServerHttpRequest request = new MockServerHttpRequest(HttpMethod.GET, path);, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/accept/HeaderContentTypeResolverTests.java, +		ServerHttpRequest request = new MockServerHttpRequest(HttpMethod.GET, "/");, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/accept/PathExtensionContentTypeResolverTests.java, +		ServerHttpRequest request = new MockServerHttpRequest(HttpMethod.GET, path);, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/DispatcherHandlerErrorTests.java, +		this.request = new MockServerHttpRequest(HttpMethod.GET, "/");, +		this.request.setUri("/does-not-exist");, +		this.request.setUri("/unknown-argument-type");, +		this.request.setUri("/error-signal");, +		this.request.setUri("/raise-exception");, +		this.request.setUri("/unknown-return-type");, +		this.request.setUri("/request-body").setHeader("Accept", "application/json").setBody("body");, +		this.request.setUri("/request-body").setBody(Mono.error(EXCEPTION));, +		this.request.setUri("/unknown-argument-type");, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/accept/CompositeContentTypeResolverBuilderTests.java, +		ServerHttpRequest request = new MockServerHttpRequest(HttpMethod.GET, path);, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/accept/HeaderContentTypeResolverTests.java, +		ServerHttpRequest request = new MockServerHttpRequest(HttpMethod.GET, "/");, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/accept/PathExtensionContentTypeResolverTests.java, +		ServerHttpRequest request = new MockServerHttpRequest(HttpMethod.GET, path);, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/config/WebReactiveConfigurationTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertTrue;, +import static org.springframework.http.MediaType.APPLICATION_JSON;, +import static org.springframework.http.MediaType.APPLICATION_OCTET_STREAM;, +import static org.springframework.http.MediaType.APPLICATION_XML;, +import static org.springframework.http.MediaType.IMAGE_PNG;, +import static org.springframework.http.MediaType.TEXT_PLAIN;, +		this.request = new MockServerHttpRequest(HttpMethod.GET, "/");, +		this.request.setUri("/path.json");, +		this.request.setUri("/path.xml");, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/DispatcherHandlerErrorTests.java, +		this.request = new MockServerHttpRequest(HttpMethod.GET, "/");, +		this.request.setUri("/does-not-exist");, +		this.request.setUri("/unknown-argument-type");, +		this.request.setUri("/error-signal");, +		this.request.setUri("/raise-exception");, +		this.request.setUri("/unknown-return-type");, +		this.request.setUri("/request-body").setHeader("Accept", "application/json").setBody("body");, +		this.request.setUri("/request-body").setBody(Mono.error(EXCEPTION));, +		this.request.setUri("/unknown-argument-type");, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/accept/CompositeContentTypeResolverBuilderTests.java, +		ServerHttpRequest request = new MockServerHttpRequest(HttpMethod.GET, path);, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/accept/HeaderContentTypeResolverTests.java, +		ServerHttpRequest request = new MockServerHttpRequest(HttpMethod.GET, "/");, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/accept/PathExtensionContentTypeResolverTests.java, +		ServerHttpRequest request = new MockServerHttpRequest(HttpMethod.GET, path);, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/config/WebReactiveConfigurationTests.java, +import static org.junit.Assert.assertEquals;]