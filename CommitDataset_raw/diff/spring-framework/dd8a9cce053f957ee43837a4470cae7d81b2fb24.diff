[+++ b/org.springframework.oxm/src/main/java/org/springframework/oxm/castor/CastorMarshaller.java, + * configuration, though setting target classes, target packages or providing a mapping file can be used to have more, + * control over the behavior of Castor., + * @author Jakub Narloch, +	private boolean marshalAsDocument = true;, +, +	private String rootElement;, +, +	private boolean marshalExtendedType = true;, +, +	private String noNamespaceSchemaLocation;, +, +	private String schemaLocation;, +, +	private boolean useXSITypeAtRoot = false;, +, +	private Map<String, String> processingInstructions;, +	 *, +	 * Set the Castor target class. Alternative means of configuring <code>CastorMarshaller<code> for unmarshalling, +	 * multiple classes include use of mapping files, and specifying packages with Castor descriptor classes., +	 * Set the Castor target classes. Alternative means of configuring <code>CastorMarshaller<code> for unmarshalling, +	 * multiple classes include use of mapping files, and specifying packages with Castor descriptor classes., +	 * Set whether this marshaller should validate in- and outgoing documents. <p>Default is <code>false</code>., +	 *, +	 * Set whether the Castor {@link Unmarshaller} should preserve "ignorable" whitespace. <p>Default is, +	 * <code>false</code>., +	 *, +	 * Set whether the Castor {@link Unmarshaller} should ignore attributes that do not match a specific field. <p>Default, +	 * is <code>true</code>: extra attributes are ignored., +	 *, +	 * Set whether the Castor {@link Unmarshaller} should ignore elements that do not match a specific field. <p>Default is, +	 * <code>false</code>, extra attributes are flagged as an error., +	 *, +	 *, +	/**, +	 * Returns whether this marshaller should output namespaces., +	 */, +	 * Sets whether this marshaller should output namespaces. The default is {@code false}, i.e. namespaces are written., +	/**, +	 * Sets whether this marshaller should output the xsi:type attribute., +	 */, +	/**, +	 * Sets whether this marshaller should output the xml declaration. </p> The default is {@code true}, the xml, +	 * declaration will be written., +	 *, +	 * @see org.exolab.castor.xml.Marshaller#setMarshalAsDocument(boolean), +	 */, +	public void setMarshalAsDocument(boolean marshalAsDocument) {, +		this.marshalAsDocument = marshalAsDocument;, +	}, +, +	/**, +	 * Sets the name of the root element., +	 *, +	 * @see org.exolab.castor.xml.Marshaller#setRootElement(String), +	 */, +	public void setRootElement(String rootElement) {, +		this.rootElement = rootElement;, +	}, +, +	/**, +	 * Sets whether this marshaller should output for given type the {@code xsi:type} attribute.</p> The default is {@code, +	 * true}, the {@code xsi:type} attribute will be written., +	 *, +	 * @see org.exolab.castor.xml.Marshaller#setMarshalExtendedType(boolean), +	 */, +	public void setMarshalExtendedType(boolean marshalExtendedType) {, +		this.marshalExtendedType = marshalExtendedType;, +	}, +, +	/**, +	 * Sets the value of {@code xsi:noNamespaceSchemaLocation} attribute. When set, the {@code, +	 * xsi:noNamespaceSchemaLocation} attribute will be written for the root element., +	 *, +	 * @see org.exolab.castor.xml.Marshaller#setNoNamespaceSchemaLocation(String), +	 */, +	public void setNoNamespaceSchemaLocation(String noNamespaceSchemaLocation) {, +		this.noNamespaceSchemaLocation = noNamespaceSchemaLocation;, +	}, +, +	/**, +	 * Sets the value of {@code xsi:schemaLocation} attribute.When set, the {@code xsi:schemaLocation} attribute will be, +	 * written for the root element., +	 *, +	 * @see org.exolab.castor.xml.Marshaller#setSchemaLocation(String), +	 */, +	public void setSchemaLocation(String schemaLocation) {, +		this.schemaLocation = schemaLocation;, +	}, +, +	/**, +	 * Sets whether this marshaller should output the {@code xsi:type} attribute for the root element. This can be useful, +	 * when the type of the element can not be simply determined from the element name. </p> The default is {@code false},, +	 * the {@code xsi:type} attribute for the root element won't be written., +	 *, +	 * @see org.exolab.castor.xml.Marshaller#setUseXSITypeAtRoot(boolean), +	 */, +	public void setUseXSITypeAtRoot(boolean useXSITypeAtRoot) {, +		this.useXSITypeAtRoot = useXSITypeAtRoot;, +	}]