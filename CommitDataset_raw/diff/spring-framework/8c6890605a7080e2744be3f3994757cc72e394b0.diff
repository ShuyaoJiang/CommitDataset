[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, +		if (editor == null && conversionService != null && convertedValue != null && typeDescriptor != null) {, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, +		if (editor == null && conversionService != null && convertedValue != null && typeDescriptor != null) {, +++ b/org.springframework.beans/src/test/java/org/springframework/beans/BeanWrapperTests.java, +		assertEquals("9", foo.listOfMaps.get(0).get("luckyNumber"));, +	}, +	, +	@Test, +	public void testNullNestedTypeDescriptor2() {, +		Foo foo = new Foo();, +		BeanWrapperImpl wrapper = new BeanWrapperImpl(foo);, +		wrapper.setConversionService(new DefaultConversionService());, +		wrapper.setAutoGrowNestedPaths(true);, +		Map<String, String> map = new HashMap<String, String>();, +		map.put("favoriteNumber", "9");, +		wrapper.setPropertyValue("list[0]", map);, +		assertEquals(map, foo.list.get(0));, +		private List list;, +		, +		public List getList() {, +			return list;, +		}, +, +		public void setList(List list) {, +			this.list = list;, +		}, +]