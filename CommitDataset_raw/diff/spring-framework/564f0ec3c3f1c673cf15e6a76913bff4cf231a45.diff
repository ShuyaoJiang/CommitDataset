[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/EvalTag.java, +, +import org.springframework.context.expression.EnvironmentAccessor;, +import org.springframework.context.expression.MapAccessor;, +		context.addPropertyAccessor(new MapAccessor());, +		context.addPropertyAccessor(new EnvironmentAccessor());, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/EvalTag.java, +, +import org.springframework.context.expression.EnvironmentAccessor;, +import org.springframework.context.expression.MapAccessor;, +		context.addPropertyAccessor(new MapAccessor());, +		context.addPropertyAccessor(new EnvironmentAccessor());, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/tags/EvalTagTests.java, +import java.util.HashMap;, +import java.util.Map;, +, +import org.springframework.core.env.MapPropertySource;, +import org.springframework.core.env.PropertySource;, +	public void testEnvironmentAccess() throws Exception {, +		Map<String, Object> map = new HashMap<String, Object>();, +		map.put("key.foo", "value.foo");, +		GenericApplicationContext wac = (GenericApplicationContext), +		context.getRequest().getAttribute(DispatcherServlet.WEB_APPLICATION_CONTEXT_ATTRIBUTE);, +		wac.getEnvironment().getPropertySources().addFirst(new MapPropertySource("mapSource", map));, +		wac.getDefaultListableBeanFactory().registerSingleton("bean2", context.getRequest().getAttribute("bean"));, +		tag.setExpression("@environment['key.foo']");, +		int action = tag.doStartTag();, +		assertEquals(Tag.EVAL_BODY_INCLUDE, action);, +		action = tag.doEndTag();, +		assertEquals(Tag.EVAL_PAGE, action);, +		assertEquals("value.foo", ((MockHttpServletResponse) context.getResponse()).getContentAsString());, +	}, +, +	public void testMapAccess() throws Exception {, +		tag.setExpression("bean.map.key");, +		int action = tag.doStartTag();, +		assertEquals(Tag.EVAL_BODY_INCLUDE, action);, +		action = tag.doEndTag();, +		assertEquals(Tag.EVAL_PAGE, action);, +		assertEquals("value", ((MockHttpServletResponse) context.getResponse()).getContentAsString());, +	}, +, +, +, +		public Map<String, Object> getMap() {, +			Map<String, Object> map = new HashMap<String, Object>();, +			map.put("key", "value");, +			return map;, +		}]