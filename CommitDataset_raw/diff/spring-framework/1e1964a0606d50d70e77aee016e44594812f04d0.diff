[+++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.web.bind.WebDataBinder;, +import org.springframework.web.portlet.bind.PortletRequestDataBinder;, +	 * Set a custom WebArgumentResolver to use for special method parameter types., +	 * Template method for creating a new PortletRequestDataBinder instance., +	 * <p>The default implementation creates a standard PortletRequestDataBinder., +	 * This can be overridden for custom PortletRequestDataBinder subclasses., +	 * @param request current portlet request, +	 * @param target the target object to bind onto (or <code>null</code>, +	 * if the binder is just used to convert a plain parameter value), +	 * @param objectName the objectName of the target object, +	 * @return the PortletRequestDataBinder instance to use, +	 * @throws Exception in case of invalid state or arguments, +	 * @see PortletRequestDataBinder#bind(javax.portlet.PortletRequest), +	 * @see PortletRequestDataBinder#convertIfNecessary(Object, Class, MethodParameter), +	 */, +	protected PortletRequestDataBinder createBinder(, +			PortletRequest request, Object target, String objectName) throws Exception {, +, +		return new PortletRequestDataBinder(target, objectName);, +	}, +, +, +	/**, +		protected WebDataBinder createBinder(NativeWebRequest webRequest, Object target, String objectName), +				throws Exception {, +, +			return AnnotationMethodHandlerAdapter.this.createBinder(, +					(PortletRequest) webRequest.getNativeRequest(), target, objectName);, +		}, +, +		@Override, +		protected void doBind(WebDataBinder binder, NativeWebRequest webRequest) throws Exception {, +			PortletRequestDataBinder portletBinder = (PortletRequestDataBinder) binder;, +			portletBinder.bind((PortletRequest) webRequest.getNativeRequest());, +		}, +, +		@Override, +					org.springframework.web.servlet.ModelAndView smav =, +							mavResolver.resolveModelAndView(handlerMethod, handlerType, returnValue, implicitModel, webRequest);, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.web.bind.WebDataBinder;, +import org.springframework.web.portlet.bind.PortletRequestDataBinder;, +	 * Set a custom WebArgumentResolver to use for special method parameter types., +	 * Template method for creating a new PortletRequestDataBinder instance., +	 * <p>The default implementation creates a standard PortletRequestDataBinder., +	 * This can be overridden for custom PortletRequestDataBinder subclasses., +	 * @param request current portlet request, +	 * @param target the target object to bind onto (or <code>null</code>, +	 * if the binder is just used to convert a plain parameter value), +	 * @param objectName the objectName of the target object, +	 * @return the PortletRequestDataBinder instance to use, +	 * @throws Exception in case of invalid state or arguments, +	 * @see PortletRequestDataBinder#bind(javax.portlet.PortletRequest), +	 * @see PortletRequestDataBinder#convertIfNecessary(Object, Class, MethodParameter), +	 */, +	protected PortletRequestDataBinder createBinder(, +			PortletRequest request, Object target, String objectName) throws Exception {, +, +		return new PortletRequestDataBinder(target, objectName);, +	}, +, +, +	/**, +		protected WebDataBinder createBinder(NativeWebRequest webRequest, Object target, String objectName), +				throws Exception {, +, +			return AnnotationMethodHandlerAdapter.this.createBinder(, +					(PortletRequest) webRequest.getNativeRequest(), target, objectName);, +		}, +, +		@Override, +		protected void doBind(WebDataBinder binder, NativeWebRequest webRequest) throws Exception {, +			PortletRequestDataBinder portletBinder = (PortletRequestDataBinder) binder;, +			portletBinder.bind((PortletRequest) webRequest.getNativeRequest());, +		}, +, +		@Override, +					org.springframework.web.servlet.ModelAndView smav =, +							mavResolver.resolveModelAndView(handlerMethod, handlerType, returnValue, implicitModel, webRequest);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.web.bind.ServletRequestDataBinder;, +import org.springframework.web.bind.WebDataBinder;, +	 * Template method for creating a new ServletRequestDataBinder instance., +	 * <p>The default implementation creates a standard ServletRequestDataBinder., +	 * This can be overridden for custom ServletRequestDataBinder subclasses., +	 * @param request current HTTP request, +	 * @param target the target object to bind onto (or <code>null</code>, +	 * if the binder is just used to convert a plain parameter value), +	 * @param objectName the objectName of the target object, +	 * @return the ServletRequestDataBinder instance to use, +	 * @throws Exception in case of invalid state or arguments, +	 * @see ServletRequestDataBinder#bind(javax.servlet.ServletRequest), +	 * @see ServletRequestDataBinder#convertIfNecessary(Object, Class, MethodParameter), +	 */, +	protected ServletRequestDataBinder createBinder(, +			HttpServletRequest request, Object target, String objectName) throws Exception {, +, +		return new ServletRequestDataBinder(target, objectName);, +	}]