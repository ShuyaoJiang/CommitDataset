[+++ b/org.springframework.web/src/main/java/org/springframework/http/MediaType.java, +				m.put(attribute, unquote(value));, +			value = unquote(value);, +			value = unquote(value);, +	private String unquote(String s) {, +		if (s == null) {, +			return null;, +		}, +		return isQuotedString(s) ? s.substring(1, s.length() - 1) : s;, +	}, +, +++ b/org.springframework.web/src/main/java/org/springframework/http/MediaType.java, +				m.put(attribute, unquote(value));, +			value = unquote(value);, +			value = unquote(value);, +	private String unquote(String s) {, +		if (s == null) {, +			return null;, +		}, +		return isQuotedString(s) ? s.substring(1, s.length() - 1) : s;, +	}, +, +++ b/org.springframework.web/src/test/java/org/springframework/http/MediaTypeTests.java, +	public void parseQuotedCharset() {, +		String s = "application/xml;charset=\"utf-8\"";, +		MediaType mediaType = MediaType.parseMediaType(s);, +		assertEquals("Invalid type", "application", mediaType.getType());, +		assertEquals("Invalid subtype", "xml", mediaType.getSubtype());, +		assertEquals("Invalid charset", Charset.forName("UTF-8"), mediaType.getCharSet());, +	}, +, +	@Test]