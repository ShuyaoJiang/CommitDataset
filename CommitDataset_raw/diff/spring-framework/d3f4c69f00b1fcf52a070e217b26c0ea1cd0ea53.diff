[+++ b/build-spring-framework/resources/changelog.txt, +* Add methods to UriComponentsBuilder for replacing the path or the query., +++ b/build-spring-framework/resources/changelog.txt, +* Add methods to UriComponentsBuilder for replacing the path or the query., +++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, + * @author Rossen Stoyanchev, +		}, +		else {, +	 * Sets the path of this builder overriding all existing path and path segment values. , +	 * , +	 * @param path the URI path; a {@code null} value results in an empty path., +	 * @return this UriComponentsBuilder, +	 */, +	public UriComponentsBuilder replacePath(String path) {, +		this.pathBuilder = NULL_PATH_COMPONENT_BUILDER;, +		path(path);, +		return this;, +	}, +, +	/**, +	 * @param query the query string, +			this.queryParams.clear();, +	/**, +	 * Sets the query of this builder overriding all existing query parameters., +	 * , +	 * @param query the query string; a {@code null} value removes all query parameters., +	 * @return this UriComponentsBuilder, +	 */, +	public UriComponentsBuilder replaceQuery(String query) {, +		this.queryParams.clear();, +		query(query);, +		return this;, +	}, +				this.queryParams.add(name, valueAsString);, +			this.queryParams.add(name, null);, +	 * Sets the query parameter values overriding all existing query values for the same parameter., +	 * If no values are given, the resulting URI will contain the query parameter name only., +	 * , +	 * @param name   the query parameter name, +	 * @param values the query parameter values, +	 * @return this UriComponentsBuilder, +	 */, +	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {, +		Assert.notNull(name, "'name' must not be null");, +		this.queryParams.remove(name);, +		queryParam(name, values);, +		return this;, +	}, +    , +	/**, +++ b/build-spring-framework/resources/changelog.txt, +* Add methods to UriComponentsBuilder for replacing the path or the query., +++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, + * @author Rossen Stoyanchev, +		}, +		else {, +	 * Sets the path of this builder overriding all existing path and path segment values. , +	 * , +	 * @param path the URI path; a {@code null} value results in an empty path., +	 * @return this UriComponentsBuilder, +	 */, +	public UriComponentsBuilder replacePath(String path) {, +		this.pathBuilder = NULL_PATH_COMPONENT_BUILDER;, +		path(path);, +		return this;, +	}, +, +	/**, +	 * @param query the query string, +			this.queryParams.clear();, +	/**, +	 * Sets the query of this builder overriding all existing query parameters., +	 * , +	 * @param query the query string; a {@code null} value removes all query parameters., +	 * @return this UriComponentsBuilder, +	 */, +	public UriComponentsBuilder replaceQuery(String query) {, +		this.queryParams.clear();, +		query(query);, +		return this;, +	}, +				this.queryParams.add(name, valueAsString);, +			this.queryParams.add(name, null);, +	 * Sets the query parameter values overriding all existing query values for the same parameter., +	 * If no values are given, the resulting URI will contain the query parameter name only., +	 * , +	 * @param name   the query parameter name, +	 * @param values the query parameter values, +	 * @return this UriComponentsBuilder, +	 */, +	public UriComponentsBuilder replaceQueryParam(String name, Object... values) {, +		Assert.notNull(name, "'name' must not be null");, +		this.queryParams.remove(name);, +		queryParam(name, values);, +		return this;, +	}, +    , +	/**, +++ b/org.springframework.web/src/test/java/org/springframework/web/util/UriComponentsBuilderTests.java, +	public void replacePath() {]