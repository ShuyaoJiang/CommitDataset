[+++ b/spring-web/src/test/java/org/springframework/web/util/ExpressionEvaluationUtilsTests.java, + * Copyright 2002-2012 the original author or authors., +import javax.servlet.ServletContext;, + * @author Alef Arendsen, +		sc.addInitParameter("springJspExpressionSupport", "true");, +		assertTrue(ExpressionEvaluationUtils.isSpringJspExpressionSupportActive(pc));, +		MockServletContext sc = new MockServletContext();, +		sc.addInitParameter("springJspExpressionSupport", "true");, +		MockPageContext ctx = new MockPageContext(sc);, +		MockServletContext sc = new MockServletContext();, +		sc.addInitParameter("springJspExpressionSupport", "true");, +		MockPageContext ctx = new MockPageContext(sc);, +		MockServletContext sc = new MockServletContext();, +		sc.addInitParameter("springJspExpressionSupport", "true");, +		MockPageContext ctx = new MockPageContext(sc);, +		MockServletContext sc = new MockServletContext();, +		sc.addInitParameter("springJspExpressionSupport", "true");, +		MockPageContext ctx = new MockPageContext(sc);, +		MockServletContext sc = new MockServletContext();, +		sc.addInitParameter("springJspExpressionSupport", "true");, +		MockPageContext ctx = new MockPageContext(sc);, +		MockServletContext sc = new MockServletContext();, +		sc.addInitParameter("springJspExpressionSupport", "true");, +		MockPageContext ctx = new MockPageContext(sc);, +		MockServletContext sc = new MockServletContext();, +		sc.addInitParameter("springJspExpressionSupport", "true");, +		PageContext ctx = new CountingMockPageContext(sc);, +		MockServletContext sc = new MockServletContext();, +		sc.addInitParameter("springJspExpressionSupport", "true");, +		PageContext ctx = new CountingMockPageContext(sc);, +		public CountingMockPageContext(ServletContext servletContext) {, +			super(servletContext);, +		}, +]