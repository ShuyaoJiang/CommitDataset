[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * @return the attribute value, or {@code null} if not found unless the attribute, +	 * value cannot be retrieved due to an {@link AnnotationConfigurationException}, in, +	 * which case such an exception will be rethrown, +	 * @return the attribute value, or {@code null} if not found unless the attribute, +	 * value cannot be retrieved due to an {@link AnnotationConfigurationException}, in, +	 * which case such an exception will be rethrown, +					"Could not obtain value for annotation attribute '" + attributeName + "' in " + annotation, ex);, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * @return the attribute value, or {@code null} if not found unless the attribute, +	 * value cannot be retrieved due to an {@link AnnotationConfigurationException}, in, +	 * which case such an exception will be rethrown, +	 * @return the attribute value, or {@code null} if not found unless the attribute, +	 * value cannot be retrieved due to an {@link AnnotationConfigurationException}, in, +	 * which case such an exception will be rethrown, +					"Could not obtain value for annotation attribute '" + attributeName + "' in " + annotation, ex);, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationUtilsTests.java, +	@Test, +	public void synthesizeAnnotationWithAttributeAliasesWithDifferentValues() throws Exception {, +		ContextConfig contextConfig = synthesizeAnnotation(ContextConfigMismatch.class.getAnnotation(ContextConfig.class));, +, +		exception.expect(AnnotationConfigurationException.class);, +		getValue(contextConfig);]