[+++ b/org.springframework.core/src/main/java/org/springframework/util/AntPatchStringMatcher.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, + * Package-protected helper class for {@link AntPathMatcher}., + * Tests whether or not a string matches against a pattern., + *, + * <p>The pattern may contain special characters: '*' means zero or more characters;, + * '?' means one and only one character; '{' and '}' indicate a URI template pattern., +, +	/**, +	 * Construct a new instance of the <code>AntPatchStringMatcher</code>., +	 */, +	public AntPatchStringMatcher(String pattern, String str, Map<String, String> uriTemplateVariables) {, +		this.patArr = pattern.toCharArray();, +		this.strArr = str.toCharArray();, +		this.patIdxEnd = this.patArr.length - 1;, +		this.strIdxEnd = this.strArr.length - 1;, +	public boolean matchStrings() {, +	private void addTemplateVariable(int curlyIdxStart, int curlyIdxEnd, int valIdxStart, int valIdxEnd) {, +		if (uriTemplateVariables != null) {, +			String varName = new String(patArr, curlyIdxStart + 1, curlyIdxEnd - curlyIdxStart - 1);, +			String varValue = new String(strArr, valIdxStart, valIdxEnd - valIdxStart + 1);, +			uriTemplateVariables.put(varName, varValue);, +		}, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/util/AntPatchStringMatcher.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, + * Package-protected helper class for {@link AntPathMatcher}., + * Tests whether or not a string matches against a pattern., + *, + * <p>The pattern may contain special characters: '*' means zero or more characters;, + * '?' means one and only one character; '{' and '}' indicate a URI template pattern., +, +	/**, +	 * Construct a new instance of the <code>AntPatchStringMatcher</code>., +	 */, +	public AntPatchStringMatcher(String pattern, String str, Map<String, String> uriTemplateVariables) {, +		this.patArr = pattern.toCharArray();, +		this.strArr = str.toCharArray();, +		this.patIdxEnd = this.patArr.length - 1;, +		this.strIdxEnd = this.strArr.length - 1;, +	public boolean matchStrings() {, +	private void addTemplateVariable(int curlyIdxStart, int curlyIdxEnd, int valIdxStart, int valIdxEnd) {, +		if (uriTemplateVariables != null) {, +			String varName = new String(patArr, curlyIdxStart + 1, curlyIdxEnd - curlyIdxStart - 1);, +			String varValue = new String(strArr, valIdxStart, valIdxEnd - valIdxStart + 1);, +			uriTemplateVariables.put(varName, varValue);, +		}, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/util/CachingMapDecorator.java, + * Copyright 2002-2009 the original author or authors., +		Assert.notNull(targetMap, "'targetMap' must not be null");, +++ b/org.springframework.core/src/main/java/org/springframework/util/AntPatchStringMatcher.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +]