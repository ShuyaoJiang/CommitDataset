[+++ b/build.gradle, +		optional("javax.el:javax.el-api:2.2.5"), +		optional("org.apache.tiles:tiles-api:${tiles3Version}"), +		optional("org.apache.tiles:tiles-core:${tiles3Version}") {, +		optional("org.apache.tiles:tiles-servlet:${tiles3Version}") {, +		optional("org.apache.tiles:tiles-jsp:${tiles3Version}") {, +		optional("org.apache.tiles:tiles-el:${tiles3Version}") {, +		optional("org.apache.tiles:tiles-extras:${tiles3Version}") {, +project("spring-webmvc-tiles2") {, +	description = "Spring Framework Tiles2 Integration", +		optional("org.apache.tiles:tiles-api:${tiles2Version}"), +		optional("org.apache.tiles:tiles-core:${tiles2Version}") {, +		optional("org.apache.tiles:tiles-servlet:${tiles2Version}") {, +		optional("org.apache.tiles:tiles-jsp:${tiles2Version}") {, +		optional("org.apache.tiles:tiles-el:${tiles2Version}") {, +		optional("org.apache.tiles:tiles-extras:${tiles2Version}") {, +			exclude group: "org.apache.velocity", module: "velocity-tools", +		testCompile(project(":spring-webmvc-tiles2")), +++ b/build.gradle, +		optional("javax.el:javax.el-api:2.2.5"), +		optional("org.apache.tiles:tiles-api:${tiles3Version}"), +		optional("org.apache.tiles:tiles-core:${tiles3Version}") {, +		optional("org.apache.tiles:tiles-servlet:${tiles3Version}") {, +		optional("org.apache.tiles:tiles-jsp:${tiles3Version}") {, +		optional("org.apache.tiles:tiles-el:${tiles3Version}") {, +		optional("org.apache.tiles:tiles-extras:${tiles3Version}") {, +project("spring-webmvc-tiles2") {, +	description = "Spring Framework Tiles2 Integration", +		optional("org.apache.tiles:tiles-api:${tiles2Version}"), +		optional("org.apache.tiles:tiles-core:${tiles2Version}") {, +		optional("org.apache.tiles:tiles-servlet:${tiles2Version}") {, +		optional("org.apache.tiles:tiles-jsp:${tiles2Version}") {, +		optional("org.apache.tiles:tiles-el:${tiles2Version}") {, +		optional("org.apache.tiles:tiles-extras:${tiles2Version}") {, +			exclude group: "org.apache.velocity", module: "velocity-tools", +		testCompile(project(":spring-webmvc-tiles2")), +++ b/settings.gradle, +include "spring-webmvc-tiles2", +++ b/build.gradle, +		optional("javax.el:javax.el-api:2.2.5"), +		optional("org.apache.tiles:tiles-api:${tiles3Version}"), +		optional("org.apache.tiles:tiles-core:${tiles3Version}") {, +		optional("org.apache.tiles:tiles-servlet:${tiles3Version}") {, +		optional("org.apache.tiles:tiles-jsp:${tiles3Version}") {, +		optional("org.apache.tiles:tiles-el:${tiles3Version}") {, +		optional("org.apache.tiles:tiles-extras:${tiles3Version}") {, +project("spring-webmvc-tiles2") {, +	description = "Spring Framework Tiles2 Integration", +		optional("org.apache.tiles:tiles-api:${tiles2Version}"), +		optional("org.apache.tiles:tiles-core:${tiles2Version}") {, +		optional("org.apache.tiles:tiles-servlet:${tiles2Version}") {, +		optional("org.apache.tiles:tiles-jsp:${tiles2Version}") {, +		optional("org.apache.tiles:tiles-el:${tiles2Version}") {, +		optional("org.apache.tiles:tiles-extras:${tiles2Version}") {, +			exclude group: "org.apache.velocity", module: "velocity-tools", +		testCompile(project(":spring-webmvc-tiles2")), +++ b/settings.gradle, +include "spring-webmvc-tiles2", +++ b/spring-webmvc-tiles2/src/main/java/org/springframework/web/servlet/view/tiles2/AbstractSpringPreparerFactory.java, +/*, + * Copyright 2002-2012 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.servlet.view.tiles2;, +, +import org.apache.tiles.TilesException;, +import org.apache.tiles.context.TilesRequestContext;, +import org.apache.tiles.preparer.PreparerFactory;, +import org.apache.tiles.preparer.ViewPreparer;, +import org.springframework.web.context.WebApplicationContext;, +import org.springframework.web.servlet.DispatcherServlet;, +, +/**, + * Abstract implementation of the Tiles2 {@link org.apache.tiles.preparer.PreparerFactory}, + * interface, obtaining the current Spring WebApplicationContext and delegating to, + * {@link #getPreparer(String, org.springframework.web.context.WebApplicationContext)}., + *, + * @author Juergen Hoeller, + * @since 2.5, + * @see #getPreparer(String, org.springframework.web.context.WebApplicationContext), + * @see SimpleSpringPreparerFactory, + * @see SpringBeanPreparerFactory, + */, +public abstract class AbstractSpringPreparerFactory implements PreparerFactory {, +, +	@Override, +	public ViewPreparer getPreparer(String name, TilesRequestContext context) throws TilesException {, +		WebApplicationContext webApplicationContext = (WebApplicationContext) context.getRequestScope().get(]