[+++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/DelegatingServletInputStream.java, + * Copyright 2002-2009 the original author or authors., + * <p>Used by {@link MockHttpServletRequest}; typically not directly, + * @see MockHttpServletRequest, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/DelegatingServletInputStream.java, + * Copyright 2002-2009 the original author or authors., + * <p>Used by {@link MockHttpServletRequest}; typically not directly, + * @see MockHttpServletRequest, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/DelegatingServletOutputStream.java, + * Copyright 2002-2009 the original author or authors., + * <p>Used by {@link MockHttpServletResponse}; typically not directly, + * @see MockHttpServletResponse, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/DelegatingServletInputStream.java, + * Copyright 2002-2009 the original author or authors., + * <p>Used by {@link MockHttpServletRequest}; typically not directly, + * @see MockHttpServletRequest, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/DelegatingServletOutputStream.java, + * Copyright 2002-2009 the original author or authors., + * <p>Used by {@link MockHttpServletResponse}; typically not directly, + * @see MockHttpServletResponse, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/HeaderValueHolder.java, + * Copyright 2002-2009 the original author or authors., +import java.util.ArrayList;, +	private final List<Object> values = new LinkedList<Object>();, +	public void addValues(Collection<?> values) {, +	public List<Object> getValues() {, +	public List<String> getStringValues() {, +		List<String> stringList = new ArrayList<String>(this.values.size());, +		for (Object value : this.values) {, +			stringList.add(value.toString());, +		}, +		return Collections.unmodifiableList(stringList);, +	}, +, +	public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name) {, +		for (String headerName : headers.keySet()) {, +				return headers.get(headerName);, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/DelegatingServletInputStream.java, + * Copyright 2002-2009 the original author or authors., + * <p>Used by {@link MockHttpServletRequest}; typically not directly, + * @see MockHttpServletRequest, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/DelegatingServletOutputStream.java, + * Copyright 2002-2009 the original author or authors., + * <p>Used by {@link MockHttpServletResponse}; typically not directly, + * @see MockHttpServletResponse, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/HeaderValueHolder.java, + * Copyright 2002-2009 the original author or authors., +import java.util.ArrayList;, +	private final List<Object> values = new LinkedList<Object>();, +	public void addValues(Collection<?> values) {, +	public List<Object> getValues() {, +	public List<String> getStringValues() {, +		List<String> stringList = new ArrayList<String>(this.values.size());, +		for (Object value : this.values) {, +			stringList.add(value.toString());, +		}, +		return Collections.unmodifiableList(stringList);, +	}, +, +	public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name) {, +		for (String headerName : headers.keySet()) {, +				return headers.get(headerName);, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/MockBodyContent.java, + * Copyright 2002-2009 the original author or authors., +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/DelegatingServletInputStream.java, + * Copyright 2002-2009 the original author or authors., + * <p>Used by {@link MockHttpServletRequest}; typically not directly, + * @see MockHttpServletRequest, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/DelegatingServletOutputStream.java, + * Copyright 2002-2009 the original author or authors., + * <p>Used by {@link MockHttpServletResponse}; typically not directly, + * @see MockHttpServletResponse, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/HeaderValueHolder.java, + * Copyright 2002-2009 the original author or authors., +import java.util.ArrayList;, +	private final List<Object> values = new LinkedList<Object>();, +	public void addValues(Collection<?> values) {, +	public List<Object> getValues() {, +	public List<String> getStringValues() {, +		List<String> stringList = new ArrayList<String>(this.values.size());, +		for (Object value : this.values) {, +			stringList.add(value.toString());, +		}, +		return Collections.unmodifiableList(stringList);, +	}, +, +	public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name) {, +		for (String headerName : headers.keySet()) {, +				return headers.get(headerName);, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/MockBodyContent.java, + * Copyright 2002-2009 the original author or authors., +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/MockExpressionEvaluator.java, + * Copyright 2002-2009 the original author or authors., +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/DelegatingServletInputStream.java, + * Copyright 2002-2009 the original author or authors., + * <p>Used by {@link MockHttpServletRequest}; typically not directly, + * @see MockHttpServletRequest, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/mock/web/DelegatingServletOutputStream.java, + * Copyright 2002-2009 the original author or authors., + * <p>Used by {@link MockHttpServletResponse}; typically not directly]