[+++ b/spring-beans/src/test/java/org/springframework/beans/BeanUtilsTests.java, +		assertEquals("name", target.getName());, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanUtilsTests.java, +		assertEquals("name", target.getName());, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperGenericsTests.java, +		assertEquals("it works!", data.get("message"));, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanUtilsTests.java, +		assertEquals("name", target.getName());, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperGenericsTests.java, +		assertEquals("it works!", data.get("message"));, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/ConcurrentBeanFactoryTests.java, +		assertEquals(DATE_1, b1.getDate());, +		assertEquals(DATE_2, b2.getDate());, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanUtilsTests.java, +		assertEquals("name", target.getName());, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperGenericsTests.java, +		assertEquals("it works!", data.get("message"));, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/ConcurrentBeanFactoryTests.java, +		assertEquals(DATE_1, b1.getDate());, +		assertEquals(DATE_2, b2.getDate());, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/xml/CollectionMergingTests.java, +		assertEquals("Rob Harrop", list.get(0));, +		assertEquals("Rod Johnson", list.get(1));, +		assertEquals("Juergen Hoeller", list.get(2));, +		assertEquals("Sally", map.get("Rob"));, +		assertEquals("Kerry", map.get("Rod"));, +		assertEquals("Eva", map.get("Juergen"));, +		assertEquals("Sally", props.getProperty("Rob"));, +		assertEquals("Kerry",props.getProperty("Rod"));, +		assertEquals("Eva", props.getProperty("Juergen"));, +		assertEquals("Rob Harrop", list.get(0));, +		assertEquals("Rod Johnson", list.get(1));, +		assertEquals("Juergen Hoeller", list.get(2));, +		assertEquals("Sally", map.get("Rob"));, +		assertEquals("Kerry", map.get("Rod"));, +		assertEquals("Eva", map.get("Juergen"));, +		assertEquals("Sally", props.getProperty("Rob"));, +		assertEquals("Kerry", props.getProperty("Rod"));, +		assertEquals("Eva", props.getProperty("Juergen"));, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanUtilsTests.java, +		assertEquals("name", target.getName());, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperGenericsTests.java, +		assertEquals("it works!", data.get("message"));, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/ConcurrentBeanFactoryTests.java, +		assertEquals(DATE_1, b1.getDate());, +		assertEquals(DATE_2, b2.getDate());, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/xml/CollectionMergingTests.java, +		assertEquals("Rob Harrop", list.get(0));, +		assertEquals("Rod Johnson", list.get(1));, +		assertEquals("Juergen Hoeller", list.get(2));, +		assertEquals("Sally", map.get("Rob"));, +		assertEquals("Kerry", map.get("Rod"));, +		assertEquals("Eva", map.get("Juergen"));, +		assertEquals("Sally", props.getProperty("Rob"));, +		assertEquals("Kerry",props.getProperty("Rod"));, +		assertEquals("Eva", props.getProperty("Juergen"));, +		assertEquals("Rob Harrop", list.get(0));, +		assertEquals("Rod Johnson", list.get(1));, +		assertEquals("Juergen Hoeller", list.get(2));, +		assertEquals("Sally", map.get("Rob"));, +		assertEquals("Kerry", map.get("Rod"));, +		assertEquals("Eva", map.get("Juergen"));, +		assertEquals("Sally", props.getProperty("Rob"));, +		assertEquals("Kerry", props.getProperty("Rod"));, +		assertEquals("Eva", props.getProperty("Juergen"));, +++ b/spring-context/src/test/java/org/springframework/aop/framework/AbstractAopProxyTests.java, +		assertEquals(0, dp.count);, +		assertEquals(1, dp.count);, +		assertEquals(11, it.getAge());, +		assertEquals(2, dp.count);, +		assertEquals(0, dp.count);, +		assertEquals(11, it.getAge());, +		assertEquals(1, dp.count);, +		assertEquals(1, dp.count);, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanUtilsTests.java, +		assertEquals("name", target.getName());, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperGenericsTests.java, +		assertEquals("it works!", data.get("message"));, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/ConcurrentBeanFactoryTests.java, +		assertEquals(DATE_1, b1.getDate());, +		assertEquals(DATE_2, b2.getDate());, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/xml/CollectionMergingTests.java, +		assertEquals("Rob Harrop", list.get(0));, +		assertEquals("Rod Johnson", list.get(1));, +		assertEquals("Juergen Hoeller", list.get(2));, +		assertEquals("Sally", map.get("Rob"));, +		assertEquals("Kerry", map.get("Rod"));, +		assertEquals("Eva", map.get("Juergen"));, +		assertEquals("Sally", props.getProperty("Rob"));, +		assertEquals("Kerry",props.getProperty("Rod"));, +		assertEquals("Eva", props.getProperty("Juergen"));, +		assertEquals("Rob Harrop", list.get(0));, +		assertEquals("Rod Johnson", list.get(1));, +		assertEquals("Juergen Hoeller", list.get(2));, +		assertEquals("Sally", map.get("Rob"));, +		assertEquals("Kerry", map.get("Rod"));, +		assertEquals("Eva", map.get("Juergen"));, +		assertEquals("Sally", props.getProperty("Rob"));, +		assertEquals("Kerry", props.getProperty("Rod"));, +		assertEquals("Eva", props.getProperty("Juergen"));]