[+++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java, + * Copyright 2002-2015 the original author or authors., +import java.nio.charset.Charset;, +import java.util.Random;, +	private static final byte[] BOUNDARY_CHARS =, +			new byte[] {'-', '_', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'a', 'b', 'c', 'd', 'e', 'f', 'g',, +					'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A',, +					'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',, +					'V', 'W', 'X', 'Y', 'Z'};, +, +	private static final Random RND = new Random();, +, +	private static Charset US_ASCII = Charset.forName("US-ASCII");, +, +, +	/**, +	 * Generate a random MIME boundary as bytes, often used in multipart mime types., +	 */, +	public static byte[] generateMultipartBoundary() {, +		byte[] boundary = new byte[RND.nextInt(11) + 30];, +		for (int i = 0; i < boundary.length; i++) {, +			boundary[i] = BOUNDARY_CHARS[RND.nextInt(BOUNDARY_CHARS.length)];, +		}, +		return boundary;, +	}, +, +	/**, +	 * Generate a random MIME boundary as String, often used in multipart mime types., +	 */, +	public static String generateMultipartBoundaryString() {, +		return new String(generateMultipartBoundary(), US_ASCII);, +	}, +, +, +++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java, + * Copyright 2002-2015 the original author or authors., +import java.nio.charset.Charset;, +import java.util.Random;, +	private static final byte[] BOUNDARY_CHARS =, +			new byte[] {'-', '_', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'a', 'b', 'c', 'd', 'e', 'f', 'g',, +					'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A',, +					'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',, +					'V', 'W', 'X', 'Y', 'Z'};, +, +	private static final Random RND = new Random();, +, +	private static Charset US_ASCII = Charset.forName("US-ASCII");, +, +, +	/**, +	 * Generate a random MIME boundary as bytes, often used in multipart mime types., +	 */, +	public static byte[] generateMultipartBoundary() {, +		byte[] boundary = new byte[RND.nextInt(11) + 30];, +		for (int i = 0; i < boundary.length; i++) {, +			boundary[i] = BOUNDARY_CHARS[RND.nextInt(BOUNDARY_CHARS.length)];, +		}, +		return boundary;, +	}, +, +	/**, +	 * Generate a random MIME boundary as String, often used in multipart mime types., +	 */, +	public static String generateMultipartBoundaryString() {, +		return new String(generateMultipartBoundary(), US_ASCII);, +	}, +, +, +++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, + * Copyright 2002-2015 the original author or authors., +	 * Sets the (new) value of the {@code Range} header., +	 */, +	public void setRange(List<HttpRange> ranges) {, +		String value = HttpRange.toString(ranges);, +		set(RANGE, value);, +	}, +, +	/**, +	 * Returns the value of the {@code Range} header., +	 * <p>Returns an empty list when the range is unknown., +	 */, +	public List<HttpRange> getRange() {, +		String value = getFirst(RANGE);, +		return HttpRange.parseRanges(value);, +	}, +, +	/**, +++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java, + * Copyright 2002-2015 the original author or authors., +import java.nio.charset.Charset;, +import java.util.Random;, +	private static final byte[] BOUNDARY_CHARS =, +			new byte[] {'-', '_', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'a', 'b', 'c', 'd', 'e', 'f', 'g',, +					'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A',, +					'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',, +					'V', 'W', 'X', 'Y', 'Z'};, +, +	private static final Random RND = new Random();, +, +	private static Charset US_ASCII = Charset.forName("US-ASCII");]