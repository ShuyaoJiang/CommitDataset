[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, +			String[] added = ObjectUtils.addObjectToArray(this.beanDefinition.getDependsOn(), beanName);, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, +			String[] added = ObjectUtils.addObjectToArray(this.beanDefinition.getDependsOn(), beanName);, +++ b/org.springframework.context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java, +				Class<?>[] interfaces = scriptFactory.getScriptInterfaces();, +				Class<?>[] scriptedInterfaces = interfaces;, +					Class<?> configInterface = createConfigInterface(bd, interfaces);, +					scriptedInterfaces = ObjectUtils.addObjectToArray(interfaces, configInterface);, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, +			String[] added = ObjectUtils.addObjectToArray(this.beanDefinition.getDependsOn(), beanName);, +++ b/org.springframework.context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java, +				Class<?>[] interfaces = scriptFactory.getScriptInterfaces();, +				Class<?>[] scriptedInterfaces = interfaces;, +					Class<?> configInterface = createConfigInterface(bd, interfaces);, +					scriptedInterfaces = ObjectUtils.addObjectToArray(interfaces, configInterface);, +++ b/org.springframework.core/src/main/java/org/springframework/util/ObjectUtils.java, +	 * Append the given object to the given array, returning a new array, +	 * consisting of the input array contents plus the given object., +	 * @param obj the object to append, +	public static <A,O extends A> A[] addObjectToArray(A[] array, O obj) {, +		Class<?> compType = Object.class;, +		@SuppressWarnings("unchecked"), +		A[] newArr = (A[]) Array.newInstance(compType, newArrLength);, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, +			String[] added = ObjectUtils.addObjectToArray(this.beanDefinition.getDependsOn(), beanName);, +++ b/org.springframework.context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java, +				Class<?>[] interfaces = scriptFactory.getScriptInterfaces();, +				Class<?>[] scriptedInterfaces = interfaces;, +					Class<?> configInterface = createConfigInterface(bd, interfaces);, +					scriptedInterfaces = ObjectUtils.addObjectToArray(interfaces, configInterface);, +++ b/org.springframework.core/src/main/java/org/springframework/util/ObjectUtils.java, +	 * Append the given object to the given array, returning a new array, +	 * consisting of the input array contents plus the given object., +	 * @param obj the object to append, +	public static <A,O extends A> A[] addObjectToArray(A[] array, O obj) {, +		Class<?> compType = Object.class;, +		@SuppressWarnings("unchecked"), +		A[] newArr = (A[]) Array.newInstance(compType, newArrLength);, +++ b/org.springframework.core/src/test/java/org/springframework/util/ObjectUtilsTests.java, +		String[] newArray = ObjectUtils.addObjectToArray(array, newElement);, +		String[] newArray = ObjectUtils.addObjectToArray(array, newElement);, +		String[] newArray = ObjectUtils.addObjectToArray(array, newElement);, +		String[] newArray = ObjectUtils.addObjectToArray(null, newElement);]