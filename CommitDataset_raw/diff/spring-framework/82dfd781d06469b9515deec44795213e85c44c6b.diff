[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-websocket/src/main/java/org/springframework/web/messaging/stomp/support/StompWebSocketHandler.java, +/*, + * Copyright 2002-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.web.messaging.stomp.support;, +, +import java.io.IOException;, +import java.nio.charset.Charset;, +import java.util.List;, +import java.util.Map;, +import java.util.Set;, +import java.util.concurrent.ConcurrentHashMap;, +, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +import org.springframework.http.MediaType;, +import org.springframework.messaging.GenericMessage;, +import org.springframework.messaging.Message;, +import org.springframework.web.messaging.MessageType;, +import org.springframework.web.messaging.converter.CompositeMessageConverter;, +import org.springframework.web.messaging.converter.MessageConverter;, +import org.springframework.web.messaging.event.EventBus;, +import org.springframework.web.messaging.event.EventConsumer;, +import org.springframework.web.messaging.service.AbstractMessageService;, +import org.springframework.web.messaging.stomp.StompCommand;, +import org.springframework.web.messaging.stomp.StompConversionException;, +import org.springframework.web.messaging.stomp.StompHeaders;, +import org.springframework.web.socket.CloseStatus;, +import org.springframework.web.socket.TextMessage;, +import org.springframework.web.socket.WebSocketSession;, +import org.springframework.web.socket.adapter.TextWebSocketHandlerAdapter;, +, +, +/**, + * @author Rossen Stoyanchev, + * @since 4.0, + */, +public class StompWebSocketHandler extends TextWebSocketHandlerAdapter {, +, +	private static Log logger = LogFactory.getLog(StompWebSocketHandler.class);, +, +	private final StompMessageConverter stompMessageConverter = new StompMessageConverter();, +, +	private final Map<String, WebSocketSession> sessions = new ConcurrentHashMap<String, WebSocketSession>();, +, +	private final EventBus eventBus;, +, +	private MessageConverter payloadConverter = new CompositeMessageConverter(null);, +, +, +	public StompWebSocketHandler(EventBus eventBus) {, +		this.eventBus = eventBus;, +		this.eventBus.registerConsumer(AbstractMessageService.SERVER_TO_CLIENT_MESSAGE_KEY,, +				new ClientMessageConsumer());, +	}, +, +, +	public void setMessageConverters(List<MessageConverter> converters) {, +		this.payloadConverter = new CompositeMessageConverter(converters);, +	}, +, +	public StompMessageConverter getStompMessageConverter() {, +		return this.stompMessageConverter;, +	}, +, +	protected WebSocketSession getWebSocketSession(String sessionId) {, +		return this.sessions.get(sessionId);, +	}, +, +, +	@Override, +	public void afterConnectionEstablished(WebSocketSession session) throws Exception {, +		this.sessions.put(session.getId(), session);, +	}, +, +	@Override, +	protected void handleTextMessage(WebSocketSession session, TextMessage textMessage) {, +		try {, +			String payload = textMessage.getPayload();, +			Message<byte[]> message = this.stompMessageConverter.toMessage(payload, session.getId());, +, +			// TODO: validate size limits, +			// http://stomp.github.io/stomp-specification-1.2.html#Size_Limits]