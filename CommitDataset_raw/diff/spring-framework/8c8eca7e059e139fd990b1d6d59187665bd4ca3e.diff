[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.java, + * Copyright 2002-2010 the original author or authors., +import org.springframework.util.Assert;, +	private Class<? extends JRExporter> exporterClass;, +	public void setExporterClass(Class<? extends JRExporter> exporterClass) {, +		Assert.isAssignable(JRExporter.class, exporterClass);, +		return BeanUtils.instantiateClass(this.exporterClass);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.java, + * Copyright 2002-2010 the original author or authors., +import org.springframework.util.Assert;, +	private Class<? extends JRExporter> exporterClass;, +	public void setExporterClass(Class<? extends JRExporter> exporterClass) {, +		Assert.isAssignable(JRExporter.class, exporterClass);, +		return BeanUtils.instantiateClass(this.exporterClass);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatView.java, + * Copyright 2002-2010 the original author or authors., +	private Map<String, Class<? extends AbstractJasperReportsView>> formatMappings;, +		this.formatMappings = new HashMap<String, Class<? extends AbstractJasperReportsView>>(4);, +	public void setFormatMappings(Map<String, Class<? extends AbstractJasperReportsView>> formatMappings) {, +		Class<? extends AbstractJasperReportsView> viewClass = this.formatMappings.get(format);, +		AbstractJasperReportsView view = BeanUtils.instantiateClass(viewClass);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.java, + * Copyright 2002-2010 the original author or authors., +import org.springframework.util.Assert;, +	private Class<? extends JRExporter> exporterClass;, +	public void setExporterClass(Class<? extends JRExporter> exporterClass) {, +		Assert.isAssignable(JRExporter.class, exporterClass);, +		return BeanUtils.instantiateClass(this.exporterClass);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatView.java, + * Copyright 2002-2010 the original author or authors., +	private Map<String, Class<? extends AbstractJasperReportsView>> formatMappings;, +		this.formatMappings = new HashMap<String, Class<? extends AbstractJasperReportsView>>(4);, +	public void setFormatMappings(Map<String, Class<? extends AbstractJasperReportsView>> formatMappings) {, +		Class<? extends AbstractJasperReportsView> viewClass = this.formatMappings.get(format);, +		AbstractJasperReportsView view = BeanUtils.instantiateClass(viewClass);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.java, + * Copyright 2002-2010 the original author or authors., +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.java, + * Copyright 2002-2010 the original author or authors., +import org.springframework.util.Assert;, +	private Class<? extends JRExporter> exporterClass;, +	public void setExporterClass(Class<? extends JRExporter> exporterClass) {, +		Assert.isAssignable(JRExporter.class, exporterClass);, +		return BeanUtils.instantiateClass(this.exporterClass);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatView.java, + * Copyright 2002-2010 the original author or authors., +	private Map<String, Class<? extends AbstractJasperReportsView>> formatMappings;, +		this.formatMappings = new HashMap<String, Class<? extends AbstractJasperReportsView>>(4);, +	public void setFormatMappings(Map<String, Class<? extends AbstractJasperReportsView>> formatMappings) {, +		Class<? extends AbstractJasperReportsView> viewClass = this.formatMappings.get(format);, +		AbstractJasperReportsView view = BeanUtils.instantiateClass(viewClass);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.java, + * Copyright 2002-2010 the original author or authors., +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/view/jasperreports/AbstractConfigurableJasperReportsViewTests.java, + * Copyright 2002-2010 the original author or authors., +, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.java, + * Copyright 2002-2010 the original author or authors., +import org.springframework.util.Assert;, +	private Class<? extends JRExporter> exporterClass;, +	public void setExporterClass(Class<? extends JRExporter> exporterClass) {, +		Assert.isAssignable(JRExporter.class, exporterClass);, +		return BeanUtils.instantiateClass(this.exporterClass);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatView.java, + * Copyright 2002-2010 the original author or authors., +	private Map<String, Class<? extends AbstractJasperReportsView>> formatMappings;, +		this.formatMappings = new HashMap<String, Class<? extends AbstractJasperReportsView>>(4);, +	public void setFormatMappings(Map<String, Class<? extends AbstractJasperReportsView>> formatMappings) {, +		Class<? extends AbstractJasperReportsView> viewClass = this.formatMappings.get(format);, +		AbstractJasperReportsView view = BeanUtils.instantiateClass(viewClass);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.java, + * Copyright 2002-2010 the original author or authors., +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/view/jasperreports/AbstractConfigurableJasperReportsViewTests.java, + * Copyright 2002-2010 the original author or authors., +, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatViewTests.java, + * Copyright 2002-2010 the original author or authors., +		Map<String, Class<? extends AbstractJasperReportsView>> mappings =, +				new HashMap<String, Class<? extends AbstractJasperReportsView>>();, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.java, + * Copyright 2002-2010 the original author or authors., +import org.springframework.util.Assert;, +	private Class<? extends JRExporter> exporterClass;, +	public void setExporterClass(Class<? extends JRExporter> exporterClass) {, +		Assert.isAssignable(JRExporter.class, exporterClass);, +		return BeanUtils.instantiateClass(this.exporterClass);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatView.java, + * Copyright 2002-2010 the original author or authors., +	private Map<String, Class<? extends AbstractJasperReportsView>> formatMappings;, +		this.formatMappings = new HashMap<String, Class<? extends AbstractJasperReportsView>>(4);, +	public void setFormatMappings(Map<String, Class<? extends AbstractJasperReportsView>> formatMappings) {, +		Class<? extends AbstractJasperReportsView> viewClass = this.formatMappings.get(format);, +		AbstractJasperReportsView view = BeanUtils.instantiateClass(viewClass);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.java, + * Copyright 2002-2010 the original author or authors., +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/view/jasperreports/AbstractConfigurableJasperReportsViewTests.java, + * Copyright 2002-2010 the original author or authors., +, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatViewTests.java, + * Copyright 2002-2010 the original author or authors.]