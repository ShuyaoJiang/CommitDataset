[+++ b/org.springframework.web/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/org.apache.commons/com.springsource.org.apache.commons.codec/1.3.0/com.springsource.org.apache.commons.codec-1.3.0.jar"/>, +	<classpathentry kind="var" path="IVY_CACHE/org.apache.commons/com.springsource.org.apache.commons.fileupload/1.2.0/com.springsource.org.apache.commons.fileupload-1.2.0.jar" sourcepath="/IVY_CACHE/org.apache.commons/com.springsource.org.apache.commons.fileupload/1.2.0/com.springsource.org.apache.commons.fileupload-sources-1.2.0.jar"/>, +++ b/org.springframework.web/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/org.apache.commons/com.springsource.org.apache.commons.codec/1.3.0/com.springsource.org.apache.commons.codec-1.3.0.jar"/>, +	<classpathentry kind="var" path="IVY_CACHE/org.apache.commons/com.springsource.org.apache.commons.fileupload/1.2.0/com.springsource.org.apache.commons.fileupload-1.2.0.jar" sourcepath="/IVY_CACHE/org.apache.commons/com.springsource.org.apache.commons.fileupload/1.2.0/com.springsource.org.apache.commons.fileupload-sources-1.2.0.jar"/>, +++ b/org.springframework.web/ivy.xml, +		<conf name="commons-fileupload" extends="runtime" description="JARs needed to run with Commons Fileupload"/>		, +		<dependency org="org.apache.commons" name="com.springsource.org.apache.commons.fileupload" rev="1.2.0", +                    conf="optional, commons-fileupload->compile"/>                    , +++ b/org.springframework.web/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/org.apache.commons/com.springsource.org.apache.commons.codec/1.3.0/com.springsource.org.apache.commons.codec-1.3.0.jar"/>, +	<classpathentry kind="var" path="IVY_CACHE/org.apache.commons/com.springsource.org.apache.commons.fileupload/1.2.0/com.springsource.org.apache.commons.fileupload-1.2.0.jar" sourcepath="/IVY_CACHE/org.apache.commons/com.springsource.org.apache.commons.fileupload/1.2.0/com.springsource.org.apache.commons.fileupload-sources-1.2.0.jar"/>, +++ b/org.springframework.web/ivy.xml, +		<conf name="commons-fileupload" extends="runtime" description="JARs needed to run with Commons Fileupload"/>		, +		<dependency org="org.apache.commons" name="com.springsource.org.apache.commons.fileupload" rev="1.2.0", +                    conf="optional, commons-fileupload->compile"/>                    , +++ b/org.springframework.web/pom.xml, +      <groupId>commons-fileupload</groupId>, +      <artifactId>commons-fileupload</artifactId>, +      <version>1.2</version>, +      <optional>true</optional>, +    </dependency>    , +    <dependency>, +++ b/org.springframework.web/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/org.apache.commons/com.springsource.org.apache.commons.codec/1.3.0/com.springsource.org.apache.commons.codec-1.3.0.jar"/>, +	<classpathentry kind="var" path="IVY_CACHE/org.apache.commons/com.springsource.org.apache.commons.fileupload/1.2.0/com.springsource.org.apache.commons.fileupload-1.2.0.jar" sourcepath="/IVY_CACHE/org.apache.commons/com.springsource.org.apache.commons.fileupload/1.2.0/com.springsource.org.apache.commons.fileupload-sources-1.2.0.jar"/>, +++ b/org.springframework.web/ivy.xml, +		<conf name="commons-fileupload" extends="runtime" description="JARs needed to run with Commons Fileupload"/>		, +		<dependency org="org.apache.commons" name="com.springsource.org.apache.commons.fileupload" rev="1.2.0", +                    conf="optional, commons-fileupload->compile"/>                    , +++ b/org.springframework.web/pom.xml, +      <groupId>commons-fileupload</groupId>, +      <artifactId>commons-fileupload</artifactId>, +      <version>1.2</version>, +      <optional>true</optional>, +    </dependency>    , +    <dependency>, +++ b/org.springframework.web/src/main/java/org/springframework/web/bind/EscapedErrors.java, +/*, + * Copyright 2002-2008 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.bind;, +, +import java.util.ArrayList;, +import java.util.List;, +, +import org.springframework.validation.Errors;, +import org.springframework.validation.FieldError;, +import org.springframework.validation.ObjectError;, +import org.springframework.web.util.HtmlUtils;, +, +/**, + * Errors wrapper that adds automatic HTML escaping to the wrapped instance,, + * for convenient usage in HTML views. Can be retrieved easily via, + * RequestContext's <code>getErrors</code> method., + *, + * <p>Note that BindTag does <i>not</i> use this class to avoid unnecessary, + * creation of ObjectError instances. It just escapes the messages and values, + * that get copied into the respective BindStatus instance., + *, + * @author Juergen Hoeller, + * @since 01.03.2003, + * @see org.springframework.web.servlet.support.RequestContext#getErrors, + * @see org.springframework.web.servlet.tags.BindTag, + */, +public class EscapedErrors implements Errors {, +, +	private final Errors source;, +, +, +	/**, +	 * Create a new EscapedErrors instance for the given source instance., +	 */, +	public EscapedErrors(Errors source) {, +		if (source == null) {, +			throw new IllegalArgumentException("Cannot wrap a null instance");, +		}, +		this.source = source;, +	}, +, +	public Errors getSource() {, +		return this.source;, +	}, +, +, +	public String getObjectName() {]