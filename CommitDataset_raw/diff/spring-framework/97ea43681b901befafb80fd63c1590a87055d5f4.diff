[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/NoSuchBeanDefinitionException.java, + * Copyright 2002-2014 the original author or authors., + * Exception thrown when a {@code BeanFactory} is asked for a bean instance for which it, + * cannot find a definition. This may point to a non-existing bean, a non-unique bean,, + * or a manually registered singleton instance without an associated bean definition., + * @see NoUniqueBeanDefinitionException, +	/** Name of the missing bean */, +	/** Required type of the missing bean */, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/NoSuchBeanDefinitionException.java, + * Copyright 2002-2014 the original author or authors., + * Exception thrown when a {@code BeanFactory} is asked for a bean instance for which it, + * cannot find a definition. This may point to a non-existing bean, a non-unique bean,, + * or a manually registered singleton instance without an associated bean definition., + * @see NoUniqueBeanDefinitionException, +	/** Name of the missing bean */, +	/** Required type of the missing bean */, +++ b/spring-webmvc-tiles2/src/main/java/org/springframework/web/servlet/view/tiles2/TilesView.java, +	 * @see TilesViewResolver#setAlwaysInclude, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/NoSuchBeanDefinitionException.java, + * Copyright 2002-2014 the original author or authors., + * Exception thrown when a {@code BeanFactory} is asked for a bean instance for which it, + * cannot find a definition. This may point to a non-existing bean, a non-unique bean,, + * or a manually registered singleton instance without an associated bean definition., + * @see NoUniqueBeanDefinitionException, +	/** Name of the missing bean */, +	/** Required type of the missing bean */, +++ b/spring-webmvc-tiles2/src/main/java/org/springframework/web/servlet/view/tiles2/TilesView.java, +	 * @see TilesViewResolver#setAlwaysInclude, +, +++ b/spring-webmvc-tiles2/src/main/java/org/springframework/web/servlet/view/tiles2/TilesViewResolver.java, +	 * This resolver requires {@link TilesView}., +	/**, +	 * Specify whether to always include the view rather than forward to it., +	 * <p>Default is "false". Switch this flag on to enforce the use of a, +	 * Servlet include, even if a forward would be possible., +	 * @since 4.1.2, +	 * @see TilesView#setAlwaysInclude, +	 */, +	public void setAlwaysInclude(Boolean alwaysInclude) {, +		this.alwaysInclude = alwaysInclude;, +	}, +, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/NoSuchBeanDefinitionException.java, + * Copyright 2002-2014 the original author or authors., + * Exception thrown when a {@code BeanFactory} is asked for a bean instance for which it, + * cannot find a definition. This may point to a non-existing bean, a non-unique bean,, + * or a manually registered singleton instance without an associated bean definition., + * @see NoUniqueBeanDefinitionException, +	/** Name of the missing bean */, +	/** Required type of the missing bean */, +++ b/spring-webmvc-tiles2/src/main/java/org/springframework/web/servlet/view/tiles2/TilesView.java, +	 * @see TilesViewResolver#setAlwaysInclude, +, +++ b/spring-webmvc-tiles2/src/main/java/org/springframework/web/servlet/view/tiles2/TilesViewResolver.java, +	 * This resolver requires {@link TilesView}., +	/**, +	 * Specify whether to always include the view rather than forward to it., +	 * <p>Default is "false". Switch this flag on to enforce the use of a, +	 * Servlet include, even if a forward would be possible., +	 * @since 4.1.2, +	 * @see TilesView#setAlwaysInclude, +	 */, +	public void setAlwaysInclude(Boolean alwaysInclude) {, +		this.alwaysInclude = alwaysInclude;, +	}, +, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlProvider.java, +	 * Return the configured {@code UrlPathHelper}., +	 * Return the configured {@code PathMatcher}., +	 * Return the resource mappings, either manually configured or auto-detected, +	 * Return {@code false} if resource mappings were manually configured,, +	 * <p>It is expected that the given path is what Spring MVC would use for, +	 * request mapping purposes, i.e. excluding context and servlet path portions., +	 * @return the resolved public URL path, or {@code null} if unresolved, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/NoSuchBeanDefinitionException.java, + * Copyright 2002-2014 the original author or authors., + * Exception thrown when a {@code BeanFactory} is asked for a bean instance for which it, + * cannot find a definition. This may point to a non-existing bean, a non-unique bean,, + * or a manually registered singleton instance without an associated bean definition., + * @see NoUniqueBeanDefinitionException, +	/** Name of the missing bean */, +	/** Required type of the missing bean */, +++ b/spring-webmvc-tiles2/src/main/java/org/springframework/web/servlet/view/tiles2/TilesView.java, +	 * @see TilesViewResolver#setAlwaysInclude, +, +++ b/spring-webmvc-tiles2/src/main/java/org/springframework/web/servlet/view/tiles2/TilesViewResolver.java, +	 * This resolver requires {@link TilesView}., +	/**, +	 * Specify whether to always include the view rather than forward to it., +	 * <p>Default is "false". Switch this flag on to enforce the use of a, +	 * Servlet include, even if a forward would be possible., +	 * @since 4.1.2, +	 * @see TilesView#setAlwaysInclude, +	 */, +	public void setAlwaysInclude(Boolean alwaysInclude) {, +		this.alwaysInclude = alwaysInclude;, +	}]