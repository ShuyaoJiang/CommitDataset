[+++ b/spring-jcl/src/main/java/org/apache/commons/logging/LogAdapter.java, +	private static final String LOG4J_SPI = "org.apache.logging.log4j.spi.ExtendedLogger";, +, +	private static final String LOG4J_SLF4J_PROVIDER = "org.apache.logging.slf4j.SLF4JProvider";, +, +	private static final String SLF4J_SPI = "org.slf4j.spi.LocationAwareLogger";, +, +	private static final String SLF4J_API = "org.slf4j.Logger";, +, +, +	private static final LogApi logApi;, +		if (isPresent(LOG4J_SPI)) {, +			if (isPresent(LOG4J_SLF4J_PROVIDER) && isPresent(SLF4J_SPI)) {, +				// log4j-to-slf4j bridge -> we'll rather go with the SLF4J SPI;, +				// however, we still prefer Log4j over the plain SLF4J API since, +				// the latter does not have location awareness support., +			else {, +				// Use Log4j 2.x directly, including location awareness support, +				logApi = LogApi.LOG4J;, +			}, +		}, +		else if (isPresent(SLF4J_SPI)) {, +			// Full SLF4J SPI including location awareness support, +			logApi = LogApi.SLF4J_LAL;, +		}, +		else if (isPresent(SLF4J_API)) {, +			// Minimal SLF4J API without location awareness support, +		else {, +			// java.util.logging as default, +			logApi = LogApi.JUL;, +	private static boolean isPresent(String className) {, +		try {, +			Class.forName(className, false, LogAdapter.class.getClassLoader());, +			return true;, +		}, +		catch (ClassNotFoundException ex) {, +			return false;, +		}, +	}, +]