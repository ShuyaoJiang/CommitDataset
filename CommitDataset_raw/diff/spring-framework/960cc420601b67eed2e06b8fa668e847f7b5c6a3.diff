[+++ b/spring-web/src/main/java/org/springframework/web/server/session/DefaultWebSessionManager.java, +		if (session.isExpired()) {, +			return Mono.error(new IllegalStateException(, +					"Sessions are checked for expiration and have their " +, +					"since then and before the call to session.save()."));, +		}, +++ b/spring-web/src/main/java/org/springframework/web/server/session/DefaultWebSessionManager.java, +		if (session.isExpired()) {, +			return Mono.error(new IllegalStateException(, +					"Sessions are checked for expiration and have their " +, +					"since then and before the call to session.save()."));, +		}, +++ b/spring-web/src/test/java/org/springframework/web/server/session/WebSessionIntegrationTests.java, +import org.springframework.web.server.WebHandler;, +import org.springframework.web.server.WebSession;, +	private URI createUri(String pathAndQuery) throws URISyntaxException {, +		// Second request: same session, +		// Update lastAccessTime of the created session to -31 min, +		WebSession session = this.sessionManager.getSessionStore().retrieveSession(id).block();, +		((DefaultWebSession) session).setLastAccessTime(, +				Clock.offset(this.sessionManager.getClock(), Duration.ofMinutes(-31)).instant());, +, +		// Third request: expired session, new session created]