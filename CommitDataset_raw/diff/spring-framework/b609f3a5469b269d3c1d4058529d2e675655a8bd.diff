[+++ b/spring-web/src/main/java/org/springframework/web/server/adapter/WebHttpHandlerBuilder.java, +import org.springframework.beans.factory.annotation.Autowired;, +		AutowiredFiltersContainer filtersContainer = new AutowiredFiltersContainer();, +		context.getAutowireCapableBeanFactory().autowireBean(filtersContainer);, +		builder.filters(filtersContainer.getFilters());, +		AutowiredExceptionHandlersContainer handlersContainer = new AutowiredExceptionHandlersContainer();, +		context.getAutowireCapableBeanFactory().autowireBean(handlersContainer);, +		builder.exceptionHandlers(handlersContainer.getExceptionHandlers());, +		return filters(Arrays.asList(filters));, +	}, +, +	/**, +	 * Add the given filters to use for processing requests., +	 * @param filters the filters to add, +	 */, +	public WebHttpHandlerBuilder filters(Collection<? extends WebFilter> filters) {, +			this.filters.addAll(filters);, +		return exceptionHandlers(Arrays.asList(exceptionHandlers));, +	}, +, +	/**, +	 * Add the given exception handler to apply at the end of request processing., +	 * @param exceptionHandlers the exception handlers, +	 */, +	public WebHttpHandlerBuilder exceptionHandlers(List<WebExceptionHandler> exceptionHandlers) {, +			this.exceptionHandlers.addAll(exceptionHandlers);, +, +	private static class AutowiredFiltersContainer {, +, +		private List<WebFilter> filters;, +, +		@Autowired(required = false), +		public void setFilters(List<WebFilter> filters) {, +			this.filters = filters;, +		}, +, +		public List<WebFilter> getFilters() {, +			return this.filters;, +		}, +	}, +, +	private static class AutowiredExceptionHandlersContainer {, +, +		private List<WebExceptionHandler> exceptionHandlers;, +, +		@Autowired(required = false), +		public void setExceptionHandlers(List<WebExceptionHandler> exceptionHandlers) {, +			this.exceptionHandlers = exceptionHandlers;, +		}, +, +		public List<WebExceptionHandler> getExceptionHandlers() {, +			return this.exceptionHandlers;, +		}, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/WebHttpHandlerBuilder.java, +import org.springframework.beans.factory.annotation.Autowired;, +		AutowiredFiltersContainer filtersContainer = new AutowiredFiltersContainer();, +		context.getAutowireCapableBeanFactory().autowireBean(filtersContainer);, +		builder.filters(filtersContainer.getFilters());, +		AutowiredExceptionHandlersContainer handlersContainer = new AutowiredExceptionHandlersContainer();, +		context.getAutowireCapableBeanFactory().autowireBean(handlersContainer);, +		builder.exceptionHandlers(handlersContainer.getExceptionHandlers());, +		return filters(Arrays.asList(filters));, +	}, +, +	/**, +	 * Add the given filters to use for processing requests., +	 * @param filters the filters to add, +	 */, +	public WebHttpHandlerBuilder filters(Collection<? extends WebFilter> filters) {, +			this.filters.addAll(filters);, +		return exceptionHandlers(Arrays.asList(exceptionHandlers));, +	}, +, +	/**, +	 * Add the given exception handler to apply at the end of request processing., +	 * @param exceptionHandlers the exception handlers, +	 */, +	public WebHttpHandlerBuilder exceptionHandlers(List<WebExceptionHandler> exceptionHandlers) {, +			this.exceptionHandlers.addAll(exceptionHandlers);, +, +	private static class AutowiredFiltersContainer {, +, +		private List<WebFilter> filters;, +, +		@Autowired(required = false), +		public void setFilters(List<WebFilter> filters) {, +			this.filters = filters;, +		}, +, +		public List<WebFilter> getFilters() {, +			return this.filters;, +		}, +	}, +, +	private static class AutowiredExceptionHandlersContainer {, +, +		private List<WebExceptionHandler> exceptionHandlers;, +]