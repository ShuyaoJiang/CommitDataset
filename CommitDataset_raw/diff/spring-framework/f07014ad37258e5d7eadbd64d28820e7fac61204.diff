[+++ b/spring-jms/src/main/java/org/springframework/jms/support/converter/MappingJackson2MessageConverter.java, + * Copyright 2002-2019 the original author or authors., +	@Nullable, +	private String encoding;, +		if (this.encoding != null) {, +		}, +		else {, +			// Jackson usually defaults to UTF-8 but can also go straight to bytes, e.g. for Smile., +			// We use a direct byte array argument for the latter case to work as well., +			objectWriter.writeValue(bos, object);, +		}, +			message.setStringProperty(this.encodingPropertyName,, +					(this.encoding != null ? this.encoding : DEFAULT_ENCODING));, +		if (encoding != null) {, +		else {, +			// Jackson internally performs encoding detection, falling back to UTF-8., +			return this.objectMapper.readValue(bytes, targetJavaType);, +		}, +	}, +++ b/spring-jms/src/main/java/org/springframework/jms/support/converter/MappingJackson2MessageConverter.java, + * Copyright 2002-2019 the original author or authors., +	@Nullable, +	private String encoding;, +		if (this.encoding != null) {, +		}, +		else {, +			// Jackson usually defaults to UTF-8 but can also go straight to bytes, e.g. for Smile., +			// We use a direct byte array argument for the latter case to work as well., +			objectWriter.writeValue(bos, object);, +		}, +			message.setStringProperty(this.encodingPropertyName,, +					(this.encoding != null ? this.encoding : DEFAULT_ENCODING));, +		if (encoding != null) {, +		else {, +			// Jackson internally performs encoding detection, falling back to UTF-8., +			return this.objectMapper.readValue(bytes, targetJavaType);, +		}, +	}, +++ b/spring-jms/src/test/java/org/springframework/jms/support/converter/MappingJackson2MessageConverterTests.java, + * Copyright 2002-2019 the original author or authors., +	public void setup() {, +, +		private String foo;, +, +, +, +]