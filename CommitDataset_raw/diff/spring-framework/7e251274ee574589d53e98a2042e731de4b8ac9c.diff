[+++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractDestinationResolvingMessagingTemplate.java, + * Copyright 2002-2017 the original author or authors., +	public <T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers) {, +	public <T> void convertAndSend(String destinationName, T payload, @Nullable MessagePostProcessor postProcessor) {, +	public <T> void convertAndSend(String destinationName, T payload,, +			@Nullable Map<String, Object> headers, @Nullable MessagePostProcessor postProcessor) {, +, +	public <T> T convertSendAndReceive(String destinationName, Object request,, +			@Nullable Map<String, Object> headers, Class<T> targetClass) {, +			@Nullable MessagePostProcessor postProcessor) {, +	public <T> T convertSendAndReceive(String destinationName, Object request,, +			@Nullable Map<String, Object> headers, Class<T> targetClass,, +			@Nullable MessagePostProcessor postProcessor) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractDestinationResolvingMessagingTemplate.java, + * Copyright 2002-2017 the original author or authors., +	public <T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers) {, +	public <T> void convertAndSend(String destinationName, T payload, @Nullable MessagePostProcessor postProcessor) {, +	public <T> void convertAndSend(String destinationName, T payload,, +			@Nullable Map<String, Object> headers, @Nullable MessagePostProcessor postProcessor) {, +, +	public <T> T convertSendAndReceive(String destinationName, Object request,, +			@Nullable Map<String, Object> headers, Class<T> targetClass) {, +			@Nullable MessagePostProcessor postProcessor) {, +	public <T> T convertSendAndReceive(String destinationName, Object request,, +			@Nullable Map<String, Object> headers, Class<T> targetClass,, +			@Nullable MessagePostProcessor postProcessor) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractMessagingTemplate.java, +	public <T> T convertSendAndReceive(, +			D destination, Object request, @Nullable Map<String, Object> headers, Class<T> targetClass) {, +, +	public <T> T convertSendAndReceive(, +			Object request, Class<T> targetClass, @Nullable MessagePostProcessor postProcessor) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractDestinationResolvingMessagingTemplate.java, + * Copyright 2002-2017 the original author or authors., +	public <T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers) {, +	public <T> void convertAndSend(String destinationName, T payload, @Nullable MessagePostProcessor postProcessor) {, +	public <T> void convertAndSend(String destinationName, T payload,, +			@Nullable Map<String, Object> headers, @Nullable MessagePostProcessor postProcessor) {, +, +	public <T> T convertSendAndReceive(String destinationName, Object request,, +			@Nullable Map<String, Object> headers, Class<T> targetClass) {, +			@Nullable MessagePostProcessor postProcessor) {, +	public <T> T convertSendAndReceive(String destinationName, Object request,, +			@Nullable Map<String, Object> headers, Class<T> targetClass,, +			@Nullable MessagePostProcessor postProcessor) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractMessagingTemplate.java, +	public <T> T convertSendAndReceive(, +			D destination, Object request, @Nullable Map<String, Object> headers, Class<T> targetClass) {, +, +	public <T> T convertSendAndReceive(, +			Object request, Class<T> targetClass, @Nullable MessagePostProcessor postProcessor) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/DestinationResolvingMessageRequestReplyOperations.java, + * Copyright 2002-2017 the original author or authors., +	<T> T convertSendAndReceive(String destinationName, Object request,, +			@Nullable Map<String, Object> headers, Class<T> targetClass) throws MessagingException;, +	<T> T convertSendAndReceive(String destinationName, Object request, Class<T> targetClass,, +			@Nullable MessagePostProcessor requestPostProcessor) throws MessagingException;, +	<T> T convertSendAndReceive(String destinationName, Object request, @Nullable Map<String, Object> headers,, +			Class<T> targetClass, @Nullable MessagePostProcessor requestPostProcessor) throws MessagingException;, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractDestinationResolvingMessagingTemplate.java, + * Copyright 2002-2017 the original author or authors., +	public <T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers) {, +	public <T> void convertAndSend(String destinationName, T payload, @Nullable MessagePostProcessor postProcessor) {, +	public <T> void convertAndSend(String destinationName, T payload,, +			@Nullable Map<String, Object> headers, @Nullable MessagePostProcessor postProcessor) {, +, +	public <T> T convertSendAndReceive(String destinationName, Object request,, +			@Nullable Map<String, Object> headers, Class<T> targetClass) {, +			@Nullable MessagePostProcessor postProcessor) {, +	public <T> T convertSendAndReceive(String destinationName, Object request,, +			@Nullable Map<String, Object> headers, Class<T> targetClass,, +			@Nullable MessagePostProcessor postProcessor) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractMessagingTemplate.java, +	public <T> T convertSendAndReceive(, +			D destination, Object request, @Nullable Map<String, Object> headers, Class<T> targetClass) {, +, +	public <T> T convertSendAndReceive(, +			Object request, Class<T> targetClass, @Nullable MessagePostProcessor postProcessor) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/DestinationResolvingMessageRequestReplyOperations.java, + * Copyright 2002-2017 the original author or authors., +	<T> T convertSendAndReceive(String destinationName, Object request,, +			@Nullable Map<String, Object> headers, Class<T> targetClass) throws MessagingException;, +	<T> T convertSendAndReceive(String destinationName, Object request, Class<T> targetClass,, +			@Nullable MessagePostProcessor requestPostProcessor) throws MessagingException;, +	<T> T convertSendAndReceive(String destinationName, Object request, @Nullable Map<String, Object> headers,, +			Class<T> targetClass, @Nullable MessagePostProcessor requestPostProcessor) throws MessagingException;, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/DestinationResolvingMessageSendingOperations.java, + * Copyright 2002-2017 the original author or authors., +	<T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers), +	<T> void convertAndSend(String destinationName, T payload, @Nullable MessagePostProcessor postProcessor), +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractDestinationResolvingMessagingTemplate.java, + * Copyright 2002-2017 the original author or authors., +	public <T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers) {, +	public <T> void convertAndSend(String destinationName, T payload, @Nullable MessagePostProcessor postProcessor) {, +	public <T> void convertAndSend(String destinationName, T payload,, +			@Nullable Map<String, Object> headers, @Nullable MessagePostProcessor postProcessor) {, +]