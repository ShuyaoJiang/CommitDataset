[+++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/BeanFactoryAspectInstanceFactory.java, +import org.springframework.util.Assert;, +		Assert.notNull(beanFactory, "BeanFactory must not be null");, +		Assert.notNull(name, "Bean name must not be null");, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/BeanFactoryAspectInstanceFactory.java, +import org.springframework.util.Assert;, +		Assert.notNull(beanFactory, "BeanFactory must not be null");, +		Assert.notNull(name, "Bean name must not be null");, +++ b/spring-context/src/main/java/org/springframework/scheduling/config/TriggerTask.java, + * Copyright 2002-2016 the original author or authors., + * {@link Task} implementation defining a {@code Runnable} to be executed, + * according to a given {@link Trigger}., +		return this.trigger;, +, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/BeanFactoryAspectInstanceFactory.java, +import org.springframework.util.Assert;, +		Assert.notNull(beanFactory, "BeanFactory must not be null");, +		Assert.notNull(name, "Bean name must not be null");, +++ b/spring-context/src/main/java/org/springframework/scheduling/config/TriggerTask.java, + * Copyright 2002-2016 the original author or authors., + * {@link Task} implementation defining a {@code Runnable} to be executed, + * according to a given {@link Trigger}., +		return this.trigger;, +, +++ b/src/test/java/org/springframework/scheduling/annotation/ScheduledAndTransactionalAnnotationIntegrationTests.java, + * Copyright 2002-2016 the original author or authors., +, +	static class JdkProxyTxConfig {, +	}, +, +	static class SubclassProxyTxConfig {, +	}, +, +, +, +, +, +			return mock(PersistenceExceptionTranslator.class);, +, +, +, +, +, +, +		void scheduled();, +]