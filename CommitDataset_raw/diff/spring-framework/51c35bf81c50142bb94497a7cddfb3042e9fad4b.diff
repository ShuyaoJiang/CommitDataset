[+++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/SpringValidatorAdapter.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.context.MessageSourceResolvable;, +				if (attributeValue instanceof String) {, +					attributeValue = new ResolvableAttribute(attributeValue.toString());, +				}, +, +	/**, +	 * Wrapper for a String attribute which can be resolved via a {@code MessageSource},, +	 * falling back to the original attribute as a default value otherwise., +	 */, +	private static class ResolvableAttribute implements MessageSourceResolvable {, +, +		private final String resolvableString;, +, +		public ResolvableAttribute(String resolvableString) {, +			this.resolvableString = resolvableString;, +		}, +, +		@Override, +		public String[] getCodes() {, +			return new String[] {this.resolvableString};, +		}, +, +		@Override, +		public Object[] getArguments() {, +			return null;, +		}, +, +		@Override, +		public String getDefaultMessage() {, +			return this.resolvableString;, +		}, +	}, +, +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/SpringValidatorAdapter.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.context.MessageSourceResolvable;, +				if (attributeValue instanceof String) {, +					attributeValue = new ResolvableAttribute(attributeValue.toString());, +				}, +, +	/**, +	 * Wrapper for a String attribute which can be resolved via a {@code MessageSource},, +	 * falling back to the original attribute as a default value otherwise., +	 */, +	private static class ResolvableAttribute implements MessageSourceResolvable {, +, +		private final String resolvableString;, +, +		public ResolvableAttribute(String resolvableString) {, +			this.resolvableString = resolvableString;, +		}, +, +		@Override, +		public String[] getCodes() {, +			return new String[] {this.resolvableString};, +		}, +, +		@Override, +		public Object[] getArguments() {, +			return null;, +		}, +, +		@Override, +		public String getDefaultMessage() {, +			return this.resolvableString;, +		}, +	}, +, +++ b/spring-context/src/test/java/org/springframework/validation/beanvalidation/SpringValidatorAdapterTests.java, +/*, + * Copyright 2002-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.validation.beanvalidation;, +, +import org.junit.Before;, +import org.junit.BeforeClass;, +import org.junit.Test;, +import org.springframework.beans.BeanWrapper;, +import org.springframework.beans.BeanWrapperImpl;, +import org.springframework.context.support.StaticMessageSource;, +import org.springframework.util.ObjectUtils;, +import org.springframework.validation.BeanPropertyBindingResult;, +, +import javax.validation.*;, +import javax.validation.constraints.Size;]