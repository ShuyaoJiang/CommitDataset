[+++ b/spring-orm/src/test/java/org/springframework/orm/jpa/AbstractContainerEntityManagerFactoryIntegrationTests.java, +import org.springframework.transaction.annotation.Propagation;, +import org.springframework.transaction.annotation.Transactional;, +public abstract class AbstractContainerEntityManagerFactoryIntegrationTests extends, +		AbstractEntityManagerFactoryIntegrationTests {, +	@Transactional(propagation = Propagation.NOT_SUPPORTED), +		assertTrue("Must have introduced config interface", entityManagerFactory instanceof EntityManagerFactoryInfo);, +		assertEquals("Should be no people from previous transactions", 0, countRowsInTable("person"));, +	public void testJdbcTx1_1() {, +	public void testJdbcTx1_2() {, +		testJdbcTx2();, +	}, +, +	public void testJdbcTx1_3() {, +		testJdbcTx2();, +	}, +, +	public void testJdbcTx2() {, +		try {, +			fail("Should have thrown a RuntimeException");, +		}, +		catch (RuntimeException e) {, +			/* expected */, +		}, +		try {, +			fail("Should have thrown an EntityNotFoundException");, +		}, +		catch (EntityNotFoundException e) {, +			/* expected */, +		}, +	@Transactional(propagation = Propagation.NOT_SUPPORTED), +	@Transactional(propagation = Propagation.NOT_SUPPORTED), +			// IllegalStateException expected, but PersistenceException thrown by, +			// Hibernate, +			System.err.println(ex);, +++ b/spring-orm/src/test/java/org/springframework/orm/jpa/AbstractContainerEntityManagerFactoryIntegrationTests.java, +import org.springframework.transaction.annotation.Propagation;, +import org.springframework.transaction.annotation.Transactional;, +public abstract class AbstractContainerEntityManagerFactoryIntegrationTests extends, +		AbstractEntityManagerFactoryIntegrationTests {, +	@Transactional(propagation = Propagation.NOT_SUPPORTED), +		assertTrue("Must have introduced config interface", entityManagerFactory instanceof EntityManagerFactoryInfo);, +		assertEquals("Should be no people from previous transactions", 0, countRowsInTable("person"));, +	public void testJdbcTx1_1() {, +	public void testJdbcTx1_2() {, +		testJdbcTx2();, +	}, +, +	public void testJdbcTx1_3() {, +		testJdbcTx2();, +	}, +, +	public void testJdbcTx2() {, +		try {, +			fail("Should have thrown a RuntimeException");, +		}, +		catch (RuntimeException e) {, +			/* expected */, +		}, +		try {, +			fail("Should have thrown an EntityNotFoundException");, +		}, +		catch (EntityNotFoundException e) {, +			/* expected */, +		}, +	@Transactional(propagation = Propagation.NOT_SUPPORTED), +	@Transactional(propagation = Propagation.NOT_SUPPORTED), +			// IllegalStateException expected, but PersistenceException thrown by, +			// Hibernate, +			System.err.println(ex);, +++ b/spring-orm/src/test/java/org/springframework/orm/jpa/ApplicationManagedEntityManagerIntegrationTests.java, + * Copyright 2002-2014 the original author or authors., +import java.util.List;, +import org.springframework.transaction.annotation.Propagation;, +	@Transactional(propagation = Propagation.NOT_SUPPORTED), +++ b/spring-orm/src/test/java/org/springframework/orm/jpa/AbstractContainerEntityManagerFactoryIntegrationTests.java, +import org.springframework.transaction.annotation.Propagation;, +import org.springframework.transaction.annotation.Transactional;, +public abstract class AbstractContainerEntityManagerFactoryIntegrationTests extends, +		AbstractEntityManagerFactoryIntegrationTests {, +	@Transactional(propagation = Propagation.NOT_SUPPORTED), +		assertTrue("Must have introduced config interface", entityManagerFactory instanceof EntityManagerFactoryInfo);, +		assertEquals("Should be no people from previous transactions", 0, countRowsInTable("person"));, +	public void testJdbcTx1_1() {, +	public void testJdbcTx1_2() {, +		testJdbcTx2();, +	}, +, +	public void testJdbcTx1_3() {, +		testJdbcTx2();, +	}, +, +	public void testJdbcTx2() {, +		try {, +			fail("Should have thrown a RuntimeException");, +		}, +		catch (RuntimeException e) {, +			/* expected */, +		}, +		try {]