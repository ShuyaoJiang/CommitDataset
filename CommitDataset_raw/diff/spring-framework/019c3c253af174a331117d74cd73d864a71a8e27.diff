[+++ b/org.springframework.beans/beans.iml, +++ b/org.springframework.beans/beans.iml, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +			if (node instanceof Element && nodeNameEquals(node, META_ELEMENT)) {, +			if (node instanceof Element && nodeNameEquals(node, CONSTRUCTOR_ARG_ELEMENT)) {, +			if (node instanceof Element && nodeNameEquals(node, PROPERTY_ELEMENT)) {, +			if (node instanceof Element && nodeNameEquals(node, QUALIFIER_ELEMENT)) {, +			if (node instanceof Element && nodeNameEquals(node, LOOKUP_METHOD_ELEMENT)) {, +			if (node instanceof Element && nodeNameEquals(node, REPLACED_METHOD_ELEMENT)) {, +				if (node instanceof Element && nodeNameEquals(node, QUALIFIER_ATTRIBUTE_ELEMENT)) {, +			if (node instanceof Element && !nodeNameEquals(node, DESCRIPTION_ELEMENT) &&, +					!nodeNameEquals(node, META_ELEMENT)) {, +		if (!isDefaultNamespace(getNamespaceURI(ele))) {, +		else if (nodeNameEquals(ele, BEAN_ELEMENT)) {, +		else if (nodeNameEquals(ele, REF_ELEMENT)) {, +		else if (nodeNameEquals(ele, IDREF_ELEMENT)) {, +		else if (nodeNameEquals(ele, VALUE_ELEMENT)) {, +		else if (nodeNameEquals(ele, NULL_ELEMENT)) {, +		else if (nodeNameEquals(ele, ARRAY_ELEMENT)) {, +		else if (nodeNameEquals(ele, LIST_ELEMENT)) {, +		else if (nodeNameEquals(ele, SET_ELEMENT)) {, +		else if (nodeNameEquals(ele, MAP_ELEMENT)) {, +		else if (nodeNameEquals(ele, PROPS_ELEMENT)) {, +			if (node instanceof Element && !nodeNameEquals(node, DESCRIPTION_ELEMENT)) {, +					if (nodeNameEquals(candidateEle, KEY_ELEMENT)) {, +		String namespaceUri = getNamespaceURI(ele);, +		String namespaceUri = getNamespaceURI(node);, +	/**, +	 * Gets the namespace URI for the supplied node. The default implementation uses {@link Node#getNamespaceURI}., +	 * Subclasses may override the default implementation to provide a different namespace identification mechanism., +	 * @param node the node, +	 * @return the namespace URI of the the node., +	 */, +	public String getNamespaceURI(Node node) {, +		return node.getNamespaceURI();, +	}, +, +	/**, +	 * Determines whether the name of the supplied node is equal to the supplied name., +	 * The default implementation delegates to {@link DomUtils#nodeNameEquals}., +	 * Subclasses may override the default implementatino to provide a different mechanism for comparing node names., +	 * @param node the node to compare, +	 * @param desiredName the name to check for, +	 * @return <code>true</code> if the names are equal otherwise <code>false</code>., +	 */, +	public boolean nodeNameEquals(Node node, String desiredName) {, +		return DomUtils.nodeNameEquals(node, desiredName);, +	}, +++ b/org.springframework.beans/beans.iml, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +			if (node instanceof Element && nodeNameEquals(node, META_ELEMENT)) {, +			if (node instanceof Element && nodeNameEquals(node, CONSTRUCTOR_ARG_ELEMENT)) {, +			if (node instanceof Element && nodeNameEquals(node, PROPERTY_ELEMENT)) {, +			if (node instanceof Element && nodeNameEquals(node, QUALIFIER_ELEMENT)) {, +			if (node instanceof Element && nodeNameEquals(node, LOOKUP_METHOD_ELEMENT)) {, +			if (node instanceof Element && nodeNameEquals(node, REPLACED_METHOD_ELEMENT)) {, +				if (node instanceof Element && nodeNameEquals(node, QUALIFIER_ATTRIBUTE_ELEMENT)) {, +			if (node instanceof Element && !nodeNameEquals(node, DESCRIPTION_ELEMENT) &&, +					!nodeNameEquals(node, META_ELEMENT)) {, +		if (!isDefaultNamespace(getNamespaceURI(ele))) {, +		else if (nodeNameEquals(ele, BEAN_ELEMENT)) {, +		else if (nodeNameEquals(ele, REF_ELEMENT)) {, +		else if (nodeNameEquals(ele, IDREF_ELEMENT)) {, +		else if (nodeNameEquals(ele, VALUE_ELEMENT)) {, +		else if (nodeNameEquals(ele, NULL_ELEMENT)) {, +		else if (nodeNameEquals(ele, ARRAY_ELEMENT)) {, +		else if (nodeNameEquals(ele, LIST_ELEMENT)) {, +		else if (nodeNameEquals(ele, SET_ELEMENT)) {, +		else if (nodeNameEquals(ele, MAP_ELEMENT)) {, +		else if (nodeNameEquals(ele, PROPS_ELEMENT)) {, +			if (node instanceof Element && !nodeNameEquals(node, DESCRIPTION_ELEMENT)) {, +					if (nodeNameEquals(candidateEle, KEY_ELEMENT)) {, +		String namespaceUri = getNamespaceURI(ele);, +		String namespaceUri = getNamespaceURI(node);, +	/**, +	 * Gets the namespace URI for the supplied node. The default implementation uses {@link Node#getNamespaceURI}., +	 * Subclasses may override the default implementation to provide a different namespace identification mechanism., +	 * @param node the node, +	 * @return the namespace URI of the the node., +	 */, +	public String getNamespaceURI(Node node) {, +		return node.getNamespaceURI();, +	}, +, +	/**, +	 * Determines whether the name of the supplied node is equal to the supplied name., +	 * The default implementation delegates to {@link DomUtils#nodeNameEquals}., +	 * Subclasses may override the default implementatino to provide a different mechanism for comparing node names., +	 * @param node the node to compare, +	 * @param desiredName the name to check for, +	 * @return <code>true</code> if the names are equal otherwise <code>false</code>., +	 */, +	public boolean nodeNameEquals(Node node, String desiredName) {, +		return DomUtils.nodeNameEquals(node, desiredName);, +	}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.java, +		if (delegate.isDefaultNamespace(delegate.getNamespaceURI(root))) {, +					String namespaceUri = delegate.getNamespaceURI(ele);, +		if (delegate.nodeNameEquals(ele, IMPORT_ELEMENT)) {, +		else if (delegate.nodeNameEquals(ele, ALIAS_ELEMENT)) {]