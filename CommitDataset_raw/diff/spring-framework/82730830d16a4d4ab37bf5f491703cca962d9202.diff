[+++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractFileResolvingResource.java, + * Copyright 2002-2010 the original author or authors., +import java.net.HttpURLConnection;, +import java.net.URLConnection;, +	@Override, +	public boolean exists() {, +		try {, +			URL url = getURL();, +			if (ResourceUtils.isFileURL(url)) {, +				// Proceed with file system resolution..., +				return getFile().exists();, +			}, +			else {, +				// Try a URL connection content-length header..., +				URLConnection con = url.openConnection();, +				con.setUseCaches(false);, +				if (con instanceof HttpURLConnection) {, +					((HttpURLConnection) con).setRequestMethod("HEAD");, +				}, +				boolean doesExist = (con.getContentLength() >= 0);, +				if (!doesExist && con instanceof HttpURLConnection) {, +					((HttpURLConnection) con).disconnect();, +				}, +				return doesExist;, +			}, +		}, +		catch (IOException ex) {, +			return false;, +		}, +	}, +, +	@Override, +	public int contentLength() throws IOException {, +		URL url = getURL();, +		if (ResourceUtils.isFileURL(url)) {, +			// Proceed with file system resolution..., +			return super.contentLength();, +		}, +		else {, +			// Try a URL connection content-length header..., +			URLConnection con = url.openConnection();, +			con.setUseCaches(false);, +			if (con instanceof HttpURLConnection) {, +				((HttpURLConnection) con).setRequestMethod("HEAD");, +			}, +			return con.getContentLength();, +		}, +	}, +, +	@Override, +	public long lastModified() throws IOException {, +		URL url = getURL();, +		if (ResourceUtils.isFileURL(url) || ResourceUtils.isJarURL(url)) {, +			// Proceed with file system resolution..., +			return super.lastModified();, +		}, +		else {, +			// Try a URL connection last-modified header..., +			URLConnection con = url.openConnection();, +			con.setUseCaches(false);, +			if (con instanceof HttpURLConnection) {, +				((HttpURLConnection) con).setRequestMethod("HEAD");, +			}, +			return con.getLastModified();, +		}, +	}, +, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractFileResolvingResource.java, + * Copyright 2002-2010 the original author or authors., +import java.net.HttpURLConnection;, +import java.net.URLConnection;, +	@Override, +	public boolean exists() {, +		try {, +			URL url = getURL();, +			if (ResourceUtils.isFileURL(url)) {, +				// Proceed with file system resolution..., +				return getFile().exists();, +			}, +			else {, +				// Try a URL connection content-length header..., +				URLConnection con = url.openConnection();, +				con.setUseCaches(false);, +				if (con instanceof HttpURLConnection) {, +					((HttpURLConnection) con).setRequestMethod("HEAD");, +				}, +				boolean doesExist = (con.getContentLength() >= 0);, +				if (!doesExist && con instanceof HttpURLConnection) {, +					((HttpURLConnection) con).disconnect();, +				}, +				return doesExist;, +			}, +		}, +		catch (IOException ex) {, +			return false;, +		}, +	}, +, +	@Override]