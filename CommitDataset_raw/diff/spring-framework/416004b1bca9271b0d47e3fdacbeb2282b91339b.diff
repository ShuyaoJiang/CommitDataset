[+++ b/org.springframework.core/src/main/java/org/springframework/util/xml/AbstractStaxXMLReader.java, +import java.util.LinkedHashMap;, +import java.util.Map;, +	private final Map<String, String> namespaces = new LinkedHashMap<String, String>();, +	/**, +	 * Starts the prefix mapping for the given prefix., +	 * @see org.xml.sax.ContentHandler#startPrefixMapping(String, String), +	 */, +	protected void startPrefixMapping(String prefix, String namespace) throws SAXException {, +		if (getContentHandler() != null) {, +			if (prefix == null) {, +				prefix = "";, +			}, +			if (!StringUtils.hasLength(namespace)) {, +				return;, +			}, +			if (!namespace.equals(namespaces.get(prefix))) {, +				getContentHandler().startPrefixMapping(prefix, namespace);, +				namespaces.put(prefix, namespace);, +			}, +		}, +	}, +, +	/**, +	 * Ends the prefix mapping for the given prefix., +	 * @see org.xml.sax.ContentHandler#endPrefixMapping(String), +	 */, +	protected void endPrefixMapping(String prefix) throws SAXException {, +		if (getContentHandler() != null) {, +			if (namespaces.containsKey(prefix)) {, +				getContentHandler().endPrefixMapping(prefix);, +				namespaces.remove(prefix);, +			}, +		}, +	}, +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/AbstractStaxXMLReader.java, +import java.util.LinkedHashMap;, +import java.util.Map;, +	private final Map<String, String> namespaces = new LinkedHashMap<String, String>();, +	/**, +	 * Starts the prefix mapping for the given prefix., +	 * @see org.xml.sax.ContentHandler#startPrefixMapping(String, String), +	 */, +	protected void startPrefixMapping(String prefix, String namespace) throws SAXException {, +		if (getContentHandler() != null) {, +			if (prefix == null) {, +				prefix = "";, +			}, +			if (!StringUtils.hasLength(namespace)) {, +				return;, +			}, +			if (!namespace.equals(namespaces.get(prefix))) {, +				getContentHandler().startPrefixMapping(prefix, namespace);, +				namespaces.put(prefix, namespace);, +			}, +		}, +	}, +, +	/**, +	 * Ends the prefix mapping for the given prefix., +	 * @see org.xml.sax.ContentHandler#endPrefixMapping(String), +	 */, +	protected void endPrefixMapping(String prefix) throws SAXException {, +		if (getContentHandler() != null) {, +			if (namespaces.containsKey(prefix)) {, +				getContentHandler().endPrefixMapping(prefix);, +				namespaces.remove(prefix);, +			}, +		}, +	}, +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/StaxEventXMLReader.java, +import java.util.LinkedHashMap;, +import java.util.Map;, +	private final Map<String, String> namespaces = new LinkedHashMap<String, String>();, +, +					startPrefixMapping(namespace.getPrefix(), namespace.getNamespaceURI());, +					QName attributeName = attribute.getName();, +					startPrefixMapping(attributeName.getPrefix(), attributeName.getNamespaceURI());, +					endPrefixMapping(namespace.getPrefix());, +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/AbstractStaxXMLReader.java, +import java.util.LinkedHashMap;, +import java.util.Map;, +	private final Map<String, String> namespaces = new LinkedHashMap<String, String>();, +	/**, +	 * Starts the prefix mapping for the given prefix., +	 * @see org.xml.sax.ContentHandler#startPrefixMapping(String, String), +	 */, +	protected void startPrefixMapping(String prefix, String namespace) throws SAXException {, +		if (getContentHandler() != null) {, +			if (prefix == null) {, +				prefix = "";, +			}, +			if (!StringUtils.hasLength(namespace)) {, +				return;, +			}, +			if (!namespace.equals(namespaces.get(prefix))) {, +				getContentHandler().startPrefixMapping(prefix, namespace);, +				namespaces.put(prefix, namespace);, +			}, +		}]