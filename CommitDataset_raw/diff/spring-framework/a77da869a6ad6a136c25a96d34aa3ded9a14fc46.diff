[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/client/JettyWebSocketClient.java, +import org.eclipse.jetty.websocket.api.UpgradeRequest;, +import org.eclipse.jetty.websocket.client.io.UpgradeListener;, +					ClientUpgradeRequest upgradeRequest = new ClientUpgradeRequest();, +					upgradeRequest.setSubProtocols(protocols);, +					UpgradeListener upgradeListener = new DefaultUpgradeListener(headers);, +					return this.jettyClient.connect(jettyHandler, url, upgradeRequest, upgradeListener);, +, +	private static class DefaultUpgradeListener implements UpgradeListener {, +, +		private final HttpHeaders headers;, +, +, +		public DefaultUpgradeListener(HttpHeaders headers) {, +			this.headers = headers;, +		}, +, +		@Override, +		public void onHandshakeRequest(UpgradeRequest request) {, +			this.headers.forEach(request::setHeader);, +		}, +, +		@Override, +		public void onHandshakeResponse(UpgradeResponse response) {, +		}, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/client/JettyWebSocketClient.java, +import org.eclipse.jetty.websocket.api.UpgradeRequest;, +import org.eclipse.jetty.websocket.client.io.UpgradeListener;, +					ClientUpgradeRequest upgradeRequest = new ClientUpgradeRequest();, +					upgradeRequest.setSubProtocols(protocols);, +					UpgradeListener upgradeListener = new DefaultUpgradeListener(headers);, +					return this.jettyClient.connect(jettyHandler, url, upgradeRequest, upgradeListener);, +, +	private static class DefaultUpgradeListener implements UpgradeListener {, +, +		private final HttpHeaders headers;, +, +, +		public DefaultUpgradeListener(HttpHeaders headers) {, +			this.headers = headers;, +		}, +, +		@Override, +		public void onHandshakeRequest(UpgradeRequest request) {, +			this.headers.forEach(request::setHeader);, +		}, +, +		@Override, +		public void onHandshakeResponse(UpgradeResponse response) {, +		}, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/socket/WebSocketIntegrationTests.java]