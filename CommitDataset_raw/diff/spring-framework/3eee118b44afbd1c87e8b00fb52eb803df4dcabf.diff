[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilter.java, +		private int getEndPathIndex(String path) {, +			int end = path.indexOf('?');, +			int fragmentIndex = path.indexOf('#');, +			if (fragmentIndex != -1 && (end == -1 || fragmentIndex < end)) {, +				end = fragmentIndex;, +			if (end == -1) {, +				end = path.length();, +			return end;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilter.java, +		private int getEndPathIndex(String path) {, +			int end = path.indexOf('?');, +			int fragmentIndex = path.indexOf('#');, +			if (fragmentIndex != -1 && (end == -1 || fragmentIndex < end)) {, +				end = fragmentIndex;, +			if (end == -1) {, +				end = path.length();, +			return end;, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilterTests.java, +import java.io.IOException;, +import javax.servlet.ServletException;, +		testEncodeUrl(new MockHttpServletRequest("GET", "/"),, +				"/resources/bar.css", "/resources/bar-11e16cf79faee7ac698c805cf28248d2.css");, +	public void encodeUrlWithContext() throws Exception {, +		testEncodeUrl(request, "/context/resources/bar.css",, +				"/context/resources/bar-11e16cf79faee7ac698c805cf28248d2.css");, +		this.filter.doFilter(request, new MockHttpServletResponse(), (req, res) -> {, +		testEncodeUrl(request, "/context/resources/bar.css",, +				"/context/resources/bar-11e16cf79faee7ac698c805cf28248d2.css");, +		testEncodeUrl(request, "/context/resources/bar.css",, +				"/context/resources/bar-11e16cf79faee7ac698c805cf28248d2.css");, +	public void encodeEmptyUrlWithContext() throws Exception {, +		testEncodeUrl(request, "?foo=1", "?foo=1");, +	public void encodeUrlWithRequestParams() throws Exception {, +		testEncodeUrl(request, "/resources/bar.css?foo=bar&url=http://example.org",, +				"/resources/bar-11e16cf79faee7ac698c805cf28248d2.css?foo=bar&url=http://example.org");, +		testEncodeUrl(request, "index?key=value", "index?key=value");, +	public void encodeUrlWithFragment() throws Exception {, +		testEncodeUrl(request, "/resources/bar.css#something",, +				"/resources/bar-11e16cf79faee7ac698c805cf28248d2.css#something");, +, +		testEncodeUrl(request,, +				"/resources/bar.css?foo=bar&url=http://example.org#something",, +				"/resources/bar-11e16cf79faee7ac698c805cf28248d2.css?foo=bar&url=http://example.org#something");, +	private void testEncodeUrl(MockHttpServletRequest request, String url, String expected), +			throws ServletException, IOException {, +		this.filter.doFilter(request, new MockHttpServletResponse(), (req, res) -> {, +			String result = ((HttpServletResponse) res).encodeURL(url);, +			assertEquals(expected, result);]