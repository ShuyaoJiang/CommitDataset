[+++ b/spring-core/src/test/java/org/springframework/core/CollectionFactoryTests.java, +import java.util.Collection;, +import java.util.HashMap;, +import java.util.LinkedHashMap;, +import java.util.LinkedHashSet;, +import java.util.Map;, +import java.util.NavigableMap;, +import java.util.NavigableSet;, +import java.util.SortedMap;, +import java.util.TreeMap;, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +	public void createsCollectionsCorrectly() {, +		// interfaces, +		assertThat(createCollection(List.class, 0), is(instanceOf(ArrayList.class)));, +		assertThat(createCollection(Set.class, 0), is(instanceOf(LinkedHashSet.class)));, +		assertThat(createCollection(Collection.class, 0), is(instanceOf(LinkedHashSet.class)));, +		assertThat(createCollection(SortedSet.class, 0), is(instanceOf(TreeSet.class)));, +		assertThat(createCollection(NavigableSet.class, 0), is(instanceOf(TreeSet.class)));, +, +		assertThat(createCollection(List.class, String.class, 0), is(instanceOf(ArrayList.class)));, +		assertThat(createCollection(Set.class, String.class, 0), is(instanceOf(LinkedHashSet.class)));, +		assertThat(createCollection(Collection.class, String.class, 0), is(instanceOf(LinkedHashSet.class)));, +		assertThat(createCollection(SortedSet.class, String.class, 0), is(instanceOf(TreeSet.class)));, +		assertThat(createCollection(NavigableSet.class, String.class, 0), is(instanceOf(TreeSet.class)));, +, +		// concrete types, +		assertThat(createCollection(HashSet.class, 0), is(instanceOf(HashSet.class)));, +		assertThat(createCollection(HashSet.class, String.class, 0), is(instanceOf(HashSet.class)));, +	public void createsMapsCorrectly() {, +		// interfaces, +		assertThat(createMap(Map.class, 0), is(instanceOf(LinkedHashMap.class)));, +		assertThat(createMap(SortedMap.class, 0), is(instanceOf(TreeMap.class)));, +		assertThat(createMap(NavigableMap.class, 0), is(instanceOf(TreeMap.class)));, +		assertThat(createMap(MultiValueMap.class, 0), is(instanceOf(LinkedMultiValueMap.class)));, +, +		assertThat(createMap(Map.class, String.class, 0), is(instanceOf(LinkedHashMap.class)));, +		assertThat(createMap(SortedMap.class, String.class, 0), is(instanceOf(TreeMap.class)));, +		assertThat(createMap(NavigableMap.class, String.class, 0), is(instanceOf(TreeMap.class)));, +		assertThat(createMap(MultiValueMap.class, String.class, 0), is(instanceOf(LinkedMultiValueMap.class)));, +, +		// concrete types, +		assertThat(createMap(HashMap.class, 0), is(instanceOf(HashMap.class)));, +, +		assertThat(createMap(HashMap.class, String.class, 0), is(instanceOf(HashMap.class)));, +	}, +, +	@Test]