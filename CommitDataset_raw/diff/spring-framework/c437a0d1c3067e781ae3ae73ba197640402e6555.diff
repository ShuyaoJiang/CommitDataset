[+++ b/spring-context/src/main/java/org/springframework/context/event/GenericApplicationListener.java, + * Copyright 2002-2018 the original author or authors., + * exposing further metadata such as the supported event and source type., + * <p>As of Spring Framework 4.2, this interface supersedes the Class-based, + * {@link SmartApplicationListener} with full handling of generic event types., + * @see SmartApplicationListener, + * @see GenericApplicationListenerAdapter, +	 * @param eventType the event type (never {@code null}), +	 * <p>The default implementation always returns {@code true}., +	 * @param sourceType the source type, or {@code null} if no source, +	default boolean supportsSourceType(@Nullable Class<?> sourceType) {, +		return true;, +	}, +, +	/**, +	 * Determine this listener's order in a set of listeners for the same event., +	 * <p>The default implementation returns {@link #LOWEST_PRECEDENCE}., +	 */, +	@Override, +	default int getOrder() {, +		return LOWEST_PRECEDENCE;, +	}, +++ b/spring-context/src/main/java/org/springframework/context/event/GenericApplicationListener.java, + * Copyright 2002-2018 the original author or authors., + * exposing further metadata such as the supported event and source type., + * <p>As of Spring Framework 4.2, this interface supersedes the Class-based, + * {@link SmartApplicationListener} with full handling of generic event types., + * @see SmartApplicationListener, + * @see GenericApplicationListenerAdapter, +	 * @param eventType the event type (never {@code null}), +	 * <p>The default implementation always returns {@code true}., +	 * @param sourceType the source type, or {@code null} if no source, +	default boolean supportsSourceType(@Nullable Class<?> sourceType) {, +		return true;, +	}, +, +	/**, +	 * Determine this listener's order in a set of listeners for the same event., +	 * <p>The default implementation returns {@link #LOWEST_PRECEDENCE}., +	 */, +	@Override, +	default int getOrder() {, +		return LOWEST_PRECEDENCE;, +	}, +++ b/spring-context/src/main/java/org/springframework/context/event/SmartApplicationListener.java, + * exposing further metadata such as the supported event and source type., + * <p>For full introspection of generic event types, consider implementing, + * the {@link GenericApplicationListener} interface instead., + * @see GenericApplicationListenerAdapter, +	 * @param eventType the event type (never {@code null}), +	 * <p>The default implementation always returns {@code true}., +	 * @param sourceType the source type, or {@code null} if no source, +	default boolean supportsSourceType(@Nullable Class<?> sourceType) {, +		return true;, +	}, +, +	/**, +	 * Determine this listener's order in a set of listeners for the same event., +	 * <p>The default implementation returns {@link #LOWEST_PRECEDENCE}., +	 */, +	@Override, +	default int getOrder() {, +		return LOWEST_PRECEDENCE;, +	}]