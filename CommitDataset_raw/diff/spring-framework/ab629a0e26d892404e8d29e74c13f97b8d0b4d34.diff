[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/EventSourceTransportHandler.java, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return new byte[] { '\r', '\n' };, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/EventSourceTransportHandler.java, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return new byte[] { '\r', '\n' };, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/HtmlFileTransportHandler.java, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return html.getBytes(UTF8_CHARSET);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/EventSourceTransportHandler.java, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return new byte[] { '\r', '\n' };, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/HtmlFileTransportHandler.java, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return html.getBytes(UTF8_CHARSET);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/XhrStreamingTransportHandler.java, +	private static final byte[] PRELUDE = new byte[2049];, +, +	static {, +		for (int i = 0; i < 2048; i++) {, +			PRELUDE[i] = 'h';, +		}, +		PRELUDE[2048] = '\n';, +	}, +, +, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return PRELUDE;, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/EventSourceTransportHandler.java, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return new byte[] { '\r', '\n' };, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/HtmlFileTransportHandler.java, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return html.getBytes(UTF8_CHARSET);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/XhrStreamingTransportHandler.java, +	private static final byte[] PRELUDE = new byte[2049];, +, +	static {, +		for (int i = 0; i < 2048; i++) {, +			PRELUDE[i] = 'h';, +		}, +		PRELUDE[2048] = '\n';, +	}, +, +, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return PRELUDE;, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractHttpSockJsSession.java, +	 * @deprecated as of 4.2 this method is no longer used., +	/**, +	 * @deprecated as of 4.2 this method is deprecated since the prelude is written, +	 * in {@link #handleRequestInternal} of the StreamingSockJsSession subclass., +	 */, +	@Deprecated, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/EventSourceTransportHandler.java, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return new byte[] { '\r', '\n' };, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/HtmlFileTransportHandler.java, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return html.getBytes(UTF8_CHARSET);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/XhrStreamingTransportHandler.java, +	private static final byte[] PRELUDE = new byte[2049];, +, +	static {, +		for (int i = 0; i < 2048; i++) {, +			PRELUDE[i] = 'h';, +		}, +		PRELUDE[2048] = '\n';, +	}, +, +, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return PRELUDE;, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractHttpSockJsSession.java, +	 * @deprecated as of 4.2 this method is no longer used., +	/**, +	 * @deprecated as of 4.2 this method is deprecated since the prelude is written, +	 * in {@link #handleRequestInternal} of the StreamingSockJsSession subclass., +	 */, +	@Deprecated, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/PollingSockJsSession.java, +	 * @deprecated as of 4.2 this method is no longer used., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/EventSourceTransportHandler.java, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return new byte[] { '\r', '\n' };, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/HtmlFileTransportHandler.java, +		protected byte[] getPrelude(ServerHttpRequest request) {, +			return html.getBytes(UTF8_CHARSET);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/XhrStreamingTransportHandler.java, +	private static final byte[] PRELUDE = new byte[2049];, +, +	static {, +		for (int i = 0; i < 2048; i++) {, +			PRELUDE[i] = 'h';, +		}, +		PRELUDE[2048] = '\n';, +	}, +, +, +		protected byte[] getPrelude(ServerHttpRequest request) {]