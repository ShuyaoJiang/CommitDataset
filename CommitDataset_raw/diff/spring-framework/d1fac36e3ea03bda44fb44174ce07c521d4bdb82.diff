[+++ b/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java, +		List<EventListenerFactory> factories = new ArrayList<>(beans.values());, +		AnnotationAwareOrderComparator.sort(factories);, +		return factories;, +						(MethodIntrospector.MetadataLookup<EventListener>) method ->, +								AnnotatedElementUtils.findMergedAnnotation(method, EventListener.class));, +++ b/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java, +		List<EventListenerFactory> factories = new ArrayList<>(beans.values());, +		AnnotationAwareOrderComparator.sort(factories);, +		return factories;, +						(MethodIntrospector.MetadataLookup<EventListener>) method ->, +								AnnotatedElementUtils.findMergedAnnotation(method, EventListener.class));, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java, +import java.util.ArrayList;, +import java.util.List;, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +			Map<String, SchedulingConfigurer> beans =, +			List<SchedulingConfigurer> configurers = new ArrayList<>(beans.values());, +			AnnotationAwareOrderComparator.sort(configurers);, +			for (SchedulingConfigurer configurer : configurers) {, +++ b/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java, +		List<EventListenerFactory> factories = new ArrayList<>(beans.values());, +		AnnotationAwareOrderComparator.sort(factories);, +		return factories;, +						(MethodIntrospector.MetadataLookup<EventListener>) method ->, +								AnnotatedElementUtils.findMergedAnnotation(method, EventListener.class));, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java, +import java.util.ArrayList;, +import java.util.List;, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +			Map<String, SchedulingConfigurer> beans =, +			List<SchedulingConfigurer> configurers = new ArrayList<>(beans.values());, +			AnnotationAwareOrderComparator.sort(configurers);, +			for (SchedulingConfigurer configurer : configurers) {, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java, +import java.util.ArrayList;, +import java.util.List;, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +			Map<String, JmsListenerConfigurer> beans =, +			List<JmsListenerConfigurer> configurers = new ArrayList<>(beans.values());, +			AnnotationAwareOrderComparator.sort(configurers);, +			for (JmsListenerConfigurer configurer : configurers) {, +++ b/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java, +		List<EventListenerFactory> factories = new ArrayList<>(beans.values());, +		AnnotationAwareOrderComparator.sort(factories);, +		return factories;, +						(MethodIntrospector.MetadataLookup<EventListener>) method ->, +								AnnotatedElementUtils.findMergedAnnotation(method, EventListener.class));, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java, +import java.util.ArrayList;, +import java.util.List;, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +			Map<String, SchedulingConfigurer> beans =, +			List<SchedulingConfigurer> configurers = new ArrayList<>(beans.values());, +			AnnotationAwareOrderComparator.sort(configurers);, +			for (SchedulingConfigurer configurer : configurers) {, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java, +import java.util.ArrayList;, +import java.util.List;, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +			Map<String, JmsListenerConfigurer> beans =, +			List<JmsListenerConfigurer> configurers = new ArrayList<>(beans.values());, +			AnnotationAwareOrderComparator.sort(configurers);, +			for (JmsListenerConfigurer configurer : configurers) {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceUrlProvider.java, +		Map<String, SimpleUrlHandlerMapping> beans = context.getBeansOfType(SimpleUrlHandlerMapping.class);, +		List<SimpleUrlHandlerMapping> mappings = new ArrayList<>(beans.values());, +++ b/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java, +		List<EventListenerFactory> factories = new ArrayList<>(beans.values());, +		AnnotationAwareOrderComparator.sort(factories);, +		return factories;, +						(MethodIntrospector.MetadataLookup<EventListener>) method ->, +								AnnotatedElementUtils.findMergedAnnotation(method, EventListener.class));, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java, +import java.util.ArrayList;, +import java.util.List;, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +			Map<String, SchedulingConfigurer> beans =, +			List<SchedulingConfigurer> configurers = new ArrayList<>(beans.values());, +			AnnotationAwareOrderComparator.sort(configurers);, +			for (SchedulingConfigurer configurer : configurers) {, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java, +import java.util.ArrayList;, +import java.util.List;, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +			Map<String, JmsListenerConfigurer> beans =, +			List<JmsListenerConfigurer> configurers = new ArrayList<>(beans.values());, +			AnnotationAwareOrderComparator.sort(configurers);, +			for (JmsListenerConfigurer configurer : configurers) {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceUrlProvider.java, +		Map<String, SimpleUrlHandlerMapping> beans = context.getBeansOfType(SimpleUrlHandlerMapping.class);, +		List<SimpleUrlHandlerMapping> mappings = new ArrayList<>(beans.values());, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlProvider.java, +		Map<String, SimpleUrlHandlerMapping> beans = appContext.getBeansOfType(SimpleUrlHandlerMapping.class);, +		List<SimpleUrlHandlerMapping> mappings = new ArrayList<>(beans.values());, +		AnnotationAwareOrderComparator.sort(mappings);, +		for (SimpleUrlHandlerMapping mapping : mappings) {, +			for (String pattern : mapping.getHandlerMap().keySet()) {, +				Object handler = mapping.getHandlerMap().get(pattern);]