[+++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java, +public class SchedulerFactoryBean extends SchedulerAccessor implements FactoryBean<Scheduler>,, +		BeanNameAware, ApplicationContextAware, InitializingBean, DisposableBean, SmartLifecycle {, +	// Implementation of SmartLifecycle interface, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java, +public class SchedulerFactoryBean extends SchedulerAccessor implements FactoryBean<Scheduler>,, +		BeanNameAware, ApplicationContextAware, InitializingBean, DisposableBean, SmartLifecycle {, +	// Implementation of SmartLifecycle interface, +++ b/spring-core/src/main/java/org/springframework/util/concurrent/SettableListenableFuture.java, +, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java, +public class SchedulerFactoryBean extends SchedulerAccessor implements FactoryBean<Scheduler>,, +		BeanNameAware, ApplicationContextAware, InitializingBean, DisposableBean, SmartLifecycle {, +	// Implementation of SmartLifecycle interface, +++ b/spring-core/src/main/java/org/springframework/util/concurrent/SettableListenableFuture.java, +, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java, + * Copyright 2002-2014 the original author or authors., +		implements BeanNameAware, DisposableBean, SmartLifecycle {, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java, +public class SchedulerFactoryBean extends SchedulerAccessor implements FactoryBean<Scheduler>,, +		BeanNameAware, ApplicationContextAware, InitializingBean, DisposableBean, SmartLifecycle {, +	// Implementation of SmartLifecycle interface, +++ b/spring-core/src/main/java/org/springframework/util/concurrent/SettableListenableFuture.java, +, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java, + * Copyright 2002-2014 the original author or authors., +		implements BeanNameAware, DisposableBean, SmartLifecycle {, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleBufferingAsyncClientHttpRequest.java, + * Copyright 2002-2014 the original author or authors., + * @see org.springframework.http.client.SimpleClientHttpRequestFactory#createRequest, +, +, +, +, +		return this.taskExecutor.submitListenable(new Callable<ClientHttpResponse>() {, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java, +public class SchedulerFactoryBean extends SchedulerAccessor implements FactoryBean<Scheduler>,, +		BeanNameAware, ApplicationContextAware, InitializingBean, DisposableBean, SmartLifecycle {, +	// Implementation of SmartLifecycle interface, +++ b/spring-core/src/main/java/org/springframework/util/concurrent/SettableListenableFuture.java, +, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java, + * Copyright 2002-2014 the original author or authors., +		implements BeanNameAware, DisposableBean, SmartLifecycle {, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleBufferingAsyncClientHttpRequest.java, + * Copyright 2002-2014 the original author or authors., + * @see org.springframework.http.client.SimpleClientHttpRequestFactory#createRequest, +, +, +, +, +		return this.taskExecutor.submitListenable(new Callable<ClientHttpResponse>() {, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleStreamingAsyncClientHttpRequest.java, + * Copyright 2002-2014 the original author or authors., + * standard Java facilities to execute streaming requests. Created via the {@link, + * @see org.springframework.http.client.SimpleClientHttpRequestFactory#createRequest, +, +, +, +	protected ListenableFuture<ClientHttpResponse> executeInternal(final HttpHeaders headers) throws IOException {, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java, +public class SchedulerFactoryBean extends SchedulerAccessor implements FactoryBean<Scheduler>,, +		BeanNameAware, ApplicationContextAware, InitializingBean, DisposableBean, SmartLifecycle {, +	// Implementation of SmartLifecycle interface, +++ b/spring-core/src/main/java/org/springframework/util/concurrent/SettableListenableFuture.java, +, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java, + * Copyright 2002-2014 the original author or authors., +		implements BeanNameAware, DisposableBean, SmartLifecycle {, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleBufferingAsyncClientHttpRequest.java, + * Copyright 2002-2014 the original author or authors., + * @see org.springframework.http.client.SimpleClientHttpRequestFactory#createRequest, +, +, +, +, +		return this.taskExecutor.submitListenable(new Callable<ClientHttpResponse>() {, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleStreamingAsyncClientHttpRequest.java, + * Copyright 2002-2014 the original author or authors., + * standard Java facilities to execute streaming requests. Created via the {@link, + * @see org.springframework.http.client.SimpleClientHttpRequestFactory#createRequest, +, +, +, +	protected ListenableFuture<ClientHttpResponse> executeInternal(final HttpHeaders headers) throws IOException {, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, +	 * <p><b>Supported at the type level as well as at the method level!</b>, +	 * When used on both levels, a combined name is derived by concatenation, +	 * with "#" as separator., +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java, +public class SchedulerFactoryBean extends SchedulerAccessor implements FactoryBean<Scheduler>,, +		BeanNameAware, ApplicationContextAware, InitializingBean, DisposableBean, SmartLifecycle {, +	// Implementation of SmartLifecycle interface, +++ b/spring-core/src/main/java/org/springframework/util/concurrent/SettableListenableFuture.java, +, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java, + * Copyright 2002-2014 the original author or authors., +		implements BeanNameAware, DisposableBean, SmartLifecycle {, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleBufferingAsyncClientHttpRequest.java]