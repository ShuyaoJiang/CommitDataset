[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java, +		super.afterPropertiesSet();, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java, +		super.afterPropertiesSet();, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMappingTests.java, +import static org.junit.Assert.assertArrayEquals;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +import java.lang.reflect.Method;, +import java.util.HashSet;, +import java.util.Set;, +import org.springframework.stereotype.Controller;, +import org.springframework.web.bind.annotation.RequestMapping;, +import org.springframework.web.servlet.mvc.method.RequestMappingInfo;, +	public void useRegsiteredSuffixPatternMatchInitialization() {, +, +		Map<String, MediaType> fileExtensions = Collections.singletonMap("json", MediaType.APPLICATION_JSON);, +		PathExtensionContentNegotiationStrategy strategy = new PathExtensionContentNegotiationStrategy(fileExtensions);, +		ContentNegotiationManager manager = new ContentNegotiationManager(strategy);, +, +		final Set<String> extensions = new HashSet<String>();, +, +		RequestMappingHandlerMapping hm = new RequestMappingHandlerMapping() {, +			@Override, +			protected RequestMappingInfo getMappingForMethod(Method method, Class<?> handlerType) {, +				extensions.addAll(getFileExtensions());, +				return super.getMappingForMethod(method, handlerType);, +			}, +		};, +, +		StaticWebApplicationContext wac = new StaticWebApplicationContext();, +		wac.registerSingleton("testController", TestController.class);, +		wac.refresh();, +, +		hm.setContentNegotiationManager(manager);, +		hm.setUseRegisteredSuffixPatternMatch(true);, +		hm.setApplicationContext(wac);, +		hm.afterPropertiesSet();, +, +		assertEquals(Collections.singleton("json"), extensions);, +	}, +, +	@Test, +, +	@Controller, +	static class TestController {, +, +		@RequestMapping, +		public void handle() {, +		}, +	}, +]