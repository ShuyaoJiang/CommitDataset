[+++ b/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java, +			original.forEach(, +				(attrName, attrValue), +					-> this.propertyValueList.add(new PropertyValue(attrName.toString(), attrValue)), +			);, +			other.forEach(, +				(attrName, attrValue), +					-> addPropertyValue(new PropertyValue(attrName.toString(), attrValue)), +			);, +++ b/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java, +			original.forEach(, +				(attrName, attrValue), +					-> this.propertyValueList.add(new PropertyValue(attrName.toString(), attrValue)), +			);, +			other.forEach(, +				(attrName, attrValue), +					-> addPropertyValue(new PropertyValue(attrName.toString(), attrValue)), +			);, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +			this.customEditors.forEach((clazz, propertyEditor) -> target.registerCustomEditor(clazz, propertyEditor));, +++ b/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java, +			original.forEach(, +				(attrName, attrValue), +					-> this.propertyValueList.add(new PropertyValue(attrName.toString(), attrValue)), +			);, +			other.forEach(, +				(attrName, attrValue), +					-> addPropertyValue(new PropertyValue(attrName.toString(), attrValue)), +			);, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +			this.customEditors.forEach((clazz, propertyEditor) -> target.registerCustomEditor(clazz, propertyEditor));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConstructorArgumentValues.java, +			other.indexedArgumentValues.forEach(, +				(index, argValue) -> addOrMergeIndexedArgumentValue(index, argValue.copy()), +			);, +			other.genericArgumentValues.stream(), +					.filter(valueHolder -> !this.genericArgumentValues.contains(valueHolder)), +					.forEach(valueHolder -> addOrMergeGenericArgumentValue(valueHolder));, +++ b/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java, +			original.forEach(, +				(attrName, attrValue), +					-> this.propertyValueList.add(new PropertyValue(attrName.toString(), attrValue)), +			);, +			other.forEach(, +				(attrName, attrValue), +					-> addPropertyValue(new PropertyValue(attrName.toString(), attrValue)), +			);, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +			this.customEditors.forEach((clazz, propertyEditor) -> target.registerCustomEditor(clazz, propertyEditor));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConstructorArgumentValues.java, +			other.indexedArgumentValues.forEach(, +				(index, argValue) -> addOrMergeIndexedArgumentValue(index, argValue.copy()), +			);, +			other.genericArgumentValues.stream(), +					.filter(valueHolder -> !this.genericArgumentValues.contains(valueHolder)), +					.forEach(valueHolder -> addOrMergeGenericArgumentValue(valueHolder));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/CustomEditorConfigurer.java, +import java.util.Arrays;, +			Arrays.stream(this.propertyEditorRegistrars).forEach(beanFactory::addPropertyEditorRegistrar);, +			this.customEditors.forEach(beanFactory::registerCustomEditor);, +++ b/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java, +			original.forEach(, +				(attrName, attrValue), +					-> this.propertyValueList.add(new PropertyValue(attrName.toString(), attrValue)), +			);, +			other.forEach(, +				(attrName, attrValue), +					-> addPropertyValue(new PropertyValue(attrName.toString(), attrValue)), +			);, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +			this.customEditors.forEach((clazz, propertyEditor) -> target.registerCustomEditor(clazz, propertyEditor));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConstructorArgumentValues.java, +			other.indexedArgumentValues.forEach(, +				(index, argValue) -> addOrMergeIndexedArgumentValue(index, argValue.copy()), +			);, +			other.genericArgumentValues.stream(), +					.filter(valueHolder -> !this.genericArgumentValues.contains(valueHolder)), +					.forEach(valueHolder -> addOrMergeGenericArgumentValue(valueHolder));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/CustomEditorConfigurer.java, +import java.util.Arrays;, +			Arrays.stream(this.propertyEditorRegistrars).forEach(beanFactory::addPropertyEditorRegistrar);, +			this.customEditors.forEach(beanFactory::registerCustomEditor);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlMapFactoryBean.java, +		map.forEach((key, value) -> {, +		});, +++ b/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java, +			original.forEach(, +				(attrName, attrValue), +					-> this.propertyValueList.add(new PropertyValue(attrName.toString(), attrValue)), +			);, +			other.forEach(, +				(attrName, attrValue), +					-> addPropertyValue(new PropertyValue(attrName.toString(), attrValue)), +			);, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +			this.customEditors.forEach((clazz, propertyEditor) -> target.registerCustomEditor(clazz, propertyEditor));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConstructorArgumentValues.java, +			other.indexedArgumentValues.forEach(, +				(index, argValue) -> addOrMergeIndexedArgumentValue(index, argValue.copy()), +			);]