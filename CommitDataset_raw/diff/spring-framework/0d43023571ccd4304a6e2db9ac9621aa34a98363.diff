[+++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/SessionFactoryBuilderSupport.java, +	protected void executeSchemaScript(Connection con, String[] sql) throws SQLException {, +	public void setConfigLocation(Resource configLocation) {, +	public void setCacheableMappingLocations(Resource[] cacheableMappingLocations) {, +	public void setConfigLocations(Resource[] configLocations) {, +	public void setLobHandler(LobHandler lobHandler) {, +	public This setMappingResources(String[] mappingResources) {, +	public This setMappingJarLocations(Resource[] mappingJarLocations) {, +	public This setMappingDirectoryLocations(Resource[] mappingDirectoryLocations) {, +	public This setMappingLocations(Resource[] mappingLocations) {, +	public This setFilterDefinitions(FilterDefinition[] filterDefinitions) {, +	public This setTypeDefinitions(TypeDefinitionBean[] typeDefinitions) {, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/SessionFactoryBuilderSupport.java, +	protected void executeSchemaScript(Connection con, String[] sql) throws SQLException {, +	public void setConfigLocation(Resource configLocation) {, +	public void setCacheableMappingLocations(Resource[] cacheableMappingLocations) {, +	public void setConfigLocations(Resource[] configLocations) {, +	public void setLobHandler(LobHandler lobHandler) {, +	public This setMappingResources(String[] mappingResources) {, +	public This setMappingJarLocations(Resource[] mappingJarLocations) {, +	public This setMappingDirectoryLocations(Resource[] mappingDirectoryLocations) {, +	public This setMappingLocations(Resource[] mappingLocations) {, +	public This setFilterDefinitions(FilterDefinition[] filterDefinitions) {, +	public This setTypeDefinitions(TypeDefinitionBean[] typeDefinitions) {, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBuilder.java, +	public AnnotationSessionFactoryBuilder setAnnotatedPackages(String[] annotatedPackages) {, +	public AnnotationSessionFactoryBuilder setEntityTypeFilters(TypeFilter[] entityTypeFilters) {, +	public void setResourcePatternResolver(ResourcePatternResolver resourcePatternResolver) {]