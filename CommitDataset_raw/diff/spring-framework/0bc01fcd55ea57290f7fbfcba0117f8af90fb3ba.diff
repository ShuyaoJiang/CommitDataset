[+++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/SingleColumnRowMapperTests.java, +, +import static org.mockito.BDDMockito.*;, +, +, +, +		public MyLocalDateTime(LocalDateTime value) {, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/SingleColumnRowMapperTests.java, +, +import static org.mockito.BDDMockito.*;, +, +, +, +		public MyLocalDateTime(LocalDateTime value) {, +++ b/spring-web/src/main/java/org/springframework/web/filter/ShallowEtagHeaderFilter.java, + * Copyright 2002-2018 the original author or authors., +			if (requestETag != null && ("*".equals(requestETag) || responseETag.equals(requestETag) ||, +					responseETag.replaceFirst("^W/", "").equals(requestETag.replaceFirst("^W/", "")))) {, +	 * @return {@code true} if eligible for ETag generation, {@code false} otherwise, +		if (responseStatusCode >= 200 && responseStatusCode < 300 && HttpMethod.GET.matches(method)) {, +			return (cacheControl == null || !cacheControl.contains(DIRECTIVE_NO_STORE));, +		// length of W/ + " + 0 + 32bits md5 hash + ", +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/SingleColumnRowMapperTests.java, +, +import static org.mockito.BDDMockito.*;, +, +, +, +		public MyLocalDateTime(LocalDateTime value) {, +++ b/spring-web/src/main/java/org/springframework/web/filter/ShallowEtagHeaderFilter.java, + * Copyright 2002-2018 the original author or authors., +			if (requestETag != null && ("*".equals(requestETag) || responseETag.equals(requestETag) ||, +					responseETag.replaceFirst("^W/", "").equals(requestETag.replaceFirst("^W/", "")))) {, +	 * @return {@code true} if eligible for ETag generation, {@code false} otherwise, +		if (responseStatusCode >= 200 && responseStatusCode < 300 && HttpMethod.GET.matches(method)) {, +			return (cacheControl == null || !cacheControl.contains(DIRECTIVE_NO_STORE));, +		// length of W/ + " + 0 + 32bits md5 hash + ", +++ b/src/docs/asciidoc/core/core-validation.adoc, +formatting support based on the http://joda-time.sourceforge.net[Joda-Time library]., +format java.util.Date, java.util.Calendar, java.util.Long, or Joda-Time fields., +you use the Joda-Time library., +format. This example does not depend on the Joda-Time library:, +Joda-Time provides separate distinct types to represent `date`, `time` and `date-time`, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/SingleColumnRowMapperTests.java, +, +import static org.mockito.BDDMockito.*;, +, +, +, +		public MyLocalDateTime(LocalDateTime value) {, +++ b/spring-web/src/main/java/org/springframework/web/filter/ShallowEtagHeaderFilter.java, + * Copyright 2002-2018 the original author or authors., +			if (requestETag != null && ("*".equals(requestETag) || responseETag.equals(requestETag) ||, +					responseETag.replaceFirst("^W/", "").equals(requestETag.replaceFirst("^W/", "")))) {, +	 * @return {@code true} if eligible for ETag generation, {@code false} otherwise, +		if (responseStatusCode >= 200 && responseStatusCode < 300 && HttpMethod.GET.matches(method)) {, +			return (cacheControl == null || !cacheControl.contains(DIRECTIVE_NO_STORE));, +		// length of W/ + " + 0 + 32bits md5 hash + ", +++ b/src/docs/asciidoc/core/core-validation.adoc, +formatting support based on the http://joda-time.sourceforge.net[Joda-Time library]., +format java.util.Date, java.util.Calendar, java.util.Long, or Joda-Time fields., +you use the Joda-Time library., +format. This example does not depend on the Joda-Time library:, +Joda-Time provides separate distinct types to represent `date`, `time` and `date-time`, +++ b/src/docs/asciidoc/web/webflux.adoc, +the `@NumberFormat` and `@DateTimeFormat` annotations. Full support for the Joda-Time, +formatting library is also installed if Joda-Time is present on the classpath., +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/SingleColumnRowMapperTests.java, +, +import static org.mockito.BDDMockito.*;, +, +, +, +		public MyLocalDateTime(LocalDateTime value) {, +++ b/spring-web/src/main/java/org/springframework/web/filter/ShallowEtagHeaderFilter.java, + * Copyright 2002-2018 the original author or authors., +			if (requestETag != null && ("*".equals(requestETag) || responseETag.equals(requestETag) ||, +					responseETag.replaceFirst("^W/", "").equals(requestETag.replaceFirst("^W/", "")))) {, +	 * @return {@code true} if eligible for ETag generation, {@code false} otherwise, +		if (responseStatusCode >= 200 && responseStatusCode < 300 && HttpMethod.GET.matches(method)) {, +			return (cacheControl == null || !cacheControl.contains(DIRECTIVE_NO_STORE));, +		// length of W/ + " + 0 + 32bits md5 hash + ", +++ b/src/docs/asciidoc/core/core-validation.adoc, +formatting support based on the http://joda-time.sourceforge.net[Joda-Time library]., +format java.util.Date, java.util.Calendar, java.util.Long, or Joda-Time fields., +you use the Joda-Time library., +format. This example does not depend on the Joda-Time library:, +Joda-Time provides separate distinct types to represent `date`, `time` and `date-time`, +++ b/src/docs/asciidoc/web/webflux.adoc, +the `@NumberFormat` and `@DateTimeFormat` annotations. Full support for the Joda-Time, +formatting library is also installed if Joda-Time is present on the classpath., +++ b/src/docs/asciidoc/web/webmvc.adoc, +Applications can declare the infrastructure beans listed in <<mvc-servlet-special-bean-types>>, +`WebApplicationContext` for each special bean. If there are no matching bean types,, +it falls back on the default types listed in, +You do not need to understand the underlying beans created by the MVC Java config and, +the MVC namespace but if you want to learn more, see <<mvc-servlet-special-bean-types>>, +and <<mvc-servlet-config>>., +In XML check attributes and sub-elements of `<mvc:annotation-driven/>`. You can, +view the http://schema.spring.io/mvc/spring-mvc.xsd[Spring MVC XML schema] or use]