[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AutowireUtils.java, +	 * thereof, potentially substituting type variables (must not be {@code null}), +		Assert.notNull(containingClass, "Containing class must not be null");, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AutowireUtils.java, +	 * thereof, potentially substituting type variables (must not be {@code null}), +		Assert.notNull(containingClass, "Containing class must not be null");, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/support/AutowireUtilsTests.java, +	public void resolveDependencyPreconditionsForContainingClass() throws Exception {, +		exception.expect(IllegalArgumentException.class);, +		exception.expectMessage("Containing class must not be null");, +		AutowireUtils.resolveDependency(getParameter(), 0, null, null);, +	}, +	@Test, +	public void resolveDependencyPreconditionsForBeanFactory() throws Exception {, +		AutowireUtils.resolveDependency(getParameter(), 0, getClass(), null);, +	}, +, +	private Parameter getParameter() throws NoSuchMethodException {, +		Method method = getClass().getDeclaredMethod("autowirableMethod", String.class, String.class, String.class, String.class);, +		return method.getParameters()[0];]