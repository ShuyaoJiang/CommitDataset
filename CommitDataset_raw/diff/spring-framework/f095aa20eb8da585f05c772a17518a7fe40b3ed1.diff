[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, + * sends messages back on the TCP connection, those messages are enriched with the, + * session id of the client and sent back downstream through the {@link MessageChannel}, + * provided to the constructor., + * <p>This class also automatically opens a default "system" TCP connection to the, + * message broker that is used for sending messages that originate from the server, + * application (as opposed to from a client). Such messages are not associated with, + * any client and therefore do not have a session id header. The "system" connection, + * is effectively shared and cannot be used to receive messages. Several properties, + * are provided to configure the "system" connection including:, + * <li>{@link #setSystemLogin}</li>, + * <li>{@link #setSystemPasscode}</li>, + * <li>{@link #setSystemHeartbeatSendInterval}</li>, + * <li>{@link #setSystemHeartbeatReceiveInterval}</li>, +	// STOMP recommends error of margin for receiving heartbeats, +	private static final long HEARTBEAT_MULTIPLIER = 3;, +, +	/**, +	 * A heartbeat is setup once a CONNECTED frame is received which contains the heartbeat settings, +	 * we need. If we don't receive CONNECTED within a minute, the connection is closed proactively., +	 */, +	private static final int MAX_TIME_TO_CONNECTED_FRAME = 60 * 1000;, +, +	private String virtualHost;, +, +	private final Map<String, StompConnectionHandler> connectionHandlers = new ConcurrentHashMap<>();, +, +, +	/**, +	 * Set the interval, in milliseconds, at which the "system" connection will, in the, +	 * absence of any other data being sent, send a heartbeat to the STOMP broker. A value, +	 * of zero will prevent heartbeats from being sent to the broker., +	 * <p>The default value is 10000., +	 * <p>See class-level documentation for more information on the "system" connection., +	 */, +	public void setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {, +		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval;, +	}, +, +	/**, +	 * Return the interval, in milliseconds, at which the "system" connection will, +	 * send heartbeats to the STOMP broker., +	 */, +	public long getSystemHeartbeatSendInterval() {, +		return this.systemHeartbeatSendInterval;, +	}, +, +	/**, +	 * Set the maximum interval, in milliseconds, at which the "system" connection, +	 * expects, in the absence of any other data, to receive a heartbeat from the STOMP, +	 * broker. A value of zero will configure the connection to expect not to receive, +	 * heartbeats from the broker., +	 * <p>The default value is 10000., +	 * <p>See class-level documentation for more information on the "system" connection., +	 */, +	public void setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {, +		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval;, +	}, +, +	/**, +	 * Return the interval, in milliseconds, at which the "system" connection expects, +	 * to receive heartbeats from the STOMP broker., +	 */, +	public long getSystemHeartbeatReceiveInterval() {, +		return this.systemHeartbeatReceiveInterval;, +	}, +, +	 * <p>By default {@link ReactorNettyTcpClient} is used., +	 * Get the configured TCP client (never {@code null} unless not configured, +	 * hence a default implementation initialized)., +	/**, +	 * Return the current count of TCP connection to the broker., +	 */, +	public int getConnectionCount() {, +		return this.connectionHandlers.size();, +	}, +, +, +, +		public Void call() {, +			return (connectionHandlers.size() + " sessions, " + relayHost + ":" + relayPort +, +					this.connected.get() + ")-DISCONNECT(" + this.disconnect.get() + ")");, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, + * sends messages back on the TCP connection, those messages are enriched with the, + * session id of the client and sent back downstream through the {@link MessageChannel}, + * provided to the constructor., + * <p>This class also automatically opens a default "system" TCP connection to the, + * message broker that is used for sending messages that originate from the server, + * application (as opposed to from a client). Such messages are not associated with, + * any client and therefore do not have a session id header. The "system" connection, + * is effectively shared and cannot be used to receive messages. Several properties, + * are provided to configure the "system" connection including:, + * <li>{@link #setSystemLogin}</li>, + * <li>{@link #setSystemPasscode}</li>, + * <li>{@link #setSystemHeartbeatSendInterval}</li>, + * <li>{@link #setSystemHeartbeatReceiveInterval}</li>, +	// STOMP recommends error of margin for receiving heartbeats, +	private static final long HEARTBEAT_MULTIPLIER = 3;, +, +	/**]