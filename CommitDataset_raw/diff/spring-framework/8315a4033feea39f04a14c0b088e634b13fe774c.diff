[+++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMappingTests.java, +import java.util.ArrayList;, +	@Test // SPR-14988, +	public void getMappingOverridesConsumesFromTypeLevelAnnotation() throws Exception {, +		RequestMappingInfo requestMappingInfo = assertComposedAnnotationMapping(RequestMethod.GET);, +, +		assertArrayEquals(new MediaType[]{MediaType.ALL}, new ArrayList<>(, +				requestMappingInfo.getConsumesCondition().getConsumableMediaTypes()).toArray());, +	}, +, +	@RequestMapping(consumes = MediaType.APPLICATION_JSON_VALUE), +		@GetMapping(value = "/get", consumes = MediaType.ALL_VALUE), +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMappingTests.java, +import java.util.ArrayList;, +	@Test // SPR-14988, +	public void getMappingOverridesConsumesFromTypeLevelAnnotation() throws Exception {, +		RequestMappingInfo requestMappingInfo = assertComposedAnnotationMapping(RequestMethod.GET);, +, +		assertArrayEquals(new MediaType[]{MediaType.ALL}, new ArrayList<>(, +				requestMappingInfo.getConsumesCondition().getConsumableMediaTypes()).toArray());, +	}, +, +	@RequestMapping(consumes = MediaType.APPLICATION_JSON_VALUE), +		@GetMapping(value = "/get", consumes = MediaType.ALL_VALUE), +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/GetMapping.java, +	 * Alias for {@link RequestMapping#consumes}., +	 * @since 4.3.5, +	 */, +	@AliasFor(annotation = RequestMapping.class), +	String[] consumes() default {};, +, +	/**, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMappingTests.java, +import java.util.ArrayList;, +	@Test // SPR-14988, +	public void getMappingOverridesConsumesFromTypeLevelAnnotation() throws Exception {, +		RequestMappingInfo requestMappingInfo = assertComposedAnnotationMapping(RequestMethod.GET);, +, +		assertArrayEquals(new MediaType[]{MediaType.ALL}, new ArrayList<>(, +				requestMappingInfo.getConsumesCondition().getConsumableMediaTypes()).toArray());, +	}, +, +	@RequestMapping(consumes = MediaType.APPLICATION_JSON_VALUE), +		@GetMapping(value = "/get", consumes = MediaType.ALL_VALUE), +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/GetMapping.java, +	 * Alias for {@link RequestMapping#consumes}., +	 * @since 4.3.5, +	 */, +	@AliasFor(annotation = RequestMapping.class), +	String[] consumes() default {};, +, +	/**, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMappingTests.java, +import java.util.ArrayList;, +import static org.junit.Assert.assertArrayEquals;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertTrue;, +	@Test // SPR-14988, +	public void getMappingOverridesConsumesFromTypeLevelAnnotation() throws Exception {, +		RequestMappingInfo requestMappingInfo = assertComposedAnnotationMapping(RequestMethod.GET);, +, +		assertArrayEquals(new MediaType[]{MediaType.ALL}, new ArrayList<>(, +				requestMappingInfo.getConsumesCondition().getConsumableMediaTypes()).toArray());, +	}, +, +	@RequestMapping(consumes = MediaType.APPLICATION_JSON_VALUE), +		@GetMapping(value = "/get", consumes = MediaType.ALL_VALUE)]