[+++ b/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java, + * @author Marten Deinum, + * @author Stephane Nicoll, +		implements MBeanExportOperations, BeanClassLoaderAware, BeanFactoryAware, InitializingBean, SmartLifecycle {, +	/**, +	 * Specify the phase in which the MBeans should be exported to the, +	 * JMX domain. The startup order proceeds from lowest to highest, and, +	 * the shutdown order is the reverse of that. By default this value, +	 * is {@code Integer.MAX_VALUE} meaning that MBeans are exported, +	 * as late as possible and removed from the domain as soon as possible., +	 */, +	public void setPhase(int phase) {, +		this.phase = phase;, +	}, +, +	/**, +	 * Set whether to automatically export MBeans after initialization., +	 * <p>Default is "true"; set this to "false" to allow for manual startup, +	 * through the {@link #start()} method., +	 */, +	public void setAutoStartup(boolean autoStartup) {, +		this.autoStartup = autoStartup;, +	}, +, +	public void start() {, +		logger.info("Registering beans for JMX exposure");, +		synchronized (this.lifecycleMonitor) {, +			try {, +				registerBeans();, +				registerNotificationListeners();, +			} catch (RuntimeException ex) {, +				// Unregister beans already registered by this exporter., +				throw ex;, +			}, +		}, +		running = true;, +	}, +, +	@Override, +	public void stop() {, +		logger.info("Unregistering JMX-exposed beans on stop");, +		synchronized (this.lifecycleMonitor) {, +			unregisterNotificationListeners();, +			unregisterBeans();, +			running = false;, +		}, +	}, +, +	@Override, +	public void stop(Runnable callback) {, +		synchronized (this.lifecycleMonitor) {, +			stop();, +			callback.run();, +		}, +	}, +, +	@Override, +	public boolean isRunning() {, +		synchronized (this.lifecycleMonitor) {, +			return this.running;, +		}, +	}, +, +	@Override, +	public boolean isAutoStartup() {, +		return this.autoStartup;, +	}, +, +	@Override, +	public int getPhase() {, +		return this.phase;, +++ b/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java, + * @author Marten Deinum, + * @author Stephane Nicoll, +		implements MBeanExportOperations, BeanClassLoaderAware, BeanFactoryAware, InitializingBean, SmartLifecycle {, +	/**, +	 * Specify the phase in which the MBeans should be exported to the, +	 * JMX domain. The startup order proceeds from lowest to highest, and, +	 * the shutdown order is the reverse of that. By default this value, +	 * is {@code Integer.MAX_VALUE} meaning that MBeans are exported, +	 * as late as possible and removed from the domain as soon as possible., +	 */, +	public void setPhase(int phase) {, +		this.phase = phase;, +	}, +, +	/**, +	 * Set whether to automatically export MBeans after initialization., +	 * <p>Default is "true"; set this to "false" to allow for manual startup, +	 * through the {@link #start()} method., +	 */, +	public void setAutoStartup(boolean autoStartup) {, +		this.autoStartup = autoStartup;, +	}, +, +	public void start() {, +		logger.info("Registering beans for JMX exposure");, +		synchronized (this.lifecycleMonitor) {, +			try {, +				registerBeans();]