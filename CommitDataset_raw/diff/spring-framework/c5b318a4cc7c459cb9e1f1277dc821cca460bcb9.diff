[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +	 * @since 4.3, +					// TODO: Object.class if unresolvable, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +	 * @since 4.3, +					// TODO: Object.class if unresolvable, +++ b/spring-core/src/main/java/org/springframework/core/MethodParameter.java, +				// TODO: Object.class if unresolvable, +	 * Return whether the method/constructor is annotated with the given type., +	 * @param annotationType the annotation type to look for, +	 * @since 4.3, +	 * @see #getMethodAnnotation(Class), +	 */, +	public <A extends Annotation> boolean hasMethodAnnotation(Class<A> annotationType) {, +		return getAnnotatedElement().isAnnotationPresent(annotationType);, +	}, +, +	/**, +	 * Return {@code true} if the parameter has at least one annotation,, +	 * {@code false} if it has none., +	 * @see #getParameterAnnotations(), +	 * Return the parameter annotation of the given type, if available., +	 * @param annotationType the annotation type to look for, +	 * @return the annotation object, or {@code null} if not found, +	@SuppressWarnings("unchecked"), +	public <A extends Annotation> A getParameterAnnotation(Class<A> annotationType) {, +		Annotation[] anns = getParameterAnnotations();, +		for (Annotation ann : anns) {, +			if (annotationType.isInstance(ann)) {, +				return (A) ann;, +			}, +		}, +		return null;, +	}, +, +	/**, +	 * Return whether the parameter is declared with the given annotation type., +	 * @param annotationType the annotation type to look for, +	 * @see #getParameterAnnotation(Class), +	 */, +	public <A extends Annotation> boolean hasParameterAnnotation(Class<A> annotationType) {]