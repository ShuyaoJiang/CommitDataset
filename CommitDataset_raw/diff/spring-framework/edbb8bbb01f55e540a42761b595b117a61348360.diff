[+++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/DurationFormatter.java, +class DurationFormatter implements Formatter<Duration> {, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/DurationFormatter.java, +class DurationFormatter implements Formatter<Duration> {, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.java, +import org.springframework.util.ClassUtils;, +	 * Strictly speaking, this should not be necessary since we formally require JodaTime 2.x., +	 * However, since Joda-Time formatters are being registered automatically, we defensively, +	 * adapt to Joda-Time 1.x when encountered on the classpath. To be removed in Spring 5.0., +	 */, +	private static final boolean jodaTime2Available = ClassUtils.isPresent(, +			"org.joda.time.YearMonth", JodaTimeFormatterRegistrar.class.getClassLoader());, +, +	/**, +		if (jodaTime2Available) {, +			JodaTime2Delegate.registerAdditionalFormatters(registry);, +		}, +, +	/**, +	 * Inner class to avoid a hard dependency on Joda-Time 2.x., +	 */, +	private static class JodaTime2Delegate {, +, +		public static void registerAdditionalFormatters(FormatterRegistry registry) {, +			registry.addFormatterForFieldType(YearMonth.class, new YearMonthFormatter());, +			registry.addFormatterForFieldType(MonthDay.class, new MonthDayFormatter());, +		}, +	}, +, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/DurationFormatter.java, +class DurationFormatter implements Formatter<Duration> {, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.java, +import org.springframework.util.ClassUtils;, +	 * Strictly speaking, this should not be necessary since we formally require JodaTime 2.x., +	 * However, since Joda-Time formatters are being registered automatically, we defensively, +	 * adapt to Joda-Time 1.x when encountered on the classpath. To be removed in Spring 5.0., +	 */, +	private static final boolean jodaTime2Available = ClassUtils.isPresent(, +			"org.joda.time.YearMonth", JodaTimeFormatterRegistrar.class.getClassLoader());, +, +	/**, +		if (jodaTime2Available) {, +			JodaTime2Delegate.registerAdditionalFormatters(registry);, +		}, +, +	/**, +	 * Inner class to avoid a hard dependency on Joda-Time 2.x., +	 */, +	private static class JodaTime2Delegate {, +, +		public static void registerAdditionalFormatters(FormatterRegistry registry) {, +			registry.addFormatterForFieldType(YearMonth.class, new YearMonthFormatter());, +			registry.addFormatterForFieldType(MonthDay.class, new MonthDayFormatter());, +		}, +	}, +, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/MonthDayFormatter.java, +class MonthDayFormatter implements Formatter<MonthDay> {, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/DurationFormatter.java, +class DurationFormatter implements Formatter<Duration> {, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.java, +import org.springframework.util.ClassUtils;, +	 * Strictly speaking, this should not be necessary since we formally require JodaTime 2.x., +	 * However, since Joda-Time formatters are being registered automatically, we defensively, +	 * adapt to Joda-Time 1.x when encountered on the classpath. To be removed in Spring 5.0., +	 */, +	private static final boolean jodaTime2Available = ClassUtils.isPresent(, +			"org.joda.time.YearMonth", JodaTimeFormatterRegistrar.class.getClassLoader());, +, +	/**, +		if (jodaTime2Available) {, +			JodaTime2Delegate.registerAdditionalFormatters(registry);, +		}, +, +	/**, +	 * Inner class to avoid a hard dependency on Joda-Time 2.x., +	 */, +	private static class JodaTime2Delegate {, +, +		public static void registerAdditionalFormatters(FormatterRegistry registry) {, +			registry.addFormatterForFieldType(YearMonth.class, new YearMonthFormatter());, +			registry.addFormatterForFieldType(MonthDay.class, new MonthDayFormatter());, +		}, +	}, +, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/MonthDayFormatter.java, +class MonthDayFormatter implements Formatter<MonthDay> {, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/PeriodFormatter.java, +class PeriodFormatter implements Formatter<Period> {, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/DurationFormatter.java, +class DurationFormatter implements Formatter<Duration> {, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.java, +import org.springframework.util.ClassUtils;, +	 * Strictly speaking, this should not be necessary since we formally require JodaTime 2.x., +	 * However, since Joda-Time formatters are being registered automatically, we defensively, +	 * adapt to Joda-Time 1.x when encountered on the classpath. To be removed in Spring 5.0., +	 */, +	private static final boolean jodaTime2Available = ClassUtils.isPresent(, +			"org.joda.time.YearMonth", JodaTimeFormatterRegistrar.class.getClassLoader());, +]