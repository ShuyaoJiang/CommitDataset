[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/HeaderAssertions.java, +	public WebTestClient.ResponseSpec exists(String name) {, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/HeaderAssertions.java, +	public WebTestClient.ResponseSpec exists(String name) {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/HeaderResultMatchers.java, +	 * Assert that the named response header exists., +	public ResultMatcher exists(final String name) {, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/HeaderAssertions.java, +	public WebTestClient.ResponseSpec exists(String name) {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/HeaderResultMatchers.java, +	 * Assert that the named response header exists., +	public ResultMatcher exists(final String name) {, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/HeaderAssertionTests.java, +	public void exists() {, +		assertions.exists("Content-Type");, +			assertions.exists("Framework");, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/HeaderAssertions.java, +	public WebTestClient.ResponseSpec exists(String name) {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/HeaderResultMatchers.java, +	 * Assert that the named response header exists., +	public ResultMatcher exists(final String name) {, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/HeaderAssertionTests.java, +	public void exists() {, +		assertions.exists("Content-Type");, +			assertions.exists("Framework");, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/standalone/resultmatchers/HeaderAssertionTests.java, +	@Test, +	public void exists() throws Exception {, +		this.mockMvc.perform(get("/persons/1")).andExpect(header().exists(LAST_MODIFIED));, +	}, +, +	@Test(expected = AssertionError.class), +	public void existsFail() throws Exception {, +		this.mockMvc.perform(get("/persons/1")).andExpect(header().exists("X-Custom-Header"));, +	}, +]