[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * @param annotationType the annotation class to look for, both locally and as a meta-annotation, +	 * @param clazz the class on which to check for the annotation, or {@code null}, +, +		// Declared locally?, +		if (isAnnotationDeclaredLocally(annotationType, clazz)) {, +			return clazz;, +		}, +, +		// Declared on a stereotype annotation (i.e., as a meta-annotation)?, +		if (!Annotation.class.isAssignableFrom(clazz)) {, +			for (Annotation stereotype : clazz.getAnnotations()) {, +				Class<?> declaringClass = findAnnotationDeclaringClass(annotationType, stereotype.annotationType());, +				if (declaringClass != null) {, +					return declaringClass;, +				}, +			}, +		}, +, +		// Declared on a superclass?, +		return findAnnotationDeclaringClass(annotationType, clazz.getSuperclass());, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * @param annotationType the annotation class to look for, both locally and as a meta-annotation, +	 * @param clazz the class on which to check for the annotation, or {@code null}, +, +		// Declared locally?, +		if (isAnnotationDeclaredLocally(annotationType, clazz)) {, +			return clazz;, +		}, +, +		// Declared on a stereotype annotation (i.e., as a meta-annotation)?, +		if (!Annotation.class.isAssignableFrom(clazz)) {, +			for (Annotation stereotype : clazz.getAnnotations()) {, +				Class<?> declaringClass = findAnnotationDeclaringClass(annotationType, stereotype.annotationType());, +				if (declaringClass != null) {, +					return declaringClass;, +				}, +			}, +		}, +, +		// Declared on a superclass?, +		return findAnnotationDeclaringClass(annotationType, clazz.getSuperclass());, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationUtilsTests.java, +	public void findAnnotationPrefersInteracesOverLocalMetaAnnotations() {, +		Component component = AnnotationUtils.findAnnotation(, +			ClassWithLocalMetaAnnotationAndMetaAnnotatedInterface.class, Component.class);, +, +		// By inspecting ClassWithLocalMetaAnnotationAndMetaAnnotatedInterface, one, +		// might expect that "meta2" should be found; however, with the current, +		// implementation "meta1" will be found., +		assertNotNull(component);, +		assertEquals("meta1", component.value());, +	}, +, +	@Test, +	@Order, +	@Transactional, +	static interface InterfaceWithMetaAnnotation {, +	}, +, +	static class ClassWithLocalMetaAnnotationAndMetaAnnotatedInterface implements InterfaceWithMetaAnnotation {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * @param annotationType the annotation class to look for, both locally and as a meta-annotation, +	 * @param clazz the class on which to check for the annotation, or {@code null}, +, +		// Declared locally?, +		if (isAnnotationDeclaredLocally(annotationType, clazz)) {, +			return clazz;, +		}, +, +		// Declared on a stereotype annotation (i.e., as a meta-annotation)?, +		if (!Annotation.class.isAssignableFrom(clazz)) {, +			for (Annotation stereotype : clazz.getAnnotations()) {, +				Class<?> declaringClass = findAnnotationDeclaringClass(annotationType, stereotype.annotationType());, +				if (declaringClass != null) {, +					return declaringClass;, +				}, +			}, +		}, +, +		// Declared on a superclass?, +		return findAnnotationDeclaringClass(annotationType, clazz.getSuperclass());, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationUtilsTests.java, +	public void findAnnotationPrefersInteracesOverLocalMetaAnnotations() {, +		Component component = AnnotationUtils.findAnnotation(, +			ClassWithLocalMetaAnnotationAndMetaAnnotatedInterface.class, Component.class);, +, +		// By inspecting ClassWithLocalMetaAnnotationAndMetaAnnotatedInterface, one, +		// might expect that "meta2" should be found; however, with the current, +		// implementation "meta1" will be found., +		assertNotNull(component);, +		assertEquals("meta1", component.value());, +	}, +, +	@Test, +	@Order, +	@Transactional, +	static interface InterfaceWithMetaAnnotation {, +	}, +]