[+++ b/spring-web/src/main/java/org/springframework/web/server/support/HttpRequestPathHelper.java, +import java.util.StringTokenizer;, +	 * Parse the given string with matrix variables. An example string would look, +	 * like this {@code "q1=a;q1=b;q2=a,b,c"}. The resulting map would contain, +	 * keys {@code "q1"} and {@code "q2"} with values {@code ["a","b"]} and, +	 * {@code ["a","b","c"]} respectively., +	 * <p>The returned values are decoded unless {@link #setUrlDecode(boolean)}, +	 * is set to {@code true} in which case it is assumed the URL path from, +	 * which the variables were extracted is already decoded through a call to, +	 * {@link #getLookupPathForRequest(ServerWebExchange)}., +	 * @param semicolonContent path parameter content to parse, +	 * @return a map with matrix variable names and values (never {@code null}), +	 */, +	public MultiValueMap<String, String> parseMatrixVariables(ServerWebExchange exchange,, +			String semicolonContent) {, +, +		MultiValueMap<String, String> result = new LinkedMultiValueMap<>();, +		if (!StringUtils.hasText(semicolonContent)) {, +			return result;, +		}, +		StringTokenizer pairs = new StringTokenizer(semicolonContent, ";");, +		while (pairs.hasMoreTokens()) {, +			String pair = pairs.nextToken();, +			int index = pair.indexOf('=');, +			if (index != -1) {, +				String name = pair.substring(0, index);, +				String rawValue = pair.substring(index + 1);, +				for (String value : StringUtils.commaDelimitedListToStringArray(rawValue)) {, +					result.add(name, value);, +				}, +			}, +			else {, +				result.add(pair, "");, +			}, +		}, +		return decodeMatrixVariables(exchange, result);, +	}, +, +	/**, +	private MultiValueMap<String, String> decodeMatrixVariables(ServerWebExchange exchange,, +++ b/spring-web/src/main/java/org/springframework/web/server/support/HttpRequestPathHelper.java, +import java.util.StringTokenizer;, +	 * Parse the given string with matrix variables. An example string would look, +	 * like this {@code "q1=a;q1=b;q2=a,b,c"}. The resulting map would contain, +	 * keys {@code "q1"} and {@code "q2"} with values {@code ["a","b"]} and, +	 * {@code ["a","b","c"]} respectively., +	 * <p>The returned values are decoded unless {@link #setUrlDecode(boolean)}, +	 * is set to {@code true} in which case it is assumed the URL path from, +	 * which the variables were extracted is already decoded through a call to, +	 * {@link #getLookupPathForRequest(ServerWebExchange)}., +	 * @param semicolonContent path parameter content to parse, +	 * @return a map with matrix variable names and values (never {@code null}), +	 */, +	public MultiValueMap<String, String> parseMatrixVariables(ServerWebExchange exchange,, +			String semicolonContent) {, +, +		MultiValueMap<String, String> result = new LinkedMultiValueMap<>();, +		if (!StringUtils.hasText(semicolonContent)) {, +			return result;, +		}, +		StringTokenizer pairs = new StringTokenizer(semicolonContent, ";");, +		while (pairs.hasMoreTokens()) {, +			String pair = pairs.nextToken();, +			int index = pair.indexOf('=');, +			if (index != -1) {, +				String name = pair.substring(0, index);, +				String rawValue = pair.substring(index + 1);, +				for (String value : StringUtils.commaDelimitedListToStringArray(rawValue)) {, +					result.add(name, value);, +				}, +			}, +			else {, +				result.add(pair, "");, +			}, +		}, +		return decodeMatrixVariables(exchange, result);, +	}, +, +	/**, +	private MultiValueMap<String, String> decodeMatrixVariables(ServerWebExchange exchange,, +++ b/spring-web/src/test/java/org/springframework/web/server/support/HttpRequestPathHelperTests.java, +/*, + * Copyright 2002-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.web.server.support;, +, +import java.util.Arrays;, +]