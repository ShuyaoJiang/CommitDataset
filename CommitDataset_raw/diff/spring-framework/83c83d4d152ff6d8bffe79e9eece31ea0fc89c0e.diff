[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +		MediaType mediaType = null;, +			mediaType = MediaType.parseMediaType(mimeType);, +		if (jafPresent && (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType))) {, +			MediaType jafMediaType = ActivationMediaTypeFactory.getMediaType(resource.getFilename());, +			if (jafMediaType != null && !MediaType.APPLICATION_OCTET_STREAM.equals(jafMediaType)) {, +				mediaType = jafMediaType;, +		return mediaType;, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +		MediaType mediaType = null;, +			mediaType = MediaType.parseMediaType(mimeType);, +		if (jafPresent && (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType))) {, +			MediaType jafMediaType = ActivationMediaTypeFactory.getMediaType(resource.getFilename());, +			if (jafMediaType != null && !MediaType.APPLICATION_OCTET_STREAM.equals(jafMediaType)) {, +				mediaType = jafMediaType;, +		return mediaType;, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java, +	private boolean useJaf = jafPresent;, +				mediaType = MediaType.parseMediaType(mimeType);, +			if (this.useJaf && (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType))) {, +				MediaType jafMediaType = ActivationMediaTypeFactory.getMediaType(filename);, +				if (jafMediaType != null && !MediaType.APPLICATION_OCTET_STREAM.equals(jafMediaType)) {, +					mediaType = jafMediaType;, +				}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +		MediaType mediaType = null;, +			mediaType = MediaType.parseMediaType(mimeType);, +		if (jafPresent && (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType))) {, +			MediaType jafMediaType = ActivationMediaTypeFactory.getMediaType(resource.getFilename());, +			if (jafMediaType != null && !MediaType.APPLICATION_OCTET_STREAM.equals(jafMediaType)) {, +				mediaType = jafMediaType;, +		return mediaType;, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java, +	private boolean useJaf = jafPresent;, +				mediaType = MediaType.parseMediaType(mimeType);, +			if (this.useJaf && (mediaType == null || MediaType.APPLICATION_OCTET_STREAM.equals(mediaType))) {, +				MediaType jafMediaType = ActivationMediaTypeFactory.getMediaType(filename);, +				if (jafMediaType != null && !MediaType.APPLICATION_OCTET_STREAM.equals(jafMediaType)) {, +					mediaType = jafMediaType;, +				}, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolverTests.java, +, +import static org.easymock.EasyMock.*;, +import static org.junit.Assert.*;, +, +		StaticWebApplicationContext wac = new StaticWebApplicationContext();, +		wac.setServletContext(new MockServletContext());, +		wac.refresh();, +		viewResolver.setApplicationContext(wac);, +		assertEquals("Invalid content type", new MediaType("application", "vnd.ms-excel"),, +				viewResolver.getMediaTypeFromFilename("test.xls"));, +		assertEquals("Invalid content type", MediaType.APPLICATION_OCTET_STREAM,, +				viewResolver.getMediaTypeFromFilename("test.xls"));]