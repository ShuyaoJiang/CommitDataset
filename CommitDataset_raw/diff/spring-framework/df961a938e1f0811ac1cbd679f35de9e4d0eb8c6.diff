[+++ b/spring-test/src/main/java/org/springframework/test/util/ReflectionTestUtils.java, + * Copyright 2002-2012 the original author or authors., +, +		// SPR-9571: inline Assert.notNull() in order to avoid accidentally invoking, +		// toString() on a non-null target., +		if (field == null) {, +			throw new IllegalArgumentException(String.format("Could not find field [%s] of type [%s] on target [%s]",, +				name, type, target));, +		}, +			logger.debug(String.format("Setting field [%s] of type [%s] on target [%s] to value [%s]", name, type,, +				target,, +				value));, +++ b/spring-test/src/main/java/org/springframework/test/util/ReflectionTestUtils.java, + * Copyright 2002-2012 the original author or authors., +, +		// SPR-9571: inline Assert.notNull() in order to avoid accidentally invoking, +		// toString() on a non-null target., +		if (field == null) {, +			throw new IllegalArgumentException(String.format("Could not find field [%s] of type [%s] on target [%s]",, +				name, type, target));, +		}, +			logger.debug(String.format("Setting field [%s] of type [%s] on target [%s] to value [%s]", name, type,, +				target,, +				value));, +++ b/spring-test/src/test/java/org/springframework/test/util/ReflectionTestUtilsTests.java, + * Copyright 2002-2012 the original author or authors., +import static org.junit.Assert.*;, +import static org.springframework.test.util.ReflectionTestUtils.*;, +, +import org.springframework.test.util.subpackage.LegacyEntity;, +	/**, +	 * Verifies behavior requested in <a href="https://jira.springsource.org/browse/SPR-9571">SPR-9571</a>., +	 */, +	@Test, +	public void setFieldOnLegacyEntityWithSideEffectsInToString() {, +		String testCollaborator = "test collaborator";, +		LegacyEntity entity = new LegacyEntity();, +		setField(entity, "collaborator", testCollaborator, Object.class);, +		assertTrue(entity.toString().contains(testCollaborator));, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/util/ReflectionTestUtils.java, + * Copyright 2002-2012 the original author or authors., +, +		// SPR-9571: inline Assert.notNull() in order to avoid accidentally invoking, +		// toString() on a non-null target., +		if (field == null) {, +			throw new IllegalArgumentException(String.format("Could not find field [%s] of type [%s] on target [%s]",, +				name, type, target));, +		}, +			logger.debug(String.format("Setting field [%s] of type [%s] on target [%s] to value [%s]", name, type,, +				target,, +				value));, +++ b/spring-test/src/test/java/org/springframework/test/util/ReflectionTestUtilsTests.java, + * Copyright 2002-2012 the original author or authors., +import static org.junit.Assert.*;, +import static org.springframework.test.util.ReflectionTestUtils.*;, +, +import org.springframework.test.util.subpackage.LegacyEntity;, +	/**, +	 * Verifies behavior requested in <a href="https://jira.springsource.org/browse/SPR-9571">SPR-9571</a>., +	 */, +	@Test, +	public void setFieldOnLegacyEntityWithSideEffectsInToString() {, +		String testCollaborator = "test collaborator";, +		LegacyEntity entity = new LegacyEntity();, +		setField(entity, "collaborator", testCollaborator, Object.class);, +		assertTrue(entity.toString().contains(testCollaborator));, +	}, +, +++ b/spring-test/src/test/java/org/springframework/test/util/subpackage/LegacyEntity.java, +/*, + * Copyright 2002-2012 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.test.util.subpackage;, +, +import org.springframework.core.style.ToStringCreator;, +, +/**, + * A <em>legacy entity</em> whose {@link #toString()} method has side effects;, + * intended for use in unit tests., + * , + * @author Sam Brannen, + * @since 3.2, + */, +public class LegacyEntity {, +]