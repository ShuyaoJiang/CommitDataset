[+++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified");, +		Assert.state(this.cacheManager != null, "Property 'cacheManager' is required");, +		Assert.state(this.cacheOperationSource != null, "Property 'cacheOperationSources' is required: " +, +			if (cache == null) {, +				throw new IllegalArgumentException("Cannot find cache named '" + cacheName + "' for " + operation);, +			}, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified");, +		Assert.state(this.cacheManager != null, "Property 'cacheManager' is required");, +		Assert.state(this.cacheOperationSource != null, "Property 'cacheOperationSources' is required: " +, +			if (cache == null) {, +				throw new IllegalArgumentException("Cannot find cache named '" + cacheName + "' for " + operation);, +			}, +++ b/spring-context/src/test/java/org/springframework/cache/CacheReproTests.java, +	public void spr11592GetSimple() {, +		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(Spr11592Config.class);, +		Spr11592Service bean = context.getBean(Spr11592Service.class);, +	public void spr11592GetNeverCache(){, +		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(Spr11592Config.class);, +		Spr11592Service bean = context.getBean(Spr11592Service.class);, +	public static class Spr11592Config {, +		public Spr11592Service service() {, +			return new Spr11592Service();, +	public static class Spr11592Service {]