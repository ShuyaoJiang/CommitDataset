[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/MessageBrokerRegistry.java, + * Copyright 2002-2014 the original author or authors., +	private Integer messageBufferSizeLimit;, +, +	/**, +	 * Configure the message buffer size limit in bytes., +	 * @since 4.0.3, +	 */, +	public MessageBrokerRegistry setMessageBufferSizeLimit(Integer messageBufferSizeLimit) {, +		this.messageBufferSizeLimit = messageBufferSizeLimit;, +		return this;, +	}, +, +	/**, +	 * Get the message buffer size limit in bytes., +	 * @since 4.0.3, +	 */, +	public Integer getMessageBufferSizeLimit() {, +		return this.messageBufferSizeLimit;, +	}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/MessageBrokerRegistry.java, + * Copyright 2002-2014 the original author or authors., +	private Integer messageBufferSizeLimit;, +, +	/**, +	 * Configure the message buffer size limit in bytes., +	 * @since 4.0.3, +	 */, +	public MessageBrokerRegistry setMessageBufferSizeLimit(Integer messageBufferSizeLimit) {, +		this.messageBufferSizeLimit = messageBufferSizeLimit;, +		return this;, +	}, +, +	/**, +	 * Get the message buffer size limit in bytes., +	 * @since 4.0.3, +	 */, +	public Integer getMessageBufferSizeLimit() {, +		return this.messageBufferSizeLimit;, +	}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/BufferingStompDecoder.java, + * An extension of {@link org.springframework.messaging.simp.stomp.StompDecoder}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/MessageBrokerRegistry.java, + * Copyright 2002-2014 the original author or authors., +	private Integer messageBufferSizeLimit;, +, +	/**, +	 * Configure the message buffer size limit in bytes., +	 * @since 4.0.3, +	 */, +	public MessageBrokerRegistry setMessageBufferSizeLimit(Integer messageBufferSizeLimit) {, +		this.messageBufferSizeLimit = messageBufferSizeLimit;, +		return this;, +	}, +, +	/**, +	 * Get the message buffer size limit in bytes., +	 * @since 4.0.3, +	 */, +	public Integer getMessageBufferSizeLimit() {, +		return this.messageBufferSizeLimit;, +	}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/BufferingStompDecoder.java, + * An extension of {@link org.springframework.messaging.simp.stomp.StompDecoder}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +		String frameBufferSizeAttribute = element.getAttribute("message-buffer-size");, +		Integer messageBufferSizeLimit = frameBufferSizeAttribute.isEmpty() ? null : Integer.parseInt(frameBufferSizeAttribute);, +, +				clientInChannel, clientOutChannel, userSessionRegistry, messageBufferSizeLimit, parserCxt, source);, +			RuntimeBeanReference userSessionRegistry, Integer messageBufferSizeLimit,, +			ParserContext parserCxt, Object source) {, +		if(messageBufferSizeLimit != null) {, +			stompHandlerDef.getPropertyValues().add("messageBufferSizeLimit", messageBufferSizeLimit);, +		}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/MessageBrokerRegistry.java, + * Copyright 2002-2014 the original author or authors., +	private Integer messageBufferSizeLimit;, +, +	/**, +	 * Configure the message buffer size limit in bytes., +	 * @since 4.0.3, +	 */, +	public MessageBrokerRegistry setMessageBufferSizeLimit(Integer messageBufferSizeLimit) {, +		this.messageBufferSizeLimit = messageBufferSizeLimit;, +		return this;, +	}, +, +	/**, +	 * Get the message buffer size limit in bytes., +	 * @since 4.0.3, +	 */, +	public Integer getMessageBufferSizeLimit() {, +		return this.messageBufferSizeLimit;, +	}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/BufferingStompDecoder.java, + * An extension of {@link org.springframework.messaging.simp.stomp.StompDecoder}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +		String frameBufferSizeAttribute = element.getAttribute("message-buffer-size");, +		Integer messageBufferSizeLimit = frameBufferSizeAttribute.isEmpty() ? null : Integer.parseInt(frameBufferSizeAttribute);, +]