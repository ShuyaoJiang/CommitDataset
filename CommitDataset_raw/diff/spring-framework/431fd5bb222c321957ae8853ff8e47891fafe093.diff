[+++ b/org.springframework.context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java, +, +	// overridable hooks, +, +	 * @return the Map of applicable beans, with bean names as keys and bean instances as values, +	protected Map<String, Lifecycle> getLifecycleBeans() {, +	/**, +	 * Determine the lifecycle phase of the given bean., +	 * <p>The default implementation checks for the {@link Phased} interface., +	 * Can be overridden to apply other/further policies., +	 * @param bean the bean to introspect, +	 * @return the phase an an integer value. The suggested default is 0., +	 * @see Phased, +	 * @see SmartLifecycle, +	 */, +	protected int getPhase(Lifecycle bean) {, +		return (bean instanceof Phased ? ((Phased) bean).getPhase() : 0);, +	/**, +	 * Adapts the Comparable interface onto the lifecycle phase model., +	 */, +	private class LifecycleGroupMember implements Comparable<LifecycleGroupMember> {, +			return (thisOrder == otherOrder ? 0 : (thisOrder < otherOrder) ? -1 : 1);]