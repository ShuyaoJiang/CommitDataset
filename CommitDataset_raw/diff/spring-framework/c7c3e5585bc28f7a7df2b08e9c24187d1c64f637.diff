[+++ b/spring-web/src/main/java/org/springframework/web/filter/ForwardedHeaderFilter.java, +		FORWARDED_HEADER_NAMES.add("X-Forwarded-Ssl");, +++ b/spring-web/src/main/java/org/springframework/web/filter/ForwardedHeaderFilter.java, +		FORWARDED_HEADER_NAMES.add("X-Forwarded-Ssl");, +++ b/spring-web/src/main/java/org/springframework/web/filter/reactive/ForwardedHeaderFilter.java, +		FORWARDED_HEADER_NAMES.add("X-Forwarded-Ssl");, +++ b/spring-web/src/main/java/org/springframework/web/filter/ForwardedHeaderFilter.java, +		FORWARDED_HEADER_NAMES.add("X-Forwarded-Ssl");, +++ b/spring-web/src/main/java/org/springframework/web/filter/reactive/ForwardedHeaderFilter.java, +		FORWARDED_HEADER_NAMES.add("X-Forwarded-Ssl");, +++ b/spring-web/src/test/java/org/springframework/web/filter/ForwardedHeaderFilterTests.java, +	private static final String X_FORWARDED_SSL = "x-forwarded-ssl";, +		testShouldFilter(X_FORWARDED_SSL);, +		this.request.addHeader(X_FORWARDED_SSL, "on");, +		assertNull(actual.getHeader(X_FORWARDED_SSL));, +		assertEquals("bar", actual.getHeader("foo"));, +	}, +, +	@Test, +	public void forwardedRequestWithSsl() throws Exception {, +		this.request.setRequestURI("/mvc-showcase");, +		this.request.addHeader(X_FORWARDED_SSL, "on");, +		this.request.addHeader(X_FORWARDED_HOST, "84.198.58.199");, +		this.request.addHeader(X_FORWARDED_PORT, "443");, +		this.request.addHeader("foo", "bar");, +, +		this.filter.doFilter(this.request, new MockHttpServletResponse(), this.filterChain);, +		HttpServletRequest actual = (HttpServletRequest) this.filterChain.getRequest();, +, +		assertEquals("https://84.198.58.199/mvc-showcase", actual.getRequestURL().toString());, +		assertEquals("https", actual.getScheme());, +		assertEquals("84.198.58.199", actual.getServerName());, +		assertEquals(443, actual.getServerPort());, +		assertTrue(actual.isSecure());, +, +		assertNull(actual.getHeader(X_FORWARDED_SSL));, +		assertNull(actual.getHeader(X_FORWARDED_HOST));, +		assertNull(actual.getHeader(X_FORWARDED_PORT));, +++ b/spring-web/src/main/java/org/springframework/web/filter/ForwardedHeaderFilter.java, +		FORWARDED_HEADER_NAMES.add("X-Forwarded-Ssl");, +++ b/spring-web/src/main/java/org/springframework/web/filter/reactive/ForwardedHeaderFilter.java, +		FORWARDED_HEADER_NAMES.add("X-Forwarded-Ssl");, +++ b/spring-web/src/test/java/org/springframework/web/filter/ForwardedHeaderFilterTests.java, +	private static final String X_FORWARDED_SSL = "x-forwarded-ssl";, +		testShouldFilter(X_FORWARDED_SSL);, +		this.request.addHeader(X_FORWARDED_SSL, "on");, +		assertNull(actual.getHeader(X_FORWARDED_SSL));, +		assertEquals("bar", actual.getHeader("foo"));, +	}, +, +	@Test, +	public void forwardedRequestWithSsl() throws Exception {, +		this.request.setRequestURI("/mvc-showcase");, +		this.request.addHeader(X_FORWARDED_SSL, "on");, +		this.request.addHeader(X_FORWARDED_HOST, "84.198.58.199");, +		this.request.addHeader(X_FORWARDED_PORT, "443");, +		this.request.addHeader("foo", "bar");, +, +		this.filter.doFilter(this.request, new MockHttpServletResponse(), this.filterChain);, +		HttpServletRequest actual = (HttpServletRequest) this.filterChain.getRequest();, +, +		assertEquals("https://84.198.58.199/mvc-showcase", actual.getRequestURL().toString());, +		assertEquals("https", actual.getScheme());, +		assertEquals("84.198.58.199", actual.getServerName());, +		assertEquals(443, actual.getServerPort());, +		assertTrue(actual.isSecure());, +, +		assertNull(actual.getHeader(X_FORWARDED_SSL));, +		assertNull(actual.getHeader(X_FORWARDED_HOST));, +		assertNull(actual.getHeader(X_FORWARDED_PORT));, +++ b/spring-web/src/test/java/org/springframework/web/filter/reactive/ForwardedHeaderFilterTests.java, +				.header("X-Forwarded-Prefix", "prefix"), +				.header("X-Forwarded-Ssl", "on"));, +		assertFalse(result.containsKey("X-Forwarded-Ssl"));]