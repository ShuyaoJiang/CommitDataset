[+++ b/org.springframework.context/src/main/java/org/springframework/format/support/FormattingConversionService.java, +					return "@" + annotationType.getName() + " " + fieldType.getName() + " -> " + String.class.getName() + " : " + annotationFormatterFactory;, +					return String.class.getName() + " -> @" + annotationType.getName() + " " + fieldType.getName() + " : " + annotationFormatterFactory;, +		, +		public String toString() {, +			return this.fieldType.getName() + " -> " + String.class.getName() + " : " + this.printer;, +		}, +, +		public String toString() {, +			return String.class.getName() + " -> " + this.fieldType.getName() + " : " + this.parser;, +		}, +, +++ b/org.springframework.context/src/main/java/org/springframework/format/support/FormattingConversionService.java, +					return "@" + annotationType.getName() + " " + fieldType.getName() + " -> " + String.class.getName() + " : " + annotationFormatterFactory;, +					return String.class.getName() + " -> @" + annotationType.getName() + " " + fieldType.getName() + " : " + annotationFormatterFactory;, +		, +		public String toString() {, +			return this.fieldType.getName() + " -> " + String.class.getName() + " : " + this.printer;, +		}, +, +		public String toString() {, +			return String.class.getName() + " -> " + this.fieldType.getName() + " : " + this.parser;, +		}, +, +++ b/org.springframework.context/src/test/java/org/springframework/format/datetime/joda/JodaTimeFormattingTests.java, +		System.out.println(conversionService);, +++ b/org.springframework.context/src/main/java/org/springframework/format/support/FormattingConversionService.java, +					return "@" + annotationType.getName() + " " + fieldType.getName() + " -> " + String.class.getName() + " : " + annotationFormatterFactory;, +					return String.class.getName() + " -> @" + annotationType.getName() + " " + fieldType.getName() + " : " + annotationFormatterFactory;, +		, +		public String toString() {, +			return this.fieldType.getName() + " -> " + String.class.getName() + " : " + this.printer;, +		}, +, +		public String toString() {, +			return String.class.getName() + " -> " + this.fieldType.getName() + " : " + this.parser;, +		}, +, +++ b/org.springframework.context/src/test/java/org/springframework/format/datetime/joda/JodaTimeFormattingTests.java, +		System.out.println(conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, +import java.util.ArrayList;, +import java.util.Iterator;, +import java.util.List;, +		List<String> converterStrings = new ArrayList<String>();, +				converterStrings.add(matchable.toString());, +		Collections.sort(converterStrings);, +		StringBuilder builder = new StringBuilder();, +		builder.append("ConversionService converters = ").append("\n");, +		for (String converterString : converterStrings) {, +			builder.append("\t");, +			builder.append(converterString);, +			builder.append("\n");			, +		}, +				StringBuilder builder = new StringBuilder();, +				for (Iterator<ConditionalGenericConverter> it = this.conditionalConverters.iterator(); it.hasNext(); ) {, +					builder.append(it.next());, +					if (it.hasNext()) {, +						builder.append(", ");, +					}, +				}, +				if (this.defaultConverter != null) {, +					builder.append(", ").append(this.defaultConverter);, +				}, +				return builder.toString();]