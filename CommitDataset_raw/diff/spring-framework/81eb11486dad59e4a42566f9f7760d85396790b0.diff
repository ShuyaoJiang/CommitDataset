[+++ b/build.properties, +compiler.args=-enableJavadoc -warn:none, +#build.stamp=BUILD-SNAPSHOT, +overwrite=true, +ci.build=true, +++ b/build.properties, +compiler.args=-enableJavadoc -warn:none, +#build.stamp=BUILD-SNAPSHOT, +overwrite=true, +ci.build=true, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, + * @author Costin Leau, +			try {, +			catch (InvocationTargetException ex) {, +				throw ex.getTargetException();, +			}, +		}, +++ b/build.properties, +compiler.args=-enableJavadoc -warn:none, +#build.stamp=BUILD-SNAPSHOT, +overwrite=true, +ci.build=true, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, + * @author Costin Leau, +			try {, +			catch (InvocationTargetException ex) {, +				throw ex.getTargetException();, +			}, +		}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, + * @author Costin Leau, +		if (System.getSecurityManager() != null) {, +			return AccessController.doPrivileged(new PrivilegedAction<T>() {, +		else {, +			return doGetBeanRaw(name, requiredType, args, typeCheckOnly);, +		}, +	}, +++ b/build.properties, +compiler.args=-enableJavadoc -warn:none, +#build.stamp=BUILD-SNAPSHOT, +overwrite=true, +ci.build=true, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, + * @author Costin Leau, +			try {, +			catch (InvocationTargetException ex) {, +				throw ex.getTargetException();, +			}, +		}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, + * @author Costin Leau, +		if (System.getSecurityManager() != null) {, +			return AccessController.doPrivileged(new PrivilegedAction<T>() {, +		else {, +			return doGetBeanRaw(name, requiredType, args, typeCheckOnly);, +		}, +	}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, + * @author Costin Leau, +++ b/build.properties, +compiler.args=-enableJavadoc -warn:none, +#build.stamp=BUILD-SNAPSHOT, +overwrite=true, +ci.build=true, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, + * @author Costin Leau, +			try {, +			catch (InvocationTargetException ex) {, +				throw ex.getTargetException();, +			}, +		}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, + * @author Costin Leau, +		if (System.getSecurityManager() != null) {, +			return AccessController.doPrivileged(new PrivilegedAction<T>() {, +		else {, +			return doGetBeanRaw(name, requiredType, args, typeCheckOnly);, +		}, +	}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, + * @author Costin Leau, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, + * @author Costin Leau, +++ b/build.properties, +compiler.args=-enableJavadoc -warn:none, +#build.stamp=BUILD-SNAPSHOT, +overwrite=true, +ci.build=true, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, + * @author Costin Leau, +			try {, +			catch (InvocationTargetException ex) {, +				throw ex.getTargetException();, +			}, +		}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, + * @author Costin Leau, +		if (System.getSecurityManager() != null) {, +			return AccessController.doPrivileged(new PrivilegedAction<T>() {, +		else {]