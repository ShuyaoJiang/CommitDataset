[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, + * Copyright 2002-2010 the original author or authors., +			try {, +			}, +			catch (Throwable ex) {, +				if (logger.isDebugEnabled()) {, +					logger.debug("Collection type [" + original.getClass().getName() +, +							"] seems to be read-only - injecting original Collection as-is", ex);, +				}, +				return original;, +			}, +			try {, +			}, +			catch (Throwable ex) {, +				if (logger.isDebugEnabled()) {, +					logger.debug("Map type [" + original.getClass().getName() +, +							"] seems to be read-only - injecting original Map as-is", ex);, +				}, +				return original;, +			}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, + * Copyright 2002-2010 the original author or authors., +			try {, +			}, +			catch (Throwable ex) {, +				if (logger.isDebugEnabled()) {, +					logger.debug("Collection type [" + original.getClass().getName() +, +							"] seems to be read-only - injecting original Collection as-is", ex);, +				}, +				return original;, +			}, +			try {, +			}, +			catch (Throwable ex) {, +				if (logger.isDebugEnabled()) {, +					logger.debug("Map type [" + original.getClass().getName() +, +							"] seems to be read-only - injecting original Map as-is", ex);, +				}, +				return original;, +			}, +++ b/org.springframework.beans/src/test/java/org/springframework/beans/BeanWrapperTests.java, + * Copyright 2002-2010 the original author or authors., +import static org.junit.Assert.*;, +import test.beans.BooleanTestBean;, +import test.beans.ITestBean;, +import test.beans.IndexedTestBean;, +import test.beans.NumberTestBean;, +import test.beans.TestBean;, +, +	public void testTypedMapReadOnlyMap() {, +		TypedReadOnlyMap map = new TypedReadOnlyMap(Collections.singletonMap("key", new TestBean()));, +		TypedReadOnlyMapClient bean = new TypedReadOnlyMapClient();, +		BeanWrapper bw = new BeanWrapperImpl(bean);, +		bw.setPropertyValue("map", map);, +	}, +, +	@Test, +	public static class ReadOnlyMap<K, V> extends HashMap<K, V> {, +		public ReadOnlyMap(Map<? extends K, ? extends V> map) {, +		public V put(K key, V value) {, +		public Set<Map.Entry<K, V>> entrySet() {, +		public Set<K> keySet() {, +, +	public static class TypedReadOnlyMap extends ReadOnlyMap<String, TestBean> {, +, +		public TypedReadOnlyMap() {, +		}, +, +		public TypedReadOnlyMap(Map<? extends String, ? extends TestBean> map) {, +			super(map);, +		}, +	}, +, +, +	public static class TypedReadOnlyMapClient {, +, +		public void setMap(TypedReadOnlyMap map) {, +		}, +	}, +, +, +, +, +, +, +]