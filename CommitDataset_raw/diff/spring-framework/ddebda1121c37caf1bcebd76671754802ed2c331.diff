[+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +					String annName = annotation.getMetadata().getClassName();, +					if (!annName.startsWith("java") && !annName.equals(Import.class.getName())) {, +			return new SourceClass(classType);, +		public Set<SourceClass> getAnnotations() throws IOException {, +			Set<SourceClass> result = new LinkedHashSet<SourceClass>();, +			for (String className : this.metadata.getAnnotationTypes()) {, +				try {, +					result.add(getRelated(className));, +				catch (Throwable ex) {, +					// An annotation not present on the classpath is being ignored, +					// by the JVM's class loading -> ignore here as well., +				}, +			}, +			return result;, +			Set<SourceClass> result = new LinkedHashSet<SourceClass>();, +				result.add(getRelated(className));, +			return result;, +					// Ignore -> fall back to ASM next, except for core java types., +					if (className.startsWith("java")) {, +						throw ex;, +					}, +					return new SourceClass(metadataReaderFactory.getMetadataReader(className));]