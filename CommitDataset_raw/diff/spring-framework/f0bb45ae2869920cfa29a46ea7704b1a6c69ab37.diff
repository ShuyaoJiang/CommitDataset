[+++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.java, + * Copyright 2002-2010 the original author or authors., +					logger.debug("Adding transactional method '" + method.getName() + "' with attribute: " + txAtt);, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.java, + * Copyright 2002-2010 the original author or authors., +					logger.debug("Adding transactional method '" + method.getName() + "' with attribute: " + txAtt);, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/interceptor/DefaultTransactionAttribute.java, + * Copyright 2002-2010 the original author or authors., +, +	/**, +	 * Return an identifying description for this transaction attribute., +	 * <p>Available to subclasses, for inclusion in their <code>toString()</code> result., +	 */, +	protected final StringBuilder getAttributeDescription() {, +		StringBuilder result = getDefinitionDescription();, +		if (this.qualifier != null) {, +			result.append("; '").append(this.qualifier).append("'");, +		}, +		return result;, +	}, +, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.java, + * Copyright 2002-2010 the original author or authors., +					logger.debug("Adding transactional method '" + method.getName() + "' with attribute: " + txAtt);, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/interceptor/DefaultTransactionAttribute.java, + * Copyright 2002-2010 the original author or authors., +, +	/**, +	 * Return an identifying description for this transaction attribute., +	 * <p>Available to subclasses, for inclusion in their <code>toString()</code> result., +	 */, +	protected final StringBuilder getAttributeDescription() {, +		StringBuilder result = getDefinitionDescription();, +		if (this.qualifier != null) {, +			result.append("; '").append(this.qualifier).append("'");, +		}, +		return result;, +	}, +, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.java, + * Copyright 2002-2010 the original author or authors., + * <p>{@link TransactionAttributeEditor} creates objects of this class., +		StringBuilder result = getAttributeDescription();, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.java, + * Copyright 2002-2010 the original author or authors., +					logger.debug("Adding transactional method '" + method.getName() + "' with attribute: " + txAtt);, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/interceptor/DefaultTransactionAttribute.java, + * Copyright 2002-2010 the original author or authors., +, +	/**, +	 * Return an identifying description for this transaction attribute., +	 * <p>Available to subclasses, for inclusion in their <code>toString()</code> result., +	 */, +	protected final StringBuilder getAttributeDescription() {, +		StringBuilder result = getDefinitionDescription();, +		if (this.qualifier != null) {, +			result.append("; '").append(this.qualifier).append("'");, +		}, +		return result;, +	}, +, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.java, + * Copyright 2002-2010 the original author or authors., + * <p>{@link TransactionAttributeEditor} creates objects of this class., +		StringBuilder result = getAttributeDescription();, +++ b/org.springframework.transaction/src/test/resources/log4j.xml, +	<logger name="org.springframework.transaction">]