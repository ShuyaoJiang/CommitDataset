[+++ b/org.springframework.context/src/main/java/org/springframework/context/support/ApplicationContextAwareProcessor.java, + * Copyright 2002-2010 the original author or authors., +		if (beanDefinition.isSingleton()) {, +	public Object postProcessBeforeInitialization(final Object bean, String beanName) throws BeansException {, +					invokeAwareInterfaces(bean);, +			invokeAwareInterfaces(bean);, +	private void invokeAwareInterfaces(Object bean) {, +	}, +	public Object postProcessAfterInitialization(Object bean, String beanName) {, +			// potentially not detected as a listener by getBeanNamesForType retrieval, +				// singleton bean (top-level or inner): register on the fly, +				if (logger.isWarnEnabled() && !this.applicationContext.containsBean(beanName)) {, +++ b/org.springframework.context/src/main/java/org/springframework/context/support/ApplicationContextAwareProcessor.java, + * Copyright 2002-2010 the original author or authors., +		if (beanDefinition.isSingleton()) {, +	public Object postProcessBeforeInitialization(final Object bean, String beanName) throws BeansException {, +					invokeAwareInterfaces(bean);, +			invokeAwareInterfaces(bean);, +	private void invokeAwareInterfaces(Object bean) {, +	}, +	public Object postProcessAfterInitialization(Object bean, String beanName) {, +			// potentially not detected as a listener by getBeanNamesForType retrieval, +				// singleton bean (top-level or inner): register on the fly, +				if (logger.isWarnEnabled() && !this.applicationContext.containsBean(beanName)) {, +++ b/org.springframework.context/src/test/java/org/springframework/context/annotation/configuration/ConfigurationClassProcessingTests.java, +import org.springframework.context.ApplicationListener;, +import org.springframework.context.event.ContextRefreshedEvent;, + * @author Juergen Hoeller, +, +		SpousyTestBean listener = factory.getBean("listenerTestBean", SpousyTestBean.class);, +		assertTrue(listener.refreshed);, +, +		@Bean, +		public ITestBean listenerTestBean() {, +			return new SpousyTestBean("listener");, +		}, +	private static class SpousyTestBean extends TestBean implements ApplicationListener<ContextRefreshedEvent> {, +, +		public boolean refreshed = false;, +, +		public void onApplicationEvent(ContextRefreshedEvent event) {, +			this.refreshed = true;, +		}]