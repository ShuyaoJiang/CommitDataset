[+++ b/spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java, +import org.springframework.util.ConcurrentReferenceHashMap.Reference;, +import org.springframework.util.ConcurrentReferenceHashMap.Restructure;, +		Reference<K, V> ref = getReference(key, Restructure.WHEN_NECESSARY);, +		Entry<K, V> entry = (ref != null ? ref.get() : null);, +		Reference<K, V> ref = getReference(key, Restructure.WHEN_NECESSARY);, +		Entry<K, V> entry = (ref != null ? ref.get() : null);, +		Entry<K, V> entry = (ref != null ? ref.get() : null);, +		return (entry != null && ObjectUtils.nullSafeEquals(entry.getKey(), key));, +			boolean needsResize = allowResize && (currCount > 0 && currCount >= this.resizeThreshold);, +			if (ref != null || (needsResize)) {, +				restructure(allowResize, ref);, +			}, +		}, +, +		private void restructure(boolean allowResize, Reference<K, V> ref) {, +			boolean needsResize;]