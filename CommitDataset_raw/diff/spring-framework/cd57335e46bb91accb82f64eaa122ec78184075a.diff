[+++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java, +	 * <p>Default is the {@link StdSchedulerFactory} class, reading in the standard, +	 * {@code quartz.properties} from {@code quartz.jar}. For applying custom Quartz, +	 * properties, specify {@link #setConfigLocation "configLocation"} or, +	 * {@link #setQuartzProperties "quartzProperties"} on {@code SchedulerFactoryBean}., +	 * <p>Default is an internal {@link StdSchedulerFactory} instance. If this method is, +	 * called, it overrides any class specified through {@link #setSchedulerFactoryClass}., +	 * <p>An externally provided {@code SchedulerFactory} instance may get initialized, +	 * from local {@code SchedulerFactoryBean} settings (such as {@link #setConfigLocation}, +	 * or {@link #setQuartzProperties}) but only if it extends from {@link StdSchedulerFactory},, +	 * inheriting the common {@link StdSchedulerFactory#initialize(Properties)} method., +	 * Otherwise, all such local settings will be ignored here in {@code SchedulerFactoryBean},, +	 * expecting the external {@code SchedulerFactory} instance to get initialized on its own., +	 * @since 4.3.15, +		SchedulerFactory schedulerFactory = prepareSchedulerFactory();, +	 * Create a SchedulerFactory if necessary and apply locally defined Quartz properties to it., +	 * @return the initialized SchedulerFactory, +	private SchedulerFactory prepareSchedulerFactory() throws SchedulerException, IOException {, +		SchedulerFactory schedulerFactory = this.schedulerFactory;, +		if (schedulerFactory != null) {, +			if (schedulerFactory instanceof StdSchedulerFactory) {, +				initSchedulerFactory((StdSchedulerFactory) schedulerFactory);, +			}, +			// Otherwise, assume that externally provided factory has been initialized with appropriate settings..., +		}, +		else {, +			// Create local SchedulerFactory instance (typically a StdSchedulerFactory), +			schedulerFactory = BeanUtils.instantiateClass(this.schedulerFactoryClass);, +			if (schedulerFactory instanceof StdSchedulerFactory) {, +				initSchedulerFactory((StdSchedulerFactory) schedulerFactory);, +			}, +			else if (this.configLocation != null || this.quartzProperties != null ||, +			// Otherwise, no local settings to be applied via StdSchedulerFactory.initialize(Properties), +		}, +		return schedulerFactory;, +	/**, +	 * Initialize the given SchedulerFactory, applying locally defined Quartz properties to it., +	 * @param schedulerFactory the SchedulerFactory to initialize, +	 */, +	private void initSchedulerFactory(StdSchedulerFactory schedulerFactory) throws SchedulerException, IOException {, +		schedulerFactory.initialize(mergedProps);]