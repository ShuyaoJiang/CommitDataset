[+++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/AbstractJdbcTests.java, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/AbstractJdbcTests.java, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/Customer.java, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/AbstractJdbcTests.java, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/Customer.java, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/core/AbstractRowMapperTests.java, +		assertEquals("Bubba", bean.getName());, +		assertEquals(22L, bean.getAge());, +		assertEquals(new java.util.Date(1221222L), bean.getBirth_date());, +		assertEquals(new BigDecimal("1234.56"), bean.getBalance());, +		assertEquals("Bubba", bean.getName());, +		assertEquals(22L, bean.getAge());, +		assertEquals(new java.util.Date(1221222L), bean.getBirth_date());, +		assertEquals(new BigDecimal("1234.56"), bean.getBalance());, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/AbstractJdbcTests.java, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/Customer.java, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/core/AbstractRowMapperTests.java, +		assertEquals("Bubba", bean.getName());, +		assertEquals(22L, bean.getAge());, +		assertEquals(new java.util.Date(1221222L), bean.getBirth_date());, +		assertEquals(new BigDecimal("1234.56"), bean.getBalance());, +		assertEquals("Bubba", bean.getName());, +		assertEquals(22L, bean.getAge());, +		assertEquals(new java.util.Date(1221222L), bean.getBirth_date());, +		assertEquals(new BigDecimal("1234.56"), bean.getBalance());, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/core/SimpleRowCountCallbackHandler.java, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/AbstractJdbcTests.java, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/Customer.java, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/core/AbstractRowMapperTests.java, +		assertEquals("Bubba", bean.getName());, +		assertEquals(22L, bean.getAge());, +		assertEquals(new java.util.Date(1221222L), bean.getBirth_date());, +		assertEquals(new BigDecimal("1234.56"), bean.getBalance());, +		assertEquals("Bubba", bean.getName());, +		assertEquals(22L, bean.getAge());, +		assertEquals(new java.util.Date(1221222L), bean.getBirth_date());, +		assertEquals(new BigDecimal("1234.56"), bean.getBalance());, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/core/SimpleRowCountCallbackHandler.java, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplateTests.java, +/*, + * Copyright 2002-2008 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.jdbc.core.namedparam;, +, +import java.sql.PreparedStatement;, +import java.sql.ResultSet;, +import java.sql.SQLException;, +import java.sql.Types;, +import java.util.HashMap;, +import java.util.LinkedList;, +import java.util.List;, +import java.util.Map;, +, +import javax.sql.DataSource;, +, +import org.easymock.MockControl;, +import org.apache.commons.logging.LogFactory;, +, +import org.springframework.dao.DataAccessException;, +import org.springframework.jdbc.AbstractJdbcTests;, +import org.springframework.jdbc.Customer;, +import org.springframework.jdbc.core.JdbcOperations;, +import org.springframework.jdbc.core.PreparedStatementCallback;, +import org.springframework.jdbc.core.ResultSetExtractor;, +import org.springframework.jdbc.core.RowCallbackHandler;, +import org.springframework.jdbc.core.RowMapper;, +import org.springframework.jdbc.core.SqlParameterValue;, +import org.springframework.jdbc.core.JdbcTemplate;, +, +/**, + * @author Rick Evans, + * @author Juergen Hoeller, + * @author Chris Beams, + */, +public class NamedParameterJdbcTemplateTests extends AbstractJdbcTests {, +, +	private static final String SELECT_NAMED_PARAMETERS =, +		"select id, forename from custmr where id = :id and country = :country";, +	private static final String SELECT_NAMED_PARAMETERS_PARSED =, +		"select id, forename from custmr where id = ? and country = ?";, +, +	private static final String UPDATE_NAMED_PARAMETERS =, +		"update seat_status set booking_id = null where performance_id = :perfId and price_band_id = :priceId";, +	private static final String UPDATE_NAMED_PARAMETERS_PARSED =, +		"update seat_status set booking_id = null where performance_id = ? and price_band_id = ?";, +, +	private static final String[] COLUMN_NAMES = new String[] {"id", "forename"};]