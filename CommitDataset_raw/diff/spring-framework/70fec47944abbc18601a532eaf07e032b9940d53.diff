[+++ b/spring-context/src/test/java/org/springframework/context/annotation/configuration/AutowiredConfigurationTests.java, + * Copyright 2002-2014 the original author or authors., +import javax.inject.Provider;, +, +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.context.annotation.AnnotationConfigApplicationContext;, +import org.springframework.tests.sample.beans.Colour;, +import org.springframework.tests.sample.beans.TestBean;, +, +import static org.hamcrest.CoreMatchers.*;, +import static org.junit.Assert.*;, +		doTestValueInjection(factory);, +	}, +	@Test, +	public void testValueInjectionWithProviderFields() {, +		AnnotationConfigApplicationContext factory =, +				new AnnotationConfigApplicationContext(ValueConfigWithProviderFields.class);, +		doTestValueInjection(factory);, +	}, +, +	@Test, +	public void testValueInjectionWithProviderConstructorArguments() {, +		AnnotationConfigApplicationContext factory =, +				new AnnotationConfigApplicationContext(ValueConfigWithProviderConstructorArguments.class);, +		doTestValueInjection(factory);, +	}, +, +	@Test, +	public void testValueInjectionWithProviderMethodArguments() {, +		AnnotationConfigApplicationContext factory =, +				new AnnotationConfigApplicationContext(ValueConfigWithProviderMethodArguments.class);, +		doTestValueInjection(factory);, +	}, +, +	private void doTestValueInjection(BeanFactory factory) {, +	@Test, +	public void testCustomProperties() {, +		ClassPathXmlApplicationContext factory = new ClassPathXmlApplicationContext(, +				"AutowiredConfigurationTests-custom.xml", AutowiredConfigurationTests.class);, +, +		TestBean testBean = factory.getBean("testBean", TestBean.class);, +		assertThat(testBean.getName(), equalTo("localhost"));, +	}, +, +, +	@Configuration, +	static class AutowiredConfig {, +, +		@Autowired, +		private Colour colour;, +, +		@Bean, +		public TestBean testBean() {, +			return new TestBean(colour.toString());, +		}, +	}, +, +, +	@Configuration, +	static class ColorConfig {, +, +		@Bean, +		public Colour colour() {, +			return Colour.RED;, +		}, +	}, +, +, +	@Configuration, +	static class AutowiredConstructorConfig {, +, +		Colour colour;, +, +		@Autowired, +		AutowiredConstructorConfig(Colour colour) {, +			this.colour = colour;, +		}, +	}, +, +, +	@Configuration, +	static class ValueConfigWithProviderFields {, +		@Value("#{systemProperties[myProp]}"), +		private Provider<String> name;, +, +		private Provider<String> name2;, +, +		@Value("#{systemProperties[myProp]}"), +		public void setName2(Provider<String> name) {, +			this.name2 = name;, +		@Bean @Scope("prototype"), +		public TestBean testBean() {, +			return new TestBean(name.get());, +		}, +, +		@Bean @Scope("prototype"), +		public TestBean testBean2() {, +			return new TestBean(name2.get());, +		}, +	}]