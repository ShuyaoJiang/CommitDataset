[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +		return MergedAnnotations.from(null, new Annotation[] {annotation},, +					RepeatableContainers.none(), AnnotationFilter.PLAIN), +		return MergedAnnotations.from(annotatedElement, SearchStrategy.INHERITED_ANNOTATIONS,, +					RepeatableContainers.none(), AnnotationFilter.PLAIN), +		return MergedAnnotations.from(method, SearchStrategy.EXHAUSTIVE,, +					RepeatableContainers.none(), AnnotationFilter.PLAIN), +		return MergedAnnotations.from(clazz, SearchStrategy.EXHAUSTIVE,, +					RepeatableContainers.none(), AnnotationFilter.PLAIN), +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +		return MergedAnnotations.from(null, new Annotation[] {annotation},, +					RepeatableContainers.none(), AnnotationFilter.PLAIN), +		return MergedAnnotations.from(annotatedElement, SearchStrategy.INHERITED_ANNOTATIONS,, +					RepeatableContainers.none(), AnnotationFilter.PLAIN), +		return MergedAnnotations.from(method, SearchStrategy.EXHAUSTIVE,, +					RepeatableContainers.none(), AnnotationFilter.PLAIN), +		return MergedAnnotations.from(clazz, SearchStrategy.EXHAUSTIVE,, +					RepeatableContainers.none(), AnnotationFilter.PLAIN), +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationUtilsTests.java, +	@Test // gh-22702, +	public void findAnnotationWithRepeatablesElements() {, +		assertNull(AnnotationUtils.findAnnotation(TestRepeatablesClass.class,, +				TestRepeatable.class));, +		assertNotNull(AnnotationUtils.findAnnotation(TestRepeatablesClass.class,, +				TestRepeatableContainer.class));, +	}, +	@Retention(RetentionPolicy.RUNTIME), +	@Repeatable(TestRepeatableContainer.class), +	static @interface TestRepeatable {, +, +		String value();, +	}, +, +	@Retention(RetentionPolicy.RUNTIME), +	static @interface TestRepeatableContainer {, +, +		TestRepeatable[] value();, +	}, +, +	@TestRepeatable("a"), +	@TestRepeatable("b"), +	static class TestRepeatablesClass {, +	}]