[+++ b/spring-orm/src/test/java/org/springframework/orm/hibernate3/support/OpenSessionInViewTests.java, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler(EasyMock.<Runnable>anyObject());, +++ b/spring-orm/src/test/java/org/springframework/orm/hibernate3/support/OpenSessionInViewTests.java, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler(EasyMock.<Runnable>anyObject());, +++ b/spring-orm/src/test/java/org/springframework/orm/jpa/support/OpenEntityManagerInViewTests.java, +import org.springframework.web.context.request.async.WebAsyncUtils;, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +++ b/spring-orm/src/test/java/org/springframework/orm/hibernate3/support/OpenSessionInViewTests.java, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler(EasyMock.<Runnable>anyObject());, +++ b/spring-orm/src/test/java/org/springframework/orm/jpa/support/OpenEntityManagerInViewTests.java, +import org.springframework.web.context.request.async.WebAsyncUtils;, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/TestDispatcherServlet.java, +	private static final String KEY = TestDispatcherServlet.class.getName() + ".interceptor";, +++ b/spring-orm/src/test/java/org/springframework/orm/hibernate3/support/OpenSessionInViewTests.java, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler(EasyMock.<Runnable>anyObject());, +++ b/spring-orm/src/test/java/org/springframework/orm/jpa/support/OpenEntityManagerInViewTests.java, +import org.springframework.web.context.request.async.WebAsyncUtils;, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/TestDispatcherServlet.java, +	private static final String KEY = TestDispatcherServlet.class.getName() + ".interceptor";, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/result/RequestResultMatchers.java, +import org.springframework.web.context.request.async.MvcAsyncTask;, +	 * or {@link MvcAsyncTask}. The value matched is the value returned from the, +++ b/spring-orm/src/test/java/org/springframework/orm/hibernate3/support/OpenSessionInViewTests.java, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler(EasyMock.<Runnable>anyObject());, +++ b/spring-orm/src/test/java/org/springframework/orm/jpa/support/OpenEntityManagerInViewTests.java, +import org.springframework.web.context.request.async.WebAsyncUtils;, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/TestDispatcherServlet.java, +	private static final String KEY = TestDispatcherServlet.class.getName() + ".interceptor";, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/result/RequestResultMatchers.java, +import org.springframework.web.context.request.async.MvcAsyncTask;, +	 * or {@link MvcAsyncTask}. The value matched is the value returned from the, +++ /dev/null, +++ b/spring-orm/src/test/java/org/springframework/orm/hibernate3/support/OpenSessionInViewTests.java, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler(EasyMock.<Runnable>anyObject());, +++ b/spring-orm/src/test/java/org/springframework/orm/jpa/support/OpenEntityManagerInViewTests.java, +import org.springframework.web.context.request.async.WebAsyncUtils;, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/TestDispatcherServlet.java, +	private static final String KEY = TestDispatcherServlet.class.getName() + ".interceptor";, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/result/RequestResultMatchers.java, +import org.springframework.web.context.request.async.MvcAsyncTask;, +	 * or {@link MvcAsyncTask}. The value matched is the value returned from the, +++ /dev/null, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/AsyncWebRequest.java, +	 * Add a handler to invoke when concurrent handling has timed out., +	void addTimeoutHandler(Runnable runnable);, +	 * Add a handle to invoke when request processing completes., +++ b/spring-orm/src/test/java/org/springframework/orm/hibernate3/support/OpenSessionInViewTests.java, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler(EasyMock.<Runnable>anyObject());, +++ b/spring-orm/src/test/java/org/springframework/orm/jpa/support/OpenEntityManagerInViewTests.java, +import org.springframework.web.context.request.async.WebAsyncUtils;, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/TestDispatcherServlet.java, +	private static final String KEY = TestDispatcherServlet.class.getName() + ".interceptor";, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/result/RequestResultMatchers.java, +import org.springframework.web.context.request.async.MvcAsyncTask;, +	 * or {@link MvcAsyncTask}. The value matched is the value returned from the, +++ /dev/null, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/AsyncWebRequest.java, +	 * Add a handler to invoke when concurrent handling has timed out., +	void addTimeoutHandler(Runnable runnable);, +	 * Add a handle to invoke when request processing completes., +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/CallableInterceptorChain.java, +	public CallableInterceptorChain(List<CallableProcessingInterceptor> interceptors) {, +		this.interceptors = interceptors;, +++ b/spring-orm/src/test/java/org/springframework/orm/hibernate3/support/OpenSessionInViewTests.java, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler(EasyMock.<Runnable>anyObject());, +++ b/spring-orm/src/test/java/org/springframework/orm/jpa/support/OpenEntityManagerInViewTests.java, +import org.springframework.web.context.request.async.WebAsyncUtils;, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +		asyncWebRequest.addTimeoutHandler((Runnable) anyObject());, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/TestDispatcherServlet.java, +	private static final String KEY = TestDispatcherServlet.class.getName() + ".interceptor";, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/result/RequestResultMatchers.java, +import org.springframework.web.context.request.async.MvcAsyncTask;, +	 * or {@link MvcAsyncTask}. The value matched is the value returned from the, +++ /dev/null, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/AsyncWebRequest.java, +	 * Add a handler to invoke when concurrent handling has timed out., +	void addTimeoutHandler(Runnable runnable);, +	 * Add a handle to invoke when request processing completes., +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/CallableInterceptorChain.java, +	public CallableInterceptorChain(List<CallableProcessingInterceptor> interceptors) {]