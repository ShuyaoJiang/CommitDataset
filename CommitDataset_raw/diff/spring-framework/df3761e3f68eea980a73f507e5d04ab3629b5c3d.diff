[+++ b/org.springframework.core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, + * Copyright 2002-2011 the original author or authors., +import java.lang.reflect.AnnotatedElement;, +	 * Get a single {@link Annotation} of <code>annotationType</code> from the supplied, +	 * Method, Constructor or Field., +	 * @param ae the Method, Constructor or Field to look for annotations on, +	 * @param annotationType the annotation class to look for, +	 * @return the annotations found, +	 */, +	public static <T extends Annotation> T getAnnotation(AnnotatedElement ae, Class<T> annotationType) {, +		T ann = ae.getAnnotation(annotationType);, +		if (ann == null) {, +			for (Annotation metaAnn : ae.getAnnotations()) {, +				ann = metaAnn.annotationType().getAnnotation(annotationType);, +				if (ann != null) {, +					break;, +				}, +			}, +		}, +		return ann;, +	}, +, +	/**, +++ b/org.springframework.core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, + * Copyright 2002-2011 the original author or authors., +import java.lang.reflect.AnnotatedElement;, +	 * Get a single {@link Annotation} of <code>annotationType</code> from the supplied, +	 * Method, Constructor or Field., +	 * @param ae the Method, Constructor or Field to look for annotations on, +	 * @param annotationType the annotation class to look for, +	 * @return the annotations found, +	 */, +	public static <T extends Annotation> T getAnnotation(AnnotatedElement ae, Class<T> annotationType) {, +		T ann = ae.getAnnotation(annotationType);, +		if (ann == null) {, +			for (Annotation metaAnn : ae.getAnnotations()) {, +				ann = metaAnn.annotationType().getAnnotation(annotationType);, +				if (ann != null) {, +					break;, +				}, +			}, +		}, +		return ann;, +	}, +, +	/**, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.java, + * Copyright 2002-2011 the original author or authors., +import org.springframework.core.annotation.AnnotationUtils;, +		Transactional ann = AnnotationUtils.getAnnotation(ae, Transactional.class);]