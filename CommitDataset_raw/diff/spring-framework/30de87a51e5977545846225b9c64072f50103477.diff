[+++ b/spring-core/src/main/java/org/springframework/util/xml/StaxEventContentHandler.java, + * Copyright 2002-2012 the original author or authors., + * SAX <code>ContentHandler</code> that transforms callback calls to <code>XMLEvent</code>s, + * and writes them to a <code>XMLEventConsumer</code>., + * @since 3.0, +, +	 * Construct a new instance of the <code>StaxEventContentHandler</code> that writes to the given, +		this.eventFactory = XMLEventFactory.newInstance();, +		this.eventConsumer = consumer;, +	 * Construct a new instance of the <code>StaxEventContentHandler</code> that uses the given, +	 * event factory to create events and writes to the given <code>XMLEventConsumer</code>., +		this.eventFactory = factory;, +		this.eventConsumer = consumer;, +	public void setDocumentLocator(Locator locator) {, +			this.eventFactory.setLocation(new LocatorLocationAdapter(locator));, +		consumeEvent(this.eventFactory.createStartDocument());, +		consumeEvent(this.eventFactory.createEndDocument());, +, +		consumeEvent(this.eventFactory.createStartElement(name, attributes.iterator(),, +				(namespaces != null ? namespaces.iterator() : null)));, +		consumeEvent(this.eventFactory.createEndElement(name, namespaces != null ? namespaces.iterator() : null));, +		consumeEvent(this.eventFactory.createCharacters(new String(ch, start, length)));, +		consumeEvent(this.eventFactory.createIgnorableSpace(new String(ch, start, length)));, +		consumeEvent(this.eventFactory.createProcessingInstruction(target, data));, +		this.eventConsumer.add(event);, +	/**, +	 * Create and return a list of <code>NameSpace</code> objects from the <code>NamespaceContext</code>., +	 */, +			namespaces.add(this.eventFactory.createNamespace(defaultNamespaceUri));, +			namespaces.add(this.eventFactory.createNamespace(prefix, namespaceUri));, +				list.add(this.eventFactory.createAttribute(name, attributes.getValue(i)));, +	/* No operation */, +, +	private static final class LocatorLocationAdapter implements Location {, +, +		private final Locator locator;, +, +		public LocatorLocationAdapter(Locator locator) {, +			this.locator = locator;, +		}, +, +		public int getLineNumber() {, +			return this.locator.getLineNumber();, +		}, +, +		public int getColumnNumber() {, +			return this.locator.getColumnNumber();, +		}, +, +		public int getCharacterOffset() {, +			return -1;, +		}, +, +		public String getPublicId() {, +			return this.locator.getPublicId();, +		}, +, +		public String getSystemId() {, +			return this.locator.getSystemId();, +		}, +	}, +]