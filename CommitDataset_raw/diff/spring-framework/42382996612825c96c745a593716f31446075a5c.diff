[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java, + * Copyright 2002-2014 the original author or authors., +import java.util.Collections;, +import java.util.HashMap;, +import java.util.Set;, +import org.springframework.core.NestedCheckedException;, +	/**, +	 * Log category to use on network IO exceptions after a client has gone away., +	 *, +	 * <p>The Servlet API does not provide notifications when a client disconnects,, +	 * see see https://java.net/jira/browse/SERVLET_SPEC-44. Therefore network IO, +	 * failures may occur simply because a client has gone away and that can fill, +	 * the logs with unnecessary stack traces., +	 *, +	 * <p>We make a best effort to identify such network failures, on a per-server, +	 * basis, and log them under a separate log category. A simple one-line message, +	 * is logged at DEBUG level while a full stack trace is shown at TRACE level., +	 *, +	 * @see #disconnectedClientLogger, +	 */, +	public static final String DISCONNECTED_CLIENT_LOG_CATEGORY =, +			"org.springframework.web.socket.sockjs.DisconnectedClient";, +, +	/**, +	 * Separate logger to use on network IO failure after a client has gone away., +	 * @see #DISCONNECTED_CLIENT_LOG_CATEGORY, +	 */, +	protected static final Log disconnectedClientLogger = LogFactory.getLog(DISCONNECTED_CLIENT_LOG_CATEGORY);, +, +, +	private final static Set<String> disconnectedClientExceptions =, +			Collections.newSetFromMap(new HashMap<String, Boolean>(2));, +, +	static {, +		disconnectedClientExceptions.add("ClientAbortException"); // Tomcat, +		disconnectedClientExceptions.add("EofException"); // Jetty, +		// IOException("Broken pipe") on WildFly and Glassfish, +	}, +, +, +			logWriteFrameFailure(ex);, +	private void logWriteFrameFailure(Throwable failure) {, +, +		@SuppressWarnings("serial"), +		NestedCheckedException nestedException = new NestedCheckedException("", failure) {};, +, +		if ("Broken pipe".equalsIgnoreCase(nestedException.getMostSpecificCause().getMessage()) ||, +				disconnectedClientExceptions.contains(failure.getClass().getSimpleName())) {, +, +			if (disconnectedClientLogger.isTraceEnabled()) {, +				disconnectedClientLogger.trace("Looks like the client has gone away", failure);, +			}, +			else if (disconnectedClientLogger.isDebugEnabled()) {, +				disconnectedClientLogger.debug("Looks like the client has gone away: " +, +						nestedException.getMessage() + " (For full stack trace, raise '" +, +						DISCONNECTED_CLIENT_LOG_CATEGORY + "' log category at TRACE level)");, +			}, +		}, +		else {, +			logger.error("Terminating connection after failure to send message to client.", failure);, +		}, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java, + * Copyright 2002-2014 the original author or authors., +import java.util.Collections;, +import java.util.HashMap;, +import java.util.Set;, +import org.springframework.core.NestedCheckedException;, +	/**, +	 * Log category to use on network IO exceptions after a client has gone away., +	 *, +	 * <p>The Servlet API does not provide notifications when a client disconnects,, +	 * see see https://java.net/jira/browse/SERVLET_SPEC-44. Therefore network IO, +	 * failures may occur simply because a client has gone away and that can fill, +	 * the logs with unnecessary stack traces., +	 *, +	 * <p>We make a best effort to identify such network failures, on a per-server, +	 * basis, and log them under a separate log category. A simple one-line message, +	 * is logged at DEBUG level while a full stack trace is shown at TRACE level., +	 *, +	 * @see #disconnectedClientLogger, +	 */, +	public static final String DISCONNECTED_CLIENT_LOG_CATEGORY =, +			"org.springframework.web.socket.sockjs.DisconnectedClient";, +, +	/**, +	 * Separate logger to use on network IO failure after a client has gone away., +	 * @see #DISCONNECTED_CLIENT_LOG_CATEGORY, +	 */, +	protected static final Log disconnectedClientLogger = LogFactory.getLog(DISCONNECTED_CLIENT_LOG_CATEGORY);, +, +, +	private final static Set<String> disconnectedClientExceptions =, +			Collections.newSetFromMap(new HashMap<String, Boolean>(2));, +, +	static {, +		disconnectedClientExceptions.add("ClientAbortException"); // Tomcat, +		disconnectedClientExceptions.add("EofException"); // Jetty, +		// IOException("Broken pipe") on WildFly and Glassfish]