[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java, +		asyncContext.addListener(TIMEOUT_HANDLER);, +, +	/**, +	 * We cannot combine TIMEOUT_HANDLER and HandlerResultSubscriber due to:, +	 * https://issues.jboss.org/browse/WFLY-8515, +	 */, +	private static void runIfAsyncNotComplete(AsyncContext asyncContext, Runnable task) {, +		try {, +			if (asyncContext.getRequest().isAsyncStarted()) {, +				task.run();, +			}, +		}, +		catch (IllegalStateException ex) {, +			// Ignore:, +			// AsyncContext recycled and should not be used, +			// e.g. TIMEOUT_LISTENER (above) may have completed the AsyncContext, +		}, +	}, +, +	private final static AsyncListener TIMEOUT_HANDLER = new AsyncListener() {, +, +		@Override, +		public void onTimeout(AsyncEvent event) throws IOException {, +			AsyncContext context = event.getAsyncContext();, +			runIfAsyncNotComplete(context, context::complete);, +		}, +, +		@Override, +		public void onError(AsyncEvent event) throws IOException {, +			AsyncContext context = event.getAsyncContext();, +			runIfAsyncNotComplete(context, context::complete);, +		}, +, +		@Override, +		public void onStartAsync(AsyncEvent event) throws IOException {, +			// No-op, +		}, +, +		@Override, +		public void onComplete(AsyncEvent event) throws IOException {, +			// No-op, +		}, +	};, +, +	private class HandlerResultSubscriber implements Subscriber<Void> {, +			runIfAsyncNotComplete(this.asyncContext, () -> {, +			runIfAsyncNotComplete(this.asyncContext, () -> {]