[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/HandlersBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.OriginHandshakeInterceptor;, +			ManagedList<? super Object> interceptors = WebSocketNamespaceUtils.parseBeanSubElements(interceptorsElement, context);, +			String allowedOriginsAttribute = element.getAttribute("allowed-origins");, +			List<String> allowedOrigins = Arrays.asList(StringUtils.tokenizeToStringArray(allowedOriginsAttribute, ","));, +			if(!allowedOrigins.isEmpty()) {, +				OriginHandshakeInterceptor interceptor = new OriginHandshakeInterceptor();, +				interceptor.setAllowedOrigins(allowedOrigins);, +				interceptors.add(interceptor);, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/HandlersBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.OriginHandshakeInterceptor;, +			ManagedList<? super Object> interceptors = WebSocketNamespaceUtils.parseBeanSubElements(interceptorsElement, context);, +			String allowedOriginsAttribute = element.getAttribute("allowed-origins");, +			List<String> allowedOrigins = Arrays.asList(StringUtils.tokenizeToStringArray(allowedOriginsAttribute, ","));, +			if(!allowedOrigins.isEmpty()) {, +				OriginHandshakeInterceptor interceptor = new OriginHandshakeInterceptor();, +				interceptor.setAllowedOrigins(allowedOrigins);, +				interceptors.add(interceptor);, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.OriginHandshakeInterceptor;, +			ManagedList<? super Object> interceptors = WebSocketNamespaceUtils.parseBeanSubElements(interceptorsElement, context);, +			String allowedOriginsAttribute = element.getAttribute("allowed-origins");, +			List<String> allowedOrigins = Arrays.asList(StringUtils.tokenizeToStringArray(allowedOriginsAttribute, ","));, +			if(!allowedOrigins.isEmpty()) {, +				OriginHandshakeInterceptor interceptor = new OriginHandshakeInterceptor();, +				interceptor.setAllowedOrigins(allowedOrigins);, +				interceptors.add(interceptor);, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/HandlersBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.OriginHandshakeInterceptor;, +			ManagedList<? super Object> interceptors = WebSocketNamespaceUtils.parseBeanSubElements(interceptorsElement, context);, +			String allowedOriginsAttribute = element.getAttribute("allowed-origins");, +			List<String> allowedOrigins = Arrays.asList(StringUtils.tokenizeToStringArray(allowedOriginsAttribute, ","));, +			if(!allowedOrigins.isEmpty()) {, +				OriginHandshakeInterceptor interceptor = new OriginHandshakeInterceptor();, +				interceptor.setAllowedOrigins(allowedOrigins);, +				interceptors.add(interceptor);, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.OriginHandshakeInterceptor;, +			ManagedList<? super Object> interceptors = WebSocketNamespaceUtils.parseBeanSubElements(interceptorsElement, context);, +			String allowedOriginsAttribute = element.getAttribute("allowed-origins");, +			List<String> allowedOrigins = Arrays.asList(StringUtils.tokenizeToStringArray(allowedOriginsAttribute, ","));, +			if(!allowedOrigins.isEmpty()) {, +				OriginHandshakeInterceptor interceptor = new OriginHandshakeInterceptor();, +				interceptor.setAllowedOrigins(allowedOrigins);, +				interceptors.add(interceptor);, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketNamespaceUtils.java, +import java.util.Arrays;, +import java.util.List;, +, +import org.springframework.util.StringUtils;, +import org.springframework.web.socket.server.support.OriginHandshakeInterceptor;, +			ManagedList<? super Object> interceptors = WebSocketNamespaceUtils.parseBeanSubElements(interceptorsElement, context);, +			String allowedOriginsAttribute = element.getAttribute("allowed-origins");, +			List<String> allowedOrigins = Arrays.asList(StringUtils.tokenizeToStringArray(allowedOriginsAttribute, ","));, +			if(!allowedOrigins.isEmpty()) {, +				sockJsServiceDef.getPropertyValues().add("allowedOrigins", allowedOrigins);, +				OriginHandshakeInterceptor interceptor = new OriginHandshakeInterceptor();, +				interceptor.setAllowedOrigins(allowedOrigins);, +				interceptors.add(interceptor);, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/HandlersBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.OriginHandshakeInterceptor;, +			ManagedList<? super Object> interceptors = WebSocketNamespaceUtils.parseBeanSubElements(interceptorsElement, context);, +			String allowedOriginsAttribute = element.getAttribute("allowed-origins");, +			List<String> allowedOrigins = Arrays.asList(StringUtils.tokenizeToStringArray(allowedOriginsAttribute, ","));, +			if(!allowedOrigins.isEmpty()) {, +				OriginHandshakeInterceptor interceptor = new OriginHandshakeInterceptor();, +				interceptor.setAllowedOrigins(allowedOrigins);, +				interceptors.add(interceptor);, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.OriginHandshakeInterceptor;, +			ManagedList<? super Object> interceptors = WebSocketNamespaceUtils.parseBeanSubElements(interceptorsElement, context);, +			String allowedOriginsAttribute = element.getAttribute("allowed-origins");, +			List<String> allowedOrigins = Arrays.asList(StringUtils.tokenizeToStringArray(allowedOriginsAttribute, ","));, +			if(!allowedOrigins.isEmpty()) {, +				OriginHandshakeInterceptor interceptor = new OriginHandshakeInterceptor();, +				interceptor.setAllowedOrigins(allowedOrigins);, +				interceptors.add(interceptor);, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketNamespaceUtils.java, +import java.util.Arrays;, +import java.util.List;, +, +import org.springframework.util.StringUtils;, +import org.springframework.web.socket.server.support.OriginHandshakeInterceptor;, +			ManagedList<? super Object> interceptors = WebSocketNamespaceUtils.parseBeanSubElements(interceptorsElement, context);, +			String allowedOriginsAttribute = element.getAttribute("allowed-origins");, +			List<String> allowedOrigins = Arrays.asList(StringUtils.tokenizeToStringArray(allowedOriginsAttribute, ","));, +			if(!allowedOrigins.isEmpty()) {, +				sockJsServiceDef.getPropertyValues().add("allowedOrigins", allowedOrigins);, +				OriginHandshakeInterceptor interceptor = new OriginHandshakeInterceptor();, +				interceptor.setAllowedOrigins(allowedOrigins);, +				interceptors.add(interceptor);, +			}]