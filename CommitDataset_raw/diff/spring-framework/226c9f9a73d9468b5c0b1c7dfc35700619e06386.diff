[+++ b/spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/RequestMappingViewResolutionIntegrationTests.java, +import java.io.IOException;, +import java.net.HttpURLConnection;, +import java.net.Proxy;, +import java.net.URL;, +import reactor.core.publisher.Mono;, +import org.springframework.http.client.SimpleClientHttpRequestFactory;, +import org.springframework.web.client.RestTemplate;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNull;, +	@Test // SPR-15291, +	public void redirect() throws Exception {, +		SimpleClientHttpRequestFactory factory = new SimpleClientHttpRequestFactory() {, +, +			@Override, +			protected void prepareConnection(HttpURLConnection conn, String method) throws IOException {, +				super.prepareConnection(conn, method);, +				conn.setInstanceFollowRedirects(false);, +			}, +		};, +, +		URI uri = new URI("http://localhost:" + this.port + "/redirect");, +		RequestEntity<Void> request = RequestEntity.get(uri).accept(MediaType.ALL).build();, +		ResponseEntity<Void> response = new RestTemplate(factory).exchange(request, Void.class);, +, +		assertEquals(HttpStatus.SEE_OTHER, response.getStatusCode());, +		assertEquals("/", response.getHeaders().getLocation().toString());, +	}, +, +, +		@GetMapping("/redirect"), +		public Mono<String> redirect() {, +			return Mono.just("redirect:/");, +		}]