[+++ b/spring-aop/src/test/java/org/springframework/aop/target/CommonsPool2TargetSourceProxyTests-context.xml, +<?xml version="1.0" encoding="UTF-8"?>, + <!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">, +, +<beans>, +, +	<bean id="testBeanTarget" class="org.springframework.tests.sample.beans.TestBean" scope="prototype"/>, +, +	<bean id="targetSource" class="org.springframework.aop.target.CommonsPool2TargetSource">, +		<property name="targetBeanName" value="testBeanTarget"/>, +	</bean>, +, +	<bean id="testBean" class="org.springframework.aop.framework.ProxyFactoryBean">, +		<property name="targetSource" ref="targetSource"/>, +	</bean>, +, +</beans>, +++ b/spring-aop/src/test/java/org/springframework/aop/target/CommonsPool2TargetSourceProxyTests-context.xml, +<?xml version="1.0" encoding="UTF-8"?>, + <!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">, +, +<beans>, +, +	<bean id="testBeanTarget" class="org.springframework.tests.sample.beans.TestBean" scope="prototype"/>, +, +	<bean id="targetSource" class="org.springframework.aop.target.CommonsPool2TargetSource">, +		<property name="targetBeanName" value="testBeanTarget"/>, +	</bean>, +, +	<bean id="testBean" class="org.springframework.aop.framework.ProxyFactoryBean">, +		<property name="targetSource" ref="targetSource"/>, +	</bean>, +, +</beans>, +++ b/spring-aop/src/test/java/org/springframework/aop/target/CommonsPool2TargetSourceProxyTests.java, +/*, + * Copyright 2002-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.aop.target;, +, +import org.junit.Test;, +, +import org.springframework.aop.support.AopUtils;, +import org.springframework.beans.factory.support.DefaultListableBeanFactory;, +import org.springframework.beans.factory.xml.XmlBeanDefinitionReader;, +import org.springframework.core.io.Resource;, +import org.springframework.tests.sample.beans.ITestBean;, +, +import static org.junit.Assert.*;, +import static org.springframework.tests.TestResourceUtils.*;, +, +/**, + * @author Stephane Nicoll, + */, +public final class CommonsPool2TargetSourceProxyTests {, +, +	private static final Resource CONTEXT =, +		qualifiedResource(CommonsPool2TargetSourceProxyTests.class, "context.xml");, +, +	@Test, +	public void testProxy() throws Exception {, +		DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory();, +		XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(beanFactory);, +		reader.loadBeanDefinitions(CONTEXT);, +		beanFactory.preInstantiateSingletons();, +		ITestBean bean = (ITestBean)beanFactory.getBean("testBean");, +		assertTrue(AopUtils.isAopProxy(bean));, +	}, +}]