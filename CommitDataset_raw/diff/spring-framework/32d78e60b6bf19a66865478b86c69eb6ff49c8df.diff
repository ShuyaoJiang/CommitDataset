[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractAnnotationConfigDispatcherHandlerInitializer.java, + * Copyright 2002-2017 the original author or authors., + * {@link org.springframework.web.WebApplicationInitializer WebApplicationInitializer}, + * to register a {@code DispatcherHandler}, wrapping it in a, + * {@link ServletHttpHandlerAdapter}, and use Java-based Spring configuration., +, +		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext();, +			context.register(configClasses);, +		return context;, +	 * Specify {@code @Configuration} and/or {@code @Component} classes for, +	 * the {@linkplain #createApplicationContext() application context}., +	 * @return the configuration for the application context, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractAnnotationConfigDispatcherHandlerInitializer.java, + * Copyright 2002-2017 the original author or authors., + * {@link org.springframework.web.WebApplicationInitializer WebApplicationInitializer}, + * to register a {@code DispatcherHandler}, wrapping it in a, + * {@link ServletHttpHandlerAdapter}, and use Java-based Spring configuration., +, +		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext();, +			context.register(configClasses);, +		return context;, +	 * Specify {@code @Configuration} and/or {@code @Component} classes for, +	 * the {@linkplain #createApplicationContext() application context}., +	 * @return the configuration for the application context, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractDispatcherHandlerInitializer.java, + * Copyright 2002-2017 the original author or authors., + * implementations that register a {@link DispatcherHandler} in the servlet, + * context, wrapping it in a {@link ServletHttpHandlerAdapter}., + * <p>Most applications should consider extending the Spring Java config, sub-class, + * {@link AbstractAnnotationConfigDispatcherHandlerInitializer}., + * @see AbstractServletHttpHandlerAdapterInitializer, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractAnnotationConfigDispatcherHandlerInitializer.java, + * Copyright 2002-2017 the original author or authors., + * {@link org.springframework.web.WebApplicationInitializer WebApplicationInitializer}, + * to register a {@code DispatcherHandler}, wrapping it in a, + * {@link ServletHttpHandlerAdapter}, and use Java-based Spring configuration., +, +		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext();, +			context.register(configClasses);, +		return context;, +	 * Specify {@code @Configuration} and/or {@code @Component} classes for, +	 * the {@linkplain #createApplicationContext() application context}., +	 * @return the configuration for the application context, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractDispatcherHandlerInitializer.java, + * Copyright 2002-2017 the original author or authors., + * implementations that register a {@link DispatcherHandler} in the servlet, + * context, wrapping it in a {@link ServletHttpHandlerAdapter}., + * <p>Most applications should consider extending the Spring Java config, sub-class, + * {@link AbstractAnnotationConfigDispatcherHandlerInitializer}., + * @see AbstractServletHttpHandlerAdapterInitializer, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractServletHttpHandlerAdapterInitializer.java, + * implementations that register a {@link ServletHttpHandlerAdapter} in the, + * servlet context., + * <p>See {@link AbstractDispatcherHandlerInitializer} if registering a, + * {@link org.springframework.web.reactive.DispatcherHandler DispatcherHandler}., + * @see AbstractDispatcherHandlerInitializer, +		Assert.notNull(httpHandler, "createHttpHandler() did not return a HttpHandler" +, +				"for servlet [" + servletName + "]");, +		Assert.notNull(servlet, "createHttpHandler() did not return a ServletHttpHandlerAdapter " +, +				"for servlet [" + servletName + "]");, +	 * <p>Default implementation returns a {@code ServletHttpHandlerAdapter}, +	 * with the provided {@code httpHandler}., +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractAnnotationConfigDispatcherHandlerInitializer.java, + * Copyright 2002-2017 the original author or authors., + * {@link org.springframework.web.WebApplicationInitializer WebApplicationInitializer}, + * to register a {@code DispatcherHandler}, wrapping it in a, + * {@link ServletHttpHandlerAdapter}, and use Java-based Spring configuration., +, +		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext();, +			context.register(configClasses);, +		return context;, +	 * Specify {@code @Configuration} and/or {@code @Component} classes for, +	 * the {@linkplain #createApplicationContext() application context}., +	 * @return the configuration for the application context, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractDispatcherHandlerInitializer.java, + * Copyright 2002-2017 the original author or authors., + * implementations that register a {@link DispatcherHandler} in the servlet, + * context, wrapping it in a {@link ServletHttpHandlerAdapter}., + * <p>Most applications should consider extending the Spring Java config, sub-class, + * {@link AbstractAnnotationConfigDispatcherHandlerInitializer}., + * @see AbstractServletHttpHandlerAdapterInitializer, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractServletHttpHandlerAdapterInitializer.java, + * implementations that register a {@link ServletHttpHandlerAdapter} in the, + * servlet context., + * <p>See {@link AbstractDispatcherHandlerInitializer} if registering a, + * {@link org.springframework.web.reactive.DispatcherHandler DispatcherHandler}., + * @see AbstractDispatcherHandlerInitializer, +		Assert.notNull(httpHandler, "createHttpHandler() did not return a HttpHandler" +, +				"for servlet [" + servletName + "]");, +		Assert.notNull(servlet, "createHttpHandler() did not return a ServletHttpHandlerAdapter " +, +				"for servlet [" + servletName + "]");, +	 * <p>Default implementation returns a {@code ServletHttpHandlerAdapter}, +	 * with the provided {@code httpHandler}., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/AbstractAnnotationConfigDispatcherServletInitializer.java, + * Copyright 2002-2017 the original author or authors., + * {@link org.springframework.web.WebApplicationInitializer WebApplicationInitializer}, + * to register a {@code DispatcherServlet} and use Java-based Spring configuration., + * <p>Implementations are required to implement:, + * <ul>, + * <li>{@link #getRootConfigClasses()} -- for "root" application context (non-web]