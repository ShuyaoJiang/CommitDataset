[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributes.java, + * Copyright 2002-2019 the original author or authors., +					"Attribute '%s' is of type %s, but %s was expected in attributes for annotation [%s]",, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributes.java, + * Copyright 2002-2019 the original author or authors., +					"Attribute '%s' is of type %s, but %s was expected in attributes for annotation [%s]",, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationReadingVisitorUtils.java, + * Copyright 2002-2019 the original author or authors., +import org.springframework.util.CollectionUtils;, +		if (CollectionUtils.isEmpty(attributesList)) {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributes.java, + * Copyright 2002-2019 the original author or authors., +					"Attribute '%s' is of type %s, but %s was expected in attributes for annotation [%s]",, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationReadingVisitorUtils.java, + * Copyright 2002-2019 the original author or authors., +import org.springframework.util.CollectionUtils;, +		if (CollectionUtils.isEmpty(attributesList)) {, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationAttributesTests.java, + * Copyright 2002-2019 the original author or authors., +		exception.expectMessage(containsString("Attribute 'color' is of type String, but Enum was expected"));, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributes.java, + * Copyright 2002-2019 the original author or authors., +					"Attribute '%s' is of type %s, but %s was expected in attributes for annotation [%s]",, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationReadingVisitorUtils.java, + * Copyright 2002-2019 the original author or authors., +import org.springframework.util.CollectionUtils;, +		if (CollectionUtils.isEmpty(attributesList)) {, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationAttributesTests.java, + * Copyright 2002-2019 the original author or authors., +		exception.expectMessage(containsString("Attribute 'color' is of type String, but Enum was expected"));, +++ b/spring-jdbc/src/test/resources/org/springframework/jdbc/datasource/init/test-data-with-multi-line-nested-comments.sql, +Moreover, the block comment end delimiter]