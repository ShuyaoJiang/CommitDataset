[+++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractFileResolvingResource.java, +				ResourceUtils.useCachesIfNecessary(con);, +			ResourceUtils.useCachesIfNecessary(con);, +			ResourceUtils.useCachesIfNecessary(con);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractFileResolvingResource.java, +				ResourceUtils.useCachesIfNecessary(con);, +			ResourceUtils.useCachesIfNecessary(con);, +			ResourceUtils.useCachesIfNecessary(con);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/UrlResource.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.util.ResourceUtils;, +		ResourceUtils.useCachesIfNecessary(con);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractFileResolvingResource.java, +				ResourceUtils.useCachesIfNecessary(con);, +			ResourceUtils.useCachesIfNecessary(con);, +			ResourceUtils.useCachesIfNecessary(con);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/UrlResource.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.util.ResourceUtils;, +		ResourceUtils.useCachesIfNecessary(con);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java, +			ResourceUtils.useCachesIfNecessary(jarCon);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractFileResolvingResource.java, +				ResourceUtils.useCachesIfNecessary(con);, +			ResourceUtils.useCachesIfNecessary(con);, +			ResourceUtils.useCachesIfNecessary(con);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/UrlResource.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.util.ResourceUtils;, +		ResourceUtils.useCachesIfNecessary(con);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java, +			ResourceUtils.useCachesIfNecessary(jarCon);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/support/PropertiesLoaderUtils.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.util.ResourceUtils;, +				ResourceUtils.useCachesIfNecessary(con);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/AbstractFileResolvingResource.java, +				ResourceUtils.useCachesIfNecessary(con);, +			ResourceUtils.useCachesIfNecessary(con);, +			ResourceUtils.useCachesIfNecessary(con);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/UrlResource.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.util.ResourceUtils;, +		ResourceUtils.useCachesIfNecessary(con);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java, +			ResourceUtils.useCachesIfNecessary(jarCon);, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/support/PropertiesLoaderUtils.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.util.ResourceUtils;, +				ResourceUtils.useCachesIfNecessary(con);, +++ b/org.springframework.core/src/main/java/org/springframework/util/ResourceUtils.java, + * Copyright 2002-2012 the original author or authors., +import java.net.URLConnection;, +	/**, +	 * Set the {@link URLConnection#setUseCaches "useCaches"} flag on the, +	 * given connection, preferring <code>false</code> but leaving the, +	 * flag at <code>true</code> for JNLP based resources., +	 * @param con the URLConnection to set the flag on, +	 */, +	public static void useCachesIfNecessary(URLConnection con) {, +		con.setUseCaches(con.getClass().getName().startsWith("JNLP"));, +	}, +]