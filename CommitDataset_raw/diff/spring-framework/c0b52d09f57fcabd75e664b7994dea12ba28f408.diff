[+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/GetMapping.java, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/GetMapping.java, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, +	 * <p>This is an alias for {@link #path}. For example,, +	 * <p><strong>NOTE</strong>: Each handler method must be mapped to a, +	 * non-empty path, either at the type level, at the method level, or a, +	 * combination of the two. If you wish to map to all paths, please map, +	 * explicitly to {@code "/**"} or {@code "**"}., +	 * The path mapping URIs (e.g. {@code "/myPath.do"})., +	 * <p>Ant-style path patterns are also supported (e.g. {@code "/myPath/*.do"})., +	 * At the method level, relative paths (e.g. {@code "edit.do"}) are supported, +	 * Path mapping URIs may contain placeholders (e.g. <code>"/${connect}"</code>)., +	 * <p><strong>NOTE</strong>: Each handler method must be mapped to a, +	 * non-empty path, either at the type level, at the method level, or a, +	 * combination of the two. If you wish to map to all paths, please map, +	 * explicitly to {@code "/**"} or {@code "**"}., +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/GetMapping.java, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, +	 * <p>This is an alias for {@link #path}. For example,, +	 * <p><strong>NOTE</strong>: Each handler method must be mapped to a, +	 * non-empty path, either at the type level, at the method level, or a, +	 * combination of the two. If you wish to map to all paths, please map, +	 * explicitly to {@code "/**"} or {@code "**"}., +	 * The path mapping URIs (e.g. {@code "/myPath.do"})., +	 * <p>Ant-style path patterns are also supported (e.g. {@code "/myPath/*.do"})., +	 * At the method level, relative paths (e.g. {@code "edit.do"}) are supported, +	 * Path mapping URIs may contain placeholders (e.g. <code>"/${connect}"</code>)., +	 * <p><strong>NOTE</strong>: Each handler method must be mapped to a, +	 * non-empty path, either at the type level, at the method level, or a, +	 * combination of the two. If you wish to map to all paths, please map, +	 * explicitly to {@code "/**"} or {@code "**"}., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java, +import org.springframework.util.StringUtils;, + * @author Sam Brannen, +				assertMappedPathMethodMapping(handlerMethod, mapping);, +		/**, +		 * Assert that the supplied {@code mapping} maps the supplied {@link HandlerMethod}, +		 * to explicit, non-empty paths., +		 * @since 5.2, +		 * @see StringUtils#hasText(String), +		 */, +		private void assertMappedPathMethodMapping(HandlerMethod handlerMethod, T mapping) {, +			if (!getMappingPathPatterns(mapping).stream().allMatch(StringUtils::hasText)) {, +				throw new IllegalStateException(String.format("Missing path mapping. " +, +						"Handler method '%s' in bean '%s' must be mapped to a non-empty path. " +, +						"If you wish to map to all paths, please map explicitly to \"/**\" or \"**\".",, +					handlerMethod, handlerMethod.getBean()));, +			}, +		}, +, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/GetMapping.java, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, +	 * <p>This is an alias for {@link #path}. For example,, +	 * <p><strong>NOTE</strong>: Each handler method must be mapped to a, +	 * non-empty path, either at the type level, at the method level, or a, +	 * combination of the two. If you wish to map to all paths, please map, +	 * explicitly to {@code "/**"} or {@code "**"}., +	 * The path mapping URIs (e.g. {@code "/myPath.do"})., +	 * <p>Ant-style path patterns are also supported (e.g. {@code "/myPath/*.do"})., +	 * At the method level, relative paths (e.g. {@code "edit.do"}) are supported, +	 * Path mapping URIs may contain placeholders (e.g. <code>"/${connect}"</code>)., +	 * <p><strong>NOTE</strong>: Each handler method must be mapped to a, +	 * non-empty path, either at the type level, at the method level, or a, +	 * combination of the two. If you wish to map to all paths, please map, +	 * explicitly to {@code "/**"} or {@code "**"}., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java, +import org.springframework.util.StringUtils;, + * @author Sam Brannen, +				assertMappedPathMethodMapping(handlerMethod, mapping);, +		/**, +		 * Assert that the supplied {@code mapping} maps the supplied {@link HandlerMethod}, +		 * to explicit, non-empty paths., +		 * @since 5.2, +		 * @see StringUtils#hasText(String), +		 */, +		private void assertMappedPathMethodMapping(HandlerMethod handlerMethod, T mapping) {, +			if (!getMappingPathPatterns(mapping).stream().allMatch(StringUtils::hasText)) {, +				throw new IllegalStateException(String.format("Missing path mapping. " +, +						"Handler method '%s' in bean '%s' must be mapped to a non-empty path. " +, +						"If you wish to map to all paths, please map explicitly to \"/**\" or \"**\".",, +					handlerMethod, handlerMethod.getBean()));, +			}, +		}, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMappingTests.java, +	private HandlerMethod rootMethod;, +		this.rootMethod = new HandlerMethod(testController, "root");, +		assertEquals(this.rootMethod.getMethod(), handlerMethod.getMethod());, +		assertEquals(this.rootMethod.getMethod(), handlerMethod.getMethod());, +		@RequestMapping("/"), +		public void root() {, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/GetMapping.java, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, +	 * <p>This is an alias for {@link #path}. For example,, +	 * <p><strong>NOTE</strong>: Each handler method must be mapped to a, +	 * non-empty path, either at the type level, at the method level, or a, +	 * combination of the two. If you wish to map to all paths, please map, +	 * explicitly to {@code "/**"} or {@code "**"}., +	 * The path mapping URIs (e.g. {@code "/myPath.do"})., +	 * <p>Ant-style path patterns are also supported (e.g. {@code "/myPath/*.do"}).]