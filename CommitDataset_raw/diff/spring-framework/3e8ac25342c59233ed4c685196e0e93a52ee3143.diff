[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClientBuilder.java, +import org.springframework.http.client.reactive.ClientHttpConnector;, +import org.springframework.http.client.reactive.ReactorClientHttpConnector;, +import org.springframework.web.util.DefaultUriBuilderFactory;, +	private ClientHttpConnector connector;, +	private ExchangeStrategies exchangeStrategies = ExchangeStrategies.withDefaults();, +, +, +	public DefaultWebClientBuilder(String baseUrl) {, +		this(new DefaultUriBuilderFactory(baseUrl));, +	}, +, +	public DefaultWebClientBuilder(UriBuilderFactory uriBuilderFactory) {, +		Assert.notNull(uriBuilderFactory, "UriBuilderFactory is required.");, +		this.uriBuilderFactory = uriBuilderFactory;, +	public WebClient.Builder clientConnector(ClientHttpConnector connector) {, +		this.connector = connector;, +		return this;, +	}, +, +	@Override, +	public WebClient.Builder exchangeStrategies(ExchangeStrategies strategies) {, +		Assert.notNull(strategies, "ExchangeStrategies is required.");, +		this.exchangeStrategies = strategies;, +		ClientHttpConnector connector = this.connector != null ? this.connector : new ReactorClientHttpConnector();, +		ExchangeFunction exchangeFunction = ExchangeFunctions.create(connector, this.exchangeStrategies);, +		return new DefaultWebClient(exchangeFunction, this.uriBuilderFactory);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClientBuilder.java, +import org.springframework.http.client.reactive.ClientHttpConnector;, +import org.springframework.http.client.reactive.ReactorClientHttpConnector;, +import org.springframework.web.util.DefaultUriBuilderFactory;, +	private ClientHttpConnector connector;, +	private ExchangeStrategies exchangeStrategies = ExchangeStrategies.withDefaults();, +, +, +	public DefaultWebClientBuilder(String baseUrl) {, +		this(new DefaultUriBuilderFactory(baseUrl));, +	}, +, +	public DefaultWebClientBuilder(UriBuilderFactory uriBuilderFactory) {, +		Assert.notNull(uriBuilderFactory, "UriBuilderFactory is required.");, +		this.uriBuilderFactory = uriBuilderFactory;, +	public WebClient.Builder clientConnector(ClientHttpConnector connector) {, +		this.connector = connector;, +		return this;, +	}, +, +	@Override, +	public WebClient.Builder exchangeStrategies(ExchangeStrategies strategies) {, +		Assert.notNull(strategies, "ExchangeStrategies is required.");, +		this.exchangeStrategies = strategies;, +		ClientHttpConnector connector = this.connector != null ? this.connector : new ReactorClientHttpConnector();, +		ExchangeFunction exchangeFunction = ExchangeFunctions.create(connector, this.exchangeStrategies);, +		return new DefaultWebClient(exchangeFunction, this.uriBuilderFactory);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/client/WebClient.java, +import org.springframework.web.util.DefaultUriBuilderFactory;, +	 * Shortcut for:, +	 * <pre class="code">, +	 * WebClient client = builder(baseUrl).build();, +	 * </pre>, +	 * @param baseUrl the base URI for all requests, +	static WebClient create(String baseUrl) {, +		return new DefaultWebClientBuilder(baseUrl).build();, +	 * Obtain a {@code WebClient} builder with a base URI to be used as the, +	 * base for expanding URI templates during exchanges. The given String, +	 * is used to create an instance of {@link DefaultUriBuilderFactory} whose, +	 * {@link DefaultUriBuilderFactory#DefaultUriBuilderFactory(String), +	 * constructor} provides more details on how the base URI is applied., +	 * @param baseUrl the base URI for all requests, +	static WebClient.Builder builder(String baseUrl) {, +		return new DefaultWebClientBuilder(baseUrl);, +	 * Obtain a {@code WebClient} builder with the {@link UriBuilderFactory}, +	 * to use for expanding URI templates during exchanges., +	 * @param uriBuilderFactory the factory to use, +	static WebClient.Builder builder(UriBuilderFactory uriBuilderFactory) {, +		return new DefaultWebClientBuilder(uriBuilderFactory);, +		 * Configure the {@link ClientHttpConnector} to use., +		 * <p>By default an instance of, +		 * {@link org.springframework.http.client.reactive.ReactorClientHttpConnector, +		 * ReactorClientHttpConnector} is created if this is not set. However a, +		 * shared instance may be passed instead, e.g. for use with multiple, +		 * {@code WebClient}'s targeting different base URIs., +		 * @param connector the connector to use, +		Builder clientConnector(ClientHttpConnector connector);, +, +		/**, +		 * Configure the {@link ExchangeStrategies} to use., +		 * <p>By default {@link ExchangeStrategies#withDefaults()} is used., +		 * @param strategies the strategies to use, +		 */, +		Builder exchangeStrategies(ExchangeStrategies strategies);, +		 * @see #builder(String), +		 * @see #builder(String), +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClientBuilder.java, +import org.springframework.http.client.reactive.ClientHttpConnector;, +import org.springframework.http.client.reactive.ReactorClientHttpConnector;, +import org.springframework.web.util.DefaultUriBuilderFactory;, +	private ClientHttpConnector connector;, +	private ExchangeStrategies exchangeStrategies = ExchangeStrategies.withDefaults();, +]