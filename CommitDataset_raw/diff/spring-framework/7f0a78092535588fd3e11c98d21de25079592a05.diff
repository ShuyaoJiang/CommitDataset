[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-core/src/main/java/org/springframework/util/xml/StaxUtils.java, + * Convenience methods for working with the StAX API. Partly historic due to JAXP 1.3 compatibility;, + * as of Spring 4.0, relying on JAXP 1.4 as included in JDK 1.6 and higher., +	 * Create a JAXP 1.4 {@link StAXSource} for the given {@link XMLStreamReader}., +		return new StAXSource(streamReader);, +	 * Create a JAXP 1.4 a {@link StAXSource} for the given {@link XMLEventReader}., +		return new StAXSource(eventReader);, +	 * @return {@code true} if {@code source} is a JAXP 1.4 {@link StAXSource};, +	 * {@code false} otherwise., +		return (source instanceof StAXSource);, +	 * Create a JAXP 1.4 {@link StAXResult} for the given {@link XMLStreamWriter}., +		return new StAXResult(streamWriter);, +	 * Create a JAXP 1.4 {@link StAXResult} for the given {@link XMLEventWriter}., +		return new StAXResult(eventWriter);, +	 * @return {@code true} if {@code result} is a JAXP 1.4 {@link StAXResult};, +	 * {@code false} otherwise., +		return (result instanceof StAXResult);, +	 * @param source a JAXP 1.4 {@link StAXSource}, +	 * @throws IllegalArgumentException if {@code source} isn't a JAXP 1.4 {@link StAXSource}, +		Assert.isInstanceOf(StAXSource.class, source);, +		return ((StAXSource) source).getXMLStreamReader();, +	 * @param source a JAXP 1.4 {@link StAXSource}, +	 * @throws IllegalArgumentException if {@code source} isn't a JAXP 1.4 {@link StAXSource}, +		Assert.isInstanceOf(StAXSource.class, source);, +		return ((StAXSource) source).getXMLEventReader();, +	 * @param result a JAXP 1.4 {@link StAXResult}, +	 * @throws IllegalArgumentException if {@code source} isn't a JAXP 1.4 {@link StAXResult}, +		Assert.isInstanceOf(StAXResult.class, result);, +		return ((StAXResult) result).getXMLStreamWriter();, +	 * @param result a JAXP 1.4 {@link StAXResult}, +	 * @throws IllegalArgumentException if {@code source} isn't a JAXP 1.4 {@link StAXResult}, +		Assert.isInstanceOf(StAXResult.class, result);, +		return ((StAXResult) result).getXMLEventWriter();, +	 * Return a {@link XMLStreamReader} that reads from a {@link XMLEventReader}., +	 * Useful because the StAX {@code XMLInputFactory} allows one to create an, +	 * event reader from a stream reader, but not vice-versa., +++ /dev/null, +++ /dev/null, +++ b/spring-core/src/main/java/org/springframework/util/xml/StaxUtils.java, + * Convenience methods for working with the StAX API. Partly historic due to JAXP 1.3 compatibility;, + * as of Spring 4.0, relying on JAXP 1.4 as included in JDK 1.6 and higher., +	 * Create a JAXP 1.4 {@link StAXSource} for the given {@link XMLStreamReader}., +		return new StAXSource(streamReader);, +	 * Create a JAXP 1.4 a {@link StAXSource} for the given {@link XMLEventReader}., +		return new StAXSource(eventReader);, +	 * @return {@code true} if {@code source} is a JAXP 1.4 {@link StAXSource};, +	 * {@code false} otherwise., +		return (source instanceof StAXSource);, +	 * Create a JAXP 1.4 {@link StAXResult} for the given {@link XMLStreamWriter}., +		return new StAXResult(streamWriter);, +	 * Create a JAXP 1.4 {@link StAXResult} for the given {@link XMLEventWriter}., +		return new StAXResult(eventWriter);, +	 * @return {@code true} if {@code result} is a JAXP 1.4 {@link StAXResult};, +	 * {@code false} otherwise., +		return (result instanceof StAXResult);, +	 * @param source a JAXP 1.4 {@link StAXSource}, +	 * @throws IllegalArgumentException if {@code source} isn't a JAXP 1.4 {@link StAXSource}, +		Assert.isInstanceOf(StAXSource.class, source);, +		return ((StAXSource) source).getXMLStreamReader();, +	 * @param source a JAXP 1.4 {@link StAXSource}, +	 * @throws IllegalArgumentException if {@code source} isn't a JAXP 1.4 {@link StAXSource}, +		Assert.isInstanceOf(StAXSource.class, source);, +		return ((StAXSource) source).getXMLEventReader();, +	 * @param result a JAXP 1.4 {@link StAXResult}, +	 * @throws IllegalArgumentException if {@code source} isn't a JAXP 1.4 {@link StAXResult}, +		Assert.isInstanceOf(StAXResult.class, result);, +		return ((StAXResult) result).getXMLStreamWriter();, +	 * @param result a JAXP 1.4 {@link StAXResult}, +	 * @throws IllegalArgumentException if {@code source} isn't a JAXP 1.4 {@link StAXResult}, +		Assert.isInstanceOf(StAXResult.class, result);, +		return ((StAXResult) result).getXMLEventWriter();, +	 * Return a {@link XMLStreamReader} that reads from a {@link XMLEventReader}., +	 * Useful because the StAX {@code XMLInputFactory} allows one to create an, +	 * event reader from a stream reader, but not vice-versa., +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-core/src/main/java/org/springframework/util/xml/StaxUtils.java, + * Convenience methods for working with the StAX API. Partly historic due to JAXP 1.3 compatibility;, + * as of Spring 4.0, relying on JAXP 1.4 as included in JDK 1.6 and higher., +	 * Create a JAXP 1.4 {@link StAXSource} for the given {@link XMLStreamReader}., +		return new StAXSource(streamReader);, +	 * Create a JAXP 1.4 a {@link StAXSource} for the given {@link XMLEventReader}., +		return new StAXSource(eventReader);, +	 * @return {@code true} if {@code source} is a JAXP 1.4 {@link StAXSource};, +	 * {@code false} otherwise., +		return (source instanceof StAXSource);, +	 * Create a JAXP 1.4 {@link StAXResult} for the given {@link XMLStreamWriter}., +		return new StAXResult(streamWriter);, +	 * Create a JAXP 1.4 {@link StAXResult} for the given {@link XMLEventWriter}., +		return new StAXResult(eventWriter);, +	 * @return {@code true} if {@code result} is a JAXP 1.4 {@link StAXResult};, +	 * {@code false} otherwise., +		return (result instanceof StAXResult);, +	 * @param source a JAXP 1.4 {@link StAXSource}]