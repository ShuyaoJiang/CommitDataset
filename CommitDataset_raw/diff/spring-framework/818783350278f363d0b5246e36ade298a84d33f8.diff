[+++ b/spring-web/src/main/java/org/springframework/http/converter/json/GsonHttpMessageConverter.java, +	 * Indicate whether the JSON output by this view should be prefixed with ")]}', "., +	 * so that it cannot be hijacked., +	 * This prefix should be stripped before parsing the string as JSON., +		this.jsonPrefix = (prefixJson ? ")]}', " : null);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/GsonHttpMessageConverter.java, +	 * Indicate whether the JSON output by this view should be prefixed with ")]}', "., +	 * so that it cannot be hijacked., +	 * This prefix should be stripped before parsing the string as JSON., +		this.jsonPrefix = (prefixJson ? ")]}', " : null);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, +	 * Indicate whether the JSON output by this view should be prefixed with ")]}', ". Default is false., +	 * This prefix should be stripped before parsing the string as JSON., +		this.jsonPrefix = (prefixJson ? ")]}', " : null);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/GsonHttpMessageConverter.java, +	 * Indicate whether the JSON output by this view should be prefixed with ")]}', "., +	 * so that it cannot be hijacked., +	 * This prefix should be stripped before parsing the string as JSON., +		this.jsonPrefix = (prefixJson ? ")]}', " : null);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, +	 * Indicate whether the JSON output by this view should be prefixed with ")]}', ". Default is false., +	 * This prefix should be stripped before parsing the string as JSON., +		this.jsonPrefix = (prefixJson ? ")]}', " : null);, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/GsonHttpMessageConverterTests.java, +		assertEquals(")]}', \"foo\"", outputMessage.getBodyAsString(UTF8));, +		this.converter.setJsonPrefix(")))");, +		assertEquals(")))\"foo\"", outputMessage.getBodyAsString(UTF8));, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/GsonHttpMessageConverter.java, +	 * Indicate whether the JSON output by this view should be prefixed with ")]}', "., +	 * so that it cannot be hijacked., +	 * This prefix should be stripped before parsing the string as JSON., +		this.jsonPrefix = (prefixJson ? ")]}', " : null);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, +	 * Indicate whether the JSON output by this view should be prefixed with ")]}', ". Default is false., +	 * This prefix should be stripped before parsing the string as JSON., +		this.jsonPrefix = (prefixJson ? ")]}', " : null);, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/GsonHttpMessageConverterTests.java, +		assertEquals(")]}', \"foo\"", outputMessage.getBodyAsString(UTF8));, +		this.converter.setJsonPrefix(")))");, +		assertEquals(")))\"foo\"", outputMessage.getBodyAsString(UTF8));, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverterTests.java, +		assertEquals(")]}', \"foo\"", outputMessage.getBodyAsString(Charset.forName("UTF-8")));, +		this.converter.setJsonPrefix(")))");, +		assertEquals(")))\"foo\"", outputMessage.getBodyAsString(Charset.forName("UTF-8")));, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/GsonHttpMessageConverter.java, +	 * Indicate whether the JSON output by this view should be prefixed with ")]}', "., +	 * so that it cannot be hijacked., +	 * This prefix should be stripped before parsing the string as JSON., +		this.jsonPrefix = (prefixJson ? ")]}', " : null);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, +	 * Indicate whether the JSON output by this view should be prefixed with ")]}', ". Default is false., +	 * This prefix should be stripped before parsing the string as JSON., +		this.jsonPrefix = (prefixJson ? ")]}', " : null);, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/GsonHttpMessageConverterTests.java, +		assertEquals(")]}', \"foo\"", outputMessage.getBodyAsString(UTF8));, +		this.converter.setJsonPrefix(")))");, +		assertEquals(")))\"foo\"", outputMessage.getBodyAsString(UTF8));, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverterTests.java, +		assertEquals(")]}', \"foo\"", outputMessage.getBodyAsString(Charset.forName("UTF-8")));, +		this.converter.setJsonPrefix(")))");, +		assertEquals(")))\"foo\"", outputMessage.getBodyAsString(Charset.forName("UTF-8")));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/json/MappingJackson2JsonView.java, +	 * Indicates whether the JSON output by this view should be prefixed with <tt>")]}', "</tt>., +	 * This prefix should be stripped before parsing the string as JSON., +		this.jsonPrefix = (prefixJson ? ")]}', " : null);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/GsonHttpMessageConverter.java, +	 * Indicate whether the JSON output by this view should be prefixed with ")]}', "., +	 * so that it cannot be hijacked., +	 * This prefix should be stripped before parsing the string as JSON., +		this.jsonPrefix = (prefixJson ? ")]}', " : null);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, +	 * Indicate whether the JSON output by this view should be prefixed with ")]}', ". Default is false., +	 * This prefix should be stripped before parsing the string as JSON., +		this.jsonPrefix = (prefixJson ? ")]}', " : null);, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/GsonHttpMessageConverterTests.java, +		assertEquals(")]}', \"foo\"", outputMessage.getBodyAsString(UTF8));, +		this.converter.setJsonPrefix(")))");, +		assertEquals(")))\"foo\"", outputMessage.getBodyAsString(UTF8));, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverterTests.java, +		assertEquals(")]}', \"foo\"", outputMessage.getBodyAsString(Charset.forName("UTF-8")));, +		this.converter.setJsonPrefix(")))");, +		assertEquals(")))\"foo\"", outputMessage.getBodyAsString(Charset.forName("UTF-8")));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/json/MappingJackson2JsonView.java, +	 * Indicates whether the JSON output by this view should be prefixed with <tt>")]}', "</tt>., +	 * This prefix should be stripped before parsing the string as JSON., +		this.jsonPrefix = (prefixJson ? ")]}', " : null);, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/view/json/MappingJackson2JsonViewTests.java, +import org.springframework.beans.DirectFieldAccessor;, +		assertTrue(response.getContentAsString().startsWith(")]}', "));, +		assertFalse(response.getContentAsString().startsWith(")]}', "));, +		String json = response.getContentAsString();, +		DirectFieldAccessor viewAccessor = new DirectFieldAccessor(view);, +		String jsonPrefix = (String)viewAccessor.getPropertyValue("jsonPrefix");, +		if (jsonPrefix != null) {, +			json = json.substring(5);, +		}, +				jsContext.evaluateString(jsScope, "(" + json + ")", "JSON Stream", 1, null);]