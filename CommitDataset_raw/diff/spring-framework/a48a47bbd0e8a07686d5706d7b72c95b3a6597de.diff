[+++ b/.editorconfig, +root = true, +, +[*.{adoc,bat,groovy,html,java,js,jsp,kt,kts,md,properties,py,rb,sh,sql,svg,txt,xml,xsd}], +charset = utf-8, +, +[*.{groovy,java,kt,kts,xml,xsd}], +indent_style = tab, +indent_size = 4, +continuation_indent_size = 8, +end_of_line = lf, +++ b/.editorconfig, +root = true, +, +[*.{adoc,bat,groovy,html,java,js,jsp,kt,kts,md,properties,py,rb,sh,sql,svg,txt,xml,xsd}], +charset = utf-8, +, +[*.{groovy,java,kt,kts,xml,xsd}], +indent_style = tab, +indent_size = 4, +continuation_indent_size = 8, +end_of_line = lf, +++ b/build.gradle, +	ext.kotlinVersion = '1.1.4-eap-33', +		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }, +	id "org.sonarqube" version "2.5", +	ext.aspectjVersion         = "1.9.0.BETA-6", +	ext.caffeineVersion        = "2.5.3", +	ext.eclipselinkVersion     = "2.6.5-RC2", +	ext.fileuploadVersion      = "1.3.3", +	ext.groovyVersion          = "2.5.0-beta-1", +	ext.gsonVersion            = "2.8.1", +	ext.hibvalVersion          = "5.4.1.Final", +	ext.jackson2Version        = "2.9.0.pr4", +	ext.javamailVersion        = "1.6.0", +	ext.jettyVersion           = "9.4.6.v20170531", +	ext.jsonassertVersion      = "1.5.0", +	ext.junitVintageVersion    = "4.12.0-M6", +	ext.junitJupiterVersion    = '5.0.0-M6', +	ext.junitPlatformVersion   = '1.0.0-M6', +	ext.nettyVersion           = "4.1.13.Final", +	ext.niomultipartVersion    = "1.1.0", +	ext.okhttp3Version         = "3.8.1", +	ext.reactorVersion         = "Bismuth-M3", +	ext.romeVersion            = "1.7.4", +	ext.rxjava2Version         = '2.1.2', +	ext.tomcatVersion          = "8.5.16", +	ext.undertowVersion        = "1.4.18.Final", +	ext.xstreamVersion         = "1.4.10", +		kotlinOptions.freeCompilerArgs = ["-Xskip-runtime-version-check", "-Xload-jsr305-annotations"], +		kotlinOptions.freeCompilerArgs = ["-Xskip-runtime-version-check", "-Xload-jsr305-annotations"], +		maven { url "https://repo.spring.io/snapshot" }, +		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }, +		provided("com.google.code.findbugs:jsr305:3.0.2"), +		testCompile("com.nhaarman:mockito-kotlin:1.5.0") {, +			exclude module:'kotlin-stdlib', +			exclude module:'kotlin-reflect', +			exclude module:'mockito-core', +		}, +	def objenesisVersion = "2.6", +		optional("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"), +		testCompile("io.projectreactor:reactor-test"), +		optional("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"), +		optional("org.hibernate:hibernate-validator:${hibvalVersion}"), +		optional("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"), +		optional("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"), +		testCompile("org.ogce:xpp3:1.1.6"), +		optional(project(":spring-context")), +		testCompile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"), +		testRuntime("javax.activation:activation:${activationApiVersion}"), +		compile(project(":spring-core")), +		optional(project(":spring-aop")), +		optional(project(":spring-context")), +		optional("com.h2database:h2:1.4.196"), +		optional("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"), +		compile(project(":spring-core")), +		compile(project(":spring-beans")), +		optional(project(":spring-aop")), +		optional(project(":spring-context")), +		optional(project(":spring-oxm")), +		optional("javax.servlet:javax.servlet-api:${servletVersion}"), +		optional("javax.json.bind:javax.json.bind-api:1.0"), +		optional("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"), +		optional("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"), +		testCompile("io.projectreactor:reactor-test"), +		testCompile("org.skyscreamer:jsonassert:${jsonassertVersion}"), +		testRuntime("javax.json:javax.json-api:1.1"), +		testRuntime("org.apache.johnzon:johnzon-jsonb:1.1.1"), +		optional(project(":spring-oxm")), +		optional("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"), +		optional("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"), +		testCompile("org.hibernate:hibernate-validator:${hibvalVersion}"), +		testRuntime("org.jruby:jruby:9.1.12.0"), +		testRuntime("javax.activation:activation:${activationApiVersion}"), +		compile(project(":spring-core")), +project("spring-webflux") {, +	description = "Spring WebFlux", +, +	dependencies {, +		compile(project(":spring-beans"))]