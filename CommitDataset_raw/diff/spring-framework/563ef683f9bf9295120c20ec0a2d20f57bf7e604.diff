[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionService.java, +	 * @param source the source type to convert from (required), +	 * @param targetType the target type to convert to (required), +	 * @param targetType the target type to convert to (required), +	 * @return the converted object, an instance of targetType, +	 * Returns true if objects of sourceType can be converted to the targetType described by the TypeDescriptor., +	 * The TypeDescriptor provides additional context about the point where conversion is needed, often an object property location., +	 * This flavor of the canConvert operation is mainly for use by a data binding framework, and not by user code., +	 * @param source the source type to convert from (required), +	 * @param targetType context about the target type to convert to (required), +	 * @return true if a conversion can be performed, false if not, +	 */, +	boolean canConvert(Class<?> sourceType, TypeDescriptor targetType);, +, +	/**, +	 * Convert the source to the targetType described by the TypeDescriptor., +	 * The TypeDescriptor provides additional context about the point where conversion is needed, often a object property location., +	 * This flavor of the convert operation is mainly for use by a data binding framework, and not by user code., +	 * @param targetType context about the target type to convert to (required), +	 * @return the converted object, an instance of {@link TypeDescriptor#getType()}</code>]