[+++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/context/PortletRequestAttributes.java, + * Copyright 2002-2009 the original author or authors., +	 * <p>Note: The callback object should be serializable in order to survive, +	 * web app restarts., +	protected void registerSessionDestructionCallback(String name, Runnable callback) {, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/context/PortletRequestAttributes.java, + * Copyright 2002-2009 the original author or authors., +	 * <p>Note: The callback object should be serializable in order to survive, +	 * web app restarts., +	protected void registerSessionDestructionCallback(String name, Runnable callback) {, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/request/DestructionCallbackBindingListener.java, + * Copyright 2002-2009 the original author or authors., + *, + * @author Juergen Hoeller, + * @since 3.0, + * @see RequestAttributes#registerDestructionCallback, + * @see ServletRequestAttributes#registerSessionDestructionCallback, +	/**, +	 * Create a new DestructionCallbackBindingListener for the given callback., +	 * @param destructionCallback the Runnable to execute when this listener, +	 * object gets unbound from the session, +	 */, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/context/PortletRequestAttributes.java, + * Copyright 2002-2009 the original author or authors., +	 * <p>Note: The callback object should be serializable in order to survive, +	 * web app restarts., +	protected void registerSessionDestructionCallback(String name, Runnable callback) {, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/request/DestructionCallbackBindingListener.java, + * Copyright 2002-2009 the original author or authors., + *, + * @author Juergen Hoeller, + * @since 3.0, + * @see RequestAttributes#registerDestructionCallback, + * @see ServletRequestAttributes#registerSessionDestructionCallback, +	/**, +	 * Create a new DestructionCallbackBindingListener for the given callback., +	 * @param destructionCallback the Runnable to execute when this listener, +	 * object gets unbound from the session, +	 */, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/request/RequestAttributes.java, + * Copyright 2002-2009 the original author or authors., +	/**, +	 * Name of the standard reference to the request object: "request"., +	 * @see #resolveReference, +	 */, +	/**, +	 * Name of the standard reference to the session object: "session"., +	 * @see #resolveReference, +	 */, +	 * <p><b>NOTE:</b> Callback objects should generally be serializable if, +	 * they are being registered for a session scope. Otherwise the callback, +	 * (or even the entire session) might not survive web app restarts., +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/context/PortletRequestAttributes.java, + * Copyright 2002-2009 the original author or authors., +	 * <p>Note: The callback object should be serializable in order to survive, +	 * web app restarts., +	protected void registerSessionDestructionCallback(String name, Runnable callback) {, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/request/DestructionCallbackBindingListener.java, + * Copyright 2002-2009 the original author or authors., + *, + * @author Juergen Hoeller, + * @since 3.0, + * @see RequestAttributes#registerDestructionCallback, + * @see ServletRequestAttributes#registerSessionDestructionCallback, +	/**, +	 * Create a new DestructionCallbackBindingListener for the given callback., +	 * @param destructionCallback the Runnable to execute when this listener, +	 * object gets unbound from the session, +	 */, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/request/RequestAttributes.java, + * Copyright 2002-2009 the original author or authors., +	/**, +	 * Name of the standard reference to the request object: "request"., +	 * @see #resolveReference, +	 */, +	/**, +	 * Name of the standard reference to the session object: "session"., +	 * @see #resolveReference, +	 */, +	 * <p><b>NOTE:</b> Callback objects should generally be serializable if, +	 * they are being registered for a session scope. Otherwise the callback, +	 * (or even the entire session) might not survive web app restarts., +++ b/org.springframework.web/src/main/java/org/springframework/web/context/request/ServletRequestAttributes.java, + * Copyright 2002-2009 the original author or authors., +	 * <p>Note: The callback object should be serializable in order to survive, +	 * web app restarts., +	protected void registerSessionDestructionCallback(String name, Runnable callback) {]