[+++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/DefaultMvcResult.java, +	private Object asyncResult;, +, +	public void setAsyncResult(Object asyncResult) {, +		this.asyncResult = asyncResult;, +			if (!awaitAsyncResult(request)) {, +						"Gave up waiting on async result from handler [" + this.handler + "] to complete");, +			}, +		}, +		return this.asyncResult;, +	private boolean awaitAsyncResult(HttpServletRequest request) {, +		long timeout = request.getAsyncContext().getTimeout();, +	public void setAsyncResultLatch(CountDownLatch asyncResultLatch) {, +		this.asyncResultLatch = asyncResultLatch;, +	}, +, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/DefaultMvcResult.java, +	private Object asyncResult;, +, +	public void setAsyncResult(Object asyncResult) {, +		this.asyncResult = asyncResult;, +			if (!awaitAsyncResult(request)) {, +						"Gave up waiting on async result from handler [" + this.handler + "] to complete");, +			}, +		}, +		return this.asyncResult;, +	private boolean awaitAsyncResult(HttpServletRequest request) {, +		long timeout = request.getAsyncContext().getTimeout();, +	public void setAsyncResultLatch(CountDownLatch asyncResultLatch) {, +		this.asyncResultLatch = asyncResultLatch;, +	}, +, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/TestDispatcherServlet.java, +	private CountDownLatch registerAsyncInterceptors(final HttpServletRequest servletRequest) {, +		WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(servletRequest);, +				getMvcResult(servletRequest).setAsyncResult(value);, +				getMvcResult(servletRequest).setAsyncResult(value);]