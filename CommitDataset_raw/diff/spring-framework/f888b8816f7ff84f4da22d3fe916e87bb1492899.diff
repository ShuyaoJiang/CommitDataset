[+++ b/spring-tx/src/test/java/org/springframework/transaction/annotation/AnnotationTransactionAttributeSourceTests.java, +, +import static org.junit.Assert.*;, +, +		Method method = TestInterface9.class.getMethod("getAge", (Class[]) null);, +		TransactionAttribute actual = atas.getTransactionAttribute(method, TestBean9.class);, +		assertNotNull("Retrieved TransactionAttribute for TestBean9", actual);, +		RuleBasedTransactionAttribute rbta = new RuleBasedTransactionAttribute();, +		rbta.getRollbackRules().add(new RollbackRuleAttribute(Exception.class));, +		rbta.getRollbackRules().add(new NoRollbackRuleAttribute(IOException.class));, +		assertEquals(rbta.getRollbackRules(), ((RuleBasedTransactionAttribute) actual).getRollbackRules());, +, +		assertTrue(actual.isReadOnly());, +		Method method = TestInterface10.class.getMethod("getAge", (Class[]) null);, +		TransactionAttribute actual = atas.getTransactionAttribute(method, TestBean10.class);, +		assertNotNull("Retrieved TransactionAttribute for TestBean10", actual);, +		RuleBasedTransactionAttribute rbta = new RuleBasedTransactionAttribute();, +		rbta.getRollbackRules().add(new RollbackRuleAttribute(Exception.class));, +		rbta.getRollbackRules().add(new NoRollbackRuleAttribute(IOException.class));, +		assertEquals(rbta.getRollbackRules(), ((RuleBasedTransactionAttribute) actual).getRollbackRules());, +, +		assertTrue(actual.isReadOnly());]