[+++ b/spring-test/src/main/java/org/springframework/test/jdbc/JdbcTestUtils.java, +	 * be one statement per line. Any semicolons and line comments will be removed., +	 * @see #executeSqlScript(JdbcTemplate, Resource, boolean), +	 * allowed to span lines only if they are delimited with a semicolon. Any, +	 * line comments will be removed., +	 * @see #executeSqlScript(JdbcTemplate, EncodedResource, boolean), +	 * be one statement per line. Any semicolons and line comments will be removed., +	 * <p>Lines <em>beginning</em> with the comment prefix are excluded from the, +	 * results; however, line comments anywhere else &mdash; for example, within, +	 * a statement &mdash; will be included in the results., +	 * @param commentPrefix the prefix that identifies comments in the SQL script &mdash; typically "--", +	 * Split an SQL script into separate statements delimited by the provided, +	 * <p>Within a statement, "{@code --}" will be used as the comment prefix;, +	 * any text beginning with the comment prefix and extending to the end of, +	 * the line will be omitted from the statement. In addition, multiple adjacent, +	 * whitespace characters will be collapsed into a single space., +		splitSqlScript(script, "" + delim, DEFAULT_COMMENT_PREFIX, statements);, +	 * Split an SQL script into separate statements delimited by the provided, +	 * delimiter string. Each individual statement will be added to the provided, +	 * {@code List}., +	 * <p>Within a statement, the provided {@code commentPrefix} will be honored;, +	 * any text beginning with the comment prefix and extending to the end of the, +	 * line will be omitted from the statement. In addition, multiple adjacent, +	 * whitespace characters will be collapsed into a single space., +	 * @param commentPrefix the prefix that identifies line comments in the SQL script &mdash; typically "--", +	private static void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements) {, +				if (script.startsWith(delim, i)) {, +					// we've reached the end of the current statement, +				else if (script.startsWith(commentPrefix, i)) {, +					// skip over any content from the start of the comment to the EOL, +					int indexOfNextNewline = script.indexOf("\n", i);, +					if (indexOfNextNewline > i) {, +						i = indexOfNextNewline;, +						continue;, +					}, +					else {, +						// if there's no newline after the comment, we must be at the end, +						// of the script, so stop here., +						break;, +					}, +				}, +				else if (c == ' ' || c == '\n' || c == '\t') {, +					// avoid multiple adjacent whitespace characters, +					if (sb.length() > 0 && sb.charAt(sb.length() - 1) != ' ') {, +					else {, +						continue;, +					}, +				}, +++ b/spring-test/src/main/java/org/springframework/test/jdbc/JdbcTestUtils.java, +	 * be one statement per line. Any semicolons and line comments will be removed., +	 * @see #executeSqlScript(JdbcTemplate, Resource, boolean), +	 * allowed to span lines only if they are delimited with a semicolon. Any, +	 * line comments will be removed., +	 * @see #executeSqlScript(JdbcTemplate, EncodedResource, boolean), +	 * be one statement per line. Any semicolons and line comments will be removed., +	 * <p>Lines <em>beginning</em> with the comment prefix are excluded from the, +	 * results; however, line comments anywhere else &mdash; for example, within, +	 * a statement &mdash; will be included in the results., +	 * @param commentPrefix the prefix that identifies comments in the SQL script &mdash; typically "--", +	 * Split an SQL script into separate statements delimited by the provided, +	 * <p>Within a statement, "{@code --}" will be used as the comment prefix;, +	 * any text beginning with the comment prefix and extending to the end of, +	 * the line will be omitted from the statement. In addition, multiple adjacent, +	 * whitespace characters will be collapsed into a single space., +		splitSqlScript(script, "" + delim, DEFAULT_COMMENT_PREFIX, statements);, +	 * Split an SQL script into separate statements delimited by the provided, +	 * delimiter string. Each individual statement will be added to the provided, +	 * {@code List}., +	 * <p>Within a statement, the provided {@code commentPrefix} will be honored;, +	 * any text beginning with the comment prefix and extending to the end of the, +	 * line will be omitted from the statement. In addition, multiple adjacent, +	 * whitespace characters will be collapsed into a single space., +	 * @param commentPrefix the prefix that identifies line comments in the SQL script &mdash; typically "--", +	private static void splitSqlScript(String script, String delim, String commentPrefix, List<String> statements) {, +				if (script.startsWith(delim, i)) {, +					// we've reached the end of the current statement, +				else if (script.startsWith(commentPrefix, i)) {, +					// skip over any content from the start of the comment to the EOL, +					int indexOfNextNewline = script.indexOf("\n", i);, +					if (indexOfNextNewline > i) {, +						i = indexOfNextNewline;, +						continue;, +					}, +					else {, +						// if there's no newline after the comment, we must be at the end, +						// of the script, so stop here., +						break;, +					}, +				}, +				else if (c == ' ' || c == '\n' || c == '\t') {, +					// avoid multiple adjacent whitespace characters, +					if (sb.length() > 0 && sb.charAt(sb.length() - 1) != ' ') {, +					else {, +						continue;, +					}, +				}, +++ b/spring-test/src/test/java/org/springframework/test/jdbc/JdbcTestUtilsTests.java, +		// Statement 4 addresses the error described in SPR-9982., +		String statement4 = "INSERT INTO persons( person_id , name) VALUES( 1 , 'Name' )";, +		assertEquals("wrong number of statements", 4, statements.size());]