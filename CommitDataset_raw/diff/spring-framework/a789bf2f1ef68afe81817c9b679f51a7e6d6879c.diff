[+++ b/spring-framework-reference/src/mvc.xml, +      <literal>commons-fileupload.jar</literal>.</para>, +      allow the user to upload a form. Then let Spring bind the file onto your, +        <lineannotation>// let's see if there's content there</lineannotation>, +        <lineannotation>// to actually be able to convert Multipart instance to byte[]</lineannotation>, +        <lineannotation>// we have to register a custom editor</lineannotation>, +        <lineannotation>// now Spring knows how to handle multipart objects and convert them</lineannotation>, +        <lineannotation>// let's see if there's content there</lineannotation>, +++ b/spring-framework-reference/src/mvc.xml, +      <literal>commons-fileupload.jar</literal>.</para>, +      allow the user to upload a form. Then let Spring bind the file onto your, +        <lineannotation>// let's see if there's content there</lineannotation>, +        <lineannotation>// to actually be able to convert Multipart instance to byte[]</lineannotation>, +        <lineannotation>// we have to register a custom editor</lineannotation>, +        <lineannotation>// now Spring knows how to handle multipart objects and convert them</lineannotation>, +        <lineannotation>// let's see if there's content there</lineannotation>, +++ b/spring-framework-reference/src/view.xml, +      preparation before things such as the I18N features will work.</para>, +      class="libraryfile">org.springframework.web.servlet-3.0.0.RELEASE.jar</filename>., +      Further information about the individual tags can be found in, +        <literal>org.springframework.web.servlet-3.0.0.RC1.jar</literal>., +        The library descriptor is called, +      <itemizedlist spacing="compact">, +        </itemizedlist>, +      </section>, +      class="directory">'WEB-INF/lib'</filename> directory too! If you make use of]