[+++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, + * Representation of a parsed path pattern. Includes a chain of path elements, + * <p>{@code PathPattern} matches URL paths using the following rules:<br>, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, + * Representation of a parsed path pattern. Includes a chain of path elements, + * <p>{@code PathPattern} matches URL paths using the following rules:<br>, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPatternParser.java, + * Parser for URI path patterns producing {@link PathPattern} instances that can, + * then be matched to requests., + *, + * <p>The {@link PathPatternParser} and {@link PathPattern} are specifically, + * designed for use with HTTP URL paths in web applications where a large number, + * of URI path patterns continuously matched against incoming requests motivates, + * the need for pre-parsing and fast matching., + *, + * <p>For details of the path pattern syntax see {@link PathPattern}., +	 * Whether a {@link PathPattern} produced by this parser should should, +	 * automatically match request paths with a trailing slash., +	 *, +	 * <p>If set to {@code true} a {@code PathPattern} without a trailing slash, +	 * will also match request paths with a trailing slash. If set to, +	 * {@code false} a {@code PathPattern} will only match request paths with, +	 *, +	 * <p>The default is {@code true}., +	 * Whether path pattern matching should be case-sensitive., +	 * @return a PathPattern for quickly matching paths against request paths, +		return createDelegate().parse(pathPattern);, +	}, +, +	private InternalPathPatternParser createDelegate() {, +		return new InternalPathPatternParser(, +				this.separator, this.caseSensitive, this.matchOptionalTrailingSlash);, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, + * Representation of a parsed path pattern. Includes a chain of path elements, + * <p>{@code PathPattern} matches URL paths using the following rules:<br>, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPatternParser.java, + * Parser for URI path patterns producing {@link PathPattern} instances that can, + * then be matched to requests., + *, + * <p>The {@link PathPatternParser} and {@link PathPattern} are specifically, + * designed for use with HTTP URL paths in web applications where a large number, + * of URI path patterns continuously matched against incoming requests motivates, + * the need for pre-parsing and fast matching., + *, + * <p>For details of the path pattern syntax see {@link PathPattern}., +	 * Whether a {@link PathPattern} produced by this parser should should, +	 * automatically match request paths with a trailing slash., +	 *, +	 * <p>If set to {@code true} a {@code PathPattern} without a trailing slash, +	 * will also match request paths with a trailing slash. If set to, +	 * {@code false} a {@code PathPattern} will only match request paths with, +	 *, +	 * <p>The default is {@code true}., +	 * Whether path pattern matching should be case-sensitive., +	 * @return a PathPattern for quickly matching paths against request paths, +		return createDelegate().parse(pathPattern);, +	}, +, +	private InternalPathPatternParser createDelegate() {, +		return new InternalPathPatternParser(, +				this.separator, this.caseSensitive, this.matchOptionalTrailingSlash);, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/package-info.java, + * Dedicated support for matching HTTP request paths., + *, + * <p>{@link org.springframework.web.util.pattern.PathPatternParser} is used to, + * parse URI path patterns into, + * {@link org.springframework.web.util.pattern.PathPattern}s that can then be, + * used for matching purposes at request time.]