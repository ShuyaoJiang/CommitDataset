[+++ b/spring-web/src/main/java/org/springframework/web/context/ConfigurableWebEnvironment.java, +	 * @see org.springframework.web.context.support.WebApplicationContextUtils#initServletPropertySources(, +	 * org.springframework.core.env.MutablePropertySources, ServletContext, ServletConfig), +++ b/spring-web/src/main/java/org/springframework/web/context/ConfigurableWebEnvironment.java, +	 * @see org.springframework.web.context.support.WebApplicationContextUtils#initServletPropertySources(, +	 * org.springframework.core.env.MutablePropertySources, ServletContext, ServletConfig), +++ b/spring-web/src/main/java/org/springframework/web/context/support/WebApplicationContextUtils.java, + * Copyright 2002-2012 the original author or authors., +	 * Convenient variant of {@link #initServletPropertySources(MutablePropertySources,, +	 * ServletContext, ServletConfig)} that always provides {@code null} for the, +	 * {@link ServletConfig} parameter., +	 * @see #initServletPropertySources(MutablePropertySources, ServletContext, ServletConfig), +	 * Replace {@code Servlet}-based {@link StubPropertySource stub property sources} with, +	 * actual instances populated with the given {@code servletContext} and, +	 * {@code servletConfig} objects., +	 * <p>This method is idempotent with respect to the fact it may be called any number, +	 * of times but will perform replacement of stub property sources with their, +	 * corresponding actual property sources once and only once., +	 * @param propertySources the {@link PropertySources} to initialize (must not be {@code null}), +	 * @param servletContext the current {@link ServletContext} (ignored if {@code null}, +	 * or if the {@link StandardServletEnvironment#SERVLET_CONTEXT_PROPERTY_SOURCE_NAME, +	 * servlet context property source} has already been initialized), +	 * @param servletConfig the current {@link ServletConfig} (ignored if {@code null}, +	 * or if the {@link StandardServletEnvironment#SERVLET_CONFIG_PROPERTY_SOURCE_NAME, +	 * servlet config property source} has already been initialized), +++ b/spring-web/src/main/java/org/springframework/web/context/ConfigurableWebEnvironment.java, +	 * @see org.springframework.web.context.support.WebApplicationContextUtils#initServletPropertySources(, +	 * org.springframework.core.env.MutablePropertySources, ServletContext, ServletConfig), +++ b/spring-web/src/main/java/org/springframework/web/context/support/WebApplicationContextUtils.java, + * Copyright 2002-2012 the original author or authors., +	 * Convenient variant of {@link #initServletPropertySources(MutablePropertySources,, +	 * ServletContext, ServletConfig)} that always provides {@code null} for the, +	 * {@link ServletConfig} parameter., +	 * @see #initServletPropertySources(MutablePropertySources, ServletContext, ServletConfig), +	 * Replace {@code Servlet}-based {@link StubPropertySource stub property sources} with, +	 * actual instances populated with the given {@code servletContext} and, +	 * {@code servletConfig} objects., +	 * <p>This method is idempotent with respect to the fact it may be called any number, +	 * of times but will perform replacement of stub property sources with their, +	 * corresponding actual property sources once and only once., +	 * @param propertySources the {@link PropertySources} to initialize (must not be {@code null}), +	 * @param servletContext the current {@link ServletContext} (ignored if {@code null}, +	 * or if the {@link StandardServletEnvironment#SERVLET_CONTEXT_PROPERTY_SOURCE_NAME, +	 * servlet context property source} has already been initialized), +	 * @param servletConfig the current {@link ServletConfig} (ignored if {@code null}, +	 * or if the {@link StandardServletEnvironment#SERVLET_CONFIG_PROPERTY_SOURCE_NAME, +	 * servlet config property source} has already been initialized), +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/context/PortletApplicationContextUtils.java, + * Copyright 2002-2012 the original author or authors., +	 * Replace {@code Servlet}- and {@code Portlet}-based {@link StubPropertySource stub, +	 * property sources} with actual instances populated with the given {@code servletContext},, +	 * {@code portletContext} and {@code portletConfig} objects., +	 * <p>This method is idempotent with respect to the fact it may be called any number, +	 * of times but will perform replacement of stub property sources with their, +	 * corresponding actual property sources once and only once., +	 * @param propertySources the {@link PropertySources} to initialize (must not be {@code null}), +	 * @param servletContext the current {@link ServletContext} (ignored if {@code null}, +	 * or if the {@link StandardServletEnvironment#SERVLET_CONTEXT_PROPERTY_SOURCE_NAME, +	 * servlet context property source} has already been initialized), +	 * @param portletContext the current {@link PortletContext} (ignored if {@code null}, +	 * or if the {@link StandardPortletEnvironment#PORTLET_CONTEXT_PROPERTY_SOURCE_NAME, +	 * portlet context property source} has already been initialized), +	 * @param portletConfig the current {@link PortletConfig} (ignored if {@code null}, +	 * or if the {@link StandardPortletEnvironment#PORTLET_CONFIG_PROPERTY_SOURCE_NAME, +	 * portlet config property source} has already been initialized), +	 * @see org.springframework.core.env.ConfigurableEnvironment#getPropertySources(), +++ b/spring-web/src/main/java/org/springframework/web/context/ConfigurableWebEnvironment.java, +	 * @see org.springframework.web.context.support.WebApplicationContextUtils#initServletPropertySources(, +	 * org.springframework.core.env.MutablePropertySources, ServletContext, ServletConfig), +++ b/spring-web/src/main/java/org/springframework/web/context/support/WebApplicationContextUtils.java, + * Copyright 2002-2012 the original author or authors., +	 * Convenient variant of {@link #initServletPropertySources(MutablePropertySources,, +	 * ServletContext, ServletConfig)} that always provides {@code null} for the, +	 * {@link ServletConfig} parameter., +	 * @see #initServletPropertySources(MutablePropertySources, ServletContext, ServletConfig), +	 * Replace {@code Servlet}-based {@link StubPropertySource stub property sources} with, +	 * actual instances populated with the given {@code servletContext} and, +	 * {@code servletConfig} objects., +	 * <p>This method is idempotent with respect to the fact it may be called any number, +	 * of times but will perform replacement of stub property sources with their, +	 * corresponding actual property sources once and only once., +	 * @param propertySources the {@link PropertySources} to initialize (must not be {@code null}), +	 * @param servletContext the current {@link ServletContext} (ignored if {@code null}, +	 * or if the {@link StandardServletEnvironment#SERVLET_CONTEXT_PROPERTY_SOURCE_NAME, +	 * servlet context property source} has already been initialized), +	 * @param servletConfig the current {@link ServletConfig} (ignored if {@code null}, +	 * or if the {@link StandardServletEnvironment#SERVLET_CONFIG_PROPERTY_SOURCE_NAME, +	 * servlet config property source} has already been initialized), +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/context/PortletApplicationContextUtils.java, + * Copyright 2002-2012 the original author or authors., +	 * Replace {@code Servlet}- and {@code Portlet}-based {@link StubPropertySource stub, +	 * property sources} with actual instances populated with the given {@code servletContext},, +	 * {@code portletContext} and {@code portletConfig} objects., +	 * <p>This method is idempotent with respect to the fact it may be called any number, +	 * of times but will perform replacement of stub property sources with their, +	 * corresponding actual property sources once and only once., +	 * @param propertySources the {@link PropertySources} to initialize (must not be {@code null}), +	 * @param servletContext the current {@link ServletContext} (ignored if {@code null}, +	 * or if the {@link StandardServletEnvironment#SERVLET_CONTEXT_PROPERTY_SOURCE_NAME, +	 * servlet context property source} has already been initialized)]