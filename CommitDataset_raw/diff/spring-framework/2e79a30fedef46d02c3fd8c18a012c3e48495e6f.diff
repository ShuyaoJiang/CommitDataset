[+++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, +		if (source.indexOf(':') != -1) {, +			source = sanitizeSource(source);, +		}, +	/**, +	 * Remove nested "{}" such as in URI vars with regular expressions., +	 */, +	private static String sanitizeSource(String source) {, +		int level = 0;, +		StringBuilder sb = new StringBuilder();, +		for (char c : source.toCharArray()) {, +			if (c == '{') {, +				level++;, +			}, +			if (c == '}') {, +				level--;, +			}, +			if (level > 1 || (level == 1 && c == '}')) {, +				continue;, +			}, +			sb.append(c);, +		}, +		return sb.toString();, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, +		if (source.indexOf(':') != -1) {, +			source = sanitizeSource(source);, +		}, +	/**, +	 * Remove nested "{}" such as in URI vars with regular expressions., +	 */, +	private static String sanitizeSource(String source) {, +		int level = 0;, +		StringBuilder sb = new StringBuilder();, +		for (char c : source.toCharArray()) {, +			if (c == '{') {, +				level++;, +			}, +			if (c == '}') {, +				level--;, +			}, +			if (level > 1 || (level == 1 && c == '}')) {, +				continue;, +			}, +			sb.append(c);, +		}, +		return sb.toString();, +	}, +, +++ b/spring-web/src/test/java/org/springframework/web/util/UriComponentsTests.java, +import java.util.Collections;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.instanceOf;, +import static org.hamcrest.Matchers.not;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertThat;, +import static org.springframework.web.util.UriComponentsBuilder.fromUriString;, +, +	// SPR-13311, +, +	@Test, +	public void expandWithRegexVar() {, +		String template = "/myurl/{name:[a-z]{1,5}}/show";, +		UriComponents uriComponents = UriComponentsBuilder.fromUriString(template).build();, +		uriComponents = uriComponents.expand(Collections.singletonMap("name", "test"));, +		assertEquals("/myurl/test/show", uriComponents.getPath());, +	}, +]