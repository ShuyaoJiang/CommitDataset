[+++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/bind/annotation/ActionMapping.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * @author Sam Brannen, +@Target(ElementType.METHOD), +	 * Alias for {@link #name}., +	@AliasFor(attribute = "name"), +	 * The name of the action, according to the Portlet 2.0, +	 * {@code javax.portlet.action} parameter., +	 * <p>If not specified, the annotated method will be used as a default, +	 * handler: i.e. for action requests where no specific action mapping, +	 * was found., +	 * <p>Note that all such annotated action methods only apply within the, +	 * {@code @RequestMapping} constraints of the containing handler class., +	 * @since 4.2, +	 * @see javax.portlet.ActionRequest#ACTION_NAME, +	 * @see #value, +	 */, +	@AliasFor(attribute = "value"), +	String name() default "";, +, +	/**, +	 * <p>Same format for any environment: a sequence of {@code "myParam=myValue"}, +	 * style expressions, with a request only mapped if each such parameter is found, +	 * to have the given value. {@code "myParam"} style expressions are also supported,, +	 * any value). Finally, {@code "!myParam"} style expressions indicate that the, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/bind/annotation/ActionMapping.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * @author Sam Brannen, +@Target(ElementType.METHOD), +	 * Alias for {@link #name}., +	@AliasFor(attribute = "name"), +	 * The name of the action, according to the Portlet 2.0, +	 * {@code javax.portlet.action} parameter., +	 * <p>If not specified, the annotated method will be used as a default, +	 * handler: i.e. for action requests where no specific action mapping, +	 * was found., +	 * <p>Note that all such annotated action methods only apply within the, +	 * {@code @RequestMapping} constraints of the containing handler class., +	 * @since 4.2, +	 * @see javax.portlet.ActionRequest#ACTION_NAME, +	 * @see #value, +	 */, +	@AliasFor(attribute = "value"), +	String name() default "";, +, +	/**, +	 * <p>Same format for any environment: a sequence of {@code "myParam=myValue"}, +	 * style expressions, with a request only mapped if each such parameter is found, +	 * to have the given value. {@code "myParam"} style expressions are also supported,, +	 * any value). Finally, {@code "!myParam"} style expressions indicate that the, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +				mappingInfo.initPhaseMapping(PortletRequest.ACTION_PHASE, actionMapping.name(), actionMapping.params());, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/bind/annotation/ActionMapping.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * @author Sam Brannen, +@Target(ElementType.METHOD), +	 * Alias for {@link #name}., +	@AliasFor(attribute = "name"), +	 * The name of the action, according to the Portlet 2.0, +	 * {@code javax.portlet.action} parameter., +	 * <p>If not specified, the annotated method will be used as a default, +	 * handler: i.e. for action requests where no specific action mapping, +	 * was found., +	 * <p>Note that all such annotated action methods only apply within the, +	 * {@code @RequestMapping} constraints of the containing handler class., +	 * @since 4.2, +	 * @see javax.portlet.ActionRequest#ACTION_NAME, +	 * @see #value, +	 */, +	@AliasFor(attribute = "value"), +	String name() default "";, +, +	/**, +	 * <p>Same format for any environment: a sequence of {@code "myParam=myValue"}, +	 * style expressions, with a request only mapped if each such parameter is found, +	 * to have the given value. {@code "myParam"} style expressions are also supported,, +	 * any value). Finally, {@code "!myParam"} style expressions indicate that the, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +				mappingInfo.initPhaseMapping(PortletRequest.ACTION_PHASE, actionMapping.name(), actionMapping.params());, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/DefaultAnnotationHandlerMapping.java, + * Copyright 2002-2015 the original author or authors., +						predicate = new ActionMappingPredicate(actionMapping.name(), params);, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/bind/annotation/ActionMapping.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * @author Sam Brannen, +@Target(ElementType.METHOD), +	 * Alias for {@link #name}., +	@AliasFor(attribute = "name"), +	 * The name of the action, according to the Portlet 2.0, +	 * {@code javax.portlet.action} parameter., +	 * <p>If not specified, the annotated method will be used as a default, +	 * handler: i.e. for action requests where no specific action mapping, +	 * was found., +	 * <p>Note that all such annotated action methods only apply within the, +	 * {@code @RequestMapping} constraints of the containing handler class., +	 * @since 4.2]