[+++ b/spring-test/src/test/java/org/springframework/test/context/ContextLoaderUtilsActiveProfilesTests.java, +import java.util.HashSet;, +import java.util.Set;, +	private void assertResolvedProfiles(Class<?> testClass, String... expected) {, +		assertNotNull(testClass);, +		assertNotNull(expected);, +		String[] actual = resolveActiveProfiles(testClass);, +		Set<String> expectedSet = new HashSet<String>(Arrays.asList(expected));, +		Set<String> actualSet = new HashSet<String>(Arrays.asList(actual));, +		assertEquals(expectedSet, actualSet);, +	}, +, +		assertArrayEquals(EMPTY_STRING_ARRAY, resolveActiveProfiles(Enigma.class));, +		assertArrayEquals(EMPTY_STRING_ARRAY, resolveActiveProfiles(BareAnnotations.class));, +		assertArrayEquals(EMPTY_STRING_ARRAY, resolveActiveProfiles(EmptyProfiles.class));, +		assertResolvedProfiles(DuplicatedProfiles.class, "foo", "bar", "baz");, +		assertResolvedProfiles(LocationsFoo.class, "foo");, +		assertResolvedProfiles(InheritedLocationsFoo.class, "foo");, +		assertResolvedProfiles(InheritedClassesFoo.class, "foo");, +		assertResolvedProfiles(LocationsBar.class, "foo", "bar");, +		assertResolvedProfiles(Animals.class, "dog", "cat");, +		assertResolvedProfiles(MetaLocationsFoo.class, "foo");, +		assertResolvedProfiles(MetaLocationsFooWithOverrides.class, "foo");, +		assertResolvedProfiles(MetaLocationsFooWithOverriddenAttributes.class, "foo1", "foo2");, +		assertResolvedProfiles(MetaLocationsBar.class, "foo", "bar");, +		assertResolvedProfiles(MetaAnimals.class, "dog", "cat");, +		assertResolvedProfiles(FooActiveProfilesResolverTestCase.class, "foo");, +		assertResolvedProfiles(InheritedFooActiveProfilesResolverTestCase.class, "foo");, +		assertResolvedProfiles(MergedInheritedFooActiveProfilesResolverTestCase.class, "foo", "bar");, +		assertResolvedProfiles(OverridenInheritedFooActiveProfilesResolverTestCase.class, "bar");, +	// TODO Write test with @MetaProfilesWithOverrides.]