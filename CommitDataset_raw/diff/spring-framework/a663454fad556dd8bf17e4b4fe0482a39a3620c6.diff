[+++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, +	 * Set the value of the {@linkplain #AUTHORIZATION Authorization} header to, +	 * Basic Authentication based on the given username and password., +	 * @param username the username, +	 * @param password the password, +	 * @since 5.1, +	 * @see <a href="https://tools.ietf.org/html/rfc7617">RFC 7617</a>, +	 */, +	public void setBasicAuth(String username, String password) {, +		setBasicAuth(username, password, null);, +	}, +, +	/**, +	 * Set the value of the {@linkplain #AUTHORIZATION Authorization} header to, +	 * Basic Authentication based on the given username and password., +	 * @param username the username, +	 * @param password the password, +	 * @param charset the charset to use to convert the credentials into an octet sequence. Defaults, +	 * to {@linkplain StandardCharsets#ISO_8859_1 ISO-8859-1}, +	 * @since 5.1, +	 * @see <a href="https://tools.ietf.org/html/rfc7617">RFC 7617</a>, +	 */, +	public void setBasicAuth(String username, String password, @Nullable Charset charset) {, +		Assert.notNull(username, "Username must not be null");, +		Assert.notNull(password, "Password must not be null");, +		if (charset == null) {, +			charset = StandardCharsets.ISO_8859_1;, +		}, +, +		CharsetEncoder encoder = charset.newEncoder();, +		if (!encoder.canEncode(username) || !encoder.canEncode(password)) {, +			throw new IllegalArgumentException(, +					"Username or password contains characters that cannot be encoded to " +, +			charset.displayName());, +		}, +, +		String credentialsString = username + ":" + password;, +		byte[] encodedBytes = Base64.getEncoder().encode(credentialsString.getBytes(charset));, +		String encodedCredentials = new String(encodedBytes, charset);, +		set(HttpHeaders.AUTHORIZATION, "Basic " + encodedCredentials);, +	}, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, +	 * Set the value of the {@linkplain #AUTHORIZATION Authorization} header to, +	 * Basic Authentication based on the given username and password., +	 * @param username the username, +	 * @param password the password, +	 * @since 5.1, +	 * @see <a href="https://tools.ietf.org/html/rfc7617">RFC 7617</a>, +	 */, +	public void setBasicAuth(String username, String password) {, +		setBasicAuth(username, password, null);, +	}, +, +	/**, +	 * Set the value of the {@linkplain #AUTHORIZATION Authorization} header to, +	 * Basic Authentication based on the given username and password., +	 * @param username the username, +	 * @param password the password, +	 * @param charset the charset to use to convert the credentials into an octet sequence. Defaults, +	 * to {@linkplain StandardCharsets#ISO_8859_1 ISO-8859-1}, +	 * @since 5.1, +	 * @see <a href="https://tools.ietf.org/html/rfc7617">RFC 7617</a>, +	 */, +	public void setBasicAuth(String username, String password, @Nullable Charset charset) {, +		Assert.notNull(username, "Username must not be null");, +		Assert.notNull(password, "Password must not be null");, +		if (charset == null) {, +			charset = StandardCharsets.ISO_8859_1;, +		}, +, +		CharsetEncoder encoder = charset.newEncoder();, +		if (!encoder.canEncode(username) || !encoder.canEncode(password)) {, +			throw new IllegalArgumentException(, +					"Username or password contains characters that cannot be encoded to " +, +			charset.displayName());, +		}, +, +		String credentialsString = username + ":" + password;, +		byte[] encodedBytes = Base64.getEncoder().encode(credentialsString.getBytes(charset));, +		String encodedCredentials = new String(encodedBytes, charset);, +		set(HttpHeaders.AUTHORIZATION, "Basic " + encodedCredentials);, +	}, +, +	/**, +++ b/spring-web/src/test/java/org/springframework/http/HttpHeadersTests.java, +	public void basicAuth() {, +		headers.setBasicAuth(username, password);, +, +	@Test(expected = IllegalArgumentException.class), +	public void basicAuthIllegalChar() {, +		String username = "foo";, +		String password = "\u03BB";, +		headers.setBasicAuth(username, password);, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, +	 * Set the value of the {@linkplain #AUTHORIZATION Authorization} header to, +	 * Basic Authentication based on the given username and password.]