[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/AbstractCachingViewResolver.java, + * Copyright 2002-2012 the original author or authors., +import java.util.LinkedHashMap;, +	/** Default maximum number of entries for the view cache: 1024 */, +	public static final int DEFAULT_CACHE_LIMIT = 1024;, +, +, +	private volatile int cacheLimit = DEFAULT_CACHE_LIMIT;, +	private final Map<Object, View> viewCache =, +			new LinkedHashMap<Object, View>(DEFAULT_CACHE_LIMIT, 0.75f, true) {, +				@Override, +				protected boolean removeEldestEntry(Map.Entry<Object, View> eldest) {, +					return size() > getCacheLimit();, +				}, +			};, +	 * Specify the maximum number of entries for the view cache., +	 * Default is 1024., +	 */, +	public void setCacheLimit(int cacheLimit) {, +		this.cacheLimit = cacheLimit;, +	}, +, +	/**, +	 * Return the maximum number of entries for the view cache., +	 */, +	public int getCacheLimit() {, +		return this.cacheLimit;, +	}, +, +	/**, +	 * <p>This is equivalent to setting the {@link #setCacheLimit "cacheLimit"}, +	 * property to the default limit (1024) or to 0, respectively., +		this.cacheLimit = (cache ? DEFAULT_CACHE_LIMIT : 0);, +		return (this.cacheLimit > 0);, +		if (!isCache()) {]