[+++ b/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java, +	/**, +	 * By default this is set to 10000 (10 seconds) even though the Servlet API, +	 * specifies a default async request timeout of 30 seconds. Keep in mind the, +	 * timeout could further be impacted by global configuration through the MVC, +	 * Java config or the XML namespace, as well as be overridden per request on, +	 * {@link org.springframework.web.context.request.async.DeferredResult DeferredResult}, +	 * or on, +	 * {@link org.springframework.web.servlet.mvc.method.annotation.SseEmitter SseEmitter}., +	 * @param timeout the timeout value to use., +	 * @see AsyncContext#setTimeout(long), +	 */, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java, +	/**, +	 * By default this is set to 10000 (10 seconds) even though the Servlet API, +	 * specifies a default async request timeout of 30 seconds. Keep in mind the, +	 * timeout could further be impacted by global configuration through the MVC, +	 * Java config or the XML namespace, as well as be overridden per request on, +	 * {@link org.springframework.web.context.request.async.DeferredResult DeferredResult}, +	 * or on, +	 * {@link org.springframework.web.servlet.mvc.method.annotation.SseEmitter SseEmitter}., +	 * @param timeout the timeout value to use., +	 * @see AsyncContext#setTimeout(long), +	 */, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/DefaultMvcResult.java, +		if (this.mockRequest.getAsyncContext() != null && timeToWait == -1) {, +			long requestTimeout = this.mockRequest.getAsyncContext().getTimeout();, +			timeToWait = requestTimeout == -1 ? Long.MAX_VALUE : requestTimeout;, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java, +	/**, +	 * By default this is set to 10000 (10 seconds) even though the Servlet API, +	 * specifies a default async request timeout of 30 seconds. Keep in mind the, +	 * timeout could further be impacted by global configuration through the MVC, +	 * Java config or the XML namespace, as well as be overridden per request on, +	 * {@link org.springframework.web.context.request.async.DeferredResult DeferredResult}, +	 * or on, +	 * {@link org.springframework.web.servlet.mvc.method.annotation.SseEmitter SseEmitter}., +	 * @param timeout the timeout value to use., +	 * @see AsyncContext#setTimeout(long), +	 */, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/DefaultMvcResult.java, +		if (this.mockRequest.getAsyncContext() != null && timeToWait == -1) {, +			long requestTimeout = this.mockRequest.getAsyncContext().getTimeout();, +			timeToWait = requestTimeout == -1 ? Long.MAX_VALUE : requestTimeout;, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/MvcResult.java, + * Copyright 2002-2018 the original author or authors., +	 * Get the result of async execution., +	 * <p>This method will wait for the async result to be set within the, +	 * timeout value associated with the async request, see, +	 * {@link org.springframework.mock.web.MockAsyncContext#setTimeout, +	 * MockAsyncContext#setTimeout}. Alternatively, use, +	 * {@link #getAsyncResult(long)} to specify the amount of time to wait., +	 * Get the result of async execution and wait if necessary., +	 * 	milliseconds; if -1, then fall back on the timeout value associated with, +	 * 	the async request, see, +	 * 	{@link org.springframework.mock.web.MockAsyncContext#setTimeout, +	 * 	MockAsyncContext#setTimeout} for more details., +++ b/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java, +	/**, +	 * By default this is set to 10000 (10 seconds) even though the Servlet API, +	 * specifies a default async request timeout of 30 seconds. Keep in mind the, +	 * timeout could further be impacted by global configuration through the MVC, +	 * Java config or the XML namespace, as well as be overridden per request on, +	 * {@link org.springframework.web.context.request.async.DeferredResult DeferredResult}, +	 * or on, +	 * {@link org.springframework.web.servlet.mvc.method.annotation.SseEmitter SseEmitter}., +	 * @param timeout the timeout value to use., +	 * @see AsyncContext#setTimeout(long), +	 */, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/DefaultMvcResult.java, +		if (this.mockRequest.getAsyncContext() != null && timeToWait == -1) {, +			long requestTimeout = this.mockRequest.getAsyncContext().getTimeout();, +			timeToWait = requestTimeout == -1 ? Long.MAX_VALUE : requestTimeout;, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/MvcResult.java, + * Copyright 2002-2018 the original author or authors., +	 * Get the result of async execution., +	 * <p>This method will wait for the async result to be set within the, +	 * timeout value associated with the async request, see, +	 * {@link org.springframework.mock.web.MockAsyncContext#setTimeout, +	 * MockAsyncContext#setTimeout}. Alternatively, use, +	 * {@link #getAsyncResult(long)} to specify the amount of time to wait., +	 * Get the result of async execution and wait if necessary., +	 * 	milliseconds; if -1, then fall back on the timeout value associated with, +	 * 	the async request, see, +	 * 	{@link org.springframework.mock.web.MockAsyncContext#setTimeout, +	 * 	MockAsyncContext#setTimeout} for more details., +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/standalone/ReactiveReturnTypeTests.java, +/*, + * Copyright 2002-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and]