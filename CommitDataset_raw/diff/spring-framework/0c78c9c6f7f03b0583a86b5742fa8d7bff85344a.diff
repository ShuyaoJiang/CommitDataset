[+++ b/spring-core/src/main/java/org/springframework/core/ParameterizedTypeReference.java, + * Copyright 2002-2018 the original author or authors., + * you need to create a subclass (ideally as anonymous inline class) as follows:, + * <p>The resulting {@code typeRef} instance can then be used to obtain a {@link Type}, + * instance that carries the captured parameterized type information at runtime., +++ b/spring-core/src/main/java/org/springframework/core/ParameterizedTypeReference.java, + * Copyright 2002-2018 the original author or authors., + * you need to create a subclass (ideally as anonymous inline class) as follows:, + * <p>The resulting {@code typeRef} instance can then be used to obtain a {@link Type}, + * instance that carries the captured parameterized type information at runtime., +++ b/spring-core/src/main/java/org/springframework/util/xml/TransformerUtils.java, + * Copyright 2002-2018 the original author or authors., + * Contains common behavior relating to {@link javax.xml.transform.Transformer Transformers}, + * and the {@code javax.xml.transform} package in general., +	 * The indent amount of characters if {@link #enableIndenting indenting is enabled}., +, +	 * Enable indenting for the supplied {@link javax.xml.transform.Transformer}., +	 * <p>If the underlying XSLT engine is Xalan, then the special output key {@code indent-amount}, +	 * will be also be set to a value of {@link #DEFAULT_INDENT_AMOUNT} characters., +	 * Enable indenting for the supplied {@link javax.xml.transform.Transformer}., +	 * <p>If the underlying XSLT engine is Xalan, then the special output key {@code indent-amount}, +	 * will be also be set to a value of {@link #DEFAULT_INDENT_AMOUNT} characters., +	 * @param indentAmount the size of the indent (2 characters, 3 characters, etc), +		if (indentAmount < 0) {, +			throw new IllegalArgumentException("Invalid indent amount (must not be less than zero): " + indentAmount);, +		}, +++ b/spring-core/src/main/java/org/springframework/core/ParameterizedTypeReference.java, + * Copyright 2002-2018 the original author or authors., + * you need to create a subclass (ideally as anonymous inline class) as follows:, + * <p>The resulting {@code typeRef} instance can then be used to obtain a {@link Type}, + * instance that carries the captured parameterized type information at runtime., +++ b/spring-core/src/main/java/org/springframework/util/xml/TransformerUtils.java, + * Copyright 2002-2018 the original author or authors., + * Contains common behavior relating to {@link javax.xml.transform.Transformer Transformers}, + * and the {@code javax.xml.transform} package in general., +	 * The indent amount of characters if {@link #enableIndenting indenting is enabled}., +, +	 * Enable indenting for the supplied {@link javax.xml.transform.Transformer}., +	 * <p>If the underlying XSLT engine is Xalan, then the special output key {@code indent-amount}, +	 * will be also be set to a value of {@link #DEFAULT_INDENT_AMOUNT} characters., +	 * Enable indenting for the supplied {@link javax.xml.transform.Transformer}., +	 * <p>If the underlying XSLT engine is Xalan, then the special output key {@code indent-amount}, +	 * will be also be set to a value of {@link #DEFAULT_INDENT_AMOUNT} characters., +	 * @param indentAmount the size of the indent (2 characters, 3 characters, etc), +		if (indentAmount < 0) {, +			throw new IllegalArgumentException("Invalid indent amount (must not be less than zero): " + indentAmount);, +		}, +++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +			Assert.isTrue(resource != null && resource.exists(), () -> "Resource does not exist: " + resource);, +		return (this.supportJaxbElementClass && JAXBElement.class.isAssignableFrom(clazz)) ||, +				supportsInternal(clazz, this.checkForXmlRootElement);, +++ b/spring-core/src/main/java/org/springframework/core/ParameterizedTypeReference.java, + * Copyright 2002-2018 the original author or authors., + * you need to create a subclass (ideally as anonymous inline class) as follows:, + * <p>The resulting {@code typeRef} instance can then be used to obtain a {@link Type}, + * instance that carries the captured parameterized type information at runtime., +++ b/spring-core/src/main/java/org/springframework/util/xml/TransformerUtils.java, + * Copyright 2002-2018 the original author or authors., + * Contains common behavior relating to {@link javax.xml.transform.Transformer Transformers}, + * and the {@code javax.xml.transform} package in general., +	 * The indent amount of characters if {@link #enableIndenting indenting is enabled}., +, +	 * Enable indenting for the supplied {@link javax.xml.transform.Transformer}., +	 * <p>If the underlying XSLT engine is Xalan, then the special output key {@code indent-amount}, +	 * will be also be set to a value of {@link #DEFAULT_INDENT_AMOUNT} characters., +	 * Enable indenting for the supplied {@link javax.xml.transform.Transformer}., +	 * <p>If the underlying XSLT engine is Xalan, then the special output key {@code indent-amount}, +	 * will be also be set to a value of {@link #DEFAULT_INDENT_AMOUNT} characters., +	 * @param indentAmount the size of the indent (2 characters, 3 characters, etc), +		if (indentAmount < 0) {, +			throw new IllegalArgumentException("Invalid indent amount (must not be less than zero): " + indentAmount);, +		}, +++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +			Assert.isTrue(resource != null && resource.exists(), () -> "Resource does not exist: " + resource);, +		return (this.supportJaxbElementClass && JAXBElement.class.isAssignableFrom(clazz)) ||, +				supportsInternal(clazz, this.checkForXmlRootElement);, +++ b/spring-web/src/main/java/org/springframework/web/util/HtmlCharacterEntityReferences.java, + * Copyright 2002-2018 the original author or authors., +	 * Return the reference mapped to the given character, or {@code null} if none found., +	 * Return the reference mapped to the given character, or {@code null} if none found.]