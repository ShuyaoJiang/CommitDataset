[+++ b/spring-context/src/test/java/org/springframework/scheduling/annotation/EnableSchedulingTests.java, +, +, +++ b/spring-context/src/test/java/org/springframework/scheduling/annotation/EnableSchedulingTests.java, +, +, +++ b/spring-web/src/main/java/org/springframework/http/CacheControl.java, +, + * <p>Adding Cache-Control directives to HTTP responses can significantly improve the client, + * experience when interacting with a web application. This builder creates opinionated, + * "Cache-Control" headers with response directives only, with several use cases in mind., + * <p>Note that to be efficient, Cache-Control headers should be written along HTTP validators, + * such as "Last-Modified" or "ETag" headers., + * @author Juergen Hoeller, + * @since 4.2, +	private long maxAge = -1;, +	private boolean noCache = false;, +	private boolean noStore = false;, +	private boolean mustRevalidate = false;, +	private boolean noTransform = false;, +	private boolean cachePublic = false;, +	private boolean cachePrivate = false;, +	private boolean proxyRevalidate = false;, +	private long sMaxAge = -1;, +, +	 * Create an empty CacheControl instance., +	 * @see #empty(), +	}, +, +, +	/**, +	 * Return an empty directive., +	 * <p>This is well suited for using other optional directives without "max-age", "no-cache" or "no-store"., +	 * @return {@code this}, to facilitate method chaining, +	 */, +	public static CacheControl empty() {, +		return new CacheControl();, +	 * Add a "no-store" directive., +	 * <p>This directive is well suited for preventing caches (browsers and proxies) to cache the content of responses., +	 * @see <a href="https://tools.ietf.org/html/rfc7234#section-5.2.2.3">rfc7234 section 5.2.2.3</a>, +	public static CacheControl noStore() {, +		cc.noStore = true;, +, +	 * Add a "must-revalidate" directive., +	 * Add a "no-transform" directive., +	 * Add a "public" directive., +	 * Add a "private" directive., +	 * Add a "proxy-revalidate" directive., +	 * except that it does not apply to private caches (i.e. browsers, HTTP clients)., +	 * Add an "s-maxage" directive., +, +	 * Return the "Cache-Control" header value., +	 * @return {@code null} if no directive was added, or the header value otherwise, +			appendDirective(ccValue, "max-age=" + Long.toString(this.maxAge));, +		return (StringUtils.hasText(ccHeaderValue) ? ccHeaderValue : null);, +	private void appendDirective(StringBuilder builder, String value) {, +		if (builder.length() > 0) {, +			builder.append(", ");, +		builder.append(value);, +++ b/spring-context/src/test/java/org/springframework/scheduling/annotation/EnableSchedulingTests.java, +, +, +++ b/spring-web/src/main/java/org/springframework/http/CacheControl.java, +, + * <p>Adding Cache-Control directives to HTTP responses can significantly improve the client, + * experience when interacting with a web application. This builder creates opinionated, + * "Cache-Control" headers with response directives only, with several use cases in mind., + * <p>Note that to be efficient, Cache-Control headers should be written along HTTP validators, + * such as "Last-Modified" or "ETag" headers., + * @author Juergen Hoeller, + * @since 4.2, +	private long maxAge = -1;, +	private boolean noCache = false;, +	private boolean noStore = false;, +	private boolean mustRevalidate = false;, +	private boolean noTransform = false;, +	private boolean cachePublic = false;, +	private boolean cachePrivate = false;, +	private boolean proxyRevalidate = false;, +	private long sMaxAge = -1;, +, +	 * Create an empty CacheControl instance., +	 * @see #empty(), +	}, +, +, +	/**, +	 * Return an empty directive., +	 * <p>This is well suited for using other optional directives without "max-age", "no-cache" or "no-store"., +	 * @return {@code this}, to facilitate method chaining, +	 */, +	public static CacheControl empty() {, +		return new CacheControl();, +	 * Add a "no-store" directive., +	 * <p>This directive is well suited for preventing caches (browsers and proxies) to cache the content of responses., +	 * @see <a href="https://tools.ietf.org/html/rfc7234#section-5.2.2.3">rfc7234 section 5.2.2.3</a>, +	public static CacheControl noStore() {, +		cc.noStore = true;, +, +	 * Add a "must-revalidate" directive.]