[+++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachedMessageProducer.java, + * Copyright 2002-2015 the original author or authors., +	// Various JMS 2.0 MessageProducer methods, if available, +, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachedMessageProducer.java, + * Copyright 2002-2015 the original author or authors., +	// Various JMS 2.0 MessageProducer methods, if available, +, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java, + * Copyright 2002-2015 the original author or authors., +	/** The JMS 2.0 Session.createSharedConsumer method, if available */, +	/** The JMS 2.0 Session.createSharedDurableConsumer method, if available */, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachedMessageProducer.java, + * Copyright 2002-2015 the original author or authors., +	// Various JMS 2.0 MessageProducer methods, if available, +, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java, + * Copyright 2002-2015 the original author or authors., +	/** The JMS 2.0 Session.createSharedConsumer method, if available */, +	/** The JMS 2.0 Session.createSharedDurableConsumer method, if available */, +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java, + * Copyright 2002-2015 the original author or authors., +	/** The JMS 2.0 MessageProducer.setDeliveryDelay method, if available */, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachedMessageProducer.java, + * Copyright 2002-2015 the original author or authors., +	// Various JMS 2.0 MessageProducer methods, if available, +, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java, + * Copyright 2002-2015 the original author or authors., +	/** The JMS 2.0 Session.createSharedConsumer method, if available */, +	/** The JMS 2.0 Session.createSharedDurableConsumer method, if available */, +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java, + * Copyright 2002-2015 the original author or authors., +	/** The JMS 2.0 MessageProducer.setDeliveryDelay method, if available */, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java, +	/** The JMS 2.0 Session.createSharedConsumer method, if available */, +	/** The JMS 2.0 Session.createSharedDurableConsumer method, if available */, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachedMessageProducer.java, + * Copyright 2002-2015 the original author or authors., +	// Various JMS 2.0 MessageProducer methods, if available, +, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java, + * Copyright 2002-2015 the original author or authors., +	/** The JMS 2.0 Session.createSharedConsumer method, if available */, +	/** The JMS 2.0 Session.createSharedDurableConsumer method, if available */, +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java, + * Copyright 2002-2015 the original author or authors., +	/** The JMS 2.0 MessageProducer.setDeliveryDelay method, if available */, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java, +	/** The JMS 2.0 Session.createSharedConsumer method, if available */, +	/** The JMS 2.0 Session.createSharedDurableConsumer method, if available */, +++ b/spring-web/src/main/java/org/springframework/web/context/request/WebRequest.java, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachedMessageProducer.java, + * Copyright 2002-2015 the original author or authors., +	// Various JMS 2.0 MessageProducer methods, if available, +, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java, + * Copyright 2002-2015 the original author or authors., +	/** The JMS 2.0 Session.createSharedConsumer method, if available */, +	/** The JMS 2.0 Session.createSharedDurableConsumer method, if available */, +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java, + * Copyright 2002-2015 the original author or authors., +	/** The JMS 2.0 MessageProducer.setDeliveryDelay method, if available */, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java, +	/** The JMS 2.0 Session.createSharedConsumer method, if available */, +	/** The JMS 2.0 Session.createSharedDurableConsumer method, if available */, +++ b/spring-web/src/main/java/org/springframework/web/context/request/WebRequest.java, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/NoSupportAsyncWebRequest.java, + * Copyright 2002-2015 the original author or authors., +, +, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachedMessageProducer.java, + * Copyright 2002-2015 the original author or authors., +	// Various JMS 2.0 MessageProducer methods, if available, +, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java, + * Copyright 2002-2015 the original author or authors., +	/** The JMS 2.0 Session.createSharedConsumer method, if available */, +	/** The JMS 2.0 Session.createSharedDurableConsumer method, if available */, +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java, + * Copyright 2002-2015 the original author or authors., +	/** The JMS 2.0 MessageProducer.setDeliveryDelay method, if available */, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java, +	/** The JMS 2.0 Session.createSharedConsumer method, if available */, +	/** The JMS 2.0 Session.createSharedDurableConsumer method, if available */, +++ b/spring-web/src/main/java/org/springframework/web/context/request/WebRequest.java, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/NoSupportAsyncWebRequest.java, + * Copyright 2002-2015 the original author or authors., +, +, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/StandardServletAsyncWebRequest.java, + * Copyright 2002-2015 the original author or authors., + * declarations in {@code web.xml}., +, +	 * In Servlet 3 async processing, the timeout period begins after the, +		return (this.asyncContext != null && getRequest().isAsyncStarted());, +, +]