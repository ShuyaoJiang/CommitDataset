[+++ b/spring-web/src/main/java/org/springframework/http/client/SimpleBufferingClientHttpRequest.java, + * Copyright 2002-2013 the original author or authors., +	private final boolean outputStreaming;, +, +	SimpleBufferingClientHttpRequest(HttpURLConnection connection, boolean outputStreaming) {, +		this.outputStreaming = outputStreaming;, +		if (this.connection.getDoOutput() && this.outputStreaming) {, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleBufferingClientHttpRequest.java, + * Copyright 2002-2013 the original author or authors., +	private final boolean outputStreaming;, +, +	SimpleBufferingClientHttpRequest(HttpURLConnection connection, boolean outputStreaming) {, +		this.outputStreaming = outputStreaming;, +		if (this.connection.getDoOutput() && this.outputStreaming) {, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleClientHttpRequestFactory.java, + * Copyright 2002-2013 the original author or authors., +	private boolean outputStreaming = true;, +, +	/**, +	 * Set if the underlying URLConnection can be set to 'output streaming' mode. When, +	 * output streaming is enabled, authentication and redirection cannot be handled, +	 * automatically. If output streaming is disabled the, +	 * {@link HttpURLConnection#setFixedLengthStreamingMode(int), +	 * setFixedLengthStreamingMode} and, +	 * {@link HttpURLConnection#setChunkedStreamingMode(int) setChunkedStreamingMode}, +	 * methods of the underlying connection will never be called., +	 * <p>Default is {@code true}., +	 * @param outputStreaming if output streaming is enabled, +	 */, +	public void setOutputStreaming(boolean outputStreaming) {, +		this.outputStreaming = outputStreaming;, +	}, +, +			return new SimpleBufferingClientHttpRequest(connection, this.outputStreaming);, +			return new SimpleStreamingClientHttpRequest(connection, this.chunkSize,, +					this.outputStreaming);, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleBufferingClientHttpRequest.java, + * Copyright 2002-2013 the original author or authors., +	private final boolean outputStreaming;, +, +	SimpleBufferingClientHttpRequest(HttpURLConnection connection, boolean outputStreaming) {, +		this.outputStreaming = outputStreaming;, +		if (this.connection.getDoOutput() && this.outputStreaming) {, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleClientHttpRequestFactory.java, + * Copyright 2002-2013 the original author or authors., +	private boolean outputStreaming = true;, +, +	/**, +	 * Set if the underlying URLConnection can be set to 'output streaming' mode. When, +	 * output streaming is enabled, authentication and redirection cannot be handled, +	 * automatically. If output streaming is disabled the, +	 * {@link HttpURLConnection#setFixedLengthStreamingMode(int), +	 * setFixedLengthStreamingMode} and, +	 * {@link HttpURLConnection#setChunkedStreamingMode(int) setChunkedStreamingMode}, +	 * methods of the underlying connection will never be called., +	 * <p>Default is {@code true}., +	 * @param outputStreaming if output streaming is enabled, +	 */, +	public void setOutputStreaming(boolean outputStreaming) {, +		this.outputStreaming = outputStreaming;, +	}, +, +			return new SimpleBufferingClientHttpRequest(connection, this.outputStreaming);, +			return new SimpleStreamingClientHttpRequest(connection, this.chunkSize,, +					this.outputStreaming);, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleStreamingClientHttpRequest.java, +	private final boolean outputStreaming;, +, +	SimpleStreamingClientHttpRequest(HttpURLConnection connection, int chunkSize,, +			boolean outputStreaming) {, +		this.outputStreaming = outputStreaming;, +			if(this.outputStreaming) {, +			}, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleBufferingClientHttpRequest.java, + * Copyright 2002-2013 the original author or authors., +	private final boolean outputStreaming;, +, +	SimpleBufferingClientHttpRequest(HttpURLConnection connection, boolean outputStreaming) {, +		this.outputStreaming = outputStreaming;, +		if (this.connection.getDoOutput() && this.outputStreaming) {, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleClientHttpRequestFactory.java, + * Copyright 2002-2013 the original author or authors., +	private boolean outputStreaming = true;, +, +	/**, +	 * Set if the underlying URLConnection can be set to 'output streaming' mode. When, +	 * output streaming is enabled, authentication and redirection cannot be handled, +	 * automatically. If output streaming is disabled the, +	 * {@link HttpURLConnection#setFixedLengthStreamingMode(int), +	 * setFixedLengthStreamingMode} and, +	 * {@link HttpURLConnection#setChunkedStreamingMode(int) setChunkedStreamingMode}, +	 * methods of the underlying connection will never be called., +	 * <p>Default is {@code true}., +	 * @param outputStreaming if output streaming is enabled, +	 */, +	public void setOutputStreaming(boolean outputStreaming) {, +		this.outputStreaming = outputStreaming;, +	}, +, +			return new SimpleBufferingClientHttpRequest(connection, this.outputStreaming);]