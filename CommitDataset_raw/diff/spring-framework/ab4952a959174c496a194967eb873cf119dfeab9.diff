[+++ b/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java, +		return hasError(getStatusCode(response));, +	}, +, +	private HttpStatus getStatusCode(ClientHttpResponse response) throws IOException {, +		HttpStatus statusCode;, +		try {, +			statusCode = response.getStatusCode();, +		}, +		catch (IllegalArgumentException ex) {, +			throw new RestClientException("Unknown status code [" + response.getRawStatusCode() + "]");, +		}, +		return statusCode;, +		HttpStatus statusCode = getStatusCode(response);, +++ b/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java, +		return hasError(getStatusCode(response));, +	}, +, +	private HttpStatus getStatusCode(ClientHttpResponse response) throws IOException {, +		HttpStatus statusCode;, +		try {, +			statusCode = response.getStatusCode();, +		}, +		catch (IllegalArgumentException ex) {, +			throw new RestClientException("Unknown status code [" + response.getRawStatusCode() + "]");, +		}, +		return statusCode;, +		HttpStatus statusCode = getStatusCode(response);, +++ b/spring-web/src/test/java/org/springframework/web/client/DefaultResponseErrorHandlerTests.java, +, +	// SPR-9406, +, +	@Test(expected=RestClientException.class), +	public void unknownStatusCode() throws Exception {, +		expect(response.getStatusCode()).andThrow(new IllegalArgumentException("No matching constant for 999"));, +		expect(response.getRawStatusCode()).andReturn(999);, +, +		replay(response);, +, +		handler.handleError(response);, +	}, +++ b/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java, +		return hasError(getStatusCode(response));, +	}, +, +	private HttpStatus getStatusCode(ClientHttpResponse response) throws IOException {, +		HttpStatus statusCode;, +		try {, +			statusCode = response.getStatusCode();, +		}, +		catch (IllegalArgumentException ex) {, +			throw new RestClientException("Unknown status code [" + response.getRawStatusCode() + "]");, +		}, +		return statusCode;, +		HttpStatus statusCode = getStatusCode(response);, +++ b/spring-web/src/test/java/org/springframework/web/client/DefaultResponseErrorHandlerTests.java, +, +	// SPR-9406, +, +	@Test(expected=RestClientException.class), +	public void unknownStatusCode() throws Exception {, +		expect(response.getStatusCode()).andThrow(new IllegalArgumentException("No matching constant for 999"));, +		expect(response.getRawStatusCode()).andReturn(999);, +, +		replay(response);, +, +		handler.handleError(response);, +	}, +++ b/src/dist/changelog.txt, +* raise RestClientException instead of IllegalArgumentException for unknown status codes]