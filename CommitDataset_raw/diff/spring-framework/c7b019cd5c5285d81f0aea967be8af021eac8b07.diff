[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.java, + * Copyright 2002-2009 the original author or authors., +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.beans.factory.BeanFactoryAware;, +import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;, +import org.springframework.core.Conventions;, +		implements PriorityOrdered, BeanFactoryAware {, +, +	/**, +	 * Bean definition attribute that may indicate whether a given bean is supposed, +	 * to be skipped when performing this post-processor's required property check., +	 * @see #shouldSkip, +	 */, +	public static final String SKIP_REQUIRED_CHECK_ATTRIBUTE =, +			Conventions.getQualifiedAttributeName(RequiredAnnotationBeanPostProcessor.class, "skipRequiredCheck");, +, +	private ConfigurableListableBeanFactory beanFactory;, +, +	public void setBeanFactory(BeanFactory beanFactory) {, +		if (beanFactory instanceof ConfigurableListableBeanFactory) {, +			this.beanFactory = (ConfigurableListableBeanFactory) beanFactory;, +		}, +	}, +, +			if (!shouldSkip(this.beanFactory, beanName)) {, +			}, +	 * Check whether the given bean definition is not subject to the annotation-based, +	 * required property check as performed by this post-processor., +	 * <p>The default implementations check for the presence of the, +	 * {@link #SKIP_REQUIRED_CHECK_ATTRIBUTE} attribute in the bean definition, if any., +	 * @param beanFactory the BeanFactory to check against, +	 * @param beanName the name of the bean to check against, +	 * @return <code>true</code> to skip the bean; <code>false</code> to process it, +	 */, +	protected boolean shouldSkip(ConfigurableListableBeanFactory beanFactory, String beanName) {, +		return (beanFactory != null && beanFactory.containsBeanDefinition(beanName) &&, +				Boolean.TRUE.equals(beanFactory.getBeanDefinition(beanName).getAttribute(SKIP_REQUIRED_CHECK_ATTRIBUTE)));, +	}, +, +	/**, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.java, + * Copyright 2002-2009 the original author or authors., +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.beans.factory.BeanFactoryAware;, +import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;, +import org.springframework.core.Conventions;, +		implements PriorityOrdered, BeanFactoryAware {, +, +	/**, +	 * Bean definition attribute that may indicate whether a given bean is supposed, +	 * to be skipped when performing this post-processor's required property check., +	 * @see #shouldSkip, +	 */, +	public static final String SKIP_REQUIRED_CHECK_ATTRIBUTE =, +			Conventions.getQualifiedAttributeName(RequiredAnnotationBeanPostProcessor.class, "skipRequiredCheck");, +, +	private ConfigurableListableBeanFactory beanFactory;, +, +	public void setBeanFactory(BeanFactory beanFactory) {, +		if (beanFactory instanceof ConfigurableListableBeanFactory) {, +			this.beanFactory = (ConfigurableListableBeanFactory) beanFactory;, +		}, +	}, +, +			if (!shouldSkip(this.beanFactory, beanName)) {, +			}, +	 * Check whether the given bean definition is not subject to the annotation-based, +	 * required property check as performed by this post-processor., +	 * <p>The default implementations check for the presence of the, +	 * {@link #SKIP_REQUIRED_CHECK_ATTRIBUTE} attribute in the bean definition, if any., +	 * @param beanFactory the BeanFactory to check against, +	 * @param beanName the name of the bean to check against, +	 * @return <code>true</code> to skip the bean; <code>false</code> to process it, +	 */, +	protected boolean shouldSkip(ConfigurableListableBeanFactory beanFactory, String beanName) {, +		return (beanFactory != null && beanFactory.containsBeanDefinition(beanName) &&, +				Boolean.TRUE.equals(beanFactory.getBeanDefinition(beanName).getAttribute(SKIP_REQUIRED_CHECK_ATTRIBUTE)));, +	}, +, +	/**, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +import org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor;, +		beanDef.setAttribute(RequiredAnnotationBeanPostProcessor.SKIP_REQUIRED_CHECK_ATTRIBUTE, Boolean.TRUE);, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.java, + * Copyright 2002-2009 the original author or authors., +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.beans.factory.BeanFactoryAware;, +import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;, +import org.springframework.core.Conventions;, +		implements PriorityOrdered, BeanFactoryAware {, +, +	/**, +	 * Bean definition attribute that may indicate whether a given bean is supposed, +	 * to be skipped when performing this post-processor's required property check., +	 * @see #shouldSkip, +	 */, +	public static final String SKIP_REQUIRED_CHECK_ATTRIBUTE =, +			Conventions.getQualifiedAttributeName(RequiredAnnotationBeanPostProcessor.class, "skipRequiredCheck");, +, +	private ConfigurableListableBeanFactory beanFactory;]