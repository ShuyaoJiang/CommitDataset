[+++ b/build-spring-framework/resources/changelog.txt, +Changes in version 3.0.0.RC1 (2009-06-10), +-----------------------------------------, +, +* Servlet/Portlet ApplicationContexts use a specific id based on servlet/portlet name, +* DefaultListableBeanFactory references are serializable now when initialized with an id, +* scoped proxies are serializable now, for web scopes as well as for singleton beans, +* injected request/session references are serializable proxies for the current request now, +* ReloadableResourceBundleMessageSource correctly calculates filenames for all locales now, +, +, +++ b/build-spring-framework/resources/changelog.txt, +Changes in version 3.0.0.RC1 (2009-06-10), +-----------------------------------------, +, +* Servlet/Portlet ApplicationContexts use a specific id based on servlet/portlet name, +* DefaultListableBeanFactory references are serializable now when initialized with an id, +* scoped proxies are serializable now, for web scopes as well as for singleton beans, +* injected request/session references are serializable proxies for the current request now, +* ReloadableResourceBundleMessageSource correctly calculates filenames for all locales now, +, +, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/scope/DefaultScopedObject.java, + * Copyright 2002-2009 the original author or authors., +import java.io.Serializable;, +, +public class DefaultScopedObject implements ScopedObject, Serializable {, +++ b/build-spring-framework/resources/changelog.txt, +Changes in version 3.0.0.RC1 (2009-06-10), +-----------------------------------------, +, +* Servlet/Portlet ApplicationContexts use a specific id based on servlet/portlet name, +* DefaultListableBeanFactory references are serializable now when initialized with an id, +* scoped proxies are serializable now, for web scopes as well as for singleton beans, +* injected request/session references are serializable proxies for the current request now, +* ReloadableResourceBundleMessageSource correctly calculates filenames for all locales now, +, +, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/scope/DefaultScopedObject.java, + * Copyright 2002-2009 the original author or authors., +import java.io.Serializable;, +, +public class DefaultScopedObject implements ScopedObject, Serializable {, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.java, + * Copyright 2002-2009 the original author or authors., +++ b/build-spring-framework/resources/changelog.txt, +Changes in version 3.0.0.RC1 (2009-06-10), +-----------------------------------------, +, +* Servlet/Portlet ApplicationContexts use a specific id based on servlet/portlet name, +* DefaultListableBeanFactory references are serializable now when initialized with an id, +* scoped proxies are serializable now, for web scopes as well as for singleton beans, +* injected request/session references are serializable proxies for the current request now, +* ReloadableResourceBundleMessageSource correctly calculates filenames for all locales now, +, +, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/scope/DefaultScopedObject.java, + * Copyright 2002-2009 the original author or authors., +import java.io.Serializable;, +, +public class DefaultScopedObject implements ScopedObject, Serializable {, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.java, + * Copyright 2002-2009 the original author or authors., +++ b/org.springframework.aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java, +import java.io.NotSerializableException;, +import java.io.ObjectStreamException;, +, + * Base class for dynamic {@link TargetSource} implementations that create new prototype, + * bean instances to support a pooling or new-instance-per-invocation strategy., +, +	//---------------------------------------------------------------------, +	// Serialization support, +	//---------------------------------------------------------------------, +, +	/**, +	 * Replaces this object with a SingletonTargetSource on serialization., +	 * Protected as otherwise it won't be invoked for subclasses., +	 * (The <code>writeReplace()</code> method must be visible to the class, +	 * being serialized.), +	 * <p>With this implementation of this method, there is no need to mark, +	 * non-serializable fields in this class or subclasses as transient., +	 */, +	protected Object writeReplace() throws ObjectStreamException {, +		if (logger.isDebugEnabled()) {, +			logger.debug("Disconnecting TargetSource [" + this + "]");, +		}, +		try {, +			// Create disconnected SingletonTargetSource., +			return new SingletonTargetSource(getTarget());, +		}, +		catch (Exception ex) {, +			logger.error("Cannot get target for disconnecting TargetSource [" + this + "]", ex);, +			throw new NotSerializableException(, +					"Cannot get target for disconnecting TargetSource [" + this + "]: " + ex);, +		}, +	}, +, +++ b/build-spring-framework/resources/changelog.txt, +Changes in version 3.0.0.RC1 (2009-06-10), +-----------------------------------------]