[+++ b/org.springframework.context/src/main/java/org/springframework/validation/SmartValidator.java, +	 * Validate the supplied {@code target} object, which must be of a {@link Class} for, +	 * which the {@link #supports(Class)} method typically has (or would) return {@code true}., +	 * <p>The supplied {@link Errors errors} instance can be used to report any, +	 * resulting validation errors., +	 * <p><b>This variant of {@code validate} supports validation hints, such as, +	 * validation groups against a JSR-303 provider</b> (in this case, the provided hint, +	 * objects need to be annotation arguments of type {@code Class})., +	 * <p>Note: Validation hints may get ignored by the actual target {@code Validator},, +	 * @param target the object that is to be validated (can be {@code null}), +	 * @param errors contextual state about the validation process (never {@code null}), +++ b/org.springframework.context/src/main/java/org/springframework/validation/SmartValidator.java, +	 * Validate the supplied {@code target} object, which must be of a {@link Class} for, +	 * which the {@link #supports(Class)} method typically has (or would) return {@code true}., +	 * <p>The supplied {@link Errors errors} instance can be used to report any, +	 * resulting validation errors., +	 * <p><b>This variant of {@code validate} supports validation hints, such as, +	 * validation groups against a JSR-303 provider</b> (in this case, the provided hint, +	 * objects need to be annotation arguments of type {@code Class})., +	 * <p>Note: Validation hints may get ignored by the actual target {@code Validator},, +	 * @param target the object that is to be validated (can be {@code null}), +	 * @param errors contextual state about the validation process (never {@code null}), +++ b/org.springframework.context/src/main/java/org/springframework/validation/annotation/Validated.java, +	Class<?>[] value() default {};, +++ b/org.springframework.context/src/main/java/org/springframework/validation/SmartValidator.java, +	 * Validate the supplied {@code target} object, which must be of a {@link Class} for, +	 * which the {@link #supports(Class)} method typically has (or would) return {@code true}., +	 * <p>The supplied {@link Errors errors} instance can be used to report any, +	 * resulting validation errors., +	 * <p><b>This variant of {@code validate} supports validation hints, such as, +	 * validation groups against a JSR-303 provider</b> (in this case, the provided hint, +	 * objects need to be annotation arguments of type {@code Class})., +	 * <p>Note: Validation hints may get ignored by the actual target {@code Validator},, +	 * @param target the object that is to be validated (can be {@code null}), +	 * @param errors contextual state about the validation process (never {@code null}), +++ b/org.springframework.context/src/main/java/org/springframework/validation/annotation/Validated.java, +	Class<?>[] value() default {};, +++ b/org.springframework.context/src/main/java/org/springframework/validation/beanvalidation/MethodValidationPostProcessor.java, + * typically as inline annotation), e.g.:, + * <pre class="code">, + * public @NotNull Object myValidMethod(@NotNull String arg1, @Max(10) int arg2), + * </pre>, + * inline constraint annotations. Validation groups can be specified through {@code @Validated}, +@SuppressWarnings("serial")]