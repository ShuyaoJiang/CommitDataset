[+++ b/src/asciidoc/index.adoc, +[[overview-aop-instrumentation]], +==== AOP and Instrumentation, +Spring's <<aop-introduction,__AOP__>> module provides an __AOP Alliance__-compliant, +aspect-oriented programming implementation allowing you to define, for example,, +method-interceptors and pointcuts to cleanly decouple code that implements functionality, +that should be separated. Using source-level metadata functionality, you can also, +incorporate behavioral information into your code, in a manner similar to that of .NET, +attributes., +The separate __Aspects__ module provides integration with AspectJ., +, +The __Instrumentation__ module provides class instrumentation support and classloader, +implementations to be used in certain application servers., +, +[[overview-messaging]], +==== Messaging, +Spring Framework 4 includes a new `spring-messaging` module with key abstractions from, +the _Spring Integration_ project such as `Message`, `MessageChannel`,, +`MessageHandler` and others to serve as a foundation for messaging-based applications. The, +module also includes a set of annotations for mapping messages to methods, similar to the, +Spring MVC annotation based programming model., +consuming messages. Since Spring Framework 4.1, it provides an integration with the, +`spring-messaging` module.]