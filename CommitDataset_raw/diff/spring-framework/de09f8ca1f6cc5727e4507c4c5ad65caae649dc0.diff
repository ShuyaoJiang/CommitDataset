[+++ b/build.gradle, +	ext.beanvalVersion         = "2.0.0.Final", +	ext.caffeineVersion        = "2.5.4", +	ext.hibvalVersion          = "6.0.1.Final", +	ext.nettyVersion           = "4.1.14.Final", +	ext.tomcatVersion          = "8.5.19", +		optional("javax.validation:validation-api:1.1.0.Final"), +		optional("org.hibernate:hibernate-validator:5.4.1.Final"), +project("spring-context-indexer") {, +	description = "Spring Context Indexer", +, +	dependencies {, +		testCompile(project(":spring-context")), +		testCompile("javax.inject:javax.inject:1"), +		testCompile("javax.annotation:javax.annotation-api:${annotationApiVersion}"), +		testCompile("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +	}, +}, +, +		testCompile("javax.validation:validation-api:${beanvalVersion}"), +		testCompile("org.hibernate:hibernate-validator:${hibvalVersion}"), +		testRuntime("javax.el:javax.el-api:${elApiVersion}"), +		testRuntime("org.glassfish:javax.el:3.0.1-b08"), +		testRuntime("javax.annotation:javax.annotation-api:${annotationApiVersion}"), +		testRuntime("org.apache.johnzon:johnzon-jsonb:1.1.2"), +		testRuntime("org.python:jython-standalone:2.7.1"), +		testRuntime("org.python:jython-standalone:2.7.1"), +		optional("com.jayway.jsonpath:json-path:2.4.0"), +		gradleVersion = '4.1', +++ b/build.gradle, +	ext.beanvalVersion         = "2.0.0.Final", +	ext.caffeineVersion        = "2.5.4", +	ext.hibvalVersion          = "6.0.1.Final", +	ext.nettyVersion           = "4.1.14.Final", +	ext.tomcatVersion          = "8.5.19", +		optional("javax.validation:validation-api:1.1.0.Final"), +		optional("org.hibernate:hibernate-validator:5.4.1.Final"), +project("spring-context-indexer") {, +	description = "Spring Context Indexer", +, +	dependencies {, +		testCompile(project(":spring-context")), +		testCompile("javax.inject:javax.inject:1"), +		testCompile("javax.annotation:javax.annotation-api:${annotationApiVersion}"), +		testCompile("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +	}, +}, +, +		testCompile("javax.validation:validation-api:${beanvalVersion}"), +		testCompile("org.hibernate:hibernate-validator:${hibvalVersion}"), +		testRuntime("javax.el:javax.el-api:${elApiVersion}"), +		testRuntime("org.glassfish:javax.el:3.0.1-b08"), +		testRuntime("javax.annotation:javax.annotation-api:${annotationApiVersion}"), +		testRuntime("org.apache.johnzon:johnzon-jsonb:1.1.2"), +		testRuntime("org.python:jython-standalone:2.7.1"), +		testRuntime("org.python:jython-standalone:2.7.1"), +		optional("com.jayway.jsonpath:json-path:2.4.0"), +		gradleVersion = '4.1', +++ b/spring-context-support/src/test/java/org/springframework/validation/beanvalidation2/BeanValidationPostProcessorTests.java, +/*, + * Copyright 2002-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.validation.beanvalidation2;, +, +import javax.annotation.PostConstruct;, +import javax.validation.constraints.NotNull;, +import javax.validation.constraints.Size;, +, +import org.junit.Test;, +, +import org.springframework.beans.factory.BeanCreationException;, +import org.springframework.beans.factory.support.RootBeanDefinition;, +import org.springframework.context.annotation.CommonAnnotationBeanPostProcessor;, +import org.springframework.context.support.GenericApplicationContext;, +import org.springframework.tests.sample.beans.TestBean;, +import org.springframework.validation.beanvalidation.BeanValidationPostProcessor;, +, +import static org.junit.Assert.*;, +, +/**, + * @author Juergen Hoeller, + */, +public class BeanValidationPostProcessorTests {, +, +	@Test, +	public void testNotNullConstraint() {, +		GenericApplicationContext ac = new GenericApplicationContext();]