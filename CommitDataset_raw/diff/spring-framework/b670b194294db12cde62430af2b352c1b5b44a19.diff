[+++ b/org.springframework.context/src/main/java/org/springframework/validation/DataBinder.java, + * Copyright 2002-2010 the original author or authors., +	 * Set whether this binder should attempt to "auto-grow" a nested path that contains a null value., +	 * <p>If "true", a null path location will be populated with a default object value and traversed, +	 * instead of resulting in an exception. This flag also enables auto-growth of collection elements, +	 * when accessing an out-of-bounds index., +	 * <p>Default is "true" on a standard DataBinder. Note that this feature is only supported, +	 * for bean property access (DataBinder's default mode), not for field access., +	 * @see #initBeanPropertyAccess(), +	 * @see org.springframework.beans.BeanWrapper#setAutoGrowNestedPaths, +	 */, +	public void setAutoGrowNestedPaths(boolean autoGrowNestedPaths) {, +		Assert.state(this.bindingResult == null,, +				"DataBinder is already initialized - call setAutoGrowNestedPaths before other configuration methods");, +		this.autoGrowNestedPaths = autoGrowNestedPaths;, +	}, +, +	/**, +	 * Return whether "auto-growing" of nested paths has been activated., +	 */, +	public boolean isAutoGrowNestedPaths() {, +		return this.autoGrowNestedPaths;, +	}, +, +	/**, +		Assert.state(this.bindingResult == null,, +				"DataBinder is already initialized - call initBeanPropertyAccess before other configuration methods");, +		Assert.state(this.bindingResult == null,, +				"DataBinder is already initialized - call initDirectFieldAccess before other configuration methods");]