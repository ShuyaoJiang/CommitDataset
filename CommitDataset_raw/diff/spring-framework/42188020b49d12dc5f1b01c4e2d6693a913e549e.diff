[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ChannelSendOperator.java, +	public ChannelSendOperator(Publisher<? extends T> source, Function<Publisher<T>,, +			Publisher<Void>> writeFunction) {, +, +		/* Downstream write completion subscriber */, +		private final CoreSubscriber<? super Void> completionSubscriber;, +		/* Upstream write source subscription */, +, +		WriteWithBarrier(CoreSubscriber<? super Void> completionSubscriber) {, +			this.completionSubscriber = completionSubscriber;, +, +			return completionSubscriber.currentContext();, +				requiredWriteSubscriber().onComplete();, +					requiredWriteSubscriber().onComplete();, +					writeFunction.apply(this).subscribe(new DownstreamBridge(this.completionSubscriber));, +				requiredWriteSubscriber().onError(ex);, +					requiredWriteSubscriber().onError(ex);, +					this.completionSubscriber.onError(ex);, +				requiredWriteSubscriber().onNext(item);, +					requiredWriteSubscriber().onNext(item);, +					writeFunction.apply(this).subscribe(new DownstreamBridge(this.completionSubscriber));, +					this.completionSubscriber.onError(new IllegalStateException("Unexpected item."));, +				this.completionSubscriber.onSubscribe(this);, +				s.request(1);, +				requiredWriteSubscriber().onNext(this.item);, +				requiredWriteSubscriber().onError(this.error);, +				requiredWriteSubscriber().onComplete();, +			if (this.readyToWrite) {, +					this.readyToWrite = true;, +		private Subscriber<? super T> requiredWriteSubscriber() {, +			return this.downstream.currentContext();]