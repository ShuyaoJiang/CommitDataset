[+++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +							logger.info("Unable to proxy interface-implementing method [" + method + "] because " +, +						logger.debug("Final method [" + method + "] cannot get proxied via CGLIB: " +, +						logger.debug("Method [" + method + "] is package-visible across different ClassLoaders " +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +							logger.info("Unable to proxy interface-implementing method [" + method + "] because " +, +						logger.debug("Final method [" + method + "] cannot get proxied via CGLIB: " +, +						logger.debug("Method [" + method + "] is package-visible across different ClassLoaders " +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java, +				logger.info("Using non-singleton proxies with singleton targets is often undesirable. " +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +							logger.info("Unable to proxy interface-implementing method [" + method + "] because " +, +						logger.debug("Final method [" + method + "] cannot get proxied via CGLIB: " +, +						logger.debug("Method [" + method + "] is package-visible across different ClassLoaders " +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java, +				logger.info("Using non-singleton proxies with singleton targets is often undesirable. " +, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java, +				logger.warn("Exception handler for async method '" + method.toGenericString() +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +							logger.info("Unable to proxy interface-implementing method [" + method + "] because " +, +						logger.debug("Final method [" + method + "] cannot get proxied via CGLIB: " +, +						logger.debug("Method [" + method + "] is package-visible across different ClassLoaders " +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java, +				logger.info("Using non-singleton proxies with singleton targets is often undesirable. " +, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java, +				logger.warn("Exception handler for async method '" + method.toGenericString() +, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/SimpleAsyncUncaughtExceptionHandler.java, + * @author Juergen Hoeller, +			logger.error("Unexpected exception occurred invoking async method: " + method, ex);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +							logger.info("Unable to proxy interface-implementing method [" + method + "] because " +, +						logger.debug("Final method [" + method + "] cannot get proxied via CGLIB: " +, +						logger.debug("Method [" + method + "] is package-visible across different ClassLoaders " +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java, +				logger.info("Using non-singleton proxies with singleton targets is often undesirable. " +, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java, +				logger.warn("Exception handler for async method '" + method.toGenericString() +, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/SimpleAsyncUncaughtExceptionHandler.java, + * @author Juergen Hoeller, +			logger.error("Unexpected exception occurred invoking async method: " + method, ex);, +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java, +				logger.warn("Destroy method on bean with name '" + getTargetBeanName() + "' threw an exception", ex);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +							logger.info("Unable to proxy interface-implementing method [" + method + "] because " +, +						logger.debug("Final method [" + method + "] cannot get proxied via CGLIB: " +, +						logger.debug("Method [" + method + "] is package-visible across different ClassLoaders " +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java, +				logger.info("Using non-singleton proxies with singleton targets is often undesirable. " +, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java, +				logger.warn("Exception handler for async method '" + method.toGenericString() +, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/SimpleAsyncUncaughtExceptionHandler.java, + * @author Juergen Hoeller, +			logger.error("Unexpected exception occurred invoking async method: " + method, ex);, +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java, +				logger.warn("Destroy method on bean with name '" + getTargetBeanName() + "' threw an exception", ex);, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +				if (logger.isInfoEnabled()) {, +					logger.info("Editor class [" + editorName +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +							logger.info("Unable to proxy interface-implementing method [" + method + "] because " +, +						logger.debug("Final method [" + method + "] cannot get proxied via CGLIB: " +, +						logger.debug("Method [" + method + "] is package-visible across different ClassLoaders " +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java, +				logger.info("Using non-singleton proxies with singleton targets is often undesirable. " +, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java, +				logger.warn("Exception handler for async method '" + method.toGenericString() +, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/SimpleAsyncUncaughtExceptionHandler.java, + * @author Juergen Hoeller, +			logger.error("Unexpected exception occurred invoking async method: " + method, ex);, +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java, +				logger.warn("Destroy method on bean with name '" + getTargetBeanName() + "' threw an exception", ex);, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +				if (logger.isInfoEnabled()) {, +					logger.info("Editor class [" + editorName +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +			logger.trace("JSR-330 'javax.inject.Inject' annotation found and supported for autowiring");, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +							logger.info("Unable to proxy interface-implementing method [" + method + "] because " +, +						logger.debug("Final method [" + method + "] cannot get proxied via CGLIB: " +, +						logger.debug("Method [" + method + "] is package-visible across different ClassLoaders " +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java, +				logger.info("Using non-singleton proxies with singleton targets is often undesirable. " +, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java, +				logger.warn("Exception handler for async method '" + method.toGenericString() +, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/SimpleAsyncUncaughtExceptionHandler.java, + * @author Juergen Hoeller, +			logger.error("Unexpected exception occurred invoking async method: " + method, ex);, +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java, +				logger.warn("Destroy method on bean with name '" + getTargetBeanName() + "' threw an exception", ex);, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +				if (logger.isInfoEnabled()) {, +					logger.info("Editor class [" + editorName +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +			logger.trace("JSR-330 'javax.inject.Inject' annotation found and supported for autowiring");, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java, +			String msg = "Destroy method on bean with name '" + beanName + "' threw an exception";, +			logger.warn("Failed to invoke destroy method on bean with name '" + beanName + "'", ex);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +							logger.info("Unable to proxy interface-implementing method [" + method + "] because " +, +						logger.debug("Final method [" + method + "] cannot get proxied via CGLIB: " +]