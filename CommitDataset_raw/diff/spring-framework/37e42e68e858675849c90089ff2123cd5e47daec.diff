[+++ b/spring-aspects/src/main/java/org/springframework/cache/aspectj/AspectJCachingConfiguration.java, + * {@code @Configuration} class that registers the Spring infrastructure beans, + * necessary to enable AspectJ-based annotation-driven cache management., + * @author Stephane Nicoll, +++ b/spring-aspects/src/main/java/org/springframework/cache/aspectj/AspectJCachingConfiguration.java, + * {@code @Configuration} class that registers the Spring infrastructure beans, + * necessary to enable AspectJ-based annotation-driven cache management., + * @author Stephane Nicoll, +++ b/spring-aspects/src/test/java/org/springframework/cache/aspectj/AspectJEnableCachingIsolatedTests.java, +, +	private void load(Class<?>... config) {, +		this.ctx = new AnnotationConfigApplicationContext(config);, +	}, +, +, +, +	public void singleCacheManagerBean() {, +	@Test, +	public void multipleCacheManagerBeans() {, +		catch (IllegalStateException ex) {, +			assertTrue(ex.getMessage().contains("bean of type CacheManager"));, +	@Test, +	public void multipleCachingConfigurers() {, +			assertTrue(root instanceof IllegalStateException);, +			assertTrue(ex.getMessage().contains("implementations of CachingConfigurer"));, +	@Test, +	public void noCacheManagerBeans() {, +		catch (IllegalStateException ex) {, +			assertTrue(ex.getMessage().contains("No bean of type CacheManager"));, +++ b/spring-aspects/src/main/java/org/springframework/cache/aspectj/AspectJCachingConfiguration.java, + * {@code @Configuration} class that registers the Spring infrastructure beans, + * necessary to enable AspectJ-based annotation-driven cache management., + * @author Stephane Nicoll, +++ b/spring-aspects/src/test/java/org/springframework/cache/aspectj/AspectJEnableCachingIsolatedTests.java, +, +	private void load(Class<?>... config) {, +		this.ctx = new AnnotationConfigApplicationContext(config);, +	}, +, +, +, +	public void singleCacheManagerBean() {, +	@Test, +	public void multipleCacheManagerBeans() {, +		catch (IllegalStateException ex) {, +			assertTrue(ex.getMessage().contains("bean of type CacheManager"));, +	@Test, +	public void multipleCachingConfigurers() {, +			assertTrue(root instanceof IllegalStateException);, +			assertTrue(ex.getMessage().contains("implementations of CachingConfigurer"));, +	@Test, +	public void noCacheManagerBeans() {, +		catch (IllegalStateException ex) {, +			assertTrue(ex.getMessage().contains("No bean of type CacheManager"));, +++ b/spring-aspects/src/test/java/org/springframework/cache/aspectj/AspectJEnableCachingTests.java, +]