[+++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java, + * Copyright 2002-2014 the original author or authors., +	public void setBeanFactory(BeanFactory beanFactory) {, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java, + * Copyright 2002-2014 the original author or authors., +	public void setBeanFactory(BeanFactory beanFactory) {, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionInterceptor.java, +, +, +, +		else {, +			// Could not transmit the exception to the caller with default executor, +				this.exceptionHandler.handleUncaughtException(ex, method, params);, +			catch (Throwable ex2) {, +				logger.error("Exception handler for async method '" + method.toGenericString() +, +						"' threw unexpected exception itself", ex2);, +	 * @see #determineAsyncExecutor(Method), +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java, + * Copyright 2002-2014 the original author or authors., +	public void setBeanFactory(BeanFactory beanFactory) {, +++ b/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionInterceptor.java, +, +, +, +		else {, +			// Could not transmit the exception to the caller with default executor, +				this.exceptionHandler.handleUncaughtException(ex, method, params);, +			catch (Throwable ex2) {, +				logger.error("Exception handler for async method '" + method.toGenericString() +, +						"' threw unexpected exception itself", ex2);, +	 * @see #determineAsyncExecutor(Method), +++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java]