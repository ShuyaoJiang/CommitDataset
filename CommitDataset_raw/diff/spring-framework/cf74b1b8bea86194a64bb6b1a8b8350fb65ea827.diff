[+++ b/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java, + * Copyright 2002-2018 the original author or authors., + * @author Juergen Hoeller, +	private volatile Object concurrentResult = RESULT_NONE;, +	private volatile Object[] concurrentResultContext;, +	private final Map<Object, CallableProcessingInterceptor> callableInterceptors = new LinkedHashMap<>();, +	private final Map<Object, DeferredResultProcessingInterceptor> deferredResultInterceptors = new LinkedHashMap<>();, +	public void setAsyncWebRequest(AsyncWebRequest asyncWebRequest) {, +		return (this.asyncWebRequest != null && this.asyncWebRequest.isAsyncStarted());, +		synchronized (WebAsyncManager.this) {, +	}, +			if (this.concurrentResult != RESULT_NONE) {, +		synchronized (WebAsyncManager.this) {, +			this.concurrentResult = RESULT_NONE;, +		}]