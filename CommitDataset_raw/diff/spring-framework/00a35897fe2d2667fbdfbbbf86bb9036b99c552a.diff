[+++ b/spring-web/src/main/java/org/springframework/web/bind/WebExchangeDataBinder.java, +		Mono<MultiValueMap<String, String>> formParams =, +				exchange.getFormData().defaultIfEmpty(new LinkedMultiValueMap<>());, +++ b/spring-web/src/main/java/org/springframework/web/bind/WebExchangeDataBinder.java, +		Mono<MultiValueMap<String, String>> formParams =, +				exchange.getFormData().defaultIfEmpty(new LinkedMultiValueMap<>());, +++ b/spring-web/src/main/java/org/springframework/web/server/DefaultServerWebExchangeMutativeBuilder.java, +import org.springframework.util.MultiValueMap;, +	private Mono<MultiValueMap<String, String>> formData;, +, +	public ServerWebExchange.MutativeBuilder setFormData(Mono<MultiValueMap<String, String>> formData) {, +		this.formData = formData;, +		return this;, +	}, +, +	@Override, +		return new MutativeDecorator(this.delegate, this.request, this.response,, +				this.user, this.session, this.formData);, +		private final Mono<MultiValueMap<String, String>> formData;, +, +				Mono<WebSession> session, Mono<MultiValueMap<String, String>> formData) {, +			this.formData = formData;, +, +		@Override, +		public Mono<MultiValueMap<String, String>> getFormData() {, +			return (this.formData != null ? this.formData : getDelegate().getFormData());, +		}, +++ b/spring-web/src/main/java/org/springframework/web/bind/WebExchangeDataBinder.java, +		Mono<MultiValueMap<String, String>> formParams =, +				exchange.getFormData().defaultIfEmpty(new LinkedMultiValueMap<>());, +++ b/spring-web/src/main/java/org/springframework/web/server/DefaultServerWebExchangeMutativeBuilder.java, +import org.springframework.util.MultiValueMap;, +	private Mono<MultiValueMap<String, String>> formData;, +, +	public ServerWebExchange.MutativeBuilder setFormData(Mono<MultiValueMap<String, String>> formData) {, +		this.formData = formData;, +		return this;, +	}, +, +	@Override, +		return new MutativeDecorator(this.delegate, this.request, this.response,, +				this.user, this.session, this.formData);, +		private final Mono<MultiValueMap<String, String>> formData;, +, +				Mono<WebSession> session, Mono<MultiValueMap<String, String>> formData) {, +			this.formData = formData;, +, +		@Override, +		public Mono<MultiValueMap<String, String>> getFormData() {, +			return (this.formData != null ? this.formData : getDelegate().getFormData());, +		}, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchange.java, +import org.springframework.util.MultiValueMap;, +	 * Return the form data from the body of the request or an empty {@code Mono}, +	 * if the Content-Type is not "application/x-www-form-urlencoded"., +	 */, +	Mono<MultiValueMap<String, String>> getFormData();, +, +	/**, +		 * Set the form data., +		 */, +		MutativeBuilder setFormData(Mono<MultiValueMap<String, String>> formData);, +, +		/**, +++ b/spring-web/src/main/java/org/springframework/web/bind/WebExchangeDataBinder.java, +		Mono<MultiValueMap<String, String>> formParams =, +				exchange.getFormData().defaultIfEmpty(new LinkedMultiValueMap<>());, +++ b/spring-web/src/main/java/org/springframework/web/server/DefaultServerWebExchangeMutativeBuilder.java, +import org.springframework.util.MultiValueMap;, +	private Mono<MultiValueMap<String, String>> formData;, +, +	public ServerWebExchange.MutativeBuilder setFormData(Mono<MultiValueMap<String, String>> formData) {, +		this.formData = formData;, +		return this;, +	}, +, +	@Override, +		return new MutativeDecorator(this.delegate, this.request, this.response,, +				this.user, this.session, this.formData);, +		private final Mono<MultiValueMap<String, String>> formData;, +, +				Mono<WebSession> session, Mono<MultiValueMap<String, String>> formData) {, +			this.formData = formData;, +, +		@Override, +		public Mono<MultiValueMap<String, String>> getFormData() {, +			return (this.formData != null ? this.formData : getDelegate().getFormData());, +		}, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchange.java, +import org.springframework.util.MultiValueMap;, +	 * Return the form data from the body of the request or an empty {@code Mono}, +	 * if the Content-Type is not "application/x-www-form-urlencoded"., +	 */, +	Mono<MultiValueMap<String, String>> getFormData();, +, +	/**, +		 * Set the form data., +		 */, +		MutativeBuilder setFormData(Mono<MultiValueMap<String, String>> formData);, +]