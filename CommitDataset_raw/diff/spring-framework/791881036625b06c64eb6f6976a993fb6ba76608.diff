[+++ b/build-spring-framework/resources/changelog.txt, +* Keep contentType field and Content-Type header in sync in MockHttpServletRequest and MockHttpServletResponse, +++ b/build-spring-framework/resources/changelog.txt, +* Keep contentType field and Content-Type header in sync in MockHttpServletRequest and MockHttpServletResponse, +++ b/org.springframework.orm/src/test/java/org/springframework/mock/web/MockHttpServletRequest.java, +	private static final String CONTENT_TYPE_HEADER = "Content-Type";, +	, +	private static final String CHARSET_PREFIX = "charset=";, +, +	, +		if (this.contentType != null)  {, +			String type = removeCharset(this.contentType);, +			setContentType(type);, +		}, +	}, +	, +	private String removeCharset(String contentType) {, +		int index = contentType.toLowerCase().indexOf(CHARSET_PREFIX);, +		if (index != -1) {, +			contentType = contentType.substring(0, contentType.lastIndexOf(';', index));, +		}, +		return contentType;, +		if (contentType != null) {, +			int charsetIndex = contentType.toLowerCase().indexOf(CHARSET_PREFIX);, +			if (charsetIndex != -1) {, +				String encoding = contentType.substring(charsetIndex + CHARSET_PREFIX.length());, +				this.characterEncoding = encoding;, +			}, +			else if (this.characterEncoding != null) {, +				this.contentType += ";" + CHARSET_PREFIX + this.characterEncoding;, +			}, +			doAddHeaderValue(CONTENT_TYPE_HEADER, this.contentType, true);, +		}, +		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {, +			setContentType((String) value);, +			return;, +		}, +		doAddHeaderValue(name, value, false);, +	}, +	, +	@SuppressWarnings("rawtypes"), +	private void doAddHeaderValue(String name, Object value, boolean replace) {, +		if (header == null || replace) {, +++ b/build-spring-framework/resources/changelog.txt, +* Keep contentType field and Content-Type header in sync in MockHttpServletRequest and MockHttpServletResponse, +++ b/org.springframework.orm/src/test/java/org/springframework/mock/web/MockHttpServletRequest.java, +	private static final String CONTENT_TYPE_HEADER = "Content-Type";, +	, +	private static final String CHARSET_PREFIX = "charset=";, +, +	, +		if (this.contentType != null)  {, +			String type = removeCharset(this.contentType);, +			setContentType(type);, +		}, +	}, +	, +	private String removeCharset(String contentType) {, +		int index = contentType.toLowerCase().indexOf(CHARSET_PREFIX);, +		if (index != -1) {, +			contentType = contentType.substring(0, contentType.lastIndexOf(';', index));, +		}, +		return contentType;, +		if (contentType != null) {, +			int charsetIndex = contentType.toLowerCase().indexOf(CHARSET_PREFIX);, +			if (charsetIndex != -1) {, +				String encoding = contentType.substring(charsetIndex + CHARSET_PREFIX.length());, +				this.characterEncoding = encoding;, +			}, +			else if (this.characterEncoding != null) {, +				this.contentType += ";" + CHARSET_PREFIX + this.characterEncoding;, +			}, +			doAddHeaderValue(CONTENT_TYPE_HEADER, this.contentType, true);, +		}, +		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {, +			setContentType((String) value);, +			return;, +		}, +		doAddHeaderValue(name, value, false);, +	}, +	, +	@SuppressWarnings("rawtypes"), +	private void doAddHeaderValue(String name, Object value, boolean replace) {, +		if (header == null || replace) {, +++ b/org.springframework.orm/src/test/java/org/springframework/mock/web/MockHttpServletResponse.java, +	private static final String CONTENT_TYPE_HEADER = "Content-Type";, +	, +	private static final String CONTENT_LENGTH_HEADER = "Content-Length";, +, +	private boolean charset = false;, +, +		this.charset = true;, +		if (this.contentType != null)  {, +			String type = removeCharset(this.contentType);, +			setContentType(type);, +		}, +	}, +	, +	private String removeCharset(String contentType) {, +		int index = contentType.toLowerCase().indexOf(CHARSET_PREFIX);]