[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WiretapConnector.java, +					Assert.state(requestId != null, () -> "No \"" + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "\" header");, +		Assert.state(result != null, () -> "No match for " + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "=" + requestId);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WiretapConnector.java, +					Assert.state(requestId != null, () -> "No \"" + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "\" header");, +		Assert.state(result != null, () -> "No match for " + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "=" + requestId);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultPathContainer.java, +		Assert.isTrue(fromIndex < toIndex, () -> "fromIndex: " + fromIndex + " should be < toIndex " + toIndex);, +		Assert.isTrue(fromIndex >= 0 && fromIndex < elements.size(), () -> "Invalid fromIndex: " + fromIndex);, +		Assert.isTrue(toIndex >= 0 && toIndex <= elements.size(), () -> "Invalid toIndex: " + toIndex);, +			Assert.isTrue(!value.contains("/"), () -> "Invalid path segment value: " + value);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WiretapConnector.java, +					Assert.state(requestId != null, () -> "No \"" + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "\" header");, +		Assert.state(result != null, () -> "No match for " + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "=" + requestId);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultPathContainer.java, +		Assert.isTrue(fromIndex < toIndex, () -> "fromIndex: " + fromIndex + " should be < toIndex " + toIndex);, +		Assert.isTrue(fromIndex >= 0 && fromIndex < elements.size(), () -> "Invalid fromIndex: " + fromIndex);, +		Assert.isTrue(toIndex >= 0 && toIndex <= elements.size(), () -> "Invalid toIndex: " + toIndex);, +			Assert.isTrue(!value.contains("/"), () -> "Invalid path segment value: " + value);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/PathContainer.java, +, +, +, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WiretapConnector.java, +					Assert.state(requestId != null, () -> "No \"" + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "\" header");, +		Assert.state(result != null, () -> "No match for " + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "=" + requestId);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultPathContainer.java, +		Assert.isTrue(fromIndex < toIndex, () -> "fromIndex: " + fromIndex + " should be < toIndex " + toIndex);, +		Assert.isTrue(fromIndex >= 0 && fromIndex < elements.size(), () -> "Invalid fromIndex: " + fromIndex);, +		Assert.isTrue(toIndex >= 0 && toIndex <= elements.size(), () -> "Invalid toIndex: " + toIndex);, +			Assert.isTrue(!value.contains("/"), () -> "Invalid path segment value: " + value);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/PathContainer.java, +, +, +, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/CaptureTheRestPathElement.java, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +import org.springframework.web.util.pattern.PathPattern.MatchingContext;, +					if (!parameters.isEmpty()) {, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WiretapConnector.java, +					Assert.state(requestId != null, () -> "No \"" + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "\" header");, +		Assert.state(result != null, () -> "No match for " + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "=" + requestId);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultPathContainer.java, +		Assert.isTrue(fromIndex < toIndex, () -> "fromIndex: " + fromIndex + " should be < toIndex " + toIndex);, +		Assert.isTrue(fromIndex >= 0 && fromIndex < elements.size(), () -> "Invalid fromIndex: " + fromIndex);, +		Assert.isTrue(toIndex >= 0 && toIndex <= elements.size(), () -> "Invalid toIndex: " + toIndex);, +			Assert.isTrue(!value.contains("/"), () -> "Invalid path segment value: " + value);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/PathContainer.java, +, +, +, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/CaptureTheRestPathElement.java, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +import org.springframework.web.util.pattern.PathPattern.MatchingContext;, +					if (!parameters.isEmpty()) {, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/CaptureVariablePathElement.java, +import org.springframework.lang.Nullable;, +			else if (this.next != null) {, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WiretapConnector.java, +					Assert.state(requestId != null, () -> "No \"" + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "\" header");, +		Assert.state(result != null, () -> "No match for " + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "=" + requestId);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultPathContainer.java, +		Assert.isTrue(fromIndex < toIndex, () -> "fromIndex: " + fromIndex + " should be < toIndex " + toIndex);, +		Assert.isTrue(fromIndex >= 0 && fromIndex < elements.size(), () -> "Invalid fromIndex: " + fromIndex);, +		Assert.isTrue(toIndex >= 0 && toIndex <= elements.size(), () -> "Invalid toIndex: " + toIndex);, +			Assert.isTrue(!value.contains("/"), () -> "Invalid path segment value: " + value);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/PathContainer.java, +, +, +, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/CaptureTheRestPathElement.java, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +import org.springframework.web.util.pattern.PathPattern.MatchingContext;, +					if (!parameters.isEmpty()) {, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/CaptureVariablePathElement.java, +import org.springframework.lang.Nullable;, +			else if (this.next != null) {, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/InternalPathPatternParser.java, +import org.springframework.util.Assert;, +		Assert.notNull(pathPattern, "Path pattern must not be null");, +, +		this.pathPatternLength = this.pathPatternData.length;, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WiretapConnector.java, +					Assert.state(requestId != null, () -> "No \"" + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "\" header");, +		Assert.state(result != null, () -> "No match for " + WebTestClient.WEBTESTCLIENT_REQUEST_ID + "=" + requestId);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultPathContainer.java, +		Assert.isTrue(fromIndex < toIndex, () -> "fromIndex: " + fromIndex + " should be < toIndex " + toIndex);, +		Assert.isTrue(fromIndex >= 0 && fromIndex < elements.size(), () -> "Invalid fromIndex: " + fromIndex);, +		Assert.isTrue(toIndex >= 0 && toIndex <= elements.size(), () -> "Invalid toIndex: " + toIndex);, +			Assert.isTrue(!value.contains("/"), () -> "Invalid path segment value: " + value);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/PathContainer.java, +, +, +, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/CaptureTheRestPathElement.java, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;]