[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +, +, +, +				Class<? extends Annotation> nestedAnnotationType =, +						(Class<? extends Annotation>) returnType.getComponentType();, +				"metaAnnotationType must not be [java.lang.annotation.Annotation]");, +		return (descriptor != null ? descriptor.getAttributeOverrideName(metaAnnotationType) : null);, +							String elementAsString = (element != null ? element.toString() : "unknown element");, +							String msg = String.format("In AnnotationAttributes for annotation [%s] declared on [%s], " +, +									"attribute [%s] and its alias [%s] are declared with values of [%s] and [%s], " +, +									"but only one declaration is permitted.", annotationType.getName(),, +	 * @param ex the throwable to inspect, +, +			this.aliasedAnnotationType = (Annotation.class.equals(aliasFor.annotation()) ?, +					this.sourceAnnotationType : aliasFor.annotation());, +				String msg = String.format("@AliasFor declaration on attribute [%s] in annotation [%s] declares " +, +						"an alias for attribute [%s] in meta-annotation [%s] which is not meta-present.",, +				String msg = String.format("Misconfigured aliases: attribute [%s] in annotation [%s] " +, +						"and attribute [%s] in annotation [%s] must declare the same return type.",, +			if (defaultValue == null || aliasedDefaultValue == null) {, +				String msg = String.format("Misconfigured aliases: attribute [%s] in annotation [%s] " +, +						"and attribute [%s] in annotation [%s] must declare default values.",, +				String msg = String.format("Misconfigured aliases: attribute [%s] in annotation [%s] " +, +						"and attribute [%s] in annotation [%s] must declare the same default value.",, +					"metaAnnotationType must not be [java.lang.annotation.Annotation]");, +					"In @AliasFor declared on attribute [%s] in annotation [%s], attribute 'attribute' and its " +, +					"alias 'value' are present with values of [%s] and [%s], but only one is permitted.",]