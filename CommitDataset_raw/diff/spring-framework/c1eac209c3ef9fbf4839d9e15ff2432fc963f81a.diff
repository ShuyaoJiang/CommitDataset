[+++ b/spring-context/src/main/java/org/springframework/context/support/LiveBeansView.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.beans.factory.config.ConfigurableBeanFactory;, + * Spring Tool Suite 3.1 and higher., +	 * Find all applicable ApplicationContexts for the current application., +	 * <p>Called if no specific ApplicationContext has been set for this LiveBeansView., +	 * @return the set of ApplicationContexts, +	 */, +	protected Set<ConfigurableApplicationContext> findApplicationContexts() {, +		synchronized (applicationContexts) {, +			return new LinkedHashSet<ConfigurableApplicationContext>(applicationContexts);, +		}, +	}, +, +	/**, +			boolean elementAppended = false;, +			for (String beanName : beanNames) {, +				if (isBeanEligible(beanName, bd, bf)) {, +					if (elementAppended) {, +						result.append(",\n");, +					}, +					elementAppended = true;, +	 * Determine whether the specified bean  is eligible for inclusion in the, +	 * LiveBeansView JSON snapshot., +	 * @param beanName the name of the bean, +	 * @param bd the corresponding bean definition, +	 * @param bf the containing bean factory, +	 * @return {@code true} if the bean is to be included; {@code false} otherwise, +	protected boolean isBeanEligible(String beanName, BeanDefinition bd, ConfigurableBeanFactory bf) {, +		return (bd.getRole() != BeanDefinition.ROLE_INFRASTRUCTURE &&, +				(!bd.isLazyInit() || bf.containsSingleton(beanName)));]