[+++ b/src/asciidoc/index.adoc, +, +[[mvc-ann-requestmapping-uri-vars-and-file-extensions]], +===== URI Variables and Suffix Patterns Matching, +By default Spring MVC automatically performs `".*"` suffix pattern matching so, +that a controller mapped to `/person` is also implicitly mapped to `/person.*`., +This allows indicating content types via file extensions, e.g. `/person.pdf`,, +`/person.xml`, etc. A common pitfall however is when the last path segment of the, +mapping is a URI variable, e.g. `/person/{id}`. While a request for `/person/1.json`, +would correctly result in path variable id=1 and extension ".json", when the id, +naturally contains a dot, e.g. `/person/joe@email.com` the result does not match, +expectations. Clearly here ".com" is not a file extension., +, +The proper way to address this is to configure Spring MVC to only do suffix pattern, +matching against file extensions registered for content negotiation purposes., +For more on this, first see <<mvc-config-content-negotiation>> and then, +<<mvc-config-path-matching>> showing how to enable suffix pattern matching, +along with how to use registered suffix patterns only., +, +, +, +			configurer, +			    .setUseSuffixPatternMatch(true), +			    .setUseRegisteredSuffixPatternMatch(true), +            registered-suffixes-only="true"]