[+++ b/spring-web/spring-web.gradle, +++ b/spring-web/spring-web.gradle, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/AbstractHttpHandlerIntegrationTests.java, +++ b/spring-web/spring-web.gradle, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/AbstractHttpHandlerIntegrationTests.java, +++ /dev/null, +++ b/spring-web/spring-web.gradle, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/AbstractHttpHandlerIntegrationTests.java, +++ /dev/null, +++ /dev/null, +++ b/spring-web/spring-web.gradle, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/AbstractHttpHandlerIntegrationTests.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-web/spring-web.gradle, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/AbstractHttpHandlerIntegrationTests.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-web/spring-web.gradle, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/AbstractHttpHandlerIntegrationTests.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-webflux/spring-webflux.gradle, +++ b/spring-web/spring-web.gradle, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/AbstractHttpHandlerIntegrationTests.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-webflux/spring-webflux.gradle, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/FlushingIntegrationTests.java, +import static org.junit.Assert.assertTrue;, +			String os = System.getProperty("os.name").toLowerCase();, +			if (os.contains("windows") && err.getMessage().startsWith("VerifySubscriber timed out")) {, +				// TODO: Reactor usually times out on Windows ..., +++ b/spring-web/spring-web.gradle, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/AbstractHttpHandlerIntegrationTests.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-webflux/spring-webflux.gradle, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/FlushingIntegrationTests.java, +import static org.junit.Assert.assertTrue;, +			String os = System.getProperty("os.name").toLowerCase();, +			if (os.contains("windows") && err.getMessage().startsWith("VerifySubscriber timed out")) {, +				// TODO: Reactor usually times out on Windows ..., +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/socket/AbstractWebSocketIntegrationTests.java, +import java.util.LinkedHashMap;, +import java.util.Map;, +import static org.junit.Assume.assumeFalse;, +		WebSocketClient[] clients = new WebSocketClient[] {, +				new TomcatWebSocketClient(new WsWebSocketContainer()),, +				new JettyWebSocketClient(),, +				new ReactorNettyWebSocketClient(),, +				new UndertowWebSocketClient(Xnio.getInstance().createWorker(OptionMap.EMPTY)), +		};, +		Map<HttpServer, Class<?>> servers = new LinkedHashMap<>();, +		servers.put(new TomcatHttpServer(TMP_DIR.getAbsolutePath(), WsContextListener.class), TomcatConfig.class);, +		servers.put(new JettyHttpServer(), JettyConfig.class);, +		servers.put(new ReactorHttpServer(), ReactorNettyConfig.class);, +		servers.put(new UndertowHttpServer(), UndertowConfig.class);, +		Flux<WebSocketClient> f1 = Flux.fromArray(clients).concatMap(c -> Flux.just(c).repeat(servers.size()));, +		Flux<HttpServer> f2 = Flux.fromIterable(servers.keySet()).repeat(clients.length);, +		Flux<Class<?>> f3 = Flux.fromIterable(servers.values()).repeat(clients.length);, +		return Flux.zip(f1, f2, f3).map(Tuple3::toArray).collectList().block(), +				.toArray(new Object[clients.length * servers.size()][2]);, +		assumeFalse(this.client instanceof UndertowWebSocketClient);, +++ b/spring-web/spring-web.gradle, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/AbstractHttpHandlerIntegrationTests.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-webflux/spring-webflux.gradle, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/FlushingIntegrationTests.java, +import static org.junit.Assert.assertTrue;, +			String os = System.getProperty("os.name").toLowerCase();, +			if (os.contains("windows") && err.getMessage().startsWith("VerifySubscriber timed out")) {, +				// TODO: Reactor usually times out on Windows ..., +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/socket/AbstractWebSocketIntegrationTests.java, +import java.util.LinkedHashMap;, +import java.util.Map;, +import static org.junit.Assume.assumeFalse;, +		WebSocketClient[] clients = new WebSocketClient[] {, +				new TomcatWebSocketClient(new WsWebSocketContainer()),, +				new JettyWebSocketClient(),, +				new ReactorNettyWebSocketClient(),, +				new UndertowWebSocketClient(Xnio.getInstance().createWorker(OptionMap.EMPTY)), +		};, +		Map<HttpServer, Class<?>> servers = new LinkedHashMap<>();, +		servers.put(new TomcatHttpServer(TMP_DIR.getAbsolutePath(), WsContextListener.class), TomcatConfig.class);, +		servers.put(new JettyHttpServer(), JettyConfig.class);, +		servers.put(new ReactorHttpServer(), ReactorNettyConfig.class);, +		servers.put(new UndertowHttpServer(), UndertowConfig.class);]