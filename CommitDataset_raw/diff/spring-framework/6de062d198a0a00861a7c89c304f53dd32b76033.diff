[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/RouterFunction.java, +	 * @param <S> the handler function type, +	default <S> RouterFunction<?> andRoute(RequestPredicate predicate,, +			HandlerFunction<S> handlerFunction) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/RouterFunction.java, +	 * @param <S> the handler function type, +	default <S> RouterFunction<?> andRoute(RequestPredicate predicate,, +			HandlerFunction<S> handlerFunction) {, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/function/RouterFunctionTests.java, +	public void andRoute() throws Exception {, +		RouterFunction<Integer> routerFunction1 = request -> Optional.empty();, +		RequestPredicate requestPredicate = request -> true;, +, +		RouterFunction<?> result = routerFunction1.andRoute(requestPredicate, this::handlerMethod);, +		assertNotNull(result);, +, +		MockServerRequest request = MockServerRequest.builder().build();, +		Optional<? extends HandlerFunction<?>> resultHandlerFunction = result.route(request);, +		assertTrue(resultHandlerFunction.isPresent());, +	}, +, +	private ServerResponse<String> handlerMethod(ServerRequest request) {, +		return ServerResponse.ok().body(fromObject("42"));, +	}, +, +	@Test]