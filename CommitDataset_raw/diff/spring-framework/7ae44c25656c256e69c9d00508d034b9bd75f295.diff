[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/JsonPathResultMatchers.java, + * Copyright 2002-2016 the original author or authors., +import java.io.UnsupportedEncodingException;, +, +import org.hamcrest.MatcherAssert;, +import org.hamcrest.core.StringStartsWith;, +import org.springframework.util.StringUtils;, + * @author Brian Clozel, +	private String prefix;, +	/**, +	 * Configures the current {@code JsonPathResultMatchers} instance, +	 * to verify that the JSON payload is prepended with the given prefix., +	 * <p>Use this method if the JSON payloads are prefixed to avoid, +	 * Cross Site Script Inclusion (XSSI) attacks., +	 * @param prefix the string prefix prepended to the actual JSON payload, +	 * @since 4.3.0, +	 */, +	public JsonPathResultMatchers prefix(String prefix) {, +		this.prefix = prefix;, +		return this;, +	}, +, +				String content = getContent(result);, +				jsonPathHelper.assertValue(getContent(result), expectedValue);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +	private String getContent(MvcResult result) throws UnsupportedEncodingException {, +		String content = result.getResponse().getContentAsString();, +		if (StringUtils.hasLength(this.prefix)) {, +			try {, +				String reason = String.format("Expected a JSON payload prefixed with \"%s\" but found: %s", this.prefix,, +						StringUtils.quote(content.substring(0, this.prefix.length())));, +				MatcherAssert.assertThat(reason, content, StringStartsWith.startsWith(this.prefix));, +				return content.substring(this.prefix.length());, +			}, +			catch (StringIndexOutOfBoundsException oobe) {, +				String message = "JSON prefix \"" + this.prefix + "\" not found, exception: ";, +				throw new AssertionError(message + oobe.getMessage());, +			}, +		}, +		else {, +			return content;, +		}, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/JsonPathResultMatchers.java, + * Copyright 2002-2016 the original author or authors., +import java.io.UnsupportedEncodingException;, +, +import org.hamcrest.MatcherAssert;, +import org.hamcrest.core.StringStartsWith;, +import org.springframework.util.StringUtils;, + * @author Brian Clozel, +	private String prefix;, +	/**, +	 * Configures the current {@code JsonPathResultMatchers} instance, +	 * to verify that the JSON payload is prepended with the given prefix., +	 * <p>Use this method if the JSON payloads are prefixed to avoid, +	 * Cross Site Script Inclusion (XSSI) attacks., +	 * @param prefix the string prefix prepended to the actual JSON payload, +	 * @since 4.3.0, +	 */, +	public JsonPathResultMatchers prefix(String prefix) {, +		this.prefix = prefix;, +		return this;, +	}, +, +				String content = getContent(result);, +				jsonPathHelper.assertValue(getContent(result), expectedValue);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +				String content = getContent(result);, +	private String getContent(MvcResult result) throws UnsupportedEncodingException {, +		String content = result.getResponse().getContentAsString();, +		if (StringUtils.hasLength(this.prefix)) {, +			try {, +				String reason = String.format("Expected a JSON payload prefixed with \"%s\" but found: %s", this.prefix,, +						StringUtils.quote(content.substring(0, this.prefix.length())));, +				MatcherAssert.assertThat(reason, content, StringStartsWith.startsWith(this.prefix));, +				return content.substring(this.prefix.length());, +			}, +			catch (StringIndexOutOfBoundsException oobe) {, +				String message = "JSON prefix \"" + this.prefix + "\" not found, exception: ";, +				throw new AssertionError(message + oobe.getMessage());, +			}, +		}, +		else {]