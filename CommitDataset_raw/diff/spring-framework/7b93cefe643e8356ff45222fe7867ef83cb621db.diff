[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, +		String resourceCache = element.getAttribute("resource-cache");, +		if ("true".equals(resourceCache)) {, +			String cacheManagerName = element.getAttribute("cache-manager");, +			String cacheName = element.getAttribute("cache-name");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, +		String resourceCache = element.getAttribute("resource-cache");, +		if ("true".equals(resourceCache)) {, +			String cacheManagerName = element.getAttribute("cache-manager");, +			String cacheName = element.getAttribute("cache-name");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistration.java, +	 * 	    development, especially when applying a version strategy)., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, +		String resourceCache = element.getAttribute("resource-cache");, +		if ("true".equals(resourceCache)) {, +			String cacheManagerName = element.getAttribute("cache-manager");, +			String cacheName = element.getAttribute("cache-name");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistration.java, +	 * 	    development, especially when applying a version strategy)., +++ b/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc-4.1.xsd, +	Unless set to "false", the auto-registration adds default Resolvers (a PathResourceResolver) and Transformers, +	The resource-cache attribute sets whether to cache the result of resource resolution/transformation;, +	setting this to "true" is recommended for production (and "false" for development)., +	A custom Cache can be configured if a CacheManager is provided as a bean reference, +	in the "cache-manager" attribute, and the cache name provided in the "cache-name" attribute., +		<xsd:attribute name="resource-cache" type="xsd:boolean" use="required"/>, +		<xsd:attribute name="cache-manager" type="xsd:string" use="optional"/>, +		<xsd:attribute name="cache-name" type="xsd:string" use="optional"/>, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, +		String resourceCache = element.getAttribute("resource-cache");, +		if ("true".equals(resourceCache)) {, +			String cacheManagerName = element.getAttribute("cache-manager");, +			String cacheName = element.getAttribute("cache-name");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistration.java, +	 * 	    development, especially when applying a version strategy)., +++ b/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc-4.1.xsd, +	Unless set to "false", the auto-registration adds default Resolvers (a PathResourceResolver) and Transformers, +	The resource-cache attribute sets whether to cache the result of resource resolution/transformation;, +	setting this to "true" is recommended for production (and "false" for development)., +	A custom Cache can be configured if a CacheManager is provided as a bean reference, +	in the "cache-manager" attribute, and the cache name provided in the "cache-name" attribute., +		<xsd:attribute name="resource-cache" type="xsd:boolean" use="required"/>, +		<xsd:attribute name="cache-manager" type="xsd:string" use="optional"/>, +		<xsd:attribute name="cache-name" type="xsd:string" use="optional"/>, +++ b/spring-webmvc/src/test/resources/org/springframework/web/servlet/config/mvc-config-resources-chain-no-auto.xml, +		<mvc:resource-chain resource-cache="false" auto-registration="false">, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, +		String resourceCache = element.getAttribute("resource-cache");, +		if ("true".equals(resourceCache)) {, +			String cacheManagerName = element.getAttribute("cache-manager");, +			String cacheName = element.getAttribute("cache-name");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistration.java, +	 * 	    development, especially when applying a version strategy)., +++ b/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc-4.1.xsd, +	Unless set to "false", the auto-registration adds default Resolvers (a PathResourceResolver) and Transformers, +	The resource-cache attribute sets whether to cache the result of resource resolution/transformation;, +	setting this to "true" is recommended for production (and "false" for development)., +	A custom Cache can be configured if a CacheManager is provided as a bean reference, +	in the "cache-manager" attribute, and the cache name provided in the "cache-name" attribute., +		<xsd:attribute name="resource-cache" type="xsd:boolean" use="required"/>, +		<xsd:attribute name="cache-manager" type="xsd:string" use="optional"/>, +		<xsd:attribute name="cache-name" type="xsd:string" use="optional"/>, +++ b/spring-webmvc/src/test/resources/org/springframework/web/servlet/config/mvc-config-resources-chain-no-auto.xml, +		<mvc:resource-chain resource-cache="false" auto-registration="false">, +++ b/spring-webmvc/src/test/resources/org/springframework/web/servlet/config/mvc-config-resources-chain.xml, +		<mvc:resource-chain resource-cache="true" cache-manager="resourceCache" cache-name="test-resource-cache">]