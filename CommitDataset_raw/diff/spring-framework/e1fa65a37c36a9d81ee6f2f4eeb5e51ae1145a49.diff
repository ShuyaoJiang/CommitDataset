[+++ b/spring-orm/src/main/java/org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.java, + * Copyright 2002-2018 the original author or authors., +	 * <p><b>NOTE:</b> This setting will override your JPA provider's default algorithm., +	 * Custom vendor properties may still fine-tune the database dialect. However,, +	 * there may nevertheless be conflicts: For example, specify either this setting, +	 * or Hibernate's "hibernate.dialect_resolvers" property, not both., +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.java, + * Copyright 2002-2018 the original author or authors., +	 * <p><b>NOTE:</b> This setting will override your JPA provider's default algorithm., +	 * Custom vendor properties may still fine-tune the database dialect. However,, +	 * there may nevertheless be conflicts: For example, specify either this setting, +	 * or Hibernate's "hibernate.dialect_resolvers" property, not both., +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/vendor/HibernateJpaVendorAdapter.java, + * Copyright 2002-2018 the original author or authors., + * <p><b>A note about {@code HibernateJpaVendorAdapter} vs native Hibernate settings:</b>, + * Some settings on this adapter may conflict with native Hibernate configuration rules, + * or custom Hibernate properties. For example, specify either {@link #setDatabase} or, + * Hibernate's "hibernate.dialect_resolvers" property, not both. Also, be careful about, + * Hibernate's connection release mode: This adapter prefers {@code ON_CLOSE} behavior,, + * aligned with {@link HibernateJpaDialect#setPrepareConnection}, at least for non-JTA, + * scenarios; you may override this through corresponding native Hibernate properties., + *]