[+++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +	 * primary/default constructor was found, a {@link NoClassDefFoundError}, +	 * or other {@link LinkageError} in case of an unresolvable class definition, +	 * (e.g. due to a missing dependency at runtime), or an exception thrown, +	 * from the constructor invocation itself., +		catch (LinkageError err) {, +			throw new BeanInstantiationException(clazz, "Unresolvable class definition", err);, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +	 * primary/default constructor was found, a {@link NoClassDefFoundError}, +	 * or other {@link LinkageError} in case of an unresolvable class definition, +	 * (e.g. due to a missing dependency at runtime), or an exception thrown, +	 * from the constructor invocation itself., +		catch (LinkageError err) {, +			throw new BeanInstantiationException(clazz, "Unresolvable class definition", err);, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +		catch (LinkageError err) {, +			throw new CannotLoadBeanClassException(mbd.getResourceDescription(), beanName, mbd.getBeanClassName(), err);, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +	 * primary/default constructor was found, a {@link NoClassDefFoundError}, +	 * or other {@link LinkageError} in case of an unresolvable class definition, +	 * (e.g. due to a missing dependency at runtime), or an exception thrown, +	 * from the constructor invocation itself., +		catch (LinkageError err) {, +			throw new BeanInstantiationException(clazz, "Unresolvable class definition", err);, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +		catch (LinkageError err) {, +			throw new CannotLoadBeanClassException(mbd.getResourceDescription(), beanName, mbd.getBeanClassName(), err);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.java, + * Copyright 2002-2018 the original author or authors., +				throw new FatalBeanException("Could not find NamespaceHandler class [" + className +, +						"] for namespace [" + namespaceUri + "]", ex);, +				throw new FatalBeanException("Unresolvable class definition for NamespaceHandler class [" +, +						className + "] for namespace [" + namespaceUri + "]", err);, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +	 * primary/default constructor was found, a {@link NoClassDefFoundError}, +	 * or other {@link LinkageError} in case of an unresolvable class definition, +	 * (e.g. due to a missing dependency at runtime), or an exception thrown, +	 * from the constructor invocation itself., +		catch (LinkageError err) {, +			throw new BeanInstantiationException(clazz, "Unresolvable class definition", err);, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +		catch (LinkageError err) {, +			throw new CannotLoadBeanClassException(mbd.getResourceDescription(), beanName, mbd.getBeanClassName(), err);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.java, + * Copyright 2002-2018 the original author or authors., +				throw new FatalBeanException("Could not find NamespaceHandler class [" + className +, +						"] for namespace [" + namespaceUri + "]", ex);, +				throw new FatalBeanException("Unresolvable class definition for NamespaceHandler class [" +, +						className + "] for namespace [" + namespaceUri + "]", err);, +++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java, +			throw new IllegalArgumentException("Could not find class [" + className + "]", ex);, +		catch (LinkageError err) {, +			throw new IllegalArgumentException("Unresolvable class definition for class [" + className + "]", err);, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +	 * primary/default constructor was found, a {@link NoClassDefFoundError}, +	 * or other {@link LinkageError} in case of an unresolvable class definition, +	 * (e.g. due to a missing dependency at runtime), or an exception thrown, +	 * from the constructor invocation itself., +		catch (LinkageError err) {, +			throw new BeanInstantiationException(clazz, "Unresolvable class definition", err);, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +		catch (LinkageError err) {, +			throw new CannotLoadBeanClassException(mbd.getResourceDescription(), beanName, mbd.getBeanClassName(), err);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.java, + * Copyright 2002-2018 the original author or authors., +				throw new FatalBeanException("Could not find NamespaceHandler class [" + className +, +						"] for namespace [" + namespaceUri + "]", ex);, +				throw new FatalBeanException("Unresolvable class definition for NamespaceHandler class [" +, +						className + "] for namespace [" + namespaceUri + "]", err);, +++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java, +			throw new IllegalArgumentException("Could not find class [" + className + "]", ex);, +		catch (LinkageError err) {, +			throw new IllegalArgumentException("Unresolvable class definition for class [" + className + "]", err);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurationSupport.java, + * Copyright 2002-2018 the original author or authors., +				catch (ClassNotFoundException | LinkageError ex) {, +					throw new BeanInitializationException("Failed to resolve default validator class", ex);, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +	 * primary/default constructor was found, a {@link NoClassDefFoundError}, +	 * or other {@link LinkageError} in case of an unresolvable class definition, +	 * (e.g. due to a missing dependency at runtime), or an exception thrown, +	 * from the constructor invocation itself., +		catch (LinkageError err) {, +			throw new BeanInstantiationException(clazz, "Unresolvable class definition", err);, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +		catch (LinkageError err) {, +			throw new CannotLoadBeanClassException(mbd.getResourceDescription(), beanName, mbd.getBeanClassName(), err);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.java, + * Copyright 2002-2018 the original author or authors., +				throw new FatalBeanException("Could not find NamespaceHandler class [" + className +, +						"] for namespace [" + namespaceUri + "]", ex);, +				throw new FatalBeanException("Unresolvable class definition for NamespaceHandler class [" +, +						className + "] for namespace [" + namespaceUri + "]", err);, +++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java]