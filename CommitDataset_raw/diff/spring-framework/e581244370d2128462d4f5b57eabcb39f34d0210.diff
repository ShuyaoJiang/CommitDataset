[+++ b/spring-orm/src/test/java/org/springframework/test/AbstractTransactionalDataSourceSpringContextTests.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.core.io.Resource;, +import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;, +	 * Execute the given SQL script., +	 * <p>Use with caution outside of a transaction!, +	 * <p>The script will normally be loaded by classpath., +	 * @param sqlResourcePath the Spring resource path for the SQL script, +	 * @param continueOnError whether or not to continue without throwing an, +	 * exception in the event of an error, +	 * @see ResourceDatabasePopulator, +	 * @see #setSqlScriptEncoding, +		Resource resource = this.applicationContext.getResource(sqlResourcePath);, +		new ResourceDatabasePopulator(continueOnError, false, this.sqlScriptEncoding, resource).execute(jdbcTemplate.getDataSource());, +++ b/spring-orm/src/test/java/org/springframework/test/AbstractTransactionalDataSourceSpringContextTests.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.core.io.Resource;, +import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;, +	 * Execute the given SQL script., +	 * <p>Use with caution outside of a transaction!, +	 * <p>The script will normally be loaded by classpath., +	 * @param sqlResourcePath the Spring resource path for the SQL script, +	 * @param continueOnError whether or not to continue without throwing an, +	 * exception in the event of an error, +	 * @see ResourceDatabasePopulator, +	 * @see #setSqlScriptEncoding, +		Resource resource = this.applicationContext.getResource(sqlResourcePath);, +		new ResourceDatabasePopulator(continueOnError, false, this.sqlScriptEncoding, resource).execute(jdbcTemplate.getDataSource());, +++ /dev/null]