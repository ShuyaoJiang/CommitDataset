[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/PreparedStatementCreatorFactory.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/PreparedStatementCreatorFactory.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java, +		javaTypeToSqlTypeMap.put(boolean.class, Types.BOOLEAN);, +		javaTypeToSqlTypeMap.put(Boolean.class, Types.BOOLEAN);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/PreparedStatementCreatorFactory.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java, +		javaTypeToSqlTypeMap.put(boolean.class, Types.BOOLEAN);, +		javaTypeToSqlTypeMap.put(Boolean.class, Types.BOOLEAN);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.java, + * Copyright 2002-2014 the original author or authors., +import java.sql.SQLException;, +		catch (SQLException ex) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/PreparedStatementCreatorFactory.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java, +		javaTypeToSqlTypeMap.put(boolean.class, Types.BOOLEAN);, +		javaTypeToSqlTypeMap.put(Boolean.class, Types.BOOLEAN);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.java, + * Copyright 2002-2014 the original author or authors., +import java.sql.SQLException;, +		catch (SQLException ex) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java, + * Copyright 2002-2014 the original author or authors., +import java.sql.SQLFeatureNotSupportedException;, +import org.springframework.util.ClassUtils;, +	// Check for JDBC 4.1 getObject(int, Class) method - available on JDK 7 and higher, +	private static final boolean getObjectWithTypeAvailable =, +			ClassUtils.hasMethod(ResultSet.class, "getObject", int.class, Class.class);, +, +		Object value;, +			return rs.getString(index);, +			return rs.getBigDecimal(index);, +		}, +		else if (java.sql.Date.class.equals(requiredType)) {, +			return rs.getDate(index);, +		}, +		else if (java.sql.Time.class.equals(requiredType)) {, +			return rs.getTime(index);, +		}, +		else if (java.sql.Timestamp.class.equals(requiredType) || java.util.Date.class.equals(requiredType)) {, +			return rs.getTimestamp(index);, +		}, +		else if (byte[].class.equals(requiredType)) {, +			return rs.getBytes(index);, +			return rs.getBlob(index);, +			return rs.getClob(index);, +			if (getObjectWithTypeAvailable) {, +				try {, +					return rs.getObject(index, requiredType);, +				}, +				catch (SQLFeatureNotSupportedException ex) {, +					logger.debug("JDBC driver does not support JDBC 4.1 'getObject(int, Class)' method", ex);, +				}, +				catch (AbstractMethodError err) {, +					logger.debug("JDBC driver does not implement JDBC 4.1 'getObject(int, Class)' method", err);, +				}, +			}, +			// Fall back to getObject without type specification..., +			return getResultSetValue(rs, index);, +		// Perform was-null check if necessary (for results that the JDBC driver returns as primitives)., +		return (rs.wasNull() ? null : value);, +		else if ("oracle.sql.TIMESTAMP".equals(className) || "oracle.sql.TIMESTAMPTZ".equals(className)) {, +			if ("java.sql.Timestamp".equals(metaDataClassName) || "oracle.sql.TIMESTAMP".equals(metaDataClassName)) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/PreparedStatementCreatorFactory.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java, +		javaTypeToSqlTypeMap.put(boolean.class, Types.BOOLEAN);, +		javaTypeToSqlTypeMap.put(Boolean.class, Types.BOOLEAN);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.java, + * Copyright 2002-2014 the original author or authors., +import java.sql.SQLException;, +		catch (SQLException ex) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java, + * Copyright 2002-2014 the original author or authors., +import java.sql.SQLFeatureNotSupportedException;, +import org.springframework.util.ClassUtils;, +	// Check for JDBC 4.1 getObject(int, Class) method - available on JDK 7 and higher, +	private static final boolean getObjectWithTypeAvailable =, +			ClassUtils.hasMethod(ResultSet.class, "getObject", int.class, Class.class);, +, +		Object value;, +			return rs.getString(index);, +			return rs.getBigDecimal(index);, +		}, +		else if (java.sql.Date.class.equals(requiredType)) {, +			return rs.getDate(index);, +		}, +		else if (java.sql.Time.class.equals(requiredType)) {, +			return rs.getTime(index);, +		}, +		else if (java.sql.Timestamp.class.equals(requiredType) || java.util.Date.class.equals(requiredType)) {, +			return rs.getTimestamp(index);, +		}, +		else if (byte[].class.equals(requiredType)) {, +			return rs.getBytes(index);, +			return rs.getBlob(index);]