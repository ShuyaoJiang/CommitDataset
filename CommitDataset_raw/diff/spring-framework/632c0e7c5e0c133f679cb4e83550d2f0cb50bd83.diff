[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +		messageConverters.add(new RootBeanDefinition(XmlAwareFormHttpMessageConverter.class));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +		messageConverters.add(new RootBeanDefinition(XmlAwareFormHttpMessageConverter.class));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +					new SourceHttpMessageConverter(), new XmlAwareFormHttpMessageConverter()};, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +		messageConverters.add(new RootBeanDefinition(XmlAwareFormHttpMessageConverter.class));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +					new SourceHttpMessageConverter(), new XmlAwareFormHttpMessageConverter()};, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +					new SourceHttpMessageConverter(), new XmlAwareFormHttpMessageConverter()};, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +		messageConverters.add(new RootBeanDefinition(XmlAwareFormHttpMessageConverter.class));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +					new SourceHttpMessageConverter(), new XmlAwareFormHttpMessageConverter()};, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +					new SourceHttpMessageConverter(), new XmlAwareFormHttpMessageConverter()};, +++ b/org.springframework.web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java, +	 * Add a message body converter. Such a converters is used to convert objects to MIME parts., +	 */, +	public final void addPartConverter(HttpMessageConverter<?> partConverter) {, +		Assert.notNull(partConverter, "'partConverter' must not be NULL");, +		this.partConverters.add(partConverter);, +	}, +, +	/**, +	public final void setPartConverters(List<HttpMessageConverter<?>> partConverters) {, +		Assert.notEmpty(partConverters, "'partConverters' must not be empty");, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +		messageConverters.add(new RootBeanDefinition(XmlAwareFormHttpMessageConverter.class));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +					new SourceHttpMessageConverter(), new XmlAwareFormHttpMessageConverter()};, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +					new SourceHttpMessageConverter(), new XmlAwareFormHttpMessageConverter()};, +++ b/org.springframework.web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java, +	 * Add a message body converter. Such a converters is used to convert objects to MIME parts., +	 */, +	public final void addPartConverter(HttpMessageConverter<?> partConverter) {, +		Assert.notNull(partConverter, "'partConverter' must not be NULL");, +		this.partConverters.add(partConverter);, +	}, +, +	/**, +	public final void setPartConverters(List<HttpMessageConverter<?>> partConverters) {, +		Assert.notEmpty(partConverters, "'partConverters' must not be empty");, +++ b/org.springframework.web/src/main/java/org/springframework/http/converter/xml/XmlAwareFormHttpMessageConverter.java, +/*, + * Copyright 2002-2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.http.converter.xml;, +, +import org.springframework.http.converter.FormHttpMessageConverter;, +, +/**, + * Extension of {@link org.springframework.http.converter.FormHttpMessageConverter},, + * adding support for XML-based parts through a {@link SourceHttpMessageConverter}., + *, + * @author Juergen Hoeller, + * @since 3.0.3, + */, +public class XmlAwareFormHttpMessageConverter extends FormHttpMessageConverter {, +, +	public XmlAwareFormHttpMessageConverter() {, +		super();, +		addPartConverter(new SourceHttpMessageConverter());, +	}, +, +}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +		messageConverters.add(new RootBeanDefinition(XmlAwareFormHttpMessageConverter.class));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter;, +					new SourceHttpMessageConverter(), new XmlAwareFormHttpMessageConverter()};]