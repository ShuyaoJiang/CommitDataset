[+++ b/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java, + * Copyright 2002-2013 the original author or authors., + * is available, then such synchronizations will be registered via the (non-EE) JTA, + * TransactionManager handle., +	private transient TransactionSynchronizationRegistry transactionSynchronizationRegistry;, +	protected TransactionSynchronizationRegistry lookupTransactionSynchronizationRegistry(String registryName) throws TransactionSystemException {, +			return getJndiTemplate().lookup(registryName, TransactionSynchronizationRegistry.class);, +	protected TransactionSynchronizationRegistry retrieveTransactionSynchronizationRegistry() throws TransactionSystemException {, +	protected TransactionSynchronizationRegistry findTransactionSynchronizationRegistry(UserTransaction ut, TransactionManager tm), +				TransactionSynchronizationRegistry tsr = getJndiTemplate().lookup(jndiName, TransactionSynchronizationRegistry.class);, +		if (ut instanceof TransactionSynchronizationRegistry) {, +			return (TransactionSynchronizationRegistry) ut;, +		if (tm instanceof TransactionSynchronizationRegistry) {, +			return (TransactionSynchronizationRegistry) tm;, +		// OK, so no JTA 1.1 TransactionSynchronizationRegistry is available..., +			this.transactionSynchronizationRegistry.registerInterposedSynchronization(]