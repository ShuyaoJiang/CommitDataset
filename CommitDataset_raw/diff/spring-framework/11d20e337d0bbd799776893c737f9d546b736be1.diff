[+++ b/spring-jms/src/main/java/org/springframework/jms/connection/JmsResourceHolder.java, + * Copyright 2002-2013 the original author or authors., +import java.lang.reflect.Method;, +import org.springframework.transaction.support.TransactionSynchronizationManager;, +import org.springframework.util.ReflectionUtils;, +			catch (javax.jms.IllegalStateException ex) {, +				if (this.connectionFactory != null) {, +					try {, +						Method getDataSourceMethod = this.connectionFactory.getClass().getMethod("getDataSource");, +						Object ds = ReflectionUtils.invokeMethod(getDataSourceMethod, this.connectionFactory);, +						if (ds != null && TransactionSynchronizationManager.hasResource(ds)) {, +							// IllegalStateException from sharing the underlying JDBC Connection, +							// which typically gets committed first, e.g. with Oracle AQ --> ignore, +							return;, +						}, +					}, +					catch (Throwable ex2) {, +						if (logger.isDebugEnabled()) {, +							logger.debug("No working getDataSource method found on ConnectionFactory: " + ex2);, +						}, +						// No working getDataSource method - cannot perform DataSource transaction check, +					}, +				}, +				throw ex;, +			}]