[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java, + * Copyright 2002-2015 the original author or authors., +		// WebSocketHandlerDecorator could close the session, +		if (!session.isOpen()) {, +			return;, +		}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java, + * Copyright 2002-2015 the original author or authors., +		// WebSocketHandlerDecorator could close the session, +		if (!session.isOpen()) {, +			return;, +		}, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/config/annotation/WebSocketMessageBrokerConfigurationSupportTests.java, + * Copyright 2002-2015 the original author or authors., +import static org.junit.Assert.*;, +, +		TestWebSocketSession session = new TestWebSocketSession("s1");, +		session.setOpen(true);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java, + * Copyright 2002-2015 the original author or authors., +		// WebSocketHandlerDecorator could close the session, +		if (!session.isOpen()) {, +			return;, +		}, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/config/annotation/WebSocketMessageBrokerConfigurationSupportTests.java, + * Copyright 2002-2015 the original author or authors., +import static org.junit.Assert.*;, +, +		TestWebSocketSession session = new TestWebSocketSession("s1");, +		session.setOpen(true);, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandlerTests.java, + * Copyright 2002-2015 the original author or authors., +		this.session.setOpen(true);, +		session1.setOpen(true);, +		session2.setOpen(true);]