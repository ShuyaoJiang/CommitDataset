[+++ b/build.gradle, +, +	// Disabled since Kotlin compiler does not support JDK 9 yet, +	//apply plugin: "kotlin", +, +		optional("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"), +		optional("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"), +, +, +++ b/build.gradle, +, +	// Disabled since Kotlin compiler does not support JDK 9 yet, +	//apply plugin: "kotlin", +, +		optional("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"), +		optional("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"), +, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +import java.util.Optional;, +, +import kotlin.Metadata;, +import kotlin.reflect.KProperty;, +import kotlin.reflect.jvm.ReflectJvmMapping;, +import org.springframework.util.ClassUtils;, +	private static final boolean kotlinPresent =, +			ClassUtils.isPresent("kotlin.Unit", DependencyDescriptor.class.getClassLoader());, +, +, +, +, +, +		if (!this.required) {, +			return false;, +		}, +, +		if (this.field != null) {, +			return !(this.field.getType() == Optional.class ||, +					(kotlinPresent && KotlinDelegate.isNullable(this.field)));, +		}, +		else {, +			return !this.methodParameter.isOptional();, +		}, +, +	/**, +	 * Inner class to avoid a hard dependency on Kotlin at runtime., +	 */, +	private static class KotlinDelegate {, +, +		/**, +		 * Check whether the specified {@link Field} represents a nullable Kotlin type or not., +		 */, +		public static boolean isNullable(Field field) {, +			if (field.getDeclaringClass().isAnnotationPresent(Metadata.class)) {, +				KProperty<?> property = ReflectJvmMapping.getKotlinProperty(field);, +				return (property != null && property.getReturnType().isMarkedNullable());, +			}, +			return false;, +		}, +	}, +, +++ b/build.gradle, +, +	// Disabled since Kotlin compiler does not support JDK 9 yet, +	//apply plugin: "kotlin", +, +		optional("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"), +		optional("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"), +, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +import java.util.Optional;, +, +import kotlin.Metadata;, +import kotlin.reflect.KProperty;, +import kotlin.reflect.jvm.ReflectJvmMapping;, +import org.springframework.util.ClassUtils;, +	private static final boolean kotlinPresent =, +			ClassUtils.isPresent("kotlin.Unit", DependencyDescriptor.class.getClassLoader());, +, +, +, +, +, +		if (!this.required) {, +			return false;, +		}, +, +		if (this.field != null) {, +			return !(this.field.getType() == Optional.class ||, +					(kotlinPresent && KotlinDelegate.isNullable(this.field)));, +		}, +		else {, +			return !this.methodParameter.isOptional();, +		}, +, +	/**, +	 * Inner class to avoid a hard dependency on Kotlin at runtime., +	 */, +	private static class KotlinDelegate {]