[+++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, +		public void addAll(MultiValueMap<K, V> values) {, +			for (Entry<K, List<V>> entry : values.entrySet()) {, +				addAll(entry.getKey(), entry.getValue());, +			}, +		}, +, +		@Override, +++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, +		public void addAll(MultiValueMap<K, V> values) {, +			for (Entry<K, List<V>> entry : values.entrySet()) {, +				addAll(entry.getKey(), entry.getValue());, +			}, +		}, +, +		@Override, +++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, +	public void addAll(MultiValueMap<K, V> values) {, +		for (Entry<K, List<V>> entry : values.entrySet()) {, +			addAll(entry.getKey(), entry.getValue());, +		}, +	}, +, +	@Override, +++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, +		public void addAll(MultiValueMap<K, V> values) {, +			for (Entry<K, List<V>> entry : values.entrySet()) {, +				addAll(entry.getKey(), entry.getValue());, +			}, +		}, +, +		@Override, +++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, +	public void addAll(MultiValueMap<K, V> values) {, +		for (Entry<K, List<V>> entry : values.entrySet()) {, +			addAll(entry.getKey(), entry.getValue());, +		}, +	}, +, +	@Override, +++ b/spring-core/src/main/java/org/springframework/util/MultiValueMap.java, +	 * Add all the values of the given {@code MultiValueMap} to the current values., +	 * @param values the values to be added, +	 * @since 5.0, +	 */, +	void addAll(MultiValueMap<K, V> values);, +, +	/**, +++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, +		public void addAll(MultiValueMap<K, V> values) {, +			for (Entry<K, List<V>> entry : values.entrySet()) {, +				addAll(entry.getKey(), entry.getValue());, +			}, +		}, +, +		@Override, +++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, +	public void addAll(MultiValueMap<K, V> values) {, +		for (Entry<K, List<V>> entry : values.entrySet()) {, +			addAll(entry.getKey(), entry.getValue());, +		}, +	}, +, +	@Override, +++ b/spring-core/src/main/java/org/springframework/util/MultiValueMap.java, +	 * Add all the values of the given {@code MultiValueMap} to the current values., +	 * @param values the values to be added, +	 * @since 5.0, +	 */, +	void addAll(MultiValueMap<K, V> values);, +, +	/**, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompHeaders.java, +	@Override, +	public void addAll(MultiValueMap<String, String> values) {, +		for (Entry<String, List<String>> entry : values.entrySet()) {, +			addAll(entry.getKey(), entry.getValue());, +		}, +	}, +, +++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, +		public void addAll(MultiValueMap<K, V> values) {, +			for (Entry<K, List<V>> entry : values.entrySet()) {, +				addAll(entry.getKey(), entry.getValue());, +			}, +		}, +, +		@Override, +++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, +	public void addAll(MultiValueMap<K, V> values) {, +		for (Entry<K, List<V>> entry : values.entrySet()) {, +			addAll(entry.getKey(), entry.getValue());, +		}, +	}, +, +	@Override, +++ b/spring-core/src/main/java/org/springframework/util/MultiValueMap.java, +	 * Add all the values of the given {@code MultiValueMap} to the current values., +	 * @param values the values to be added, +	 * @since 5.0]