[+++ b/src/asciidoc/index.adoc, +`ApplicationContext` as part of the normal startup process of a Java EE web application., +==== Deploying a Spring ApplicationContext as a Java EE RAR file, +context and all of its required bean classes and library JARs in a Java EE RAR deployment, +in Java EE environment, being able to access the Java EE servers facilities. RAR deployment, +is  more natural alternative to scenario of deploying a headless WAR file, in effect, a WAR, +ApplicationContext in a Java EE environment., +__For a simple deployment of a Spring ApplicationContext as a Java EE RAR file:__ package, +Spring AOP defaults to using standard JDK __dynamic proxies__ for AOP proxies. This, +Java Message Service (JMS) and Java EE Connector Architecture (JCA)., +Under the hood, Spring uses either the standard facilities provided by the JDK or, +Apache `HttpComponents` to perform HTTP calls. Use the latter if you need more, +advanced and easier-to-use functionality. Refer to, +http://hc.apache.org/httpcomponents-client-ga/[hc.apache.org/httpcomponents-client-ga/], +for more information., +`HttpInvokerProxy` uses the JDK's HTTP functionality, but you can also use the Apache, +`HttpComponents` client by setting the `httpInvokerRequestExecutor` property:, +		<bean class="org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor"/>, +the main open-source JMX implementation, MX4J, and the one provided with JDK 5.0, +(EIS): the JCA (Java EE Connector Architecture). This specification is divided into, +several different parts:]