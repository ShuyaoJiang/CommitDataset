[+++ b/spring-context-support/src/main/java/org/springframework/cache/transaction/TransactionAwareCacheDecorator.java, + * Copyright 2002-2017 the original author or authors., +					TransactionAwareCacheDecorator.this.targetCache.put(key, value);, +					TransactionAwareCacheDecorator.this.targetCache.evict(key);, +++ b/spring-context-support/src/main/java/org/springframework/cache/transaction/TransactionAwareCacheDecorator.java, + * Copyright 2002-2017 the original author or authors., +					TransactionAwareCacheDecorator.this.targetCache.put(key, value);, +					TransactionAwareCacheDecorator.this.targetCache.evict(key);, +++ b/spring-context-support/src/test/java/org/springframework/cache/transaction/TransactionAwareCacheDecoratorTests.java, + * Copyright 2002-2017 the original author or authors., +		this.thrown.expect(IllegalArgumentException.class);, +		TransactionStatus status = this.txManager.getTransaction(, +				new DefaultTransactionAttribute(TransactionDefinition.PROPAGATION_REQUIRED));, +		this.txManager.commit(status);, +		TransactionStatus status = this.txManager.getTransaction(, +				new DefaultTransactionAttribute(TransactionDefinition.PROPAGATION_REQUIRED));, +		this.txManager.commit(status);, +		TransactionStatus status = this.txManager.getTransaction(, +				new DefaultTransactionAttribute(TransactionDefinition.PROPAGATION_REQUIRED));, +		this.txManager.commit(status);]