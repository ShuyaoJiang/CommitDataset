[+++ b/spring-web/src/main/java/org/springframework/web/bind/support/WebRequestDataBinder.java, +import java.util.List;, +import java.util.Map;, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +				new Servlet3MultipartHelper(isBindEmptyMultipartFiles()).bindParts(serlvetRequest, mpvs);, +		private final boolean bindEmptyMultipartFiles;, +, +, +		public Servlet3MultipartHelper(boolean bindEmptyMultipartFiles) {, +			this.bindEmptyMultipartFiles = bindEmptyMultipartFiles;, +		}, +, +, +				MultiValueMap<String, Part> map = new LinkedMultiValueMap<String, Part>();, +					map.add(part.getName(), part);, +				}, +				for (Map.Entry<String, List<Part>> entry: map.entrySet()) {, +					if (entry.getValue().size() == 1) {, +						Part part = entry.getValue().get(0);, +						if (this.bindEmptyMultipartFiles || part.getSize() > 0) {, +							mpvs.add(entry.getKey(), part);, +						}, +					}, +					else {, +						mpvs.add(entry.getKey(), entry.getValue());, +					}, +++ b/spring-web/src/main/java/org/springframework/web/bind/support/WebRequestDataBinder.java, +import java.util.List;, +import java.util.Map;, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +				new Servlet3MultipartHelper(isBindEmptyMultipartFiles()).bindParts(serlvetRequest, mpvs);, +		private final boolean bindEmptyMultipartFiles;, +, +, +		public Servlet3MultipartHelper(boolean bindEmptyMultipartFiles) {, +			this.bindEmptyMultipartFiles = bindEmptyMultipartFiles;, +		}, +, +, +				MultiValueMap<String, Part> map = new LinkedMultiValueMap<String, Part>();, +					map.add(part.getName(), part);, +				}, +				for (Map.Entry<String, List<Part>> entry: map.entrySet()) {, +					if (entry.getValue().size() == 1) {, +						Part part = entry.getValue().get(0);, +						if (this.bindEmptyMultipartFiles || part.getSize() > 0) {, +							mpvs.add(entry.getKey(), part);, +						}, +					}, +					else {, +						mpvs.add(entry.getKey(), entry.getValue());, +					}, +++ b/spring-web/src/test/java/org/springframework/web/bind/support/WebRequestDataBinderIntegrationTests.java, +		Resource firstPart = new ClassPathResource("/org/springframework/http/converter/logo.jpg");, +		assertEquals(parts.get("partList").size(), bean.getPartList().size());, +++ b/spring-web/src/main/java/org/springframework/web/bind/support/WebRequestDataBinder.java, +import java.util.List;, +import java.util.Map;, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +				new Servlet3MultipartHelper(isBindEmptyMultipartFiles()).bindParts(serlvetRequest, mpvs);, +		private final boolean bindEmptyMultipartFiles;, +, +, +		public Servlet3MultipartHelper(boolean bindEmptyMultipartFiles) {, +			this.bindEmptyMultipartFiles = bindEmptyMultipartFiles;, +		}, +, +, +				MultiValueMap<String, Part> map = new LinkedMultiValueMap<String, Part>();, +					map.add(part.getName(), part);, +				}, +				for (Map.Entry<String, List<Part>> entry: map.entrySet()) {, +					if (entry.getValue().size() == 1) {, +						Part part = entry.getValue().get(0);, +						if (this.bindEmptyMultipartFiles || part.getSize() > 0) {, +							mpvs.add(entry.getKey(), part);, +						}, +					}, +					else {, +						mpvs.add(entry.getKey(), entry.getValue());, +					}, +++ b/spring-web/src/test/java/org/springframework/web/bind/support/WebRequestDataBinderIntegrationTests.java, +		Resource firstPart = new ClassPathResource("/org/springframework/http/converter/logo.jpg");, +		assertEquals(parts.get("partList").size(), bean.getPartList().size());, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestPartIntegrationTests.java, +import javax.servlet.MultipartConfigElement;, +, + * @author Brian Clozel, +		standardResolverServlet.getRegistration().setMultipartConfig(new MultipartConfigElement(""));]