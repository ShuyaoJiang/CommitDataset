[+++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AbstractConfigurationClassProcessor.java, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AbstractConfigurationClassProcessor.java, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AddAnnotationAdapter.java, +	public void visit(int version, int access, String name, String signature,, +	                  String superName, String[] interfaces) {, +	public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AbstractConfigurationClassProcessor.java, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AddAnnotationAdapter.java, +	public void visit(int version, int access, String name, String signature,, +	                  String superName, String[] interfaces) {, +	public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AnnotationAdapter.java, + * Copyright 2002-2009 the original author or authors., +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AbstractConfigurationClassProcessor.java, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AddAnnotationAdapter.java, +	public void visit(int version, int access, String name, String signature,, +	                  String superName, String[] interfaces) {, +	public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AnnotationAdapter.java, + * Copyright 2002-2009 the original author or authors., +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AsmUtils.java, + * Copyright 2002-2009 the original author or authors., +			throw new RuntimeException("An unexpected exception occurred while creating ASM ClassReader: " + ex);, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AbstractConfigurationClassProcessor.java, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AddAnnotationAdapter.java, +	public void visit(int version, int access, String name, String signature,, +	                  String superName, String[] interfaces) {, +	public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AnnotationAdapter.java, + * Copyright 2002-2009 the original author or authors., +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AsmUtils.java, + * Copyright 2002-2009 the original author or authors., +			throw new RuntimeException("An unexpected exception occurred while creating ASM ClassReader: " + ex);, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanDefinitionRegistrar.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AbstractConfigurationClassProcessor.java, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AddAnnotationAdapter.java, +	public void visit(int version, int access, String name, String signature,, +	                  String superName, String[] interfaces) {, +	public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AnnotationAdapter.java, + * Copyright 2002-2009 the original author or authors., +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AsmUtils.java, + * Copyright 2002-2009 the original author or authors., +			throw new RuntimeException("An unexpected exception occurred while creating ASM ClassReader: " + ex);, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanDefinitionRegistrar.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanMethod.java, + * Copyright 2002-2009 the original author or authors., +		return format("%s: name=%s; returnType=%s; modifiers=%d",, +		              getClass().getSimpleName(), name, returnTypeName, modifiers);, +			super(format("method '%s' may not be private", getName()),, +			      new Location(new FileSystemResource("/dev/null")));, +			super(format("method '%s' may not be final. remove the final modifier to continue", getName()),, +			      new Location(new FileSystemResource("/dev/null")));, +			super(format("method %s contains an invalid annotation declaration: scoped proxies ", +			      new Location(new FileSystemResource("/dev/null")));, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AbstractConfigurationClassProcessor.java, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AddAnnotationAdapter.java, +	public void visit(int version, int access, String name, String signature,, +	                  String superName, String[] interfaces) {, +	public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AnnotationAdapter.java, + * Copyright 2002-2009 the original author or authors., +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/AsmUtils.java, + * Copyright 2002-2009 the original author or authors., +			throw new RuntimeException("An unexpected exception occurred while creating ASM ClassReader: " + ex);, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/support/BeanDefinitionRegistrar.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");]