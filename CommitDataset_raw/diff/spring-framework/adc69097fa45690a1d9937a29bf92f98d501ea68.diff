[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/config/ResourceHandlerRegistry.java, +		handlerMapping.setOrder(this.order);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/config/ResourceHandlerRegistry.java, +		handlerMapping.setOrder(this.order);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/config/WebReactiveConfiguration.java, +			PathMatchConfigurer pathMatchConfigurer = getPathMatchConfigurer();, +			if (pathMatchConfigurer.getPathMatcher() != null) {, +				handlerMapping.setPathMatcher(pathMatchConfigurer.getPathMatcher());, +			if (pathMatchConfigurer.getPathHelper() != null) {, +				handlerMapping.setPathHelper(pathMatchConfigurer.getPathHelper());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/config/ResourceHandlerRegistry.java, +		handlerMapping.setOrder(this.order);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/config/WebReactiveConfiguration.java, +			PathMatchConfigurer pathMatchConfigurer = getPathMatchConfigurer();, +			if (pathMatchConfigurer.getPathMatcher() != null) {, +				handlerMapping.setPathMatcher(pathMatchConfigurer.getPathMatcher());, +			if (pathMatchConfigurer.getPathHelper() != null) {, +				handlerMapping.setPathHelper(pathMatchConfigurer.getPathHelper());, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/config/WebReactiveConfigurationTests.java, +import org.springframework.web.reactive.handler.AbstractHandlerMapping;, +import org.springframework.web.reactive.handler.SimpleUrlHandlerMapping;, +import org.springframework.web.server.WebHandler;, +	@Test, +	public void resourceHandler() throws Exception {, +		ApplicationContext context = loadConfig(CustomResourceHandlingConfig.class);, +, +		String name = "resourceHandlerMapping";, +		AbstractHandlerMapping handlerMapping = context.getBean(name, AbstractHandlerMapping.class);, +		assertNotNull(handlerMapping);, +, +		assertEquals(Ordered.LOWEST_PRECEDENCE -1, handlerMapping.getOrder());, +, +		assertNotNull(handlerMapping.getPathHelper());, +		assertNotNull(handlerMapping.getPathMatcher());, +, +		SimpleUrlHandlerMapping urlHandlerMapping = (SimpleUrlHandlerMapping) handlerMapping;, +		WebHandler webHandler = (WebHandler) urlHandlerMapping.getUrlMap().get("/images/**");, +		assertNotNull(webHandler);, +	}, +, +	@Configuration, +	static class CustomResourceHandlingConfig extends WebReactiveConfiguration {, +, +		@Override, +		protected void addResourceHandlers(ResourceHandlerRegistry registry) {, +			registry.addResourceHandler("/images/**").addResourceLocations("/images/");, +		}, +	}, +, +]