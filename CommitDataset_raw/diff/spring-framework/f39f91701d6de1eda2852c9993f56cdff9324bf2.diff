[+++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +import java.util.ArrayList;, +import java.util.List;, +import org.springframework.ui.binding.MissingSourceValuesException;, +	private String[] requiredProperties = new String[0];, +	, +		checkRequired(sourceValues);, +			try {, +			} catch (PropertyNotFoundException e) {, +				results.add(new PropertyNotFoundResult(sourceValue.getKey(), sourceValue.getValue(), messageSource));, +			}, +	private void checkRequired(Map<String, ? extends Object> sourceValues) {, +		List<String> missingRequired = new ArrayList<String>();, +		for (String required : requiredProperties) {, +			boolean found = false;, +			for (String property : sourceValues.keySet()) {, +				if (property.equals(required)) {, +					found = true;, +				}, +			}, +			if (!found) {, +				missingRequired.add(required);, +			}, +		}, +		if (!missingRequired.isEmpty()) {, +			throw new MissingSourceValuesException(missingRequired, sourceValues);, +		}, +	}, +	, +		public MessageSource getMessageSource() {, +			return messageSource;, +		}, +		, +			throw new PropertyNotFoundException(property, modelClass);, +		MessageSource getMessageSource();, +		, +	public void setRequired(String[] propertyPaths) {, +		this.requiredProperties = propertyPaths;, +	}, +, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +import java.util.ArrayList;, +import java.util.List;, +import org.springframework.ui.binding.MissingSourceValuesException;, +	private String[] requiredProperties = new String[0];, +	, +		checkRequired(sourceValues);, +			try {, +			} catch (PropertyNotFoundException e) {, +				results.add(new PropertyNotFoundResult(sourceValue.getKey(), sourceValue.getValue(), messageSource));, +			}, +	private void checkRequired(Map<String, ? extends Object> sourceValues) {, +		List<String> missingRequired = new ArrayList<String>();, +		for (String required : requiredProperties) {, +			boolean found = false;, +			for (String property : sourceValues.keySet()) {, +				if (property.equals(required)) {, +					found = true;, +				}, +			}, +			if (!found) {, +				missingRequired.add(required);, +			}, +		}, +		if (!missingRequired.isEmpty()) {, +			throw new MissingSourceValuesException(missingRequired, sourceValues);, +		}, +	}, +	, +		public MessageSource getMessageSource() {, +			return messageSource;, +		}, +		, +			throw new PropertyNotFoundException(property, modelClass);, +		MessageSource getMessageSource();, +		, +	public void setRequired(String[] propertyPaths) {, +		this.requiredProperties = propertyPaths;, +	}, +, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/PropertyNotFoundException.java, +package org.springframework.ui.binding.support;, +, +public class PropertyNotFoundException extends RuntimeException {, +, +	private String property;, +, +	private Class<?> modelClass;, +, +	public PropertyNotFoundException(String property, Class<?> modelClass) {, +		super("No property '" + property + "' found on model [" + modelClass.getName() + "]");, +		this.property = property;, +		this.modelClass = modelClass;, +	}, +, +	public String getProperty() {, +		return property;, +	}, +, +	public Class<?> getModelClass() {]