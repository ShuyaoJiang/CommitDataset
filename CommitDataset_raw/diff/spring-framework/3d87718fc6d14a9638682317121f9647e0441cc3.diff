[+++ b/spring-web/src/main/java/org/springframework/http/HttpMethod.java, +		return (this == resolve(method));, +++ b/spring-web/src/main/java/org/springframework/http/HttpMethod.java, +		return (this == resolve(method));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java, +		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod());, +		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {, +++ b/spring-web/src/main/java/org/springframework/http/HttpMethod.java, +		return (this == resolve(method));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java, +		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod());, +		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/AbstractController.java, +	 * Create a new AbstractController which supports, +	 * HTTP methods GET, HEAD and POST by default., +	 */, +	public AbstractController() {, +		this(true);, +	}, +, +	/**, +	 * Create a new AbstractController., +	 * @param restrictDefaultSupportedMethods {@code true} if this, +	 * controller should support HTTP methods GET, HEAD and POST by default,, +	 * or {@code false} if it should be unrestricted, +	 * @since 4.3, +	 */, +	public AbstractController(boolean restrictDefaultSupportedMethods) {, +		super(restrictDefaultSupportedMethods);, +	}, +, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/http/HttpMethod.java, +		return (this == resolve(method));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java, +		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod());, +		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/AbstractController.java, +	 * Create a new AbstractController which supports, +	 * HTTP methods GET, HEAD and POST by default., +	 */, +	public AbstractController() {, +		this(true);, +	}, +, +	/**, +	 * Create a new AbstractController., +	 * @param restrictDefaultSupportedMethods {@code true} if this, +	 * controller should support HTTP methods GET, HEAD and POST by default,, +	 * or {@code false} if it should be unrestricted, +	 * @since 4.3, +	 */, +	public AbstractController(boolean restrictDefaultSupportedMethods) {, +		super(restrictDefaultSupportedMethods);, +	}, +, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/ServletForwardingController.java, + * Copyright 2002-2015 the original author or authors., +	public ServletForwardingController() {, +		super(false);, +	}, +, +, +++ b/spring-web/src/main/java/org/springframework/http/HttpMethod.java, +		return (this == resolve(method));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java, +		HttpMethod httpMethod = HttpMethod.resolve(request.getMethod());, +		if (HttpMethod.PATCH == httpMethod || httpMethod == null) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/AbstractController.java, +	 * Create a new AbstractController which supports, +	 * HTTP methods GET, HEAD and POST by default., +	 */, +	public AbstractController() {, +		this(true);, +	}, +, +	/**, +	 * Create a new AbstractController., +	 * @param restrictDefaultSupportedMethods {@code true} if this, +	 * controller should support HTTP methods GET, HEAD and POST by default,, +	 * or {@code false} if it should be unrestricted, +	 * @since 4.3, +	 */, +	public AbstractController(boolean restrictDefaultSupportedMethods) {, +		super(restrictDefaultSupportedMethods);, +	}, +, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/ServletForwardingController.java, + * Copyright 2002-2015 the original author or authors., +	public ServletForwardingController() {, +		super(false);, +	}, +, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/ServletWrappingController.java]