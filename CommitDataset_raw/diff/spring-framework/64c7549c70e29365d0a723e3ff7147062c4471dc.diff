[+++ b/org.springframework.core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +, +import static java.lang.String.*;, +import static org.springframework.util.StringUtils.*;, +import static org.springframework.util.SystemPropertyUtils.*;, +, +		propertySources.addFirst(propertySource);, +		for (int i = propertySources.size() -1; i >= 0; i--) {, +			PropertySource<?> propertySource = propertySources.get(i);, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +, +import static java.lang.String.*;, +import static org.springframework.util.StringUtils.*;, +import static org.springframework.util.SystemPropertyUtils.*;, +, +		propertySources.addFirst(propertySource);, +		for (int i = propertySources.size() -1; i >= 0; i--) {, +			PropertySource<?> propertySource = propertySources.get(i);, +++ b/org.springframework.core/src/test/java/org/springframework/core/env/DefaultEnvironmentTests.java, +import static java.lang.String.format;, +import static org.hamcrest.CoreMatchers.*;, +import static org.junit.Assert.*;, +import static org.junit.matchers.JUnitMatchers.*;, +import static org.springframework.core.env.AbstractEnvironment.*;, +import static org.springframework.core.env.DefaultEnvironmentTests.CollectionMatchers.*;, +, +		propertySources.addFirst(propertySources.remove(propertySources.indexOf(PropertySource.named("system"))));, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +, +import static java.lang.String.*;, +import static org.springframework.util.StringUtils.*;, +import static org.springframework.util.SystemPropertyUtils.*;, +, +		propertySources.addFirst(propertySource);, +		for (int i = propertySources.size() -1; i >= 0; i--) {, +			PropertySource<?> propertySource = propertySources.get(i);, +++ b/org.springframework.core/src/test/java/org/springframework/core/env/DefaultEnvironmentTests.java, +import static java.lang.String.format;, +import static org.hamcrest.CoreMatchers.*;, +import static org.junit.Assert.*;, +import static org.junit.matchers.JUnitMatchers.*;, +import static org.springframework.core.env.AbstractEnvironment.*;, +import static org.springframework.core.env.DefaultEnvironmentTests.CollectionMatchers.*;, +, +		propertySources.addFirst(propertySources.remove(propertySources.indexOf(PropertySource.named("system"))));, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.java, + * Copyright 2002-2010 the original author or authors., +		this.getEnvironment().getPropertySources().addFirst(new ServletContextPropertySource(this.servletContext));, +		this.getEnvironment().getPropertySources().addFirst(new ServletConfigPropertySource(servletConfig));, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +, +import static java.lang.String.*;, +import static org.springframework.util.StringUtils.*;, +import static org.springframework.util.SystemPropertyUtils.*;, +, +		propertySources.addFirst(propertySource);, +		for (int i = propertySources.size() -1; i >= 0; i--) {, +			PropertySource<?> propertySource = propertySources.get(i);, +++ b/org.springframework.core/src/test/java/org/springframework/core/env/DefaultEnvironmentTests.java, +import static java.lang.String.format;, +import static org.hamcrest.CoreMatchers.*;, +import static org.junit.Assert.*;, +import static org.junit.matchers.JUnitMatchers.*;, +import static org.springframework.core.env.AbstractEnvironment.*;, +import static org.springframework.core.env.DefaultEnvironmentTests.CollectionMatchers.*;, +, +		propertySources.addFirst(propertySources.remove(propertySources.indexOf(PropertySource.named("system"))));, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.java, + * Copyright 2002-2010 the original author or authors., +		this.getEnvironment().getPropertySources().addFirst(new ServletContextPropertySource(this.servletContext));, +		this.getEnvironment().getPropertySources().addFirst(new ServletConfigPropertySource(servletConfig));, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/support/GenericWebApplicationContext.java, + * Copyright 2002-2010 the original author or authors., +		this.getEnvironment().getPropertySources().addFirst(new ServletContextPropertySource(servletContext));, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +, +import static java.lang.String.*;, +import static org.springframework.util.StringUtils.*;, +import static org.springframework.util.SystemPropertyUtils.*;, +, +		propertySources.addFirst(propertySource);, +		for (int i = propertySources.size() -1; i >= 0; i--) {, +			PropertySource<?> propertySource = propertySources.get(i);, +++ b/org.springframework.core/src/test/java/org/springframework/core/env/DefaultEnvironmentTests.java, +import static java.lang.String.format;, +import static org.hamcrest.CoreMatchers.*;, +import static org.junit.Assert.*;, +import static org.junit.matchers.JUnitMatchers.*;, +import static org.springframework.core.env.AbstractEnvironment.*;, +import static org.springframework.core.env.DefaultEnvironmentTests.CollectionMatchers.*;, +, +		propertySources.addFirst(propertySources.remove(propertySources.indexOf(PropertySource.named("system"))));, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.java, + * Copyright 2002-2010 the original author or authors., +		this.getEnvironment().getPropertySources().addFirst(new ServletContextPropertySource(this.servletContext));, +		this.getEnvironment().getPropertySources().addFirst(new ServletConfigPropertySource(servletConfig));, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/support/GenericWebApplicationContext.java, + * Copyright 2002-2010 the original author or authors., +		this.getEnvironment().getPropertySources().addFirst(new ServletContextPropertySource(servletContext));, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/support/StaticWebApplicationContext.java]