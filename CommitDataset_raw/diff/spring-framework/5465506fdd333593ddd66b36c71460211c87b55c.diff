[+++ b/build.gradle, +		testCompile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jackson2Version}"), +++ b/build.gradle, +		testCompile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jackson2Version}"), +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, +		// Java 8 java.util.Optional class present?, +		if (ClassUtils.isPresent("java.util.Optional", this.moduleClassLoader)) {, +			try {, +				Class<? extends Module> jdk8Module = (Class<? extends Module>), +						ClassUtils.forName("com.fasterxml.jackson.datatype.jdk8.Jdk8Module", this.moduleClassLoader);, +				objectMapper.registerModule(BeanUtils.instantiate(jdk8Module));, +			}, +			catch (ClassNotFoundException ex) {, +				// jackson-datatype-jdk8 not available, +			}, +		}, +++ b/build.gradle, +		testCompile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jackson2Version}"), +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, +		// Java 8 java.util.Optional class present?, +		if (ClassUtils.isPresent("java.util.Optional", this.moduleClassLoader)) {, +			try {, +				Class<? extends Module> jdk8Module = (Class<? extends Module>), +						ClassUtils.forName("com.fasterxml.jackson.datatype.jdk8.Jdk8Module", this.moduleClassLoader);, +				objectMapper.registerModule(BeanUtils.instantiate(jdk8Module));, +			}, +			catch (ClassNotFoundException ex) {, +				// jackson-datatype-jdk8 not available, +			}, +		}, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilderTests.java, +import java.util.Optional;, +		, +		, +		Optional<String> optional = Optional.of("test");, +		assertEquals("\"test\"", new String(objectMapper.writeValueAsBytes(optional), "UTF-8"));]