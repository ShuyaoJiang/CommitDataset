[+++ b/spring-context/src/main/java/org/springframework/scripting/config/ScriptingDefaultsParser.java, +			bd.getPropertyValues().add("defaultRefreshCheckDelay", Long.valueOf(refreshCheckDelay));, +++ b/spring-context/src/main/java/org/springframework/scripting/config/ScriptingDefaultsParser.java, +			bd.getPropertyValues().add("defaultRefreshCheckDelay", Long.valueOf(refreshCheckDelay));, +++ b/spring-core/src/main/java/org/springframework/asm/Opcodes.java, +    Integer TOP = 0;, +    Integer INTEGER = 1;, +    Integer FLOAT = 2;, +    Integer DOUBLE = 3;, +    Integer LONG = 4;, +    Integer NULL = 5;, +    Integer UNINITIALIZED_THIS = 6;, +++ b/spring-context/src/main/java/org/springframework/scripting/config/ScriptingDefaultsParser.java, +			bd.getPropertyValues().add("defaultRefreshCheckDelay", Long.valueOf(refreshCheckDelay));, +++ b/spring-core/src/main/java/org/springframework/asm/Opcodes.java, +    Integer TOP = 0;, +    Integer INTEGER = 1;, +    Integer FLOAT = 2;, +    Integer DOUBLE = 3;, +    Integer LONG = 4;, +    Integer NULL = 5;, +    Integer UNINITIALIZED_THIS = 6;, +++ b/spring-core/src/main/java/org/springframework/core/style/ToStringCreator.java, + * Copyright 2002-2016 the original author or authors., +		return append(fieldName, Byte.valueOf(value));, +		return append(fieldName, Short.valueOf(value));, +		return append(fieldName, Integer.valueOf(value));, +		return append(fieldName, Long.valueOf(value));, +		return append(fieldName, Float.valueOf(value));, +		return append(fieldName, Double.valueOf(value));, +++ b/spring-context/src/main/java/org/springframework/scripting/config/ScriptingDefaultsParser.java, +			bd.getPropertyValues().add("defaultRefreshCheckDelay", Long.valueOf(refreshCheckDelay));, +++ b/spring-core/src/main/java/org/springframework/asm/Opcodes.java, +    Integer TOP = 0;, +    Integer INTEGER = 1;, +    Integer FLOAT = 2;, +    Integer DOUBLE = 3;, +    Integer LONG = 4;, +    Integer NULL = 5;, +    Integer UNINITIALIZED_THIS = 6;, +++ b/spring-core/src/main/java/org/springframework/core/style/ToStringCreator.java, + * Copyright 2002-2016 the original author or authors., +		return append(fieldName, Byte.valueOf(value));, +		return append(fieldName, Short.valueOf(value));, +		return append(fieldName, Integer.valueOf(value));, +		return append(fieldName, Long.valueOf(value));, +		return append(fieldName, Float.valueOf(value));, +		return append(fieldName, Double.valueOf(value));, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/ConnectionHolder.java, +			this.savepointsSupported = getConnection().getMetaData().supportsSavepoints();, +		return this.savepointsSupported;, +++ b/spring-context/src/main/java/org/springframework/scripting/config/ScriptingDefaultsParser.java, +			bd.getPropertyValues().add("defaultRefreshCheckDelay", Long.valueOf(refreshCheckDelay));, +++ b/spring-core/src/main/java/org/springframework/asm/Opcodes.java, +    Integer TOP = 0;, +    Integer INTEGER = 1;, +    Integer FLOAT = 2;, +    Integer DOUBLE = 3;, +    Integer LONG = 4;, +    Integer NULL = 5;, +    Integer UNINITIALIZED_THIS = 6;, +++ b/spring-core/src/main/java/org/springframework/core/style/ToStringCreator.java, + * Copyright 2002-2016 the original author or authors., +		return append(fieldName, Byte.valueOf(value));, +		return append(fieldName, Short.valueOf(value));, +		return append(fieldName, Integer.valueOf(value));, +		return append(fieldName, Long.valueOf(value));, +		return append(fieldName, Float.valueOf(value));, +		return append(fieldName, Double.valueOf(value));, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/ConnectionHolder.java, +			this.savepointsSupported = getConnection().getMetaData().supportsSavepoints();, +		return this.savepointsSupported;, +++ b/spring-jms/src/main/java/org/springframework/jms/config/JcaListenerContainerParser.java, + * Copyright 2002-2016 the original author or authors., +			properties.add("prefetchSize", Integer.valueOf(prefetch));, +++ b/spring-context/src/main/java/org/springframework/scripting/config/ScriptingDefaultsParser.java, +			bd.getPropertyValues().add("defaultRefreshCheckDelay", Long.valueOf(refreshCheckDelay));, +++ b/spring-core/src/main/java/org/springframework/asm/Opcodes.java, +    Integer TOP = 0;, +    Integer INTEGER = 1;, +    Integer FLOAT = 2;, +    Integer DOUBLE = 3;, +    Integer LONG = 4;, +    Integer NULL = 5;, +    Integer UNINITIALIZED_THIS = 6;, +++ b/spring-core/src/main/java/org/springframework/core/style/ToStringCreator.java, + * Copyright 2002-2016 the original author or authors., +		return append(fieldName, Byte.valueOf(value));, +		return append(fieldName, Short.valueOf(value));, +		return append(fieldName, Integer.valueOf(value));, +		return append(fieldName, Long.valueOf(value));, +		return append(fieldName, Float.valueOf(value));, +		return append(fieldName, Double.valueOf(value));, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/ConnectionHolder.java, +			this.savepointsSupported = getConnection().getMetaData().supportsSavepoints();, +		return this.savepointsSupported;, +++ b/spring-jms/src/main/java/org/springframework/jms/config/JcaListenerContainerParser.java, + * Copyright 2002-2016 the original author or authors., +			properties.add("prefetchSize", Integer.valueOf(prefetch));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.java]