[+++ b/spring-web/src/test/java/org/springframework/http/server/reactive/bootstrap/ReactorHttpServer.java, +import java.util.concurrent.atomic.AtomicReference;, +, +	private AtomicReference<NettyContext> nettyContext = new AtomicReference<>();, +		this.reactorServer = reactor.ipc.netty.http.server.HttpServer, +				.create(getHost(), getPort());, +		NettyContext context = this.nettyContext.get();, +		return (context != null && context.channel().isActive());, +		return this.reactorServer;, +		return this.reactorServer;, +		if (this.nettyContext.get() == null) {, +			this.nettyContext.set(this.reactorServer.newHandler(reactorHandler).block());, +		NettyContext context = this.nettyContext.getAndSet(null);, +		if (context != null) {, +			context.dispose();]