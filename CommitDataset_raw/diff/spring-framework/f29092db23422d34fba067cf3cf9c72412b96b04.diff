[+++ b/spring-core/src/main/java/org/springframework/core/ResolvableType.java, +	private static final long serialVersionUID = 1L;, +, +, +	 * If resolution has happened and {@link #resolved} contains a valid result., +	 */, +	private boolean isResolved = false;, +, +	/**, +	 * Late binding stored copy of the resolved value (valid when {@link #isResolved} is, +	 * true)., +		if (!this.isResolved) {, +			this.resolved = resolveClass();, +			this.isResolved = true;, +		return (this.resolved == null ? fallback : this.resolved);, +, +			private static final long serialVersionUID = 1L;, +, +, +, +, +, +			private static final long serialVersionUID = 1L;, +, +, +++ b/spring-core/src/main/java/org/springframework/core/ResolvableType.java, +	private static final long serialVersionUID = 1L;, +, +, +	 * If resolution has happened and {@link #resolved} contains a valid result., +	 */, +	private boolean isResolved = false;, +, +	/**, +	 * Late binding stored copy of the resolved value (valid when {@link #isResolved} is, +	 * true)., +		if (!this.isResolved) {, +			this.resolved = resolveClass();, +			this.isResolved = true;, +		return (this.resolved == null ? fallback : this.resolved);, +, +			private static final long serialVersionUID = 1L;, +, +, +, +, +, +			private static final long serialVersionUID = 1L;, +, +, +++ b/spring-core/src/main/java/org/springframework/core/SerializableTypeWrapper.java, +, +			private static final long serialVersionUID = 1L;, +, +, +, +				private static final long serialVersionUID = 1L;, +, +, +, +				private static final long serialVersionUID = 1L;, +, +, +		private static final long serialVersionUID = 1L;, +, +, +		private static final long serialVersionUID = 1L;, +, +, +		private static final long serialVersionUID = 1L;, +, +, +		private static final long serialVersionUID = 1L;, +, +, +++ b/spring-core/src/main/java/org/springframework/core/ResolvableType.java, +	private static final long serialVersionUID = 1L;, +, +, +	 * If resolution has happened and {@link #resolved} contains a valid result., +	 */, +	private boolean isResolved = false;, +, +	/**, +	 * Late binding stored copy of the resolved value (valid when {@link #isResolved} is, +	 * true)., +		if (!this.isResolved) {, +			this.resolved = resolveClass();, +			this.isResolved = true;, +		return (this.resolved == null ? fallback : this.resolved);, +, +			private static final long serialVersionUID = 1L;, +, +, +, +, +, +			private static final long serialVersionUID = 1L;, +, +]