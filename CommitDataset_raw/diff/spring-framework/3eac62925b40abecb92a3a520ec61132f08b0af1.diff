[+++ b/build.gradle, +		optional("reactor:reactor-tcp:1.0.0.BUILD-SNAPSHOT"), +++ b/build.gradle, +		optional("reactor:reactor-tcp:1.0.0.BUILD-SNAPSHOT"), +++ b/spring-websocket/src/main/java/org/springframework/web/stomp/StompHeaders.java, +	// TODO: separate client from server headers so they can't be mixed, +, +	private static final String MESSAGE = "message";, +, +	public String getMessage() {, +		return getFirst(MESSAGE);, +	}, +, +	public void setMessage(String id) {, +		set(MESSAGE, id);, +	}, +, +++ b/build.gradle, +		optional("reactor:reactor-tcp:1.0.0.BUILD-SNAPSHOT"), +++ b/spring-websocket/src/main/java/org/springframework/web/stomp/StompHeaders.java, +	// TODO: separate client from server headers so they can't be mixed, +, +	private static final String MESSAGE = "message";, +, +	public String getMessage() {, +		return getFirst(MESSAGE);, +	}, +, +	public void setMessage(String id) {, +		set(MESSAGE, id);, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/stomp/StompMessage.java, +	private String sessionId;, +, +	public void setSessionId(String sessionId) {, +		this.sessionId = sessionId;, +	}, +, +	public String getStompSessionId() {, +		return this.sessionId;, +	}, +, +++ b/build.gradle, +		optional("reactor:reactor-tcp:1.0.0.BUILD-SNAPSHOT"), +++ b/spring-websocket/src/main/java/org/springframework/web/stomp/StompHeaders.java, +	// TODO: separate client from server headers so they can't be mixed, +, +	private static final String MESSAGE = "message";, +, +	public String getMessage() {, +		return getFirst(MESSAGE);, +	}, +, +	public void setMessage(String id) {, +		set(MESSAGE, id);, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/stomp/StompMessage.java, +	private String sessionId;, +, +	public void setSessionId(String sessionId) {, +		this.sessionId = sessionId;, +	}, +, +	public String getStompSessionId() {, +		return this.sessionId;, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/stomp/StompSession.java, +	/**, +	 * If the message is a STOMP ERROR message, the session will also be closed., +	 *, +	 */, +++ b/build.gradle, +		optional("reactor:reactor-tcp:1.0.0.BUILD-SNAPSHOT"), +++ b/spring-websocket/src/main/java/org/springframework/web/stomp/StompHeaders.java, +	// TODO: separate client from server headers so they can't be mixed, +, +	private static final String MESSAGE = "message";, +, +	public String getMessage() {, +		return getFirst(MESSAGE);, +	}, +, +	public void setMessage(String id) {, +		set(MESSAGE, id);, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/stomp/StompMessage.java, +	private String sessionId;, +, +	public void setSessionId(String sessionId) {, +		this.sessionId = sessionId;, +	}, +, +	public String getStompSessionId() {, +		return this.sessionId;, +	}, +]