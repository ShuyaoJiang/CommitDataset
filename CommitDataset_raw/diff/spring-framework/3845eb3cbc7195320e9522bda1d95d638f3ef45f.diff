[+++ b/spring-context/src/test/groovy/org/springframework/context/groovy/GroovyApplicationContextDynamicBeanPropertyTests.groovy, + * Copyright 2002-2015 the original author or authors., +import org.junit.Test, +, +import static groovy.test.GroovyAssert.*, +, + * @author Sam Brannen, +class GroovyApplicationContextDynamicBeanPropertyTests {, +	@Test, +	@Test, +		def err = shouldFail NoSuchBeanDefinitionException, { ctx.someNonExistentBean }, +		assertEquals "No bean named 'someNonExistentBean' is defined", err.message, +++ b/spring-context/src/test/groovy/org/springframework/context/groovy/GroovyApplicationContextDynamicBeanPropertyTests.groovy, + * Copyright 2002-2015 the original author or authors., +import org.junit.Test, +, +import static groovy.test.GroovyAssert.*, +, + * @author Sam Brannen, +class GroovyApplicationContextDynamicBeanPropertyTests {, +	@Test, +	@Test, +		def err = shouldFail NoSuchBeanDefinitionException, { ctx.someNonExistentBean }, +		assertEquals "No bean named 'someNonExistentBean' is defined", err.message, +++ b/spring-context/src/test/groovy/org/springframework/context/groovy/GroovyBeanDefinitionReaderTests.groovy, + * Copyright 2002-2015 the original author or authors., +import org.junit.Test, +, +import static groovy.test.GroovyAssert.*, +, + * @author Sam Brannen, +class GroovyBeanDefinitionReaderTests {, +	@Test, +	void importSpringXml() {, +	@Test, +	void importBeansFromGroovy() {, +	@Test, +	void singletonPropertyOnBeanDefinition() {, +	@Test, +	void inheritPropertiesFromAbstractBean() {, +	@Test, +	void contextComponentScanSpringTag() {, +	@Test, +	void useSpringNamespaceAsMethod() {, +	@Test, +	void useTwoSpringNamespaces() {, +	@Test, +	void springAopSupport() {, +	@Test, +	void springScopedProxyBean() {, +	@Test, +	void springNamespaceBean() {, +	@Test, +	void namedArgumentConstructor() {, +	@Test, +	void abstractBeanDefinition() {, +	@Test, +	void abstractBeanDefinitionWithClass() {, +	@Test, +	void scopes() {, +	@Test, +	void simpleBean() {, +	@Test, +	void beanWithParentRef() {, +	@Test, +	void withAnonymousInnerBean() {, +	@Test, +	void withUntypedAnonymousInnerBean() {, +	@Test, +	void beanReferences() {, +	@Test, +	void beanWithConstructor() {, +	@Test, +	void beanWithFactoryMethod() {, +	@Test, +	void beanWithFactoryMethodUsingClosureArgs() {, +	@Test, +	void beanWithFactoryMethodWithConstructorArgs() {, +	@Test, +	void getBeanDefinitions() {, +		assertEquals 'beanDefinitions was the wrong size', 3, reader.registry.beanDefinitionCount, +	@Test, +	void beanWithFactoryBean() {, +	@Test, +	void beanWithFactoryBeanAndMethod() {, +	@Test, +	void loadExternalBeans() {, +	@Test, +	void loadExternalBeansWithExplicitRefresh() {, +	@Test, +	void holyGrailWiring() {, +	@Test, +	void abstractBeanSpecifyingClass() {, +	@Test, +	void groovyBeanDefinitionReaderWithScript() {, +	@Test, +	void registerBeans() {, +	@Test, +	void listOfBeansAsConstructorArg() {, +	@Test]