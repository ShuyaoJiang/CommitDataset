[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +, +			// Check decorated bean definition, if any: We assume it'll be easier, +			// to determine the decorated bean's type than the proxy's type., +			BeanDefinitionHolder dbd = mbd.getDecoratedDefinition();, +			if (dbd != null && !BeanFactoryUtils.isFactoryDereference(name)) {, +				RootBeanDefinition tbd = getMergedBeanDefinition(dbd.getBeanName(), dbd.getBeanDefinition(), mbd);, +				Class targetClass = predictBeanType(dbd.getBeanName(), tbd);, +				if (targetClass != null && !FactoryBean.class.isAssignableFrom(targetClass)) {, +					return targetClass;, +				}, +			}, +, +					// If it's a FactoryBean, we want to look at what it creates, not at the factory class., +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +, +			// Check decorated bean definition, if any: We assume it'll be easier, +			// to determine the decorated bean's type than the proxy's type., +			BeanDefinitionHolder dbd = mbd.getDecoratedDefinition();, +			if (dbd != null && !BeanFactoryUtils.isFactoryDereference(name)) {, +				RootBeanDefinition tbd = getMergedBeanDefinition(dbd.getBeanName(), dbd.getBeanDefinition(), mbd);, +				Class targetClass = predictBeanType(dbd.getBeanName(), tbd);, +				if (targetClass != null && !FactoryBean.class.isAssignableFrom(targetClass)) {, +					return targetClass;, +				}, +			}, +, +					// If it's a FactoryBean, we want to look at what it creates, not at the factory class., +++ b/org.springframework.context/src/test/java/org/springframework/beans/factory/xml/support/CustomNamespaceHandlerTests.java, + * @author Juergen Hoeller, +		assertEquals(ApplicationListener.class, this.beanFactory.getType("debuggingTestBeanNoInstance"));]