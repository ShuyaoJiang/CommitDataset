[+++ b/spring-context/src/main/java/org/springframework/context/i18n/LocaleContextHolder.java, + * Copyright 2002-2017 the original author or authors., +	 * @see #getLocaleContext(), +		return getLocale(getLocaleContext());, +	}, +, +	/**, +	 * Return the Locale associated with the given user context, if any,, +	 * or the system default Locale otherwise. This is effectively a, +	 * replacement for {@link java.util.Locale#getDefault()},, +	 * able to optionally respect a user-level Locale setting., +	 * @param localeContext the user-level locale context to check, +	 * @return the current Locale, or the system default Locale if no, +	 * specific Locale has been associated with the current thread, +	 * @since 5.0, +	 * @see #getLocale(), +	 * @see LocaleContext#getLocale(), +	 * @see #setDefaultLocale(Locale), +	 * @see java.util.Locale#getDefault(), +	 */, +	public static Locale getLocale(@Nullable LocaleContext localeContext) {, +	 * @see #getLocaleContext(), +		return getTimeZone(getLocaleContext());, +	}, +, +	/**, +	 * Return the TimeZone associated with the given user context, if any,, +	 * or the system default TimeZone otherwise. This is effectively a, +	 * replacement for {@link java.util.TimeZone#getDefault()},, +	 * able to optionally respect a user-level TimeZone setting., +	 * @param localeContext the user-level locale context to check, +	 * @return the current TimeZone, or the system default TimeZone if no, +	 * specific TimeZone has been associated with the current thread, +	 * @since 5.0, +	 * @see #getTimeZone(), +	 * @see TimeZoneAwareLocaleContext#getTimeZone(), +	 * @see #setDefaultTimeZone(TimeZone), +	 * @see java.util.TimeZone#getDefault(), +	 */, +	public static TimeZone getTimeZone(@Nullable LocaleContext localeContext) {, +++ b/spring-context/src/main/java/org/springframework/context/i18n/LocaleContextHolder.java, + * Copyright 2002-2017 the original author or authors., +	 * @see #getLocaleContext(), +		return getLocale(getLocaleContext());, +	}, +, +	/**, +	 * Return the Locale associated with the given user context, if any,, +	 * or the system default Locale otherwise. This is effectively a, +	 * replacement for {@link java.util.Locale#getDefault()},, +	 * able to optionally respect a user-level Locale setting., +	 * @param localeContext the user-level locale context to check, +	 * @return the current Locale, or the system default Locale if no, +	 * specific Locale has been associated with the current thread, +	 * @since 5.0, +	 * @see #getLocale(), +	 * @see LocaleContext#getLocale(), +	 * @see #setDefaultLocale(Locale), +	 * @see java.util.Locale#getDefault(), +	 */, +	public static Locale getLocale(@Nullable LocaleContext localeContext) {, +	 * @see #getLocaleContext(), +		return getTimeZone(getLocaleContext());, +	}, +, +	/**, +	 * Return the TimeZone associated with the given user context, if any,, +	 * or the system default TimeZone otherwise. This is effectively a, +	 * replacement for {@link java.util.TimeZone#getDefault()},, +	 * able to optionally respect a user-level TimeZone setting., +	 * @param localeContext the user-level locale context to check, +	 * @return the current TimeZone, or the system default TimeZone if no, +	 * specific TimeZone has been associated with the current thread, +	 * @since 5.0, +	 * @see #getTimeZone(), +	 * @see TimeZoneAwareLocaleContext#getTimeZone(), +	 * @see #setDefaultTimeZone(TimeZone), +	 * @see java.util.TimeZone#getDefault(), +	 */, +	public static TimeZone getTimeZone(@Nullable LocaleContext localeContext) {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultPathSegmentContainer.java, +, +import org.springframework.lang.Nullable;, +	public boolean equals(@Nullable Object other) {, +		public boolean equals(@Nullable Object other) {, +++ b/spring-context/src/main/java/org/springframework/context/i18n/LocaleContextHolder.java, + * Copyright 2002-2017 the original author or authors., +	 * @see #getLocaleContext(), +		return getLocale(getLocaleContext());, +	}, +, +	/**, +	 * Return the Locale associated with the given user context, if any,, +	 * or the system default Locale otherwise. This is effectively a, +	 * replacement for {@link java.util.Locale#getDefault()},, +	 * able to optionally respect a user-level Locale setting., +	 * @param localeContext the user-level locale context to check, +	 * @return the current Locale, or the system default Locale if no, +	 * specific Locale has been associated with the current thread, +	 * @since 5.0]