[+++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/Bean.java, +	// TODO: , +//	/**, +//	 * Role this bean plays in the overall application configuration., +//	 * , +//	 * @see BeanDefinition#ROLE_APPLICATION, +//	 * @see BeanDefinition#ROLE_INFRASTRUCTURE, +//	 * @see BeanDefinition#ROLE_SUPPORT, +//	 * , +//	 * @see AbstractBeanDefinition the 'role' field is assigned by default to, +//	 *      ROLE_APPLICATION, +//	 */, +//	int role() default BeanDefinition.ROLE_APPLICATION;, +	String[] name() default {};, +	// TODO: Prune aliases, favor name[], +//	/**, +//	 * Bean aliases., +//	 */, +//	String[] aliases() default {};, +	// TODO: favor @Scope, +//	/**, +//	 * Scope: whether the bean is a singleton, prototype or custom scope. Default is, +//	 * singleton., +//	 */, +//	String scope() default StandardScopes.SINGLETON;, +, +	// TODO: prune autowiring?, +//	/**, +//	 * Bean autowire strategy., +//	 */, +//	Autowire autowire() default Autowire.INHERITED;, +	String initMethod() default "";, +	String destroyMethod() default "";, +	// TODO: Prune DependencyCheck, +	// TODO: Prune @Meta, +	// TODO: Prune allowOverriding, +//	/**, +//	 * Allow the bean to be overridden in another JavaConfig, XML or other non-Java, +//	 * configuration. This is consistent with DefaultListableBeanFactory's, +//	 * allowBeanDefinitionOverriding property, which defaults to true., +//	 * , +//	 * @return whether overriding of this bean is allowed, +//	 */, +//	boolean allowOverriding() default true;, +//, +	//String name() default "";, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/Bean.java, +	// TODO: , +//	/**, +//	 * Role this bean plays in the overall application configuration., +//	 * , +//	 * @see BeanDefinition#ROLE_APPLICATION, +//	 * @see BeanDefinition#ROLE_INFRASTRUCTURE, +//	 * @see BeanDefinition#ROLE_SUPPORT, +//	 * , +//	 * @see AbstractBeanDefinition the 'role' field is assigned by default to, +//	 *      ROLE_APPLICATION, +//	 */, +//	int role() default BeanDefinition.ROLE_APPLICATION;, +	String[] name() default {};, +	// TODO: Prune aliases, favor name[], +//	/**, +//	 * Bean aliases., +//	 */, +//	String[] aliases() default {};, +	// TODO: favor @Scope, +//	/**, +//	 * Scope: whether the bean is a singleton, prototype or custom scope. Default is, +//	 * singleton., +//	 */, +//	String scope() default StandardScopes.SINGLETON;, +, +	// TODO: prune autowiring?, +//	/**, +//	 * Bean autowire strategy., +//	 */, +//	Autowire autowire() default Autowire.INHERITED;, +	String initMethod() default "";, +	String destroyMethod() default "";, +	// TODO: Prune DependencyCheck, +	// TODO: Prune @Meta, +	// TODO: Prune allowOverriding, +//	/**, +//	 * Allow the bean to be overridden in another JavaConfig, XML or other non-Java, +//	 * configuration. This is consistent with DefaultListableBeanFactory's, +//	 * allowBeanDefinitionOverriding property, which defaults to true., +//	 * , +//	 * @return whether overriding of this bean is allowed, +//	 */, +//	boolean allowOverriding() default true;, +//, +	//String name() default "";, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/BeanMethod.java, +import static org.springframework.config.java.StandardScopes.*;, +import org.springframework.beans.factory.parsing.Location;, +import org.springframework.beans.factory.parsing.Problem;, +import org.springframework.beans.factory.parsing.ProblemReporter;, +import org.springframework.context.annotation.Scope;, +import org.springframework.core.io.FileSystemResource;, +public final class BeanMethod {]