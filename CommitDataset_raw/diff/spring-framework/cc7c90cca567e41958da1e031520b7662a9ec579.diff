[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/MvcNamespaceUtils.java, +	private static void registerSimpleControllerHandlerAdapter(ParserContext context, @Nullable Object source) {, +		if (!context.getRegistry().containsBeanDefinition(SIMPLE_CONTROLLER_HANDLER_ADAPTER_BEAN_NAME)) {, +			context.getRegistry().registerBeanDefinition(SIMPLE_CONTROLLER_HANDLER_ADAPTER_BEAN_NAME, beanDef);, +			context.registerComponent(new BeanComponentDefinition(beanDef, SIMPLE_CONTROLLER_HANDLER_ADAPTER_BEAN_NAME));, +	 * @return a bean definition, bean reference, or {@code null} if none defined, +	 * {@link org.springframework.core.io.UrlResource URL-based resources} (e.g. files,, +	 * HTTP URLs, etc) this method supports a special prefix to indicate the charset, +	 * associated with the URL so that relative paths appended to it can be encoded, +	 * correctly, e.g. {@code [charset=Windows-31J]http://example.org/path}., +	 * The charsets, if any, are added to the output map., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/MvcNamespaceUtils.java, +	private static void registerSimpleControllerHandlerAdapter(ParserContext context, @Nullable Object source) {, +		if (!context.getRegistry().containsBeanDefinition(SIMPLE_CONTROLLER_HANDLER_ADAPTER_BEAN_NAME)) {, +			context.getRegistry().registerBeanDefinition(SIMPLE_CONTROLLER_HANDLER_ADAPTER_BEAN_NAME, beanDef);, +			context.registerComponent(new BeanComponentDefinition(beanDef, SIMPLE_CONTROLLER_HANDLER_ADAPTER_BEAN_NAME));, +	 * @return a bean definition, bean reference, or {@code null} if none defined, +	 * {@link org.springframework.core.io.UrlResource URL-based resources} (e.g. files,, +	 * HTTP URLs, etc) this method supports a special prefix to indicate the charset, +	 * associated with the URL so that relative paths appended to it can be encoded, +	 * correctly, e.g. {@code [charset=Windows-31J]http://example.org/path}., +	 * The charsets, if any, are added to the output map., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, +			context.getReaderContext().error("The 'location' attribute is required.", context.extractSource(element));]