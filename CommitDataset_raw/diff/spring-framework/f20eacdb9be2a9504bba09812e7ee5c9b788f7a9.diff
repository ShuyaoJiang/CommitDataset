[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.java, + * Copyright 2002-2018 the original author or authors., + * Default builder for {@link MockHttpServletRequest} required as input to, + * perform requests in {@link MockMvc}., + * <p>Application tests will typically access this builder through the static, + * factory methods in {@link MockMvcRequestBuilders}., + * <p>This class is not open for extension. To apply custom initialization to, + * the created {@code MockHttpServletRequest}, please use the, + * {@link #with(RequestPostProcessor)} extension point., +	private static final UrlPathHelper urlPathHelper = new UrlPathHelper();, +, +			this.pathInfo = (StringUtils.hasText(extraPath) ?, +					urlPathHelper.decodeRequestString(request, extraPath) : null);, +			public InputStream getBody() {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.java, + * Copyright 2002-2018 the original author or authors., + * Default builder for {@link MockHttpServletRequest} required as input to, + * perform requests in {@link MockMvc}., + * <p>Application tests will typically access this builder through the static, + * factory methods in {@link MockMvcRequestBuilders}., + * <p>This class is not open for extension. To apply custom initialization to, + * the created {@code MockHttpServletRequest}, please use the, + * {@link #with(RequestPostProcessor)} extension point., +	private static final UrlPathHelper urlPathHelper = new UrlPathHelper();, +, +			this.pathInfo = (StringUtils.hasText(extraPath) ?, +					urlPathHelper.decodeRequestString(request, extraPath) : null);, +			public InputStream getBody() {, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilderTests.java, +	@Test // SPR-16453]