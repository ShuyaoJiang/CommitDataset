[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +				if (!containsBeanDefinition(beanName) || getBeanDefinition(beanName).isAutowireCandidate()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +				if (!containsBeanDefinition(beanName) || getBeanDefinition(beanName).isAutowireCandidate()) {, +++ b/spring-context/src/test/java/org/springframework/context/support/GenericApplicationContextTests.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.beans.factory.NoUniqueBeanDefinitionException;, +import org.springframework.beans.factory.support.RootBeanDefinition;, +, +import static org.junit.Assert.*;, +	@Test, +	public void getBeanForClass() {, +		GenericApplicationContext ac = new GenericApplicationContext();, +		ac.registerBeanDefinition("testBean", new RootBeanDefinition(String.class));, +		ac.refresh();, +, +		assertSame(ac.getBean("testBean"), ac.getBean(String.class));, +		assertSame(ac.getBean("testBean"), ac.getBean(CharSequence.class));, +, +		try {, +			assertSame(ac.getBean("testBean"), ac.getBean(Object.class));, +			fail("Should have thrown NoUniqueBeanDefinitionException");, +		}, +		catch (NoUniqueBeanDefinitionException ex) {, +			// expected, +		}, +	}, +]