[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConstructorArgumentValues.java, + * Copyright 2002-2013 the original author or authors., +	public ValueHolder getIndexedArgumentValue(int index, Class<?> requiredType) {, +	public ValueHolder getIndexedArgumentValue(int index, Class<?> requiredType, String requiredName) {, +	public ValueHolder getGenericArgumentValue(Class<?> requiredType) {, +	public ValueHolder getGenericArgumentValue(Class<?> requiredType, String requiredName) {, +	public ValueHolder getGenericArgumentValue(Class<?> requiredType, String requiredName, Set<ValueHolder> usedValueHolders) {, +	 * @param requiredType the parameter type to match, +	public ValueHolder getArgumentValue(int index, Class<?> requiredType) {, +	 * @param requiredType the parameter type to match, +	 * @param requiredName the parameter name to match, +	public ValueHolder getArgumentValue(int index, Class<?> requiredType, String requiredName) {, +	 * @param requiredType the parameter type to match (can be {@code null}, +	 * to find an untyped argument value), +	 * @param requiredName the parameter name to match (can be {@code null}, +	 * to find an unnamed argument value), +	public ValueHolder getArgumentValue(int index, Class<?> requiredType, String requiredName, Set<ValueHolder> usedValueHolders) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConstructorArgumentValues.java, + * Copyright 2002-2013 the original author or authors., +	public ValueHolder getIndexedArgumentValue(int index, Class<?> requiredType) {, +	public ValueHolder getIndexedArgumentValue(int index, Class<?> requiredType, String requiredName) {, +	public ValueHolder getGenericArgumentValue(Class<?> requiredType) {, +	public ValueHolder getGenericArgumentValue(Class<?> requiredType, String requiredName) {, +	public ValueHolder getGenericArgumentValue(Class<?> requiredType, String requiredName, Set<ValueHolder> usedValueHolders) {, +	 * @param requiredType the parameter type to match, +	public ValueHolder getArgumentValue(int index, Class<?> requiredType) {, +	 * @param requiredType the parameter type to match, +	 * @param requiredName the parameter name to match, +	public ValueHolder getArgumentValue(int index, Class<?> requiredType, String requiredName) {, +	 * @param requiredType the parameter type to match (can be {@code null}, +	 * to find an untyped argument value), +	 * @param requiredName the parameter name to match (can be {@code null}, +	 * to find an unnamed argument value), +	public ValueHolder getArgumentValue(int index, Class<?> requiredType, String requiredName, Set<ValueHolder> usedValueHolders) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +import org.springframework.beans.factory.config.ConstructorArgumentValues;, +				Class<?>[] paramTypes = factoryMethod.getParameterTypes();, +				String[] paramNames = null;, +				ParameterNameDiscoverer pnd = getParameterNameDiscoverer();, +				if (pnd != null) {, +					paramNames = pnd.getParameterNames(factoryMethod);, +				}, +				ConstructorArgumentValues cav = mbd.getConstructorArgumentValues();, +				Set<ConstructorArgumentValues.ValueHolder> usedValueHolders =, +						new HashSet<ConstructorArgumentValues.ValueHolder>(paramTypes.length);, +				Object[] args = new Object[paramTypes.length];, +				for (int i = 0; i < args.length; i++) {, +					ConstructorArgumentValues.ValueHolder valueHolder = cav.getArgumentValue(, +							i, paramTypes[i], (paramNames != null ? paramNames[i] : null), usedValueHolders);, +					if (valueHolder == null) {, +						valueHolder = cav.getGenericArgumentValue(null, null, usedValueHolders);, +					}, +					if (valueHolder != null) {, +						args[i] = valueHolder.getValue();, +						usedValueHolders.add(valueHolder);, +					}, +				}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConstructorArgumentValues.java, + * Copyright 2002-2013 the original author or authors., +	public ValueHolder getIndexedArgumentValue(int index, Class<?> requiredType) {, +	public ValueHolder getIndexedArgumentValue(int index, Class<?> requiredType, String requiredName) {, +	public ValueHolder getGenericArgumentValue(Class<?> requiredType) {, +	public ValueHolder getGenericArgumentValue(Class<?> requiredType, String requiredName) {, +	public ValueHolder getGenericArgumentValue(Class<?> requiredType, String requiredName, Set<ValueHolder> usedValueHolders) {, +	 * @param requiredType the parameter type to match, +	public ValueHolder getArgumentValue(int index, Class<?> requiredType) {, +	 * @param requiredType the parameter type to match, +	 * @param requiredName the parameter name to match, +	public ValueHolder getArgumentValue(int index, Class<?> requiredType, String requiredName) {, +	 * @param requiredType the parameter type to match (can be {@code null}, +	 * to find an untyped argument value), +	 * @param requiredName the parameter name to match (can be {@code null}, +	 * to find an unnamed argument value), +	public ValueHolder getArgumentValue(int index, Class<?> requiredType, String requiredName, Set<ValueHolder> usedValueHolders) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +import org.springframework.beans.factory.config.ConstructorArgumentValues;, +				Class<?>[] paramTypes = factoryMethod.getParameterTypes();, +				String[] paramNames = null;, +				ParameterNameDiscoverer pnd = getParameterNameDiscoverer();, +				if (pnd != null) {, +					paramNames = pnd.getParameterNames(factoryMethod);, +				}, +				ConstructorArgumentValues cav = mbd.getConstructorArgumentValues();, +				Set<ConstructorArgumentValues.ValueHolder> usedValueHolders =, +						new HashSet<ConstructorArgumentValues.ValueHolder>(paramTypes.length);, +				Object[] args = new Object[paramTypes.length];, +				for (int i = 0; i < args.length; i++) {, +					ConstructorArgumentValues.ValueHolder valueHolder = cav.getArgumentValue(, +							i, paramTypes[i], (paramNames != null ? paramNames[i] : null), usedValueHolders);, +					if (valueHolder == null) {, +						valueHolder = cav.getGenericArgumentValue(null, null, usedValueHolders);, +					}, +					if (valueHolder != null) {, +						args[i] = valueHolder.getValue();, +						usedValueHolders.add(valueHolder);, +					}, +				}, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/support/BeanFactoryGenericsTests.java, +, +	 * <p>See SPR-10411]