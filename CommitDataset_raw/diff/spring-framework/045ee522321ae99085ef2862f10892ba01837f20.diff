[+++ b/spring-test/src/main/java/org/springframework/test/util/ReflectionTestUtils.java, +					"Could not find field '%s' of type [%s] on %s or target class [%s]", name, type,, +					safeToString(ultimateTarget), targetClass));, +					"Setting field '%s' of type [%s] on %s or target class [%s] to value [%s]", name, type,, +					safeToString(ultimateTarget), targetClass, value));, +			throw new IllegalArgumentException(String.format("Could not find field '%s' on %s or target class [%s]",, +					name, safeToString(ultimateTarget), targetClass));, +			logger.debug(String.format("Getting field '%s' from %s or target class [%s]", name,, +					safeToString(ultimateTarget), targetClass));, +			throw new IllegalArgumentException(String.format(, +					"Could not find setter method '%s' on %s with parameter type [%s]", setterMethodName,, +					safeToString(target), type));, +			logger.debug(String.format("Invoking setter method '%s' on %s with value [%s]", setterMethodName,, +					safeToString(target), value));, +, +			throw new IllegalArgumentException(String.format(, +					"Could not find getter method '%s' on %s", getterMethodName, safeToString(target)));, +			logger.debug(String.format("Invoking getter method '%s' on %s", getterMethodName, safeToString(target)));, +				logger.debug(String.format("Invoking method '%s' on %s with arguments %s", name, safeToString(target),, +						ObjectUtils.nullSafeToString(args)));, +	private static String safeToString(Object target) {, +		try {, +			return String.format("target object [%s]", target);, +		}, +		catch (Exception ex) {, +			return String.format("target of type [%s] whose toString() method threw [%s]",, +				(target != null ? target.getClass().getName() : "unknown"), ex);, +		}, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/util/ReflectionTestUtils.java, +					"Could not find field '%s' of type [%s] on %s or target class [%s]", name, type,, +					safeToString(ultimateTarget), targetClass));, +					"Setting field '%s' of type [%s] on %s or target class [%s] to value [%s]", name, type,, +					safeToString(ultimateTarget), targetClass, value));, +			throw new IllegalArgumentException(String.format("Could not find field '%s' on %s or target class [%s]",, +					name, safeToString(ultimateTarget), targetClass));, +			logger.debug(String.format("Getting field '%s' from %s or target class [%s]", name,, +					safeToString(ultimateTarget), targetClass));, +			throw new IllegalArgumentException(String.format(, +					"Could not find setter method '%s' on %s with parameter type [%s]", setterMethodName,, +					safeToString(target), type));, +			logger.debug(String.format("Invoking setter method '%s' on %s with value [%s]", setterMethodName,, +					safeToString(target), value));, +, +			throw new IllegalArgumentException(String.format(, +					"Could not find getter method '%s' on %s", getterMethodName, safeToString(target)));, +			logger.debug(String.format("Invoking getter method '%s' on %s", getterMethodName, safeToString(target)));, +				logger.debug(String.format("Invoking method '%s' on %s with arguments %s", name, safeToString(target),, +						ObjectUtils.nullSafeToString(args)));, +	private static String safeToString(Object target) {, +		try {, +			return String.format("target object [%s]", target);, +		}, +		catch (Exception ex) {, +			return String.format("target of type [%s] whose toString() method threw [%s]",, +				(target != null ? target.getClass().getName() : "unknown"), ex);, +		}, +	}, +, +++ b/spring-test/src/test/java/org/springframework/test/util/ReflectionTestUtilsTests.java, +	private final LegacyEntity entity = new LegacyEntity();, +, +	@Test // SPR-14363, +	public void getFieldOnLegacyEntityWithSideEffectsInToString() {, +		Object collaborator = getField(entity, "collaborator");, +		assertNotNull(collaborator);, +	}, +, +	@Test // SPR-9571 and SPR-14363, +	public void setFieldOnLegacyEntityWithSideEffectsInToString() {, +		String testCollaborator = "test collaborator";, +		setField(entity, "collaborator", testCollaborator, Object.class);, +		assertTrue(entity.toString().contains(testCollaborator));, +	}, +, +	@Test // SPR-14363, +	public void invokeMethodOnLegacyEntityWithSideEffectsInToString() {, +		invokeMethod(entity, "configure", new Integer(42), "enigma");, +		assertEquals("number should have been configured", new Integer(42), entity.getNumber());, +		assertEquals("text should have been configured", "enigma", entity.getText());, +	}, +, +	@Test // SPR-14363, +	public void invokeGetterMethodOnLegacyEntityWithSideEffectsInToString() {, +		Object collaborator = invokeGetterMethod(entity, "collaborator");, +		assertNotNull(collaborator);, +	}, +, +	@Test // SPR-14363, +	public void invokeSetterMethodOnLegacyEntityWithSideEffectsInToString() {, +		String testCollaborator = "test collaborator";, +		invokeSetterMethod(entity, "collaborator", testCollaborator);, +		assertTrue(entity.toString().contains(testCollaborator));, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/util/ReflectionTestUtils.java, +					"Could not find field '%s' of type [%s] on %s or target class [%s]", name, type,, +					safeToString(ultimateTarget), targetClass));, +					"Setting field '%s' of type [%s] on %s or target class [%s] to value [%s]", name, type,]