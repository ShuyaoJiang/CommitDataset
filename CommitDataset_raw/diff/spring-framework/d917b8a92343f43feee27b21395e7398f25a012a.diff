[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/AbstractVersionStrategy.java, +import org.springframework.util.Assert;, + * @author Rossen Stoyanchev, +	private final VersionPathStrategy pathStrategy;, +, +, +	protected AbstractVersionStrategy(VersionPathStrategy pathStrategy) {, +		Assert.notNull(pathStrategy, "'pathStrategy' is required");, +		this.pathStrategy = pathStrategy;, +	}, +, +, +	public VersionPathStrategy getVersionPathStrategy() {, +		return this.pathStrategy;, +	}, +, +, +	@Override, +	public String extractVersion(String requestPath) {, +		return this.pathStrategy.extractVersion(requestPath);, +	}, +, +	@Override, +	public String removeVersion(String requestPath, String version) {, +		return this.pathStrategy.removeVersion(requestPath, version);, +	}, +, +	@Override, +	public String addVersion(String requestPath, String version) {, +		return this.pathStrategy.addVersion(requestPath, version);, +	}, +, +, +	 * A prefix-based {@code VersionPathStrategy},, +	 * e.g. {@code "{version}/path/foo.js"}., +	protected static class PrefixVersionPathStrategy implements VersionPathStrategy {, +, +		private final String prefix;, +, +, +		public PrefixVersionPathStrategy(String version) {, +			Assert.hasText(version, "'version' is required and must not be empty");, +			this.prefix = version;, +		}, +, +		@Override, +		public String extractVersion(String requestPath) {, +			return (requestPath.startsWith(this.prefix) ? this.prefix : null);, +		}, +, +		@Override, +		public String removeVersion(String requestPath, String version) {, +			return requestPath.substring(this.prefix.length());, +		}, +, +		@Override, +		public String addVersion(String path, String version) {, +			return (this.prefix.endsWith("/") || path.startsWith("/") ? this.prefix + path : this.prefix + "/" + path);, +		}, +, +	}, +, +	/**, +	 * File name-based {@code VersionPathStrategy},, +	 * e.g. {@code "path/foo-{version}.css"}., +	 */, +	protected static class FileNameVersionPathStrategy implements VersionPathStrategy {, +, +		private static final Pattern pattern = Pattern.compile("-(\\S*)\\.");, +, +, +		@Override, +		public String extractVersion(String requestPath) {, +				return null;, +		@Override, +		public String removeVersion(String requestPath, String version) {, +			return StringUtils.delete(requestPath, "-" + version);, +		@Override, +		public String addVersion(String requestPath, String version) {, +			String baseFilename = StringUtils.stripFilenameExtension(requestPath);, +			String extension = StringUtils.getFilenameExtension(requestPath);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/AbstractVersionStrategy.java, +import org.springframework.util.Assert;, + * @author Rossen Stoyanchev, +	private final VersionPathStrategy pathStrategy;, +, +, +	protected AbstractVersionStrategy(VersionPathStrategy pathStrategy) {, +		Assert.notNull(pathStrategy, "'pathStrategy' is required");, +		this.pathStrategy = pathStrategy;, +	}, +, +, +	public VersionPathStrategy getVersionPathStrategy() {, +		return this.pathStrategy;, +	}, +, +, +	@Override, +	public String extractVersion(String requestPath) {]