[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/DataSourceInitializer.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.util.Assert;, + * Used to {@linkplain #setDatabasePopulator set up} a database during, + * initialization and {@link #setDatabaseCleaner clean up} a database during, + * destruction., + * @author Sam Brannen, +	 * The {@link DataSource} for the database to populate when this component, +	 * is initialized and to clean up when this component is shut down., +	 * <p>This property is mandatory with no default provided., +	 * Set the {@link DatabasePopulator} to execute during the bean initialization, +	 * phase., +	 * @param databasePopulator the {@code DatabasePopulator} to use during, +	 * initialization, +	 * @see #setDatabaseCleaner, +	 * Set the {@link DatabasePopulator} to execute during the bean destruction, +	 * phase, cleaning up the database and leaving it in a known state for others., +	 * @param databaseCleaner the {@code DatabasePopulator} to use during destruction, +	 * @see #setDatabasePopulator, +	 * Flag to explicitly enable or disable the {@linkplain #setDatabasePopulator, +	 * database populator} and {@linkplain #setDatabaseCleaner database cleaner}., +	 * @param enabled {@code true} if the database populator and database cleaner, +	 * should be called on startup and shutdown, respectively, +	 * Use the {@linkplain #setDatabasePopulator database populator} to set up, +	 * the database., +		execute(this.databasePopulator);, +	 * Use the {@linkplain #setDatabaseCleaner database cleaner} to clean up the, +	 * database., +		execute(this.databaseCleaner);, +	}, +, +	private void execute(DatabasePopulator populator) {, +		Assert.state(dataSource != null, "DataSource must be set");, +		if (this.enabled && populator != null) {, +			DatabasePopulatorUtils.execute(populator, this.dataSource);]