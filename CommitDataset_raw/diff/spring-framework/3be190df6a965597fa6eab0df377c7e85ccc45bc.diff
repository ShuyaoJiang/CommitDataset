[+++ b/spring-jms/src/main/java/org/springframework/jms/connection/JmsTransactionManager.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/connection/JmsTransactionManager.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/connection/SingleConnectionFactory.java, + * Copyright 2002-2014 the original author or authors., +	 * adapting to JMS 1.0.2 style queue/topic mode if necessary., +++ b/spring-jms/src/main/java/org/springframework/jms/connection/JmsTransactionManager.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/connection/SingleConnectionFactory.java, + * Copyright 2002-2014 the original author or authors., +	 * adapting to JMS 1.0.2 style queue/topic mode if necessary., +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsOperations.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/connection/JmsTransactionManager.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/connection/SingleConnectionFactory.java, + * Copyright 2002-2014 the original author or authors., +	 * adapting to JMS 1.0.2 style queue/topic mode if necessary., +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsOperations.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java, + * Copyright 2002-2014 the original author or authors., +	 * @see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean), +	 * JMS MessageProducer., +	 * JMS MessageProducer., +++ b/spring-jms/src/main/java/org/springframework/jms/connection/JmsTransactionManager.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/connection/SingleConnectionFactory.java, + * Copyright 2002-2014 the original author or authors., +	 * adapting to JMS 1.0.2 style queue/topic mode if necessary., +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsOperations.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java, + * Copyright 2002-2014 the original author or authors., +	 * @see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean), +	 * JMS MessageProducer., +	 * JMS MessageProducer., +++ b/spring-jms/src/main/java/org/springframework/jms/core/ProducerCallback.java, + * Copyright 2002-2014 the original author or authors., + * supplied JMS {@link Session} and {@link MessageProducer}., +++ b/spring-jms/src/main/java/org/springframework/jms/connection/JmsTransactionManager.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/connection/SingleConnectionFactory.java, + * Copyright 2002-2014 the original author or authors., +	 * adapting to JMS 1.0.2 style queue/topic mode if necessary., +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsOperations.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java, + * Copyright 2002-2014 the original author or authors., +	 * @see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean), +	 * JMS MessageProducer., +	 * JMS MessageProducer., +++ b/spring-jms/src/main/java/org/springframework/jms/core/ProducerCallback.java, + * Copyright 2002-2014 the original author or authors., + * supplied JMS {@link Session} and {@link MessageProducer}., +++ b/spring-jms/src/main/java/org/springframework/jms/remoting/JmsInvokerClientInterceptor.java, + * Copyright 2002-2014 the original author or authors., +		return getConnectionFactory().createConnection();, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/JmsTransactionManager.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/connection/SingleConnectionFactory.java, + * Copyright 2002-2014 the original author or authors., +	 * adapting to JMS 1.0.2 style queue/topic mode if necessary., +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsOperations.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java, + * Copyright 2002-2014 the original author or authors., +	 * @see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean), +	 * JMS MessageProducer., +	 * JMS MessageProducer., +++ b/spring-jms/src/main/java/org/springframework/jms/core/ProducerCallback.java, + * Copyright 2002-2014 the original author or authors., + * supplied JMS {@link Session} and {@link MessageProducer}., +++ b/spring-jms/src/main/java/org/springframework/jms/remoting/JmsInvokerClientInterceptor.java, + * Copyright 2002-2014 the original author or authors., +		return getConnectionFactory().createConnection();, +++ b/spring-jms/src/main/java/org/springframework/jms/support/JmsAccessor.java, + * Copyright 2002-2014 the original author or authors., +	 * use {@link #setSessionAcknowledgeMode(int)} instead., +	 * <p>Note that that inside an EJB, the parameters to the, +	 * {@code create(Queue/Topic)Session(boolean transacted, int acknowledgeMode)} method, +++ b/spring-jms/src/main/java/org/springframework/jms/connection/JmsTransactionManager.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/connection/SingleConnectionFactory.java, + * Copyright 2002-2014 the original author or authors., +	 * adapting to JMS 1.0.2 style queue/topic mode if necessary., +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsOperations.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java, + * Copyright 2002-2014 the original author or authors., +	 * @see javax.jms.Session#createConsumer(javax.jms.Destination, String, boolean), +	 * JMS MessageProducer., +	 * JMS MessageProducer., +++ b/spring-jms/src/main/java/org/springframework/jms/core/ProducerCallback.java, + * Copyright 2002-2014 the original author or authors., + * supplied JMS {@link Session} and {@link MessageProducer}., +++ b/spring-jms/src/main/java/org/springframework/jms/remoting/JmsInvokerClientInterceptor.java, + * Copyright 2002-2014 the original author or authors., +		return getConnectionFactory().createConnection();]