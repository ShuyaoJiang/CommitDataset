[+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * <li>A {@link org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter}, + * can be used to write multiple objects to the response asynchronously;, + * also supported as the body within {@code ResponseEntity}.</li>, + * <li>An {@link org.springframework.web.servlet.mvc.method.annotation.SseEmitter}, + * can be used to write Server-Sent Events to the response asynchronously;, + * also supported as the body within {@code ResponseEntity}.</li>, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * <li>A {@link org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter}, + * can be used to write multiple objects to the response asynchronously;, + * also supported as the body within {@code ResponseEntity}.</li>, + * <li>An {@link org.springframework.web.servlet.mvc.method.annotation.SseEmitter}, + * can be used to write Server-Sent Events to the response asynchronously;, + * also supported as the body within {@code ResponseEntity}.</li>, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java, +		handlers.add(new ResponseBodyEmitterReturnValueHandler(getMessageConverters()));, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * <li>A {@link org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter}, + * can be used to write multiple objects to the response asynchronously;, + * also supported as the body within {@code ResponseEntity}.</li>, + * <li>An {@link org.springframework.web.servlet.mvc.method.annotation.SseEmitter}, + * can be used to write Server-Sent Events to the response asynchronously;, + * also supported as the body within {@code ResponseEntity}.</li>, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java, +		handlers.add(new ResponseBodyEmitterReturnValueHandler(getMessageConverters()));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter.java, +/*, + * Copyright 2002-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.web.servlet.mvc.method.annotation;, +, +import java.io.IOException;, +import java.util.LinkedHashMap;, +import java.util.Map;, +, +import org.springframework.http.MediaType;, +import org.springframework.http.server.ServerHttpResponse;, +import org.springframework.util.Assert;, +, +, +/**, + * A controller method return value type for asynchronous request processing, + * where one or more objects are written to the response. While, + * {@link org.springframework.web.context.request.async.DeferredResult DeferredResult}, + * is used to produce a single result, a {@code ResponseBodyEmitter} can be used, + * to send multiple objects where each object is written with a compatible, + * {@link org.springframework.http.converter.HttpMessageConverter HttpMessageConverter}., + *, + * <p>Supported as a return type on its own as well as within a, + * {@link org.springframework.http.ResponseEntity ResponseEntity}., + *, + * <pre>, + * &#064;RequestMapping(value="/stream", method=RequestMethod.GET), + * public ResponseBodyEmitter handle() {, + * 	ResponseBodyEmitter emitter = new ResponseBodyEmitter();, + * 	// Pass the emitter to another component..., + * 	return emitter;, + * }, + *, + * // in another thread, + * emitter.send(foo1);, + *, + * // and again, + * emitter.send(foo2);, + *, + * // and done, + * emitter.complete();, + * </pre>, + *, + * <p><strong>Note:</strong> this class is not thread-safe. Callers must ensure, + * that use from multiple threads is synchronized., + *, + * @author Rossen Stoyanchev, + * @since 4.2, + */, +public class ResponseBodyEmitter {, +, +	private Handler handler;, +, +	/* Cache for objects sent before handler is set. */, +	private final Map<Object, MediaType> initHandlerCache = new LinkedHashMap<Object, MediaType>(10);, +, +	private volatile boolean complete;, +, +	private Throwable failure;, +, +, +	/**]