[+++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +	private final List<HandlerMethodArgumentResolver> customArgumentResolvers = new ArrayList<HandlerMethodArgumentResolver>(4);, +	private final List<HandlerMethodReturnValueHandler> customReturnValueHandlers = new ArrayList<HandlerMethodReturnValueHandler>(4);, +		this.customArgumentResolvers.clear();, +		if (customArgumentResolvers != null) {, +			this.customArgumentResolvers.addAll(customArgumentResolvers);, +		}, +	/**, +	 * Return the configured custom argument resolvers, if any., +	 */, +		this.customReturnValueHandlers.clear();, +		if (customReturnValueHandlers != null) {, +			this.customReturnValueHandlers.addAll(customReturnValueHandlers);, +		}, +	/**, +	 * Return the configured custom return value handlers, if any., +	 */, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +	private final List<HandlerMethodArgumentResolver> customArgumentResolvers = new ArrayList<HandlerMethodArgumentResolver>(4);, +	private final List<HandlerMethodReturnValueHandler> customReturnValueHandlers = new ArrayList<HandlerMethodReturnValueHandler>(4);, +		this.customArgumentResolvers.clear();, +		if (customArgumentResolvers != null) {, +			this.customArgumentResolvers.addAll(customArgumentResolvers);, +		}, +	/**, +	 * Return the configured custom argument resolvers, if any., +	 */, +		this.customReturnValueHandlers.clear();, +		if (customReturnValueHandlers != null) {, +			this.customReturnValueHandlers.addAll(customReturnValueHandlers);, +		}, +	/**, +	 * Return the configured custom return value handlers, if any., +	 */, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java, +import org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolver;, +import org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandler;, +import org.springframework.util.CollectionUtils;, +		List<HandlerMethodArgumentResolver> argumentResolvers = new ArrayList<HandlerMethodArgumentResolver>();, +		addArgumentResolvers(argumentResolvers);, +		handler.setCustomArgumentResolvers(argumentResolvers);, +, +		List<HandlerMethodReturnValueHandler> returnValueHandlers = new ArrayList<HandlerMethodReturnValueHandler>();, +		addReturnValueHandlers(returnValueHandlers);, +		handler.setCustomReturnValueHandlers(returnValueHandlers);, +, +	protected void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {, +	}, +, +	protected void addReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {, +	}, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +	private final List<HandlerMethodArgumentResolver> customArgumentResolvers = new ArrayList<HandlerMethodArgumentResolver>(4);, +	private final List<HandlerMethodReturnValueHandler> customReturnValueHandlers = new ArrayList<HandlerMethodReturnValueHandler>(4);, +		this.customArgumentResolvers.clear();, +		if (customArgumentResolvers != null) {, +			this.customArgumentResolvers.addAll(customArgumentResolvers);, +		}, +	/**, +	 * Return the configured custom argument resolvers, if any., +	 */, +		this.customReturnValueHandlers.clear();, +		if (customReturnValueHandlers != null) {, +			this.customReturnValueHandlers.addAll(customReturnValueHandlers);, +		}, +	/**, +	 * Return the configured custom return value handlers, if any., +	 */, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java, +import org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolver;, +import org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandler;, +import org.springframework.util.CollectionUtils;, +		List<HandlerMethodArgumentResolver> argumentResolvers = new ArrayList<HandlerMethodArgumentResolver>();, +		addArgumentResolvers(argumentResolvers);, +		handler.setCustomArgumentResolvers(argumentResolvers);, +, +		List<HandlerMethodReturnValueHandler> returnValueHandlers = new ArrayList<HandlerMethodReturnValueHandler>();, +		addReturnValueHandlers(returnValueHandlers);, +		handler.setCustomReturnValueHandlers(returnValueHandlers);, +, +	protected void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {, +	}, +, +	protected void addReturnValueHandlers(List<HandlerMethodReturnValueHandler> returnValueHandlers) {, +	}, +, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/config/MessageBrokerConfigurationTests.java, +import org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolver;, +import org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandler;, +import static org.mockito.Mockito.mock;, +	private AnnotationConfigApplicationContext customContext;, +		this.customContext = new AnnotationConfigApplicationContext();, +		this.customContext.register(CustomConfig.class);, +		this.customContext.refresh();, +		AbstractSubscribableChannel channel = this.customContext.getBean(, +		ThreadPoolTaskExecutor taskExecutor = this.customContext.getBean(, +		AbstractSubscribableChannel channel = this.customContext.getBean(, +		ThreadPoolTaskExecutor taskExecutor = this.customContext.getBean(, +		AbstractSubscribableChannel channel = this.customContext.getBean(]