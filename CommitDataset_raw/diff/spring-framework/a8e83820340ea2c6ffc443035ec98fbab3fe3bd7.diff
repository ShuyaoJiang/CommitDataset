[+++ b/org.springframework.web/src/main/java/org/springframework/http/HttpHeaders.java, +	private static final String CACHE_CONTROL = "Cache-Control";, +, +	private static final String IF_MODIFIED_SINCE = "If-Modified-Since";, +, +	private static final String PRAGMA = "Pragma";, +, +	 * Sets the (new) value of the {@code Cache-Control} header., +	 * @param cacheControl the value of the header, +	 */, +	public void setCacheControl(String cacheControl) {, +		set(CACHE_CONTROL, cacheControl);, +	}, +, +	/**, +	 * Returns the value of the {@code Cache-Control} header., +	 * @return the value of the header, +	 */, +	public String getCacheControl() {, +		return getFirst(CACHE_CONTROL);, +	}, +, +	/**, +	 * Sets the (new) value of the {@code If-Modified-Since} header., +	 * <p>The date should be specified as the number of milliseconds since January 1, 1970 GMT., +	 * @param ifModifiedSince the new value of the header, +	 */, +	public void setIfModifiedSince(long ifModifiedSince) {, +		setDate(IF_MODIFIED_SINCE, ifModifiedSince);, +	}, +, +	/**, +	 * Returns the value of the {@code IfModifiedSince} header., +	 * <p>The date is returned as the number of milliseconds since January 1, 1970 GMT. Returns -1 when the date is unknown., +	 * @return the header value, +	 */, +	public long getIfNotModifiedSince() {, +		return getFirstDate(IF_MODIFIED_SINCE);, +	}, +, +	/**, +	/**, +	 * Sets the (new) value of the {@code Pragma} header., +	 * @param pragma the value of the header, +	 */, +	public void setPragma(String pragma) {, +		set(PRAGMA, pragma);, +	}, +, +	/**, +	 * Returns the value of the {@code Pragma} header., +	 * @return the value of the header, +	 */, +	public String getPragma() {, +		return getFirst(PRAGMA);, +	}, +, +++ b/org.springframework.web/src/main/java/org/springframework/http/HttpHeaders.java, +	private static final String CACHE_CONTROL = "Cache-Control";, +, +	private static final String IF_MODIFIED_SINCE = "If-Modified-Since";, +, +	private static final String PRAGMA = "Pragma";, +, +	 * Sets the (new) value of the {@code Cache-Control} header., +	 * @param cacheControl the value of the header, +	 */, +	public void setCacheControl(String cacheControl) {, +		set(CACHE_CONTROL, cacheControl);, +	}, +, +	/**, +	 * Returns the value of the {@code Cache-Control} header., +	 * @return the value of the header, +	 */, +	public String getCacheControl() {, +		return getFirst(CACHE_CONTROL);, +	}, +, +	/**, +	 * Sets the (new) value of the {@code If-Modified-Since} header., +	 * <p>The date should be specified as the number of milliseconds since January 1, 1970 GMT., +	 * @param ifModifiedSince the new value of the header, +	 */, +	public void setIfModifiedSince(long ifModifiedSince) {, +		setDate(IF_MODIFIED_SINCE, ifModifiedSince);, +	}, +, +	/**, +	 * Returns the value of the {@code IfModifiedSince} header., +	 * <p>The date is returned as the number of milliseconds since January 1, 1970 GMT. Returns -1 when the date is unknown., +	 * @return the header value, +	 */, +	public long getIfNotModifiedSince() {, +		return getFirstDate(IF_MODIFIED_SINCE);, +	}, +, +	/**, +	/**, +	 * Sets the (new) value of the {@code Pragma} header.]