[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +import org.w3c.dom.Element;, +		CompositeComponentDefinition compDefinition = new CompositeComponentDefinition(element.getTagName(), source);, +		parserContext.pushContainingComponent(compDefinition);, +		, +		annMappingDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +		bindingDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +		annAdapterDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +			conversionDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +			parserContext.registerComponent(new BeanComponentDefinition(conversionDef, conversionName));, +			validatorDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +			parserContext.registerComponent(new BeanComponentDefinition(validatorDef, validatorName));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +import org.w3c.dom.Element;, +		CompositeComponentDefinition compDefinition = new CompositeComponentDefinition(element.getTagName(), source);, +		parserContext.pushContainingComponent(compDefinition);, +		, +		annMappingDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +		bindingDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +		annAdapterDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +			conversionDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +			parserContext.registerComponent(new BeanComponentDefinition(conversionDef, conversionName));, +			validatorDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +			parserContext.registerComponent(new BeanComponentDefinition(validatorDef, validatorName));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/InterceptorsBeanDefinitionParser.java, +import org.springframework.beans.factory.parsing.BeanComponentDefinition;, +import org.springframework.beans.factory.parsing.CompositeComponentDefinition;, +		CompositeComponentDefinition compDefinition = new CompositeComponentDefinition(element.getTagName(), parserContext.extractSource(element));, +		parserContext.pushContainingComponent(compDefinition);, +		, +			mappedInterceptorDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +			String mappedInterceptorName = parserContext.getReaderContext().registerWithGeneratedName(mappedInterceptorDef);, +			parserContext.registerComponent(new BeanComponentDefinition(mappedInterceptorDef, mappedInterceptorName));, +		, +		parserContext.popAndRegisterContainingComponent();, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +import org.w3c.dom.Element;, +		CompositeComponentDefinition compDefinition = new CompositeComponentDefinition(element.getTagName(), source);, +		parserContext.pushContainingComponent(compDefinition);, +		, +		annMappingDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +		bindingDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +		annAdapterDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +			conversionDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +			parserContext.registerComponent(new BeanComponentDefinition(conversionDef, conversionName));, +			validatorDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +			parserContext.registerComponent(new BeanComponentDefinition(validatorDef, validatorName));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/InterceptorsBeanDefinitionParser.java, +import org.springframework.beans.factory.parsing.BeanComponentDefinition;, +import org.springframework.beans.factory.parsing.CompositeComponentDefinition;, +		CompositeComponentDefinition compDefinition = new CompositeComponentDefinition(element.getTagName(), parserContext.extractSource(element));, +		parserContext.pushContainingComponent(compDefinition);, +		, +			mappedInterceptorDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +			String mappedInterceptorName = parserContext.getReaderContext().registerWithGeneratedName(mappedInterceptorDef);, +			parserContext.registerComponent(new BeanComponentDefinition(mappedInterceptorDef, mappedInterceptorName));, +		, +		parserContext.popAndRegisterContainingComponent();, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java, +import org.springframework.beans.factory.parsing.BeanComponentDefinition;, +			handlerAdapterDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +			parserContext.registerComponent(new BeanComponentDefinition(handlerAdapterDef, handlerAdapterBeanName));, +			handlerMappingDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +			parserContext.registerComponent(new BeanComponentDefinition(handlerMappingDef, handlerMappingBeanName));]