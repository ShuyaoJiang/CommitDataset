[+++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +import java.util.Map;, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +			MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +import java.util.Map;, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +			MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +import java.util.Map;, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +import java.util.Map;, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +			MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +import java.util.Map;, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractSingleValueEncoder.java, +import java.util.Map;, +, +			ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +						return encode(t, bufferFactory, elementType, mimeType, hints);, +			ResolvableType type, MimeType mimeType, Map<String, Object> hints) throws Exception;, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +import java.util.Map;, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +			MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +import java.util.Map;, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractSingleValueEncoder.java, +import java.util.Map;, +, +			ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +						return encode(t, bufferFactory, elementType, mimeType, hints);, +			ResolvableType type, MimeType mimeType, Map<String, Object> hints) throws Exception;, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferDecoder.java, +import java.util.Map;, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +			MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +import java.util.Map;, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +			MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +import java.util.Map;, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractSingleValueEncoder.java, +import java.util.Map;, +, +			ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +						return encode(t, bufferFactory, elementType, mimeType, hints);, +			ResolvableType type, MimeType mimeType, Map<String, Object> hints) throws Exception;, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferDecoder.java, +import java.util.Map;, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +			MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +import java.util.Map;, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +			Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +import java.util.Map;, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +			MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +import java.util.Map;, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractSingleValueEncoder.java, +import java.util.Map;, +, +			ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +						return encode(t, bufferFactory, elementType, mimeType, hints);, +			ResolvableType type, MimeType mimeType, Map<String, Object> hints) throws Exception;, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferDecoder.java, +import java.util.Map;, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +			MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +import java.util.Map;, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +			Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +import java.util.Map;, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +			MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +import java.util.Map;, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +			MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +import java.util.Map;, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractSingleValueEncoder.java, +import java.util.Map;, +, +			ResolvableType elementType, MimeType mimeType, Map<String, Object> hints) {, +						return encode(t, bufferFactory, elementType, mimeType, hints);, +			ResolvableType type, MimeType mimeType, Map<String, Object> hints) throws Exception;]