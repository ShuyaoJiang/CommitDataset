[+++ b/org.springframework.web/src/main/java/org/springframework/http/client/InterceptingClientHttpRequest.java, +, +++ b/org.springframework.web/src/main/java/org/springframework/http/client/InterceptingClientHttpRequest.java, +, +++ b/org.springframework.web/src/test/java/org/springframework/http/client/StreamingSimpleHttpRequestFactoryTests.java, +import java.io.IOException;, +import java.util.Collections;, +import org.springframework.http.HttpHeaders;, +import org.springframework.http.HttpRequest;, +	// SPR-8809, +	@Test, +	public void interceptor() throws Exception {, +		final String headerName = "MyHeader";, +		final String headerValue = "MyValue";, +		ClientHttpRequestInterceptor interceptor = new ClientHttpRequestInterceptor() {, +			public ClientHttpResponse intercept(HttpRequest request, byte[] body, ClientHttpRequestExecution execution), +					throws IOException {, +				request.getHeaders().add(headerName, headerValue);, +				return execution.execute(request, body);, +			}, +		};, +		InterceptingClientHttpRequestFactory factory = new InterceptingClientHttpRequestFactory(createRequestFactory(),, +				Collections.singletonList(interceptor));, +, +		ClientHttpResponse response = null;, +		try {, +			ClientHttpRequest request = factory.createRequest(new URI(baseUrl + "/echo"), HttpMethod.POST);, +			response = request.execute();, +			assertEquals("Invalid response status", HttpStatus.OK, response.getStatusCode());, +			HttpHeaders responseHeaders = response.getHeaders();, +			assertEquals("Custom header invalid", headerValue, responseHeaders.getFirst(headerName));, +		}, +		finally {, +			if (response != null) {, +				response.close();, +			}, +		}, +	}, +]