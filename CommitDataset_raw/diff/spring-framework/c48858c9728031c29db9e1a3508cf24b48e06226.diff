[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/PrintingResultHandler.java, + * Copyright 2002-2015 the original author or authors., +, +		this.printer.printValue("Async started", request.isAsyncStarted());, +		Object asyncResult = null;, +		try {, +			asyncResult = result.getAsyncResult(0);, +		}, +		catch (IllegalStateException ex) {, +			// Not set, +		}, +		this.printer.printValue("Async result", asyncResult);, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/PrintingResultHandler.java, + * Copyright 2002-2015 the original author or authors., +, +		this.printer.printValue("Async started", request.isAsyncStarted());, +		Object asyncResult = null;, +		try {, +			asyncResult = result.getAsyncResult(0);, +		}, +		catch (IllegalStateException ex) {, +			// Not set, +		}, +		this.printer.printValue("Async result", asyncResult);, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/standalone/AsyncTests.java, +import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;, +	// SPR-12735, +, +	@Test, +	public void testPrintAsyncResult() throws Exception {, +		MvcResult mvcResult = this.mockMvc.perform(get("/1").param("deferredResult", "true")), +				.andDo(print()), +				.andExpect(request().asyncStarted()), +				.andReturn();, +, +		this.asyncController.onMessage("Joe");, +, +		this.mockMvc.perform(asyncDispatch(mvcResult)), +				.andDo(print()), +				.andExpect(status().isOk()), +				.andExpect(content().contentType(MediaType.APPLICATION_JSON)), +				.andExpect(content().string("{\"name\":\"Joe\",\"someDouble\":0.0,\"someBoolean\":false}"));, +	}, +, +]