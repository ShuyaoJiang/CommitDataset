[+++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.java, + * Copyright 2002-2018 the original author or authors., +import java.util.ArrayList;, +					List<Advisor> advisors = new ArrayList<>();, +					aspectNames = new ArrayList<>();, +		List<Advisor> advisors = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.java, + * Copyright 2002-2018 the original author or authors., +import java.util.ArrayList;, +					List<Advisor> advisors = new ArrayList<>();, +					aspectNames = new ArrayList<>();, +		List<Advisor> advisors = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.java, +import java.util.ArrayList;, +		List<Advisor> advisors = new ArrayList<>();, +		final List<Method> methods = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.java, + * Copyright 2002-2018 the original author or authors., +import java.util.ArrayList;, +					List<Advisor> advisors = new ArrayList<>();, +					aspectNames = new ArrayList<>();, +		List<Advisor> advisors = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.java, +import java.util.ArrayList;, +		List<Advisor> advisors = new ArrayList<>();, +		final List<Method> methods = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyCreatorSupport.java, +	private final List<AdvisedSupportListener> listeners = new LinkedList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.java, + * Copyright 2002-2018 the original author or authors., +import java.util.ArrayList;, +					List<Advisor> advisors = new ArrayList<>();, +					aspectNames = new ArrayList<>();, +		List<Advisor> advisors = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.java, +import java.util.ArrayList;, +		List<Advisor> advisors = new ArrayList<>();, +		final List<Method> methods = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyCreatorSupport.java, +	private final List<AdvisedSupportListener> listeners = new LinkedList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.java, + * Copyright 2002-2018 the original author or authors., +import java.util.ArrayList;, +			return new ArrayList<>();, +		List<Advisor> advisors = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.java, + * Copyright 2002-2018 the original author or authors., +import java.util.ArrayList;, +					List<Advisor> advisors = new ArrayList<>();, +					aspectNames = new ArrayList<>();, +		List<Advisor> advisors = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.java, +import java.util.ArrayList;, +		List<Advisor> advisors = new ArrayList<>();, +		final List<Method> methods = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyCreatorSupport.java, +	private final List<AdvisedSupportListener> listeners = new LinkedList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.java, + * Copyright 2002-2018 the original author or authors., +import java.util.ArrayList;, +			return new ArrayList<>();, +		List<Advisor> advisors = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/support/AopUtils.java, +import java.util.ArrayList;, +		List<Advisor> eligibleAdvisors = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.java, + * Copyright 2002-2018 the original author or authors., +import java.util.ArrayList;, +					List<Advisor> advisors = new ArrayList<>();, +					aspectNames = new ArrayList<>();, +		List<Advisor> advisors = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.java, +import java.util.ArrayList;, +		List<Advisor> advisors = new ArrayList<>();, +		final List<Method> methods = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyCreatorSupport.java, +	private final List<AdvisedSupportListener> listeners = new LinkedList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.java, + * Copyright 2002-2018 the original author or authors., +import java.util.ArrayList;, +			return new ArrayList<>();, +		List<Advisor> advisors = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/support/AopUtils.java, +import java.util.ArrayList;, +		List<Advisor> eligibleAdvisors = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/support/NameMatchMethodPointcut.java, + * Copyright 2002-2018 the original author or authors., +import java.util.ArrayList;, +	private List<String> mappedNames = new ArrayList<>();, +	public void setMappedNames(String... mappedNames) {, +		this.mappedNames = new ArrayList<>(Arrays.asList(mappedNames));, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.java, + * Copyright 2002-2018 the original author or authors., +import java.util.ArrayList;, +					List<Advisor> advisors = new ArrayList<>();, +					aspectNames = new ArrayList<>();, +		List<Advisor> advisors = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.java, +import java.util.ArrayList;, +		List<Advisor> advisors = new ArrayList<>();]