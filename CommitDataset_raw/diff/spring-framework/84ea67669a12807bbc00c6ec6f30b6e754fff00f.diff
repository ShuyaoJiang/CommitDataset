[+++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/ModelAndView.java, + * Copyright 2002-2009 the original author or authors., +import org.springframework.util.CollectionUtils;, +	private boolean cleared = false;, +	 * Return whether this ModelAndView object is empty,, +		return (this.view == null && CollectionUtils.isEmpty(this.model));, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/ModelAndView.java, + * Copyright 2002-2009 the original author or authors., +import org.springframework.util.CollectionUtils;, +	private boolean cleared = false;, +	 * Return whether this ModelAndView object is empty,, +		return (this.view == null && CollectionUtils.isEmpty(this.model));, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.java, + * Copyright 2002-2009 the original author or authors., +				(modelAndView != null && !modelAndView.wasCleared() ? modelAndView.getModelMap() : null));, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/ModelAndView.java, + * Copyright 2002-2009 the original author or authors., +import org.springframework.util.CollectionUtils;, +	private boolean cleared = false;, +	 * Return whether this ModelAndView object is empty,, +		return (this.view == null && CollectionUtils.isEmpty(this.model));, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.java, + * Copyright 2002-2009 the original author or authors., +				(modelAndView != null && !modelAndView.wasCleared() ? modelAndView.getModelMap() : null));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/ModelAndView.java, + * Copyright 2002-2009 the original author or authors., +import org.springframework.util.CollectionUtils;, +	private boolean cleared = false;, +	 * Return whether this ModelAndView object is empty,, +		return (this.view == null && CollectionUtils.isEmpty(this.model));, +	 * <p>Returns <code>false</code> if any additional state was added to the instance, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/ModelAndView.java, + * Copyright 2002-2009 the original author or authors., +import org.springframework.util.CollectionUtils;, +	private boolean cleared = false;, +	 * Return whether this ModelAndView object is empty,, +		return (this.view == null && CollectionUtils.isEmpty(this.model));, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/handler/WebRequestHandlerInterceptorAdapter.java, + * Copyright 2002-2009 the original author or authors., +				(modelAndView != null && !modelAndView.wasCleared() ? modelAndView.getModelMap() : null));, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/ModelAndView.java, + * Copyright 2002-2009 the original author or authors., +import org.springframework.util.CollectionUtils;, +	private boolean cleared = false;, +	 * Return whether this ModelAndView object is empty,, +		return (this.view == null && CollectionUtils.isEmpty(this.model));, +	 * <p>Returns <code>false</code> if any additional state was added to the instance, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/handler/WebRequestHandlerInterceptorAdapter.java, + * Copyright 2002-2009 the original author or authors., +				(modelAndView != null && !modelAndView.wasCleared() ? modelAndView.getModelMap() : null));]