[+++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, + * Copyright 2002-2011 the original author or authors., +	 * Get the name of the single out parameter for this call., +	 * If there are multiple parameters, the name of the first one will be returned., +	 * Get the List of SqlParameter objects to be used in call execution., +	 * Initialize this class with metadata from the database., +	 * Process the list of parameters provided, and if procedure column metadata is used,, +	 * the parameters will be matched against the metadata information and any missing, +	 * ones will be automatically included., +	 * Reconcile the provided parameters with available metadata and add new ones where appropriate., +		// Get the names of the meta data parameters, +		String catalogNameToUse;, +		String schemaNameToUse;, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, + * Copyright 2002-2011 the original author or authors., +	 * Get the name of the single out parameter for this call., +	 * If there are multiple parameters, the name of the first one will be returned., +	 * Get the List of SqlParameter objects to be used in call execution., +	 * Initialize this class with metadata from the database., +	 * Process the list of parameters provided, and if procedure column metadata is used,, +	 * the parameters will be matched against the metadata information and any missing, +	 * ones will be automatically included., +	 * Reconcile the provided parameters with available metadata and add new ones where appropriate., +		// Get the names of the meta data parameters, +		String catalogNameToUse;, +		String schemaNameToUse;, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java, + * Copyright 2002-2011 the original author or authors., +	public void initializeWithProcedureColumnMetaData(DatabaseMetaData databaseMetaData, String catalogName,, +			String schemaName, String procedureName) throws SQLException {, +		return this.callParameterMetaData;, +		if (procedureName == null) {, +		}, +		else if (isStoresUpperCaseIdentifiers()) {, +		}, +		else if(isStoresLowerCaseIdentifiers()) {, +		}, +		else {, +	}, +		if (catalogName == null) {, +		}, +		else if (isStoresUpperCaseIdentifiers()) {, +		}, +		else if(isStoresLowerCaseIdentifiers()) {, +		}, +		else {, +	}, +		if (schemaName == null) {, +		}, +		else if (isStoresUpperCaseIdentifiers()) {, +		}, +		else if(isStoresLowerCaseIdentifiers()) {, +		}, +		else {, +	}, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, + * Copyright 2002-2011 the original author or authors., +	 * Get the name of the single out parameter for this call., +	 * If there are multiple parameters, the name of the first one will be returned., +	 * Get the List of SqlParameter objects to be used in call execution., +	 * Initialize this class with metadata from the database., +	 * Process the list of parameters provided, and if procedure column metadata is used,, +	 * the parameters will be matched against the metadata information and any missing, +	 * ones will be automatically included., +	 * Reconcile the provided parameters with available metadata and add new ones where appropriate., +		// Get the names of the meta data parameters, +		String catalogNameToUse;, +		String schemaNameToUse;, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java, + * Copyright 2002-2011 the original author or authors., +	public void initializeWithProcedureColumnMetaData(DatabaseMetaData databaseMetaData, String catalogName,, +			String schemaName, String procedureName) throws SQLException {, +		return this.callParameterMetaData;, +		if (procedureName == null) {, +		}, +		else if (isStoresUpperCaseIdentifiers()) {, +		}, +		else if(isStoresLowerCaseIdentifiers()) {, +		}, +		else {, +	}, +		if (catalogName == null) {, +		}, +		else if (isStoresUpperCaseIdentifiers()) {, +		}, +		else if(isStoresLowerCaseIdentifiers()) {, +		}, +		else {, +	}, +		if (schemaName == null) {, +		}, +		else if (isStoresUpperCaseIdentifiers()) {, +		}, +		else if(isStoresLowerCaseIdentifiers()) {, +		}, +		else {, +	}, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java, + * Copyright 2002-2011 the original author or authors., +	 * Get the call string that should be used based on parameters and meta data.]