[+++ b/spring-test/src/main/java/org/springframework/test/context/CacheAwareContextLoaderDelegate.java, + * Copyright 2002-2019 the original author or authors., +	 * Determine if the {@linkplain ApplicationContext application context} for, +	 * the supplied {@link MergedContextConfiguration} has been loaded (i.e.,, +	 * is present in the {@code ContextCache})., +	 * <p>Implementations of this method <strong>must not</strong> load the, +	 * application context as a side effect. In addition, implementations of, +	 * this method should not log the cache statistics via, +	 * {@link org.springframework.test.context.cache.ContextCache#logStatistics()}., +	 * <p>The default implementation of this method always returns {@code false}., +	 * Custom {@code CacheAwareContextLoaderDelegate} implementations are, +	 * therefore highly encouraged to override this method with a more meaningful, +	 * implementation. Note that the standard {@code CacheAwareContextLoaderDelegate}, +	 * implementation in Spring overrides this method appropriately., +	 * @param mergedContextConfiguration the merged context configuration used, +	 * to load the application context; never {@code null}, +	 * @return {@code true} if the the application context has been loaded, +	 * @since 5.2, +	 * @see #loadContext, +	 * @see #closeContext, +	 */, +	default boolean isContextLoaded(MergedContextConfiguration mergedContextConfiguration) {, +		return false;, +	}, +, +	/**, +	 * @see #isContextLoaded, +	 * @see #closeContext, +	 * @see #isContextLoaded, +	 * @see #loadContext, +++ b/spring-test/src/main/java/org/springframework/test/context/CacheAwareContextLoaderDelegate.java, + * Copyright 2002-2019 the original author or authors., +	 * Determine if the {@linkplain ApplicationContext application context} for, +	 * the supplied {@link MergedContextConfiguration} has been loaded (i.e.,, +	 * is present in the {@code ContextCache})., +	 * <p>Implementations of this method <strong>must not</strong> load the, +	 * application context as a side effect. In addition, implementations of, +	 * this method should not log the cache statistics via, +	 * {@link org.springframework.test.context.cache.ContextCache#logStatistics()}., +	 * <p>The default implementation of this method always returns {@code false}., +	 * Custom {@code CacheAwareContextLoaderDelegate} implementations are, +	 * therefore highly encouraged to override this method with a more meaningful, +	 * implementation. Note that the standard {@code CacheAwareContextLoaderDelegate}, +	 * implementation in Spring overrides this method appropriately., +	 * @param mergedContextConfiguration the merged context configuration used, +	 * to load the application context; never {@code null}, +	 * @return {@code true} if the the application context has been loaded, +	 * @since 5.2, +	 * @see #loadContext, +	 * @see #closeContext, +	 */, +	default boolean isContextLoaded(MergedContextConfiguration mergedContextConfiguration) {, +		return false;, +	}, +, +	/**, +	 * @see #isContextLoaded, +	 * @see #closeContext, +	 * @see #isContextLoaded, +	 * @see #loadContext, +++ b/spring-test/src/main/java/org/springframework/test/context/TestContext.java, +// Suppression required due to bug in javac in Java 8: presence of default method in a Serializable interface, +@SuppressWarnings("serial"), +	 * Determine if the {@linkplain ApplicationContext application context} for, +	 * this test context is known to be available., +	 * <p>If this method returns {@code true}, a subsequent invocation of, +	 * {@link #getApplicationContext()} should succeed., +	 * <p>The default implementation of this method always returns {@code false}., +	 * Custom {@code TestContext} implementations are therefore highly encouraged, +	 * to override this method with a more meaningful implementation. Note that, +	 * the standard {@code TestContext} implementation in Spring overrides this, +	 * method appropriately., +	 * @return {@code true} if the application context has already been loaded, +	 * @since 5.2, +	 * @see #getApplicationContext(), +	 */, +	default boolean hasApplicationContext() {, +		return false;, +	}, +, +	/**, +	 * @see #hasApplicationContext(), +++ b/spring-test/src/main/java/org/springframework/test/context/CacheAwareContextLoaderDelegate.java, + * Copyright 2002-2019 the original author or authors., +	 * Determine if the {@linkplain ApplicationContext application context} for, +	 * the supplied {@link MergedContextConfiguration} has been loaded (i.e.,, +	 * is present in the {@code ContextCache})., +	 * <p>Implementations of this method <strong>must not</strong> load the, +	 * application context as a side effect. In addition, implementations of, +	 * this method should not log the cache statistics via, +	 * {@link org.springframework.test.context.cache.ContextCache#logStatistics()}., +	 * <p>The default implementation of this method always returns {@code false}., +	 * Custom {@code CacheAwareContextLoaderDelegate} implementations are, +	 * therefore highly encouraged to override this method with a more meaningful, +	 * implementation. Note that the standard {@code CacheAwareContextLoaderDelegate}, +	 * implementation in Spring overrides this method appropriately., +	 * @param mergedContextConfiguration the merged context configuration used, +	 * to load the application context; never {@code null}, +	 * @return {@code true} if the the application context has been loaded, +	 * @since 5.2]