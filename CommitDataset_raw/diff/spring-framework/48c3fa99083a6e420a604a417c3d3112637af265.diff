[+++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, +import com.fasterxml.jackson.annotation.JsonAutoDetect;, +import com.fasterxml.jackson.annotation.PropertyAccessor;, + * @author Eddú Meléndez, +	private final Map<PropertyAccessor, JsonAutoDetect.Visibility> visibilities = new HashMap<>();, +, +	 * Specify visibility to limit what kind of properties are auto-detected., +	 * @since 5.1, +	 * @see com.fasterxml.jackson.annotation.PropertyAccessor, +	 * @see com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility, +	 */, +	public Jackson2ObjectMapperBuilder visibility(PropertyAccessor accessor,, +			JsonAutoDetect.Visibility visibility) {, +		this.visibilities.put(accessor, visibility);, +		return this;, +	}, +, +	/**, +		this.visibilities.forEach(objectMapper::setVisibility);, +, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, +import com.fasterxml.jackson.annotation.JsonAutoDetect;, +import com.fasterxml.jackson.annotation.PropertyAccessor;, + * @author Eddú Meléndez, +	private final Map<PropertyAccessor, JsonAutoDetect.Visibility> visibilities = new HashMap<>();, +, +	 * Specify visibility to limit what kind of properties are auto-detected., +	 * @since 5.1, +	 * @see com.fasterxml.jackson.annotation.PropertyAccessor, +	 * @see com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility, +	 */, +	public Jackson2ObjectMapperBuilder visibility(PropertyAccessor accessor,, +			JsonAutoDetect.Visibility visibility) {, +		this.visibilities.put(accessor, visibility);, +		return this;, +	}, +, +	/**, +		this.visibilities.forEach(objectMapper::setVisibility);, +, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilderTests.java, + * Copyright 2002-2018 the original author or authors., +import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;, +import com.fasterxml.jackson.annotation.PropertyAccessor;, + * @author Eddú Meléndez, +	@Test, +	public void visibility() throws JsonProcessingException {, +		ObjectMapper objectMapper = Jackson2ObjectMapperBuilder.json(), +				.visibility(PropertyAccessor.GETTER, Visibility.NONE), +				.visibility(PropertyAccessor.FIELD, Visibility.ANY), +				.build();, +, +		String json = objectMapper.writeValueAsString(new JacksonVisibilityBean());, +		assertThat(json, containsString("property1"));, +		assertThat(json, containsString("property2"));, +		assertThat(json, not(containsString("property3")));, +	}, +, +	public static class JacksonVisibilityBean {, +, +		private String property1;, +, +		public String property2;, +, +		public String getProperty3() {, +			return null;, +		}, +, +	}, +]