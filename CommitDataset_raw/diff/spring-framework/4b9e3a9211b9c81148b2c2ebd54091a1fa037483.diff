[+++ b/spring-core/src/test/java/org/springframework/core/MethodParameterTests.java, + * Copyright 2002-2018 the original author or authors., +import java.lang.annotation.ElementType;, +import java.lang.annotation.Retention;, +import java.lang.annotation.RetentionPolicy;, +import java.lang.annotation.Target;, +import java.lang.reflect.Constructor;, +import org.junit.Ignore;, + * @author Sam Brannen, +	@Test, +	public void annotatedConstructorParameterInStaticNestedClass() throws Exception {, +		Constructor<?> constructor = NestedClass.class.getDeclaredConstructor(String.class);, +		MethodParameter methodParameter = MethodParameter.forExecutable(constructor, 0);, +		assertEquals(String.class, methodParameter.getParameterType());, +		assertNotNull("Failed to find @Param annotation", methodParameter.getParameterAnnotation(Param.class));, +		assertNotNull(methodParameter.getParameterAnnotation(Param.class));, +	}, +, +	@Test, +	@Ignore("Disabled until SPR-16652 is resolved"), +	public void annotatedConstructorParameterInInnerClass() throws Exception {, +		Constructor<?> constructor = InnerClass.class.getDeclaredConstructor(getClass(), String.class);, +		MethodParameter methodParameter = MethodParameter.forExecutable(constructor, 1);, +		assertEquals(String.class, methodParameter.getParameterType());, +		assertNull(methodParameter.getParameterAnnotation(Override.class));, +		// The following assertion currently fails if this test class is compiled using JDK 8., +		assertNotNull("Failed to find @Param annotation", methodParameter.getParameterAnnotation(Param.class));, +	}, +, +	@SuppressWarnings("unused"), +	private static class NestedClass {, +, +		NestedClass(@Param String s) {, +		}, +	}, +, +	@SuppressWarnings("unused"), +	private class InnerClass {, +, +		InnerClass(@Param String s) {, +		}, +	}, +, +	@Retention(RetentionPolicy.RUNTIME), +	@Target(ElementType.PARAMETER), +	private @interface Param {, +	}, +]