[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +		return synthesizeAnnotation(, +				findAnnotation(annotatedElement, annotationType, new HashSet<Annotation>()), annotatedElement);, +	 * @param clazz the class to look for annotations on, +	 * @param annotationType the annotation type to search on, +	 * corresponding attribute values as values (never {@code null}), +	 * corresponding attribute values as values (never {@code null}), +	 * and corresponding attribute values as values (never {@code null}), +	 * and corresponding attribute values as values (never {@code null}), +	 * and corresponding attribute values as values (never {@code null}), +	 * and corresponding attribute values as values (never {@code null}), +	 * @param annotationType the type of annotation to synthesize, +	 * @param annotationType the type of annotation to synthesize, +	 * @return a map containing attribute aliases (never {@code null}), +	 * @param attribute the attribute to find aliases for, +	 * @return the names of the aliased attributes (never {@code null}, though, +	 * potentially <em>empty</em>), +	 * type (never {@code null}, though potentially <em>empty</em>), +	 * type to find, +		 * the aliased attribute name, +		 * used solely for building an exception message, +		 * @return the name of the aliased attribute (never {@code null} or empty), +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +		return synthesizeAnnotation(, +				findAnnotation(annotatedElement, annotationType, new HashSet<Annotation>()), annotatedElement);, +	 * @param clazz the class to look for annotations on, +	 * @param annotationType the annotation type to search on, +	 * corresponding attribute values as values (never {@code null}), +	 * corresponding attribute values as values (never {@code null}), +	 * and corresponding attribute values as values (never {@code null}), +	 * and corresponding attribute values as values (never {@code null}), +	 * and corresponding attribute values as values (never {@code null}), +	 * and corresponding attribute values as values (never {@code null}), +	 * @param annotationType the type of annotation to synthesize, +	 * @param annotationType the type of annotation to synthesize, +	 * @return a map containing attribute aliases (never {@code null}), +	 * @param attribute the attribute to find aliases for, +	 * @return the names of the aliased attributes (never {@code null}, though, +	 * potentially <em>empty</em>), +	 * type (never {@code null}, though potentially <em>empty</em>), +	 * type to find, +		 * the aliased attribute name, +		 * used solely for building an exception message, +		 * @return the name of the aliased attribute (never {@code null} or empty), +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlParameter.java, + * Copyright 2002-2015 the original author or authors., +	 * Return the name of the parameter, or {@code null} if anonymous., +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +	 * @param annotatedElement the element to look for annotations on, +	 * @param annotationType the annotation type to look for, +	 * @return the annotations found or an empty set (never {@code null}), +		return synthesizeAnnotation(, +				findAnnotation(annotatedElement, annotationType, new HashSet<Annotation>()), annotatedElement);, +	 * @param clazz the class to look for annotations on, +	 * @param annotationType the annotation type to search on, +	 * corresponding attribute values as values (never {@code null}), +	 * corresponding attribute values as values (never {@code null}), +	 * and corresponding attribute values as values (never {@code null})]