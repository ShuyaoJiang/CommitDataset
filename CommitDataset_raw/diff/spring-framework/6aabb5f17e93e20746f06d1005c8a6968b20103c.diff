[+++ b/spring-core/src/main/java/org/springframework/util/xml/DomUtils.java, + * Convenience methods for working with the DOM API,, + * in particular for working with DOM Nodes and DOM Elements., +	public static List<Element> getChildElementsByTagName(Element ele, String... childEleNames) {, +++ b/spring-core/src/main/java/org/springframework/util/xml/DomUtils.java, + * Convenience methods for working with the DOM API,, + * in particular for working with DOM Nodes and DOM Elements., +	public static List<Element> getChildElementsByTagName(Element ele, String... childEleNames) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/InterceptorsBeanDefinitionParser.java, + * Copyright 2002-2013 the original author or authors., +import org.w3c.dom.Element;, +, + * {@link org.springframework.beans.factory.xml.BeanDefinitionParser} that parses a, + * {@code interceptors} element to register a set of {@link MappedInterceptor} definitions., +		List<Element> interceptors = DomUtils.getChildElementsByTagName(element, "bean", "ref", "interceptor");, +				Element beanElem = DomUtils.getChildElementsByTagName(interceptor, "bean", "ref").get(0);, +		for (Element path : paths) {, +			patterns.add(path.getAttribute("path"));]