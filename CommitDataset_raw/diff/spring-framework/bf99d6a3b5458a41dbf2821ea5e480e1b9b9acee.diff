[+++ b/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java, + * Copyright 2002-2014 the original author or authors., +, +, +	 * Package-private constructor., +, +	 * Register one or more {@link DeferredResultProcessingInterceptor}s without a specified key., +	 * The default key is derived from the interceptor class name and hash code., +			String key = interceptor.getClass().getName() + ":" + interceptor.hashCode();, +	 * @throws Exception if concurrent processing failed to start, +	 * @throws Exception if concurrent processing failed to start, +		interceptorChain.applyBeforeConcurrentHandling(this.asyncWebRequest, callable);, +				catch (Throwable ex) {, +					result = ex;, +			this.concurrentResult = result;, +		if (this.asyncWebRequest.isAsyncComplete()) {, +		if (logger.isDebugEnabled()) {, +			logger.debug("Concurrent result value [" + this.concurrentResult +, +					"] - dispatching request to resume processing");, +		}, +		this.asyncWebRequest.dispatch();, +	 * @throws Exception if concurrent processing failed to start, +				catch (Throwable ex) {, +					setConcurrentResultAndDispatch(ex);, +		interceptorChain.applyBeforeConcurrentHandling(this.asyncWebRequest, deferredResult);, +		catch (Throwable ex) {, +			setConcurrentResultAndDispatch(ex);]