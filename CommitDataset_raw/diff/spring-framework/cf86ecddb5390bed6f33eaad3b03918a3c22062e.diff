[+++ b/spring-web/src/main/java/org/springframework/web/util/ContentCachingRequestWrapper.java, + * Copyright 2002-2015 the original author or authors., +import java.io.UnsupportedEncodingException;, +import java.net.URLEncoder;, +import java.util.Arrays;, +import java.util.Enumeration;, +import java.util.Iterator;, +import java.util.List;, +import java.util.Map;, +, +	private static final String FORM_CONTENT_TYPE = "application/x-www-form-urlencoded";, +, +	private static final String METHOD_POST = "POST";, +, +		if(this.cachedContent.size() == 0 && isFormPost()) {, +			writeRequestParamsToContent();, +		}, +	private boolean isFormPost() {, +		return (getContentType() != null && getContentType().contains(FORM_CONTENT_TYPE) &&, +				METHOD_POST.equalsIgnoreCase(getMethod()));, +	}, +, +	private void writeRequestParamsToContent() {, +		try {, +			if (this.cachedContent.size() == 0) {, +				String requestEncoding = getCharacterEncoding();, +				Map<String, String[]> form = getParameterMap();, +				for (Iterator<String> nameIterator = form.keySet().iterator(); nameIterator.hasNext(); ) {, +					String name = nameIterator.next();, +					List<String> values = Arrays.asList(form.get(name));, +					for (Iterator<String> valueIterator = values.iterator(); valueIterator.hasNext(); ) {, +						String value = valueIterator.next();, +						cachedContent.write(URLEncoder.encode(name, requestEncoding).getBytes());, +						if (value != null) {, +							cachedContent.write('=');, +							cachedContent.write(URLEncoder.encode(value, requestEncoding).getBytes());, +							if (valueIterator.hasNext()) {, +								cachedContent.write('&');, +							}, +						}, +					}, +					if (nameIterator.hasNext()) {, +						cachedContent.write('&');, +					}, +				}, +			}, +		}, +		catch (IOException e) {, +			throw new RuntimeException(e);, +		}, +	}, +++ b/spring-web/src/main/java/org/springframework/web/util/ContentCachingRequestWrapper.java, + * Copyright 2002-2015 the original author or authors., +import java.io.UnsupportedEncodingException;, +import java.net.URLEncoder;, +import java.util.Arrays;, +import java.util.Enumeration;, +import java.util.Iterator;, +import java.util.List;, +import java.util.Map;, +, +	private static final String FORM_CONTENT_TYPE = "application/x-www-form-urlencoded";, +, +	private static final String METHOD_POST = "POST";, +, +		if(this.cachedContent.size() == 0 && isFormPost()) {, +			writeRequestParamsToContent();, +		}, +	private boolean isFormPost() {, +		return (getContentType() != null && getContentType().contains(FORM_CONTENT_TYPE) &&, +				METHOD_POST.equalsIgnoreCase(getMethod()));, +	}, +, +	private void writeRequestParamsToContent() {, +		try {, +			if (this.cachedContent.size() == 0) {, +				String requestEncoding = getCharacterEncoding();, +				Map<String, String[]> form = getParameterMap();, +				for (Iterator<String> nameIterator = form.keySet().iterator(); nameIterator.hasNext(); ) {, +					String name = nameIterator.next();, +					List<String> values = Arrays.asList(form.get(name));, +					for (Iterator<String> valueIterator = values.iterator(); valueIterator.hasNext(); ) {, +						String value = valueIterator.next();, +						cachedContent.write(URLEncoder.encode(name, requestEncoding).getBytes());, +						if (value != null) {, +							cachedContent.write('=');, +							cachedContent.write(URLEncoder.encode(value, requestEncoding).getBytes());, +							if (valueIterator.hasNext()) {, +								cachedContent.write('&');, +							}, +						}, +					}, +					if (nameIterator.hasNext()) {, +						cachedContent.write('&');, +					}, +				}, +			}, +		}, +		catch (IOException e) {, +			throw new RuntimeException(e);]