[+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * Copyright 2002-2014 the original author or authors., + * <li>{@link org.springframework.http.HttpMethod} for the HTTP request method</li>, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * Copyright 2002-2014 the original author or authors., + * <li>{@link org.springframework.http.HttpMethod} for the HTTP request method</li>, +++ b/spring-web/src/main/java/org/springframework/web/context/request/ServletWebRequest.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.http.HttpMethod;, +import org.springframework.http.HttpStatus;, +	/**, +	 * Return the HTTP method of the request., +	 * @since 4.0.2, +	 */, +	public HttpMethod getHttpMethod() {, +		return HttpMethod.valueOf(getRequest().getMethod().trim().toUpperCase());, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * Copyright 2002-2014 the original author or authors., + * <li>{@link org.springframework.http.HttpMethod} for the HTTP request method</li>, +++ b/spring-web/src/main/java/org/springframework/web/context/request/ServletWebRequest.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.http.HttpMethod;, +import org.springframework.http.HttpStatus;, +	/**, +	 * Return the HTTP method of the request., +	 * @since 4.0.2, +	 */, +	public HttpMethod getHttpMethod() {, +		return HttpMethod.valueOf(getRequest().getMethod().trim().toUpperCase());, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ServletRequestMethodArgumentResolver.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.http.HttpMethod;, +import org.springframework.web.context.request.ServletWebRequest;, + * <li>{@link org.springframework.http.HttpMethod} (as of Spring 4.0)</li>, +				Reader.class.isAssignableFrom(paramType) ||, +				HttpMethod.class.equals(paramType);, +		else if (HttpMethod.class.equals(paramType)) {, +			return ((ServletWebRequest) webRequest).getHttpMethod();, +		}, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * Copyright 2002-2014 the original author or authors., + * <li>{@link org.springframework.http.HttpMethod} for the HTTP request method</li>, +++ b/spring-web/src/main/java/org/springframework/web/context/request/ServletWebRequest.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.http.HttpMethod;, +import org.springframework.http.HttpStatus;, +	/**, +	 * Return the HTTP method of the request., +	 * @since 4.0.2, +	 */, +	public HttpMethod getHttpMethod() {, +		return HttpMethod.valueOf(getRequest().getMethod().trim().toUpperCase());, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ServletRequestMethodArgumentResolver.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.http.HttpMethod;, +import org.springframework.web.context.request.ServletWebRequest;, + * <li>{@link org.springframework.http.HttpMethod} (as of Spring 4.0)</li>, +				Reader.class.isAssignableFrom(paramType) ||, +				HttpMethod.class.equals(paramType);, +		else if (HttpMethod.class.equals(paramType)) {, +			return ((ServletWebRequest) webRequest).getHttpMethod();, +		}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/ServletRequestMethodArgumentResolverTests.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.http.HttpMethod;, +				WebRequest.class, TimeZone.class, ZoneId.class, HttpMethod.class);, +		servletRequest = new MockHttpServletRequest("GET", "");, +	@Test, +	public void httpMethod() throws Exception {, +		MethodParameter httpMethodParameter = new MethodParameter(method, 10);, +, +		assertTrue("HttpMethod not supported", resolver.supportsParameter(httpMethodParameter));, +, +		Object result = resolver.resolveArgument(httpMethodParameter, null, webRequest, null);, +		assertSame("Invalid result", HttpMethod.valueOf(webRequest.getRequest().getMethod()), result);, +	}, +, +, +								ZoneId p9,, +								HttpMethod p10) {, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * Copyright 2002-2014 the original author or authors., + * <li>{@link org.springframework.http.HttpMethod} for the HTTP request method</li>, +++ b/spring-web/src/main/java/org/springframework/web/context/request/ServletWebRequest.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.http.HttpMethod;, +import org.springframework.http.HttpStatus;, +	/**, +	 * Return the HTTP method of the request., +	 * @since 4.0.2, +	 */, +	public HttpMethod getHttpMethod() {, +		return HttpMethod.valueOf(getRequest().getMethod().trim().toUpperCase());, +	}]