[+++ b/spring-beans/src/main/java/org/springframework/beans/AbstractPropertyAccessor.java, + * Copyright 2002-2014 the original author or authors., + * @author Stephane Nicoll, +	private boolean autoGrowNestedPaths = false;, +, +	@Override, +	public void setAutoGrowNestedPaths(boolean autoGrowNestedPaths) {, +		this.autoGrowNestedPaths = autoGrowNestedPaths;, +	}, +, +	@Override, +	public boolean isAutoGrowNestedPaths() {, +		return this.autoGrowNestedPaths;, +	}, +, +++ b/spring-beans/src/main/java/org/springframework/beans/AbstractPropertyAccessor.java, + * Copyright 2002-2014 the original author or authors., + * @author Stephane Nicoll, +	private boolean autoGrowNestedPaths = false;, +, +	@Override, +	public void setAutoGrowNestedPaths(boolean autoGrowNestedPaths) {, +		this.autoGrowNestedPaths = autoGrowNestedPaths;, +	}, +, +	@Override, +	public boolean isAutoGrowNestedPaths() {, +		return this.autoGrowNestedPaths;, +	}, +, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapper.java, +++ b/spring-beans/src/main/java/org/springframework/beans/AbstractPropertyAccessor.java, + * Copyright 2002-2014 the original author or authors., + * @author Stephane Nicoll, +	private boolean autoGrowNestedPaths = false;, +, +	@Override, +	public void setAutoGrowNestedPaths(boolean autoGrowNestedPaths) {, +		this.autoGrowNestedPaths = autoGrowNestedPaths;, +	}, +, +	@Override, +	public boolean isAutoGrowNestedPaths() {, +		return this.autoGrowNestedPaths;, +	}, +, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapper.java, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +			if (isAutoGrowNestedPaths()) {, +					if (isAutoGrowNestedPaths()) {, +		if (!isAutoGrowNestedPaths()) {, +		if (!isAutoGrowNestedPaths()) {, +				if (isAutoGrowNestedPaths()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/AbstractPropertyAccessor.java, + * Copyright 2002-2014 the original author or authors., + * @author Stephane Nicoll, +	private boolean autoGrowNestedPaths = false;, +, +	@Override, +	public void setAutoGrowNestedPaths(boolean autoGrowNestedPaths) {, +		this.autoGrowNestedPaths = autoGrowNestedPaths;, +	}, +, +	@Override, +	public boolean isAutoGrowNestedPaths() {, +		return this.autoGrowNestedPaths;, +	}, +, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapper.java, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +			if (isAutoGrowNestedPaths()) {, +					if (isAutoGrowNestedPaths()) {, +		if (!isAutoGrowNestedPaths()) {, +		if (!isAutoGrowNestedPaths()) {, +				if (isAutoGrowNestedPaths()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/ConfigurablePropertyAccessor.java, + * Copyright 2002-2014 the original author or authors., + * @author Stephane Nicoll, +	/**, +	 * Set whether this instance should attempt to "auto-grow" a, +	 * nested path that contains a {@code null} value., +	 * <p>If {@code true}, a {@code null} path location will be populated, +	 * with a default object value and traversed instead of resulting in a, +	 * {@link NullValueInNestedPathException}., +	 * <p>Default is {@code false} on a plain instance., +	 */, +	void setAutoGrowNestedPaths(boolean autoGrowNestedPaths);, +, +	/**, +	 * Return whether "auto-growing" of nested paths has been activated., +	 */, +	boolean isAutoGrowNestedPaths();, +, +++ b/spring-beans/src/main/java/org/springframework/beans/AbstractPropertyAccessor.java, + * Copyright 2002-2014 the original author or authors., + * @author Stephane Nicoll, +	private boolean autoGrowNestedPaths = false;, +, +	@Override, +	public void setAutoGrowNestedPaths(boolean autoGrowNestedPaths) {]