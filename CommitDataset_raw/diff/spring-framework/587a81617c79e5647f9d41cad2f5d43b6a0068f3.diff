[+++ b/spring-core/src/main/java/org/springframework/core/env/SystemEnvironmentPropertySource.java, + * @author Juergen Hoeller, +		if (containsKey(name)) {, +		if (!name.equals(usName) && containsKey(usName)) {, +			if (containsKey(ucName)) {, +				if (!ucName.equals(usUcName) && containsKey(usUcName)) {, +, +	private boolean containsKey(String name) {, +		return (isSecurityManagerPresent() ? this.source.keySet().contains(name) : this.source.containsKey(name));, +	protected boolean isSecurityManagerPresent() {, +		return (System.getSecurityManager() != null);, +++ b/spring-core/src/main/java/org/springframework/core/env/SystemEnvironmentPropertySource.java, + * @author Juergen Hoeller, +		if (containsKey(name)) {, +		if (!name.equals(usName) && containsKey(usName)) {, +			if (containsKey(ucName)) {, +				if (!ucName.equals(usUcName) && containsKey(usUcName)) {, +, +	private boolean containsKey(String name) {, +		return (isSecurityManagerPresent() ? this.source.keySet().contains(name) : this.source.containsKey(name));, +	protected boolean isSecurityManagerPresent() {, +		return (System.getSecurityManager() != null);, +++ b/spring-core/src/test/java/org/springframework/core/env/SystemEnvironmentPropertySourceTests.java, +import java.util.HashSet;, +import java.util.Set;, + * @author Juergen Hoeller, +, +, +, +			@Override, +			public Set<String> keySet() {, +				return new HashSet<String>(super.keySet());, +			}, +, +		ps = new SystemEnvironmentPropertySource("sysEnv", envMap) {, +			@Override, +			protected boolean isSecurityManagerPresent() {, +				return true;, +			}, +		};, +]