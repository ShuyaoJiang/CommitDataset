[+++ /dev/null, +++ /dev/null, +++ b/build.gradle, +	// The following is a work-around until the Gradle build uses, +	// Ant 1.9.x by default. This is necessary to avoid the, +	// "Class not found: javac1.8" issue with Ant versions prior to 1.9.x, +	ant.properties["build.compiler"] = "javac1.7", +, +		sourceCompatibility=1.8, +		targetCompatibility=1.8, +		scanForTestClasses = false, +		include '**/*Tests.*', +		exclude '**/*Abstract*.*', +	// As of Spring 4.0, spring-core includes asm 4.1 and repackages cglib 3.0, inlining, +	// both into the spring-core jar. cglib 3.0 itself depends on asm 4, and is therefore, +	// avoids including two different copies of asm unnecessarily., +		// inline repackaged cglib classes directly into the spring-core jar, +, +, +, +, +, +, +, +		optional("joda-time:joda-time:2.2"), +, +, +, +, +, +, +, +, +, +	task testNG(type: Test) {, +		useTestNG(), +		scanForTestClasses = false, +		include "**/testng/*.*", +		exclude "**/FailingBeforeAndAfterMethodsTests.class", +		// "TestCase" classes are run by other test classes, not the build., +		exclude "**/*TestCase.class", +		// Generate TestNG reports alongside JUnit reports., +		testReport true, +	}, +, +	test {, +		dependsOn testNG, +		useJUnit(), +		exclude "**/testng/*.*", +		// "TestCase" classes are run by other test classes, not the build., +		exclude(["**/*TestCase.class", "**/*TestSuite.class"]), +	}, +, +, +, +++ /dev/null, +++ b/build.gradle, +	// The following is a work-around until the Gradle build uses, +	// Ant 1.9.x by default. This is necessary to avoid the, +	// "Class not found: javac1.8" issue with Ant versions prior to 1.9.x, +	ant.properties["build.compiler"] = "javac1.7", +, +		sourceCompatibility=1.8, +		targetCompatibility=1.8, +		scanForTestClasses = false, +		include '**/*Tests.*', +		exclude '**/*Abstract*.*', +	// As of Spring 4.0, spring-core includes asm 4.1 and repackages cglib 3.0, inlining, +	// both into the spring-core jar. cglib 3.0 itself depends on asm 4, and is therefore, +	// avoids including two different copies of asm unnecessarily., +		// inline repackaged cglib classes directly into the spring-core jar, +, +, +, +, +, +, +, +		optional("joda-time:joda-time:2.2"), +, +, +, +, +, +, +, +, +, +	task testNG(type: Test) {, +		useTestNG(), +		scanForTestClasses = false, +		include "**/testng/*.*", +		exclude "**/FailingBeforeAndAfterMethodsTests.class", +		// "TestCase" classes are run by other test classes, not the build., +		exclude "**/*TestCase.class", +		// Generate TestNG reports alongside JUnit reports., +		testReport true, +	}, +, +	test {]