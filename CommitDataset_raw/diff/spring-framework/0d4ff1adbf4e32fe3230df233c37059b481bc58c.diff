[+++ b/spring-core/src/main/java/org/springframework/util/comparator/package-info.java, +, +++ b/spring-core/src/main/java/org/springframework/util/comparator/package-info.java, +, +++ b/spring-core/src/main/java/org/springframework/util/concurrent/package-info.java, + *, +++ b/spring-core/src/main/java/org/springframework/util/comparator/package-info.java, +, +++ b/spring-core/src/main/java/org/springframework/util/concurrent/package-info.java, + *, +++ b/spring-jms/src/test/java/org/springframework/jms/listener/adapter/MessagingMessageListenerAdapterTests.java, +import org.springframework.jms.support.JmsHeaders;, +import static org.junit.Assert.*;, +import static org.mockito.BDDMockito.*;, +, +, +		catch (JMSException ex) {, +		catch (ListenerExecutionFailedException ex) {, +			assertEquals(IllegalArgumentException.class, ex.getCause().getClass());, +			assertEquals("Expected test exception", ex.getCause().getMessage());, +		catch (JMSException ex) {, +		catch (ListenerExecutionFailedException ex) {, +			assertEquals(MessageConversionException.class, ex.getCause().getClass());, +, +++ b/spring-core/src/main/java/org/springframework/util/comparator/package-info.java, +, +++ b/spring-core/src/main/java/org/springframework/util/concurrent/package-info.java, + *, +++ b/spring-jms/src/test/java/org/springframework/jms/listener/adapter/MessagingMessageListenerAdapterTests.java, +import org.springframework.jms.support.JmsHeaders;, +import static org.junit.Assert.*;, +import static org.mockito.BDDMockito.*;, +, +, +		catch (JMSException ex) {, +		catch (ListenerExecutionFailedException ex) {, +			assertEquals(IllegalArgumentException.class, ex.getCause().getClass());, +			assertEquals("Expected test exception", ex.getCause().getMessage());, +		catch (JMSException ex) {, +		catch (ListenerExecutionFailedException ex) {, +			assertEquals(MessageConversionException.class, ex.getCause().getClass());, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/Message.java, + * Copyright 2002-2014 the original author or authors., +	 * Return message headers for the message (never {@code null})., +++ b/spring-core/src/main/java/org/springframework/util/comparator/package-info.java, +, +++ b/spring-core/src/main/java/org/springframework/util/concurrent/package-info.java, + *, +++ b/spring-jms/src/test/java/org/springframework/jms/listener/adapter/MessagingMessageListenerAdapterTests.java, +import org.springframework.jms.support.JmsHeaders;, +import static org.junit.Assert.*;, +import static org.mockito.BDDMockito.*;, +, +, +		catch (JMSException ex) {, +		catch (ListenerExecutionFailedException ex) {, +			assertEquals(IllegalArgumentException.class, ex.getCause().getClass());, +			assertEquals("Expected test exception", ex.getCause().getMessage());, +		catch (JMSException ex) {, +		catch (ListenerExecutionFailedException ex) {, +			assertEquals(MessageConversionException.class, ex.getCause().getClass());, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/Message.java, + * Copyright 2002-2014 the original author or authors., +	 * Return message headers for the message (never {@code null})., +++ b/spring-messaging/src/main/java/org/springframework/messaging/MessageHeaders.java, + * The headers for a {@link Message}., + *, + * <p><b>IMPORTANT</b>: This class is immutable. Any mutating operation such as, + *, + * <p>One way to create message headers is to use the, + *, + *, +		this.headers = (headers != null ? new HashMap<String, Object>(headers) : new HashMap<String, Object>());, +		return (idGenerator != null ? idGenerator : defaultIdGenerator);, +	public boolean equals(Object other) {, +		return (this == other ||, +				(other instanceof MessageHeaders && this.headers.equals(((MessageHeaders) other).headers)));, +	public int hashCode() {, +		return this.headers.hashCode();, +, +	// Map implementation, +, +	// Unsupported Map operations, +, +				logger.info("Removing non-serializable header: " + key);, +++ b/spring-core/src/main/java/org/springframework/util/comparator/package-info.java, +, +++ b/spring-core/src/main/java/org/springframework/util/concurrent/package-info.java, + *, +++ b/spring-jms/src/test/java/org/springframework/jms/listener/adapter/MessagingMessageListenerAdapterTests.java, +import org.springframework.jms.support.JmsHeaders;, +import static org.junit.Assert.*;, +import static org.mockito.BDDMockito.*;, +, +, +		catch (JMSException ex) {, +		catch (ListenerExecutionFailedException ex) {, +			assertEquals(IllegalArgumentException.class, ex.getCause().getClass());]