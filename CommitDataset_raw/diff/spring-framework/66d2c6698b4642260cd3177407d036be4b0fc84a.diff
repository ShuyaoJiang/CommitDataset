[+++ b/org.springframework.core/src/main/java/org/springframework/util/TypeUtils.java, +		Assert.notNull(lhsType, "Left-hand side type must not be null");, +		Assert.notNull(rhsType, "Right-hand side type must not be null");, +					if (!isAssignableBound(lBound, rBound)) {, +					if (!isAssignableBound(lBound, rBound)) {, +					if (!isAssignableBound(rBound, lBound)) {, +					if (!isAssignableBound(rBound, lBound)) {, +				if (!isAssignableBound(lBound, rhsType)) {, +				if (!isAssignableBound(rhsType, lBound)) {, +	, +	public static boolean isAssignableBound(Type lhsType, Type rhsType) {, +		if (rhsType == null) {, +			return true;, +		}, +, +		if (lhsType == null) {, +			return false;, +		}, +		return isAssignable(lhsType, rhsType);, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/util/TypeUtils.java, +		Assert.notNull(lhsType, "Left-hand side type must not be null");, +		Assert.notNull(rhsType, "Right-hand side type must not be null");, +					if (!isAssignableBound(lBound, rBound)) {, +					if (!isAssignableBound(lBound, rBound)) {, +					if (!isAssignableBound(rBound, lBound)) {, +					if (!isAssignableBound(rBound, lBound)) {, +				if (!isAssignableBound(lBound, rhsType)) {, +				if (!isAssignableBound(rhsType, lBound)) {, +	, +	public static boolean isAssignableBound(Type lhsType, Type rhsType) {, +		if (rhsType == null) {, +			return true;, +		}, +, +		if (lhsType == null) {, +			return false;, +		}, +		return isAssignable(lhsType, rhsType);, +	}, +, +++ b/org.springframework.core/src/test/java/org/springframework/util/TypeUtilsTests.java]