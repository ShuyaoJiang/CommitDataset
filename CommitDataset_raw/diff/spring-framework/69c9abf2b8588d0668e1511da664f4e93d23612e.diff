[+++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/AdaptableJobFactory.java, +import java.lang.reflect.Method;, +, +import org.springframework.util.ReflectionUtils;, +, + * <p>Compatible with Quartz 1.5+ as well as Quartz 2.0, as of Spring 3.1., +		// Reflectively adapting to differences between Quartz 1.x and Quartz 2.0..., +		Method getJobDetail = bundle.getClass().getMethod("getJobDetail");, +		Object jobDetail = ReflectionUtils.invokeMethod(getJobDetail, bundle);, +		Method getJobClass = jobDetail.getClass().getMethod("getJobClass");, +		Class jobClass = (Class) ReflectionUtils.invokeMethod(getJobClass, jobDetail);, +		return jobClass.newInstance();, +++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/AdaptableJobFactory.java, +import java.lang.reflect.Method;, +, +import org.springframework.util.ReflectionUtils;, +, + * <p>Compatible with Quartz 1.5+ as well as Quartz 2.0, as of Spring 3.1., +		// Reflectively adapting to differences between Quartz 1.x and Quartz 2.0..., +		Method getJobDetail = bundle.getClass().getMethod("getJobDetail");, +		Object jobDetail = ReflectionUtils.invokeMethod(getJobDetail, bundle);, +		Method getJobClass = jobDetail.getClass().getMethod("getJobClass");, +		Class jobClass = (Class) ReflectionUtils.invokeMethod(getJobClass, jobDetail);, +		return jobClass.newInstance();, +++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/CronTriggerBean.java, + * Copyright 2002-2011 the original author or authors., + * <p><b>NOTE: This convenience subclass does not work against Quartz 2.0.</b>, + * Use Quartz 2.0's native <code>CronTriggerImpl</code> class or the new, + * Quartz 2.0 builder API instead., +++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/AdaptableJobFactory.java, +import java.lang.reflect.Method;, +, +import org.springframework.util.ReflectionUtils;, +, + * <p>Compatible with Quartz 1.5+ as well as Quartz 2.0, as of Spring 3.1., +		// Reflectively adapting to differences between Quartz 1.x and Quartz 2.0..., +		Method getJobDetail = bundle.getClass().getMethod("getJobDetail");, +		Object jobDetail = ReflectionUtils.invokeMethod(getJobDetail, bundle);, +		Method getJobClass = jobDetail.getClass().getMethod("getJobClass");, +		Class jobClass = (Class) ReflectionUtils.invokeMethod(getJobClass, jobDetail);, +		return jobClass.newInstance();, +++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/CronTriggerBean.java, + * Copyright 2002-2011 the original author or authors., + * <p><b>NOTE: This convenience subclass does not work against Quartz 2.0.</b>, + * Use Quartz 2.0's native <code>CronTriggerImpl</code> class or the new, + * Quartz 2.0 builder API instead., +++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/JobDetailBean.java, + * Copyright 2002-2011 the original author or authors., + * <p><b>NOTE: This convenience subclass does not work against Quartz 2.0.</b>, + * Use Quartz 2.0's native <code>JobDetailImpl</code> class or the new, + * Quartz 2.0 builder API instead., + *, +++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/AdaptableJobFactory.java, +import java.lang.reflect.Method;, +, +import org.springframework.util.ReflectionUtils;, +, + * <p>Compatible with Quartz 1.5+ as well as Quartz 2.0, as of Spring 3.1., +		// Reflectively adapting to differences between Quartz 1.x and Quartz 2.0..., +		Method getJobDetail = bundle.getClass().getMethod("getJobDetail");, +		Object jobDetail = ReflectionUtils.invokeMethod(getJobDetail, bundle);, +		Method getJobClass = jobDetail.getClass().getMethod("getJobClass");, +		Class jobClass = (Class) ReflectionUtils.invokeMethod(getJobClass, jobDetail);, +		return jobClass.newInstance();, +++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/CronTriggerBean.java, + * Copyright 2002-2011 the original author or authors., + * <p><b>NOTE: This convenience subclass does not work against Quartz 2.0.</b>, + * Use Quartz 2.0's native <code>CronTriggerImpl</code> class or the new, + * Quartz 2.0 builder API instead., +++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/JobDetailBean.java, + * Copyright 2002-2011 the original author or authors., + * <p><b>NOTE: This convenience subclass does not work against Quartz 2.0.</b>, + * Use Quartz 2.0's native <code>JobDetailImpl</code> class or the new, + * Quartz 2.0 builder API instead., + *, +++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.java, + * Copyright 2002-2011 the original author or authors., +import org.quartz.JobDataMap;, +import org.springframework.beans.BeanUtils;, +import org.springframework.beans.BeanWrapper;, +import org.springframework.beans.PropertyAccessorFactory;, + * <p>Compatible with Quartz 1.5+ as well as Quartz 2.0, as of Spring 3.1., + *, +		implements FactoryBean<JobDetail>, BeanNameAware, BeanClassLoaderAware, BeanFactoryAware, InitializingBean {, +, +	private static Class<?> jobDetailImplClass;, +, +	static {, +		try {, +			jobDetailImplClass = Class.forName("org.quartz.impl.JobDetailImpl");, +		}, +		catch (ClassNotFoundException ex) {, +			jobDetailImplClass = null;, +		}, +	}, +, +		if (jobDetailImplClass != null) {, +			// Using Quartz 2.0 JobDetailImpl class..., +			Object jobDetail = BeanUtils.instantiate(jobDetailImplClass);, +			BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(jobDetail);]