[+++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HandlerMethodAnnotationDetectionTests.java, +import org.springframework.web.servlet.ModelAndView;, +			context.getBeanFactory().registerSingleton("advisor", new DefaultPointcutAdvisor(new SimpleTraceInterceptor()));, +		String datePattern = "MM:dd:yyyy";, +		SimpleDateFormat dateFormat = new SimpleDateFormat(datePattern);, +		String dateA = "11:01:2011";, +		String dateB = "11:02:2011";, +		, +		request.setParameter("datePattern", datePattern);, +		request.addHeader("header1", dateA);, +		request.addHeader("header2", dateB);, +		ModelAndView mav = handlerAdapter.handle(request, new MockHttpServletResponse(), chain.getHandler());, +		assertEquals(mav.getModel().get("attr1"), dateFormat.parse(dateA));, +		assertEquals(mav.getModel().get("attr2"), dateFormat.parse(dateB));, +, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		assertEquals("text/plain;charset=ISO-8859-1", response.getHeader("Content-Type"));, +		assertEquals("failure", response.getContentAsString());, +		public void initBinder(WebDataBinder dataBinder, @RequestParam("datePattern") String pattern) {, +			CustomDateEditor dateEditor = new CustomDateEditor(new SimpleDateFormat(pattern), false);, +		public void initModel(@RequestHeader("header1") Date date, Model model) {, +			model.addAttribute("attr1", date);, +		@RequestMapping(value="/path1/path2", method=RequestMethod.POST), +		@ModelAttribute("attr2"), +		public Date handle(@RequestHeader("header2") Date date) throws Exception {, +			return date;, +		public abstract void initBinder(WebDataBinder dataBinder, String pattern);, +		@RequestMapping(value="/path1/path2", method=RequestMethod.POST), +		@ModelAttribute("attr2"), +		public abstract Date handle(Date date, Model model) throws Exception;, +		public void initBinder(WebDataBinder dataBinder, @RequestParam("datePattern") String pattern) {, +			CustomDateEditor dateEditor = new CustomDateEditor(new SimpleDateFormat(pattern), false);, +		public void initModel(@RequestHeader("header1") Date date, Model model) {, +			model.addAttribute("attr1", date);, +		public Date handle(@RequestHeader("header2") Date date, Model model) throws Exception {, +			return date;, +		void initModel(@RequestHeader("header1") Date date, Model model);, +		@RequestMapping(value="/path1/path2", method=RequestMethod.POST), +		@ModelAttribute("attr2"), +		Date handle(@RequestHeader("header2") Date date, Model model) throws Exception;, +		public void initModel(@RequestHeader("header1") Date date, Model model) {, +			model.addAttribute("attr1", date);, +		public Date handle(@RequestHeader("header2") Date date, Model model) throws Exception {, +			return date;, +		@RequestMapping(value="/path1/path2", method=RequestMethod.POST), +		@ModelAttribute("attr2"), +		public abstract Date handle(C date, Model model) throws Exception;, +		public void initModel(@RequestHeader("header1") Date date, Model model) {, +			model.addAttribute("attr1", date);, +		public Date handle(@RequestHeader("header2") Date date, Model model) throws Exception {, +			return date;, +		@RequestMapping(value="/path1/path2", method=RequestMethod.POST), +		@ModelAttribute("attr2"), +		Date handle(C date, Model model) throws Exception;, +		public void initModel(@RequestHeader("header1") Date date, Model model) {, +			model.addAttribute("attr1", date);, +		@RequestMapping(value="/path1/path2", method=RequestMethod.POST), +		@ModelAttribute("attr2"), +		public Date handle(@RequestHeader("header2") Date date, Model model) throws Exception {, +			return date;, +		public void initModel(@RequestHeader("header1") Date date, Model model) {, +			model.addAttribute("attr1", date);, +		@RequestMapping(value="/path2", method=RequestMethod.POST), +		@ModelAttribute("attr2"), +		public Date handle(@RequestHeader("header2") Date date, Model model) throws Exception {, +			return date;]