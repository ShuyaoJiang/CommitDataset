[+++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2015 the original author or authors., +		if (JoinPoint.class == candidateParameterType) {, +		if (ProceedingJoinPoint.class == candidateParameterType) {, +		if (JoinPoint.StaticPart.class == candidateParameterType) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2015 the original author or authors., +		if (JoinPoint.class == candidateParameterType) {, +		if (ProceedingJoinPoint.class == candidateParameterType) {, +		if (JoinPoint.StaticPart.class == candidateParameterType) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJAfterReturningAdvice.java, + * Copyright 2002-2015 the original author or authors., +		else if (Object.class == type && void.class == method.getReturnType()) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2015 the original author or authors., +		if (JoinPoint.class == candidateParameterType) {, +		if (ProceedingJoinPoint.class == candidateParameterType) {, +		if (JoinPoint.StaticPart.class == candidateParameterType) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJAfterReturningAdvice.java, + * Copyright 2002-2015 the original author or authors., +		else if (Object.class == type && void.class == method.getReturnType()) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectMetadata.java, + * Copyright 2002-2015 the original author or authors., +		while (currClass != Object.class) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2015 the original author or authors., +		if (JoinPoint.class == candidateParameterType) {, +		if (ProceedingJoinPoint.class == candidateParameterType) {, +		if (JoinPoint.StaticPart.class == candidateParameterType) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJAfterReturningAdvice.java, + * Copyright 2002-2015 the original author or authors., +		else if (Object.class == type && void.class == method.getReturnType()) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectMetadata.java, + * Copyright 2002-2015 the original author or authors., +		while (currClass != Object.class) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.java, +		if (DeclareParents.class == declareParents.defaultImpl()) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2015 the original author or authors., +		if (JoinPoint.class == candidateParameterType) {, +		if (ProceedingJoinPoint.class == candidateParameterType) {, +		if (JoinPoint.StaticPart.class == candidateParameterType) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJAfterReturningAdvice.java, + * Copyright 2002-2015 the original author or authors., +		else if (Object.class == type && void.class == method.getReturnType()) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectMetadata.java, + * Copyright 2002-2015 the original author or authors., +		while (currClass != Object.class) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.java, +		if (DeclareParents.class == declareParents.defaultImpl()) {, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +		if (Object.class != proxySuperClass) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2015 the original author or authors., +		if (JoinPoint.class == candidateParameterType) {, +		if (ProceedingJoinPoint.class == candidateParameterType) {, +		if (JoinPoint.StaticPart.class == candidateParameterType) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJAfterReturningAdvice.java, + * Copyright 2002-2015 the original author or authors., +		else if (Object.class == type && void.class == method.getReturnType()) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectMetadata.java, + * Copyright 2002-2015 the original author or authors., +		while (currClass != Object.class) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.java, +		if (DeclareParents.class == declareParents.defaultImpl()) {, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +		if (Object.class != proxySuperClass) {, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/DefaultAopProxyFactory.java, +		return (interfaces.length == 0 || (interfaces.length == 1 && SpringProxy.class == interfaces[0]));, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2015 the original author or authors., +		if (JoinPoint.class == candidateParameterType) {, +		if (ProceedingJoinPoint.class == candidateParameterType) {, +		if (JoinPoint.StaticPart.class == candidateParameterType) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJAfterReturningAdvice.java, + * Copyright 2002-2015 the original author or authors., +		else if (Object.class == type && void.class == method.getReturnType()) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectMetadata.java, + * Copyright 2002-2015 the original author or authors., +		while (currClass != Object.class) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.java, +		if (DeclareParents.class == declareParents.defaultImpl()) {, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +		if (Object.class != proxySuperClass) {, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/DefaultAopProxyFactory.java, +		return (interfaces.length == 0 || (interfaces.length == 1 && SpringProxy.class == interfaces[0]));, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyProcessorSupport.java, +		return (InitializingBean.class == ifc || DisposableBean.class == ifc ||, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2015 the original author or authors., +		if (JoinPoint.class == candidateParameterType) {, +		if (ProceedingJoinPoint.class == candidateParameterType) {, +		if (JoinPoint.StaticPart.class == candidateParameterType) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJAfterReturningAdvice.java, + * Copyright 2002-2015 the original author or authors., +		else if (Object.class == type && void.class == method.getReturnType()) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectMetadata.java, + * Copyright 2002-2015 the original author or authors., +		while (currClass != Object.class) {, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.java]