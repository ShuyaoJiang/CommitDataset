[+++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/BeanDefinitionRegistrar.java, +package org.springframework.config.java;, +, +import java.lang.reflect.Method;, +, +import org.springframework.beans.factory.support.BeanDefinitionRegistry;, +, +/**, + * Registers bean definition(s) for a particular method, usually based on its annotation metadata., + * , + * <h3>Constraints</h3>, + * Implementations must have only a default constructor, or explicitly declare, + * a no-arg constructor., + * , + * @see Factory, + * @see ModelMethod, + * , + * @author Chris Beams, + */, +// TODO: SJC-242 document FactoryMethodHandler, +// TODO: SJC-242 odd that the api here uses both ModelMethod and java.lang.reflect.Member, +// TODO: SJC-242 document that there must be a no-arg ctor, +public interface BeanDefinitionRegistrar {, +, +    /**, +     * Determines whether this registrar is capable of handling <var>method</var>., +     */, +    // TODO: rename to supports() in alignment with Validator nomenclature, +    boolean accepts(Method method);, +, +    /**, +     * Registers any bean definitions for <var>method</var> with <var>registry</var>., +     */, +    void register(ModelMethod method, BeanDefinitionRegistry registry);, +, +}, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/BeanDefinitionRegistrar.java, +package org.springframework.config.java;, +, +import java.lang.reflect.Method;, +, +import org.springframework.beans.factory.support.BeanDefinitionRegistry;, +, +/**, + * Registers bean definition(s) for a particular method, usually based on its annotation metadata., + * , + * <h3>Constraints</h3>, + * Implementations must have only a default constructor, or explicitly declare, + * a no-arg constructor., + * , + * @see Factory, + * @see ModelMethod, + * , + * @author Chris Beams, + */, +// TODO: SJC-242 document FactoryMethodHandler, +// TODO: SJC-242 odd that the api here uses both ModelMethod and java.lang.reflect.Member, +// TODO: SJC-242 document that there must be a no-arg ctor, +public interface BeanDefinitionRegistrar {, +, +    /**, +     * Determines whether this registrar is capable of handling <var>method</var>., +     */, +    // TODO: rename to supports() in alignment with Validator nomenclature, +    boolean accepts(Method method);, +, +    /**, +     * Registers any bean definitions for <var>method</var> with <var>registry</var>., +     */, +    void register(ModelMethod method, BeanDefinitionRegistry registry);, +, +}, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/Configuration.java, +/*, + * Copyright 2002-2008 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.config.java;, +, +import java.lang.annotation.Documented;, +import java.lang.annotation.ElementType;, +import java.lang.annotation.Inherited;, +import java.lang.annotation.Retention;, +import java.lang.annotation.RetentionPolicy;, +import java.lang.annotation.Target;, +, +import org.springframework.beans.factory.annotation.Autowire;, +import org.springframework.beans.factory.annotation.Required;, +import org.springframework.config.java.ext.Bean;]