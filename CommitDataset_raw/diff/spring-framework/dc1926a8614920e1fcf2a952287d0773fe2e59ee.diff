[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultRequest.java, +import java.util.function.Supplier;, +import java.util.stream.Stream;, +import org.springframework.http.codec.BodyExtractor;, +import org.springframework.http.codec.HttpMessageReader;, +	public <T> T body(BodyExtractor<T, ? super ServerHttpRequest> extractor) {, +		return extractor.extract(request(),, +				new BodyExtractor.Context() {, +					@Override, +					public Supplier<Stream<HttpMessageReader<?>>> messageReaders() {, +						return DefaultRequest.this.strategies.messageReaders();, +					}, +				});, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultRequest.java, +import java.util.function.Supplier;, +import java.util.stream.Stream;, +import org.springframework.http.codec.BodyExtractor;, +import org.springframework.http.codec.HttpMessageReader;, +	public <T> T body(BodyExtractor<T, ? super ServerHttpRequest> extractor) {, +		return extractor.extract(request(),, +				new BodyExtractor.Context() {, +					@Override, +					public Supplier<Stream<HttpMessageReader<?>>> messageReaders() {, +						return DefaultRequest.this.strategies.messageReaders();, +					}, +				});, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultResponseBuilder.java, +import org.springframework.http.codec.BodyInserter;, +import org.springframework.http.codec.HttpMessageWriter;, +				(response, context) -> response.setComplete(),, +				(response, context) -> Flux.from(voidPublisher).then(response.setComplete()),, +	public <T> Response<T> body(BiFunction<ServerHttpResponse, BodyInserter.Context, Mono<Void>> writer,, +	public <T> Response<T> body(BodyInserter<T, ? super ServerHttpResponse> inserter) {, +		private final BodyInserter<T, ? super ServerHttpResponse> inserter;, +		public BodyInserterResponse(int statusCode, HttpHeaders headers,, +				BodyInserter<T, ? super ServerHttpResponse> inserter) {, +, +			return this.inserter.insert(response, new BodyInserter.Context() {, +				@Override, +				public Supplier<Stream<HttpMessageWriter<?>>> messageWriters() {, +					return strategies.messageWriters();, +				}, +			});, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultRequest.java, +import java.util.function.Supplier;, +import java.util.stream.Stream;, +import org.springframework.http.codec.BodyExtractor;, +import org.springframework.http.codec.HttpMessageReader;, +	public <T> T body(BodyExtractor<T, ? super ServerHttpRequest> extractor) {, +		return extractor.extract(request(),, +				new BodyExtractor.Context() {, +					@Override, +					public Supplier<Stream<HttpMessageReader<?>>> messageReaders() {, +						return DefaultRequest.this.strategies.messageReaders();, +					}, +				});, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultResponseBuilder.java, +import org.springframework.http.codec.BodyInserter;, +import org.springframework.http.codec.HttpMessageWriter;, +				(response, context) -> response.setComplete(),, +				(response, context) -> Flux.from(voidPublisher).then(response.setComplete()),, +	public <T> Response<T> body(BiFunction<ServerHttpResponse, BodyInserter.Context, Mono<Void>> writer,, +	public <T> Response<T> body(BodyInserter<T, ? super ServerHttpResponse> inserter) {, +		private final BodyInserter<T, ? super ServerHttpResponse> inserter;, +		public BodyInserterResponse(int statusCode, HttpHeaders headers,, +				BodyInserter<T, ? super ServerHttpResponse> inserter) {, +, +			return this.inserter.insert(response, new BodyInserter.Context() {, +				@Override, +				public Supplier<Stream<HttpMessageWriter<?>>> messageWriters() {, +					return strategies.messageWriters();, +				}, +			});, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/Request.java, +import org.springframework.http.codec.BodyExtractor;, +import org.springframework.http.server.reactive.ServerHttpRequest;, +	<T> T body(BodyExtractor<T, ? super ServerHttpRequest> extractor);, +++ /dev/null]