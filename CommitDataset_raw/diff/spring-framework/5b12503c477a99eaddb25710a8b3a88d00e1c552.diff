[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/View.java, + * @author Arjen Poutsma, +	 * Name of the {@link HttpServletRequest} attribute that contains the response status code., +	 * <p>Note: This attribute is not required to be supported by all, +	 * View implementations., +	 */, +	String RESPONSE_STATUS_ATTRIBUTE = View.class.getName() + ".responseStatus";, +, +, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/View.java, + * @author Arjen Poutsma, +	 * Name of the {@link HttpServletRequest} attribute that contains the response status code., +	 * <p>Note: This attribute is not required to be supported by all, +	 * View implementations., +	 */, +	String RESPONSE_STATUS_ATTRIBUTE = View.class.getName() + ".responseStatus";, +, +, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.http.HttpStatus;, +			ResponseStatus responseStatusAnn = AnnotationUtils.findAnnotation(handlerMethod, ResponseStatus.class);, +			if (responseStatusAnn != null) {, +				HttpStatus responseStatus = responseStatusAnn.value();, +				// to be picked up by the RedirectView, +				webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, responseStatus);, +				webRequest.getResponse().setStatus(responseStatus.value());, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/View.java, + * @author Arjen Poutsma, +	 * Name of the {@link HttpServletRequest} attribute that contains the response status code., +	 * <p>Note: This attribute is not required to be supported by all, +	 * View implementations., +	 */, +	String RESPONSE_STATUS_ATTRIBUTE = View.class.getName() + ".responseStatus";, +, +, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.http.HttpStatus;, +			ResponseStatus responseStatusAnn = AnnotationUtils.findAnnotation(handlerMethod, ResponseStatus.class);, +			if (responseStatusAnn != null) {, +				HttpStatus responseStatus = responseStatusAnn.value();, +				// to be picked up by the RedirectView, +				webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, responseStatus);, +				webRequest.getResponse().setStatus(responseStatus.value());, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/RedirectView.java, +import org.springframework.web.servlet.View;, +import org.springframework.http.HttpStatus;, + * @author Arjen Poutsma, +	private HttpStatus statusCode;, +, +	/**, +	 * Set the status code for this view., +	 * <p>Default is to send 302/303, depending on the value of the, +	 * {@link #setHttp10Compatible(boolean) http10Compatible} flag., +	 */, +	public void setStatusCode(HttpStatus statusCode) {, +		this.statusCode = statusCode;, +	}, +			HttpStatus statusCode = getHttp11StatusCode(request, response, targetUrl);, +			response.setStatus(statusCode.value());, +	/**, +	 * Determines the status code to use for HTTP 1.1 compatible requests., +	 * <p>The default implemenetation returns the {@link #setStatusCode(HttpStatus) statusCode}, +	 * property if set, or the value of the {@link #RESPONSE_STATUS_ATTRIBUTE} attribute. If neither are, +	 * set, it defaults to {@link HttpStatus#SEE_OTHER} (303)., +	 * @param request the request to inspect, +	 * @return the response, +	 */, +	protected HttpStatus getHttp11StatusCode(HttpServletRequest request, HttpServletResponse response, String targetUrl) {, +		if (statusCode != null) {, +			return statusCode;, +		}, +		HttpStatus attributeStatusCode = (HttpStatus) request.getAttribute(View.RESPONSE_STATUS_ATTRIBUTE);, +		if (attributeStatusCode != null) {, +			return attributeStatusCode;, +		}, +		return HttpStatus.SEE_OTHER;, +	}, +, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/View.java, + * @author Arjen Poutsma, +	 * Name of the {@link HttpServletRequest} attribute that contains the response status code., +	 * <p>Note: This attribute is not required to be supported by all, +	 * View implementations., +	 */, +	String RESPONSE_STATUS_ATTRIBUTE = View.class.getName() + ".responseStatus";, +, +, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.http.HttpStatus;, +			ResponseStatus responseStatusAnn = AnnotationUtils.findAnnotation(handlerMethod, ResponseStatus.class);, +			if (responseStatusAnn != null) {, +				HttpStatus responseStatus = responseStatusAnn.value();, +				// to be picked up by the RedirectView, +				webRequest.getRequest().setAttribute(View.RESPONSE_STATUS_ATTRIBUTE, responseStatus);, +				webRequest.getResponse().setStatus(responseStatus.value());, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/RedirectView.java]