[+++ b/org.springframework.core/src/main/java/org/springframework/util/xml/AbstractStaxXMLReader.java, + * Copyright 2002-2010 the original author or authors., +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/AbstractStaxXMLReader.java, + * Copyright 2002-2010 the original author or authors., +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/StaxEventXMLReader.java, + * Copyright 2002-2010 the original author or authors., +import javax.xml.stream.Location;, +import javax.xml.stream.events.StartDocument;, +import org.xml.sax.ext.Locator2;, +				handleStartDocument(event);, +				case XMLStreamConstants.START_DOCUMENT:, +					handleStartDocument(event);, +					documentStarted = true;, +					break;, +	private void handleStartDocument(final XMLEvent event) throws SAXException {, +		if (getContentHandler() != null) {, +			final Location location = event.getLocation();, +			getContentHandler().setDocumentLocator(new Locator2() {, +, +				public int getColumnNumber() {, +					return location.getColumnNumber();, +				}, +, +				public int getLineNumber() {, +					return location.getLineNumber();, +				}, +, +				public String getPublicId() {, +					return location.getPublicId();, +				}, +, +				public String getSystemId() {, +					return location.getSystemId();, +				}, +, +				public String getXMLVersion() {, +					if (event.isStartDocument()) {, +						StartDocument startDocument = (StartDocument) event;, +						String version = startDocument.getVersion();, +						return StringUtils.hasLength(version) ? version : "1.0";, +					}, +					return null;, +				}, +, +				public String getEncoding() {, +					if (event.isStartDocument()) {, +						StartDocument startDocument = (StartDocument) event;, +						if (startDocument.encodingSet()) {, +							return startDocument.getCharacterEncodingScheme();, +						}, +					}, +					return null;, +				}, +			});, +, +			getContentHandler().startDocument();, +		}, +	}, +, +	private void handleEndDocument() throws SAXException {, +		if (getContentHandler() != null) {, +			getContentHandler().endDocument();, +		}, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/AbstractStaxXMLReader.java, + * Copyright 2002-2010 the original author or authors., +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/StaxEventXMLReader.java, + * Copyright 2002-2010 the original author or authors., +import javax.xml.stream.Location;, +import javax.xml.stream.events.StartDocument;, +import org.xml.sax.ext.Locator2;, +				handleStartDocument(event);, +				case XMLStreamConstants.START_DOCUMENT:, +					handleStartDocument(event);, +					documentStarted = true;, +					break;, +	private void handleStartDocument(final XMLEvent event) throws SAXException {, +		if (getContentHandler() != null) {, +			final Location location = event.getLocation();, +			getContentHandler().setDocumentLocator(new Locator2() {, +, +				public int getColumnNumber() {, +					return location.getColumnNumber();, +				}, +, +				public int getLineNumber() {, +					return location.getLineNumber();, +				}, +, +				public String getPublicId() {, +					return location.getPublicId();, +				}, +, +				public String getSystemId() {, +					return location.getSystemId();, +				}, +, +				public String getXMLVersion() {, +					if (event.isStartDocument()) {]