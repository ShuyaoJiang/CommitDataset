[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, + * Copyright 2002-2014 the original author or authors., +				handler.clearConnection();, +				logger.error("Failed to close connection in session " + handler.getSessionId() + ": " + t.getMessage());, +			StompConnectionHandler handler = this.connectionHandlers.get(sessionId);, +				if (logger.isWarnEnabled()) {, +				}, +			try {, +			finally {, +				try {, +					clearConnection();, +				}, +				catch (Throwable t) {, +					if (logger.isErrorEnabled()) {, +						logger.error("Failed to close connection: " + t.getMessage());, +					}, +				}, +			}, +		}, +			if (this.tcpConnection == null) {, +				return;, +			}, +			try {, +			finally {, +				try {, +					clearConnection();, +				}, +				catch (Throwable t) {, +					if (logger.isErrorEnabled()) {, +						// Ignore, +					}, +				}, +			}, +		}, +				if (this.isRemoteClientSession) {, +					// Should never happen, +					throw new IllegalStateException("Unexpected client message " + message +, +							(this.tcpConnection != null ?, +									"before STOMP CONNECTED frame" : "after TCP connection closed"));, +				else {, +					throw new IllegalStateException("Cannot forward messages on system connection " +, +							(this.tcpConnection != null ? "before STOMP CONNECTED frame" : "while inactive") +, +							". Try listening for BrokerAvailabilityEvent ApplicationContext events.");, +, +						clearConnection();, +		/**, +		 * Close the TCP connection to the broker and release the connection reference,, +		 * Any exception arising from closing the connection is propagated. The caller, +		 * must handle and log the exception accordingly., +		 *, +		 * <p>If the connection belongs to a client session, the connection handler, +		 * for the session (basically the current instance) is also released from the, +		 * {@link org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler}., +		 */, +		public void clearConnection() {, +, +, +			try {, +				TcpConnection<byte[]> conn = this.tcpConnection;, +					conn.close();, +			}, +			finally {, +				if (this.isRemoteClientSession) {, +					StompBrokerRelayMessageHandler.this.connectionHandlers.remove(this.sessionId);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, + * Copyright 2002-2014 the original author or authors., +				handler.clearConnection();, +				logger.error("Failed to close connection in session " + handler.getSessionId() + ": " + t.getMessage());, +			StompConnectionHandler handler = this.connectionHandlers.get(sessionId);, +				if (logger.isWarnEnabled()) {, +				}, +			try {, +			finally {, +				try {, +					clearConnection();, +				}, +				catch (Throwable t) {, +					if (logger.isErrorEnabled()) {, +						logger.error("Failed to close connection: " + t.getMessage());, +					}, +				}, +			}, +		}, +			if (this.tcpConnection == null) {, +				return;, +			}, +			try {, +			finally {, +				try {, +					clearConnection();, +				}, +				catch (Throwable t) {, +					if (logger.isErrorEnabled()) {, +						// Ignore, +					}, +				}, +			}, +		}, +				if (this.isRemoteClientSession) {, +					// Should never happen]