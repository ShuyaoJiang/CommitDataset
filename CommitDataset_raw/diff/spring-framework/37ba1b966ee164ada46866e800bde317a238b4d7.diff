[+++ b/spring-beans-groovy/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.util.StringUtils;, + * <p><b>This bean definition reader also understands XML bean definition files,, + * allowing for seamless mixing and matching with Groovy bean definition files.</b>, + *, +	 * Load bean definitions from the specified Groovy script or XML file., +	 * <p>Note that ".xml" files will be parsed as XML content; all other kinds, +	 * of resources will be parsed as Groovy scripts., +	 * Load bean definitions from the specified Groovy script or XML file., +	 * <p>Note that ".xml" files will be parsed as XML content; all other kinds, +	 * of resources will be parsed as Groovy scripts., +		// Check for XML files and redirect them to the XmlBeanDefinitionReader, +		String filename = encodedResource.getResource().getFilename();, +		if (StringUtils.endsWithIgnoreCase(filename, ".xml")) {, +			return this.xmlBeanDefinitionReader.loadBeanDefinitions(encodedResource);, +		}, +, +		loadBeanDefinitions(resourcePattern);, +		this.deferredProperties.clear();, +++ b/spring-beans-groovy/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.util.StringUtils;, + * <p><b>This bean definition reader also understands XML bean definition files,, + * allowing for seamless mixing and matching with Groovy bean definition files.</b>, + *, +	 * Load bean definitions from the specified Groovy script or XML file., +	 * <p>Note that ".xml" files will be parsed as XML content; all other kinds, +	 * of resources will be parsed as Groovy scripts., +	 * Load bean definitions from the specified Groovy script or XML file., +	 * <p>Note that ".xml" files will be parsed as XML content; all other kinds, +	 * of resources will be parsed as Groovy scripts., +		// Check for XML files and redirect them to the XmlBeanDefinitionReader, +		String filename = encodedResource.getResource().getFilename();, +		if (StringUtils.endsWithIgnoreCase(filename, ".xml")) {, +			return this.xmlBeanDefinitionReader.loadBeanDefinitions(encodedResource);, +		}, +, +		loadBeanDefinitions(resourcePattern);, +		this.deferredProperties.clear();, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +import org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader;, +import org.springframework.beans.factory.xml.XmlBeanDefinitionReader;, +, +, +			// Default reader selection necessary?, +			if (readerClass.equals(BeanDefinitionReader.class)) {, +				if (StringUtils.endsWithIgnoreCase(resource, ".groovy")) {, +					// When clearly asking for Groovy, that's what they'll get..., +					readerClass = GroovyBeanDefinitionReader.class;, +				}, +				else {, +					// Primarily ".xml" files but for any other extension as well, +					readerClass = XmlBeanDefinitionReader.class;, +				}, +			}, +, +			BeanDefinitionReader reader = readerInstanceCache.get(readerClass);, +			if (reader == null) {, +					reader = readerClass.getConstructor(BeanDefinitionRegistry.class).newInstance(this.registry);, +					if (reader instanceof AbstractBeanDefinitionReader) {, +						AbstractBeanDefinitionReader abdr = ((AbstractBeanDefinitionReader) reader);, +					readerInstanceCache.put(readerClass, reader);, +, +++ b/spring-beans-groovy/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.util.StringUtils;, + * <p><b>This bean definition reader also understands XML bean definition files,, + * allowing for seamless mixing and matching with Groovy bean definition files.</b>, + *, +	 * Load bean definitions from the specified Groovy script or XML file., +	 * <p>Note that ".xml" files will be parsed as XML content; all other kinds, +	 * of resources will be parsed as Groovy scripts., +	 * Load bean definitions from the specified Groovy script or XML file., +	 * <p>Note that ".xml" files will be parsed as XML content; all other kinds, +	 * of resources will be parsed as Groovy scripts., +		// Check for XML files and redirect them to the XmlBeanDefinitionReader, +		String filename = encodedResource.getResource().getFilename();, +		if (StringUtils.endsWithIgnoreCase(filename, ".xml")) {, +			return this.xmlBeanDefinitionReader.loadBeanDefinitions(encodedResource);, +		}, +, +		loadBeanDefinitions(resourcePattern);, +		this.deferredProperties.clear();, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +import org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader;, +import org.springframework.beans.factory.xml.XmlBeanDefinitionReader;, +, +, +			// Default reader selection necessary?, +			if (readerClass.equals(BeanDefinitionReader.class)) {, +				if (StringUtils.endsWithIgnoreCase(resource, ".groovy")) {, +					// When clearly asking for Groovy, that's what they'll get..., +					readerClass = GroovyBeanDefinitionReader.class;, +				}, +				else {, +					// Primarily ".xml" files but for any other extension as well, +					readerClass = XmlBeanDefinitionReader.class;, +				}, +			}]