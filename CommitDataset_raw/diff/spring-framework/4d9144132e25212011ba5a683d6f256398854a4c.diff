[+++ b/build.gradle, +	ext.reactorVersion         = "Bismuth-BUILD-SNAPSHOT", +++ b/build.gradle, +	ext.reactorVersion         = "Bismuth-BUILD-SNAPSHOT", +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceRegionEncoder.java, +					.flatMapMany(region -> writeResourceRegion(region, bufferFactory));, +++ b/build.gradle, +	ext.reactorVersion         = "Bismuth-BUILD-SNAPSHOT", +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceRegionEncoder.java, +					.flatMapMany(region -> writeResourceRegion(region, bufferFactory));, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/DataBufferUtils.java, +			emitter.onDispose(() -> closeChannel(channel));, +++ b/build.gradle, +	ext.reactorVersion         = "Bismuth-BUILD-SNAPSHOT", +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceRegionEncoder.java, +					.flatMapMany(region -> writeResourceRegion(region, bufferFactory));, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/DataBufferUtils.java, +			emitter.onDispose(() -> closeChannel(channel));, +++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java, +				.flatMap(NettyContext::onClose)                // post-connect issues, +++ b/build.gradle, +	ext.reactorVersion         = "Bismuth-BUILD-SNAPSHOT", +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceRegionEncoder.java, +					.flatMapMany(region -> writeResourceRegion(region, bufferFactory));, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/DataBufferUtils.java, +			emitter.onDispose(() -> closeChannel(channel));, +++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java, +				.flatMap(NettyContext::onClose)                // post-connect issues, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java, +				.flatMap(value -> {, +++ b/build.gradle, +	ext.reactorVersion         = "Bismuth-BUILD-SNAPSHOT", +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceRegionEncoder.java, +					.flatMapMany(region -> writeResourceRegion(region, bufferFactory));, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/DataBufferUtils.java, +			emitter.onDispose(() -> closeChannel(channel));, +++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java, +				.flatMap(NettyContext::onClose)                // post-connect issues, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java, +				.flatMap(value -> {, +++ b/spring-web/src/main/java/org/springframework/http/codec/ResourceHttpMessageWriter.java, +		return Mono.from(inputStream).flatMap(resource ->, +		return Mono.from(inputStream).flatMap(resource -> {, +++ b/build.gradle, +	ext.reactorVersion         = "Bismuth-BUILD-SNAPSHOT", +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceRegionEncoder.java, +					.flatMapMany(region -> writeResourceRegion(region, bufferFactory));, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/DataBufferUtils.java, +			emitter.onDispose(() -> closeChannel(channel));, +++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java, +				.flatMap(NettyContext::onClose)                // post-connect issues, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java, +				.flatMap(value -> {, +++ b/spring-web/src/main/java/org/springframework/http/codec/ResourceHttpMessageWriter.java, +		return Mono.from(inputStream).flatMap(resource ->, +		return Mono.from(inputStream).flatMap(resource -> {, +++ b/spring-web/src/main/java/org/springframework/http/codec/xml/XmlEventDecoder.java, +					flatMapMany(dataBuffer -> {, +++ b/build.gradle, +	ext.reactorVersion         = "Bismuth-BUILD-SNAPSHOT", +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceRegionEncoder.java, +					.flatMapMany(region -> writeResourceRegion(region, bufferFactory));, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/DataBufferUtils.java, +			emitter.onDispose(() -> closeChannel(channel));, +++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java, +				.flatMap(NettyContext::onClose)                // post-connect issues, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java, +				.flatMap(value -> {, +++ b/spring-web/src/main/java/org/springframework/http/codec/ResourceHttpMessageWriter.java, +		return Mono.from(inputStream).flatMap(resource ->, +		return Mono.from(inputStream).flatMap(resource -> {, +++ b/spring-web/src/main/java/org/springframework/http/codec/xml/XmlEventDecoder.java, +					flatMapMany(dataBuffer -> {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ChannelSendOperator.java, +import reactor.core.Exceptions;, +	private class WriteWithBarrier extends SubscriberAdapter<T, Void> implements Publisher<T> {, +	// TODO Remove this copy of Reactor 3.0.x Operators.SubscriberAdapter, +	private static class SubscriberAdapter<I, O> implements Subscriber<I>, Subscription {, +, +		protected final Subscriber<? super O> subscriber;, +, +		protected Subscription subscription;, +, +		public SubscriberAdapter(Subscriber<? super O> subscriber) {, +			this.subscriber = subscriber;, +		}, +, +		public Subscriber<? super O> downstream() {, +			return subscriber;, +		}, +, +		@Override, +		public final void cancel() {, +			try {, +				doCancel();, +			} catch (Throwable throwable) {, +				doOnSubscriberError(Operators.onOperatorError(subscription, throwable));, +			}, +		}, +]