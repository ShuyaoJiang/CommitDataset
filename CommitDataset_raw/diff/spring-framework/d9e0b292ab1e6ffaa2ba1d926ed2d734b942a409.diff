[+++ b/spring-aspects/src/test/java/org/springframework/cache/config/AnnotatedJCacheableService.java, +import org.springframework.cache.interceptor.SimpleKeyGenerator;, +		Object key = SimpleKeyGenerator.generateKey(id);, +		Object key = SimpleKeyGenerator.generateKey(id);, +++ b/spring-aspects/src/test/java/org/springframework/cache/config/AnnotatedJCacheableService.java, +import org.springframework.cache.interceptor.SimpleKeyGenerator;, +		Object key = SimpleKeyGenerator.generateKey(id);, +		Object key = SimpleKeyGenerator.generateKey(id);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/config/AbstractJCacheConfiguration.java, +			source.setCacheManager(this.cacheManager);, +		if (this.keyGenerator != null) {, +			source.setKeyGenerator(this.keyGenerator);, +			source.setCacheResolver(this.cacheResolver);, +			source.setExceptionCacheResolver(this.exceptionCacheResolver);, +++ b/spring-aspects/src/test/java/org/springframework/cache/config/AnnotatedJCacheableService.java, +import org.springframework.cache.interceptor.SimpleKeyGenerator;, +		Object key = SimpleKeyGenerator.generateKey(id);, +		Object key = SimpleKeyGenerator.generateKey(id);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/config/AbstractJCacheConfiguration.java, +			source.setCacheManager(this.cacheManager);, +		if (this.keyGenerator != null) {, +			source.setKeyGenerator(this.keyGenerator);, +			source.setCacheResolver(this.cacheResolver);, +			source.setExceptionCacheResolver(this.exceptionCacheResolver);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractCacheInterceptor.java, +abstract class AbstractCacheInterceptor<O extends AbstractJCacheOperation<A>, A extends Annotation>, +++ b/spring-aspects/src/test/java/org/springframework/cache/config/AnnotatedJCacheableService.java, +import org.springframework.cache.interceptor.SimpleKeyGenerator;, +		Object key = SimpleKeyGenerator.generateKey(id);, +		Object key = SimpleKeyGenerator.generateKey(id);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/config/AbstractJCacheConfiguration.java, +			source.setCacheManager(this.cacheManager);, +		if (this.keyGenerator != null) {, +			source.setKeyGenerator(this.keyGenerator);, +			source.setCacheResolver(this.cacheResolver);, +			source.setExceptionCacheResolver(this.exceptionCacheResolver);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractCacheInterceptor.java, +abstract class AbstractCacheInterceptor<O extends AbstractJCacheOperation<A>, A extends Annotation>, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java, +			JCacheOperation<?> operation = computeCacheOperation(method, targetClass);, +	private JCacheOperation<?> computeCacheOperation(Method method, Class<?> targetClass) {, +++ b/spring-aspects/src/test/java/org/springframework/cache/config/AnnotatedJCacheableService.java, +import org.springframework.cache.interceptor.SimpleKeyGenerator;, +		Object key = SimpleKeyGenerator.generateKey(id);, +		Object key = SimpleKeyGenerator.generateKey(id);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/config/AbstractJCacheConfiguration.java, +			source.setCacheManager(this.cacheManager);, +		if (this.keyGenerator != null) {, +			source.setKeyGenerator(this.keyGenerator);, +			source.setCacheResolver(this.cacheResolver);, +			source.setExceptionCacheResolver(this.exceptionCacheResolver);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractCacheInterceptor.java, +abstract class AbstractCacheInterceptor<O extends AbstractJCacheOperation<A>, A extends Annotation>, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java, +			JCacheOperation<?> operation = computeCacheOperation(method, targetClass);, +	private JCacheOperation<?> computeCacheOperation(Method method, Class<?> targetClass) {, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractJCacheKeyOperation.java, +/*, + * Copyright 2002-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.cache.jcache.interceptor;, +, +import java.lang.annotation.Annotation;, +import java.util.ArrayList;, +import java.util.List;, +, +import javax.cache.annotation.CacheInvocationParameter;, +import javax.cache.annotation.CacheMethodDetails;, +, +import org.springframework.cache.interceptor.CacheResolver;, +import org.springframework.cache.interceptor.KeyGenerator;, +, +/**, + * A base {@link JCacheOperation} that operates with a key., + *, + * @author Stephane Nicoll, + * @since 4.1, + */, +abstract class AbstractJCacheKeyOperation<A extends Annotation> extends AbstractJCacheOperation<A> {, +, +	private final KeyGenerator keyGenerator;, +, +	private final List<CacheParameterDetail> keyParameterDetails;, +, +, +	/**, +	 * Create a new instance.]