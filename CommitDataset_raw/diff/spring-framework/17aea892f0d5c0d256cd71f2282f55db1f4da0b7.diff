[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, +			command = headers.updateStompCommandAsClientMessage();, +		if ((command != null) && command.requiresDestination() && !checkDestinationPrefix(destination)) {, +			forwardInternal(connectMessage, tcpConn);, +			else if (!forwardInternal(message, tcpConnection)) {, +				Message<?> message, TcpConnection<Message<byte[]>, Message<byte[]>> tcpConnection) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, +			command = headers.updateStompCommandAsClientMessage();, +		if ((command != null) && command.requiresDestination() && !checkDestinationPrefix(destination)) {, +			forwardInternal(connectMessage, tcpConn);, +			else if (!forwardInternal(message, tcpConnection)) {, +				Message<?> message, TcpConnection<Message<byte[]>, Message<byte[]>> tcpConnection) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompHeaderAccessor.java, +	public StompCommand updateStompCommandAsClientMessage() {, +, +		return getCommand();, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, +			command = headers.updateStompCommandAsClientMessage();, +		if ((command != null) && command.requiresDestination() && !checkDestinationPrefix(destination)) {, +			forwardInternal(connectMessage, tcpConn);, +			else if (!forwardInternal(message, tcpConnection)) {, +				Message<?> message, TcpConnection<Message<byte[]>, Message<byte[]>> tcpConnection) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompHeaderAccessor.java, +	public StompCommand updateStompCommandAsClientMessage() {, +, +		return getCommand();, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandlerIntegrationTests.java, +	// When TCP client is behind interface and configurable:, +	// test "host" header (virtualHost property), +	// test "/user/.." destination is excluded]