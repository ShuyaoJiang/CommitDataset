[+++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, +import java.lang.reflect.Method;, +import org.springframework.util.ReflectionUtils;, +	private static final Method setStatisticsEnabledMethod =, +			ClassUtils.getMethodIfAvailable(Ehcache.class, "setStatisticsEnabled", boolean.class);, +, +	// EhCache's setSampledStatisticsEnabled(boolean) available? Not anymore as of EhCache 2.7..., +	private static final Method setSampledStatisticsEnabledMethod =, +			ClassUtils.getMethodIfAvailable(Ehcache.class, "setSampledStatisticsEnabled", boolean.class);, +			if (this.statisticsEnabled && setStatisticsEnabledMethod != null) {, +				ReflectionUtils.invokeMethod(setStatisticsEnabledMethod, rawCache, true);, +			if (this.sampledStatisticsEnabled && setSampledStatisticsEnabledMethod != null) {, +				ReflectionUtils.invokeMethod(setSampledStatisticsEnabledMethod, rawCache, true);, +, +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, +import java.lang.reflect.Method;, +import org.springframework.util.ReflectionUtils;, +	private static final Method setStatisticsEnabledMethod =, +			ClassUtils.getMethodIfAvailable(Ehcache.class, "setStatisticsEnabled", boolean.class);, +, +	// EhCache's setSampledStatisticsEnabled(boolean) available? Not anymore as of EhCache 2.7..., +	private static final Method setSampledStatisticsEnabledMethod =, +			ClassUtils.getMethodIfAvailable(Ehcache.class, "setSampledStatisticsEnabled", boolean.class);, +			if (this.statisticsEnabled && setStatisticsEnabledMethod != null) {, +				ReflectionUtils.invokeMethod(setStatisticsEnabledMethod, rawCache, true);, +			if (this.sampledStatisticsEnabled && setSampledStatisticsEnabledMethod != null) {, +				ReflectionUtils.invokeMethod(setSampledStatisticsEnabledMethod, rawCache, true);, +, +++ b/spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.expression.spel.SpelParserConfiguration;, +	private ExpressionParser expressionParser;, +	 * Create a new {@code StandardBeanExpressionResolver} with default settings., +	 */, +	public StandardBeanExpressionResolver() {, +		this.expressionParser = new SpelExpressionParser();, +	}, +, +	/**, +	 * Create a new {@code StandardBeanExpressionResolver} with the given bean class loader,, +	 * using it as the basis for expression compilation., +	 * @param beanClassLoader the factory's bean class loader, +	 */, +	public StandardBeanExpressionResolver(ClassLoader beanClassLoader) {, +		this.expressionParser = new SpelExpressionParser(new SpelParserConfiguration(null, beanClassLoader));, +	}, +, +, +	/**, +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, +import java.lang.reflect.Method;, +import org.springframework.util.ReflectionUtils;, +	private static final Method setStatisticsEnabledMethod =, +			ClassUtils.getMethodIfAvailable(Ehcache.class, "setStatisticsEnabled", boolean.class);, +, +	// EhCache's setSampledStatisticsEnabled(boolean) available? Not anymore as of EhCache 2.7..., +	private static final Method setSampledStatisticsEnabledMethod =, +			ClassUtils.getMethodIfAvailable(Ehcache.class, "setSampledStatisticsEnabled", boolean.class);, +			if (this.statisticsEnabled && setStatisticsEnabledMethod != null) {, +				ReflectionUtils.invokeMethod(setStatisticsEnabledMethod, rawCache, true);, +			if (this.sampledStatisticsEnabled && setSampledStatisticsEnabledMethod != null) {, +				ReflectionUtils.invokeMethod(setSampledStatisticsEnabledMethod, rawCache, true);, +, +++ b/spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.expression.spel.SpelParserConfiguration;, +	private ExpressionParser expressionParser;, +	 * Create a new {@code StandardBeanExpressionResolver} with default settings., +	 */, +	public StandardBeanExpressionResolver() {, +		this.expressionParser = new SpelExpressionParser();, +	}, +, +	/**, +	 * Create a new {@code StandardBeanExpressionResolver} with the given bean class loader,, +	 * using it as the basis for expression compilation., +	 * @param beanClassLoader the factory's bean class loader, +	 */, +	public StandardBeanExpressionResolver(ClassLoader beanClassLoader) {, +		this.expressionParser = new SpelExpressionParser(new SpelParserConfiguration(null, beanClassLoader));, +	}, +, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java, +		beanFactory.setBeanExpressionResolver(new StandardBeanExpressionResolver(beanFactory.getBeanClassLoader()));, +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, +import java.lang.reflect.Method;, +import org.springframework.util.ReflectionUtils;, +	private static final Method setStatisticsEnabledMethod =, +			ClassUtils.getMethodIfAvailable(Ehcache.class, "setStatisticsEnabled", boolean.class);, +, +	// EhCache's setSampledStatisticsEnabled(boolean) available? Not anymore as of EhCache 2.7..., +	private static final Method setSampledStatisticsEnabledMethod =, +			ClassUtils.getMethodIfAvailable(Ehcache.class, "setSampledStatisticsEnabled", boolean.class);, +			if (this.statisticsEnabled && setStatisticsEnabledMethod != null) {, +				ReflectionUtils.invokeMethod(setStatisticsEnabledMethod, rawCache, true);, +			if (this.sampledStatisticsEnabled && setSampledStatisticsEnabledMethod != null) {, +				ReflectionUtils.invokeMethod(setSampledStatisticsEnabledMethod, rawCache, true);, +]