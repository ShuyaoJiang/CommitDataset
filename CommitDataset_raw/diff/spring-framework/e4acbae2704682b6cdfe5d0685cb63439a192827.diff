[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.java, + * A {@link org.springframework.web.servlet.HandlerExceptionResolver, + * HandlerExceptionResolver} that uses the {@link ResponseStatus @ResponseStatus}, + * annotation to map exceptions to HTTP status codes., + * <p>This exception resolver is enabled by default in the, + * {@link org.springframework.web.servlet.DispatcherServlet DispatcherServlet}, + * and the MVC Java config and the MVC namespace., + *, + * <p>As of 4.2 this resolver also looks recursively for {@code @ResponseStatus}, + * present on cause exceptions., +	 * Template method that handles {@link ResponseStatus @ResponseStatus} annotation., +	 *, +	 * <p>Default implementation send a response error using, +	 * {@link HttpServletResponse#sendError(int)} or, +	 * {@link HttpServletResponse#sendError(int, String)} if the annotation has a, +	 * {@linkplain ResponseStatus#reason() reason} and then returns an empty ModelAndView., +	 *, +	 * @param handler the executed handler, or {@code null} if none chosen at the, +	 * time of the exception (for example, if multipart resolution failed), +	 * @param ex the exception that got thrown during handler execution or the, +	 * exception that has the ResponseStatus annotation if found on the cause., +	 * @return a corresponding ModelAndView to forward to, or {@code null}, +	 * for default processing]