[+++ b/spring-web/src/main/java/org/springframework/http/ResponseEntity.java, + * Or, by using a builder accessible via static methods:, +	 * Creates a builder with the given status., +	 * @return the created builder, +	 * Creates a builder with the given status., +	 * @return the created builder, +	 * Creates a builder with the status set to {@linkplain HttpStatus#OK OK}., +	 * @return the created builder, +	 * A shortcut for creating a {@code ResponseEntity} with the given body and, +	 * status set to {@linkplain HttpStatus#OK OK}., +	 * @return the created {@code ResponseEntity}, +	 * Creates a new builder with a {@linkplain HttpStatus#CREATED CREATED}, +	 * status and a location header set to the given URI., +	 * @return the created builder, +	 * Creates a builder with an {@link HttpStatus#ACCEPTED ACCEPTED} status., +	 * @return the created builder, +	 * Creates a builder with a {@link HttpStatus#NO_CONTENT NO_CONTENT} status., +	 * @return the created builder, +	 * @since 4.1, +		 * @param headerValues the header value(s), +		 * Set the set of allowed {@link HttpMethod HTTP methods}, as specified, +		 * by the {@code Allow} header., +		 * <p>The date should be specified as the number of milliseconds since, +		 * January 1, 1970 GMT., +		 * @see BodyBuilder#body(Object), +	 * @since 4.1, +		 * Set the length of the body in bytes, as specified by the, +		 * {@code Content-Length} header., +				this.headers.add(headerName, headerValue);, +			this.headers.setAllow(new HashSet<HttpMethod>(Arrays.asList(allowedMethods)));, +			this.headers.setContentLength(contentLength);, +			this.headers.setContentType(contentType);, +			this.headers.setETag(eTag);, +			this.headers.setLastModified(date);, +			this.headers.setLocation(location);, +			return new ResponseEntity<Void>(null, this.headers, this.status);, +			return new ResponseEntity<T>(body, this.headers, this.status);]