[+++ b/spring-core/src/main/java/org/springframework/core/io/buffer/DefaultDataBuffer.java, +		final int remaining = readableByteCount();, +		((Buffer) oldBuffer).position(this.readPosition).limit(this.writePosition);, +		this.readPosition = 0;, +		this.writePosition = remaining;, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/DefaultDataBuffer.java, +		final int remaining = readableByteCount();, +		((Buffer) oldBuffer).position(this.readPosition).limit(this.writePosition);, +		this.readPosition = 0;, +		this.writePosition = remaining;, +++ b/spring-core/src/test/java/org/springframework/core/io/buffer/DataBufferTests.java, +import java.nio.charset.StandardCharsets;, +	@Test, +	public void growDataBuffer() {, +		DataBuffer buffer = stringBuffer("Hello World!");, +, +		byte[] bytes = new byte[5];, +		buffer.read(bytes);, +		assertArrayEquals("Hello".getBytes(StandardCharsets.UTF_8), bytes);, +, +		buffer.write("!!".getBytes(StandardCharsets.UTF_8));, +, +		bytes = new byte[9];, +		buffer.read(bytes);, +		assertArrayEquals(" World!!!".getBytes(StandardCharsets.UTF_8), bytes);, +	}, +, +]