[+++ b/spring-web-reactive/src/main/java/org/springframework/http/codec/SseEventEncoder.java, +import org.springframework.http.MediaType;, +			MediaType mediaType = (event.getMediaType() == null ?, +					MediaType.ALL : event.getMediaType());, +						.filter(e -> e.canEncode(ResolvableType.forClass(data.getClass()), mediaType)), +										ResolvableType.forClass(data.getClass()), mediaType), +++ b/spring-web-reactive/src/main/java/org/springframework/http/codec/SseEventEncoder.java, +import org.springframework.http.MediaType;, +			MediaType mediaType = (event.getMediaType() == null ?, +					MediaType.ALL : event.getMediaType());, +						.filter(e -> e.canEncode(ResolvableType.forClass(data.getClass()), mediaType)), +										ResolvableType.forClass(data.getClass()), mediaType), +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/sse/SseEvent.java, +import org.springframework.http.MediaType;, + * @see <a href="https://www.w3.org/TR/eventsource/">Server-Sent Events W3C recommendation</a>, +	private MediaType mediaType;, +	public SseEvent(Object data, MediaType mediaType) {, +		this.mediaType = mediaType;, +	 * @see #setMediaType(MediaType), +	 * Set the {@link MediaType} used to serialize the {@code data}., +	public void setMediaType(MediaType mediaType) {, +		this.mediaType = mediaType;, +	 * @see #setMediaType(MediaType), +	public MediaType getMediaType() {, +		return this.mediaType;]