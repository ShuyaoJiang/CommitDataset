[+++ b/spring-web/src/main/java/org/springframework/web/client/reactive/ClientResponse.java, + * {@link #body(BodyExtractor)}, {@link #bodyToMono(Class)}, {@link #bodyToFlux(Class)}, + * respectively., +	 * Extract the body with the given {@code BodyExtractor}. Unlike {@link #bodyToMono(Class)} and, +	 * {@link #bodyToFlux(Class)}; this method does not check for a 4xx or 5xx  status code before, +	 * extracting the body., +	 * Extract the body to a {@code Mono}. If the response has status code 4xx or 5xx, the, +	 * {@code Mono} will contain a {@link WebClientException}., +	 * @return a mono containing the body, or a {@link WebClientException} if the status code is, +	 * 4xx or 5xx, +	 * Extract the body to a {@code Flux}. If the response has status code 4xx or 5xx, the, +	 * {@code Flux} will contain a {@link WebClientException}., +	 * @return a flux containing the body, or a {@link WebClientException} if the status code is, +	 * 4xx or 5xx, +++ b/spring-web/src/main/java/org/springframework/web/client/reactive/ClientResponse.java, + * {@link #body(BodyExtractor)}, {@link #bodyToMono(Class)}, {@link #bodyToFlux(Class)}, + * respectively., +	 * Extract the body with the given {@code BodyExtractor}. Unlike {@link #bodyToMono(Class)} and, +	 * {@link #bodyToFlux(Class)}; this method does not check for a 4xx or 5xx  status code before, +	 * extracting the body., +	 * Extract the body to a {@code Mono}. If the response has status code 4xx or 5xx, the, +	 * {@code Mono} will contain a {@link WebClientException}., +	 * @return a mono containing the body, or a {@link WebClientException} if the status code is, +	 * 4xx or 5xx, +	 * Extract the body to a {@code Flux}. If the response has status code 4xx or 5xx, the, +	 * {@code Flux} will contain a {@link WebClientException}., +	 * @return a flux containing the body, or a {@link WebClientException} if the status code is, +	 * 4xx or 5xx, +++ b/spring-web/src/main/java/org/springframework/web/client/reactive/DefaultClientResponse.java, +import java.util.function.Function;, +import org.reactivestreams.Publisher;, +		return bodyToPublisher(BodyExtractors.toMono(elementClass), Mono::error);, +		return bodyToPublisher(BodyExtractors.toFlux(elementClass), Flux::error);, +	}, +, +	private <T extends Publisher<?>> T bodyToPublisher(, +			BodyExtractor<T, ? super ClientHttpResponse> extractor,, +			Function<WebClientException, T> errorFunction) {, +, +		HttpStatus status = statusCode();, +		if (status.is4xxClientError() || status.is5xxServerError()) {, +			WebClientException ex = new WebClientException(, +					"ClientResponse has erroneous status code: " + status.value() +, +							" " + status.getReasonPhrase());, +			return errorFunction.apply(ex);, +		}, +		else {, +			return body(extractor);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/client/reactive/ClientResponse.java, + * {@link #body(BodyExtractor)}, {@link #bodyToMono(Class)}, {@link #bodyToFlux(Class)}, + * respectively., +	 * Extract the body with the given {@code BodyExtractor}. Unlike {@link #bodyToMono(Class)} and, +	 * {@link #bodyToFlux(Class)}; this method does not check for a 4xx or 5xx  status code before, +	 * extracting the body., +	 * Extract the body to a {@code Mono}. If the response has status code 4xx or 5xx, the, +	 * {@code Mono} will contain a {@link WebClientException}., +	 * @return a mono containing the body, or a {@link WebClientException} if the status code is, +	 * 4xx or 5xx, +	 * Extract the body to a {@code Flux}. If the response has status code 4xx or 5xx, the, +	 * {@code Flux} will contain a {@link WebClientException}., +	 * @return a flux containing the body, or a {@link WebClientException} if the status code is, +	 * 4xx or 5xx, +++ b/spring-web/src/main/java/org/springframework/web/client/reactive/DefaultClientResponse.java, +import java.util.function.Function;, +import org.reactivestreams.Publisher;, +		return bodyToPublisher(BodyExtractors.toMono(elementClass), Mono::error);, +		return bodyToPublisher(BodyExtractors.toFlux(elementClass), Flux::error);, +	}, +, +	private <T extends Publisher<?>> T bodyToPublisher(, +			BodyExtractor<T, ? super ClientHttpResponse> extractor,, +			Function<WebClientException, T> errorFunction) {, +, +		HttpStatus status = statusCode();, +		if (status.is4xxClientError() || status.is5xxServerError()) {, +			WebClientException ex = new WebClientException(, +					"ClientResponse has erroneous status code: " + status.value() +, +							" " + status.getReasonPhrase());, +			return errorFunction.apply(ex);, +		}, +		else {, +			return body(extractor);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/client/reactive/DefaultWebClientBuilder.java, +++ b/spring-web/src/main/java/org/springframework/web/client/reactive/ClientResponse.java, + * {@link #body(BodyExtractor)}, {@link #bodyToMono(Class)}, {@link #bodyToFlux(Class)}, + * respectively., +	 * Extract the body with the given {@code BodyExtractor}. Unlike {@link #bodyToMono(Class)} and, +	 * {@link #bodyToFlux(Class)}; this method does not check for a 4xx or 5xx  status code before, +	 * extracting the body., +	 * Extract the body to a {@code Mono}. If the response has status code 4xx or 5xx, the, +	 * {@code Mono} will contain a {@link WebClientException}., +	 * @return a mono containing the body, or a {@link WebClientException} if the status code is, +	 * 4xx or 5xx, +	 * Extract the body to a {@code Flux}. If the response has status code 4xx or 5xx, the, +	 * {@code Flux} will contain a {@link WebClientException}., +	 * @return a flux containing the body, or a {@link WebClientException} if the status code is, +	 * 4xx or 5xx, +++ b/spring-web/src/main/java/org/springframework/web/client/reactive/DefaultClientResponse.java]