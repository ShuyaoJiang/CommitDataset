[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/support/HttpSessionHandshakeInterceptor.java, +	/**, +	 * The name of the attribute under which the HTTP session id is exposed when, +	 * {@link #setCopyHttpSessionId(boolean) copyHttpSessionId} is "true"., +	 */, +	public static final String HTTP_SESSION_ID_ATTR_NAME = "HTTP.SESSION.ID";, +, +	private final Collection<String> attributeNames;, +, +	private boolean copyHttpSessionId;, +	/**, +	 * When set to "true", the HTTP session id is copied to the WebSocket, +	 * handshake attributes, and is subsequently available via, +	 * {@link org.springframework.web.socket.WebSocketSession#getAttributes()}, +	 * under the key {@link #HTTP_SESSION_ID_ATTR_NAME}., +	 * <p>By default this is "false"., +	 * @param copyHttpSessionId whether to copy the HTTP session id., +	 */, +	public void setCopyHttpSessionId(boolean copyHttpSessionId) {, +		this.copyHttpSessionId = copyHttpSessionId;, +	}, +, +	/**, +	 * Whether to copy the HTTP session id to the handshake attributes., +	 */, +	public boolean isCopyHttpSessionId() {, +		return this.copyHttpSessionId;, +	}, +, +				if (isCopyHttpSessionId()) {, +					attributes.put(HTTP_SESSION_ID_ATTR_NAME, session.getId());, +				}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/support/HttpSessionHandshakeInterceptor.java, +	/**, +	 * The name of the attribute under which the HTTP session id is exposed when, +	 * {@link #setCopyHttpSessionId(boolean) copyHttpSessionId} is "true"., +	 */, +	public static final String HTTP_SESSION_ID_ATTR_NAME = "HTTP.SESSION.ID";, +, +	private final Collection<String> attributeNames;, +, +	private boolean copyHttpSessionId;, +	/**, +	 * When set to "true", the HTTP session id is copied to the WebSocket, +	 * handshake attributes, and is subsequently available via, +	 * {@link org.springframework.web.socket.WebSocketSession#getAttributes()}, +	 * under the key {@link #HTTP_SESSION_ID_ATTR_NAME}., +	 * <p>By default this is "false"., +	 * @param copyHttpSessionId whether to copy the HTTP session id., +	 */, +	public void setCopyHttpSessionId(boolean copyHttpSessionId) {, +		this.copyHttpSessionId = copyHttpSessionId;, +	}, +, +	/**, +	 * Whether to copy the HTTP session id to the handshake attributes., +	 */, +	public boolean isCopyHttpSessionId() {, +		return this.copyHttpSessionId;, +	}, +, +				if (isCopyHttpSessionId()) {, +					attributes.put(HTTP_SESSION_ID_ATTR_NAME, session.getId());, +				}, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/server/support/HttpSessionHandshakeInterceptorTests.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.mock.web.test.MockHttpSession;, +		interceptor.beforeHandshake(this.request, this.response, wsHandler, attributes);, +		interceptor.beforeHandshake(this.request, this.response, wsHandler, attributes);, +	public void copyHttpSessionId() throws Exception {, +, +		Map<String, Object> attributes = new HashMap<String, Object>();, +		WebSocketHandler wsHandler = Mockito.mock(WebSocketHandler.class);, +, +		this.servletRequest.setSession(new MockHttpSession(null, "foo"));, +, +		HttpSessionHandshakeInterceptor interceptor = new HttpSessionHandshakeInterceptor();, +		interceptor.setCopyHttpSessionId(true);, +		interceptor.beforeHandshake(this.request, this.response, wsHandler, attributes);, +, +		assertEquals(1, attributes.size());, +		assertEquals("foo", attributes.get(HttpSessionHandshakeInterceptor.HTTP_SESSION_ID_ATTR_NAME));, +	}, +, +	@Test, +		interceptor.beforeHandshake(this.request, this.response, wsHandler, attributes);]