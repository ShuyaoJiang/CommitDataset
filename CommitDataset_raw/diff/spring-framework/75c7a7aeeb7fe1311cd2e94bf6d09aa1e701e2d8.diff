[+++ b/org.springframework.context/src/main/java/org/springframework/ui/WebBindAndValidateLifecycle.java, +import org.springframework.ui.validation.ValidateResults;, +		BindingResults bindingResults = binder.bind(values);, +		if (validationDecider.shouldValidateAfter(bindingResults)) {, +			ValidateResults validationResults = validator.validate(binder.getModel(), bindingResults.successes().properties());, +		// TODO translate binding and validation results into messages, +++ b/org.springframework.context/src/main/java/org/springframework/ui/WebBindAndValidateLifecycle.java, +import org.springframework.ui.validation.ValidateResults;, +		BindingResults bindingResults = binder.bind(values);, +		if (validationDecider.shouldValidateAfter(bindingResults)) {, +			ValidateResults validationResults = validator.validate(binder.getModel(), bindingResults.successes().properties());, +		// TODO translate binding and validation results into messages, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/BindingResults.java, +	 * The ordered list of properties for which a {@link BindingResult} was returned., +++ b/org.springframework.context/src/main/java/org/springframework/ui/WebBindAndValidateLifecycle.java, +import org.springframework.ui.validation.ValidateResults;, +		BindingResults bindingResults = binder.bind(values);, +		if (validationDecider.shouldValidateAfter(bindingResults)) {, +			ValidateResults validationResults = validator.validate(binder.getModel(), bindingResults.successes().properties());, +		// TODO translate binding and validation results into messages, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/BindingResults.java, +	 * The ordered list of properties for which a {@link BindingResult} was returned., +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +	, +++ b/org.springframework.context/src/main/java/org/springframework/ui/WebBindAndValidateLifecycle.java, +import org.springframework.ui.validation.ValidateResults;, +		BindingResults bindingResults = binder.bind(values);, +		if (validationDecider.shouldValidateAfter(bindingResults)) {, +			ValidateResults validationResults = validator.validate(binder.getModel(), bindingResults.successes().properties());, +		// TODO translate binding and validation results into messages, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/BindingResults.java, +	 * The ordered list of properties for which a {@link BindingResult} was returned., +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +	, +++ b/org.springframework.context/src/test/java/org/springframework/ui/binding/support/GenericBinderTests.java, +	, +++ b/org.springframework.context/src/main/java/org/springframework/ui/WebBindAndValidateLifecycle.java, +import org.springframework.ui.validation.ValidateResults;, +		BindingResults bindingResults = binder.bind(values);, +		if (validationDecider.shouldValidateAfter(bindingResults)) {, +			ValidateResults validationResults = validator.validate(binder.getModel(), bindingResults.successes().properties());, +		// TODO translate binding and validation results into messages, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/BindingResults.java, +	 * The ordered list of properties for which a {@link BindingResult} was returned., +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +	, +++ b/org.springframework.context/src/test/java/org/springframework/ui/binding/support/GenericBinderTests.java, +	, +++ b/org.springframework.context/src/test/java/org/springframework/ui/validation/ValidateResults.java, +package org.springframework.ui.validation;, +, +public interface ValidateResults {, +, +}, +++ b/org.springframework.context/src/main/java/org/springframework/ui/WebBindAndValidateLifecycle.java, +import org.springframework.ui.validation.ValidateResults;, +		BindingResults bindingResults = binder.bind(values);, +		if (validationDecider.shouldValidateAfter(bindingResults)) {, +			ValidateResults validationResults = validator.validate(binder.getModel(), bindingResults.successes().properties());, +		// TODO translate binding and validation results into messages, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/BindingResults.java, +	 * The ordered list of properties for which a {@link BindingResult} was returned., +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +	, +++ b/org.springframework.context/src/test/java/org/springframework/ui/binding/support/GenericBinderTests.java, +	, +++ b/org.springframework.context/src/test/java/org/springframework/ui/validation/ValidateResults.java, +package org.springframework.ui.validation;, +, +public interface ValidateResults {, +, +}, +++ b/org.springframework.context/src/test/java/org/springframework/ui/validation/Validator.java, +	ValidateResults validate(Object model, List<String> properties);]