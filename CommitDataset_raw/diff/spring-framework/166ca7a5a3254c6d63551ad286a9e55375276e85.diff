[+++ b/spring-websocket/src/main/java/org/springframework/sockjs/AbstractSockJsSession.java, +	public void delegateConnectionEstablished() throws Exception {, +		try {, +			delegateError(ex);, +		}, +		catch (Throwable delegateEx) {, +			logger.error("Unhandled error for " + this, delegateEx);, +			try {, +			catch (Throwable closeEx) {, +				logger.error("Unhandled error for " + this, closeEx);, +			}, +	public void delegateMessages(String[] messages) throws Exception {, +	public void delegateError(Throwable ex) throws Exception {, +	public final void delegateConnectionClosed(CloseStatus status) throws Exception {, +				try {, +				catch (Throwable t) {, +					logger.error("Unhandled error for " + this, t);, +				}, +			}, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/AbstractSockJsSession.java, +	public void delegateConnectionEstablished() throws Exception {, +		try {, +			delegateError(ex);, +		}, +		catch (Throwable delegateEx) {, +			logger.error("Unhandled error for " + this, delegateEx);, +			try {, +			catch (Throwable closeEx) {, +				logger.error("Unhandled error for " + this, closeEx);, +			}, +	public void delegateMessages(String[] messages) throws Exception {, +	public void delegateError(Throwable ex) throws Exception {, +	public final void delegateConnectionClosed(CloseStatus status) throws Exception {, +				try {, +				catch (Throwable t) {, +					logger.error("Unhandled error for " + this, t);, +				}, +			}, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/server/AbstractServerSockJsSession.java, +			throw new SockJsRuntimeException("Failed to write " + frame, ex);, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/AbstractSockJsSession.java, +	public void delegateConnectionEstablished() throws Exception {, +		try {, +			delegateError(ex);, +		}, +		catch (Throwable delegateEx) {, +			logger.error("Unhandled error for " + this, delegateEx);, +			try {, +			catch (Throwable closeEx) {, +				logger.error("Unhandled error for " + this, closeEx);, +			}, +	public void delegateMessages(String[] messages) throws Exception {, +	public void delegateError(Throwable ex) throws Exception {, +	public final void delegateConnectionClosed(CloseStatus status) throws Exception {, +				try {, +				catch (Throwable t) {, +					logger.error("Unhandled error for " + this, t);, +				}, +			}, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/server/AbstractServerSockJsSession.java, +			throw new SockJsRuntimeException("Failed to write " + frame, ex);, +++ /dev/null, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/AbstractSockJsSession.java, +	public void delegateConnectionEstablished() throws Exception {, +		try {, +			delegateError(ex);, +		}, +		catch (Throwable delegateEx) {, +			logger.error("Unhandled error for " + this, delegateEx);, +			try {, +			catch (Throwable closeEx) {, +				logger.error("Unhandled error for " + this, closeEx);, +			}, +	public void delegateMessages(String[] messages) throws Exception {, +	public void delegateError(Throwable ex) throws Exception {, +	public final void delegateConnectionClosed(CloseStatus status) throws Exception {, +				try {, +				catch (Throwable t) {, +					logger.error("Unhandled error for " + this, t);, +				}, +			}, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/server/AbstractServerSockJsSession.java, +			throw new SockJsRuntimeException("Failed to write " + frame, ex);, +++ /dev/null, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/server/SockJsRuntimeException.java, +/*, + * Copyright 2002-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */]