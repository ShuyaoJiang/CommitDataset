[+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/ModelAttribute.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * @author Rossen Stoyanchev, +	 * Alias for {@link #name}., +	 */, +	@AliasFor("name"), +	String value() default "";, +, +	/**, +	 * @since 4.3, +	@AliasFor("value"), +	String name() default "";, +, +	/**, +	 * Allows declaring data binding disabled directly on an, +	 * {@code @ModelAttribute} method parameter or on the attribute returned from, +	 * an {@code @ModelAttribute} method, both of which would prevent data, +	 * binding for that attribute., +	 * <p>By default this is set to "true" in which case data binding applies., +	 * Set this to "false" to disable data binding., +	 */, +	boolean binding() default true;, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/ModelAttribute.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * @author Rossen Stoyanchev, +	 * Alias for {@link #name}., +	 */, +	@AliasFor("name"), +	String value() default "";, +, +	/**, +	 * @since 4.3, +	@AliasFor("value"), +	String name() default "";, +, +	/**, +	 * Allows declaring data binding disabled directly on an, +	 * {@code @ModelAttribute} method parameter or on the attribute returned from, +	 * an {@code @ModelAttribute} method, both of which would prevent data, +	 * binding for that attribute., +	 * <p>By default this is set to "true" in which case data binding applies., +	 * Set this to "false" to disable data binding., +	 */, +	boolean binding() default true;, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/ModelAttributeMethodProcessor.java, + * Copyright 2002-2016 the original author or authors., +		if (!mavContainer.isBindingDisabled(name)) {, +			ModelAttribute annotation = parameter.getParameterAnnotation(ModelAttribute.class);, +			if (annotation != null && !annotation.binding()) {, +				mavContainer.setBindingDisabled(name);, +			}, +		}, +, +			if (!mavContainer.isBindingDisabled(name)) {, +			}, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/ModelAttribute.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * @author Rossen Stoyanchev, +	 * Alias for {@link #name}., +	 */, +	@AliasFor("name"), +	String value() default "";, +, +	/**, +	 * @since 4.3, +	@AliasFor("value"), +	String name() default "";, +, +	/**, +	 * Allows declaring data binding disabled directly on an, +	 * {@code @ModelAttribute} method parameter or on the attribute returned from, +	 * an {@code @ModelAttribute} method, both of which would prevent data, +	 * binding for that attribute., +	 * <p>By default this is set to "true" in which case data binding applies., +	 * Set this to "false" to disable data binding., +	 */, +	boolean binding() default true;, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/ModelAttributeMethodProcessor.java, + * Copyright 2002-2016 the original author or authors., +		if (!mavContainer.isBindingDisabled(name)) {, +			ModelAttribute annotation = parameter.getParameterAnnotation(ModelAttribute.class);, +			if (annotation != null && !annotation.binding()) {, +				mavContainer.setBindingDisabled(name);, +			}, +		}, +, +			if (!mavContainer.isBindingDisabled(name)) {, +			}, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/ModelFactory.java, +			ModelAttribute annotation = modelMethod.getMethodAnnotation(ModelAttribute.class);, +			if (container.containsAttribute(annotation.name())) {, +				if (!annotation.binding()) {, +					container.setBindingDisabled(annotation.name());, +				}, +				if (!annotation.binding()) {, +					container.setBindingDisabled(returnValueName);, +				}]