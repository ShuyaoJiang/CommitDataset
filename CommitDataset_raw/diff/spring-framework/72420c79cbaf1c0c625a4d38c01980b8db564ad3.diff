[+++ b/org.springframework.context/src/main/java/org/springframework/scheduling/config/ScheduledTasksBeanDefinitionParser.java, + * Copyright 2002-2011 the original author or authors., +		ManagedMap<RuntimeBeanReference, RuntimeBeanReference> triggerTaskMap = new ManagedMap<RuntimeBeanReference, RuntimeBeanReference>();, +, +			String triggerAttribute = taskElement.getAttribute("trigger");, +, +			boolean hasCronAttribute = StringUtils.hasText(cronAttribute);, +			boolean hasFixedDelayAttribute = StringUtils.hasText(fixedDelayAttribute);, +			boolean hasFixedRateAttribute = StringUtils.hasText(fixedRateAttribute);, +			boolean hasTriggerAttribute = StringUtils.hasText(triggerAttribute);, +, +			if (!(hasCronAttribute | hasFixedDelayAttribute | hasFixedRateAttribute | hasTriggerAttribute)) {, +						"exactly one of the 'cron', 'fixed-delay', 'fixed-rate', or 'trigger' attributes is required", taskElement);, +, +			if (hasCronAttribute) {, +				cronTaskMap.put(runnableBeanRef, cronAttribute);, +			}, +			if (hasFixedDelayAttribute) {, +				fixedDelayTaskMap.put(runnableBeanRef, fixedDelayAttribute);, +			}, +			if (hasFixedRateAttribute) {, +			if (hasTriggerAttribute) {, +				triggerTaskMap.put(runnableBeanRef, new RuntimeBeanReference(triggerAttribute));, +		builder.addPropertyValue("triggerTasks", triggerTaskMap);, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/config/ScheduledTasksBeanDefinitionParser.java, + * Copyright 2002-2011 the original author or authors., +		ManagedMap<RuntimeBeanReference, RuntimeBeanReference> triggerTaskMap = new ManagedMap<RuntimeBeanReference, RuntimeBeanReference>();, +, +			String triggerAttribute = taskElement.getAttribute("trigger");, +, +			boolean hasCronAttribute = StringUtils.hasText(cronAttribute);, +			boolean hasFixedDelayAttribute = StringUtils.hasText(fixedDelayAttribute);, +			boolean hasFixedRateAttribute = StringUtils.hasText(fixedRateAttribute);, +			boolean hasTriggerAttribute = StringUtils.hasText(triggerAttribute);, +, +			if (!(hasCronAttribute | hasFixedDelayAttribute | hasFixedRateAttribute | hasTriggerAttribute)) {, +						"exactly one of the 'cron', 'fixed-delay', 'fixed-rate', or 'trigger' attributes is required", taskElement);, +, +			if (hasCronAttribute) {, +				cronTaskMap.put(runnableBeanRef, cronAttribute);, +			}, +			if (hasFixedDelayAttribute) {, +				fixedDelayTaskMap.put(runnableBeanRef, fixedDelayAttribute);, +			}, +			if (hasFixedRateAttribute) {, +			if (hasTriggerAttribute) {, +				triggerTaskMap.put(runnableBeanRef, new RuntimeBeanReference(triggerAttribute));, +		builder.addPropertyValue("triggerTasks", triggerTaskMap);, +++ b/org.springframework.context/src/main/resources/org/springframework/scheduling/config/spring-task-3.1.xsd, +		<xsd:attribute name="trigger" type="xsd:string" use="optional">, +			<xsd:annotation>, +				<xsd:documentation><![CDATA[, +	A reference to a bean that implements the Trigger interface., + 				]]></xsd:documentation>, +			</xsd:annotation>, +		</xsd:attribute>, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/config/ScheduledTasksBeanDefinitionParser.java, + * Copyright 2002-2011 the original author or authors., +		ManagedMap<RuntimeBeanReference, RuntimeBeanReference> triggerTaskMap = new ManagedMap<RuntimeBeanReference, RuntimeBeanReference>();, +, +			String triggerAttribute = taskElement.getAttribute("trigger");, +, +			boolean hasCronAttribute = StringUtils.hasText(cronAttribute);, +			boolean hasFixedDelayAttribute = StringUtils.hasText(fixedDelayAttribute);, +			boolean hasFixedRateAttribute = StringUtils.hasText(fixedRateAttribute);, +			boolean hasTriggerAttribute = StringUtils.hasText(triggerAttribute);, +, +			if (!(hasCronAttribute | hasFixedDelayAttribute | hasFixedRateAttribute | hasTriggerAttribute)) {, +						"exactly one of the 'cron', 'fixed-delay', 'fixed-rate', or 'trigger' attributes is required", taskElement);, +, +			if (hasCronAttribute) {, +				cronTaskMap.put(runnableBeanRef, cronAttribute);, +			}, +			if (hasFixedDelayAttribute) {, +				fixedDelayTaskMap.put(runnableBeanRef, fixedDelayAttribute);, +			}, +			if (hasFixedRateAttribute) {, +			if (hasTriggerAttribute) {, +				triggerTaskMap.put(runnableBeanRef, new RuntimeBeanReference(triggerAttribute));, +		builder.addPropertyValue("triggerTasks", triggerTaskMap);, +++ b/org.springframework.context/src/main/resources/org/springframework/scheduling/config/spring-task-3.1.xsd, +		<xsd:attribute name="trigger" type="xsd:string" use="optional">, +			<xsd:annotation>, +				<xsd:documentation><![CDATA[, +	A reference to a bean that implements the Trigger interface., + 				]]></xsd:documentation>, +			</xsd:annotation>, +		</xsd:attribute>, +++ b/org.springframework.context/src/test/java/org/springframework/scheduling/config/ScheduledTasksBeanDefinitionParserTests.java, +import java.util.Date;, +import org.springframework.scheduling.Trigger;, +import org.springframework.scheduling.TriggerContext;, +	@Test, +	public void triggerTasks() {, +		Map<Runnable, Trigger> tasks = (Map<Runnable, Trigger>) new DirectFieldAccessor(, +				this.registrar).getPropertyValue("triggerTasks");, +		assertEquals(1, tasks.size());, +		Trigger trigger = tasks.values().iterator().next();, +		assertEquals(TestTrigger.class, trigger.getClass());		, +	}]