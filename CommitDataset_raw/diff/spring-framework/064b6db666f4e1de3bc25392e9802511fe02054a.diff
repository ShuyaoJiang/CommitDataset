[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/EntityConverter.java, +	private GenericConversionService conversionService;, +	public EntityConverter(GenericConversionService conversionService) {, +		if (source == null) {, +			return this.conversionService.convertNullSource(sourceType, targetType);, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/EntityConverter.java, +	private GenericConversionService conversionService;, +	public EntityConverter(GenericConversionService conversionService) {, +		if (source == null) {, +			return this.conversionService.convertNullSource(sourceType, targetType);, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToBooleanConverter.java, +		String value = source.trim();, +		if (value.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/EntityConverter.java, +	private GenericConversionService conversionService;, +	public EntityConverter(GenericConversionService conversionService) {, +		if (source == null) {, +			return this.conversionService.convertNullSource(sourceType, targetType);, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToBooleanConverter.java, +		String value = source.trim();, +		if (value.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToCharacterConverter.java, +		if (source.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/EntityConverter.java, +	private GenericConversionService conversionService;, +	public EntityConverter(GenericConversionService conversionService) {, +		if (source == null) {, +			return this.conversionService.convertNullSource(sourceType, targetType);, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToBooleanConverter.java, +		String value = source.trim();, +		if (value.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToCharacterConverter.java, +		if (source.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToEnumConverterFactory.java, +			if (source.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/EntityConverter.java, +	private GenericConversionService conversionService;, +	public EntityConverter(GenericConversionService conversionService) {, +		if (source == null) {, +			return this.conversionService.convertNullSource(sourceType, targetType);, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToBooleanConverter.java, +		String value = source.trim();, +		if (value.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToCharacterConverter.java, +		if (source.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToEnumConverterFactory.java, +			if (source.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToNumberConverterFactory.java, +			if (source.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/EntityConverter.java, +	private GenericConversionService conversionService;, +	public EntityConverter(GenericConversionService conversionService) {, +		if (source == null) {, +			return this.conversionService.convertNullSource(sourceType, targetType);, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToBooleanConverter.java, +		String value = source.trim();, +		if (value.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToCharacterConverter.java, +		if (source.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToEnumConverterFactory.java, +			if (source.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToNumberConverterFactory.java, +			if (source.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/util/ReflectionUtils.java, +		if (target == null) {, +			throw new IllegalArgumentException("target cannot be null");, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/EntityConverter.java, +	private GenericConversionService conversionService;, +	public EntityConverter(GenericConversionService conversionService) {, +		if (source == null) {, +			return this.conversionService.convertNullSource(sourceType, targetType);, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToBooleanConverter.java, +		String value = source.trim();, +		if (value.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToCharacterConverter.java, +		if (source.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToEnumConverterFactory.java, +			if (source.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/StringToNumberConverterFactory.java, +			if (source.length() == 0) {, +++ b/org.springframework.core/src/main/java/org/springframework/util/ReflectionUtils.java, +		if (target == null) {, +			throw new IllegalArgumentException("target cannot be null");, +		}, +++ b/org.springframework.core/src/test/java/org/springframework/core/convert/support/DefaultConversionTests.java, +	public void convertObjectToObjectFinderMethodWithNull() {, +		TestEntity e = (TestEntity) conversionService.convert(null, TypeDescriptor.valueOf(String.class), TypeDescriptor.valueOf(TestEntity.class));, +		assertNull(e);, +	}, +, +	@Test, +	@Test]