[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/server/support/HandshakeWebSocketService.java, +import org.springframework.context.Lifecycle;, +public class HandshakeWebSocketService implements WebSocketService, Lifecycle {, +	private volatile boolean running = false;, +, +	@Override, +	public boolean isRunning() {, +		return this.running;, +	}, +, +	@Override, +	public void start() {, +		if (!isRunning()) {, +			this.running = true;, +			doStart();, +		}, +	}, +, +	protected void doStart() {, +		if (getUpgradeStrategy() instanceof Lifecycle) {, +			((Lifecycle) getUpgradeStrategy()).start();, +		}, +	}, +, +	@Override, +	public void stop() {, +		if (isRunning()) {, +			this.running = false;, +			doStop();, +		}, +	}, +, +	protected void doStop() {, +		if (getUpgradeStrategy() instanceof Lifecycle) {, +			((Lifecycle) getUpgradeStrategy()).stop();, +		}, +	}, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/server/support/HandshakeWebSocketService.java, +import org.springframework.context.Lifecycle;, +public class HandshakeWebSocketService implements WebSocketService, Lifecycle {, +	private volatile boolean running = false;, +, +	@Override, +	public boolean isRunning() {, +		return this.running;, +	}, +, +	@Override, +	public void start() {, +		if (!isRunning()) {, +			this.running = true;, +			doStart();, +		}, +	}, +, +	protected void doStart() {, +		if (getUpgradeStrategy() instanceof Lifecycle) {, +			((Lifecycle) getUpgradeStrategy()).start();, +		}, +	}, +, +	@Override, +	public void stop() {, +		if (isRunning()) {, +			this.running = false;, +			doStop();, +		}, +	}, +, +	protected void doStop() {, +		if (getUpgradeStrategy() instanceof Lifecycle) {, +			((Lifecycle) getUpgradeStrategy()).stop();, +		}, +	}, +, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/socket/server/AbstractWebSocketHandlerIntegrationTests.java, +			return new WebSocketHandlerAdapter(webSocketService());, +		@Bean, +		public WebSocketService webSocketService() {, +			return new HandshakeWebSocketService(getUpgradeStrategy());, +		}, +, +		protected abstract RequestUpgradeStrategy getUpgradeStrategy();, +		protected RequestUpgradeStrategy getUpgradeStrategy() {, +		protected RequestUpgradeStrategy getUpgradeStrategy() {]