[+++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/MessageMapping.java, + * <p><b>NOTE:</b> When using controller interfaces (e.g. for AOP proxying),, + * make sure to consistently put <i>all</i> your mapping annotations - such as, + * {@code @MessageMapping} and {@code @SubscribeMapping} - on, + * the controller <i>interface</i> rather than on the implementation class., + *, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/MessageMapping.java, + * <p><b>NOTE:</b> When using controller interfaces (e.g. for AOP proxying),, + * make sure to consistently put <i>all</i> your mapping annotations - such as, + * {@code @MessageMapping} and {@code @SubscribeMapping} - on, + * the controller <i>interface</i> rather than on the implementation class., + *, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/SubscribeMapping.java, + * <p><b>NOTE:</b> When using controller interfaces (e.g. for AOP proxying),, + * make sure to consistently put <i>all</i> your mapping annotations - such as, + * {@code @MessageMapping} and {@code @SubscribeMapping} - on, + * the controller <i>interface</i> rather than on the implementation class., + *, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/MessageMapping.java, + * <p><b>NOTE:</b> When using controller interfaces (e.g. for AOP proxying),, + * make sure to consistently put <i>all</i> your mapping annotations - such as, + * {@code @MessageMapping} and {@code @SubscribeMapping} - on, + * the controller <i>interface</i> rather than on the implementation class., + *, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/SubscribeMapping.java, + * <p><b>NOTE:</b> When using controller interfaces (e.g. for AOP proxying),, + * make sure to consistently put <i>all</i> your mapping annotations - such as, + * {@code @MessageMapping} and {@code @SubscribeMapping} - on, + * the controller <i>interface</i> rather than on the implementation class., + *, +++ b/src/asciidoc/web-websocket.adoc, +[NOTE], +====, +In some cases a controller may need to be decorated with an AOP proxy at runtime., +One example is if you choose to have `@Transactional` annotations directly on the, +controller. When this is the case, for controllers specifically, we recommend, +using class-based proxying. This is typically the default choice with controllers., +However if a controller must implement an interface that is not a Spring Context, +callback (e.g. `InitializingBean`, `*Aware`, etc), you may need to explicitly, +configure class-based proxying. For example with `<tx:annotation-driven />`,, +change to `<tx:annotation-driven proxy-target-class="true" />`., +====, +, +]