[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +				parentResult.entrySet().forEach(entry -> {, +				});, +				, +				parentResult.entrySet().forEach(entry -> {, +				});, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +				parentResult.entrySet().forEach(entry -> {, +				});, +				, +				parentResult.entrySet().forEach(entry -> {, +				});, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			this.customEditors.entrySet().forEach(entry -> {, +			});, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +				parentResult.entrySet().forEach(entry -> {, +				});, +				, +				parentResult.entrySet().forEach(entry -> {, +				});, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			this.customEditors.entrySet().forEach(entry -> {, +			});, +++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java, +		primitiveWrapperTypeMap.entrySet().forEach(entry -> {, +		});, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +				parentResult.entrySet().forEach(entry -> {, +				});, +				, +				parentResult.entrySet().forEach(entry -> {, +				});, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			this.customEditors.entrySet().forEach(entry -> {, +			});, +++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java, +		primitiveWrapperTypeMap.entrySet().forEach(entry -> {, +		});, +++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, +		map.entrySet().forEach(entry -> {, +		});, +			values.entrySet().forEach(entry -> set(entry.getKey(), entry.getValue()));, +			map.entrySet().forEach(entry -> singleValueMap.put(entry.getKey(), entry.getValue().get(0)));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +				parentResult.entrySet().forEach(entry -> {, +				});, +				, +				parentResult.entrySet().forEach(entry -> {, +				});, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			this.customEditors.entrySet().forEach(entry -> {, +			});, +++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java, +		primitiveWrapperTypeMap.entrySet().forEach(entry -> {, +		});, +++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, +		map.entrySet().forEach(entry -> {, +		});, +			values.entrySet().forEach(entry -> set(entry.getKey(), entry.getValue()));, +			map.entrySet().forEach(entry -> singleValueMap.put(entry.getKey(), entry.getValue().get(0)));, +++ b/spring-core/src/main/java/org/springframework/util/LinkedCaseInsensitiveMap.java, +		map.entrySet().forEach(entry -> put(entry.getKey(), entry.getValue()));, +		, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +				parentResult.entrySet().forEach(entry -> {, +				});, +				, +				parentResult.entrySet().forEach(entry -> {, +				});, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			this.customEditors.entrySet().forEach(entry -> {, +			});, +++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java, +		primitiveWrapperTypeMap.entrySet().forEach(entry -> {, +		});, +++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, +		map.entrySet().forEach(entry -> {, +		});, +			values.entrySet().forEach(entry -> set(entry.getKey(), entry.getValue()));, +			map.entrySet().forEach(entry -> singleValueMap.put(entry.getKey(), entry.getValue().get(0)));, +++ b/spring-core/src/main/java/org/springframework/util/LinkedCaseInsensitiveMap.java, +		map.entrySet().forEach(entry -> put(entry.getKey(), entry.getValue()));, +		, +++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, +		values.entrySet().forEach(entry -> set(entry.getKey(), entry.getValue()));	, +		this.targetMap.entrySet().forEach(entry ->, +			singleValueMap.put(entry.getKey(), entry.getValue().get(0)));, +		, +		this.targetMap.entrySet().forEach(entry -> , +			copy.put(entry.getKey(), new LinkedList<>(entry.getValue())));, +		, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, +				parentResult.entrySet().forEach(entry -> {, +				});, +				, +				parentResult.entrySet().forEach(entry -> {, +				});, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			this.customEditors.entrySet().forEach(entry -> {]