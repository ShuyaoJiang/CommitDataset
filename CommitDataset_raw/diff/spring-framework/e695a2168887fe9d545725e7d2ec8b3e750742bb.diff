[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.java, +						if (negated) {, +							found = !found;, +						}, +							return false;, +					else {, +						boolean match = value.equals(request.getHeader(key));, +						if (negated) {, +							match = !match;, +						}, +						if (!match) {, +							return false;, +						}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.java, +						if (negated) {, +							found = !found;, +						}, +							return false;, +					else {, +						boolean match = value.equals(request.getHeader(key));, +						if (negated) {, +							match = !match;, +						}, +						if (!match) {, +							return false;, +						}, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtilsTests.java, +	// SPR-8862 , +	, +	@Test, +	public void checkHeadersKeyValueNoMatchWithNegation() {, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/");, +		request.addHeader("header1", "value1");, +		String[] headers = new String[]{"header1!=value1"};, +		boolean result = ServletAnnotationMappingUtils.checkHeaders(headers, request);, +		assertFalse("Invalid request method result", result);, +	}, +, +	@Test, +	public void checkHeadersAcceptNoMatchWithNegation() {, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/");, +		request.addHeader("Accept", "application/pdf");, +		String[] headers = new String[]{"accept!=application/pdf"};, +		boolean result = ServletAnnotationMappingUtils.checkHeaders(headers, request);, +		assertFalse("Invalid request method result", result);, +	}, +, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.java, +						if (negated) {, +							found = !found;, +						}, +							return false;, +					else {, +						boolean match = value.equals(request.getHeader(key));, +						if (negated) {, +							match = !match;, +						}, +						if (!match) {, +							return false;, +						}, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtilsTests.java, +	// SPR-8862 , +	, +	@Test, +	public void checkHeadersKeyValueNoMatchWithNegation() {, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/");, +		request.addHeader("header1", "value1");, +		String[] headers = new String[]{"header1!=value1"};, +		boolean result = ServletAnnotationMappingUtils.checkHeaders(headers, request);, +		assertFalse("Invalid request method result", result);, +	}, +, +	@Test, +	public void checkHeadersAcceptNoMatchWithNegation() {, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/");, +		request.addHeader("Accept", "application/pdf");, +		String[] headers = new String[]{"accept!=application/pdf"};, +		boolean result = ServletAnnotationMappingUtils.checkHeaders(headers, request);, +		assertFalse("Invalid request method result", result);, +	}, +, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/condition/HeadersRequestConditionTests.java, +	public void headerValueNoMatchNegated() {, +		HeadersRequestCondition condition = new HeadersRequestCondition("foo!=bar");, +		MockHttpServletRequest request = new MockHttpServletRequest();, +		request.addHeader("foo", "bar");, +, +		assertNull(condition.getMatchingCondition(request));, +	}, +, +	@Test]