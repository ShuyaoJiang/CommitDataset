[+++ b/spring-web/src/main/java/org/springframework/web/cors/CorsConfigurationSource.java, + * Copyright 2002-2016 the original author or authors., +	 * @return the associated {@link CorsConfiguration}, or {@code null} if none, +++ b/spring-web/src/main/java/org/springframework/web/cors/CorsConfigurationSource.java, + * Copyright 2002-2016 the original author or authors., +	 * @return the associated {@link CorsConfiguration}, or {@code null} if none, +++ b/spring-web/src/main/java/org/springframework/web/filter/CorsFilter.java, + * Copyright 2002-2016 the original author or authors., + * {@link javax.servlet.Filter} that handles CORS preflight requests and intercepts, + * CORS simple and actual requests thanks to a {@link CorsProcessor} implementation, + * ({@link DefaultCorsProcessor} by default) in order to add the relevant CORS, + * response headers (like {@code Access-Control-Allow-Origin}) using the provided, +	private CorsProcessor processor = new DefaultCorsProcessor();, +, +	 * Constructor accepting a {@link CorsConfigurationSource} used by the filter, +	 * to find the {@link CorsConfiguration} to use for each incoming request., +		Assert.notNull(configSource, "CorsConfigurationSource must not be null");, +, +, +]