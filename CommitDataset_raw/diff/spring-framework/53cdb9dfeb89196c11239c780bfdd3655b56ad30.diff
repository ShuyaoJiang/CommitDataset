[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/form/ErrorsTag.java, +		if ("".equals(path) || "*".equals(path)) {, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/form/ErrorsTag.java, +		if ("".equals(path) || "*".equals(path)) {, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/tags/form/ErrorsTagTests.java, + * Copyright 2002-2010 the original author or authors., +		assertTrue(output.contains("id=\"testBean.errors\""));, +		assertTrue(output.contains("object error"));, +		assertFalse(output.contains("field error"));, +	}, +, +	public void testSpecificPathMatchesSpecificFieldOnly() throws Exception {, +		this.tag.setPath("name");, +		Errors errors = new BeanPropertyBindingResult(new TestBean(), "COMMAND_NAME");, +		errors.reject("some.code", "object error");, +		errors.rejectValue("name", "some.code", "field error");, +		exposeBindingResult(errors);, +		this.tag.doStartTag();, +		assertNotNull(getPageContext().getAttribute(ErrorsTag.MESSAGES_ATTRIBUTE));, +		this.tag.doEndTag();, +		String output = getOutput();, +		assertTrue(output.contains("id=\"name.errors\""));, +		assertFalse(output.contains("object error"));, +		assertTrue(output.contains("field error"));, +	}, +, +	public void testStarMatchesAllErrors() throws Exception {, +		this.tag.setPath("*");, +		Errors errors = new BeanPropertyBindingResult(new TestBean(), "COMMAND_NAME");, +		errors.reject("some.code", "object error");, +		errors.rejectValue("name", "some.code", "field error");, +		exposeBindingResult(errors);, +		this.tag.doStartTag();, +		assertNotNull(getPageContext().getAttribute(ErrorsTag.MESSAGES_ATTRIBUTE));, +		this.tag.doEndTag();, +		String output = getOutput();, +		assertTrue(output.contains("id=\"testBean.errors\""));, +		assertTrue(output.contains("object error"));, +		assertTrue(output.contains("field error"));]