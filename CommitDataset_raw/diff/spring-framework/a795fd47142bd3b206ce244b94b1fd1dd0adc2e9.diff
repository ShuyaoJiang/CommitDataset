[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/MockMvcResultMatchers.java, +import org.springframework.web.util.UriComponentsBuilder;, +	 * <p>This method accepts exact matches against the expanded URL template., +	 * @param urlTemplate a URL template; the expanded URL will be encoded, +	 * @param urlVars zero or more URL variables to populate the template, +	 * @see UriComponentsBuilder#fromUriString(String), +	public static ResultMatcher forwardedUrl(String urlTemplate, Object... urlVars) {, +		String uri = UriComponentsBuilder.fromUriString(urlTemplate).buildAndExpand(urlVars).encode().toUriString();, +		return result -> assertEquals("Forwarded URL", uri, result.getResponse().getForwardedUrl());, +	 * <p>This method accepts exact matches against the expanded URL template., +	 * @param urlTemplate a URL template; the expanded URL will be encoded, +	 * @param urlVars zero or more URL variables to populate the template, +	 * @see UriComponentsBuilder#fromUriString(String), +	public static ResultMatcher redirectedUrl(String urlTemplate, Object... urlVars) {, +		String uri = UriComponentsBuilder.fromUriString(urlTemplate).buildAndExpand(urlVars).encode().toUriString();, +		return result -> assertEquals("Redirected URL", uri, result.getResponse().getRedirectedUrl());, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/MockMvcResultMatchers.java, +import org.springframework.web.util.UriComponentsBuilder;, +	 * <p>This method accepts exact matches against the expanded URL template., +	 * @param urlTemplate a URL template; the expanded URL will be encoded, +	 * @param urlVars zero or more URL variables to populate the template, +	 * @see UriComponentsBuilder#fromUriString(String), +	public static ResultMatcher forwardedUrl(String urlTemplate, Object... urlVars) {, +		String uri = UriComponentsBuilder.fromUriString(urlTemplate).buildAndExpand(urlVars).encode().toUriString();, +		return result -> assertEquals("Forwarded URL", uri, result.getResponse().getForwardedUrl());, +	 * <p>This method accepts exact matches against the expanded URL template., +	 * @param urlTemplate a URL template; the expanded URL will be encoded, +	 * @param urlVars zero or more URL variables to populate the template, +	 * @see UriComponentsBuilder#fromUriString(String), +	public static ResultMatcher redirectedUrl(String urlTemplate, Object... urlVars) {, +		String uri = UriComponentsBuilder.fromUriString(urlTemplate).buildAndExpand(urlVars).encode().toUriString();, +		return result -> assertEquals("Redirected URL", uri, result.getResponse().getRedirectedUrl());, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/result/MockMvcResultMatchersTests.java, +	public void redirectWithUrlTemplate() throws Exception {, +		redirectedUrl("/orders/{orderId}/items/{itemId}", 1, 2).match(getRedirectedUrlStubMvcResult("/orders/1/items/2"));, +	}, +, +	@Test, +	public void forwardWithUrlTemplate() throws Exception {, +		forwardedUrl("/orders/{orderId}/items/{itemId}", 1, 2).match(getForwardedUrlStubMvcResult("/orders/1/items/2"));, +	}, +, +	@Test]