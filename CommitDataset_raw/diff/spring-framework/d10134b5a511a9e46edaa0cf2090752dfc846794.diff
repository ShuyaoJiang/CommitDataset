[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/MockMvcWebConnection.java, +, +	/**, +	 * Validate the supplied {@code contextPath}., +	 * <p>If the value is not {@code null}, it must conform to, +	 * {@link javax.servlet.http.HttpServletRequest#getContextPath()} which, +	 * states that it can be an empty string and otherwise must start with, +	 * a "/" character and not end with a "/" character., +	 * @param contextPath the path to validate, +	 */, +	static void validateContextPath(String contextPath) {, +		if (contextPath == null || "".equals(contextPath)) {, +			return;, +		}, +		if (!contextPath.startsWith("/")) {, +			throw new IllegalArgumentException("contextPath '" + contextPath + "' must start with '/'.");, +		}, +		if (contextPath.endsWith("/")) {, +			throw new IllegalArgumentException("contextPath '" + contextPath + "' must not end with '/'.");, +		}, +	}, +, +, +	private MockHttpServletResponse getResponse(RequestBuilder requestBuilder) throws IOException {, +		ResultActions resultActions;, +		try {, +			resultActions = this.mockMvc.perform(requestBuilder);, +		}, +		catch (Exception ex) {, +			throw new IOException(ex);, +		}, +, +		return resultActions.andReturn().getResponse();, +	}, +, +		CookieManager cookieManager = this.webClient.getCookieManager();]