[+++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/MockMvcBuilderSupport.java, +			List<ResultMatcher> globalResultMatchers, List<ResultHandler> globalResultHandlers, Boolean dispatchOptions) {, +		dispatcherServlet.setDispatchOptionsRequest(dispatchOptions);, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/MockMvcBuilderSupport.java, +			List<ResultMatcher> globalResultMatchers, List<ResultHandler> globalResultHandlers, Boolean dispatchOptions) {, +		dispatcherServlet.setDispatchOptionsRequest(dispatchOptions);, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/request/MockMvcRequestBuilders.java, +     * Create a {@link MockHttpServletRequestBuilder} for an OPTIONS request., +     *, +     * @param urlTemplate a URL template; the resulting URL will be encoded, +     * @param urlVariables zero or more URL variables, +     */, +    public static MockHttpServletRequestBuilder options(String urlTemplate, Object... urlVariables) {, +        return new MockHttpServletRequestBuilder(HttpMethod.OPTIONS, urlTemplate, urlVariables);, +    }, +, +, +	/**, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/MockMvcBuilderSupport.java, +			List<ResultMatcher> globalResultMatchers, List<ResultHandler> globalResultHandlers, Boolean dispatchOptions) {, +		dispatcherServlet.setDispatchOptionsRequest(dispatchOptions);, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/request/MockMvcRequestBuilders.java, +     * Create a {@link MockHttpServletRequestBuilder} for an OPTIONS request., +     *, +     * @param urlTemplate a URL template; the resulting URL will be encoded, +     * @param urlVariables zero or more URL variables, +     */, +    public static MockHttpServletRequestBuilder options(String urlTemplate, Object... urlVariables) {, +        return new MockHttpServletRequestBuilder(HttpMethod.OPTIONS, urlTemplate, urlVariables);, +    }, +, +, +	/**, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.java, +import org.springframework.web.servlet.DispatcherServlet;, +	private Boolean dispatchOptions = Boolean.FALSE;, +, +     * Should the {@link DispatcherServlet} dispatch OPTIONS request to controllers., +     * @param dispatchOptions, +     * @see {@link DispatcherServlet#setDispatchOptionsRequest(boolean)}, +     */, +	@SuppressWarnings("unchecked"), +    public final <T extends Self> T dispatchOptions(boolean dispatchOptions) {, +        this.dispatchOptions = dispatchOptions;, +        return (T) this;, +    }, +, +	/**, +				this.defaultRequestBuilder, this.globalResultMatchers, this.globalResultHandlers,this.dispatchOptions);, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/MockMvcBuilderSupport.java, +			List<ResultMatcher> globalResultMatchers, List<ResultHandler> globalResultHandlers, Boolean dispatchOptions) {, +		dispatcherServlet.setDispatchOptionsRequest(dispatchOptions);, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/request/MockMvcRequestBuilders.java, +     * Create a {@link MockHttpServletRequestBuilder} for an OPTIONS request., +     *, +     * @param urlTemplate a URL template; the resulting URL will be encoded, +     * @param urlVariables zero or more URL variables, +     */, +    public static MockHttpServletRequestBuilder options(String urlTemplate, Object... urlVariables) {, +        return new MockHttpServletRequestBuilder(HttpMethod.OPTIONS, urlTemplate, urlVariables);, +    }, +, +, +	/**, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder.java, +import org.springframework.web.servlet.DispatcherServlet;, +	private Boolean dispatchOptions = Boolean.FALSE;, +, +     * Should the {@link DispatcherServlet} dispatch OPTIONS request to controllers., +     * @param dispatchOptions, +     * @see {@link DispatcherServlet#setDispatchOptionsRequest(boolean)}, +     */, +	@SuppressWarnings("unchecked"), +    public final <T extends Self> T dispatchOptions(boolean dispatchOptions) {, +        this.dispatchOptions = dispatchOptions;, +        return (T) this;, +    }, +, +	/**, +				this.defaultRequestBuilder, this.globalResultMatchers, this.globalResultHandlers,this.dispatchOptions);, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/servlet/Spr10093Tests.java, +/*, + * Copyright 2002-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.test.web.servlet;, +, +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.options;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;]