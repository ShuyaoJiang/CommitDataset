[+++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/bind/annotation/RenderMapping.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * @author Sam Brannen, +	 * Alias for {@link #windowState}., +	@AliasFor(attribute = "windowState"), +	 * The window state that the annotated render method applies for., +	 * <p>If not specified, the render method will be invoked for any, +	 * window state within its general mapping., +	 * <p>Standard Portlet specification values are supported: {@code "NORMAL"},, +	 * {@code "MAXIMIZED"}, {@code "MINIMIZED"}., +	 * <p>Custom window states can be used as well, as supported by the portal., +	 * @since 4.2, +	 * @see #value, +	 * @see javax.portlet.PortletRequest#getWindowState(), +	 */, +	@AliasFor(attribute = "value"), +	String windowState() default "";, +, +	/**, +	 * <p>Same format for any environment: a sequence of {@code "myParam=myValue"}, +	 * style expressions, with a request only mapped if each such parameter is found, +	 * to have the given value. {@code "myParam"} style expressions are also supported,, +	 * any value). Finally, {@code "!myParam"} style expressions indicate that the, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/bind/annotation/RenderMapping.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * @author Sam Brannen, +	 * Alias for {@link #windowState}., +	@AliasFor(attribute = "windowState"), +	 * The window state that the annotated render method applies for., +	 * <p>If not specified, the render method will be invoked for any, +	 * window state within its general mapping., +	 * <p>Standard Portlet specification values are supported: {@code "NORMAL"},, +	 * {@code "MAXIMIZED"}, {@code "MINIMIZED"}., +	 * <p>Custom window states can be used as well, as supported by the portal., +	 * @since 4.2, +	 * @see #value, +	 * @see javax.portlet.PortletRequest#getWindowState(), +	 */, +	@AliasFor(attribute = "value"), +	String windowState() default "";, +, +	/**, +	 * <p>Same format for any environment: a sequence of {@code "myParam=myValue"}, +	 * style expressions, with a request only mapped if each such parameter is found, +	 * to have the given value. {@code "myParam"} style expressions are also supported,, +	 * any value). Finally, {@code "!myParam"} style expressions indicate that the, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +				mappingInfo.initPhaseMapping(PortletRequest.RENDER_PHASE, renderMapping.windowState(), renderMapping.params());, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/bind/annotation/RenderMapping.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * @author Sam Brannen, +	 * Alias for {@link #windowState}., +	@AliasFor(attribute = "windowState"), +	 * The window state that the annotated render method applies for., +	 * <p>If not specified, the render method will be invoked for any, +	 * window state within its general mapping., +	 * <p>Standard Portlet specification values are supported: {@code "NORMAL"},, +	 * {@code "MAXIMIZED"}, {@code "MINIMIZED"}., +	 * <p>Custom window states can be used as well, as supported by the portal., +	 * @since 4.2, +	 * @see #value, +	 * @see javax.portlet.PortletRequest#getWindowState(), +	 */, +	@AliasFor(attribute = "value"), +	String windowState() default "";, +, +	/**, +	 * <p>Same format for any environment: a sequence of {@code "myParam=myValue"}, +	 * style expressions, with a request only mapped if each such parameter is found, +	 * to have the given value. {@code "myParam"} style expressions are also supported,, +	 * any value). Finally, {@code "!myParam"} style expressions indicate that the, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +				mappingInfo.initPhaseMapping(PortletRequest.RENDER_PHASE, renderMapping.windowState(), renderMapping.params());, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/DefaultAnnotationHandlerMapping.java, +						predicate = new RenderMappingPredicate(renderMapping.windowState(), params);, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/bind/annotation/RenderMapping.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * @author Sam Brannen, +	 * Alias for {@link #windowState}., +	@AliasFor(attribute = "windowState"), +	 * The window state that the annotated render method applies for., +	 * <p>If not specified, the render method will be invoked for any, +	 * window state within its general mapping., +	 * <p>Standard Portlet specification values are supported: {@code "NORMAL"},, +	 * {@code "MAXIMIZED"}, {@code "MINIMIZED"}., +	 * <p>Custom window states can be used as well, as supported by the portal., +	 * @since 4.2, +	 * @see #value, +	 * @see javax.portlet.PortletRequest#getWindowState(), +	 */, +	@AliasFor(attribute = "value"), +	String windowState() default "";, +, +	/**, +	 * <p>Same format for any environment: a sequence of {@code "myParam=myValue"}, +	 * style expressions, with a request only mapped if each such parameter is found]