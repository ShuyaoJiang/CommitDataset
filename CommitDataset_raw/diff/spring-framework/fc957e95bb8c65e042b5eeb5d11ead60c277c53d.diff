[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/ResourceHandlerRegistry.java, +import org.springframework.web.reactive.resource.ResourceTransformerSupport;, +import org.springframework.web.reactive.resource.ResourceUrlProvider;, + * @author Brian Clozel, +	@Nullable, +	private ResourceUrlProvider resourceUrlProvider;, +, +	/**, +	 * Configure the {@link ResourceUrlProvider} that can be used by, +	 * {@link org.springframework.web.reactive.resource.ResourceTransformer} instances., +	 * @param resourceUrlProvider the resource URL provider to use, +	 * @since 5.1.2, +	 */, +	public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider) {, +		this.resourceUrlProvider = resourceUrlProvider;, +	}, +, +, +				handler.getResourceTransformers().forEach(transformer -> {, +					if (transformer instanceof ResourceTransformerSupport) {, +						((ResourceTransformerSupport) transformer).setResourceUrlProvider(this.resourceUrlProvider);, +					}, +				});, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/ResourceHandlerRegistry.java, +import org.springframework.web.reactive.resource.ResourceTransformerSupport;, +import org.springframework.web.reactive.resource.ResourceUrlProvider;, + * @author Brian Clozel, +	@Nullable, +	private ResourceUrlProvider resourceUrlProvider;, +, +	/**, +	 * Configure the {@link ResourceUrlProvider} that can be used by, +	 * {@link org.springframework.web.reactive.resource.ResourceTransformer} instances., +	 * @param resourceUrlProvider the resource URL provider to use, +	 * @since 5.1.2, +	 */, +	public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider) {, +		this.resourceUrlProvider = resourceUrlProvider;, +	}, +, +, +				handler.getResourceTransformers().forEach(transformer -> {, +					if (transformer instanceof ResourceTransformerSupport) {, +						((ResourceTransformerSupport) transformer).setResourceUrlProvider(this.resourceUrlProvider);, +					}, +				});, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurationSupport.java, +import org.springframework.web.reactive.resource.ResourceUrlProvider;, + * @author Brian Clozel, +		registry.setResourceUrlProvider(resourceUrlProvider());, +	@Bean, +	public ResourceUrlProvider resourceUrlProvider() {, +		return new ResourceUrlProvider();, +	}, +, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/ResourceHandlerRegistry.java, +import org.springframework.web.reactive.resource.ResourceTransformerSupport;, +import org.springframework.web.reactive.resource.ResourceUrlProvider;, + * @author Brian Clozel, +	@Nullable, +	private ResourceUrlProvider resourceUrlProvider;, +, +	/**, +	 * Configure the {@link ResourceUrlProvider} that can be used by, +	 * {@link org.springframework.web.reactive.resource.ResourceTransformer} instances., +	 * @param resourceUrlProvider the resource URL provider to use, +	 * @since 5.1.2, +	 */, +	public void setResourceUrlProvider(@Nullable ResourceUrlProvider resourceUrlProvider) {, +		this.resourceUrlProvider = resourceUrlProvider;, +	}, +, +, +				handler.getResourceTransformers().forEach(transformer -> {, +					if (transformer instanceof ResourceTransformerSupport) {, +						((ResourceTransformerSupport) transformer).setResourceUrlProvider(this.resourceUrlProvider);, +					}, +				});, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurationSupport.java, +import org.springframework.web.reactive.resource.ResourceUrlProvider;, + * @author Brian Clozel, +		registry.setResourceUrlProvider(resourceUrlProvider());, +	@Bean, +	public ResourceUrlProvider resourceUrlProvider() {, +		return new ResourceUrlProvider();, +	}, +, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/config/ResourceHandlerRegistryTests.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.web.reactive.resource.ResourceTransformerSupport;, +import org.springframework.web.reactive.resource.ResourceUrlProvider;, +		ResourceUrlProvider resourceUrlProvider = Mockito.mock(ResourceUrlProvider.class);, +		this.registry.setResourceUrlProvider(resourceUrlProvider);, +		ResourceTransformerSupport mockTransformer = Mockito.mock(ResourceTransformerSupport.class);, +		, +		Mockito.verify(mockTransformer).setResourceUrlProvider(resourceUrlProvider);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/ResourceHandlerRegistry.java, +import org.springframework.web.reactive.resource.ResourceTransformerSupport;, +import org.springframework.web.reactive.resource.ResourceUrlProvider;, + * @author Brian Clozel]