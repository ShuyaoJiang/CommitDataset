[+++ b/spring-web/src/main/java/org/springframework/http/client/reactive/AbstractClientHttpRequest.java, + * Copyright 2002-2018 the original author or authors., +		this.commitActions.add(() ->, +				Mono.fromRunnable(() -> {, +				}));, +		return Flux.concat(actions).then();, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/AbstractClientHttpRequest.java, + * Copyright 2002-2018 the original author or authors., +		this.commitActions.add(() ->, +				Mono.fromRunnable(() -> {, +				}));, +		return Flux.concat(actions).then();, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, +				return Mono.from(body), +						.flatMap(dataBuffer -> {, +							headers.setContentLength(dataBuffer.readableByteCount());, +							return message.writeWith(Mono.just(dataBuffer));, +						});, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/AbstractClientHttpRequest.java, + * Copyright 2002-2018 the original author or authors., +		this.commitActions.add(() ->, +				Mono.fromRunnable(() -> {, +				}));, +		return Flux.concat(actions).then();, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, +				return Mono.from(body), +						.flatMap(dataBuffer -> {, +							headers.setContentLength(dataBuffer.readableByteCount());, +							return message.writeWith(Mono.just(dataBuffer));, +						});, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/BodyInsertersTests.java, +							"Content-Length: 6\r\n" +, +							"Content-Length: 6\r\n" +, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/AbstractClientHttpRequest.java, + * Copyright 2002-2018 the original author or authors., +		this.commitActions.add(() ->, +				Mono.fromRunnable(() -> {, +				}));, +		return Flux.concat(actions).then();, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, +				return Mono.from(body), +						.flatMap(dataBuffer -> {, +							headers.setContentLength(dataBuffer.readableByteCount());, +							return message.writeWith(Mono.just(dataBuffer));, +						});, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/BodyInsertersTests.java, +							"Content-Length: 6\r\n" +, +							"Content-Length: 6\r\n" +, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/client/WebClientIntegrationTests.java, +			assertEquals("31", request.getHeader(HttpHeaders.CONTENT_LENGTH));]