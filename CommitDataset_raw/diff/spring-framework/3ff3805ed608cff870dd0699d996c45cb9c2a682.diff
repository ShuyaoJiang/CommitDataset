[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java, +	protected Map<String, Object> extractReturnedResults(CallableStatement cs,, +			List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount), +		if (!this.skipResultsProcessing) {, +						if (!this.skipUndeclaredResults) {, +							if (logger.isDebugEnabled()) {, +								logger.debug("Added default SqlReturnResultSet parameter named '" + rsName + "'");, +							}, +						if (!this.skipUndeclaredResults) {, +							String undeclaredName = RETURN_UPDATE_COUNT_PREFIX + (updateIndex + 1);, +							if (logger.isDebugEnabled()) {, +								logger.debug("Added default SqlReturnUpdateCount parameter named '" + undeclaredName + "'");, +							}, +							returnedResults.put(undeclaredName, updateCount);, +							returnedResults.putAll(processResultSet((ResultSet) out, rsParam));, +							if (logger.isDebugEnabled()) {, +								logger.debug("Added default SqlReturnResultSet parameter named '" + rsName + "'");, +							}, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java, +	protected Map<String, Object> extractReturnedResults(CallableStatement cs,, +			List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount), +		if (!this.skipResultsProcessing) {, +						if (!this.skipUndeclaredResults) {, +							if (logger.isDebugEnabled()) {, +								logger.debug("Added default SqlReturnResultSet parameter named '" + rsName + "'");, +							}, +						if (!this.skipUndeclaredResults) {, +							String undeclaredName = RETURN_UPDATE_COUNT_PREFIX + (updateIndex + 1);, +							if (logger.isDebugEnabled()) {, +								logger.debug("Added default SqlReturnUpdateCount parameter named '" + undeclaredName + "'");, +							}, +							returnedResults.put(undeclaredName, updateCount);, +							returnedResults.putAll(processResultSet((ResultSet) out, rsParam));, +							if (logger.isDebugEnabled()) {, +								logger.debug("Added default SqlReturnResultSet parameter named '" + rsName + "'");, +							}, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProvider.java, + *, + * <p>This is intended for internal use by Spring's, +	 * The returned value will be used for meta data lookups. This could include altering the case, +	 * used or providing a base catalog if none is provided., +	 * The returned value will be used for meta data lookups. This could include altering the case, +	 * used or providing a base schema if none is provided., +	 * Create a default out parameter based on the provided meta data., +	 * This is used when no explicit parameter declaration has been made., +	 * Create a default inout parameter based on the provided meta data., +	 * This is used when no explicit parameter declaration has been made., +	 * Create a default in parameter based on the provided meta data., +	 * This is used when no explicit parameter declaration has been made., +	 * Does this database support returning ResultSets that should be retrieved with the JDBC call., +	 * Does this database support returning ResultSets as ref cursors to be retrieved with, +	 * Get the {@link java.sql.Types} type for columns that return ResultSets as ref cursors, +	 * if this feature is supported.]