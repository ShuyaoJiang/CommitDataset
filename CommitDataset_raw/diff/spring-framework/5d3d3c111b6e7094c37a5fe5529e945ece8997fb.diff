[+++ b/src/reference/docbook/validation.xml, +      <title>JSR-303/JSR-349 Bean Validation</title>, +      <para>Spring Framework 4.0 supports Bean Validation 1.0 (JSR-303) and, +      Bean Validation 1.1 (JSR-349) in terms of setup support, also adapting, +      <para>An application can choose to enable Bean Validation once globally,, +      <para>For general information on JSR-303/JSR-349, see the <link, +        xl:href="http://beanvalidation.org/">Bean Validation website</link>., +        For information on the specific capabilities of, +        documentation. To learn how to setup a Bean Validation provider as a, +      <title>Configuring a Bean Validation Provider</title>, +      <para>Spring provides full support for the Bean Validation API., +        This includes convenient support for bootstrapping a JSR-303/JSR-349, +        Bean Validation provider as a Spring bean. This allows for a, +        configure a default Validator as a Spring bean:</para>, +      <para>The basic configuration above will trigger Bean Validation to initialize, +        using its default bootstrap mechanism. A JSR-303/JSR-349 provider, such as, +          you prefer to work with the Bean Validation API directly:</para>, +        <para>Each Bean Validation constraint consists of two parts. First,, +          number of configuration options for various Bean Validation constructs,, +      This is useful when combining globally configured Bean Validation, +        <title>Configuring a JSR-303/JSR-349 Validator for use by Spring MVC</title>, +        <para>With Bean Validation, a single <code>javax.validation.Validator</code>, +          that declare validation constraints. To configure such a JSR-303 backed, +          Validator with Spring MVC, simply add a Bean Validation provider, such as, +          automatically enable Bean Validation support across all Controllers.</para>, +        <para>The Spring MVC configuration required to enable Bean Validation support, +    <!-- JSR-303/JSR-349 support will be detected on classpath and enabled automatically -->, +        <para>With this minimal configuration, anytime a @Valid @Controller input, +          is encountered, it will be validated by the Bean Validation provider., +          That provider, in turn, will enforce any constraints declared against, +          the input. Any ConstraintViolations will automatically be exposed as]