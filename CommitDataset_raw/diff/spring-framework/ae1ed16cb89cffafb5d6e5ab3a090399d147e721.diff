[+++ b/spring-web/src/main/java/org/springframework/web/method/support/AsyncHandlerMethodReturnValueHandler.java, + * Copyright 2002-2017 the original author or authors., + * A return value handler that supports async types. Such return value types, + * need to be handled with priority so the async value can be "unwrapped"., + * <p><strong>Note: </strong> implementing this contract is not required but it, + * should be implemented when the handler needs to be prioritized ahead of others., + * For example custom (async) handlers, by default ordered after built-in, + * handlers, should take precedence over {@code @ResponseBody} or, + * {@code @ModelAttribute} handling, which should occur once the async value is, + * ready. By contrast, built-in (async) handlers are already ordered ahead of, + * sync handlers., +++ b/spring-web/src/main/java/org/springframework/web/method/support/AsyncHandlerMethodReturnValueHandler.java, + * Copyright 2002-2017 the original author or authors., + * A return value handler that supports async types. Such return value types, + * need to be handled with priority so the async value can be "unwrapped"., + * <p><strong>Note: </strong> implementing this contract is not required but it, + * should be implemented when the handler needs to be prioritized ahead of others., + * For example custom (async) handlers, by default ordered after built-in, + * handlers, should take precedence over {@code @ResponseBody} or, + * {@code @ModelAttribute} handling, which should occur once the async value is, + * ready. By contrast, built-in (async) handlers are already ordered ahead of, + * sync handlers., +++ b/spring-web/src/main/java/org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite.java, +public class HandlerMethodReturnValueHandlerComposite implements HandlerMethodReturnValueHandler {, +	private boolean isAsyncReturnValue(Object value, MethodParameter returnType) {, +++ b/spring-web/src/main/java/org/springframework/web/method/support/AsyncHandlerMethodReturnValueHandler.java, + * Copyright 2002-2017 the original author or authors., + * A return value handler that supports async types. Such return value types, + * need to be handled with priority so the async value can be "unwrapped"., + * <p><strong>Note: </strong> implementing this contract is not required but it, + * should be implemented when the handler needs to be prioritized ahead of others., + * For example custom (async) handlers, by default ordered after built-in, + * handlers, should take precedence over {@code @ResponseBody} or, + * {@code @ModelAttribute} handling, which should occur once the async value is, + * ready. By contrast, built-in (async) handlers are already ordered ahead of, + * sync handlers., +++ b/spring-web/src/main/java/org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite.java, +public class HandlerMethodReturnValueHandlerComposite implements HandlerMethodReturnValueHandler {, +	private boolean isAsyncReturnValue(Object value, MethodParameter returnType) {, +++ b/spring-web/src/test/java/org/springframework/web/method/support/HandlerMethodReturnValueHandlerCompositeTests.java, + * Copyright 2002-2017 the original author or authors., +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.verify;, +import static org.mockito.Mockito.verifyNoMoreInteractions;, +import static org.mockito.Mockito.when;, +	@Test // SPR-13083, +++ b/spring-web/src/main/java/org/springframework/web/method/support/AsyncHandlerMethodReturnValueHandler.java, + * Copyright 2002-2017 the original author or authors., + * A return value handler that supports async types. Such return value types, + * need to be handled with priority so the async value can be "unwrapped"., + * <p><strong>Note: </strong> implementing this contract is not required but it, + * should be implemented when the handler needs to be prioritized ahead of others., + * For example custom (async) handlers, by default ordered after built-in, + * handlers, should take precedence over {@code @ResponseBody} or, + * {@code @ModelAttribute} handling, which should occur once the async value is, + * ready. By contrast, built-in (async) handlers are already ordered ahead of, + * sync handlers., +++ b/spring-web/src/main/java/org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite.java, +public class HandlerMethodReturnValueHandlerComposite implements HandlerMethodReturnValueHandler {, +	private boolean isAsyncReturnValue(Object value, MethodParameter returnType) {, +++ b/spring-web/src/test/java/org/springframework/web/method/support/HandlerMethodReturnValueHandlerCompositeTests.java, + * Copyright 2002-2017 the original author or authors., +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.verify;, +import static org.mockito.Mockito.verifyNoMoreInteractions;, +import static org.mockito.Mockito.when;, +	@Test // SPR-13083, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AsyncTaskMethodReturnValueHandler.java, +import org.springframework.web.method.support.HandlerMethodReturnValueHandler;, +public class AsyncTaskMethodReturnValueHandler implements HandlerMethodReturnValueHandler {, +++ b/spring-web/src/main/java/org/springframework/web/method/support/AsyncHandlerMethodReturnValueHandler.java, + * Copyright 2002-2017 the original author or authors., + * A return value handler that supports async types. Such return value types, + * need to be handled with priority so the async value can be "unwrapped"., + * <p><strong>Note: </strong> implementing this contract is not required but it, + * should be implemented when the handler needs to be prioritized ahead of others., + * For example custom (async) handlers, by default ordered after built-in, + * handlers, should take precedence over {@code @ResponseBody} or, + * {@code @ModelAttribute} handling, which should occur once the async value is, + * ready. By contrast, built-in (async) handlers are already ordered ahead of, + * sync handlers., +++ b/spring-web/src/main/java/org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite.java, +public class HandlerMethodReturnValueHandlerComposite implements HandlerMethodReturnValueHandler {, +	private boolean isAsyncReturnValue(Object value, MethodParameter returnType) {, +++ b/spring-web/src/test/java/org/springframework/web/method/support/HandlerMethodReturnValueHandlerCompositeTests.java, + * Copyright 2002-2017 the original author or authors., +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.verify;, +import static org.mockito.Mockito.verifyNoMoreInteractions;, +import static org.mockito.Mockito.when;, +	@Test // SPR-13083, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AsyncTaskMethodReturnValueHandler.java, +import org.springframework.web.method.support.HandlerMethodReturnValueHandler;, +public class AsyncTaskMethodReturnValueHandler implements HandlerMethodReturnValueHandler {]