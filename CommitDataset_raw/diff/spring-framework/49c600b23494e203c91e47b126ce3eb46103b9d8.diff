[+++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +	protected void registerExceptionHandlerAdvice(MessagingAdviceBean bean, AbstractExceptionHandlerMethodResolver resolver) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +	protected void registerExceptionHandlerAdvice(MessagingAdviceBean bean, AbstractExceptionHandlerMethodResolver resolver) {, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketAnnotationMethodMessageHandler.java, +, +import org.springframework.messaging.handler.annotation.support.AnnotationExceptionHandlerMethodResolver;, +	private void initMessagingAdviceCache(List<MessagingAdviceBean> beans) {, +		if (beans == null) {, +			return;, +		}, +		for (MessagingAdviceBean bean : beans) {, +			Class<?> beanType = bean.getBeanType();, +			AnnotationExceptionHandlerMethodResolver resolver = new AnnotationExceptionHandlerMethodResolver(beanType);, +			if (resolver.hasExceptionMappings()) {, +				registerExceptionHandlerAdvice(bean, resolver);, +				logger.info("Detected @MessageExceptionHandler methods in " + bean);, +			}, +		}, +	}, +]