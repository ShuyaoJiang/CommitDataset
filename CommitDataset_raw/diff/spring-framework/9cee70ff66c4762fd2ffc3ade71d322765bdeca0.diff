[+++ b/spring-context/src/test/java/org/springframework/context/annotation/ComponentScanParserTests.java, +import static org.hamcrest.CoreMatchers.*;, +import static org.junit.Assert.*;, +, +	private ClassPathXmlApplicationContext loadContext(String path) {, +		return new ClassPathXmlApplicationContext(path, getClass());, +	}, +, +	public void aspectJTypeFilter() {, +		ClassPathXmlApplicationContext context = loadContext("aspectjTypeFilterTests.xml");, +		context.close();, +	public void nonMatchingResourcePattern() {, +		ClassPathXmlApplicationContext context = loadContext("nonMatchingResourcePatternTests.xml");, +		context.close();, +	public void matchingResourcePattern() {, +		ClassPathXmlApplicationContext context = loadContext("matchingResourcePatternTests.xml");, +		context.close();, +	public void componentScanWithAutowiredQualifier() {, +		ClassPathXmlApplicationContext context = loadContext("componentScanWithAutowiredQualifierTests.xml");, +		context.close();, +	public void customAnnotationUsedForBothComponentScanAndQualifier() {, +		ClassPathXmlApplicationContext context = loadContext("customAnnotationUsedForBothComponentScanAndQualifierTests.xml");, +		context.close();, +	public void customTypeFilter() {, +		ClassPathXmlApplicationContext context = loadContext("customTypeFilterTests.xml");, +		context.close();, +	public void componentScanRespectsProfileAnnotation() {, +			context.close();, +			context.close();, +			ConfigurableApplicationContext context = new ClassPathXmlApplicationContext(new String[] { xmlLocation },, +				false);, +			context.close();, +, +	/**, +	 * Intentionally spelling "custom" with a "k" since there are numerous, +	 * classes in this package named *Custom*., +	 */]