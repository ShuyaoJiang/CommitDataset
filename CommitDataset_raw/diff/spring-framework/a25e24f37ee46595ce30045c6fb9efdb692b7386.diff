[+++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java, +import org.springframework.util.ReflectionUtils;, + * <p>This transaction manager is compatible with WebSphere 6.1.0.9 and above., + * The default JNDI location for the UOWManager is "java:comp/websphere/UOWManager"., +	public <T> T execute(TransactionDefinition definition, TransactionCallback<T> callback) throws TransactionException {, +			UOWActionAdapter<T> action = new UOWActionAdapter<T>(, +	private class UOWActionAdapter<T> implements UOWAction {, +		private final TransactionCallback<T> callback;, +		private T result;, +		private Throwable exception;, +, +		public UOWActionAdapter(TransactionDefinition definition, TransactionCallback<T> callback,, +			catch (Throwable ex) {, +				this.exception = ex;, +			}, +		public T getResult() {, +			if (this.exception != null) {, +				ReflectionUtils.rethrowRuntimeException(this.exception);, +			}, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java, +import org.springframework.util.ReflectionUtils;, + * <p>This transaction manager is compatible with WebSphere 6.1.0.9 and above., + * The default JNDI location for the UOWManager is "java:comp/websphere/UOWManager"., +	public <T> T execute(TransactionDefinition definition, TransactionCallback<T> callback) throws TransactionException {, +			UOWActionAdapter<T> action = new UOWActionAdapter<T>(, +	private class UOWActionAdapter<T> implements UOWAction {, +		private final TransactionCallback<T> callback;, +		private T result;, +		private Throwable exception;, +, +		public UOWActionAdapter(TransactionDefinition definition, TransactionCallback<T> callback,, +			catch (Throwable ex) {, +				this.exception = ex;, +			}, +		public T getResult() {, +			if (this.exception != null) {, +				ReflectionUtils.rethrowRuntimeException(this.exception);, +			}, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +	<T> T execute(TransactionDefinition definition, TransactionCallback<T> callback), +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java, +import org.springframework.util.ReflectionUtils;, + * <p>This transaction manager is compatible with WebSphere 6.1.0.9 and above., + * The default JNDI location for the UOWManager is "java:comp/websphere/UOWManager"., +	public <T> T execute(TransactionDefinition definition, TransactionCallback<T> callback) throws TransactionException {, +			UOWActionAdapter<T> action = new UOWActionAdapter<T>(, +	private class UOWActionAdapter<T> implements UOWAction {, +		private final TransactionCallback<T> callback;, +		private T result;, +		private Throwable exception;, +, +		public UOWActionAdapter(TransactionDefinition definition, TransactionCallback<T> callback,, +			catch (Throwable ex) {, +				this.exception = ex;, +			}, +		public T getResult() {, +			if (this.exception != null) {, +				ReflectionUtils.rethrowRuntimeException(this.exception);, +			}, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +	<T> T execute(TransactionDefinition definition, TransactionCallback<T> callback), +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/support/TransactionCallback.java, + * Copyright 2002-2009 the original author or authors., +public interface TransactionCallback<T> {, +	T doInTransaction(TransactionStatus status);, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java, +import org.springframework.util.ReflectionUtils;, + * <p>This transaction manager is compatible with WebSphere 6.1.0.9 and above., + * The default JNDI location for the UOWManager is "java:comp/websphere/UOWManager"., +	public <T> T execute(TransactionDefinition definition, TransactionCallback<T> callback) throws TransactionException {, +			UOWActionAdapter<T> action = new UOWActionAdapter<T>(, +	private class UOWActionAdapter<T> implements UOWAction {, +		private final TransactionCallback<T> callback;, +		private T result;, +		private Throwable exception;, +, +		public UOWActionAdapter(TransactionDefinition definition, TransactionCallback<T> callback,, +			catch (Throwable ex) {, +				this.exception = ex;, +			}, +		public T getResult() {, +			if (this.exception != null) {, +				ReflectionUtils.rethrowRuntimeException(this.exception);, +			}, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +	<T> T execute(TransactionDefinition definition, TransactionCallback<T> callback), +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/support/TransactionCallback.java, + * Copyright 2002-2009 the original author or authors., +public interface TransactionCallback<T> {, +	T doInTransaction(TransactionStatus status);, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/support/TransactionOperations.java, + * Copyright 2002-2009 the original author or authors., +	<T> T execute(TransactionCallback<T> action) throws TransactionException;, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java, +import org.springframework.util.ReflectionUtils;, + * <p>This transaction manager is compatible with WebSphere 6.1.0.9 and above., + * The default JNDI location for the UOWManager is "java:comp/websphere/UOWManager".]