[+++ b/spring-core/src/main/java/org/springframework/core/convert/support/DefaultConversionService.java, +	/**, +	 * Add collection converters., +	 * @param converterRegistry the registry of converters to add to (must also be castable to ConversionService,, +	 * e.g. being a {@link ConfigurableConversionService}), +	 * @throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService, +	 * @since 4.2.3, +	 */, +	public static void addCollectionConverters(ConverterRegistry converterRegistry) {, +		ConversionService conversionService = (ConversionService) converterRegistry;, +, +		converterRegistry.addConverter(new ArrayToCollectionConverter(conversionService));, +		converterRegistry.addConverter(new CollectionToArrayConverter(conversionService));, +, +		converterRegistry.addConverter(new ArrayToArrayConverter(conversionService));, +		converterRegistry.addConverter(new CollectionToCollectionConverter(conversionService));, +		converterRegistry.addConverter(new MapToMapConverter(conversionService));, +, +		converterRegistry.addConverter(new ArrayToStringConverter(conversionService));, +		converterRegistry.addConverter(new StringToArrayConverter(conversionService));, +, +		converterRegistry.addConverter(new ArrayToObjectConverter(conversionService));, +		converterRegistry.addConverter(new ObjectToArrayConverter(conversionService));, +, +		converterRegistry.addConverter(new CollectionToStringConverter(conversionService));, +		converterRegistry.addConverter(new StringToCollectionConverter(conversionService));, +, +		converterRegistry.addConverter(new CollectionToObjectConverter(conversionService));, +		converterRegistry.addConverter(new ObjectToCollectionConverter(conversionService));, +, +		if (streamAvailable) {, +			converterRegistry.addConverter(new StreamConverter(conversionService));, +		}, +	}, +, +]