[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/Param.java, + * <p>Attributes are the raw values passed to the spring:param tag and have not , + * been encoded or escaped. , + * , +	 * @return the raw parameter name, +	 * Set the raw name of the parameter, +	 * @return the raw parameter value, +	 * Set the raw value of the parameter, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/Param.java, + * <p>Attributes are the raw values passed to the spring:param tag and have not , + * been encoded or escaped. , + * , +	 * @return the raw parameter name, +	 * Set the raw name of the parameter, +	 * @return the raw parameter value, +	 * Set the raw value of the parameter, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/ParamTag.java, + * <p>This tag must be nested under a param aware tag., +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/Param.java, + * <p>Attributes are the raw values passed to the spring:param tag and have not , + * been encoded or escaped. , + * , +	 * @return the raw parameter name, +	 * Set the raw name of the parameter, +	 * @return the raw parameter value, +	 * Set the raw value of the parameter, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/ParamTag.java, + * <p>This tag must be nested under a param aware tag., +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/UrlTag.java, + * <p>Enhancements to the JSTL functionality include:, + * <p>Template URI variables are indicated in the {@link #setValue(String) 'value'}, + * attribute and marked by braces '{variableName}'. The braces and attribute name are, + * replaced by the URL encoded value of a parameter defined with the spring:param tag , + * in the body of the url tag. If no parameter is available the literal value is , + * passed through. Params matched to template variables will not be added to the query , + * string., + * <p>Use of the spring:param tag for URI template variables is strongly recommended , + * over direct EL substitution as the values are URL encoded.  Failure to properly , + * encode URL can leave an application vulnerable to XSS and other injection attacks., + * , + * <p>URLs can be XML escaped by setting the {@link #setEscapeXml(String) , + * <p>Example usage:, + * <pre>&lt;spring:url value="/url/path/{variableName}"&gt;, + *   &lt;spring:param name="variableName" value="more than JSTL c:url" /&gt;, + * &lt;/spring:url&gt;</pre>, + * Results in:, + * <code>/currentApplicationContext/url/path/more+than+JSTL+c%3Aurl</code>, + * , +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/Param.java, + * <p>Attributes are the raw values passed to the spring:param tag and have not , + * been encoded or escaped. , + * , +	 * @return the raw parameter name, +	 * Set the raw name of the parameter, +	 * @return the raw parameter value, +	 * Set the raw value of the parameter, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/ParamTag.java, + * <p>This tag must be nested under a param aware tag., +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/UrlTag.java, + * <p>Enhancements to the JSTL functionality include:, + * <p>Template URI variables are indicated in the {@link #setValue(String) 'value'}, + * attribute and marked by braces '{variableName}'. The braces and attribute name are, + * replaced by the URL encoded value of a parameter defined with the spring:param tag , + * in the body of the url tag. If no parameter is available the literal value is , + * passed through. Params matched to template variables will not be added to the query , + * string., + * <p>Use of the spring:param tag for URI template variables is strongly recommended , + * over direct EL substitution as the values are URL encoded.  Failure to properly , + * encode URL can leave an application vulnerable to XSS and other injection attacks., + * , + * <p>URLs can be XML escaped by setting the {@link #setEscapeXml(String) , + * <p>Example usage:, + * <pre>&lt;spring:url value="/url/path/{variableName}"&gt;, + *   &lt;spring:param name="variableName" value="more than JSTL c:url" /&gt;, + * &lt;/spring:url&gt;</pre>, + * Results in:, + * <code>/currentApplicationContext/url/path/more+than+JSTL+c%3Aurl</code>, + * , +++ b/org.springframework.web.servlet/src/main/resources/META-INF/spring.tld, +			directly to the JspWriter in an XML or HTML based document.</description>]