[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, +			if (targetType.getType().isInstance(source)) {, +				logger.debug("No converter found - returning assignable source object as-is");, +				return source;, +			}, +			else {, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, +			if (targetType.getType().isInstance(source)) {, +				logger.debug("No converter found - returning assignable source object as-is");, +				return source;, +			}, +			else {, +		}, +++ b/org.springframework.expression/src/test/java/org/springframework/expression/spel/standard/PropertiesConversionSpelTests.java, +import java.util.UUID;, +	@Test, +		map.put("a", new UUID(1, 1));, +		Expression expression = parser.parseExpression("foo(#props)");, +		StandardEvaluationContext context = new StandardEvaluationContext();, +		context.setVariable("props", map);, +		String result = expression.getValue(context, new TestBean(), String.class);, +		assertEquals("1null3", result);, +	}, +, +	@Test, +	public void customMapWithNonStringValue() {, +		CustomMap map = new CustomMap();, +		map.put("x", "1");, +		map.put("y", 2);, +		map.put("z", "3");, +, +	@SuppressWarnings("serial"), +	private static class CustomMap extends HashMap<String, Object> {, +	}, +]