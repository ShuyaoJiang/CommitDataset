[+++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/MethodValidationInterceptor.java, + * Copyright 2002-2017 the original author or authors., + * <p>As of Spring 5.0, this functionality requires a Bean Validation 1.1 provider., +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/MethodValidationInterceptor.java, + * Copyright 2002-2017 the original author or authors., + * <p>As of Spring 5.0, this functionality requires a Bean Validation 1.1 provider., +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/MethodValidationPostProcessor.java, + * Copyright 2002-2017 the original author or authors., + * <p>As of Spring 5.0, this functionality requires a Bean Validation 1.1 provider., + * @see javax.validation.executable.ExecutableValidator, +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/MethodValidationInterceptor.java, + * Copyright 2002-2017 the original author or authors., + * <p>As of Spring 5.0, this functionality requires a Bean Validation 1.1 provider., +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/MethodValidationPostProcessor.java, + * Copyright 2002-2017 the original author or authors., + * <p>As of Spring 5.0, this functionality requires a Bean Validation 1.1 provider., + * @see javax.validation.executable.ExecutableValidator, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/ModelAttributeMethodProcessor.java, + * Copyright 2002-2017 the original author or authors., +public class ModelAttributeMethodProcessor implements HandlerMethodArgumentResolver, HandlerMethodReturnValueHandler {, +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/MethodValidationInterceptor.java, + * Copyright 2002-2017 the original author or authors., + * <p>As of Spring 5.0, this functionality requires a Bean Validation 1.1 provider., +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/MethodValidationPostProcessor.java, + * Copyright 2002-2017 the original author or authors., + * <p>As of Spring 5.0, this functionality requires a Bean Validation 1.1 provider., + * @see javax.validation.executable.ExecutableValidator, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/ModelAttributeMethodProcessor.java, + * Copyright 2002-2017 the original author or authors., +public class ModelAttributeMethodProcessor implements HandlerMethodArgumentResolver, HandlerMethodReturnValueHandler {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java, + * Copyright 2002-2017 the original author or authors., +	 * Validate the binding target if applicable., +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/MethodValidationInterceptor.java, + * Copyright 2002-2017 the original author or authors., + * <p>As of Spring 5.0, this functionality requires a Bean Validation 1.1 provider., +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/MethodValidationPostProcessor.java, + * Copyright 2002-2017 the original author or authors., + * <p>As of Spring 5.0, this functionality requires a Bean Validation 1.1 provider., + * @see javax.validation.executable.ExecutableValidator, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/ModelAttributeMethodProcessor.java, + * Copyright 2002-2017 the original author or authors., +public class ModelAttributeMethodProcessor implements HandlerMethodArgumentResolver, HandlerMethodReturnValueHandler {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java, + * Copyright 2002-2017 the original author or authors., +	 * Validate the binding target if applicable., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ServletInvocableHandlerMethod.java, + * Copyright 2002-2017 the original author or authors., +	public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,, +			Object... providedArgs) throws Exception {, +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/MethodValidationInterceptor.java, + * Copyright 2002-2017 the original author or authors., + * <p>As of Spring 5.0, this functionality requires a Bean Validation 1.1 provider., +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/MethodValidationPostProcessor.java, + * Copyright 2002-2017 the original author or authors., + * <p>As of Spring 5.0, this functionality requires a Bean Validation 1.1 provider., + * @see javax.validation.executable.ExecutableValidator, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/ModelAttributeMethodProcessor.java, + * Copyright 2002-2017 the original author or authors., +public class ModelAttributeMethodProcessor implements HandlerMethodArgumentResolver, HandlerMethodReturnValueHandler {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java, + * Copyright 2002-2017 the original author or authors., +	 * Validate the binding target if applicable., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ServletInvocableHandlerMethod.java, + * Copyright 2002-2017 the original author or authors., +	public void invokeAndHandle(ServletWebRequest webRequest, ModelAndViewContainer mavContainer,, +			Object... providedArgs) throws Exception {, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/config/MvcNamespaceTests.java, + * Copyright 2002-2017 the original author or authors., +	public static final String VIEWCONTROLLER_BEAN_NAME =, +			"org.springframework.web.servlet.config.viewControllerHandlerMapping";, +, +		assertEquals(Collections.singletonList(MediaType.APPLICATION_JSON), manager.resolveMediaTypes(webRequest));, +		assertEquals(Collections.singletonList(MediaType.valueOf("application/rss+xml")),, +				manager.resolveMediaTypes(webRequest));, +			assertEquals(Long.valueOf(1800), config.getMaxAge());, +			assertEquals(Long.valueOf(123), config.getMaxAge());, +			assertEquals(Long.valueOf(1800), config.getMaxAge());, +	@Target(ElementType.PARAMETER), +	@Target(ElementType.PARAMETER), +	@Target(ElementType.PARAMETER), +]