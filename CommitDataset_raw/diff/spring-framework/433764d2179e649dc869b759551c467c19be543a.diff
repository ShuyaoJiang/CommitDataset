[+++ b/spring-context/src/main/java/org/springframework/scripting/groovy/GroovyScriptFactory.java, +import org.codehaus.groovy.control.CompilerConfiguration;, +import org.codehaus.groovy.control.customizers.CompilationCustomizer;, +	private GroovyObjectCustomizer groovyObjectCustomizer;, +, +	private CompilerConfiguration compilerConfiguration;, +		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty");, +		this.scriptSourceLocator = scriptSourceLocator;, +	 * @see GroovyObjectCustomizer#customize, +		this(scriptSourceLocator);, +	/**, +	 * Create a new GroovyScriptFactory for the given script source,, +	 * specifying a strategy interface that can customize Groovy's compilation, +	 * process within the underlying GroovyClassLoader., +	 * @param scriptSourceLocator a locator that points to the source of the script., +	 * Interpreted by the post-processor that actually creates the script., +	 * @param compilationCustomizer a customizer to be applied to the GroovyClassLoader, +	 * compiler configuration (may be {@code null}), +	 * @since 4.3.3, +	 * @see CompilerConfiguration#addCompilationCustomizers, +	 * @see org.codehaus.groovy.control.customizers.ImportCustomizer, +	 */, +	public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer compilationCustomizer) {, +		this(scriptSourceLocator);, +		if (compilationCustomizer != null) {, +			this.compilerConfiguration = new CompilerConfiguration();, +			this.compilerConfiguration.addCompilationCustomizers(compilationCustomizer);, +		}, +	}, +, +		this.groovyClassLoader = buildGroovyClassLoader(classLoader);, +				this.groovyClassLoader = buildGroovyClassLoader(ClassUtils.getDefaultClassLoader());, +	/**, +	 * Build a {@link GroovyClassLoader} for the given {@code ClassLoader}., +	 * @param classLoader the ClassLoader to build a GroovyClassLoader for, +	 * @since 4.3.3, +	 */, +	protected GroovyClassLoader buildGroovyClassLoader(ClassLoader classLoader) {, +		return (this.compilerConfiguration != null ?, +				new GroovyClassLoader(classLoader, this.compilerConfiguration) : new GroovyClassLoader(classLoader));, +	}, +, +++ b/spring-context/src/main/java/org/springframework/scripting/groovy/GroovyScriptFactory.java, +import org.codehaus.groovy.control.CompilerConfiguration;, +import org.codehaus.groovy.control.customizers.CompilationCustomizer;, +	private GroovyObjectCustomizer groovyObjectCustomizer;, +, +	private CompilerConfiguration compilerConfiguration;, +		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty");, +		this.scriptSourceLocator = scriptSourceLocator;, +	 * @see GroovyObjectCustomizer#customize, +		this(scriptSourceLocator);, +	/**, +	 * Create a new GroovyScriptFactory for the given script source,, +	 * specifying a strategy interface that can customize Groovy's compilation, +	 * process within the underlying GroovyClassLoader., +	 * @param scriptSourceLocator a locator that points to the source of the script., +	 * Interpreted by the post-processor that actually creates the script., +	 * @param compilationCustomizer a customizer to be applied to the GroovyClassLoader, +	 * compiler configuration (may be {@code null}), +	 * @since 4.3.3, +	 * @see CompilerConfiguration#addCompilationCustomizers, +	 * @see org.codehaus.groovy.control.customizers.ImportCustomizer, +	 */, +	public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer compilationCustomizer) {, +		this(scriptSourceLocator);, +		if (compilationCustomizer != null) {, +			this.compilerConfiguration = new CompilerConfiguration();, +			this.compilerConfiguration.addCompilationCustomizers(compilationCustomizer);, +		}, +	}, +, +		this.groovyClassLoader = buildGroovyClassLoader(classLoader);, +				this.groovyClassLoader = buildGroovyClassLoader(ClassUtils.getDefaultClassLoader());, +	/**, +	 * Build a {@link GroovyClassLoader} for the given {@code ClassLoader}., +	 * @param classLoader the ClassLoader to build a GroovyClassLoader for, +	 * @since 4.3.3, +	 */, +	protected GroovyClassLoader buildGroovyClassLoader(ClassLoader classLoader) {, +		return (this.compilerConfiguration != null ?, +				new GroovyClassLoader(classLoader, this.compilerConfiguration) : new GroovyClassLoader(classLoader));, +	}, +, +++ b/spring-context/src/test/java/org/springframework/scripting/groovy/MyImportCustomizer.java, +/*, + * Copyright 2002-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */]