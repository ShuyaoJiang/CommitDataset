[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, +import org.springframework.http.codec.ServerCodecConfigurer;, +	public DefaultControllerSpec httpMessageCodecs(Consumer<ServerCodecConfigurer> consumer) {, +		this.configurer.messageCodecsConsumer = consumer;, +		private Consumer<ServerCodecConfigurer> messageCodecsConsumer;, +		public void configureHttpMessageCodecs(ServerCodecConfigurer configurer) {, +			if (this.messageCodecsConsumer != null) {, +				this.messageCodecsConsumer.accept(configurer);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, +import org.springframework.http.codec.ServerCodecConfigurer;, +	public DefaultControllerSpec httpMessageCodecs(Consumer<ServerCodecConfigurer> consumer) {, +		this.configurer.messageCodecsConsumer = consumer;, +		private Consumer<ServerCodecConfigurer> messageCodecsConsumer;, +		public void configureHttpMessageCodecs(ServerCodecConfigurer configurer) {, +			if (this.messageCodecsConsumer != null) {, +				this.messageCodecsConsumer.accept(configurer);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +import org.springframework.http.codec.ServerCodecConfigurer;, +		 * Modify or extend the list of built-in message readers and writers., +		 * @see WebFluxConfigurer#configureHttpMessageCodecs, +		ControllerSpec httpMessageCodecs(Consumer<ServerCodecConfigurer> configurer);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, +import org.springframework.http.codec.ServerCodecConfigurer;, +	public DefaultControllerSpec httpMessageCodecs(Consumer<ServerCodecConfigurer> consumer) {, +		this.configurer.messageCodecsConsumer = consumer;, +		private Consumer<ServerCodecConfigurer> messageCodecsConsumer;, +		public void configureHttpMessageCodecs(ServerCodecConfigurer configurer) {, +			if (this.messageCodecsConsumer != null) {, +				this.messageCodecsConsumer.accept(configurer);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +import org.springframework.http.codec.ServerCodecConfigurer;, +		 * Modify or extend the list of built-in message readers and writers., +		 * @see WebFluxConfigurer#configureHttpMessageCodecs, +		ControllerSpec httpMessageCodecs(Consumer<ServerCodecConfigurer> configurer);, +++ b/spring-web/src/main/java/org/springframework/http/codec/ServerCodecConfigurer.java, +/*, + * Copyright 2002-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.http.codec;, +, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +import java.util.function.Supplier;, +, +import org.springframework.core.ResolvableType;, +import org.springframework.core.codec.ByteArrayDecoder;, +import org.springframework.core.codec.ByteArrayEncoder;, +import org.springframework.core.codec.ByteBufferDecoder;, +import org.springframework.core.codec.ByteBufferEncoder;, +import org.springframework.core.codec.CharSequenceEncoder;, +import org.springframework.core.codec.DataBufferDecoder;, +import org.springframework.core.codec.DataBufferEncoder;, +import org.springframework.core.codec.Decoder;, +import org.springframework.core.codec.Encoder;, +import org.springframework.core.codec.ResourceDecoder;, +import org.springframework.core.codec.StringDecoder;, +import org.springframework.http.codec.json.Jackson2JsonDecoder;, +import org.springframework.http.codec.json.Jackson2JsonEncoder;, +import org.springframework.http.codec.xml.Jaxb2XmlDecoder;, +import org.springframework.http.codec.xml.Jaxb2XmlEncoder;, +import org.springframework.util.ClassUtils;, +, +/**, + * Helps to configure a list of server-side HTTP message readers and writers, + * with support for built-in defaults and options to register additional custom, + * readers and writers via {@link #customCodec()}., + *, + * <p>The built-in defaults include basic data types such as, + * {@link Byte byte[]}, {@link java.nio.ByteBuffer ByteBuffer},, + * {@link org.springframework.core.io.buffer.DataBuffer DataBuffer},, + * {@link String}, {@link org.springframework.core.io.Resource Resource},, + * in addition to JAXB2 and Jackson 2 based on classpath detection, as well as, + * support for Server-Sent Events. There are options to {@link #defaultCodec(), + * override} some of the defaults or to have them, + * {@link #registerDefaults(boolean) turned off} completely., + *, + * @author Rossen Stoyanchev, + * @since 5.0, + */, +public class ServerCodecConfigurer {, +, +	private static final boolean jackson2Present =, +			ClassUtils.isPresent("com.fasterxml.jackson.databind.ObjectMapper",, +					ServerCodecConfigurer.class.getClassLoader()) &&, +					ClassUtils.isPresent("com.fasterxml.jackson.core.JsonGenerator",, +							ServerCodecConfigurer.class.getClassLoader());]