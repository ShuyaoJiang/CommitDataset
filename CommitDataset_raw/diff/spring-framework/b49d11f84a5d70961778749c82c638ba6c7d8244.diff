[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextConfiguration.java, + * As of Spring 3.1, {@link #loader context loaders} may choose to support, + * @see SmartContextLoader, + * @see ActiveProfiles, +	 * <p>Check out the javadoc for, +	 * {@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations, +	 * AbstractContextLoader.modifyLocations()} for details on how a location, +	 * String will be interpreted at runtime, in particular in case of a relative, +	 * path. Also, check out the documentation on, +	 * {@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations, +	 * AbstractContextLoader.generateDefaultLocations()} for details on the default, +	 * locations that are going to be used if none are specified., +	 * {@link org.springframework.test.context.support.AbstractContextLoader, +	 * AbstractContextLoader} subclass such as, +	 * {@link org.springframework.test.context.support.GenericXmlContextLoader, +	 * GenericXmlContextLoader} which is the effective default implementation, +	 * used at runtime., +	 * <p>This attribute may <strong>not</strong> be used in conjunction with, +	 * {@link #value} or {@link #classes}, but it may be used instead of, +	 * {@link #value}., +	 * @since 2.5, +	 * {@link SmartContextLoader} must be {@link #loader configured}., +	 * {@link org.springframework.test.context.support.AnnotationConfigContextLoader, +	 * AnnotationConfigContextLoader} is one such loader provided by the Spring Framework., +	 * {@link org.springframework.test.context.support.AnnotationConfigContextLoader#generateDefaultConfigurationClasses, +	 * AnnotationConfigContextLoader.generateDefaultConfigurationClasses()}, +	 * for details on the default configuration classes that will be used if none, +	 * are specified., +	 * @since 2.5, +	// TODO Update regarding default --> DelegatingSmartContextLoader, +	 * The type of {@link ContextLoader} (or {@link SmartContextLoader}) to use, +	 * for loading an {@link org.springframework.context.ApplicationContext, +	 * ApplicationContext}., +	 * that is annotated with {@code @ContextConfiguration} and specifies an, +	 * explicit loader. If no class in the hierarchy specifies an explicit, +	 * {@link org.springframework.test.context.support.GenericXmlContextLoader, +	 * GenericXmlContextLoader}. Also check out, +	 * {@link org.springframework.test.context.support.AbstractContextLoader, +	 * AbstractContextLoader}'s javadoc for details on the default behavior there., +	 * @since 2.5, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextConfiguration.java, + * As of Spring 3.1, {@link #loader context loaders} may choose to support, + * @see SmartContextLoader, + * @see ActiveProfiles, +	 * <p>Check out the javadoc for, +	 * {@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations, +	 * AbstractContextLoader.modifyLocations()} for details on how a location, +	 * String will be interpreted at runtime, in particular in case of a relative, +	 * path. Also, check out the documentation on, +	 * {@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations, +	 * AbstractContextLoader.generateDefaultLocations()} for details on the default, +	 * locations that are going to be used if none are specified., +	 * {@link org.springframework.test.context.support.AbstractContextLoader, +	 * AbstractContextLoader} subclass such as, +	 * {@link org.springframework.test.context.support.GenericXmlContextLoader, +	 * GenericXmlContextLoader} which is the effective default implementation, +	 * used at runtime., +	 * <p>This attribute may <strong>not</strong> be used in conjunction with, +	 * {@link #value} or {@link #classes}, but it may be used instead of, +	 * {@link #value}., +	 * @since 2.5, +	 * {@link SmartContextLoader} must be {@link #loader configured}., +	 * {@link org.springframework.test.context.support.AnnotationConfigContextLoader, +	 * AnnotationConfigContextLoader} is one such loader provided by the Spring Framework., +	 * {@link org.springframework.test.context.support.AnnotationConfigContextLoader#generateDefaultConfigurationClasses, +	 * AnnotationConfigContextLoader.generateDefaultConfigurationClasses()}, +	 * for details on the default configuration classes that will be used if none, +	 * are specified., +	 * @since 2.5, +	// TODO Update regarding default --> DelegatingSmartContextLoader, +	 * The type of {@link ContextLoader} (or {@link SmartContextLoader}) to use, +	 * for loading an {@link org.springframework.context.ApplicationContext, +	 * ApplicationContext}., +	 * that is annotated with {@code @ContextConfiguration} and specifies an, +	 * explicit loader. If no class in the hierarchy specifies an explicit, +	 * {@link org.springframework.test.context.support.GenericXmlContextLoader, +	 * GenericXmlContextLoader}. Also check out, +	 * {@link org.springframework.test.context.support.AbstractContextLoader, +	 * AbstractContextLoader}'s javadoc for details on the default behavior there., +	 * @since 2.5, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/support/AbstractContextLoader.java, +			if (logger.isInfoEnabled()) {, +				logger.info(String.format("Cannot generate default resource locations for test class [%s]: ", +						+ "classpath resource [%s] does not exist.", clazz.getName(), resourcePath));, +			}, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextConfiguration.java, + * As of Spring 3.1, {@link #loader context loaders} may choose to support, + * @see SmartContextLoader, + * @see ActiveProfiles, +	 * <p>Check out the javadoc for, +	 * {@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations, +	 * AbstractContextLoader.modifyLocations()} for details on how a location, +	 * String will be interpreted at runtime, in particular in case of a relative, +	 * path. Also, check out the documentation on, +	 * {@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations, +	 * AbstractContextLoader.generateDefaultLocations()} for details on the default, +	 * locations that are going to be used if none are specified., +	 * {@link org.springframework.test.context.support.AbstractContextLoader, +	 * AbstractContextLoader} subclass such as, +	 * {@link org.springframework.test.context.support.GenericXmlContextLoader]