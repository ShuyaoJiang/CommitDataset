[+++ b/spring-web/src/main/java/org/springframework/http/client/Netty4ClientHttpRequest.java, + * @since 4.1.2, +	public Netty4ClientHttpRequest(Bootstrap bootstrap, URI uri, HttpMethod method, int maxRequestSize) {, +		return this.body;, +++ b/spring-web/src/main/java/org/springframework/http/client/Netty4ClientHttpRequest.java, + * @since 4.1.2, +	public Netty4ClientHttpRequest(Bootstrap bootstrap, URI uri, HttpMethod method, int maxRequestSize) {, +		return this.body;, +++ b/spring-web/src/main/java/org/springframework/http/client/Netty4ClientHttpRequestFactory.java, + * @since 4.1.2, +	private SslContext sslContext;, +, +	private volatile Bootstrap bootstrap;, +	 * {@linkplain EventLoopGroup#shutdownGracefully() shutdown} by this factory;, +	 * doing so becomes the responsibility of the caller., +		Assert.notNull(eventLoopGroup, "EventLoopGroup must not be null");, +	public void afterPropertiesSet() {, +, +, +			// Clean up the EventLoopGroup if we created it in the constructor, +++ b/spring-web/src/main/java/org/springframework/http/client/Netty4ClientHttpRequest.java, + * @since 4.1.2, +	public Netty4ClientHttpRequest(Bootstrap bootstrap, URI uri, HttpMethod method, int maxRequestSize) {, +		return this.body;, +++ b/spring-web/src/main/java/org/springframework/http/client/Netty4ClientHttpRequestFactory.java, + * @since 4.1.2, +	private SslContext sslContext;, +, +	private volatile Bootstrap bootstrap;, +	 * {@linkplain EventLoopGroup#shutdownGracefully() shutdown} by this factory;, +	 * doing so becomes the responsibility of the caller., +		Assert.notNull(eventLoopGroup, "EventLoopGroup must not be null");, +	public void afterPropertiesSet() {, +, +, +			// Clean up the EventLoopGroup if we created it in the constructor, +++ b/spring-web/src/main/java/org/springframework/http/client/Netty4ClientHttpResponse.java, + * @since 4.1.2, +	private volatile HttpHeaders headers;, +	public Netty4ClientHttpResponse(ChannelHandlerContext context, FullHttpResponse nettyResponse) {, +		Assert.notNull(context, "ChannelHandlerContext must not be null");, +		Assert.notNull(nettyResponse, "FullHttpResponse must not be null");, +]