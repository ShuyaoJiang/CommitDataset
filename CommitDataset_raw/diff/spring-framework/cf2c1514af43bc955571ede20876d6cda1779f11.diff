[+++ b/spring-web-reactive/build.gradle, +++ b/spring-web-reactive/build.gradle, +++ /dev/null, +++ b/spring-web-reactive/build.gradle, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/RequestBodyArgumentResolver.java, +import reactor.core.publisher.convert.CompletableFutureConverter;, +import reactor.core.publisher.convert.RxJava1Converter;, +import reactor.core.publisher.convert.RxJava1SingleConverter;, +				return RxJava1Converter.from(elementStream);, +				return RxJava1SingleConverter.from(elementStream);, +				return CompletableFutureConverter.fromSingle(elementStream);, +++ b/spring-web-reactive/build.gradle, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/RequestBodyArgumentResolver.java, +import reactor.core.publisher.convert.CompletableFutureConverter;, +import reactor.core.publisher.convert.RxJava1Converter;, +import reactor.core.publisher.convert.RxJava1SingleConverter;, +				return RxJava1Converter.from(elementStream);, +				return RxJava1SingleConverter.from(elementStream);, +				return CompletableFutureConverter.fromSingle(elementStream);, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/ResponseBodyResultHandler.java, +import reactor.core.publisher.convert.CompletableFutureConverter;, +import reactor.core.publisher.convert.RxJava1Converter;, +import reactor.core.publisher.convert.RxJava1SingleConverter;, +				elementStream = RxJava1Converter.from((Observable) value);, +				elementStream = RxJava1SingleConverter.from((Single)value);, +				elementStream = CompletableFutureConverter.from((CompletableFuture) value);, +++ b/spring-web-reactive/build.gradle, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/RequestBodyArgumentResolver.java, +import reactor.core.publisher.convert.CompletableFutureConverter;, +import reactor.core.publisher.convert.RxJava1Converter;, +import reactor.core.publisher.convert.RxJava1SingleConverter;, +				return RxJava1Converter.from(elementStream);, +				return RxJava1SingleConverter.from(elementStream);, +				return CompletableFutureConverter.fromSingle(elementStream);, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/ResponseBodyResultHandler.java, +import reactor.core.publisher.convert.CompletableFutureConverter;, +import reactor.core.publisher.convert.RxJava1Converter;, +import reactor.core.publisher.convert.RxJava1SingleConverter;, +				elementStream = RxJava1Converter.from((Observable) value);, +				elementStream = RxJava1SingleConverter.from((Single)value);, +				elementStream = CompletableFutureConverter.from((CompletableFuture) value);, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/http/rxnetty/RequestHandlerAdapter.java, +import reactor.core.publisher.convert.RxJava1Converter;, +		return RxJava1Converter.from(result);, +++ b/spring-web-reactive/build.gradle, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/RequestBodyArgumentResolver.java, +import reactor.core.publisher.convert.CompletableFutureConverter;, +import reactor.core.publisher.convert.RxJava1Converter;, +import reactor.core.publisher.convert.RxJava1SingleConverter;, +				return RxJava1Converter.from(elementStream);, +				return RxJava1SingleConverter.from(elementStream);, +				return CompletableFutureConverter.fromSingle(elementStream);, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/ResponseBodyResultHandler.java, +import reactor.core.publisher.convert.CompletableFutureConverter;, +import reactor.core.publisher.convert.RxJava1Converter;, +import reactor.core.publisher.convert.RxJava1SingleConverter;, +				elementStream = RxJava1Converter.from((Observable) value);, +				elementStream = RxJava1SingleConverter.from((Single)value);, +				elementStream = CompletableFutureConverter.from((CompletableFuture) value);, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/http/rxnetty/RequestHandlerAdapter.java, +import reactor.core.publisher.convert.RxJava1Converter;, +		return RxJava1Converter.from(result);, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/http/rxnetty/RxNettyServerHttpRequest.java, +import reactor.core.publisher.convert.RxJava1Converter;, +import rx.Observable;, +, +import java.net.URI;, +import java.net.URISyntaxException;, +import java.nio.ByteBuffer;, +, + * @author Stephane Maldini, +		Observable<ByteBuffer> bytesContent = this.request.getContent().map(ByteBuf::nioBuffer);, +		return RxJava1Converter.from(bytesContent);, +	public Observable<ByteBuffer> asObservable() {, +		return this.request.getContent().map(ByteBuf::nioBuffer);, +	}, +++ b/spring-web-reactive/build.gradle, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/RequestBodyArgumentResolver.java, +import reactor.core.publisher.convert.CompletableFutureConverter;, +import reactor.core.publisher.convert.RxJava1Converter;, +import reactor.core.publisher.convert.RxJava1SingleConverter;, +				return RxJava1Converter.from(elementStream);, +				return RxJava1SingleConverter.from(elementStream);, +				return CompletableFutureConverter.fromSingle(elementStream);, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/ResponseBodyResultHandler.java, +import reactor.core.publisher.convert.CompletableFutureConverter;, +import reactor.core.publisher.convert.RxJava1Converter;, +import reactor.core.publisher.convert.RxJava1SingleConverter;, +				elementStream = RxJava1Converter.from((Observable) value);, +				elementStream = RxJava1SingleConverter.from((Single)value);, +				elementStream = CompletableFutureConverter.from((CompletableFuture) value);, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/http/rxnetty/RequestHandlerAdapter.java, +import reactor.core.publisher.convert.RxJava1Converter;, +		return RxJava1Converter.from(result);, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/http/rxnetty/RxNettyServerHttpRequest.java]