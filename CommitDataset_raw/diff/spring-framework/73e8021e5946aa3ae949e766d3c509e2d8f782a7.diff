[+++ b/spring-web/src/main/java/org/springframework/http/ResponseEntity.java, +			if (headers != null) {, +			}, +++ b/spring-web/src/main/java/org/springframework/http/ResponseEntity.java, +			if (headers != null) {, +			}, +++ b/spring-web/src/test/java/org/springframework/http/ResponseEntityTests.java, + * Copyright 2002-2015 the original author or authors., + * @author Kazuki Shimizu, +	@Test, +	public void headersCopy(){, +		HttpHeaders customHeaders = new HttpHeaders();, +		customHeaders.set("X-CustomHeader", "vale");, +, +		ResponseEntity<Void> responseEntity = ResponseEntity.ok().headers(customHeaders).build();, +		HttpHeaders responseHeaders = responseEntity.getHeaders();, +, +		assertEquals(HttpStatus.OK, responseEntity.getStatusCode());, +		assertEquals(1, responseHeaders.size());, +		assertEquals(1, responseHeaders.get("X-CustomHeader").size());, +		assertEquals("vale", responseHeaders.getFirst("X-CustomHeader"));, +, +	}, +, +	@Test  // SPR-12792, +	public void headersCopyWithEmptyAndNull(){, +		ResponseEntity<Void> responseEntityWithEmptyHeaders =, +				ResponseEntity.ok().headers(new HttpHeaders()).build();, +		ResponseEntity<Void> responseEntityWithNullHeaders =, +				ResponseEntity.ok().headers(null).build();, +, +		assertEquals(HttpStatus.OK, responseEntityWithEmptyHeaders.getStatusCode());, +		assertTrue(responseEntityWithEmptyHeaders.getHeaders().isEmpty());, +		assertEquals(responseEntityWithEmptyHeaders.toString(), responseEntityWithNullHeaders.toString());, +	}, +]