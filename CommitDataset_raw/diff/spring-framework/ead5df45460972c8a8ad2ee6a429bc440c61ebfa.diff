[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +			if (StringUtils.hasText(bestMatchingPattern) && bestMatchingPattern.endsWith("*")) {, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +			if (StringUtils.hasText(bestMatchingPattern) && bestMatchingPattern.endsWith("*")) {, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationControllerTests.java, +		servlet = new DispatcherServlet() {, +			@Override, +			protected WebApplicationContext createWebApplicationContext(WebApplicationContext parent) {, +				GenericWebApplicationContext wac = new GenericWebApplicationContext();, +				wac.registerBeanDefinition("controller", new RootBeanDefinition(DefaultExpressionValueParamController.class));, +				RootBeanDefinition ppc = new RootBeanDefinition(PropertyPlaceholderConfigurer.class);, +				ppc.getPropertyValues().add("properties", "myKey=foo");, +				wac.registerBeanDefinition("ppc", ppc);, +				wac.refresh();, +				return wac;, +			}, +		};, +		servlet.init(new MockServletConfig());, +	@Test, +	public void trailingSlash() throws Exception {, +		initServlet(TrailingSlashController.class);, +, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/foo/");, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		servlet.service(request, response);, +		assertEquals("templatePath", response.getContentAsString());, +	}, +, +	@Controller, +	public static class TrailingSlashController  {, +, +		@RequestMapping(value = "/", method = RequestMethod.GET), +		public void root(Writer writer) throws IOException {, +			writer.write("root");, +		}, +		, +		@RequestMapping(value = "/{templatePath}/", method = RequestMethod.GET), +		public void templatePath(Writer writer) throws IOException {, +			writer.write("templatePath");, +		}, +	}, +]