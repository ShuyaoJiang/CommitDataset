[+++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java, + * Copyright 2002-2010 the original author or authors., + * to a Java EE server's transaction coordinator, but may also be configured with a, + * JtaTransactionManager definition is all you need, portable across all Java EE servers.</b>, + * This corresponds to the functionality of the JTA UserTransaction, for which Java EE, + * <p>Note: Support for the JTA TransactionManager interface is not required by Java EE., + * Almost all Java EE servers expose it, but do so as extension to EE. There might be some, + * For all other Java EE servers, the standard JtaTransactionManager is sufficient., + * for specific Java EE transaction coordinators may also expose transaction names for, + * will be registered via the (non-EE) JTA TransactionManager handle., +	 * Default JNDI location for the JTA UserTransaction. Many Java EE servers, +	 * <p>Typically just used for local JTA setups; in a Java EE environment,, +	 * <p>Note that the UserTransaction will be autodetected at the Java EE, +	 * default location "java:comp/UserTransaction" if not specified explicitly., +	 * JNDI location "java:comp/UserTransaction", as specified by Java EE., +		return new ManagedTransactionAdapter(tm);, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java, + * Copyright 2002-2010 the original author or authors., + * to a Java EE server's transaction coordinator, but may also be configured with a, + * JtaTransactionManager definition is all you need, portable across all Java EE servers.</b>, + * This corresponds to the functionality of the JTA UserTransaction, for which Java EE, + * <p>Note: Support for the JTA TransactionManager interface is not required by Java EE., + * Almost all Java EE servers expose it, but do so as extension to EE. There might be some, + * For all other Java EE servers, the standard JtaTransactionManager is sufficient., + * for specific Java EE transaction coordinators may also expose transaction names for, + * will be registered via the (non-EE) JTA TransactionManager handle., +	 * Default JNDI location for the JTA UserTransaction. Many Java EE servers, +	 * <p>Typically just used for local JTA setups; in a Java EE environment,, +	 * <p>Note that the UserTransaction will be autodetected at the Java EE, +	 * default location "java:comp/UserTransaction" if not specified explicitly., +	 * JNDI location "java:comp/UserTransaction", as specified by Java EE., +		return new ManagedTransactionAdapter(tm);, +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/jta/ManagedTransactionAdapter.java, +/*, + * Copyright 2002-2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.transaction.jta;, +, +import javax.transaction.HeuristicMixedException;, +import javax.transaction.HeuristicRollbackException;, +import javax.transaction.RollbackException;, +import javax.transaction.Synchronization;, +import javax.transaction.SystemException;, +import javax.transaction.Transaction;, +import javax.transaction.TransactionManager;, +import javax.transaction.xa.XAResource;, +, +import org.springframework.util.Assert;, +, +/**, + * Adapter for a managed JTA Transaction handle, taking a JTA, + * {@link javax.transaction.TransactionManager} reference and creating, + * a JTA {@link javax.transaction.Transaction} handle for it., + *, + * @author Juergen Hoeller, + * @since 3.0.2, + */, +public class ManagedTransactionAdapter implements Transaction {, +, +	private final TransactionManager transactionManager;, +, +, +	/**, +	 * Create a new ManagedTransactionAdapter for the given TransactionManager., +	 * @param transactionManager the JTA TransactionManager to wrap, +	 */, +	public ManagedTransactionAdapter(TransactionManager transactionManager) throws SystemException {, +		Assert.notNull(transactionManager, "TransactionManager must not be null");, +		this.transactionManager = transactionManager;, +	}, +, +	/**, +	 * Return the JTA TransactionManager that this adapter delegates to., +	 */, +	public final TransactionManager getTransactionManager() {, +		return this.transactionManager;, +	}, +, +, +	public void commit() throws RollbackException, HeuristicMixedException, HeuristicRollbackException,, +			SecurityException, SystemException {, +		this.transactionManager.commit();, +	}, +, +	public void rollback() throws SystemException {, +		this.transactionManager.rollback();, +	}]