[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/ActiveProfiles.java, + * @see SmartContextLoader, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ActiveProfiles.java, + * @see SmartContextLoader, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/MergedContextConfiguration.java, + * <code>MergedContextConfiguration</code> encapsulates the <em>merged</em>, + * context configuration declared on a test class and all of its superclasses, + * via {@link ContextConfiguration @ContextConfiguration} and, + * {@link ActiveProfiles @ActiveProfiles}., + * , + * <p>Merged resource locations, configuration classes, and active profiles, + * represent all declared values in the test class hierarchy taking into, + * consideration the semantics of the, + * {@link ContextConfiguration#inheritLocations inheritLocations} and, + * {@link ActiveProfiles#inheritProfiles inheritProfiles} flags in, + * {@code @ContextConfiguration} and {@code @ActiveProfiles}, respectively., + * , + * <p>A {@link SmartContextLoader} uses <code>MergedContextConfiguration</code>, + * to load an {@link org.springframework.context.ApplicationContext ApplicationContext}., + * @see SmartContextLoader#loadContext(MergedContextConfiguration), +	private static final String[] EMPTY_STRING_ARRAY = new String[] {};, +	private static final Class<?>[] EMPTY_CLASS_ARRAY = new Class<?>[] {};, +, +		return locations == null ? EMPTY_STRING_ARRAY : locations;, +		return classes == null ? EMPTY_CLASS_ARRAY : classes;, +			return EMPTY_STRING_ARRAY;, +	 * Generate a context <em>key</em> from the supplied values., +	 * Create a new <code>MergedContextConfiguration</code> instance for the, +	 * supplied {@link Class test class}, resource locations, configuration, +	 * classes, active profiles, and {@link ContextLoader}., +	 * <p>If a <code>null</code> value is supplied for <code>locations</code>,, +	 * <code>classes</code>, or <code>activeProfiles</code> an empty array will, +	 * be stored instead. Furthermore, active profiles will be sorted, and duplicate, +	 * profiles will be removed. , +	 * @param testClass the test class for which the configuration was merged, +	 * @param locations the merged resource locations, +	 * @param classes the merged configuration classes, +	 * @param activeProfiles the merged active bean definition profiles, +	 * @param contextLoader the resolved <code>ContextLoader</code>, +	 * Get the {@link Class test class} associated with this, +	 * <code>MergedContextConfiguration</code>., +	 * Get the merged resource locations for the, +	 * {@link #getTestClass() test class}., +	 * Get the merged configuration classes for the, +	 * {@link #getTestClass() test class}., +	 * Get the merged active bean definition profiles for the, +	 * {@link #getTestClass() test class}., +	 * Get the resolved {@link ContextLoader} for the, +	 * {@link #getTestClass() test class}., +	 * Get the unique context key for all properties of this, +	 * <code>MergedContextConfiguration</code> excluding the, +	 * {@link #getTestClass() test class}. , +	 * <p>Intended to be used for caching an , +	 * {@link org.springframework.context.ApplicationContext ApplicationContext}, +	 * that was loaded using properties of this <code>MergedContextConfiguration</code>., +	 * Provide a String representation of the test class, merged context, +	 * configuration, and context key., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ActiveProfiles.java, + * @see SmartContextLoader, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/MergedContextConfiguration.java, + * <code>MergedContextConfiguration</code> encapsulates the <em>merged</em>, + * context configuration declared on a test class and all of its superclasses, + * via {@link ContextConfiguration @ContextConfiguration} and, + * {@link ActiveProfiles @ActiveProfiles}., + * , + * <p>Merged resource locations, configuration classes, and active profiles, + * represent all declared values in the test class hierarchy taking into, + * consideration the semantics of the, + * {@link ContextConfiguration#inheritLocations inheritLocations} and, + * {@link ActiveProfiles#inheritProfiles inheritProfiles} flags in, + * {@code @ContextConfiguration} and {@code @ActiveProfiles}, respectively., + * , + * <p>A {@link SmartContextLoader} uses <code>MergedContextConfiguration</code>, + * to load an {@link org.springframework.context.ApplicationContext ApplicationContext}., + * @see SmartContextLoader#loadContext(MergedContextConfiguration), +	private static final String[] EMPTY_STRING_ARRAY = new String[] {};, +	private static final Class<?>[] EMPTY_CLASS_ARRAY = new Class<?>[] {};, +, +		return locations == null ? EMPTY_STRING_ARRAY : locations;, +		return classes == null ? EMPTY_CLASS_ARRAY : classes;, +			return EMPTY_STRING_ARRAY;, +	 * Generate a context <em>key</em> from the supplied values., +	 * Create a new <code>MergedContextConfiguration</code> instance for the, +	 * supplied {@link Class test class}, resource locations, configuration, +	 * classes, active profiles, and {@link ContextLoader}., +	 * <p>If a <code>null</code> value is supplied for <code>locations</code>,, +	 * <code>classes</code>, or <code>activeProfiles</code> an empty array will, +	 * be stored instead. Furthermore, active profiles will be sorted, and duplicate, +	 * profiles will be removed. , +	 * @param testClass the test class for which the configuration was merged, +	 * @param locations the merged resource locations, +	 * @param classes the merged configuration classes, +	 * @param activeProfiles the merged active bean definition profiles, +	 * @param contextLoader the resolved <code>ContextLoader</code>, +	 * Get the {@link Class test class} associated with this, +	 * <code>MergedContextConfiguration</code>., +	 * Get the merged resource locations for the, +	 * {@link #getTestClass() test class}., +	 * Get the merged configuration classes for the, +	 * {@link #getTestClass() test class}.]