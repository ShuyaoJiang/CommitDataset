[+++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, +	 * @return info object with the extracted variables, or {@code null} for no match, +	@Nullable, +		if (this.head == null) {, +			return hasLength(pathContainer) ? null : PathMatchInfo.EMPTY;, +			if (this.head instanceof WildcardTheRestPathElement || this.head instanceof CaptureTheRestPathElement) {, +				pathContainer = EMPTY_PATH; // Will allow CaptureTheRest to bind the variable to empty, +				return null;, +		MatchingContext matchingContext = new MatchingContext(pathContainer, true);, +		return this.head.matches(0, matchingContext) ? matchingContext.getPathMatchResult() : null;, +	}, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, +	 * @return info object with the extracted variables, or {@code null} for no match, +	@Nullable, +		if (this.head == null) {, +			return hasLength(pathContainer) ? null : PathMatchInfo.EMPTY;, +			if (this.head instanceof WildcardTheRestPathElement || this.head instanceof CaptureTheRestPathElement) {, +				pathContainer = EMPTY_PATH; // Will allow CaptureTheRest to bind the variable to empty, +				return null;, +		MatchingContext matchingContext = new MatchingContext(pathContainer, true);, +		return this.head.matches(0, matchingContext) ? matchingContext.getPathMatchResult() : null;, +	}, +++ b/spring-web/src/test/java/org/springframework/web/util/pattern/PathPatternTests.java, +, +		assertNull(checkCapture("/{one}/", "//"));, +		assertNull(checkCapture("", "/abc"));, +, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, +	 * @return info object with the extracted variables, or {@code null} for no match, +	@Nullable, +		if (this.head == null) {, +			return hasLength(pathContainer) ? null : PathMatchInfo.EMPTY;, +			if (this.head instanceof WildcardTheRestPathElement || this.head instanceof CaptureTheRestPathElement) {, +				pathContainer = EMPTY_PATH; // Will allow CaptureTheRest to bind the variable to empty, +				return null;, +		MatchingContext matchingContext = new MatchingContext(pathContainer, true);, +		return this.head.matches(0, matchingContext) ? matchingContext.getPathMatchResult() : null;, +	}, +++ b/spring-web/src/test/java/org/springframework/web/util/pattern/PathPatternTests.java, +, +		assertNull(checkCapture("/{one}/", "//"));, +		assertNull(checkCapture("", "/abc"));, +, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java, +			PathPattern.PathMatchInfo info = this.pattern.matchAndExtract(pathContainer);, +			traceMatch("Pattern", this.pattern.getPatternString(), request.path(), info != null);, +			if (info != null) {, +				mergeTemplateVariables(request, info.getUriVariables());]