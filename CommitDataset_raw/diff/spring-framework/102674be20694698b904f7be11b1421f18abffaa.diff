[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextLoaderUtils.java, + * Utility methods for working with {@link ContextLoader ContextLoaders} and, + * {@link SmartContextLoader SmartContextLoaders} and resolving resource locations,, + * configuration classes, and active bean definition profiles., + * @see SmartContextLoader, +	private static final String DEFAULT_CONTEXT_LOADER_CLASS_NAME = "org.springframework.test.context.support.GenericXmlContextLoader";, +	private ContextLoaderUtils() {, +		/* no-op */, +	}, +, +	 * Resolve the list of {@link ContextConfigurationAttributes configuration, +	 * attributes} for the supplied {@link Class class} and its superclasses., +	 * <p>Note that the {@link ContextConfiguration#inheritLocations, +	 * inheritLocations} flag of {@link ContextConfiguration, +	 * &#064;ContextConfiguration} will be taken into consideration., +	 * Specifically, if the <code>inheritLocations</code> flag is set to, +	 * <code>true</code>, configuration attributes defined in the annotated, +	 * class will be appended to the configuration attributes defined in, +	 * superclasses., +	 * @param clazz the class for which to resolve the configuration attributes (must, +	 * not be <code>null</code>), +	 * @return the list of configuration attributes for the specified class,, +	 * including configuration attributes from superclasses if appropriate, +	 * (never <code>null</code>), +	 * @throws IllegalArgumentException if the supplied class is <code>null</code>, +	 * or if {@link ContextConfiguration &#064;ContextConfiguration} is not, +	 * <em>present</em> on the supplied class, +	 * Resolve the {@link ContextLoader} {@link Class class} to use for the, +	 * supplied {@link Class testClass} and {@link ContextConfigurationAttributes}, +	 * and then instantiate and return that {@code ContextLoader}., +	 * default context loader class name {@value #DEFAULT_CONTEXT_LOADER_CLASS_NAME}, +	 * {@link #resolveContextLoaderClass()}., +	 * @param testClass the test class for which the {@code ContextLoader}, +	 * @param configAttributesList the resolved configuration attributes for the, +	 * test class hierarchy, +	 * {@code ContextLoader} class to use (may be <code>null</code>), +	 * @return the resolved {@code ContextLoader} for the supplied, +	 * @see #resolveContextLoaderClass(), +	 * @see #resolveContextConfigurationAttributes(), +			defaultContextLoaderClassName = DEFAULT_CONTEXT_LOADER_CLASS_NAME;, +	 * Resolve the {@link ContextLoader} {@link Class} to use for the supplied, +	 * {@link ContextConfigurationAttributes} list., +	 * <p>This method will iterate over the supplied configuration attributes, +	 * and execute the following algorithm:, +	 * <li>If {@link ContextConfigurationAttributes#getContextLoaderClass()}, +	 * returns an explicit implementation class, that class will be returned.</li>, +	 * <li>If an explicit {@code ContextLoader} implementation class is not, +	 * specified, the next {@link ContextConfigurationAttributes} instance in, +	 * the supplied list will be processed; go to step #1.</li>, +	 * <li>If no explicit <code>loader</code> class is found after processing, +	 * all {@link ContextConfigurationAttributes} instances, an attempt will be, +	 * made to load and return the class with the supplied, +	 * <code>defaultContextLoaderClassName</code>.</li>, +	 * @param testClass the class for which to resolve the {@code ContextLoader}, +	 * class; used solely for logging purposes; must not be <code>null</code>, +	 * @param configAttributesList the resolved configuration attributes for the, +	 * test class hierarchy; must not be <code>null</code> or empty, +	 * {@code ContextLoader} class to use; must not be <code>null</code> or empty, +	 * @return the {@code ContextLoader} class to use for the specified class, +	 * @throws IllegalArgumentException if {@code @ContextConfiguration} is not, +	 * <em>present</em> on the supplied test class, +	 * @see #resolveContextLoader(), +	 * @see #resolveContextConfigurationAttributes(), +	 * Resolve <em>active bean definition profiles</em> for the supplied {@link Class}., +	 * <p>Note that the {@link ActiveProfiles#inheritProfiles inheritProfiles}, +	 * @see org.springframework.test.context.ActiveProfiles, +	 * @see org.springframework.context.annotation.Profile, +	 * Build the {@link MergedContextConfiguration merged context configuration}, +	 * for the supplied {@link Class testClass} and, +	 * <code>defaultContextLoaderClassName</code>., +	 * @param testClass the test class for which the {@code MergedContextConfiguration}, +	 * should be built (must not be <code>null</code>), +	 * @param defaultContextLoaderClassName the name of the default, +	 * {@code ContextLoader} class to use (may be <code>null</code>), +	 * @return the merged context configuration, +	 * @see #resolveContextConfigurationAttributes(), +	 * @see #resolveContextLoader(), +	 * @see SmartContextLoader#processContextConfiguration(), +	 * @see ContextLoader#processLocations(), +	 * @see #resolveActiveProfiles(), +	 * @see MergedContextConfiguration]