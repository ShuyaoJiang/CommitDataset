[+++ b/spring-web/src/main/java/org/springframework/http/CacheControl.java, + * Copyright 2002-2016 the original author or authors., +	 * Add a "stale-while-revalidate" directive., +	 * @param unit the time unit of the {@code staleWhileRevalidate} argument, +	 * @see <a href="https://tools.ietf.org/html/rfc5861#section-3">rfc5861 section 3</a>, +	 * Add a "stale-if-error" directive., +	 * <p>This directive indicates that when an error is encountered, a cached stale response MAY be used to satisfy, +	 * the request, regardless of other freshness information., +	 * @param unit the time unit of the {@code staleIfError} argument, +	 * @see <a href="https://tools.ietf.org/html/rfc5861#section-4">rfc5861 section 4</a>, +++ b/spring-web/src/main/java/org/springframework/http/CacheControl.java, + * Copyright 2002-2016 the original author or authors., +	 * Add a "stale-while-revalidate" directive., +	 * @param unit the time unit of the {@code staleWhileRevalidate} argument, +	 * @see <a href="https://tools.ietf.org/html/rfc5861#section-3">rfc5861 section 3</a>, +	 * Add a "stale-if-error" directive., +	 * <p>This directive indicates that when an error is encountered, a cached stale response MAY be used to satisfy, +	 * the request, regardless of other freshness information., +	 * @param unit the time unit of the {@code staleIfError} argument, +	 * @see <a href="https://tools.ietf.org/html/rfc5861#section-4">rfc5861 section 4</a>, +++ b/spring-web/src/test/java/org/springframework/http/CacheControlTests.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-web/src/main/java/org/springframework/http/CacheControl.java, + * Copyright 2002-2016 the original author or authors., +	 * Add a "stale-while-revalidate" directive., +	 * @param unit the time unit of the {@code staleWhileRevalidate} argument, +	 * @see <a href="https://tools.ietf.org/html/rfc5861#section-3">rfc5861 section 3</a>, +	 * Add a "stale-if-error" directive., +	 * <p>This directive indicates that when an error is encountered, a cached stale response MAY be used to satisfy, +	 * the request, regardless of other freshness information., +	 * @param unit the time unit of the {@code staleIfError} argument, +	 * @see <a href="https://tools.ietf.org/html/rfc5861#section-4">rfc5861 section 4</a>, +++ b/spring-web/src/test/java/org/springframework/http/CacheControlTests.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, + * Copyright 2002-2016 the original author or authors., +		if (element.hasAttribute("stale-while-revalidate")) {, +			cacheControl = cacheControl.staleWhileRevalidate(, +					Long.parseLong(element.getAttribute("stale-while-revalidate")), TimeUnit.SECONDS);, +		}, +		if (element.hasAttribute("stale-if-error")) {, +			cacheControl = cacheControl.staleIfError(, +					Long.parseLong(element.getAttribute("stale-if-error")), TimeUnit.SECONDS);, +		}, +++ b/spring-web/src/main/java/org/springframework/http/CacheControl.java, + * Copyright 2002-2016 the original author or authors., +	 * Add a "stale-while-revalidate" directive., +	 * @param unit the time unit of the {@code staleWhileRevalidate} argument, +	 * @see <a href="https://tools.ietf.org/html/rfc5861#section-3">rfc5861 section 3</a>, +	 * Add a "stale-if-error" directive., +	 * <p>This directive indicates that when an error is encountered, a cached stale response MAY be used to satisfy, +	 * the request, regardless of other freshness information., +	 * @param unit the time unit of the {@code staleIfError} argument, +	 * @see <a href="https://tools.ietf.org/html/rfc5861#section-4">rfc5861 section 4</a>, +++ b/spring-web/src/test/java/org/springframework/http/CacheControlTests.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, + * Copyright 2002-2016 the original author or authors., +		if (element.hasAttribute("stale-while-revalidate")) {, +			cacheControl = cacheControl.staleWhileRevalidate(, +					Long.parseLong(element.getAttribute("stale-while-revalidate")), TimeUnit.SECONDS);, +		}, +		if (element.hasAttribute("stale-if-error")) {, +			cacheControl = cacheControl.staleIfError(, +					Long.parseLong(element.getAttribute("stale-if-error")), TimeUnit.SECONDS);, +		}, +++ b/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc-4.3.xsd, +		<xsd:attribute name="stale-while-revalidate" type="xsd:int" use="optional">, +			<xsd:annotation>, +				<xsd:documentation><![CDATA[, +	Adds a "stale-while-revalidate" directive in the Cache-Control header., +	This indicates that caches may serve the response after it becomes stale up to the given number of seconds., +					]]></xsd:documentation>, +			</xsd:annotation>, +		</xsd:attribute>, +		<xsd:attribute name="stale-if-error" type="xsd:int" use="optional">, +			<xsd:annotation>, +				<xsd:documentation><![CDATA[, +	Adds a "s-maxage" directive in the Cache-Control header., +	This directive has the same meaning as the "max-age" directive, except it only applies to shared caches., +					]]></xsd:documentation>, +			</xsd:annotation>, +		</xsd:attribute>]