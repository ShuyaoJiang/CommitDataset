[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java, +		boolean noContentType = false;, +			noContentType = true;, +			if (!SUPPORTED_METHODS.contains(httpMethod), +					|| (noContentType && inputMessage.getBody() == null)) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java, +		boolean noContentType = false;, +			noContentType = true;, +			if (!SUPPORTED_METHODS.contains(httpMethod), +					|| (noContentType && inputMessage.getBody() == null)) {, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessorMockTests.java, +		servletRequest.setContent("some content".getBytes(Charset.forName("UTF-8")));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java, +		boolean noContentType = false;, +			noContentType = true;, +			if (!SUPPORTED_METHODS.contains(httpMethod), +					|| (noContentType && inputMessage.getBody() == null)) {, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessorMockTests.java, +		servletRequest.setContent("some content".getBytes(Charset.forName("UTF-8")));, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorMockTests.java, + * Copyright 2002-2015 the original author or authors., +	// SPR-13417, +	@Test, +	public void resolveArgumentNotRequiredNoContentNoContentType() throws Exception {, +		servletRequest.setContent(new byte[0]);, +		given(messageConverter.canRead(String.class, MediaType.TEXT_PLAIN)).willReturn(true);, +		given(messageConverter.canRead(String.class, MediaType.APPLICATION_OCTET_STREAM)).willReturn(false);, +		assertNull(processor.resolveArgument(paramStringNotRequired, mavContainer, webRequest, new ValidatingBinderFactory()));, +	}, +]