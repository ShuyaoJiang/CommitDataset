[+++ b/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java, + * This {@code ResourcePatternResolver} implementation is trying to mitigate the, + * jar root lookup limitation through {@link URLClassLoader} introspection and, + * "java.class.path" manifest evaluation; however, without portability guarantees., + * returned by {@code getResource("com/mycompany");}. If this base package node, + * exists in multiple classloader locations, the actual end resource may not be, + * underneath. Therefore, preferably, use "{@code classpath*:}" with the same, + * @author Phil Webb, +	 * @since 4.1.1, +	 * @since 4.1.1, +, +		if (classLoader == ClassLoader.getSystemClassLoader()) {, +			// "java.class.path" manifest evaluation..., +			addClassPathManifestEntries(result);, +		}, +, +				// Hierarchy traversal..., +	 * Determine jar file references from the "java.class.path." manifest property and add them, +	 * to the given set of resources in the form of pointers to the root of the jar file content., +	 * @param result the set of resources to add jar roots to, +	 * @since 4.3, +	 */, +	protected void addClassPathManifestEntries(Set<Resource> result) {, +		try {, +			String javaClassPathProperty = System.getProperty("java.class.path");, +			for (String url : StringUtils.delimitedListToStringArray(, +					javaClassPathProperty, System.getProperty("path.separator"))) {, +				try {, +					if (url.endsWith(ResourceUtils.JAR_FILE_EXTENSION)) {, +						UrlResource jarResource = new UrlResource(ResourceUtils.JAR_URL_PREFIX +, +								ResourceUtils.FILE_URL_PREFIX + url + ResourceUtils.JAR_URL_SEPARATOR);, +						if (jarResource.exists()) {, +							result.add(jarResource);, +						}, +					}, +				}, +				catch (MalformedURLException ex) {, +					if (logger.isDebugEnabled()) {, +						logger.debug("Cannot search for matching files underneath [" + url +, +								"] because it cannot be converted to a valid 'jar:' URL: " + ex.getMessage());, +					}, +				}, +			}, +		}, +		catch (Exception ex) {, +			if (logger.isDebugEnabled()) {, +				logger.debug("Failed to evaluate 'java.class.path' manifest entries: " + ex);, +			}, +		}, +	}, +, +	/**]