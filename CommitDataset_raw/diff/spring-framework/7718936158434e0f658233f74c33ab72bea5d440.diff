[+++ b/spring-web/src/main/java/org/springframework/http/MediaType.java, +	 * Indicates whether the {@linkplain #getSubtype() subtype} is the wildcard character <code>&#42;</code>, +	 * or the wildcard character followed by a sufiix (e.g. <code>&#42;+xml</code>), or not., +		return WILDCARD_TYPE.equals(subtype) || subtype.startsWith("*+");, +++ b/spring-web/src/main/java/org/springframework/http/MediaType.java, +	 * Indicates whether the {@linkplain #getSubtype() subtype} is the wildcard character <code>&#42;</code>, +	 * or the wildcard character followed by a sufiix (e.g. <code>&#42;+xml</code>), or not., +		return WILDCARD_TYPE.equals(subtype) || subtype.startsWith("*+");, +++ b/spring-web/src/test/java/org/springframework/http/MediaTypeTests.java, +		MediaType allXml = new MediaType("application", "*+xml");, +		assertTrue("Invalid comparison result", comp.compare(MediaType.APPLICATION_XHTML_XML, allXml) < 0);, +		assertTrue("Invalid comparison result", comp.compare(allXml, MediaType.APPLICATION_XHTML_XML) > 0);, +		MediaType allXml = new MediaType("application", "*+xml");, +		assertTrue("Invalid comparison result", comp.compare(MediaType.APPLICATION_XHTML_XML, allXml) < 0);, +		assertTrue("Invalid comparison result", comp.compare(allXml, MediaType.APPLICATION_XHTML_XML) > 0);, +++ b/spring-web/src/main/java/org/springframework/http/MediaType.java, +	 * Indicates whether the {@linkplain #getSubtype() subtype} is the wildcard character <code>&#42;</code>, +	 * or the wildcard character followed by a sufiix (e.g. <code>&#42;+xml</code>), or not., +		return WILDCARD_TYPE.equals(subtype) || subtype.startsWith("*+");, +++ b/spring-web/src/test/java/org/springframework/http/MediaTypeTests.java, +		MediaType allXml = new MediaType("application", "*+xml");, +		assertTrue("Invalid comparison result", comp.compare(MediaType.APPLICATION_XHTML_XML, allXml) < 0);, +		assertTrue("Invalid comparison result", comp.compare(allXml, MediaType.APPLICATION_XHTML_XML) > 0);, +		MediaType allXml = new MediaType("application", "*+xml");, +		assertTrue("Invalid comparison result", comp.compare(MediaType.APPLICATION_XHTML_XML, allXml) < 0);, +		assertTrue("Invalid comparison result", comp.compare(allXml, MediaType.APPLICATION_XHTML_XML) > 0);, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorMockTests.java, +	// SPR-9841, +, +	@Test, +	public void handleReturnValueMediaTypeSuffix() throws Exception {, +		String body = "Foo";, +		MediaType accepted = MediaType.APPLICATION_XHTML_XML;, +		List<MediaType> supported = Collections.singletonList(MediaType.valueOf("application/*+xml"));, +, +		servletRequest.addHeader("Accept", accepted);, +, +		expect(messageConverter.canWrite(String.class, null)).andReturn(true);, +		expect(messageConverter.getSupportedMediaTypes()).andReturn(supported);, +		expect(messageConverter.canWrite(String.class, accepted)).andReturn(true);, +		messageConverter.write(eq(body), eq(accepted), isA(HttpOutputMessage.class));, +		replay(messageConverter);, +, +		processor.handleReturnValue(body, returnTypeStringProduces, mavContainer, webRequest);, +, +		assertTrue(mavContainer.isRequestHandled());, +		verify(messageConverter);, +	}, +, +]