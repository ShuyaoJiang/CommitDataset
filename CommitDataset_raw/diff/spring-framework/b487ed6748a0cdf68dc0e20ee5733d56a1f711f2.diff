[+++ b/spring-web/src/main/java/org/springframework/web/util/DefaultUriBuilderFactory.java, +	private boolean parsePath = true;, +, +	/**, +	 * Whether to parse the path into path segments for the URI string passed, +	 * into {@link #uriString(String)} or one of the expand methods., +	 * <p>Setting this property to {@code true} ensures that URI variables, +	 * expanded into the path are subject to path segment encoding rules and, +	 * "/" characters are percent-encoded. If set to {@code false} the path is, +	 * kept as a full path and expanded URI variables will have "/" characters, +	 * preserved., +	 * <p>By default this is set to {@code true}., +	 * @param parsePath whether to parse the path into path segments, +	 */, +	public void setParsePath(boolean parsePath) {, +		this.parsePath = parsePath;, +	}, +, +	/**, +	 * Whether the handler is configured to parse the path into path segments., +	 */, +	public boolean shouldParsePath() {, +		return this.parsePath;, +	}, +, +			if (shouldParsePath()) {, +				UriComponents uric = result.build();, +				String path = uric.getPath();, +				List<String> pathSegments = uric.getPathSegments();, +, +				result.pathSegment(pathSegments.toArray(new String[0]));, +, +				if (path != null && path.endsWith("/")) {, +					result.path("/");, +				}, +			}, +++ b/spring-web/src/main/java/org/springframework/web/util/DefaultUriBuilderFactory.java, +	private boolean parsePath = true;, +, +	/**, +	 * Whether to parse the path into path segments for the URI string passed, +	 * into {@link #uriString(String)} or one of the expand methods., +	 * <p>Setting this property to {@code true} ensures that URI variables, +	 * expanded into the path are subject to path segment encoding rules and, +	 * "/" characters are percent-encoded. If set to {@code false} the path is, +	 * kept as a full path and expanded URI variables will have "/" characters, +	 * preserved., +	 * <p>By default this is set to {@code true}., +	 * @param parsePath whether to parse the path into path segments, +	 */, +	public void setParsePath(boolean parsePath) {, +		this.parsePath = parsePath;, +	}, +, +	/**, +	 * Whether the handler is configured to parse the path into path segments., +	 */, +	public boolean shouldParsePath() {, +		return this.parsePath;, +	}, +, +			if (shouldParsePath()) {, +				UriComponents uric = result.build();, +				String path = uric.getPath();, +				List<String> pathSegments = uric.getPathSegments();, +, +				result.pathSegment(pathSegments.toArray(new String[0]));, +, +				if (path != null && path.endsWith("/")) {, +					result.path("/");, +				}, +			}, +++ b/spring-web/src/test/java/org/springframework/web/client/RestTemplateTests.java, + * Copyright 2002-2017 the original author or authors., +	@Test // SPR-15201, +	public void uriTemplateWithTrailingSlash() throws Exception {, +		String url = "http://example.com/spring/";, +		given(requestFactory.createRequest(new URI(url), HttpMethod.GET)).willReturn(request);, +		given(request.execute()).willReturn(response);, +		given(errorHandler.hasError(response)).willReturn(false);, +		HttpStatus status = HttpStatus.OK;, +		given(response.getStatusCode()).willReturn(status);, +		given(response.getStatusText()).willReturn(status.getReasonPhrase());, +, +		template.execute(url, HttpMethod.GET, null, null);, +, +		verify(response).close();, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/util/DefaultUriBuilderFactory.java, +	private boolean parsePath = true;, +, +	/**, +	 * Whether to parse the path into path segments for the URI string passed, +	 * into {@link #uriString(String)} or one of the expand methods., +	 * <p>Setting this property to {@code true} ensures that URI variables, +	 * expanded into the path are subject to path segment encoding rules and, +	 * "/" characters are percent-encoded. If set to {@code false} the path is, +	 * kept as a full path and expanded URI variables will have "/" characters, +	 * preserved.]