[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/ResultActions.java, + * Copyright 2002-2018 the original author or authors., +	 * </pre>, +	 *, +	 * <p>Or alternatively provide all matchers as a vararg:, +	 * <pre class="code">, +	 * static imports: MockMvcRequestBuilders.*, MockMvcResultMatchers.*, ResultMatcher.matchAll, +	 *   .andExpect(matchAll(, +	 *       status().isOk(),, +	 *       redirectedUrl("/person/1"),, +	 *   	 model().size(1),, +	 *       model().attributeExists("person"),, +	 *       flash().attributeCount(1),, +	 *       flash().attribute("message", "success!")), +	 *   );, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/ResultActions.java, + * Copyright 2002-2018 the original author or authors., +	 * </pre>, +	 *, +	 * <p>Or alternatively provide all matchers as a vararg:, +	 * <pre class="code">, +	 * static imports: MockMvcRequestBuilders.*, MockMvcResultMatchers.*, ResultMatcher.matchAll, +	 *   .andExpect(matchAll(, +	 *       status().isOk(),, +	 *       redirectedUrl("/person/1"),, +	 *   	 model().size(1),, +	 *       model().attributeExists("person"),, +	 *       flash().attributeCount(1),, +	 *       flash().attribute("message", "success!")), +	 *   );, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/ResultMatcher.java, + * Copyright 2002-2018 the original author or authors., +, +, +	/**, +	 * Static method for matching with an array of result matchers., +	 * @param matchers the matchers, +	 * @since 5.1, +	 */, +	static ResultMatcher matchAll(ResultMatcher... matchers) {, +		return result -> {, +			for (ResultMatcher matcher : matchers) {, +			matcher.match(result);, +			}, +		};, +	}, +]