[+++ b/spring-core/src/main/java/org/springframework/util/Assert.java, + * Copyright 2002-2013 the original author or authors., +			throw new IllegalArgumentException(, +					(StringUtils.hasLength(message) ? message + " " : "") +, +					"Object of class [" + (obj != null ? obj.getClass().getName() : "null") +, +++ b/spring-core/src/main/java/org/springframework/util/Assert.java, + * Copyright 2002-2013 the original author or authors., +			throw new IllegalArgumentException(, +					(StringUtils.hasLength(message) ? message + " " : "") +, +					"Object of class [" + (obj != null ? obj.getClass().getName() : "null") +, +++ b/spring-core/src/test/java/org/springframework/util/AssertTests.java, + * Copyright 2002-2013 the original author or authors., +import org.junit.Rule;, +import org.junit.rules.ExpectedException;, +	@Rule, +	public ExpectedException thrown = ExpectedException.none();, +, +	public void instanceOfNoMessage() throws Exception {, +		thrown.expect(IllegalArgumentException.class);, +		thrown.expectMessage("Object of class [java.lang.Object] must be an instance " +, +				"of interface java.util.Set");, +		Assert.isInstanceOf(Set.class, new Object(), null);, +	}, +, +	@Test, +	public void instanceOfMessage() throws Exception {, +		thrown.expect(IllegalArgumentException.class);, +		thrown.expectMessage("Custom message. Object of class [java.lang.Object] must " +, +				"be an instance of interface java.util.Set");, +		Assert.isInstanceOf(Set.class, new Object(), "Custom message.");, +	}, +, +	@Test]