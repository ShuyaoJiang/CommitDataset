[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultEntityResponseBuilder.java, +			return inserter().insert(response, new BodyInserter.Context() {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultEntityResponseBuilder.java, +			return inserter().insert(response, new BodyInserter.Context() {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultRenderingResponseBuilder.java, +					.concatMap(viewResolver -> viewResolver.resolveViewName(name(), locale)), +							name() +"'"))), +					.then(view -> view.render(model(), contentType, exchange));, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultEntityResponseBuilder.java, +			return inserter().insert(response, new BodyInserter.Context() {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultRenderingResponseBuilder.java, +					.concatMap(viewResolver -> viewResolver.resolveViewName(name(), locale)), +							name() +"'"))), +					.then(view -> view.render(model(), contentType, exchange));, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerResponseBuilder.java, +			HttpHeaders headers = headers();, +			if (!headers.isEmpty()) {, +				headers.entrySet().stream(), +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultEntityResponseBuilder.java, +			return inserter().insert(response, new BodyInserter.Context() {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultRenderingResponseBuilder.java, +					.concatMap(viewResolver -> viewResolver.resolveViewName(name(), locale)), +							name() +"'"))), +					.then(view -> view.render(model(), contentType, exchange));, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerResponseBuilder.java, +			HttpHeaders headers = headers();, +			if (!headers.isEmpty()) {, +				headers.entrySet().stream(), +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/server/RenderingResponseIntegrationTests.java, +			return Collections.singletonList(MediaType.TEXT_PLAIN);]