[+++ /dev/null, +++ /dev/null, +++ b/spring-web/src/main/java/org/springframework/http/server/ServerHttpRequest.java, +++ /dev/null, +++ b/spring-web/src/main/java/org/springframework/http/server/ServerHttpRequest.java, +++ /dev/null, +++ /dev/null, +++ b/spring-web/src/main/java/org/springframework/http/server/ServerHttpRequest.java, +++ /dev/null, +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpRequest.java, +, +++ /dev/null, +++ b/spring-web/src/main/java/org/springframework/http/server/ServerHttpRequest.java, +++ /dev/null, +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpRequest.java, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/DefaultSockJsService.java, +import org.springframework.http.HttpHeaders;, +				String cookieValue = getJsessionIdCookieValue(request.getHeaders());, +				response.getHeaders().set("Set-Cookie", "JSESSIONID=" + cookieValue + ";path=/");, +	private String getJsessionIdCookieValue(HttpHeaders headers) {, +		List<String> rawCookies = headers.get("Cookie");, +		if (!CollectionUtils.isEmpty(rawCookies)) {, +			for (String rawCookie : rawCookies) {, +				if (rawCookie.startsWith("JSESSIONID=")) {, +					int start = "JSESSIONID=".length();, +					int end = rawCookie.indexOf(';');, +					return (end != -1) ? rawCookie.substring(start, end) : rawCookie.substring(start);, +				}, +			}, +		}, +		return "dummy";, +	}, +]