[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +, +import javax.sql.DataSource;, +, + * Populates, initializes, or cleans up a database using SQL scripts defined in, + * external resources., + * <ul>, + * <li>Call {@link #addScript} to add a single SQL script location., + * <li>Call {@link #addScripts} to add multiple SQL script locations., + * <li>Consult the setter methods in this class for further configuration options., + * <li>Call {@link #populate} or {@link #execute} to initialize or clean up the, + * database using the configured scripts., + * </ul>, +	 * @see #execute(DataSource), +	 * Execute this {@code DatabasePopulator} against the given {@link DataSource}., +	 * <p>Delegates to {@link DatabasePopulatorUtils#execute}., +	 * @param dataSource the {@code DataSource} to execute against, +	 * @throws ScriptException if an error occurs, +	 * @since 4.1, +	 * @see #populate(Connection), +	 */, +	public void execute(DataSource dataSource) throws ScriptException {, +		DatabasePopulatorUtils.execute(this, dataSource);, +	}, +, +	/**, +	 * {@link EncodedResource} is not a sub-type of {@link Resource}. Thus we always need, +	 * to wrap each script resource in an encoded resource., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +, +import javax.sql.DataSource;, +, + * Populates, initializes, or cleans up a database using SQL scripts defined in, + * external resources., + * <ul>, + * <li>Call {@link #addScript} to add a single SQL script location., + * <li>Call {@link #addScripts} to add multiple SQL script locations., + * <li>Consult the setter methods in this class for further configuration options., + * <li>Call {@link #populate} or {@link #execute} to initialize or clean up the, + * database using the configured scripts., + * </ul>, +	 * @see #execute(DataSource), +	 * Execute this {@code DatabasePopulator} against the given {@link DataSource}., +	 * <p>Delegates to {@link DatabasePopulatorUtils#execute}., +	 * @param dataSource the {@code DataSource} to execute against, +	 * @throws ScriptException if an error occurs, +	 * @since 4.1, +	 * @see #populate(Connection), +	 */, +	public void execute(DataSource dataSource) throws ScriptException {, +		DatabasePopulatorUtils.execute(this, dataSource);, +	}, +, +	/**, +	 * {@link EncodedResource} is not a sub-type of {@link Resource}. Thus we always need, +	 * to wrap each script resource in an encoded resource., +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.java, +		new ResourceDatabasePopulator(continueOnError, false, this.sqlScriptEncoding, resource).execute(jdbcTemplate.getDataSource());, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +, +import javax.sql.DataSource;, +, + * Populates, initializes, or cleans up a database using SQL scripts defined in, + * external resources., + * <ul>, + * <li>Call {@link #addScript} to add a single SQL script location., + * <li>Call {@link #addScripts} to add multiple SQL script locations., + * <li>Consult the setter methods in this class for further configuration options., + * <li>Call {@link #populate} or {@link #execute} to initialize or clean up the, + * database using the configured scripts., + * </ul>, +	 * @see #execute(DataSource), +	 * Execute this {@code DatabasePopulator} against the given {@link DataSource}., +	 * <p>Delegates to {@link DatabasePopulatorUtils#execute}., +	 * @param dataSource the {@code DataSource} to execute against, +	 * @throws ScriptException if an error occurs, +	 * @since 4.1, +	 * @see #populate(Connection), +	 */, +	public void execute(DataSource dataSource) throws ScriptException {, +		DatabasePopulatorUtils.execute(this, dataSource);, +	}, +, +	/**, +	 * {@link EncodedResource} is not a sub-type of {@link Resource}. Thus we always need, +	 * to wrap each script resource in an encoded resource., +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.java, +		new ResourceDatabasePopulator(continueOnError, false, this.sqlScriptEncoding, resource).execute(jdbcTemplate.getDataSource());, +++ b/spring-test/src/main/java/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.java, +		new ResourceDatabasePopulator(continueOnError, false, this.sqlScriptEncoding, resource).execute(jdbcTemplate.getDataSource());, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +, +import javax.sql.DataSource;, +, + * Populates, initializes, or cleans up a database using SQL scripts defined in, + * external resources., + * <ul>, + * <li>Call {@link #addScript} to add a single SQL script location., + * <li>Call {@link #addScripts} to add multiple SQL script locations., + * <li>Consult the setter methods in this class for further configuration options.]