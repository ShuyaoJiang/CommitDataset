[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java, +				// Avoid cancelHeartbeat() and responseLock within server "close" callback, +				ScheduledFuture<?> future = this.heartbeatFuture;, +				if (future != null) {, +					this.heartbeatFuture = null;, +					future.cancel(false);, +				}, +				if (!this.expired && !isClosed()) {, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java, +				// Avoid cancelHeartbeat() and responseLock within server "close" callback, +				ScheduledFuture<?> future = this.heartbeatFuture;, +				if (future != null) {, +					this.heartbeatFuture = null;, +					future.cancel(false);, +				}, +				if (!this.expired && !isClosed()) {, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/sockjs/transport/session/SockJsSessionTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNull;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +import static org.mockito.BDDMockito.any;, +import static org.mockito.BDDMockito.given;, +import static org.mockito.BDDMockito.mock;, +import static org.mockito.BDDMockito.verify;, +import static org.mockito.BDDMockito.verifyNoMoreInteractions;, +import static org.mockito.BDDMockito.willReturn;, +import static org.mockito.BDDMockito.willThrow;]