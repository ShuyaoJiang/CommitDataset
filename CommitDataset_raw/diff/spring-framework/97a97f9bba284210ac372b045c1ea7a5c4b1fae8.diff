[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultRequestPath.java, + * Default implementation of {@link RequestPath}., +	DefaultRequestPath(RequestPath requestPath, String contextPath) {, +	static PathSegmentContainer parsePath(String path, Charset charset) {, +		int begin = (path.charAt(0) == '/' ? 1 : 0);, +		while (begin < path.length()) {, +	static PathSegment parsePathSegment(String input, Charset charset) {, +			String inputDecoded = StringUtils.uriDecode(input, charset);, +			return new DefaultPathSegment(input, inputDecoded, "", EMPTY_MAP);, +	// PathSegmentContainer methods.., +, +, +	@Override, +	public boolean isEmpty() {, +		return this.contextPath.isEmpty() && this.pathWithinApplication.isEmpty();, +	}, +, +	public boolean isAbsolute() {, +		return !this.contextPath.isEmpty() && this.contextPath.isAbsolute() || this.pathWithinApplication.isAbsolute();, +	}, +, +	@Override, +	public boolean hasTrailingSlash() {, +		return this.pathWithinApplication.hasTrailingSlash();, +	}, +, +, +	// RequestPath methods.., +, +	@Override, +		private final boolean empty;, +, +		private final boolean absolute;, +, +		private final boolean trailingSlash;, +, +, +		DefaultPathSegmentContainer(String path, List<PathSegment> segments) {, +			this.absolute = path.startsWith("/");, +			this.pathSegments = Collections.unmodifiableList(segments);, +			this.trailingSlash = path.endsWith("/") && path.length() > 1;, +			this.empty = !this.absolute && !this.trailingSlash && segments.stream().allMatch(PathSegment::isEmpty);, +		public boolean isEmpty() {, +			return this.empty;, +		}, +, +		@Override, +		public boolean isAbsolute() {, +			return this.absolute;, +		}, +, +		@Override, +		@Override, +		public boolean hasTrailingSlash() {, +			return this.trailingSlash;, +		}, +, +		private final char[] valueCharsDecoded;, +, +		private final boolean empty;, +, +			Assert.isTrue(!value.contains("/"), "Invalid path segment value: " + value);, +, +			this.valueCharsDecoded = valueDecoded.toCharArray();, +			this.empty = !StringUtils.hasText(this.valueDecoded);, +		public char[] valueCharsDecoded() {, +			return this.valueCharsDecoded;, +		}, +, +		@Override, +		public boolean isEmpty() {, +			return this.empty;, +		}, +, +		@Override, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultRequestPath.java, + * Default implementation of {@link RequestPath}., +	DefaultRequestPath(RequestPath requestPath, String contextPath) {, +	static PathSegmentContainer parsePath(String path, Charset charset) {, +		int begin = (path.charAt(0) == '/' ? 1 : 0);, +		while (begin < path.length()) {, +	static PathSegment parsePathSegment(String input, Charset charset) {, +			String inputDecoded = StringUtils.uriDecode(input, charset);, +			return new DefaultPathSegment(input, inputDecoded, "", EMPTY_MAP);, +	// PathSegmentContainer methods.., +, +, +	@Override, +	public boolean isEmpty() {, +		return this.contextPath.isEmpty() && this.pathWithinApplication.isEmpty();, +	}, +, +	public boolean isAbsolute() {, +		return !this.contextPath.isEmpty() && this.contextPath.isAbsolute() || this.pathWithinApplication.isAbsolute();, +	}, +, +	@Override, +	public boolean hasTrailingSlash() {, +		return this.pathWithinApplication.hasTrailingSlash();, +	}]