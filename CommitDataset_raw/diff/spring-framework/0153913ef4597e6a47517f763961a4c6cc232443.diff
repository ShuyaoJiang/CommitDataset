[+++ b/spring-context/src/test/java/org/springframework/scheduling/annotation/EnableSchedulingTests.java, +import org.junit.Rule;, +import org.junit.rules.ExpectedException;, +	@Rule, +	public final ExpectedException exception = ExpectedException.none();, +, +, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext(FixedRateTaskConfig.class);, +	@Configuration, +	@EnableScheduling, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext(FixedRateTaskConfigSubclass.class);, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext(ExplicitSchedulerConfig.class);, +	@Configuration, +	@EnableScheduling, +	@Test, +	@SuppressWarnings("resource"), +		exception.expect(IllegalStateException.class);, +		exception.expectMessage(startsWith("More than one TaskScheduler bean exists within the context"));, +		new AnnotationConfigApplicationContext(AmbiguousExplicitSchedulerConfig.class);, +	@Configuration, +	@EnableScheduling, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext(, +			ExplicitScheduledTaskRegistrarConfig.class);, +	@Configuration, +	@EnableScheduling, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext(, +			SchedulingEnabled_withAmbiguousTaskSchedulers_butNoActualTasks.class);, +	@Test, +	@SuppressWarnings("resource"), +		exception.expect(IllegalStateException.class);, +		exception.expectMessage(startsWith("More than one TaskScheduler bean exists within the context"));, +		new AnnotationConfigApplicationContext(SchedulingEnabled_withAmbiguousTaskSchedulers_andSingleTask.class);, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext(, +			SchedulingEnabled_withAmbiguousTaskSchedulers_andSingleTask_disambiguatedByScheduledTaskRegistrar.class);, +, +		assertThat(ctx.getBean(ThreadAwareWorker.class).executedByThread, startsWith("explicitScheduler2-"));, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext(, +			SchedulingEnabled_withAmbiguousTaskSchedulers_andSingleTask_disambiguatedBySchedulerNameAttribute.class);, +, +		assertThat(ctx.getBean(ThreadAwareWorker.class).executedByThread, startsWith("explicitScheduler2-"));, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext(, +			SchedulingEnabled_withTaskAddedVia_configureTasks.class);, +, +		assertThat(ctx.getBean(ThreadAwareWorker.class).executedByThread, startsWith("taskScheduler-"));, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext(TriggerTaskConfig.class);, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext(, +			FixedRateTaskConfig_withInitialDelay.class);, +		// The @Scheduled method should have been called at least once but, +		// not more times than the delay allows., +		assertThat(counter.get(), both(greaterThan(0)).and(lessThanOrEqualTo(10)));, +	@Configuration, +	@EnableScheduling]