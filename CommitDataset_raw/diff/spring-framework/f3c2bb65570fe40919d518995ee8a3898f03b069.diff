[+++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, +			String resource = url.toString();, +			String query = url.getRawQuery();, +			resource = (query != null ? resource.substring(0, resource.indexOf(query) - 1) : resource);, +					" request for \"" + resource + "\": " + ex.getMessage(), ex);, +++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, +			String resource = url.toString();, +			String query = url.getRawQuery();, +			resource = (query != null ? resource.substring(0, resource.indexOf(query) - 1) : resource);, +					" request for \"" + resource + "\": " + ex.getMessage(), ex);, +++ b/spring-web/src/test/java/org/springframework/web/client/RestTemplateTests.java, + * Copyright 2002-2015 the original author or authors., + * @author Rossen Stoyanchev, +		Map<String, String> vars = new HashMap<>(2);, +		Map<String, String> uriVariables = new HashMap<>(2);, +		HttpEntity<String> entity = new HttpEntity<>(helloWorld, entityHeaders);, +		HttpEntity<String> entity = new HttpEntity<>(helloWorld, entityHeaders);, +	// Issue: SPR-9325, SPR-13860, +, +		String url = "http://example.com/resource?access_token=123";, +, +		given(requestFactory.createRequest(new URI(url), HttpMethod.GET)).willReturn(request);, +		given(request.execute()).willThrow(new IOException("Socket failure"));, +			template.getForObject(url, String.class);, +			assertEquals("I/O error on GET request for \"http://example.com/resource\": " +, +					"Socket failure; nested exception is java.io.IOException: Socket failure",, +					ex.getMessage());, +		HttpEntity<String> requestEntity = new HttpEntity<>(body, entityHeaders);, +		given(response.getBody()).willReturn(new ByteArrayInputStream(Integer.toString(42).getBytes()));, +		HttpEntity<String> requestEntity = new HttpEntity<>(requestBody, entityHeaders);]