[+++ b/spring-context/src/main/java/org/springframework/cache/annotation/AbstractCachingConfiguration.java, +, +, +, +, +, +++ b/spring-context/src/main/java/org/springframework/cache/annotation/AbstractCachingConfiguration.java, +, +, +, +, +, +++ b/spring-context/src/main/java/org/springframework/cache/config/CacheAdviceParser.java, +, +, +, +, +, +, +	/**, +	 * Simple, reusable class used for overriding defaults., +	 *, +	 * @author Costin Leau, +	 */, +	private static class Props {, +, +		private String key;, +, +		private String condition;, +, +		private String method;, +, +		private String[] caches = null;, +, +, +		Props(Element root) {, +			String defaultCache = root.getAttribute("cache");, +			key = root.getAttribute("key");, +			condition = root.getAttribute("condition");, +			method = root.getAttribute(METHOD_ATTRIBUTE);, +, +			if (StringUtils.hasText(defaultCache)) {, +				caches = StringUtils.commaDelimitedListToStringArray(defaultCache.trim());, +			}, +		}, +, +, +		<T extends CacheOperation> T merge(Element element, ReaderContext readerCtx, T op) {, +			String cache = element.getAttribute("cache");, +, +			// sanity check, +			String[] localCaches = caches;, +			if (StringUtils.hasText(cache)) {, +				localCaches = StringUtils.commaDelimitedListToStringArray(cache.trim());, +			} else {, +				if (caches == null) {, +					readerCtx.error("No cache specified specified for " + element.getNodeName(), element);, +				}, +			}, +			op.setCacheNames(localCaches);, +, +			op.setKey(getAttributeValue(element, "key", this.key));, +			op.setCondition(getAttributeValue(element, "condition", this.condition));, +, +			return op;, +		}, +, +		String merge(Element element, ReaderContext readerCtx) {, +			String m = element.getAttribute(METHOD_ATTRIBUTE);, +, +			if (StringUtils.hasText(m)) {, +				return m.trim();, +			}, +			if (StringUtils.hasText(method)) {, +				return method;, +			}, +			readerCtx.error("No method specified for " + element.getNodeName(), element);, +			return null;, +		}, +	}, +++ b/spring-context/src/main/java/org/springframework/cache/annotation/AbstractCachingConfiguration.java, +, +, +, +, +, +++ b/spring-context/src/main/java/org/springframework/cache/config/CacheAdviceParser.java, +, +, +, +, +, +, +	/**, +	 * Simple, reusable class used for overriding defaults., +	 *, +	 * @author Costin Leau, +	 */, +	private static class Props {, +]