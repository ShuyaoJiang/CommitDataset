[+++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, + * Copyright 2002-2013 the original author or authors., + * {@link #setSupportedMediaTypes supportedMediaTypes} property., + *, + * <p>Tested against Jackson 2.2; compatible with Jackson 2.0 and higher., +		super(new MediaType("application", "json", DEFAULT_CHARSET),, +				new MediaType("application", "*+json", DEFAULT_CHARSET));, +, +	 * Set the {@code ObjectMapper} for this view., +	 * If not set, a default {@link ObjectMapper#ObjectMapper() ObjectMapper} is used., +	private void configurePrettyPrint() {, +		if (this.prettyPrint != null) {, +			this.objectMapper.configure(SerializationFeature.INDENT_OUTPUT, this.prettyPrint);, +		}, +	}, +, +		@SuppressWarnings("deprecation"), +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, + * Copyright 2002-2013 the original author or authors., + * {@link #setSupportedMediaTypes supportedMediaTypes} property., + *, + * <p>Tested against Jackson 2.2; compatible with Jackson 2.0 and higher., +		super(new MediaType("application", "json", DEFAULT_CHARSET),, +				new MediaType("application", "*+json", DEFAULT_CHARSET));, +, +	 * Set the {@code ObjectMapper} for this view., +	 * If not set, a default {@link ObjectMapper#ObjectMapper() ObjectMapper} is used., +	private void configurePrettyPrint() {, +		if (this.prettyPrint != null) {, +			this.objectMapper.configure(SerializationFeature.INDENT_OUTPUT, this.prettyPrint);, +		}, +	}, +, +		@SuppressWarnings("deprecation"), +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.java, + * {@link #setSupportedMediaTypes supportedMediaTypes} property., + *, + * <p><b>NOTE:</b> Requires Jackson 1.8 or higher, as of Spring 4.0., + * @author Juergen Hoeller, +		super(new MediaType("application", "json", DEFAULT_CHARSET),, +				new MediaType("application", "*+json", DEFAULT_CHARSET));, +, +	 * Set the {@code ObjectMapper} for this view., +	 * If not set, a default {@link ObjectMapper#ObjectMapper() ObjectMapper} is used., +	private void configurePrettyPrint() {, +		if (this.prettyPrint != null) {, +			this.objectMapper.configure(SerializationConfig.Feature.INDENT_OUTPUT, this.prettyPrint);, +		}, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, + * Copyright 2002-2013 the original author or authors., + * {@link #setSupportedMediaTypes supportedMediaTypes} property., + *, + * <p>Tested against Jackson 2.2; compatible with Jackson 2.0 and higher., +		super(new MediaType("application", "json", DEFAULT_CHARSET),, +				new MediaType("application", "*+json", DEFAULT_CHARSET));, +, +	 * Set the {@code ObjectMapper} for this view., +	 * If not set, a default {@link ObjectMapper#ObjectMapper() ObjectMapper} is used., +	private void configurePrettyPrint() {, +		if (this.prettyPrint != null) {, +			this.objectMapper.configure(SerializationFeature.INDENT_OUTPUT, this.prettyPrint);, +		}, +	}, +, +		@SuppressWarnings("deprecation"), +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.java, + * {@link #setSupportedMediaTypes supportedMediaTypes} property., + *, + * <p><b>NOTE:</b> Requires Jackson 1.8 or higher, as of Spring 4.0., + * @author Juergen Hoeller, +		super(new MediaType("application", "json", DEFAULT_CHARSET),, +				new MediaType("application", "*+json", DEFAULT_CHARSET));, +, +	 * Set the {@code ObjectMapper} for this view., +	 * If not set, a default {@link ObjectMapper#ObjectMapper() ObjectMapper} is used., +	private void configurePrettyPrint() {, +		if (this.prettyPrint != null) {, +			this.objectMapper.configure(SerializationConfig.Feature.INDENT_OUTPUT, this.prettyPrint);, +		}, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/json/MappingJackson2JsonView.java, + * will be encoded as JSON. If the model contains only one key, you can have it extracted encoded as, + * JSON alone via {@link #setExtractValueFromSingleKeyModel}., +		@SuppressWarnings("deprecation"), +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, + * Copyright 2002-2013 the original author or authors., + * {@link #setSupportedMediaTypes supportedMediaTypes} property., + *, + * <p>Tested against Jackson 2.2; compatible with Jackson 2.0 and higher., +		super(new MediaType("application", "json", DEFAULT_CHARSET),, +				new MediaType("application", "*+json", DEFAULT_CHARSET));, +, +	 * Set the {@code ObjectMapper} for this view., +	 * If not set, a default {@link ObjectMapper#ObjectMapper() ObjectMapper} is used., +	private void configurePrettyPrint() {, +		if (this.prettyPrint != null) {, +			this.objectMapper.configure(SerializationFeature.INDENT_OUTPUT, this.prettyPrint);]