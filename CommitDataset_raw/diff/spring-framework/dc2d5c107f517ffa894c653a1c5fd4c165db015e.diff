[+++ b/org.springframework.core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +	public String getProperty(String key, String defaultValue) {, +		return this.propertyResolver.getProperty(key, defaultValue);, +	}, +, +	public <T> T getProperty(String key, Class<T> targetType, T defaultValue) {, +		return this.propertyResolver.getProperty(key, targetType, defaultValue);, +	};, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +	public String getProperty(String key, String defaultValue) {, +		return this.propertyResolver.getProperty(key, defaultValue);, +	}, +, +	public <T> T getProperty(String key, Class<T> targetType, T defaultValue) {, +		return this.propertyResolver.getProperty(key, targetType, defaultValue);, +	};, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/PropertyResolver.java, +	 * Return the property value associated with the given key, or {@code null}, +	 * if the key cannot be resolved., +	 * @param key the property name to resolve, +	 * @see #getProperty(String, String), +	 * @see #getRequiredProperty(String), +	 * Return the property value associated with the given key, or, +	 * {@code defaultValue} if the key cannot be resolved., +	 * @param key the property name to resolve, +	 * @param defaultValue the default value to return if no value is found, +	 * @see #getRequiredProperty(String), +	 * @see #getProperty(String, Class), +	 */, +	String getProperty(String key, String defaultValue);, +, +	/**, +	 * @param key the property name to resolve, +	 * @param T the expected type of the property value, +	 * @see #getRequiredProperty(String, Class), +	 * Return the property value associated with the given key, or, +	 * {@code defaultValue} if the key cannot be resolved., +	 * @param key the property name to resolve, +	 * @param T the expected type of the property value, +	 * @param defaultValue the default value to return if no value is found, +	 * @see #getRequiredProperty(String, Class), +	 */, +	<T> T getProperty(String string, Class<T> targetType, T defaultValue);, +, +	/**, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +	public String getProperty(String key, String defaultValue) {, +		return this.propertyResolver.getProperty(key, defaultValue);, +	}, +, +	public <T> T getProperty(String key, Class<T> targetType, T defaultValue) {, +		return this.propertyResolver.getProperty(key, targetType, defaultValue);, +	};, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/PropertyResolver.java, +	 * Return the property value associated with the given key, or {@code null}, +	 * if the key cannot be resolved., +	 * @param key the property name to resolve, +	 * @see #getProperty(String, String), +	 * @see #getRequiredProperty(String), +	 * Return the property value associated with the given key, or, +	 * {@code defaultValue} if the key cannot be resolved., +	 * @param key the property name to resolve, +	 * @param defaultValue the default value to return if no value is found, +	 * @see #getRequiredProperty(String), +	 * @see #getProperty(String, Class), +	 */, +	String getProperty(String key, String defaultValue);, +, +	/**, +	 * @param key the property name to resolve, +	 * @param T the expected type of the property value, +	 * @see #getRequiredProperty(String, Class), +	 * Return the property value associated with the given key, or, +	 * {@code defaultValue} if the key cannot be resolved., +	 * @param key the property name to resolve, +	 * @param T the expected type of the property value, +	 * @param defaultValue the default value to return if no value is found, +	 * @see #getRequiredProperty(String, Class), +	 */, +	<T> T getProperty(String string, Class<T> targetType, T defaultValue);, +, +	/**, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/PropertySourcesPropertyResolver.java, +	public String getProperty(String key, String defaultValue) {, +		String value = getProperty(key);, +		return value == null ? defaultValue : value;, +	}, +, +	public <T> T getProperty(String key, Class<T> targetType, T defaultValue) {, +		T value = getProperty(key, targetType);, +		return value == null ? defaultValue : value;, +	};, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +	public String getProperty(String key, String defaultValue) {, +		return this.propertyResolver.getProperty(key, defaultValue);, +	}]