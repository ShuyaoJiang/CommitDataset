[+++ b/spring-aop/src/main/java/org/springframework/aop/framework/AopProxyUtils.java, +					advised.setInterfaces(targetClass);, +					advised.setInterfaces(targetClass.getInterfaces());, +				specifiedInterfaces = advised.getProxiedInterfaces();, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AopProxyUtils.java, +					advised.setInterfaces(targetClass);, +					advised.setInterfaces(targetClass.getInterfaces());, +				specifiedInterfaces = advised.getProxiedInterfaces();, +++ b/spring-context/src/test/java/org/springframework/aop/framework/autoproxy/AutoProxyCreatorTests.java, +import org.springframework.aop.framework.ProxyFactory;, +import org.springframework.aop.target.SingletonTargetSource;, +		sac.registerPrototype("prototypeToBeProxied", SpringProxyFactoryBean.class);, +, +	public static class SpringProxyFactoryBean implements FactoryBean<ITestBean> {, +, +		private final TestBean tb = new TestBean();, +, +		@Override, +		public ITestBean getObject() {, +			return ProxyFactory.getProxy(ITestBean.class, new SingletonTargetSource(tb));, +		}, +, +		@Override, +		public Class<?> getObjectType() {, +			return ITestBean.class;, +		}, +, +		@Override, +		public boolean isSingleton() {, +			return false;, +		}, +	}, +]