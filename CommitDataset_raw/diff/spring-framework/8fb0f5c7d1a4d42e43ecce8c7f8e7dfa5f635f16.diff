[+++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/FrameworkPortlet.java, +import org.springframework.core.env.ConfigurableEnvironment;, +import org.springframework.web.portlet.context.StandardPortletEnvironment;, +		// The wac environment's #initPropertySources will be called in any case when the context, +		// is refreshed; do it eagerly here to ensure portlet property sources are in place for, +		// use in any post-processing or initialization that occurs below prior to #refresh, +		ConfigurableEnvironment env = pac.getEnvironment();, +		if (env instanceof StandardPortletEnvironment) {, +			((StandardPortletEnvironment) env).initPropertySources(pac.getServletContext(), getPortletContext(), getPortletConfig());, +		}, +, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/FrameworkPortlet.java, +import org.springframework.core.env.ConfigurableEnvironment;, +import org.springframework.web.portlet.context.StandardPortletEnvironment;, +		// The wac environment's #initPropertySources will be called in any case when the context, +		// is refreshed; do it eagerly here to ensure portlet property sources are in place for, +		// use in any post-processing or initialization that occurs below prior to #refresh, +		ConfigurableEnvironment env = pac.getEnvironment();, +		if (env instanceof StandardPortletEnvironment) {, +			((StandardPortletEnvironment) env).initPropertySources(pac.getServletContext(), getPortletContext(), getPortletConfig());, +		}, +, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/context/StandardPortletEnvironment.java, + * Copyright 2002-2014 the original author or authors., + * applications. All Portlet-related {@code ApplicationContext} classes, + * initialize an instance by default., + * <p>Contributes {@code ServletContext}, {@code PortletContext},, + * {@code PortletConfig} and JNDI-based {@link PropertySource} instances., + * See the {@link #customizePropertySources} method for details., + * @author Juergen Hoeller, +, +	/**, +	 * Replace any {@linkplain, +	 * org.springframework.core.env.PropertySource.StubPropertySource stub property source}, +	 * instances acting as placeholders with real portlet context/config property sources, +	 * using the given parameters., +	 * @param servletContext the {@link ServletContext} (may be {@code null}), +	 * @param portletContext the {@link PortletContext} (may not be {@code null}), +	 * @param portletConfig the {@link PortletConfig} ({@code null} if not available), +	 * @see org.springframework.web.portlet.context.PortletApplicationContextUtils#initPortletPropertySources(, +	 * org.springframework.core.env.MutablePropertySources, ServletContext, PortletContext, PortletConfig), +	 */, +	public void initPropertySources(ServletContext servletContext, PortletContext portletContext, PortletConfig portletConfig) {, +		PortletApplicationContextUtils.initPortletPropertySources(getPropertySources(), servletContext, portletContext, portletConfig);, +	}, +]