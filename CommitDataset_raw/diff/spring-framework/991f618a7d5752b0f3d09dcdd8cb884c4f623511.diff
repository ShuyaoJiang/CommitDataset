[+++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +	 * TODO consider returning BindingResults object that makes it easier to query/introspect results, +	/**, +	 * Creates a {@link UserValue} list from a Map of user-submitted fields., +	 * The Binder may apply transformations as part of the creation process., +	 * For example, a Binder might insert empty or default values for fields that are not present., +	 * As another example, a Binder might collapse multiple fields into a single {@link UserValue} object., +	 * @param userMap the map of user-submitted fields, +	 * @return the UserValue list that can be passed to {@link #bind(List)}., +	 */, +	List<UserValue> createUserValues(Map<String, ? extends Object> userMap);, +, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +	 * TODO consider returning BindingResults object that makes it easier to query/introspect results, +	/**, +	 * Creates a {@link UserValue} list from a Map of user-submitted fields., +	 * The Binder may apply transformations as part of the creation process., +	 * For example, a Binder might insert empty or default values for fields that are not present., +	 * As another example, a Binder might collapse multiple fields into a single {@link UserValue} object., +	 * @param userMap the map of user-submitted fields, +	 * @return the UserValue list that can be passed to {@link #bind(List)}., +	 */, +	List<UserValue> createUserValues(Map<String, ? extends Object> userMap);, +, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +	public M getModel() {, +		return model;, +	}, +, +	public List<UserValue> createUserValues(Map<String, ? extends Object> userMap) {, +		List<UserValue> values = new ArrayList<UserValue>();, +		for (Map.Entry<String, ? extends Object> entry : userMap.entrySet()) {, +			values.add(new UserValue(entry.getKey(), entry.getValue()));, +		}, +		return values;, +	}, +, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +	 * TODO consider returning BindingResults object that makes it easier to query/introspect results, +	/**, +	 * Creates a {@link UserValue} list from a Map of user-submitted fields., +	 * The Binder may apply transformations as part of the creation process., +	 * For example, a Binder might insert empty or default values for fields that are not present., +	 * As another example, a Binder might collapse multiple fields into a single {@link UserValue} object., +	 * @param userMap the map of user-submitted fields, +	 * @return the UserValue list that can be passed to {@link #bind(List)}., +	 */, +	List<UserValue> createUserValues(Map<String, ? extends Object> userMap);, +, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +	public M getModel() {, +		return model;, +	}, +, +	public List<UserValue> createUserValues(Map<String, ? extends Object> userMap) {, +		List<UserValue> values = new ArrayList<UserValue>();, +		for (Map.Entry<String, ? extends Object> entry : userMap.entrySet()) {, +			values.add(new UserValue(entry.getKey(), entry.getValue()));, +		}, +		return values;, +	}, +, +++ b/org.springframework.context/src/test/java/org/springframework/ui/binding/support/GenericBinderTests.java, +import java.util.LinkedHashMap;, +import java.util.Map;, +	public void bindUserValuesCreatedFromUserMap() {, +		Binder<TestBean> binder = new GenericBinder<TestBean>(new TestBean());, +		Map<String, String> userMap = new LinkedHashMap<String, String>();, +		userMap.put("string", "test");, +		userMap.put("integer", "3");, +		List<UserValue> values = binder.createUserValues(userMap);, +		List<BindingResult> results = binder.bind(values);, +		assertEquals(2, results.size());, +		assertEquals("test", results.get(0).getUserValue());, +		assertEquals("3", results.get(1).getUserValue());, +		assertEquals("test", binder.getModel().getString());, +		assertEquals(3, binder.getModel().getInteger());		, +	}, +	, +	@Test]