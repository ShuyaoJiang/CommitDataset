[+++ b/spring-beans/src/main/java/org/springframework/beans/AbstractNestablePropertyAccessor.java, +		this.rootObject = (!this.nestedPath.isEmpty() ? rootObject : this.wrappedObject);, +++ b/spring-beans/src/main/java/org/springframework/beans/AbstractNestablePropertyAccessor.java, +		this.rootObject = (!this.nestedPath.isEmpty() ? rootObject : this.wrappedObject);, +++ b/spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, +					if (requiredType.isEnum() && trimmedValue.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/AbstractNestablePropertyAccessor.java, +		this.rootObject = (!this.nestedPath.isEmpty() ? rootObject : this.wrappedObject);, +++ b/spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, +					if (requiredType.isEnum() && trimmedValue.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/SpringValidatorAdapter.java, +						if (nestedField.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/AbstractNestablePropertyAccessor.java, +		this.rootObject = (!this.nestedPath.isEmpty() ? rootObject : this.wrappedObject);, +++ b/spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, +					if (requiredType.isEnum() && trimmedValue.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/SpringValidatorAdapter.java, +						if (nestedField.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToBooleanConverter.java, +		if (value.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/AbstractNestablePropertyAccessor.java, +		this.rootObject = (!this.nestedPath.isEmpty() ? rootObject : this.wrappedObject);, +++ b/spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, +					if (requiredType.isEnum() && trimmedValue.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/SpringValidatorAdapter.java, +						if (nestedField.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToBooleanConverter.java, +		if (value.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/util/AntPathMatcher.java, +		boolean ext1All = (ext1.equals(".*") || ext1.isEmpty());, +		boolean ext2All = (ext2.equals(".*") || ext2.isEmpty());, +++ b/spring-beans/src/main/java/org/springframework/beans/AbstractNestablePropertyAccessor.java, +		this.rootObject = (!this.nestedPath.isEmpty() ? rootObject : this.wrappedObject);, +++ b/spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, +					if (requiredType.isEnum() && trimmedValue.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/SpringValidatorAdapter.java, +						if (nestedField.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToBooleanConverter.java, +		if (value.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/util/AntPathMatcher.java, +		boolean ext1All = (ext1.equals(".*") || ext1.isEmpty());, +		boolean ext2All = (ext2.equals(".*") || ext2.isEmpty());, +++ b/spring-core/src/main/java/org/springframework/util/PatternMatchUtils.java, +			if (part.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/AbstractNestablePropertyAccessor.java, +		this.rootObject = (!this.nestedPath.isEmpty() ? rootObject : this.wrappedObject);, +++ b/spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, +					if (requiredType.isEnum() && trimmedValue.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/SpringValidatorAdapter.java, +						if (nestedField.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToBooleanConverter.java, +		if (value.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/util/AntPathMatcher.java, +		boolean ext1All = (ext1.equals(".*") || ext1.isEmpty());, +		boolean ext2All = (ext2.equals(".*") || ext2.isEmpty());, +++ b/spring-core/src/main/java/org/springframework/util/PatternMatchUtils.java, +			if (part.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +		if (variant.isEmpty() && country.startsWith("#")) {, +		if (delimiter.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/AbstractNestablePropertyAccessor.java, +		this.rootObject = (!this.nestedPath.isEmpty() ? rootObject : this.wrappedObject);, +++ b/spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java, +					if (requiredType.isEnum() && trimmedValue.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/validation/beanvalidation/SpringValidatorAdapter.java, +						if (nestedField.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToBooleanConverter.java, +		if (value.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/util/AntPathMatcher.java, +		boolean ext1All = (ext1.equals(".*") || ext1.isEmpty());, +		boolean ext2All = (ext2.equals(".*") || ext2.isEmpty());, +++ b/spring-core/src/main/java/org/springframework/util/PatternMatchUtils.java, +			if (part.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +		if (variant.isEmpty() && country.startsWith("#")) {, +		if (delimiter.isEmpty()) {, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.java, +			if (unitNameForLookup.isEmpty()) {, +			if (unitNameForLookup.isEmpty()) {, +		if (unitNameForLookup.isEmpty()) {, +		if (!unitNameForLookup.isEmpty()) {]