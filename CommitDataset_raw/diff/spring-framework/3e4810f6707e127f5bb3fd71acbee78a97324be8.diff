[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/service/CollectionToArray.java, +		if (elementConverter == NoOpConversionExecutor.INSTANCE) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/service/CollectionToArray.java, +		if (elementConverter == NoOpConversionExecutor.INSTANCE) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/service/CollectionToCollection.java, +		if (elementConverter == NoOpConversionExecutor.INSTANCE && getTargetElementType() != null) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/service/CollectionToArray.java, +		if (elementConverter == NoOpConversionExecutor.INSTANCE) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/service/CollectionToCollection.java, +		if (elementConverter == NoOpConversionExecutor.INSTANCE && getTargetElementType() != null) {, +++ b/org.springframework.core/src/test/java/org/springframework/core/convert/service/CollectionToCollectionTests.java, +import static org.junit.Assert.assertTrue;, +	@Test, +	public void testCollectionToCollectionConversionNoGenericInfoSourceEmpty() throws Exception {, +		DefaultConversionService service = new DefaultConversionService();, +		CollectionToCollection c = new CollectionToCollection(TypeDescriptor.valueOf(Collection.class),, +				new TypeDescriptor(getClass().getField("integerTarget")), service);, +		List result = (List) c.execute(bindTarget);, +		assertTrue(result.isEmpty());, +	}, +]