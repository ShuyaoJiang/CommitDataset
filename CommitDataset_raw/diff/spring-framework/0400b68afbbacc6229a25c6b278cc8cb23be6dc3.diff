[+++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JmsListenerContainerParser.java, + * Copyright 2002-2009 the original author or authors., +	private static final String ERROR_HANDLER_ATTRIBUTE = "error-handler";, +, +		String errorHandlerBeanName = containerEle.getAttribute(ERROR_HANDLER_ATTRIBUTE);, +		if (StringUtils.hasText(errorHandlerBeanName)) {, +			containerDef.getPropertyValues().addPropertyValue("errorHandler",, +					new RuntimeBeanReference(errorHandlerBeanName));, +		}, +, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JmsListenerContainerParser.java, + * Copyright 2002-2009 the original author or authors., +	private static final String ERROR_HANDLER_ATTRIBUTE = "error-handler";, +, +		String errorHandlerBeanName = containerEle.getAttribute(ERROR_HANDLER_ATTRIBUTE);, +		if (StringUtils.hasText(errorHandlerBeanName)) {, +			containerDef.getPropertyValues().addPropertyValue("errorHandler",, +					new RuntimeBeanReference(errorHandlerBeanName));, +		}, +, +++ b/org.springframework.jms/src/main/resources/org/springframework/jms/config/spring-jms-3.0.xsd, +			<xsd:attribute name="error-handler" type="xsd:string">, +				<xsd:annotation>, +					<xsd:documentation><![CDATA[, +	A reference to an ErrorHandler strategy for handling any uncaught Exceptions, +	that may occur during the execution of the MessageListener., +					]]></xsd:documentation>, +					<xsd:appinfo>, +						<tool:annotation kind="ref">, +							<tool:expected-type type="org.springframework.util.ErrorHandler"/>, +						</tool:annotation>, +					</xsd:appinfo>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JmsListenerContainerParser.java, + * Copyright 2002-2009 the original author or authors., +	private static final String ERROR_HANDLER_ATTRIBUTE = "error-handler";, +, +		String errorHandlerBeanName = containerEle.getAttribute(ERROR_HANDLER_ATTRIBUTE);, +		if (StringUtils.hasText(errorHandlerBeanName)) {, +			containerDef.getPropertyValues().addPropertyValue("errorHandler",, +					new RuntimeBeanReference(errorHandlerBeanName));, +		}, +, +++ b/org.springframework.jms/src/main/resources/org/springframework/jms/config/spring-jms-3.0.xsd, +			<xsd:attribute name="error-handler" type="xsd:string">, +				<xsd:annotation>, +					<xsd:documentation><![CDATA[, +	A reference to an ErrorHandler strategy for handling any uncaught Exceptions, +	that may occur during the execution of the MessageListener., +					]]></xsd:documentation>, +					<xsd:appinfo>, +						<tool:annotation kind="ref">, +							<tool:expected-type type="org.springframework.util.ErrorHandler"/>, +						</tool:annotation>, +					</xsd:appinfo>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/org.springframework.jms/src/test/java/org/springframework/jms/config/JmsNamespaceHandlerTests.java, +import org.springframework.beans.DirectFieldAccessor;, +import org.springframework.util.ErrorHandler;, +	public void testErrorHandlers() {, +		ErrorHandler expected = this.context.getBean("testErrorHandler", ErrorHandler.class);, +		ErrorHandler errorHandler1 = getErrorHandler("listener1");, +		ErrorHandler errorHandler2 = getErrorHandler("listener2");, +		ErrorHandler defaultErrorHandler = getErrorHandler(DefaultMessageListenerContainer.class.getName() + "#0");, +		assertSame(expected, errorHandler1);, +		assertSame(expected, errorHandler2);, +		assertNull(defaultErrorHandler);, +	}, +, +	private ErrorHandler getErrorHandler(String containerBeanName) {, +		DefaultMessageListenerContainer container = this.context.getBean(containerBeanName, DefaultMessageListenerContainer.class);, +		return (ErrorHandler) new DirectFieldAccessor(container).getPropertyValue("errorHandler");, +	}, +, +, +	static class TestErrorHandler implements ErrorHandler {, +, +		@Override, +		public void handleError(Throwable t) {, +		}, +	}, +, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/config/JmsListenerContainerParser.java, + * Copyright 2002-2009 the original author or authors., +	private static final String ERROR_HANDLER_ATTRIBUTE = "error-handler";, +, +		String errorHandlerBeanName = containerEle.getAttribute(ERROR_HANDLER_ATTRIBUTE);, +		if (StringUtils.hasText(errorHandlerBeanName)) {, +			containerDef.getPropertyValues().addPropertyValue("errorHandler",, +					new RuntimeBeanReference(errorHandlerBeanName));, +		}, +, +++ b/org.springframework.jms/src/main/resources/org/springframework/jms/config/spring-jms-3.0.xsd, +			<xsd:attribute name="error-handler" type="xsd:string">, +				<xsd:annotation>, +					<xsd:documentation><![CDATA[, +	A reference to an ErrorHandler strategy for handling any uncaught Exceptions, +	that may occur during the execution of the MessageListener.]