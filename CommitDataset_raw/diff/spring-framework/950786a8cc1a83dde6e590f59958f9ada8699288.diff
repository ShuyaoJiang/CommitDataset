[+++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.java, +/*, + * Copyright 2002-2012 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.http.converter.json;, +, +import java.text.DateFormat;, +import java.text.SimpleDateFormat;, +import java.util.HashMap;, +import java.util.LinkedHashMap;, +import java.util.Map;, +, +import org.springframework.beans.FatalBeanException;, +import org.springframework.beans.factory.FactoryBean;, +import org.springframework.beans.factory.InitializingBean;, +import org.springframework.util.Assert;, +, +import com.fasterxml.jackson.core.JsonGenerator;, +import com.fasterxml.jackson.core.JsonParser;, +import com.fasterxml.jackson.databind.AnnotationIntrospector;, +import com.fasterxml.jackson.databind.DeserializationFeature;, +import com.fasterxml.jackson.databind.JsonDeserializer;, +import com.fasterxml.jackson.databind.JsonSerializer;, +import com.fasterxml.jackson.databind.MapperFeature;, +import com.fasterxml.jackson.databind.ObjectMapper;, +import com.fasterxml.jackson.databind.SerializationFeature;, +import com.fasterxml.jackson.databind.module.SimpleModule;, +, +/**, + * A FactoryBean for creating a Jackson {@link ObjectMapper} with setters to, + * enable or disable Jackson features from within XML configuration., + *, + * <p>Example usage with, + * {@link org.springframework.http.converter.json.MappingJackson2HttpMessageConverter}:, + *, + * <pre>, + * &lt;bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">, + *   &lt;property name="objectMapper">, + *     &lt;bean class="org.springframework.web.context.support.Jackson2ObjectMapperFactoryBean", + *       p:autoDetectFields="false", + *       p:autoDetectGettersSetters="false", + *       p:annotationIntrospector-ref="jaxbAnnotationIntrospector" />, + *   &lt;/property>, + * &lt;/bean>, + * </pre>, + *, + * <p>Example usage with {@link org.springframework.web.servlet.view.json.MappingJackson2JsonView}:, + *, + * <pre>, + * &lt;bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">, + *   &lt;property name="objectMapper">, + *     &lt;bean class="org.springframework.web.context.support.Jackson2ObjectMapperFactoryBean", + *       p:failOnEmptyBeans="false", + *       p:indentOutput="true">, + *       &lt;property name="serializers">, + *         &lt;array>, + *           &lt;bean class="org.mycompany.MyCustomSerializer" />, + *         &lt;/array>, + *       &lt;/property>, + *     &lt;/bean>, + *   &lt;/property>, + * &lt;/bean>, + * </pre>, + *, + * <p>In case there are no specific setters provided (for some rarely used, + * options), you can still use the more general methods, + * {@link #setFeaturesToEnable(Object[])} and {@link #setFeaturesToDisable(Object[])}., + *, + * <pre>, + * &lt;bean class="org.springframework.web.context.support.Jackson2ObjectMapperFactoryBean">, + *   &lt;property name="featuresToEnable">, + *     &lt;array>, + *       &lt;util:constant static-field="com.fasterxml.jackson.databind.SerializationFeature$WRAP_ROOT_VALUE"/>, + *       &lt;util:constant static-field="com.fasterxml.jackson.databind.SerializationFeature$CLOSE_CLOSEABLE"/>, + *     &lt;/array>, + *   &lt;/property>, + *   &lt;property name="featuresToDisable">, + *     &lt;array>, + *       &lt;util:constant static-field="com.fasterxml.jackson.databind.MapperFeature$USE_ANNOTATIONS"/>, + *     &lt;/array>, + *   &lt;/property>, + * &lt;/bean>, + * </pre>, + *, + * <p>Note: This BeanFctory is singleton, so if you need more than one you'll need, + * to configure multiple instances., + *]