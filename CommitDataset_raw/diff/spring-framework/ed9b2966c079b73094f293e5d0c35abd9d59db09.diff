[+++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/MockMvc.java, +import javax.servlet.Filter;, +	private final TestDispatcherServlet servlet;, +, +	private final Filter[] filters;, +	MockMvc(TestDispatcherServlet servlet, Filter[] filters, ServletContext servletContext) {, +		Assert.notNull(servlet, "DispatcherServlet is required");, +		Assert.notNull(filters, "filters cannot be null");, +		Assert.noNullElements(filters, "filters cannot contain null values");, +		Assert.notNull(servletContext, "A ServletContext is required");, +, +		this.servlet = servlet;, +		this.filters = filters;, +		MockFilterChain filterChain = new MockFilterChain(this.servlet, this.filters);, +		filterChain.doFilter(request, response);, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/MockMvc.java, +import javax.servlet.Filter;, +	private final TestDispatcherServlet servlet;, +, +	private final Filter[] filters;, +	MockMvc(TestDispatcherServlet servlet, Filter[] filters, ServletContext servletContext) {, +		Assert.notNull(servlet, "DispatcherServlet is required");, +		Assert.notNull(filters, "filters cannot be null");, +		Assert.noNullElements(filters, "filters cannot contain null values");, +		Assert.notNull(servletContext, "A ServletContext is required");, +, +		this.servlet = servlet;, +		this.filters = filters;, +		MockFilterChain filterChain = new MockFilterChain(this.servlet, this.filters);, +		filterChain.doFilter(request, response);, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/MockMvcBuilderSupport.java, +		MockMvc mockMvc = new MockMvc(dispatcherServlet, filters, servletContext);]