[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +import java.io.UnsupportedEncodingException;, +import java.net.URLDecoder;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +, +	private static final Log logger = LogFactory.getLog(ServerHttpRequest.class);, +, +	@SuppressWarnings("deprecation"), +		try {, +			return URLDecoder.decode(value, "UTF-8");, +		}, +		catch (UnsupportedEncodingException ex) {, +			if (logger.isWarnEnabled()) {, +				logger.warn("Could not decode query param [" + value + "] as 'UTF-8'. " +, +						"Falling back on default encoding; exception message: " + ex.getMessage());, +			}, +			return URLDecoder.decode(value);, +		}, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +import java.io.UnsupportedEncodingException;, +import java.net.URLDecoder;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +, +	private static final Log logger = LogFactory.getLog(ServerHttpRequest.class);, +, +	@SuppressWarnings("deprecation"), +		try {, +			return URLDecoder.decode(value, "UTF-8");, +		}, +		catch (UnsupportedEncodingException ex) {, +			if (logger.isWarnEnabled()) {, +				logger.warn("Could not decode query param [" + value + "] as 'UTF-8'. " +, +						"Falling back on default encoding; exception message: " + ex.getMessage());, +			}, +			return URLDecoder.decode(value);, +		}, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/ServerHttpRequestTests.java, + * Copyright 2002-2017 the original author or authors., +		assertEquals(Collections.singletonList(" + \u00e0"), params.get("a"));, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +import java.io.UnsupportedEncodingException;, +import java.net.URLDecoder;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +, +	private static final Log logger = LogFactory.getLog(ServerHttpRequest.class);, +, +	@SuppressWarnings("deprecation"), +		try {, +			return URLDecoder.decode(value, "UTF-8");, +		}, +		catch (UnsupportedEncodingException ex) {, +			if (logger.isWarnEnabled()) {, +				logger.warn("Could not decode query param [" + value + "] as 'UTF-8'. " +, +						"Falling back on default encoding; exception message: " + ex.getMessage());, +			}, +			return URLDecoder.decode(value);, +		}, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/ServerHttpRequestTests.java, + * Copyright 2002-2017 the original author or authors., +		assertEquals(Collections.singletonList(" + \u00e0"), params.get("a"));, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/RequestMappingIntegrationTests.java, +		String expected = "Hello  + \u00e0!";]