[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/handler/AnnotationMethodMessageHandler.java, +import org.springframework.messaging.handler.annotation.support.MessageMethodArgumentResolver;, +	private List<String> destinationPrefixes;, +, +, +	public void setDestinationPrefixes(List<String> destinationPrefixes) {, +		this.destinationPrefixes = destinationPrefixes;, +	}, +, +	public List<String> getDestinationPrefixes() {, +		return this.destinationPrefixes;, +	}, +, +	public MessageConverter<?> getMessageConverter() {, +		return this.messageConverter;, +	}, +, +		this.argumentResolvers.addResolver(new MessageMethodArgumentResolver());, +		return (AnnotationUtils.findAnnotation(beanType, Controller.class) != null);, +		if (!checkDestinationPrefix(destination)) {, +			return;, +		}, +, +		if (logger.isTraceEnabled()) {, +			logger.trace("Processing message: " + message);, +		}, +, +	private boolean checkDestinationPrefix(String destination) {, +		if ((destination != null) && (this.destinationPrefixes != null)) {, +			for (String prefix : this.destinationPrefixes) {, +				if (destination.startsWith(prefix)) {, +					return true;, +				}, +			}, +		}, +		return false;, +	}, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/handler/AnnotationMethodMessageHandler.java, +import org.springframework.messaging.handler.annotation.support.MessageMethodArgumentResolver;, +	private List<String> destinationPrefixes;, +, +, +	public void setDestinationPrefixes(List<String> destinationPrefixes) {, +		this.destinationPrefixes = destinationPrefixes;, +	}, +, +	public List<String> getDestinationPrefixes() {, +		return this.destinationPrefixes;, +	}, +, +	public MessageConverter<?> getMessageConverter() {, +		return this.messageConverter;, +	}, +, +		this.argumentResolvers.addResolver(new MessageMethodArgumentResolver());, +		return (AnnotationUtils.findAnnotation(beanType, Controller.class) != null);, +		if (!checkDestinationPrefix(destination)) {, +			return;, +		}, +, +		if (logger.isTraceEnabled()) {, +			logger.trace("Processing message: " + message);, +		}, +, +	private boolean checkDestinationPrefix(String destination) {, +		if ((destination != null) && (this.destinationPrefixes != null)) {, +			for (String prefix : this.destinationPrefixes) {, +				if (destination.startsWith(prefix)) {, +					return true;, +				}, +			}, +		}, +		return false;, +	}, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/handler/SimpleBrokerMessageHandler.java, +import java.util.List;, +, +	private List<String> destinationPrefixes;, +, +	public void setDestinationPrefixes(List<String> destinationPrefixes) {, +		this.destinationPrefixes = destinationPrefixes;, +	}, +, +	public List<String> getDestinationPrefixes() {, +		return this.destinationPrefixes;, +	}, +, +		String destination = headers.getDestination();, +, +		if (!checkDestinationPrefix(destination)) {, +			return;, +		}, +	private boolean checkDestinationPrefix(String destination) {, +		if ((destination != null) && (this.destinationPrefixes != null)) {, +			for (String prefix : this.destinationPrefixes) {, +				if (destination.startsWith(prefix)) {, +					return true;, +				}]