[+++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +			AnnotationUtils.findAllAnnotationAttributes(Import.class, metadata.getClassName(), true, metadataReaderFactory);, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +			AnnotationUtils.findAllAnnotationAttributes(Import.class, metadata.getClassName(), true, metadataReaderFactory);, +++ b/org.springframework.core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +import org.springframework.core.type.classreading.MetadataReaderFactory;, +	 * Return a list of attribute maps for all declarations of the given annotation, +	 * on the given annotated class using the given MetadataReaderFactory to introspect, +	 * annotation metadata. Meta-annotations are ordered first in the list, and if the, +	 * target annotation is declared directly on the class, its map of attributes will be, +	 * @param annotatedClassName the class to inspect, +	 * @param metadataReaderFactory factory used to create metadata readers for each type, +			Class<? extends Annotation> targetAnnotation, String annotatedClassName,, +			boolean classValuesAsString, MetadataReaderFactory metadataReaderFactory) throws IOException {, +		MetadataReader reader = metadataReaderFactory.getMetadataReader(annotatedClassName);, +			MetadataReader metaReader = metadataReaderFactory.getMetadataReader(annotationType);, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +			AnnotationUtils.findAllAnnotationAttributes(Import.class, metadata.getClassName(), true, metadataReaderFactory);, +++ b/org.springframework.core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +import org.springframework.core.type.classreading.MetadataReaderFactory;, +	 * Return a list of attribute maps for all declarations of the given annotation, +	 * on the given annotated class using the given MetadataReaderFactory to introspect, +	 * annotation metadata. Meta-annotations are ordered first in the list, and if the, +	 * target annotation is declared directly on the class, its map of attributes will be, +	 * @param annotatedClassName the class to inspect, +	 * @param metadataReaderFactory factory used to create metadata readers for each type, +			Class<? extends Annotation> targetAnnotation, String annotatedClassName,, +			boolean classValuesAsString, MetadataReaderFactory metadataReaderFactory) throws IOException {, +		MetadataReader reader = metadataReaderFactory.getMetadataReader(annotatedClassName);, +			MetadataReader metaReader = metadataReaderFactory.getMetadataReader(annotationType);, +++ b/org.springframework.core/src/test/java/org/springframework/core/annotation/AnnotationUtilsTests.java, +import org.springframework.core.type.classreading.SimpleMetadataReaderFactory;, +			AnnotationUtils.findAllAnnotationAttributes(Component.class,, +					HasLocalAndMetaComponentAnnotation.class.getName(), false,, +					new SimpleMetadataReaderFactory());]