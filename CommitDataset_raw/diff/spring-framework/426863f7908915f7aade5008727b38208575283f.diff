[+++ b/org.springframework.web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java, + * Copyright 2002-2011 the original author or authors., +	 * This implementation checks if the given class is {@linkplain #supports(Class) supported},, +	 * @param mediaType the media type to read, can be {@code null} if not specified., +	 * Typically the value of a {@code Content-Type} header., +	 * @return {@code true} if the supported media types include the media type,, +	 * or if the media type is {@code null}, +	 * This implementation checks if the given class is {@linkplain #supports(Class) supported},, +	 * Returns {@code true} if the given media type includes any of the, +	 * @param mediaType the media type to write, can be {@code null} if not specified., +	 * Typically the value of an {@code Accept} header., +	 * @return {@code true} if the supported media types are compatible with the media type,, +	 * or if the media type is {@code null}, +	 * This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}., +	 * This implementation delegates to {@link #getDefaultContentType(Object)} if a content, +	protected MediaType getDefaultContentType(T t) throws IOException {, +	protected Long getContentLength(T t, MediaType contentType) throws IOException {, +++ b/org.springframework.web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java, + * Copyright 2002-2011 the original author or authors., +	 * This implementation checks if the given class is {@linkplain #supports(Class) supported},, +	 * @param mediaType the media type to read, can be {@code null} if not specified., +	 * Typically the value of a {@code Content-Type} header., +	 * @return {@code true} if the supported media types include the media type,, +	 * or if the media type is {@code null}, +	 * This implementation checks if the given class is {@linkplain #supports(Class) supported},, +	 * Returns {@code true} if the given media type includes any of the, +	 * @param mediaType the media type to write, can be {@code null} if not specified., +	 * Typically the value of an {@code Accept} header., +	 * @return {@code true} if the supported media types are compatible with the media type,, +	 * or if the media type is {@code null}, +	 * This implementation simple delegates to {@link #readInternal(Class, HttpInputMessage)}., +	 * This implementation delegates to {@link #getDefaultContentType(Object)} if a content, +	protected MediaType getDefaultContentType(T t) throws IOException {, +	protected Long getContentLength(T t, MediaType contentType) throws IOException {, +++ b/org.springframework.web/src/main/java/org/springframework/http/converter/ResourceHttpMessageConverter.java, + * <p>By default, this converter can read all media types. The Java Activation Framework (JAF) -, + * if available - is used to determine the {@code Content-Type} of written resources., + * If JAF is not available, {@code application/octet-stream} is used., +, +, +, +, +	protected Long getContentLength(Resource resource, MediaType contentType) throws IOException {, +, +]