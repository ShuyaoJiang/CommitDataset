[+++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, + * Copyright 2002-2012 the original author or authors., +, +import org.springframework.core.env.Environment;, +import static org.springframework.context.annotation.MetadataUtils.*;, +, +	private final ResourceLoader resourceLoader;, +, +	private final Environment environment;, +, +			ResourceLoader resourceLoader, Environment environment) {, +		this.environment = environment;, +						AbstractBeanDefinitionReader abdr = ((AbstractBeanDefinitionReader) readerInstance);, +						abdr.setResourceLoader(this.resourceLoader);, +						abdr.setEnvironment(this.environment);, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, + * Copyright 2002-2012 the original author or authors., +, +import org.springframework.core.env.Environment;, +import static org.springframework.context.annotation.MetadataUtils.*;, +, +	private final ResourceLoader resourceLoader;, +, +	private final Environment environment;, +, +			ResourceLoader resourceLoader, Environment environment) {, +		this.environment = environment;, +						AbstractBeanDefinitionReader abdr = ((AbstractBeanDefinitionReader) readerInstance);, +						abdr.setResourceLoader(this.resourceLoader);, +						abdr.setEnvironment(this.environment);, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java, + * Copyright 2002-2012 the original author or authors., +			this.reader = new ConfigurationClassBeanDefinitionReader(registry, this.sourceExtractor,, +					this.problemReporter, this.metadataReaderFactory, this.resourceLoader, this.environment);, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, + * Copyright 2002-2012 the original author or authors., +, +import org.springframework.core.env.Environment;, +import static org.springframework.context.annotation.MetadataUtils.*;, +, +	private final ResourceLoader resourceLoader;, +, +	private final Environment environment;, +, +			ResourceLoader resourceLoader, Environment environment) {, +		this.environment = environment;, +						AbstractBeanDefinitionReader abdr = ((AbstractBeanDefinitionReader) readerInstance);, +						abdr.setResourceLoader(this.resourceLoader);, +						abdr.setEnvironment(this.environment);, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java, + * Copyright 2002-2012 the original author or authors., +			this.reader = new ConfigurationClassBeanDefinitionReader(registry, this.sourceExtractor,, +					this.problemReporter, this.metadataReaderFactory, this.resourceLoader, this.environment);, +++ b/org.springframework.test/src/test/java/org/springframework/test/context/junit4/profile/importresource/DefaultProfileAnnotationConfigTests.java, +/*, + * Copyright 2002-2012 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.test.context.junit4.profile.importresource;, +, +import org.junit.Test;, +import org.junit.runner.RunWith;, +, +import org.springframework.beans.Employee;, +import org.springframework.beans.Pet;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.test.context.ContextConfiguration;, +import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;, +import org.springframework.test.context.support.AnnotationConfigContextLoader;, +, +import static org.junit.Assert.*;, +, +/**, + * @author Juergen Hoeller, + * @since 3.1, + */, +@RunWith(SpringJUnit4ClassRunner.class), +@ContextConfiguration(classes = DefaultProfileConfig.class, loader = AnnotationConfigContextLoader.class), +public class DefaultProfileAnnotationConfigTests {, +, +	@Autowired, +	protected Pet pet;, +, +	@Autowired(required = false), +	protected Employee employee;]