[+++ b/org.springframework.oxm/src/main/java/org/springframework/oxm/castor/CastorMarshaller.java, +			if (this.targetClass != null) {, +			if (this.mappingLocations == null && this.targetClass == null) {, +++ b/org.springframework.oxm/src/main/java/org/springframework/oxm/castor/CastorMarshaller.java, +			if (this.targetClass != null) {, +			if (this.mappingLocations == null && this.targetClass == null) {, +++ b/org.springframework.oxm/src/test/java/org/springframework/oxm/castor/CastorUnmarshallerTests.java, +import java.io.StringReader;, +import java.util.ArrayList;, +import static org.junit.Assert.*;, +/** @author Arjen Poutsma */, +	@Test, +		CastorMarshaller unmarshaller = new CastorMarshaller();, +		unmarshaller.setMappingLocation(new ClassPathResource("order-mapping.xml", CastorMarshaller.class));, +		unmarshaller.setTargetClass(ArrayList.class);, +		unmarshaller.afterPropertiesSet();, +, +		String xml = "<order>" +, +				"<order-item id=\"1\" quantity=\"15\"/>" +, +				"<order-item id=\"3\" quantity=\"20\"/>" +, +				"</order>";, +, +		ArrayList result = (ArrayList) unmarshaller.unmarshal(new StreamSource(new StringReader(xml)));, +		assertEquals("Invalid amount of items", 2, result.size());, +		OrderItem item = (OrderItem) result.get(0);, +		assertEquals("Invalid items", "1", item.getId());, +		assertEquals("Invalid items", new Integer(15), item.getQuantity());, +		item = (OrderItem) result.get(1);, +		assertEquals("Invalid items", "3", item.getId());, +		assertEquals("Invalid items", new Integer(20), item.getQuantity());, +, +++ b/org.springframework.oxm/src/main/java/org/springframework/oxm/castor/CastorMarshaller.java, +			if (this.targetClass != null) {, +			if (this.mappingLocations == null && this.targetClass == null) {, +++ b/org.springframework.oxm/src/test/java/org/springframework/oxm/castor/CastorUnmarshallerTests.java, +import java.io.StringReader;, +import java.util.ArrayList;, +import static org.junit.Assert.*;, +/** @author Arjen Poutsma */, +	@Test, +		CastorMarshaller unmarshaller = new CastorMarshaller();, +		unmarshaller.setMappingLocation(new ClassPathResource("order-mapping.xml", CastorMarshaller.class));, +		unmarshaller.setTargetClass(ArrayList.class);, +		unmarshaller.afterPropertiesSet();, +, +		String xml = "<order>" +, +				"<order-item id=\"1\" quantity=\"15\"/>" +, +				"<order-item id=\"3\" quantity=\"20\"/>" +, +				"</order>";, +, +		ArrayList result = (ArrayList) unmarshaller.unmarshal(new StreamSource(new StringReader(xml)));, +		assertEquals("Invalid amount of items", 2, result.size());, +		OrderItem item = (OrderItem) result.get(0);, +		assertEquals("Invalid items", "1", item.getId());, +		assertEquals("Invalid items", new Integer(15), item.getQuantity());, +		item = (OrderItem) result.get(1);, +		assertEquals("Invalid items", "3", item.getId());, +		assertEquals("Invalid items", new Integer(20), item.getQuantity());, +, +++ b/org.springframework.oxm/src/test/java/org/springframework/oxm/castor/OrderItem.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.oxm.castor;, +, +public class OrderItem {, +, +	private String id;, +, +	private Integer quantity;, +, +	public String getId() {, +		return id;, +	}, +, +	public void setId(String id) {, +		this.id = id;, +	}, +, +	public Integer getQuantity() {, +		return quantity;, +	}, +, +	public void setQuantity(Integer quantity) {, +		this.quantity = quantity;, +	}, +}]