[+++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupportExtensionTests.java, +import java.util.Collections;, +import static com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES;, +import static com.fasterxml.jackson.databind.MapperFeature.DEFAULT_VIEW_INCLUSION;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotNull;, +import static org.springframework.http.MediaType.APPLICATION_ATOM_XML;, +import static org.springframework.http.MediaType.APPLICATION_JSON;, +import static org.springframework.http.MediaType.APPLICATION_XML;, +		assertNotNull(chain);, +		assertNotNull(chain);, +		assertNotNull(chain);, +		assertNotNull(chain);, +		assertNotNull(chain);, +		assertNotNull(chain);, +		List<HttpMessageConverter<?>> converters = adapter.getMessageConverters();, +		assertEquals(2, converters.size());, +		assertEquals(StringHttpMessageConverter.class, converters.get(0).getClass());, +		assertEquals(MappingJackson2HttpMessageConverter.class, converters.get(1).getClass());, +		ObjectMapper objectMapper = ((MappingJackson2HttpMessageConverter) converters.get(1)).getObjectMapper();, +		assertFalse(objectMapper.getDeserializationConfig().isEnabled(DEFAULT_VIEW_INCLUSION));, +		assertFalse(objectMapper.getSerializationConfig().isEnabled(DEFAULT_VIEW_INCLUSION));, +		assertFalse(objectMapper.getDeserializationConfig().isEnabled(FAIL_ON_UNKNOWN_PROPERTIES));, +		RequestMappingHandlerMapping mapping = this.config.requestMappingHandlerMapping();, +		ContentNegotiationManager manager = mapping.getContentNegotiationManager();, +		assertEquals(Collections.singletonList(APPLICATION_JSON), manager.resolveMediaTypes(webRequest));, +		assertEquals(Collections.singletonList(APPLICATION_XML), manager.resolveMediaTypes(webRequest));, +		assertEquals(Collections.singletonList(MediaType.valueOf("application/rss+xml")),, +				manager.resolveMediaTypes(webRequest));, +		assertEquals(Collections.singletonList(APPLICATION_ATOM_XML), manager.resolveMediaTypes(webRequest));, +		assertEquals(Collections.singletonList(APPLICATION_JSON), manager.resolveMediaTypes(webRequest));]