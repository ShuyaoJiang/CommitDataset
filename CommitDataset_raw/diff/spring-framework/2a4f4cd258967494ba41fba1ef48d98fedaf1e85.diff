[+++ b/spring-test/src/main/java/org/springframework/test/context/ContextCache.java, + * Copyright 2002-2015 the original author or authors., + * Cache for Spring {@link ApplicationContext ApplicationContexts} in a test, + * environment., + * <p>{@code ContextCache} maintains a cache of {@code ApplicationContexts}, + * keyed by {@link MergedContextConfiguration} instances., + * <p>Caching has significant performance benefits if initializing the context, + * takes a considerable about of time. Although initializing a Spring context, + * itself is very quick, some beans in a context, such as a, + * {@code LocalSessionFactoryBean} for working with Hibernate, may take some, + * time to initialize. Hence it often makes sense to perform that initialization, + * only once per test suite., +	/**, +	 * Reset all state maintained by this cache., +	 * @see #clear(), +	 * @see #clearStatistics(), +	 */, +	public void reset() {, +		synchronized (contextMap) {, +			clear();, +			clearStatistics();, +		}, +	}, +		synchronized (contextMap) {, +	}, +		synchronized (contextMap) {, +	}, +	 * <p>A <em>hit</em> is any access to the cache that returns a non-null, +	 * context for the queried key., +	 * <p>A <em>miss</em> is any access to the cache that returns a {@code null}, +	 * context for the queried key., +	 * Explicitly add an {@code ApplicationContext} instance to the cache, +	 * under the given key., +	 * Generate a text string containing the statistics for this cache., +	 * <p>Specifically, the returned string contains the {@linkplain #size},, +	 * {@linkplain #getHitCount() hit count}, {@linkplain #getMissCount() miss count},, +	 * and {@linkplain #getParentContextCount() parent context count}., +	 * @return the statistics for this cache, +++ b/spring-test/src/main/java/org/springframework/test/context/ContextCache.java, + * Copyright 2002-2015 the original author or authors., + * Cache for Spring {@link ApplicationContext ApplicationContexts} in a test, + * environment., + * <p>{@code ContextCache} maintains a cache of {@code ApplicationContexts}, + * keyed by {@link MergedContextConfiguration} instances., + * <p>Caching has significant performance benefits if initializing the context, + * takes a considerable about of time. Although initializing a Spring context, + * itself is very quick, some beans in a context, such as a, + * {@code LocalSessionFactoryBean} for working with Hibernate, may take some, + * time to initialize. Hence it often makes sense to perform that initialization, + * only once per test suite., +	/**, +	 * Reset all state maintained by this cache., +	 * @see #clear(), +	 * @see #clearStatistics(), +	 */, +	public void reset() {, +		synchronized (contextMap) {, +			clear();, +			clearStatistics();, +		}, +	}, +		synchronized (contextMap) {, +	}, +		synchronized (contextMap) {, +	}, +	 * <p>A <em>hit</em> is any access to the cache that returns a non-null, +	 * context for the queried key., +	 * <p>A <em>miss</em> is any access to the cache that returns a {@code null}, +	 * context for the queried key., +	 * Explicitly add an {@code ApplicationContext} instance to the cache, +	 * under the given key., +	 * Generate a text string containing the statistics for this cache., +	 * <p>Specifically, the returned string contains the {@linkplain #size},, +	 * {@linkplain #getHitCount() hit count}, {@linkplain #getMissCount() miss count},, +	 * and {@linkplain #getParentContextCount() parent context count}., +	 * @return the statistics for this cache, +++ b/spring-test/src/test/java/org/springframework/test/context/ClassLevelDirtiesContextTestNGTests.java, +		contextCache.reset();, +++ b/spring-test/src/main/java/org/springframework/test/context/ContextCache.java, + * Copyright 2002-2015 the original author or authors., + * Cache for Spring {@link ApplicationContext ApplicationContexts} in a test, + * environment., + * <p>{@code ContextCache} maintains a cache of {@code ApplicationContexts}, + * keyed by {@link MergedContextConfiguration} instances., + * <p>Caching has significant performance benefits if initializing the context, + * takes a considerable about of time. Although initializing a Spring context, + * itself is very quick, some beans in a context, such as a, + * {@code LocalSessionFactoryBean} for working with Hibernate, may take some, + * time to initialize. Hence it often makes sense to perform that initialization, + * only once per test suite., +	/**, +	 * Reset all state maintained by this cache., +	 * @see #clear(), +	 * @see #clearStatistics(), +	 */, +	public void reset() {, +		synchronized (contextMap) {, +			clear();, +			clearStatistics();, +		}]