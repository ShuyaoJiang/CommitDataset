[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/WebContentGenerator.java, +import java.util.ArrayList;, +import java.util.Collection;, +import org.springframework.http.HttpMethod;, +import org.springframework.util.ObjectUtils;, + * @author Rossen Stoyanchev, +	private String allowHeader;, +, +		initAllowHeader();, +		setSupportedMethods(supportedMethods);, +	}, +, +	private void initAllowHeader() {, +		Collection<String> allowedMethods;, +		if (this.supportedMethods == null) {, +			allowedMethods = new ArrayList<String>(HttpMethod.values().length - 1);, +			for (HttpMethod method : HttpMethod.values()) {, +				if (!HttpMethod.TRACE.equals(method)) {, +					allowedMethods.add(method.name());, +				}, +			}, +		}, +		else if (this.supportedMethods.contains(HttpMethod.OPTIONS.name())) {, +			allowedMethods = this.supportedMethods;, +		}, +		else {, +			allowedMethods = new ArrayList<String>(this.supportedMethods);, +			allowedMethods.add(HttpMethod.OPTIONS.name());, +, +		}, +		this.allowHeader = StringUtils.collectionToCommaDelimitedString(allowedMethods);, +		if (!ObjectUtils.isEmpty(methods)) {, +		initAllowHeader();, +	 * Return the "Allow" header value to use in response to an HTTP OPTIONS, +	 * request based on the configured {@link #setSupportedMethods supported, +	 * methods} also automatically adding "OPTIONS" to the list even if not, +	 * present as a supported method. This means sub-classes don't have to, +	 * explicitly list "OPTIONS" as a supported method as long as HTTP OPTIONS, +	 * requests are handled before making a call to, +	 * {@link #checkRequest(HttpServletRequest)}., +	 */, +	protected String getAllowHeader() {, +		return this.allowHeader;, +	}, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/WebContentGenerator.java, +import java.util.ArrayList;, +import java.util.Collection;, +import org.springframework.http.HttpMethod;, +import org.springframework.util.ObjectUtils;, + * @author Rossen Stoyanchev, +	private String allowHeader;, +, +		initAllowHeader();, +		setSupportedMethods(supportedMethods);, +	}, +, +	private void initAllowHeader() {, +		Collection<String> allowedMethods;, +		if (this.supportedMethods == null) {, +			allowedMethods = new ArrayList<String>(HttpMethod.values().length - 1);, +			for (HttpMethod method : HttpMethod.values()) {, +				if (!HttpMethod.TRACE.equals(method)) {, +					allowedMethods.add(method.name());, +				}, +			}, +		}, +		else if (this.supportedMethods.contains(HttpMethod.OPTIONS.name())) {, +			allowedMethods = this.supportedMethods;, +		}, +		else {, +			allowedMethods = new ArrayList<String>(this.supportedMethods);, +			allowedMethods.add(HttpMethod.OPTIONS.name());, +, +		}, +		this.allowHeader = StringUtils.collectionToCommaDelimitedString(allowedMethods);, +		if (!ObjectUtils.isEmpty(methods)) {, +		initAllowHeader();, +	 * Return the "Allow" header value to use in response to an HTTP OPTIONS, +	 * request based on the configured {@link #setSupportedMethods supported, +	 * methods} also automatically adding "OPTIONS" to the list even if not, +	 * present as a supported method. This means sub-classes don't have to, +	 * explicitly list "OPTIONS" as a supported method as long as HTTP OPTIONS, +	 * requests are handled before making a call to, +	 * {@link #checkRequest(HttpServletRequest)}., +	 */, +	protected String getAllowHeader() {, +		return this.allowHeader;, +	}, +, +	/**, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/support/WebContentGeneratorTests.java, +/*, + * Copyright 2002-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *]