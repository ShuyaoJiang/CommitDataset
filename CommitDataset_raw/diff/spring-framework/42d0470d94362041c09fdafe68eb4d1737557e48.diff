[+++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, + * Copyright 2002-2014 the original author or authors., +			if (UriTemplateVariables.SKIP_VALUE.equals(variableValue)) {, +				continue;, +			}, +		public static final Object SKIP_VALUE = UriTemplateVariables.class;, +, +		/**, +		 * Get the value for the given URI variable name., +		 * If the value is {@code null}, an empty String is expanded., +		 * If the value is {@link #SKIP_VALUE}, the URI variable is not expanded., +		 *, +		 * @param name the variable name, +		 * @return the variable value, possibly {@code null} or {@link #SKIP_VALUE}, +		 */, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, + * Copyright 2002-2014 the original author or authors., +			if (UriTemplateVariables.SKIP_VALUE.equals(variableValue)) {, +				continue;, +			}, +		public static final Object SKIP_VALUE = UriTemplateVariables.class;, +, +		/**, +		 * Get the value for the given URI variable name., +		 * If the value is {@code null}, an empty String is expanded., +		 * If the value is {@link #SKIP_VALUE}, the URI variable is not expanded., +		 *, +		 * @param name the variable name, +		 * @return the variable value, possibly {@code null} or {@link #SKIP_VALUE}, +		 */, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +	 * Set all components of this URI builder from the given {@link UriComponents}., +				List<String> segments = uriComponents.getPathSegments();, +				if (segments.isEmpty()) {, +					// Perhaps "/", +					this.pathBuilder.addPath(uriComponents.getPath());, +				}, +				else {, +					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]));, +				}, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, + * Copyright 2002-2014 the original author or authors., +			if (UriTemplateVariables.SKIP_VALUE.equals(variableValue)) {, +				continue;, +			}, +		public static final Object SKIP_VALUE = UriTemplateVariables.class;, +, +		/**, +		 * Get the value for the given URI variable name., +		 * If the value is {@code null}, an empty String is expanded., +		 * If the value is {@link #SKIP_VALUE}, the URI variable is not expanded., +		 *, +		 * @param name the variable name, +		 * @return the variable value, possibly {@code null} or {@link #SKIP_VALUE}, +		 */, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +	 * Set all components of this URI builder from the given {@link UriComponents}., +				List<String> segments = uriComponents.getPathSegments();, +				if (segments.isEmpty()) {, +					// Perhaps "/", +					this.pathBuilder.addPath(uriComponents.getPath());, +				}, +				else {, +					this.pathBuilder.addPathSegments(segments.toArray(new String[segments.size()]));, +				}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java, +		String methodPath = getMethodRequestMapping(method);, +		UriComponentsBuilder builder = ServletUriComponentsBuilder.fromCurrentServletMapping().path(path);, +		UriComponents uriComponents = applyContributors(builder, method, argumentValues);, +, +		return ServletUriComponentsBuilder.newInstance().uriComponents(uriComponents);, +		final Map<String, Object> uriVars = new HashMap<String, Object>();, +, +		// We may not have all URI var values, expand only what we have, +, +		return builder.build().expand(new UriComponents.UriTemplateVariables() {, +			@Override, +			public Object getValue(String name) {, +				return uriVars.containsKey(name) ? uriVars.get(name) : UriComponents.UriTemplateVariables.SKIP_VALUE;, +			}, +		});, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, + * Copyright 2002-2014 the original author or authors., +			if (UriTemplateVariables.SKIP_VALUE.equals(variableValue)) {, +				continue;, +			}, +		public static final Object SKIP_VALUE = UriTemplateVariables.class;, +, +		/**, +		 * Get the value for the given URI variable name., +		 * If the value is {@code null}, an empty String is expanded., +		 * If the value is {@link #SKIP_VALUE}, the URI variable is not expanded., +		 *, +		 * @param name the variable name, +		 * @return the variable value, possibly {@code null} or {@link #SKIP_VALUE}, +		 */, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +	 * Set all components of this URI builder from the given {@link UriComponents}., +				List<String> segments = uriComponents.getPathSegments();, +				if (segments.isEmpty()) {]