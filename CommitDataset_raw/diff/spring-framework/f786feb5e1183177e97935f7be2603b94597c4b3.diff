[+++ b/spring-web/src/main/java/org/springframework/web/util/patterns/CaptureTheRestPathElement.java, +		, +		// If there is more data, it must start with the separator, +		if (candidateIndex<matchingContext.candidateLength &&, +			matchingContext.candidate[candidateIndex] != separator) {, +			return false;, +		}, +++ b/spring-web/src/main/java/org/springframework/web/util/patterns/CaptureTheRestPathElement.java, +		, +		// If there is more data, it must start with the separator, +		if (candidateIndex<matchingContext.candidateLength &&, +			matchingContext.candidate[candidateIndex] != separator) {, +			return false;, +		}, +++ b/spring-web/src/main/java/org/springframework/web/util/patterns/WildcardTheRestPathElement.java, +		// If there is more data, it must start with the separator, +		if (candidateIndex < matchingContext.candidateLength &&, +			matchingContext.candidate[candidateIndex] != separator) {, +			return false;, +		}, +++ b/spring-web/src/main/java/org/springframework/web/util/patterns/CaptureTheRestPathElement.java, +		, +		// If there is more data, it must start with the separator, +		if (candidateIndex<matchingContext.candidateLength &&, +			matchingContext.candidate[candidateIndex] != separator) {, +			return false;, +		}, +++ b/spring-web/src/main/java/org/springframework/web/util/patterns/WildcardTheRestPathElement.java, +		// If there is more data, it must start with the separator, +		if (candidateIndex < matchingContext.candidateLength &&, +			matchingContext.candidate[candidateIndex] != separator) {, +			return false;, +		}, +++ b/spring-web/src/test/java/org/springframework/web/util/patterns/PathPatternMatcherTests.java, +		checkMatches("/resource/{*foobar}", "/resource");, +		checkNoMatch("/resource/{*foobar}", "/resourceX");, +		checkNoMatch("/resource/{*foobar}", "/resourceX/foobar");, +		checkMatches("/resource/{*foobar}", "/resource/foobar");, +		checkCapture("/resource/{*foobar}", "/resource/foobar", "foobar", "/foobar");, +		, +		checkMatches("/resource/**", "/resource");, +		checkNoMatch("/resource/**", "/resourceX");, +		checkNoMatch("/resource/**", "/resourceX/foobar");, +		checkMatches("/resource/**", "/resource/foobar");]