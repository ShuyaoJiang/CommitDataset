[+++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java, +, +import test.beans.IOther;, +import test.beans.ITestBean;, +import test.beans.TestBean;, +import test.beans.subpkg.DeepBean;, +		String expression = "execution(int test.beans.TestBean.getAge())";, +		String matchesTestBean = which + "(test.beans.TestBean)";, +		String matchesIOther = which + "(test.beans.IOther)";, +		String withinBeansPackage = "within(test.beans.";, +		assertEquals(matchSubpackages, withinBeansPc.matches(DeepBean.class));, +				DeepBean.class.getMethod("aMethod", String.class), DeepBean.class));, +		String expression = "execution(void test.beans.TestBean.setSomeNumber(Number)) && args(Double)";, +		String expression = "execution(int test.beans.TestBean.getAge())";, +		String expression = "execution(void test.beans.TestBean.setSomeNumber(Number)) && args(Double)";, +		String expression = "execution(void test.beans.TestBean.setSomeNumber(Number) && args(Double)";, +		String expression = "call(int test.beans.TestBean.getAge())";, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java, +, +import test.beans.IOther;, +import test.beans.ITestBean;, +import test.beans.TestBean;, +import test.beans.subpkg.DeepBean;, +		String expression = "execution(int test.beans.TestBean.getAge())";, +		String matchesTestBean = which + "(test.beans.TestBean)";, +		String matchesIOther = which + "(test.beans.IOther)";, +		String withinBeansPackage = "within(test.beans.";, +		assertEquals(matchSubpackages, withinBeansPc.matches(DeepBean.class));, +				DeepBean.class.getMethod("aMethod", String.class), DeepBean.class));, +		String expression = "execution(void test.beans.TestBean.setSomeNumber(Number)) && args(Double)";, +		String expression = "execution(int test.beans.TestBean.getAge())";, +		String expression = "execution(void test.beans.TestBean.setSomeNumber(Number)) && args(Double)";, +		String expression = "execution(void test.beans.TestBean.setSomeNumber(Number) && args(Double)";, +		String expression = "call(int test.beans.TestBean.getAge())";, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/BeanNamePointcutMatchingTests.java, +, +import test.beans.TestBean;, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java, +, +import test.beans.IOther;, +import test.beans.ITestBean;, +import test.beans.TestBean;, +import test.beans.subpkg.DeepBean;, +		String expression = "execution(int test.beans.TestBean.getAge())";, +		String matchesTestBean = which + "(test.beans.TestBean)";, +		String matchesIOther = which + "(test.beans.IOther)";, +		String withinBeansPackage = "within(test.beans.";, +		assertEquals(matchSubpackages, withinBeansPc.matches(DeepBean.class));, +				DeepBean.class.getMethod("aMethod", String.class), DeepBean.class));, +		String expression = "execution(void test.beans.TestBean.setSomeNumber(Number)) && args(Double)";, +		String expression = "execution(int test.beans.TestBean.getAge())";, +		String expression = "execution(void test.beans.TestBean.setSomeNumber(Number)) && args(Double)";, +		String expression = "execution(void test.beans.TestBean.setSomeNumber(Number) && args(Double)";, +		String expression = "call(int test.beans.TestBean.getAge())";, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/BeanNamePointcutMatchingTests.java, +, +import test.beans.TestBean;, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/MethodInvocationProceedingJoinPointTests.java, +, +import test.beans.ITestBean;, +import test.beans.TestBean;, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java, +, +import test.beans.IOther;, +import test.beans.ITestBean;, +import test.beans.TestBean;, +import test.beans.subpkg.DeepBean;, +		String expression = "execution(int test.beans.TestBean.getAge())";, +		String matchesTestBean = which + "(test.beans.TestBean)";, +		String matchesIOther = which + "(test.beans.IOther)";, +		String withinBeansPackage = "within(test.beans.";, +		assertEquals(matchSubpackages, withinBeansPc.matches(DeepBean.class));, +				DeepBean.class.getMethod("aMethod", String.class), DeepBean.class));, +		String expression = "execution(void test.beans.TestBean.setSomeNumber(Number)) && args(Double)";, +		String expression = "execution(int test.beans.TestBean.getAge())";, +		String expression = "execution(void test.beans.TestBean.setSomeNumber(Number)) && args(Double)";, +		String expression = "execution(void test.beans.TestBean.setSomeNumber(Number) && args(Double)";, +		String expression = "call(int test.beans.TestBean.getAge())";, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/BeanNamePointcutMatchingTests.java, +, +import test.beans.TestBean;, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/MethodInvocationProceedingJoinPointTests.java, +, +import test.beans.ITestBean;, +import test.beans.TestBean;, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/TigerAspectJExpressionPointcutTests.java, +import test.beans.TestBean;, +		String expression = "execution(* set*(java.util.List<test.beans.TestBean>) )";, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java, +, +import test.beans.IOther;, +import test.beans.ITestBean;, +import test.beans.TestBean;, +import test.beans.subpkg.DeepBean;, +		String expression = "execution(int test.beans.TestBean.getAge())";, +		String matchesTestBean = which + "(test.beans.TestBean)";, +		String matchesIOther = which + "(test.beans.IOther)";, +		String withinBeansPackage = "within(test.beans.";, +		assertEquals(matchSubpackages, withinBeansPc.matches(DeepBean.class));, +				DeepBean.class.getMethod("aMethod", String.class), DeepBean.class));]