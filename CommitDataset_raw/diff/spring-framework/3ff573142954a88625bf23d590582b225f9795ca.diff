[+++ b/spring-web/src/main/java/org/springframework/web/server/adapter/WebHttpHandlerBuilder.java, +		List<WebFilter> webFilters = context, +				.getBeanProvider(WebFilter.class), +				.orderedStream(), +				.collect(Collectors.toList());, +		builder.filters(filters -> filters.addAll(webFilters));, +		List<WebExceptionHandler> exceptionHandlers = context, +				.getBeanProvider(WebExceptionHandler.class), +				.orderedStream(), +				.collect(Collectors.toList());, +		builder.exceptionHandlers(handlers -> handlers.addAll(exceptionHandlers));, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/WebHttpHandlerBuilder.java, +		List<WebFilter> webFilters = context, +				.getBeanProvider(WebFilter.class), +				.orderedStream(), +				.collect(Collectors.toList());, +		builder.filters(filters -> filters.addAll(webFilters));, +		List<WebExceptionHandler> exceptionHandlers = context, +				.getBeanProvider(WebExceptionHandler.class), +				.orderedStream(), +				.collect(Collectors.toList());, +		builder.exceptionHandlers(handlers -> handlers.addAll(exceptionHandlers));, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/RouterFunctionMapping.java, +import java.util.stream.Collectors;, +		List<RouterFunction<?>> functions = this.getApplicationContext(), +				.getBeanProvider(RouterFunction.class), +				.orderedStream(), +				.map(router -> (RouterFunction<?>)router), +				.collect(Collectors.toList());]