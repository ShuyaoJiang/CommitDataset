[+++ b/spring-tx/src/main/java/org/springframework/transaction/annotation/Transactional.java, + * Describes a transaction attribute on an individual method or on a class., + *, + * <p>At the class level, this annotation applies as a default to all methods of, + * the declaring class and its subclasses. Note that it does not apply to ancestor, + * classes up the class hierarchy; methods need to be locally redeclared in order, + * to participate in a subclass-level annotation., +++ b/spring-tx/src/main/java/org/springframework/transaction/annotation/Transactional.java, + * Describes a transaction attribute on an individual method or on a class., + *, + * <p>At the class level, this annotation applies as a default to all methods of, + * the declaring class and its subclasses. Note that it does not apply to ancestor, + * classes up the class hierarchy; methods need to be locally redeclared in order, + * to participate in a subclass-level annotation., +++ b/src/docs/asciidoc/data-access.adoc, +Used at the class level as above, the annotation indicates a default for all methods, +of the declaring class (as well as its subclasses). Alternatively, each method can, +get annotated individually. Note that a class-level annotation does not apply to, +ancestor classes up the class hierarchy; in such a scenario, methods need to be, +locally redeclared in order to participate in a subclass-level annotation., +, +When a POJO class such as the one above is defined as a bean in a Spring context,, +you can make the bean instance transactional through an `@EnableTransactionManagement`, +annotation in a `@Configuration` class. See the, +{api-spring-framework}/transaction/annotation/EnableTransactionManagement.html[javadoc], +for full details., +, +In XML configuration, the `<tx:annotation-driven/>` tag provides similar convenience:, +, +You can apply the `@Transactional` annotation to an interface definition, a method, +transactional behavior. The `@Transactional` annotation is merely metadata that can, +be consumed by some runtime infrastructure that is `@Transactional`-aware and that, +can use the metadata to configure the appropriate beans with transactional behavior., +In the preceding example, the `<tx:annotation-driven/>` element switches on the, +aspect (`mode="aspectj"`), the transaction settings are not recognized by the proxying, +and weaving infrastructure, and the object is not wrapped in a transactional proxy.]