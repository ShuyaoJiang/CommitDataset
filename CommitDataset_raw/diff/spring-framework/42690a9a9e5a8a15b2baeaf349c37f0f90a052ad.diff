[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DerbyEmbeddedDatabaseConfigurer.java, + * Copyright 2002-2014 the original author or authors., + * <p>Call {@link #getInstance()} to get the singleton instance of this class., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DerbyEmbeddedDatabaseConfigurer.java, + * Copyright 2002-2014 the original author or authors., + * <p>Call {@link #getInstance()} to get the singleton instance of this class., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabase.java, + * Copyright 2002-2014 the original author or authors., + * {@code EmbeddedDatabase} serves as a handle to an embedded database instance., + *, + * <p>An {@code EmbeddedDatabase} is also a {@link DataSource} and adds a, + * {@link #shutdown} operation so that the embedded database instance can be, + * shutdown., + * @author Sam Brannen, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DerbyEmbeddedDatabaseConfigurer.java, + * Copyright 2002-2014 the original author or authors., + * <p>Call {@link #getInstance()} to get the singleton instance of this class., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabase.java, + * Copyright 2002-2014 the original author or authors., + * {@code EmbeddedDatabase} serves as a handle to an embedded database instance., + *, + * <p>An {@code EmbeddedDatabase} is also a {@link DataSource} and adds a, + * {@link #shutdown} operation so that the embedded database instance can be, + * shutdown., + * @author Sam Brannen, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.java, + * <h3>Usage Example</h3>, +	 * <p>Defaults to {@link EmbeddedDatabaseFactory#DEFAULT_DATABASE_NAME} if, +	 * not called., +	 * @return {@code this}, to facilitate method chaining, +	 * @return {@code this}, to facilitate method chaining, +	 * Add an SQL script to execute to initialize or populate the database., +	 * @return {@code this}, to facilitate method chaining, +	 * <p>The default scripts are {@code "schema.sql"} to create the database, +	 * schema and {@code "data.sql"} to populate the database with data., +	 * @return {@code this}, to facilitate method chaining, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DerbyEmbeddedDatabaseConfigurer.java, + * Copyright 2002-2014 the original author or authors., + * <p>Call {@link #getInstance()} to get the singleton instance of this class., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabase.java, + * Copyright 2002-2014 the original author or authors., + * {@code EmbeddedDatabase} serves as a handle to an embedded database instance., + *, + * <p>An {@code EmbeddedDatabase} is also a {@link DataSource} and adds a, + * {@link #shutdown} operation so that the embedded database instance can be, + * shutdown., + * @author Sam Brannen, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.java, + * <h3>Usage Example</h3>, +	 * <p>Defaults to {@link EmbeddedDatabaseFactory#DEFAULT_DATABASE_NAME} if, +	 * not called., +	 * @return {@code this}, to facilitate method chaining, +	 * @return {@code this}, to facilitate method chaining, +	 * Add an SQL script to execute to initialize or populate the database., +	 * @return {@code this}, to facilitate method chaining, +	 * <p>The default scripts are {@code "schema.sql"} to create the database, +	 * schema and {@code "data.sql"} to populate the database with data., +	 * @return {@code this}, to facilitate method chaining, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseConfigurerFactory.java, + * Copyright 2002-2014 the original author or authors., + * Maps well-known {@linkplain EmbeddedDatabaseType embedded database types} to, + * @author Sam Brannen, +					throw new UnsupportedOperationException("Embedded database type [" + type + "] is not supported");, +		/* no-op */, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DerbyEmbeddedDatabaseConfigurer.java, + * Copyright 2002-2014 the original author or authors., + * <p>Call {@link #getInstance()} to get the singleton instance of this class., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabase.java, + * Copyright 2002-2014 the original author or authors., + * {@code EmbeddedDatabase} serves as a handle to an embedded database instance., + *, + * <p>An {@code EmbeddedDatabase} is also a {@link DataSource} and adds a, + * {@link #shutdown} operation so that the embedded database instance can be, + * shutdown., + * @author Sam Brannen, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.java, + * <h3>Usage Example</h3>, +	 * <p>Defaults to {@link EmbeddedDatabaseFactory#DEFAULT_DATABASE_NAME} if, +	 * not called., +	 * @return {@code this}, to facilitate method chaining, +	 * @return {@code this}, to facilitate method chaining, +	 * Add an SQL script to execute to initialize or populate the database., +	 * @return {@code this}, to facilitate method chaining, +	 * <p>The default scripts are {@code "schema.sql"} to create the database, +	 * schema and {@code "data.sql"} to populate the database with data., +	 * @return {@code this}, to facilitate method chaining, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseConfigurerFactory.java, + * Copyright 2002-2014 the original author or authors., + * Maps well-known {@linkplain EmbeddedDatabaseType embedded database types} to, + * @author Sam Brannen, +					throw new UnsupportedOperationException("Embedded database type [" + type + "] is not supported");, +		/* no-op */, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.java, +, + * Factory for creating {@link EmbeddedDatabase} instances., + *, + * <p>Callers are guaranteed that a returned database has been fully initialized, + * and populated., + * of {@link DataSource} used to connect to the database., + * <p>Call {@link #getDatabase()} to get the {@link EmbeddedDatabase} instance.]