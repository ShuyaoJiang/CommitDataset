[+++ b/spring-context/src/main/java/org/springframework/context/expression/MethodBasedEvaluationContext.java, +			for (int i = 0; i < args.length; i++) {, +++ b/spring-context/src/main/java/org/springframework/context/expression/MethodBasedEvaluationContext.java, +			for (int i = 0; i < args.length; i++) {, +++ b/spring-context/src/test/java/org/springframework/context/expression/MethodBasedEvaluationContextTests.java, +	@Test, +	public void varArgEmpty() {, +		Method method = ReflectionUtils.findMethod(SampleMethods.class, "hello", Boolean.class, String[].class);, +		MethodBasedEvaluationContext context = createEvaluationContext(method, new Object[] {null});, +, +		assertNull(context.lookupVariable("p0"));, +		assertNull(context.lookupVariable("p1"));, +	}, +, +	@Test, +	public void varArgNull() {, +		Method method = ReflectionUtils.findMethod(SampleMethods.class, "hello", Boolean.class, String[].class);, +		MethodBasedEvaluationContext context = createEvaluationContext(method, new Object[] {null, null});, +, +		assertNull(context.lookupVariable("p0"));, +		assertNull(context.lookupVariable("p1"));, +	}, +, +	@Test, +	public void varArgSingle() {, +		Method method = ReflectionUtils.findMethod(SampleMethods.class, "hello", Boolean.class, String[].class);, +		MethodBasedEvaluationContext context = createEvaluationContext(method, new Object[] {null, "hello"});, +, +		assertNull(context.lookupVariable("p0"));, +		assertEquals("hello", context.lookupVariable("p1"));, +	}, +, +	@Test, +	public void varArgMultiple() {, +		Method method = ReflectionUtils.findMethod(SampleMethods.class, "hello", Boolean.class, String[].class);, +		MethodBasedEvaluationContext context = createEvaluationContext(method, new Object[] {null, new String[]{"hello", "hi"}});, +, +		assertNull(context.lookupVariable("p0"));, +		assertNotNull(context.lookupVariable("p1"));, +	}, +, +		private void hello(Boolean flag, String ... vararg){, +, +		}]