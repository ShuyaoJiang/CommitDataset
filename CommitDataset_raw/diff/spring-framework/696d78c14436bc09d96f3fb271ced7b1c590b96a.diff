[+++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/IfProfileValue.java, + * Note: <code>&#064;IfProfileValue</code> can be applied at the class level,, + * the method level, or both. <code>&#064;IfProfileValue</code> at the class, + * level overrides method-level usage of <code>&#064;IfProfileValue</code> for, + * any methods within that class., +	 * The <code>name</code> of the <em>profile value</em> against which to, +	 * test., +	 * <p>, +	 * Note: Assigning values to both {@link #value()} and {@link #values()}, +	 * <p>, +	 * Note: Assigning values to both {@link #value()} and {@link #values()}, +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/IfProfileValue.java, + * Note: <code>&#064;IfProfileValue</code> can be applied at the class level,, + * the method level, or both. <code>&#064;IfProfileValue</code> at the class, + * level overrides method-level usage of <code>&#064;IfProfileValue</code> for, + * any methods within that class., +	 * The <code>name</code> of the <em>profile value</em> against which to, +	 * test., +	 * <p>, +	 * Note: Assigning values to both {@link #value()} and {@link #values()}, +	 * <p>, +	 * Note: Assigning values to both {@link #value()} and {@link #values()}, +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/ProfileValueUtils.java, + * Copyright 2002-2009 the original author or authors., +	 * {@link ProfileValueSourceConfiguration, +	 * &#064;ProfileValueSourceConfiguration} annotation and instantiates a new, +	 * instance of that type., +	 * If {@link ProfileValueSourceConfiguration, +	 * &#064;ProfileValueSourceConfiguration} is not present on the specified, +	 * class or if a custom {@link ProfileValueSource} is not declared, the, +	 * default {@link SystemProfileValueSource} will be returned instead., +	 * Determine if the supplied <code>testClass</code> is <em>enabled</em> in, +	 * the current environment, as specified by the {@link IfProfileValue, +	 * &#064;IfProfileValue} annotation at the class level., +	 * Defaults to <code>true</code> if no {@link IfProfileValue, +	 * &#064;IfProfileValue} annotation is declared., +	 * @return <code>true</code> if the test is <em>enabled</em> in the current, +	 * environment, +		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), ifProfileValue);, +	 * Determine if the supplied <code>testMethod</code> is <em>enabled</em> in, +	 * the current environment, as specified by the {@link IfProfileValue, +	 * &#064;IfProfileValue} annotation, which may be declared on the test, +	 * method itself or at the class level. Class-level usage overrides, +	 * method-level usage., +	 * Defaults to <code>true</code> if no {@link IfProfileValue, +	 * &#064;IfProfileValue} annotation is declared., +	 * @return <code>true</code> if the test is <em>enabled</em> in the current, +	 * environment, +		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), testMethod, testClass);, +	 * Determine if the supplied <code>testMethod</code> is <em>enabled</em> in, +	 * the current environment, as specified by the {@link IfProfileValue, +	 * &#064;IfProfileValue} annotation, which may be declared on the test, +	 * method itself or at the class level. Class-level usage overrides, +	 * method-level usage., +	 * Defaults to <code>true</code> if no {@link IfProfileValue, +	 * &#064;IfProfileValue} annotation is declared., +	 * @return <code>true</code> if the test is <em>enabled</em> in the current, +	 * environment, +		IfProfileValue ifProfileValue = testClass.getAnnotation(IfProfileValue.class);, +		boolean classLevelEnabled = isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue);, +, +		if (classLevelEnabled) {, +			ifProfileValue = testMethod.getAnnotation(IfProfileValue.class);, +		return false;, +	}, +, +	 * in the supplied {@link IfProfileValue &#064;IfProfileValue} annotation is, +	 * @param ifProfileValue the annotation to introspect; may be, +	 * <code>null</code>, +	 * @return <code>true</code> if the test is <em>enabled</em> in the current, +	 * environment or if the supplied <code>ifProfileValue</code> is, +	 * <code>null</code>, +		if (ifProfileValue == null) {, +			return true;, +		}, +, +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/IfProfileValue.java, + * Note: <code>&#064;IfProfileValue</code> can be applied at the class level,, + * the method level, or both. <code>&#064;IfProfileValue</code> at the class, + * level overrides method-level usage of <code>&#064;IfProfileValue</code> for, + * any methods within that class., +	 * The <code>name</code> of the <em>profile value</em> against which to, +	 * test., +	 * <p>, +	 * Note: Assigning values to both {@link #value()} and {@link #values()}, +	 * <p>, +	 * Note: Assigning values to both {@link #value()} and {@link #values()}, +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/ProfileValueUtils.java, + * Copyright 2002-2009 the original author or authors., +	 * {@link ProfileValueSourceConfiguration, +	 * &#064;ProfileValueSourceConfiguration} annotation and instantiates a new, +	 * instance of that type., +	 * If {@link ProfileValueSourceConfiguration, +	 * &#064;ProfileValueSourceConfiguration} is not present on the specified, +	 * class or if a custom {@link ProfileValueSource} is not declared, the, +	 * default {@link SystemProfileValueSource} will be returned instead., +	 * Determine if the supplied <code>testClass</code> is <em>enabled</em> in, +	 * the current environment, as specified by the {@link IfProfileValue, +	 * &#064;IfProfileValue} annotation at the class level., +	 * Defaults to <code>true</code> if no {@link IfProfileValue]