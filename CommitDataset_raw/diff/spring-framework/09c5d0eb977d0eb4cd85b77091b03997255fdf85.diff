[+++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binding.java, +import org.springframework.ui.alert.Severity;, +	 * The value to display in the UI., +	 * Is the formatted model value if {@link BindingStatus#CLEAN} or {@link BindingStatus#COMMITTED}., +	 * Is the formatted buffered value if {@link BindingStatus#DIRTY} or {@link BindingStatus#COMMIT_FAILURE}., +	 * Is the source value if {@link BindingStatus#INVALID_SOURCE_VALUE}., +	 * The source value is parsed and stored in the binding's value buffer., +	 * Sets to {@link BindingStatus#DIRTY} if succeeds., +	 * Sets to {@link BindingStatus#INVALID_SOURCE_VALUE} if fails., +	 * The current binding status., +	 * Initially {@link BindingStatus#CLEAN clean}., +	 * Is {@link BindingStatus#DIRTY} after applying a source value to the value buffer., +	 * Is {@link BindingStatus#COMMITTED} after successfully committing the buffered value., +	 * Is {@link BindingStatus#INVALID_SOURCE_VALUE} if a source value could not be applied., +	 * Is {@link BindingStatus#COMMIT_FAILURE} if a buffered value could not be committed., +	BindingStatus getStatus();, +	 * An alert that communicates the details of a BindingStatus change to the user., +	 * Returns <code>null</code> if the BindingStatus has never changed., +	 * Returns a {@link Severity#INFO} Alert with code <code>bindSuccess</code> after a successful commit., +	 * Returns a {@link Severity#ERROR} Alert with code <code>typeMismatch</code> if the source value could not be converted to type required by the Model., +	 * Returns a {@link Severity#FATAL} Alert with code <code>internalError</code> if the buffered value could not be committed due to a unexpected runtime exception., +	Alert getStatusAlert();, +	 * Sets to {@link BindingStatus#CLEAN} if succeeds., +	 * Sets to {@link BindingStatus#COMMIT_FAILURE} if fails., +	 * @throws IllegalStateException if not {@link BindingStatus#DIRTY} or read-only, +	, +	/**, +	 * The states of a Binding., +	 * @author Keith Donald, +	 */, +	public enum BindingStatus {, +		, +		/**, +		 * Initial state: No value is buffered, and there is a direct channel to the model value., +		 */, +		CLEAN,, +		, +		/**, +		 * An invalid source value is applied., +		 */, +		INVALID_SOURCE_VALUE,, +		, +		/**, +		 * The binding buffer contains a valid value that has not been committed., +		 */, +		DIRTY,, +, +		/**, +		 * The buffered value has been committed., +		 */, +		COMMITTED,, +		, +		/**, +		 * The buffered value failed to commit., +		 */, +		COMMIT_FAILURE, +	}, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binding.java, +import org.springframework.ui.alert.Severity;, +	 * The value to display in the UI., +	 * Is the formatted model value if {@link BindingStatus#CLEAN} or {@link BindingStatus#COMMITTED}., +	 * Is the formatted buffered value if {@link BindingStatus#DIRTY} or {@link BindingStatus#COMMIT_FAILURE}., +	 * Is the source value if {@link BindingStatus#INVALID_SOURCE_VALUE}., +	 * The source value is parsed and stored in the binding's value buffer., +	 * Sets to {@link BindingStatus#DIRTY} if succeeds., +	 * Sets to {@link BindingStatus#INVALID_SOURCE_VALUE} if fails., +	 * The current binding status., +	 * Initially {@link BindingStatus#CLEAN clean}., +	 * Is {@link BindingStatus#DIRTY} after applying a source value to the value buffer., +	 * Is {@link BindingStatus#COMMITTED} after successfully committing the buffered value., +	 * Is {@link BindingStatus#INVALID_SOURCE_VALUE} if a source value could not be applied., +	 * Is {@link BindingStatus#COMMIT_FAILURE} if a buffered value could not be committed., +	BindingStatus getStatus();, +	 * An alert that communicates the details of a BindingStatus change to the user., +	 * Returns <code>null</code> if the BindingStatus has never changed., +	 * Returns a {@link Severity#INFO} Alert with code <code>bindSuccess</code> after a successful commit., +	 * Returns a {@link Severity#ERROR} Alert with code <code>typeMismatch</code> if the source value could not be converted to type required by the Model., +	 * Returns a {@link Severity#FATAL} Alert with code <code>internalError</code> if the buffered value could not be committed due to a unexpected runtime exception., +	Alert getStatusAlert();, +	 * Sets to {@link BindingStatus#CLEAN} if succeeds., +	 * Sets to {@link BindingStatus#COMMIT_FAILURE} if fails., +	 * @throws IllegalStateException if not {@link BindingStatus#DIRTY} or read-only, +	, +	/**, +	 * The states of a Binding., +	 * @author Keith Donald, +	 */, +	public enum BindingStatus {, +		, +		/**, +		 * Initial state: No value is buffered, and there is a direct channel to the model value., +		 */, +		CLEAN,, +		, +		/**, +		 * An invalid source value is applied., +		 */, +		INVALID_SOURCE_VALUE,, +		, +		/**]