[+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, +	static final String[] DEFAULT_ORIGIN = { "*" };, +	static final String[] DEFAULT_ALLOWED_HEADERS = { "*" };, +	static final boolean DEFAULT_ALLOW_CREDENTIALS = true;, +	static final long DEFAULT_MAX_AGE = 1800;, +	 * Alias for {@link #origins}., +	@AliasFor(attribute = "origins"), +	String[] origins() default {};, +	RequestMethod[] methods() default {};, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, +	static final String[] DEFAULT_ORIGIN = { "*" };, +	static final String[] DEFAULT_ALLOWED_HEADERS = { "*" };, +	static final boolean DEFAULT_ALLOW_CREDENTIALS = true;, +	static final long DEFAULT_MAX_AGE = 1800;, +	 * Alias for {@link #origins}., +	@AliasFor(attribute = "origins"), +	String[] origins() default {};, +	RequestMethod[] methods() default {};, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java, +		for (String origin : annotation.origins()) {, +		for (RequestMethod method : annotation.methods()) {, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, +	static final String[] DEFAULT_ORIGIN = { "*" };, +	static final String[] DEFAULT_ALLOWED_HEADERS = { "*" };, +	static final boolean DEFAULT_ALLOW_CREDENTIALS = true;, +	static final long DEFAULT_MAX_AGE = 1800;, +	 * Alias for {@link #origins}., +	@AliasFor(attribute = "origins"), +	String[] origins() default {};, +	RequestMethod[] methods() default {};, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java, +		for (String origin : annotation.origins()) {, +		for (RequestMethod method : annotation.methods()) {, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/CrossOriginTests.java, +	private final TestRequestMappingInfoHandlerMapping handlerMapping = new TestRequestMappingInfoHandlerMapping();, +, +	private final MockHttpServletRequest request = new MockHttpServletRequest();, +, +		@CrossOrigin(origins = { "http://site1.com", "http://site2.com" }, allowedHeaders = { "header1", "header2" },, +				exposedHeaders = { "header3", "header4" }, methods = RequestMethod.DELETE, maxAge = 123, allowCredentials = "false")]