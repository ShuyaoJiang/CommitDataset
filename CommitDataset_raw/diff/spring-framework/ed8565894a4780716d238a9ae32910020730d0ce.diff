[+++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageConversionException.java, +import org.springframework.http.HttpStatus;, +, +import java.util.Optional;, + * @author Sebastien Deleuze, +	private final HttpStatus errorStatus;, +, +		this.errorStatus = null;, +		this.errorStatus = null;, +	/**, +	 * Create a new HttpMessageConversionException., +	 * @since 5.0, +	 * @param msg the detail message, +	 * @param cause the root cause (if any), +	 * @param errorStatus the HTTP error status related to this exception, +	 */, +	public HttpMessageConversionException(String msg, Throwable cause, HttpStatus errorStatus) {, +		super(msg, cause);, +		this.errorStatus = errorStatus;, +	}, +, +	/**, +	 * Return the HTTP error status related to this exception if any., +	 */, +	public Optional<HttpStatus> getErrorStatus() {, +		return Optional.ofNullable(errorStatus);, +	}, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageConversionException.java, +import org.springframework.http.HttpStatus;, +, +import java.util.Optional;, + * @author Sebastien Deleuze, +	private final HttpStatus errorStatus;, +, +		this.errorStatus = null;, +		this.errorStatus = null;, +	/**, +	 * Create a new HttpMessageConversionException., +	 * @since 5.0, +	 * @param msg the detail message, +	 * @param cause the root cause (if any), +	 * @param errorStatus the HTTP error status related to this exception, +	 */, +	public HttpMessageConversionException(String msg, Throwable cause, HttpStatus errorStatus) {, +		super(msg, cause);, +		this.errorStatus = errorStatus;, +	}, +, +	/**, +	 * Return the HTTP error status related to this exception if any., +	 */, +	public Optional<HttpStatus> getErrorStatus() {, +		return Optional.ofNullable(errorStatus);, +	}, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageNotReadableException.java, +import org.springframework.http.HttpStatus;, +, +	/**, +	 * Create a new HttpMessageNotReadableException., +	 * @since 5.0, +	 * @param msg the detail message, +	 * @param cause the root cause (if any), +	 * @param errorStatus the HTTP error status related to this exception, +	 */, +	public HttpMessageNotReadableException(String msg, Throwable cause, HttpStatus errorStatus) {, +		super(msg, cause, errorStatus);, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageConversionException.java, +import org.springframework.http.HttpStatus;, +, +import java.util.Optional;, + * @author Sebastien Deleuze, +	private final HttpStatus errorStatus;, +, +		this.errorStatus = null;, +		this.errorStatus = null;, +	/**, +	 * Create a new HttpMessageConversionException., +	 * @since 5.0, +	 * @param msg the detail message, +	 * @param cause the root cause (if any), +	 * @param errorStatus the HTTP error status related to this exception, +	 */, +	public HttpMessageConversionException(String msg, Throwable cause, HttpStatus errorStatus) {, +		super(msg, cause);, +		this.errorStatus = errorStatus;, +	}, +, +	/**, +	 * Return the HTTP error status related to this exception if any., +	 */, +	public Optional<HttpStatus> getErrorStatus() {, +		return Optional.ofNullable(errorStatus);, +	}, +++ b/spring-web/src/main/java/org/springframework/http/converter/HttpMessageNotReadableException.java, +import org.springframework.http.HttpStatus;, +, +	/**, +	 * Create a new HttpMessageNotReadableException.]