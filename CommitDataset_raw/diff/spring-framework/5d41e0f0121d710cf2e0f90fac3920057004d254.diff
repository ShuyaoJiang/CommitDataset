[+++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +		return (str != null && prefix != null && str.length() >= prefix.length() &&, +				str.regionMatches(true, 0, prefix, 0, prefix.length()));, +		return (str != null && suffix != null && str.length() >= suffix.length() &&, +				str.regionMatches(true, str.length() - suffix.length(), suffix, 0, suffix.length()));, +		if (index + substring.length() > str.length()) {, +			return false;, +		}, +		for (int i = 0; i < substring.length(); i++) {, +			if (str.charAt(index + i) != substring.charAt(i)) {, +++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +		return (str != null && prefix != null && str.length() >= prefix.length() &&, +				str.regionMatches(true, 0, prefix, 0, prefix.length()));, +		return (str != null && suffix != null && str.length() >= suffix.length() &&, +				str.regionMatches(true, str.length() - suffix.length(), suffix, 0, suffix.length()));, +		if (index + substring.length() > str.length()) {, +			return false;, +		}, +		for (int i = 0; i < substring.length(); i++) {, +			if (str.charAt(index + i) != substring.charAt(i)) {, +++ b/spring-core/src/test/java/org/springframework/util/StringUtilsTests.java, +	public void testStartsWithIgnoreCase() {, +		String suffix = "fOo";, +		assertTrue(StringUtils.startsWithIgnoreCase("foo", suffix));, +		assertTrue(StringUtils.startsWithIgnoreCase("Foo", suffix));, +		assertTrue(StringUtils.startsWithIgnoreCase("foobar", suffix));, +		assertTrue(StringUtils.startsWithIgnoreCase("foobarbar", suffix));, +		assertTrue(StringUtils.startsWithIgnoreCase("Foobar", suffix));, +		assertTrue(StringUtils.startsWithIgnoreCase("FoobarBar", suffix));, +		assertTrue(StringUtils.startsWithIgnoreCase("foObar", suffix));, +		assertTrue(StringUtils.startsWithIgnoreCase("FOObar", suffix));, +		assertTrue(StringUtils.startsWithIgnoreCase("fOobar", suffix));, +		assertFalse(StringUtils.startsWithIgnoreCase(null, suffix));, +		assertFalse(StringUtils.startsWithIgnoreCase("fOobar", null));, +		assertFalse(StringUtils.startsWithIgnoreCase("b", suffix));, +	}, +, +	@Test, +	public void testEndsWithIgnoreCase() {, +		String suffix = "fOo";, +		assertTrue(StringUtils.endsWithIgnoreCase("foo", suffix));, +		assertTrue(StringUtils.endsWithIgnoreCase("Foo", suffix));, +		assertTrue(StringUtils.endsWithIgnoreCase("barfoo", suffix));, +		assertTrue(StringUtils.endsWithIgnoreCase("barbarfoo", suffix));, +		assertTrue(StringUtils.endsWithIgnoreCase("barFoo", suffix));, +		assertTrue(StringUtils.endsWithIgnoreCase("barBarFoo", suffix));, +		assertTrue(StringUtils.endsWithIgnoreCase("barfoO", suffix));, +		assertTrue(StringUtils.endsWithIgnoreCase("barFOO", suffix));, +		assertTrue(StringUtils.endsWithIgnoreCase("barfOo", suffix));, +		assertFalse(StringUtils.endsWithIgnoreCase(null, suffix));, +		assertFalse(StringUtils.endsWithIgnoreCase("barfOo", null));, +		assertFalse(StringUtils.endsWithIgnoreCase("b", suffix));, +	}, +, +	@Test, +	public void testSubstringMatch() {, +		assertTrue(StringUtils.substringMatch("foo", 0, "foo"));, +		assertTrue(StringUtils.substringMatch("foo", 1, "oo"));, +		assertTrue(StringUtils.substringMatch("foo", 2, "o"));, +		assertFalse(StringUtils.substringMatch("foo", 0, "fOo"));, +		assertFalse(StringUtils.substringMatch("foo", 1, "fOo"));, +		assertFalse(StringUtils.substringMatch("foo", 2, "fOo"));, +		assertFalse(StringUtils.substringMatch("foo", 3, "fOo"));, +		assertFalse(StringUtils.substringMatch("foo", 1, "Oo"));, +		assertFalse(StringUtils.substringMatch("foo", 2, "Oo"));, +		assertFalse(StringUtils.substringMatch("foo", 3, "Oo"));, +		assertFalse(StringUtils.substringMatch("foo", 2, "O"));, +		assertFalse(StringUtils.substringMatch("foo", 3, "O"));, +	}, +, +	@Test]