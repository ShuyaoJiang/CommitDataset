[+++ b/spring-web-reactive/src/main/java/org/springframework/http/converter/reactive/CodecHttpMessageConverter.java, + * @author Sebastien Deleuze, +			MediaType contentTypeToUse = contentType;, +			if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) {, +				contentTypeToUse = getDefaultContentType(type);, +			}, +			headers.setContentType(contentTypeToUse);, +, +	/**, +	 * Returns the default content type for the given type. Called when {@link #write}, +	 * is invoked without a specified content type parameter., +	 * <p>By default, this returns a {@link MediaType} created using the first element of, +	 * the encoder {@link Encoder#getEncodableMimeTypes() encodableMimeTypes} property, if any., +	 * Can be overridden in subclasses., +	 * @param type the type to return the content type for, +	 * @return the content type, or {@code null} if not known, +	 */, +	protected MediaType getDefaultContentType(ResolvableType type) {, +		return (!this.writableMediaTypes.isEmpty() ? this.writableMediaTypes.get(0) : null);, +	}]