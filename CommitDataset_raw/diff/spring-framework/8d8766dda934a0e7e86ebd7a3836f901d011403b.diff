[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/form/SelectTag.java, + * Copyright 2002-2014 the original author or authors., +		if (multiple != null && (Boolean.TRUE.equals(multiple) ||, +				Boolean.parseBoolean(multiple.toString()) || "multiple".equals(multiple))) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/form/SelectTag.java, + * Copyright 2002-2014 the original author or authors., +		if (multiple != null && (Boolean.TRUE.equals(multiple) ||, +				Boolean.parseBoolean(multiple.toString()) || "multiple".equals(multiple))) {, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/tags/form/SelectTagTests.java, +			assertTrue(message.contains("items"));, +			assertTrue(message.contains("org.springframework.tests.sample.beans.TestBean"));, +	public void testMultiForCollection() throws Exception {, +	public void testMultiExplicit() throws Exception {, +		this.tag.setPath("name");, +		this.tag.setItems(Country.getCountries());, +		this.tag.setItemValue("isoCode");, +		this.tag.setMultiple("true");, +		int result = this.tag.doStartTag();, +		assertEquals(Tag.SKIP_BODY, result);, +, +		String output = getOutput();, +		output = "<doc>" + output + "</doc>";, +, +		SAXReader reader = new SAXReader();, +		Document document = reader.read(new StringReader(output));, +		Element rootElement = document.getRootElement();, +		assertEquals(2, rootElement.elements().size());, +, +		Element selectElement = rootElement.element("select");, +		assertEquals("select", selectElement.getName());, +		assertEquals("name", selectElement.attribute("name").getValue());, +		assertEquals("multiple", selectElement.attribute("multiple").getValue());, +, +		List children = selectElement.elements();, +		assertEquals("Incorrect number of children", 4, children.size());, +, +		Element inputElement = rootElement.element("input");, +		assertNotNull(inputElement);, +	}, +]