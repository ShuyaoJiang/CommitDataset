[+++ b/org.springframework.web/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/javax.portlet/com.springsource.javax.portlet/2.0.0/com.springsource.javax.portlet-2.0.0.jar"/>, +++ b/org.springframework.web/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/javax.portlet/com.springsource.javax.portlet/2.0.0/com.springsource.javax.portlet-2.0.0.jar"/>, +++ b/org.springframework.web/ivy.xml, +		<dependency org="javax.portlet" name="com.springsource.javax.portlet" rev="2.0.0" conf="provided->compile"/>, +++ b/org.springframework.web/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/javax.portlet/com.springsource.javax.portlet/2.0.0/com.springsource.javax.portlet-2.0.0.jar"/>, +++ b/org.springframework.web/ivy.xml, +		<dependency org="javax.portlet" name="com.springsource.javax.portlet" rev="2.0.0" conf="provided->compile"/>, +++ b/org.springframework.web/pom.xml, +      <groupId>javax.portlet</groupId>, +      <artifactId>portlet-api</artifactId>, +      <version>2.0</version>, +      <scope>provided</scope>, +    </dependency>, +    <dependency>, +      <scope>provided</scope>, +++ b/org.springframework.web/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/javax.portlet/com.springsource.javax.portlet/2.0.0/com.springsource.javax.portlet-2.0.0.jar"/>, +++ b/org.springframework.web/ivy.xml, +		<dependency org="javax.portlet" name="com.springsource.javax.portlet" rev="2.0.0" conf="provided->compile"/>, +++ b/org.springframework.web/pom.xml, +      <groupId>javax.portlet</groupId>, +      <artifactId>portlet-api</artifactId>, +      <version>2.0</version>, +      <scope>provided</scope>, +    </dependency>, +    <dependency>, +      <scope>provided</scope>, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/request/FacesRequestAttributes.java, + * Copyright 2002-2009 the original author or authors., +import javax.portlet.PortletSession;, +import org.springframework.util.ClassUtils;, +	private static final boolean portletApiPresent =, +			ClassUtils.isPresent("javax.portlet.PortletSession", FacesRequestAttributes.class.getClassLoader());, +, +		else if (scope == SCOPE_GLOBAL_SESSION && portletApiPresent) {, +			return PortletSessionAccessor.getGlobalSessionMapIfPossible(getExternalContext());, +		}, +, +	/**, +	 * Inner class to avoid hard-coded Portlet API dependency., + 	 */, +	private static class PortletSessionAccessor {, +, +		public static Map<String, Object> getGlobalSessionMapIfPossible(ExternalContext externalContext) {, +			Object session = externalContext.getSession(true);, +			if (session instanceof PortletSession) {, +				return ((PortletSession) session).getAttributeMap(PortletSession.APPLICATION_SCOPE);, +			}, +			else {, +				return externalContext.getSessionMap();, +			}, +		}, +	}, +, +++ b/org.springframework.web/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/javax.portlet/com.springsource.javax.portlet/2.0.0/com.springsource.javax.portlet-2.0.0.jar"/>, +++ b/org.springframework.web/ivy.xml, +		<dependency org="javax.portlet" name="com.springsource.javax.portlet" rev="2.0.0" conf="provided->compile"/>, +++ b/org.springframework.web/pom.xml, +      <groupId>javax.portlet</groupId>, +      <artifactId>portlet-api</artifactId>, +      <version>2.0</version>, +      <scope>provided</scope>, +    </dependency>, +    <dependency>, +      <scope>provided</scope>, +++ b/org.springframework.web/src/main/java/org/springframework/web/context/request/FacesRequestAttributes.java, + * Copyright 2002-2009 the original author or authors., +import javax.portlet.PortletSession;, +import org.springframework.util.ClassUtils;, +	private static final boolean portletApiPresent =, +			ClassUtils.isPresent("javax.portlet.PortletSession", FacesRequestAttributes.class.getClassLoader());, +, +		else if (scope == SCOPE_GLOBAL_SESSION && portletApiPresent) {, +			return PortletSessionAccessor.getGlobalSessionMapIfPossible(getExternalContext());, +		}, +, +	/**, +	 * Inner class to avoid hard-coded Portlet API dependency., + 	 */, +	private static class PortletSessionAccessor {, +, +		public static Map<String, Object> getGlobalSessionMapIfPossible(ExternalContext externalContext) {, +			Object session = externalContext.getSession(true);, +			if (session instanceof PortletSession) {, +				return ((PortletSession) session).getAttributeMap(PortletSession.APPLICATION_SCOPE);, +			}, +			else {, +				return externalContext.getSessionMap();, +			}, +		}, +	}, +, +++ b/org.springframework.web/template.mf, + javax.portlet.*;version="[2.0.0, 3.0.0)";resolution:=optional,, +++ b/org.springframework.web/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/javax.portlet/com.springsource.javax.portlet/2.0.0/com.springsource.javax.portlet-2.0.0.jar"/>]