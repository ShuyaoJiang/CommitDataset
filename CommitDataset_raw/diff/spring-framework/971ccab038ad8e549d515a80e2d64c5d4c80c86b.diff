[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/CompletionStageReturnValueHandler.java, + *, + * @deprecated as of 4.3 {@link DeferredResultMethodReturnValueHandler} supports, + * CompletionStage return values via an adapter mechanism., +@Deprecated, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/CompletionStageReturnValueHandler.java, + *, + * @deprecated as of 4.3 {@link DeferredResultMethodReturnValueHandler} supports, + * CompletionStage return values via an adapter mechanism., +@Deprecated, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/DeferredResultAdapter.java, +/*, + * Copyright 2002-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.web.servlet.mvc.method.annotation;, +, +import org.springframework.web.context.request.async.DeferredResult;, +, +/**, + * Contract to adapt a single-value async return value to {@code DeferredResult}., + *, + * @author Rossen Stoyanchev, + * @since 4.3, + */, +public interface DeferredResultAdapter {, +, +	/**, +	 * Create a {@code DeferredResult} for the given return value., +	 * @param returnValue the return value, never {@code null}, +	 * @return the DeferredResult, +	 */, +	DeferredResult<?> adaptToDeferredResult(Object returnValue);, +, +}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/CompletionStageReturnValueHandler.java, + *, + * @deprecated as of 4.3 {@link DeferredResultMethodReturnValueHandler} supports, + * CompletionStage return values via an adapter mechanism., +@Deprecated, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/DeferredResultAdapter.java, +/*, + * Copyright 2002-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.web.servlet.mvc.method.annotation;, +, +import org.springframework.web.context.request.async.DeferredResult;, +, +/**, + * Contract to adapt a single-value async return value to {@code DeferredResult}., + *, + * @author Rossen Stoyanchev, + * @since 4.3, + */, +public interface DeferredResultAdapter {, +, +	/**, +	 * Create a {@code DeferredResult} for the given return value., +	 * @param returnValue the return value, never {@code null}, +	 * @return the DeferredResult, +	 */, +	DeferredResult<?> adaptToDeferredResult(Object returnValue);, +, +}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/DeferredResultMethodReturnValueHandler.java, + * Copyright 2002-2016 the original author or authors., +import java.util.HashMap;, +import java.util.Map;, +import java.util.concurrent.CompletionStage;, +import java.util.function.BiFunction;, +, +import org.springframework.lang.UsesJava8;, +import org.springframework.util.Assert;, +import org.springframework.util.ClassUtils;, +import org.springframework.util.concurrent.ListenableFuture;, +import org.springframework.util.concurrent.ListenableFutureCallback;, + * Handler for return values of type {@link DeferredResult}, {@link ListenableFuture},]