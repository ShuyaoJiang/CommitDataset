[+++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorGreaterThan.java, +			Number leftNumber = (Number) left;, +			Number rightNumber = (Number) right;, +			if (leftNumber instanceof Double || rightNumber instanceof Double) {, +				return BooleanTypedValue.forValue(leftNumber.doubleValue() > rightNumber.doubleValue());, +			} else if (leftNumber instanceof Long || rightNumber instanceof Long) {, +				return BooleanTypedValue.forValue(leftNumber.longValue() > rightNumber.longValue());, +			} else {, +				return BooleanTypedValue.forValue(leftNumber.intValue() > rightNumber.intValue());, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorGreaterThan.java, +			Number leftNumber = (Number) left;, +			Number rightNumber = (Number) right;, +			if (leftNumber instanceof Double || rightNumber instanceof Double) {, +				return BooleanTypedValue.forValue(leftNumber.doubleValue() > rightNumber.doubleValue());, +			} else if (leftNumber instanceof Long || rightNumber instanceof Long) {, +				return BooleanTypedValue.forValue(leftNumber.longValue() > rightNumber.longValue());, +			} else {, +				return BooleanTypedValue.forValue(leftNumber.intValue() > rightNumber.intValue());, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorLessThan.java, +		// TODO could leave all of these to the comparator - just seems quicker to do some here, +			Number leftNumber = (Number) left;, +			Number rightNumber = (Number) right;, +			if (leftNumber instanceof Double || rightNumber instanceof Double) {, +				return BooleanTypedValue.forValue(leftNumber.doubleValue() < rightNumber.doubleValue());, +			} else if (leftNumber instanceof Long || rightNumber instanceof Long) {, +				return BooleanTypedValue.forValue(leftNumber.longValue() < rightNumber.longValue());, +			} else {, +				return BooleanTypedValue.forValue(leftNumber.intValue() < rightNumber.intValue());, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorGreaterThan.java, +			Number leftNumber = (Number) left;, +			Number rightNumber = (Number) right;, +			if (leftNumber instanceof Double || rightNumber instanceof Double) {, +				return BooleanTypedValue.forValue(leftNumber.doubleValue() > rightNumber.doubleValue());, +			} else if (leftNumber instanceof Long || rightNumber instanceof Long) {, +				return BooleanTypedValue.forValue(leftNumber.longValue() > rightNumber.longValue());, +			} else {, +				return BooleanTypedValue.forValue(leftNumber.intValue() > rightNumber.intValue());, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorLessThan.java, +		// TODO could leave all of these to the comparator - just seems quicker to do some here, +			Number leftNumber = (Number) left;, +			Number rightNumber = (Number) right;, +			if (leftNumber instanceof Double || rightNumber instanceof Double) {, +				return BooleanTypedValue.forValue(leftNumber.doubleValue() < rightNumber.doubleValue());, +			} else if (leftNumber instanceof Long || rightNumber instanceof Long) {, +				return BooleanTypedValue.forValue(leftNumber.longValue() < rightNumber.longValue());, +			} else {, +				return BooleanTypedValue.forValue(leftNumber.intValue() < rightNumber.intValue());, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorLessThanOrEqual.java, +			Number leftNumber = (Number) left;, +			Number rightNumber = (Number) right;, +			if (leftNumber instanceof Double || rightNumber instanceof Double) {, +				return BooleanTypedValue.forValue(leftNumber.doubleValue() <= rightNumber.doubleValue());, +			} else if (leftNumber instanceof Long || rightNumber instanceof Long) {, +				return BooleanTypedValue.forValue(leftNumber.longValue() <= rightNumber.longValue());, +			} else {, +				return BooleanTypedValue.forValue(leftNumber.intValue() <= rightNumber.intValue());, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorGreaterThan.java, +			Number leftNumber = (Number) left;, +			Number rightNumber = (Number) right;, +			if (leftNumber instanceof Double || rightNumber instanceof Double) {, +				return BooleanTypedValue.forValue(leftNumber.doubleValue() > rightNumber.doubleValue());, +			} else if (leftNumber instanceof Long || rightNumber instanceof Long) {, +				return BooleanTypedValue.forValue(leftNumber.longValue() > rightNumber.longValue());, +			} else {, +				return BooleanTypedValue.forValue(leftNumber.intValue() > rightNumber.intValue());, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorLessThan.java, +		// TODO could leave all of these to the comparator - just seems quicker to do some here, +			Number leftNumber = (Number) left;, +			Number rightNumber = (Number) right;, +			if (leftNumber instanceof Double || rightNumber instanceof Double) {, +				return BooleanTypedValue.forValue(leftNumber.doubleValue() < rightNumber.doubleValue());, +			} else if (leftNumber instanceof Long || rightNumber instanceof Long) {, +				return BooleanTypedValue.forValue(leftNumber.longValue() < rightNumber.longValue());, +			} else {, +				return BooleanTypedValue.forValue(leftNumber.intValue() < rightNumber.intValue());, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorLessThanOrEqual.java, +			Number leftNumber = (Number) left;, +			Number rightNumber = (Number) right;, +			if (leftNumber instanceof Double || rightNumber instanceof Double) {, +				return BooleanTypedValue.forValue(leftNumber.doubleValue() <= rightNumber.doubleValue());, +			} else if (leftNumber instanceof Long || rightNumber instanceof Long) {, +				return BooleanTypedValue.forValue(leftNumber.longValue() <= rightNumber.longValue());, +			} else {, +				return BooleanTypedValue.forValue(leftNumber.intValue() <= rightNumber.intValue());, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/Ternary.java, +		if (value.booleanValue()) {, +		} else {, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorGreaterThan.java, +			Number leftNumber = (Number) left;, +			Number rightNumber = (Number) right;, +			if (leftNumber instanceof Double || rightNumber instanceof Double) {, +				return BooleanTypedValue.forValue(leftNumber.doubleValue() > rightNumber.doubleValue());, +			} else if (leftNumber instanceof Long || rightNumber instanceof Long) {, +				return BooleanTypedValue.forValue(leftNumber.longValue() > rightNumber.longValue());, +			} else {, +				return BooleanTypedValue.forValue(leftNumber.intValue() > rightNumber.intValue());, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/OperatorLessThan.java, +		// TODO could leave all of these to the comparator - just seems quicker to do some here, +			Number leftNumber = (Number) left;, +			Number rightNumber = (Number) right;]