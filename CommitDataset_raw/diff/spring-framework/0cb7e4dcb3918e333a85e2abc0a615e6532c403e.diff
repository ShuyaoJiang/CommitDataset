[+++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/PropertyOrFieldReference.java, + * Copyright 2002-2010 the original author or authors., +	private final boolean nullSafe;, +, +		this.name = propertyOrFieldName;, +, +	public boolean isNullSafe() {, +		return this.nullSafe;, +	}, +, +	public String getName() {, +		return this.name;, +	}, +, +, +							writeProperty(state, this.name, newList);, +					catch (InstantiationException ex) {, +						throw new SpelEvaluationException(getStartPosition(), ex,, +								SpelMessage.UNABLE_TO_CREATE_LIST_FOR_INDEXING);, +					}, +					catch (IllegalAccessException ex) {, +						throw new SpelEvaluationException(getStartPosition(), ex,, +								SpelMessage.UNABLE_TO_CREATE_LIST_FOR_INDEXING);, +					}, +				}, +				else {, +					}, +					catch (InstantiationException ex) {, +						throw new SpelEvaluationException(getStartPosition(), ex,, +								SpelMessage.UNABLE_TO_CREATE_MAP_FOR_INDEXING);, +					}, +					catch (IllegalAccessException ex) {, +						throw new SpelEvaluationException(getStartPosition(), ex,, +								SpelMessage.UNABLE_TO_CREATE_MAP_FOR_INDEXING);, +			}, +			else {, +				}, +				catch (InstantiationException ex) {, +					throw new SpelEvaluationException(getStartPosition(), ex,, +							SpelMessage.UNABLE_TO_DYNAMICALLY_CREATE_OBJECT, result.getTypeDescriptor().getType());, +				}, +				catch (IllegalAccessException ex) {, +					throw new SpelEvaluationException(getStartPosition(), ex,, +							SpelMessage.UNABLE_TO_DYNAMICALLY_CREATE_OBJECT, result.getTypeDescriptor().getType());, +		}, +		else {, +			}, +			catch (AccessException ae) {, +		}, +		else {, +			throw new SpelEvaluationException(getStartPosition(), SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE, name,, +					FormatHelper.formatClassNameForMessage(contextObjectClass));, +				}, +				catch (AccessException ae) {]