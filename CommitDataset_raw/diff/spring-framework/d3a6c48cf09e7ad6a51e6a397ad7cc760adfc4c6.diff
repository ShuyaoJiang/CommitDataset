[+++ b/spring-framework-reference/src/scheduling.xml, +    <title>Asynchronous Execution, Scheduling, and Thread Pooling</title>, +		The Spring Framework provides abstractions for asynchronous execution and scheduling of tasks, +		with the <interfacename>TaskExecutor</interfacename> and <interfacename>TaskScheduler</interfacename>, +		interfaces, respectively. Spring also features implementations of those interfaces that support, +		thread pools or delegation to CommonJ within an application server environment. Ultimately, +		the use of these implementations behind the common interfaces abstracts away the differences, +		between Java SE 5, Java SE 6 and Java EE environments., +		</para>, +		<para>, +		Spring also features integration classes for supporting scheduling with the, +		<classname>Timer</classname>, part of the JDK since 1.3, and the Quartz Scheduler, +		(<ulink url="http://www.opensymphony.com/quartz/"/>). Both of those schedulers, +]