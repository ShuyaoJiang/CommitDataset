[+++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, + * Copyright 2002-2017 the original author or authors., +			List<V> values = this.map.computeIfAbsent(key, k -> new LinkedList<>());, +		public void addAll(K key, List<V> values) {, +			List<V> currentValues = this.map.computeIfAbsent(key, k -> new LinkedList<>());, +			currentValues.addAll(values);, +		}, +, +		@Override, +++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, + * Copyright 2002-2017 the original author or authors., +			List<V> values = this.map.computeIfAbsent(key, k -> new LinkedList<>());, +		public void addAll(K key, List<V> values) {, +			List<V> currentValues = this.map.computeIfAbsent(key, k -> new LinkedList<>());, +			currentValues.addAll(values);, +		}, +, +		@Override, +++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, + * Copyright 2002-2017 the original author or authors., +		List<V> values = this.targetMap.computeIfAbsent(key, k -> new LinkedList<>());, +	public void addAll(K key, List<V> values) {, +		List<V> currentValues = this.targetMap.computeIfAbsent(key, k -> new LinkedList<>());, +		currentValues.addAll(values);, +	}, +, +	@Override, +++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, + * Copyright 2002-2017 the original author or authors., +			List<V> values = this.map.computeIfAbsent(key, k -> new LinkedList<>());, +		public void addAll(K key, List<V> values) {, +			List<V> currentValues = this.map.computeIfAbsent(key, k -> new LinkedList<>());, +			currentValues.addAll(values);, +		}, +, +		@Override, +++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, + * Copyright 2002-2017 the original author or authors., +		List<V> values = this.targetMap.computeIfAbsent(key, k -> new LinkedList<>());, +	public void addAll(K key, List<V> values) {, +		List<V> currentValues = this.targetMap.computeIfAbsent(key, k -> new LinkedList<>());, +		currentValues.addAll(values);, +	}, +, +	@Override, +++ b/spring-core/src/main/java/org/springframework/util/MultiValueMap.java, + * Copyright 2002-2017 the original author or authors., +	 * Add all the values of the given list to the current list of values for the given key., +	 * @param key they key, +	 * @param values the values to be added, +	 */, +	void addAll(K key, List<V> values);, +, +	/**, +++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, + * Copyright 2002-2017 the original author or authors., +			List<V> values = this.map.computeIfAbsent(key, k -> new LinkedList<>());, +		public void addAll(K key, List<V> values) {, +			List<V> currentValues = this.map.computeIfAbsent(key, k -> new LinkedList<>());, +			currentValues.addAll(values);, +		}, +, +		@Override, +++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, + * Copyright 2002-2017 the original author or authors., +		List<V> values = this.targetMap.computeIfAbsent(key, k -> new LinkedList<>());, +	public void addAll(K key, List<V> values) {, +		List<V> currentValues = this.targetMap.computeIfAbsent(key, k -> new LinkedList<>());, +		currentValues.addAll(values);, +	}, +, +	@Override, +++ b/spring-core/src/main/java/org/springframework/util/MultiValueMap.java, + * Copyright 2002-2017 the original author or authors., +	 * Add all the values of the given list to the current list of values for the given key., +	 * @param key they key, +	 * @param values the values to be added, +	 */, +	void addAll(K key, List<V> values);, +, +	/**, +++ b/spring-core/src/test/java/org/springframework/util/LinkedMultiValueMapTests.java, + * Copyright 2002-2017 the original author or authors., +import java.util.Arrays;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNull;, +	public void addAll() throws Exception {, +		map.add("key", "value1");, +		map.addAll("key", Arrays.asList("value2", "value3"));, +		assertEquals(1, map.size());, +		List<String> expected = new ArrayList<>(2);, +		expected.add("value1");, +		expected.add("value2");, +		expected.add("value3");, +		assertEquals(expected, map.get("key"));, +	}, +, +	@Test, +++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, + * Copyright 2002-2017 the original author or authors.]