[+++ b/spring-test/src/test/java/org/springframework/test/context/MetaAnnotationUtilsTests.java, + * Copyright 2002-2014 the original author or authors., +	private void assertAtComponentOnComposedAnnotation(Class<?> rootDeclaringClass, String name,, +			Class<? extends Annotation> composedAnnotationType) {, +		assertAtComponentOnComposedAnnotation(rootDeclaringClass, rootDeclaringClass, name, composedAnnotationType);, +	}, +, +	private void assertAtComponentOnComposedAnnotation(Class<?> startClass, Class<?> rootDeclaringClass, String name,, +		assertEquals(rootDeclaringClass, descriptor.getRootDeclaringClass());, +		assertEquals(composedAnnotationType, descriptor.getDeclaringClass());, +	private void assertAtComponentOnComposedAnnotationForMultipleCandidateTypes(Class<?> startClass,, +			Class<?> declaringClass, String name, Class<? extends Annotation> composedAnnotationType) {, +		assertAtComponentOnComposedAnnotation(HasMetaComponentAnnotation.class, "meta1", Meta1.class);, +		assertAtComponentOnComposedAnnotation(InterfaceWithMetaAnnotation.class, "meta1", Meta1.class);, +		assertAtComponentOnComposedAnnotation(ClassWithLocalMetaAnnotationAndMetaAnnotatedInterface.class, "meta2",, +			Meta2.class);, +		assertAtComponentOnComposedAnnotation(SubClassWithLocalMetaAnnotationAndMetaAnnotatedInterface.class,, +		assertAtComponentOnComposedAnnotationForMultipleCandidateTypes(startClass, startClass, "meta1", Meta1.class);, +		assertAtComponentOnComposedAnnotationForMultipleCandidateTypes(startClass, startClass, "meta1", Meta1.class);, +		assertAtComponentOnComposedAnnotationForMultipleCandidateTypes(startClass, startClass, "meta2", Meta2.class);, +		assertAtComponentOnComposedAnnotationForMultipleCandidateTypes(, +	@ContextConfiguration, +	@Retention(RetentionPolicy.RUNTIME), +	static @interface MetaConfig {, +, +		static class DevConfig {, +		}, +, +		static class ProductionConfig {, +		}, +, +, +		Class<?>[] classes() default { DevConfig.class, ProductionConfig.class };, +	}, +, +	// -------------------------------------------------------------------------, +]