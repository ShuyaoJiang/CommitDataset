[+++ b/spring-test/src/main/java/org/springframework/test/annotation/Rollback.java, + * Copyright 2002-2015 the original author or authors., + * Test annotation used to indicate whether a <em>test-managed transaction</em>, + * should be <em>rolled back</em> after the test method has completed., + *, + * <p>Consult the class-level Javadoc for, + * {@link org.springframework.test.context.transaction.TransactionalTestExecutionListener}, + * for an explanation of <em>test-managed transactions</em>., + *, + * <p>When declared as a class-level annotation, {@code @Rollback} defines, + * the default rollback semantics for all test methods within the test class, + * hierarchy. When declared as a method-level annotation, {@code @Rollback}, + * defines rollback semantics for the specific test method, potentially, + * overriding class-level default rollback semantics., + * @see org.springframework.test.context.transaction.TransactionalTestExecutionListener, +@Target({ TYPE, METHOD, ANNOTATION_TYPE }), +	 * Whether the <em>test-managed transaction</em> should be rolled back, +	 * after the test method has completed., +	 * <p>If {@code true}, the transaction will be rolled back; otherwise,, +	 * the transaction will be committed., +++ b/spring-test/src/main/java/org/springframework/test/annotation/Rollback.java, + * Copyright 2002-2015 the original author or authors., + * Test annotation used to indicate whether a <em>test-managed transaction</em>, + * should be <em>rolled back</em> after the test method has completed., + *, + * <p>Consult the class-level Javadoc for, + * {@link org.springframework.test.context.transaction.TransactionalTestExecutionListener}, + * for an explanation of <em>test-managed transactions</em>., + *, + * <p>When declared as a class-level annotation, {@code @Rollback} defines, + * the default rollback semantics for all test methods within the test class, + * hierarchy. When declared as a method-level annotation, {@code @Rollback}, + * defines rollback semantics for the specific test method, potentially, + * overriding class-level default rollback semantics., + * @see org.springframework.test.context.transaction.TransactionalTestExecutionListener, +@Target({ TYPE, METHOD, ANNOTATION_TYPE }), +	 * Whether the <em>test-managed transaction</em> should be rolled back, +	 * after the test method has completed., +	 * <p>If {@code true}, the transaction will be rolled back; otherwise,, +	 * the transaction will be committed., +++ b/spring-test/src/main/java/org/springframework/test/context/transaction/TestContextTransactionUtils.java, + * Copyright 2002-2015 the original author or authors., + * within the <em>Spring TestContext Framework</em>., + * <p>Mainly for internal use within the framework., +	 * @throws IllegalStateException if more than one TransactionManagementConfigurer, +	 * exists in the ApplicationContext, +++ b/spring-test/src/main/java/org/springframework/test/annotation/Rollback.java, + * Copyright 2002-2015 the original author or authors., + * Test annotation used to indicate whether a <em>test-managed transaction</em>, + * should be <em>rolled back</em> after the test method has completed., + *, + * <p>Consult the class-level Javadoc for, + * {@link org.springframework.test.context.transaction.TransactionalTestExecutionListener}, + * for an explanation of <em>test-managed transactions</em>., + *, + * <p>When declared as a class-level annotation, {@code @Rollback} defines, + * the default rollback semantics for all test methods within the test class, + * hierarchy. When declared as a method-level annotation, {@code @Rollback}, + * defines rollback semantics for the specific test method, potentially, + * overriding class-level default rollback semantics., + * @see org.springframework.test.context.transaction.TransactionalTestExecutionListener, +@Target({ TYPE, METHOD, ANNOTATION_TYPE }), +	 * Whether the <em>test-managed transaction</em> should be rolled back, +	 * after the test method has completed., +	 * <p>If {@code true}, the transaction will be rolled back; otherwise,, +	 * the transaction will be committed., +++ b/spring-test/src/main/java/org/springframework/test/context/transaction/TestContextTransactionUtils.java, + * Copyright 2002-2015 the original author or authors., + * within the <em>Spring TestContext Framework</em>., + * <p>Mainly for internal use within the framework., +	 * @throws IllegalStateException if more than one TransactionManagementConfigurer, +	 * exists in the ApplicationContext, +++ b/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionConfiguration.java, + * @deprecated As of Spring Framework 4.2, use {@code @Rollback} at the class, + * level and the {@code transactionManager} qualifier in {@code @Transactional}., +@Deprecated, +	 * PlatformTransactionManager} that should be used to drive <em>test-managed transactions</em>., +	 * Whether <em>test-managed transactions</em> should be rolled back by default., +++ b/spring-test/src/main/java/org/springframework/test/annotation/Rollback.java, + * Copyright 2002-2015 the original author or authors., + * Test annotation used to indicate whether a <em>test-managed transaction</em>, + * should be <em>rolled back</em> after the test method has completed., + *, + * <p>Consult the class-level Javadoc for, + * {@link org.springframework.test.context.transaction.TransactionalTestExecutionListener}, + * for an explanation of <em>test-managed transactions</em>., + *, + * <p>When declared as a class-level annotation, {@code @Rollback} defines, + * the default rollback semantics for all test methods within the test class, + * hierarchy. When declared as a method-level annotation, {@code @Rollback}, + * defines rollback semantics for the specific test method, potentially, + * overriding class-level default rollback semantics., + * @see org.springframework.test.context.transaction.TransactionalTestExecutionListener, +@Target({ TYPE, METHOD, ANNOTATION_TYPE }), +	 * Whether the <em>test-managed transaction</em> should be rolled back, +	 * after the test method has completed., +	 * <p>If {@code true}, the transaction will be rolled back; otherwise,, +	 * the transaction will be committed., +++ b/spring-test/src/main/java/org/springframework/test/context/transaction/TestContextTransactionUtils.java, + * Copyright 2002-2015 the original author or authors.]