[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +	 * @since 4.0.3, +	 * Construct a new {@code ResourceDatabasePopulator} with default settings, +	 * for the supplied scripts., +	 * @param scripts the scripts to execute to populate the database, +	 * @since 4.0.3, +	 */, +	public ResourceDatabasePopulator(Resource... scripts) {, +		this();, +		this.scripts = Arrays.asList(scripts);, +	}, +, +	/**, +	 * @since 4.0.3, +		this(scripts);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +	 * @since 4.0.3, +	 * Construct a new {@code ResourceDatabasePopulator} with default settings, +	 * for the supplied scripts., +	 * @param scripts the scripts to execute to populate the database, +	 * @since 4.0.3, +	 */, +	public ResourceDatabasePopulator(Resource... scripts) {, +		this();, +		this.scripts = Arrays.asList(scripts);, +	}, +, +	/**, +	 * @since 4.0.3, +		this(scripts);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/package-info.java, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +	 * @since 4.0.3, +	 * Construct a new {@code ResourceDatabasePopulator} with default settings, +	 * for the supplied scripts., +	 * @param scripts the scripts to execute to populate the database, +	 * @since 4.0.3, +	 */, +	public ResourceDatabasePopulator(Resource... scripts) {, +		this();, +		this.scripts = Arrays.asList(scripts);, +	}, +, +	/**, +	 * @since 4.0.3, +		this(scripts);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/package-info.java, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/datasource/init/AbstractDatabaseInitializationTests.java, +import static org.hamcrest.Matchers.*;, +import static org.junit.Assert.*;, +, +	EmbeddedDatabase db;, +, +	JdbcTemplate jdbcTemplate;, +	abstract EmbeddedDatabaseType getEmbeddedDatabaseType();, +	Resource resource(String path) {, +	Resource defaultSchema() {, +		return resource("db-schema.sql");, +	}, +, +	Resource usersSchema() {, +		return resource("users-schema.sql");, +	}, +, +	void assertUsersDatabaseCreated(String... lastNames) {, +		for (String lastName : lastNames) {, +			assertThat("Did not find user with last name [" + lastName + "].",, +				jdbcTemplate.queryForObject("select count(0) from users where last_name = ?", Integer.class, lastName),, +				equalTo(1));, +		}, +	}, +, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +	 * @since 4.0.3, +	 * Construct a new {@code ResourceDatabasePopulator} with default settings, +	 * for the supplied scripts., +	 * @param scripts the scripts to execute to populate the database, +	 * @since 4.0.3, +	 */, +	public ResourceDatabasePopulator(Resource... scripts) {, +		this();, +		this.scripts = Arrays.asList(scripts);, +	}, +, +	/**, +	 * @since 4.0.3, +		this(scripts);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/package-info.java, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/datasource/init/AbstractDatabaseInitializationTests.java, +import static org.hamcrest.Matchers.*;, +import static org.junit.Assert.*;, +, +	EmbeddedDatabase db;, +, +	JdbcTemplate jdbcTemplate;, +	abstract EmbeddedDatabaseType getEmbeddedDatabaseType();, +	Resource resource(String path) {, +	Resource defaultSchema() {, +		return resource("db-schema.sql");, +	}]