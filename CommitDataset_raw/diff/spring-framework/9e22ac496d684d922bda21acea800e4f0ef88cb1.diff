[+++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/result/JsonPathResultMatchers.java, +	public ResultMatcher value(final Object expectedValue) {, +		return new ResultMatcher() {, +			public void match(MvcResult result) throws Exception {, +				jsonPathHelper.assertValue(result.getResponse().getContentAsString(), expectedValue);, +			}, +		};, +		return new ResultMatcher() {, +			public void match(MvcResult result) throws Exception {, +				String content = result.getResponse().getContentAsString();, +				jsonPathHelper.assertValueIsArray(content);, +			}, +		};, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/result/JsonPathResultMatchers.java, +	public ResultMatcher value(final Object expectedValue) {, +		return new ResultMatcher() {, +			public void match(MvcResult result) throws Exception {, +				jsonPathHelper.assertValue(result.getResponse().getContentAsString(), expectedValue);, +			}, +		};, +		return new ResultMatcher() {, +			public void match(MvcResult result) throws Exception {, +				String content = result.getResponse().getContentAsString();, +				jsonPathHelper.assertValueIsArray(content);, +			}, +		};, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/servlet/result/RequestResultMatchers.java, +				assertEquals("Async started", true, request.isAsyncStarted());, +				assertEquals("Async started", false, request.isAsyncStarted());, +				assertEquals("Async started", true, request.isAsyncStarted());, +	public <T> ResultMatcher asyncResult(final Object expectedResult) {, +		return new ResultMatcher() {, +			public void match(MvcResult result) {, +				HttpServletRequest request = result.getRequest();, +				assertEquals("Async started", true, request.isAsyncStarted());, +				assertEquals("Async result", expectedResult, result.getAsyncResult());, +			}, +		};]