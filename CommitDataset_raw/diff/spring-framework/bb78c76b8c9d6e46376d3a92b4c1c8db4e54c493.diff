[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.util.StringUtils;, +			locationPath = StringUtils.cleanPath(location.getURL().toString());, +			locationPath = StringUtils.cleanPath(((ClassPathResource) location).getPath());, +			locationPath = StringUtils.cleanPath(((ServletContextResource) location).getPath());, +			locationPath = StringUtils.cleanPath(location.getURL().getPath());, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.util.StringUtils;, +			locationPath = StringUtils.cleanPath(location.getURL().toString());, +			locationPath = StringUtils.cleanPath(((ClassPathResource) location).getPath());, +			locationPath = StringUtils.cleanPath(((ServletContextResource) location).getPath());, +			locationPath = StringUtils.cleanPath(location.getURL().getPath());, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/resource/PathResourceResolverTests.java, + * Copyright 2002-2015 the original author or authors., +	// SPR-12624, +	@Test, +	public void checkRelativeLocation() throws Exception {, +		String locationUrl= new UrlResource(getClass().getResource("./test/")).getURL().toExternalForm();, +		Resource location = new UrlResource(locationUrl.replace("/springframework","/../org/springframework"));, +, +		assertNotNull(this.resolver.resolveResource(null, "main.css", Arrays.asList(location), null));, +	}, +]