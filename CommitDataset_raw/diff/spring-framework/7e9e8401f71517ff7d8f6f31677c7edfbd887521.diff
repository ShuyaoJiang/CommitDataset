[+++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.java, +import org.springframework.core.annotation.AnnotationUtils;, +							if (!oldMappedMethod.equals(method)) {, +							}, +		ExceptionHandler exceptionHandler = AnnotationUtils.findAnnotation(method, ExceptionHandler.class);, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.java, +import org.springframework.core.annotation.AnnotationUtils;, +							if (!oldMappedMethod.equals(method)) {, +							}, +		ExceptionHandler exceptionHandler = AnnotationUtils.findAnnotation(method, ExceptionHandler.class);, +++ b/org.springframework.web.portlet/src/test/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolverTests.java, +	@Test, +	public void inherited()	{, +		IOException ex = new IOException();, +		InheritedController controller = new InheritedController();, +		ModelAndView mav = exceptionResolver.resolveException(request, response, controller, ex);, +		assertNotNull("No ModelAndView returned", mav);, +		assertEquals("Invalid view name returned", "GenericError", mav.getViewName());, +	}, +, +	private static class InheritedController extends SimpleController {, +, +		@Override, +		public String handleIOException(IOException ex, PortletRequest request)	{, +			return "GenericError";, +		}, +	}, +, +, +	@Controller]