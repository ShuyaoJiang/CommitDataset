[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, + * <p>Registers a Spring MVC {@link org.springframework.web.servlet.HandlerMapping}, +		RootBeanDefinition handlerMappingDef = new RootBeanDefinition(WebSocketHandlerMapping.class);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, + * <p>Registers a Spring MVC {@link org.springframework.web.servlet.HandlerMapping}, +		RootBeanDefinition handlerMappingDef = new RootBeanDefinition(WebSocketHandlerMapping.class);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, + * {@link org.springframework.web.servlet.HandlerMapping} for use in Spring MVC., +	 * Set the order for the resulting, +	 * {@link org.springframework.web.servlet.HandlerMapping}, +	 * relative to other handler mappings configured in Spring MVC., +	 * Set the UrlPathHelper to configure on the {@code HandlerMapping}, +	 * Return a handler mapping with the mapped ViewControllers; or {@code null}, +	 * in case of no registrations., +		WebSocketHandlerMapping hm = new WebSocketHandlerMapping();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, + * <p>Registers a Spring MVC {@link org.springframework.web.servlet.HandlerMapping}, +		RootBeanDefinition handlerMappingDef = new RootBeanDefinition(WebSocketHandlerMapping.class);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, + * {@link org.springframework.web.servlet.HandlerMapping} for use in Spring MVC., +	 * Set the order for the resulting, +	 * {@link org.springframework.web.servlet.HandlerMapping}, +	 * relative to other handler mappings configured in Spring MVC., +	 * Set the UrlPathHelper to configure on the {@code HandlerMapping}, +	 * Return a handler mapping with the mapped ViewControllers; or {@code null}, +	 * in case of no registrations., +		WebSocketHandlerMapping hm = new WebSocketHandlerMapping();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/jetty/JettyRequestUpgradeStrategy.java, + * Copyright 2002-2015 the original author or authors., +, +import org.springframework.context.Lifecycle;, +public class JettyRequestUpgradeStrategy implements RequestUpgradeStrategy, Lifecycle {, +	private volatile boolean running = false;, +, +, +	public boolean isRunning() {, +		return this.running;, +	}, +, +, +	@Override, +	public void start() {, +		if (!isRunning()) {, +			this.running = true;, +			try {, +				this.factory.init();, +			}, +			catch (Exception ex) {, +				throw new IllegalStateException("Unable to initialize Jetty WebSocketServerFactory", ex);, +			}, +		}, +	}, +, +	@Override, +	public void stop() {, +		if (isRunning()) {, +			this.running = false;, +			this.factory.cleanup();, +		}, +	}, +, +	@Override, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, + * <p>Registers a Spring MVC {@link org.springframework.web.servlet.HandlerMapping}, +		RootBeanDefinition handlerMappingDef = new RootBeanDefinition(WebSocketHandlerMapping.class);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, + * {@link org.springframework.web.servlet.HandlerMapping} for use in Spring MVC., +	 * Set the order for the resulting, +	 * {@link org.springframework.web.servlet.HandlerMapping}, +	 * relative to other handler mappings configured in Spring MVC., +	 * Set the UrlPathHelper to configure on the {@code HandlerMapping}, +	 * Return a handler mapping with the mapped ViewControllers; or {@code null}, +	 * in case of no registrations., +		WebSocketHandlerMapping hm = new WebSocketHandlerMapping();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/jetty/JettyRequestUpgradeStrategy.java, + * Copyright 2002-2015 the original author or authors., +, +import org.springframework.context.Lifecycle;, +public class JettyRequestUpgradeStrategy implements RequestUpgradeStrategy, Lifecycle {, +	private volatile boolean running = false;, +, +, +	public boolean isRunning() {, +		return this.running;, +	}, +, +, +	@Override, +	public void start() {, +		if (!isRunning()) {, +			this.running = true;, +			try {, +				this.factory.init();]