[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerResponse.java, +	 * Create a builder with a {@linkplain HttpStatus#SEE_OTHER 303 See Other}, +	 * status and a location header set to the given URI., +	 * @param location the location URI, +	 * @return the created builder, +	 */, +	static BodyBuilder seeOther(URI location) {, +		BodyBuilder builder = status(HttpStatus.SEE_OTHER);, +		return builder.location(location);, +	}, +, +	/**, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerResponse.java, +	 * Create a builder with a {@linkplain HttpStatus#SEE_OTHER 303 See Other}, +	 * status and a location header set to the given URI., +	 * @param location the location URI, +	 * @return the created builder, +	 */, +	static BodyBuilder seeOther(URI location) {, +		BodyBuilder builder = status(HttpStatus.SEE_OTHER);, +		return builder.location(location);, +	}, +, +	/**, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/server/DefaultServerResponseBuilderTests.java, +	public void seeOther() throws Exception {, +		URI location = URI.create("http://example.com");, +		Mono<ServerResponse> result = ServerResponse.seeOther(location).build();, +		StepVerifier.create(result), +				.expectNextMatches(response -> HttpStatus.SEE_OTHER.equals(response.statusCode()) &&, +						location.equals(response.headers().getLocation())), +				.expectComplete(), +				.verify();, +	}, +, +	@Test]