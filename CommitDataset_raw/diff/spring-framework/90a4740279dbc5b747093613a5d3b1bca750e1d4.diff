[+++ b/spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java, +	public void ternaryWithBooleanReturn_SPR12271() {, +	public void propertyReferenceVisibility_SPR12771() {, +, +	public static class RecordHolder {, +, +		public Map<String,Long> record = new HashMap<>();, +, +		public LongHolder expression = new LongHolder();, +, +		public void add(String key, Long value) {, +			record.put(key, value);, +		}, +, +		public long get(String key) {, +			return record.get(key);, +		}, +	}, +, +, +	public static class LongHolder {, +, +		public Long someLong = 3L;, +	}, +, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java, +	public void ternaryWithBooleanReturn_SPR12271() {, +	public void propertyReferenceVisibility_SPR12771() {, +, +	public static class RecordHolder {, +, +		public Map<String,Long> record = new HashMap<>();, +, +		public LongHolder expression = new LongHolder();, +, +		public void add(String key, Long value) {, +			record.put(key, value);, +		}, +, +		public long get(String key) {, +			return record.get(key);, +		}, +	}, +, +, +	public static class LongHolder {, +, +		public Long someLong = 3L;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorResourceFactory.java, +, +	 * Whether this factory exposes the global, +	 * {@link reactor.netty.http.HttpResources HttpResources} holder., +	 */, +	public boolean isUseGlobalResources() {, +		return this.useGlobalResources;, +	}, +, +	/**, +	public void setConnectionProviderSupplier(Supplier<ConnectionProvider> supplier) {, +	public void setLoopResourcesSupplier(Supplier<LoopResources> supplier) {, +	public void setConnectionProvider(ConnectionProvider connectionProvider) {, +	 * Return the configured {@link ConnectionProvider}., +	 */, +	public ConnectionProvider getConnectionProvider() {, +		Assert.state(this.connectionProvider != null, "ConnectionProvider not initialized yet");, +		return this.connectionProvider;, +	}, +, +	/**, +	public void setLoopResources(LoopResources loopResources) {, +		Assert.state(this.loopResources != null, "LoopResources not initialized yet");, +	public void afterPropertiesSet() {, +					"'useGlobalResources' is mutually exclusive with explicitly configured resources");, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java, +	public void ternaryWithBooleanReturn_SPR12271() {, +	public void propertyReferenceVisibility_SPR12771() {, +, +	public static class RecordHolder {, +, +		public Map<String,Long> record = new HashMap<>();, +, +		public LongHolder expression = new LongHolder();, +, +		public void add(String key, Long value) {, +			record.put(key, value);, +		}, +, +		public long get(String key) {, +			return record.get(key);, +		}, +	}, +, +, +	public static class LongHolder {, +, +		public Long someLong = 3L;, +	}, +]