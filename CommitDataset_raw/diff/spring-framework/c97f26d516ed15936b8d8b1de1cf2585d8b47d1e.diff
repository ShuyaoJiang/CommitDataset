[+++ b/.gitignore, +# Eclipse artifacts, including WTP generated manifests, +.classpath, +.project, +spring-*/src/main/java/META-INF/MANIFEST.MF, +, +++ b/.gitignore, +# Eclipse artifacts, including WTP generated manifests, +.classpath, +.project, +spring-*/src/main/java/META-INF/MANIFEST.MF, +, +++ b/build.gradle, +		classpath("org.springframework.build.gradle:propdeps-plugin:0.0.3"), +	group = "org.springframework", +	version = qualifyVersionIfNecessary(version), +, +		if (project.name in ["spring", "spring-jms",, +		testCompile("org.codehaus.woodstox:wstx-asl:3.2.7") {, +			exclude group: "stax", module: "stax-api", +		}, +		compile(project(":spring-web")), +, +	task testNG(type: Test) {, +		useTestNG(), +		// "TestCase" classes are run by other test classes, not the build., +		exclude "**/*TestCase.class", +		// Generate TestNG reports alongside JUnit reports., +		testReport true, +	}, +, +	test {, +		dependsOn testNG, +		useJUnit(), +		// "TestCase" classes are run by other test classes, not the build., +		exclude(["**/*TestCase.class", "**/*TestSuite.class"]), +	}, +, +	apply plugin: "detect-split-packages", +	detectSplitPackages {, +		projectsToScan -= project(":spring-instrument-tomcat"), +	}, +, +	// don't publish the default jar for the root project, +		dependsOn {, +			subprojects.collect {, +				it.tasks.getByName("jar"), +			}, +		}, +		maxMemory = "1024m", +		destinationDir = new File(buildDir, "api"), +, +		doFirst {, +		}, +, +}, +, +/*, + * Support publication of artifacts versioned by topic branch., + * CI builds supply `-P BRANCH_NAME=<TOPIC>` to gradle at build time., + * If <TOPIC> starts with 'SPR-', change version, + *     from BUILD-SNAPSHOT => <TOPIC>-SNAPSHOT, + *     e.g. 3.2.1.BUILD-SNAPSHOT => 3.2.1.SPR-1234-SNAPSHOT, + */, +def qualifyVersionIfNecessary(version) {, +	if (rootProject.hasProperty("BRANCH_NAME")) {, +		def qualifier = rootProject.getProperty("BRANCH_NAME"), +		if (qualifier.startsWith("SPR-")) {, +			return version.replace('BUILD', qualifier), +		}, +	}, +	return version, +++ b/.gitignore, +# Eclipse artifacts, including WTP generated manifests, +.classpath, +.project, +spring-*/src/main/java/META-INF/MANIFEST.MF, +, +++ b/build.gradle, +		classpath("org.springframework.build.gradle:propdeps-plugin:0.0.3"), +	group = "org.springframework", +	version = qualifyVersionIfNecessary(version), +, +		if (project.name in ["spring", "spring-jms",, +		testCompile("org.codehaus.woodstox:wstx-asl:3.2.7") {, +			exclude group: "stax", module: "stax-api", +		}, +		compile(project(":spring-web")), +, +	task testNG(type: Test) {, +		useTestNG(), +		// "TestCase" classes are run by other test classes, not the build., +		exclude "**/*TestCase.class", +		// Generate TestNG reports alongside JUnit reports., +		testReport true, +	}, +, +	test {, +		dependsOn testNG, +		useJUnit()]