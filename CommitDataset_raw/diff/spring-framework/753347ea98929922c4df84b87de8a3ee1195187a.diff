[+++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +	protected static final Log logger = LogFactory.getLog(CglibAopProxy.class);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +	protected static final Log logger = LogFactory.getLog(CglibAopProxy.class);, +++ b/spring-context/src/main/java/org/springframework/jmx/access/ConnectorDelegate.java, + * Copyright 2002-2015 the original author or authors., +	private static final Log logger = LogFactory.getLog(ConnectorDelegate.class);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +	protected static final Log logger = LogFactory.getLog(CglibAopProxy.class);, +++ b/spring-context/src/main/java/org/springframework/jmx/access/ConnectorDelegate.java, + * Copyright 2002-2015 the original author or authors., +	private static final Log logger = LogFactory.getLog(ConnectorDelegate.class);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SubscriptionMethodReturnValueHandler.java, +	private static final Log logger = LogFactory.getLog(SubscriptionMethodReturnValueHandler.class);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +	protected static final Log logger = LogFactory.getLog(CglibAopProxy.class);, +++ b/spring-context/src/main/java/org/springframework/jmx/access/ConnectorDelegate.java, + * Copyright 2002-2015 the original author or authors., +	private static final Log logger = LogFactory.getLog(ConnectorDelegate.class);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SubscriptionMethodReturnValueHandler.java, +	private static final Log logger = LogFactory.getLog(SubscriptionMethodReturnValueHandler.class);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketMessageBrokerStats.java, + * Copyright 2002-2015 the original author or authors., +	private static final Log logger = LogFactory.getLog(WebSocketMessageBrokerStats.class);, +		String str = executor.toString();, +		return str.substring(str.indexOf("pool"), str.length() - 1);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +	protected static final Log logger = LogFactory.getLog(CglibAopProxy.class);, +++ b/spring-context/src/main/java/org/springframework/jmx/access/ConnectorDelegate.java, + * Copyright 2002-2015 the original author or authors., +	private static final Log logger = LogFactory.getLog(ConnectorDelegate.class);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SubscriptionMethodReturnValueHandler.java, +	private static final Log logger = LogFactory.getLog(SubscriptionMethodReturnValueHandler.class);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketMessageBrokerStats.java, + * Copyright 2002-2015 the original author or authors., +	private static final Log logger = LogFactory.getLog(WebSocketMessageBrokerStats.class);, +		String str = executor.toString();, +		return str.substring(str.indexOf("pool"), str.length() - 1);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java, +	private static final Log logger = LogFactory.getLog(WebSocketStompClient.class);, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +	protected static final Log logger = LogFactory.getLog(CglibAopProxy.class);, +++ b/spring-context/src/main/java/org/springframework/jmx/access/ConnectorDelegate.java, + * Copyright 2002-2015 the original author or authors., +	private static final Log logger = LogFactory.getLog(ConnectorDelegate.class);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SubscriptionMethodReturnValueHandler.java, +	private static final Log logger = LogFactory.getLog(SubscriptionMethodReturnValueHandler.class);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketMessageBrokerStats.java, + * Copyright 2002-2015 the original author or authors., +	private static final Log logger = LogFactory.getLog(WebSocketMessageBrokerStats.class);, +		String str = executor.toString();, +		return str.substring(str.indexOf("pool"), str.length() - 1);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java, +	private static final Log logger = LogFactory.getLog(WebSocketStompClient.class);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/DefaultTransportRequest.java, +	private static final Log logger = LogFactory.getLog(DefaultTransportRequest.class);, +		Assert.notNull(sockJsUrlInfo, "SockJsUrlInfo is required");, +		Assert.notNull(transport, "Transport is required");, +		Assert.notNull(serverTransportType, "TransportType is required");, +		Assert.notNull(codec, "SockJsMessageCodec is required");, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +	protected static final Log logger = LogFactory.getLog(CglibAopProxy.class);, +++ b/spring-context/src/main/java/org/springframework/jmx/access/ConnectorDelegate.java, + * Copyright 2002-2015 the original author or authors., +	private static final Log logger = LogFactory.getLog(ConnectorDelegate.class);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SubscriptionMethodReturnValueHandler.java, +	private static final Log logger = LogFactory.getLog(SubscriptionMethodReturnValueHandler.class);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketMessageBrokerStats.java, + * Copyright 2002-2015 the original author or authors., +	private static final Log logger = LogFactory.getLog(WebSocketMessageBrokerStats.class);, +		String str = executor.toString();, +		return str.substring(str.indexOf("pool"), str.length() - 1);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java, +	private static final Log logger = LogFactory.getLog(WebSocketStompClient.class);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/DefaultTransportRequest.java, +	private static final Log logger = LogFactory.getLog(DefaultTransportRequest.class);, +		Assert.notNull(sockJsUrlInfo, "SockJsUrlInfo is required");, +		Assert.notNull(transport, "Transport is required");, +		Assert.notNull(serverTransportType, "TransportType is required");, +		Assert.notNull(codec, "SockJsMessageCodec is required");, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/WebSocketTransport.java, + * Copyright 2002-2015 the original author or authors., +import java.util.Collections;, +	private static final Log logger = LogFactory.getLog(WebSocketTransport.class);, +		Assert.notNull(webSocketClient, "WebSocketClient is required");, +		return Collections.singletonList(TransportType.WEBSOCKET);, +		public ClientSockJsWebSocketHandler(WebSocketClientSockJsSession session) {]