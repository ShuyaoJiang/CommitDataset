[+++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +		@Nullable, +		@Nullable, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +		@Nullable, +		@Nullable, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +				if (constructorToUse != null && argsToUse != null && argsToUse.length > paramTypes.length) {, +			if (explicitArgs == null && argsHolderToUse != null) {, +		Assert.state(argsToUse != null, "Unresolved constructor arguments");, +		Assert.state(argsToUse != null, "Unresolved factory method arguments");, +	private Object instantiate(String beanName, RootBeanDefinition mbd,, +			@Nullable Object factoryBean, Method factoryMethod, Object[] args) {, +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +		@Nullable, +		@Nullable, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +				if (constructorToUse != null && argsToUse != null && argsToUse.length > paramTypes.length) {, +			if (explicitArgs == null && argsHolderToUse != null) {, +		Assert.state(argsToUse != null, "Unresolved constructor arguments");, +		Assert.state(argsToUse != null, "Unresolved factory method arguments");, +	private Object instantiate(String beanName, RootBeanDefinition mbd,, +			@Nullable Object factoryBean, Method factoryMethod, Object[] args) {, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, +					// Detect package-protected NullBean instance through equals(null) check, +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +		@Nullable, +		@Nullable, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +				if (constructorToUse != null && argsToUse != null && argsToUse.length > paramTypes.length) {, +			if (explicitArgs == null && argsHolderToUse != null) {, +		Assert.state(argsToUse != null, "Unresolved constructor arguments");, +		Assert.state(argsToUse != null, "Unresolved factory method arguments");, +	private Object instantiate(String beanName, RootBeanDefinition mbd,, +			@Nullable Object factoryBean, Method factoryMethod, Object[] args) {, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, +					// Detect package-protected NullBean instance through equals(null) check, +++ b/spring-context/src/main/java/org/springframework/jmx/support/ConnectorServerFactoryBean.java, +				final JMXConnectorServer serverToStart = this.connectorServer;, +							serverToStart.start();, +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +		@Nullable, +		@Nullable, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +				if (constructorToUse != null && argsToUse != null && argsToUse.length > paramTypes.length) {, +			if (explicitArgs == null && argsHolderToUse != null) {, +		Assert.state(argsToUse != null, "Unresolved constructor arguments");, +		Assert.state(argsToUse != null, "Unresolved factory method arguments");, +	private Object instantiate(String beanName, RootBeanDefinition mbd,, +			@Nullable Object factoryBean, Method factoryMethod, Object[] args) {, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, +					// Detect package-protected NullBean instance through equals(null) check, +++ b/spring-context/src/main/java/org/springframework/jmx/support/ConnectorServerFactoryBean.java, +				final JMXConnectorServer serverToStart = this.connectorServer;, +							serverToStart.start();, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java, +				if (c == ':' && j < statement.length && statement[j] == ':') {, +				if (c == ':' && j < statement.length && statement[j] == '{') {, +					while (statement[j] != '}') {, +						if (j >= statement.length) {, +							throw new InvalidDataAccessApiUsageException("Non-terminated named parameter declaration " +, +									"at position " + i + " in statement: " + sql);, +						}, +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +		@Nullable, +		@Nullable, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +				if (constructorToUse != null && argsToUse != null && argsToUse.length > paramTypes.length) {, +			if (explicitArgs == null && argsHolderToUse != null) {, +		Assert.state(argsToUse != null, "Unresolved constructor arguments");, +		Assert.state(argsToUse != null, "Unresolved factory method arguments");, +	private Object instantiate(String beanName, RootBeanDefinition mbd,, +			@Nullable Object factoryBean, Method factoryMethod, Object[] args) {, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, +					// Detect package-protected NullBean instance through equals(null) check, +++ b/spring-context/src/main/java/org/springframework/jmx/support/ConnectorServerFactoryBean.java, +				final JMXConnectorServer serverToStart = this.connectorServer;, +							serverToStart.start();, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java, +				if (c == ':' && j < statement.length && statement[j] == ':') {, +				if (c == ':' && j < statement.length && statement[j] == '{') {, +					while (statement[j] != '}') {, +						if (j >= statement.length) {, +							throw new InvalidDataAccessApiUsageException("Non-terminated named parameter declaration " +, +									"at position " + i + " in statement: " + sql);, +						}, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/object/RdbmsOperation.java, +	public void setGeneratedKeysColumnNames(@Nullable String... names) {, +	public void setSql(@Nullable String sql) {, +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +		@Nullable, +		@Nullable, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java]