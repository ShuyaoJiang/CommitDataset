[+++ b/spring-web/src/main/java/org/springframework/web/util/WebUtils.java, +	 * Use of response encoding for HTML escaping parameter at the servlet context level, +	 * (i.e. a context-param in {@code web.xml}): "responseEncodedHtmlEscape"., +	 */, +	public static final String RESPONSE_ENCODED_HTML_ESCAPE_CONTEXT_PARAM = "responseEncodedHtmlEscape";, +, +	/**, +	 * @deprecated as of Spring 4.1, in favor of {@link #getDefaultHtmlEscape}, +	@Deprecated, +	 * Return whether response encoding should be used when HTML escaping characters,, +	 * thus only escaping XML markup significant characters with UTF-* encodings., +	 * This option is enabled for the web application with a ServletContext param,, +	 * i.e. the value of the "responseEncodedHtmlEscape" context-param in {@code web.xml}, +	 * (if any)., +	 * <p>This method differentiates between no param specified at all and, +	 * an actual boolean value specified, allowing to have a context-specific, +	 * default in case of no setting at the global level., +	 * @param servletContext the servlet context of the web application, +	 * @return whether response encoding is used for HTML escaping (null = no explicit default), +	 */, +	public static Boolean getResponseEncodedHtmlEscape(ServletContext servletContext) {, +		if (servletContext == null) {, +			return null;, +		}, +		String param = servletContext.getInitParameter(RESPONSE_ENCODED_HTML_ESCAPE_CONTEXT_PARAM);, +		return (StringUtils.hasText(param)? Boolean.valueOf(param) : null);, +	}, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/web/util/WebUtils.java, +	 * Use of response encoding for HTML escaping parameter at the servlet context level, +	 * (i.e. a context-param in {@code web.xml}): "responseEncodedHtmlEscape"., +	 */, +	public static final String RESPONSE_ENCODED_HTML_ESCAPE_CONTEXT_PARAM = "responseEncodedHtmlEscape";, +, +	/**, +	 * @deprecated as of Spring 4.1, in favor of {@link #getDefaultHtmlEscape}, +	@Deprecated, +	 * Return whether response encoding should be used when HTML escaping characters,, +	 * thus only escaping XML markup significant characters with UTF-* encodings., +	 * This option is enabled for the web application with a ServletContext param,, +	 * i.e. the value of the "responseEncodedHtmlEscape" context-param in {@code web.xml}, +	 * (if any)., +	 * <p>This method differentiates between no param specified at all and, +	 * an actual boolean value specified, allowing to have a context-specific, +	 * default in case of no setting at the global level., +	 * @param servletContext the servlet context of the web application, +	 * @return whether response encoding is used for HTML escaping (null = no explicit default), +	 */, +	public static Boolean getResponseEncodedHtmlEscape(ServletContext servletContext) {, +		if (servletContext == null) {, +			return null;, +		}, +		String param = servletContext.getInitParameter(RESPONSE_ENCODED_HTML_ESCAPE_CONTEXT_PARAM);, +		return (StringUtils.hasText(param)? Boolean.valueOf(param) : null);, +	}, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/RequestContext.java, + * Copyright 2002-2014 the original author or authors., +	private Boolean responseEncodedHtmlEscape;, +, +		this.responseEncodedHtmlEscape = WebUtils.getResponseEncodedHtmlEscape(this.webApplicationContext.getServletContext());, +, +	 * Is HTML escaping using the response encoding by default?, +	 * If enabled, only XML markup significant characters will be escaped with UTF-* encodings., +	 * <p>Falls back to {@code false} in case of no explicit default given., +	 * @since 4.1.2, +	 */, +	public boolean isResponseEncodedHtmlEscape() {, +		return (this.responseEncodedHtmlEscape != null && this.responseEncodedHtmlEscape.booleanValue());, +	}, +, +	/**, +	 * Return the default setting about use of response encoding for HTML escape setting,, +	 * differentiating between no default specified and an explicit value., +	 * @return whether default use of response encoding HTML escaping is enabled (null = no explicit default), +	 * @since 4.1.2, +	 */, +	public Boolean getResponseEncodedHtmlEscape() {, +		return this.responseEncodedHtmlEscape;, +	}, +, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/web/util/WebUtils.java, +	 * Use of response encoding for HTML escaping parameter at the servlet context level, +	 * (i.e. a context-param in {@code web.xml}): "responseEncodedHtmlEscape"., +	 */, +	public static final String RESPONSE_ENCODED_HTML_ESCAPE_CONTEXT_PARAM = "responseEncodedHtmlEscape";, +, +	/**, +	 * @deprecated as of Spring 4.1, in favor of {@link #getDefaultHtmlEscape}, +	@Deprecated, +	 * Return whether response encoding should be used when HTML escaping characters,, +	 * thus only escaping XML markup significant characters with UTF-* encodings., +	 * This option is enabled for the web application with a ServletContext param,, +	 * i.e. the value of the "responseEncodedHtmlEscape" context-param in {@code web.xml}, +	 * (if any)., +	 * <p>This method differentiates between no param specified at all and]