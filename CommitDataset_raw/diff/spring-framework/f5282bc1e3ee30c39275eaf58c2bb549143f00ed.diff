[+++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/PayloadArgumentResolver.java, +		Class<?> payloadClass = payload.getClass();, +		if (ClassUtils.isAssignable(targetClass, payloadClass)) {, +				throw new MessageConversionException(message, "Cannot convert from [" +, +						payloadClass.getName() + "] to [" + targetClass.getName() + "] for " + message);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/PayloadArgumentResolver.java, +		Class<?> payloadClass = payload.getClass();, +		if (ClassUtils.isAssignable(targetClass, payloadClass)) {, +				throw new MessageConversionException(message, "Cannot convert from [" +, +						payloadClass.getName() + "] to [" + targetClass.getName() + "] for " + message);, +++ b/spring-messaging/src/test/java/org/springframework/messaging/handler/annotation/support/PayloadArgumentResolverTests.java, + * Copyright 2002-2016 the original author or authors., +		thrown.expectMessage("Cannot convert");]