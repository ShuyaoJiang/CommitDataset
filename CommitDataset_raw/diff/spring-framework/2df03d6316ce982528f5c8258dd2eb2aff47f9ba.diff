[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +import org.springframework.web.servlet.HandlerInterceptor;, +		if (handlerMapping != null) {, +			handlerMapping.setInterceptors(new HandlerInterceptor[] {, +					new ResourceUrlProviderExposingInterceptor(mvcResourceUrlProvider())});, +		}, +		else {, +			handlerMapping = new EmptyHandlerMapping();, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +import org.springframework.web.servlet.HandlerInterceptor;, +		if (handlerMapping != null) {, +			handlerMapping.setInterceptors(new HandlerInterceptor[] {, +					new ResourceUrlProviderExposingInterceptor(mvcResourceUrlProvider())});, +		}, +		else {, +			handlerMapping = new EmptyHandlerMapping();, +		}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupportExtensionTests.java, +		assertEquals(Arrays.toString(chain.getInterceptors()), 2, chain.getInterceptors().length);, +		// PathExposingHandlerInterceptor at chain.getInterceptors()[0], +		assertEquals(ResourceUrlProviderExposingInterceptor.class, chain.getInterceptors()[1].getClass());]