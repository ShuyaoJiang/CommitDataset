[+++ b/spring-oxm/src/main/java/org/springframework/oxm/config/CastorMarshallerBeanDefinitionParser.java, + * Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.castor.CastorMarshaller";, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/config/CastorMarshallerBeanDefinitionParser.java, + * Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.castor.CastorMarshaller";, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/config/Jaxb2MarshallerBeanDefinitionParser.java, +* Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.jaxb.Jaxb2Marshaller";, +		String contextPath = element.getAttribute("context-path");, +		if (!StringUtils.hasText(contextPath)) {, +			// Backwards compatibility with 3.x version of the xsd, +			contextPath = element.getAttribute("contextPath");, +		}, +, +		List<Element> classes = DomUtils.getChildElementsByTagName(element, "class-to-be-bound");, +			ManagedList<String> classesToBeBound = new ManagedList<String>(classes.size());, +			for (Element classToBeBound : classes) {, +++ b/spring-oxm/src/main/java/org/springframework/oxm/config/CastorMarshallerBeanDefinitionParser.java, + * Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.castor.CastorMarshaller";, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/config/Jaxb2MarshallerBeanDefinitionParser.java, +* Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.jaxb.Jaxb2Marshaller";, +		String contextPath = element.getAttribute("context-path");, +		if (!StringUtils.hasText(contextPath)) {, +			// Backwards compatibility with 3.x version of the xsd, +			contextPath = element.getAttribute("contextPath");, +		}, +, +		List<Element> classes = DomUtils.getChildElementsByTagName(element, "class-to-be-bound");, +			ManagedList<String> classesToBeBound = new ManagedList<String>(classes.size());, +			for (Element classToBeBound : classes) {, +++ b/spring-oxm/src/main/java/org/springframework/oxm/config/JibxMarshallerBeanDefinitionParser.java, + * Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.jibx.JibxMarshaller";, +++ b/spring-oxm/src/main/java/org/springframework/oxm/config/CastorMarshallerBeanDefinitionParser.java, + * Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.castor.CastorMarshaller";, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/config/Jaxb2MarshallerBeanDefinitionParser.java, +* Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.jaxb.Jaxb2Marshaller";, +		String contextPath = element.getAttribute("context-path");, +		if (!StringUtils.hasText(contextPath)) {, +			// Backwards compatibility with 3.x version of the xsd, +			contextPath = element.getAttribute("contextPath");, +		}, +, +		List<Element> classes = DomUtils.getChildElementsByTagName(element, "class-to-be-bound");, +			ManagedList<String> classesToBeBound = new ManagedList<String>(classes.size());, +			for (Element classToBeBound : classes) {, +++ b/spring-oxm/src/main/java/org/springframework/oxm/config/JibxMarshallerBeanDefinitionParser.java, + * Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.jibx.JibxMarshaller";, +++ b/spring-oxm/src/main/java/org/springframework/oxm/config/XmlBeansMarshallerBeanDefinitionParser.java, + * Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.xmlbeans.XmlBeansMarshaller";, +++ b/spring-oxm/src/main/java/org/springframework/oxm/config/CastorMarshallerBeanDefinitionParser.java, + * Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.castor.CastorMarshaller";, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/config/Jaxb2MarshallerBeanDefinitionParser.java, +* Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.jaxb.Jaxb2Marshaller";, +		String contextPath = element.getAttribute("context-path");, +		if (!StringUtils.hasText(contextPath)) {, +			// Backwards compatibility with 3.x version of the xsd, +			contextPath = element.getAttribute("contextPath");, +		}, +, +		List<Element> classes = DomUtils.getChildElementsByTagName(element, "class-to-be-bound");, +			ManagedList<String> classesToBeBound = new ManagedList<String>(classes.size());, +			for (Element classToBeBound : classes) {, +++ b/spring-oxm/src/main/java/org/springframework/oxm/config/JibxMarshallerBeanDefinitionParser.java, + * Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.jibx.JibxMarshaller";, +++ b/spring-oxm/src/main/java/org/springframework/oxm/config/XmlBeansMarshallerBeanDefinitionParser.java, + * Copyright 2002-2013 the original author or authors., +		return "org.springframework.oxm.xmlbeans.XmlBeansMarshaller";, +++ b/spring-oxm/src/main/resources/org/springframework/oxm/config/spring-oxm-4.0.xsd, +		targetNamespace="http://www.springframework.org/schema/oxm", +		elementFormDefault="qualified", +					<xsd:attribute name="context-path" type="xsd:string">, +							<xsd:documentation>The JAXB context path.</xsd:documentation>, +					<xsd:attribute name="target-class" type="classType">, +						<xsd:annotation>, +							<xsd:documentation>The target class to be bound with JiBX.</xsd:documentation>, +						</xsd:annotation>, +					</xsd:attribute>, +					<xsd:attribute name="target-package" type="xsd:string">, +						<xsd:annotation>, +							<xsd:documentation>The target package for the JiBX binding.</xsd:documentation>, +						</xsd:annotation>, +					</xsd:attribute>, +					<xsd:attribute name="binding-name" type="xsd:string">, +	<xsd:element name="castor-marshaller">]