[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, + * @author Brian Clozel, +		configurePathMatchingProperties(handlerMappingDef, element);, +, +	private void configurePathMatchingProperties(RootBeanDefinition handlerMappingDef, Element element) {, +, +		Element pathMatchingElement = DomUtils.getChildElementByTagName(element, "path-matching");, +		if(pathMatchingElement != null) {, +			if (pathMatchingElement.hasAttribute("suffix-pattern")) {, +				Boolean useSuffixPatternMatch = Boolean.valueOf(pathMatchingElement.getAttribute("suffix-pattern"));, +				handlerMappingDef.getPropertyValues().add("useSuffixPatternMatch", useSuffixPatternMatch);, +			}, +			if (pathMatchingElement.hasAttribute("trailing-slash")) {, +				Boolean useTrailingSlashMatch = Boolean.valueOf(pathMatchingElement.getAttribute("trailing-slash"));, +				handlerMappingDef.getPropertyValues().add("useTrailingSlashMatch", useTrailingSlashMatch);, +			}, +			if (pathMatchingElement.hasAttribute("registered-suffixes-only")) {, +				Boolean useRegisteredSuffixPatternMatch = Boolean.valueOf(pathMatchingElement.getAttribute("registered-suffixes-only"));, +				handlerMappingDef.getPropertyValues().add("useRegisteredSuffixPatternMatch", useRegisteredSuffixPatternMatch);, +			}, +			if (pathMatchingElement.hasAttribute("path-helper")) {, +				RuntimeBeanReference pathHelperRef = new RuntimeBeanReference(pathMatchingElement.getAttribute("path-helper"));, +				handlerMappingDef.getPropertyValues().add("urlPathHelper", pathHelperRef);, +			}, +			if (pathMatchingElement.hasAttribute("path-matcher")) {, +				RuntimeBeanReference pathMatcherRef = new RuntimeBeanReference(pathMatchingElement.getAttribute("path-matcher"));, +				handlerMappingDef.getPropertyValues().add("pathMatcher", pathMatcherRef);, +			}, +		}, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, + * @author Brian Clozel, +		configurePathMatchingProperties(handlerMappingDef, element);, +, +	private void configurePathMatchingProperties(RootBeanDefinition handlerMappingDef, Element element) {, +, +		Element pathMatchingElement = DomUtils.getChildElementByTagName(element, "path-matching");, +		if(pathMatchingElement != null) {, +			if (pathMatchingElement.hasAttribute("suffix-pattern")) {, +				Boolean useSuffixPatternMatch = Boolean.valueOf(pathMatchingElement.getAttribute("suffix-pattern"));, +				handlerMappingDef.getPropertyValues().add("useSuffixPatternMatch", useSuffixPatternMatch);, +			}, +			if (pathMatchingElement.hasAttribute("trailing-slash")) {, +				Boolean useTrailingSlashMatch = Boolean.valueOf(pathMatchingElement.getAttribute("trailing-slash"));, +				handlerMappingDef.getPropertyValues().add("useTrailingSlashMatch", useTrailingSlashMatch);, +			}, +			if (pathMatchingElement.hasAttribute("registered-suffixes-only")) {, +				Boolean useRegisteredSuffixPatternMatch = Boolean.valueOf(pathMatchingElement.getAttribute("registered-suffixes-only"));, +				handlerMappingDef.getPropertyValues().add("useRegisteredSuffixPatternMatch", useRegisteredSuffixPatternMatch);, +			}, +			if (pathMatchingElement.hasAttribute("path-helper")) {, +				RuntimeBeanReference pathHelperRef = new RuntimeBeanReference(pathMatchingElement.getAttribute("path-helper"));, +				handlerMappingDef.getPropertyValues().add("urlPathHelper", pathHelperRef);, +			}, +			if (pathMatchingElement.hasAttribute("path-matcher")) {, +				RuntimeBeanReference pathMatcherRef = new RuntimeBeanReference(pathMatchingElement.getAttribute("path-matcher"));, +				handlerMappingDef.getPropertyValues().add("pathMatcher", pathMatcherRef);, +			}, +		}, +	}, +, +++ b/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc-4.0.xsd, +                <xsd:element name="path-matching" minOccurs="0">, +                    <xsd:annotation>, +                        <xsd:documentation><![CDATA[, +    Configures the path matching part of the Spring MVC Controller programming model., +    Like annotation-driven, code-based alternatives are also documented in EnableWebMvc Javadoc., +						]]></xsd:documentation>, +                    </xsd:annotation>, +                    <xsd:complexType>, +                        <xsd:attribute name="suffix-pattern" type="xsd:boolean">, +                            <xsd:annotation>, +                                <xsd:documentation><![CDATA[, +    Whether to use suffix pattern match (".*") when matching patterns to requests. If enabled, +    a method mapped to "/users" also matches to "/users.*"., +    The default value is true., +					            ]]></xsd:documentation>, +                            </xsd:annotation>, +                        </xsd:attribute>, +                        <xsd:attribute name="trailing-slash" type="xsd:boolean">, +                            <xsd:annotation>, +                                <xsd:documentation><![CDATA[, +    Whether to match to URLs irrespective of the presence of a trailing slash., +    If enabled a method mapped to "/users" also matches to "/users/"., +    The default value is true., +                                        ]]></xsd:documentation>, +                            </xsd:annotation>, +                        </xsd:attribute>, +                        <xsd:attribute name="registered-suffixes-only" type="xsd:boolean">, +                            <xsd:annotation>, +                                <xsd:documentation><![CDATA[, +    Whether to use suffix pattern match for registered file extensions only when matching patterns to requests., +    If enabled, a controller method mapped to "/users" also matches to "/users.json" assuming ".json" is a file extension registered with, +    the provided ContentNegotiationManager. This can be useful for allowing only specific URL extensions to be used as well as in cases, +    where a "." in the URL path can lead to ambiguous interpretation of path variable content, (e.g. given "/users/{user}" and incoming, +    URLs such as "/users/john.j.joe" and "/users/john.j.joe.json")., +    If enabled, this attribute also enables suffix-pattern. The default value is false., +                                ]]></xsd:documentation>, +                            </xsd:annotation>]