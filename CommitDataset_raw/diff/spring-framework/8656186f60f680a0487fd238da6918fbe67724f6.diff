[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy.java, +import java.io.IOException;, +import java.util.Map;, +import javax.servlet.ServletException;, +, + * RequestUpgradeStrategy for WildFly and its underlying Undertow web, + * server. Also compatible with embedded Undertow usage., + * <p>Compatible with Undertow 1.0 to 1.3 and also 1.3.5+ - as included in, + * WildFly 8.x, 9 and 10., +	private static final boolean HAS_DO_UPGRADE = ClassUtils.hasMethod(ServerWebSocketContainer.class,, +			"doUpgrade", (Class<?>[]) null);, +, +	private static final FallbackStrategy FALLBACK_STRATEGY = (HAS_DO_UPGRADE ? null : new FallbackStrategy());, +, +	private static final String[] VERSIONS = new String[] {, +			WebSocketVersion.V13.toHttpHeaderValue(),, +			WebSocketVersion.V08.toHttpHeaderValue(),, +			WebSocketVersion.V07.toHttpHeaderValue(), +	};, +, +, +	@Override, +	public String[] getSupportedVersions() {, +		return VERSIONS;, +	}, +, +	@Override, +	protected void upgradeInternal(ServerHttpRequest request, ServerHttpResponse response,, +			String selectedProtocol, List<Extension> selectedExtensions, Endpoint endpoint), +			throws HandshakeFailureException {, +, +		if (HAS_DO_UPGRADE) {, +			HttpServletRequest servletRequest = getHttpServletRequest(request);, +			HttpServletResponse servletResponse = getHttpServletResponse(response);, +, +			StringBuffer requestUrl = servletRequest.getRequestURL();, +			String path = servletRequest.getRequestURI();  // shouldn't matter, +			Map<String, String> pathParams = Collections.<String, String>emptyMap();, +, +			ServerEndpointRegistration endpointConfig = new ServerEndpointRegistration(path, endpoint);, +			endpointConfig.setSubprotocols(Collections.singletonList(selectedProtocol));, +			endpointConfig.setExtensions(selectedExtensions);, +, +			try {, +				getContainer(servletRequest).doUpgrade(servletRequest, servletResponse,, +						endpointConfig, pathParams);, +			}, +			catch (ServletException ex) {, +				throw new HandshakeFailureException(, +						"Servlet request failed to upgrade to WebSocket: " + requestUrl, ex);, +			}, +			catch (IOException ex) {, +				throw new HandshakeFailureException(, +						"Response update failed during upgrade to WebSocket: " + requestUrl, ex);, +			}, +		}, +		else {, +			FALLBACK_STRATEGY.upgradeInternal(request, response, selectedProtocol,, +					selectedExtensions, endpoint);, +		}, +	}, +, +	public ServerWebSocketContainer getContainer(HttpServletRequest request) {, +		return (ServerWebSocketContainer) super.getContainer(request);, +	}, +, +, +	/**, +	 * Strategy for use with Undertow 1.0 to 1.3 before there was a public API, +	 * to perform a WebSocket upgrade., +	 */, +	private static class FallbackStrategy extends AbstractStandardUpgradeStrategy {, +, +		public FallbackStrategy() {, +			return VERSIONS;, +			endpointRegistration.setSubprotocols(Collections.singletonList(selectedProtocol));, +	}]