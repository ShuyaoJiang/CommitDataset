[+++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJProxyUtils.java, + * Copyright 2002-2019 the original author or authors., + * @author Juergen Hoeller, +	 * Add special advisors if necessary to work with a proxy chain that contains AspectJ advisors:, +	 * concretely, {@link ExposeInvocationInterceptor} at the beginning of the list., +	 * <p>This will expose the current Spring AOP invocation (necessary for some AspectJ pointcut, +	 * matching) and make available the current AspectJ JoinPoint. The call will have no effect, +	 * if there are no AspectJ advisors in the advisor chain., +	 * @return {@code true} if an {@link ExposeInvocationInterceptor} was added to the list,, +	 * otherwise {@code false}, +				// Be careful not to get the Advice without a guard, as this might eagerly, +				// instantiate a non-singleton AspectJ aspect..., +					break;]