[+++ b/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java, +	/**, +	 * Copy constructor., +	 */, +	public CorsConfiguration(CorsConfiguration other) {, +		this.allowedOrigins = other.allowedOrigins;, +		this.allowedMethods = other.allowedMethods;, +		this.allowedHeaders = other.allowedHeaders;, +		this.exposedHeaders = other.exposedHeaders;, +		this.allowCredentials = other.allowCredentials;, +		this.maxAge = other.maxAge;, +	}, +, +	/**, +	 * Combine the specified {@link CorsConfiguration} with this one., +	 * Properties of this configuration are overridden only by non-null properties, +	 * of the provided one., +	 * @return the combined {@link CorsConfiguration}, +	 */, +	public CorsConfiguration combine(CorsConfiguration other) {, +		if (other == null) {, +			return this;, +		}, +		CorsConfiguration config = new CorsConfiguration(this);, +		config.setAllowedOrigins(combine(this.getAllowedOrigins(), other.getAllowedOrigins()));, +		config.setAllowedMethods(combine(this.getAllowedMethods(), other.getAllowedMethods()));, +		config.setAllowedHeaders(combine(this.getAllowedHeaders(), other.getAllowedHeaders()));, +		config.setExposedHeaders(combine(this.getExposedHeaders(), other.getExposedHeaders()));, +		Boolean allowCredentials = other.getAllowCredentials();, +		if (allowCredentials != null) {, +			config.setAllowCredentials(allowCredentials);, +		}, +		Long maxAge = other.getMaxAge();, +		if (maxAge != null) {, +			config.setMaxAge(maxAge);, +		}, +		return config;, +	}, +, +	private List<String> combine(List<String> source, List<String> other) {, +		if (other == null) {, +			return source;, +		}, +		if (source == null || source.contains("*")) {, +			return other;, +		}, +		List<String> combined = new ArrayList<String>(source);, +		combined.addAll(other);, +		return combined;, +	} , +		if (exposedHeaders != null && exposedHeaders.contains("*")) {, +			throw new IllegalArgumentException("'*' is not a valid exposed header value");, +		}, +		if ("*".equals(exposedHeader)) {, +			throw new IllegalArgumentException("'*' is not a valid exposed header value");, +		}, +++ b/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java, +	/**, +	 * Copy constructor., +	 */, +	public CorsConfiguration(CorsConfiguration other) {, +		this.allowedOrigins = other.allowedOrigins;, +		this.allowedMethods = other.allowedMethods;, +		this.allowedHeaders = other.allowedHeaders;, +		this.exposedHeaders = other.exposedHeaders;, +		this.allowCredentials = other.allowCredentials;, +		this.maxAge = other.maxAge;, +	}, +, +	/**, +	 * Combine the specified {@link CorsConfiguration} with this one., +	 * Properties of this configuration are overridden only by non-null properties, +	 * of the provided one., +	 * @return the combined {@link CorsConfiguration}, +	 */, +	public CorsConfiguration combine(CorsConfiguration other) {, +		if (other == null) {, +			return this;, +		}, +		CorsConfiguration config = new CorsConfiguration(this);, +		config.setAllowedOrigins(combine(this.getAllowedOrigins(), other.getAllowedOrigins()));, +		config.setAllowedMethods(combine(this.getAllowedMethods(), other.getAllowedMethods()));, +		config.setAllowedHeaders(combine(this.getAllowedHeaders(), other.getAllowedHeaders()));, +		config.setExposedHeaders(combine(this.getExposedHeaders(), other.getExposedHeaders()));, +		Boolean allowCredentials = other.getAllowCredentials();, +		if (allowCredentials != null) {, +			config.setAllowCredentials(allowCredentials);, +		}, +		Long maxAge = other.getMaxAge();, +		if (maxAge != null) {, +			config.setMaxAge(maxAge);, +		}, +		return config;, +	}, +, +	private List<String> combine(List<String> source, List<String> other) {, +		if (other == null) {, +			return source;, +		}, +		if (source == null || source.contains("*")) {]