[+++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/internal/SpringExpressionsParserExtender.java, +import org.springframework.expression.spel.SpelException;, +import org.springframework.expression.spel.SpelMessages;, +	 * Override super type implementation and just include the character position rather than the line number since the, +	 * expressions are nearly all going to be just one line., +	public String getErrorHeader(RecognitionException e) {, +		StringBuilder retval = new StringBuilder();, +		retval.append("(pos ").append(e.charPositionInLine).append("): ");, +		return retval.toString();, +	public void displayRecognitionError(String[] tokenNames, RecognitionException e) {, +		String message = getErrorMessage(e, tokenNames);, +		// TODO would something like this be worthwhile to improve messages?, +		// if (message.equals("no viable alternative at input '<EOF>'") && !paraphrase.isEmpty()) {, +		// // This means we ran out of input building something, that something is named in paraphrase, +		// message = "no more input data to process whilst constructing " + paraphrase.peek();, +		// }, +		SpelException parsingProblem = new SpelException(e.charPositionInLine, e, SpelMessages.PARSE_PROBLEM, message);, +		throw new InternalELException(parsingProblem);, +	}, +, +	/**, +	 * Overridden purely because the base implementation does a System.err.println(), +	 */, +	@Override, +	public void recoverFromMismatchedToken(IntStream input, RecognitionException e, int ttype, BitSet follow), +		// if next token is what we are looking for then "delete" this token, +		if (input.LA(2) == ttype) {, +			reportError(e);, +			/*, +			 * System.err.println("recoverFromMismatchedToken deleting "+input.LT(1)+ " since "+input.LT(2)+" is what we, +			 * want");, +			 */, +			beginResync();, +			input.consume(); // simply delete extra token, +			endResync();, +			input.consume(); // move past ttype token as if all were ok, +			return;, +		}, +		if (!recoverFromMismatchedElement(input, e, follow)) {, +	}]