[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultWebTestClient.java, +			assertWithDiagnostics(() -> {, +			});, +		private final UndecodedExchangeResult result;, +			this.result = new UndecodedExchangeResult(httpRequest, response);, +			return new StatusAssertions(this.result, this);, +			return new HeaderAssertions(this.result, this);, +			return new DefaultTypeBodySpec(this.result, elementType);, +			return new DefaultBodySpec(this.result);, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +				consumer.accept(this.result);, +			});, +			return this.result;, +		private final UndecodedExchangeResult result;, +			this.result = result;, +			return new DefaultSingleValueBodySpec(this.result.consumeSingle(this.elementType));, +			return new DefaultListBodySpec(this.result.consumeList(this.elementType, count));, +			return this.result.decodeBody(this.elementType);, +		private final EntityExchangeResult<?> result;, +			this.result = result;, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +				assertEquals("Response body", expected, this.result.getResponseBody());, +			});, +			return new EntityExchangeResult<>(this.result, (T) this.result.getResponseBody());, +		private final EntityExchangeResult<List<?>> result;, +			this.result = result;, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +				assertEquals("Response body", expected, this.result.getResponseBody());, +			});, +			this.result.assertWithDiagnostics(() -> {, +				assertTrue(message, this.result.getResponseBody().containsAll(elementList));, +			});, +			this.result.assertWithDiagnostics(() -> {, +				assertTrue(message, !this.result.getResponseBody().containsAll(Arrays.asList(elements)));, +			});, +			return new EntityExchangeResult<>(this.result,  (List<T>) this.result.getResponseBody());, +			return new DefaultMapBodySpec(this.exchangeResult.consumeMap(keyType, valueType));, +		private final EntityExchangeResult<Map<?, ?>> result;, +			this.result = result;, +			return this.result.getResponseBody();, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +			});, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +			});, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +			});, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +			});, +			this.result.assertWithDiagnostics(() -> {, +			});, +			return new EntityExchangeResult<>(this.result, (Map<K, V>) getBody());, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultWebTestClient.java, +			assertWithDiagnostics(() -> {, +			});, +		private final UndecodedExchangeResult result;, +			this.result = new UndecodedExchangeResult(httpRequest, response);, +			return new StatusAssertions(this.result, this);, +			return new HeaderAssertions(this.result, this);, +			return new DefaultTypeBodySpec(this.result, elementType);, +			return new DefaultBodySpec(this.result);, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +				consumer.accept(this.result);, +			});, +			return this.result;, +		private final UndecodedExchangeResult result;, +			this.result = result;, +			return new DefaultSingleValueBodySpec(this.result.consumeSingle(this.elementType));, +			return new DefaultListBodySpec(this.result.consumeList(this.elementType, count));, +			return this.result.decodeBody(this.elementType);, +		private final EntityExchangeResult<?> result;, +			this.result = result;, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +				assertEquals("Response body", expected, this.result.getResponseBody());, +			});, +			return new EntityExchangeResult<>(this.result, (T) this.result.getResponseBody());, +		private final EntityExchangeResult<List<?>> result;, +			this.result = result;, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +				assertEquals("Response body", expected, this.result.getResponseBody());, +			});, +			this.result.assertWithDiagnostics(() -> {, +				assertTrue(message, this.result.getResponseBody().containsAll(elementList));, +			});, +			this.result.assertWithDiagnostics(() -> {, +				assertTrue(message, !this.result.getResponseBody().containsAll(Arrays.asList(elements)));, +			});, +			return new EntityExchangeResult<>(this.result,  (List<T>) this.result.getResponseBody());, +			return new DefaultMapBodySpec(this.exchangeResult.consumeMap(keyType, valueType));, +		private final EntityExchangeResult<Map<?, ?>> result;, +			this.result = result;, +			return this.result.getResponseBody();, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +			});, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +			});, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +			});, +			return this.result.assertWithDiagnosticsAndReturn(() -> {, +			});, +			this.result.assertWithDiagnostics(() -> {]