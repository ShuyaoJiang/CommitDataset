[+++ b/spring-context/src/main/java/org/springframework/scheduling/config/ScheduledTaskRegistrar.java, + * Copyright 2002-2018 the original author or authors., +	@SuppressWarnings("deprecation"), +++ b/spring-context/src/main/java/org/springframework/scheduling/config/ScheduledTaskRegistrar.java, + * Copyright 2002-2018 the original author or authors., +	@SuppressWarnings("deprecation"), +++ b/spring-context/src/test/java/org/springframework/format/datetime/DateFormatterTests.java, + * Copyright 2002-2018 the original author or authors., +	public ExpectedException thrown = ExpectedException.none();, +		thrown.expect(IllegalStateException.class);, +		thrown.expectMessage("Unsupported style pattern 'OO'");, +++ b/spring-context/src/main/java/org/springframework/scheduling/config/ScheduledTaskRegistrar.java, + * Copyright 2002-2018 the original author or authors., +	@SuppressWarnings("deprecation"), +++ b/spring-context/src/test/java/org/springframework/format/datetime/DateFormatterTests.java, + * Copyright 2002-2018 the original author or authors., +	public ExpectedException thrown = ExpectedException.none();, +		thrown.expect(IllegalStateException.class);, +		thrown.expectMessage("Unsupported style pattern 'OO'");, +++ b/spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java, + * Copyright 2002-2018 the original author or authors., +	public void setup() {, +		setup(registrar);, +	private void setup(DateFormatterRegistrar registrar) {, +	public void dateToStringWithoutGlobalFormat() {, +	public void dateToStringWithGlobalFormat() {, +		setup(registrar);, +	@Test  // SPR-10105, +	public void stringToDateWithoutGlobalFormat() {, +	@Test  // SPR-10105, +	public void stringToDateWithGlobalFormat() {, +		setup(registrar);, +++ b/spring-context/src/main/java/org/springframework/scheduling/config/ScheduledTaskRegistrar.java, + * Copyright 2002-2018 the original author or authors., +	@SuppressWarnings("deprecation"), +++ b/spring-context/src/test/java/org/springframework/format/datetime/DateFormatterTests.java, + * Copyright 2002-2018 the original author or authors., +	public ExpectedException thrown = ExpectedException.none();, +		thrown.expect(IllegalStateException.class);, +		thrown.expectMessage("Unsupported style pattern 'OO'");, +++ b/spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java, + * Copyright 2002-2018 the original author or authors., +	public void setup() {, +		setup(registrar);, +	private void setup(DateFormatterRegistrar registrar) {, +	public void dateToStringWithoutGlobalFormat() {, +	public void dateToStringWithGlobalFormat() {, +		setup(registrar);, +	@Test  // SPR-10105, +	public void stringToDateWithoutGlobalFormat() {, +	@Test  // SPR-10105, +	public void stringToDateWithGlobalFormat() {, +		setup(registrar);, +++ b/spring-context/src/test/java/org/springframework/format/datetime/joda/DateTimeFormatterFactoryBeanTests.java, + * Copyright 2002-2018 the original author or authors., +	private final DateTimeFormatterFactoryBean factory = new DateTimeFormatterFactoryBean();, +, +	public void isSingleton() {, +	public void getObjectType() {, +	public void getObject() {, +	public void getObjectIsAlwaysSingleton() {, +++ b/spring-context/src/main/java/org/springframework/scheduling/config/ScheduledTaskRegistrar.java, + * Copyright 2002-2018 the original author or authors., +	@SuppressWarnings("deprecation"), +++ b/spring-context/src/test/java/org/springframework/format/datetime/DateFormatterTests.java, + * Copyright 2002-2018 the original author or authors., +	public ExpectedException thrown = ExpectedException.none();, +		thrown.expect(IllegalStateException.class);, +		thrown.expectMessage("Unsupported style pattern 'OO'");, +++ b/spring-context/src/test/java/org/springframework/format/datetime/DateFormattingTests.java, + * Copyright 2002-2018 the original author or authors., +	public void setup() {, +		setup(registrar);, +	private void setup(DateFormatterRegistrar registrar) {, +	public void dateToStringWithoutGlobalFormat() {, +	public void dateToStringWithGlobalFormat() {, +		setup(registrar);, +	@Test  // SPR-10105, +	public void stringToDateWithoutGlobalFormat() {, +	@Test  // SPR-10105, +	public void stringToDateWithGlobalFormat() {, +		setup(registrar);, +++ b/spring-context/src/test/java/org/springframework/format/datetime/joda/DateTimeFormatterFactoryBeanTests.java, + * Copyright 2002-2018 the original author or authors., +	private final DateTimeFormatterFactoryBean factory = new DateTimeFormatterFactoryBean();, +, +	public void isSingleton() {, +	public void getObjectType() {, +	public void getObject() {, +	public void getObjectIsAlwaysSingleton() {, +++ b/spring-context/src/test/java/org/springframework/format/datetime/joda/DateTimeFormatterFactoryTests.java, + * Copyright 2002-2018 the original author or authors., +	public void createDateTimeFormatter() {, +	public void createDateTimeFormatterWithPattern() {, +	public void createDateTimeFormatterWithNullFallback() {, +	public void createDateTimeFormatterWithFallback() {, +	public void createDateTimeFormatterInOrderOfPropertyPriority() {, +	public void createDateTimeFormatterWithTimeZone() {, +++ b/spring-context/src/main/java/org/springframework/scheduling/config/ScheduledTaskRegistrar.java, + * Copyright 2002-2018 the original author or authors.]