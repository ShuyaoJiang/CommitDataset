[+++ b/org.springframework.core/src/main/java/org/springframework/util/WeakReferenceMonitor.java, + * Copyright 2002-2010 the original author or authors., +	private static final Map<Reference, ReleaseListener> trackedEntries = new HashMap<Reference, ReleaseListener>();, +		synchronized (WeakReferenceMonitor.class) {, +			if (monitoringThread == null) {, +		synchronized (WeakReferenceMonitor.class) {, +	}, +	 * Check whether to keep the monitoring thread alive,, +	 * i.e. whether there are still entries being tracked., +	private static boolean keepMonitoringThreadAlive() {, +			if (!trackedEntries.isEmpty()) {, +				return true;, +			}, +			else {, +				logger.debug("No entries left to track - stopping reference monitor thread");, +				monitoringThread = null;, +				return false;, +			}, +			while (keepMonitoringThreadAlive()) {, +						try {, +						catch (Throwable ex) {, +							logger.warn("Reference release listener threw exception", ex);, +						}, +					}, +					logger.debug("Reference monitor thread interrupted", ex);, +					break;, +				}]