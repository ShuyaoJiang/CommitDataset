[+++ b/org.springframework.core/src/main/java/org/springframework/util/xml/AbstractStaxContentHandler.java, + * Copyright 2002-2010 the original author or authors., +	private boolean namespaceContextChanged = false;, +, +		namespaceContextChanged = false;, +		namespaceContextChanged = false;, +		namespaceContextChanged = true;, +		namespaceContextChanged = true;, +			startElementInternal(toQName(uri, qName), atts, namespaceContextChanged ? namespaceContext : null);, +			namespaceContextChanged = false;, +			endElementInternal(toQName(uri, qName), namespaceContextChanged ? namespaceContext : null);, +			namespaceContextChanged = false;, +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/AbstractStaxContentHandler.java, + * Copyright 2002-2010 the original author or authors., +	private boolean namespaceContextChanged = false;, +, +		namespaceContextChanged = false;, +		namespaceContextChanged = false;, +		namespaceContextChanged = true;, +		namespaceContextChanged = true;, +			startElementInternal(toQName(uri, qName), atts, namespaceContextChanged ? namespaceContext : null);, +			namespaceContextChanged = false;, +			endElementInternal(toQName(uri, qName), namespaceContextChanged ? namespaceContext : null);, +			namespaceContextChanged = false;, +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/StaxEventContentHandler.java, +		consumeEvent(eventFactory.createStartElement(name, attributes.iterator(), namespaces != null ? namespaces.iterator() : null));, +		consumeEvent(eventFactory.createEndElement(name, namespaces != null ? namespaces.iterator() : null));, +		if (namespaceContext == null) {, +			return null;, +		}, +]