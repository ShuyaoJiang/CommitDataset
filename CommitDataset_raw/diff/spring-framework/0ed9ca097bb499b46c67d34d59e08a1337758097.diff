[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanDefinition.java, + * Copyright 2002-2015 the original author or authors., +			if (otherAbd.getDestroyMethodName() != null) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanDefinition.java, + * Copyright 2002-2015 the original author or authors., +			if (otherAbd.getDestroyMethodName() != null) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DisposableBeanAdapter.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.util.StringUtils;, + * @author Stephane Nicoll, +		String destroyMethodName = beanDefinition.getDestroyMethodName();, +		if (AbstractBeanDefinition.INFER_METHOD.equals(destroyMethodName) ||, +				(destroyMethodName == null && closeableInterface.isInstance(bean))) {, +		return (StringUtils.hasLength(destroyMethodName) ? destroyMethodName : null);, +		return StringUtils.hasLength(destroyMethodName);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanDefinition.java, + * Copyright 2002-2015 the original author or authors., +			if (otherAbd.getDestroyMethodName() != null) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DisposableBeanAdapter.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.util.StringUtils;, + * @author Stephane Nicoll, +		String destroyMethodName = beanDefinition.getDestroyMethodName();, +		if (AbstractBeanDefinition.INFER_METHOD.equals(destroyMethodName) ||, +				(destroyMethodName == null && closeableInterface.isInstance(bean))) {, +		return (StringUtils.hasLength(destroyMethodName) ? destroyMethodName : null);, +		return StringUtils.hasLength(destroyMethodName);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanDefinition.java, + * Copyright 2002-2015 the original author or authors., +			if (otherAbd.getDestroyMethodName() != null) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DisposableBeanAdapter.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.util.StringUtils;, + * @author Stephane Nicoll, +		String destroyMethodName = beanDefinition.getDestroyMethodName();, +		if (AbstractBeanDefinition.INFER_METHOD.equals(destroyMethodName) ||, +				(destroyMethodName == null && closeableInterface.isInstance(bean))) {, +		return (StringUtils.hasLength(destroyMethodName) ? destroyMethodName : null);, +		return StringUtils.hasLength(destroyMethodName);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +		if (destroyMethodName != null) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanDefinition.java, + * Copyright 2002-2015 the original author or authors., +			if (otherAbd.getDestroyMethodName() != null) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DisposableBeanAdapter.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.util.StringUtils;, + * @author Stephane Nicoll, +		String destroyMethodName = beanDefinition.getDestroyMethodName();, +		if (AbstractBeanDefinition.INFER_METHOD.equals(destroyMethodName) ||, +				(destroyMethodName == null && closeableInterface.isInstance(bean))) {, +		return (StringUtils.hasLength(destroyMethodName) ? destroyMethodName : null);, +		return StringUtils.hasLength(destroyMethodName);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +		if (destroyMethodName != null) {, +++ b/spring-context/src/main/java/org/springframework/scripting/config/ScriptBeanDefinitionParser.java, +		if (element.hasAttribute(DESTROY_METHOD_ATTRIBUTE)) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanDefinition.java, + * Copyright 2002-2015 the original author or authors., +			if (otherAbd.getDestroyMethodName() != null) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DisposableBeanAdapter.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.util.StringUtils;, + * @author Stephane Nicoll, +		String destroyMethodName = beanDefinition.getDestroyMethodName();, +		if (AbstractBeanDefinition.INFER_METHOD.equals(destroyMethodName) ||, +				(destroyMethodName == null && closeableInterface.isInstance(bean))) {, +		return (StringUtils.hasLength(destroyMethodName) ? destroyMethodName : null);, +		return StringUtils.hasLength(destroyMethodName);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +		if (destroyMethodName != null) {, +++ b/spring-context/src/main/java/org/springframework/scripting/config/ScriptBeanDefinitionParser.java, +		if (element.hasAttribute(DESTROY_METHOD_ATTRIBUTE)) {, +++ b/spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java, +			if (StringUtils.hasText(abd.getDestroyMethodName())) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanDefinition.java, + * Copyright 2002-2015 the original author or authors., +			if (otherAbd.getDestroyMethodName() != null) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DisposableBeanAdapter.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.util.StringUtils;, + * @author Stephane Nicoll, +		String destroyMethodName = beanDefinition.getDestroyMethodName();, +		if (AbstractBeanDefinition.INFER_METHOD.equals(destroyMethodName) ||, +				(destroyMethodName == null && closeableInterface.isInstance(bean))) {, +		return (StringUtils.hasLength(destroyMethodName) ? destroyMethodName : null);, +		return StringUtils.hasLength(destroyMethodName);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +		if (destroyMethodName != null) {, +++ b/spring-context/src/main/java/org/springframework/scripting/config/ScriptBeanDefinitionParser.java, +		if (element.hasAttribute(DESTROY_METHOD_ATTRIBUTE)) {, +++ b/spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java, +			if (StringUtils.hasText(abd.getDestroyMethodName())) {, +++ b/spring-context/src/test/java/org/springframework/context/annotation/DestroyMethodInferenceTests.java, + * Copyright 2002-2015 the original author or authors.]