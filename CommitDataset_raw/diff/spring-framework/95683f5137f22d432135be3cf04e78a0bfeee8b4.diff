[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java, + * A UriComponentsBuilder that extracts information from an HttpServletRequest., +	 * Prepare a builder from the host, port, scheme, and context path of, +	 * an HttpServletRequest., +		builder.replacePath(request.getContextPath());, +	 * Prepare a builder from the host, port, scheme, context path, and, +	 * servlet mapping of an HttpServletRequest. The results may vary depending, +	 * on the type of servlet mapping used., +	 * <p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path, +	 * will end with "/main". If the servlet is mapped otherwise, e.g., +	 * {@code "/"} or {@code "*.do"}, the result will be the same as, +	 * if calling {@link #fromContextPath(HttpServletRequest)}., +	 * Prepare a builder from the host, port, scheme, and path of, +	 * an HttpSevletRequest., +	 */, +	public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {, +		ServletUriComponentsBuilder builder = fromRequest(request);, +		builder.replacePath(request.getRequestURI());, +		builder.replaceQuery(null);, +		return builder;, +	}, +, +	/**, +	 * Prepare a builder by copying the scheme, host, port, path, and, +	 * query string of an HttpServletRequest., +		builder.path(request.getRequestURI());, +	 * Same as {@link #fromContextPath(HttpServletRequest)} except the, +	 * request is obtained through {@link RequestContextHolder}., +	 * Same as {@link #fromServletMapping(HttpServletRequest)} except the, +	 * request is obtained through {@link RequestContextHolder}., +	 * Same as {@link #fromRequestUri(HttpServletRequest)} except the, +	 * request is obtained through {@link RequestContextHolder}., +	 */, +	public static ServletUriComponentsBuilder fromCurrentRequestUri() {, +		return fromRequestUri(getCurrentRequest());, +	}, +, +	/**, +	 * Same as {@link #fromRequest(HttpServletRequest)} except the, +	 * request is obtained through {@link RequestContextHolder}., +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java, + * A UriComponentsBuilder that extracts information from an HttpServletRequest., +	 * Prepare a builder from the host, port, scheme, and context path of, +	 * an HttpServletRequest., +		builder.replacePath(request.getContextPath());, +	 * Prepare a builder from the host, port, scheme, context path, and, +	 * servlet mapping of an HttpServletRequest. The results may vary depending, +	 * on the type of servlet mapping used., +	 * <p>If the servlet is mapped by name, e.g. {@code "/main/*"}, the path, +	 * will end with "/main". If the servlet is mapped otherwise, e.g., +	 * {@code "/"} or {@code "*.do"}, the result will be the same as, +	 * if calling {@link #fromContextPath(HttpServletRequest)}., +	 * Prepare a builder from the host, port, scheme, and path of, +	 * an HttpSevletRequest., +	 */, +	public static ServletUriComponentsBuilder fromRequestUri(HttpServletRequest request) {, +		ServletUriComponentsBuilder builder = fromRequest(request);, +		builder.replacePath(request.getRequestURI());, +		builder.replaceQuery(null);, +		return builder;, +	}, +, +	/**, +	 * Prepare a builder by copying the scheme, host, port, path, and, +	 * query string of an HttpServletRequest., +		builder.path(request.getRequestURI());, +	 * Same as {@link #fromContextPath(HttpServletRequest)} except the, +	 * request is obtained through {@link RequestContextHolder}., +	 * Same as {@link #fromServletMapping(HttpServletRequest)} except the, +	 * request is obtained through {@link RequestContextHolder}., +	 * Same as {@link #fromRequestUri(HttpServletRequest)} except the, +	 * request is obtained through {@link RequestContextHolder}., +	 */, +	public static ServletUriComponentsBuilder fromCurrentRequestUri() {, +		return fromRequestUri(getCurrentRequest());, +	}, +, +	/**, +	 * Same as {@link #fromRequest(HttpServletRequest)} except the, +	 * request is obtained through {@link RequestContextHolder}., +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/support/ServletUriComponentsBuilderTests.java, + * Copyright 2002-2012 the original author or authors., +		request.setRequestURI("/mvc-showcase/data/foo%20bar");, +		assertEquals("http://localhost/mvc-showcase/data/foo%20bar", result);, +	public void fromRequestUri() {, +		request.setRequestURI("/mvc-showcase/data/param");, +		request.setQueryString("foo=123");, +		String result = ServletUriComponentsBuilder.fromRequestUri(request).build().toUriString();, +, +		assertEquals("http://localhost/mvc-showcase/data/param", result);, +	}, +, +	@Test]