[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultWebTestClient.java, +	public RequestHeadersUriSpec<?> get() {, +		return methodInternal(HttpMethod.GET);, +	public RequestHeadersUriSpec<?> head() {, +		return methodInternal(HttpMethod.HEAD);, +	public RequestBodyUriSpec post() {, +		return methodInternal(HttpMethod.POST);, +	public RequestBodyUriSpec put() {, +		return methodInternal(HttpMethod.PUT);, +	public RequestBodyUriSpec patch() {, +		return methodInternal(HttpMethod.PATCH);, +	public RequestHeadersUriSpec<?> delete() {, +		return methodInternal(HttpMethod.DELETE);, +	public RequestHeadersUriSpec<?> options() {, +		return methodInternal(HttpMethod.OPTIONS);, +	}, +, +	@Override, +	public RequestBodyUriSpec method(HttpMethod method) {, +		return methodInternal(method);, +	}, +, +	private RequestBodyUriSpec methodInternal(HttpMethod method) {, +		return new DefaultRequestBodyUriSpec(this.webClient.method(method));, +	private class DefaultRequestBodyUriSpec implements RequestBodyUriSpec {, +		private final WebClient.RequestBodyUriSpec bodySpec;, +		private String uriTemplate;, +		DefaultRequestBodyUriSpec(WebClient.RequestBodyUriSpec spec) {, +		public RequestBodySpec uri(String uriTemplate, Object... uriVariables) {, +			this.bodySpec.uri(uriTemplate, uriVariables);, +			this.uriTemplate = uriTemplate;, +			return this;, +		}, +, +		@Override, +		public RequestBodySpec uri(String uriTemplate, Map<String, ?> uriVariables) {, +			this.bodySpec.uri(uriTemplate, uriVariables);, +			this.uriTemplate = uriTemplate;, +			return this;, +		}, +, +		@Override, +		public RequestBodySpec uri(Function<UriBuilder, URI> uriFunction) {, +			this.bodySpec.uri(uriFunction);, +			this.uriTemplate = null;, +			return this;, +		}, +, +		@Override, +		public RequestBodySpec uri(URI uri) {, +			this.bodySpec.uri(uri);, +			this.uriTemplate = null;, +			return this;, +		}, +, +		@Override, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultWebTestClient.java, +	public RequestHeadersUriSpec<?> get() {, +		return methodInternal(HttpMethod.GET);, +	public RequestHeadersUriSpec<?> head() {, +		return methodInternal(HttpMethod.HEAD);, +	public RequestBodyUriSpec post() {, +		return methodInternal(HttpMethod.POST);, +	public RequestBodyUriSpec put() {, +		return methodInternal(HttpMethod.PUT);, +	public RequestBodyUriSpec patch() {, +		return methodInternal(HttpMethod.PATCH);, +	public RequestHeadersUriSpec<?> delete() {, +		return methodInternal(HttpMethod.DELETE);, +	public RequestHeadersUriSpec<?> options() {, +		return methodInternal(HttpMethod.OPTIONS);, +	}, +, +	@Override, +	public RequestBodyUriSpec method(HttpMethod method) {, +		return methodInternal(method);, +	}, +, +	private RequestBodyUriSpec methodInternal(HttpMethod method) {, +		return new DefaultRequestBodyUriSpec(this.webClient.method(method));, +	private class DefaultRequestBodyUriSpec implements RequestBodyUriSpec {, +		private final WebClient.RequestBodyUriSpec bodySpec;, +		private String uriTemplate;, +		DefaultRequestBodyUriSpec(WebClient.RequestBodyUriSpec spec) {, +		public RequestBodySpec uri(String uriTemplate, Object... uriVariables) {, +			this.bodySpec.uri(uriTemplate, uriVariables);, +			this.uriTemplate = uriTemplate;, +			return this;, +		}, +, +		@Override, +		public RequestBodySpec uri(String uriTemplate, Map<String, ?> uriVariables) {, +			this.bodySpec.uri(uriTemplate, uriVariables);, +			this.uriTemplate = uriTemplate;, +			return this;, +		}, +, +		@Override, +		public RequestBodySpec uri(Function<UriBuilder, URI> uriFunction) {, +			this.bodySpec.uri(uriFunction);]