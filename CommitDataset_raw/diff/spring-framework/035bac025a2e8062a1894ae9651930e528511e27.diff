[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.java, +import org.springframework.web.filter.DelegatingFilterProxy;, +		if (registration == null) {, +			int counter = -1;, +			while (counter == -1 || registration == null) {, +				counter++;, +				registration = servletContext.addFilter(filterName + "#" + counter, filter);, +				Assert.isTrue(counter < 100,, +						"Failed to register filter '" + filter + "'." +, +						"Could the same Filter instance have been registered already?");, +			}, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.java, +import org.springframework.web.filter.DelegatingFilterProxy;, +		if (registration == null) {, +			int counter = -1;, +			while (counter == -1 || registration == null) {, +				counter++;, +				registration = servletContext.addFilter(filterName + "#" + counter, filter);, +				Assert.isTrue(counter < 100,, +						"Failed to register filter '" + filter + "'." +, +						"Could the same Filter instance have been registered already?");, +			}, +		}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/support/AnnotationConfigDispatcherServletInitializerTests.java, +import org.springframework.web.filter.DelegatingFilterProxy;, +		assertEquals(4, filterRegistrations.size());, +		assertNotNull(filterRegistrations.get("hiddenHttpMethodFilter"));, +		assertNotNull(filterRegistrations.get("delegatingFilterProxy"));, +		assertNotNull(filterRegistrations.get("delegatingFilterProxy#0"));, +		assertNotNull(filterRegistrations.get("delegatingFilterProxy#1"));, +		for (MockFilterRegistration filterRegistration : filterRegistrations.values()) {, +	}, +, +		for (MockFilterRegistration filterRegistration : filterRegistrations.values()) {, +	}, +			if (servlets.containsKey(servletName)) {, +				return null;, +			}, +			if (filters.containsKey(filterName)) {, +				return null;, +			}, +			return new Filter[] {, +					new HiddenHttpMethodFilter(),, +					new DelegatingFilterProxy("a"),, +					new DelegatingFilterProxy("b"),, +					new DelegatingFilterProxy("c"), +			};]