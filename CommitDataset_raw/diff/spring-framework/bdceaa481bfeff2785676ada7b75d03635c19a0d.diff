[+++ b/spring-test/src/test/java/org/springframework/test/context/testng/transaction/programmatic/ProgrammaticTxMgmtTestNGTests.java, +/*, + * Copyright 2002-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.test.context.testng.transaction.programmatic;, +, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +import java.util.Map;, +, +import javax.sql.DataSource;, +, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.jdbc.datasource.DataSourceTransactionManager;, +import org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder;, +import org.springframework.test.annotation.Rollback;, +import org.springframework.test.context.ContextConfiguration;, +import org.springframework.test.context.testng.AbstractTransactionalTestNGSpringContextTests;, +import org.springframework.test.context.transaction.AfterTransaction;, +import org.springframework.test.context.transaction.BeforeTransaction;, +import org.springframework.test.context.transaction.TestTransaction;, +import org.springframework.test.context.transaction.programmatic.ProgrammaticTxMgmtTests;, +import org.springframework.transaction.PlatformTransactionManager;, +import org.springframework.transaction.annotation.Propagation;, +import org.springframework.transaction.annotation.Transactional;, +import org.testng.IHookCallBack;, +import org.testng.ITestResult;, +import org.testng.annotations.Test;, +, +import static org.junit.Assert.*;, +import static org.springframework.test.transaction.TransactionTestUtils.*;, +, +/**, + * This class is a copy of {@link ProgrammaticTxMgmtTests} that has been modified, + * to run with TestNG., + *, + * @author Sam Brannen, + * @since 4.1, + */, +@ContextConfiguration, +public class ProgrammaticTxMgmtTestNGTests extends AbstractTransactionalTestNGSpringContextTests {, +, +	private String testName;, +, +, +	@Override, +	public void run(IHookCallBack callBack, ITestResult testResult) {, +		this.testName = testResult.getMethod().getMethodName();, +		super.run(callBack, testResult);, +	}, +, +	@BeforeTransaction, +	public void beforeTransaction() {, +		deleteFromTables("user");, +		executeSqlScript("classpath:/org/springframework/test/context/jdbc/data.sql", false);, +	}, +, +	@AfterTransaction, +	public void afterTransaction() {, +		switch (testName) {, +			case "commitTxAndStartNewTx": {, +				assertUsers("Dogbert");, +				break;, +			}, +			case "commitTxButDoNotStartNewTx": {, +				assertUsers("Dogbert");, +				break;, +			}, +			case "rollbackTxAndStartNewTx": {, +				assertUsers("Dilbert");, +				break;, +			}, +			case "rollbackTxButDoNotStartNewTx": {, +				assertUsers("Dilbert");, +				break;, +			}, +			case "rollbackTxAndStartNewTxWithDefaultCommitSemantics": {, +				assertUsers("Dilbert", "Dogbert");, +				break;, +			}, +			case "startTxWithExistingTransaction": {, +				assertUsers("Dilbert");, +				break;, +			}, +			default: {]