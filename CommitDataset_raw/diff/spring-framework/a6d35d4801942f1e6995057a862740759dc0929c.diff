[+++ b/build-spring-framework/resources/changelog.txt, +Changes in version 3.1 M1 (2011-02-11), +--------------------------------------, +, +* upgraded to JUnit 4.8.1 and TestNG 5.12.1, +* fixed aspects bundle to declare dependencies for @Async aspect as well, +* introduced Environment abstraction with flexible placeholder resolution, +* introduced support for environment profiles in bean definition files, +* introduced PropertySourcesPlaceholderConfigurer as alternative to PropertyPlaceholderConfigurer, +* introduced "c:" namespace for constructor argument shortcuts (analogous to the "p:" namespace), +* introduced @FeatureConfiguration classes with @Feature methods returns FeatureSpecifications, +* added TxAnnotationDriven and MvcAnnotationDriven etc as out of the box FeatureSpecifications, +* introduced caching abstraction and cache annotation support, +* ProxyCreationContext uses "ThreadLocal.remove()" over "ThreadLocal.set(null)" as well, +* fixed potential InjectionMetadata NPE when using SpringBeanAutowiringInterceptor, +* fixed AbstractBindingResult to avoid NPE in "hashCode()" if target is null, +* EhCacheManagerFactoryBean properly closes "ehcache.xml" input stream, if any, +* Servlet/PortletRequestDataBinder perform unwrapping for MultipartRequest as well, +* ResourceHttpRequestHandler does not set Content-Length header for 304 response, +* LocaleChangeInterceptor validates locale values in order to prevent XSS vulnerability, +, +, +Changes in version 3.0.5 (2010-10-20), +-------------------------------------, +, +* support for Hibernate 3.6 final, +* added core serializer abstraction with default implementations using Java Serialization, +* consistent use of JDK 1.5's "ThreadLocal.remove()" over "ThreadLocal.set(null)", +* fixed JodaTimeContextHolder to use a non-inheritable ThreadLocal and expose a reset method, +* revised "ClassUtils.isAssignable" semantics to cover primitives vs wrappers in both directions, +* optimized AnnotationUtils findAnnotation performance for repeated search on same interfaces, +* ConversionService protects itself against infinite recursion in ObjectToCollectionConverter, +* fixed TypeDescriptor to correctly resolve nested collections and their element types, +* BeanWrapper does not attempt to populate Map values on access (just auto-grows Map itself), +* fixed Autowired/CommonAnnotationBeanPostProcessor to prevent race condition in skipping check, +* fixed @Value injection to correctly cache temporary null results for non-singleton beans, +* ApplicationContext registers context-specific ClassArrayEditor for its bean ClassLoader, +* refined ApplicationContext singleton processing to not fail for manually registered null instances, +* fixed ApplicationContext event processing for repeated invocations to non-singleton listener beans, +* optimized @Bean error messages for static factory methods as well as for argument type mismatches, +* modified expression parsing to pass full TypeDescriptor context through to ConversionService calls, +* adapted expression parser's Constructor/MethodResolver to accept TypeDescriptors instead of raw types, +* SpEL supports projection on any kind of Collection (not just on Lists and arrays), +* SpEL MapAccessor consistently rejects "target.key" style access to Maps if no such key is found, +* SpEL method invocations prefer method with fewest parameters (e.g. no-arg over vararg), +* AspectJExpressionPointcut uses bean ClassLoader for initializing the AspectJ pointcut parser, +* added AnnotationAsyncExecutionAspect as AspectJ-based variant of @Async processing, +* added mode="proxy"/"aspectj" and proxy-target-class options to task:annotation-driven, +* JDBC bundle uses local ClassLoader as bean ClassLoader for "sql-error-codes.xml" parsing, +* EmbeddedDatabaseFactory shuts down database when failing to populate it in "initDatabase()", +* embedded database support now also works with Derby >= 10.6, +* "jdbc:embedded-database" uses id as database name to allow multiple ones in parallel, +* ResourceDatabasePopulator throws descriptive ScriptStatementFailedException with resource details, +* added configurable Connection/Statement/ResultSet target types to Jdbc4NativeJdbcExtractor, +* added OracleJdbc4NativeJdbcExtractor with pre-configured Oracle JDBC API types, +* DefaultLobHandler's "wrapAsLob" mode works with PostgreSQL's "getAsciiStream()" requirement, +* ResultSetWrappingSqlRowSet (as used by JdbcTemplate's "queryForRowSet") supports column labels now, +* LocalSessionFactoryBean's "entityCacheStrategies" works with region names on Hibernate 3.6 as well, +* fixed DefaultMessageListenerContainer's no-message-received commit to work without Session caching, +* DefaultMessageListenerContainer's skips no-message-received commit on Tibco (avoiding a deadlock), +* JaxWsPortClientInterceptor does not fall back to annotation-specified name as portName anymore, +* UriTemplate is serializable now, +* fixed AnnotationMethodHandlerAdapter's caching to avoid concurrency issues in RequestMappingInfo, +* fixed @MVC processing of parameter-level annotations to work with interface-based proxies again, +* revised @RequestParam processing to support CSV-to-array/collection binding with ConversionService, +* fixed EvalTag's EvaluationContext caching to properly handle JSP tag caching across requests, +* AbstractJasperReportsView only sets locale model attributes if not present already, +* DispatcherPortlet throws custom NoHandlerFoundException instead of misleading UnavailableException, +* DispatcherPortlet copies all action parameters to render parameters in case of an action exception, +* DispatcherPortlet's default resource serving explicitly prevents access to WEB-INF and META-INF, +* Portlet @ExceptionHandler methods allow for writing the response directly (like in the Servlet case), +* MockHttpServletRequest/HttpSession/etc returns independent Enumeration from "getAttributeNames()", +, +, +Changes in version 3.0.4 (2010-08-19), +-------------------------------------, +, +* support for Hibernate Core 3.6, Hibernate Validator 4.1, EclipseLink 2.1, EHCache 2.2, +* OSGi manifest version range accepts EHCache 2.x as well, +* added "contentLength()" method to Resource abstraction, +* URL-based Resource variants introspect "last-modified" and "content-length" response headers, +* refined "exists()" check for UrlResource (HEAD request) and ClassPathResource (URL resolution), +* ConversionService is able to deal with empty collections and nested collections (fixed regression), +* ConversionService properly handles nested Resource arrays in Map values (fixed regression), +* ConversionService does not accidentally use copy constructor for same type, +* fixed double ConversionFailedException nesting for ObjectToObjectConverter invocations, +* BeanWrapper preserves annotation information for individual array/list/map elements, +* Spring's constructor resolution consistently finds non-public multi-arg constructors, +* revised constructor argument caching, avoiding a race condition for converted argument values, +* SpEL passes full collection type context (generics, annotations) to ConversionService, +* SpEL 'select last' operator now works consistently with maps, +* BeanWrapper/DataBinder's "autoGrowNestedPaths" works for Maps as well, +* fixed concurrency issue in TypedStringValue, showing for nested typed Maps in prototype beans, +* fixed WeakReferenceMonitor to never stop its monitoring thread if an entry has been registered, +* fixed CronTrigger to correctly parse month parts expressed as numbers (1-12 instead of 0-11), +* TaskExecutorFactoryBean (as used by task:executor) exposes full ThreadPoolTaskExecutor type, +* JmsResourceHolder does not ignore IllegalStateException from locally synchronized transaction, +* fixed JMS CachingConnectionFactory to correctly cache a producer without fixed destination as well, +* DefaultMessageListenerContainer triggers Session commit even if no message has been received, +* DefaultMessageListenerContainer supports client id setting even for non-shared Connections]