[+++ b/build.gradle, +        compile project(":spring-core"), +        compile(project(":spring-instrument"), optional), +        compile project(":spring-beans"), +        compile project(":spring-core"), +        compile(project(":spring-context"), optional) // for JCA, @EnableTransactionManagement, +        compile(project(":spring-aop"), optional), +        compile project(":spring-beans"), +        compile project(":spring-core"), +        compile("org.apache.geronimo.specs:geronimo-jta_1.1_spec:1.1", optional), +        compile project(":spring-beans"), +        compile project(":spring-core"), +        compile(project(":spring-context"), optional) // for Jaxb2Marshaller, +        compile project(":spring-core"), +        compile project(":spring-beans"), +        compile project(":spring-aop"), +        compile project(":spring-context"), +        compile(project(":spring-oxm"), optional), +        compile project(":spring-core"), +        compile project(":spring-beans"), +        compile(project(":spring-context"), optional) // for JndiDataSourceLookup, +        compile("org.apache.geronimo.specs:geronimo-jta_1.1_spec:1.1", optional), +        compile project(":spring-core"), +        compile project(":spring-beans"), +        compile project(":spring-context"), +        compile(project(":spring-jdbc"), optional) // for Quartz support, +        compile(project(":spring-tx"), optional) // for Quartz support, +        compile project(":spring-core"), +        compile project(":spring-beans") // for MultiPartFilter, +        compile project(":spring-aop") // for JaxWsPortProxyFactoryBean, +        compile project(":spring-context"), +        compile(project(":spring-oxm"), optional) // for MarshallingHttpMessageConverter, +        compile project(":spring-core"), +        compile project(":spring-beans"), +        compile(project(":spring-aop"), optional), +        compile(project(":spring-context"), optional), +        compile project(":spring-tx"), +        compile project(":spring-core"), +        compile project(":spring-expression"), +        compile project(":spring-beans"), +        compile project(":spring-context"), +        compile(project(":spring-context-support"), optional) // for Velocity support, +        compile(project(":spring-oxm"), optional) // for MarshallingView, +        testCompile project(":spring-aop"), +        compile project(":spring-core"), +        compile project(":spring-beans"), +        compile project(":spring-context"), +        compile project(":spring-web"), +        compile(project(":spring-beans"), optional), +        compile(project(":spring-context"), optional), +        compile(project(":spring-jdbc"), optional), +        compile(project(":spring-tx"), optional), +        compile(project(":spring-orm"), optional), +        compile(project(":spring-web"), optional), +        compile project(":spring-core"), +        compile project(":spring-beans"), +        compile project(":spring-context"), +        compile project(":spring-web"), +        compile project(":spring-core"), +        compile project(":spring-tx"), +        testCompile project(":spring-core"), +        testCompile project(":spring-beans"), +        testCompile project(":spring-aop"), +        testCompile project(":spring-expression"), +        testCompile project(":spring-context"), +        testCompile project(":spring-tx"), +        testCompile project(":spring-jdbc"), +        testCompile project(":spring-web")]