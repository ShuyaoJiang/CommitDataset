[+++ b/build.gradle, +, +	ext.javadocLinks = [, +		"http://docs.oracle.com/javase/6/docs/api",, +		"http://docs.oracle.com/javaee/6/api",, +		"http://portals.apache.org/pluto/portlet-2.0-apidocs/",, +		"http://commons.apache.org/lang/api-2.5",, +		"http://commons.apache.org/codec/apidocs",, +		"http://docs.jboss.org/jbossas/javadoc/4.0.5/connector",, +		"http://docs.jboss.org/jbossas/javadoc/7.1.2.Final",, +		"http://aopalliance.sourceforge.net/doc",, +		"http://glassfish.java.net/nonav/docs/v3/api",, +		"http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs", // commonj, +		"http://quartz-scheduler.org/api/2.1.5",, +		"http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/",, +		"http://hc.apache.org/httpclient-3.x/apidocs",, +		"http://fasterxml.github.com/jackson-core/javadoc/2.0.0",, +		"http://jackson.codehaus.org/1.4.2/javadoc",, +		"http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs",, +		"http://ibatis.apache.org/docs/java/dev",, +		"http://tiles.apache.org/framework/apidocs",, +		"http://commons.apache.org/dbcp/api-1.2.2",, +	] as String[], +		description = "Generates project-level javadoc for use in -javadoc jar", +, +		options.links(project.ext.javadocLinks), +, +		// suppress warnings due to cross-module @see and @link references;, +		// note that global 'api' task does display all warnings., +		logging.captureStandardError LogLevel.INFO, +		logging.captureStandardOutput LogLevel.INFO // suppress "## warnings" message, +		rt("org.aspectj:aspectjrt:${aspectjVersion}"), +, +		options.links(project.ext.javadocLinks), +, +, +		classpath = files(, +			// ensure servlet 3.x and Hibernate 4.x have precedence on the Javadoc, +			// classpath over their respective 2.5 and 3.x variants, +			project(":spring-webmvc").sourceSets.main.compileClasspath.files.find { it =~ "servlet-api" },, +			rootProject.sourceSets.test.compileClasspath.files.find { it =~ "hibernate-core" },, +			// ensure the javadoc process can resolve types compiled from .aj sources, +			project(":spring-aspects").sourceSets.main.output, +		), +		classpath += files(subprojects.collect { it.sourceSets.main.compileClasspath }), +, +		destinationDir = new File(buildDir, "api"), +++ b/build.gradle, +, +	ext.javadocLinks = [, +		"http://docs.oracle.com/javase/6/docs/api",, +		"http://docs.oracle.com/javaee/6/api",, +		"http://portals.apache.org/pluto/portlet-2.0-apidocs/",, +		"http://commons.apache.org/lang/api-2.5",, +		"http://commons.apache.org/codec/apidocs",, +		"http://docs.jboss.org/jbossas/javadoc/4.0.5/connector",, +		"http://docs.jboss.org/jbossas/javadoc/7.1.2.Final",, +		"http://aopalliance.sourceforge.net/doc",, +		"http://glassfish.java.net/nonav/docs/v3/api",, +		"http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs", // commonj, +		"http://quartz-scheduler.org/api/2.1.5",, +		"http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/",, +		"http://hc.apache.org/httpclient-3.x/apidocs",, +		"http://fasterxml.github.com/jackson-core/javadoc/2.0.0",, +		"http://jackson.codehaus.org/1.4.2/javadoc",, +		"http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs",, +		"http://ibatis.apache.org/docs/java/dev",, +		"http://tiles.apache.org/framework/apidocs",, +		"http://commons.apache.org/dbcp/api-1.2.2",, +	] as String[], +		description = "Generates project-level javadoc for use in -javadoc jar", +, +		options.links(project.ext.javadocLinks), +, +		// suppress warnings due to cross-module @see and @link references;, +		// note that global 'api' task does display all warnings., +		logging.captureStandardError LogLevel.INFO, +		logging.captureStandardOutput LogLevel.INFO // suppress "## warnings" message, +		rt("org.aspectj:aspectjrt:${aspectjVersion}"), +, +		options.links(project.ext.javadocLinks), +, +, +		classpath = files(, +			// ensure servlet 3.x and Hibernate 4.x have precedence on the Javadoc, +			// classpath over their respective 2.5 and 3.x variants, +			project(":spring-webmvc").sourceSets.main.compileClasspath.files.find { it =~ "servlet-api" },, +			rootProject.sourceSets.test.compileClasspath.files.find { it =~ "hibernate-core" },, +			// ensure the javadoc process can resolve types compiled from .aj sources, +			project(":spring-aspects").sourceSets.main.output, +		), +		classpath += files(subprojects.collect { it.sourceSets.main.compileClasspath }), +, +		destinationDir = new File(buildDir, "api"), +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AspectJProxyFactory.java, + * Copyright 2002-2012 the original author or authors., +	 * @see AspectJProxyUtils#makeAdvisorChainAspectJCapableIfNecessary(List), +++ b/build.gradle, +, +	ext.javadocLinks = []