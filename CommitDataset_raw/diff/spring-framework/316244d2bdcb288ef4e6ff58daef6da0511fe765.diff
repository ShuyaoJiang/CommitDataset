[+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +	private ImportStack importStack = new ImportStack();, +						// Provide isolated circular import detection for scanned classes,, +						// since the initial registration did not come explicitly., +						ImportStack previousStack = this.importStack;, +						this.importStack = new ImportStack();, +						try {, +						finally {, +							this.importStack = previousStack;, +						}, +					}, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +	private ImportStack importStack = new ImportStack();, +						// Provide isolated circular import detection for scanned classes,, +						// since the initial registration did not come explicitly., +						ImportStack previousStack = this.importStack;, +						this.importStack = new ImportStack();, +						try {, +						finally {, +							this.importStack = previousStack;, +						}, +					}, +++ b/spring-context/src/test/java/org/springframework/context/annotation/ComponentScanAndImportAnnotationInteractionTests.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.context.annotation.componentscan.importing.ImportingConfig;, +		ctx.registerBeanDefinition("config", new RootBeanDefinition(Config3.class.getName()));, +	@Test, +	public void circularImportViaComponentScan() {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		ctx.registerBeanDefinition("config", new RootBeanDefinition(ImportingConfig.class.getName()));, +		ctx.refresh();, +		ctx.getBean(SimpleComponent.class);, +	}, +, +	@ComponentScan("org.springframework.context.annotation.componentscan.importing")]