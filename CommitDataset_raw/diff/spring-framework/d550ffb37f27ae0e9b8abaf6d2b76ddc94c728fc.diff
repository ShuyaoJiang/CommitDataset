[+++ b/spring-context/src/main/java/org/springframework/cache/support/CompositeCacheManager.java, + * Copyright 2002-2014 the original author or authors., +import java.util.Arrays;, +import java.util.LinkedHashSet;, +import java.util.Set;, + * Composite {@link CacheManager} implementation that iterates over, + * a given collection of delegate {@link CacheManager} instances., + * <p>Allows {@link NoOpCacheManager} to be automatically added to the end of, + * the list for handling cache declarations without a backing store. Otherwise,, + * any custom {@link CacheManager} may play that role of the last delegate as, + * well, lazily creating cache regions for any requested name., + *, + * <p>Note: Regular CacheManagers that this composite manager delegates to need, + * to return {@code null} from {@link #getCache(String)} if they are unaware of, + * the specified cache name, allowing for iteration to the next delegate in line., + * However, most {@link CacheManager} implementations fall back to lazy creation, + * of named caches once requested; check out the specific configuration details, + * for a 'static' mode with fixed cache names, if available., + * @see #setFallbackToNoOpCache, + * @see org.springframework.cache.concurrent.ConcurrentMapCacheManager#setCacheNames, +public class CompositeCacheManager implements CacheManager, InitializingBean {, +	private final List<CacheManager> cacheManagers = new ArrayList<CacheManager>();, +	/**, +	 * Construct an empty CompositeCacheManager, with delegate CacheManagers to, +	 * be added via the {@link #setCacheManagers "cacheManagers"} property., +	 */, +	public CompositeCacheManager() {, +	}, +, +	/**, +	 * Construct a CompositeCacheManager from the given delegate CacheManagers., +	 * @param cacheManagers the CacheManagers to delegate to, +	 */, +	public CompositeCacheManager(CacheManager... cacheManagers) {, +		setCacheManagers(Arrays.asList(cacheManagers));, +	}, +, +, +	/**, +	 * Specify the CacheManagers to delegate to., +	 */, +	 * Indicate whether a {@link NoOpCacheManager} should be added at the end of the delegate list., +	 * In this case, any {@code getCache} requests not handled by the configured CacheManagers will, +		Set<String> names = new LinkedHashSet<String>();, +		return Collections.unmodifiableSet(names);]