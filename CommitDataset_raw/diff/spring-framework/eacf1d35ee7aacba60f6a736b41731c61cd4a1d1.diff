[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ContextPathCompositeHandler.java, +					return response.setComplete();, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ContextPathCompositeHandler.java, +					return response.setComplete();, +++ b/spring-web/src/test/java/org/springframework/http/server/reactive/ContextPathCompositeHandlerTests.java, + * Copyright 2002-2018 the original author or authors., +import java.time.Duration;, +import java.util.concurrent.atomic.AtomicBoolean;, +	public void notFound() {, +	@Test // SPR-17144, +	public void notFoundWithCommitAction() {, +, +		AtomicBoolean commitInvoked = new AtomicBoolean(false);, +, +		ServerHttpRequest request = MockServerHttpRequest.get("/unknown/path").build();, +		ServerHttpResponse response = new MockServerHttpResponse();, +		response.beforeCommit(() -> {, +			commitInvoked.set(true);, +			return Mono.empty();, +		});, +, +		Map<String, HttpHandler> map = new HashMap<>();, +		TestHttpHandler handler = new TestHttpHandler();, +		map.put("/path", handler);, +		new ContextPathCompositeHandler(map).handle(request, response).block(Duration.ofSeconds(5));, +, +		assertNotInvoked(handler);, +		assertEquals(HttpStatus.NOT_FOUND, response.getStatusCode());, +		assertTrue(commitInvoked.get());, +	}, +, +		new ContextPathCompositeHandler(handlerMap).handle(request, response).block(Duration.ofSeconds(5));]