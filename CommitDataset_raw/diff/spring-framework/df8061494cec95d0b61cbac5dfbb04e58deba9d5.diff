[+++ b/spring-tx/src/main/java/org/springframework/transaction/support/DefaultTransactionDefinition.java, +		return (this == other || (other instanceof TransactionDefinition && toString().equals(other.toString())));, +++ b/spring-tx/src/main/java/org/springframework/transaction/support/DefaultTransactionDefinition.java, +		return (this == other || (other instanceof TransactionDefinition && toString().equals(other.toString())));, +++ b/spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java, + * Copyright 2002-2018 the original author or authors., +, +	@Override, +	public boolean equals(Object other) {, +		return (this == other || (super.equals(other) && (!(other instanceof TransactionTemplate) ||, +				getTransactionManager() == ((TransactionTemplate) other).getTransactionManager())));, +	}, +, +++ b/spring-tx/src/main/java/org/springframework/transaction/support/DefaultTransactionDefinition.java, +		return (this == other || (other instanceof TransactionDefinition && toString().equals(other.toString())));, +++ b/spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java, + * Copyright 2002-2018 the original author or authors., +, +	@Override, +	public boolean equals(Object other) {, +		return (this == other || (super.equals(other) && (!(other instanceof TransactionTemplate) ||, +				getTransactionManager() == ((TransactionTemplate) other).getTransactionManager())));, +	}, +, +++ b/spring-tx/src/test/java/org/springframework/transaction/TransactionSupportTests.java, + * Copyright 2002-2018 the original author or authors., +, +, +, +, +, +, +, +, +	@Test, +	public void transactionTemplateEquality() {, +		TestTransactionManager tm1 = new TestTransactionManager(false, true);, +		TestTransactionManager tm2 = new TestTransactionManager(false, true);, +		TransactionTemplate template1 = new TransactionTemplate(tm1);, +		TransactionTemplate template2 = new TransactionTemplate(tm2);, +		TransactionTemplate template3 = new TransactionTemplate(tm2);, +, +		assertNotEquals(template1, template2);, +		assertNotEquals(template1, template3);, +		assertEquals(template2, template3);, +	}, +, +	public void clear() {]