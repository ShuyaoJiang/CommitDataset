[+++ b/spring-beans/src/main/java/org/springframework/beans/PropertyMatches.java, + * Copyright 2002-2017 the original author or authors., +		if (s1.isEmpty()) {, +		if (s2.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyMatches.java, + * Copyright 2002-2017 the original author or authors., +		if (s1.isEmpty()) {, +		if (s2.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToCharacterConverter.java, + * Copyright 2002-2017 the original author or authors., +		if (source.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyMatches.java, + * Copyright 2002-2017 the original author or authors., +		if (s1.isEmpty()) {, +		if (s2.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToCharacterConverter.java, + * Copyright 2002-2017 the original author or authors., +		if (source.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToEnumConverterFactory.java, + * Copyright 2002-2017 the original author or authors., +			if (source.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyMatches.java, + * Copyright 2002-2017 the original author or authors., +		if (s1.isEmpty()) {, +		if (s2.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToCharacterConverter.java, + * Copyright 2002-2017 the original author or authors., +		if (source.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToEnumConverterFactory.java, + * Copyright 2002-2017 the original author or authors., +			if (source.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToNumberConverterFactory.java, + * Copyright 2002-2017 the original author or authors., +			if (source.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyMatches.java, + * Copyright 2002-2017 the original author or authors., +		if (s1.isEmpty()) {, +		if (s2.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToCharacterConverter.java, + * Copyright 2002-2017 the original author or authors., +		if (source.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToEnumConverterFactory.java, + * Copyright 2002-2017 the original author or authors., +			if (source.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToNumberConverterFactory.java, + * Copyright 2002-2017 the original author or authors., +			if (source.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java, + * Copyright 2002-2017 the original author or authors., +			this.rootPath = (rootPath.isEmpty() || rootPath.endsWith("/") ? rootPath : rootPath + "/");, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyMatches.java, + * Copyright 2002-2017 the original author or authors., +		if (s1.isEmpty()) {, +		if (s2.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToCharacterConverter.java, + * Copyright 2002-2017 the original author or authors., +		if (source.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToEnumConverterFactory.java, + * Copyright 2002-2017 the original author or authors., +			if (source.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToNumberConverterFactory.java, + * Copyright 2002-2017 the original author or authors., +			if (source.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java, + * Copyright 2002-2017 the original author or authors., +			this.rootPath = (rootPath.isEmpty() || rootPath.endsWith("/") ? rootPath : rootPath + "/");, +++ b/spring-core/src/main/java/org/springframework/util/Base64Utils.java, + * Copyright 2002-2017 the original author or authors., +		if (src.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyMatches.java, + * Copyright 2002-2017 the original author or authors., +		if (s1.isEmpty()) {, +		if (s2.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToCharacterConverter.java, + * Copyright 2002-2017 the original author or authors., +		if (source.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToEnumConverterFactory.java, + * Copyright 2002-2017 the original author or authors., +			if (source.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToNumberConverterFactory.java, + * Copyright 2002-2017 the original author or authors., +			if (source.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java, + * Copyright 2002-2017 the original author or authors., +			this.rootPath = (rootPath.isEmpty() || rootPath.endsWith("/") ? rootPath : rootPath + "/");, +++ b/spring-core/src/main/java/org/springframework/util/Base64Utils.java, + * Copyright 2002-2017 the original author or authors., +		if (src.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java, +		if (fullType.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyMatches.java, + * Copyright 2002-2017 the original author or authors., +		if (s1.isEmpty()) {, +		if (s2.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToCharacterConverter.java, + * Copyright 2002-2017 the original author or authors., +		if (source.isEmpty()) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToEnumConverterFactory.java, + * Copyright 2002-2017 the original author or authors., +			if (source.isEmpty()) {]