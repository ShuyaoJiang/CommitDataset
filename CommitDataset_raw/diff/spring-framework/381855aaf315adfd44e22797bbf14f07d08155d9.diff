[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/DispatcherHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	public Mono<Void> handle(ServerWebExchange exchange) {, +	private Mono<HandlerResult> invokeHandler(ServerWebExchange exchange, Object handler) {, +	private Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result) {, +		public Mono<Object> getHandler(ServerWebExchange exchange) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/DispatcherHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	public Mono<Void> handle(ServerWebExchange exchange) {, +	private Mono<HandlerResult> invokeHandler(ServerWebExchange exchange, Object handler) {, +	private Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result) {, +		public Mono<Object> getHandler(ServerWebExchange exchange) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerAdapter.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<HandlerResult> handle(ServerWebExchange exchange, Object handler);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/DispatcherHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	public Mono<Void> handle(ServerWebExchange exchange) {, +	private Mono<HandlerResult> invokeHandler(ServerWebExchange exchange, Object handler) {, +	private Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result) {, +		public Mono<Object> getHandler(ServerWebExchange exchange) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerAdapter.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<HandlerResult> handle(ServerWebExchange exchange, Object handler);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerMapping.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<Object> getHandler(ServerWebExchange exchange);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/DispatcherHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	public Mono<Void> handle(ServerWebExchange exchange) {, +	private Mono<HandlerResult> invokeHandler(ServerWebExchange exchange, Object handler) {, +	private Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result) {, +		public Mono<Object> getHandler(ServerWebExchange exchange) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerAdapter.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<HandlerResult> handle(ServerWebExchange exchange, Object handler);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerMapping.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<Object> getHandler(ServerWebExchange exchange);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerResultHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/DispatcherHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	public Mono<Void> handle(ServerWebExchange exchange) {, +	private Mono<HandlerResult> invokeHandler(ServerWebExchange exchange, Object handler) {, +	private Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result) {, +		public Mono<Object> getHandler(ServerWebExchange exchange) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerAdapter.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<HandlerResult> handle(ServerWebExchange exchange, Object handler);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerMapping.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<Object> getHandler(ServerWebExchange exchange);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerResultHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/ResponseStatusExceptionHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	public Mono<Void> handle(ServerWebExchange exchange, Throwable ex) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/DispatcherHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	public Mono<Void> handle(ServerWebExchange exchange) {, +	private Mono<HandlerResult> invokeHandler(ServerWebExchange exchange, Object handler) {, +	private Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result) {, +		public Mono<Object> getHandler(ServerWebExchange exchange) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerAdapter.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<HandlerResult> handle(ServerWebExchange exchange, Object handler);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerMapping.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<Object> getHandler(ServerWebExchange exchange);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerResultHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/ResponseStatusExceptionHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	public Mono<Void> handle(ServerWebExchange exchange, Throwable ex) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/handler/HttpHandlerHandlerAdapter.java, +import org.springframework.web.server.ServerWebExchange;, +	public Mono<HandlerResult> handle(ServerWebExchange exchange, Object handler) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/DispatcherHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	public Mono<Void> handle(ServerWebExchange exchange) {, +	private Mono<HandlerResult> invokeHandler(ServerWebExchange exchange, Object handler) {, +	private Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result) {, +		public Mono<Object> getHandler(ServerWebExchange exchange) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerAdapter.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<HandlerResult> handle(ServerWebExchange exchange, Object handler);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerMapping.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<Object> getHandler(ServerWebExchange exchange);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerResultHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/ResponseStatusExceptionHandler.java, +import org.springframework.web.server.ServerWebExchange;, +	public Mono<Void> handle(ServerWebExchange exchange, Throwable ex) {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/handler/HttpHandlerHandlerAdapter.java]