[+++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheCacheManager.java, + * Copyright 2002-2015 the original author or authors., +		if (!Status.STATUS_ALIVE.equals(status)) {, +			throw new IllegalStateException(, +		}, +		// Check the EhCache cache again (in case the cache was added at runtime), +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheCacheManager.java, + * Copyright 2002-2015 the original author or authors., +		if (!Status.STATUS_ALIVE.equals(status)) {, +			throw new IllegalStateException(, +		}, +		// Check the EhCache cache again (in case the cache was added at runtime), +++ b/spring-context-support/src/test/java/org/springframework/cache/ehcache/EhCacheCacheManagerTests.java, + * Copyright 2002-2015 the original author or authors., +, +, +, +		}, +		else {, +, +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheCacheManager.java, + * Copyright 2002-2015 the original author or authors., +		if (!Status.STATUS_ALIVE.equals(status)) {, +			throw new IllegalStateException(, +		}, +		// Check the EhCache cache again (in case the cache was added at runtime), +++ b/spring-context-support/src/test/java/org/springframework/cache/ehcache/EhCacheCacheManagerTests.java, + * Copyright 2002-2015 the original author or authors., +, +, +, +		}, +		else {, +, +++ b/spring-context-support/src/test/java/org/springframework/cache/jcache/JCacheCacheManagerTests.java, + * Copyright 2002-2015 the original author or authors., +, +, +, +		}, +		else {, +, +, +, +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheCacheManager.java, + * Copyright 2002-2015 the original author or authors., +		if (!Status.STATUS_ALIVE.equals(status)) {, +			throw new IllegalStateException(, +		}, +		// Check the EhCache cache again (in case the cache was added at runtime), +++ b/spring-context-support/src/test/java/org/springframework/cache/ehcache/EhCacheCacheManagerTests.java, + * Copyright 2002-2015 the original author or authors., +, +, +, +		}, +		else {, +, +++ b/spring-context-support/src/test/java/org/springframework/cache/jcache/JCacheCacheManagerTests.java, + * Copyright 2002-2015 the original author or authors., +, +, +, +		}, +		else {, +, +, +, +++ b/spring-context-support/src/test/java/org/springframework/cache/transaction/AbstractTransactionSupportingCacheManagerTests.java, + * Copyright 2002-2015 the original author or authors., +	 * @see org.springframework.cache.transaction.AbstractTransactionSupportingCacheManager#setTransactionAware, +, +			assertThat(cacheManager.getCache(cacheName), is(instanceOf(getCacheType())));, +		}, +		finally {, +		}, +		finally {, +]