[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +					.defaultIfEmpty(new byte[0]), +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +					.defaultIfEmpty(new byte[0]), +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/client/WebClientIntegrationTests.java, +	@Test // SPR-15946, +	public void shouldGetErrorSignalOnEmptyErrorResponse() throws Exception {, +		prepareResponse(response -> response.setResponseCode(404), +				.setHeader("Content-Type", "text/plain"));, +, +		Mono<String> result = this.webClient.get().uri("/greeting"), +				.retrieve(), +				.bodyToMono(String.class);, +, +		StepVerifier.create(result), +				.expectError(WebClientException.class), +				.verify(Duration.ofSeconds(3));, +, +		expectRequestCount(1);, +		expectRequest(request -> {, +			assertEquals("*/*", request.getHeader(HttpHeaders.ACCEPT));, +			assertEquals("/greeting", request.getPath());, +		});, +	}, +, +		expectRequest(request -> assertEquals("bar", request.getHeader("foo")));, +		MyException(String message) {]