[+++ b/spring-test/src/main/java/org/springframework/mock/web/MockPart.java, +	 * @see #getHeaders(), +	public MockPart(String name, @Nullable byte[] content) {, +	 * Constructor for a part with a filename and streamed content., +	 * @see #getHeaders(), +	 * Constructor for a part with a filename and byte[] content., +++ b/spring-test/src/main/java/org/springframework/mock/web/MockPart.java, +	 * @see #getHeaders(), +	public MockPart(String name, @Nullable byte[] content) {, +	 * Constructor for a part with a filename and streamed content., +	 * @see #getHeaders(), +	 * Constructor for a part with a filename and byte[] content., +++ b/spring-web/src/test/java/org/springframework/mock/web/test/MockPart.java, +import java.util.Collections;, +	 * @see #getHeaders(), +	 * Constructor for a part with a filename and streamed content., +	 * @see #getHeaders(), +	 * Constructor for a part with a filename and byte[] content., +		Collection<String> headerValues = this.headers.get(name);, +		return (headerValues != null ? headerValues : Collections.emptyList());, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockPart.java, +	 * @see #getHeaders(), +	public MockPart(String name, @Nullable byte[] content) {, +	 * Constructor for a part with a filename and streamed content., +	 * @see #getHeaders(), +	 * Constructor for a part with a filename and byte[] content., +++ b/spring-web/src/test/java/org/springframework/mock/web/test/MockPart.java, +import java.util.Collections;, +	 * @see #getHeaders(), +	 * Constructor for a part with a filename and streamed content., +	 * @see #getHeaders(), +	 * Constructor for a part with a filename and byte[] content., +		Collection<String> headerValues = this.headers.get(name);, +		return (headerValues != null ? headerValues : Collections.emptyList());, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientResponse.java, +, +, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockPart.java, +	 * @see #getHeaders(), +	public MockPart(String name, @Nullable byte[] content) {, +	 * Constructor for a part with a filename and streamed content., +	 * @see #getHeaders(), +	 * Constructor for a part with a filename and byte[] content., +++ b/spring-web/src/test/java/org/springframework/mock/web/test/MockPart.java, +import java.util.Collections;, +	 * @see #getHeaders(), +	 * Constructor for a part with a filename and streamed content., +	 * @see #getHeaders(), +	 * Constructor for a part with a filename and byte[] content., +		Collection<String> headerValues = this.headers.get(name);, +		return (headerValues != null ? headerValues : Collections.emptyList());, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientResponse.java, +, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractHttpSockJsSession.java, +				logger.trace(this.messageCache.size() + " message(s) to flush in session " + getId());]