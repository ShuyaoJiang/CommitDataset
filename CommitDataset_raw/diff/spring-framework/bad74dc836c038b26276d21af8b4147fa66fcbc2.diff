[+++ b/spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.expression.spel.SpelParserConfiguration;, +	private ExpressionParser expressionParser;, +	 * Create a new {@code StandardBeanExpressionResolver} with default settings., +	 */, +	public StandardBeanExpressionResolver() {, +		this.expressionParser = new SpelExpressionParser();, +	}, +, +	/**, +	 * Create a new {@code StandardBeanExpressionResolver} with the given bean class loader,, +	 * using it as the basis for expression compilation., +	 * @param beanClassLoader the factory's bean class loader, +	 */, +	public StandardBeanExpressionResolver(ClassLoader beanClassLoader) {, +		this.expressionParser = new SpelExpressionParser(new SpelParserConfiguration(null, beanClassLoader));, +	}, +, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.expression.spel.SpelParserConfiguration;, +	private ExpressionParser expressionParser;, +	 * Create a new {@code StandardBeanExpressionResolver} with default settings., +	 */, +	public StandardBeanExpressionResolver() {, +		this.expressionParser = new SpelExpressionParser();, +	}, +, +	/**, +	 * Create a new {@code StandardBeanExpressionResolver} with the given bean class loader,, +	 * using it as the basis for expression compilation., +	 * @param beanClassLoader the factory's bean class loader, +	 */, +	public StandardBeanExpressionResolver(ClassLoader beanClassLoader) {, +		this.expressionParser = new SpelExpressionParser(new SpelParserConfiguration(null, beanClassLoader));, +	}, +, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java, +		beanFactory.setBeanExpressionResolver(new StandardBeanExpressionResolver(beanFactory.getBeanClassLoader()));, +++ b/spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.expression.spel.SpelParserConfiguration;, +	private ExpressionParser expressionParser;, +	 * Create a new {@code StandardBeanExpressionResolver} with default settings., +	 */, +	public StandardBeanExpressionResolver() {, +		this.expressionParser = new SpelExpressionParser();, +	}, +, +	/**, +	 * Create a new {@code StandardBeanExpressionResolver} with the given bean class loader,, +	 * using it as the basis for expression compilation., +	 * @param beanClassLoader the factory's bean class loader, +	 */, +	public StandardBeanExpressionResolver(ClassLoader beanClassLoader) {, +		this.expressionParser = new SpelExpressionParser(new SpelParserConfiguration(null, beanClassLoader));, +	}, +, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java, +		beanFactory.setBeanExpressionResolver(new StandardBeanExpressionResolver(beanFactory.getBeanClassLoader()));, +++ /dev/null, +++ b/spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.expression.spel.SpelParserConfiguration;, +	private ExpressionParser expressionParser;, +	 * Create a new {@code StandardBeanExpressionResolver} with default settings., +	 */, +	public StandardBeanExpressionResolver() {, +		this.expressionParser = new SpelExpressionParser();, +	}, +, +	/**, +	 * Create a new {@code StandardBeanExpressionResolver} with the given bean class loader,, +	 * using it as the basis for expression compilation., +	 * @param beanClassLoader the factory's bean class loader, +	 */, +	public StandardBeanExpressionResolver(ClassLoader beanClassLoader) {, +		this.expressionParser = new SpelExpressionParser(new SpelParserConfiguration(null, beanClassLoader));, +	}, +, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java, +		beanFactory.setBeanExpressionResolver(new StandardBeanExpressionResolver(beanFactory.getBeanClassLoader()));, +++ /dev/null, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java, +/*, + * Copyright 2002-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *]