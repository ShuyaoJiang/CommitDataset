[+++ b/org.springframework.transaction/src/main/java/org/springframework/jca/work/glassfish/GlassFishWorkManagerTaskExecutor.java, + * Copyright 2002-2010 the original author or authors., +		WorkManager wm = (WorkManager) ReflectionUtils.invokeMethod(this.getWorkManagerMethod, null, threadPoolName);, +++ b/org.springframework.transaction/src/main/java/org/springframework/jca/work/glassfish/GlassFishWorkManagerTaskExecutor.java, + * Copyright 2002-2010 the original author or authors., +		WorkManager wm = (WorkManager) ReflectionUtils.invokeMethod(this.getWorkManagerMethod, null, threadPoolName);, +++ b/org.springframework.transaction/src/main/java/org/springframework/jca/work/jboss/JBossWorkManagerTaskExecutor.java, + * Copyright 2002-2010 the original author or authors., +	 * Identify a specific JBossWorkManagerMBean to talk to,, +	 * through its JMX object name., +	 * <p>The default MBean name is "jboss.jca:service=WorkManager"., +	 * @see JBossWorkManagerUtils#getWorkManager(String), +	 */, +	public void setWorkManagerMBeanName(String mbeanName) {, +		setWorkManager(JBossWorkManagerUtils.getWorkManager(mbeanName));, +	}, +, +	/**, +++ b/org.springframework.transaction/src/main/java/org/springframework/jca/work/glassfish/GlassFishWorkManagerTaskExecutor.java, + * Copyright 2002-2010 the original author or authors., +		WorkManager wm = (WorkManager) ReflectionUtils.invokeMethod(this.getWorkManagerMethod, null, threadPoolName);, +++ b/org.springframework.transaction/src/main/java/org/springframework/jca/work/jboss/JBossWorkManagerTaskExecutor.java, + * Copyright 2002-2010 the original author or authors., +	 * Identify a specific JBossWorkManagerMBean to talk to,, +	 * through its JMX object name., +	 * <p>The default MBean name is "jboss.jca:service=WorkManager"., +	 * @see JBossWorkManagerUtils#getWorkManager(String), +	 */, +	public void setWorkManagerMBeanName(String mbeanName) {, +		setWorkManager(JBossWorkManagerUtils.getWorkManager(mbeanName));, +	}, +, +	/**, +++ b/org.springframework.transaction/src/main/java/org/springframework/jca/work/jboss/JBossWorkManagerUtils.java, + * Copyright 2002-2010 the original author or authors., +	private static final String DEFAULT_WORK_MANAGER_MBEAN_NAME = "jboss.jca:service=WorkManager";, +	 * for the default JBossWorkManagerMBean., +		return getWorkManager(DEFAULT_WORK_MANAGER_MBEAN_NAME);, +	}, +, +	/**, +	 * Obtain the default JBoss JCA WorkManager through a JMX lookup, +	 * for the JBossWorkManagerMBean., +	 * @param workManagerObjectName the JMX object name to use, +	 * @see org.jboss.resource.work.JBossWorkManagerMBean, +	 */, +	public static WorkManager getWorkManager(String mbeanName) {, +			Class<?> mbeanClass = JBossWorkManagerUtils.class.getClassLoader().loadClass(JBOSS_WORK_MANAGER_MBEAN_CLASS_NAME);, +			ObjectName objectName = ObjectName.getInstance(mbeanName);, +			Method getInstanceMethod = workManagerMBean.getClass().getMethod("getInstance");, +			return (WorkManager) getInstanceMethod.invoke(workManagerMBean);]