[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/MethodOverrides.java, +	private final Set<MethodOverride> overrides = Collections.synchronizedSet(new LinkedHashSet<>(0));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/MethodOverrides.java, +	private final Set<MethodOverride> overrides = Collections.synchronizedSet(new LinkedHashSet<>(0));, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/MetadataCollector.java, +	private final List<ItemMetadata> metadataItems = new ArrayList<>();, +	private final Set<String> processedSourceTypes = new HashSet<>();, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/MethodOverrides.java, +	private final Set<MethodOverride> overrides = Collections.synchronizedSet(new LinkedHashSet<>(0));, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/MetadataCollector.java, +	private final List<ItemMetadata> metadataItems = new ArrayList<>();, +	private final Set<String> processedSourceTypes = new HashSet<>();, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java, +			Set<String> countDownBeanNames = Collections.synchronizedSet(new LinkedHashSet<>());, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/MethodOverrides.java, +	private final Set<MethodOverride> overrides = Collections.synchronizedSet(new LinkedHashSet<>(0));, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/MetadataCollector.java, +	private final List<ItemMetadata> metadataItems = new ArrayList<>();, +	private final Set<String> processedSourceTypes = new HashSet<>();, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java, +			Set<String> countDownBeanNames = Collections.synchronizedSet(new LinkedHashSet<>());, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/RowMapperResultSetExtractor.java, +		List<T> results = (this.rowsExpected > 0 ? new ArrayList<>(this.rowsExpected) : new ArrayList<>());, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/MethodOverrides.java, +	private final Set<MethodOverride> overrides = Collections.synchronizedSet(new LinkedHashSet<>(0));, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/MetadataCollector.java, +	private final List<ItemMetadata> metadataItems = new ArrayList<>();, +	private final Set<String> processedSourceTypes = new HashSet<>();, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java, +			Set<String> countDownBeanNames = Collections.synchronizedSet(new LinkedHashSet<>());, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/RowMapperResultSetExtractor.java, +		List<T> results = (this.rowsExpected > 0 ? new ArrayList<>(this.rowsExpected) : new ArrayList<>());, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +		List<Match> matches = new ArrayList<>();, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/MethodOverrides.java, +	private final Set<MethodOverride> overrides = Collections.synchronizedSet(new LinkedHashSet<>(0));, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/MetadataCollector.java, +	private final List<ItemMetadata> metadataItems = new ArrayList<>();, +	private final Set<String> processedSourceTypes = new HashSet<>();, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java, +			Set<String> countDownBeanNames = Collections.synchronizedSet(new LinkedHashSet<>());, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/RowMapperResultSetExtractor.java, +		List<T> results = (this.rowsExpected > 0 ? new ArrayList<>(this.rowsExpected) : new ArrayList<>());, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +		List<Match> matches = new ArrayList<>();, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/BufferingStompDecoder.java, +	private final Queue<ByteBuffer> chunks = new LinkedBlockingQueue<>();, +		MultiValueMap<String, String> headers = new LinkedMultiValueMap<>();, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/MethodOverrides.java, +	private final Set<MethodOverride> overrides = Collections.synchronizedSet(new LinkedHashSet<>(0));, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/MetadataCollector.java, +	private final List<ItemMetadata> metadataItems = new ArrayList<>();, +	private final Set<String> processedSourceTypes = new HashSet<>();, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java, +			Set<String> countDownBeanNames = Collections.synchronizedSet(new LinkedHashSet<>());, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/RowMapperResultSetExtractor.java, +		List<T> results = (this.rowsExpected > 0 ? new ArrayList<>(this.rowsExpected) : new ArrayList<>());, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +		List<Match> matches = new ArrayList<>();, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/BufferingStompDecoder.java, +	private final Queue<ByteBuffer> chunks = new LinkedBlockingQueue<>();, +		MultiValueMap<String, String> headers = new LinkedMultiValueMap<>();, +++ b/spring-messaging/src/test/java/org/springframework/messaging/core/MessageReceivingTemplateTests.java, +		Message<?> expected = new GenericMessage<>("payload");, +		Message<?> expected = new GenericMessage<>("payload");, +		Message<?> expected = new GenericMessage<>("payload");, +		Message<?> expected = new GenericMessage<>("payload");, +		Message<?> expected = new GenericMessage<>("not a number test");, +		Message<?> expected = new GenericMessage<>("payload");, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/MethodOverrides.java, +	private final Set<MethodOverride> overrides = Collections.synchronizedSet(new LinkedHashSet<>(0));, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/MetadataCollector.java, +	private final List<ItemMetadata> metadataItems = new ArrayList<>();, +	private final Set<String> processedSourceTypes = new HashSet<>();, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java, +			Set<String> countDownBeanNames = Collections.synchronizedSet(new LinkedHashSet<>());, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/RowMapperResultSetExtractor.java, +		List<T> results = (this.rowsExpected > 0 ? new ArrayList<>(this.rowsExpected) : new ArrayList<>());, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +		List<Match> matches = new ArrayList<>();, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/BufferingStompDecoder.java, +	private final Queue<ByteBuffer> chunks = new LinkedBlockingQueue<>();, +		MultiValueMap<String, String> headers = new LinkedMultiValueMap<>();, +++ b/spring-messaging/src/test/java/org/springframework/messaging/core/MessageReceivingTemplateTests.java, +		Message<?> expected = new GenericMessage<>("payload");, +		Message<?> expected = new GenericMessage<>("payload");, +		Message<?> expected = new GenericMessage<>("payload");, +		Message<?> expected = new GenericMessage<>("payload");, +		Message<?> expected = new GenericMessage<>("not a number test");, +		Message<?> expected = new GenericMessage<>("payload");, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.java, +		List<MediaType> result = new ArrayList<>(mediaTypes.length);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/MethodOverrides.java, +	private final Set<MethodOverride> overrides = Collections.synchronizedSet(new LinkedHashSet<>(0));, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/MetadataCollector.java, +	private final List<ItemMetadata> metadataItems = new ArrayList<>();, +	private final Set<String> processedSourceTypes = new HashSet<>();, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java, +			Set<String> countDownBeanNames = Collections.synchronizedSet(new LinkedHashSet<>());, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/RowMapperResultSetExtractor.java]