[+++ b/spring-context/src/test/java/org/springframework/context/annotation/AnnotationScopeMetadataResolverTests.java, + * Copyright 2002-2014 the original author or authors., +import java.io.IOException;, +import org.springframework.core.type.classreading.MetadataReader;, +import org.springframework.core.type.classreading.MetadataReaderFactory;, +import org.springframework.core.type.classreading.SimpleMetadataReaderFactory;, +	public void testCustomRequestScopeViaAsm() throws IOException {, +		MetadataReaderFactory readerFactory = new SimpleMetadataReaderFactory();, +		MetadataReader reader = readerFactory.getMetadataReader(AnnotatedWithCustomRequestScope.class.getName());, +		AnnotatedBeanDefinition bd = new AnnotatedGenericBeanDefinition(reader.getAnnotationMetadata());, +		ScopeMetadata scopeMetadata = this.scopeMetadataResolver.resolveScopeMetadata(bd);, +		assertNotNull("resolveScopeMetadata(..) must *never* return null.", scopeMetadata);, +		assertEquals("request", scopeMetadata.getScopeName());, +		assertEquals(ScopedProxyMode.NO, scopeMetadata.getScopedProxyMode());, +	}, +, +	@Test, +	@Test, +	public void testCustomRequestScopeWithAttributeViaAsm() throws IOException {, +		MetadataReaderFactory readerFactory = new SimpleMetadataReaderFactory();, +		MetadataReader reader = readerFactory.getMetadataReader(AnnotatedWithCustomRequestScopeWithAttribute.class.getName());, +		AnnotatedBeanDefinition bd = new AnnotatedGenericBeanDefinition(reader.getAnnotationMetadata());, +		ScopeMetadata scopeMetadata = this.scopeMetadataResolver.resolveScopeMetadata(bd);, +		assertNotNull("resolveScopeMetadata(..) must *never* return null.", scopeMetadata);, +		assertEquals("request", scopeMetadata.getScopeName());, +		assertEquals(ScopedProxyMode.TARGET_CLASS, scopeMetadata.getScopedProxyMode());, +	}, +]