[+++ b/build.gradle, +		testCompile("org.codehaus.groovy:groovy-all:${groovyVersion}"), +++ b/build.gradle, +		testCompile("org.codehaus.groovy:groovy-all:${groovyVersion}"), +++ b/spring-tx/src/main/java/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.java, +		if (txAtt != null && ClassUtils.isUserLevelMethod(method)) {, +			txAtt = findTransactionAttribute(method.getDeclaringClass());, +			if (txAtt != null && ClassUtils.isUserLevelMethod(method)) {, +				return txAtt;, +		}, +, +++ b/build.gradle, +		testCompile("org.codehaus.groovy:groovy-all:${groovyVersion}"), +++ b/spring-tx/src/main/java/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.java, +		if (txAtt != null && ClassUtils.isUserLevelMethod(method)) {, +			txAtt = findTransactionAttribute(method.getDeclaringClass());, +			if (txAtt != null && ClassUtils.isUserLevelMethod(method)) {, +				return txAtt;, +		}, +, +++ b/spring-tx/src/test/java/org/springframework/transaction/annotation/AnnotationTransactionAttributeSourceTests.java, + * Copyright 2002-2016 the original author or authors., +import groovy.lang.GroovyObject;, +import groovy.lang.MetaClass;, +		proxyFactory.setInterfaces(ITestBean.class);, +	@Test, +	public void transactionAttributeDeclaredOnGroovyClass() throws Exception {, +		Method getAgeMethod = ITestBean.class.getMethod("getAge");, +		Method getNameMethod = ITestBean.class.getMethod("getName");, +		Method getMetaClassMethod = GroovyObject.class.getMethod("getMetaClass");, +, +		AnnotationTransactionAttributeSource atas = new AnnotationTransactionAttributeSource();, +		TransactionAttribute getAgeAttr = atas.getTransactionAttribute(getAgeMethod, GroovyTestBean.class);, +		assertEquals(TransactionAttribute.PROPAGATION_REQUIRED, getAgeAttr.getPropagationBehavior());, +		TransactionAttribute getNameAttr = atas.getTransactionAttribute(getNameMethod, GroovyTestBean.class);, +		assertEquals(TransactionAttribute.PROPAGATION_REQUIRED, getNameAttr.getPropagationBehavior());, +		assertNull(atas.getTransactionAttribute(getMetaClassMethod, GroovyTestBean.class));, +	}, +, +		@Transactional(propagation = Propagation.REQUIRES_NEW, isolation=Isolation.REPEATABLE_READ,, +				timeout = 5, readOnly = true, rollbackFor = Exception.class, noRollbackFor = IOException.class), +	@Transactional(rollbackFor = Exception.class, noRollbackFor = IOException.class), +	@Transactional(rollbackFor = Exception.class, noRollbackFor = IOException.class), +	@Transactional(rollbackFor = Exception.class, noRollbackFor = IOException.class), +, +, +, +, +, +, +	@Transactional, +	static class GroovyTestBean implements ITestBean, GroovyObject {, +, +		private String name;, +, +		private int age;, +, +		@Override, +		public String getName() {, +			return name;, +		}, +, +		@Override, +		public void setName(String name) {, +			this.name = name;, +		}, +, +		@Override, +		public int getAge() {, +			return age;, +		}, +, +		@Override, +		public void setAge(int age) {, +			this.age = age;, +		}, +, +		@Override, +		public Object invokeMethod(String name, Object args) {, +			return null;, +		}, +, +		@Override, +		public Object getProperty(String propertyName) {, +			return null;, +		}, +, +		@Override, +		public void setProperty(String propertyName, Object newValue) {, +		}, +, +		@Override, +		public MetaClass getMetaClass() {, +			return null;, +		}, +, +		@Override, +		public void setMetaClass(MetaClass metaClass) {, +		}, +	}]