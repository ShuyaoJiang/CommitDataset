[+++ b/spring-web/src/main/java/org/springframework/http/codec/json/AbstractJackson2Encoder.java, +import java.util.HashMap;, +	private static final byte[] NEWLINE_SEPARATOR = {'\n'};, +	private static final Map<MediaType, byte[]> STREAM_SEPARATORS;, +, +	static {, +		STREAM_SEPARATORS = new HashMap<>();, +		STREAM_SEPARATORS.put(MediaType.APPLICATION_STREAM_JSON, NEWLINE_SEPARATOR);, +		STREAM_SEPARATORS.put(MediaType.parseMediaType("application/stream+x-jackson-smile"), new byte[0]);, +	}, +, +, +	private final List<MediaType> streamingMediaTypes = new ArrayList<>(1);, +, +		for (MediaType streamingMediaType : this.streamingMediaTypes) {, +			if (streamingMediaType.isCompatibleWith(mimeType)) {, +				byte[] separator = STREAM_SEPARATORS.getOrDefault(streamingMediaType, NEWLINE_SEPARATOR);, +					if (separator != null) {, +						buffer.write(separator);, +		}, +, +++ b/spring-web/src/main/java/org/springframework/http/codec/json/AbstractJackson2Encoder.java, +import java.util.HashMap;, +	private static final byte[] NEWLINE_SEPARATOR = {'\n'};, +	private static final Map<MediaType, byte[]> STREAM_SEPARATORS;, +, +	static {, +		STREAM_SEPARATORS = new HashMap<>();, +		STREAM_SEPARATORS.put(MediaType.APPLICATION_STREAM_JSON, NEWLINE_SEPARATOR);, +		STREAM_SEPARATORS.put(MediaType.parseMediaType("application/stream+x-jackson-smile"), new byte[0]);, +	}, +, +, +	private final List<MediaType> streamingMediaTypes = new ArrayList<>(1);, +, +		for (MediaType streamingMediaType : this.streamingMediaTypes) {, +			if (streamingMediaType.isCompatibleWith(mimeType)) {, +				byte[] separator = STREAM_SEPARATORS.getOrDefault(streamingMediaType, NEWLINE_SEPARATOR);, +					if (separator != null) {, +						buffer.write(separator);, +		}, +, +++ b/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2JsonEncoder.java, +import java.util.Collections;, +		setStreamingMediaTypes(Collections.singletonList(MediaType.APPLICATION_STREAM_JSON));, +++ b/spring-web/src/main/java/org/springframework/http/codec/json/AbstractJackson2Encoder.java, +import java.util.HashMap;, +	private static final byte[] NEWLINE_SEPARATOR = {'\n'};, +	private static final Map<MediaType, byte[]> STREAM_SEPARATORS;, +, +	static {, +		STREAM_SEPARATORS = new HashMap<>();, +		STREAM_SEPARATORS.put(MediaType.APPLICATION_STREAM_JSON, NEWLINE_SEPARATOR);, +		STREAM_SEPARATORS.put(MediaType.parseMediaType("application/stream+x-jackson-smile"), new byte[0]);, +	}, +, +, +	private final List<MediaType> streamingMediaTypes = new ArrayList<>(1);, +, +		for (MediaType streamingMediaType : this.streamingMediaTypes) {, +			if (streamingMediaType.isCompatibleWith(mimeType)) {, +				byte[] separator = STREAM_SEPARATORS.getOrDefault(streamingMediaType, NEWLINE_SEPARATOR);, +					if (separator != null) {, +						buffer.write(separator);, +		}, +, +++ b/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2JsonEncoder.java, +import java.util.Collections;, +		setStreamingMediaTypes(Collections.singletonList(MediaType.APPLICATION_STREAM_JSON));, +++ b/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2SmileEncoder.java, +		setStreamingMediaTypes(Collections.singletonList(new MediaType("application", "stream+x-jackson-smile")));]