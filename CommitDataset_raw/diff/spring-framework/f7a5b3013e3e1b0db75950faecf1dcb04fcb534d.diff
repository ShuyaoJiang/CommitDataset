[+++ b/spring-test/src/main/java/org/springframework/test/context/event/EventPublishingTestExecutionListener.java, + * <h3>Listener Registration</h3>, + * <p>Note that this {@code TestExecutionListener} is not registered by default,, + * but it may be registered for a given test class via, + * {@link org.springframework.test.context.TestExecutionListeners @TestExecutionListeners}, + * or globally via the {@link org.springframework.core.io.support.SpringFactoriesLoader, + * SpringFactoriesLoader} mechanism (consult the Javadoc and Spring reference manual for, + * details)., + *, +++ b/spring-test/src/main/java/org/springframework/test/context/event/EventPublishingTestExecutionListener.java, + * <h3>Listener Registration</h3>, + * <p>Note that this {@code TestExecutionListener} is not registered by default,, + * but it may be registered for a given test class via, + * {@link org.springframework.test.context.TestExecutionListeners @TestExecutionListeners}, + * or globally via the {@link org.springframework.core.io.support.SpringFactoriesLoader, + * SpringFactoriesLoader} mechanism (consult the Javadoc and Spring reference manual for, + * details)., + *, +++ b/spring-test/src/main/resources/META-INF/spring.factories, +++ b/spring-test/src/main/java/org/springframework/test/context/event/EventPublishingTestExecutionListener.java, + * <h3>Listener Registration</h3>, + * <p>Note that this {@code TestExecutionListener} is not registered by default,, + * but it may be registered for a given test class via, + * {@link org.springframework.test.context.TestExecutionListeners @TestExecutionListeners}, + * or globally via the {@link org.springframework.core.io.support.SpringFactoriesLoader, + * SpringFactoriesLoader} mechanism (consult the Javadoc and Spring reference manual for, + * details)., + *, +++ b/spring-test/src/main/resources/META-INF/spring.factories, +++ b/spring-test/src/test/java/org/springframework/test/context/event/EventPublishingTestExecutionListenerIntegrationTests.java, +import org.springframework.test.context.TestExecutionListeners;, +	@TestExecutionListeners(EventPublishingTestExecutionListener.class), +++ b/spring-test/src/main/java/org/springframework/test/context/event/EventPublishingTestExecutionListener.java, + * <h3>Listener Registration</h3>, + * <p>Note that this {@code TestExecutionListener} is not registered by default,, + * but it may be registered for a given test class via, + * {@link org.springframework.test.context.TestExecutionListeners @TestExecutionListeners}, + * or globally via the {@link org.springframework.core.io.support.SpringFactoriesLoader, + * SpringFactoriesLoader} mechanism (consult the Javadoc and Spring reference manual for, + * details)., + *, +++ b/spring-test/src/main/resources/META-INF/spring.factories, +++ b/spring-test/src/test/java/org/springframework/test/context/event/EventPublishingTestExecutionListenerIntegrationTests.java, +import org.springframework.test.context.TestExecutionListeners;, +	@TestExecutionListeners(EventPublishingTestExecutionListener.class), +++ b/src/docs/asciidoc/testing.adoc, +exactly in the following order. Except for the `EventPublishingTestExecutionListener`,, +each of these listeners is registered by default., +alternative approach to implementing a custom `TestExecutionListener`. If the, +`EventPublishingTestExecutionListener` is <<testcontext-tel-config-registering-tels,, +registered>>, components in the `ApplicationContext` can listen to the following events, +published by the `EventPublishingTestExecutionListener`. Each of these events corresponds, +to a method in the `TestExecutionListener` API.]