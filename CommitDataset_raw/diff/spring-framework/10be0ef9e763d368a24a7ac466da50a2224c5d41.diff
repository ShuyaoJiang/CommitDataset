[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/BeanFactory.java, + * Copyright 2002-2011 the original author or authors., +	 * Does this bean factory contain a bean definition or externally registered singleton, +	 * instance with the given name?, +	 * <p>If the given name is an alias, it will be translated back to the corresponding, +	 * canonical bean name., +	 * <p>If this factory is hierarchical, will ask any parent factory if the bean cannot, +	 * be found in this factory instance., +	 * <p>If a bean definition or singleton instance matching the given name is found,, +	 * this method will return {@code true} whether the named bean definition is concrete, +	 * or abstract, lazy or eager, in scope or not. Therefore, note that a {@code true}, +	 * return value from this method does not necessarily indicate that {@link #getBean}, +	 * will be able to obtain an instance for the same name., +	 * @return whether a bean with the given name is present, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/BeanFactory.java, + * Copyright 2002-2011 the original author or authors., +	 * Does this bean factory contain a bean definition or externally registered singleton, +	 * instance with the given name?, +	 * <p>If the given name is an alias, it will be translated back to the corresponding, +	 * canonical bean name., +	 * <p>If this factory is hierarchical, will ask any parent factory if the bean cannot, +	 * be found in this factory instance., +	 * <p>If a bean definition or singleton instance matching the given name is found,, +	 * this method will return {@code true} whether the named bean definition is concrete, +	 * or abstract, lazy or eager, in scope or not. Therefore, note that a {@code true}, +	 * return value from this method does not necessarily indicate that {@link #getBean}, +	 * will be able to obtain an instance for the same name., +	 * @return whether a bean with the given name is present, +++ b/org.springframework.beans/src/test/java/org/springframework/beans/factory/DefaultListableBeanFactoryTests.java, +import static org.hamcrest.CoreMatchers.is;, +import static org.junit.Assert.assertThat;, +import static org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition;, +	@Test, +	public void testContainsBeanReturnsTrueEvenForAbstractBeanDefinition() {, +		DefaultListableBeanFactory bf = new DefaultListableBeanFactory();, +		bf.registerBeanDefinition("abs",, +				rootBeanDefinition(TestBean.class).setAbstract(true).getBeanDefinition());, +		assertThat(bf.containsBean("abs"), is(true));, +		assertThat(bf.containsBean("bogus"), is(false));, +	}, +]