[+++ b/org.springframework.context/src/main/java/org/springframework/model/ui/PresentationModel.java, +	/**, +	 * If errors are present on this PresentationModel., +	 * Returns true if at least one FieldModel has {@link BindingStatus#INVALID_SUBMITTED_VALUE invalid submitted values} or is {@link ValidationStatus#INVALID invalid}., +	 */, +	boolean hasErrors();, +	, +	/**, +	 * Commit any {@link BindingStatus#DIRTY dirty} fields., +	 * @throws IllegalStateException if there are field models that have {@link BindingStatus#INVALID_SUBMITTED_VALUE invalid submitted values} or are {@link ValidationStatus#INVALID invalid}., +	 */, +	void commit();, +, +	/**, +	 * Validate all fields., +	 * Skips any fields with {@link BindingStatus#INVALID_SUBMITTED_VALUE invalid submitted values}., +	 */, +	void validate();, +, +++ b/org.springframework.context/src/main/java/org/springframework/model/ui/PresentationModel.java, +	/**, +	 * If errors are present on this PresentationModel., +	 * Returns true if at least one FieldModel has {@link BindingStatus#INVALID_SUBMITTED_VALUE invalid submitted values} or is {@link ValidationStatus#INVALID invalid}., +	 */, +	boolean hasErrors();, +	, +	/**, +	 * Commit any {@link BindingStatus#DIRTY dirty} fields., +	 * @throws IllegalStateException if there are field models that have {@link BindingStatus#INVALID_SUBMITTED_VALUE invalid submitted values} or are {@link ValidationStatus#INVALID invalid}., +	 */, +	void commit();, +, +	/**, +	 * Validate all fields., +	 * Skips any fields with {@link BindingStatus#INVALID_SUBMITTED_VALUE invalid submitted values}., +	 */, +	void validate();, +, +++ b/org.springframework.context/src/main/java/org/springframework/model/ui/support/DefaultPresentationModel.java, +	public boolean hasErrors() {, +		return false;, +	}, +, +	public void commit() {, +		, +	}, +, +	public void validate() {, +		, +	}, +	, +	// internal helpers, +, +++ b/org.springframework.context/src/main/java/org/springframework/model/ui/PresentationModel.java, +	/**, +	 * If errors are present on this PresentationModel., +	 * Returns true if at least one FieldModel has {@link BindingStatus#INVALID_SUBMITTED_VALUE invalid submitted values} or is {@link ValidationStatus#INVALID invalid}., +	 */, +	boolean hasErrors();, +	, +	/**, +	 * Commit any {@link BindingStatus#DIRTY dirty} fields., +	 * @throws IllegalStateException if there are field models that have {@link BindingStatus#INVALID_SUBMITTED_VALUE invalid submitted values} or are {@link ValidationStatus#INVALID invalid}., +	 */, +	void commit();, +, +	/**, +	 * Validate all fields., +	 * Skips any fields with {@link BindingStatus#INVALID_SUBMITTED_VALUE invalid submitted values}., +	 */, +	void validate();, +, +++ b/org.springframework.context/src/main/java/org/springframework/model/ui/support/DefaultPresentationModel.java, +	public boolean hasErrors() {, +		return false;, +	}, +, +	public void commit() {, +		, +	}, +, +	public void validate() {, +		, +	}, +	, +	// internal helpers, +, +++ b/org.springframework.context/src/main/java/org/springframework/model/ui/support/PresentationModelBinder.java, + * @see #setCommitDirtyValue(boolean), +	private boolean commitDirtyValue;, +	, +	/**, +	 * Configures if this PresentationModelBinder should eagerly commit the dirty value after a successful field binding., +	 * Default is false., +	 */, +	public void setCommitDirtyValue(boolean commitDirtyValue) {, +		this.commitDirtyValue = commitDirtyValue;, +	}, +, +	// subclass hooks]