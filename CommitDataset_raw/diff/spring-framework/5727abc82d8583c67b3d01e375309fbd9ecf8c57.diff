[+++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/http/reactor/PublisherReactorServerHttpRequest.java, +import org.springframework.http.server.ReactiveServerHttpRequest;, +public class PublisherReactorServerHttpRequest implements ReactiveServerHttpRequest {, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/http/reactor/PublisherReactorServerHttpRequest.java, +import org.springframework.http.server.ReactiveServerHttpRequest;, +public class PublisherReactorServerHttpRequest implements ReactiveServerHttpRequest {, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/http/reactor/PublisherReactorServerHttpResponse.java, +import org.springframework.http.server.ReactiveServerHttpResponse;, +public class PublisherReactorServerHttpResponse implements ReactiveServerHttpResponse {, +	public Publisher<Void> addBody(Publisher<ByteBuffer> contentPublisher) {, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/http/reactor/PublisherReactorServerHttpRequest.java, +import org.springframework.http.server.ReactiveServerHttpRequest;, +public class PublisherReactorServerHttpRequest implements ReactiveServerHttpRequest {, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/http/reactor/PublisherReactorServerHttpResponse.java, +import org.springframework.http.server.ReactiveServerHttpResponse;, +public class PublisherReactorServerHttpResponse implements ReactiveServerHttpResponse {, +	public Publisher<Void> addBody(Publisher<ByteBuffer> contentPublisher) {, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/http/reactor/ReactorServerHttpResponse.java, +import java.nio.ByteBuffer;, +, +	public Stream<Void> addBody(Publisher<ByteBuffer> contentPublisher) {, +		return Streams.wrap(super.addBody(contentPublisher));]