[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +, +	/**, +	 * Gets the local name for the supplied {@link Node}. The default implementation calls {@link Node#getLocalName}., +	 * Subclasses may override the default implementation to provide a different mechanism for getting the local name., +	 * @param node the <code>Node</code>, +	 * @return the local name of the supplied <code>Node</code>., +	 */, +	public String getLocalName(Node node) {, +		return node.getLocalName();, +	}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +, +	/**, +	 * Gets the local name for the supplied {@link Node}. The default implementation calls {@link Node#getLocalName}., +	 * Subclasses may override the default implementation to provide a different mechanism for getting the local name., +	 * @param node the <code>Node</code>, +	 * @return the local name of the supplied <code>Node</code>., +	 */, +	public String getLocalName(Node node) {, +		return node.getLocalName();, +	}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/xml/NamespaceHandlerSupport.java, +		String localName = parserContext.getDelegate().getLocalName(element);, +		BeanDefinitionParser parser = this.parsers.get(localName);, +					"Cannot locate BeanDefinitionParser for element [" + localName + "]", element);, +		String localName = parserContext.getDelegate().getLocalName(node);, +			decorator = this.decorators.get(localName);, +			decorator = this.attributeDecorators.get(localName);, +					(node instanceof Element ? "element" : "attribute") + " [" + localName + "]", node);]