[+++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationAttributesReadingVisitor.java, +			Class<?> arrayClass = newValue.getClass();, +			if(Enum.class.isAssignableFrom(arrayClass)) {, +				while(arrayClass.getSuperclass() != null && !arrayClass.isEnum()) {, +					arrayClass = arrayClass.getSuperclass();, +				}, +			}, +			Object[] newArray = (Object[]) Array.newInstance(arrayClass, 1);, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationAttributesReadingVisitor.java, +			Class<?> arrayClass = newValue.getClass();, +			if(Enum.class.isAssignableFrom(arrayClass)) {, +				while(arrayClass.getSuperclass() != null && !arrayClass.isEnum()) {, +					arrayClass = arrayClass.getSuperclass();, +				}, +			}, +			Object[] newArray = (Object[]) Array.newInstance(arrayClass, 1);, +++ b/spring-core/src/test/java/org/springframework/core/type/AnnotationMetadataTests.java, +		assertThat(metadata.getAnnotationTypes().size(), is(6));, +	@Target(ElementType.TYPE), +	@Retention(RetentionPolicy.RUNTIME), +	public @interface EnumSubclasses {, +		SubclassEnum[] value();, +	}, +, +	// SPR-10914, +	public static enum SubclassEnum {, +		FOO {, +		},, +		BAR {, +		};, +	}, +, +	@EnumSubclasses({ SubclassEnum.FOO, SubclassEnum.BAR })]