[+++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, +, +		@Override, +		public void close() {, +			super.flush();, +			super.close();, +			setCommitted(true);, +		}, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, +, +		@Override, +		public void close() {, +			super.flush();, +			super.close();, +			setCommitted(true);, +		}, +++ b/spring-test/src/test/java/org/springframework/mock/web/MockHttpServletResponseTests.java, +	@Test // SPR-16683, +	public void servletWriterCommittedOnWriterClose() throws IOException {, +		assertFalse(response.isCommitted());, +		response.getWriter().write("X");, +		assertFalse(response.isCommitted());, +		response.getWriter().close();, +		assertTrue(response.isCommitted());, +		assertEquals(1, response.getContentAsByteArray().length);, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, +, +		@Override, +		public void close() {, +			super.flush();, +			super.close();, +			setCommitted(true);, +		}, +++ b/spring-test/src/test/java/org/springframework/mock/web/MockHttpServletResponseTests.java, +	@Test // SPR-16683, +	public void servletWriterCommittedOnWriterClose() throws IOException {, +		assertFalse(response.isCommitted());, +		response.getWriter().write("X");, +		assertFalse(response.isCommitted());, +		response.getWriter().close();, +		assertTrue(response.isCommitted());, +		assertEquals(1, response.getContentAsByteArray().length);, +	}, +, +++ b/spring-web/src/test/java/org/springframework/mock/web/test/MockHttpServletResponse.java, +import org.springframework.lang.Nullable;, +	@Nullable, +	@Nullable, +	@Nullable, +	@Nullable, +	@Nullable, +	@Nullable, +	public void setContentType(@Nullable String contentType) {, +	@Nullable, +	@Nullable, +	@Nullable, +	@Nullable, +	@Nullable, +	@Nullable, +	public void setForwardedUrl(@Nullable String forwardedUrl) {, +	@Nullable, +	public void setIncludedUrl(@Nullable String includedUrl) {, +	@Nullable, +		public void write(char[] buf, int off, int len) {, +, +		@Override, +		public void close() {, +			super.flush();, +			super.close();, +			setCommitted(true);, +		}]