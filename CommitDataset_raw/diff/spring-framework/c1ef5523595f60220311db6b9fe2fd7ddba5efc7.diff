[+++ b/spring-oxm/src/main/java/org/springframework/oxm/xstream/CatchAllConverter.java, + * Copyright 2002-2014 the original author or authors., + * XStream {@link Converter} that supports all classes but throws exceptions, + * for (un)marshalling., + *, + * {@linkplain com.thoughtworks.xstream.XStream#registerConverter(Converter, int) register}, + * this converter as a catch-all converter with a, + *, +	public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context) {, +		throw new UnsupportedOperationException("Marshalling not supported");, +	public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {, +		throw new UnsupportedOperationException("Unmarshalling not supported");, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/xstream/CatchAllConverter.java, + * Copyright 2002-2014 the original author or authors., + * XStream {@link Converter} that supports all classes but throws exceptions, + * for (un)marshalling., + *, + * {@linkplain com.thoughtworks.xstream.XStream#registerConverter(Converter, int) register}, + * this converter as a catch-all converter with a, + *, +	public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context) {, +		throw new UnsupportedOperationException("Marshalling not supported");, +	public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {, +		throw new UnsupportedOperationException("Unmarshalling not supported");, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/xstream/XStreamMarshaller.java, + * {@link #setConverters(ConverterMatcher[]) converters} properties (possibly using, + * a {@link CatchAllConverter}) or override the {@link #customizeXStream(XStream)}, + * method to make sure it only accepts the classes you want it to support., + * <p>Due to XStream's API, it is required to set the encoding used for writing to, + * OutputStreams. It defaults to {@code UTF-8}.]