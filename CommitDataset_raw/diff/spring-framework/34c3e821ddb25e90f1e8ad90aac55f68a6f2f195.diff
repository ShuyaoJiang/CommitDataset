[+++ b/spring-core/src/main/java/org/springframework/util/AntPathMatcher.java, + * Copyright 2002-2012 the original author or authors., +import java.util.concurrent.ConcurrentHashMap;, +	private final Map<String, AntPathStringMatcher> stringMatcherCache =, +			new ConcurrentHashMap<String, AntPathStringMatcher>();, +, +		AntPathStringMatcher matcher = this.stringMatcherCache.get(pattern);, +		if (matcher == null) {, +			matcher = new AntPathStringMatcher(pattern);, +			this.stringMatcherCache.put(pattern, matcher);, +		}, +		return matcher.matchStrings(str, uriTemplateVariables);, +++ b/spring-core/src/main/java/org/springframework/util/AntPathMatcher.java, + * Copyright 2002-2012 the original author or authors., +import java.util.concurrent.ConcurrentHashMap;, +	private final Map<String, AntPathStringMatcher> stringMatcherCache =, +			new ConcurrentHashMap<String, AntPathStringMatcher>();, +, +		AntPathStringMatcher matcher = this.stringMatcherCache.get(pattern);, +		if (matcher == null) {, +			matcher = new AntPathStringMatcher(pattern);, +			this.stringMatcherCache.put(pattern, matcher);, +		}, +		return matcher.matchStrings(str, uriTemplateVariables);, +++ b/spring-core/src/main/java/org/springframework/util/AntPathStringMatcher.java, + * Copyright 2002-2012 the original author or authors., +	AntPathStringMatcher(String pattern) {, +	public boolean matchStrings(String str, Map<String, String> uriTemplateVariables) {]