[+++ b/build.gradle, +	ext.junitJupiterVersion  = '5.0.0-SNAPSHOT', +	ext.junitPlatformVersion = '1.0.0-SNAPSHOT', +		// For JUnit Platform and Jupiter snapshots:, +		maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }, +		optional("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"), +		// Enable use of the JUnitPlatform Runner, +		testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}"), +		testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"), +, +		scanForTestClasses = false, +		include(['**/*Tests.class', '**/*Test.class', '**/SpringJUnitJupiterTestSuite.class']), +		exclude(['**/testng/**/*.*']), +++ b/build.gradle, +	ext.junitJupiterVersion  = '5.0.0-SNAPSHOT', +	ext.junitPlatformVersion = '1.0.0-SNAPSHOT', +		// For JUnit Platform and Jupiter snapshots:, +		maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }, +		optional("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"), +		// Enable use of the JUnitPlatform Runner, +		testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}"), +		testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"), +, +		scanForTestClasses = false, +		include(['**/*Tests.class', '**/*Test.class', '**/SpringJUnitJupiterTestSuite.class']), +		exclude(['**/testng/**/*.*']), +++ b/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/SpringExtension.java, +/*, + * Copyright 2002-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.test.context.junit.jupiter;, +, +import java.lang.reflect.Constructor;, +import java.lang.reflect.Executable;, +import java.lang.reflect.Method;, +import java.lang.reflect.Parameter;, +, +import org.junit.jupiter.api.extension.AfterAllCallback;, +import org.junit.jupiter.api.extension.AfterEachCallback;, +import org.junit.jupiter.api.extension.BeforeAllCallback;, +import org.junit.jupiter.api.extension.BeforeEachCallback;, +import org.junit.jupiter.api.extension.ContainerExtensionContext;, +import org.junit.jupiter.api.extension.ExtensionContext;, +import org.junit.jupiter.api.extension.ExtensionContext.Namespace;, +import org.junit.jupiter.api.extension.ExtensionContext.Store;, +import org.junit.jupiter.api.extension.ParameterContext;, +import org.junit.jupiter.api.extension.ParameterResolver;, +import org.junit.jupiter.api.extension.TestExtensionContext;, +import org.junit.jupiter.api.extension.TestInstancePostProcessor;, +, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.context.ApplicationContext;, +import org.springframework.core.annotation.AnnotatedElementUtils;, +import org.springframework.test.context.TestContextManager;, +import org.springframework.test.context.junit.jupiter.support.ParameterAutowireUtils;, +import org.springframework.util.Assert;, +, +/**, + * {@code SpringExtension} integrates the <em>Spring TestContext Framework</em>, + * into JUnit 5's <em>Jupiter</em> programming model., + *, + * <p>To use this class, simply annotate a JUnit Jupiter based test class with, + * {@code @ExtendWith(SpringExtension.class)}., + *, + * @author Sam Brannen, + * @since 5.0, + * @see org.springframework.test.context.junit.jupiter.SpringJUnitConfig, + * @see org.springframework.test.context.junit.jupiter.web.SpringJUnitWebConfig, + * @see org.springframework.test.context.TestContextManager, + */, +public class SpringExtension implements BeforeAllCallback, AfterAllCallback, TestInstancePostProcessor,, +		BeforeEachCallback, AfterEachCallback, ParameterResolver {, +, +	/**, +	 * {@link Namespace} in which {@code TestContextManagers} are stored, keyed, +	 * by test class., +	 */, +	private static final Namespace namespace = Namespace.create(SpringExtension.class);, +, +	/**, +	 * Delegates to {@link TestContextManager#beforeTestClass}., +	 */, +	@Override, +	public void beforeAll(ContainerExtensionContext context) throws Exception {, +		getTestContextManager(context).beforeTestClass();, +	}, +]