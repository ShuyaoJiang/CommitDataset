[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceTransformerSupport.java, +		String absolutePath = path.startsWith("/") ? path : StringUtils.applyRelativePath(requestPath, path);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceTransformerSupport.java, +		String absolutePath = path.startsWith("/") ? path : StringUtils.applyRelativePath(requestPath, path);, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/resource/ResourceTransformerSupportTests.java, +	@Test, +	public void toAbsolutePath() {, +		MockServerWebExchange exchange = MockServerWebExchange.from(MockServerHttpRequest.get("/resources/main.css"));, +		String absolute = this.transformer.toAbsolutePath("img/image.png", exchange);, +		assertEquals("/resources/img/image.png", absolute);, +, +		absolute = this.transformer.toAbsolutePath("/img/image.png", exchange);, +		assertEquals("/img/image.png", absolute);, +	}, +, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceTransformerSupport.java, +		String absolutePath = path.startsWith("/") ? path : StringUtils.applyRelativePath(requestPath, path);, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/resource/ResourceTransformerSupportTests.java, +	@Test, +	public void toAbsolutePath() {, +		MockServerWebExchange exchange = MockServerWebExchange.from(MockServerHttpRequest.get("/resources/main.css"));, +		String absolute = this.transformer.toAbsolutePath("img/image.png", exchange);, +		assertEquals("/resources/img/image.png", absolute);, +, +		absolute = this.transformer.toAbsolutePath("/img/image.png", exchange);, +		assertEquals("/img/image.png", absolute);, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceTransformerSupport.java, +		String absolutePath = path;, +		if(!path.startsWith("/")) {, +			absolutePath = StringUtils.applyRelativePath(requestPath, path);, +		}, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceTransformerSupport.java, +		String absolutePath = path.startsWith("/") ? path : StringUtils.applyRelativePath(requestPath, path);, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/resource/ResourceTransformerSupportTests.java, +	@Test, +	public void toAbsolutePath() {, +		MockServerWebExchange exchange = MockServerWebExchange.from(MockServerHttpRequest.get("/resources/main.css"));, +		String absolute = this.transformer.toAbsolutePath("img/image.png", exchange);, +		assertEquals("/resources/img/image.png", absolute);, +, +		absolute = this.transformer.toAbsolutePath("/img/image.png", exchange);, +		assertEquals("/img/image.png", absolute);, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceTransformerSupport.java, +		String absolutePath = path;, +		if(!path.startsWith("/")) {, +			absolutePath = StringUtils.applyRelativePath(requestPath, path);, +		}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/resource/ResourceTransformerSupportTests.java, +	private final MockHttpServletRequest request = new MockHttpServletRequest("GET", "/");, +	@Test, +	public void toAbsolutePath() {, +		String absolute = this.transformer.toAbsolutePath("img/image.png",, +				new MockHttpServletRequest("GET", "/resources/style.css"));, +		assertEquals("/resources/img/image.png", absolute);, +, +		absolute = this.transformer.toAbsolutePath("/img/image.png",, +				new MockHttpServletRequest("GET", "/resources/style.css"));, +		assertEquals("/img/image.png", absolute);, +	}, +]