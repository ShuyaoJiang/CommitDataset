[+++ b/org.springframework.testsuite/src/test/java/org/springframework/util/AssertTests.java, +import java.util.ArrayList;, +import java.util.Collection;, +import java.util.HashMap;, +import java.util.HashSet;, +import java.util.List;, +import java.util.Map;, +import java.util.Set;, +import org.junit.Test;, + * @author Arjen Poutsma, +public class AssertTests {, +	@Test(expected = IllegalArgumentException.class), +	public void instanceOf() {, +	@Test, +	public void isNullDoesNotThrowExceptionIfArgumentIsNullWithMessage() {, +	@Test, +	public void isNullDoesNotThrowExceptionIfArgumentIsNull() {, +	@Test(expected = IllegalArgumentException.class), +	public void isNullThrowsExceptionIfArgumentIsNotNull() {, +	@Test(expected = IllegalArgumentException.class), +	public void isTrueWithFalseExpressionThrowsException() throws Exception {, +	@Test, +	public void isTrueWithTrueExpressionSunnyDay() throws Exception {, +	@Test(expected = IllegalArgumentException.class), +	@Test(expected = IllegalArgumentException.class), +	public void hasLengthWithEmptyStringThrowsException() throws Exception {, +	@Test, +	public void hasLengthWithWhitespaceOnlyStringDoesNotThrowException() throws Exception {, +	@Test, +	public void hasLengthSunnyDay() throws Exception {, +	@Test, +	public void doesNotContainWithNullSearchStringDoesNotThrowException() throws Exception {, +	@Test, +	public void doesNotContainWithNullSubstringDoesNotThrowException() throws Exception {, +	@Test, +	public void doesNotContainWithEmptySubstringDoesNotThrowException() throws Exception {, +	@Test(expected = IllegalArgumentException.class), +	public void assertNotEmptyWithNullCollectionThrowsException() throws Exception {, +	@Test(expected = IllegalArgumentException.class), +	public void assertNotEmptyWithEmptyCollectionThrowsException() throws Exception {, +	@Test, +	public void assertNotEmptyWithCollectionSunnyDay() throws Exception {, +		List<String> collection = new ArrayList<String>();, +	@Test(expected = IllegalArgumentException.class), +	public void assertNotEmptyWithNullMapThrowsException() throws Exception {, +	@Test(expected = IllegalArgumentException.class), +	public void assertNotEmptyWithEmptyMapThrowsException() throws Exception {, +	@Test, +	public void assertNotEmptyWithMapSunnyDay() throws Exception {, +		Map<String, String> map = new HashMap<String, String>();, +	@Test(expected = IllegalArgumentException.class), +	public void isInstanceofClassWithNullInstanceThrowsException() throws Exception {, +	@Test(expected = IllegalStateException.class), +	public void stateWithFalseExpressionThrowsException() throws Exception {, +	@Test, +	public void stateWithTrueExpressionSunnyDay() throws Exception {]