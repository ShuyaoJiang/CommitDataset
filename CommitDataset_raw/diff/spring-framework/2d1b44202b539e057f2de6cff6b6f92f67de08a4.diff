[+++ b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AspectJAsyncConfiguration.java, +++ b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AspectJAsyncConfiguration.java, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/AbstractAsyncConfiguration.java, +++ b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AspectJAsyncConfiguration.java, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/AbstractAsyncConfiguration.java, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ProxyAsyncConfiguration.java, +++ b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AspectJAsyncConfiguration.java, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/AbstractAsyncConfiguration.java, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ProxyAsyncConfiguration.java, +++ b/spring-core/src/main/java/org/springframework/core/type/StandardAnnotationMetadata.java, +			// TODO: on OpenJDK 8 b99, bridge methods seem to be discovered as annotated as well..., +				annotatedMethods.add(new StandardMethodMetadata(method, this.nestedAnnotationsAsMap));, +++ b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AspectJAsyncConfiguration.java, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/AbstractAsyncConfiguration.java, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ProxyAsyncConfiguration.java, +++ b/spring-core/src/main/java/org/springframework/core/type/StandardAnnotationMetadata.java, +			// TODO: on OpenJDK 8 b99, bridge methods seem to be discovered as annotated as well..., +				annotatedMethods.add(new StandardMethodMetadata(method, this.nestedAnnotationsAsMap));, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationUtilsTests.java, +import static org.junit.Assert.*;, +import static org.springframework.core.annotation.AnnotationUtils.*;, +, +		Method m = Leaf.class.getMethod("annotatedOnLeaf", (Class[]) null);, +		Method m = Leaf.class.getMethod("annotatedOnRoot", (Class[]) null);, +		Method m = Leaf.class.getMethod("overrideWithoutNewAnnotation", (Class[]) null);, +		Method m = Leaf.class.getMethod("notAnnotated", (Class[]) null);, +		Method m = SimpleFoo.class.getMethod("something", Object.class);, +		// TODO: actually found on OpenJDK 8 b99! assertNull(m.getAnnotation(Transactional.class));, +		List<Class<? extends Annotation>> candidates = Arrays.<Class<? extends Annotation>> asList(Transactional.class, Order.class);, +		Method method = SimpleFoo.class.getMethod("something", Object.class);, +		Order order = findAnnotation(method, Order.class);, +		Method method = SimpleFoo.class.getMethod("something", Object.class);, +		Order order = findAnnotation(method, Order.class);]