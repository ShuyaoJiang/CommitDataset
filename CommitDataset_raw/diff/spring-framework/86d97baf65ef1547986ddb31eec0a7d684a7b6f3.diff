[+++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java, +	private ContentNegotiationStrategy defaultNegotiationStrategy;, +, +	/**, +	 * Set the {@link ContentNegotiationStrategy} to be used to resolving the default content type., +	 * <p>This content type will be used when neither the request path extension,, +	 * nor a request parameter, nor the {@code Accept} header could help determine, +	 * the requested content type., +	 * @since 4.1.2, +	 */, +	public void setDefaultContentType(ContentNegotiationStrategy defaultStrategy) {, +		this.defaultNegotiationStrategy = defaultStrategy;, +	}, +, +		if(this.defaultNegotiationStrategy != null) {, +			strategies.add(defaultNegotiationStrategy);, +		}, +, +++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java, +	private ContentNegotiationStrategy defaultNegotiationStrategy;, +, +	/**, +	 * Set the {@link ContentNegotiationStrategy} to be used to resolving the default content type., +	 * <p>This content type will be used when neither the request path extension,, +	 * nor a request parameter, nor the {@code Accept} header could help determine, +	 * the requested content type., +	 * @since 4.1.2, +	 */, +	public void setDefaultContentType(ContentNegotiationStrategy defaultStrategy) {, +		this.defaultNegotiationStrategy = defaultStrategy;, +	}, +, +		if(this.defaultNegotiationStrategy != null) {, +			strategies.add(defaultNegotiationStrategy);, +		}, +, +++ b/spring-web/src/test/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBeanTests.java, +	// SPR-12286, +	@Test, +	public void setDefaultContentTypeWithStrategy() throws Exception {, +		this.factoryBean.setDefaultContentType(new FixedContentNegotiationStrategy(MediaType.APPLICATION_JSON));, +		this.factoryBean.afterPropertiesSet();, +		ContentNegotiationManager manager = this.factoryBean.getObject();, +, +		assertEquals(Arrays.asList(MediaType.APPLICATION_JSON), manager.resolveMediaTypes(this.webRequest));, +, +		this.servletRequest.addHeader("Accept", MediaType.ALL_VALUE);, +		assertEquals(Arrays.asList(MediaType.APPLICATION_JSON), manager.resolveMediaTypes(this.webRequest));, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java, +	private ContentNegotiationStrategy defaultNegotiationStrategy;, +, +	/**, +	 * Set the {@link ContentNegotiationStrategy} to be used to resolving the default content type., +	 * <p>This content type will be used when neither the request path extension,, +	 * nor a request parameter, nor the {@code Accept} header could help determine, +	 * the requested content type., +	 * @since 4.1.2, +	 */, +	public void setDefaultContentType(ContentNegotiationStrategy defaultStrategy) {, +		this.defaultNegotiationStrategy = defaultStrategy;, +	}, +, +		if(this.defaultNegotiationStrategy != null) {, +			strategies.add(defaultNegotiationStrategy);, +		}, +, +++ b/spring-web/src/test/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBeanTests.java, +	// SPR-12286, +	@Test, +	public void setDefaultContentTypeWithStrategy() throws Exception {, +		this.factoryBean.setDefaultContentType(new FixedContentNegotiationStrategy(MediaType.APPLICATION_JSON));, +		this.factoryBean.afterPropertiesSet();, +		ContentNegotiationManager manager = this.factoryBean.getObject();, +, +		assertEquals(Arrays.asList(MediaType.APPLICATION_JSON), manager.resolveMediaTypes(this.webRequest));, +, +		this.servletRequest.addHeader("Accept", MediaType.ALL_VALUE);, +		assertEquals(Arrays.asList(MediaType.APPLICATION_JSON), manager.resolveMediaTypes(this.webRequest));, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ContentNegotiationConfigurer.java, +import org.springframework.web.accept.ContentNegotiationStrategy;, +	 * Set the {@link ContentNegotiationStrategy} to be used to resolving the default content type., +	 * <p>This content type will be used when neither the request path extension,, +	 * nor a request parameter, nor the {@code Accept} header could help determine, +	 * the requested content type., +	 * @since 4.1.2, +	 */, +	public ContentNegotiationConfigurer defaultContentType(ContentNegotiationStrategy defaultStrategy) {, +		this.factoryBean.setDefaultContentType(defaultStrategy);, +		return this;, +	}, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java, +	private ContentNegotiationStrategy defaultNegotiationStrategy;, +, +	/**]