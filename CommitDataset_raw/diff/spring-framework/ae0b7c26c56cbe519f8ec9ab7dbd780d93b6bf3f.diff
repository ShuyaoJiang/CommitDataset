[+++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpResponse.java, +		this.headers = new ServletResponseHttpHeaders();, +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpResponse.java, +		this.headers = new ServletResponseHttpHeaders();, +++ b/spring-web/src/main/java/org/springframework/web/bind/support/WebRequestDataBinder.java, +			else {, +				HttpServletRequest servletRequest = ((NativeWebRequest) request).getNativeRequest(HttpServletRequest.class);, +				bindParts(servletRequest, mpvs);, +	private void bindParts(HttpServletRequest request, MutablePropertyValues mpvs) {, +					if (isBindEmptyMultipartFiles() || part.getSize() > 0) {, +, +	/**, +	 * Treats errors as fatal., +	 * <p>Use this method only if it's an error if the input isn't valid., +	 * This might be appropriate if all input is from dropdowns, for example., +	 * @throws BindException if binding errors have been encountered, +	 */, +	public void closeNoCatch() throws BindException {, +		if (getBindingResult().hasErrors()) {, +			throw new BindException(getBindingResult());, +		}, +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpResponse.java, +		this.headers = new ServletResponseHttpHeaders();, +++ b/spring-web/src/main/java/org/springframework/web/bind/support/WebRequestDataBinder.java, +			else {, +				HttpServletRequest servletRequest = ((NativeWebRequest) request).getNativeRequest(HttpServletRequest.class);, +				bindParts(servletRequest, mpvs);, +	private void bindParts(HttpServletRequest request, MutablePropertyValues mpvs) {, +					if (isBindEmptyMultipartFiles() || part.getSize() > 0) {, +, +	/**, +	 * Treats errors as fatal., +	 * <p>Use this method only if it's an error if the input isn't valid., +	 * This might be appropriate if all input is from dropdowns, for example., +	 * @throws BindException if binding errors have been encountered, +	 */, +	public void closeNoCatch() throws BindException {, +		if (getBindingResult().hasErrors()) {, +			throw new BindException(getBindingResult());, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/request/ServletWebRequest.java, +			if (response == null) {, +		catch (IllegalArgumentException ex) {, +		if (response == null) {, +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpResponse.java, +		this.headers = new ServletResponseHttpHeaders();, +++ b/spring-web/src/main/java/org/springframework/web/bind/support/WebRequestDataBinder.java, +			else {, +				HttpServletRequest servletRequest = ((NativeWebRequest) request).getNativeRequest(HttpServletRequest.class);, +				bindParts(servletRequest, mpvs);, +	private void bindParts(HttpServletRequest request, MutablePropertyValues mpvs) {, +					if (isBindEmptyMultipartFiles() || part.getSize() > 0) {, +, +	/**, +	 * Treats errors as fatal., +	 * <p>Use this method only if it's an error if the input isn't valid., +	 * This might be appropriate if all input is from dropdowns, for example., +	 * @throws BindException if binding errors have been encountered, +	 */, +	public void closeNoCatch() throws BindException {, +		if (getBindingResult().hasErrors()) {, +			throw new BindException(getBindingResult());, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/request/ServletWebRequest.java, +			if (response == null) {, +		catch (IllegalArgumentException ex) {, +		if (response == null) {, +++ /dev/null, +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpResponse.java, +		this.headers = new ServletResponseHttpHeaders();, +++ b/spring-web/src/main/java/org/springframework/web/bind/support/WebRequestDataBinder.java, +			else {, +				HttpServletRequest servletRequest = ((NativeWebRequest) request).getNativeRequest(HttpServletRequest.class);, +				bindParts(servletRequest, mpvs);, +	private void bindParts(HttpServletRequest request, MutablePropertyValues mpvs) {, +					if (isBindEmptyMultipartFiles() || part.getSize() > 0) {, +, +	/**, +	 * Treats errors as fatal., +	 * <p>Use this method only if it's an error if the input isn't valid., +	 * This might be appropriate if all input is from dropdowns, for example., +	 * @throws BindException if binding errors have been encountered, +	 */, +	public void closeNoCatch() throws BindException {, +		if (getBindingResult().hasErrors()) {, +			throw new BindException(getBindingResult());, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/request/ServletWebRequest.java, +			if (response == null) {, +		catch (IllegalArgumentException ex) {, +		if (response == null) {, +++ /dev/null, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncUtils.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpResponse.java, +		this.headers = new ServletResponseHttpHeaders();, +++ b/spring-web/src/main/java/org/springframework/web/bind/support/WebRequestDataBinder.java, +			else {, +				HttpServletRequest servletRequest = ((NativeWebRequest) request).getNativeRequest(HttpServletRequest.class);, +				bindParts(servletRequest, mpvs);]