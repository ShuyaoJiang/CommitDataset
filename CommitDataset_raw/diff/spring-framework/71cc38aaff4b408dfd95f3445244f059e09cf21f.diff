[+++ b/build-spring-framework/resources/changelog.txt, +* add flash attribute support through FlashMap and FlashMapManager abstractions, +* add RedirectAttributes abstraction as supported method argument type of @RequestMapping methods, +* add "ignoreDefaultModelOnRedirect" flag to RequestMappingHandlerAdapter, +* add support for @RequestPart annotated controller method arguments, +* add Java config alternative to MVC namespace via @EnableWebMvc annotation, +* introduce HandlerMethod abstraction selecting and invoking @RequestMapping methods, +* add HandlerMethod-based implementations of HandlerMapping, HandlerAdapter, HandlerExceptionResolver, +* merge @PathVariables in the model before rendering except for JSON/XML serialization/marshalling., +* use @PathVariables in addition to request parameters in data binding, +* support URI variable placeholders in "redirect:" prefixed view names, +* add flag to extract value from single-key model in MappingJacksonJsonView, +* support @Valid on @RequestBody method arguments, +* consolidate initialization and use of MappedInterceptors in AbstractHandlerMapping, +++ b/build-spring-framework/resources/changelog.txt, +* add flash attribute support through FlashMap and FlashMapManager abstractions, +* add RedirectAttributes abstraction as supported method argument type of @RequestMapping methods, +* add "ignoreDefaultModelOnRedirect" flag to RequestMappingHandlerAdapter, +* add support for @RequestPart annotated controller method arguments, +* add Java config alternative to MVC namespace via @EnableWebMvc annotation, +* introduce HandlerMethod abstraction selecting and invoking @RequestMapping methods, +* add HandlerMethod-based implementations of HandlerMapping, HandlerAdapter, HandlerExceptionResolver, +* merge @PathVariables in the model before rendering except for JSON/XML serialization/marshalling., +* use @PathVariables in addition to request parameters in data binding, +* support URI variable placeholders in "redirect:" prefixed view names, +* add flag to extract value from single-key model in MappingJacksonJsonView, +* support @Valid on @RequestBody method arguments, +* consolidate initialization and use of MappedInterceptors in AbstractHandlerMapping, +++ b/org.springframework.web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * <li>{@link org.springframework.web.servlet.mvc.support.RedirectAttributes} , + * to specify the exact set of attributes to use in case of a redirect, + * and also to add flash attributes (attributes stored temporarily on the , + * server-side to make them available to the request after the redirect)., + * {@code RedirectAttributes} is used instead of the implicit model if the , + * method returns a "redirect:" prefixed view name or {@code RedirectView}., +++ b/build-spring-framework/resources/changelog.txt, +* add flash attribute support through FlashMap and FlashMapManager abstractions, +* add RedirectAttributes abstraction as supported method argument type of @RequestMapping methods, +* add "ignoreDefaultModelOnRedirect" flag to RequestMappingHandlerAdapter, +* add support for @RequestPart annotated controller method arguments, +* add Java config alternative to MVC namespace via @EnableWebMvc annotation, +* introduce HandlerMethod abstraction selecting and invoking @RequestMapping methods, +* add HandlerMethod-based implementations of HandlerMapping, HandlerAdapter, HandlerExceptionResolver, +* merge @PathVariables in the model before rendering except for JSON/XML serialization/marshalling., +* use @PathVariables in addition to request parameters in data binding, +* support URI variable placeholders in "redirect:" prefixed view names, +* add flag to extract value from single-key model in MappingJacksonJsonView, +* support @Valid on @RequestBody method arguments, +* consolidate initialization and use of MappedInterceptors in AbstractHandlerMapping, +++ b/org.springframework.web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * <li>{@link org.springframework.web.servlet.mvc.support.RedirectAttributes} , + * to specify the exact set of attributes to use in case of a redirect, + * and also to add flash attributes (attributes stored temporarily on the , + * server-side to make them available to the request after the redirect)., + * {@code RedirectAttributes} is used instead of the implicit model if the , + * method returns a "redirect:" prefixed view name or {@code RedirectView}., +++ b/spring-framework-reference/src/mvc.xml, +              <para>, +                <interfacename>org.springframework.web.servlet.mvc.support.RedirectAttributes</interfacename>, +                to specify the exact set of attributes to use in case of a redirect, +                and also to add flash attributes (attributes stored temporarily on, +                the server-side to make them available to the request after the redirect)., +                <literal>RedirectAttributes</literal> is used instead of the implicit, +                model if the method returns a "redirect:" prefixed view name or , +                <classname>RedirectView</classname>., +              </para>, +            </listitem>, +, +            <listitem>, +      <section id="mvc-ann-redirect-attributes">, +        <title>Specifying redirect and flash attributes</title>, +, +        <para>By default all model attributes are considered to be exposed as , +        URI template variables in the redirect URL. Of the remaining attributes , +        those that are primitive types or collections/arrays of primitive types , +        are automatically appended as query parameters., +        </para>, +        , +        <para>In annotated controllers however the model may contain , +        additional attributes originally added for rendering , +        purposes (e.g. drop-down field values)., +        To gain precise control over the attributes used in a redirect scenario,, +        an <interfacename>@RequestMapping</interfacename> method can declare an, +        argument of type <interfacename>RedirectAttributes</interfacename>, +        and use it to add attributes for use in <classname>RedirectView</classname>. , +        If the controller method does redirect, the content of , +        <interfacename>RedirectAttributes</interfacename> is used. , +        Otherwise the content of the default <interfacename>Model</interfacename> , +        is used., +        </para>, +        , +        <para>, +        The <classname>RequestMappingHandlerAdapter</classname> provides a flag, +        called <literal>"ignoreDefaultModelOnRedirect"</literal> that can be , +        used to indicate the content of the default <interfacename>Model</interfacename>, +        should never be used if a controller method redirects. , +        Instead the controller method should declare an attribute of type, +        <interfacename>RedirectAttributes</interfacename> or if it doesn't do so, +        no attributes should be passed on to <classname>RedirectView</classname>., +        Both the MVC namespace and the MVC Java config (via]