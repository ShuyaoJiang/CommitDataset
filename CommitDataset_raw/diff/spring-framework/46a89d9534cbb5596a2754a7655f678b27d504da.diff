[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConfigurableBeanFactory.java, + * Copyright 2002-2018 the original author or authors., +	 * Return this factory's class loader for loading bean classes, +	 * (only {@code null} if even the system ClassLoader isn't accessible)., +	 * @see org.springframework.util.ClassUtils#forName(String, ClassLoader), +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConfigurableBeanFactory.java, + * Copyright 2002-2018 the original author or authors., +	 * Return this factory's class loader for loading bean classes, +	 * (only {@code null} if even the system ClassLoader isn't accessible)., +	 * @see org.springframework.util.ClassUtils#forName(String, ClassLoader), +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConditionContext.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.lang.Nullable;, +	 * @throws IllegalStateException if no registry is available (which is unusual:, +	 * only the case with a plain {@link ClassPathScanningCandidateComponentProvider}), +	 * definition should the condition match, or {@code null} if the bean factory is, +	 * not available (or not downcastable to {@code ConfigurableListableBeanFactory})., +	@Nullable, +	 * Return the {@link ClassLoader} that should be used to load additional classes, +	 * (only {@code null} if even the system ClassLoader isn't accessible)., +	 * @see org.springframework.util.ClassUtils#forName(String, ClassLoader), +	@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConfigurableBeanFactory.java, + * Copyright 2002-2018 the original author or authors., +	 * Return this factory's class loader for loading bean classes, +	 * (only {@code null} if even the system ClassLoader isn't accessible)., +	 * @see org.springframework.util.ClassUtils#forName(String, ClassLoader), +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConditionContext.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.lang.Nullable;, +	 * @throws IllegalStateException if no registry is available (which is unusual:, +	 * only the case with a plain {@link ClassPathScanningCandidateComponentProvider}), +	 * definition should the condition match, or {@code null} if the bean factory is, +	 * not available (or not downcastable to {@code ConfigurableListableBeanFactory})., +	@Nullable, +	 * Return the {@link ClassLoader} that should be used to load additional classes, +	 * (only {@code null} if even the system ClassLoader isn't accessible)., +	 * @see org.springframework.util.ClassUtils#forName(String, ClassLoader), +	@Nullable, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConditionEvaluator.java, +	private Condition getCondition(String conditionClassName, @Nullable ClassLoader classloader) {, +		@Nullable, +		@Nullable, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ConfigurableBeanFactory.java, + * Copyright 2002-2018 the original author or authors., +	 * Return this factory's class loader for loading bean classes, +	 * (only {@code null} if even the system ClassLoader isn't accessible)., +	 * @see org.springframework.util.ClassUtils#forName(String, ClassLoader), +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConditionContext.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.lang.Nullable;, +	 * @throws IllegalStateException if no registry is available (which is unusual:, +	 * only the case with a plain {@link ClassPathScanningCandidateComponentProvider}), +	 * definition should the condition match, or {@code null} if the bean factory is, +	 * not available (or not downcastable to {@code ConfigurableListableBeanFactory})., +	@Nullable, +	 * Return the {@link ClassLoader} that should be used to load additional classes, +	 * (only {@code null} if even the system ClassLoader isn't accessible)., +	 * @see org.springframework.util.ClassUtils#forName(String, ClassLoader), +	@Nullable, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConditionEvaluator.java, +	private Condition getCondition(String conditionClassName, @Nullable ClassLoader classloader) {, +		@Nullable, +		@Nullable, +++ b/spring-core/src/main/java/org/springframework/core/io/ResourceLoader.java, + * Copyright 2002-2018 the original author or authors., +	 * (only {@code null} if even the system ClassLoader isn't accessible), +	 * @see org.springframework.util.ClassUtils#forName(String, ClassLoader)]