[+++ b/spring-context/src/main/java/org/springframework/ui/ConcurrentModel.java, +	@Override, +	public Object put(String key, Object value) {, +		if (value != null) {, +			return super.put(key, value);, +		}, +		else {, +			return remove(key);, +		}, +	}, +, +	@Override, +	public void putAll(Map<? extends String, ?> map) {, +		for (Map.Entry<? extends String, ?> entry : map.entrySet()) {, +			put(entry.getKey(), entry.getValue());, +		}, +	}, +, +++ b/spring-context/src/main/java/org/springframework/ui/ConcurrentModel.java, +	@Override, +	public Object put(String key, Object value) {, +		if (value != null) {, +			return super.put(key, value);, +		}, +		else {, +			return remove(key);, +		}, +	}, +, +	@Override, +	public void putAll(Map<? extends String, ?> map) {, +		for (Map.Entry<? extends String, ?> entry : map.entrySet()) {, +			put(entry.getKey(), entry.getValue());, +		}, +	}, +, +++ b/spring-context/src/main/java/org/springframework/validation/support/BindingAwareConcurrentModel.java, + * Copyright 2002-2018 the original author or authors.]