[+++ b/org.springframework.web/src/main/java/org/springframework/http/MediaType.java, +		TreeSet<String> thisAttributes = new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);, +		thisAttributes.addAll(this.parameters.keySet());, +		TreeSet<String> otherAttributes = new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);, +		otherAttributes.addAll(other.parameters.keySet());, +		Iterator<String> thisAttributesIterator = thisAttributes.iterator();, +		Iterator<String> otherAttributesIterator = otherAttributes.iterator();, +		while (thisAttributesIterator.hasNext()) {, +			String thisAttribute = thisAttributesIterator.next();, +			String otherAttribute = otherAttributesIterator.next();, +		return (this.type.equalsIgnoreCase(otherType.type) && this.subtype.equalsIgnoreCase(otherType.subtype) &&, +++ b/org.springframework.web/src/main/java/org/springframework/http/MediaType.java, +		TreeSet<String> thisAttributes = new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);, +		thisAttributes.addAll(this.parameters.keySet());, +		TreeSet<String> otherAttributes = new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);, +		otherAttributes.addAll(other.parameters.keySet());, +		Iterator<String> thisAttributesIterator = thisAttributes.iterator();, +		Iterator<String> otherAttributesIterator = otherAttributes.iterator();, +		while (thisAttributesIterator.hasNext()) {, +			String thisAttribute = thisAttributesIterator.next();, +			String otherAttribute = otherAttributesIterator.next();, +		return (this.type.equalsIgnoreCase(otherType.type) && this.subtype.equalsIgnoreCase(otherType.subtype) &&, +++ b/org.springframework.web/src/test/java/org/springframework/http/MediaTypeTests.java, +, +		m1 = MediaType.parseMediaType("text/html; q=0.7; charset=iso-8859-1");, +		m2 = MediaType.parseMediaType("text/html; Q=0.7; charset=iso-8859-1");, +		assertEquals("Media types not equal", m1, m2);, +		assertEquals("compareTo() not consistent with equals", 0, m1.compareTo(m2));, +		assertEquals("compareTo() not consistent with equals", 0, m2.compareTo(m1));, +, +]