[+++ b/spring-tx/src/test/java/org/springframework/transaction/annotation/AnnotationTransactionAttributeSourceTests.java, + * Copyright 2002-2015 the original author or authors., +, +	public void serializable() throws Exception {, +	public void nullOrEmpty() throws Exception {, +		Method method = Empty.class.getMethod("getAge");, +	public void transactionAttributeDeclaredOnClassMethod() throws Exception {, +		Method classMethod = ITestBean.class.getMethod("getAge");, +	public void transactionAttributeDeclaredOnCglibClassMethod() throws Exception {, +		Method classMethod = ITestBean.class.getMethod("getAge");, +	public void transactionAttributeDeclaredOnInterfaceMethodOnly() throws Exception {, +		Method interfaceMethod = ITestBean2.class.getMethod("getAge");, +	public void transactionAttributeOnTargetClassMethodOverridesAttributeOnInterfaceMethod() throws Exception {, +		Method interfaceMethod = ITestBean3.class.getMethod("getAge");, +		Method interfaceMethod2 = ITestBean3.class.getMethod("getName");, +	public void rollbackRulesAreApplied() throws Exception {, +		Method method = TestBean3.class.getMethod("getAge");, +	public void defaultsToClassTransactionAttribute() throws Exception {, +		Method method = TestBean4.class.getMethod("getAge");, +	public void customClassAttributeDetected() throws Exception {, +		Method method = TestBean5.class.getMethod("getAge");, +	public void customMethodAttributeDetected() throws Exception {, +		Method method = TestBean6.class.getMethod("getAge");, +	public void customClassAttributeWithReadOnlyOverrideDetected() throws Exception {, +		Method method = TestBean7.class.getMethod("getAge");, +	public void customMethodAttributeWithReadOnlyOverrideDetected() throws Exception {, +		Method method = TestBean8.class.getMethod("getAge");, +		Method method = TestInterface9.class.getMethod("getAge");, +		assertNotNull("Failed to retrieve TransactionAttribute for TestBean9.getAge()", actual);, +		Method method = TestInterface10.class.getMethod("getAge");, +		assertNotNull("Failed to retrieve TransactionAttribute for TestBean10.getAge()", actual);, +	public void transactionAttributeDeclaredOnClassMethodWithEjb3() throws Exception {, +		Method getAgeMethod = ITestBean.class.getMethod("getAge");, +		Method getNameMethod = ITestBean.class.getMethod("getName");, +	public void transactionAttributeDeclaredOnClassWithEjb3() throws Exception {, +		Method getAgeMethod = ITestBean.class.getMethod("getAge");, +		Method getNameMethod = ITestBean.class.getMethod("getName");, +	public void transactionAttributeDeclaredOnInterfaceWithEjb3() throws Exception {, +		Method getAgeMethod = ITestEjb.class.getMethod("getAge");, +		Method getNameMethod = ITestEjb.class.getMethod("getName");, +	public void transactionAttributeDeclaredOnClassMethodWithJta() throws Exception {, +		Method getAgeMethod = ITestBean.class.getMethod("getAge");, +		Method getNameMethod = ITestBean.class.getMethod("getName");, +	public void transactionAttributeDeclaredOnClassWithJta() throws Exception {, +		Method getAgeMethod = ITestBean.class.getMethod("getAge");, +		Method getNameMethod = ITestBean.class.getMethod("getName");, +	public void transactionAttributeDeclaredOnInterfaceWithJta() throws Exception {, +		Method getAgeMethod = ITestEjb.class.getMethod("getAge");, +		Method getNameMethod = ITestEjb.class.getMethod("getName");, +	interface ITestBean {, +	interface ITestBean2 {, +	interface ITestBean3 {, +	static class Empty implements ITestBean {, +	static class TestBean1 implements ITestBean, Serializable {, +	static class TestBean2 implements ITestBean2 {, +	static class TestBean3 implements ITestBean3 {, +	static class TestBean4 implements ITestBean3 {, +	@interface Tx {, +	static class TestBean5 {, +	static class TestBean6 {, +	@interface TxWithAttribute {, +	static class TestBean7 {, +	static class TestBean8 {, +	interface TestInterface9 {, +		int getAge();, +	static class TestBean9 implements TestInterface9 {, +	interface TestInterface10 {, +		int getAge();, +	static class TestBean10 implements TestInterface10 {, +	interface Foo<T> {, +	static class MyFoo implements Foo<String> {, +	static class Ejb3AnnotatedBean1 implements ITestBean {, +	static class Ejb3AnnotatedBean2 implements ITestBean {, +	interface ITestEjb {, +	static class Ejb3AnnotatedBean3 implements ITestEjb {, +	static class JtaAnnotatedBean1 implements ITestBean {, +	static class JtaAnnotatedBean2 implements ITestBean {, +	interface ITestJta {, +	static class JtaAnnotatedBean3 implements ITestEjb {]