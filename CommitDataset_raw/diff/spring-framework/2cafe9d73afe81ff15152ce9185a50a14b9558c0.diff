[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java, + * <p>, + * Uses the {@link org.springframework.messaging.simp.user.UserSessionRegistry}, + * provided to the constructor to find the sessionIds associated with a user., +		Set<String> targetSessionIds;, +		Principal principal = headers.getUser();, +			if (principal == null) {, +				logger.error("Ignoring message, no principal info available");, +			targetUser = principal.getName();, +			targetSessionIds = Collections.singleton(headers.getSessionId());, +			Assert.isTrue(endIndex > 0, "Expected destination pattern \"/principal/{userId}/**\"");, +			targetSessionIds = this.userSessionRegistry.getSessionIds(targetUser);, +		return new UserDestinationInfo(targetUser, targetDestination, targetSessionIds);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java, + * <p>, + * Uses the {@link org.springframework.messaging.simp.user.UserSessionRegistry}, + * provided to the constructor to find the sessionIds associated with a user., +		Set<String> targetSessionIds;, +		Principal principal = headers.getUser();, +			if (principal == null) {, +				logger.error("Ignoring message, no principal info available");, +			targetUser = principal.getName();, +			targetSessionIds = Collections.singleton(headers.getSessionId());, +			Assert.isTrue(endIndex > 0, "Expected destination pattern \"/principal/{userId}/**\"");, +			targetSessionIds = this.userSessionRegistry.getSessionIds(targetUser);, +		return new UserDestinationInfo(targetUser, targetDestination, targetSessionIds);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationResolver.java, + * <p>, + * When a user attempts to subscribe to "/user/queue/position-updates", the, + * "/user" prefix is removed and a unique suffix added, resulting in something, + * like "/queue/position-updates-useri9oqdfzo" where the suffix is based on the, + * user's session and ensures it does not collide with any other users attempting, + * to subscribe to "/user/queue/position-updates"., + * <p>, + * When a message is sent to a user with a destination such as, + * "/user/{username}/queue/position-updates", the "/user/{username}" prefix is, + * removed and the suffix added, resulting in something like, + * "/queue/position-updates-useri9oqdfzo"., +	 * Resolve the destination of the message to a set of actual target destinations, +	 * to use. If the message is SUBSCRIBE/UNSUBSCRIBE, the returned set will contain, +	 * only target destination. If the message represents data being sent to a user,, +	 * the returned set may contain multiple target destinations, one for each active, +	 * session of the target user., +	 *, +	 * @return the resolved unique user destination(s) or an empty Set]