[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultPathSegmentContainer.java, +/*, + * Copyright 2002-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.http.server.reactive;, +, +import java.nio.charset.Charset;, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.List;, +, +import org.springframework.util.Assert;, +import org.springframework.util.CollectionUtils;, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +import org.springframework.util.StringUtils;, +, +/**, + * Default implementations of {@link PathSegmentContainer} and {@link PathSegment}., + *, + * @author Rossen Stoyanchev, + * @since 5.0, + */, +class DefaultPathSegmentContainer implements PathSegmentContainer {, +, +	private static final MultiValueMap<String, String> EMPTY_MAP = new LinkedMultiValueMap<>(0);, +, +	private static final PathSegment EMPTY_PATH_SEGMENT = new DefaultPathSegment("", "", "", EMPTY_MAP);, +, +	static final PathSegmentContainer EMPTY_PATH =, +			new DefaultPathSegmentContainer("", Collections.emptyList());, +, +	private static final PathSegmentContainer ROOT_PATH =, +			new DefaultPathSegmentContainer("/", Collections.singletonList(EMPTY_PATH_SEGMENT));, +, +, +	private final String path;, +, +	private final boolean empty;, +, +	private final boolean absolute;, +, +	private final List<PathSegment> pathSegments;, +, +	private final boolean trailingSlash;, +, +, +	DefaultPathSegmentContainer(String path, List<PathSegment> segments) {, +		this.path = path;, +		this.absolute = path.startsWith("/");, +		this.pathSegments = Collections.unmodifiableList(segments);, +		this.trailingSlash = path.endsWith("/") && path.length() > 1;, +		this.empty = !this.absolute && !this.trailingSlash && segments.stream().allMatch(PathSegment::isEmpty);, +	}, +, +, +	@Override, +	public String value() {, +		return this.path;, +	}, +, +	@Override, +	public boolean isEmpty() {, +		return this.empty;, +	}, +, +	@Override, +	public boolean isAbsolute() {, +		return this.absolute;, +	}, +, +	@Override, +	public List<PathSegment> pathSegments() {, +		return this.pathSegments;, +	}, +, +	@Override, +	public boolean hasTrailingSlash() {, +		return this.trailingSlash;, +	}, +, +, +	@Override, +	public boolean equals(Object other) {, +		if (this == other) {, +			return true;, +		}, +		if (other == null || getClass() != other.getClass()) {]