[+++ b/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2Tokenizer.java, +		catch (JsonProcessingException ex) {, +			return Flux.error(new DecodingException(, +					"JSON decoding error: " + ex.getOriginalMessage(), ex));, +		}, +++ b/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2Tokenizer.java, +		catch (JsonProcessingException ex) {, +			return Flux.error(new DecodingException(, +					"JSON decoding error: " + ex.getOriginalMessage(), ex));, +		}, +++ b/spring-web/src/test/java/org/springframework/http/codec/json/Jackson2TokenizerTests.java, +import org.springframework.core.codec.DecodingException;, +import static java.util.Arrays.*;, +import static java.util.Collections.*;, +	@Test(expected = DecodingException.class) // SPR-16521, +	public void jsonEOFExceptionIsWrappedAsDecodingError() {, +		Flux<DataBuffer> source = Flux.just(stringBuffer("{\"status\": \"noClosingQuote}"));, +		Flux<TokenBuffer> tokens = Jackson2Tokenizer.tokenize(source, this.jsonFactory, false);, +		tokens.blockLast();, +	}, +, +]