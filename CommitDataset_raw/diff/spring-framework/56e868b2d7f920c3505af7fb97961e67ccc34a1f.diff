[+++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverAnnotationTests.java, + * Copyright 2002-2008 the original author or authors., +import org.junit.Test;, + * @author Chris Beams, +public final class AspectJAdviceParameterNameDiscoverAnnotationTests, +		extends AspectJAdviceParameterNameDiscovererTests {, +	@Test, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverAnnotationTests.java, + * Copyright 2002-2008 the original author or authors., +import org.junit.Test;, + * @author Chris Beams, +public final class AspectJAdviceParameterNameDiscoverAnnotationTests, +		extends AspectJAdviceParameterNameDiscovererTests {, +	@Test, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscovererTests.java, + *, + * <p>See also {@link TigerAspectJAdviceParameterNameDiscovererTests} in, + * @author Chris Beams, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverAnnotationTests.java, + * Copyright 2002-2008 the original author or authors., +import org.junit.Test;, + * @author Chris Beams, +public final class AspectJAdviceParameterNameDiscoverAnnotationTests, +		extends AspectJAdviceParameterNameDiscovererTests {, +	@Test, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscovererTests.java, + *, + * <p>See also {@link TigerAspectJAdviceParameterNameDiscovererTests} in, + * @author Chris Beams, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java, + * Copyright 2002-2008 the original author or authors., +import static org.junit.Assert.*;, +, +import org.aopalliance.intercept.MethodInterceptor;, +import org.aopalliance.intercept.MethodInvocation;, +import org.junit.Before;, +import org.junit.Test;, + * @author Chris Beams, +public final class AspectJExpressionPointcutTests {, +	, +	@Before, +	public void setUp() throws NoSuchMethodException {, +		getAge = TestBean.class.getMethod("getAge", (Class<?>[])null);, +		setAge = TestBean.class.getMethod("setAge", new Class[]{int.class});, +		setSomeNumber = TestBean.class.getMethod("setSomeNumber", new Class[]{Number.class});, +		isPostProcessed = TestBean.class.getMethod("isPostProcessed", (Class[]) null);, +	}, +	, +	@Test, +	@Test, +	@Test, +	@Test, +		assertTrue(iOtherPc.matches(OtherIOther.class.getMethod("absquatulate", (Class<?>[])null),, +		assertFalse(testBeanPc.matches(OtherIOther.class.getMethod("absquatulate", (Class<?>[])null),, +	@Test, +	@Test, +				DefaultListableBeanFactory.class.getMethod("getBeanDefinitionCount", (Class<?>[])null),, +		assertFalse(withinBeansPc.matches(OtherIOther.class.getMethod("absquatulate", (Class<?>[])null),, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +	@Test, +, +, +class CallCountingInterceptor implements MethodInterceptor {, +, +	private int count;, +, +	public Object invoke(MethodInvocation methodInvocation) throws Throwable {, +		count++;, +		return methodInvocation.proceed();, +	}, +, +	public int getCount() {, +		return count;, +	}, +, +	public void reset() {, +		this.count = 0;, +	}, +, +}, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverAnnotationTests.java, + * Copyright 2002-2008 the original author or authors., +import org.junit.Test;, + * @author Chris Beams, +public final class AspectJAdviceParameterNameDiscoverAnnotationTests, +		extends AspectJAdviceParameterNameDiscovererTests {, +	@Test, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscovererTests.java, + *, + * <p>See also {@link TigerAspectJAdviceParameterNameDiscovererTests} in, + * @author Chris Beams, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java]