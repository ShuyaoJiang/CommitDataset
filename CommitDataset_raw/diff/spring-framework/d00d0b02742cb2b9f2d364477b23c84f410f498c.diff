[+++ b/spring-web/src/test/java/org/springframework/http/client/AbstractJettyServerTestCase.java, +			for (Enumeration<String> e1 = request.getHeaderNames(); e1.hasMoreElements();) {, +				String headerName = e1.nextElement();, +				for (Enumeration<String> e2 = request.getHeaders(headerName); e2.hasMoreElements();) {, +					String headerValue = e2.nextElement();, +++ b/spring-web/src/test/java/org/springframework/http/client/AbstractJettyServerTestCase.java, +			for (Enumeration<String> e1 = request.getHeaderNames(); e1.hasMoreElements();) {, +				String headerName = e1.nextElement();, +				for (Enumeration<String> e2 = request.getHeaders(headerName); e2.hasMoreElements();) {, +					String headerValue = e2.nextElement();, +++ b/spring-web/src/test/java/org/springframework/http/converter/FormHttpMessageConverterTests.java, + * Copyright 2002-2014 the original author or authors., +		List<FileItem> items = fileUpload.parseRequest(new MockHttpOutputMessageRequestContext(outputMessage));, +		FileItem item = items.get(0);, +		item = items.get(1);, +		item = items.get(2);, +		item = items.get(3);, +		item = items.get(4);, +		@Deprecated, +++ b/spring-web/src/test/java/org/springframework/http/client/AbstractJettyServerTestCase.java, +			for (Enumeration<String> e1 = request.getHeaderNames(); e1.hasMoreElements();) {, +				String headerName = e1.nextElement();, +				for (Enumeration<String> e2 = request.getHeaders(headerName); e2.hasMoreElements();) {, +					String headerValue = e2.nextElement();, +++ b/spring-web/src/test/java/org/springframework/http/converter/FormHttpMessageConverterTests.java, + * Copyright 2002-2014 the original author or authors., +		List<FileItem> items = fileUpload.parseRequest(new MockHttpOutputMessageRequestContext(outputMessage));, +		FileItem item = items.get(0);, +		item = items.get(1);, +		item = items.get(2);, +		item = items.get(3);, +		item = items.get(4);, +		@Deprecated, +++ b/spring-web/src/test/java/org/springframework/http/converter/HttpMessageConverterTests.java, + * Copyright 2002-2014 the original author or authors., +		protected T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage), +++ b/spring-web/src/test/java/org/springframework/http/client/AbstractJettyServerTestCase.java, +			for (Enumeration<String> e1 = request.getHeaderNames(); e1.hasMoreElements();) {, +				String headerName = e1.nextElement();, +				for (Enumeration<String> e2 = request.getHeaders(headerName); e2.hasMoreElements();) {, +					String headerValue = e2.nextElement();, +++ b/spring-web/src/test/java/org/springframework/http/converter/FormHttpMessageConverterTests.java, + * Copyright 2002-2014 the original author or authors., +		List<FileItem> items = fileUpload.parseRequest(new MockHttpOutputMessageRequestContext(outputMessage));, +		FileItem item = items.get(0);, +		item = items.get(1);, +		item = items.get(2);, +		item = items.get(3);, +		item = items.get(4);, +		@Deprecated, +++ b/spring-web/src/test/java/org/springframework/http/converter/HttpMessageConverterTests.java, + * Copyright 2002-2014 the original author or authors., +		protected T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage), +++ b/spring-web/src/test/java/org/springframework/http/converter/feed/AtomFeedHttpMessageConverterTests.java, + * Copyright 2002-2014 the original author or authors., +		List<?> entries = result.getEntries();, +		List<Entry> entries = new ArrayList<Entry>(2);, +++ b/spring-web/src/test/java/org/springframework/http/client/AbstractJettyServerTestCase.java, +			for (Enumeration<String> e1 = request.getHeaderNames(); e1.hasMoreElements();) {, +				String headerName = e1.nextElement();, +				for (Enumeration<String> e2 = request.getHeaders(headerName); e2.hasMoreElements();) {, +					String headerValue = e2.nextElement();, +++ b/spring-web/src/test/java/org/springframework/http/converter/FormHttpMessageConverterTests.java, + * Copyright 2002-2014 the original author or authors., +		List<FileItem> items = fileUpload.parseRequest(new MockHttpOutputMessageRequestContext(outputMessage));, +		FileItem item = items.get(0);, +		item = items.get(1);, +		item = items.get(2);, +		item = items.get(3);, +		item = items.get(4);, +		@Deprecated, +++ b/spring-web/src/test/java/org/springframework/http/converter/HttpMessageConverterTests.java, + * Copyright 2002-2014 the original author or authors., +		protected T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage), +++ b/spring-web/src/test/java/org/springframework/http/converter/feed/AtomFeedHttpMessageConverterTests.java, + * Copyright 2002-2014 the original author or authors., +		List<?> entries = result.getEntries();, +		List<Entry> entries = new ArrayList<Entry>(2);, +++ b/spring-web/src/test/java/org/springframework/http/converter/feed/RssChannelHttpMessageConverterTests.java, + * Copyright 2002-2014 the original author or authors., +		List<?> items = result.getItems();, +		List<Item> items = new ArrayList<Item>(2);, +++ b/spring-web/src/test/java/org/springframework/http/client/AbstractJettyServerTestCase.java, +			for (Enumeration<String> e1 = request.getHeaderNames(); e1.hasMoreElements();) {, +				String headerName = e1.nextElement();, +				for (Enumeration<String> e2 = request.getHeaders(headerName); e2.hasMoreElements();) {, +					String headerValue = e2.nextElement();, +++ b/spring-web/src/test/java/org/springframework/http/converter/FormHttpMessageConverterTests.java, + * Copyright 2002-2014 the original author or authors., +		List<FileItem> items = fileUpload.parseRequest(new MockHttpOutputMessageRequestContext(outputMessage));, +		FileItem item = items.get(0);, +		item = items.get(1);, +		item = items.get(2);, +		item = items.get(3);, +		item = items.get(4);, +		@Deprecated, +++ b/spring-web/src/test/java/org/springframework/http/converter/HttpMessageConverterTests.java, + * Copyright 2002-2014 the original author or authors., +		protected T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage), +++ b/spring-web/src/test/java/org/springframework/http/converter/feed/AtomFeedHttpMessageConverterTests.java]