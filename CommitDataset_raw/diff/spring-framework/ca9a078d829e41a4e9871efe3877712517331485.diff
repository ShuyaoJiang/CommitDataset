[+++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/DestinationPatternsMessageCondition.java, + * Copyright 2002-2015 the original author or authors., +		for (String pattern : this.patterns) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/DestinationPatternsMessageCondition.java, + * Copyright 2002-2015 the original author or authors., +		for (String pattern : this.patterns) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/PayloadArgumentResolver.java, +				bindingResult.addError(new ObjectError(paramName, "Payload value must not be empty"));, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/DestinationPatternsMessageCondition.java, + * Copyright 2002-2015 the original author or authors., +		for (String pattern : this.patterns) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/PayloadArgumentResolver.java, +				bindingResult.addError(new ObjectError(paramName, "Payload value must not be empty"));, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +				matches.add(new Match(match, this.handlerMethods.get(mapping)));, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/DestinationPatternsMessageCondition.java, + * Copyright 2002-2015 the original author or authors., +		for (String pattern : this.patterns) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/PayloadArgumentResolver.java, +				bindingResult.addError(new ObjectError(paramName, "Payload value must not be empty"));, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +				matches.add(new Match(match, this.handlerMethods.get(mapping)));, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageTypeMessageCondition.java, + * Copyright 2002-2015 the original author or authors., +		return Arrays.asList(this.messageType);, +]