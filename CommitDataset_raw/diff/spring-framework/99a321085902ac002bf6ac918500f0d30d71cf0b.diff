[+++ b/build.gradle, +		mavenLocal(), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +++ b/build.gradle, +		mavenLocal(), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +++ b/spring-core/src/test/java/org/springframework/core/codec/ByteArrayDecoderTests.java, +import reactor.test.subscriber.ScriptedSubscriber;, +		ScriptedSubscriber, +				.<byte[]>create(), +				.consumeNextWith(bytes -> assertArrayEquals("foo".getBytes(), bytes)), +				.consumeNextWith(bytes -> assertArrayEquals("bar".getBytes(), bytes)), +				.expectComplete(), +				.verify(output);, +++ b/build.gradle, +		mavenLocal(), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +++ b/spring-core/src/test/java/org/springframework/core/codec/ByteArrayDecoderTests.java, +import reactor.test.subscriber.ScriptedSubscriber;, +		ScriptedSubscriber, +				.<byte[]>create(), +				.consumeNextWith(bytes -> assertArrayEquals("foo".getBytes(), bytes)), +				.consumeNextWith(bytes -> assertArrayEquals("bar".getBytes(), bytes)), +				.expectComplete(), +				.verify(output);, +++ b/spring-core/src/test/java/org/springframework/core/codec/ByteArrayEncoderTests.java, +import reactor.test.subscriber.ScriptedSubscriber;, +		ScriptedSubscriber, +				.<DataBuffer>create(), +				.consumeNextWith(b -> {, +				}), +				.consumeNextWith(b -> {, +				}), +				.expectComplete(), +				.verify(output);, +++ b/build.gradle, +		mavenLocal(), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +++ b/spring-core/src/test/java/org/springframework/core/codec/ByteArrayDecoderTests.java, +import reactor.test.subscriber.ScriptedSubscriber;, +		ScriptedSubscriber, +				.<byte[]>create(), +				.consumeNextWith(bytes -> assertArrayEquals("foo".getBytes(), bytes)), +				.consumeNextWith(bytes -> assertArrayEquals("bar".getBytes(), bytes)), +				.expectComplete(), +				.verify(output);, +++ b/spring-core/src/test/java/org/springframework/core/codec/ByteArrayEncoderTests.java, +import reactor.test.subscriber.ScriptedSubscriber;, +		ScriptedSubscriber, +				.<DataBuffer>create(), +				.consumeNextWith(b -> {, +				}), +				.consumeNextWith(b -> {, +				}), +				.expectComplete(), +				.verify(output);, +++ b/spring-core/src/test/java/org/springframework/core/codec/ByteBufferDecoderTests.java, +import reactor.test.subscriber.ScriptedSubscriber;, +, +		ScriptedSubscriber.<ByteBuffer>create(), +				.expectNext(ByteBuffer.wrap("foo".getBytes()), ByteBuffer.wrap("bar".getBytes())), +				.expectComplete(), +				.verify(output);, +++ b/build.gradle, +		mavenLocal(), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +		testCompile("io.projectreactor.addons:reactor-test:1.0.0.BUILD-SNAPSHOT"), +++ b/spring-core/src/test/java/org/springframework/core/codec/ByteArrayDecoderTests.java, +import reactor.test.subscriber.ScriptedSubscriber;, +		ScriptedSubscriber, +				.<byte[]>create(), +				.consumeNextWith(bytes -> assertArrayEquals("foo".getBytes(), bytes)), +				.consumeNextWith(bytes -> assertArrayEquals("bar".getBytes(), bytes)), +				.expectComplete(), +				.verify(output);, +++ b/spring-core/src/test/java/org/springframework/core/codec/ByteArrayEncoderTests.java, +import reactor.test.subscriber.ScriptedSubscriber;, +		ScriptedSubscriber, +				.<DataBuffer>create(), +				.consumeNextWith(b -> {, +				}), +				.consumeNextWith(b -> {, +				}), +				.expectComplete(), +				.verify(output);, +++ b/spring-core/src/test/java/org/springframework/core/codec/ByteBufferDecoderTests.java, +import reactor.test.subscriber.ScriptedSubscriber;, +, +		ScriptedSubscriber.<ByteBuffer>create(), +				.expectNext(ByteBuffer.wrap("foo".getBytes()), ByteBuffer.wrap("bar".getBytes())), +				.expectComplete()]