[+++ b/spring-context/src/main/java/org/springframework/context/ApplicationContext.java, + * Copyright 2002-2014 the original author or authors., +	 * <p>This is not typically used by application code, except for the purpose of, +	 * initializing bean instances that live outside of the application context,, +	 * {@link AutowireCapableBeanFactory} interface too. The present method mainly, +	 * serves as a convenient, specific facility on the ApplicationContext interface., +	 * <p><b>NOTE: As of 4.2, this method will consistently throw IllegalStateException, +	 * after the application context has been closed.</b> In current Spring Framework, +	 * versions, only refreshable application contexts behave that way; as of 4.2,, +	 * all application context implementations will be required to comply., +	 * @throws IllegalStateException if the context does not support the, +	 * {@link AutowireCapableBeanFactory} interface, or does not hold an, +	 * autowire-capable bean factory yet (e.g. if {@code refresh()} has, +	 * never been called), or if the context has been closed already, +++ b/spring-context/src/main/java/org/springframework/context/ApplicationContext.java, + * Copyright 2002-2014 the original author or authors., +	 * <p>This is not typically used by application code, except for the purpose of, +	 * initializing bean instances that live outside of the application context,, +	 * {@link AutowireCapableBeanFactory} interface too. The present method mainly, +	 * serves as a convenient, specific facility on the ApplicationContext interface., +	 * <p><b>NOTE: As of 4.2, this method will consistently throw IllegalStateException, +	 * after the application context has been closed.</b> In current Spring Framework, +	 * versions, only refreshable application contexts behave that way; as of 4.2,, +	 * all application context implementations will be required to comply., +	 * @throws IllegalStateException if the context does not support the, +	 * {@link AutowireCapableBeanFactory} interface, or does not hold an, +	 * autowire-capable bean factory yet (e.g. if {@code refresh()} has, +	 * never been called), or if the context has been closed already, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConditionEvaluator.java, +		AnnotationAwareOrderComparator.sort(conditions);, +++ b/spring-context/src/main/java/org/springframework/context/ApplicationContext.java, + * Copyright 2002-2014 the original author or authors., +	 * <p>This is not typically used by application code, except for the purpose of, +	 * initializing bean instances that live outside of the application context,, +	 * {@link AutowireCapableBeanFactory} interface too. The present method mainly, +	 * serves as a convenient, specific facility on the ApplicationContext interface., +	 * <p><b>NOTE: As of 4.2, this method will consistently throw IllegalStateException, +	 * after the application context has been closed.</b> In current Spring Framework, +	 * versions, only refreshable application contexts behave that way; as of 4.2,, +	 * all application context implementations will be required to comply., +	 * @throws IllegalStateException if the context does not support the, +	 * {@link AutowireCapableBeanFactory} interface, or does not hold an, +	 * autowire-capable bean factory yet (e.g. if {@code refresh()} has, +	 * never been called), or if the context has been closed already, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConditionEvaluator.java, +		AnnotationAwareOrderComparator.sort(conditions);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java, +, +++ b/spring-context/src/main/java/org/springframework/context/ApplicationContext.java, + * Copyright 2002-2014 the original author or authors., +	 * <p>This is not typically used by application code, except for the purpose of, +	 * initializing bean instances that live outside of the application context,, +	 * {@link AutowireCapableBeanFactory} interface too. The present method mainly, +	 * serves as a convenient, specific facility on the ApplicationContext interface., +	 * <p><b>NOTE: As of 4.2, this method will consistently throw IllegalStateException, +	 * after the application context has been closed.</b> In current Spring Framework, +	 * versions, only refreshable application contexts behave that way; as of 4.2,, +	 * all application context implementations will be required to comply., +	 * @throws IllegalStateException if the context does not support the, +	 * {@link AutowireCapableBeanFactory} interface, or does not hold an, +	 * autowire-capable bean factory yet (e.g. if {@code refresh()} has, +	 * never been called), or if the context has been closed already, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConditionEvaluator.java, +		AnnotationAwareOrderComparator.sort(conditions);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java, +, +++ b/src/asciidoc/index.adoc, +threads will get terminated. A time value of zero will cause excess threads to terminate, +immediately after executing a task without remaining follow-up work in the task queue., +, +]