[+++ b/spring-framework-reference/src/testing.xml, +        <para>The following annotations are supported with standard semantics, +        for all configurations of the Spring TestContext Framework. Note that, +        these annotations are not specific to tests and can be used anywhere, +        in the Spring Framework.</para>, +      listeners or custom loaders, feel free to go directly to the, +      configuration (<link linkend="testcontext-ctx-management">context, +      management</link>, <link linkend="testcontext-fixture-di">dependency, +      injection</link>, <link linkend="testcontext-tx">transaction, +      management</link>), <link linkend="testcontext-support-classes">support, +      classes</link>, and <link, +        <interfacename>TestExecutionListener</interfacename>,, +        <interfacename>ContextLoader</interfacename>, and, +        <interfacename>SmartContextLoader</interfacename> interfaces. A, +        basis (e.g., for the execution of a single test method in JUnit). The, +        <classname>TestContextManager</classname> in turn manages a, +        injection, managing transactions, and so on. A, +        <interfacename>ContextLoader</interfacename> (or, +        <interfacename>SmartContextLoader</interfacename>) is responsible for, +        loading an <interfacename>ApplicationContext</interfacename> for a, +        given test class. Consult the Javadoc and the Spring test suite for, +        further information and examples of various implementations.</para>, +            support for the test instance for which it is responsible. The, +            <classname>TestContext</classname> also delegates to a, +            <interfacename>ContextLoader</interfacename> (or, +            <interfacename>SmartContextLoader</interfacename>) to load an, +            <interfacename>ApplicationContext</interfacename> if, +            requested.</para>, +, +          <listitem>, +            <para><interfacename>ContextLoader</interfacename>: Strategy, +            interface for loading an, +            <interfacename>ApplicationContext</interfacename> for an, +            integration test managed by the Spring TestContext, +            Framework.</para>, +, +            <para>As of Spring 3.1, implement, +            <interfacename>SmartContextLoader</interfacename> instead of this, +            interface in order to provide support for configuration classes, +            and active bean definition profiles.</para>, +          </listitem>, +, +          <listitem>, +            <para><interfacename>SmartContextLoader</interfacename>: Extension, +            of the <interfacename>ContextLoader</interfacename> interface, +            introduced in Spring 3.1.</para>, +, +            <para>The <interfacename>SmartContextLoader</interfacename> SPI, +            supersedes the <interfacename>ContextLoader</interfacename> SPI, +            that was introduced in Spring 2.5. Specifically, a, +            <interfacename>SmartContextLoader</interfacename> can choose to, +            process either resource <varname>locations</varname> or, +            configuration <varname>classes</varname>. Furthermore, a, +            <interfacename>SmartContextLoader</interfacename> can set active, +            bean definition profiles in the context that it loads.</para>, +, +            <para>Spring provides the following out-of-the-box, +            implementations:</para>, +, +            <itemizedlist>, +              <listitem>, +                <para><classname>DelegatingSmartContextLoader</classname>: the, +                default loader which delegates internally to an, +                <classname>AnnotationConfigContextLoader</classname> or a, +                <classname>GenericXmlContextLoader</classname> depending on, +                the configuration declared for the test class.</para>, +              </listitem>, +, +              <listitem>, +                <para><classname>AnnotationConfigContextLoader</classname>:, +                loads an application context from, +                <interfacename>@Configuration</interfacename> classes.</para>, +              </listitem>, +, +              <listitem>, +                <para><classname>GenericXmlContextLoader</classname>: loads, +                and application context from XML resource locations.</para>, +              </listitem>, +, +              <listitem>, +                <para><classname>GenericPropertiesContextLoader</classname>:, +                loads an application context from Java Properties, +                files.</para>, +              </listitem>, +            </itemizedlist>, +          </listitem>]