[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java, +	/**, +	 * For internal use., +	 *, +	 * <p>The original destination used by a client when subscribing. Such a, +	 * destination may have been modified (e.g. user destinations) on the server, +	 * side. This header provides a hint so messages sent to clients may have, +	 * a destination matching to their original subscription., +	 */, +	public static final String ORIGINAL_DESTINATION = "simpOrigDestination";, +, +	/**, +	 * @return the message type, +	 */, +	/**, +	 * @return the message destination, +	 */, +	/**, +	 * @return the subscription id (if any) of the message, +	 */, +	/**, +	 * @return the id of the current session, +	 */, +	/**, +	 * @return attributes associated with the current session., +	 */, +	/**, +	 * @return the user associated with the current session., +	 */, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java, +	/**, +	 * For internal use., +	 *, +	 * <p>The original destination used by a client when subscribing. Such a, +	 * destination may have been modified (e.g. user destinations) on the server, +	 * side. This header provides a hint so messages sent to clients may have, +	 * a destination matching to their original subscription., +	 */, +	public static final String ORIGINAL_DESTINATION = "simpOrigDestination";, +, +	/**, +	 * @return the message type, +	 */, +	/**, +	 * @return the message destination, +	 */, +	/**, +	 * @return the subscription id (if any) of the message, +	 */, +	/**, +	 * @return the id of the current session, +	 */, +	/**, +	 * @return attributes associated with the current session., +	 */, +	/**, +	 * @return the user associated with the current session., +	 */, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java, +			headerAccessor.setHeader(SimpMessageHeaderAccessor.ORIGINAL_DESTINATION, result.getSubscribeDestination());, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java, +	/**, +	 * For internal use., +	 *, +	 * <p>The original destination used by a client when subscribing. Such a, +	 * destination may have been modified (e.g. user destinations) on the server, +	 * side. This header provides a hint so messages sent to clients may have, +	 * a destination matching to their original subscription., +	 */, +	public static final String ORIGINAL_DESTINATION = "simpOrigDestination";, +, +	/**, +	 * @return the message type, +	 */, +	/**, +	 * @return the message destination, +	 */, +	/**, +	 * @return the subscription id (if any) of the message, +	 */, +	/**, +	 * @return the id of the current session, +	 */, +	/**, +	 * @return attributes associated with the current session., +	 */, +	/**, +	 * @return the user associated with the current session., +	 */, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java, +			headerAccessor.setHeader(SimpMessageHeaderAccessor.ORIGINAL_DESTINATION, result.getSubscribeDestination());, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/user/UserDestinationMessageHandlerTests.java, +				captor.getValue().getHeaders().get(SimpMessageHeaderAccessor.ORIGINAL_DESTINATION));, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java, +	/**, +	 * For internal use., +	 *, +	 * <p>The original destination used by a client when subscribing. Such a, +	 * destination may have been modified (e.g. user destinations) on the server, +	 * side. This header provides a hint so messages sent to clients may have]