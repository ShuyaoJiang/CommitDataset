[+++ b/build.gradle, +		optional 'org.webjars:webjars-locator:0.22', +		testCompile("org.webjars:underscorejs:1.8.2"), +++ b/build.gradle, +		optional 'org.webjars:webjars-locator:0.22', +		testCompile("org.webjars:underscorejs:1.8.2"), +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, +import org.springframework.util.ClassUtils;, +import org.springframework.web.servlet.resource.WebJarsResourceResolver;, +	private static final boolean isWebJarsAssetLocatorPresent = ClassUtils.isPresent(, +			"org.webjars.WebJarAssetLocator", ResourcesBeanDefinitionParser.class.getClassLoader());, +, +			if(isWebJarsAssetLocatorPresent) {, +				RootBeanDefinition webJarsResolverDef = new RootBeanDefinition(WebJarsResourceResolver.class);, +				webJarsResolverDef.setSource(source);, +				webJarsResolverDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +				resourceResolvers.add(webJarsResolverDef);, +			}, +++ b/build.gradle, +		optional 'org.webjars:webjars-locator:0.22', +		testCompile("org.webjars:underscorejs:1.8.2"), +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, +import org.springframework.util.ClassUtils;, +import org.springframework.web.servlet.resource.WebJarsResourceResolver;, +	private static final boolean isWebJarsAssetLocatorPresent = ClassUtils.isPresent(, +			"org.webjars.WebJarAssetLocator", ResourcesBeanDefinitionParser.class.getClassLoader());, +, +			if(isWebJarsAssetLocatorPresent) {, +				RootBeanDefinition webJarsResolverDef = new RootBeanDefinition(WebJarsResourceResolver.class);, +				webJarsResolverDef.setSource(source);, +				webJarsResolverDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +				resourceResolvers.add(webJarsResolverDef);, +			}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceChainRegistration.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.util.ClassUtils;, +import org.springframework.web.servlet.resource.WebJarsResourceResolver;, +	private static final boolean isWebJarsAssetLocatorPresent = ClassUtils.isPresent(, +			"org.webjars.WebJarAssetLocator", ResourceChainRegistration.class.getClassLoader());, +, +			if(isWebJarsAssetLocatorPresent) {, +				result.add(new WebJarsResourceResolver());, +			}, +++ b/build.gradle, +		optional 'org.webjars:webjars-locator:0.22', +		testCompile("org.webjars:underscorejs:1.8.2"), +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ResourcesBeanDefinitionParser.java, +import org.springframework.util.ClassUtils;, +import org.springframework.web.servlet.resource.WebJarsResourceResolver;, +	private static final boolean isWebJarsAssetLocatorPresent = ClassUtils.isPresent(, +			"org.webjars.WebJarAssetLocator", ResourcesBeanDefinitionParser.class.getClassLoader());, +, +			if(isWebJarsAssetLocatorPresent) {, +				RootBeanDefinition webJarsResolverDef = new RootBeanDefinition(WebJarsResourceResolver.class);, +				webJarsResolverDef.setSource(source);, +				webJarsResolverDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +				resourceResolvers.add(webJarsResolverDef);, +			}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceChainRegistration.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.util.ClassUtils;, +import org.springframework.web.servlet.resource.WebJarsResourceResolver;, +	private static final boolean isWebJarsAssetLocatorPresent = ClassUtils.isPresent(, +			"org.webjars.WebJarAssetLocator", ResourceChainRegistration.class.getClassLoader());, +, +			if(isWebJarsAssetLocatorPresent) {, +				result.add(new WebJarsResourceResolver());, +			}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/WebJarsResourceResolver.java, +/*, + * Copyright 2002-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.servlet.resource;, +, +import java.util.List;, +, +import javax.servlet.http.HttpServletRequest;, +, +import org.webjars.MultipleMatchesException;, +import org.webjars.WebJarAssetLocator;, +, +import org.springframework.core.io.Resource;, +, +/**, + * A {@code ResourceResolver} that delegates to the chain to locate a resource, + * and then attempts to find a matching versioned resource contained in a WebJar JAR file., + *]