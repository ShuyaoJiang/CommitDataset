[+++ b/spring-context/src/main/java/org/springframework/context/annotation/Bean.java, + * Copyright 2002-2018 the original author or authors., +	 * Is this bean a candidate for getting autowired into some other bean?, +	 * <p>Default is {@code true}; set this to {@code false} for internal delegates, +	 * that are not meant to get in the way of beans of the same type in other places., +	 * @since 5.1, +	 */, +	boolean autowireCandidate() default true;, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/annotation/Bean.java, + * Copyright 2002-2018 the original author or authors., +	 * Is this bean a candidate for getting autowired into some other bean?, +	 * <p>Default is {@code true}; set this to {@code false} for internal delegates, +	 * that are not meant to get in the way of beans of the same type in other places., +	 * @since 5.1, +	 */, +	boolean autowireCandidate() default true;, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +		boolean autowireCandidate = bean.getBoolean("autowireCandidate");, +		if (!autowireCandidate) {, +			beanDef.setAutowireCandidate(false);, +		}, +, +++ b/spring-context/src/main/java/org/springframework/context/annotation/Bean.java, + * Copyright 2002-2018 the original author or authors., +	 * Is this bean a candidate for getting autowired into some other bean?, +	 * <p>Default is {@code true}; set this to {@code false} for internal delegates, +	 * that are not meant to get in the way of beans of the same type in other places., +	 * @since 5.1, +	 */, +	boolean autowireCandidate() default true;, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +		boolean autowireCandidate = bean.getBoolean("autowireCandidate");, +		if (!autowireCandidate) {, +			beanDef.setAutowireCandidate(false);, +		}, +, +++ b/spring-context/src/test/java/org/springframework/context/annotation/configuration/BeanAnnotationAttributePropagationTests.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.beans.factory.annotation.Autowire;, + * @author Juergen Hoeller, +	public void autowireMetadataIsPropagated() {, +		@Configuration class Config {, +			@Bean(autowire=Autowire.BY_TYPE) Object foo() { return null; }, +		}, +, +		assertEquals("autowire mode was not propagated",, +				AbstractBeanDefinition.AUTOWIRE_BY_TYPE, beanDef(Config.class).getAutowireMode());, +	}, +, +	@Test, +	public void autowireCandidateMetadataIsPropagated() {, +		@Configuration class Config {, +			@Bean(autowireCandidate=false) Object foo() { return null; }, +		}, +, +		assertFalse("autowire candidate flag was not propagated",, +				beanDef(Config.class).isAutowireCandidate());, +	}, +, +	@Test]