[+++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, + * @author Brian Clozel, +				int portSeparatorIdx = hostToUse.lastIndexOf(":");, +				if (portSeparatorIdx > hostToUse.lastIndexOf("]")) {, +					host(hostToUse.substring(0, portSeparatorIdx));, +					port(Integer.parseInt(hostToUse.substring(portSeparatorIdx + 1)));, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, + * @author Brian Clozel, +				int portSeparatorIdx = hostToUse.lastIndexOf(":");, +				if (portSeparatorIdx > hostToUse.lastIndexOf("]")) {, +					host(hostToUse.substring(0, portSeparatorIdx));, +					port(Integer.parseInt(hostToUse.substring(portSeparatorIdx + 1)));, +++ b/spring-web/src/test/java/org/springframework/web/util/UriComponentsBuilderTests.java, +	@Test // SPR-9317, +	@Test // SPR-9832, +	@Test // SPR-10779, +, +	@Test(expected = IllegalArgumentException.class) // SPR-10539, +	@Test // SPR-10539, +	@Test // SPR-11970, +	@Test // SPR-12771, +	@Test //SPR-14761, +	public void fromHttpRequestWithForwardedIPv4Host() {, +		MockHttpServletRequest request = new MockHttpServletRequest();, +		request.setScheme("http");, +		request.setServerName("localhost");, +		request.setServerPort(-1);, +		request.setRequestURI("/mvc-showcase");, +		request.addHeader("Forwarded", "host=192.168.0.1");, +, +		HttpRequest httpRequest = new ServletServerHttpRequest(request);, +		UriComponents result = UriComponentsBuilder.fromHttpRequest(httpRequest).build();, +, +		assertEquals("http://192.168.0.1/mvc-showcase", result.toString());, +	}, +, +	@Test //SPR-14761, +	public void fromHttpRequestWithForwardedIPv6() {, +		MockHttpServletRequest request = new MockHttpServletRequest();, +		request.setScheme("http");, +		request.setServerName("localhost");, +		request.setServerPort(-1);, +		request.setRequestURI("/mvc-showcase");, +		request.addHeader("Forwarded", "host=[1abc:2abc:3abc::5ABC:6abc]");, +, +		HttpRequest httpRequest = new ServletServerHttpRequest(request);, +		UriComponents result = UriComponentsBuilder.fromHttpRequest(httpRequest).build();, +, +		assertEquals("http://[1abc:2abc:3abc::5ABC:6abc]/mvc-showcase", result.toString());, +	}, +, +	@Test //SPR-14761, +	public void fromHttpRequestWithForwardedIPv6Host() {, +		MockHttpServletRequest request = new MockHttpServletRequest();, +		request.setScheme("http");, +		request.setServerName("localhost");, +		request.setServerPort(-1);, +		request.setRequestURI("/mvc-showcase");, +		request.addHeader("X-Forwarded-Host", "[1abc:2abc:3abc::5ABC:6abc]");, +, +		HttpRequest httpRequest = new ServletServerHttpRequest(request);, +		UriComponents result = UriComponentsBuilder.fromHttpRequest(httpRequest).build();, +, +		assertEquals("http://[1abc:2abc:3abc::5ABC:6abc]/mvc-showcase", result.toString());, +	}, +, +	@Test //SPR-14761, +	public void fromHttpRequestWithForwardedIPv6HostAndPort() {, +		MockHttpServletRequest request = new MockHttpServletRequest();, +		request.setScheme("http");, +		request.setServerName("localhost");, +		request.setServerPort(-1);, +		request.setRequestURI("/mvc-showcase");, +		request.addHeader("X-Forwarded-Host", "[1abc:2abc:3abc::5ABC:6abc]:8080");, +, +		HttpRequest httpRequest = new ServletServerHttpRequest(request);, +		UriComponents result = UriComponentsBuilder.fromHttpRequest(httpRequest).build();, +, +		assertEquals("http://[1abc:2abc:3abc::5ABC:6abc]:8080/mvc-showcase", result.toString());, +	}, +, +, +	@Test // SPR-10701, +	@Test // SPR-11140, +	@Test // SPR-11855, +	@Test // SPR-11872, +	@Test // SPR-12771, +	@Test // SPR-12813, +	@Test // SPR-12816, +	@Test // SPR-12742, +	@Test // SPR-12398, +	@Test // SPR-11856]