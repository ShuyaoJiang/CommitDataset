[+++ b/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +	public void setIgnoreUnresolvableNestedPlaceholders(boolean ignoreUnresolvableNestedPlaceholders) {, +		this.propertyResolver.setIgnoreUnresolvableNestedPlaceholders(ignoreUnresolvableNestedPlaceholders);, +	}, +, +++ b/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +	public void setIgnoreUnresolvableNestedPlaceholders(boolean ignoreUnresolvableNestedPlaceholders) {, +		this.propertyResolver.setIgnoreUnresolvableNestedPlaceholders(ignoreUnresolvableNestedPlaceholders);, +	}, +, +++ b/spring-core/src/main/java/org/springframework/core/env/AbstractPropertyResolver.java, + * Copyright 2002-2012 the original author or authors., +	private boolean ignoreUnresolvableNestedPlaceholders = false;, +	/**, +	 * {@inheritDoc}, +	 * <p>The default value for this implementation is {@code false}., +	 * @since 3.2, +	 */, +	public void setIgnoreUnresolvableNestedPlaceholders(boolean ignoreUnresolvableNestedPlaceholders) {, +		this.ignoreUnresolvableNestedPlaceholders = ignoreUnresolvableNestedPlaceholders;, +	}, +, +	/**, +	 * Resolve placeholders within the given string, deferring to the value of, +	 * {@link #setIgnoreUnresolvableNestedPlaceholders(boolean)} to determine whether any, +	 * unresolvable placeholders should raise an exception or be ignored., +	 * @since 3.2, +	 * @see #setIgnoreUnresolvableNestedPlaceholders(boolean), +	 */, +	protected String resolveNestedPlaceholders(String value) {, +		return this.ignoreUnresolvableNestedPlaceholders ?, +				this.resolvePlaceholders(value) :, +				this.resolveRequiredPlaceholders(value);, +	}, +, +++ b/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +	public void setIgnoreUnresolvableNestedPlaceholders(boolean ignoreUnresolvableNestedPlaceholders) {, +		this.propertyResolver.setIgnoreUnresolvableNestedPlaceholders(ignoreUnresolvableNestedPlaceholders);, +	}, +, +++ b/spring-core/src/main/java/org/springframework/core/env/AbstractPropertyResolver.java, + * Copyright 2002-2012 the original author or authors., +	private boolean ignoreUnresolvableNestedPlaceholders = false;, +	/**, +	 * {@inheritDoc}, +	 * <p>The default value for this implementation is {@code false}., +	 * @since 3.2, +	 */, +	public void setIgnoreUnresolvableNestedPlaceholders(boolean ignoreUnresolvableNestedPlaceholders) {, +		this.ignoreUnresolvableNestedPlaceholders = ignoreUnresolvableNestedPlaceholders;, +	}, +, +	/**, +	 * Resolve placeholders within the given string, deferring to the value of, +	 * {@link #setIgnoreUnresolvableNestedPlaceholders(boolean)} to determine whether any, +	 * unresolvable placeholders should raise an exception or be ignored., +	 * @since 3.2, +	 * @see #setIgnoreUnresolvableNestedPlaceholders(boolean), +	 */, +	protected String resolveNestedPlaceholders(String value) {, +		return this.ignoreUnresolvableNestedPlaceholders ?, +				this.resolvePlaceholders(value) :, +				this.resolveRequiredPlaceholders(value);, +	}, +, +++ b/spring-core/src/main/java/org/springframework/core/env/ConfigurablePropertyResolver.java, + * Copyright 2002-2012 the original author or authors., +, +	/**, +	 * Set whether to throw an exception when encountering an unresolvable placeholder, +	 * nested within the value of a given property. A {@code false} value indicates strict, +	 * resolution, i.e. that an exception will be thrown. A {@code true} value indicates, +	 * that unresolvable nested placeholders should be passed through in their unresolved, +	 * ${...} form., +	 * <p>Implementations of {@link #getProperty(String)} and its variants must inspect, +	 * the value set here to determine correct behavior when property values contain, +	 * unresolvable placeholders., +	 * @since 3.2, +	 */, +	void setIgnoreUnresolvableNestedPlaceholders(boolean ignoreUnresolvableNestedPlaceholders);, +++ b/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, +	public void setIgnoreUnresolvableNestedPlaceholders(boolean ignoreUnresolvableNestedPlaceholders) {, +		this.propertyResolver.setIgnoreUnresolvableNestedPlaceholders(ignoreUnresolvableNestedPlaceholders);, +	}, +, +++ b/spring-core/src/main/java/org/springframework/core/env/AbstractPropertyResolver.java, + * Copyright 2002-2012 the original author or authors., +	private boolean ignoreUnresolvableNestedPlaceholders = false;, +	/**, +	 * {@inheritDoc}, +	 * <p>The default value for this implementation is {@code false}., +	 * @since 3.2, +	 */, +	public void setIgnoreUnresolvableNestedPlaceholders(boolean ignoreUnresolvableNestedPlaceholders) {, +		this.ignoreUnresolvableNestedPlaceholders = ignoreUnresolvableNestedPlaceholders;, +	}, +, +	/**, +	 * Resolve placeholders within the given string, deferring to the value of, +	 * {@link #setIgnoreUnresolvableNestedPlaceholders(boolean)} to determine whether any]