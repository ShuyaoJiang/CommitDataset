[+++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequest.java, + * Copyright 2002-2015 the original author or authors., +	HttpContext getHttpContext() {, +		return this.httpContext;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequest.java, + * Copyright 2002-2015 the original author or authors., +	HttpContext getHttpContext() {, +		return this.httpContext;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequestFactory.java, + * @author Stephane Nicoll, +				config = createRequestConfig(asyncClient);, +			if (config != null) {, +		}, +	/**, +	 * Create a default {@link RequestConfig} to use with the given client., +	 * Can return {@code null} to indicate that no custom request config should, +	 * be set and the defaults of the {@link HttpAsyncClient} should be used., +	 * <p>The default implementation tries to merge the defaults of the client, +	 * with the local customizations of this instance, if any., +	 * @param client the client, +	 * @return the RequestConfig to use, +	 * @since 4.2, +	 */, +	protected RequestConfig createRequestConfig(HttpAsyncClient client) {, +		if (client instanceof Configurable) {, +			RequestConfig clientRequestConfig = ((Configurable) client).getConfig();, +			return mergeRequestConfig(clientRequestConfig);, +		}, +		return getInternalRequestConfig();, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequest.java, + * Copyright 2002-2015 the original author or authors., +	HttpContext getHttpContext() {, +		return this.httpContext;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequestFactory.java, + * @author Stephane Nicoll, +				config = createRequestConfig(asyncClient);, +			if (config != null) {, +		}, +	/**, +	 * Create a default {@link RequestConfig} to use with the given client., +	 * Can return {@code null} to indicate that no custom request config should, +	 * be set and the defaults of the {@link HttpAsyncClient} should be used., +	 * <p>The default implementation tries to merge the defaults of the client, +	 * with the local customizations of this instance, if any., +	 * @param client the client, +	 * @return the RequestConfig to use, +	 * @since 4.2, +	 */, +	protected RequestConfig createRequestConfig(HttpAsyncClient client) {, +		if (client instanceof Configurable) {, +			RequestConfig clientRequestConfig = ((Configurable) client).getConfig();, +			return mergeRequestConfig(clientRequestConfig);, +		}, +		return getInternalRequestConfig();, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java, +	protected RequestConfig mergeRequestConfig(RequestConfig defaultRequestConfig) {, +	protected final RequestConfig getInternalRequestConfig() {, +		return this.requestConfig;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequest.java, + * Copyright 2002-2015 the original author or authors., +	HttpContext getHttpContext() {, +		return this.httpContext;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsAsyncClientHttpRequestFactory.java, + * @author Stephane Nicoll, +				config = createRequestConfig(asyncClient);, +			if (config != null) {, +		}, +	/**, +	 * Create a default {@link RequestConfig} to use with the given client., +	 * Can return {@code null} to indicate that no custom request config should, +	 * be set and the defaults of the {@link HttpAsyncClient} should be used., +	 * <p>The default implementation tries to merge the defaults of the client, +	 * with the local customizations of this instance, if any., +	 * @param client the client, +	 * @return the RequestConfig to use, +	 * @since 4.2, +	 */, +	protected RequestConfig createRequestConfig(HttpAsyncClient client) {, +		if (client instanceof Configurable) {, +			RequestConfig clientRequestConfig = ((Configurable) client).getConfig();, +			return mergeRequestConfig(clientRequestConfig);, +		}, +		return getInternalRequestConfig();, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java]