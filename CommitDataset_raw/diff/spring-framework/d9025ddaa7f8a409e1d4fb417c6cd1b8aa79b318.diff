[+++ b/spring-test/src/test/java/org/springframework/test/util/ReflectionTestUtilsTests.java, +import org.springframework.aop.support.AopUtils;, +import org.springframework.test.util.subpackage.PersonEntity;, +	private final Person person = new PersonEntity();, +	public final ExpectedException exception = ExpectedException.none();, +		assertSetFieldAndGetFieldBehavior(this.person);, +	}, +, +	@Test, +	public void setFieldAndGetFieldViaJdkDynamicProxy() throws Exception {, +		ProxyFactory pf = new ProxyFactory(this.person);, +		pf.addInterface(Person.class);, +		Person proxy = (Person) pf.getProxy();, +		assertTrue("Proxy is a JDK dynamic proxy", AopUtils.isJdkDynamicProxy(proxy));, +		assertSetFieldAndGetFieldBehaviorForProxy(proxy, this.person);, +	}, +, +	@Test, +	public void setFieldAndGetFieldViaCglibProxy() throws Exception {, +		ProxyFactory pf = new ProxyFactory(this.person);, +		pf.setProxyTargetClass(true);, +		Person proxy = (Person) pf.getProxy();, +		assertTrue("Proxy is a CGLIB proxy", AopUtils.isCglibProxy(proxy));, +		assertSetFieldAndGetFieldBehaviorForProxy(proxy, this.person);, +	}, +, +	private static void assertSetFieldAndGetFieldBehavior(Person person) {, +		// Set reflectively, +		// Get reflectively, +, +		// Get directly, +		assertEquals("ID (private field in a superclass)", 99, person.getId());, +		assertEquals("name (protected field)", "Tom", person.getName());, +		assertEquals("age (private field)", 42, person.getAge());, +		assertEquals("eye color (package private field)", "blue", person.getEyeColor());, +		assertEquals("'likes pets' flag (package private boolean field)", true, person.likesPets());, +		assertEquals("'favorite number' (package field)", PI, person.getFavoriteNumber());, +	private static void assertSetFieldAndGetFieldBehaviorForProxy(Person proxy, Person target) {, +		assertSetFieldAndGetFieldBehavior(proxy);, +		// Get directly from Target, +		assertEquals("ID (private field in a superclass)", 99, target.getId());, +		assertEquals("name (protected field)", "Tom", target.getName());, +		assertEquals("age (private field)", 42, target.getAge());, +		assertEquals("eye color (package private field)", "blue", target.getEyeColor());, +		assertEquals("'likes pets' flag (package private boolean field)", true, target.likesPets());, +		assertEquals("'favorite number' (package field)", PI, target.getFavoriteNumber());, +++ b/spring-test/src/test/java/org/springframework/test/util/ReflectionTestUtilsTests.java, +import org.springframework.aop.support.AopUtils;, +import org.springframework.test.util.subpackage.PersonEntity;, +	private final Person person = new PersonEntity();, +	public final ExpectedException exception = ExpectedException.none();, +		assertSetFieldAndGetFieldBehavior(this.person);, +	}, +, +	@Test, +	public void setFieldAndGetFieldViaJdkDynamicProxy() throws Exception {, +		ProxyFactory pf = new ProxyFactory(this.person);, +		pf.addInterface(Person.class);, +		Person proxy = (Person) pf.getProxy();, +		assertTrue("Proxy is a JDK dynamic proxy", AopUtils.isJdkDynamicProxy(proxy));, +		assertSetFieldAndGetFieldBehaviorForProxy(proxy, this.person);, +	}, +, +	@Test, +	public void setFieldAndGetFieldViaCglibProxy() throws Exception {, +		ProxyFactory pf = new ProxyFactory(this.person);, +		pf.setProxyTargetClass(true);, +		Person proxy = (Person) pf.getProxy();, +		assertTrue("Proxy is a CGLIB proxy", AopUtils.isCglibProxy(proxy));, +		assertSetFieldAndGetFieldBehaviorForProxy(proxy, this.person);, +	}, +, +	private static void assertSetFieldAndGetFieldBehavior(Person person) {, +		// Set reflectively, +		// Get reflectively, +, +		// Get directly, +		assertEquals("ID (private field in a superclass)", 99, person.getId());, +		assertEquals("name (protected field)", "Tom", person.getName());, +		assertEquals("age (private field)", 42, person.getAge());, +		assertEquals("eye color (package private field)", "blue", person.getEyeColor());, +		assertEquals("'likes pets' flag (package private boolean field)", true, person.likesPets());, +		assertEquals("'favorite number' (package field)", PI, person.getFavoriteNumber());, +	private static void assertSetFieldAndGetFieldBehaviorForProxy(Person proxy, Person target) {, +		assertSetFieldAndGetFieldBehavior(proxy);, +		// Get directly from Target, +		assertEquals("ID (private field in a superclass)", 99, target.getId());, +		assertEquals("name (protected field)", "Tom", target.getName());, +		assertEquals("age (private field)", 42, target.getAge());, +		assertEquals("eye color (package private field)", "blue", target.getEyeColor());, +		assertEquals("'likes pets' flag (package private boolean field)", true, target.likesPets());, +		assertEquals("'favorite number' (package field)", PI, target.getFavoriteNumber());, +++ b/spring-test/src/test/java/org/springframework/test/util/subpackage/PersistentEntity.java, + * Copyright 2007-2016 the original author or authors., +	public long getId() {, +	protected void setId(long id) {, +, +++ b/spring-test/src/test/java/org/springframework/test/util/ReflectionTestUtilsTests.java, +import org.springframework.aop.support.AopUtils;, +import org.springframework.test.util.subpackage.PersonEntity;]