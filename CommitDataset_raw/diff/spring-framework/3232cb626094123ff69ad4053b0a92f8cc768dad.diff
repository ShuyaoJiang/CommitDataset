[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +	public RequestHeadersUriSpec<?> get() {, +	public RequestHeadersUriSpec<?> head() {, +	public RequestBodyUriSpec post() {, +	public RequestBodyUriSpec put() {, +	public RequestBodyUriSpec patch() {, +	public RequestHeadersUriSpec<?> delete() {, +	public RequestHeadersUriSpec<?> options() {, +	public RequestBodyUriSpec method(HttpMethod httpMethod) {, +	private RequestBodyUriSpec methodInternal(HttpMethod httpMethod) {, +		return new DefaultRequestBodyUriSpec(httpMethod);, +, +	private class DefaultRequestBodyUriSpec implements RequestBodyUriSpec {, +		@Nullable, +		private URI uri;, +		DefaultRequestBodyUriSpec(HttpMethod httpMethod) {, +		}, +, +		@Override, +		public RequestBodySpec uri(String uriTemplate, Object... uriVariables) {, +			return uri(uriBuilderFactory.expand(uriTemplate, uriVariables));, +		}, +, +		@Override, +		public RequestBodySpec uri(String uriTemplate, Map<String, ?> uriVariables) {, +			return uri(uriBuilderFactory.expand(uriTemplate, uriVariables));, +		}, +, +		@Override, +		public RequestBodySpec uri(Function<UriBuilder, URI> uriFunction) {, +			return uri(uriFunction.apply(uriBuilderFactory.builder()));, +		}, +, +		@Override, +		public RequestBodySpec uri(URI uri) {, +			return this;, +		public DefaultRequestBodyUriSpec header(String headerName, String... headerValues) {, +		public DefaultRequestBodyUriSpec headers(Consumer<HttpHeaders> headersConsumer) {, +		public DefaultRequestBodyUriSpec accept(MediaType... acceptableMediaTypes) {, +		public DefaultRequestBodyUriSpec acceptCharset(Charset... acceptableCharsets) {, +		public DefaultRequestBodyUriSpec contentType(MediaType contentType) {, +		public DefaultRequestBodyUriSpec contentLength(long contentLength) {, +		public DefaultRequestBodyUriSpec cookie(String name, String value) {, +		public DefaultRequestBodyUriSpec cookies(, +		public DefaultRequestBodyUriSpec ifModifiedSince(ZonedDateTime ifModifiedSince) {, +		public DefaultRequestBodyUriSpec ifNoneMatch(String... ifNoneMatches) {, +			URI uri = this.uri != null ? this.uri : uriBuilderFactory.expand("");, +			return ClientRequest.method(this.httpMethod, uri), +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +	public RequestHeadersUriSpec<?> get() {, +	public RequestHeadersUriSpec<?> head() {, +	public RequestBodyUriSpec post() {, +	public RequestBodyUriSpec put() {, +	public RequestBodyUriSpec patch() {, +	public RequestHeadersUriSpec<?> delete() {, +	public RequestHeadersUriSpec<?> options() {, +	public RequestBodyUriSpec method(HttpMethod httpMethod) {, +	private RequestBodyUriSpec methodInternal(HttpMethod httpMethod) {, +		return new DefaultRequestBodyUriSpec(httpMethod);, +, +	private class DefaultRequestBodyUriSpec implements RequestBodyUriSpec {, +		@Nullable, +		private URI uri;, +		DefaultRequestBodyUriSpec(HttpMethod httpMethod) {, +		}, +, +		@Override, +		public RequestBodySpec uri(String uriTemplate, Object... uriVariables) {, +			return uri(uriBuilderFactory.expand(uriTemplate, uriVariables));, +		}, +, +		@Override, +		public RequestBodySpec uri(String uriTemplate, Map<String, ?> uriVariables) {, +			return uri(uriBuilderFactory.expand(uriTemplate, uriVariables));, +		}, +, +		@Override, +		public RequestBodySpec uri(Function<UriBuilder, URI> uriFunction) {, +			return uri(uriFunction.apply(uriBuilderFactory.builder()));, +		}, +, +		@Override, +		public RequestBodySpec uri(URI uri) {, +			return this;, +		public DefaultRequestBodyUriSpec header(String headerName, String... headerValues) {, +		public DefaultRequestBodyUriSpec headers(Consumer<HttpHeaders> headersConsumer) {, +		public DefaultRequestBodyUriSpec accept(MediaType... acceptableMediaTypes) {, +		public DefaultRequestBodyUriSpec acceptCharset(Charset... acceptableCharsets) {, +		public DefaultRequestBodyUriSpec contentType(MediaType contentType) {, +		public DefaultRequestBodyUriSpec contentLength(long contentLength) {, +		public DefaultRequestBodyUriSpec cookie(String name, String value) {, +		public DefaultRequestBodyUriSpec cookies(, +		public DefaultRequestBodyUriSpec ifModifiedSince(ZonedDateTime ifModifiedSince) {, +		public DefaultRequestBodyUriSpec ifNoneMatch(String... ifNoneMatches) {, +			URI uri = this.uri != null ? this.uri : uriBuilderFactory.expand("");, +			return ClientRequest.method(this.httpMethod, uri), +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/WebClient.java, +	RequestHeadersUriSpec<?> get();, +	RequestHeadersUriSpec<?> head();, +	RequestBodyUriSpec post();]