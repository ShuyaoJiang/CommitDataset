[+++ b/spring-framework-reference/src/remoting.xml, +    Currently, Spring supports the following remoting technologies: <itemizedlist>, +      application (this is an excerpt from, +      <para>This is an example where we explicitly mention the, +    protocols using their own slim serialization mechanisms, Spring HTTP, +      <para>Setting up the HTTP invoker infrastructure for a service object, +      <para>If you are running outside of a servlet container and are using, +      You can configure the <classname>SimpleHttpServerFactoryBean</classname> together with a, +      <classname>SimpleHttpInvokerServiceExporter</classname> as is shown in this example:</para>, +      the URL for the WSDL file. Spring needs this at startup time to create, +      XFire is done using a XFire context that is shipping with XFire itself in, +    should carefully consider your needs, the services you are exposing and the, +    heavy-weight protocol in that it supports full-object serialization which, +      thrown; this behavior can be changed by plugging in another <interfacename>ResponseErrorHandler</interfacename>, +        also has the <methodname>execute</methodname> method, which can be]