[+++ b/spring-web/src/main/java/org/springframework/http/converter/protobuf/ExtensionRegistryInitializer.java, + * @author Sebastien Deleuze, + * @deprecated as of Spring Framework 5.1, use {@link ExtensionRegistry} based contructors instead, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/http/converter/protobuf/ExtensionRegistryInitializer.java, + * @author Sebastien Deleuze, + * @deprecated as of Spring Framework 5.1, use {@link ExtensionRegistry} based contructors instead, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter.java, + * @author Sebastien Deleuze, +	final ExtensionRegistry extensionRegistry;, +		this(null, null);, +	 * @deprecated as of Spring Framework 5.1, use {@link #ProtobufHttpMessageConverter(ExtensionRegistry)} instead, +	@Deprecated, +		this(null, null);, +		if (registryInitializer != null) {, +			registryInitializer.initializeExtensionRegistry(this.extensionRegistry);, +		}, +	}, +, +	/**, +	 * Construct a new {@code ProtobufHttpMessageConverter} with a registry that specifies, +	 * protocol message extensions., +	 * @param extensionRegistry the registry to populate, +	 */, +	public ProtobufHttpMessageConverter(ExtensionRegistry extensionRegistry) {, +		this(null, extensionRegistry);, +			@Nullable ExtensionRegistry extensionRegistry) {, +		this.extensionRegistry = (extensionRegistry == null ? ExtensionRegistry.newInstance() : extensionRegistry);, +++ b/spring-web/src/main/java/org/springframework/http/converter/protobuf/ExtensionRegistryInitializer.java, + * @author Sebastien Deleuze, + * @deprecated as of Spring Framework 5.1, use {@link ExtensionRegistry} based contructors instead, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter.java, + * @author Sebastien Deleuze, +	final ExtensionRegistry extensionRegistry;, +		this(null, null);, +	 * @deprecated as of Spring Framework 5.1, use {@link #ProtobufHttpMessageConverter(ExtensionRegistry)} instead, +	@Deprecated, +		this(null, null);, +		if (registryInitializer != null) {, +			registryInitializer.initializeExtensionRegistry(this.extensionRegistry);, +		}, +	}, +, +	/**, +	 * Construct a new {@code ProtobufHttpMessageConverter} with a registry that specifies, +	 * protocol message extensions., +	 * @param extensionRegistry the registry to populate, +	 */, +	public ProtobufHttpMessageConverter(ExtensionRegistry extensionRegistry) {, +		this(null, extensionRegistry);, +			@Nullable ExtensionRegistry extensionRegistry) {, +		this.extensionRegistry = (extensionRegistry == null ? ExtensionRegistry.newInstance() : extensionRegistry);, +++ b/spring-web/src/main/java/org/springframework/http/converter/protobuf/ProtobufJsonFormatHttpMessageConverter.java, +import com.google.protobuf.ExtensionRegistry;, + * @author Sebastien Deleuze, +		this(null,  null, (ExtensionRegistry)null);, +		this(parser, printer, (ExtensionRegistry)null);, +	}, +, +	/**, +	 * Construct a new {@code ProtobufJsonFormatHttpMessageConverter} with the given, +	 * {@link JsonFormat.Parser} and {@link JsonFormat.Printer} configuration, also, +	 * accepting a registry that specifies protocol message extensions., +	 * @param parser the JSON parser configuration, +	 * @param printer the JSON printer configuration, +	 * @param extensionRegistry the registry to populate, +	 * @since 5.1, +	 */, +	public ProtobufJsonFormatHttpMessageConverter(@Nullable JsonFormat.Parser parser,, +			@Nullable JsonFormat.Printer printer, @Nullable ExtensionRegistry extensionRegistry) {, +, +		super(new ProtobufJavaUtilSupport(parser, printer), extensionRegistry);, +	 * @deprecated as of Spring Framework 5.1, use, +	 * {@link #ProtobufJsonFormatHttpMessageConverter(JsonFormat.Parser, JsonFormat.Printer, ExtensionRegistry)} instead, +	@Deprecated, +		super(new ProtobufJavaUtilSupport(parser, printer), null);, +		if (registryInitializer != null) {, +			registryInitializer.initializeExtensionRegistry(this.extensionRegistry);, +		}, +++ b/spring-web/src/main/java/org/springframework/http/converter/protobuf/ExtensionRegistryInitializer.java, + * @author Sebastien Deleuze, + * @deprecated as of Spring Framework 5.1, use {@link ExtensionRegistry} based contructors instead, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter.java, + * @author Sebastien Deleuze, +	final ExtensionRegistry extensionRegistry;, +		this(null, null);, +	 * @deprecated as of Spring Framework 5.1, use {@link #ProtobufHttpMessageConverter(ExtensionRegistry)} instead, +	@Deprecated, +		this(null, null);, +		if (registryInitializer != null) {, +			registryInitializer.initializeExtensionRegistry(this.extensionRegistry);, +		}, +	}, +, +	/**, +	 * Construct a new {@code ProtobufHttpMessageConverter} with a registry that specifies, +	 * protocol message extensions.]