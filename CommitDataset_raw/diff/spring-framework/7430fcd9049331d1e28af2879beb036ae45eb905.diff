[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		TypeDescriptor sourceElementType = sourceType.getElementTypeDescriptor();, +		TypeDescriptor targetElementType = targetType.getElementTypeDescriptor();, +		if (Object.class.equals(targetElementType.getType())) {, +				target.add(sourceElement);, +			}, +		} else {, +			for (int i = 0; i < length; i++) {, +				Object sourceElement = Array.get(source, i);, +				Object targetElement = this.conversionService.convert(sourceElement, sourceElementType, targetElementType);, +		}		, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		TypeDescriptor sourceElementType = sourceType.getElementTypeDescriptor();, +		TypeDescriptor targetElementType = targetType.getElementTypeDescriptor();, +		if (Object.class.equals(targetElementType.getType())) {, +				target.add(sourceElement);, +			}, +		} else {, +			for (int i = 0; i < length; i++) {, +				Object sourceElement = Array.get(source, i);, +				Object targetElement = this.conversionService.convert(sourceElement, sourceElementType, targetElementType);, +		}		, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToCollectionConverter.java, +		TypeDescriptor sourceElementType = sourceType.getElementTypeDescriptor();, +		TypeDescriptor targetElementType = targetType.getElementTypeDescriptor();, +		if (Object.class.equals(targetElementType.getType())) {, +				target.add(sourceElement);, +			}			, +		} else {, +			for (Object sourceElement : sourceCollection) {, +				Object targetElement = this.conversionService.convert(sourceElement, sourceElementType, targetElementType);, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		TypeDescriptor sourceElementType = sourceType.getElementTypeDescriptor();, +		TypeDescriptor targetElementType = targetType.getElementTypeDescriptor();, +		if (Object.class.equals(targetElementType.getType())) {, +				target.add(sourceElement);, +			}, +		} else {, +			for (int i = 0; i < length; i++) {, +				Object sourceElement = Array.get(source, i);, +				Object targetElement = this.conversionService.convert(sourceElement, sourceElementType, targetElementType);, +		}		, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToCollectionConverter.java, +		TypeDescriptor sourceElementType = sourceType.getElementTypeDescriptor();, +		TypeDescriptor targetElementType = targetType.getElementTypeDescriptor();, +		if (Object.class.equals(targetElementType.getType())) {, +				target.add(sourceElement);, +			}			, +		} else {, +			for (Object sourceElement : sourceCollection) {, +				Object targetElement = this.conversionService.convert(sourceElement, sourceElementType, targetElementType);, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToMapConverter.java, +		TypeDescriptor sourceKeyType = sourceType.getMapKeyTypeDescriptor();, +		TypeDescriptor sourceValueType = sourceType.getMapValueTypeDescriptor();, +				Object targetKey = this.conversionService.convert(sourceKey, sourceKeyType, targetKeyType);, +				Object targetValue = this.conversionService.convert(sourceValue, sourceValueType, targetValueType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		TypeDescriptor sourceElementType = sourceType.getElementTypeDescriptor();, +		TypeDescriptor targetElementType = targetType.getElementTypeDescriptor();, +		if (Object.class.equals(targetElementType.getType())) {, +				target.add(sourceElement);, +			}, +		} else {, +			for (int i = 0; i < length; i++) {, +				Object sourceElement = Array.get(source, i);, +				Object targetElement = this.conversionService.convert(sourceElement, sourceElementType, targetElementType);, +		}		, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToCollectionConverter.java, +		TypeDescriptor sourceElementType = sourceType.getElementTypeDescriptor();, +		TypeDescriptor targetElementType = targetType.getElementTypeDescriptor();, +		if (Object.class.equals(targetElementType.getType())) {, +				target.add(sourceElement);, +			}			, +		} else {, +			for (Object sourceElement : sourceCollection) {, +				Object targetElement = this.conversionService.convert(sourceElement, sourceElementType, targetElementType);, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToMapConverter.java, +		TypeDescriptor sourceKeyType = sourceType.getMapKeyTypeDescriptor();, +		TypeDescriptor sourceValueType = sourceType.getMapValueTypeDescriptor();, +				Object targetKey = this.conversionService.convert(sourceKey, sourceKeyType, targetKeyType);, +				Object targetValue = this.conversionService.convert(sourceValue, sourceValueType, targetValueType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ObjectToCollectionConverter.java, +		TypeDescriptor targetElementType = targetType.getElementTypeDescriptor();, +		// Avoid potential recursion...., +		if (targetElementType.isCollection()) {, +		} else {, +			target.add(this.conversionService.convert(source, sourceType, targetElementType));, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		TypeDescriptor sourceElementType = sourceType.getElementTypeDescriptor();, +		TypeDescriptor targetElementType = targetType.getElementTypeDescriptor();, +		if (Object.class.equals(targetElementType.getType())) {, +				target.add(sourceElement);, +			}, +		} else {, +			for (int i = 0; i < length; i++) {, +				Object sourceElement = Array.get(source, i);, +				Object targetElement = this.conversionService.convert(sourceElement, sourceElementType, targetElementType);]