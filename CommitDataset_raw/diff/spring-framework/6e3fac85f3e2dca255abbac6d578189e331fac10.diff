[+++ b/spring-aop/src/main/java/org/springframework/aop/framework/AopProxyUtils.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.DecoratingProxy;, +	 * @param advised the proxy config, +	 * @see SpringProxy, +		return completeProxiedInterfaces(advised, false);, +	}, +, +	/**, +	 * Determine the complete set of interfaces to proxy for the given AOP configuration., +	 * <p>This will always add the {@link Advised} interface unless the AdvisedSupport's, +	 * {@link AdvisedSupport#setOpaque "opaque"} flag is on. Always adds the, +	 * {@link org.springframework.aop.SpringProxy} marker interface., +	 * @param advised the proxy config, +	 * @param decoratingProxy whether to expose the {@link DecoratingProxy} interface, +	 * @return the complete set of interfaces to proxy, +	 * @since 4.3, +	 * @see SpringProxy, +	 * @see Advised, +	 * @see DecoratingProxy, +	 */, +	static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised, boolean decoratingProxy) {, +		boolean addDecoratingProxy = (decoratingProxy && !advised.isInterfaceProxied(DecoratingProxy.class));, +		if (addDecoratingProxy) {, +			nonUserIfcCount++;, +		}, +		int index = specifiedInterfaces.length;, +			proxiedInterfaces[index] = SpringProxy.class;, +			index++;, +			proxiedInterfaces[index] = Advised.class;, +			index++;, +		}, +		if (addDecoratingProxy) {, +			proxiedInterfaces[index] = DecoratingProxy.class;, +		if (proxy instanceof DecoratingProxy) {, +			nonUserIfcCount++;, +		}, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AopProxyUtils.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.DecoratingProxy;, +	 * @param advised the proxy config, +	 * @see SpringProxy, +		return completeProxiedInterfaces(advised, false);, +	}, +, +	/**, +	 * Determine the complete set of interfaces to proxy for the given AOP configuration., +	 * <p>This will always add the {@link Advised} interface unless the AdvisedSupport's, +	 * {@link AdvisedSupport#setOpaque "opaque"} flag is on. Always adds the, +	 * {@link org.springframework.aop.SpringProxy} marker interface., +	 * @param advised the proxy config, +	 * @param decoratingProxy whether to expose the {@link DecoratingProxy} interface, +	 * @return the complete set of interfaces to proxy, +	 * @since 4.3, +	 * @see SpringProxy, +	 * @see Advised, +	 * @see DecoratingProxy, +	 */, +	static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised, boolean decoratingProxy) {, +		boolean addDecoratingProxy = (decoratingProxy && !advised.isInterfaceProxied(DecoratingProxy.class));, +		if (addDecoratingProxy) {, +			nonUserIfcCount++;, +		}, +		int index = specifiedInterfaces.length;, +			proxiedInterfaces[index] = SpringProxy.class;, +			index++;, +			proxiedInterfaces[index] = Advised.class;, +			index++;, +		}, +		if (addDecoratingProxy) {, +			proxiedInterfaces[index] = DecoratingProxy.class;, +		if (proxy instanceof DecoratingProxy) {, +			nonUserIfcCount++;, +		}, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.DecoratingProxy;, +		Class<?>[] proxiedInterfaces = AopProxyUtils.completeProxiedInterfaces(this.advised, true);, +			else if (!this.hashCodeDefined && AopUtils.isHashCodeMethod(method)) {, +			else if (method.getDeclaringClass() == DecoratingProxy.class) {, +				// There is only getDecoratedClass() declared -> dispatch to proxy config., +				return AopProxyUtils.ultimateTargetClass(this.advised);, +			}, +			else if (!this.advised.opaque && method.getDeclaringClass().isInterface() &&, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AopProxyUtils.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.DecoratingProxy;, +	 * @param advised the proxy config, +	 * @see SpringProxy, +		return completeProxiedInterfaces(advised, false);, +	}, +, +	/**, +	 * Determine the complete set of interfaces to proxy for the given AOP configuration., +	 * <p>This will always add the {@link Advised} interface unless the AdvisedSupport's, +	 * {@link AdvisedSupport#setOpaque "opaque"} flag is on. Always adds the, +	 * {@link org.springframework.aop.SpringProxy} marker interface., +	 * @param advised the proxy config, +	 * @param decoratingProxy whether to expose the {@link DecoratingProxy} interface, +	 * @return the complete set of interfaces to proxy]