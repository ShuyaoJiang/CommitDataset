[+++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java, +	LEFT_OPERAND_PROBLEM(Kind.ERROR,1070, "Problem parsing left operand"),, +	MISSING_SELECTION_EXPRESSION(Kind.ERROR, 1071, "A required selection expression has not been specified");, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java, +	LEFT_OPERAND_PROBLEM(Kind.ERROR,1070, "Problem parsing left operand"),, +	MISSING_SELECTION_EXPRESSION(Kind.ERROR, 1071, "A required selection expression has not been specified");, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/Selection.java, + * Copyright 2002-2013 the original author or authors., +import org.springframework.util.Assert;, +		super(pos, expression != null ? new SpelNodeImpl[] { expression }, +				: new SpelNodeImpl[] {});, +		Assert.notNull(expression, "Expression must not be null");, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java, +	LEFT_OPERAND_PROBLEM(Kind.ERROR,1070, "Problem parsing left operand"),, +	MISSING_SELECTION_EXPRESSION(Kind.ERROR, 1071, "A required selection expression has not been specified");, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/Selection.java, + * Copyright 2002-2013 the original author or authors., +import org.springframework.util.Assert;, +		super(pos, expression != null ? new SpelNodeImpl[] { expression }, +				: new SpelNodeImpl[] {});, +		Assert.notNull(expression, "Expression must not be null");, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/standard/InternalSpelExpressionParser.java, +		if(expr == null) {, +			raiseInternalException(toPos(t), SpelMessage.MISSING_SELECTION_EXPRESSION);, +		}, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java, +	LEFT_OPERAND_PROBLEM(Kind.ERROR,1070, "Problem parsing left operand"),, +	MISSING_SELECTION_EXPRESSION(Kind.ERROR, 1071, "A required selection expression has not been specified");, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/Selection.java, + * Copyright 2002-2013 the original author or authors., +import org.springframework.util.Assert;, +		super(pos, expression != null ? new SpelNodeImpl[] { expression }, +				: new SpelNodeImpl[] {});, +		Assert.notNull(expression, "Expression must not be null");, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/standard/InternalSpelExpressionParser.java, +		if(expr == null) {, +			raiseInternalException(toPos(t), SpelMessage.MISSING_SELECTION_EXPRESSION);, +		}, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java, +import java.util.Arrays;, +	@Test, +	public void SPR_10328() throws Exception {, +		thrown.expect(SpelParseException.class);, +		thrown.expectMessage("EL1071E:(pos 2): A required selection expression has not been specified");, +		Expression exp = parser.parseExpression("$[]");, +		exp.getValue(Arrays.asList("foo", "bar", "baz"));, +	}, +]