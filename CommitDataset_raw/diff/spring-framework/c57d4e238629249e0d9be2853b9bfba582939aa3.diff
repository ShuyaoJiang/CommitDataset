[+++ b/spring-web/src/main/java/org/springframework/web/context/request/async/DeferredResult.java, +	 * A variant of {@link #set(Object)} that absorbs a potential, resulting, +	 * {@link StaleAsyncWebRequestException}., +	 * @return {@code false} if the outcome was a {@code StaleAsyncWebRequestException}, +	 */, +	public boolean trySet(Object result) throws StaleAsyncWebRequestException {, +		try {, +			set(result);, +			return true;, +		}, +		catch (StaleAsyncWebRequestException ex) {, +			// absorb, +		}, +		return false;, +	}, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/DeferredResult.java, +	 * A variant of {@link #set(Object)} that absorbs a potential, resulting, +	 * {@link StaleAsyncWebRequestException}., +	 * @return {@code false} if the outcome was a {@code StaleAsyncWebRequestException}, +	 */, +	public boolean trySet(Object result) throws StaleAsyncWebRequestException {, +		try {, +			set(result);, +			return true;, +		}, +		catch (StaleAsyncWebRequestException ex) {, +			// absorb, +		}, +		return false;, +	}, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java, +	 * Set the AsyncTaskExecutor to use when a controller method returns a, +	 * {@code Callable}., +	 * <p>The default instance type is a {@link SimpleAsyncTaskExecutor}., +	 * It's recommended to change that default in production as the simple, +	 * executor does not re-use threads.]