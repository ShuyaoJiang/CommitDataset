[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/ArgumentAware.java, + * Copyright 2002-2015 the original author or authors., +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/ArgumentAware.java, + * Copyright 2002-2015 the original author or authors., +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/ArgumentTag.java, + * Copyright 2002-2015 the original author or authors., + * JSP tag for collecting arguments and passing them to an {@link ArgumentAware}, + * ancestor in the tag hierarchy., +, +	/**, +	 * Set the value of the argument (optional)., +	 * <pIf not set, the tag's body content will get evaluated., +	 * @param value the parameter value, +	 */, +	public void setValue(Object value) {, +		this.value = value;, +		this.valueSet = true;, +	}, +, +			// Get the value from the tag body, +		// Find a param-aware ancestor, +		ArgumentAware argumentAwareTag = (ArgumentAware) findAncestorWithClass(this, ArgumentAware.class);, +			throw new JspException("The argument tag must be a descendant of a tag that supports arguments");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/ArgumentAware.java, + * Copyright 2002-2015 the original author or authors., +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/ArgumentTag.java, + * Copyright 2002-2015 the original author or authors., + * JSP tag for collecting arguments and passing them to an {@link ArgumentAware}, + * ancestor in the tag hierarchy., +, +	/**, +	 * Set the value of the argument (optional)., +	 * <pIf not set, the tag's body content will get evaluated., +	 * @param value the parameter value, +	 */, +	public void setValue(Object value) {, +		this.value = value;, +		this.valueSet = true;, +	}, +, +			// Get the value from the tag body, +		// Find a param-aware ancestor, +		ArgumentAware argumentAwareTag = (ArgumentAware) findAncestorWithClass(this, ArgumentAware.class);, +			throw new JspException("The argument tag must be a descendant of a tag that supports arguments");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/ParamTag.java, + * Copyright 2002-2015 the original author or authors., +, +	/**, +	 * Set the name of the parameter (required)., +	 */, +	public void setName(String name) {, +		this.name = name;, +	}, +, +	/**, +	 * Set the value of the parameter (optional)., +	 */, +	public void setValue(String value) {, +		this.value = value;, +		this.valueSet = true;, +	}, +, +			// Get the value from the tag body, +		// Find a param aware ancestor, +		ParamAware paramAwareTag = (ParamAware) findAncestorWithClass(this, ParamAware.class);, +			throw new JspException("The param tag must be a descendant of a tag that supports parameters");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/ArgumentAware.java, + * Copyright 2002-2015 the original author or authors., +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/ArgumentTag.java, + * Copyright 2002-2015 the original author or authors., + * JSP tag for collecting arguments and passing them to an {@link ArgumentAware}, + * ancestor in the tag hierarchy., +, +	/**, +	 * Set the value of the argument (optional)., +	 * <pIf not set, the tag's body content will get evaluated., +	 * @param value the parameter value, +	 */, +	public void setValue(Object value) {, +		this.value = value;, +		this.valueSet = true;, +	}, +, +			// Get the value from the tag body, +		// Find a param-aware ancestor, +		ArgumentAware argumentAwareTag = (ArgumentAware) findAncestorWithClass(this, ArgumentAware.class);, +			throw new JspException("The argument tag must be a descendant of a tag that supports arguments");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/ParamTag.java, + * Copyright 2002-2015 the original author or authors., +, +	/**, +	 * Set the name of the parameter (required)., +	 */, +	public void setName(String name) {, +		this.name = name;, +	}]