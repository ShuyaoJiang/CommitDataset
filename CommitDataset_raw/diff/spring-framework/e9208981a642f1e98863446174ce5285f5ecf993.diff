[+++ b/build-spring-framework/resources/changelog.txt, +* fix request mapping bug involving direct vs pattern path matches with HTTP methods, +++ b/build-spring-framework/resources/changelog.txt, +* fix request mapping bug involving direct vs pattern path matches with HTTP methods, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java, +import java.util.Collection;, +, +		List<T> directPathMatches = this.urlMap.get(lookupPath);, +		if (directPathMatches != null) {, +			addMatchingMappings(directPathMatches, matches, request);, +, +		if (matches.isEmpty()) {, +			// No choice but to go through all mappings, +			addMatchingMappings(this.handlerMethods.keySet(), matches, request);, +	private void addMatchingMappings(Collection<T> mappings, List<Match> matches, HttpServletRequest request) {, +		for (T mapping : mappings) {, +			T match = getMatchingMapping(mapping, request);, +			if (match != null) {, +				matches.add(new Match(match, handlerMethods.get(mapping)));, +			}, +		}, +	}, +, +++ b/build-spring-framework/resources/changelog.txt, +* fix request mapping bug involving direct vs pattern path matches with HTTP methods, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java, +import java.util.Collection;, +, +		List<T> directPathMatches = this.urlMap.get(lookupPath);, +		if (directPathMatches != null) {, +			addMatchingMappings(directPathMatches, matches, request);, +, +		if (matches.isEmpty()) {, +			// No choice but to go through all mappings, +			addMatchingMappings(this.handlerMethods.keySet(), matches, request);, +	private void addMatchingMappings(Collection<T> mappings, List<Match> matches, HttpServletRequest request) {, +		for (T mapping : mappings) {, +			T match = getMatchingMapping(mapping, request);, +			if (match != null) {, +				matches.add(new Match(match, handlerMethods.get(mapping)));, +			}, +		}, +	}, +, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/method/annotation/ServletAnnotationControllerHandlerMethodTests.java, +	// SPR-9062, +, +	@Test, +	public void ambiguousPathAndRequestMethod() throws Exception {, +		initServletWithControllers(AmbiguousPathAndRequestMethodController.class);, +, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/bug/EXISTING");, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		getServlet().service(request, response);, +		assertEquals(200, response.getStatus());, +		assertEquals("Pattern", response.getContentAsString());, +	}, +, +	static class AmbiguousPathAndRequestMethodController {, +, +		@RequestMapping(value = "/bug/EXISTING", method = RequestMethod.POST), +		public void directMatch(Writer writer) throws IOException {, +			writer.write("Direct");, +		}, +, +		@RequestMapping(value = "/bug/{type}", method = RequestMethod.GET), +		public void patternMatch(Writer writer) throws IOException {, +			writer.write("Pattern");, +		}, +	}, +, +	@Controller]