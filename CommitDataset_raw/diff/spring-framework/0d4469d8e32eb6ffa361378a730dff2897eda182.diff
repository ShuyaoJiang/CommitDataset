[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +++ b/org.springframework.test/src/main/java/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +++ b/org.springframework.test/src/main/java/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +	protected void executeSqlScript(String sqlResourcePath, boolean continueOnError) throws DataAccessException {, +		SimpleJdbcTestUtils.executeSqlScript(this.simpleJdbcTemplate, new EncodedResource(resource,, +			this.sqlScriptEncoding), continueOnError);, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +++ b/org.springframework.test/src/main/java/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +	protected void executeSqlScript(String sqlResourcePath, boolean continueOnError) throws DataAccessException {, +		SimpleJdbcTestUtils.executeSqlScript(this.simpleJdbcTemplate, new EncodedResource(resource,, +			this.sqlScriptEncoding), continueOnError);, +++ b/org.springframework.test/src/main/java/org/springframework/test/jdbc/SimpleJdbcTestUtils.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +	public static void executeSqlScript(SimpleJdbcTemplate simpleJdbcTemplate, ResourceLoader resourceLoader,, +			String sqlResourcePath, boolean continueOnError) throws DataAccessException {, +	public static void executeSqlScript(SimpleJdbcTemplate simpleJdbcTemplate, Resource resource,, +			boolean continueOnError) throws DataAccessException {, +	public static void executeSqlScript(SimpleJdbcTemplate simpleJdbcTemplate, EncodedResource resource,, +			boolean continueOnError) throws DataAccessException {, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +++ b/org.springframework.test/src/main/java/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +	protected void executeSqlScript(String sqlResourcePath, boolean continueOnError) throws DataAccessException {, +		SimpleJdbcTestUtils.executeSqlScript(this.simpleJdbcTemplate, new EncodedResource(resource,, +			this.sqlScriptEncoding), continueOnError);, +++ b/org.springframework.test/src/main/java/org/springframework/test/jdbc/SimpleJdbcTestUtils.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +	public static void executeSqlScript(SimpleJdbcTemplate simpleJdbcTemplate, ResourceLoader resourceLoader,, +			String sqlResourcePath, boolean continueOnError) throws DataAccessException {, +	public static void executeSqlScript(SimpleJdbcTemplate simpleJdbcTemplate, Resource resource,, +			boolean continueOnError) throws DataAccessException {, +	public static void executeSqlScript(SimpleJdbcTemplate simpleJdbcTemplate, EncodedResource resource,, +			boolean continueOnError) throws DataAccessException {, +++ b/org.springframework.test/src/test/java/org/springframework/test/context/junit38/ConcreteTransactionalJUnit38SpringContextTests.java, + * Combined integration test for {@link AbstractJUnit38SpringContextTests} and, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +++ b/org.springframework.test/src/main/java/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +	protected void executeSqlScript(String sqlResourcePath, boolean continueOnError) throws DataAccessException {, +		SimpleJdbcTestUtils.executeSqlScript(this.simpleJdbcTemplate, new EncodedResource(resource,, +			this.sqlScriptEncoding), continueOnError);, +++ b/org.springframework.test/src/main/java/org/springframework/test/jdbc/SimpleJdbcTestUtils.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +	public static void executeSqlScript(SimpleJdbcTemplate simpleJdbcTemplate, ResourceLoader resourceLoader,, +			String sqlResourcePath, boolean continueOnError) throws DataAccessException {, +	public static void executeSqlScript(SimpleJdbcTemplate simpleJdbcTemplate, Resource resource,, +			boolean continueOnError) throws DataAccessException {, +	public static void executeSqlScript(SimpleJdbcTemplate simpleJdbcTemplate, EncodedResource resource,, +			boolean continueOnError) throws DataAccessException {, +++ b/org.springframework.test/src/test/java/org/springframework/test/context/junit38/ConcreteTransactionalJUnit38SpringContextTests.java, + * Combined integration test for {@link AbstractJUnit38SpringContextTests} and, +++ b/org.springframework.test/src/test/java/org/springframework/test/context/junit38/FailingBeforeAndAfterMethodsTests.java, + * JUnit 4 based integration test for verifying that '<em>before</em>' and '<em>after</em>', +++ b/org.springframework.test/src/main/java/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +++ b/org.springframework.test/src/main/java/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +	protected void executeSqlScript(String sqlResourcePath, boolean continueOnError) throws DataAccessException {, +		SimpleJdbcTestUtils.executeSqlScript(this.simpleJdbcTemplate, new EncodedResource(resource,, +			this.sqlScriptEncoding), continueOnError);, +++ b/org.springframework.test/src/main/java/org/springframework/test/jdbc/SimpleJdbcTestUtils.java, + * Copyright 2002-2011 the original author or authors., +@SuppressWarnings("deprecation"), +	public static void executeSqlScript(SimpleJdbcTemplate simpleJdbcTemplate, ResourceLoader resourceLoader,, +			String sqlResourcePath, boolean continueOnError) throws DataAccessException {, +	public static void executeSqlScript(SimpleJdbcTemplate simpleJdbcTemplate, Resource resource,, +			boolean continueOnError) throws DataAccessException {, +	public static void executeSqlScript(SimpleJdbcTemplate simpleJdbcTemplate, EncodedResource resource,, +			boolean continueOnError) throws DataAccessException {, +++ b/org.springframework.test/src/test/java/org/springframework/test/context/junit38/ConcreteTransactionalJUnit38SpringContextTests.java, + * Combined integration test for {@link AbstractJUnit38SpringContextTests} and, +++ b/org.springframework.test/src/test/java/org/springframework/test/context/junit38/FailingBeforeAndAfterMethodsTests.java, + * JUnit 4 based integration test for verifying that '<em>before</em>' and '<em>after</em>', +++ b/org.springframework.test/src/test/java/org/springframework/test/context/junit4/BeforeAndAfterTransactionAnnotationTests.java, +import javax.annotation.Resource;, +import javax.sql.DataSource;, +, + * JUnit 4 based integration test which verifies, +@SuppressWarnings("deprecation")]