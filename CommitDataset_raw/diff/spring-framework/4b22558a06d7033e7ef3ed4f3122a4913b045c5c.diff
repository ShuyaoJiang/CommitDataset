[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/RequestDataValueProcessor.java, + * Copyright 2002-2013 the original author or authors., +	 * @param httpMethod the form HTTP method, +	String processAction(HttpServletRequest request, String action, String httpMethod);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/RequestDataValueProcessor.java, + * Copyright 2002-2013 the original author or authors., +	 * @param httpMethod the form HTTP method, +	String processAction(HttpServletRequest request, String action, String httpMethod);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/form/FormTag.java, +		writeOptionalAttribute(tagWriter, METHOD_ATTRIBUTE, getHttpMethod());, +	private String getHttpMethod() {, +		return isMethodBrowserSupported(getMethod()) ? getMethod() : DEFAULT_METHOD;, +	}, +, +			action = processor.processAction((HttpServletRequest) request, action, getHttpMethod());, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/RequestDataValueProcessor.java, + * Copyright 2002-2013 the original author or authors., +	 * @param httpMethod the form HTTP method, +	String processAction(HttpServletRequest request, String action, String httpMethod);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/form/FormTag.java, +		writeOptionalAttribute(tagWriter, METHOD_ATTRIBUTE, getHttpMethod());, +	private String getHttpMethod() {, +		return isMethodBrowserSupported(getMethod()) ? getMethod() : DEFAULT_METHOD;, +	}, +, +			action = processor.processAction((HttpServletRequest) request, action, getHttpMethod());, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/support/RequestDataValueProcessorWrapper.java, + * Copyright 2002-2013 the original author or authors., +	public String processAction(HttpServletRequest request, String action, String httpMethod) {, +		return (this.processor != null) ? this.processor.processAction(request, action, httpMethod) : action;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/RequestDataValueProcessor.java, + * Copyright 2002-2013 the original author or authors., +	 * @param httpMethod the form HTTP method, +	String processAction(HttpServletRequest request, String action, String httpMethod);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/form/FormTag.java, +		writeOptionalAttribute(tagWriter, METHOD_ATTRIBUTE, getHttpMethod());, +	private String getHttpMethod() {, +		return isMethodBrowserSupported(getMethod()) ? getMethod() : DEFAULT_METHOD;, +	}, +, +			action = processor.processAction((HttpServletRequest) request, action, getHttpMethod());, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/support/RequestDataValueProcessorWrapper.java, + * Copyright 2002-2013 the original author or authors., +	public String processAction(HttpServletRequest request, String action, String httpMethod) {, +		return (this.processor != null) ? this.processor.processAction(request, action, httpMethod) : action;, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/tags/form/FormTagTests.java, +		given(processor.processAction(this.request, action, "post")).willReturn(action);]