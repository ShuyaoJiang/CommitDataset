[+++ b/spring-web/src/main/java/org/springframework/web/context/AbstractContextLoaderInitializer.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.ApplicationContextInitializer;, + * @author Juergen Hoeller, +			ContextLoaderListener listener = new ContextLoaderListener(rootAppContext);, +			listener.setContextInitializers(getRootApplicationContextInitializers());, +			servletContext.addListener(listener);, +	/**, +	 * Specify application context initializers to be applied to the root application, +	 * context that the {@code ContextLoaderListener} is being created with., +	 * @since 4.2, +	 * @see #createRootApplicationContext(), +	 * @see ContextLoaderListener#setContextInitializers, +	 */, +	protected ApplicationContextInitializer<?>[] getRootApplicationContextInitializers() {, +		return null;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/context/AbstractContextLoaderInitializer.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.ApplicationContextInitializer;, + * @author Juergen Hoeller, +			ContextLoaderListener listener = new ContextLoaderListener(rootAppContext);, +			listener.setContextInitializers(getRootApplicationContextInitializers());, +			servletContext.addListener(listener);, +	/**, +	 * Specify application context initializers to be applied to the root application, +	 * context that the {@code ContextLoaderListener} is being created with., +	 * @since 4.2, +	 * @see #createRootApplicationContext(), +	 * @see ContextLoaderListener#setContextInitializers, +	 */, +	protected ApplicationContextInitializer<?>[] getRootApplicationContextInitializers() {, +		return null;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/context/ContextLoader.java, + * Copyright 2002-2015 the original author or authors., +, +	/** Actual ApplicationContextInitializer instances to apply to the context */, +	private final List<ApplicationContextInitializer<ConfigurableApplicationContext>> contextInitializers =, +			new ArrayList<ApplicationContextInitializer<ConfigurableApplicationContext>>();, +, +, +	/**, +	 * Specify which {@link ApplicationContextInitializer} instances should be used, +	 * to initialize the application context used by this {@code ContextLoader}., +	 * @since 4.2, +	 * @see #configureAndRefreshWebApplicationContext, +	 * @see #customizeContext, +	 */, +	@SuppressWarnings("unchecked"), +	public void setContextInitializers(ApplicationContextInitializer<?>... initializers) {, +		if (initializers != null) {, +			for (ApplicationContextInitializer<?> initializer : initializers) {, +				this.contextInitializers.add((ApplicationContextInitializer<ConfigurableApplicationContext>) initializer);, +			}, +		}, +	}, +, +, +	/**, +	 * Return the WebApplicationContext implementation class to use, either the, +	 * default XmlWebApplicationContext or a custom context class if specified., +	 * @param servletContext current servlet context, +	 * @return the WebApplicationContext implementation class to use, +	 * @see #CONTEXT_CLASS_PARAM, +	 * @see org.springframework.web.context.support.XmlWebApplicationContext, +	 */, +	protected Class<?> determineContextClass(ServletContext servletContext) {, +		String contextClassName = servletContext.getInitParameter(CONTEXT_CLASS_PARAM);, +		if (contextClassName != null) {, +			try {, +				return ClassUtils.forName(contextClassName, ClassUtils.getDefaultClassLoader());, +			}, +			catch (ClassNotFoundException ex) {, +				throw new ApplicationContextException(, +						"Failed to load custom context class [" + contextClassName + "]", ex);, +			}, +		}, +		else {, +			contextClassName = defaultStrategies.getProperty(WebApplicationContext.class.getName());, +			try {, +				return ClassUtils.forName(contextClassName, ContextLoader.class.getClassLoader());, +			}, +			catch (ClassNotFoundException ex) {, +				throw new ApplicationContextException(, +						"Failed to load default context class [" + contextClassName + "]", ex);, +			}, +		}, +	}, +, +			this.contextInitializers.add(BeanUtils.instantiateClass(initializerClass));, +		AnnotationAwareOrderComparator.sort(this.contextInitializers);, +		for (ApplicationContextInitializer<ConfigurableApplicationContext> initializer : this.contextInitializers) {, +++ b/spring-web/src/main/java/org/springframework/web/context/AbstractContextLoaderInitializer.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.ApplicationContextInitializer;, + * @author Juergen Hoeller, +			ContextLoaderListener listener = new ContextLoaderListener(rootAppContext);]