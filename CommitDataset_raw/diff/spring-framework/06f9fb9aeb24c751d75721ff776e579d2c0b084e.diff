[+++ b/spring-core/src/main/java/org/springframework/core/SerializableTypeWrapper.java, +	static Type forTypeProvider(TypeProvider provider) {, +		if (providedType == null || providedType instanceof Serializable) {, +			// No serializable type wrapping necessary (e.g. for java.lang.Class), +		if (!Serializable.class.isAssignableFrom(Class.class)) {, +			// Let's skip any wrapping attempts if types are generally not serializable in, +			// the current runtime environment (even java.lang.Class itself, e.g. on Graal), +			return providedType;, +		}, +, +		// Obtain a serializable type proxy for the given provider..., +			if (type.isInstance(providedType)) {]