[+++ b/spring-core/src/main/java/org/springframework/core/MethodParameter.java, + * Copyright 2002-2018 the original author or authors., +import java.lang.reflect.Modifier;, +	private static final Annotation[] EMPTY_ANNOTATION_ARRAY = new Annotation[0];, +, +			int index = this.parameterIndex;, +			if (this.executable instanceof Constructor &&, +					this.executable.getDeclaringClass().isMemberClass() &&, +					!Modifier.isStatic(this.executable.getDeclaringClass().getModifiers()) &&, +					annotationArray.length == this.executable.getParameterCount() - 1) {, +				// Bug in javac in JDK <9: annotation array excludes enclosing instance parameter, +				// for inner classes, so access it with the actual parameter index lowered by 1, +				index = this.parameterIndex - 1;, +			}, +			if (index >= 0 && index < annotationArray.length) {, +				paramAnns = adaptAnnotationArray(annotationArray[index]);, +				paramAnns = EMPTY_ANNOTATION_ARRAY;, +++ b/spring-core/src/main/java/org/springframework/core/MethodParameter.java, + * Copyright 2002-2018 the original author or authors., +import java.lang.reflect.Modifier;, +	private static final Annotation[] EMPTY_ANNOTATION_ARRAY = new Annotation[0];, +, +			int index = this.parameterIndex;, +			if (this.executable instanceof Constructor &&, +					this.executable.getDeclaringClass().isMemberClass() &&, +					!Modifier.isStatic(this.executable.getDeclaringClass().getModifiers()) &&, +					annotationArray.length == this.executable.getParameterCount() - 1) {, +				// Bug in javac in JDK <9: annotation array excludes enclosing instance parameter, +				// for inner classes, so access it with the actual parameter index lowered by 1, +				index = this.parameterIndex - 1;, +			}, +			if (index >= 0 && index < annotationArray.length) {, +				paramAnns = adaptAnnotationArray(annotationArray[index]);, +				paramAnns = EMPTY_ANNOTATION_ARRAY;, +++ b/spring-core/src/test/java/org/springframework/core/MethodParameterTests.java, +	public void setup() throws NoSuchMethodException {, +	@Test  // SPR-16652, +		Constructor<?> constructor = InnerClass.class.getConstructor(getClass(), String.class, Integer.class);, +, +		MethodParameter methodParameter = MethodParameter.forExecutable(constructor, 0);, +		assertEquals(getClass(), methodParameter.getParameterType());, +		assertNull(methodParameter.getParameterAnnotation(Param.class));, +, +		methodParameter = MethodParameter.forExecutable(constructor, 1);, +, +		methodParameter = MethodParameter.forExecutable(constructor, 2);, +		assertEquals(Integer.class, methodParameter.getParameterType());, +		assertNull(methodParameter.getParameterAnnotation(Param.class));, +		public InnerClass(@Param String s, Integer i) {]