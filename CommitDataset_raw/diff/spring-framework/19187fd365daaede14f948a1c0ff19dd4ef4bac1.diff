[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java, +, +import org.springframework.beans.BeansException;, +import org.springframework.context.ApplicationContextAware;, + * @author Phillip Webb, +public abstract class FrameworkServlet extends HttpServletBean implements ApplicationContextAware {, +	/** If the WebApplicationContext was injected via {@link #setApplicationContext} */, +	private boolean webApplicationContextInjected = false;, +, +		if (this.webApplicationContextInjected) {, +			return;, +		}, +	/**, +	 * Called by Spring via {@link ApplicationContextAware} to inject the current, +	 * application context. This method allows FrameworkServlets to be registered as, +	 * Spring Beans inside an existing {@link WebApplicationContext} rather than, +	 * {@link #findWebApplicationContext() finding} a, +	 * {@link org.springframework.web.context.ContextLoaderListener bootstrapped} context., +	 *, +	 * <p>Primarily added to support use in embedded servlet containers, this method is not, +	 * intended to be called directly., +	 *, +	 * @since 4.0, +	 */, +	public void setApplicationContext(ApplicationContext applicationContext), +			throws BeansException {, +		if (this.webApplicationContext == null, +				&& applicationContext instanceof WebApplicationContext) {, +			if (logger.isDebugEnabled()) {, +				logger.debug("Using existing application context for ", +						+ ClassUtils.getShortName(getClass()));, +			}, +			this.webApplicationContext = (WebApplicationContext) applicationContext;, +			this.webApplicationContextInjected = true;, +		}, +	}]