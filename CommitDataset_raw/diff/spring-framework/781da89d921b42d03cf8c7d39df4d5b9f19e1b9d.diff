[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextConfiguration.java, +	 * Alias for {@link #locations()}., +	 * , +	 * @since 3.0, +	 */, +	String[] value() default {};, +, +	/**, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextConfiguration.java, +	 * Alias for {@link #locations()}., +	 * , +	 * @since 3.0, +	 */, +	String[] value() default {};, +, +	/**, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/TestContext.java, +, +			String[] valueLocations = contextConfiguration.value();, +			String[] locations = contextConfiguration.locations();, +			if (!ObjectUtils.isEmpty(valueLocations) && !ObjectUtils.isEmpty(locations)) {, +				String msg = "Test class [", +						+ declaringClass, +						+ "] has been configured with @ContextConfiguration's 'value' [", +						+ ObjectUtils.nullSafeToString(valueLocations), +						+ "] and 'locations' [", +						+ ObjectUtils.nullSafeToString(locations), +						+ "] attributes. Only one declaration of resource locations is permitted per @ContextConfiguration annotation.";, +				logger.error(msg);, +				throw new IllegalStateException(msg);, +			}, +			else if (!ObjectUtils.isEmpty(valueLocations)) {, +				locations = valueLocations;, +			}, +, +			locations = contextLoader.processLocations(declaringClass, locations);, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextConfiguration.java, +	 * Alias for {@link #locations()}., +	 * , +	 * @since 3.0, +	 */, +	String[] value() default {};, +, +	/**, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/TestContext.java, +, +			String[] valueLocations = contextConfiguration.value();, +			String[] locations = contextConfiguration.locations();, +			if (!ObjectUtils.isEmpty(valueLocations) && !ObjectUtils.isEmpty(locations)) {, +				String msg = "Test class [", +						+ declaringClass, +						+ "] has been configured with @ContextConfiguration's 'value' [", +						+ ObjectUtils.nullSafeToString(valueLocations), +						+ "] and 'locations' [", +						+ ObjectUtils.nullSafeToString(locations), +						+ "] attributes. Only one declaration of resource locations is permitted per @ContextConfiguration annotation.";, +				logger.error(msg);, +				throw new IllegalStateException(msg);, +			}, +			else if (!ObjectUtils.isEmpty(valueLocations)) {, +				locations = valueLocations;, +			}, +, +			locations = contextLoader.processLocations(declaringClass, locations);, +++ b/org.springframework.test/src/test/java/org/springframework/test/context/junit4/MultipleResourcesSpringJUnit4ClassRunnerAppCtxTests.java, + * Copyright 2002-2009 the original author or authors., + * <p>, + * As of Spring 3.0,, + * <code>MultipleResourcesSpringJUnit4ClassRunnerAppCtxTests</code> is also used, + * to verify support for the new <code>value</code> attribute alias for, + * <code>&#064;ContextConfiguration</code>'s <code>locations</code> attribute., + * </p>, +@ContextConfiguration( { MultipleResourcesSpringJUnit4ClassRunnerAppCtxTests.CLASSPATH_RESOURCE_PATH,]