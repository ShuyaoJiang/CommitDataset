[+++ b/spring-context/src/main/kotlin/org/springframework/context/support/BeanDefinitionDsl.kt, +	class BeanDefinitionContext(val context: GenericApplicationContext) {, +, +, +		/**, +		 * Get the [ConfigurableEnvironment] associated to the underlying [GenericApplicationContext]., +		 */, +		val env : ConfigurableEnvironment, +			get() = context.environment, +		, +++ b/spring-context/src/main/kotlin/org/springframework/context/support/BeanDefinitionDsl.kt, +	class BeanDefinitionContext(val context: GenericApplicationContext) {, +, +, +		/**, +		 * Get the [ConfigurableEnvironment] associated to the underlying [GenericApplicationContext]., +		 */, +		val env : ConfigurableEnvironment, +			get() = context.environment, +		, +++ b/spring-context/src/test/kotlin/org/springframework/context/support/BeanDefinitionDslTests.kt, +import org.springframework.core.env.SimpleCommandLinePropertySource, +			bean { FooFoo(it.env.getProperty("name")) }, +		val context = GenericApplicationContext().apply { , +			environment.propertySources.addFirst(SimpleCommandLinePropertySource("--name=foofoo")), +		}, +		val foofoo = context.getBean<FooFoo>(), +		assertEquals("foofoo", foofoo.name), +class FooFoo(val name: String)]