[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java, + * General utility methods for working with annotations and meta-annotations, + * <em>present</em> on {@link AnnotatedElement AnnotatedElements}., + *, + * <p>{@code AnnotatedElementUtils} defines the public API for Spring's, + * meta-annotation programming model with support for annotation attribute, + * overrides. If you do not need support for annotation attribute overrides,, + * consider using {@link AnnotationUtils} instead., + *, + * <p>Note that the features of this class are not provided by the JDK's, + * introspection facilities themselves., + *, + * <h3>Annotation Attribute Override Support</h3>, + * <p>Support for meta-annotations with <em>attribute overrides</em> in, + * <em>composed annotations</em> is provided by all, + * {@code getAnnotationAttributes()} and {@code findAnnotationAttributes()}, + * methods., + *, + * <h3>Find vs. Get Semantics</h3>, + * <p>The search algorithms used by methods in this class follow either, + * <em>find</em> or <em>get</em> semantics. Consult the Javadoc for each, + * individual method for details on which search algorithm is used., + *, + * <p><strong>Get semantics</strong> are limited to searching for annotations, + * that are either <em>present</em> on an {@code AnnotatedElement} (i.e.,, + * declared locally or {@linkplain java.lang.annotation.Inherited inherited}), + * or declared within the annotation hierarchy above an {@code AnnotatedElement}., + *, + * <p><strong>Find semantics</strong> are much more exhaustive, providing, + * <em>get semantics</em> plus support for the following:, + *, + * <ul>, + * <li>Searching on interfaces, if the annotated element is a class, + * <li>Searching on superclasses, if the annotated element is a class, + * <li>Resolving bridged methods, if the annotated element is a method, + * <li>Searching on methods in interfaces, if the annotated element is a method, + * <li>Searching on methods in superclasses, if the annotated element is a method, + * </ul>, + * , + * <h3>Support for {@code @Inherited}</h3>, + * <p>Methods following <em>get semantics</em> will honor the contract of, + * Java's {@link java.lang.annotation.Inherited @Inherited} annotation., + * However, methods following <em>find semantics</em> will ignore the, + * presence of {@code @Inherited} since the <em>find</em> search algorithm, + * manually traverses type and method hierarchies and thereby implicitly, + * supports annotation inheritance without the need for {@code @Inherited}., + * @see AnnotationUtils, + * @see AnnotationAttributes, + * @see BridgeMethodResolver, +	 * Get the fully qualified class names of all meta-annotation, +	 * <p>This method follows <em>get semantics</em> as described in the, +	 * {@linkplain AnnotatedElementUtils class-level Javadoc}., +	 * Get the fully qualified class names of all meta-annotation, +	 * <p>This method follows <em>get semantics</em> as described in the, +	 * {@linkplain AnnotatedElementUtils class-level Javadoc}., +				searchWithGetSemantics(annotation.annotationType(), annotationType, new SimpleAnnotationProcessor<Object>() {, +	 * <p>This method follows <em>get semantics</em> as described in the, +	 * {@linkplain AnnotatedElementUtils class-level Javadoc}., +		return Boolean.TRUE.equals(searchWithGetSemantics(element, annotationType, new SimpleAnnotationProcessor<Boolean>() {, +	 * <p>This method follows <em>get semantics</em> as described in the, +	 * {@linkplain AnnotatedElementUtils class-level Javadoc}., +	 *, +		return Boolean.TRUE.equals(searchWithGetSemantics(element, annotationType, new SimpleAnnotationProcessor<Boolean>() {, +	 * Get annotation attributes of the specified {@code annotationType}, +	 * in the annotation hierarchy of the supplied {@link AnnotatedElement}, +	 * <p>This method follows <em>get semantics</em> as described in the, +	 * {@linkplain AnnotatedElementUtils class-level Javadoc}., +	 *, +	 * Get annotation attributes of the specified {@code annotationType}, +	 * in the annotation hierarchy of the supplied {@link AnnotatedElement}, +	 * <p>This method follows <em>get semantics</em> as described in the, +	 * {@linkplain AnnotatedElementUtils class-level Javadoc}., +	 *, +		return searchWithGetSemantics(element, annotationType, new MergedAnnotationAttributesProcessor(annotationType,, +	 * Find annotation attributes of the specified {@code annotationType}, +	 * within annotation hierarchies <em>above</em> the supplied, +	 * {@link AnnotatedElement} and merge the results into an, +	 * {@link AnnotationAttributes} map., +	 * <p>This method follows <em>find semantics</em> as described in the, +	 * {@linkplain AnnotatedElementUtils class-level Javadoc}., +	 * @see #findAnnotationAttributes(AnnotatedElement, String), +	 * @see #findAnnotationAttributes(AnnotatedElement, String, boolean, boolean), +	 * Find annotation attributes of the specified {@code annotationType}, +	 * within annotation hierarchies <em>above</em> the supplied, +	 * {@link AnnotatedElement} and merge the results into an, +	 * {@link AnnotationAttributes} map., +	 * <p>This method follows <em>find semantics</em> as described in the, +	 * {@linkplain AnnotatedElementUtils class-level Javadoc}., +	 * @see #findAnnotationAttributes(AnnotatedElement, Class), +	 * @see #findAnnotationAttributes(AnnotatedElement, String, boolean, boolean), +	 * Find annotation attributes of the specified {@code annotationType}, +	 * within annotation hierarchies <em>above</em> the supplied, +	 * {@link AnnotatedElement} and merge the results into an, +	 * {@link AnnotationAttributes} map., +	 * <p>This method follows <em>find semantics</em> as described in the, +	 * {@linkplain AnnotatedElementUtils class-level Javadoc}., +	 * @see #findAnnotationAttributes(AnnotatedElement, Class), +	 * @see #findAnnotationAttributes(AnnotatedElement, String), +	 * @see #getAnnotationAttributes(AnnotatedElement, String, boolean, boolean), +	 * Find annotation attributes of the specified {@code annotationType}]