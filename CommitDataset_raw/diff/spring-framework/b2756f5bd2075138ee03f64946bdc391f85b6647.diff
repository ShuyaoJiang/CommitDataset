[+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/Assign.java, + * Copyright 2002-2018 the original author or authors., + * Represents assignment. An alternative to calling {@code setValue}, + * for an expression which indicates an assign statement., +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/Assign.java, + * Copyright 2002-2018 the original author or authors., + * Represents assignment. An alternative to calling {@code setValue}, + * for an expression which indicates an assign statement., +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java, +	protected final int pos;  // start = top 16bits, end = bottom 16bits, +	protected boolean nextChildIs(Class<?>... classes) {, +					Class<?> peerClass = peers[i + 1].getClass();, +					for (Class<?> desiredClass : classes) {, +						if (peerClass == desiredClass) {, +	 * the current expression being compiled is available in the codeflow object, e.g., +	 * including information about the type of the object currently on the stack., +	@Nullable, +	protected final <T> T getValue(ExpressionState state, Class<T> desiredReturnType) throws EvaluationException {, +		return ExpressionUtils.convertTypedValue(state.getEvaluationContext(), getValueInternal(state), desiredReturnType);, +	}, +, +	protected ValueRef getValueRef(ExpressionState state) throws EvaluationException {, +		throw new SpelEvaluationException(getStartPosition(), SpelMessage.NOT_ASSIGNABLE, toStringAST());, +	}, +]