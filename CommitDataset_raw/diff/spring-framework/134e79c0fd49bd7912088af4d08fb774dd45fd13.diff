[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/BeanFactoryUtils.java, + * Copyright 2002-2010 the original author or authors., +	 * <p><b>Note: Beans of the same name will take precedence at the 'lowest' factory level,, +	 * i.e. such beans will be returned from the lowest factory that they are being found in,, +	 * hiding corresponding beans in ancestor factories.</b> This feature allows for, +	 * 'replacing' beans by explicitly choosing the same bean name in a child factory;, +	 * the bean in the ancestor factory won't be visible then, not even for by-type lookups., +	 * <p>Does consider objects created by FactoryBeans if the "allowEagerInit" flag is set,, +	 * which means that FactoryBeans will get initialized. If the object created by the, +	 * FactoryBean doesn't match, the raw FactoryBean itself will be matched against the, +	 * type. If "allowEagerInit" is not set, only raw FactoryBeans will be checked, +	 * (which doesn't require initialization of each FactoryBean)., +	 * <p><b>Note: Beans of the same name will take precedence at the 'lowest' factory level,, +	 * i.e. such beans will be returned from the lowest factory that they are being found in,, +	 * hiding corresponding beans in ancestor factories.</b> This feature allows for, +	 * 'replacing' beans by explicitly choosing the same bean name in a child factory;, +	 * the bean in the ancestor factory won't be visible then, not even for by-type lookups., +	 * <p><b>Note: Beans of the same name will take precedence at the 'lowest' factory level,, +	 * i.e. such beans will be returned from the lowest factory that they are being found in,, +	 * hiding corresponding beans in ancestor factories.</b> This feature allows for, +	 * 'replacing' beans by explicitly choosing the same bean name in a child factory;, +	 * the bean in the ancestor factory won't be visible then, not even for by-type lookups., +	 * <p>Does consider objects created by FactoryBeans if the "allowEagerInit" flag is set,, +	 * which means that FactoryBeans will get initialized. If the object created by the, +	 * FactoryBean doesn't match, the raw FactoryBean itself will be matched against the, +	 * type. If "allowEagerInit" is not set, only raw FactoryBeans will be checked, +	 * (which doesn't require initialization of each FactoryBean)., +	 * <p><b>Note: Beans of the same name will take precedence at the 'lowest' factory level,, +	 * i.e. such beans will be returned from the lowest factory that they are being found in,, +	 * hiding corresponding beans in ancestor factories.</b> This feature allows for, +	 * 'replacing' beans by explicitly choosing the same bean name in a child factory;, +	 * the bean in the ancestor factory won't be visible then, not even for by-type lookups.]