[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.java, +						handlerMappings = new ConcurrentHashMap<>(mappings.size());, +						CollectionUtils.mergePropertiesIntoMap(mappings, handlerMappings);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.java, +						handlerMappings = new ConcurrentHashMap<>(mappings.size());, +						CollectionUtils.mergePropertiesIntoMap(mappings, handlerMappings);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/PluggableSchemaResolver.java, +						schemaMappings = new ConcurrentHashMap<>(mappings.size());, +						CollectionUtils.mergePropertiesIntoMap(mappings, schemaMappings);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.java, +						handlerMappings = new ConcurrentHashMap<>(mappings.size());, +						CollectionUtils.mergePropertiesIntoMap(mappings, handlerMappings);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/PluggableSchemaResolver.java, +						schemaMappings = new ConcurrentHashMap<>(mappings.size());, +						CollectionUtils.mergePropertiesIntoMap(mappings, schemaMappings);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.java, +	 * Determine the validation mode for the specified {@link Resource}., +	 * If no explicit validation mode has been configured, then the validation, +	 * mode gets {@link #detectValidationMode detected} from the given resource., +	 * @see #detectValidationMode, +	 * Detect which kind of validation to perform on the XML file identified, +	 * <p>The default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}., +	 * @see DefaultNamespaceHandlerResolver#DefaultNamespaceHandlerResolver(ClassLoader)]