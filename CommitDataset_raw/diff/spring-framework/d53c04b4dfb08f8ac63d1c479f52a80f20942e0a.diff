[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +	/**, +	 * Override this method to extend or modify the list of converters after it, +	 * has been configured. This may be useful for example to allow default, +	 * converters to be registered and then insert a custom converter through, +	 * this method., +	 * @param converters the list of configured converters to extend., +	 * @since 4.1.3, +	 */, +		extendHandlerExceptionResolvers(exceptionResolvers);, +	 * Override this method to extend or modify the list of, +	 * {@link HandlerExceptionResolver}s after it has been configured. This may, +	 * be useful for example to allow default resolvers to be registered and then, +	 * insert a custom one through this method., +	 * @param exceptionResolvers the list of configured resolvers to extend., +	 * @since 4.3.1, +	 */, +	protected void extendHandlerExceptionResolvers(List<HandlerExceptionResolver> exceptionResolvers) {, +	}, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +	/**, +	 * Override this method to extend or modify the list of converters after it, +	 * has been configured. This may be useful for example to allow default, +	 * converters to be registered and then insert a custom converter through, +	 * this method., +	 * @param converters the list of configured converters to extend., +	 * @since 4.1.3, +	 */, +		extendHandlerExceptionResolvers(exceptionResolvers);, +	 * Override this method to extend or modify the list of, +	 * {@link HandlerExceptionResolver}s after it has been configured. This may, +	 * be useful for example to allow default resolvers to be registered and then, +	 * insert a custom one through this method., +	 * @param exceptionResolvers the list of configured resolvers to extend., +	 * @since 4.3.1, +	 */, +	protected void extendHandlerExceptionResolvers(List<HandlerExceptionResolver> exceptionResolvers) {, +	}, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.java, + * Copyright 2002-2016 the original author or authors., +	 * A hook for extending or modifying the list of, +	 * {@link HandlerExceptionResolver}s after it has been configured. This may, +	 * be useful for example to allow default resolvers to be registered and then, +	 * insert a custom one through this method., +	 * @param exceptionResolvers the list of configured resolvers to extend., +	 * @since 4.3.1, +	 */, +	void extendHandlerExceptionResolvers(List<HandlerExceptionResolver> exceptionResolvers);, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +	/**, +	 * Override this method to extend or modify the list of converters after it, +	 * has been configured. This may be useful for example to allow default, +	 * converters to be registered and then insert a custom converter through, +	 * this method., +	 * @param converters the list of configured converters to extend., +	 * @since 4.1.3, +	 */, +		extendHandlerExceptionResolvers(exceptionResolvers);, +	 * Override this method to extend or modify the list of, +	 * {@link HandlerExceptionResolver}s after it has been configured. This may, +	 * be useful for example to allow default resolvers to be registered and then, +	 * insert a custom one through this method., +	 * @param exceptionResolvers the list of configured resolvers to extend., +	 * @since 4.3.1, +	 */, +	protected void extendHandlerExceptionResolvers(List<HandlerExceptionResolver> exceptionResolvers) {, +	}, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.java, + * Copyright 2002-2016 the original author or authors., +	 * A hook for extending or modifying the list of, +	 * {@link HandlerExceptionResolver}s after it has been configured. This may, +	 * be useful for example to allow default resolvers to be registered and then, +	 * insert a custom one through this method., +	 * @param exceptionResolvers the list of configured resolvers to extend., +	 * @since 4.3.1, +	 */, +	void extendHandlerExceptionResolvers(List<HandlerExceptionResolver> exceptionResolvers);, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.java, +	public void extendHandlerExceptionResolvers(List<HandlerExceptionResolver> exceptionResolvers) {, +	}, +, +	/**, +	 * {@inheritDoc}, +	 * <p>This implementation is empty., +	 */, +	@Override, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +	/**, +	 * Override this method to extend or modify the list of converters after it, +	 * has been configured. This may be useful for example to allow default]