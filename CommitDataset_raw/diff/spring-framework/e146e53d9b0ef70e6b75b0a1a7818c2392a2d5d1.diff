[+++ b/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java, + * Copyright 2002-2013 the original author or authors., +import org.springframework.beans.factory.BeanNameAware;, +public class JmsMessageEndpointManager extends GenericMessageEndpointManager implements BeanNameAware {, +	/**, +	 * Set the name of this message endpoint. Populated with the bean name, +	 * automatically when defined within Spring's bean factory., +	 */, +	@Override, +	public void setBeanName(String beanName) {, +		this.endpointFactory.setBeanName(beanName);, +	}, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java, + * Copyright 2002-2013 the original author or authors., +import org.springframework.beans.factory.BeanNameAware;, +public class JmsMessageEndpointManager extends GenericMessageEndpointManager implements BeanNameAware {, +	/**, +	 * Set the name of this message endpoint. Populated with the bean name, +	 * automatically when defined within Spring's bean factory., +	 */, +	@Override, +	public void setBeanName(String beanName) {, +		this.endpointFactory.setBeanName(beanName);, +	}, +++ b/spring-tx/src/main/java/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.java, + * Copyright 2002-2013 the original author or authors., +import org.springframework.beans.factory.BeanNameAware;, + * Abstract base implementation of the JCA 1.5/1.6/1.7, +public abstract class AbstractMessageEndpointFactory implements MessageEndpointFactory, BeanNameAware {, +	private String beanName;, +, +	/**, +	 * Set the name of this message endpoint. Populated with the bean name, +	 * automatically when defined within Spring's bean factory., +	 */, +	@Override, +	public void setBeanName(String beanName) {, +		this.beanName = beanName;, +	}, +, +, +	/**, +	 * Implementation of the JCA 1.7 {@code #getActivationName()} method,, +	 * returning the bean name as set on this MessageEndpointFactory., +	 * @see #setBeanName, +	 */, +	public String getActivationName() {, +		return this.beanName;, +	}, +	protected abstract AbstractMessageEndpoint createEndpointInternal() throws UnavailableException;]