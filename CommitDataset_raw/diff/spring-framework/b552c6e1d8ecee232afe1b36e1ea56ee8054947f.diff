[+++ b/spring-orm/src/main/java/org/springframework/orm/jpa/SharedEntityManagerCreator.java, +, + * @author Oliver Gierke, +	private static final Class<?>[] NO_ENTITY_MANAGER_INTERFACES = new Class<?>[0];, +, +, +		Class<?> entityManagerInterface = (emf instanceof EntityManagerFactoryInfo ?, +		return createSharedEntityManager(emf, properties, synchronizedWithTransaction, , +				(entityManagerInterface == null ? NO_ENTITY_MANAGER_INTERFACES : , +					new Class<?>[] { entityManagerInterface }));, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/SharedEntityManagerCreator.java, +, + * @author Oliver Gierke, +	private static final Class<?>[] NO_ENTITY_MANAGER_INTERFACES = new Class<?>[0];, +, +, +		Class<?> entityManagerInterface = (emf instanceof EntityManagerFactoryInfo ?, +		return createSharedEntityManager(emf, properties, synchronizedWithTransaction, , +				(entityManagerInterface == null ? NO_ENTITY_MANAGER_INTERFACES : , +					new Class<?>[] { entityManagerInterface }));, +++ b/spring-orm/src/test/java/org/springframework/orm/jpa/SharedEntityManagerCreatorTests.java, +/*, + * Copyright 2002-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.orm.jpa;, +, +import javax.persistence.EntityManagerFactory;, +, +import org.junit.Test;, +, +import static org.hamcrest.CoreMatchers.*;, +import static org.junit.Assert.*;, +import static org.mockito.Mockito.*;, +, +/**, + * Unit tests for {@link SharedEntityManagerCreator}., + * , + * @author Oliver Gierke, + */, +public class SharedEntityManagerCreatorTests {, +, +	@Test, +	public void proxyingWorksIfInfoReturnsNullEntityManagerInterface() {, +		EntityManagerFactory emf = mock(EntityManagerFactory.class,, +				withSettings().extraInterfaces(EntityManagerFactoryInfo.class));, +		// EntityManagerFactoryInfo.getEntityManagerInterface returns null, +		assertThat(SharedEntityManagerCreator.createSharedEntityManager(emf),, +				is(notNullValue()));, +	}, +, +}]