[+++ b/spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java, +			String message = (ex.getMessage() != null ? ex.getMessage() : "Illegal argument");, +			throw new IllegalStateException(getInvocationErrorMessage(message, args), ex);, +++ b/spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java, +			String message = (ex.getMessage() != null ? ex.getMessage() : "Illegal argument");, +			throw new IllegalStateException(getInvocationErrorMessage(message, args), ex);, +++ b/spring-web/src/test/java/org/springframework/web/method/support/InvocableHandlerMethodTests.java, + * Copyright 2002-2016 the original author or authors., +import static org.hamcrest.Matchers.containsString;, +	// SPR-13917, +, +	@Test, +	public void invocationErrorMessage() throws Exception {, +		HandlerMethodArgumentResolverComposite composite = new HandlerMethodArgumentResolverComposite();, +		composite.addResolver(new StubArgumentResolver(double.class, null));, +, +		Method method = Handler.class.getDeclaredMethod("handle", double.class);, +		Object handler = new Handler();, +		InvocableHandlerMethod hm = new InvocableHandlerMethod(handler, method);, +		hm.setHandlerMethodArgumentResolvers(composite);, +, +		try {, +			hm.invokeForRequest(this.webRequest, new ModelAndViewContainer());, +			fail();, +		}, +		catch (IllegalStateException ex) {, +			assertThat(ex.getMessage(), containsString("Illegal argument"));, +		}, +	}, +, +, +, +		public void handle(double amount) {, +		}]