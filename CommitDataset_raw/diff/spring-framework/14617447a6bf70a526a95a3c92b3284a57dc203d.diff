[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AutowireCapableBeanFactory.java, +	Object createBean(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException;, +	Object autowire(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AutowireCapableBeanFactory.java, +	Object createBean(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException;, +	Object autowire(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +	public void ignoreDependencyType(Class<?> type) {, +	public void ignoreDependencyInterface(Class<?> ifc) {, +	public Object createBean(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException {, +	public Object autowire(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException {, +		Class<?> beanType = (instanceWrapper != null ? instanceWrapper.getWrappedClass() : null);, +					Class<?> predicted = ibp.predictBeanType(targetType, beanName);, +	protected void applyMergedBeanDefinitionPostProcessors(RootBeanDefinition mbd, Class<?> beanType, String beanName), +	protected Object applyBeanPostProcessorsBeforeInstantiation(Class<?> beanClass, String beanName), +		Class<?> beanClass = resolveBeanClass(mbd, beanName);, +	protected Constructor[] determineConstructorsFromBeanPostProcessors(Class<?> beanClass, String beanName), +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AutowireCapableBeanFactory.java, +	Object createBean(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException;, +	Object autowire(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +	public void ignoreDependencyType(Class<?> type) {, +	public void ignoreDependencyInterface(Class<?> ifc) {, +	public Object createBean(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException {, +	public Object autowire(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException {, +		Class<?> beanType = (instanceWrapper != null ? instanceWrapper.getWrappedClass() : null);, +					Class<?> predicted = ibp.predictBeanType(targetType, beanName);, +	protected void applyMergedBeanDefinitionPostProcessors(RootBeanDefinition mbd, Class<?> beanType, String beanName), +	protected Object applyBeanPostProcessorsBeforeInstantiation(Class<?> beanClass, String beanName), +		Class<?> beanClass = resolveBeanClass(mbd, beanName);, +	protected Constructor[] determineConstructorsFromBeanPostProcessors(Class<?> beanClass, String beanName), +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/RootBeanDefinition.java, +	public RootBeanDefinition(Class<?> beanClass) {, +	public RootBeanDefinition(Class<?> beanClass, int autowireMode, boolean dependencyCheck) {, +	public RootBeanDefinition(Class<?> beanClass, ConstructorArgumentValues cargs, MutablePropertyValues pvs) {]