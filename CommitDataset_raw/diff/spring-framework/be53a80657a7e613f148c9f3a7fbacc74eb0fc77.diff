[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +import test.aspect.PerTargetAspect;, +import test.aspect.TwoAdviceAspect;, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +import test.aspect.PerTargetAspect;, +import test.aspect.TwoAdviceAspect;, +, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AspectJPointcutAdvisorTests.java, +import test.aspect.PerTargetAspect;, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +import test.aspect.PerTargetAspect;, +import test.aspect.TwoAdviceAspect;, +, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AspectJPointcutAdvisorTests.java, +import test.aspect.PerTargetAspect;, +, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AspectMetadataTests.java, +import test.aspect.PerTargetAspect;, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +import test.aspect.PerTargetAspect;, +import test.aspect.TwoAdviceAspect;, +, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AspectJPointcutAdvisorTests.java, +import test.aspect.PerTargetAspect;, +, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AspectMetadataTests.java, +import test.aspect.PerTargetAspect;, +, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AspectProxyFactoryTests.java, +import test.aspect.PerThisAspect;, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +import test.aspect.PerTargetAspect;, +import test.aspect.TwoAdviceAspect;, +, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AspectJPointcutAdvisorTests.java, +import test.aspect.PerTargetAspect;, +, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AspectMetadataTests.java, +import test.aspect.PerTargetAspect;, +, +++ b/org.springframework.aop/src/test/java/org/springframework/aop/aspectj/annotation/AspectProxyFactoryTests.java, +import test.aspect.PerThisAspect;, +, +++ b/org.springframework.aop/src/test/java/test/aspect/PerTargetAspect.java, +/**, + * , + */, +package test.aspect;, +, +import org.aspectj.lang.annotation.Around;, +import org.aspectj.lang.annotation.Aspect;, +import org.aspectj.lang.annotation.Before;, +import org.springframework.core.Ordered;, +, +@Aspect("pertarget(execution(* *.getSpouse()))"), +public class PerTargetAspect implements Ordered {, +, +	public int count;, +, +	private int order = Ordered.LOWEST_PRECEDENCE;, +, +	@Around("execution(int *.getAge())"), +	public int returnCountAsAge() {, +		return count++;, +	}, +, +	@Before("execution(void *.set*(int))"), +	public void countSetter() {, +		++count;, +	}, +, +	public int getOrder() {, +		return this.order;, +	}, +]