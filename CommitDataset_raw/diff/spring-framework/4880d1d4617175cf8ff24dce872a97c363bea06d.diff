[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +							if (logger.isDebugEnabled()) {, +								MediaType contentType = outputMessage.getHeaders().getContentType();, +								if (contentType == null) {, +									contentType = acceptedMediaType;, +								}, +								logger.debug("Written [" + returnValue + "] as \"" + contentType +, +										"\" using [" + messageConverter + "]");, +							}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +							if (logger.isDebugEnabled()) {, +								MediaType contentType = outputMessage.getHeaders().getContentType();, +								if (contentType == null) {, +									contentType = acceptedMediaType;, +								}, +								logger.debug("Written [" + returnValue + "] as \"" + contentType +, +										"\" using [" + messageConverter + "]");, +							}, +++ b/org.springframework.web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.java, +					if (logger.isDebugEnabled()) {, +						logger.debug("Reading [" + paramType.getName() + "] as \"" + contentType, +								+"\" using [" + messageConverter + "]");, +					}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +							if (logger.isDebugEnabled()) {, +								MediaType contentType = outputMessage.getHeaders().getContentType();, +								if (contentType == null) {, +									contentType = acceptedMediaType;, +								}, +								logger.debug("Written [" + returnValue + "] as \"" + contentType +, +										"\" using [" + messageConverter + "]");, +							}, +++ b/org.springframework.web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.java, +					if (logger.isDebugEnabled()) {, +						logger.debug("Reading [" + paramType.getName() + "] as \"" + contentType, +								+"\" using [" + messageConverter + "]");, +					}, +++ b/org.springframework.web/src/main/java/org/springframework/web/client/HttpMessageConverterExtractor.java, + * Copyright 2002-2010 the original author or authors., +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +, +	private final Log logger;, +, +		this(responseType, messageConverters, LogFactory.getLog(HttpMessageConverterExtractor.class));, +	}, +, +	HttpMessageConverterExtractor(Class<T> responseType, List<HttpMessageConverter<?>> messageConverters, Log logger) {, +		this.logger = logger;, +				if (logger.isDebugEnabled()) {, +					logger.debug("Reading [" + responseType.getName() + "] as \"" + contentType, +							+"\" using [" + messageConverter + "]");, +				}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +							if (logger.isDebugEnabled()) {, +								MediaType contentType = outputMessage.getHeaders().getContentType();, +								if (contentType == null) {, +									contentType = acceptedMediaType;, +								}, +								logger.debug("Written [" + returnValue + "] as \"" + contentType +, +										"\" using [" + messageConverter + "]");, +							}, +++ b/org.springframework.web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.java, +					if (logger.isDebugEnabled()) {, +						logger.debug("Reading [" + paramType.getName() + "] as \"" + contentType, +								+"\" using [" + messageConverter + "]");, +					}, +++ b/org.springframework.web/src/main/java/org/springframework/web/client/HttpMessageConverterExtractor.java, + * Copyright 2002-2010 the original author or authors., +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +, +	private final Log logger;, +, +		this(responseType, messageConverters, LogFactory.getLog(HttpMessageConverterExtractor.class));, +	}, +, +	HttpMessageConverterExtractor(Class<T> responseType, List<HttpMessageConverter<?>> messageConverters, Log logger) {, +		this.logger = logger;, +				if (logger.isDebugEnabled()) {, +					logger.debug("Reading [" + responseType.getName() + "] as \"" + contentType, +							+"\" using [" + messageConverter + "]");, +				}, +++ b/org.springframework.web/src/main/java/org/springframework/web/client/RestTemplate.java, +				new HttpMessageConverterExtractor<T>(responseType, getMessageConverters(), logger);, +				new HttpMessageConverterExtractor<T>(responseType, getMessageConverters(), logger);, +				new HttpMessageConverterExtractor<T>(responseType, getMessageConverters(), logger);, +				new HttpMessageConverterExtractor<T>(responseType, getMessageConverters(), logger);, +				new HttpMessageConverterExtractor<T>(responseType, getMessageConverters(), logger);, +					if (logger.isDebugEnabled()) {, +						logger.debug("Setting request Accept header to " + allSupportedMediaTypes);, +					}, +						if (logger.isDebugEnabled()) {, +							if (requestContentType != null) {, +								logger.debug("Writing [" + requestBody + "] as \"" + requestContentType + , +										"\" using [" + messageConverter + "]");, +							}, +							else {, +								logger.debug("Writing [" + requestBody + "] using [" + messageConverter + "]");, +							}]