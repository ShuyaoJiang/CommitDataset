[+++ b/org.springframework.context/src/test/java/org/springframework/aop/aspectj/autoproxy/AspectJAutoProxyCreatorTests.java, +		long totalTimeMillis = sw.getTotalTimeMillis();, +		// System.out.println(totalTimeMillis);, +		// How was it decided that 4 seconds is a reasonable maximum time?, +		int maxTimeMillis = 5000; // 4000;, +		assertTrue("Prototype creation took too long: " + totalTimeMillis, totalTimeMillis < maxTimeMillis);, +		long totalTimeMillis = sw.getTotalTimeMillis();, +		// System.out.println(totalTimeMillis);, +		// How was it decided that 3 seconds is a reasonable maximum time?, +		int maxTimeMillis = 3000;, +		assertTrue("Prototype creation took too long: " + totalTimeMillis, totalTimeMillis < maxTimeMillis);, +		new XmlBeanDefinitionReader(ac).loadBeanDefinitions(new ClassPathResource(qName("aspectsPlusAdvisor.xml"),, +				getClass()));, +		long totalTimeMillis = sw.getTotalTimeMillis();, +		// System.out.println(totalTimeMillis);, +		// How was it decided that 4 seconds is a reasonable maximum time?, +		int maxTimeMillis = 5000; // 4000;, +		assertTrue("Singleton creation took too long: " + totalTimeMillis, totalTimeMillis < maxTimeMillis);, +		bd.getPropertyValues().addPropertyValue(new PropertyValue("name", "Adrian")).addPropertyValue(, +				new PropertyValue("age", new Integer(34)));, +		childAc.registerBeanDefinition(AnnotationAwareAspectJAutoProxyCreator.class.getName(), new RootBeanDefinition(, +				AnnotationAwareAspectJAutoProxyCreator.class));, +	public void methodExecution() {, +	}, +				} catch (RetryableException e) {, +			} catch (RetryableException re) {]