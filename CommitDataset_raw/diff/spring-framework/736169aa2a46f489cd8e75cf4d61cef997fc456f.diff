[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/support/RequestContextUtils.java, + * Copyright 2002-2009 the original author or authors., +			webApplicationContext = WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/support/RequestContextUtils.java, + * Copyright 2002-2009 the original author or authors., +			webApplicationContext = WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/tiles2/AbstractSpringPreparerFactory.java, + * Copyright 2002-2009 the original author or authors., +import org.apache.tiles.servlet.context.ServletTilesRequestContext;, +import org.springframework.web.context.support.WebApplicationContextUtils;, +import org.springframework.web.servlet.DispatcherServlet;, +		WebApplicationContext webApplicationContext = (WebApplicationContext) context.getRequestScope().get(, +				DispatcherServlet.WEB_APPLICATION_CONTEXT_ATTRIBUTE);, +		if (webApplicationContext == null) {, +			/* as of Tiles 2.1:, +			webApplicationContext = (WebApplicationContext) context.getApplicationContext().getApplicationScope().get(, +					WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);, +			if (webApplicationContext == null) {, +				throw new IllegalStateException("No WebApplicationContext found: no ContextLoaderListener registered?");, +			*/, +			if (!(context instanceof ServletTilesRequestContext)) {, +				throw new IllegalStateException(, +						 getClass().getSimpleName() + " requires a ServletTilesRequestContext to operate on");, +			ServletTilesRequestContext servletRequestContext = (ServletTilesRequestContext) context;, +			webApplicationContext = WebApplicationContextUtils.getRequiredWebApplicationContext(, +					servletRequestContext.getServletContext());, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/support/RequestContextUtils.java, + * Copyright 2002-2009 the original author or authors., +			webApplicationContext = WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/tiles2/AbstractSpringPreparerFactory.java, + * Copyright 2002-2009 the original author or authors., +import org.apache.tiles.servlet.context.ServletTilesRequestContext;, +import org.springframework.web.context.support.WebApplicationContextUtils;, +import org.springframework.web.servlet.DispatcherServlet;, +		WebApplicationContext webApplicationContext = (WebApplicationContext) context.getRequestScope().get(, +				DispatcherServlet.WEB_APPLICATION_CONTEXT_ATTRIBUTE);, +		if (webApplicationContext == null) {, +			/* as of Tiles 2.1:, +			webApplicationContext = (WebApplicationContext) context.getApplicationContext().getApplicationScope().get(, +					WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);, +			if (webApplicationContext == null) {, +				throw new IllegalStateException("No WebApplicationContext found: no ContextLoaderListener registered?");, +			*/, +			if (!(context instanceof ServletTilesRequestContext)) {, +				throw new IllegalStateException(, +						 getClass().getSimpleName() + " requires a ServletTilesRequestContext to operate on");, +			ServletTilesRequestContext servletRequestContext = (ServletTilesRequestContext) context;, +			webApplicationContext = WebApplicationContextUtils.getRequiredWebApplicationContext(, +					servletRequestContext.getServletContext());, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/tiles2/SpringBeanPreparerFactory.java, + * Copyright 2002-2009 the original author or authors., +		return context.getBean(name, ViewPreparer.class);]