[+++ b/spring-test/src/test/java/org/springframework/test/web/servlet/result/JsonPathResultMatchersTests.java, + * @author Sam Brannen, +	private static final String RESPONSE_CONTENT = "{\"foo\": \"bar\", \"qux\": [\"baz\"], \"emptyArray\": [], \"icanhaz\": true, \"howmanies\": 5, \"cheeseburger\": {\"pickles\": true} }";, +, +	private static final StubMvcResult stubMvcResult;, +, +	static {, +		try {, +			MockHttpServletResponse response = new MockHttpServletResponse();, +			response.addHeader("Content-Type", "application/json");, +			response.getWriter().print(new String(RESPONSE_CONTENT.getBytes("ISO-8859-1")));, +			stubMvcResult = new StubMvcResult(null, null, null, null, null, null, response);, +		}, +		catch (Exception e) {, +			throw new IllegalStateException(e);, +		}, +	}, +, +, +		new JsonPathResultMatchers("$.foo").value("bar").match(stubMvcResult);, +		new JsonPathResultMatchers("$.foo").value("bogus").match(stubMvcResult);, +	public void valueWithMatcher() throws Exception {, +		new JsonPathResultMatchers("$.foo").value(Matchers.equalTo("bar")).match(stubMvcResult);, +	public void valueWithMatcherNoMatch() throws Exception {, +		new JsonPathResultMatchers("$.foo").value(Matchers.equalTo("bogus")).match(stubMvcResult);, +		new JsonPathResultMatchers("$.foo").exists().match(stubMvcResult);, +		new JsonPathResultMatchers("$.bogus").exists().match(stubMvcResult);, +		new JsonPathResultMatchers("$.bogus").doesNotExist().match(stubMvcResult);, +		new JsonPathResultMatchers("$.foo").doesNotExist().match(stubMvcResult);, +	public void isArray() throws Exception {, +		new JsonPathResultMatchers("$.qux").isArray().match(stubMvcResult);, +	}, +		new JsonPathResultMatchers("$.bar").isArray().match(stubMvcResult);, +	public void isBoolean() throws Exception {, +		new JsonPathResultMatchers("$.icanhaz").isBoolean().match(stubMvcResult);, +		new JsonPathResultMatchers("$.foo").isBoolean().match(stubMvcResult);, +	public void isNumber() throws Exception {, +		new JsonPathResultMatchers("$.howmanies").isNumber().match(stubMvcResult);, +		new JsonPathResultMatchers("$.foo").isNumber().match(stubMvcResult);, +	public void isMap() throws Exception {, +		new JsonPathResultMatchers("$.cheeseburger").isMap().match(stubMvcResult);, +		new JsonPathResultMatchers("$.foo").isMap().match(stubMvcResult);, +	public void isString() throws Exception {, +		new JsonPathResultMatchers("$.foo").isString().match(stubMvcResult);, +		new JsonPathResultMatchers("$.qux").isString().match(stubMvcResult);]