[+++ b/spring-test/src/main/java/org/springframework/test/context/TestContext.java, +import java.util.function.Function;, +import org.springframework.context.ApplicationEvent;, +	 * Publish the {@link ApplicationEvent} created by the given {@code eventFactory}, +	 * to the {@linkplain ApplicationContext application context} for this, +	 * test context., +	 * <p>The {@code ApplicationEvent} will only be published if the application, +	 * context for this test context {@linkplain #hasApplicationContext() is available}., +	 * @param eventFactory factory for lazy creation of the {@code ApplicationEvent}, +	 * @since 5.2, +	 * @see #hasApplicationContext(), +	 * @see #getApplicationContext(), +	 */, +	default void publishEvent(Function<TestContext, ? extends ApplicationEvent> eventFactory) {, +		if (hasApplicationContext()) {, +			getApplicationContext().publishEvent(eventFactory.apply(this));, +		}, +	}, +, +	/**, +++ b/spring-test/src/main/java/org/springframework/test/context/TestContext.java, +import java.util.function.Function;, +import org.springframework.context.ApplicationEvent;, +	 * Publish the {@link ApplicationEvent} created by the given {@code eventFactory}, +	 * to the {@linkplain ApplicationContext application context} for this, +	 * test context., +	 * <p>The {@code ApplicationEvent} will only be published if the application, +	 * context for this test context {@linkplain #hasApplicationContext() is available}., +	 * @param eventFactory factory for lazy creation of the {@code ApplicationEvent}, +	 * @since 5.2, +	 * @see #hasApplicationContext(), +	 * @see #getApplicationContext(), +	 */, +	default void publishEvent(Function<TestContext, ? extends ApplicationEvent> eventFactory) {, +		if (hasApplicationContext()) {, +			getApplicationContext().publishEvent(eventFactory.apply(this));, +		}, +	}, +, +	/**, +++ b/spring-test/src/main/java/org/springframework/test/context/event/EventPublishingTestExecutionListener.java, +		testContext.publishEvent(BeforeTestClassEvent::new);, +		testContext.publishEvent(PrepareTestInstanceEvent::new);, +		testContext.publishEvent(BeforeTestMethodEvent::new);, +		testContext.publishEvent(BeforeTestExecutionEvent::new);, +		testContext.publishEvent(AfterTestExecutionEvent::new);, +		testContext.publishEvent(AfterTestMethodEvent::new);, +		testContext.publishEvent(AfterTestClassEvent::new);, +++ b/spring-test/src/main/java/org/springframework/test/context/TestContext.java, +import java.util.function.Function;, +import org.springframework.context.ApplicationEvent;, +	 * Publish the {@link ApplicationEvent} created by the given {@code eventFactory}, +	 * to the {@linkplain ApplicationContext application context} for this, +	 * test context., +	 * <p>The {@code ApplicationEvent} will only be published if the application, +	 * context for this test context {@linkplain #hasApplicationContext() is available}., +	 * @param eventFactory factory for lazy creation of the {@code ApplicationEvent}, +	 * @since 5.2, +	 * @see #hasApplicationContext(), +	 * @see #getApplicationContext(), +	 */, +	default void publishEvent(Function<TestContext, ? extends ApplicationEvent> eventFactory) {, +		if (hasApplicationContext()) {, +			getApplicationContext().publishEvent(eventFactory.apply(this));, +		}, +	}, +, +	/**, +++ b/spring-test/src/main/java/org/springframework/test/context/event/EventPublishingTestExecutionListener.java, +		testContext.publishEvent(BeforeTestClassEvent::new);, +		testContext.publishEvent(PrepareTestInstanceEvent::new);, +		testContext.publishEvent(BeforeTestMethodEvent::new);, +		testContext.publishEvent(BeforeTestExecutionEvent::new);, +		testContext.publishEvent(AfterTestExecutionEvent::new);, +		testContext.publishEvent(AfterTestMethodEvent::new);, +		testContext.publishEvent(AfterTestClassEvent::new);, +++ b/spring-test/src/test/java/org/springframework/test/context/event/CustomTestEventTests.java, +/*, + * Copyright 2002-2019 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      https://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.test.context.event;, +, +import java.lang.reflect.Method;, +import java.util.ArrayList;, +import java.util.List;, +, +import org.junit.Before;]