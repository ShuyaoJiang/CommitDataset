[+++ b/org.springframework.beans/src/test/java/org/springframework/beans/BeanWrapperTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +, +import org.junit.Ignore;, +import org.springframework.core.convert.support.DefaultConversionService;, +import test.beans.BooleanTestBean;, +import test.beans.ITestBean;, +import test.beans.IndexedTestBean;, +import test.beans.NumberTestBean;, +import test.beans.TestBean;, +, +	@Ignore, +	public void testNullNestedTypeDescriptor() {, +		Foo foo = new Foo();, +		BeanWrapperImpl wrapper = new BeanWrapperImpl(foo);, +		wrapper.setConversionService(new DefaultConversionService());, +		wrapper.setAutoGrowNestedPaths(true);, +		wrapper.setPropertyValue("listOfMaps[0]['luckyNumber']", "9");, +		assertEquals(9, foo.listOfMaps.get(0).get("luckyNumber"));, +	}, +	, +	static class Foo {, +		, +		private List<Map> listOfMaps;, +, +		public List<Map> getListOfMaps() {, +			return listOfMaps;, +		}, +, +		public void setListOfMaps(List<Map> listOfMaps) {, +			this.listOfMaps = listOfMaps;, +		}, +, +	}, +	, +	@Test, +++ b/org.springframework.beans/src/test/java/org/springframework/beans/BeanWrapperTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +, +import org.junit.Ignore;, +import org.springframework.core.convert.support.DefaultConversionService;, +import test.beans.BooleanTestBean;, +import test.beans.ITestBean;, +import test.beans.IndexedTestBean;, +import test.beans.NumberTestBean;, +import test.beans.TestBean;, +, +	@Ignore, +	public void testNullNestedTypeDescriptor() {, +		Foo foo = new Foo();, +		BeanWrapperImpl wrapper = new BeanWrapperImpl(foo);, +		wrapper.setConversionService(new DefaultConversionService());, +		wrapper.setAutoGrowNestedPaths(true);, +		wrapper.setPropertyValue("listOfMaps[0]['luckyNumber']", "9");, +		assertEquals(9, foo.listOfMaps.get(0).get("luckyNumber"));, +	}, +	, +	static class Foo {, +		, +		private List<Map> listOfMaps;, +, +		public List<Map> getListOfMaps() {, +			return listOfMaps;, +		}, +, +		public void setListOfMaps(List<Map> listOfMaps) {, +			this.listOfMaps = listOfMaps;, +		}, +, +	}, +	, +	@Test, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionService.java, +	 * @throws IllegalArgumentException if targetType is null, +	 * @throws IllegalArgumentException if targetType is null, +	 * @throws IllegalArgumentException if targetType is null, +	 * @see TypeDescriptor#forObject(Object), +	 * @param sourceType context about the source type converting from (may be null if source is null), +	 * @throws IllegalArgumentException if targetType is null, +	 * @throws IllegalArgumentException if sourceType is null but source is not null, +	 * @see TypeDescriptor#forObject(Object), +++ b/org.springframework.beans/src/test/java/org/springframework/beans/BeanWrapperTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +, +import org.junit.Ignore;]