[+++ b/spring-web/src/main/java/org/springframework/http/ResponseEntity.java, + * Copyright 2002-2014 the original author or authors., +import java.net.URI;, +import java.util.Arrays;, +import java.util.HashSet;, +import java.util.Set;, +, + * Used in {@code RestTemplate} as well {@code @Controller} methods., + * <p>In {@code RestTemplate}, this class is returned by, + * {@link org.springframework.web.client.RestTemplate#getForEntity getForEntity()} and, + * {@link org.springframework.web.client.RestTemplate#exchange exchange()}:, + *, + * <p>Can also be used in Spring MVC, as the return value from a @Controller method:, + *   URI location = ...;, + *   responseHeaders.setLocation(location);, + * Or, by using the static convenience methods:, + * <pre class="code">, + * &#64;RequestMapping("/handle"), + * public ResponseEntity&lt;String&gt; handle() {, + *   URI location = ...;, + *   return ResponseEntity.created(location).header("MyResponseHeader", "MyValue").body("Hello World");, + * }, + * </pre>, +	// Static builder methods, +, +	/**, +	 * Creates a new response entity builder with the given status., +	 * @param status the response status, +	 * @return the new response entity builder, +	 */, +	public static BodyBuilder status(HttpStatus status) {, +		return new DefaultBuilder(status);, +	}, +, +	/**, +	 * Creates a new response entity builder with the given status., +	 * @param status the response status, +	 * @return the new response entity builder, +	 */, +	public static BodyBuilder status(int status) {, +		return status(HttpStatus.valueOf(status));, +	}, +, +	/**, +	 * Creates a new response entity builder with the status set to, +	 * {@linkplain HttpStatus#OK OK}., +	 * @return the new response entity builder, +	 */, +	public static BodyBuilder ok() {, +		return status(HttpStatus.OK);, +	}, +, +	/**, +	 * Creates a new response entity with the given body and the status set to, +	 * {@linkplain HttpStatus#OK OK}., +	 * @return the new response entity, +	 */, +	public static <T> ResponseEntity<T> ok(T body) {, +		BodyBuilder builder = ok();, +		return builder.body(body);, +	}, +, +	/**, +	 * Creates a new response entity builder with a, +	 * {@linkplain HttpStatus#CREATED CREATED} status and a location header set to the, +	 * given URI., +	 * @param location the location URI, +	 * @return the new response entity builder, +	 */, +	public static BodyBuilder created(URI location) {, +		BodyBuilder builder = status(HttpStatus.CREATED);, +		return builder.location(location);, +	}, +, +	/**, +	 * Creates a new response entity builder with an, +	 * {@link HttpStatus#ACCEPTED ACCEPTED} status., +	 * @return the new response entity builder, +	 */, +	public static BodyBuilder accepted() {, +		return status(HttpStatus.ACCEPTED);, +	}, +, +	/**, +	 * Creates a new response entity builder with an, +	 * {@link HttpStatus#NO_CONTENT NO_CONTENT} status., +	 * @return the new response entity builder, +	 */, +	public static HeadersBuilder<?> noContent() {, +		return status(HttpStatus.NO_CONTENT);, +	}, +, +, +	/**, +	 * Defines a builder that adds headers to the response entity., +	 * @param <B> the builder subclass, +	 */, +	public interface HeadersBuilder<B extends HeadersBuilder<B>> {, +, +		/**]