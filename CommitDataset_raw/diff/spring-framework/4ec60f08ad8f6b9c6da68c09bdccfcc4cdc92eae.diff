[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/PrintingResultHandler.java, +		if (session != null) {, +			Enumeration<String> attrNames = session.getAttributeNames();, +			if (attrNames != null) {, +				return Collections.list(attrNames).stream()., +						collect(Collectors.toMap(n -> n, session::getAttribute));, +			}, +		}, +		return Collections.emptyMap();, +	protected void printHandler(@Nullable Object handler, @Nullable HandlerInterceptor[] interceptors), +			throws Exception {, +, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/PrintingResultHandler.java, +		if (session != null) {, +			Enumeration<String> attrNames = session.getAttributeNames();, +			if (attrNames != null) {, +				return Collections.list(attrNames).stream()., +						collect(Collectors.toMap(n -> n, session::getAttribute));, +			}, +		}, +		return Collections.emptyMap();, +	protected void printHandler(@Nullable Object handler, @Nullable HandlerInterceptor[] interceptors), +			throws Exception {, +, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/result/PrintingResultHandlerTests.java, +import javax.servlet.http.HttpSession;, +import org.mockito.Mockito;, +import static org.junit.Assert.*;, +	public void printRequestWithoutSession() throws Exception {, +		this.request.addParameter("param", "paramValue");, +		this.request.addHeader("header", "headerValue");, +		this.request.setCharacterEncoding("UTF-16");, +		String palindrome = "ablE was I ere I saw Elba";, +		byte[] bytes = palindrome.getBytes("UTF-16");, +		this.request.setContent(bytes);, +, +		this.handler.handle(this.mvcResult);, +, +		HttpHeaders headers = new HttpHeaders();, +		headers.set("header", "headerValue");, +, +		MultiValueMap<String, String> params = new LinkedMultiValueMap<>();, +		params.add("param", "paramValue");, +, +		assertValue("MockHttpServletRequest", "HTTP Method", this.request.getMethod());, +		assertValue("MockHttpServletRequest", "Request URI", this.request.getRequestURI());, +		assertValue("MockHttpServletRequest", "Parameters", params);, +		assertValue("MockHttpServletRequest", "Headers", headers);, +		assertValue("MockHttpServletRequest", "Body", palindrome);, +	}, +, +	@Test, +	public void printRequestWithEmptySessionMock() throws Exception {, +		this.request.addParameter("param", "paramValue");, +		this.request.addHeader("header", "headerValue");, +		this.request.setCharacterEncoding("UTF-16");, +		String palindrome = "ablE was I ere I saw Elba";, +		byte[] bytes = palindrome.getBytes("UTF-16");, +		this.request.setContent(bytes);, +		this.request.setSession(Mockito.mock(HttpSession.class));, +, +		this.handler.handle(this.mvcResult);, +, +		HttpHeaders headers = new HttpHeaders();, +		headers.set("header", "headerValue");, +, +		MultiValueMap<String, String> params = new LinkedMultiValueMap<>();, +		params.add("param", "paramValue");, +, +		assertValue("MockHttpServletRequest", "HTTP Method", this.request.getMethod());, +		assertValue("MockHttpServletRequest", "Request URI", this.request.getRequestURI());, +		assertValue("MockHttpServletRequest", "Parameters", params);, +		assertValue("MockHttpServletRequest", "Headers", headers);, +		assertValue("MockHttpServletRequest", "Body", palindrome);, +	}, +, +	@Test, +]