[+++ b/spring-test/src/main/java/org/springframework/test/web/client/match/JsonPathRequestMatchers.java, +	 * assert that the result is a {@link String}., +	 * @since 4.2.1, +	 */, +	public RequestMatcher isString() {, +		return new AbstractJsonPathRequestMatcher() {, +			@Override, +			public void matchInternal(MockClientHttpRequest request) throws IOException, ParseException {, +				JsonPathRequestMatchers.this.jsonPathHelper.assertValueIsString(request.getBodyAsString());, +			}, +		};, +	}, +, +	/**, +	 * Evaluate the JSON path expression against the request content and, +	 * assert that the result is a {@link Boolean}., +	 * @since 4.2.1, +	 */, +	public RequestMatcher isBoolean() {, +		return new AbstractJsonPathRequestMatcher() {, +			@Override, +			public void matchInternal(MockClientHttpRequest request) throws IOException, ParseException {, +				JsonPathRequestMatchers.this.jsonPathHelper.assertValueIsBoolean(request.getBodyAsString());, +			}, +		};, +	}, +, +	/**, +	 * Evaluate the JSON path expression against the request content and, +	 * assert that the result is a {@link Number}., +	 * @since 4.2.1, +	 */, +	public RequestMatcher isNumber() {, +		return new AbstractJsonPathRequestMatcher() {, +			@Override, +			public void matchInternal(MockClientHttpRequest request) throws IOException, ParseException {, +				JsonPathRequestMatchers.this.jsonPathHelper.assertValueIsNumber(request.getBodyAsString());, +			}, +		};, +	}, +, +	/**, +	 * Evaluate the JSON path expression against the request content and, +	/**, +	 * Evaluate the JSON path expression against the request content and, +	 * assert that the result is a {@link java.util.Map}., +	 * @since 4.2.1, +	 */, +	public RequestMatcher isMap() {, +		return new AbstractJsonPathRequestMatcher() {, +			@Override, +			public void matchInternal(MockClientHttpRequest request) throws IOException, ParseException {, +				JsonPathRequestMatchers.this.jsonPathHelper.assertValueIsMap(request.getBodyAsString());, +			}, +		};, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/client/match/JsonPathRequestMatchers.java, +	 * assert that the result is a {@link String}., +	 * @since 4.2.1, +	 */, +	public RequestMatcher isString() {, +		return new AbstractJsonPathRequestMatcher() {, +			@Override, +			public void matchInternal(MockClientHttpRequest request) throws IOException, ParseException {, +				JsonPathRequestMatchers.this.jsonPathHelper.assertValueIsString(request.getBodyAsString());, +			}, +		};, +	}, +, +	/**, +	 * Evaluate the JSON path expression against the request content and, +	 * assert that the result is a {@link Boolean}., +	 * @since 4.2.1, +	 */, +	public RequestMatcher isBoolean() {, +		return new AbstractJsonPathRequestMatcher() {, +			@Override, +			public void matchInternal(MockClientHttpRequest request) throws IOException, ParseException {, +				JsonPathRequestMatchers.this.jsonPathHelper.assertValueIsBoolean(request.getBodyAsString());, +			}, +		};, +	}, +, +	/**, +	 * Evaluate the JSON path expression against the request content and, +	 * assert that the result is a {@link Number}., +	 * @since 4.2.1, +	 */, +	public RequestMatcher isNumber() {, +		return new AbstractJsonPathRequestMatcher() {, +			@Override, +			public void matchInternal(MockClientHttpRequest request) throws IOException, ParseException {, +				JsonPathRequestMatchers.this.jsonPathHelper.assertValueIsNumber(request.getBodyAsString());, +			}, +		};, +	}, +, +	/**, +	 * Evaluate the JSON path expression against the request content and]