[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * @param t the throwable to inspect, +				rethrowAnnotationConfigurationException(ex);, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * @param t the throwable to inspect, +				rethrowAnnotationConfigurationException(ex);, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationUtilsTests.java, +	public void getRepeatableWithMissingAttributeAliasDeclaration() throws Exception {, +		exception.expect(AnnotationConfigurationException.class);, +		exception.expectMessage(containsString("Attribute [value] in"));, +		exception.expectMessage(containsString(BrokenContextConfig.class.getName()));, +		exception.expectMessage(containsString("must be declared as an @AliasFor [locations]"));, +		getRepeatableAnnotation(BrokenConfigHierarchyTestCase.class, BrokenHierarchy.class, BrokenContextConfig.class);, +	}, +, +	@Test, +	@Retention(RetentionPolicy.RUNTIME), +	@interface BrokenContextConfig {, +, +		// Intentionally missing:, +		// @AliasFor(attribute = "locations"), +		String value() default "";, +, +		@AliasFor(attribute = "value"), +		String locations() default "";, +	}, +, +	@Retention(RetentionPolicy.RUNTIME), +	@interface BrokenHierarchy {, +		BrokenContextConfig[] value();, +	}, +, +	@BrokenHierarchy(@BrokenContextConfig), +	static class BrokenConfigHierarchyTestCase {, +	}, +]