[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpResponse.java, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpResponse.java, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpResponseDecorator.java, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpResponse.java, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpResponseDecorator.java, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchange.java, +import java.util.function.Function;, +	/**, +	 * Transform the given url according to the registered transformation function(s)., +	 * By default, this method returns the given {@code url}, though additional, +	 * transformation functions can by registered with {@link #addUrlTransformer}, +	 * @param url the URL to transform, +	 * @return the transformed URL, +	 */, +	String transformUrl(String url);, +, +	/**, +	 * Register an additional URL transformation function for use with {@link #transformUrl}., +	 * The given function can be used to insert an id for authentication, a nonce for CSRF, +	 * protection, etc., +	 * <p>Note that the given function is applied after any previously registered functions., +	 * @param transformer a URL transformation function to add, +	 */, +	void addUrlTransformer(Function<String, String> transformer);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpResponse.java, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpResponseDecorator.java, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchange.java, +import java.util.function.Function;, +	/**, +	 * Transform the given url according to the registered transformation function(s)., +	 * By default, this method returns the given {@code url}, though additional, +	 * transformation functions can by registered with {@link #addUrlTransformer}, +	 * @param url the URL to transform, +	 * @return the transformed URL, +	 */, +	String transformUrl(String url);, +, +	/**, +	 * Register an additional URL transformation function for use with {@link #transformUrl}., +	 * The given function can be used to insert an id for authentication, a nonce for CSRF, +	 * protection, etc., +	 * <p>Note that the given function is applied after any previously registered functions., +	 * @param transformer a URL transformation function to add, +	 */, +	void addUrlTransformer(Function<String, String> transformer);, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchangeDecorator.java, + * Copyright 2002-2017 the original author or authors., +import java.util.function.Function;, +	@Override, +	public String transformUrl(String url) {, +		return getDelegate().transformUrl(url);, +	}, +, +	@Override, +	public void addUrlTransformer(Function<String, String> transformer) {, +		getDelegate().addUrlTransformer(transformer);, +	}, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpResponse.java, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpResponseDecorator.java, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchange.java, +import java.util.function.Function;, +	/**, +	 * Transform the given url according to the registered transformation function(s)., +	 * By default, this method returns the given {@code url}, though additional, +	 * transformation functions can by registered with {@link #addUrlTransformer}, +	 * @param url the URL to transform, +	 * @return the transformed URL, +	 */, +	String transformUrl(String url);, +, +	/**, +	 * Register an additional URL transformation function for use with {@link #transformUrl}., +	 * The given function can be used to insert an id for authentication, a nonce for CSRF, +	 * protection, etc., +	 * <p>Note that the given function is applied after any previously registered functions., +	 * @param transformer a URL transformation function to add, +	 */, +	void addUrlTransformer(Function<String, String> transformer);, +++ b/spring-web/src/main/java/org/springframework/web/server/ServerWebExchangeDecorator.java, + * Copyright 2002-2017 the original author or authors., +import java.util.function.Function;, +	@Override, +	public String transformUrl(String url) {, +		return getDelegate().transformUrl(url);, +	}, +, +	@Override, +	public void addUrlTransformer(Function<String, String> transformer) {, +		getDelegate().addUrlTransformer(transformer);, +	}, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/DefaultServerWebExchange.java, +import java.util.function.Function;, +	private Function<String, String> urlTransformer = url -> url;, +]