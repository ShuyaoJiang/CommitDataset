[+++ b/spring-web/src/main/java/org/springframework/http/codec/AbstractServerHttpMessageReader.java, + * to allow providing hints to the nested {@code reader} or setting the response status for, + * example, by implementing {@link #beforeRead(ResolvableType, ResolvableType, ServerHttpRequest, ServerHttpResponse)}., +	 * {@link #read(ResolvableType, ResolvableType, ServerHttpRequest, ServerHttpResponse, Map)}., +	 * @param request the current HTTP request, +	 * @param response the current HTTP response, +++ b/spring-web/src/main/java/org/springframework/http/codec/AbstractServerHttpMessageReader.java, + * to allow providing hints to the nested {@code reader} or setting the response status for, + * example, by implementing {@link #beforeRead(ResolvableType, ResolvableType, ServerHttpRequest, ServerHttpResponse)}., +	 * {@link #read(ResolvableType, ResolvableType, ServerHttpRequest, ServerHttpResponse, Map)}., +	 * @param request the current HTTP request, +	 * @param response the current HTTP response, +++ b/spring-web/src/main/java/org/springframework/http/codec/AbstractServerHttpMessageWriter.java, + * to allow providing hints to the nested {@code writer} or setting the response status for, + * example, by implementing {@link #beforeWrite(ResolvableType, ResolvableType, MediaType, ServerHttpRequest, ServerHttpResponse)}., +				((ServerHttpMessageWriter<T>)this.writer).write(inputStream, streamType,, +						elementType, mediaType, request, response, mergedHints) :, +	 * @param request the current HTTP request, +	 * @param response the current HTTP response, +++ b/spring-web/src/main/java/org/springframework/http/codec/AbstractServerHttpMessageReader.java, + * to allow providing hints to the nested {@code reader} or setting the response status for, + * example, by implementing {@link #beforeRead(ResolvableType, ResolvableType, ServerHttpRequest, ServerHttpResponse)}., +	 * {@link #read(ResolvableType, ResolvableType, ServerHttpRequest, ServerHttpResponse, Map)}., +	 * @param request the current HTTP request, +	 * @param response the current HTTP response, +++ b/spring-web/src/main/java/org/springframework/http/codec/AbstractServerHttpMessageWriter.java, + * to allow providing hints to the nested {@code writer} or setting the response status for, + * example, by implementing {@link #beforeWrite(ResolvableType, ResolvableType, MediaType, ServerHttpRequest, ServerHttpResponse)}., +				((ServerHttpMessageWriter<T>)this.writer).write(inputStream, streamType,, +						elementType, mediaType, request, response, mergedHints) :, +	 * @param request the current HTTP request, +	 * @param response the current HTTP response, +++ b/spring-web/src/main/java/org/springframework/http/codec/Jackson2ServerHttpMessageWriter.java, +++ b/spring-web/src/main/java/org/springframework/http/codec/AbstractServerHttpMessageReader.java, + * to allow providing hints to the nested {@code reader} or setting the response status for, + * example, by implementing {@link #beforeRead(ResolvableType, ResolvableType, ServerHttpRequest, ServerHttpResponse)}., +	 * {@link #read(ResolvableType, ResolvableType, ServerHttpRequest, ServerHttpResponse, Map)}., +	 * @param request the current HTTP request, +	 * @param response the current HTTP response, +++ b/spring-web/src/main/java/org/springframework/http/codec/AbstractServerHttpMessageWriter.java, + * to allow providing hints to the nested {@code writer} or setting the response status for, + * example, by implementing {@link #beforeWrite(ResolvableType, ResolvableType, MediaType, ServerHttpRequest, ServerHttpResponse)}., +				((ServerHttpMessageWriter<T>)this.writer).write(inputStream, streamType,, +						elementType, mediaType, request, response, mergedHints) :, +	 * @param request the current HTTP request, +	 * @param response the current HTTP response, +++ b/spring-web/src/main/java/org/springframework/http/codec/Jackson2ServerHttpMessageWriter.java, +++ b/spring-web/src/main/java/org/springframework/http/codec/ServerHttpMessageWriter.java, +	 * @param request the current HTTP request, +	 * @param response the current HTTP response]