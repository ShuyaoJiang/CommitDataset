[+++ b/spring-test/src/main/java/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.java, + * Abstract {@linkplain Transactional transactional} extension of, + * {@linkplain ApplicationContext application context}., + * <p>This class exposes a {@link JdbcTemplate} and provides an easy way to, + * {@linkplain #countRowsInTable count the number of rows in a table}, + * (potentially {@linkplain #countRowsInTableWhere with a WHERE clause}),, + * {@linkplain #deleteFromTables delete from tables},, + * {@linkplain #dropTables drop tables}, and, + * {@linkplain #executeSqlScript execute SQL scripts} within a transaction., +	 * @since 3.2, +	 * Count the rows in the given table, using the provided {@code WHERE} clause., +	 * <p>See the Javadoc for {@link JdbcTestUtils#countRowsInTableWhere()} for details., +	 * @param tableName the name of the table to count rows in, +	 * @param whereClause the {@code WHERE} clause to append to the query, +	 * @return the number of rows in the table that match the provided, +	 * {@code WHERE} clause, +	 * @since 3.2, +	 */, +	protected int countRowsInTableWhere(String tableName, String whereClause) {, +		return JdbcTestUtils.countRowsInTableWhere(this.jdbcTemplate, tableName, whereClause);, +	}, +, +	/**, +	 * Convenience method for dropping all of the specified tables. Use, +	 * with caution outside of a transaction!, +	 * @param names the names of the tables to drop, +	 * @since 3.2, +	 */, +	protected void dropTables(String... names) {, +		JdbcTestUtils.dropTables(this.jdbcTemplate, names);, +	}, +, +	/**, +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.java, + * Abstract {@linkplain Transactional transactional} extension of, + * {@linkplain ApplicationContext application context}., + * <p>This class exposes a {@link JdbcTemplate} and provides an easy way to, + * {@linkplain #countRowsInTable count the number of rows in a table}, + * (potentially {@linkplain #countRowsInTableWhere with a WHERE clause}),, + * {@linkplain #deleteFromTables delete from tables},, + * {@linkplain #dropTables drop tables}, and, + * {@linkplain #executeSqlScript execute SQL scripts} within a transaction., +	 * @since 3.2, +	 * Count the rows in the given table, using the provided {@code WHERE} clause., +	 * <p>See the Javadoc for {@link JdbcTestUtils#countRowsInTableWhere()} for details., +	 * @param tableName the name of the table to count rows in, +	 * @param whereClause the {@code WHERE} clause to append to the query, +	 * @return the number of rows in the table that match the provided, +	 * {@code WHERE} clause, +	 * @since 3.2, +	 */, +	protected int countRowsInTableWhere(String tableName, String whereClause) {, +		return JdbcTestUtils.countRowsInTableWhere(this.jdbcTemplate, tableName, whereClause);, +	}, +, +	/**, +	 * Convenience method for dropping all of the specified tables. Use, +	 * with caution outside of a transaction!, +	 * @param names the names of the tables to drop, +	 * @since 3.2, +	 */, +	protected void dropTables(String... names) {, +		JdbcTestUtils.dropTables(this.jdbcTemplate, names);, +	}, +, +	/**, +++ b/spring-test/src/main/java/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.java, + * Abstract {@linkplain Transactional transactional} extension of, + * {@linkplain ApplicationContext application context}., + * <p>This class exposes a {@link JdbcTemplate} and provides an easy way to, + * {@linkplain #countRowsInTable count the number of rows in a table}, + * (potentially {@linkplain #countRowsInTableWhere with a WHERE clause}),, + * {@linkplain #deleteFromTables delete from tables},, + * {@linkplain #dropTables drop tables}, and, + * {@linkplain #executeSqlScript execute SQL scripts} within a transaction., +	 * @since 3.2, +	 * Count the rows in the given table, using the provided {@code WHERE} clause., +	 * <p>See the Javadoc for {@link JdbcTestUtils#countRowsInTableWhere()} for details., +	 * @param tableName the name of the table to count rows in, +	 * @param whereClause the {@code WHERE} clause to append to the query, +	 * @return the number of rows in the table that match the provided, +	 * {@code WHERE} clause, +	 * @since 3.2, +	 */, +	protected int countRowsInTableWhere(String tableName, String whereClause) {, +		return JdbcTestUtils.countRowsInTableWhere(this.jdbcTemplate, tableName, whereClause);, +	}, +, +	/**, +	 * Convenience method for dropping all of the specified tables. Use, +	 * with caution outside of a transaction!, +	 * @param names the names of the tables to drop, +	 * @since 3.2, +	 */, +	protected void dropTables(String... names) {, +		JdbcTestUtils.dropTables(this.jdbcTemplate, names);, +	}, +, +	/**, +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.java]