[+++ b/spring-core/src/main/java/org/springframework/core/log/LogAccessor.java, +	 * @param cause the exception to log, +	public void fatal(Throwable cause, CharSequence message) {, +		this.log.fatal(message, cause);, +	 * @param cause the exception to log, +	public void error(Throwable cause, CharSequence message) {, +		this.log.error(message, cause);, +	 * @param cause the exception to log, +	public void warn(Throwable cause, CharSequence message) {, +		this.log.warn(message, cause);, +	 * @param cause the exception to log, +	public void info(Throwable cause, CharSequence message) {, +		this.log.info(message, cause);, +	 * @param cause the exception to log, +	public void debug(Throwable cause, CharSequence message) {, +		this.log.debug(message, cause);, +	 * @param cause the exception to log, +	public void trace(Throwable cause, CharSequence message) {, +		this.log.trace(message, cause);, +	 * @param cause the exception to log, +	public void fatal(Throwable cause, Supplier<? extends CharSequence> messageSupplier) {, +		this.log.fatal(new LogMessage(messageSupplier), cause);, +	 * @param cause the exception to log, +	public void error(Throwable cause, Supplier<? extends CharSequence> messageSupplier) {, +		this.log.error(new LogMessage(messageSupplier), cause);, +	 * @param cause the exception to log, +	public void warn(Throwable cause, Supplier<? extends CharSequence> messageSupplier) {, +		this.log.warn(new LogMessage(messageSupplier), cause);, +	 * @param cause the exception to log, +	public void info(Throwable cause, Supplier<? extends CharSequence> messageSupplier) {, +		this.log.info(new LogMessage(messageSupplier), cause);, +	 * @param cause the exception to log, +	public void debug(Throwable cause, Supplier<? extends CharSequence> messageSupplier) {, +		this.log.debug(new LogMessage(messageSupplier), cause);, +	 * @param cause the exception to log, +	public void trace(Throwable cause, Supplier<? extends CharSequence> messageSupplier) {, +		this.log.trace(new LogMessage(messageSupplier), cause);]