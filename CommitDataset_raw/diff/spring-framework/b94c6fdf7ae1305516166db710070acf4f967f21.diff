[+++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotatedElementUtilsTests.java, +import java.lang.reflect.Method;, +import org.junit.Ignore;, +	// SPR-12738, +, +	@Test, +	public void getAnnotationAttributesInheritedFromInterface() {, +		String name = Transactional.class.getName();, +		AnnotationAttributes attributes = getAnnotationAttributes(ConcreteClassWithInheritedAnnotation.class, name);, +//		assertNotNull(attributes);, +	}, +, +	// SPR-12738, +, +	@Test, +	public void getAnnotationAttributesInheritedFromAbstractMethod() throws NoSuchMethodException {, +		String name = Transactional.class.getName();, +		Method method = ConcreteClassWithInheritedAnnotation.class.getMethod("handle");, +		AnnotationAttributes attributes = getAnnotationAttributes(method, name);, +//		assertNotNull(attributes);, +	}, +, +	// SPR-12738, +, +	@Test, +	public void getAnnotationAttributesInheritedFromParameterizedMethod() throws NoSuchMethodException {, +		String name = Transactional.class.getName();, +		Method method = ConcreteClassWithInheritedAnnotation.class.getMethod("handleParameterized", String.class);, +		AnnotationAttributes attributes = getAnnotationAttributes(ConcreteClassWithInheritedAnnotation.class, name);, +//		assertNotNull(attributes);, +	}, +, +	@Target({ElementType.TYPE, ElementType.METHOD}), +	@Transactional, +	static interface InterfaceWithInheritedAnnotation {, +	}, +, +	static abstract class AbstractClassWithInheritedAnnotation<T> implements InterfaceWithInheritedAnnotation {, +, +		@Transactional, +		public abstract void handle();, +, +		@Transactional, +		public void handleParameterized(T t) {, +		}, +	}, +, +	static class ConcreteClassWithInheritedAnnotation extends AbstractClassWithInheritedAnnotation<String> {, +, +		@Override, +		public void handle() {, +		}, +, +		@Override, +		public void handleParameterized(String s) {, +		}, +	}, +]