[+++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/PropertiesEditor.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.StandardCharsets;, +				props.load(new ByteArrayInputStream(text.getBytes(StandardCharsets.ISO_8859_1)));, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/PropertiesEditor.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.StandardCharsets;, +				props.load(new ByteArrayInputStream(text.getBytes(StandardCharsets.ISO_8859_1)));, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToPropertiesConverter.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.StandardCharsets;, +			props.load(new ByteArrayInputStream(source.getBytes(StandardCharsets.ISO_8859_1)));, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/PropertiesEditor.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.StandardCharsets;, +				props.load(new ByteArrayInputStream(text.getBytes(StandardCharsets.ISO_8859_1)));, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToPropertiesConverter.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.StandardCharsets;, +			props.load(new ByteArrayInputStream(source.getBytes(StandardCharsets.ISO_8859_1)));, +++ b/spring-core/src/main/java/org/springframework/util/Base64Utils.java, +import java.nio.charset.StandardCharsets;, +	private static final Charset DEFAULT_CHARSET = StandardCharsets.UTF_8;, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/PropertiesEditor.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.StandardCharsets;, +				props.load(new ByteArrayInputStream(text.getBytes(StandardCharsets.ISO_8859_1)));, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToPropertiesConverter.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.StandardCharsets;, +			props.load(new ByteArrayInputStream(source.getBytes(StandardCharsets.ISO_8859_1)));, +++ b/spring-core/src/main/java/org/springframework/util/Base64Utils.java, +import java.nio.charset.StandardCharsets;, +	private static final Charset DEFAULT_CHARSET = StandardCharsets.UTF_8;, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/DefaultConversionServiceTests.java, +import java.nio.charset.StandardCharsets;, +		assertEquals(StandardCharsets.UTF_8, conversionService.convert("UTF-8", Charset.class));, +		assertEquals("UTF-8", conversionService.convert(StandardCharsets.UTF_8, String.class));, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/PropertiesEditor.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.StandardCharsets;, +				props.load(new ByteArrayInputStream(text.getBytes(StandardCharsets.ISO_8859_1)));, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToPropertiesConverter.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.StandardCharsets;, +			props.load(new ByteArrayInputStream(source.getBytes(StandardCharsets.ISO_8859_1)));, +++ b/spring-core/src/main/java/org/springframework/util/Base64Utils.java, +import java.nio.charset.StandardCharsets;, +	private static final Charset DEFAULT_CHARSET = StandardCharsets.UTF_8;, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/DefaultConversionServiceTests.java, +import java.nio.charset.StandardCharsets;, +		assertEquals(StandardCharsets.UTF_8, conversionService.convert("UTF-8", Charset.class));, +		assertEquals("UTF-8", conversionService.convert(StandardCharsets.UTF_8, String.class));, +++ b/spring-core/src/test/java/org/springframework/util/MimeTypeTests.java, +import java.nio.charset.StandardCharsets;, +import static java.util.Collections.*;, +		assertEquals("Invalid charset", StandardCharsets.UTF_8, mimeType.getCharset());, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/PropertiesEditor.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.StandardCharsets;, +				props.load(new ByteArrayInputStream(text.getBytes(StandardCharsets.ISO_8859_1)));, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToPropertiesConverter.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.StandardCharsets;, +			props.load(new ByteArrayInputStream(source.getBytes(StandardCharsets.ISO_8859_1)));, +++ b/spring-core/src/main/java/org/springframework/util/Base64Utils.java, +import java.nio.charset.StandardCharsets;, +	private static final Charset DEFAULT_CHARSET = StandardCharsets.UTF_8;, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/DefaultConversionServiceTests.java, +import java.nio.charset.StandardCharsets;, +		assertEquals(StandardCharsets.UTF_8, conversionService.convert("UTF-8", Charset.class));, +		assertEquals("UTF-8", conversionService.convert(StandardCharsets.UTF_8, String.class));, +++ b/spring-core/src/test/java/org/springframework/util/MimeTypeTests.java, +import java.nio.charset.StandardCharsets;, +import static java.util.Collections.*;, +		assertEquals("Invalid charset", StandardCharsets.UTF_8, mimeType.getCharset());, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java, +import java.nio.charset.StandardCharsets;, +		assertEquals(StandardCharsets.UTF_8, result);, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/PropertiesEditor.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.StandardCharsets;, +				props.load(new ByteArrayInputStream(text.getBytes(StandardCharsets.ISO_8859_1)));, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToPropertiesConverter.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.StandardCharsets;, +			props.load(new ByteArrayInputStream(source.getBytes(StandardCharsets.ISO_8859_1)));, +++ b/spring-core/src/main/java/org/springframework/util/Base64Utils.java, +import java.nio.charset.StandardCharsets;, +	private static final Charset DEFAULT_CHARSET = StandardCharsets.UTF_8;, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/DefaultConversionServiceTests.java, +import java.nio.charset.StandardCharsets;, +		assertEquals(StandardCharsets.UTF_8, conversionService.convert("UTF-8", Charset.class));, +		assertEquals("UTF-8", conversionService.convert(StandardCharsets.UTF_8, String.class));, +++ b/spring-core/src/test/java/org/springframework/util/MimeTypeTests.java, +import java.nio.charset.StandardCharsets;, +import static java.util.Collections.*;, +		assertEquals("Invalid charset", StandardCharsets.UTF_8, mimeType.getCharset());, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java, +import java.nio.charset.StandardCharsets;]