[+++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListener.java, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListener.java, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListener.java, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java, +++ b/spring-jms/src/main/java/org/springframework/jms/config/AbstractJmsListenerEndpoint.java, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListener.java, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java, +++ b/spring-jms/src/main/java/org/springframework/jms/config/AbstractJmsListenerEndpoint.java, +++ b/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java, +			if (container.isPubSubDomain()) {, +				messageListener.setDefaultResponseTopicName(responseDestination);, +				messageListener.setDefaultResponseQueueName(responseDestination);, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListener.java, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java, +++ b/spring-jms/src/main/java/org/springframework/jms/config/AbstractJmsListenerEndpoint.java, +++ b/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java, +			if (container.isPubSubDomain()) {, +				messageListener.setDefaultResponseTopicName(responseDestination);, +				messageListener.setDefaultResponseQueueName(responseDestination);, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java, +	/**, +	 * Return whether the Publish/Subscribe domain ({@link javax.jms.Topic Topics}) is used., +	 * Otherwise, the Point-to-Point domain ({@link javax.jms.Queue Queues}) is used., +	 */, +	boolean isPubSubDomain();, +, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListener.java, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java, +++ b/spring-jms/src/main/java/org/springframework/jms/config/AbstractJmsListenerEndpoint.java, +++ b/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java, +			if (container.isPubSubDomain()) {, +				messageListener.setDefaultResponseTopicName(responseDestination);, +				messageListener.setDefaultResponseQueueName(responseDestination);, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java, +	/**, +	 * Return whether the Publish/Subscribe domain ({@link javax.jms.Topic Topics}) is used., +	 * Otherwise, the Point-to-Point domain ({@link javax.jms.Queue Queues}) is used., +	 */, +	boolean isPubSubDomain();, +, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java, +	@Override, +	public boolean isPubSubDomain() {, +		JmsActivationSpecConfig config = getActivationSpecConfig();, +		if (config != null) {, +			return config.isPubSubDomain();, +		}, +		throw new IllegalStateException("could not determine pubSubDomain, no activation spec config is set");, +	}, +, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListener.java, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java, +++ b/spring-jms/src/main/java/org/springframework/jms/config/AbstractJmsListenerEndpoint.java, +++ b/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java, +			if (container.isPubSubDomain()) {, +				messageListener.setDefaultResponseTopicName(responseDestination);, +				messageListener.setDefaultResponseQueueName(responseDestination);, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java, +	/**, +	 * Return whether the Publish/Subscribe domain ({@link javax.jms.Topic Topics}) is used., +	 * Otherwise, the Point-to-Point domain ({@link javax.jms.Queue Queues}) is used., +	 */, +	boolean isPubSubDomain();, +, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java, +	@Override, +	public boolean isPubSubDomain() {, +		JmsActivationSpecConfig config = getActivationSpecConfig();, +		if (config != null) {, +			return config.isPubSubDomain();, +		}, +		throw new IllegalStateException("could not determine pubSubDomain, no activation spec config is set");, +	}, +, +++ b/spring-jms/src/test/java/org/springframework/jms/annotation/AbstractJmsAnnotationDrivenTests.java, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListener.java, +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java, +++ b/spring-jms/src/main/java/org/springframework/jms/config/AbstractJmsListenerEndpoint.java, +++ b/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java, +			if (container.isPubSubDomain()) {, +				messageListener.setDefaultResponseTopicName(responseDestination);, +				messageListener.setDefaultResponseQueueName(responseDestination);, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java, +	/**, +	 * Return whether the Publish/Subscribe domain ({@link javax.jms.Topic Topics}) is used., +	 * Otherwise, the Point-to-Point domain ({@link javax.jms.Queue Queues}) is used., +	 */, +	boolean isPubSubDomain();, +, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java, +	@Override, +	public boolean isPubSubDomain() {, +		JmsActivationSpecConfig config = getActivationSpecConfig();, +		if (config != null) {, +			return config.isPubSubDomain();, +		}, +		throw new IllegalStateException("could not determine pubSubDomain, no activation spec config is set");, +	}, +]