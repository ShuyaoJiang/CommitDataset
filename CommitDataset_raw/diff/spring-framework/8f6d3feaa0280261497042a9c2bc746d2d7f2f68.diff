[+++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/standalone/MultipartControllerTests.java, + * Copyright 2002-2018 the original author or authors., +	public void multipartRequestWithSingleFileNotPresent() throws Exception {, +		standaloneSetup(new MultipartController()).build(), +				.perform(multipart("/multipartfile")), +				.andExpect(status().isFound());, +	}, +, +	@Test, +	public void multipartRequestWithFileArrayNotPresent() throws Exception {, +		standaloneSetup(new MultipartController()).build(), +				.perform(multipart("/multipartfilearray")), +				.andExpect(status().isFound());, +	}, +, +	@Test, +	public void multipartRequestWithFileArrayNoMultipart() throws Exception {, +		standaloneSetup(new MultipartController()).build(), +				.perform(post("/multipartfilearray")), +				.andExpect(status().isFound());, +	}, +, +	@Test, +	public void multipartRequestWithFileListNotPresent() throws Exception {, +		standaloneSetup(new MultipartController()).build(), +				.perform(multipart("/multipartfilelist")), +				.andExpect(status().isFound());, +	}, +, +	@Test, +	public void multipartRequestWithFileListNoMultipart() throws Exception {, +		standaloneSetup(new MultipartController()).build(), +				.perform(post("/multipartfilelist")), +				.andExpect(status().isFound());, +	}, +, +	@Test, +		public String processMultipartFile(@RequestParam(required = false) MultipartFile file,, +				@RequestPart(required = false) Map<String, String> json, Model model) throws IOException {, +			if (file != null) {, +			}, +			if (json != null) {, +			}, +		public String processMultipartFileArray(@RequestParam(required = false) MultipartFile[] file,, +				@RequestPart(required = false) Map<String, String> json, Model model) throws IOException {, +			if (file != null && file.length > 0) {, +			}, +			if (json != null) {, +			}, +		public String processMultipartFileList(@RequestParam(required = false) List<MultipartFile> file,, +				@RequestPart(required = false) Map<String, String> json, Model model) throws IOException {, +			if (file != null && !file.isEmpty()) {, +			}, +			if (json != null) {, +			}]