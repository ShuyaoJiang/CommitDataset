[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java, +import org.springframework.web.util.WebUtils;, +	private String servletRequestURI;, +, +, +		builder.pathFromRequest(request);, +		builder.pathFromRequest(request);, +	private void pathFromRequest(HttpServletRequest request) {, +		this.servletRequestURI = request.getRequestURI();, +		replacePath(request.getRequestURI());, +	}, +, +	/**, +	 * Removes any path extension from the {@link HttpServletRequest#getRequestURI(), +	 * requestURI}. This method must be invoked before any calls to {@link #path(String)}, +	 * or {@link #pathSegment(String...)}., +	 * <pre>, +	 * 	// GET http://foo.com/rest/books/6.json, +	 *, +	 *	ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request);, +	 *	String ext = builder.removePathExtension();, +	 *	String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString();, +	 *, +	 * 	assertEquals("http://foo.com/rest/books/6/pages/1.json", result);, +	 * </pre>, +	 * @return the removed path extension for possible re-use, or {@code null}, +	 * @since 4.0, +	 */, +	public String removePathExtension() {, +		String extension = null;, +		if (this.servletRequestURI != null) {, +			String filename = WebUtils.extractFullFilenameFromUrlPath(this.servletRequestURI);, +			extension = StringUtils.getFilenameExtension(filename);, +			if (!StringUtils.isEmpty(extension)) {, +				int end = this.servletRequestURI.length() - (extension.length() + 1);, +				replacePath(this.servletRequestURI.substring(0, end));, +			}, +			this.servletRequestURI = null;, +		}, +		return extension;, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java, +import org.springframework.web.util.WebUtils;, +	private String servletRequestURI;, +, +, +		builder.pathFromRequest(request);, +		builder.pathFromRequest(request);, +	private void pathFromRequest(HttpServletRequest request) {, +		this.servletRequestURI = request.getRequestURI();, +		replacePath(request.getRequestURI());, +	}, +, +	/**, +	 * Removes any path extension from the {@link HttpServletRequest#getRequestURI(), +	 * requestURI}. This method must be invoked before any calls to {@link #path(String)}, +	 * or {@link #pathSegment(String...)}., +	 * <pre>, +	 * 	// GET http://foo.com/rest/books/6.json, +	 *, +	 *	ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request);, +	 *	String ext = builder.removePathExtension();, +	 *	String uri = builder.path("/pages/1.{ext}").buildAndExpand(ext).toUriString();, +	 *, +	 * 	assertEquals("http://foo.com/rest/books/6/pages/1.json", result);, +	 * </pre>, +	 * @return the removed path extension for possible re-use, or {@code null}, +	 * @since 4.0, +	 */, +	public String removePathExtension() {, +		String extension = null;, +		if (this.servletRequestURI != null) {, +			String filename = WebUtils.extractFullFilenameFromUrlPath(this.servletRequestURI);, +			extension = StringUtils.getFilenameExtension(filename);, +			if (!StringUtils.isEmpty(extension)) {, +				int end = this.servletRequestURI.length() - (extension.length() + 1);, +				replacePath(this.servletRequestURI.substring(0, end));, +			}, +			this.servletRequestURI = null;, +		}, +		return extension;, +	}, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/support/ServletUriComponentsBuilderTests.java, +	// SPR-10272, +, +	@Test, +	public void pathExtension() {, +		this.request.setRequestURI("/rest/books/6.json");, +		ServletUriComponentsBuilder builder = ServletUriComponentsBuilder.fromRequestUri(this.request);, +		String extension = builder.removePathExtension();, +		String result = builder.path("/pages/1.{ext}").buildAndExpand(extension).toUriString();, +, +		assertEquals("http://localhost/rest/books/6/pages/1.json", result);, +	}, +, +	@Test, +	public void pathExtensionNone() {, +		this.request.setRequestURI("/rest/books/6");]