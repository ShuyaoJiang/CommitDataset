[+++ b/spring-core/src/main/java/org/springframework/util/function/SingletonSupplier.java, + * A {@link java.util.function.Supplier} decorator that caches a singleton result and, +++ b/spring-core/src/main/java/org/springframework/util/function/SingletonSupplier.java, + * A {@link java.util.function.Supplier} decorator that caches a singleton result and, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +	 * Steps for customizing the {@link WebClient} used to test with,, +	 * internally delegating to a, +	 * {@link org.springframework.web.reactive.function.client.WebClient.Builder, +	 * WebClient.Builder}., +++ b/spring-core/src/main/java/org/springframework/util/function/SingletonSupplier.java, + * A {@link java.util.function.Supplier} decorator that caches a singleton result and, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +	 * Steps for customizing the {@link WebClient} used to test with,, +	 * internally delegating to a, +	 * {@link org.springframework.web.reactive.function.client.WebClient.Builder, +	 * WebClient.Builder}., +++ b/spring-web/src/main/java/org/springframework/web/client/ExtractingResponseErrorHandler.java, + * Implementation of {@link ResponseErrorHandler} that uses {@link HttpMessageConverter, + * HttpMessageConverters} to convert HTTP error responses to {@link RestClientException, + * RestClientExceptions}., + * {@code true}, and {@link #handleError(ClientHttpResponse)} will attempt to use the, +++ b/spring-core/src/main/java/org/springframework/util/function/SingletonSupplier.java, + * A {@link java.util.function.Supplier} decorator that caches a singleton result and, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +	 * Steps for customizing the {@link WebClient} used to test with,, +	 * internally delegating to a, +	 * {@link org.springframework.web.reactive.function.client.WebClient.Builder, +	 * WebClient.Builder}., +++ b/spring-web/src/main/java/org/springframework/web/client/ExtractingResponseErrorHandler.java, + * Implementation of {@link ResponseErrorHandler} that uses {@link HttpMessageConverter, + * HttpMessageConverters} to convert HTTP error responses to {@link RestClientException, + * RestClientExceptions}., + * {@code true}, and {@link #handleError(ClientHttpResponse)} will attempt to use the, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/FilteringWebHandler.java, + * {@link WebHandlerDecorator} that invokes a chain of {@link WebFilter WebFilters}, + * before invoking the delegate {@link WebHandler}., +++ b/spring-core/src/main/java/org/springframework/util/function/SingletonSupplier.java, + * A {@link java.util.function.Supplier} decorator that caches a singleton result and, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +	 * Steps for customizing the {@link WebClient} used to test with,, +	 * internally delegating to a, +	 * {@link org.springframework.web.reactive.function.client.WebClient.Builder, +	 * WebClient.Builder}., +++ b/spring-web/src/main/java/org/springframework/web/client/ExtractingResponseErrorHandler.java, + * Implementation of {@link ResponseErrorHandler} that uses {@link HttpMessageConverter, + * HttpMessageConverters} to convert HTTP error responses to {@link RestClientException, + * RestClientExceptions}., + * {@code true}, and {@link #handleError(ClientHttpResponse)} will attempt to use the, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/FilteringWebHandler.java, + * {@link WebHandlerDecorator} that invokes a chain of {@link WebFilter WebFilters}, + * before invoking the delegate {@link WebHandler}., +++ b/spring-web/src/main/java/org/springframework/web/server/handler/WebHandlerDecorator.java, + * Copyright 2002-2018 the original author or authors., + * {@link WebHandler} that decorates and delegates to another {@code WebHandler}., +++ b/spring-core/src/main/java/org/springframework/util/function/SingletonSupplier.java, + * A {@link java.util.function.Supplier} decorator that caches a singleton result and, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +	 * Steps for customizing the {@link WebClient} used to test with,, +	 * internally delegating to a, +	 * {@link org.springframework.web.reactive.function.client.WebClient.Builder, +	 * WebClient.Builder}., +++ b/spring-web/src/main/java/org/springframework/web/client/ExtractingResponseErrorHandler.java, + * Implementation of {@link ResponseErrorHandler} that uses {@link HttpMessageConverter, + * HttpMessageConverters} to convert HTTP error responses to {@link RestClientException, + * RestClientExceptions}., + * {@code true}, and {@link #handleError(ClientHttpResponse)} will attempt to use the, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/FilteringWebHandler.java, + * {@link WebHandlerDecorator} that invokes a chain of {@link WebFilter WebFilters}, + * before invoking the delegate {@link WebHandler}., +++ b/spring-web/src/main/java/org/springframework/web/server/handler/WebHandlerDecorator.java, + * Copyright 2002-2018 the original author or authors., + * {@link WebHandler} that decorates and delegates to another {@code WebHandler}., +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurer.java, +	 * when handling requests with annotated controllers., +	 * Add custom {@link Converter Converters} and {@link Formatter Formatters} for, +	 * performing type conversion and formatting of annotated controller method arguments., +	 * bean validation API is present on the classpath., +++ b/spring-core/src/main/java/org/springframework/util/function/SingletonSupplier.java, + * A {@link java.util.function.Supplier} decorator that caches a singleton result and, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +	 * Steps for customizing the {@link WebClient} used to test with,, +	 * internally delegating to a, +	 * {@link org.springframework.web.reactive.function.client.WebClient.Builder, +	 * WebClient.Builder}., +++ b/spring-web/src/main/java/org/springframework/web/client/ExtractingResponseErrorHandler.java, + * Implementation of {@link ResponseErrorHandler} that uses {@link HttpMessageConverter, + * HttpMessageConverters} to convert HTTP error responses to {@link RestClientException, + * RestClientExceptions}., + * {@code true}, and {@link #handleError(ClientHttpResponse)} will attempt to use the, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/FilteringWebHandler.java, + * {@link WebHandlerDecorator} that invokes a chain of {@link WebFilter WebFilters}, + * before invoking the delegate {@link WebHandler}., +++ b/spring-web/src/main/java/org/springframework/web/server/handler/WebHandlerDecorator.java, + * Copyright 2002-2018 the original author or authors., + * {@link WebHandler} that decorates and delegates to another {@code WebHandler}., +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurer.java, +	 * when handling requests with annotated controllers., +	 * Add custom {@link Converter Converters} and {@link Formatter Formatters} for, +	 * performing type conversion and formatting of annotated controller method arguments., +	 * bean validation API is present on the classpath.]