[+++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +public interface Binder {, +, +	/**, +	 * The model object for which property bindings may be accessed., +	 */, +	Object getModel();, +, +	/**, +	 * Get a binding to a model property.., +	 * @param property the property path, +	 * @throws NoSuchBindingException if no binding to the property exists, +	 */, +	Binding getBinding(String property);, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +public interface Binder {, +, +	/**, +	 * The model object for which property bindings may be accessed., +	 */, +	Object getModel();, +, +	/**, +	 * Get a binding to a model property.., +	 * @param property the property path, +	 * @throws NoSuchBindingException if no binding to the property exists, +	 */, +	Binding getBinding(String property);, +++ /dev/null, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +public interface Binder {, +, +	/**, +	 * The model object for which property bindings may be accessed., +	 */, +	Object getModel();, +, +	/**, +	 * Get a binding to a model property.., +	 * @param property the property path, +	 * @throws NoSuchBindingException if no binding to the property exists, +	 */, +	Binding getBinding(String property);, +++ /dev/null, +++ b/org.springframework.context/src/test/java/org/springframework/ui/binding/support/GenericBinderTests.java, +		binder.addBinding("addresses");, +		binder.registerFormatter(new GenericCollectionPropertyType(List.class, Address.class), new AddressListFormatter());, +		binder.bind(values);]