[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerResult.java, +	private final ResolvableType returnType;, +	 * @param returnType the return value type, +	public HandlerResult(Object handler, Object returnValue, ResolvableType returnType) {, +		this(handler, returnValue, returnType, null);, +	 * @param returnType the return value type, +	public HandlerResult(Object handler, Object returnValue, ResolvableType returnType, ModelMap model) {, +		Assert.notNull(returnType, "'returnType' is required");, +		this.returnType = returnType;, +	public ResolvableType getReturnType() {, +		return this.returnType;, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerResult.java, +	private final ResolvableType returnType;, +	 * @param returnType the return value type, +	public HandlerResult(Object handler, Object returnValue, ResolvableType returnType) {, +		this(handler, returnValue, returnType, null);, +	 * @param returnType the return value type, +	public HandlerResult(Object handler, Object returnValue, ResolvableType returnType, ModelMap model) {, +		Assert.notNull(returnType, "'returnType' is required");, +		this.returnType = returnType;, +	public ResolvableType getReturnType() {, +		return this.returnType;, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/SimpleResultHandler.java, +		ResolvableType type = result.getReturnType();, +			Class<?> clazz = result.getReturnType().getGeneric(0).getRawClass();, +		ResolvableType returnType = result.getReturnType();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerResult.java, +	private final ResolvableType returnType;, +	 * @param returnType the return value type, +	public HandlerResult(Object handler, Object returnValue, ResolvableType returnType) {, +		this(handler, returnValue, returnType, null);, +	 * @param returnType the return value type, +	public HandlerResult(Object handler, Object returnValue, ResolvableType returnType, ModelMap model) {, +		Assert.notNull(returnType, "'returnType' is required");, +		this.returnType = returnType;, +	public ResolvableType getReturnType() {, +		return this.returnType;, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/SimpleResultHandler.java, +		ResolvableType type = result.getReturnType();, +			Class<?> clazz = result.getReturnType().getGeneric(0).getRawClass();, +		ResolvableType returnType = result.getReturnType();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java, +		ResolvableType returnType = result.getReturnType();, +		ResolvableType bodyType = result.getReturnType();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerResult.java, +	private final ResolvableType returnType;, +	 * @param returnType the return value type, +	public HandlerResult(Object handler, Object returnValue, ResolvableType returnType) {, +		this(handler, returnValue, returnType, null);, +	 * @param returnType the return value type, +	public HandlerResult(Object handler, Object returnValue, ResolvableType returnType, ModelMap model) {, +		Assert.notNull(returnType, "'returnType' is required");, +		this.returnType = returnType;, +	public ResolvableType getReturnType() {, +		return this.returnType;, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/SimpleResultHandler.java, +		ResolvableType type = result.getReturnType();, +			Class<?> clazz = result.getReturnType().getGeneric(0).getRawClass();, +		ResolvableType returnType = result.getReturnType();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java, +		ResolvableType returnType = result.getReturnType();, +		ResolvableType bodyType = result.getReturnType();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler.java, +		ResolvableType returnType = result.getReturnType();, +			ResolvableType genericType = result.getReturnType().getGeneric(0);, +		ResolvableType returnType = result.getReturnType();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/HandlerResult.java, +	private final ResolvableType returnType;, +	 * @param returnType the return value type, +	public HandlerResult(Object handler, Object returnValue, ResolvableType returnType) {, +		this(handler, returnValue, returnType, null);, +	 * @param returnType the return value type, +	public HandlerResult(Object handler, Object returnValue, ResolvableType returnType, ModelMap model) {, +		Assert.notNull(returnType, "'returnType' is required");, +		this.returnType = returnType;, +	public ResolvableType getReturnType() {, +		return this.returnType;, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/SimpleResultHandler.java, +		ResolvableType type = result.getReturnType();, +			Class<?> clazz = result.getReturnType().getGeneric(0).getRawClass();, +		ResolvableType returnType = result.getReturnType();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java, +		ResolvableType returnType = result.getReturnType();, +		ResolvableType bodyType = result.getReturnType();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler.java, +		ResolvableType returnType = result.getReturnType();, +			ResolvableType genericType = result.getReturnType().getGeneric(0);, +		ResolvableType returnType = result.getReturnType();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/ViewResolutionResultHandler.java, +		Class<?> clazz = result.getReturnType().getRawClass();, +			clazz = result.getReturnType().getGeneric(0).getRawClass();, +		ResolvableType returnType = result.getReturnType();]