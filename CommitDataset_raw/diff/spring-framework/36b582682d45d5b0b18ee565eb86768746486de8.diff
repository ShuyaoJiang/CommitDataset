[+++ b/org.springframework.web/src/main/java/org/springframework/web/bind/support/ConfigurableWebBindingInitializer.java, + * Copyright 2002-2011 the original author or authors., +	private boolean autoGrowNestedPaths = true;, +, +	 * Set whether a binder should attempt to "auto-grow" a nested path that contains a null value., +	 * <p>If "true", a null path location will be populated with a default object value and traversed, +	 * instead of resulting in an exception. This flag also enables auto-growth of collection elements, +	 * when accessing an out-of-bounds index., +	 * <p>Default is "true" on a standard DataBinder. Note that this feature is only supported, +	 * for bean property access (DataBinder's default mode), not for field access., +	 * @see #initBeanPropertyAccess(), +	 * @see org.springframework.validation.DataBinder#setAutoGrowNestedPaths, +	 */, +	public void setAutoGrowNestedPaths(boolean autoGrowNestedPaths) {, +		this.autoGrowNestedPaths = autoGrowNestedPaths;, +	}, +, +	/**, +	 * Return whether a binder should attempt to "auto-grow" a nested path that contains a null value., +	 */, +	public boolean isAutoGrowNestedPaths() {, +		return this.autoGrowNestedPaths;, +	}, +, +	/**, +	 * Switch this to <code>true</code> in order to enforce direct field access., +	 * @see org.springframework.validation.DataBinder#initDirectFieldAccess(), +	 * @see org.springframework.validation.DataBinder#initBeanPropertyAccess(), +	 * Return whether to use direct field access instead of bean property access., +	 */, +	public boolean isDirectFieldAccess() {, +		return directFieldAccess;, +	}, +, +	/**, +		binder.setAutoGrowNestedPaths(this.autoGrowNestedPaths);]