[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			if (ex instanceof BeanCurrentlyInCreationException) {, +				if (logger.isDebugEnabled()) {, +					logger.debug("Bean currently in creation on FactoryBean type check: " + ex);, +				}, +			}, +			else {, +			}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			if (ex instanceof BeanCurrentlyInCreationException) {, +				if (logger.isDebugEnabled()) {, +					logger.debug("Bean currently in creation on FactoryBean type check: " + ex);, +				}, +			}, +			else {, +			}, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/FactoryBeanTests.java, +public class FactoryBeanTests {, +		assertNull(factory.getType("betaFactory"));, +, +, +		public BetaFactoryBean(Alpha alpha) {, +		}, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			if (ex instanceof BeanCurrentlyInCreationException) {, +				if (logger.isDebugEnabled()) {, +					logger.debug("Bean currently in creation on FactoryBean type check: " + ex);, +				}, +			}, +			else {, +			}, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/FactoryBeanTests.java, +public class FactoryBeanTests {, +		assertNull(factory.getType("betaFactory"));, +, +, +		public BetaFactoryBean(Alpha alpha) {, +		}, +, +++ b/spring-beans/src/test/resources/org/springframework/beans/factory/FactoryBeanTests-withAutowiring.xml, +  <bean id="betaFactory" class="org.springframework.beans.factory.FactoryBeanTests$BetaFactoryBean" autowire="constructor">, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			if (ex instanceof BeanCurrentlyInCreationException) {, +				if (logger.isDebugEnabled()) {, +					logger.debug("Bean currently in creation on FactoryBean type check: " + ex);, +				}, +			}, +			else {, +			}, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/FactoryBeanTests.java, +public class FactoryBeanTests {, +		assertNull(factory.getType("betaFactory"));, +, +, +		public BetaFactoryBean(Alpha alpha) {, +		}, +, +++ b/spring-beans/src/test/resources/org/springframework/beans/factory/FactoryBeanTests-withAutowiring.xml, +  <bean id="betaFactory" class="org.springframework.beans.factory.FactoryBeanTests$BetaFactoryBean" autowire="constructor">, +++ b/spring-context/src/main/java/org/springframework/context/ApplicationEventPublisher.java, + * Serves as super-interface for {@link ApplicationContext}., +	 * <p>If the specified {@code event} is not an {@link ApplicationEvent},, +	 * it is wrapped in a {@link PayloadApplicationEvent}., +	 * @since 4.2, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			if (ex instanceof BeanCurrentlyInCreationException) {, +				if (logger.isDebugEnabled()) {, +					logger.debug("Bean currently in creation on FactoryBean type check: " + ex);, +				}, +			}, +			else {, +			}, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/FactoryBeanTests.java, +public class FactoryBeanTests {, +		assertNull(factory.getType("betaFactory"));, +, +, +		public BetaFactoryBean(Alpha alpha) {, +		}, +, +++ b/spring-beans/src/test/resources/org/springframework/beans/factory/FactoryBeanTests-withAutowiring.xml, +  <bean id="betaFactory" class="org.springframework.beans.factory.FactoryBeanTests$BetaFactoryBean" autowire="constructor">, +++ b/spring-context/src/main/java/org/springframework/context/ApplicationEventPublisher.java, + * Serves as super-interface for {@link ApplicationContext}., +	 * <p>If the specified {@code event} is not an {@link ApplicationEvent},, +	 * it is wrapped in a {@link PayloadApplicationEvent}., +	 * @since 4.2, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, +import org.springframework.util.ClassUtils;, +					if (beanInstance != null && !ClassUtils.isAssignableValue(beanMethod.getReturnType(), beanInstance)) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			if (ex instanceof BeanCurrentlyInCreationException) {, +				if (logger.isDebugEnabled()) {, +					logger.debug("Bean currently in creation on FactoryBean type check: " + ex);, +				}, +			}, +			else {, +			}, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/FactoryBeanTests.java]