[+++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/AnnotatedModelBinderConfigurer.java, +final class AnnotatedModelBinderConfigurer {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/AnnotatedModelBinderConfigurer.java, +final class AnnotatedModelBinderConfigurer {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/BindingConfiguration.java, +public final class BindingConfiguration {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/AnnotatedModelBinderConfigurer.java, +final class AnnotatedModelBinderConfigurer {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/BindingConfiguration.java, +public final class BindingConfiguration {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +			// TODO should probably only allow binding to be created if property exists on model, +						// TODO should probably force property exists before even creating binding, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/AnnotatedModelBinderConfigurer.java, +final class AnnotatedModelBinderConfigurer {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/BindingConfiguration.java, +public final class BindingConfiguration {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +			// TODO should probably only allow binding to be created if property exists on model, +						// TODO should probably force property exists before even creating binding, +++ b/org.springframework.context/src/main/java/org/springframework/ui/lifecycle/BindAndValidateLifecycle.java, + * Implementation of the model bind and validate lifecycle lifecycle., +public final class BindAndValidateLifecycle {, +	private Binder binder;, +	private ValidationDecider validationDecider = ValidationDecider.ALWAYS_VALIDATE;, +, +	private final AlertContext alertContext;, +, +	/**, +	 * Create a new bind and validate lifecycle., +	 * @param binder the binder to use for model binding, +	 * @param validator the validator to use for model validation, +	 * @param alertContext a context for adding binding and validation-related alerts, +	 */, +	public BindAndValidateLifecycle(Binder binder, Validator validator, AlertContext alertContext) {, +		this.validator = validator;, +	/**, +	 * Configures the strategy that determines if validation should execute after binding., +	 * @param validationDecider the validation decider, +	 */, +	public void setValidationDecider(ValidationDecider validationDecider) {, +		this.validationDecider = validationDecider;, +	}, +, +			// TODO - you may want to ignore some alerts like propertyNotFound, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/AnnotatedModelBinderConfigurer.java, +final class AnnotatedModelBinderConfigurer {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/BindingConfiguration.java, +public final class BindingConfiguration {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +			// TODO should probably only allow binding to be created if property exists on model, +						// TODO should probably force property exists before even creating binding, +++ b/org.springframework.context/src/main/java/org/springframework/ui/lifecycle/BindAndValidateLifecycle.java, + * Implementation of the model bind and validate lifecycle lifecycle., +public final class BindAndValidateLifecycle {, +	private Binder binder;, +	private ValidationDecider validationDecider = ValidationDecider.ALWAYS_VALIDATE;, +, +	private final AlertContext alertContext;, +, +	/**, +	 * Create a new bind and validate lifecycle., +	 * @param binder the binder to use for model binding, +	 * @param validator the validator to use for model validation, +	 * @param alertContext a context for adding binding and validation-related alerts, +	 */, +	public BindAndValidateLifecycle(Binder binder, Validator validator, AlertContext alertContext) {, +		this.validator = validator;, +	/**, +	 * Configures the strategy that determines if validation should execute after binding., +	 * @param validationDecider the validation decider, +	 */, +	public void setValidationDecider(ValidationDecider validationDecider) {, +		this.validationDecider = validationDecider;, +	}, +, +			// TODO - you may want to ignore some alerts like propertyNotFound, +++ b/org.springframework.context/src/main/java/org/springframework/ui/lifecycle/ValidationDecider.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.ui.lifecycle;, +, +import org.springframework.ui.binding.BindingResults;, +, +/**, + * Decides if validation should run for an execution of the bind and validate lifecycle., + * @author Keith Donald]