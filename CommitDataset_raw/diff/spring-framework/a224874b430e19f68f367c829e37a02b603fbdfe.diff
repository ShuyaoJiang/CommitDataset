[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/ViewResolutionResultHandler.java, +		List<Mono<?>> valueMonos = new ArrayList<>();, +				if (adapter.getDescriptor().isMultiValue()) {, +					Flux<Object> value = adapter.toFlux(entry.getValue());, +					valueMonos.add(value.collectList().defaultIfEmpty(Collections.emptyList()));, +				}, +				else {, +					Mono<Object> value = adapter.toMono(entry.getValue());, +					valueMonos.add(value.defaultIfEmpty(NO_VALUE));, +				}, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/ViewResolutionResultHandler.java, +		List<Mono<?>> valueMonos = new ArrayList<>();, +				if (adapter.getDescriptor().isMultiValue()) {, +					Flux<Object> value = adapter.toFlux(entry.getValue());, +					valueMonos.add(value.collectList().defaultIfEmpty(Collections.emptyList()));, +				}, +				else {, +					Mono<Object> value = adapter.toMono(entry.getValue());, +					valueMonos.add(value.defaultIfEmpty(NO_VALUE));, +				}, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/result/view/ViewResolutionResultHandlerTests.java, +import rx.Observable;, +				.addAttribute("attr1", Mono.just(new TestBean("Bean1"))), +				.addAttribute("attr2", Flux.just(new TestBean("Bean1"), new TestBean("Bean2"))), +				.addAttribute("attr3", Single.just(new TestBean("Bean2"))), +				.addAttribute("attr4", Observable.just(new TestBean("Bean1"), new TestBean("Bean2"))), +				.addAttribute("attr5", Mono.empty());, +				"attr1=TestBean[name=Bean1], " +, +				"attr2=[TestBean[name=Bean1], TestBean[name=Bean2]], " +, +				"attr3=TestBean[name=Bean2], " +, +				"attr4=[TestBean[name=Bean1], TestBean[name=Bean2]], " +, +				"org.springframework.validation.BindingResult.attr1=" +, +				"org.springframework.validation.BindingResult.attr3=" +]