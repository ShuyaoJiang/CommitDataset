[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java, + * @author Juergen Hoeller, +		MessageMapping messageAnn = AnnotationUtils.findAnnotation(method, MessageMapping.class);, +		if (messageAnn != null) {, +			MessageMapping typeAnn = AnnotationUtils.findAnnotation(handlerType, MessageMapping.class);, +			// Only actually register it if there are destinations specified;, +			// otherwise @MessageMapping is just being used as a (meta-annotation) marker., +			if (messageAnn.value().length > 0 || (typeAnn != null && typeAnn.value().length > 0)) {, +				SimpMessageMappingInfo result = createMessageMappingCondition(messageAnn.value());, +				if (typeAnn != null) {, +					result = createMessageMappingCondition(typeAnn.value()).combine(result);, +		}, +, +		SubscribeMapping subscribeAnn = AnnotationUtils.findAnnotation(method, SubscribeMapping.class);, +		if (subscribeAnn != null) {, +			MessageMapping typeAnn = AnnotationUtils.findAnnotation(handlerType, MessageMapping.class);, +			// Only actually register it if there are destinations specified;, +			// otherwise @SubscribeMapping is just being used as a (meta-annotation) marker., +			if (subscribeAnn.value().length > 0 || (typeAnn != null && typeAnn.value().length > 0)) {, +				SimpMessageMappingInfo result = createSubscribeMappingCondition(subscribeAnn.value());, +				if (typeAnn != null) {, +					result = createMessageMappingCondition(typeAnn.value()).combine(result);, +		}, +, +	private SimpMessageMappingInfo createMessageMappingCondition(String[] destinations) {, +		String[] resolvedDestinations = resolveEmbeddedValuesInDestinations(destinations);, +				new DestinationPatternsMessageCondition(resolvedDestinations, this.pathMatcher));, +	private SimpMessageMappingInfo createSubscribeMappingCondition(String[] destinations) {, +		String[] resolvedDestinations = resolveEmbeddedValuesInDestinations(destinations);, +				new DestinationPatternsMessageCondition(resolvedDestinations, this.pathMatcher));]