[+++ b/src/docs/asciidoc/web/webflux.adoc, +* <<webflux-web-handler-api>> -- slightly higher level but still general, +=== WebHandler, +=== Message Codecs, +[[webflux-filters]], +=== Filters, +[.small]#<<web.adoc#filters,Same in Spring MVC>>#, +, +As part of the <<webflux-web-handler-api>>, the `spring-web` module provides a number of, +`WebFilter` implementations., +, +, +, +[[webflux-filters-forwarded-headers]], +==== Forwarded Headers, +[.small]#<<web.adoc#filters-forwarded-headers,Same in Spring MVC>>#, +, +As a request goes through proxies such as load balancers the host, port, and, +scheme may change presenting a challenge for applications that need to create links, +to resources since the links should reflect the host, port, and scheme of the, +original request as seen from a client perspective., +, +https://tools.ietf.org/html/rfc7239[RFC 7239] defines the "Forwarded" HTTP header, +for proxies to use to provide information about the original request. There are also, +other non-standard headers in use such as "X-Forwarded-Host", "X-Forwarded-Port",, +and "X-Forwarded-Proto"., +, +`ForwardedHeaderFilter` detects, extracts, and uses information from the "Forwarded", +header, or from "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto"., +It wraps the request in order to overlay its host, port, and scheme and also "hides", +the forwarded headers for subsequent processing., +, +Note that there are security considerations when using forwarded headers as explained, +in Section 8 of RFC 7239. At the application level it is difficult to determine whether, +forwarded headers can be trusted or not. This is why the network upstream should be, +configured correctly to filter out untrusted forwarded headers from the outside., +, +Applications that don't have a proxy and don't need to use forwarded headers can, +configure the `ForwardedHeaderFilter` to remove and ignore such headers., +, +, +[[webflux-filters-cors]], +==== CORS, +[.small]#<<web.adoc#filters-cors,Same in Spring MVC>>#, +, +Spring WebFlux provides fine-grained support for CORS configuration through annotations on, +controllers. However when used with Spring Security it is advisable to rely on the built-in, +`CorsFilter` that must be ordered ahead of Spring Security's chain of filters., +, +See the section on <<webflux-cors>> and the <<webflux-cors-webfilter>> for more details., +, +, +, +<<webflux-web-handler-api>>., +++ b/src/docs/asciidoc/web/webflux.adoc, +* <<webflux-web-handler-api>> -- slightly higher level but still general, +=== WebHandler, +=== Message Codecs, +[[webflux-filters]], +=== Filters, +[.small]#<<web.adoc#filters,Same in Spring MVC>>#, +, +As part of the <<webflux-web-handler-api>>, the `spring-web` module provides a number of, +`WebFilter` implementations., +, +, +, +[[webflux-filters-forwarded-headers]], +==== Forwarded Headers, +[.small]#<<web.adoc#filters-forwarded-headers,Same in Spring MVC>>#, +, +As a request goes through proxies such as load balancers the host, port, and, +scheme may change presenting a challenge for applications that need to create links, +to resources since the links should reflect the host, port, and scheme of the, +original request as seen from a client perspective., +, +https://tools.ietf.org/html/rfc7239[RFC 7239] defines the "Forwarded" HTTP header, +for proxies to use to provide information about the original request. There are also, +other non-standard headers in use such as "X-Forwarded-Host", "X-Forwarded-Port",, +and "X-Forwarded-Proto"., +, +`ForwardedHeaderFilter` detects, extracts, and uses information from the "Forwarded", +header, or from "X-Forwarded-Host", "X-Forwarded-Port", and "X-Forwarded-Proto"., +It wraps the request in order to overlay its host, port, and scheme and also "hides", +the forwarded headers for subsequent processing., +, +Note that there are security considerations when using forwarded headers as explained, +in Section 8 of RFC 7239. At the application level it is difficult to determine whether, +forwarded headers can be trusted or not. This is why the network upstream should be, +configured correctly to filter out untrusted forwarded headers from the outside., +, +Applications that don't have a proxy and don't need to use forwarded headers can, +configure the `ForwardedHeaderFilter` to remove and ignore such headers., +, +, +[[webflux-filters-cors]], +==== CORS, +[.small]#<<web.adoc#filters-cors,Same in Spring MVC>>#, +, +Spring WebFlux provides fine-grained support for CORS configuration through annotations on]