[+++ b/spring-aspects/src/main/java/org/springframework/transaction/aspectj/AbstractTransactionAspect.aj, +		createTransactionIfNecessary(method, txObject.getClass());, +++ b/spring-aspects/src/main/java/org/springframework/transaction/aspectj/AbstractTransactionAspect.aj, +		createTransactionIfNecessary(method, txObject.getClass());, +++ b/spring-aspects/src/test/java/org/springframework/beans/factory/aspectj/AbstractBeanConfigurerTests.java, +		assertNotNull(deserializedOrder);, +++ b/spring-aspects/src/main/java/org/springframework/transaction/aspectj/AbstractTransactionAspect.aj, +		createTransactionIfNecessary(method, txObject.getClass());, +++ b/spring-aspects/src/test/java/org/springframework/beans/factory/aspectj/AbstractBeanConfigurerTests.java, +		assertNotNull(deserializedOrder);, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/CustomScopeConfigurerTests.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-aspects/src/main/java/org/springframework/transaction/aspectj/AbstractTransactionAspect.aj, +		createTransactionIfNecessary(method, txObject.getClass());, +++ b/spring-aspects/src/test/java/org/springframework/beans/factory/aspectj/AbstractBeanConfigurerTests.java, +		assertNotNull(deserializedOrder);, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/CustomScopeConfigurerTests.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/PropertyResourceConfigurerTests.java, +import static org.junit.Assert.assertNotNull;, +		assertNotNull(tb);, +++ b/spring-aspects/src/main/java/org/springframework/transaction/aspectj/AbstractTransactionAspect.aj, +		createTransactionIfNecessary(method, txObject.getClass());, +++ b/spring-aspects/src/test/java/org/springframework/beans/factory/aspectj/AbstractBeanConfigurerTests.java, +		assertNotNull(deserializedOrder);, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/CustomScopeConfigurerTests.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/PropertyResourceConfigurerTests.java, +import static org.junit.Assert.assertNotNull;, +		assertNotNull(tb);, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/support/security/CallbacksSecurityTests.java, +		new AccessControlContext(new ProtectionDomain[] { pd });, +++ b/spring-aspects/src/main/java/org/springframework/transaction/aspectj/AbstractTransactionAspect.aj, +		createTransactionIfNecessary(method, txObject.getClass());, +++ b/spring-aspects/src/test/java/org/springframework/beans/factory/aspectj/AbstractBeanConfigurerTests.java, +		assertNotNull(deserializedOrder);, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/CustomScopeConfigurerTests.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/PropertyResourceConfigurerTests.java, +import static org.junit.Assert.assertNotNull;, +		assertNotNull(tb);, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/support/security/CallbacksSecurityTests.java, +		new AccessControlContext(new ProtectionDomain[] { pd });, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/xml/AbstractBeanFactoryTests.java, +			getBeanFactory().getBean("rod", BeanFactory.class);, +			getBeanFactory().getBean("rod", BeanFactory.class);, +			getBeanFactory().getBean("Mr Squiggle");, +			getBeanFactory().getBean("typeMismatch");, +		assertNotNull(tb);, +++ b/spring-aspects/src/main/java/org/springframework/transaction/aspectj/AbstractTransactionAspect.aj, +		createTransactionIfNecessary(method, txObject.getClass());, +++ b/spring-aspects/src/test/java/org/springframework/beans/factory/aspectj/AbstractBeanConfigurerTests.java, +		assertNotNull(deserializedOrder);, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/CustomScopeConfigurerTests.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/PropertyResourceConfigurerTests.java, +import static org.junit.Assert.assertNotNull;, +		assertNotNull(tb);, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/support/security/CallbacksSecurityTests.java, +		new AccessControlContext(new ProtectionDomain[] { pd });, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/xml/AbstractBeanFactoryTests.java, +			getBeanFactory().getBean("rod", BeanFactory.class);, +			getBeanFactory().getBean("rod", BeanFactory.class);, +			getBeanFactory().getBean("Mr Squiggle");, +			getBeanFactory().getBean("typeMismatch");, +		assertNotNull(tb);, +++ b/spring-context/src/test/java/org/springframework/jmx/export/assembler/AbstractJmxAssemblerTests.java, + * Copyright 2002-2013 the original author or authors., +		assertNotNull(bean);, +		assertNotNull(bean);, +++ b/spring-aspects/src/main/java/org/springframework/transaction/aspectj/AbstractTransactionAspect.aj, +		createTransactionIfNecessary(method, txObject.getClass());, +++ b/spring-aspects/src/test/java/org/springframework/beans/factory/aspectj/AbstractBeanConfigurerTests.java, +		assertNotNull(deserializedOrder);, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/CustomScopeConfigurerTests.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/PropertyResourceConfigurerTests.java, +import static org.junit.Assert.assertNotNull;, +		assertNotNull(tb);, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/support/security/CallbacksSecurityTests.java, +		new AccessControlContext(new ProtectionDomain[] { pd });, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/xml/AbstractBeanFactoryTests.java, +			getBeanFactory().getBean("rod", BeanFactory.class);, +			getBeanFactory().getBean("rod", BeanFactory.class);, +			getBeanFactory().getBean("Mr Squiggle");, +			getBeanFactory().getBean("typeMismatch");, +		assertNotNull(tb);, +++ b/spring-context/src/test/java/org/springframework/jmx/export/assembler/AbstractJmxAssemblerTests.java, + * Copyright 2002-2013 the original author or authors., +		assertNotNull(bean);, +		assertNotNull(bean);, +++ b/spring-context/src/test/java/org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssemblerMappedTests.java, + * Copyright 2002-2013 the original author or authors., +			getWithMapping("com.foo.bar.Unknown");, +			getWithMapping("JmxTestBean");, +++ b/spring-aspects/src/main/java/org/springframework/transaction/aspectj/AbstractTransactionAspect.aj, +		createTransactionIfNecessary(method, txObject.getClass());, +++ b/spring-aspects/src/test/java/org/springframework/beans/factory/aspectj/AbstractBeanConfigurerTests.java, +		assertNotNull(deserializedOrder);, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/CustomScopeConfigurerTests.java]