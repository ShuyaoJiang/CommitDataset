[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultWebTestClient.java, +		public XpathAssertions xpath(String expression, @Nullable Map<String, String> namespaces, Object... args) {, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultWebTestClient.java, +		public XpathAssertions xpath(String expression, @Nullable Map<String, String> namespaces, Object... args) {, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +import org.springframework.lang.Nullable;, +		 * Parse expected and actual response content as XML and assert that, +		 * the two are "similar", i.e. they contain the same elements and, +		 * attributes regardless of order., +		 * <p>Use of this method requires the, +		 * <a href="https://github.com/xmlunit/xmlunit">XMLUnit</a> library on, +		 * the classpath., +		 * @see org.springframework.test.util.XmlExpectationsHelper#assertXmlEqual(String, String), +		 * Access to response body assertions using an XPath expression to, +		 * inspect a specific subset of the body., +		 * @param expression the XPath expression, +		 * Access to response body assertions with specific namespaces using an, +		 * XPath expression to inspect a specific subset of the body., +		 * @param expression the XPath expression, +		 * @param namespaces namespaces to use, +		XpathAssertions xpath(String expression, @Nullable  Map<String, String> namespaces, Object... args);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultWebTestClient.java, +		public XpathAssertions xpath(String expression, @Nullable Map<String, String> namespaces, Object... args) {, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +import org.springframework.lang.Nullable;, +		 * Parse expected and actual response content as XML and assert that, +		 * the two are "similar", i.e. they contain the same elements and, +		 * attributes regardless of order., +		 * <p>Use of this method requires the, +		 * <a href="https://github.com/xmlunit/xmlunit">XMLUnit</a> library on, +		 * the classpath., +		 * @see org.springframework.test.util.XmlExpectationsHelper#assertXmlEqual(String, String), +		 * Access to response body assertions using an XPath expression to, +		 * inspect a specific subset of the body., +		 * @param expression the XPath expression, +		 * Access to response body assertions with specific namespaces using an, +		 * XPath expression to inspect a specific subset of the body., +		 * @param expression the XPath expression, +		 * @param namespaces namespaces to use, +		XpathAssertions xpath(String expression, @Nullable  Map<String, String> namespaces, Object... args);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/XpathAssertions.java, +import org.springframework.util.Assert;, +, + * XPath assertions for the {@link WebTestClient}., + * @author Rossen Stoyanchev, +, +	XpathAssertions(WebTestClient.BodyContentSpec spec,, +			String expression, @Nullable Map<String, String> namespaces, Object... args) {, +, +		this.xpathHelper = initXpathHelper(expression, namespaces, args);, +	private static XpathExpectationsHelper initXpathHelper(, +			String expression, @Nullable Map<String, String> namespaces, Object[] args) {, +, +		try {, +			return new XpathExpectationsHelper(expression, namespaces, args);, +		}, +		catch (XPathExpressionException ex) {, +			throw new AssertionError("XML parsing error", ex);, +		}, +	}, +, +, +	 * Delegates to {@link XpathExpectationsHelper#assertString(byte[], String, String)}, +		return assertWith(() -> this.xpathHelper.assertString(getContent(), getCharset(), expectedValue));, +	 * Delegates to {@link XpathExpectationsHelper#assertNumber(byte[], String, Double)}, +		return assertWith(() -> this.xpathHelper.assertNumber(getContent(), getCharset(), expectedValue));, +	 * Delegates to {@link XpathExpectationsHelper#assertBoolean(byte[], String, boolean)}, +		return assertWith(() -> this.xpathHelper.assertBoolean(getContent(), getCharset(), expectedValue));, +	 * Delegates to {@link XpathExpectationsHelper#exists(byte[], String)}, +		return assertWith(() -> this.xpathHelper.exists(getContent(), getCharset()));, +	 * Delegates to {@link XpathExpectationsHelper#doesNotExist(byte[], String)}, +		return assertWith(() -> this.xpathHelper.doesNotExist(getContent(), getCharset()));, +	 * Delegates to {@link XpathExpectationsHelper[#assertNodeCount(byte[], String, int)}, +		return assertWith(() -> this.xpathHelper.assertNodeCount(getContent(), getCharset(), expectedCount));, +	private WebTestClient.BodyContentSpec assertWith(CheckedExceptionTask task) {, +		try {, +			task.run();, +		catch (Exception ex) {, +			throw new AssertionError("XML parsing error", ex);, +	private byte[] getContent() {, +		byte[] body = this.bodySpec.returnResult().getResponseBody();, +		Assert.notNull(body, "Expected body content");, +		return body;, +	private String getCharset() {, +		return Optional.of(this.bodySpec.returnResult()), +, +	private interface CheckedExceptionTask {, +		void run() throws Exception;, +, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultWebTestClient.java, +		public XpathAssertions xpath(String expression, @Nullable Map<String, String> namespaces, Object... args) {, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +import org.springframework.lang.Nullable;, +		 * Parse expected and actual response content as XML and assert that, +		 * the two are "similar", i.e. they contain the same elements and, +		 * attributes regardless of order., +		 * <p>Use of this method requires the, +		 * <a href="https://github.com/xmlunit/xmlunit">XMLUnit</a> library on, +		 * the classpath., +		 * @see org.springframework.test.util.XmlExpectationsHelper#assertXmlEqual(String, String)]