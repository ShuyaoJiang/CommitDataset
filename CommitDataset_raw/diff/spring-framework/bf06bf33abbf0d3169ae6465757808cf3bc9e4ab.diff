[+++ b/spring-test/src/main/java/org/springframework/test/context/web/ServletTestExecutionListener.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.web.context.request.RequestAttributes;, +	/**, +	 * Attribute name for a request attribute which indicates that the, +	 * {@link MockHttpServletRequest} stored in the {@link RequestAttributes}, +	 * in Spring Web's {@link RequestContextHolder} was created by the TestContext, +	 * framework., +	 *, +	 * <p>Permissible values include {@link Boolean#TRUE} and {@link Boolean#FALSE}., +	 * @since 4.2, +	 */, +	public static final String CREATED_BY_THE_TESTCONTEXT_FRAMEWORK = Conventions.getQualifiedAttributeName(, +		ServletTestExecutionListener.class, "createdByTheTestContextFramework");, +, +			request.setAttribute(CREATED_BY_THE_TESTCONTEXT_FRAMEWORK, Boolean.TRUE);, +++ b/spring-test/src/main/java/org/springframework/test/context/web/ServletTestExecutionListener.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.web.context.request.RequestAttributes;, +	/**, +	 * Attribute name for a request attribute which indicates that the, +	 * {@link MockHttpServletRequest} stored in the {@link RequestAttributes}, +	 * in Spring Web's {@link RequestContextHolder} was created by the TestContext, +	 * framework., +	 *, +	 * <p>Permissible values include {@link Boolean#TRUE} and {@link Boolean#FALSE}., +	 * @since 4.2, +	 */, +	public static final String CREATED_BY_THE_TESTCONTEXT_FRAMEWORK = Conventions.getQualifiedAttributeName(, +		ServletTestExecutionListener.class, "createdByTheTestContextFramework");, +, +			request.setAttribute(CREATED_BY_THE_TESTCONTEXT_FRAMEWORK, Boolean.TRUE);, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/MockMvc.java, +import org.springframework.web.context.request.RequestAttributes;, +		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes();, +		RequestContextHolder.setRequestAttributes(previousAttributes);, +, +++ b/spring-test/src/main/java/org/springframework/test/context/web/ServletTestExecutionListener.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.web.context.request.RequestAttributes;, +	/**, +	 * Attribute name for a request attribute which indicates that the, +	 * {@link MockHttpServletRequest} stored in the {@link RequestAttributes}, +	 * in Spring Web's {@link RequestContextHolder} was created by the TestContext, +	 * framework., +	 *, +	 * <p>Permissible values include {@link Boolean#TRUE} and {@link Boolean#FALSE}., +	 * @since 4.2, +	 */, +	public static final String CREATED_BY_THE_TESTCONTEXT_FRAMEWORK = Conventions.getQualifiedAttributeName(, +		ServletTestExecutionListener.class, "createdByTheTestContextFramework");, +, +			request.setAttribute(CREATED_BY_THE_TESTCONTEXT_FRAMEWORK, Boolean.TRUE);, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/MockMvc.java, +import org.springframework.web.context.request.RequestAttributes;, +		RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes();, +		RequestContextHolder.setRequestAttributes(previousAttributes);, +, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder.java, + * Copyright 2002-2015 the original author or authors., +import javax.servlet.http.HttpServletRequest;, +import org.springframework.test.context.web.ServletTestExecutionListener;, +import org.springframework.web.context.request.RequestAttributes;, +import org.springframework.web.context.request.RequestContextHolder;, +import org.springframework.web.context.request.ServletRequestAttributes;, + * @author Sam Brannen, +	 * Create a {@link MockHttpServletRequest}., +	 * <p>If an instance of {@code MockHttpServletRequest} that was created, +	 * by the <em>Spring TestContext Framework</em> is available via the, +	 * {@link RequestAttributes} bound to the current thread in, +	 * {@link RequestContextHolder}, this method simply returns that instance., +	 * <p>Otherwise, this method creates a new {@code MockHttpServletRequest}, +	 * based on the supplied {@link ServletContext}., +	 * <p>Can be overridden in subclasses., +	 * @see RequestContextHolder#getRequestAttributes(), +	 * @see ServletRequestAttributes, +	 * @see ServletTestExecutionListener#CREATED_BY_THE_TESTCONTEXT_FRAMEWORK, +		RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes();, +		if (requestAttributes instanceof ServletRequestAttributes) {, +			HttpServletRequest request = ((ServletRequestAttributes) requestAttributes).getRequest();, +			if (request instanceof MockHttpServletRequest) {, +				MockHttpServletRequest mockRequest = (MockHttpServletRequest) request;, +				Object createdByTcf = mockRequest.getAttribute(ServletTestExecutionListener.CREATED_BY_THE_TESTCONTEXT_FRAMEWORK);, +				if (Boolean.TRUE.equals(createdByTcf)) {, +					return mockRequest;, +				}, +			}, +		}, +, +++ b/spring-test/src/main/java/org/springframework/test/context/web/ServletTestExecutionListener.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.web.context.request.RequestAttributes;, +	/**, +	 * Attribute name for a request attribute which indicates that the, +	 * {@link MockHttpServletRequest} stored in the {@link RequestAttributes}, +	 * in Spring Web's {@link RequestContextHolder} was created by the TestContext, +	 * framework., +	 *, +	 * <p>Permissible values include {@link Boolean#TRUE} and {@link Boolean#FALSE}., +	 * @since 4.2]