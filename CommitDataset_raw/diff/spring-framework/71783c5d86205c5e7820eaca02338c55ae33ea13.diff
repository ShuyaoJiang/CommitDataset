[+++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java, +	private RequestConfig requestConfig;, +	 * <p>Additional properties can be configured by specifying a, +	 * {@link RequestConfig} instance on a custom {@link HttpClient}., +	 * @see RequestConfig#getConnectTimeout(), +		this.requestConfig = cloneRequestConfig(), +				.setConnectTimeout(timeout).build();, +	 * <p>Additional properties can be configured by specifying a, +	 * {@link RequestConfig} instance on a custom {@link HttpClient}., +	 * @see RequestConfig#getConnectionRequestTimeout(), +		this.requestConfig = cloneRequestConfig(), +				.setConnectionRequestTimeout(connectionRequestTimeout).build();, +	 * <p>Additional properties can be configured by specifying a, +	 * {@link RequestConfig} instance on a custom {@link HttpClient}., +	 * @see RequestConfig#getSocketTimeout(), +		this.requestConfig = cloneRequestConfig(), +				.setSocketTimeout(timeout).build();, +	private RequestConfig.Builder cloneRequestConfig() {, +		return this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom();, +	}, +, +				config = this.requestConfig;, +			if (config != null) {, +		}, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java, +	private RequestConfig requestConfig;, +	 * <p>Additional properties can be configured by specifying a, +	 * {@link RequestConfig} instance on a custom {@link HttpClient}., +	 * @see RequestConfig#getConnectTimeout(), +		this.requestConfig = cloneRequestConfig(), +				.setConnectTimeout(timeout).build();, +	 * <p>Additional properties can be configured by specifying a, +	 * {@link RequestConfig} instance on a custom {@link HttpClient}., +	 * @see RequestConfig#getConnectionRequestTimeout(), +		this.requestConfig = cloneRequestConfig(), +				.setConnectionRequestTimeout(connectionRequestTimeout).build();, +	 * <p>Additional properties can be configured by specifying a, +	 * {@link RequestConfig} instance on a custom {@link HttpClient}., +	 * @see RequestConfig#getSocketTimeout(), +		this.requestConfig = cloneRequestConfig(), +				.setSocketTimeout(timeout).build();, +	private RequestConfig.Builder cloneRequestConfig() {, +		return this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom();, +	}, +, +				config = this.requestConfig;, +			if (config != null) {, +		}, +++ b/spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.java, +	private RequestConfig requestConfig;, +		this(createDefaultHttpClient(), RequestConfig.custom(), +				.setSocketTimeout(DEFAULT_READ_TIMEOUT_MILLISECONDS).build());, +	}, +, +	private static HttpClient createDefaultHttpClient() {, +		return HttpClientBuilder.create().setConnectionManager(connectionManager).build();, +		this(httpClient, null);, +	private HttpComponentsHttpInvokerRequestExecutor(HttpClient httpClient, RequestConfig requestConfig) {, +		this.httpClient = httpClient;, +		this.requestConfig = requestConfig;, +	}, +	 * <p>Additional properties can be configured by specifying a, +	 * {@link RequestConfig} instance on a custom {@link HttpClient}., +	 * @see RequestConfig#getConnectTimeout(), +		this.requestConfig = cloneRequestConfig(), +				.setConnectTimeout(timeout).build();, +	 * <p>Additional properties can be configured by specifying a, +	 * {@link RequestConfig} instance on a custom {@link HttpClient}., +	 * @see RequestConfig#getConnectionRequestTimeout(), +		this.requestConfig = cloneRequestConfig(), +				.setConnectionRequestTimeout(connectionRequestTimeout).build();, +	 * <p>Additional properties can be configured by specifying a, +	 * {@link RequestConfig} instance on a custom {@link HttpClient}., +	 * @see RequestConfig#getSocketTimeout(), +		this.requestConfig = cloneRequestConfig(), +				.setSocketTimeout(timeout).build();, +	private RequestConfig.Builder cloneRequestConfig() {, +		return this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom();, +	}, +, +		return (this.requestConfig != null ? this.requestConfig : null);, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java, +	private RequestConfig requestConfig;, +	 * <p>Additional properties can be configured by specifying a, +	 * {@link RequestConfig} instance on a custom {@link HttpClient}., +	 * @see RequestConfig#getConnectTimeout(), +		this.requestConfig = cloneRequestConfig(), +				.setConnectTimeout(timeout).build();, +	 * <p>Additional properties can be configured by specifying a, +	 * {@link RequestConfig} instance on a custom {@link HttpClient}., +	 * @see RequestConfig#getConnectionRequestTimeout(), +		this.requestConfig = cloneRequestConfig(), +				.setConnectionRequestTimeout(connectionRequestTimeout).build();, +	 * <p>Additional properties can be configured by specifying a, +	 * {@link RequestConfig} instance on a custom {@link HttpClient}., +	 * @see RequestConfig#getSocketTimeout(), +		this.requestConfig = cloneRequestConfig(), +				.setSocketTimeout(timeout).build();, +	private RequestConfig.Builder cloneRequestConfig() {, +		return this.requestConfig != null ? RequestConfig.copy(this.requestConfig) : RequestConfig.custom();]