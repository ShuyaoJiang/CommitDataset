[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java, + * Copyright 2002-2014 the original author or authors., + * <p>By default, incoming streams are going to be passed to the appropriate, + * {@code setBinary/Ascii/CharacterStream} method on the JDBC driver's, + * {@link PreparedStatement}. If the specified content length is negative,, + * this handler will use the JDBC 4.0 variants of the set-stream methods, + * without a length parameter; otherwise, it will pass the specified length, + * on to the driver., + *, +			else if (contentLength >= 0) {, +			else {, +				ps.setBinaryStream(paramIndex, binaryStream);, +			}, +			else if (contentLength >= 0) {, +			else {, +				ps.setAsciiStream(paramIndex, asciiStream);, +			}, +			else if (contentLength >= 0) {, +			else {, +				ps.setCharacterStream(paramIndex, characterStream);, +			}, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java, + * Copyright 2002-2014 the original author or authors., + * <p>By default, incoming streams are going to be passed to the appropriate, + * {@code setBinary/Ascii/CharacterStream} method on the JDBC driver's, + * {@link PreparedStatement}. If the specified content length is negative,, + * this handler will use the JDBC 4.0 variants of the set-stream methods, + * without a length parameter; otherwise, it will pass the specified length, + * on to the driver., + *, +			else if (contentLength >= 0) {, +			else {, +				ps.setBinaryStream(paramIndex, binaryStream);, +			}, +			else if (contentLength >= 0) {, +			else {, +				ps.setAsciiStream(paramIndex, asciiStream);, +			}, +			else if (contentLength >= 0) {, +			else {, +				ps.setCharacterStream(paramIndex, characterStream);, +			}, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/support/DefaultLobHandlerTests.java, + * Copyright 2002-2014 the original author or authors., +, +, +, +, +, +	public void testSetBlobAsBinaryStreamWithoutLength() throws SQLException, IOException {, +		InputStream bis = new ByteArrayInputStream("testContent".getBytes());, +		lobCreator.setBlobAsBinaryStream(ps, 1, bis, -1);, +		verify(ps).setBinaryStream(1, bis);, +	}, +, +	@Test, +	public void testSetClobAsAsciiStreamWithoutLength() throws SQLException, IOException {, +		InputStream bis = new ByteArrayInputStream("testContent".getBytes());, +		lobCreator.setClobAsAsciiStream(ps, 1, bis, -1);, +		verify(ps).setAsciiStream(1, bis);, +	}, +, +	@Test, +	@Test, +	public void testSetClobAsCharacterStreamWithoutLength() throws SQLException, IOException {, +		Reader str = new StringReader("testContent");, +		lobCreator.setClobAsCharacterStream(ps, 1, str, -1);, +		verify(ps).setCharacterStream(1, str);, +	}, +]