[+++ b/spring-core/src/test/java/org/springframework/core/type/AnnotationMetadataTests.java, +	public void standardAnnotationMetadata() {, +	public void standardAnnotationMetadataForSubclass() {, +	public void standardAnnotationMetadataForInterface() {, +	public void standardAnnotationMetadataForAnnotation() {, +	public void standardAnnotationMetadata_nestedAnnotationsAsMap_false() {, +++ b/spring-core/src/test/java/org/springframework/core/type/AnnotationMetadataTests.java, +	public void standardAnnotationMetadata() {, +	public void standardAnnotationMetadataForSubclass() {, +	public void standardAnnotationMetadataForInterface() {, +	public void standardAnnotationMetadataForAnnotation() {, +	public void standardAnnotationMetadata_nestedAnnotationsAsMap_false() {, +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, + * Copyright 2002-2019 the original author or authors., + * {@code RequestDispatcher} includes and support for consistent URL decoding., + * @see #getLookupPathForRequest, + * @see javax.servlet.RequestDispatcher, +	 * Whether URL lookups should always use the full path within the current, +	 * web application context, i.e. within, +	 * {@link javax.servlet.ServletContext#getContextPath()}., +	 * not compatible with a prefix-based Servlet mapping and likewise implies, +	 * @see #getPathWithinApplication, +	 * @see #getLookupPathForRequest, +	 * @see #getLookupPathForRequest, +	 * {@linkplain #setRemoveSemicolonContent removeSemicolonContent}, +	 * property is set to "true". Note that "jsessionid" is always removed., +	 * Decode the given URI path variables via {@link #decodeRequestString} unless, +	 * {@link #setUrlDecode} is set to {@code true} in which case it is assumed, +	 * the URL path from which the variables were extracted is already decoded, +	 * through a call to {@link #getLookupPathForRequest(HttpServletRequest)}., +	 * Decode the given matrix variables via {@link #decodeRequestString} unless, +	 * {@link #setUrlDecode} is set to {@code true} in which case it is assumed, +	 * the URL path from which the variables were extracted is already decoded, +	 * through a call to {@link #getLookupPathForRequest(HttpServletRequest)}., +	public MultiValueMap<String, String> decodeMatrixVariables(, +			HttpServletRequest request, MultiValueMap<String, String> vars) {, +++ b/spring-core/src/test/java/org/springframework/core/type/AnnotationMetadataTests.java, +	public void standardAnnotationMetadata() {, +	public void standardAnnotationMetadataForSubclass() {, +	public void standardAnnotationMetadataForInterface() {, +	public void standardAnnotationMetadataForAnnotation() {, +	public void standardAnnotationMetadata_nestedAnnotationsAsMap_false() {, +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, + * Copyright 2002-2019 the original author or authors., + * {@code RequestDispatcher} includes and support for consistent URL decoding., + * @see #getLookupPathForRequest, + * @see javax.servlet.RequestDispatcher, +	 * Whether URL lookups should always use the full path within the current, +	 * web application context, i.e. within, +	 * {@link javax.servlet.ServletContext#getContextPath()}., +	 * not compatible with a prefix-based Servlet mapping and likewise implies, +	 * @see #getPathWithinApplication, +	 * @see #getLookupPathForRequest, +	 * @see #getLookupPathForRequest, +	 * {@linkplain #setRemoveSemicolonContent removeSemicolonContent}, +	 * property is set to "true". Note that "jsessionid" is always removed., +	 * Decode the given URI path variables via {@link #decodeRequestString} unless, +	 * {@link #setUrlDecode} is set to {@code true} in which case it is assumed, +	 * the URL path from which the variables were extracted is already decoded, +	 * through a call to {@link #getLookupPathForRequest(HttpServletRequest)}., +	 * Decode the given matrix variables via {@link #decodeRequestString} unless, +	 * {@link #setUrlDecode} is set to {@code true} in which case it is assumed, +	 * the URL path from which the variables were extracted is already decoded, +	 * through a call to {@link #getLookupPathForRequest(HttpServletRequest)}., +	public MultiValueMap<String, String> decodeMatrixVariables(, +			HttpServletRequest request, MultiValueMap<String, String> vars) {, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilderTests.java, +import static org.hamcrest.Matchers.*;, +import static org.junit.Assert.*;, +	@SuppressWarnings("serial")]