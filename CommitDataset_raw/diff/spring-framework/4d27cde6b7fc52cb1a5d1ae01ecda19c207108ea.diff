[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextConfigurationAttributes.java, + * <code>ContextConfigurationAttributes</code> encapsulates the context , + * configuration attributes declared on a test class via, + * {@link ContextConfiguration @ContextConfiguration}., + * @see SmartContextLoader, + * @see MergedContextConfiguration, +	private final boolean inheritLocations;, +, +	private final Class<? extends ContextLoader> contextLoaderClass;, +, +	 * Resolve resource locations from the {@link ContextConfiguration#locations() locations}, +	 * Construct a new {@link ContextConfigurationAttributes} instance for the, +	 * supplied {@link ContextConfiguration @ContextConfiguration} annotation and, +	 * the {@link Class test class} that declared it., +	 * @param declaringClass the test class that declared {@code @ContextConfiguration}, +	 * @param contextConfiguration the annotation from which to retrieve the attributes , +	 * Construct a new {@link ContextConfigurationAttributes} instance for the, +	 * {@link Class test class} that declared the, +	 * {@link ContextConfiguration @ContextConfiguration} annotation and its, +	 * corresponding attributes., +	 * , +	 * @param declaringClass the test class that declared {@code @ContextConfiguration}, +	 * @param locations the resource locations declared via {@code @ContextConfiguration}, +	 * @param classes the configuration classes declared via {@code @ContextConfiguration}, +	 * @param inheritLocations the <code>inheritLocations</code> flag declared via {@code @ContextConfiguration}, +	 * @param contextLoaderClass the {@code ContextLoader} class declared via {@code @ContextConfiguration}, +	 * Get the {@link Class class} that declared the, +	 * {@link ContextConfiguration @ContextConfiguration} annotation., +	 * @return the declaring class; never <code>null</code>, +	 * Get the resource locations that were declared via, +	 * {@link ContextConfiguration @ContextConfiguration}., +	 * <p>Note: this is a mutable property. The returned value may therefore, +	 * represent a <em>processed</em> value that does not match the original value , +	 * declared via {@link ContextConfiguration @ContextConfiguration}., +	 * @return the resource locations; potentially <code>null</code> or <em>empty</em>, +	 * @see ContextConfiguration#value, +	 * @see ContextConfiguration#locations, +	 * @see #setLocations(), +	 * Set the <em>processed</em> resource locations, effectively overriding the, +	 * original value declared via {@link ContextConfiguration @ContextConfiguration}., +	 * @see #getLocations(), +	 * Get the configuration classes that were declared via, +	 * {@link ContextConfiguration @ContextConfiguration}., +	 * <p>Note: this is a mutable property. The returned value may therefore, +	 * represent a <em>processed</em> value that does not match the original value , +	 * declared via {@link ContextConfiguration @ContextConfiguration}., +	 * @return the configuration classes; potentially <code>null</code> or <em>empty</em>, +	 * @see ContextConfiguration#classes, +	 * @see #setClasses(), +	 * Set the <em>processed</em> configuration classes, effectively overriding the, +	 * original value declared via {@link ContextConfiguration @ContextConfiguration}., +	 * @see #getClasses(), +	 * Get the <code>inheritLocations</code> flag that was declared via, +	 * {@link ContextConfiguration @ContextConfiguration}., +	 * @return the <code>inheritLocations</code> flag, +	 * @see ContextConfiguration#inheritLocations, +	 */, +	public boolean isInheritLocations() {, +		return this.inheritLocations;, +	}, +, +	/**, +	 * Get the <code>ContextLoader</code> class that was declared via, +	 * {@link ContextConfiguration @ContextConfiguration}., +	 * @return the <code>ContextLoader</code> class, +	 * @see ContextConfiguration#loader, +	 */, +	public Class<? extends ContextLoader> getContextLoaderClass() {, +		return this.contextLoaderClass;, +	}, +, +	/**, +	 * Provide a String representation of the context configuration attributes, +	 * and declaring class., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextConfigurationAttributes.java, + * <code>ContextConfigurationAttributes</code> encapsulates the context , + * configuration attributes declared on a test class via, + * {@link ContextConfiguration @ContextConfiguration}., + * @see SmartContextLoader, + * @see MergedContextConfiguration, +	private final boolean inheritLocations;, +, +	private final Class<? extends ContextLoader> contextLoaderClass;, +, +	 * Resolve resource locations from the {@link ContextConfiguration#locations() locations}, +	 * Construct a new {@link ContextConfigurationAttributes} instance for the, +	 * supplied {@link ContextConfiguration @ContextConfiguration} annotation and, +	 * the {@link Class test class} that declared it., +	 * @param declaringClass the test class that declared {@code @ContextConfiguration}, +	 * @param contextConfiguration the annotation from which to retrieve the attributes , +	 * Construct a new {@link ContextConfigurationAttributes} instance for the, +	 * {@link Class test class} that declared the, +	 * {@link ContextConfiguration @ContextConfiguration} annotation and its, +	 * corresponding attributes., +	 * , +	 * @param declaringClass the test class that declared {@code @ContextConfiguration}, +	 * @param locations the resource locations declared via {@code @ContextConfiguration}, +	 * @param classes the configuration classes declared via {@code @ContextConfiguration}, +	 * @param inheritLocations the <code>inheritLocations</code> flag declared via {@code @ContextConfiguration}, +	 * @param contextLoaderClass the {@code ContextLoader} class declared via {@code @ContextConfiguration}]