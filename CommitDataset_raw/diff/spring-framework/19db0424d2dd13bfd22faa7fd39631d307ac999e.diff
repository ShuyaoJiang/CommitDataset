[+++ b/spring-context/src/main/java/org/springframework/context/event/EventListener.java, + * Copyright 2002-2016 the original author or authors., +	 * <p>Default is {@code ""}, meaning the event is always handled., +	 * <p>The SpEL expression evaluates against a dedicated context that, +	 * provides the following meta-data:, +	 * <ul>, +	 * <li>{@code #root.event}, {@code #root.args} for, +	 * references to the {@link ApplicationEvent} and method arguments, +	 * respectively.</li>, +	 * <li>Method arguments can be accessed by index. For instance the, +	 * first argument can be accessed via {@code #root.args[0]}, {@code #p0}, +	 * or {@code #a0}. Arguments can also be accessed by name if that, +	 * information is available.</li>, +	 * </ul>, +++ b/spring-context/src/main/java/org/springframework/context/event/EventListener.java, + * Copyright 2002-2016 the original author or authors., +	 * <p>Default is {@code ""}, meaning the event is always handled., +	 * <p>The SpEL expression evaluates against a dedicated context that, +	 * provides the following meta-data:, +	 * <ul>, +	 * <li>{@code #root.event}, {@code #root.args} for, +	 * references to the {@link ApplicationEvent} and method arguments, +	 * respectively.</li>, +	 * <li>Method arguments can be accessed by index. For instance the, +	 * first argument can be accessed via {@code #root.args[0]}, {@code #p0}, +	 * or {@code #a0}. Arguments can also be accessed by name if that, +	 * information is available.</li>, +	 * </ul>, +++ b/src/asciidoc/core-beans.adoc, +	@EventListener(condition = "#blEvent.test == 'foo'"), +	public void processBlackListEvent(BlackListEvent blEvent) {, +| Event, +| Arguments array, +| __Argument name__, +| `#blEvent` or `#a0` (one can also use `#p0` or `#p<#arg>` notation as an alias).]