[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +, +		if (!StringUtils.hasText(path) || isInvalidPath(path)) {, +	 * Returns {@code true} if the given path is not a valid resource path., +	 * The default implementation rejects paths containing "WEB-INF" or "META-INF" as well as paths with, +	 * relative paths ("../") that result in access of a parent directory. , +	 */, +	protected boolean isInvalidPath(String path) {, +		return (path.contains("WEB-INF") || path.contains("META-INF") || StringUtils.cleanPath(path).startsWith(".."));, +	}, +	, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +, +		if (!StringUtils.hasText(path) || isInvalidPath(path)) {, +	 * Returns {@code true} if the given path is not a valid resource path., +	 * The default implementation rejects paths containing "WEB-INF" or "META-INF" as well as paths with, +	 * relative paths ("../") that result in access of a parent directory. , +	 */, +	protected boolean isInvalidPath(String path) {, +		return (path.contains("WEB-INF") || path.contains("META-INF") || StringUtils.cleanPath(path).startsWith(".."));, +	}, +	, +	/**, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.java, +	public void getResourceViaDirectoryTraversal() throws Exception {, +		MockHttpServletRequest request = new MockHttpServletRequest();, +		request.setMethod("GET");, +, +		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, "../testsecret/secret.txt");, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		handler.handleRequest(request, response);, +		assertEquals(404, response.getStatus());, +, +		request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, "test/../../testsecret/secret.txt");, +		response = new MockHttpServletResponse();, +		handler.handleRequest(request, response);, +		assertEquals(404, response.getStatus());, +	}, +, +	@Test]