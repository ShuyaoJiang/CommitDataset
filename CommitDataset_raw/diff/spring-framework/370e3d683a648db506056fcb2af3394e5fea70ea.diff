[+++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java, + * Copyright 2002-2017 the original author or authors., +	private final Map<Object, Collection<CacheOperation>> attributeCache = new ConcurrentHashMap<>(1024);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java, + * Copyright 2002-2017 the original author or authors., +	private final Map<Object, Collection<CacheOperation>> attributeCache = new ConcurrentHashMap<>(1024);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java, + * Copyright 2002-2017 the original author or authors., +		private final ConcurrentMap<String, SessionSubscriptionInfo> sessions = new ConcurrentHashMap<>();, +		private final Map<String, Set<Subscription>> destinationLookup = new ConcurrentHashMap<>(4);, +			Assert.notNull(sessionId, "'sessionId' must not be null");, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java, + * Copyright 2002-2017 the original author or authors., +	private final Map<Object, Collection<CacheOperation>> attributeCache = new ConcurrentHashMap<>(1024);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java, + * Copyright 2002-2017 the original author or authors., +		private final ConcurrentMap<String, SessionSubscriptionInfo> sessions = new ConcurrentHashMap<>();, +		private final Map<String, Set<Subscription>> destinationLookup = new ConcurrentHashMap<>(4);, +			Assert.notNull(sessionId, "'sessionId' must not be null");, +++ b/spring-web/src/main/java/org/springframework/web/filter/ShallowEtagHeaderFilter.java, + * @author Brian Clozel]