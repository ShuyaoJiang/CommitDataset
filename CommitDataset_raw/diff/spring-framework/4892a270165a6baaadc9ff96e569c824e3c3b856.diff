[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, +	/**, +	 * Used for unit testing., +	 */, +	void setTcpClient(TcpOperations<byte[]> tcpClient) {, +		this.tcpClient = tcpClient;, +	}, +, +		if (this.tcpClient == null) {, +		}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, +	/**, +	 * Used for unit testing., +	 */, +	void setTcpClient(TcpOperations<byte[]> tcpClient) {, +		this.tcpClient = tcpClient;, +	}, +, +		if (this.tcpClient == null) {, +		}, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandlerIntegrationTests.java, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, +	/**, +	 * Used for unit testing., +	 */, +	void setTcpClient(TcpOperations<byte[]> tcpClient) {, +		this.tcpClient = tcpClient;, +	}, +, +		if (this.tcpClient == null) {, +		}, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandlerIntegrationTests.java, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandlerTests.java, +/*, + * Copyright 2002-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.messaging.simp.stomp;, +, +import org.junit.Before;, +import org.junit.Test;, +import org.springframework.messaging.*;, +import org.springframework.messaging.simp.SimpMessageHeaderAccessor;, +import org.springframework.messaging.simp.SimpMessageType;, +import org.springframework.messaging.support.MessageBuilder;, +import org.springframework.messaging.support.channel.ExecutorSubscribableChannel;, +import org.springframework.messaging.support.tcp.ReconnectStrategy;, +import org.springframework.messaging.support.tcp.TcpConnection;, +import org.springframework.messaging.support.tcp.TcpConnectionHandler;, +import org.springframework.messaging.support.tcp.TcpOperations;, +import org.springframework.util.concurrent.ListenableFuture;, +import org.springframework.util.concurrent.ListenableFutureAdapter;, +import org.springframework.util.concurrent.ListenableFutureTask;, +, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +import java.util.concurrent.Callable;, +, +import static org.junit.Assert.assertEquals;, +, +/**, + * Unit tests for StompBrokerRelayMessageHandler., + *, + * @author Rossen Stoyanchev, + */, +public class StompBrokerRelayMessageHandlerTests {, +, +	private StompBrokerRelayMessageHandler brokerRelay;, +, +	private StubTcpOperations tcpClient;, +, +	private StubMessageChannel responseChannel;, +, +, +	@Before, +	public void setup() {, +, +		this.responseChannel = new StubMessageChannel();, +		this.tcpClient = new StubTcpOperations();, +, +		this.brokerRelay = new StompBrokerRelayMessageHandler(this.responseChannel, Arrays.asList("/topic"));, +		this.brokerRelay.setTcpClient(tcpClient);, +	}, +, +, +	@Test, +	public void testVirtualHostHeader() {, +]