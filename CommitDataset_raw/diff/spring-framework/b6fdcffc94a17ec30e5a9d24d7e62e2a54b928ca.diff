[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeFailureException.java, + * Copyright 2002-2014 the original author or authors., +	public HandshakeFailureException(String message, Throwable cause) {, +		super(message, cause);, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeFailureException.java, + * Copyright 2002-2014 the original author or authors., +	public HandshakeFailureException(String message, Throwable cause) {, +		super(message, cause);, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeHandler.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeFailureException.java, + * Copyright 2002-2014 the original author or authors., +	public HandshakeFailureException(String message, Throwable cause) {, +		super(message, cause);, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeHandler.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeInterceptor.java, +	 * @return whether to proceed with the handshake ({@code true}) or abort ({@code false}), +	 * Invoked after the handshake is done. The response status and headers indicate, +	 * the results of the handshake, i.e. whether it was successful or not., +	 * @param exception an exception raised during the handshake, or {@code null} if none, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeFailureException.java, + * Copyright 2002-2014 the original author or authors., +	public HandshakeFailureException(String message, Throwable cause) {, +		super(message, cause);, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeHandler.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeInterceptor.java, +	 * @return whether to proceed with the handshake ({@code true}) or abort ({@code false}), +	 * Invoked after the handshake is done. The response status and headers indicate, +	 * the results of the handshake, i.e. whether it was successful or not., +	 * @param exception an exception raised during the handshake, or {@code null} if none, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/RequestUpgradeStrategy.java, + * Copyright 2002-2014 the original author or authors., +	 * Return the WebSocket protocol extensions supported by the underlying WebSocket server., +	 * session via {@link org.springframework.web.socket.server.HandshakeInterceptor} and, +	 * thus made available to the {@link org.springframework.web.socket.WebSocketHandler}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeFailureException.java, + * Copyright 2002-2014 the original author or authors., +	public HandshakeFailureException(String message, Throwable cause) {, +		super(message, cause);, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeHandler.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeInterceptor.java, +	 * @return whether to proceed with the handshake ({@code true}) or abort ({@code false}), +	 * Invoked after the handshake is done. The response status and headers indicate, +	 * the results of the handshake, i.e. whether it was successful or not., +	 * @param exception an exception raised during the handshake, or {@code null} if none, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/RequestUpgradeStrategy.java, + * Copyright 2002-2014 the original author or authors., +	 * Return the WebSocket protocol extensions supported by the underlying WebSocket server., +	 * session via {@link org.springframework.web.socket.server.HandshakeInterceptor} and, +	 * thus made available to the {@link org.springframework.web.socket.WebSocketHandler}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/jetty/JettyRequestUpgradeStrategy.java, +	private final WebSocketServerFactory factory;, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeFailureException.java, + * Copyright 2002-2014 the original author or authors., +	public HandshakeFailureException(String message, Throwable cause) {, +		super(message, cause);, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeHandler.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeInterceptor.java, +	 * @return whether to proceed with the handshake ({@code true}) or abort ({@code false}), +	 * Invoked after the handshake is done. The response status and headers indicate, +	 * the results of the handshake, i.e. whether it was successful or not., +	 * @param exception an exception raised during the handshake, or {@code null} if none, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/RequestUpgradeStrategy.java, + * Copyright 2002-2014 the original author or authors., +	 * Return the WebSocket protocol extensions supported by the underlying WebSocket server., +	 * session via {@link org.springframework.web.socket.server.HandshakeInterceptor} and, +	 * thus made available to the {@link org.springframework.web.socket.WebSocketHandler}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/jetty/JettyRequestUpgradeStrategy.java, +	private final WebSocketServerFactory factory;, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/jetty/package-info.java, + * Server-side support for the Jetty 9+ WebSocket API., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeFailureException.java, + * Copyright 2002-2014 the original author or authors., +	public HandshakeFailureException(String message, Throwable cause) {, +		super(message, cause);, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeHandler.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/HandshakeInterceptor.java, +	 * @return whether to proceed with the handshake ({@code true}) or abort ({@code false}), +	 * Invoked after the handshake is done. The response status and headers indicate, +	 * the results of the handshake, i.e. whether it was successful or not., +	 * @param exception an exception raised during the handshake, or {@code null} if none]