[+++ b/org.springframework.aop/src/test/java/example/annotations/EmptySpringAnnotation.java, +/*, + * Copyright 2002-2006 the original author or authors., + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., +, +++ b/org.springframework.aop/src/test/java/example/annotations/EmptySpringAnnotation.java, +/*, + * Copyright 2002-2006 the original author or authors., + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., +, +++ b/org.springframework.core/src/test/java/org/springframework/core/annotation/AnnotationUtilsTests.java, +/*, + * Copyright 2002-2006 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.core.annotation;, +, +import static org.junit.Assert.*;, +import static org.springframework.core.annotation.AnnotationUtils.*;, +, +import java.lang.annotation.Inherited;, +import java.lang.annotation.Retention;, +import java.lang.annotation.RetentionPolicy;, +import java.lang.reflect.Method;, +, +import org.junit.Test;, +import org.springframework.core.Ordered;, +, +/**, + * @author Rod Johnson, + * @author Juergen Hoeller, + * @author Sam Brannen, + * @author Chris Beams, + */, +public class AnnotationUtilsTests {, +, +	@Test, +	public void testFindMethodAnnotationOnLeaf() throws SecurityException, NoSuchMethodException {, +, +		final Method m = Leaf.class.getMethod("annotatedOnLeaf", (Class[]) null);, +		assertNotNull(m.getAnnotation(Order.class));, +		assertNotNull(getAnnotation(m, Order.class));, +		assertNotNull(findAnnotation(m, Order.class));, +	}, +, +	@Test, +	public void testFindMethodAnnotationOnRoot() throws SecurityException, NoSuchMethodException {, +, +		final Method m = Leaf.class.getMethod("annotatedOnRoot", (Class[]) null);, +		assertNotNull(m.getAnnotation(Order.class));, +		assertNotNull(getAnnotation(m, Order.class));, +		assertNotNull(findAnnotation(m, Order.class));, +	}, +, +	@Test, +	public void testFindMethodAnnotationOnRootButOverridden() throws SecurityException, NoSuchMethodException {, +, +		final Method m = Leaf.class.getMethod("overrideWithoutNewAnnotation", (Class[]) null);, +		assertNull(m.getAnnotation(Order.class));, +		assertNull(getAnnotation(m, Order.class));, +		assertNotNull(findAnnotation(m, Order.class));, +	}, +, +	@Test, +	public void testFindMethodAnnotationNotAnnotated() throws SecurityException, NoSuchMethodException {, +, +		final Method m = Leaf.class.getMethod("notAnnotated", (Class[]) null);, +		assertNull(findAnnotation(m, Order.class));]