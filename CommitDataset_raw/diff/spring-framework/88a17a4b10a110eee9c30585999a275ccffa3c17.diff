[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.messaging.tcp.TcpOperations;, +	@Nullable, +	private TcpOperations<byte[]> tcpClient;, +, +	 * Configure a TCP client for managing TCP connections to the STOMP broker., +	 * <p>By default {@code ReactorNettyTcpClient} is used., +	 * <p><strong>Note:</strong> when this property is used, any, +	 * {@link #setRelayHost(String) host} or {@link #setRelayPort(int) port}, +	 * specified are effectively ignored., +	 * @since 4.3.15, +	 */, +	public void setTcpClient(TcpOperations<byte[]> tcpClient) {, +		this.tcpClient = tcpClient;, +	}, +, +	/**, +		if (this.tcpClient != null) {, +			handler.setTcpClient(this.tcpClient);, +		}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.messaging.tcp.TcpOperations;, +	@Nullable, +	private TcpOperations<byte[]> tcpClient;, +, +	 * Configure a TCP client for managing TCP connections to the STOMP broker., +	 * <p>By default {@code ReactorNettyTcpClient} is used., +	 * <p><strong>Note:</strong> when this property is used, any, +	 * {@link #setRelayHost(String) host} or {@link #setRelayPort(int) port}, +	 * specified are effectively ignored., +	 * @since 4.3.15, +	 */, +	public void setTcpClient(TcpOperations<byte[]> tcpClient) {, +		this.tcpClient = tcpClient;, +	}, +, +	/**, +		if (this.tcpClient != null) {, +			handler.setTcpClient(this.tcpClient);, +		}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, + * Copyright 2002-2018 the original author or authors., +	 * <p><strong>Note:</strong> when this property is used, any, +	 * {@link #setRelayHost(String) host} or {@link #setRelayPort(int) port}, +	 * specified are effectively ignored., +			if (logger.isWarnEnabled()) {, +				logger.warn("TCP connection failure in session " + this.sessionId + ": " + error, ex);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.messaging.tcp.TcpOperations;, +	@Nullable, +	private TcpOperations<byte[]> tcpClient;, +, +	 * Configure a TCP client for managing TCP connections to the STOMP broker., +	 * <p>By default {@code ReactorNettyTcpClient} is used., +	 * <p><strong>Note:</strong> when this property is used, any, +	 * {@link #setRelayHost(String) host} or {@link #setRelayPort(int) port}, +	 * specified are effectively ignored., +	 * @since 4.3.15, +	 */, +	public void setTcpClient(TcpOperations<byte[]> tcpClient) {, +		this.tcpClient = tcpClient;, +	}, +, +	/**, +		if (this.tcpClient != null) {, +			handler.setTcpClient(this.tcpClient);, +		}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, + * Copyright 2002-2018 the original author or authors., +	 * <p><strong>Note:</strong> when this property is used, any, +	 * {@link #setRelayHost(String) host} or {@link #setRelayPort(int) port}, +	 * specified are effectively ignored., +			if (logger.isWarnEnabled()) {, +				logger.warn("TCP connection failure in session " + this.sessionId + ": " + error, ex);, +++ b/src/docs/asciidoc/web/websocket.adoc, +need not set those headers; they will be ignored. As the <<websocket-stomp-authentication>>, +section explains, instead WebSocket clients should rely on HTTP authentication to protect, +the WebSocket endpoint and establish the client identity., +Any Spring bean can implement `ApplicationListener<BrokerAvailabilityEvent>` in order, +, +By default, the STOMP broker relay always connects, and reconnects as needed if, +connectivity is lost, to the same host and port. If you wish to supply multiple addresses,, +on each attempt to connect, you can configure a supplier of addresses, instead of a, +fixed host and port. For example:, +, +[source,java,indent=0], +[subs="verbatim,quotes"], +----, +@Configuration, +@EnableWebSocketMessageBroker, +public class WebSocketConfig extends AbstractWebSocketMessageBrokerConfigurer {, +, +	// ..., +, +	@Override, +	public void configureMessageBroker(MessageBrokerRegistry registry) {, +		registry.enableStompBrokerRelay("/queue/", "/topic/").setTcpClient(createTcpClient());]