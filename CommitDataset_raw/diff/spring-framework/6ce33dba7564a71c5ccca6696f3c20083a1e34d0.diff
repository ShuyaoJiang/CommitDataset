[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, +	private static final GenericConverter NO_OP_CONVERTER = new GenericConverter() {, +		public Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType) {, +			return source;, +		}, +	};, +	, +	private GenericConversionService parent;, +	public void setParent(GenericConversionService parent) {, +		return getConverter(sourceType, targetType) != null;, +		GenericConverter converter = findConverterByClassPair(sourceType.getObjectType(), targetType.getObjectType());, +		if (converter != null) {, +			return converter;, +		}, +		if (this.parent != null) {, +			return this.parent.getConverter(sourceType, targetType);, +		} else {, +			if (sourceType.isAssignableTo(targetType)) {, +				return NO_OP_CONVERTER;, +			} else {, +				throw new ConverterNotFoundException(sourceType, targetType);, +			}, +		}]