[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandler.java, +	 * Check whether the type of the given session matches the transport type, +	 * of this {@code TransportHandler} where session id and the transport type, +	 * are extracted from the SockJS URL., +	 * @return {@code true} if the session matches (and would therefore get, +	 * accepted by {@link #handleRequest}), or {@code false} otherwise, +	 * @since 4.3.4, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandler.java, +	 * Check whether the type of the given session matches the transport type, +	 * of this {@code TransportHandler} where session id and the transport type, +	 * are extracted from the SockJS URL., +	 * @return {@code true} if the session matches (and would therefore get, +	 * accepted by {@link #handleRequest}), or {@code false} otherwise, +	 * @since 4.3.4, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/AbstractHttpReceivingTransportHandler.java, +	@Override, +	public boolean checkSessionType(SockJsSession session) {, +		return (session instanceof AbstractHttpSockJsSession);, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandler.java, +	 * Check whether the type of the given session matches the transport type, +	 * of this {@code TransportHandler} where session id and the transport type, +	 * are extracted from the SockJS URL., +	 * @return {@code true} if the session matches (and would therefore get, +	 * accepted by {@link #handleRequest}), or {@code false} otherwise, +	 * @since 4.3.4, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/AbstractHttpReceivingTransportHandler.java, +	@Override, +	public boolean checkSessionType(SockJsSession session) {, +		return (session instanceof AbstractHttpSockJsSession);, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/AbstractTransportHandler.java, + * Common base class for {@link TransportHandler} inplementations., + *, +	protected final Log logger = LogFactory.getLog(getClass());]