[+++ b/org.springframework.context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java, + * Copyright 2002-2010 the original author or authors., +						if (!allListeners.contains(listener) && supportsEvent(listener, eventType, sourceType)) {, +++ b/org.springframework.context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java, + * Copyright 2002-2010 the original author or authors., +						if (!allListeners.contains(listener) && supportsEvent(listener, eventType, sourceType)) {, +++ b/org.springframework.context/src/test/java/org/springframework/scripting/bsh/BshScriptFactoryTests.java, + * Copyright 2002-2010 the original author or authors., +import org.springframework.context.ApplicationEvent;, +	public void testApplicationEventListener() throws Exception {, +		ApplicationContext ctx = new ClassPathXmlApplicationContext("bsh-with-xsd.xml", getClass());, +		Messenger eventListener = (Messenger) ctx.getBean("eventListener");, +		ctx.publishEvent(new MyEvent(ctx));, +		assertEquals("count=2", eventListener.getMessage());, +	}, +, +, +	private static class MyEvent extends ApplicationEvent {, +, +		public MyEvent(Object source) {, +			super(source);, +		}, +	}, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java, + * Copyright 2002-2010 the original author or authors., +						if (!allListeners.contains(listener) && supportsEvent(listener, eventType, sourceType)) {, +++ b/org.springframework.context/src/test/java/org/springframework/scripting/bsh/BshScriptFactoryTests.java, + * Copyright 2002-2010 the original author or authors., +import org.springframework.context.ApplicationEvent;, +	public void testApplicationEventListener() throws Exception {, +		ApplicationContext ctx = new ClassPathXmlApplicationContext("bsh-with-xsd.xml", getClass());, +		Messenger eventListener = (Messenger) ctx.getBean("eventListener");, +		ctx.publishEvent(new MyEvent(ctx));, +		assertEquals("count=2", eventListener.getMessage());, +	}, +, +, +	private static class MyEvent extends ApplicationEvent {, +, +		public MyEvent(Object source) {, +			super(source);, +		}, +	}, +, +++ b/org.springframework.context/src/test/java/org/springframework/scripting/bsh/bsh-with-xsd.xml, +<lang:bsh id="eventListener" script-interfaces="org.springframework.context.ApplicationListener,org.springframework.scripting.Messenger" >, +<lang:inline-script><![CDATA[, +int count;, +void onApplicationEvent (org.springframework.context.ApplicationEvent event) { count++; System.out.println(event); }, +String getMessage() { return "count=" + count; } , +]]></lang:inline-script>, +</lang:bsh>, +]