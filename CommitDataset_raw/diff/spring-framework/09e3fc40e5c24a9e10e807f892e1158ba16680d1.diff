[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/WebContentGenerator.java, +				if (response.containsHeader(HEADER_PRAGMA)) {, +					response.setHeader(HEADER_PRAGMA, "");, +				}, +		if (response.containsHeader(HEADER_PRAGMA)) {, +			response.setHeader(HEADER_PRAGMA, "");, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/WebContentGenerator.java, +				if (response.containsHeader(HEADER_PRAGMA)) {, +					response.setHeader(HEADER_PRAGMA, "");, +				}, +		if (response.containsHeader(HEADER_PRAGMA)) {, +			response.setHeader(HEADER_PRAGMA, "");, +		}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/WebContentInterceptorTests.java, +	// SPR-13252, +	@Test, +	public void cachingConfigAndPragmaHeader() throws Exception {, +		WebContentInterceptor interceptor = new WebContentInterceptor();, +		interceptor.setCacheSeconds(10);, +		response.setHeader("Pragma", "no-cache");, +, +		interceptor.preHandle(request, response, null);, +, +		Iterable<String> pragmaHeaders = response.getHeaders("Pragma");, +		assertThat(pragmaHeaders, Matchers.contains(""));, +	}, +, +	// SPR-13252, +	@SuppressWarnings("deprecation"), +	@Test, +	public void http10CachingConfigAndPragmaHeader() throws Exception {, +		WebContentInterceptor interceptor = new WebContentInterceptor();, +		interceptor.setCacheSeconds(10);, +		interceptor.setAlwaysMustRevalidate(true);, +		response.setHeader("Pragma", "no-cache");, +, +		interceptor.preHandle(request, response, null);, +, +		Iterable<String> pragmaHeaders = response.getHeaders("Pragma");, +		assertThat(pragmaHeaders, Matchers.contains(""));, +	}, +]