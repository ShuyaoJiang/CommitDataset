[+++ b/spring-core/src/main/java/org/springframework/core/convert/support/StreamConverter.java, +, +, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StreamConverter.java, +, +, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToLocaleConverter.java, + * Copyright 2002-2015 the original author or authors., + * Converts from a String to a {@link java.util.Locale}., + * @see StringUtils#parseLocaleString, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StreamConverter.java, +, +, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToLocaleConverter.java, + * Copyright 2002-2015 the original author or authors., + * Converts from a String to a {@link java.util.Locale}., + * @see StringUtils#parseLocaleString, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToUUIDConverter.java, + * Copyright 2002-2015 the original author or authors., + * Converts from a String to a {@link java.util.UUID}., + * @see UUID#fromString, +		return (StringUtils.hasLength(source) ? UUID.fromString(source.trim()) : null);, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StreamConverter.java, +, +, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToLocaleConverter.java, + * Copyright 2002-2015 the original author or authors., + * Converts from a String to a {@link java.util.Locale}., + * @see StringUtils#parseLocaleString, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/StringToUUIDConverter.java, + * Copyright 2002-2015 the original author or authors., + * Converts from a String to a {@link java.util.UUID}., + * @see UUID#fromString, +		return (StringUtils.hasLength(source) ? UUID.fromString(source.trim()) : null);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilter.java, + * Copyright 2002-2015 the original author or authors., +		public ResourceUrlEncodingResponseWrapper(HttpServletRequest request, HttpServletResponse wrapped) {, +				logger.debug("Request attribute exposing ResourceUrlProvider not found");]