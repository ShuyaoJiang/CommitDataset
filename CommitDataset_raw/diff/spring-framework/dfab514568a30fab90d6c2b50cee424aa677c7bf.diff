[+++ /dev/null, +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/StandardScopes.java, + * , + * <p>Not modeled as an actual java enum because annotations that accept a scope attribute, + * must allow for user-defined scope names. Given that java enums are not extensible, these, + * must remain simple string constants., +	private StandardScopes() { }, +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/StandardScopes.java, + * , + * <p>Not modeled as an actual java enum because annotations that accept a scope attribute, + * must allow for user-defined scope names. Given that java enums are not extensible, these, + * must remain simple string constants., +	private StandardScopes() { }, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/internal/enhancement/ConfigurationEnhancer.java, +import net.sf.cglib.proxy.MethodInterceptor;, +import net.sf.cglib.proxy.MethodProxy;, +		// add no-op default registrar and method interceptor, +		callbackInstances.add(new MethodInterceptor() {, +			public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy), +                    throws Throwable {, +	            return null;, +++ /dev/null, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/StandardScopes.java, + * , + * <p>Not modeled as an actual java enum because annotations that accept a scope attribute, + * must allow for user-defined scope names. Given that java enums are not extensible, these, + * must remain simple string constants., +	private StandardScopes() { }, +++ b/org.springframework.config.java/src/main/java/org/springframework/config/java/internal/enhancement/ConfigurationEnhancer.java, +import net.sf.cglib.proxy.MethodInterceptor;, +import net.sf.cglib.proxy.MethodProxy;, +		// add no-op default registrar and method interceptor, +		callbackInstances.add(new MethodInterceptor() {, +			public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy), +                    throws Throwable {, +	            return null;, +++ b/org.springframework.config.java/src/test/java/org/springframework/config/java/support/ConfigurationPostProcessorTests.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, + * Unit tests for {@link ConfigurationClassPostProcessor}.]