[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/BinaryMessage.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/BinaryMessage.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketHandler.java, + * <p>, + * Implementations of this interface are encouraged to handle exceptions locally where it, + * makes sense or alternatively let the exception bubble up in which case the exception is, + * logged and the session closed with {@link CloseStatus#SERVER_ERROR SERVER_ERROR(1011)}, + * by default. The exception handling strategy is provided by, + * {@link org.springframework.web.socket.support.ExceptionWebSocketHandlerDecorator, + * ExceptionWebSocketHandlerDecorator}, which can be customized or replaced by decorating, + * the {@link WebSocketHandler} with a different decorator., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/BinaryMessage.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketHandler.java, + * <p>, + * Implementations of this interface are encouraged to handle exceptions locally where it, + * makes sense or alternatively let the exception bubble up in which case the exception is, + * logged and the session closed with {@link CloseStatus#SERVER_ERROR SERVER_ERROR(1011)}, + * by default. The exception handling strategy is provided by, + * {@link org.springframework.web.socket.support.ExceptionWebSocketHandlerDecorator, + * ExceptionWebSocketHandlerDecorator}, which can be customized or replaced by decorating, + * the {@link WebSocketHandler} with a different decorator., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketMessage.java, + * A message that can be handled or sent on a WebSocket connection., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/BinaryMessage.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketHandler.java, + * <p>, + * Implementations of this interface are encouraged to handle exceptions locally where it, + * makes sense or alternatively let the exception bubble up in which case the exception is, + * logged and the session closed with {@link CloseStatus#SERVER_ERROR SERVER_ERROR(1011)}, + * by default. The exception handling strategy is provided by, + * {@link org.springframework.web.socket.support.ExceptionWebSocketHandlerDecorator, + * ExceptionWebSocketHandlerDecorator}, which can be customized or replaced by decorating, + * the {@link WebSocketHandler} with a different decorator., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketMessage.java, + * A message that can be handled or sent on a WebSocket connection., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketSession.java, + * A WebSocket session abstraction. Allows sending messages over a WebSocket connection, + * and closing it., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/BinaryMessage.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketHandler.java, + * <p>, + * Implementations of this interface are encouraged to handle exceptions locally where it, + * makes sense or alternatively let the exception bubble up in which case the exception is, + * logged and the session closed with {@link CloseStatus#SERVER_ERROR SERVER_ERROR(1011)}, + * by default. The exception handling strategy is provided by, + * {@link org.springframework.web.socket.support.ExceptionWebSocketHandlerDecorator, + * ExceptionWebSocketHandlerDecorator}, which can be customized or replaced by decorating, + * the {@link WebSocketHandler} with a different decorator., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketMessage.java, + * A message that can be handled or sent on a WebSocket connection., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketSession.java, + * A WebSocket session abstraction. Allows sending messages over a WebSocket connection, + * and closing it., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/AbstractWebSocketSesssionAdapter.java, + * An abstract base class for implementations of {@link WebSocketSession}., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/BinaryMessage.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketHandler.java, + * <p>, + * Implementations of this interface are encouraged to handle exceptions locally where it, + * makes sense or alternatively let the exception bubble up in which case the exception is, + * logged and the session closed with {@link CloseStatus#SERVER_ERROR SERVER_ERROR(1011)}, + * by default. The exception handling strategy is provided by, + * {@link org.springframework.web.socket.support.ExceptionWebSocketHandlerDecorator, + * ExceptionWebSocketHandlerDecorator}, which can be customized or replaced by decorating, + * the {@link WebSocketHandler} with a different decorator., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketMessage.java, + * A message that can be handled or sent on a WebSocket connection., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketSession.java, + * A WebSocket session abstraction. Allows sending messages over a WebSocket connection, + * and closing it., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/AbstractWebSocketSesssionAdapter.java, + * An abstract base class for implementations of {@link WebSocketSession}., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/BinaryWebSocketHandlerAdapter.java, + * A convenient base class for {@link WebSocketHandler} implementation that process binary, + * messages only. Text messages are rejected with {@link CloseStatus#NOT_ACCEPTABLE}. All, + * other methods have empty implementations., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/BinaryMessage.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketHandler.java, + * <p>, + * Implementations of this interface are encouraged to handle exceptions locally where it, + * makes sense or alternatively let the exception bubble up in which case the exception is, + * logged and the session closed with {@link CloseStatus#SERVER_ERROR SERVER_ERROR(1011)}, + * by default. The exception handling strategy is provided by, + * {@link org.springframework.web.socket.support.ExceptionWebSocketHandlerDecorator, + * ExceptionWebSocketHandlerDecorator}, which can be customized or replaced by decorating, + * the {@link WebSocketHandler} with a different decorator., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketMessage.java, + * A message that can be handled or sent on a WebSocket connection., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketSession.java, + * A WebSocket session abstraction. Allows sending messages over a WebSocket connection, + * and closing it., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/AbstractWebSocketSesssionAdapter.java, + * An abstract base class for implementations of {@link WebSocketSession}., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/BinaryWebSocketHandlerAdapter.java, + * A convenient base class for {@link WebSocketHandler} implementation that process binary, + * messages only. Text messages are rejected with {@link CloseStatus#NOT_ACCEPTABLE}. All, + * other methods have empty implementations., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/ConfigurableWebSocketSession.java, + * A WebSocketSession with configurable properties., + *]