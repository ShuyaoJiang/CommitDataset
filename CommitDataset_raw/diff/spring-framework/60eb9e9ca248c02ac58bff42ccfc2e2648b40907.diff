[+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, +import org.springframework.core.annotation.AliasFor;, +, +	 * Alias for {@link #origin}., +	 */, +	@AliasFor(attribute = "origin"), +	String[] value() default { "*" };, +, +	/**, +	 * @see #value, +	@AliasFor(attribute = "value"), +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java, +import org.springframework.core.annotation.AliasFor;, +, +	 * Alias for {@link #origin}., +	 */, +	@AliasFor(attribute = "origin"), +	String[] value() default { "*" };, +, +	/**, +	 * @see #value, +	@AliasFor(attribute = "value"), +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/CrossOriginTests.java, +import java.util.Arrays;, +		assertFalse(config.getAllowCredentials());, +	}, +, +	@Test, +	public void customOriginDefinedViaValueAttribute() throws Exception {, +		this.handlerMapping.registerHandler(new MethodLevelController());, +		this.request.setRequestURI("/customOrigin");, +		CorsConfiguration config = getCorsConfiguration(this.handlerMapping.getHandler(request), false);, +		assertNotNull(config);, +		assertEquals(Arrays.asList("http://example.com"), config.getAllowedOrigins());, +		assertTrue(config.getAllowCredentials());, +, +		@CrossOrigin("http://example.com"), +		@RequestMapping("/customOrigin"), +		public void customOriginDefinedViaValueAttribute() {, +		}]