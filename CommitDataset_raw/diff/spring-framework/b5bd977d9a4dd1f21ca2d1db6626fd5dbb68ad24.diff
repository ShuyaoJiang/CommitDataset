[+++ b/spring-expression/src/test/java/org/springframework/expression/spel/AbstractExpressionTests.java, + * Copyright 2002-2018 the original author or authors., +		assertTrue("Type of the result was not as expected.  Expected '" + expectedClassOfResult +, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/AbstractExpressionTests.java, + * Copyright 2002-2018 the original author or authors., +		assertTrue("Type of the result was not as expected.  Expected '" + expectedClassOfResult +, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/BooleanExpressionTests.java, + * Copyright 2002-2018 the original author or authors., +, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/AbstractExpressionTests.java, + * Copyright 2002-2018 the original author or authors., +		assertTrue("Type of the result was not as expected.  Expected '" + expectedClassOfResult +, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/BooleanExpressionTests.java, + * Copyright 2002-2018 the original author or authors., +, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/EvaluationTests.java, + * Copyright 2002-2018 the original author or authors., +	@SuppressWarnings("rawtypes"), +	static class TestClass {, +, +		public Foo wibble;, +		private Foo wibble2;, +		public Map map;, +		public Map<String, Integer> mapStringToInteger;, +		public List<String> list;, +		public List list2;, +		private Map map2;, +		private List<String> foo;, +, +		public Map getMap2() { return this.map2; }, +		public Foo getWibble2() { return this.wibble2; }, +		public List<String> getFoo() { return this.foo; }, +		public void setFoo(List<String> newfoo) { this.foo = newfoo; }, +	}, +, +	public static class Foo {, +, +		public String bar = "hello";, +, +		public Foo() {}, +	}, +, +]