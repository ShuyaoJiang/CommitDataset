[+++ b/org.springframework.context/src/main/java/org/springframework/model/binder/support/FieldNotEditableResult.java, +import org.springframework.model.message.DefaultMessageFactory;, +	private String fieldName;, +	public FieldNotEditableResult(String fieldName, Object submittedValue, MessageSource messageSource) {, +		this.fieldName = fieldName;, +		return fieldName;, +				builder.arg("label", new ResolvableArgument(fieldName));, +				builder.defaultMessage(new DefaultMessageFactory() {, +					public String createDefaultMessage() {, +						return "Failed to bind submitted value " + StylerUtils.style(submittedValue) + "; field '" + fieldName + "' is not editable";, +					}, +				});, +++ b/org.springframework.context/src/main/java/org/springframework/model/binder/support/FieldNotEditableResult.java, +import org.springframework.model.message.DefaultMessageFactory;, +	private String fieldName;, +	public FieldNotEditableResult(String fieldName, Object submittedValue, MessageSource messageSource) {, +		this.fieldName = fieldName;, +		return fieldName;, +				builder.arg("label", new ResolvableArgument(fieldName));, +				builder.defaultMessage(new DefaultMessageFactory() {, +					public String createDefaultMessage() {, +						return "Failed to bind submitted value " + StylerUtils.style(submittedValue) + "; field '" + fieldName + "' is not editable";, +					}, +				});, +++ b/org.springframework.context/src/main/java/org/springframework/model/binder/support/FieldNotFoundResult.java, +import org.springframework.model.message.DefaultMessageFactory;, +	private String fieldName;, +	public FieldNotFoundResult(String fieldName, Object submittedValue, MessageSource messageSource) {, +		this.fieldName = fieldName;, +		return fieldName;, +				builder.arg("label", new ResolvableArgument(fieldName));, +				builder.defaultMessage(new DefaultMessageFactory() {, +					public String createDefaultMessage() {, +						return "Failed to bind submitted value " + StylerUtils.style(submittedValue) + "; no field '" + fieldName + "' found";, +					}, +				});				, +++ b/org.springframework.context/src/main/java/org/springframework/model/binder/support/FieldNotEditableResult.java, +import org.springframework.model.message.DefaultMessageFactory;, +	private String fieldName;, +	public FieldNotEditableResult(String fieldName, Object submittedValue, MessageSource messageSource) {, +		this.fieldName = fieldName;, +		return fieldName;, +				builder.arg("label", new ResolvableArgument(fieldName));, +				builder.defaultMessage(new DefaultMessageFactory() {, +					public String createDefaultMessage() {, +						return "Failed to bind submitted value " + StylerUtils.style(submittedValue) + "; field '" + fieldName + "' is not editable";, +					}, +				});, +++ b/org.springframework.context/src/main/java/org/springframework/model/binder/support/FieldNotFoundResult.java, +import org.springframework.model.message.DefaultMessageFactory;, +	private String fieldName;, +	public FieldNotFoundResult(String fieldName, Object submittedValue, MessageSource messageSource) {, +		this.fieldName = fieldName;, +		return fieldName;, +				builder.arg("label", new ResolvableArgument(fieldName));, +				builder.defaultMessage(new DefaultMessageFactory() {, +					public String createDefaultMessage() {, +						return "Failed to bind submitted value " + StylerUtils.style(submittedValue) + "; no field '" + fieldName + "' found";, +					}, +				});				, +++ b/org.springframework.context/src/main/java/org/springframework/model/message/DefaultMessageFactory.java, +package org.springframework.model.message;, +, +/**, + * A factory for a default message to return if no message could be resolved., + * Allows the message String to be created lazily, only when it is needed., + * @author Keith Donald, + * @since 3.0, + * @see MessageBuilder, + */, +public interface DefaultMessageFactory {, +	, +	/**, +	 * Create the default message., +	 */, +	String createDefaultMessage();, +}, +++ b/org.springframework.context/src/main/java/org/springframework/model/binder/support/FieldNotEditableResult.java, +import org.springframework.model.message.DefaultMessageFactory;, +	private String fieldName;, +	public FieldNotEditableResult(String fieldName, Object submittedValue, MessageSource messageSource) {, +		this.fieldName = fieldName;, +		return fieldName;, +				builder.arg("label", new ResolvableArgument(fieldName));, +				builder.defaultMessage(new DefaultMessageFactory() {, +					public String createDefaultMessage() {, +						return "Failed to bind submitted value " + StylerUtils.style(submittedValue) + "; field '" + fieldName + "' is not editable";, +					}, +				});, +++ b/org.springframework.context/src/main/java/org/springframework/model/binder/support/FieldNotFoundResult.java, +import org.springframework.model.message.DefaultMessageFactory;, +	private String fieldName;, +	public FieldNotFoundResult(String fieldName, Object submittedValue, MessageSource messageSource) {, +		this.fieldName = fieldName;, +		return fieldName;, +				builder.arg("label", new ResolvableArgument(fieldName));, +				builder.defaultMessage(new DefaultMessageFactory() {, +					public String createDefaultMessage() {, +						return "Failed to bind submitted value " + StylerUtils.style(submittedValue) + "; no field '" + fieldName + "' found";, +					}]