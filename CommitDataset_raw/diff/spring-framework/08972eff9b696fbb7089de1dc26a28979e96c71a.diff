[+++ b/spring-context/src/main/java/org/springframework/cache/annotation/SpringCacheAnnotationParser.java, +		Collection<Cacheable> cacheables = AnnotatedElementUtils.getAllMergedAnnotations(ae, Cacheable.class);, +		Collection<CacheEvict> evicts = AnnotatedElementUtils.getAllMergedAnnotations(ae, CacheEvict.class);, +		Collection<CachePut> puts = AnnotatedElementUtils.getAllMergedAnnotations(ae, CachePut.class);, +		Collection<Caching> cachings = AnnotatedElementUtils.getAllMergedAnnotations(ae, Caching.class);, +++ b/spring-context/src/main/java/org/springframework/cache/annotation/SpringCacheAnnotationParser.java, +		Collection<Cacheable> cacheables = AnnotatedElementUtils.getAllMergedAnnotations(ae, Cacheable.class);, +		Collection<CacheEvict> evicts = AnnotatedElementUtils.getAllMergedAnnotations(ae, CacheEvict.class);, +		Collection<CachePut> puts = AnnotatedElementUtils.getAllMergedAnnotations(ae, CachePut.class);, +		Collection<Caching> cachings = AnnotatedElementUtils.getAllMergedAnnotations(ae, Caching.class);, +++ b/spring-context/src/test/java/org/springframework/cache/annotation/AnnotationCacheOperationSourceTests.java, +	public void cacheConfigFromInterface() {, +		assertNull(getOps(InterfaceCacheConfig.class, "interfaceCacheConfig"));, +		Collection<CacheOperation> ops = getOps(CacheConfigIfc.class, "interfaceCacheConfig");, +		CacheOperation cacheOperation = ops.iterator().next();, +		assertSharedConfig(cacheOperation, "", "", "", "myCache");, +	}, +, +	@Test, +	public void cacheAnnotationOverride() {, +		Collection<CacheOperation> ops = getOps(InterfaceCacheConfig.class, "interfaceCacheableOverride");, +		assertSame(1, ops.size());, +		CacheOperation cacheOperation = ops.iterator().next();, +		assertTrue(cacheOperation instanceof CacheableOperation);, +	}, +, +	@Test, +	@CacheConfig(cacheNames = "myCache"), +	private interface CacheConfigIfc {, +, +		@Cacheable, +		void interfaceCacheConfig();, +, +		@CachePut, +		void interfaceCacheableOverride();, +	}, +, +, +	private static class InterfaceCacheConfig implements CacheConfigIfc {, +, +		@Override, +		public void interfaceCacheConfig() {, +		}, +, +		@Override, +		@Cacheable, +		public void interfaceCacheableOverride() {, +		}, +	}, +, +]