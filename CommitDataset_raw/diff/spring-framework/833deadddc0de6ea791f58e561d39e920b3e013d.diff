[+++ b/spring-test/src/test/java/org/springframework/test/context/junit/jupiter/FailingBeforeAndAfterMethodsSpringExtensionTestCase.java, +import java.util.ArrayList;, +import java.util.List;, +import org.junit.platform.engine.TestExecutionResult;, +import org.junit.platform.launcher.TestIdentifier;, +import org.opentest4j.AssertionFailedError;, +, +		ExceptionTrackingListener listener = new ExceptionTrackingListener();, +, +		// Ensure it was an AssertionFailedError that failed the test and not, +		// something else like an error in the @Configuration class, etc., +		if (expectedFailedCount > 0) {, +			assertEquals(1, listener.exceptions.size(), "exceptions expected");, +			Throwable exception = listener.exceptions.get(0);, +			if (!(exception instanceof AssertionFailedError)) {, +				throw new AssertionFailedError(, +					exception.getClass().getName() + " is not an instance of " + AssertionFailedError.class.getName(),, +					exception);, +			}, +		}, +	// Must not be private., +	static class DatabaseConfig {, +	private static class ExceptionTrackingListener extends SummaryGeneratingListener {, +, +		List<Throwable> exceptions = new ArrayList<>();, +, +, +		@Override, +		public void executionFinished(TestIdentifier testIdentifier, TestExecutionResult testExecutionResult) {, +			super.executionFinished(testIdentifier, testExecutionResult);, +			testExecutionResult.getThrowable().ifPresent(exceptions::add);, +		}, +	}, +]