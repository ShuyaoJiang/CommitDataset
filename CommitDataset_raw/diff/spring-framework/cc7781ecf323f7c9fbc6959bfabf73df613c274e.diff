[+++ b/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java, + * @author Sebastien Deleuze, +				if (contentTypeToUse.getCharset() == null) {, +					Charset defaultCharset = getDefaultCharset();, +					if (defaultCharset != null) {, +						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset);, +					}, +++ b/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java, + * @author Sebastien Deleuze, +				if (contentTypeToUse.getCharset() == null) {, +					Charset defaultCharset = getDefaultCharset();, +					if (defaultCharset != null) {, +						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset);, +					}, +++ b/spring-web/src/main/java/org/springframework/http/converter/ByteArrayHttpMessageConverter.java, + * Copyright 2002-2016 the original author or authors., + * @author Juergen Hoeller, +	/**, +	 * Create a new instance of the {@code ByteArrayHttpMessageConverter}., +	 */, +, +++ b/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java, + * @author Sebastien Deleuze, +				if (contentTypeToUse.getCharset() == null) {, +					Charset defaultCharset = getDefaultCharset();, +					if (defaultCharset != null) {, +						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset);, +					}, +++ b/spring-web/src/main/java/org/springframework/http/converter/ByteArrayHttpMessageConverter.java, + * Copyright 2002-2016 the original author or authors., + * @author Juergen Hoeller, +	/**, +	 * Create a new instance of the {@code ByteArrayHttpMessageConverter}., +	 */, +, +++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java, + * Copyright 2002-2016 the original author or authors., + * @author Juergen Hoeller, +	private Charset charset = DEFAULT_CHARSET;, +, +	private Charset multipartCharset;, +, +, +		applyDefaultCharset();, +	/**, +	 * Set the default character set to use for reading and writing form data when, +	 * the request or response Content-Type header does not explicitly specify it., +	 * <p>By default this is set to "UTF-8". As of 4.3, it will also be used as, +	 * the default charset for the conversion of text bodies in a multipart request., +	 * In contrast to this, {@link #setMultipartCharset} only affects the encoding of, +	 * <i>file names</i> in a multipart request according to the encoded-word syntax., +	 */, +	public void setCharset(Charset charset) {, +		if (charset != this.charset) {, +			this.charset = (charset != null ? charset : DEFAULT_CHARSET);, +			applyDefaultCharset();, +		}, +	}, +, +	/**, +	 * Apply the configured charset as a default to registered part converters., +	 */, +	private void applyDefaultCharset() {, +		for (HttpMessageConverter<?> candidate : this.partConverters) {, +			if (candidate instanceof AbstractHttpMessageConverter) {, +				AbstractHttpMessageConverter<?> converter = (AbstractHttpMessageConverter<?>) candidate;, +				// Only override default charset if the converter operates with a charset to begin with..., +				if (converter.getDefaultCharset() != null) {, +					converter.setDefaultCharset(this.charset);, +				}, +			}, +		}, +	}, +, +	/**, +	 * Set the character set to use when writing multipart data to encode file, +	 * names. Encoding is based on the encoded-word syntax defined in RFC 2047, +	 * and relies on {@code MimeUtility} from "javax.mail"., +	 * <p>If not set file names will be encoded as US-ASCII., +	 * @param multipartCharset the charset to use, +	 * @since 4.1.1, +	 * @see <a href="http://en.wikipedia.org/wiki/MIME#Encoded-Word">Encoded-Word</a>, +	 */, +	public void setMultipartCharset(Charset multipartCharset) {, +		this.multipartCharset = multipartCharset;, +	}, +, +			charset = (contentType.getCharset() != null ? contentType.getCharset() : this.charset);, +++ b/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java, + * @author Sebastien Deleuze, +				if (contentTypeToUse.getCharset() == null) {, +					Charset defaultCharset = getDefaultCharset();, +					if (defaultCharset != null) {, +						contentTypeToUse = new MediaType(contentTypeToUse, defaultCharset);, +					}, +++ b/spring-web/src/main/java/org/springframework/http/converter/ByteArrayHttpMessageConverter.java, + * Copyright 2002-2016 the original author or authors., + * @author Juergen Hoeller, +	/**, +	 * Create a new instance of the {@code ByteArrayHttpMessageConverter}.]