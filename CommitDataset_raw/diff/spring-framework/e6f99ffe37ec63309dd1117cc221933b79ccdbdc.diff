[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, + * Copyright 2002-2015 the original author or authors., +	 * Support nested 'beans' element use cases by falling back to <literal>parentDefaults</literal>, +	 * in case the defaults are not explicitly set locally., +			// Potentially inherited from outer <beans> sections, otherwise falling back to false., +			lazyInit = (parentDefaults != null ? parentDefaults.getLazyInit() : FALSE_VALUE);, +			// Potentially inherited from outer <beans> sections, otherwise falling back to false., +			merge = (parentDefaults != null ? parentDefaults.getMerge() : FALSE_VALUE);, +			// Potentially inherited from outer <beans> sections, otherwise falling back to 'no'., +			autowire = (parentDefaults != null ? parentDefaults.getAutowire() : AUTOWIRE_NO_VALUE);, +		// Don't fall back to parentDefaults for dependency-check as it's no longer supported in, +		// <beans> as of 3.0. Therefore, no nested <beans> would ever need to fall back to it., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, + * Copyright 2002-2015 the original author or authors., +	 * Support nested 'beans' element use cases by falling back to <literal>parentDefaults</literal>, +	 * in case the defaults are not explicitly set locally., +			// Potentially inherited from outer <beans> sections, otherwise falling back to false., +			lazyInit = (parentDefaults != null ? parentDefaults.getLazyInit() : FALSE_VALUE);, +			// Potentially inherited from outer <beans> sections, otherwise falling back to false., +			merge = (parentDefaults != null ? parentDefaults.getMerge() : FALSE_VALUE);, +			// Potentially inherited from outer <beans> sections, otherwise falling back to 'no'., +			autowire = (parentDefaults != null ? parentDefaults.getAutowire() : AUTOWIRE_NO_VALUE);, +		// Don't fall back to parentDefaults for dependency-check as it's no longer supported in, +		// <beans> as of 3.0. Therefore, no nested <beans> would ever need to fall back to it., +++ b/spring-beans/src/main/resources/org/springframework/beans/factory/xml/spring-beans-4.2.xsd, +	'lazy-init' attribute of the 'bean' element. The default is "default",, +	indicating inheritance from outer 'beans' sections in case of nesting,, +	otherwise falling back to "false"., +	The default 'merge' value; see the documentation for the 'merge', +	attribute of the various collection elements. The default is "default",, +	indicating inheritance from outer 'beans' sections in case of nesting,, +	otherwise falling back to "false"., +	'autowire' attribute of the 'bean' element. The default is "default",, +	indicating inheritance from outer 'beans' sections in case of nesting,, +	otherwise falling back to "no" (i.e. no externally driven autowiring)., +	Indicates whether this bean is to be lazily initialized. If "false",, +	it will be instantiated on startup by bean factories that perform eager, +	initialization of singletons. The effective default is "false"., +	Hence, it needs to be specified per concrete bean definition. It can be, +	shared through the 'default-lazy-init' attribute at the 'beans' level, +	and potentially inherited from outer 'beans' defaults in case of nested, +	'beans' sections (e.g. with different profiles)., +	Spring container works out dependencies. The effective default is "no"., +	Hence, it needs to be specified per concrete bean definition. It can be, +	shared through the 'default-autowire' attribute at the 'beans' level, +	and potentially inherited from outer 'beans' defaults in case of nested, +	'beans' sections (e.g. with different profiles)., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, + * Copyright 2002-2015 the original author or authors., +	 * Support nested 'beans' element use cases by falling back to <literal>parentDefaults</literal>, +	 * in case the defaults are not explicitly set locally., +			// Potentially inherited from outer <beans> sections, otherwise falling back to false., +			lazyInit = (parentDefaults != null ? parentDefaults.getLazyInit() : FALSE_VALUE);, +			// Potentially inherited from outer <beans> sections, otherwise falling back to false., +			merge = (parentDefaults != null ? parentDefaults.getMerge() : FALSE_VALUE);, +			// Potentially inherited from outer <beans> sections, otherwise falling back to 'no'., +			autowire = (parentDefaults != null ? parentDefaults.getAutowire() : AUTOWIRE_NO_VALUE);, +		// Don't fall back to parentDefaults for dependency-check as it's no longer supported in, +		// <beans> as of 3.0. Therefore, no nested <beans> would ever need to fall back to it., +++ b/spring-beans/src/main/resources/org/springframework/beans/factory/xml/spring-beans-4.2.xsd, +	'lazy-init' attribute of the 'bean' element. The default is "default",, +	indicating inheritance from outer 'beans' sections in case of nesting,, +	otherwise falling back to "false"., +	The default 'merge' value; see the documentation for the 'merge', +	attribute of the various collection elements. The default is "default",, +	indicating inheritance from outer 'beans' sections in case of nesting,, +	otherwise falling back to "false"., +	'autowire' attribute of the 'bean' element. The default is "default",, +	indicating inheritance from outer 'beans' sections in case of nesting,, +	otherwise falling back to "no" (i.e. no externally driven autowiring)., +	Indicates whether this bean is to be lazily initialized. If "false",, +	it will be instantiated on startup by bean factories that perform eager, +	initialization of singletons. The effective default is "false"., +	Hence, it needs to be specified per concrete bean definition. It can be, +	shared through the 'default-lazy-init' attribute at the 'beans' level, +	and potentially inherited from outer 'beans' defaults in case of nested, +	'beans' sections (e.g. with different profiles)., +	Spring container works out dependencies. The effective default is "no"., +	Hence, it needs to be specified per concrete bean definition. It can be, +	shared through the 'default-autowire' attribute at the 'beans' level, +	and potentially inherited from outer 'beans' defaults in case of nested, +	'beans' sections (e.g. with different profiles)., +++ b/src/asciidoc/core-beans.adoc, +autowiring functionality has four modes. You specify autowiring __per__ bean and thus]