[+++ b/org.springframework.context/src/main/java/org/springframework/context/expression/BeanExpressionContextAccessor.java, +import org.springframework.core.convert.TypeDescriptor;, +import org.springframework.expression.TypedValue;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((BeanExpressionContext) target).getObject(name));, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/BeanExpressionContextAccessor.java, +import org.springframework.core.convert.TypeDescriptor;, +import org.springframework.expression.TypedValue;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((BeanExpressionContext) target).getObject(name));, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/BeanFactoryAccessor.java, +import org.springframework.core.convert.TypeDescriptor;, +import org.springframework.expression.TypedValue;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((BeanFactory) target).getBean(name));, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/BeanExpressionContextAccessor.java, +import org.springframework.core.convert.TypeDescriptor;, +import org.springframework.expression.TypedValue;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((BeanExpressionContext) target).getObject(name));, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/BeanFactoryAccessor.java, +import org.springframework.core.convert.TypeDescriptor;, +import org.springframework.expression.TypedValue;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((BeanFactory) target).getBean(name));, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/MapAccessor.java, +import org.springframework.expression.TypedValue;, +import org.springframework.expression.spel.ast.CommonTypeDescriptors;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((Map) target).get(name),CommonTypeDescriptors.OBJECT_TYPE_DESCRIPTOR);, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/BeanExpressionContextAccessor.java, +import org.springframework.core.convert.TypeDescriptor;, +import org.springframework.expression.TypedValue;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((BeanExpressionContext) target).getObject(name));, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/BeanFactoryAccessor.java, +import org.springframework.core.convert.TypeDescriptor;, +import org.springframework.expression.TypedValue;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((BeanFactory) target).getBean(name));, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/MapAccessor.java, +import org.springframework.expression.TypedValue;, +import org.springframework.expression.spel.ast.CommonTypeDescriptors;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((Map) target).get(name),CommonTypeDescriptors.OBJECT_TYPE_DESCRIPTOR);, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/ConstructorExecutor.java, +, +	TypedValue execute(EvaluationContext context, Object... arguments) throws AccessException;, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/BeanExpressionContextAccessor.java, +import org.springframework.core.convert.TypeDescriptor;, +import org.springframework.expression.TypedValue;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((BeanExpressionContext) target).getObject(name));, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/BeanFactoryAccessor.java, +import org.springframework.core.convert.TypeDescriptor;, +import org.springframework.expression.TypedValue;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((BeanFactory) target).getBean(name));, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/MapAccessor.java, +import org.springframework.expression.TypedValue;, +import org.springframework.expression.spel.ast.CommonTypeDescriptors;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((Map) target).get(name),CommonTypeDescriptors.OBJECT_TYPE_DESCRIPTOR);, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/ConstructorExecutor.java, +, +	TypedValue execute(EvaluationContext context, Object... arguments) throws AccessException;, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/EvaluationContext.java, +	TypedValue getRootObject();, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/BeanExpressionContextAccessor.java, +import org.springframework.core.convert.TypeDescriptor;, +import org.springframework.expression.TypedValue;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((BeanExpressionContext) target).getObject(name));, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/BeanFactoryAccessor.java, +import org.springframework.core.convert.TypeDescriptor;, +import org.springframework.expression.TypedValue;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((BeanFactory) target).getBean(name));, +++ b/org.springframework.context/src/main/java/org/springframework/context/expression/MapAccessor.java, +import org.springframework.expression.TypedValue;, +import org.springframework.expression.spel.ast.CommonTypeDescriptors;, + * @author Andy Clement, +	public TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {, +		return new TypedValue(((Map) target).get(name),CommonTypeDescriptors.OBJECT_TYPE_DESCRIPTOR);, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/ConstructorExecutor.java, +]