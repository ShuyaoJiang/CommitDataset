[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java, +	 * @deprecated as of 4.2. You can now invoke the public methods, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java, +	 * @deprecated as of 4.2. You can now invoke the public methods, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.java, + * @deprecated as of Spring 3.2, together with {@link DefaultAnnotationHandlerMapping},, +		return ("Accept".equalsIgnoreCase(headerName) || "Content-Type".equalsIgnoreCase(headerName));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java, +	 * @deprecated as of 4.2. You can now invoke the public methods, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.java, + * @deprecated as of Spring 3.2, together with {@link DefaultAnnotationHandlerMapping},, +		return ("Accept".equalsIgnoreCase(headerName) || "Content-Type".equalsIgnoreCase(headerName));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java, +	 * @since 4.2, +	 * @return a UriComponentsBuilder instance (never {@code null}), +	 * @since 4.2, +		return fromMethodInternal(baseUrl,, +				(controllerType != null ? controllerType : method.getDeclaringClass()), method, args);, +	 * @see #fromMethod(Class, Method, Object...), +	 * @see #fromMethod(UriComponentsBuilder, Class, Method, Object...), +	 * @deprecated as of 4.2, this is deprecated in favor of the overloaded, +	 * method that also accepts a controllerType argument, +	 * @since 4.2, +	 * @since 4.2, +	 * @since 4.2, +	 * @since 4.2, +	 * @since 4.2, +		/**, +		 * @since 4.2, +		 */, +		/**, +		 * @since 4.2, +		 */, +		 * @see #MethodArgumentBuilder(Class, Method), +		 * @deprecated as of 4.2, this is deprecated in favor of alternative constructors, +		 * that accept a controllerType argument, +		private static UriComponentsBuilder initBaseUrl() {, +			UriComponentsBuilder builder = ServletUriComponentsBuilder.fromCurrentServletMapping();, +			return UriComponentsBuilder.fromPath(builder.build().getPath());, +		}]