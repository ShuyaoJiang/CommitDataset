[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/RedirectView.java, + * Copyright 2002-2014 the original author or authors., + * View that redirects to an absolute, context relative, or current request, +	private boolean propagateQueryParams = false;, +, +	 * When set to {@code true} the query string of the current URL is appended, +	 * and thus propagated through to the redirected URL., +	 * <p>Defaults to {@code false}., +	 * @since 4.1, +	 */, +	public void setPropagateQueryParams(boolean propagateQueryParams) {, +		this.propagateQueryParams = propagateQueryParams;, +	}, +, +	/**, +	 * Whether to propagate the query params of the current URL., +	 * @since 4.1, +	 */, +	public boolean isPropagateQueryProperties() {, +		return this.propagateQueryParams;, +	}, +, +	/**, +		if (isPropagateQueryProperties()) {, +		 	appendCurrentQueryParams(targetUrl, request);, +		}, +		String name = HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE;, +		Map<String, String> uriVars = (Map<String, String>) request.getAttribute(name);, +	 * Append the query string of the current request to the target redirect URL., +	 * @param targetUrl the StringBuilder to append the properties to, +	 * @param request the current request, +	 * @since 4.1, +	 */, +	protected void appendCurrentQueryParams(StringBuilder targetUrl, HttpServletRequest request) {, +, +		String query = request.getQueryString();, +		if (StringUtils.hasText(query)) {, +, +			// Extract anchor fragment, if any., +			String fragment = null;, +			int anchorIndex = targetUrl.indexOf("#");, +			if (anchorIndex > -1) {, +				fragment = targetUrl.substring(anchorIndex);, +				targetUrl.delete(anchorIndex, targetUrl.length());, +			}, +, +			if (targetUrl.toString().indexOf('?') < 0) {, +				targetUrl.append('?').append(query);, +			}, +			else {, +				targetUrl.append('&').append(query);, +			}, +, +			// Append anchor fragment, if any, to end of URL., +			if (fragment != null) {, +				targetUrl.append(fragment);, +			}, +		}, +	}, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/RedirectView.java, + * Copyright 2002-2014 the original author or authors., + * View that redirects to an absolute, context relative, or current request, +	private boolean propagateQueryParams = false;, +, +	 * When set to {@code true} the query string of the current URL is appended, +	 * and thus propagated through to the redirected URL., +	 * <p>Defaults to {@code false}., +	 * @since 4.1, +	 */, +	public void setPropagateQueryParams(boolean propagateQueryParams) {, +		this.propagateQueryParams = propagateQueryParams;, +	}, +, +	/**, +	 * Whether to propagate the query params of the current URL., +	 * @since 4.1, +	 */, +	public boolean isPropagateQueryProperties() {, +		return this.propagateQueryParams;, +	}, +, +	/**, +		if (isPropagateQueryProperties()) {, +		 	appendCurrentQueryParams(targetUrl, request);, +		}, +		String name = HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE;, +		Map<String, String> uriVars = (Map<String, String>) request.getAttribute(name);, +	 * Append the query string of the current request to the target redirect URL., +	 * @param targetUrl the StringBuilder to append the properties to, +	 * @param request the current request, +	 * @since 4.1, +	 */, +	protected void appendCurrentQueryParams(StringBuilder targetUrl, HttpServletRequest request) {, +, +		String query = request.getQueryString();, +		if (StringUtils.hasText(query)) {, +, +			// Extract anchor fragment, if any.]