[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java, +		return MediaType.SPECIFICITY_COMPARATOR.compare(acceptType, produceType) <= 0 ? acceptType : produceType;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java, +		return MediaType.SPECIFICITY_COMPARATOR.compare(acceptType, produceType) <= 0 ? acceptType : produceType;, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorMockTests.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java, +		return MediaType.SPECIFICITY_COMPARATOR.compare(acceptType, produceType) <= 0 ? acceptType : produceType;, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorMockTests.java, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorTests.java, +	@Test, +	public void handleReturnValueStringAcceptCharset() throws Exception {, +		this.servletRequest.addHeader("Accept", "text/plain;charset=UTF-8");, +, +		List<HttpMessageConverter<?>> converters = new ArrayList<HttpMessageConverter<?>>();, +		converters.add(new ByteArrayHttpMessageConverter());, +		converters.add(new StringHttpMessageConverter());, +		RequestResponseBodyMethodProcessor processor = new RequestResponseBodyMethodProcessor(converters);, +, +		processor.writeWithMessageConverters("Foo", returnTypeString, webRequest);, +, +		assertEquals("text/plain;charset=UTF-8", servletResponse.getHeader("Content-Type"));, +	}, +]