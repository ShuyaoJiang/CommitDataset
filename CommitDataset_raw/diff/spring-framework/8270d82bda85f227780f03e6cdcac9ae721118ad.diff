[+++ b/spring-test-mvc/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java, +	public RequestMatcher contentType(String expectedContentType) {, +		return contentType(MediaType.parseMediaType(expectedContentType));, +	public RequestMatcher contentType(final MediaType expectedContentType) {, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java, +	public RequestMatcher contentType(String expectedContentType) {, +		return contentType(MediaType.parseMediaType(expectedContentType));, +	public RequestMatcher contentType(final MediaType expectedContentType) {, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/match/ContentRequestMatchersTests.java, +		MockRestRequestMatchers.content().contentType("application/json").match(this.request);, +		MockRestRequestMatchers.content().contentType(MediaType.APPLICATION_JSON).match(this.request);, +		MockRestRequestMatchers.content().contentType("application/xml").match(this.request);, +		MockRestRequestMatchers.content().contentType(MediaType.APPLICATION_ATOM_XML).match(this.request);, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java, +	public RequestMatcher contentType(String expectedContentType) {, +		return contentType(MediaType.parseMediaType(expectedContentType));, +	public RequestMatcher contentType(final MediaType expectedContentType) {, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/match/ContentRequestMatchersTests.java, +		MockRestRequestMatchers.content().contentType("application/json").match(this.request);, +		MockRestRequestMatchers.content().contentType(MediaType.APPLICATION_JSON).match(this.request);, +		MockRestRequestMatchers.content().contentType("application/xml").match(this.request);, +		MockRestRequestMatchers.content().contentType(MediaType.APPLICATION_ATOM_XML).match(this.request);, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/samples/matchers/ContentRequestMatcherTests.java, +		this.mockServer.expect(content().contentType("application/json;charset=UTF-8")).andRespond(withSuccess());, +		this.mockServer.expect(content().contentType("application/json;charset=UTF-8")).andRespond(withSuccess());, +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java, +	public RequestMatcher contentType(String expectedContentType) {, +		return contentType(MediaType.parseMediaType(expectedContentType));, +	public RequestMatcher contentType(final MediaType expectedContentType) {, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/match/ContentRequestMatchersTests.java, +		MockRestRequestMatchers.content().contentType("application/json").match(this.request);, +		MockRestRequestMatchers.content().contentType(MediaType.APPLICATION_JSON).match(this.request);, +		MockRestRequestMatchers.content().contentType("application/xml").match(this.request);, +		MockRestRequestMatchers.content().contentType(MediaType.APPLICATION_ATOM_XML).match(this.request);, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/samples/matchers/ContentRequestMatcherTests.java, +		this.mockServer.expect(content().contentType("application/json;charset=UTF-8")).andRespond(withSuccess());, +		this.mockServer.expect(content().contentType("application/json;charset=UTF-8")).andRespond(withSuccess());, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/samples/matchers/HeaderRequestMatcherTests.java, +			.andExpect(header("Accept", "application/json, application/*+json")), +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java, +	public RequestMatcher contentType(String expectedContentType) {, +		return contentType(MediaType.parseMediaType(expectedContentType));, +	public RequestMatcher contentType(final MediaType expectedContentType) {, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/match/ContentRequestMatchersTests.java, +		MockRestRequestMatchers.content().contentType("application/json").match(this.request);, +		MockRestRequestMatchers.content().contentType(MediaType.APPLICATION_JSON).match(this.request);, +		MockRestRequestMatchers.content().contentType("application/xml").match(this.request);, +		MockRestRequestMatchers.content().contentType(MediaType.APPLICATION_ATOM_XML).match(this.request);, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/samples/matchers/ContentRequestMatcherTests.java, +		this.mockServer.expect(content().contentType("application/json;charset=UTF-8")).andRespond(withSuccess());, +		this.mockServer.expect(content().contentType("application/json;charset=UTF-8")).andRespond(withSuccess());, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/samples/matchers/HeaderRequestMatcherTests.java, +			.andExpect(header("Accept", "application/json, application/*+json")), +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/samples/matchers/JsonPathRequestMatcherTests.java, +			.andExpect(content().contentType("application/json;charset=UTF-8")), +			.andExpect(content().contentType("application/json;charset=UTF-8")), +			.andExpect(content().contentType("application/json;charset=UTF-8")), +			.andExpect(content().contentType("application/json;charset=UTF-8")), +			.andExpect(content().contentType("application/json;charset=UTF-8")), +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java, +	public RequestMatcher contentType(String expectedContentType) {, +		return contentType(MediaType.parseMediaType(expectedContentType));, +	public RequestMatcher contentType(final MediaType expectedContentType) {, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/match/ContentRequestMatchersTests.java, +		MockRestRequestMatchers.content().contentType("application/json").match(this.request);, +		MockRestRequestMatchers.content().contentType(MediaType.APPLICATION_JSON).match(this.request);, +		MockRestRequestMatchers.content().contentType("application/xml").match(this.request);, +		MockRestRequestMatchers.content().contentType(MediaType.APPLICATION_ATOM_XML).match(this.request);, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/samples/matchers/ContentRequestMatcherTests.java, +		this.mockServer.expect(content().contentType("application/json;charset=UTF-8")).andRespond(withSuccess());, +		this.mockServer.expect(content().contentType("application/json;charset=UTF-8")).andRespond(withSuccess());, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/samples/matchers/HeaderRequestMatcherTests.java, +			.andExpect(header("Accept", "application/json, application/*+json")), +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/samples/matchers/JsonPathRequestMatcherTests.java, +			.andExpect(content().contentType("application/json;charset=UTF-8")), +			.andExpect(content().contentType("application/json;charset=UTF-8")), +			.andExpect(content().contentType("application/json;charset=UTF-8")), +			.andExpect(content().contentType("application/json;charset=UTF-8")), +			.andExpect(content().contentType("application/json;charset=UTF-8")), +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/samples/matchers/XmlContentRequestMatcherTests.java, +			.andExpect(content().contentType("application/xml")), +			.andExpect(content().contentType("application/xml")), +++ b/spring-test-mvc/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java, +	public RequestMatcher contentType(String expectedContentType) {, +		return contentType(MediaType.parseMediaType(expectedContentType));, +	public RequestMatcher contentType(final MediaType expectedContentType) {, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/match/ContentRequestMatchersTests.java, +		MockRestRequestMatchers.content().contentType("application/json").match(this.request);, +		MockRestRequestMatchers.content().contentType(MediaType.APPLICATION_JSON).match(this.request);, +		MockRestRequestMatchers.content().contentType("application/xml").match(this.request);, +		MockRestRequestMatchers.content().contentType(MediaType.APPLICATION_ATOM_XML).match(this.request);, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/samples/matchers/ContentRequestMatcherTests.java, +		this.mockServer.expect(content().contentType("application/json;charset=UTF-8")).andRespond(withSuccess());, +		this.mockServer.expect(content().contentType("application/json;charset=UTF-8")).andRespond(withSuccess());, +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/samples/matchers/HeaderRequestMatcherTests.java, +			.andExpect(header("Accept", "application/json, application/*+json")), +++ b/spring-test-mvc/src/test/java/org/springframework/test/web/client/samples/matchers/JsonPathRequestMatcherTests.java, +			.andExpect(content().contentType("application/json;charset=UTF-8")), +			.andExpect(content().contentType("application/json;charset=UTF-8")), +			.andExpect(content().contentType("application/json;charset=UTF-8"))]