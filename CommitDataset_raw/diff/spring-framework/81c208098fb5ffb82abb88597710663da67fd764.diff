[+++ b/spring-aspects/src/test/java/org/springframework/cache/config/AnnotatedClassCacheableService.java, + * Copyright 2002-2014 the original author or authors., +	@Cacheable(value = "default", keyGenerator = "customKyeGenerator"), +	public Object customKeyGenerator(Object arg1) {, +		return counter.getAndIncrement();, +	}, +, +	@Override, +	@Cacheable(value = "default", keyGenerator = "unknownBeanName"), +	public Object unknownCustomKeyGenerator(Object arg1) {, +		return counter.getAndIncrement();, +	}, +, +	@Override, +++ b/spring-aspects/src/test/java/org/springframework/cache/config/AnnotatedClassCacheableService.java, + * Copyright 2002-2014 the original author or authors., +	@Cacheable(value = "default", keyGenerator = "customKyeGenerator"), +	public Object customKeyGenerator(Object arg1) {, +		return counter.getAndIncrement();, +	}, +, +	@Override, +	@Cacheable(value = "default", keyGenerator = "unknownBeanName"), +	public Object unknownCustomKeyGenerator(Object arg1) {, +		return counter.getAndIncrement();, +	}, +, +	@Override, +++ b/spring-aspects/src/test/java/org/springframework/cache/config/CacheableService.java, + * Copyright 2002-2014 the original author or authors., +	T customKeyGenerator(Object arg1);, +, +	T unknownCustomKeyGenerator(Object arg1);, +, +++ b/spring-aspects/src/test/java/org/springframework/cache/config/AnnotatedClassCacheableService.java, + * Copyright 2002-2014 the original author or authors., +	@Cacheable(value = "default", keyGenerator = "customKyeGenerator"), +	public Object customKeyGenerator(Object arg1) {, +		return counter.getAndIncrement();, +	}, +, +	@Override, +	@Cacheable(value = "default", keyGenerator = "unknownBeanName"), +	public Object unknownCustomKeyGenerator(Object arg1) {, +		return counter.getAndIncrement();, +	}, +, +	@Override, +++ b/spring-aspects/src/test/java/org/springframework/cache/config/CacheableService.java, + * Copyright 2002-2014 the original author or authors., +	T customKeyGenerator(Object arg1);, +, +	T unknownCustomKeyGenerator(Object arg1);, +, +++ b/spring-aspects/src/test/java/org/springframework/cache/config/DefaultCacheableService.java, + * Copyright 2002-2014 the original author or authors., +	@Cacheable(value = "default", keyGenerator = "customKeyGenerator"), +	public Long customKeyGenerator(Object arg1) {, +		return counter.getAndIncrement();, +	}, +, +	@Override, +	@Cacheable(value = "default", keyGenerator = "unknownBeanName"), +	public Long unknownCustomKeyGenerator(Object arg1) {, +		return counter.getAndIncrement();, +	}, +, +	@Override, +++ b/spring-aspects/src/test/java/org/springframework/cache/config/AnnotatedClassCacheableService.java, + * Copyright 2002-2014 the original author or authors., +	@Cacheable(value = "default", keyGenerator = "customKyeGenerator"), +	public Object customKeyGenerator(Object arg1) {, +		return counter.getAndIncrement();, +	}, +, +	@Override, +	@Cacheable(value = "default", keyGenerator = "unknownBeanName"), +	public Object unknownCustomKeyGenerator(Object arg1) {, +		return counter.getAndIncrement();, +	}, +, +	@Override, +++ b/spring-aspects/src/test/java/org/springframework/cache/config/CacheableService.java, + * Copyright 2002-2014 the original author or authors., +	T customKeyGenerator(Object arg1);, +, +	T unknownCustomKeyGenerator(Object arg1);, +, +++ b/spring-aspects/src/test/java/org/springframework/cache/config/DefaultCacheableService.java, + * Copyright 2002-2014 the original author or authors., +	@Cacheable(value = "default", keyGenerator = "customKeyGenerator"), +	public Long customKeyGenerator(Object arg1) {, +		return counter.getAndIncrement();, +	}, +, +	@Override, +	@Cacheable(value = "default", keyGenerator = "unknownBeanName"), +	public Long unknownCustomKeyGenerator(Object arg1) {, +		return counter.getAndIncrement();, +	}]