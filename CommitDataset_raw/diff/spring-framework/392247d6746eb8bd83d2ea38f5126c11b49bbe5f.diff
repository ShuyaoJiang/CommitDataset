[+++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.java, + * Copyright 2002-2011 the original author or authors., +public abstract class AbstractSessionFactoryBean extends HibernateExceptionTranslator, +		implements FactoryBean<SessionFactory>, InitializingBean, DisposableBean {, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.java, + * Copyright 2002-2011 the original author or authors., +public abstract class AbstractSessionFactoryBean extends HibernateExceptionTranslator, +		implements FactoryBean<SessionFactory>, InitializingBean, DisposableBean {, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/HibernateExceptionTranslator.java, +, + * <p>Extended by {@link LocalSessionFactoryBean}, so there is no need to declare this, + * translator in addition to a {@code LocalSessionFactoryBean}., + * <p>When configuring the container with {@code @Configuration} classes, a {@code @Bean}, + * of this type must be registered manually., + *, + * @author Juergen Hoeller, +, +	/**, +	 * Set the JDBC exception translator for the SessionFactory,, +	 * exposed via the PersistenceExceptionTranslator interface., +	 * <p>Applied to any SQLException root cause of a Hibernate JDBCException,, +	 * overriding Hibernate's default SQLException translation (which is, +	 * based on Hibernate's Dialect for a specific target database)., +	 * @param jdbcExceptionTranslator the exception translator, +	 * @see java.sql.SQLException, +	 * @see org.hibernate.JDBCException, +	 * @see org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator, +	 * @see org.springframework.jdbc.support.SQLStateSQLExceptionTranslator, +	 * @see org.springframework.dao.support.PersistenceExceptionTranslator, +	 */, +	public void setJdbcExceptionTranslator(SQLExceptionTranslator jdbcExceptionTranslator) {, +		this.jdbcExceptionTranslator = jdbcExceptionTranslator;, +	}, +, +, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.java, + * Copyright 2002-2011 the original author or authors., +public abstract class AbstractSessionFactoryBean extends HibernateExceptionTranslator, +		implements FactoryBean<SessionFactory>, InitializingBean, DisposableBean {, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/HibernateExceptionTranslator.java, +, + * <p>Extended by {@link LocalSessionFactoryBean}, so there is no need to declare this, + * translator in addition to a {@code LocalSessionFactoryBean}., + * <p>When configuring the container with {@code @Configuration} classes, a {@code @Bean}, + * of this type must be registered manually., + *, + * @author Juergen Hoeller, +, +	/**, +	 * Set the JDBC exception translator for the SessionFactory,, +	 * exposed via the PersistenceExceptionTranslator interface., +	 * <p>Applied to any SQLException root cause of a Hibernate JDBCException,, +	 * overriding Hibernate's default SQLException translation (which is, +	 * based on Hibernate's Dialect for a specific target database)., +	 * @param jdbcExceptionTranslator the exception translator, +	 * @see java.sql.SQLException, +	 * @see org.hibernate.JDBCException, +	 * @see org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator, +	 * @see org.springframework.jdbc.support.SQLStateSQLExceptionTranslator, +	 * @see org.springframework.dao.support.PersistenceExceptionTranslator, +	 */, +	public void setJdbcExceptionTranslator(SQLExceptionTranslator jdbcExceptionTranslator) {, +		this.jdbcExceptionTranslator = jdbcExceptionTranslator;, +	}, +, +, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate4/HibernateExceptionTranslator.java, + * instances to Spring's {@link DataAccessException} hierarchy., + *, + * <p>Extended by {@link LocalSessionFactoryBean}, so there is no need to declare this, + * translator in addition to a {@code LocalSessionFactoryBean}., + *, + * <p>When configuring the container with {@code @Configuration} classes, a {@code @Bean}, + * of this type must be registered manually., +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.java, + * Copyright 2002-2011 the original author or authors., +public abstract class AbstractSessionFactoryBean extends HibernateExceptionTranslator, +		implements FactoryBean<SessionFactory>, InitializingBean, DisposableBean {, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/HibernateExceptionTranslator.java, +, + * <p>Extended by {@link LocalSessionFactoryBean}, so there is no need to declare this, + * translator in addition to a {@code LocalSessionFactoryBean}., + * <p>When configuring the container with {@code @Configuration} classes, a {@code @Bean}, + * of this type must be registered manually., + *, + * @author Juergen Hoeller, +, +	/**, +	 * Set the JDBC exception translator for the SessionFactory,, +	 * exposed via the PersistenceExceptionTranslator interface., +	 * <p>Applied to any SQLException root cause of a Hibernate JDBCException,, +	 * overriding Hibernate's default SQLException translation (which is, +	 * based on Hibernate's Dialect for a specific target database)., +	 * @param jdbcExceptionTranslator the exception translator, +	 * @see java.sql.SQLException, +	 * @see org.hibernate.JDBCException, +	 * @see org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator, +	 * @see org.springframework.jdbc.support.SQLStateSQLExceptionTranslator, +	 * @see org.springframework.dao.support.PersistenceExceptionTranslator, +	 */]