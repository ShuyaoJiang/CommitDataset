[+++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPoolingTargetSource.java, + * Copyright 2002-2014 the original author or authors., +@SuppressWarnings("serial"), +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPoolingTargetSource.java, + * Copyright 2002-2014 the original author or authors., +@SuppressWarnings("serial"), +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java, + * Copyright 2002-2014 the original author or authors., +@SuppressWarnings("serial"), +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPoolingTargetSource.java, + * Copyright 2002-2014 the original author or authors., +@SuppressWarnings("serial"), +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java, + * Copyright 2002-2014 the original author or authors., +@SuppressWarnings("serial"), +++ b/spring-aop/src/main/java/org/springframework/aop/target/CommonsPoolTargetSource.java, + * Copyright 2002-2014 the original author or authors., + * {@link org.springframework.aop.TargetSource} implementation that holds, + * objects in a configurable Apache Commons Pool., + * meaningful validation. All exposed Commons Pool properties use the, + * corresponding Commons Pool defaults., + *, + * <p>Compatible with Apache Commons Pool 1.5.x and 1.6., + * Note that this class doesn't declare Commons Pool 1.6's generic type, + * in order to remain compatible with Commons Pool 1.5.x at runtime., +@SuppressWarnings({"rawtypes", "unchecked", "serial"}), +public class CommonsPoolTargetSource extends AbstractPoolingTargetSource implements PoolableObjectFactory {, +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPoolingTargetSource.java, + * Copyright 2002-2014 the original author or authors., +@SuppressWarnings("serial"), +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java, + * Copyright 2002-2014 the original author or authors., +@SuppressWarnings("serial"), +++ b/spring-aop/src/main/java/org/springframework/aop/target/CommonsPoolTargetSource.java, + * Copyright 2002-2014 the original author or authors., + * {@link org.springframework.aop.TargetSource} implementation that holds, + * objects in a configurable Apache Commons Pool., + * meaningful validation. All exposed Commons Pool properties use the, + * corresponding Commons Pool defaults., + *, + * <p>Compatible with Apache Commons Pool 1.5.x and 1.6., + * Note that this class doesn't declare Commons Pool 1.6's generic type, + * in order to remain compatible with Commons Pool 1.5.x at runtime., +@SuppressWarnings({"rawtypes", "unchecked", "serial"}), +public class CommonsPoolTargetSource extends AbstractPoolingTargetSource implements PoolableObjectFactory {, +++ b/spring-aop/src/main/java/org/springframework/aop/target/PrototypeTargetSource.java, + * Copyright 2002-2014 the original author or authors., + * {@link org.springframework.aop.TargetSource} implementation that, + * creates a new instance of the target bean for each request,, + * destroying each instance on release (after each request)., + *, + * <p>Obtains bean instances from its containing, +@SuppressWarnings("serial"), +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPoolingTargetSource.java, + * Copyright 2002-2014 the original author or authors., +@SuppressWarnings("serial"), +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java, + * Copyright 2002-2014 the original author or authors., +@SuppressWarnings("serial"), +++ b/spring-aop/src/main/java/org/springframework/aop/target/CommonsPoolTargetSource.java, + * Copyright 2002-2014 the original author or authors., + * {@link org.springframework.aop.TargetSource} implementation that holds, + * objects in a configurable Apache Commons Pool., + * meaningful validation. All exposed Commons Pool properties use the, + * corresponding Commons Pool defaults., + *, + * <p>Compatible with Apache Commons Pool 1.5.x and 1.6., + * Note that this class doesn't declare Commons Pool 1.6's generic type, + * in order to remain compatible with Commons Pool 1.5.x at runtime., +@SuppressWarnings({"rawtypes", "unchecked", "serial"}), +public class CommonsPoolTargetSource extends AbstractPoolingTargetSource implements PoolableObjectFactory {, +++ b/spring-aop/src/main/java/org/springframework/aop/target/PrototypeTargetSource.java, + * Copyright 2002-2014 the original author or authors., + * {@link org.springframework.aop.TargetSource} implementation that, + * creates a new instance of the target bean for each request,, + * destroying each instance on release (after each request)., + *, + * <p>Obtains bean instances from its containing, +@SuppressWarnings("serial"), +++ b/spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java, + * Copyright 2002-2014 the original author or authors., + * Alternative to an object pool. This {@link org.springframework.aop.TargetSource}, + * uses a threading model in which every thread has its own copy of the target., + * There's no contention for targets. Target object creation is kept to a minimum, + * on the running server., +@SuppressWarnings("serial"), +				logger.debug("No target for prototype '" + getTargetBeanName() + "' bound to thread: " +, +						"creating one and binding it to thread '" + Thread.currentThread().getName() + "'");, +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPoolingTargetSource.java, + * Copyright 2002-2014 the original author or authors., +@SuppressWarnings("serial"), +++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java, + * Copyright 2002-2014 the original author or authors., +@SuppressWarnings("serial"), +++ b/spring-aop/src/main/java/org/springframework/aop/target/CommonsPoolTargetSource.java, + * Copyright 2002-2014 the original author or authors., + * {@link org.springframework.aop.TargetSource} implementation that holds, + * objects in a configurable Apache Commons Pool., + * meaningful validation. All exposed Commons Pool properties use the, + * corresponding Commons Pool defaults.]