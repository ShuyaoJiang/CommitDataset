[+++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheOperation.java, + * Copyright 2002-2015 the original author or authors., + * @param <A> the type of the JSR-107 annotation, +	 * Return the {@link CacheResolver} instance to use to resolve the cache, +	 * to use for this operation., +	 * Return the {@link CacheInvocationParameter} instances based on the, +	 * specified method arguments., +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheOperation.java, + * Copyright 2002-2015 the original author or authors., + * @param <A> the type of the JSR-107 annotation, +	 * Return the {@link CacheResolver} instance to use to resolve the cache, +	 * to use for this operation., +	 * Return the {@link CacheInvocationParameter} instances based on the, +	 * specified method arguments., +++ b/spring-context/src/main/java/org/springframework/context/ApplicationListener.java, + * Copyright 2002-2015 the original author or authors., +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheOperation.java, + * Copyright 2002-2015 the original author or authors., + * @param <A> the type of the JSR-107 annotation, +	 * Return the {@link CacheResolver} instance to use to resolve the cache, +	 * to use for this operation., +	 * Return the {@link CacheInvocationParameter} instances based on the, +	 * specified method arguments., +++ b/spring-context/src/main/java/org/springframework/context/ApplicationListener.java, + * Copyright 2002-2015 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/context/PayloadApplicationEvent.java, + * <p>Mainly intended for internal use within the framework., + *, + * @param <T> the payload type of the event, +public class PayloadApplicationEvent<T> extends ApplicationEvent {, +, +, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheOperation.java, + * Copyright 2002-2015 the original author or authors., + * @param <A> the type of the JSR-107 annotation, +	 * Return the {@link CacheResolver} instance to use to resolve the cache, +	 * to use for this operation., +	 * Return the {@link CacheInvocationParameter} instances based on the, +	 * specified method arguments., +++ b/spring-context/src/main/java/org/springframework/context/ApplicationListener.java, + * Copyright 2002-2015 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/context/PayloadApplicationEvent.java, + * <p>Mainly intended for internal use within the framework., + *, + * @param <T> the payload type of the event, +public class PayloadApplicationEvent<T> extends ApplicationEvent {, +, +, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AdviceModeImportSelector.java, + * Copyright 2002-2015 the original author or authors., + * @param <A> annotation containing {@linkplain #getAdviceModeAttributeName() AdviceMode attribute}, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheOperation.java, + * Copyright 2002-2015 the original author or authors., + * @param <A> the type of the JSR-107 annotation, +	 * Return the {@link CacheResolver} instance to use to resolve the cache, +	 * to use for this operation., +	 * Return the {@link CacheInvocationParameter} instances based on the, +	 * specified method arguments., +++ b/spring-context/src/main/java/org/springframework/context/ApplicationListener.java, + * Copyright 2002-2015 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/context/PayloadApplicationEvent.java, + * <p>Mainly intended for internal use within the framework., + *, + * @param <T> the payload type of the event, +public class PayloadApplicationEvent<T> extends ApplicationEvent {, +, +, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AdviceModeImportSelector.java, + * Copyright 2002-2015 the original author or authors., + * @param <A> annotation containing {@linkplain #getAdviceModeAttributeName() AdviceMode attribute}, +++ b/spring-core/src/main/java/org/springframework/core/convert/converter/ConverterFactory.java, + * Copyright 2002-2015 the original author or authors., + * @param <S> the source type converters created by this factory can convert from, + * @param <R> the target range (or base) type converters created by this factory can convert to;, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheOperation.java, + * Copyright 2002-2015 the original author or authors., + * @param <A> the type of the JSR-107 annotation, +	 * Return the {@link CacheResolver} instance to use to resolve the cache, +	 * to use for this operation., +	 * Return the {@link CacheInvocationParameter} instances based on the, +	 * specified method arguments., +++ b/spring-context/src/main/java/org/springframework/context/ApplicationListener.java, + * Copyright 2002-2015 the original author or authors., +++ b/spring-context/src/main/java/org/springframework/context/PayloadApplicationEvent.java, + * <p>Mainly intended for internal use within the framework., + *, + * @param <T> the payload type of the event, +public class PayloadApplicationEvent<T> extends ApplicationEvent {, +, +, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AdviceModeImportSelector.java, + * Copyright 2002-2015 the original author or authors., + * @param <A> annotation containing {@linkplain #getAdviceModeAttributeName() AdviceMode attribute}, +++ b/spring-core/src/main/java/org/springframework/core/convert/converter/ConverterFactory.java, + * Copyright 2002-2015 the original author or authors., + * @param <S> the source type converters created by this factory can convert from, + * @param <R> the target range (or base) type converters created by this factory can convert to;, +++ b/spring-core/src/main/java/org/springframework/core/convert/converter/ConvertingComparator.java, + * Copyright 2002-2015 the original author or authors., + * @since 3.2]