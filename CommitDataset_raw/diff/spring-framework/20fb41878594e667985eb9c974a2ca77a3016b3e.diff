[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/BindErrorsTag.java, + * Copyright 2002-2013 the original author or authors., +		this.errors = getRequestContext().getErrors(this.name, isHtmlEscape());, +++ /dev/null, +++ /dev/null, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/BindErrorsTag.java, + * Copyright 2002-2013 the original author or authors., +		this.errors = getRequestContext().getErrors(this.name, isHtmlEscape());, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/BindTag.java, + * Copyright 2002-2013 the original author or authors., +		String resolvedPath = getPath();, +++ /dev/null, +++ /dev/null, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/BindErrorsTag.java, + * Copyright 2002-2013 the original author or authors., +		this.errors = getRequestContext().getErrors(this.name, isHtmlEscape());, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/BindTag.java, + * Copyright 2002-2013 the original author or authors., +		String resolvedPath = getPath();, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/EscapeBodyTag.java, + * Copyright 2002-2013 the original author or authors., +	public void setJavaScriptEscape(boolean javaScriptEscape) throws JspException {, +		this.javaScriptEscape = javaScriptEscape;, +++ /dev/null, +++ /dev/null, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/BindErrorsTag.java, + * Copyright 2002-2013 the original author or authors., +		this.errors = getRequestContext().getErrors(this.name, isHtmlEscape());, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/BindTag.java, + * Copyright 2002-2013 the original author or authors., +		String resolvedPath = getPath();, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/EscapeBodyTag.java, + * Copyright 2002-2013 the original author or authors., +	public void setJavaScriptEscape(boolean javaScriptEscape) throws JspException {, +		this.javaScriptEscape = javaScriptEscape;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/EvalTag.java, + * Copyright 2002-2013 the original author or authors., +	public void setJavaScriptEscape(boolean javaScriptEscape) throws JspException {, +		this.javaScriptEscape = javaScriptEscape;, +++ /dev/null, +++ /dev/null, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/BindErrorsTag.java, + * Copyright 2002-2013 the original author or authors., +		this.errors = getRequestContext().getErrors(this.name, isHtmlEscape());, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/BindTag.java, + * Copyright 2002-2013 the original author or authors., +		String resolvedPath = getPath();, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/EscapeBodyTag.java, + * Copyright 2002-2013 the original author or authors., +	public void setJavaScriptEscape(boolean javaScriptEscape) throws JspException {, +		this.javaScriptEscape = javaScriptEscape;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/EvalTag.java, + * Copyright 2002-2013 the original author or authors., +	public void setJavaScriptEscape(boolean javaScriptEscape) throws JspException {, +		this.javaScriptEscape = javaScriptEscape;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/HtmlEscapeTag.java, + * Copyright 2002-2013 the original author or authors., +	private boolean defaultHtmlEscape;, +	public void setDefaultHtmlEscape(boolean defaultHtmlEscape) {, +		getRequestContext().setDefaultHtmlEscape(this.defaultHtmlEscape);, +++ /dev/null, +++ /dev/null, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/BindErrorsTag.java, + * Copyright 2002-2013 the original author or authors., +		this.errors = getRequestContext().getErrors(this.name, isHtmlEscape());, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/BindTag.java, + * Copyright 2002-2013 the original author or authors., +		String resolvedPath = getPath();, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/EscapeBodyTag.java, + * Copyright 2002-2013 the original author or authors., +	public void setJavaScriptEscape(boolean javaScriptEscape) throws JspException {, +		this.javaScriptEscape = javaScriptEscape;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/EvalTag.java, + * Copyright 2002-2013 the original author or authors., +	public void setJavaScriptEscape(boolean javaScriptEscape) throws JspException {, +		this.javaScriptEscape = javaScriptEscape;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/HtmlEscapeTag.java, + * Copyright 2002-2013 the original author or authors., +	private boolean defaultHtmlEscape;, +	public void setDefaultHtmlEscape(boolean defaultHtmlEscape) {, +		getRequestContext().setDefaultHtmlEscape(this.defaultHtmlEscape);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/HtmlEscapingAwareTag.java, + * Copyright 2002-2013 the original author or authors., +	public void setHtmlEscape(boolean htmlEscape) throws JspException {, +		this.htmlEscape = htmlEscape;, +++ /dev/null, +++ /dev/null, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/BindErrorsTag.java, + * Copyright 2002-2013 the original author or authors., +		this.errors = getRequestContext().getErrors(this.name, isHtmlEscape());, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/BindTag.java, + * Copyright 2002-2013 the original author or authors., +		String resolvedPath = getPath();, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/EscapeBodyTag.java, + * Copyright 2002-2013 the original author or authors.]