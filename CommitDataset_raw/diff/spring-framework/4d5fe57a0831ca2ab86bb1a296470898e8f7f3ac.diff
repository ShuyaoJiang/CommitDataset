[+++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/Scheduled.java, + * Copyright 2002-2012 the original author or authors., + * {@link #cron()}, {@link #fixedDelay()}, or {@link #fixedRate()}, + * attributes must be specified., + * {@code void} return type., +	 * and day of week.  e.g. {@code "0 * * * * MON-FRI"} means once per minute on, +	 * weekdays (at the top of the minute - the 0th second)., +	 * @see org.springframework.scheduling.support.CronSequenceGenerator, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/Scheduled.java, + * Copyright 2002-2012 the original author or authors., + * {@link #cron()}, {@link #fixedDelay()}, or {@link #fixedRate()}, + * attributes must be specified., + * {@code void} return type., +	 * and day of week.  e.g. {@code "0 * * * * MON-FRI"} means once per minute on, +	 * weekdays (at the top of the minute - the 0th second)., +	 * @see org.springframework.scheduling.support.CronSequenceGenerator, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java, + * Copyright 2002-2012 the original author or authors., +, +						}, +						catch (SecurityException ex) {, +						}, +						catch (NoSuchMethodException ex) {, +					String errorMessage = "Exactly one of the 'cron', 'fixedDelay', or 'fixedRate' attributes is required.";, +		Map<String, SchedulingConfigurer> configurers =, +				this.applicationContext.getBeansOfType(SchedulingConfigurer.class);, +		if (this.registrar.getScheduler() == null) {, +			}, +			else if (schedulers.size() == 1) {, +			}, +			else if (schedulers.size() >= 2){, +				throw new IllegalStateException(, +						"More than one TaskScheduler and/or ScheduledExecutorService  " +, +						"exist within the context. Remove all but one of the beans; or " +, +						"implement the SchedulingConfigurer interface and call " +, +						"ScheduledTaskRegistrar#setScheduler explicitly within the " +, +						"configureTasks() callback. Found the following beans: " + schedulers.keySet());, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/Scheduled.java, + * Copyright 2002-2012 the original author or authors., + * {@link #cron()}, {@link #fixedDelay()}, or {@link #fixedRate()}, + * attributes must be specified., + * {@code void} return type., +	 * and day of week.  e.g. {@code "0 * * * * MON-FRI"} means once per minute on, +	 * weekdays (at the top of the minute - the 0th second)., +	 * @see org.springframework.scheduling.support.CronSequenceGenerator, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java, + * Copyright 2002-2012 the original author or authors., +, +						}, +						catch (SecurityException ex) {, +						}, +						catch (NoSuchMethodException ex) {, +					String errorMessage = "Exactly one of the 'cron', 'fixedDelay', or 'fixedRate' attributes is required.";, +		Map<String, SchedulingConfigurer> configurers =, +				this.applicationContext.getBeansOfType(SchedulingConfigurer.class);, +		if (this.registrar.getScheduler() == null) {, +			}, +			else if (schedulers.size() == 1) {, +			}, +			else if (schedulers.size() >= 2){, +				throw new IllegalStateException(, +						"More than one TaskScheduler and/or ScheduledExecutorService  " +, +						"exist within the context. Remove all but one of the beans; or " +, +						"implement the SchedulingConfigurer interface and call " +, +						"ScheduledTaskRegistrar#setScheduler explicitly within the " +, +						"configureTasks() callback. Found the following beans: " + schedulers.keySet());, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/SchedulingConfigurer.java, + * Copyright 2002-2012 the original author or authors., + * Optional interface to be implemented by @{@link, + * org.springframework.context.annotation.Configuration Configuration} classes annotated, + * with @{@link EnableScheduling}. Typically used for setting a specific, + * {@link org.springframework.scheduling.TaskScheduler TaskScheduler} bean to be used when, + * executing scheduled tasks or for registering scheduled tasks in a <em>programmatic</em>, + * fashion as opposed to the <em>declarative</em> approach of using the @{@link Scheduled}, + * annotation. For example, this may be necessary when implementing {@link, + * org.springframework.scheduling.Trigger Trigger}-based tasks, which are not supported by, + * the {@code @Scheduled} annotation., +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/Scheduled.java, + * Copyright 2002-2012 the original author or authors., + * {@link #cron()}, {@link #fixedDelay()}, or {@link #fixedRate()}, + * attributes must be specified., + * {@code void} return type., +	 * and day of week.  e.g. {@code "0 * * * * MON-FRI"} means once per minute on, +	 * weekdays (at the top of the minute - the 0th second)., +	 * @see org.springframework.scheduling.support.CronSequenceGenerator, +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java, + * Copyright 2002-2012 the original author or authors., +, +						}, +						catch (SecurityException ex) {, +						}, +						catch (NoSuchMethodException ex) {, +					String errorMessage = "Exactly one of the 'cron', 'fixedDelay', or 'fixedRate' attributes is required.";, +		Map<String, SchedulingConfigurer> configurers =, +				this.applicationContext.getBeansOfType(SchedulingConfigurer.class);, +		if (this.registrar.getScheduler() == null) {, +			}, +			else if (schedulers.size() == 1) {, +			}, +			else if (schedulers.size() >= 2){]