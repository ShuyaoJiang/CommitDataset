[+++ b/spring-framework-reference/src/mvc.xml, +          <para><emphasis>Clear separation of roles</emphasis>. Each role &mdash;, +          resolver, and so on &mdash; can be fulfilled by a specialized, +        further processing by other elements in the process. See <xref, +        linkend="mvc-multipart" /> for further information about, +        multipart handling.</para>, +		returning void &mdash; see <xref linkend="mvc-coc-r2vnt"/>.</para>, +        	<listitem><para>It may already be in the model due to use of , +        		&mdash; see <xref linkend="mvc-ann-sessionattrib"/>.</para></listitem>, +        	<listitem><para>It may already be in the model due to an , +        		controller &mdash; as explained in the previous section.</para></listitem>, +        	<listitem><para>It may be retrieved based on a URI template variable, +        		and type converter (explained in more detail below).</para></listitem>, +        	<listitem><para>It may be instantiated using its default constructor.</para></listitem>, +		class matches request parameter names &mdash; including query string parameters and, +		form fields &mdash; to model attribute fields by name. Matching fields are populated, +<lineannotation>&lt;!&mdash; in <literal>views.xml</literal> --&gt;</lineannotation>, +    &mdash; e.g. the Post/Redirect/Get pattern. Flash attributes are saved temporarily, +      data of a specific content type &mdash; for example a multipart request with , +      <para>You could access the part named "meta-data" with a, +      the body of a non-multipart request to a target object, +      header of the multipart:</para>, +, +      <programlisting language="java">@RequestMapping(value="/someUrl", method = RequestMethod.POST), +                       @RequestPart("file-data") MultipartFile file</emphasis>) {, +}</programlisting>, +      <para>Notice how <classname>MultipartFile</classname> , +      header and converted with the help of the , +      <title id="mvc-HandlerExceptionResolver"><interfacename>HandlerExceptionResolver</interfacename></title>, +    of MVC &mdash; models, views, and controllers.</para>, +				            converts Java objects to/from XML &mdash; added if JAXB2 is present , +				            converts to/from JSON &mdash; added if Jackson is present on the classpath., +				            converts Atom feeds &mdash; added if Rome is present on the classpath., +				            converts RSS feeds &mdash; added if Rome is present on the classpath.]