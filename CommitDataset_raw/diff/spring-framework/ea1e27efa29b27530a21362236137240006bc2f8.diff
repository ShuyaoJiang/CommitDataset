[+++ b/build.gradle, +		optional("org.quartz-scheduler:quartz:2.1.7"), +++ b/build.gradle, +		optional("org.quartz-scheduler:quartz:2.1.7"), +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>Note: As of Spring 4.1, Spring's EhCache support requires EhCache 2.5 or higher., + *, +		setMaxEntriesLocalHeap(10000);, +++ b/build.gradle, +		optional("org.quartz-scheduler:quartz:2.1.7"), +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>Note: As of Spring 4.1, Spring's EhCache support requires EhCache 2.5 or higher., + *, +		setMaxEntriesLocalHeap(10000);, +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>Note: As of Spring 4.1, Spring's EhCache support requires EhCache 2.5 or higher., +++ b/build.gradle, +		optional("org.quartz-scheduler:quartz:2.1.7"), +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>Note: As of Spring 4.1, Spring's EhCache support requires EhCache 2.5 or higher., + *, +		setMaxEntriesLocalHeap(10000);, +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>Note: As of Spring 4.1, Spring's EhCache support requires EhCache 2.5 or higher., +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/AdaptableJobFactory.java, + * Copyright 2002-2014 the original author or authors., + * <p>Compatible with Quartz 2.1.4 and higher, as of Spring 4.1., +	public Job newJob(TriggerFiredBundle bundle, Scheduler scheduler) throws SchedulerException {, +		return bundle.getJobDetail().getJobClass().newInstance();, +++ b/build.gradle, +		optional("org.quartz-scheduler:quartz:2.1.7"), +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>Note: As of Spring 4.1, Spring's EhCache support requires EhCache 2.5 or higher., + *, +		setMaxEntriesLocalHeap(10000);, +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>Note: As of Spring 4.1, Spring's EhCache support requires EhCache 2.5 or higher., +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/AdaptableJobFactory.java, + * Copyright 2002-2014 the original author or authors., + * <p>Compatible with Quartz 2.1.4 and higher, as of Spring 4.1., +	public Job newJob(TriggerFiredBundle bundle, Scheduler scheduler) throws SchedulerException {, +		return bundle.getJobDetail().getJobClass().newInstance();, +++ /dev/null, +++ b/build.gradle, +		optional("org.quartz-scheduler:quartz:2.1.7"), +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>Note: As of Spring 4.1, Spring's EhCache support requires EhCache 2.5 or higher., + *, +		setMaxEntriesLocalHeap(10000);, +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>Note: As of Spring 4.1, Spring's EhCache support requires EhCache 2.5 or higher., +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/AdaptableJobFactory.java, + * Copyright 2002-2014 the original author or authors., + * <p>Compatible with Quartz 2.1.4 and higher, as of Spring 4.1., +	public Job newJob(TriggerFiredBundle bundle, Scheduler scheduler) throws SchedulerException {, +		return bundle.getJobDetail().getJobClass().newInstance();, +++ /dev/null, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/CronTriggerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., +import java.text.ParseException;, +import org.quartz.impl.triggers.CronTriggerImpl;, +	public void afterPropertiesSet() throws ParseException {, +			this.jobDataMap.put("jobDetail", this.jobDetail);, +++ b/build.gradle, +		optional("org.quartz-scheduler:quartz:2.1.7"), +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>Note: As of Spring 4.1, Spring's EhCache support requires EhCache 2.5 or higher., + *, +		setMaxEntriesLocalHeap(10000);, +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>Note: As of Spring 4.1, Spring's EhCache support requires EhCache 2.5 or higher., +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/AdaptableJobFactory.java, + * Copyright 2002-2014 the original author or authors., + * <p>Compatible with Quartz 2.1.4 and higher, as of Spring 4.1., +	public Job newJob(TriggerFiredBundle bundle, Scheduler scheduler) throws SchedulerException {, +		return bundle.getJobDetail().getJobClass().newInstance();, +++ /dev/null, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/CronTriggerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., +import java.text.ParseException;, +import org.quartz.impl.triggers.CronTriggerImpl;, +	public void afterPropertiesSet() throws ParseException {, +			this.jobDataMap.put("jobDetail", this.jobDetail);, +++ /dev/null, +++ b/build.gradle, +		optional("org.quartz-scheduler:quartz:2.1.7"), +++ b/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>Note: As of Spring 4.1, Spring's EhCache support requires EhCache 2.5 or higher.]