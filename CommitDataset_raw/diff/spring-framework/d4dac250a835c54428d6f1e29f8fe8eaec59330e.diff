[+++ b/spring-web/src/main/java/org/springframework/web/filter/AbstractRequestLoggingFilter.java, + * Copyright 2002-2015 the original author or authors., +		boolean shouldLog = shouldLog(requestToUse);, +		if (shouldLog && isFirstRequest) {, +			if (shouldLog && !isAsyncStarted(requestToUse)) {, +, +	/**, +	 * Determine whether to call the {@link #beforeRequest}/{@link #afterRequest}, +	 * methods for the current request, i.e. whether logging is currently active, +	 * (and the log message is worth building)., +	 * <p>The default implementation always returns {@code true}. Subclasses may, +	 * override this with a log level check., +	 * @param request current HTTP request, +	 * @return {@code true} if the before/after method should get called;, +	 * {@code false} otherwise, +	 * @since 4.1.5, +	 */, +	protected boolean shouldLog(HttpServletRequest request) {, +		return true;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/filter/AbstractRequestLoggingFilter.java, + * Copyright 2002-2015 the original author or authors., +		boolean shouldLog = shouldLog(requestToUse);, +		if (shouldLog && isFirstRequest) {, +			if (shouldLog && !isAsyncStarted(requestToUse)) {, +, +	/**, +	 * Determine whether to call the {@link #beforeRequest}/{@link #afterRequest}, +	 * methods for the current request, i.e. whether logging is currently active, +	 * (and the log message is worth building)., +	 * <p>The default implementation always returns {@code true}. Subclasses may, +	 * override this with a log level check., +	 * @param request current HTTP request, +	 * @return {@code true} if the before/after method should get called;, +	 * {@code false} otherwise, +	 * @since 4.1.5, +	 */, +	protected boolean shouldLog(HttpServletRequest request) {, +		return true;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/filter/CommonsRequestLoggingFilter.java, + * Copyright 2002-2015 the original author or authors., + * @author Juergen Hoeller, +	@Override, +	protected boolean shouldLog(HttpServletRequest request) {, +		return logger.isDebugEnabled();, +	}, +]