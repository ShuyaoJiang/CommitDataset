[+++ b/spring-web/src/main/java/org/springframework/http/client/BufferingClientHttpRequestFactory.java, + * Copyright 2002-2015 the original author or authors., + * Wrapper for a {@link ClientHttpRequestFactory} that buffers, + * all outgoing and incoming streams in memory., + * <p>Using this wrapper allows for multiple reads of the, + * @linkplain ClientHttpResponse#getBody() response body}., +	/**, +	 * Create a buffering wrapper for the given {@link ClientHttpRequestFactory}., +	 * @param requestFactory the target request factory to wrap, +	 */, +, +, +	 * Indicates whether the request/response exchange for the given URI and method, +	 * should be buffered in memory., +	 * <p>The default implementation returns {@code true} for all URIs and methods., +	 * Subclasses can override this method to change this behavior., +, +++ b/spring-web/src/main/java/org/springframework/http/client/BufferingClientHttpRequestFactory.java, + * Copyright 2002-2015 the original author or authors., + * Wrapper for a {@link ClientHttpRequestFactory} that buffers, + * all outgoing and incoming streams in memory., + * <p>Using this wrapper allows for multiple reads of the, + * @linkplain ClientHttpResponse#getBody() response body}., +	/**, +	 * Create a buffering wrapper for the given {@link ClientHttpRequestFactory}., +	 * @param requestFactory the target request factory to wrap, +	 */, +, +, +	 * Indicates whether the request/response exchange for the given URI and method, +	 * should be buffered in memory., +	 * <p>The default implementation returns {@code true} for all URIs and methods., +	 * Subclasses can override this method to change this behavior., +, +++ b/spring-web/src/main/java/org/springframework/http/client/BufferingClientHttpRequestWrapper.java, + * Copyright 2002-2015 the original author or authors., +++ b/spring-web/src/main/java/org/springframework/http/client/BufferingClientHttpRequestFactory.java, + * Copyright 2002-2015 the original author or authors., + * Wrapper for a {@link ClientHttpRequestFactory} that buffers, + * all outgoing and incoming streams in memory., + * <p>Using this wrapper allows for multiple reads of the, + * @linkplain ClientHttpResponse#getBody() response body}., +	/**, +	 * Create a buffering wrapper for the given {@link ClientHttpRequestFactory}., +	 * @param requestFactory the target request factory to wrap, +	 */, +, +, +	 * Indicates whether the request/response exchange for the given URI and method, +	 * should be buffered in memory., +	 * <p>The default implementation returns {@code true} for all URIs and methods., +	 * Subclasses can override this method to change this behavior., +, +++ b/spring-web/src/main/java/org/springframework/http/client/BufferingClientHttpRequestWrapper.java, + * Copyright 2002-2015 the original author or authors., +++ b/spring-web/src/main/java/org/springframework/http/client/BufferingClientHttpResponseWrapper.java, + * Copyright 2002-2015 the original author or authors., + * Simple implementation of {@link ClientHttpResponse} that reads the response's body, + * into memory, thus allowing for multiple invocations of {@link #getBody()}., +++ b/spring-web/src/main/java/org/springframework/http/client/BufferingClientHttpRequestFactory.java, + * Copyright 2002-2015 the original author or authors., + * Wrapper for a {@link ClientHttpRequestFactory} that buffers, + * all outgoing and incoming streams in memory., + * <p>Using this wrapper allows for multiple reads of the, + * @linkplain ClientHttpResponse#getBody() response body}., +	/**, +	 * Create a buffering wrapper for the given {@link ClientHttpRequestFactory}., +	 * @param requestFactory the target request factory to wrap, +	 */, +, +, +	 * Indicates whether the request/response exchange for the given URI and method, +	 * should be buffered in memory., +	 * <p>The default implementation returns {@code true} for all URIs and methods., +	 * Subclasses can override this method to change this behavior., +, +++ b/spring-web/src/main/java/org/springframework/http/client/BufferingClientHttpRequestWrapper.java, + * Copyright 2002-2015 the original author or authors., +++ b/spring-web/src/main/java/org/springframework/http/client/BufferingClientHttpResponseWrapper.java, + * Copyright 2002-2015 the original author or authors., + * Simple implementation of {@link ClientHttpResponse} that reads the response's body, + * into memory, thus allowing for multiple invocations of {@link #getBody()}., +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * <p>Handler methods which are annotated with this annotation are allowed to, + * have very flexible signatures. They may have parameters of the following, + * <p><strong>Note:</strong> Java 8's {@code java.util.Optional} is supported, + * <li>A {@link org.springframework.ui.Model Model} object, with the view name implicitly, + * determined through a {@link org.springframework.web.servlet.RequestToViewNameTranslator}, +++ b/spring-web/src/main/java/org/springframework/http/client/BufferingClientHttpRequestFactory.java, + * Copyright 2002-2015 the original author or authors., + * Wrapper for a {@link ClientHttpRequestFactory} that buffers, + * all outgoing and incoming streams in memory., + * <p>Using this wrapper allows for multiple reads of the, + * @linkplain ClientHttpResponse#getBody() response body}., +	/**, +	 * Create a buffering wrapper for the given {@link ClientHttpRequestFactory}., +	 * @param requestFactory the target request factory to wrap, +	 */, +, +]