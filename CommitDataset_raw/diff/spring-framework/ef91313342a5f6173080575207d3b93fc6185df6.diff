[+++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/StringTrimmerEditor.java, + * Copyright 2002-2019 the original author or authors., +			if (this.emptyAsNull && value.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/StringTrimmerEditor.java, + * Copyright 2002-2019 the original author or authors., +			if (this.emptyAsNull && value.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jndi/JndiTemplateEditor.java, + * Copyright 2002-2019 the original author or authors., +		if (text.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/StringTrimmerEditor.java, + * Copyright 2002-2019 the original author or authors., +			if (this.emptyAsNull && value.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jndi/JndiTemplateEditor.java, + * Copyright 2002-2019 the original author or authors., +		if (text.isEmpty()) {, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.java, + * Copyright 2002-2019 the original author or authors., +			if (jndiName == null && unitNameForLookup.isEmpty() && this.persistenceUnits.size() == 1) {, +			if (jndiName == null && unitNameForLookup.isEmpty() && contexts.size() == 1) {, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/StringTrimmerEditor.java, + * Copyright 2002-2019 the original author or authors., +			if (this.emptyAsNull && value.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jndi/JndiTemplateEditor.java, + * Copyright 2002-2019 the original author or authors., +		if (text.isEmpty()) {, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.java, + * Copyright 2002-2019 the original author or authors., +			if (jndiName == null && unitNameForLookup.isEmpty() && this.persistenceUnits.size() == 1) {, +			if (jndiName == null && unitNameForLookup.isEmpty() && contexts.size() == 1) {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/MockMvcWebConnection.java, + * Copyright 2002-2019 the original author or authors., +		if (contextPath == null || contextPath.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/StringTrimmerEditor.java, + * Copyright 2002-2019 the original author or authors., +			if (this.emptyAsNull && value.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jndi/JndiTemplateEditor.java, + * Copyright 2002-2019 the original author or authors., +		if (text.isEmpty()) {, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.java, + * Copyright 2002-2019 the original author or authors., +			if (jndiName == null && unitNameForLookup.isEmpty() && this.persistenceUnits.size() == 1) {, +			if (jndiName == null && unitNameForLookup.isEmpty() && contexts.size() == 1) {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/MockMvcWebConnection.java, + * Copyright 2002-2019 the original author or authors., +		if (contextPath == null || contextPath.isEmpty()) {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/PatternMappingFilterProxy.java, + * Copyright 2002-2019 the original author or authors., +			if (urlPattern.isEmpty()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/StringTrimmerEditor.java, + * Copyright 2002-2019 the original author or authors., +			if (this.emptyAsNull && value.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jndi/JndiTemplateEditor.java, + * Copyright 2002-2019 the original author or authors., +		if (text.isEmpty()) {, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.java, + * Copyright 2002-2019 the original author or authors., +			if (jndiName == null && unitNameForLookup.isEmpty() && this.persistenceUnits.size() == 1) {, +			if (jndiName == null && unitNameForLookup.isEmpty() && contexts.size() == 1) {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/MockMvcWebConnection.java, + * Copyright 2002-2019 the original author or authors., +		if (contextPath == null || contextPath.isEmpty()) {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/PatternMappingFilterProxy.java, + * Copyright 2002-2019 the original author or authors., +			if (urlPattern.isEmpty()) {, +++ b/spring-web/src/main/java/org/springframework/web/util/WebUtils.java, + * Copyright 2002-2019 the original author or authors., +			if (prefix.isEmpty() || paramName.startsWith(prefix)) {]