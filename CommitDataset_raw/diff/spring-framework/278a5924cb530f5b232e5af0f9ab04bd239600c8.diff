[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/BinaryMessage.java, +	 * @param isLast if the message is the last of a series of partial messages, +	 * @param isLast if the message is the last of a series of partial messages, +		this(payload, 0, (payload == null ? 0 : payload.length));, +	public BinaryMessage(byte[] payload, int offset, int len) {, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/BinaryMessage.java, +	 * @param isLast if the message is the last of a series of partial messages, +	 * @param isLast if the message is the last of a series of partial messages, +		this(payload, 0, (payload == null ? 0 : payload.length));, +	public BinaryMessage(byte[] payload, int offset, int len) {, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketHandler.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/BinaryMessage.java, +	 * @param isLast if the message is the last of a series of partial messages, +	 * @param isLast if the message is the last of a series of partial messages, +		this(payload, 0, (payload == null ? 0 : payload.length));, +	public BinaryMessage(byte[] payload, int offset, int len) {, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketHandler.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/StandardEndpointAdapter.java, +				handleBinaryMessage(session, message);, +	private void handleBinaryMessage(javax.websocket.Session session, ByteBuffer payload) {, +		BinaryMessage binaryMessage = new BinaryMessage(payload);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/BinaryMessage.java, +	 * @param isLast if the message is the last of a series of partial messages, +	 * @param isLast if the message is the last of a series of partial messages, +		this(payload, 0, (payload == null ? 0 : payload.length));, +	public BinaryMessage(byte[] payload, int offset, int len) {, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketHandler.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/StandardEndpointAdapter.java, +				handleBinaryMessage(session, message);, +	private void handleBinaryMessage(javax.websocket.Session session, ByteBuffer payload) {, +		BinaryMessage binaryMessage = new BinaryMessage(payload);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/WebSocketHandlerAdapter.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/BinaryMessage.java, +	 * @param isLast if the message is the last of a series of partial messages, +	 * @param isLast if the message is the last of a series of partial messages, +		this(payload, 0, (payload == null ? 0 : payload.length));, +	public BinaryMessage(byte[] payload, int offset, int len) {, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketHandler.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/StandardEndpointAdapter.java, +				handleBinaryMessage(session, message);, +	private void handleBinaryMessage(javax.websocket.Session session, ByteBuffer payload) {, +		BinaryMessage binaryMessage = new BinaryMessage(payload);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/WebSocketHandlerAdapter.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/support/PerConnectionWebSocketHandler.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/BinaryMessage.java, +	 * @param isLast if the message is the last of a series of partial messages, +	 * @param isLast if the message is the last of a series of partial messages, +		this(payload, 0, (payload == null ? 0 : payload.length));, +	public BinaryMessage(byte[] payload, int offset, int len) {, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketHandler.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/StandardEndpointAdapter.java, +				handleBinaryMessage(session, message);, +	private void handleBinaryMessage(javax.websocket.Session session, ByteBuffer payload) {, +		BinaryMessage binaryMessage = new BinaryMessage(payload);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/WebSocketHandlerAdapter.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/support/PerConnectionWebSocketHandler.java, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/support/WebSocketHandlerDecorator.java]