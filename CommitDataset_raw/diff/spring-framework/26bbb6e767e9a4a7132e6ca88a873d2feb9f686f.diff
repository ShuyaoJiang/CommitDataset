[+++ b/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java, +import org.springframework.core.annotation.AnnotationUtils;, +		if (AnnotationUtils.findAnnotation(testClass, ContextHierarchy.class) != null) {, +++ b/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java, +import org.springframework.core.annotation.AnnotationUtils;, +		if (AnnotationUtils.findAnnotation(testClass, ContextHierarchy.class) != null) {, +++ b/spring-test/src/main/java/org/springframework/test/context/support/ContextLoaderUtils.java, +	 * @throws IllegalArgumentException if the supplied class is {@code null}; or if, +	 * <em>present</em> on the supplied class, +	 * @throws IllegalStateException if a test class or composed annotation, +++ b/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java, +import org.springframework.core.annotation.AnnotationUtils;, +		if (AnnotationUtils.findAnnotation(testClass, ContextHierarchy.class) != null) {, +++ b/spring-test/src/main/java/org/springframework/test/context/support/ContextLoaderUtils.java, +	 * @throws IllegalArgumentException if the supplied class is {@code null}; or if, +	 * <em>present</em> on the supplied class, +	 * @throws IllegalStateException if a test class or composed annotation, +++ b/spring-test/src/test/java/org/springframework/test/context/support/ContextLoaderUtilsContextHierarchyTests.java, + * Copyright 2002-2016 the original author or authors., +	@Test, +		List<List<ContextConfigurationAttributes>> hierarchyAttributes = resolveContextHierarchyAttributes(BareAnnotations.class);, +		assertEquals(1, hierarchyAttributes.size());, +		List<ContextConfigurationAttributes> configAttributesList = hierarchyAttributes.get(0);, +		assertEquals(1, configAttributesList.size());, +		debugConfigAttributes(configAttributesList);]