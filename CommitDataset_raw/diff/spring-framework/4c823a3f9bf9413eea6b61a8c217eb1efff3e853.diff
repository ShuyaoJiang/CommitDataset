[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DisposableBeanAdapter.java, + * Copyright 2002-2013 the original author or authors., +	private static final String SHUTDOWN_METHOD_NAME = "shutdown";, +, +					try {, +						return bean.getClass().getMethod(SHUTDOWN_METHOD_NAME).getName();, +					}, +					catch (NoSuchMethodException ex2) {, +			}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DisposableBeanAdapter.java, + * Copyright 2002-2013 the original author or authors., +	private static final String SHUTDOWN_METHOD_NAME = "shutdown";, +, +					try {, +						return bean.getClass().getMethod(SHUTDOWN_METHOD_NAME).getName();, +					}, +					catch (NoSuchMethodException ex2) {, +			}, +++ b/spring-context/src/test/java/org/springframework/context/annotation/DestroyMethodInferenceTests.java, + * Copyright 2002-2013 the original author or authors., +, +import static org.hamcrest.CoreMatchers.*;, +import static org.junit.Assert.*;, +, +/**, + * @author Chris Beams, + * @author Juergen Hoeller, + */, +		WithLocalShutdownMethod c7 = ctx.getBean("c7", WithLocalShutdownMethod.class);, +		assertThat(c7.closed, is(false));, +		assertThat("c7", c7.closed, is(true));, +, +		@Bean, +		public WithLocalShutdownMethod c7() {, +			return new WithLocalShutdownMethod();, +		}, +, +	static class WithLocalShutdownMethod {, +		boolean closed = false;, +		public void shutdown() {, +			closed = true;, +		}, +	}, +]