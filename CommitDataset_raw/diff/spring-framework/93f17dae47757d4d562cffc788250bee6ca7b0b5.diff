[+++ b/spring-jcl/src/main/java/org/apache/commons/logging/LogFactory.java, +			return this.logger.isEnabled(Level.FATAL);, +			return this.logger.isEnabled(Level.ERROR);, +			return this.logger.isEnabled(Level.WARN);, +			return this.logger.isEnabled(Level.INFO);, +			return this.logger.isEnabled(Level.DEBUG);, +			return this.logger.isEnabled(Level.TRACE);, +			log(Level.FATAL, message, null);, +			log(Level.FATAL, message, exception);, +			log(Level.ERROR, message, null);, +			log(Level.ERROR, message, exception);, +			log(Level.WARN, message, null);, +			log(Level.WARN, message, exception);, +			log(Level.INFO, message, null);, +			log(Level.INFO, message, exception);, +			log(Level.DEBUG, message, null);, +			log(Level.DEBUG, message, exception);, +			log(Level.TRACE, message, null);, +			log(Level.TRACE, message, exception);, +		}, +, +		private void log(Level level, Object message, Throwable exception) {, +			if (message instanceof String) {, +				// Explicitly pass a String argument, avoiding Log4j's argument expansion, +				// for message objects in case of "{}" sequences (SPR-16226), +				if (exception != null) {, +					this.logger.logIfEnabled(FQCN, level, null, (String) message, exception);, +				}, +				else {, +					this.logger.logIfEnabled(FQCN, level, null, (String) message);, +				}, +			}, +			else {, +				this.logger.logIfEnabled(FQCN, level, null, message, exception);, +			}]