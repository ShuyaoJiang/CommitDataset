[+++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, + * Copyright 2002-2013 the original author or authors., +, +, +, +, +, +			Assert.isInstanceOf(String.class, key,, +					"Parameter map key must be of type [" + String.class.getName() + "]");, +				throw new IllegalArgumentException(, +						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]");, +			Assert.isInstanceOf(String.class, key,, +					"Parameter map key must be of type [" + String.class.getName() + "]");, +				throw new IllegalArgumentException("Parameter map value must be single value " +, +						" or array of type [" + String.class.getName() + "]");, +		String[] arr = (name != null ? this.parameters.get(name) : null);, +		return (name != null ? this.parameters.get(name) : null);, +			Reader sourceReader = (this.characterEncoding != null) ?, +					new InputStreamReader(sourceStream, this.characterEncoding) : new InputStreamReader(sourceStream);, +		Assert.notEmpty(locales, "Locale list must not be empty");, +, +		return (this.userRoles.contains(role) || (this.servletContext instanceof MockServletContext &&, +				((MockServletContext) this.servletContext).getDeclaredRoles().contains(role)));, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, + * Copyright 2002-2013 the original author or authors., +, +, +, +, +, +			Assert.isInstanceOf(String.class, key,, +					"Parameter map key must be of type [" + String.class.getName() + "]");, +				throw new IllegalArgumentException(, +						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]");, +			Assert.isInstanceOf(String.class, key,, +					"Parameter map key must be of type [" + String.class.getName() + "]");, +				throw new IllegalArgumentException("Parameter map value must be single value " +, +						" or array of type [" + String.class.getName() + "]");, +		String[] arr = (name != null ? this.parameters.get(name) : null);, +		return (name != null ? this.parameters.get(name) : null);, +			Reader sourceReader = (this.characterEncoding != null) ?, +					new InputStreamReader(sourceStream, this.characterEncoding) : new InputStreamReader(sourceStream);, +		Assert.notEmpty(locales, "Locale list must not be empty");, +, +		return (this.userRoles.contains(role) || (this.servletContext instanceof MockServletContext &&, +				((MockServletContext) this.servletContext).getDeclaredRoles().contains(role)));, +++ b/spring-test/src/test/java/org/springframework/mock/web/MockHttpServletRequestTests.java, + * Copyright 2002-2013 the original author or authors., +import static org.junit.Assert.*;, +, +	public void nullParameterName() {, +		assertNull(request.getParameter(null));, +		assertNull(request.getParameterValues(null));, +	}, +, +	@Test, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, + * Copyright 2002-2013 the original author or authors., +, +, +, +, +, +			Assert.isInstanceOf(String.class, key,, +					"Parameter map key must be of type [" + String.class.getName() + "]");, +				throw new IllegalArgumentException(, +						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]");, +			Assert.isInstanceOf(String.class, key,, +					"Parameter map key must be of type [" + String.class.getName() + "]");, +				throw new IllegalArgumentException("Parameter map value must be single value " +, +						" or array of type [" + String.class.getName() + "]");, +		String[] arr = (name != null ? this.parameters.get(name) : null);, +		return (name != null ? this.parameters.get(name) : null);, +			Reader sourceReader = (this.characterEncoding != null) ?, +					new InputStreamReader(sourceStream, this.characterEncoding) : new InputStreamReader(sourceStream);, +		Assert.notEmpty(locales, "Locale list must not be empty");, +, +		return (this.userRoles.contains(role) || (this.servletContext instanceof MockServletContext &&, +				((MockServletContext) this.servletContext).getDeclaredRoles().contains(role)));, +++ b/spring-test/src/test/java/org/springframework/mock/web/MockHttpServletRequestTests.java, + * Copyright 2002-2013 the original author or authors., +import static org.junit.Assert.*;, +, +	public void nullParameterName() {, +		assertNull(request.getParameter(null));, +		assertNull(request.getParameterValues(null));, +	}, +, +	@Test, +++ b/spring-web/src/test/java/org/springframework/mock/web/test/MockHttpServletRequest.java, + * Copyright 2002-2013 the original author or authors., +	private final Map<String, Part> parts = new HashMap<String, Part>();, +, +, +						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]");, +		String[] arr = (name != null ? this.parameters.get(name) : null);, +		return (name != null ? this.parameters.get(name) : null);, +		Assert.notEmpty(locales, "Locale list must not be empty");, +		return (header != null ? header.getStringValue() : null);, +		return (this.userRoles.contains(role) || (this.servletContext instanceof MockServletContext &&]