[+++ b/spring-context/src/test/java/org/springframework/jmx/AbstractMBeanServerTests.java, + * run only if {@link TestGroup#JMXMP} is enabled., + *, + * <p>If you wish to run these tests, follow the instructions in the TestGroup class to, + * enable JMXMP tests (i.e., set the following Java system property:, + * {@code -DtestGroups=jmxmp})., + *, + * <p>If you run into the <em>"Unsupported protocol: jmxmp"</em> error, you will need to, + * download the <a href="http://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html">JMX, + * Remote API 1.0.1_04 Reference Implementation</a> from Oracle and extract, + *, + * <p>See also:, + * <ul>, + * <li>, + * <li><a href="https://jira.spring.io/browse/SPR-8093">SPR-8093</a></li>, + * <li><a href="https://issuetracker.springsource.com/browse/EBR-349">EBR-349</a></li>, + * </ul>, +++ b/spring-context/src/test/java/org/springframework/jmx/AbstractMBeanServerTests.java, + * run only if {@link TestGroup#JMXMP} is enabled., + *, + * <p>If you wish to run these tests, follow the instructions in the TestGroup class to, + * enable JMXMP tests (i.e., set the following Java system property:, + * {@code -DtestGroups=jmxmp})., + *, + * <p>If you run into the <em>"Unsupported protocol: jmxmp"</em> error, you will need to, + * download the <a href="http://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html">JMX, + * Remote API 1.0.1_04 Reference Implementation</a> from Oracle and extract, + *, + * <p>See also:, + * <ul>, + * <li>, + * <li><a href="https://jira.spring.io/browse/SPR-8093">SPR-8093</a></li>, + * <li><a href="https://issuetracker.springsource.com/browse/EBR-349">EBR-349</a></li>, + * </ul>, +++ b/spring-context/src/test/java/org/springframework/jmx/access/MBeanClientInterceptorTests.java, + * Copyright 2002-2015 the original author or authors., +, +import org.springframework.util.SocketUtils;, +import static org.junit.Assume.*;, + * To run the tests in the class, set the following Java system property:, + * {@code -DtestGroups=jmxmp}., + *, +		assumeTrue(runTests);, +		assumeTrue(runTests);, +		assumeTrue(runTests);, +		assumeTrue(runTests);, +	@Test(expected = IllegalArgumentException.class), +		assumeTrue(runTests);, +	@Test(expected = ClassNotFoundException.class), +		assumeTrue(runTests);, +	@Test(expected = IOException.class), +		assumeTrue(runTests);, +	@Test(expected = InvalidInvocationException.class), +		assumeTrue(runTests);, +		assumeTrue(runTests);, +		assumeTrue(runTests);, +	@Test(expected = InvalidInvocationException.class), +		assumeTrue(runTests);, +		assumeTrue(runTests);, +		final int port = SocketUtils.findAvailableTcpPort();, +, +		JMXServiceURL url = new JMXServiceURL("service:jmx:jmxmp://localhost:" + port);, +			System.out.println("Skipping remainder of JMX LazyConnectionToRemote test because binding to local port [", +					+ port + "] failed: " + ex.getMessage());, +++ b/spring-context/src/test/java/org/springframework/jmx/AbstractMBeanServerTests.java, + * run only if {@link TestGroup#JMXMP} is enabled., + *, + * <p>If you wish to run these tests, follow the instructions in the TestGroup class to, + * enable JMXMP tests (i.e., set the following Java system property:, + * {@code -DtestGroups=jmxmp})., + *, + * <p>If you run into the <em>"Unsupported protocol: jmxmp"</em> error, you will need to, + * download the <a href="http://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html">JMX, + * Remote API 1.0.1_04 Reference Implementation</a> from Oracle and extract, + *, + * <p>See also:, + * <ul>, + * <li>, + * <li><a href="https://jira.spring.io/browse/SPR-8093">SPR-8093</a></li>, + * <li><a href="https://issuetracker.springsource.com/browse/EBR-349">EBR-349</a></li>, + * </ul>, +++ b/spring-context/src/test/java/org/springframework/jmx/access/MBeanClientInterceptorTests.java, + * Copyright 2002-2015 the original author or authors., +, +import org.springframework.util.SocketUtils;, +import static org.junit.Assume.*;, + * To run the tests in the class, set the following Java system property:, + * {@code -DtestGroups=jmxmp}., + *, +		assumeTrue(runTests);, +		assumeTrue(runTests);, +		assumeTrue(runTests);, +		assumeTrue(runTests);, +	@Test(expected = IllegalArgumentException.class), +		assumeTrue(runTests);, +	@Test(expected = ClassNotFoundException.class), +		assumeTrue(runTests);, +	@Test(expected = IOException.class), +		assumeTrue(runTests);, +	@Test(expected = InvalidInvocationException.class)]