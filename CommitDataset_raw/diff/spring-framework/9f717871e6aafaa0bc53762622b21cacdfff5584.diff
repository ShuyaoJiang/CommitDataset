[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java, +	 * the annotation hierarchy <em>above</em> the supplied {@code element},, +	 * merge that annotation's attributes with <em>matching</em> attributes from, +	 * annotations in lower levels of the annotation hierarchy, and synthesize, +	 * the result back into an annotation of the specified {@code annotationType}., +	 *, +	 * <p>{@link AliasFor @AliasFor} semantics are fully supported, both, +	 * within a single annotation and within the annotation hierarchy., +	 *, +	 * <p>This method delegates to {@link #getAnnotationAttributes(AnnotatedElement, Class)}, +	 * and {@link AnnotationUtils#synthesizeAnnotation(Map, Class, AnnotatedElement)}., +	 *, +	 * @param element the annotated element; never {@code null}, +	 * @param annotationType the annotation type to find; never {@code null}, +	 * @return the merged {@code AnnotationAttributes}, or {@code null} if not found, +	 * @since 4.2, +	 * @see #getAnnotationAttributes(AnnotatedElement, Class), +	 * @see #findAnnotation(AnnotatedElement, Class), +	 * @see AnnotationUtils#synthesizeAnnotation(Map, Class, AnnotatedElement), +	 */, +	public static <A extends Annotation> A getAnnotation(AnnotatedElement element, Class<A> annotationType) {, +		AnnotationAttributes attributes = getAnnotationAttributes(element, annotationType);, +		return ((attributes != null) ? AnnotationUtils.synthesizeAnnotation(attributes, annotationType, element) : null);, +	}, +, +	/**, +	 * Get the first annotation of the specified {@code annotationType} within, +	 * @since 4.2, +	 * @see #getAnnotation(AnnotatedElement, Class), +	 * @see AnnotationUtils#getAnnotationAttributes(AnnotatedElement, Annotation, boolean, boolean, boolean), +	 * @see AnnotationUtils#postProcessAnnotationAttributes, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java, +	 * the annotation hierarchy <em>above</em> the supplied {@code element},, +	 * merge that annotation's attributes with <em>matching</em> attributes from, +	 * annotations in lower levels of the annotation hierarchy, and synthesize, +	 * the result back into an annotation of the specified {@code annotationType}., +	 *, +	 * <p>{@link AliasFor @AliasFor} semantics are fully supported, both, +	 * within a single annotation and within the annotation hierarchy., +	 *, +	 * <p>This method delegates to {@link #getAnnotationAttributes(AnnotatedElement, Class)}, +	 * and {@link AnnotationUtils#synthesizeAnnotation(Map, Class, AnnotatedElement)}., +	 *, +	 * @param element the annotated element; never {@code null}, +	 * @param annotationType the annotation type to find; never {@code null}, +	 * @return the merged {@code AnnotationAttributes}, or {@code null} if not found, +	 * @since 4.2, +	 * @see #getAnnotationAttributes(AnnotatedElement, Class), +	 * @see #findAnnotation(AnnotatedElement, Class), +	 * @see AnnotationUtils#synthesizeAnnotation(Map, Class, AnnotatedElement), +	 */, +	public static <A extends Annotation> A getAnnotation(AnnotatedElement element, Class<A> annotationType) {, +		AnnotationAttributes attributes = getAnnotationAttributes(element, annotationType);, +		return ((attributes != null) ? AnnotationUtils.synthesizeAnnotation(attributes, annotationType, element) : null);, +	}, +, +	/**, +	 * Get the first annotation of the specified {@code annotationType} within, +	 * @since 4.2, +	 * @see #getAnnotation(AnnotatedElement, Class), +	 * @see AnnotationUtils#getAnnotationAttributes(AnnotatedElement, Annotation, boolean, boolean, boolean), +	 * @see AnnotationUtils#postProcessAnnotationAttributes, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * @see #getAnnotationAttributes(AnnotatedElement, Annotation, boolean, boolean), +	 * @see #getAliasedAttributeName(Method, Class), +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java, +	 * the annotation hierarchy <em>above</em> the supplied {@code element},, +	 * merge that annotation's attributes with <em>matching</em> attributes from, +	 * annotations in lower levels of the annotation hierarchy, and synthesize, +	 * the result back into an annotation of the specified {@code annotationType}., +	 *, +	 * <p>{@link AliasFor @AliasFor} semantics are fully supported, both, +	 * within a single annotation and within the annotation hierarchy., +	 *, +	 * <p>This method delegates to {@link #getAnnotationAttributes(AnnotatedElement, Class)}, +	 * and {@link AnnotationUtils#synthesizeAnnotation(Map, Class, AnnotatedElement)}., +	 *, +	 * @param element the annotated element; never {@code null}, +	 * @param annotationType the annotation type to find; never {@code null}, +	 * @return the merged {@code AnnotationAttributes}, or {@code null} if not found, +	 * @since 4.2, +	 * @see #getAnnotationAttributes(AnnotatedElement, Class), +	 * @see #findAnnotation(AnnotatedElement, Class), +	 * @see AnnotationUtils#synthesizeAnnotation(Map, Class, AnnotatedElement), +	 */, +	public static <A extends Annotation> A getAnnotation(AnnotatedElement element, Class<A> annotationType) {, +		AnnotationAttributes attributes = getAnnotationAttributes(element, annotationType);, +		return ((attributes != null) ? AnnotationUtils.synthesizeAnnotation(attributes, annotationType, element) : null);, +	}, +, +	/**, +	 * Get the first annotation of the specified {@code annotationType} within, +	 * @since 4.2, +	 * @see #getAnnotation(AnnotatedElement, Class), +	 * @see AnnotationUtils#getAnnotationAttributes(AnnotatedElement, Annotation, boolean, boolean, boolean), +	 * @see AnnotationUtils#postProcessAnnotationAttributes, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * @see #getAnnotationAttributes(AnnotatedElement, Annotation, boolean, boolean), +	 * @see #getAliasedAttributeName(Method, Class), +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotatedElementUtilsTests.java]