[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java, +, +		setDispatchOptionsRequest(true);, +		setDispatchOptionsRequest(true);, +, +, +				logger.debug("Unable to locate ThemeResolver with name '" + THEME_RESOLVER_BEAN_NAME +, +						"': using default [" + this.themeResolver + "]");, +			this.flashMapManager = context.getBean(FLASH_MAP_MANAGER_BEAN_NAME, FlashMapManager.class);, +	 * <p>The default implementation uses, +	 * {@link org.springframework.beans.factory.config.AutowireCapableBeanFactory#createBean}., +		MultipartHttpServletRequest multipartRequest =, +				WebUtils.getNativeRequest(request, MultipartHttpServletRequest.class);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java, +, +		setDispatchOptionsRequest(true);, +		setDispatchOptionsRequest(true);, +, +, +				logger.debug("Unable to locate ThemeResolver with name '" + THEME_RESOLVER_BEAN_NAME +, +						"': using default [" + this.themeResolver + "]");, +			this.flashMapManager = context.getBean(FLASH_MAP_MANAGER_BEAN_NAME, FlashMapManager.class);, +	 * <p>The default implementation uses, +	 * {@link org.springframework.beans.factory.config.AutowireCapableBeanFactory#createBean}., +		MultipartHttpServletRequest multipartRequest =, +				WebUtils.getNativeRequest(request, MultipartHttpServletRequest.class);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java, +					value = (StringUtils.hasLength(value) ? value + ", " : "") + HttpMethod.PATCH.name();]