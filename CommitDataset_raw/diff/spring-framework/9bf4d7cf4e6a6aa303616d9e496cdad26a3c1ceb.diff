[+++ b/spring-context/src/test/java/org/springframework/cache/config/ExpressionCachingIntegrationTests.java, +	@SuppressWarnings("unchecked"), +, +, +, +, +, +, +, +, +		public User(String id) {, +, +, +		public Order(String id) {, +, +, +++ b/spring-context/src/test/java/org/springframework/cache/config/ExpressionCachingIntegrationTests.java, +	@SuppressWarnings("unchecked"), +, +, +, +, +, +, +, +, +		public User(String id) {, +, +, +		public Order(String id) {, +, +, +++ b/spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java, +		if (!ObjectUtils.nullSafeEquals(getType(), other.getType())) {, +++ b/spring-context/src/test/java/org/springframework/cache/config/ExpressionCachingIntegrationTests.java, +	@SuppressWarnings("unchecked"), +, +, +, +, +, +, +, +, +		public User(String id) {, +, +, +		public Order(String id) {, +, +, +++ b/spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java, +		if (!ObjectUtils.nullSafeEquals(getType(), other.getType())) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, +	 * Used as a cache entry when no converter is available., +	 * This converter is never returned., +	private final Map<ConverterCacheKey, GenericConverter> converterCache = new ConcurrentReferenceHashMap<>(64);, +		private final Map<ConvertiblePair, ConvertersForPair> converters = new LinkedHashMap<>(36);, +++ b/spring-context/src/test/java/org/springframework/cache/config/ExpressionCachingIntegrationTests.java, +	@SuppressWarnings("unchecked"), +, +, +, +, +, +, +, +, +		public User(String id) {, +, +, +		public Order(String id) {, +, +, +++ b/spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java, +		if (!ObjectUtils.nullSafeEquals(getType(), other.getType())) {, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, +	 * Used as a cache entry when no converter is available., +	 * This converter is never returned., +	private final Map<ConverterCacheKey, GenericConverter> converterCache = new ConcurrentReferenceHashMap<>(64);, +		private final Map<ConvertiblePair, ConvertersForPair> converters = new LinkedHashMap<>(36);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/SimpUserRegistry.java, + * Copyright 2002-2016 the original author or authors., +	 * @return the user, or {@code null} if not connected, +	 * Return a snapshot of all connected users., +	 * <p>The returned set is a copy and will not reflect further changes., +	 * @return the connected users, or an empty set if none, +	 * @return the number of connected users, +	 * @return a set of matching subscriptions, or an empty set if none, +++ b/spring-context/src/test/java/org/springframework/cache/config/ExpressionCachingIntegrationTests.java, +	@SuppressWarnings("unchecked"), +, +, +, +, +, +, +, +, +		public User(String id) {, +]