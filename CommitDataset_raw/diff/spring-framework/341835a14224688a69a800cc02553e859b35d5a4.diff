[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +			throw new NullValueInNestedPathException(getRootClass(), this.nestedPath + name, "Could not instantiate propertyType [" + type.getName() + "] to auto-grow nested property path");, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +			throw new NullValueInNestedPathException(getRootClass(), this.nestedPath + name, "Could not instantiate propertyType [" + type.getName() + "] to auto-grow nested property path");, +++ b/org.springframework.context/src/main/java/org/springframework/mapping/Mapper.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.mapping;, +, +/**, + * Maps between a source and target., + * @author Keith Donald, + * @param <S> the source type mapped from, + * @param <T> the target type mapped to, + */, +public interface Mapper<S, T> {, +	, +	/**, +	 * Map the source to the target., +	 * @param source the source to map from, +	 * @param target the target to map to, +	 * @throws MappingException if the mapping process failed, +	 */, +	void map(S source, T target);, +	, +}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +			throw new NullValueInNestedPathException(getRootClass(), this.nestedPath + name, "Could not instantiate propertyType [" + type.getName() + "] to auto-grow nested property path");, +++ b/org.springframework.context/src/main/java/org/springframework/mapping/Mapper.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.mapping;, +, +/**, + * Maps between a source and target., + * @author Keith Donald, + * @param <S> the source type mapped from, + * @param <T> the target type mapped to, + */, +public interface Mapper<S, T> {, +	, +	/**, +	 * Map the source to the target., +	 * @param source the source to map from, +	 * @param target the target to map to, +	 * @throws MappingException if the mapping process failed, +	 */, +	void map(S source, T target);, +	, +}, +++ b/org.springframework.context/src/main/java/org/springframework/mapping/MappingException.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.mapping;, +, +import java.io.PrintStream;, +import java.io.PrintWriter;, +import java.util.Iterator;, +import java.util.List;, +, +/**]