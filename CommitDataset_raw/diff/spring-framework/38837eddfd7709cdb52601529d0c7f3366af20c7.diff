[+++ b/org.springframework.web/src/main/java/org/springframework/web/util/HtmlCharacterEntityReferences.java, + * Copyright 2002-2011 the original author or authors., +	private static final String PROPERTIES_FILE = "HtmlCharacterEntityReferences.properties";, +, +	private final Map<String, Character> entityReferenceToCharacterMap = new HashMap<String, Character>(252);, +		// Load reference definition file, +		// Parse reference definition properties, +, +		Character referredCharacter = this.entityReferenceToCharacterMap.get(entityReference);, +++ b/org.springframework.web/src/main/java/org/springframework/web/util/HtmlCharacterEntityReferences.java, + * Copyright 2002-2011 the original author or authors., +	private static final String PROPERTIES_FILE = "HtmlCharacterEntityReferences.properties";, +, +	private final Map<String, Character> entityReferenceToCharacterMap = new HashMap<String, Character>(252);, +		// Load reference definition file, +		// Parse reference definition properties, +, +		Character referredCharacter = this.entityReferenceToCharacterMap.get(entityReference);, +++ b/org.springframework.web/src/main/resources/org/springframework/web/util/HtmlCharacterEntityReferences.properties, +39 = #39, +++ b/org.springframework.web/src/main/java/org/springframework/web/util/HtmlCharacterEntityReferences.java, + * Copyright 2002-2011 the original author or authors., +	private static final String PROPERTIES_FILE = "HtmlCharacterEntityReferences.properties";, +, +	private final Map<String, Character> entityReferenceToCharacterMap = new HashMap<String, Character>(252);, +		// Load reference definition file, +		// Parse reference definition properties, +, +		Character referredCharacter = this.entityReferenceToCharacterMap.get(entityReference);, +++ b/org.springframework.web/src/main/resources/org/springframework/web/util/HtmlCharacterEntityReferences.properties, +39 = #39, +++ b/org.springframework.web/src/test/java/org/springframework/web/util/HtmlUtilsTests.java, + * Copyright 2002-2011 the original author or authors., +import org.junit.Test;, +, +import static org.junit.Assert.*;, +public class HtmlUtilsTests {, +	@Test, +		String unescaped = "\"This is a quote'";, +		assertEquals("&quot;This is a quote&#39;", escaped);, +		assertEquals("&#34;This is a quote&#39;", escaped);, +		assertEquals("&#x22;This is a quote&#x27;", escaped);, +	@Test, +		String escaped = "&quot;This is a quote&#39;";, +		assertEquals(unescaped, "\"This is a quote'");, +	@Test, +	@Test]