[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompDecoder.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.util.StringUtils;, +		Integer contentLength = null;, +		if (headers.containsKey("content-length")) {, +			String rawContentLength = headers.getFirst("content-length");, +			try {, +				contentLength = Integer.valueOf(rawContentLength);, +			}, +			catch (NumberFormatException ex) {, +				logger.warn("Ignoring invalid content-length header value: '" + rawContentLength + "'");, +			}, +		}, +		if (contentLength != null && contentLength >= 0) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompDecoder.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.util.StringUtils;, +		Integer contentLength = null;, +		if (headers.containsKey("content-length")) {, +			String rawContentLength = headers.getFirst("content-length");, +			try {, +				contentLength = Integer.valueOf(rawContentLength);, +			}, +			catch (NumberFormatException ex) {, +				logger.warn("Ignoring invalid content-length header value: '" + rawContentLength + "'");, +			}, +		}, +		if (contentLength != null && contentLength >= 0) {, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/stomp/StompCodecTests.java, + * Copyright 2002-2014 the original author or authors., +	// SPR-11528, +, +	@Test, +	public void decodeFrameWithInvalidContentLength() {, +		Message<byte[]> frame = decode("SEND\ncontent-length:-1\n\nThe body of the message\0");, +		StompHeaderAccessor headers = StompHeaderAccessor.wrap(frame);, +, +		assertEquals(StompCommand.SEND, headers.getCommand());, +, +		assertEquals(1, headers.toStompHeaderMap().size());, +		assertEquals(Integer.valueOf(-1), headers.getContentLength());, +, +		String bodyText = new String(frame.getPayload());, +		assertEquals("The body of the message", bodyText);, +	}, +, +	@Test, +	public void decodeFrameWithContentLengthZero() {, +		Message<byte[]> frame = decode("SEND\ncontent-length:0\n\n\0");, +		StompHeaderAccessor headers = StompHeaderAccessor.wrap(frame);, +, +		assertEquals(StompCommand.SEND, headers.getCommand());, +, +		assertEquals(1, headers.toStompHeaderMap().size());, +		assertEquals(Integer.valueOf(0), headers.getContentLength());, +, +		String bodyText = new String(frame.getPayload());, +		assertEquals("", bodyText);, +	}, +]