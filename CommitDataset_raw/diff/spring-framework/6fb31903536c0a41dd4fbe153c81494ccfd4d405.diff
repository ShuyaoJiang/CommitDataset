[+++ b/spring-beans/src/main/java/org/springframework/beans/AbstractPropertyAccessor.java, +import java.security.PrivilegedActionException;, +							try {, +							catch (Exception ex) {, +								if (ex instanceof PrivilegedActionException) {, +									ex = ((PrivilegedActionException) ex).getException();, +								}, +								if (logger.isDebugEnabled()) {, +									logger.debug("Could not read previous value of property '" +, +											this.nestedPath + propertyName + "'", ex);, +								}, +							}, +						}, +++ b/spring-beans/src/main/java/org/springframework/beans/AbstractPropertyAccessor.java, +import java.security.PrivilegedActionException;, +							try {, +							catch (Exception ex) {, +								if (ex instanceof PrivilegedActionException) {, +									ex = ((PrivilegedActionException) ex).getException();, +								}, +								if (logger.isDebugEnabled()) {, +									logger.debug("Could not read previous value of property '" +, +											this.nestedPath + propertyName + "'", ex);, +								}, +							}, +						}, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperTests.java, +	public void getterSilentlyFailWithOldValueExtraction() {, +		GetterBean target = new GetterBean();, +		BeanWrapper accessor = createAccessor(target);, +		accessor.setExtractOldValueForEditor(true); // This will call the getter, +		accessor.setPropertyValue("name", "tom");, +		assertTrue("Set name to tom", target.getName().equals("tom"));, +	}, +, +	@Test]