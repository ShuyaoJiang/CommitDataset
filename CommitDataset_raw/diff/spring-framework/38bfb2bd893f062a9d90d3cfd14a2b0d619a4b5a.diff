[+++ b/spring-context/src/main/java/org/springframework/validation/DefaultMessageCodesResolver.java, + * using the {@link Format#PREFIX_ERROR_CODE prefixed}, + * {@link #setMessageCodeFormatter(MessageCodeFormatter) formatter}):, + * message strings. The {@link #setMessageCodeFormatter(MessageCodeFormatter), + * messageCodeFormatter} property can be used to specify an alternative concatenation, + * {@link MessageCodeFormatter format}., + * @author Chris Beams, +	private static final MessageCodeFormatter DEFAULT_FORMATTER = Format.PREFIX_ERROR_CODE;, +	private MessageCodeFormatter formatter = DEFAULT_FORMATTER;, +	 * Specify the format for message codes built by this resolver., +	 * <p>The default is {@link Format#PREFIX_ERROR_CODE}., +	 * @since 3.2, +	public void setMessageCodeFormatter(MessageCodeFormatter formatter) {, +		this.formatter = (formatter == null ? DEFAULT_FORMATTER : formatter);, +		codeList.add(postProcessMessageCode(this.formatter.format(errorCode, objectName, field)));, +	 * Common message code formats., +	 *, +	 * @author Phil Webb, +	 * @author Chris Beams, +	 * @since 3.2, +	 * @see MessageCodeFormatter, +	 * @see DefaultMessageCodesResolver#setMessageCodeFormatter(MessageCodeFormatter), +	public static enum Format implements MessageCodeFormatter {, +		 * Prefix the error code at the beginning of the generated message code. e.g.:, +		PREFIX_ERROR_CODE {, +			public String format(String errorCode, String objectName, String field) {, +				return toDelimitedString(errorCode, objectName, field);, +			}, +		},, +		 * Postfix the error code at the end of the generated message code. e.g.:, +		POSTFIX_ERROR_CODE {, +			public String format(String errorCode, String objectName, String field) {, +				return toDelimitedString(objectName, field, errorCode);, +			}, +		};, +, +		/**, +		 * Concatenate the given elements, delimiting each with, +		 * {@link DefaultMessageCodesResolver#CODE_SEPARATOR}, skipping zero-length or, +		 * null elements altogether., +		 */, +		public static String toDelimitedString(String... elements) {, +			StringBuilder rtn = new StringBuilder();, +			for (String element : elements) {, +				if(StringUtils.hasLength(element)) {, +					rtn.append(rtn.length() == 0 ? "" : CODE_SEPARATOR);, +					rtn.append(element);, +				}, +			}, +			return rtn.toString();, +		}, +++ b/spring-context/src/main/java/org/springframework/validation/DefaultMessageCodesResolver.java, + * using the {@link Format#PREFIX_ERROR_CODE prefixed}, + * {@link #setMessageCodeFormatter(MessageCodeFormatter) formatter}):, + * message strings. The {@link #setMessageCodeFormatter(MessageCodeFormatter), + * messageCodeFormatter} property can be used to specify an alternative concatenation, + * {@link MessageCodeFormatter format}., + * @author Chris Beams, +	private static final MessageCodeFormatter DEFAULT_FORMATTER = Format.PREFIX_ERROR_CODE;, +	private MessageCodeFormatter formatter = DEFAULT_FORMATTER;, +	 * Specify the format for message codes built by this resolver., +	 * <p>The default is {@link Format#PREFIX_ERROR_CODE}., +	 * @since 3.2, +	public void setMessageCodeFormatter(MessageCodeFormatter formatter) {, +		this.formatter = (formatter == null ? DEFAULT_FORMATTER : formatter);, +		codeList.add(postProcessMessageCode(this.formatter.format(errorCode, objectName, field)));, +	 * Common message code formats., +	 *, +	 * @author Phil Webb, +	 * @author Chris Beams, +	 * @since 3.2, +	 * @see MessageCodeFormatter, +	 * @see DefaultMessageCodesResolver#setMessageCodeFormatter(MessageCodeFormatter), +	public static enum Format implements MessageCodeFormatter {, +		 * Prefix the error code at the beginning of the generated message code. e.g.:, +		PREFIX_ERROR_CODE {, +			public String format(String errorCode, String objectName, String field) {, +				return toDelimitedString(errorCode, objectName, field);, +			}, +		},, +		 * Postfix the error code at the end of the generated message code. e.g.:, +		POSTFIX_ERROR_CODE {, +			public String format(String errorCode, String objectName, String field) {, +				return toDelimitedString(objectName, field, errorCode);, +			}, +		};, +, +		/**, +		 * Concatenate the given elements, delimiting each with, +		 * {@link DefaultMessageCodesResolver#CODE_SEPARATOR}, skipping zero-length or, +		 * null elements altogether., +		 */, +		public static String toDelimitedString(String... elements) {, +			StringBuilder rtn = new StringBuilder();, +			for (String element : elements) {, +				if(StringUtils.hasLength(element)) {, +					rtn.append(rtn.length() == 0 ? "" : CODE_SEPARATOR);, +					rtn.append(element);, +				}, +			}]