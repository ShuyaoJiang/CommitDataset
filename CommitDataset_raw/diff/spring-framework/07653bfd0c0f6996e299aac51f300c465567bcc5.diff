[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java, +		/**, +		 * Use this method only if you need to apply strong encoding to expanded, +		 * URI variables by quoting all characters with reserved meaning., +		 * @since 5.0.8, +		 */, +		public MethodArgumentBuilder encode() {, +			this.baseUrl.encode();, +			return this;, +		}, +, +					.build().encode().toUriString();, +					.buildAndExpand(uriVars).encode().toString();, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java, +		/**, +		 * Use this method only if you need to apply strong encoding to expanded, +		 * URI variables by quoting all characters with reserved meaning., +		 * @since 5.0.8, +		 */, +		public MethodArgumentBuilder encode() {, +			this.baseUrl.encode();, +			return this;, +		}, +, +					.build().encode().toUriString();, +					.buildAndExpand(uriVars).encode().toString();, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilderTests.java, +	@Test // SPR-17027, +	public void fromMappingNameWithEncoding() {, +, +		initWebApplicationContext(WebConfig.class);, +, +		this.request.setServerName("example.org");, +		this.request.setServerPort(9999);, +		this.request.setContextPath("/base");, +, +		String mappingName = "PAC#getAddressesForCountry";, +		String url = fromMappingName(mappingName).arg(0, "DE;FR").encode().buildAndExpand("_+_");, +		assertEquals("/base/people/_%2B_/addresses/DE%3BFR", url);, +	}, +]