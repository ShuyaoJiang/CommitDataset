[+++ b/build.gradle, +		optional("org.glassfish.tyrus:tyrus-spi:1.3.5"), +		optional("org.glassfish.tyrus:tyrus-core:1.3.5"), +		optional("org.glassfish.tyrus:tyrus-server:1.3.5"), +		optional("org.glassfish.tyrus:tyrus-container-servlet:1.3.5"), +++ b/build.gradle, +		optional("org.glassfish.tyrus:tyrus-spi:1.3.5"), +		optional("org.glassfish.tyrus:tyrus-core:1.3.5"), +		optional("org.glassfish.tyrus:tyrus-server:1.3.5"), +		optional("org.glassfish.tyrus:tyrus-container-servlet:1.3.5"), +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractTyrusRequestUpgradeStrategy.java, +/*, + * Copyright 2002-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.socket.server.standard;, +, +import org.glassfish.tyrus.core.ComponentProviderService;, +import org.glassfish.tyrus.core.RequestContext;, +import org.glassfish.tyrus.core.TyrusEndpoint;, +import org.glassfish.tyrus.core.TyrusEndpointWrapper;, +import org.glassfish.tyrus.core.TyrusUpgradeResponse;, +import org.glassfish.tyrus.core.TyrusWebSocketEngine;, +import org.glassfish.tyrus.core.Version;, +import org.glassfish.tyrus.core.WebSocketApplication;, +import org.glassfish.tyrus.server.TyrusServerContainer;, +import org.glassfish.tyrus.spi.WebSocketEngine.UpgradeInfo;, +import org.springframework.beans.DirectFieldAccessor;, +import org.springframework.http.HttpHeaders;, +import org.springframework.http.server.ServerHttpRequest;, +import org.springframework.http.server.ServerHttpResponse;, +import org.springframework.util.ReflectionUtils;, +import org.springframework.util.StringUtils;, +import org.springframework.web.socket.WebSocketExtension;, +import org.springframework.web.socket.server.HandshakeFailureException;, +, +import javax.servlet.ServletException;, +import javax.servlet.http.HttpServletRequest;, +import javax.servlet.http.HttpServletResponse;, +import javax.websocket.DeploymentException;, +import javax.websocket.Endpoint;, +import javax.websocket.EndpointConfig;, +import javax.websocket.Extension;, +import javax.websocket.WebSocketContainer;, +import java.io.IOException;, +import java.lang.reflect.Constructor;, +import java.lang.reflect.Method;, +import java.net.URI;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +import java.util.Random;, +, +/**, + * An base class for WebSocket servers using Tyrus., + *, + * <p>Works with Tyrus 1.3.5 (WebLogic 12.1.3) and Tyrus 1.7 (GlassFish 4.0.1)., + *, + * @author Rossen Stoyanchev, + * @since 4.1, + * @see <a href="https://tyrus.java.net/">Project Tyrus</a>, + */, +public abstract class AbstractTyrusRequestUpgradeStrategy extends AbstractStandardUpgradeStrategy {, +, +	private static final Random random = new Random();, +, +, +	private final ComponentProviderService componentProvider = ComponentProviderService.create();, +, +, +	@Override, +	public String[] getSupportedVersions() {, +		return StringUtils.commaDelimitedListToStringArray(Version.getSupportedWireProtocolVersions());, +	}, +, +	protected List<WebSocketExtension> getInstalledExtensions(WebSocketContainer container) {, +		try {, +			return super.getInstalledExtensions(container);, +		}, +		catch (UnsupportedOperationException e) {, +			return new ArrayList<WebSocketExtension>();, +		}, +	}, +, +	protected abstract TyrusEndpointHelper getEndpointHelper();, +, +, +	@Override]