[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionException.java, + * Copyright 2002-2010 the original author or authors., + * Base class for exceptions thrown by the conversion system., +	public ConversionException(String message) {, +		super(message);, +	 * @param cause the cause, +	public ConversionException(String message, Throwable cause) {, +		super(message, cause);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionException.java, + * Copyright 2002-2010 the original author or authors., + * Base class for exceptions thrown by the conversion system., +	public ConversionException(String message) {, +		super(message);, +	 * @param cause the cause, +	public ConversionException(String message, Throwable cause) {, +		super(message, cause);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConverterNotFoundException.java, +, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionException.java, + * Copyright 2002-2010 the original author or authors., + * Base class for exceptions thrown by the conversion system., +	public ConversionException(String message) {, +		super(message);, +	 * @param cause the cause, +	public ConversionException(String message, Throwable cause) {, +		super(message, cause);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConverterNotFoundException.java, +, +, +++ b/org.springframework.core/src/main/java/org/springframework/util/FileSystemUtils.java, + * Copyright 2002-2010 the original author or authors., +					for (File child : children) {, +						deleteRecursively(child);, +			for (File entry : entries) {, +				doCopyRecursively(entry, new File(dest, entry.getName()));]