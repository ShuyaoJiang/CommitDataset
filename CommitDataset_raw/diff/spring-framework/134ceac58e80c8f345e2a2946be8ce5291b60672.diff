[+++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java, + * one or more {@link ContentNegotiationStrategy} instances., + *, + * <p>As of 5.0 you can set the exact strategies to use via, + * {@link #setStrategies(List)}., + *, + * <p>As an alternative you can also rely on the set of defaults described below, + * which can be turned on or off or customized through the methods of this, + * builder:, + * <strong>Note:</strong> if you must use URL-based content type resolution,, + * the use of a query parameter is simpler and preferable to the use of a path, + * extension since the latter can cause issues with URI variables, path, + * parameters, and URI decoding. Consider setting {@link #setFavorPathExtension}, + * to {@literal false} or otherwise set the strategies to use explicitly via, + * {@link #setStrategies(List)}., +	@Nullable, +	private List<ContentNegotiationStrategy> strategies;, +, +, +	 * Set the exact list of strategies to use., +	 * <p><strong>Note:</strong> use of this method is mutually exclusive with, +	 * use of all other setters in this class which customize a default, fixed, +	 * set of strategies. See class level doc for more details., +	 * @param strategies the strategies to use, +	 * @since 5.0, +	 */, +	public void setStrategies(@Nullable List<ContentNegotiationStrategy> strategies) {, +		this.strategies = (strategies != null ? new ArrayList<>(strategies) : null);, +	}, +, +	/**, +		if (this.strategies != null) {, +			strategies.addAll(this.strategies);, +		}, +		else {, +		}, +++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java, + * one or more {@link ContentNegotiationStrategy} instances., + *, + * <p>As of 5.0 you can set the exact strategies to use via, + * {@link #setStrategies(List)}., + *, + * <p>As an alternative you can also rely on the set of defaults described below, + * which can be turned on or off or customized through the methods of this, + * builder:, + * <strong>Note:</strong> if you must use URL-based content type resolution,, + * the use of a query parameter is simpler and preferable to the use of a path, + * extension since the latter can cause issues with URI variables, path, + * parameters, and URI decoding. Consider setting {@link #setFavorPathExtension}, + * to {@literal false} or otherwise set the strategies to use explicitly via, + * {@link #setStrategies(List)}., +	@Nullable, +	private List<ContentNegotiationStrategy> strategies;, +, +, +	 * Set the exact list of strategies to use., +	 * <p><strong>Note:</strong> use of this method is mutually exclusive with, +	 * use of all other setters in this class which customize a default, fixed, +	 * set of strategies. See class level doc for more details., +	 * @param strategies the strategies to use, +	 * @since 5.0, +	 */, +	public void setStrategies(@Nullable List<ContentNegotiationStrategy> strategies) {, +		this.strategies = (strategies != null ? new ArrayList<>(strategies) : null);, +	}, +, +	/**, +		if (this.strategies != null) {, +			strategies.addAll(this.strategies);, +		}, +		else {, +		}, +++ b/spring-web/src/test/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBeanTests.java, +	public void explicitStrategies() throws Exception {, +		Map<String, MediaType> mediaTypes = Collections.singletonMap("bar", new MediaType("application", "bar"));, +		ParameterContentNegotiationStrategy strategy1 = new ParameterContentNegotiationStrategy(mediaTypes);, +		HeaderContentNegotiationStrategy strategy2 = new HeaderContentNegotiationStrategy();, +		List<ContentNegotiationStrategy> strategies = Arrays.asList(strategy1, strategy2);, +		this.factoryBean.setStrategies(strategies);, +		this.factoryBean.afterPropertiesSet();, +		ContentNegotiationManager manager = this.factoryBean.getObject();, +, +		assertEquals(strategies, manager.getStrategies());, +, +		this.servletRequest.setRequestURI("/flower");, +		this.servletRequest.addParameter("format", "bar");, +		assertEquals(Collections.singletonList(new MediaType("application", "bar")),, +				manager.resolveMediaTypes(this.webRequest));, +, +	}, +, +	@Test, +++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java, + * one or more {@link ContentNegotiationStrategy} instances., + *, + * <p>As of 5.0 you can set the exact strategies to use via, + * {@link #setStrategies(List)}., + *, + * <p>As an alternative you can also rely on the set of defaults described below, + * which can be turned on or off or customized through the methods of this]