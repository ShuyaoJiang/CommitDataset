[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/HeaderAssertions.java, + * @author Sam Brannen, +	 * Expect that the header with the given name is present., +	 * @since 5.0.3, +	 */, +	public WebTestClient.ResponseSpec doesExist(String name) {, +		if (!getHeaders().containsKey(name)) {, +			String message = getMessage(name) + " does not exist";, +			this.exchangeResult.assertWithDiagnostics(() -> fail(message));, +		}, +		return this.responseSpec;, +	}, +, +	/**, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/HeaderAssertions.java, + * @author Sam Brannen, +	 * Expect that the header with the given name is present., +	 * @since 5.0.3, +	 */, +	public WebTestClient.ResponseSpec doesExist(String name) {, +		if (!getHeaders().containsKey(name)) {, +			String message = getMessage(name) + " does not exist";, +			this.exchangeResult.assertWithDiagnostics(() -> fail(message));, +		}, +		return this.responseSpec;, +	}, +, +	/**, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/HeaderAssertionTests.java, + * Copyright 2002-2018 the original author or authors., + * @author Sam Brannen, +	public void doesExist() {, +		HttpHeaders headers = new HttpHeaders();, +		headers.setContentType(MediaType.APPLICATION_JSON_UTF8);, +		HeaderAssertions assertions = headerAssertions(headers);, +, +		// Success, +		assertions.doesExist("Content-Type");, +, +		try {, +			assertions.doesExist("Framework");, +			fail("Header should not exist");, +		}, +		catch (AssertionError error) {, +			Throwable cause = error.getCause();, +			assertNotNull(cause);, +			assertEquals("Response header 'Framework' does not exist", cause.getMessage());, +		}, +	}, +, +	@Test]