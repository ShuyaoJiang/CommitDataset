[+++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractMessageSendingTemplate.java, +	public D getDefaultDestination() {, +		return this.defaultDestination;, +	}, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractMessageSendingTemplate.java, +	public D getDefaultDestination() {, +		return this.defaultDestination;, +	}, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java, +	public static final String DESTINATION_HEADER = "destination";, +	public static final String MESSAGE_TYPE_HEADER = "messageType";, +	public static final String SESSION_ID_HEADER = "sessionId";, +	public static final String SUBSCRIPTION_ID_HEADER = "subscriptionId";, +	public static final String USER_HEADER = "user";, +	protected SimpMessageHeaderAccessor(SimpMessageType messageType, Map<String, List<String>> externalSourceHeaders) {, +		setHeader(MESSAGE_TYPE_HEADER, messageType);, +		return new SimpMessageHeaderAccessor(SimpMessageType.MESSAGE, null);, +		return new SimpMessageHeaderAccessor(messageType, null);, +	public void setMessageTypeIfNotSet(SimpMessageType messageType) {, +		if (getMessageType() == null) {, +			setHeader(MESSAGE_TYPE_HEADER, messageType);, +		}, +	}, +		return (SimpMessageType) getHeader(MESSAGE_TYPE_HEADER);, +		setHeader(DESTINATION_HEADER, destination);, +		return (String) getHeader(DESTINATION_HEADER);, +		return (String) getHeader(SUBSCRIPTION_ID_HEADER);, +		setHeader(SUBSCRIPTION_ID_HEADER, subscriptionId);, +		return (String) getHeader(SESSION_ID_HEADER);, +		setHeader(SESSION_ID_HEADER, sessionId);, +		return (Principal) getHeader(USER_HEADER);, +		setHeader(USER_HEADER, principal);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractMessageSendingTemplate.java, +	public D getDefaultDestination() {, +		return this.defaultDestination;, +	}, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java, +	public static final String DESTINATION_HEADER = "destination";, +	public static final String MESSAGE_TYPE_HEADER = "messageType";, +	public static final String SESSION_ID_HEADER = "sessionId";, +	public static final String SUBSCRIPTION_ID_HEADER = "subscriptionId";, +	public static final String USER_HEADER = "user";, +	protected SimpMessageHeaderAccessor(SimpMessageType messageType, Map<String, List<String>> externalSourceHeaders) {, +		setHeader(MESSAGE_TYPE_HEADER, messageType);, +		return new SimpMessageHeaderAccessor(SimpMessageType.MESSAGE, null);, +		return new SimpMessageHeaderAccessor(messageType, null);, +	public void setMessageTypeIfNotSet(SimpMessageType messageType) {, +		if (getMessageType() == null) {, +			setHeader(MESSAGE_TYPE_HEADER, messageType);, +		}, +	}, +		return (SimpMessageType) getHeader(MESSAGE_TYPE_HEADER);, +		setHeader(DESTINATION_HEADER, destination);, +		return (String) getHeader(DESTINATION_HEADER);, +		return (String) getHeader(SUBSCRIPTION_ID_HEADER);, +		setHeader(SUBSCRIPTION_ID_HEADER, subscriptionId);, +		return (String) getHeader(SESSION_ID_HEADER);, +		setHeader(SESSION_ID_HEADER, sessionId);, +		return (Principal) getHeader(USER_HEADER);, +		setHeader(USER_HEADER, principal);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageSendingOperations.java, + * A specialization of {@link MessageSendingOperations} with methods for use with, + * the Spring Framework support for simple messaging protocols (like STOMP)., + *, +	/**, +	 * Send a message to a specific user., +	 *, +	 * @param user the user that should receive the message., +	 * @param destination the destination to send the message to., +	 * @param message the message to send, +	 */, +	/**, +	 * Send a message to a specific user., +	 *, +	 * @param user the user that should receive the message., +	 * @param destination the destination to send the message to., +	 * @param message the message to send, +	 * @param postProcessor a postProcessor to post-process or modify the created message, +	 */, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractMessageSendingTemplate.java, +	public D getDefaultDestination() {, +		return this.defaultDestination;, +	}, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java, +	public static final String DESTINATION_HEADER = "destination";, +	public static final String MESSAGE_TYPE_HEADER = "messageType";, +	public static final String SESSION_ID_HEADER = "sessionId";, +	public static final String SUBSCRIPTION_ID_HEADER = "subscriptionId";, +	public static final String USER_HEADER = "user";, +	protected SimpMessageHeaderAccessor(SimpMessageType messageType, Map<String, List<String>> externalSourceHeaders) {, +		setHeader(MESSAGE_TYPE_HEADER, messageType);, +		return new SimpMessageHeaderAccessor(SimpMessageType.MESSAGE, null);, +		return new SimpMessageHeaderAccessor(messageType, null);, +	public void setMessageTypeIfNotSet(SimpMessageType messageType) {, +		if (getMessageType() == null) {, +			setHeader(MESSAGE_TYPE_HEADER, messageType);]