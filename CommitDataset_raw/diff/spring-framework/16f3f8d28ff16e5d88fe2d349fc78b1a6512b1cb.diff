[+++ b/spring-test/src/main/java/org/springframework/mock/http/client/reactive/MockClientHttpResponse.java, +	private boolean closed = false;, +, +	@Override, +		if (this.closed) {, +			return Flux.error(new IllegalStateException("Connection has been closed."));, +		}, +	@Override, +	public void close() {, +		this.closed = true;, +	}, +, +	public boolean isClosed() {, +		return this.closed;, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/reactive/MockClientHttpResponse.java, +	private boolean closed = false;, +, +	@Override, +		if (this.closed) {, +			return Flux.error(new IllegalStateException("Connection has been closed."));, +		}, +	@Override, +	public void close() {, +		this.closed = true;, +	}, +, +	public boolean isClosed() {, +		return this.closed;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/ClientHttpResponse.java, +import java.io.Closeable;, +, + * @author Brian Clozel, +public interface ClientHttpResponse extends ReactiveHttpInputMessage, Closeable {, +	/**, +	 * Close this response, freeing any resources created., +	 * <p>This non-blocking method has to be called once the response has been, +	 * processed and the resources are no longer needed; not doing so might, +	 * create resource leaks or connection issues., +	 * <p>Depending on the client configuration and HTTP version,, +	 * this can lead to closing the connection or returning it to a connection pool., +	 */, +	@Override, +	void close();, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/reactive/MockClientHttpResponse.java, +	private boolean closed = false;, +, +	@Override, +		if (this.closed) {, +			return Flux.error(new IllegalStateException("Connection has been closed."));, +		}, +	@Override, +	public void close() {, +		this.closed = true;, +	}, +, +	public boolean isClosed() {, +		return this.closed;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/ClientHttpResponse.java, +import java.io.Closeable;, +, + * @author Brian Clozel, +public interface ClientHttpResponse extends ReactiveHttpInputMessage, Closeable {, +	/**, +	 * Close this response, freeing any resources created., +	 * <p>This non-blocking method has to be called once the response has been, +	 * processed and the resources are no longer needed; not doing so might, +	 * create resource leaks or connection issues., +	 * <p>Depending on the client configuration and HTTP version,, +	 * this can lead to closing the connection or returning it to a connection pool., +	 */, +	@Override, +	void close();, +, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/ClientHttpResponseDecorator.java, +	@Override, +	public void close() {, +		this.delegate.close();, +	}, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/reactive/MockClientHttpResponse.java, +	private boolean closed = false;, +, +	@Override, +		if (this.closed) {, +			return Flux.error(new IllegalStateException("Connection has been closed."));, +		}, +	@Override, +	public void close() {, +		this.closed = true;, +	}, +, +	public boolean isClosed() {, +		return this.closed;, +	}]