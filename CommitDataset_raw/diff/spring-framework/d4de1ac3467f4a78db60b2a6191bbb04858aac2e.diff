[+++ b/org.springframework.aop/src/main/java/org/springframework/aop/config/AbstractInterceptorDrivenBeanDefinitionDecorator.java, +import org.springframework.beans.factory.support.AbstractBeanDefinition;, +		BeanDefinition targetDefinition = definitionHolder.getBeanDefinition();, +		if (!isProxyFactoryBeanDefinition(targetDefinition)) {, +			proxyDefinition.getPropertyValues().add("target", targetDefinition);, +			proxyDefinition.getPropertyValues().add("interceptorNames", new ManagedList<String>());, +			// copy autowire settings from original bean definition., +			proxyDefinition.setAutowireCandidate(targetDefinition.isAutowireCandidate());, +			proxyDefinition.setPrimary(targetDefinition.isPrimary());, +			if (targetDefinition instanceof AbstractBeanDefinition) {, +				proxyDefinition.copyQualifiersFrom((AbstractBeanDefinition) targetDefinition);, +			}, +			// wrap it in a BeanDefinitionHolder with bean name, +		List<String> list = (List<String>), +				beanDefinition.getPropertyValues().getPropertyValue("interceptorNames").getValue();, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/config/AbstractInterceptorDrivenBeanDefinitionDecorator.java, +import org.springframework.beans.factory.support.AbstractBeanDefinition;, +		BeanDefinition targetDefinition = definitionHolder.getBeanDefinition();, +		if (!isProxyFactoryBeanDefinition(targetDefinition)) {, +			proxyDefinition.getPropertyValues().add("target", targetDefinition);, +			proxyDefinition.getPropertyValues().add("interceptorNames", new ManagedList<String>());, +			// copy autowire settings from original bean definition., +			proxyDefinition.setAutowireCandidate(targetDefinition.isAutowireCandidate());, +			proxyDefinition.setPrimary(targetDefinition.isPrimary());, +			if (targetDefinition instanceof AbstractBeanDefinition) {, +				proxyDefinition.copyQualifiersFrom((AbstractBeanDefinition) targetDefinition);, +			}, +			// wrap it in a BeanDefinitionHolder with bean name, +		List<String> list = (List<String>), +				beanDefinition.getPropertyValues().getPropertyValue("interceptorNames").getValue();, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/scope/ScopedProxyUtils.java, + * Copyright 2002-2010 the original author or authors., +		RootBeanDefinition proxyDefinition = new RootBeanDefinition(ScopedProxyFactoryBean.class);, +		proxyDefinition.setOriginatingBeanDefinition(definition.getBeanDefinition());, +		proxyDefinition.setSource(definition.getSource());, +		proxyDefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);, +		proxyDefinition.getPropertyValues().add("targetBeanName", targetBeanName);, +			proxyDefinition.getPropertyValues().add("proxyTargetClass", Boolean.FALSE);, +		proxyDefinition.setAutowireCandidate(targetDefinition.isAutowireCandidate());, +		proxyDefinition.setPrimary(targetDefinition.isPrimary());, +			proxyDefinition.copyQualifiersFrom((AbstractBeanDefinition) targetDefinition);, +, +		return new BeanDefinitionHolder(proxyDefinition, originalBeanName, definition.getAliases());]