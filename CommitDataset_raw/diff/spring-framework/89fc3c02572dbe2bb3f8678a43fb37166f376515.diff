[+++ b/spring-core/src/main/java/org/springframework/util/BackOff.java, + * Provide a {@link BackOffExecution} that indicates the rate at which, + * an operation should be retried., + *  BackOffExecution exec = backOff.start();, + *, + *  // In the operation recovery/retry loop:, + *  long waitInterval = exec.nextBackOffMillis();, + *  if (waitInterval == BackOffExecution.STOP) {, + * Once the underlying operation has completed successfully, the execution, + * instance can be simply discarded., + * @see BackOffExecution, +	 * Start a new back off execution., +	 * @return a fresh {@link BackOffExecution} ready to be used, +	BackOffExecution start();, +++ b/spring-core/src/main/java/org/springframework/util/BackOff.java, + * Provide a {@link BackOffExecution} that indicates the rate at which, + * an operation should be retried., + *  BackOffExecution exec = backOff.start();, + *, + *  // In the operation recovery/retry loop:, + *  long waitInterval = exec.nextBackOffMillis();, + *  if (waitInterval == BackOffExecution.STOP) {, + * Once the underlying operation has completed successfully, the execution, + * instance can be simply discarded., + * @see BackOffExecution, +	 * Start a new back off execution., +	 * @return a fresh {@link BackOffExecution} ready to be used, +	BackOffExecution start();, +++ b/spring-core/src/main/java/org/springframework/util/BackOffExecution.java, +/*, + * Copyright 2002-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.util;, +, +/**, + * Represent a particular back-off execution., + *, + * <p>Implementations do not need to be thread safe., + *, + * @author Stephane Nicoll, + * @since 4.1, + * @see org.springframework.util.BackOff, + */, +public interface BackOffExecution {, +, +	/**, +	 * Return value of {@link #nextBackOff()} that indicates that the operation, +	 * should not be retried., +	 */, +	long STOP = -1;, +, +	/**, +	 * Return the number of milliseconds to wait before retrying the operation, +	 * or {@link #STOP} ({@value #STOP}) to indicate that no further attempt, +	 * should be made for the operation., +	 */, +	long nextBackOff();, +, +}, +++ b/spring-core/src/main/java/org/springframework/util/BackOff.java, + * Provide a {@link BackOffExecution} that indicates the rate at which, + * an operation should be retried., + *  BackOffExecution exec = backOff.start();, + *, + *  // In the operation recovery/retry loop:, + *  long waitInterval = exec.nextBackOffMillis();, + *  if (waitInterval == BackOffExecution.STOP) {, + * Once the underlying operation has completed successfully, the execution, + * instance can be simply discarded., + * @see BackOffExecution, +	 * Start a new back off execution., +	 * @return a fresh {@link BackOffExecution} ready to be used, +	BackOffExecution start();, +++ b/spring-core/src/main/java/org/springframework/util/BackOffExecution.java, +/*, + * Copyright 2002-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and]