[+++ b/spring-context/src/test/java/org/springframework/context/event/AbstractApplicationEventListenerTests.java, + * Copyright 2002-2016 the original author or authors., +			return this.payload;, +++ b/spring-context/src/test/java/org/springframework/context/event/AbstractApplicationEventListenerTests.java, + * Copyright 2002-2016 the original author or authors., +			return this.payload;, +++ b/spring-context/src/test/java/org/springframework/context/event/AnnotationDrivenEventListenerTests.java, +		MetaAnnotationListenerTestBean bean = this.context.getBean(MetaAnnotationListenerTestBean.class);, +		this.thrown.expect(BeanInitializationException.class);, +		this.thrown.expectMessage(InvalidMethodSignatureEventListener.class.getName());, +		this.thrown.expectMessage("cannotBeCalled");, +		this.countDownLatch.await(2, TimeUnit.SECONDS);, +		this.countDownLatch.await(2, TimeUnit.SECONDS);, +		this.countDownLatch.await(2, TimeUnit.SECONDS);, +		this.countDownLatch.await(2, TimeUnit.SECONDS);, +				this.countDownLatch.countDown();, +			this.countDownLatch.countDown();, +			this.eventCollector.addEvent(this, event);, +			this.eventCollector.addEvent(this, event);, +			this.countDownLatch.countDown();, +			this.eventCollector.addEvent(this, event);, +			this.eventCollector.addEvent(this, event);, +			this.countDownLatch.countDown();, +			this.eventCollector.addEvent(this, event);, +			this.order.add("third");, +			this.order.add("first");, +			this.order.add("second");, +++ b/spring-context/src/test/java/org/springframework/context/event/AbstractApplicationEventListenerTests.java, + * Copyright 2002-2016 the original author or authors., +			return this.payload;, +++ b/spring-context/src/test/java/org/springframework/context/event/AnnotationDrivenEventListenerTests.java, +		MetaAnnotationListenerTestBean bean = this.context.getBean(MetaAnnotationListenerTestBean.class);, +		this.thrown.expect(BeanInitializationException.class);, +		this.thrown.expectMessage(InvalidMethodSignatureEventListener.class.getName());, +		this.thrown.expectMessage("cannotBeCalled");, +		this.countDownLatch.await(2, TimeUnit.SECONDS);, +		this.countDownLatch.await(2, TimeUnit.SECONDS);, +		this.countDownLatch.await(2, TimeUnit.SECONDS);, +		this.countDownLatch.await(2, TimeUnit.SECONDS);, +				this.countDownLatch.countDown();, +			this.countDownLatch.countDown();, +			this.eventCollector.addEvent(this, event);, +			this.eventCollector.addEvent(this, event);, +			this.countDownLatch.countDown();, +			this.eventCollector.addEvent(this, event);, +			this.eventCollector.addEvent(this, event);, +			this.countDownLatch.countDown();, +			this.eventCollector.addEvent(this, event);, +			this.order.add("third");, +			this.order.add("first");, +			this.order.add("second");, +++ b/spring-context/src/test/java/org/springframework/context/event/ApplicationContextEventTests.java, + * Copyright 2002-2016 the original author or authors., +			assertTrue(this.otherListener.seenEvents.contains(event));, +			assertTrue(this.otherListener.seenEvents.contains(event));, +++ b/spring-context/src/test/java/org/springframework/context/event/AbstractApplicationEventListenerTests.java, + * Copyright 2002-2016 the original author or authors., +			return this.payload;, +++ b/spring-context/src/test/java/org/springframework/context/event/AnnotationDrivenEventListenerTests.java, +		MetaAnnotationListenerTestBean bean = this.context.getBean(MetaAnnotationListenerTestBean.class);, +		this.thrown.expect(BeanInitializationException.class);, +		this.thrown.expectMessage(InvalidMethodSignatureEventListener.class.getName());, +		this.thrown.expectMessage("cannotBeCalled");, +		this.countDownLatch.await(2, TimeUnit.SECONDS);, +		this.countDownLatch.await(2, TimeUnit.SECONDS);, +		this.countDownLatch.await(2, TimeUnit.SECONDS);, +		this.countDownLatch.await(2, TimeUnit.SECONDS);, +				this.countDownLatch.countDown();, +			this.countDownLatch.countDown();, +			this.eventCollector.addEvent(this, event);, +			this.eventCollector.addEvent(this, event);, +			this.countDownLatch.countDown();, +			this.eventCollector.addEvent(this, event);, +			this.eventCollector.addEvent(this, event);, +			this.countDownLatch.countDown();, +			this.eventCollector.addEvent(this, event);, +			this.order.add("third");, +			this.order.add("first");, +			this.order.add("second");, +++ b/spring-context/src/test/java/org/springframework/context/event/ApplicationContextEventTests.java, + * Copyright 2002-2016 the original author or authors., +			assertTrue(this.otherListener.seenEvents.contains(event));, +			assertTrue(this.otherListener.seenEvents.contains(event));, +++ b/spring-context/src/test/java/org/springframework/context/event/ApplicationListenerMethodAdapterTests.java, + * Copyright 2002-2016 the original author or authors., +		this.thrown.expect(IllegalStateException.class);, +		this.thrown.expect(IllegalStateException.class);, +		this.thrown.expect(IllegalStateException.class);, +		this.thrown.expect(IllegalStateException.class);, +		this.thrown.expectMessage("Test exception");, +		this.thrown.expectCause(is(isNull(Throwable.class)));, +		this.thrown.expect(UndeclaredThrowableException.class);, +		this.thrown.expectCause(is(instanceOf(IOException.class)));, +		this.thrown.expect(IllegalStateException.class);, +		this.thrown.expectMessage("handleIt2");, +			return this.targetBean;, +++ b/spring-context/src/test/java/org/springframework/context/event/AbstractApplicationEventListenerTests.java, + * Copyright 2002-2016 the original author or authors., +			return this.payload;, +++ b/spring-context/src/test/java/org/springframework/context/event/AnnotationDrivenEventListenerTests.java]