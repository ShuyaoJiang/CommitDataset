[+++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java, +import org.apache.http.client.methods.HttpEntityEnclosingRequestBase;, +, +	/**, +	 * An alternative to {@link org.apache.http.client.methods.HttpDelete} that, +	 * extends {@link org.apache.http.client.methods.HttpEntityEnclosingRequestBase}, +	 * rather than {@link org.apache.http.client.methods.HttpRequestBase} and, +	 * hence allows HTTP delete with a request body. For use with the RestTemplate, +	 * exchange methods which allow the combination of HTTP DELETE with entity., +	 * @since 4.1.2, +	 */, +	private static class HttpDelete extends HttpEntityEnclosingRequestBase {, +, +		public HttpDelete(URI uri) {, +			super();, +			setURI(uri);, +		}, +, +		@Override, +		public String getMethod() {, +			return "DELETE";, +		}, +	}, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java, +import org.apache.http.client.methods.HttpEntityEnclosingRequestBase;, +, +	/**, +	 * An alternative to {@link org.apache.http.client.methods.HttpDelete} that, +	 * extends {@link org.apache.http.client.methods.HttpEntityEnclosingRequestBase}, +	 * rather than {@link org.apache.http.client.methods.HttpRequestBase} and, +	 * hence allows HTTP delete with a request body. For use with the RestTemplate, +	 * exchange methods which allow the combination of HTTP DELETE with entity., +	 * @since 4.1.2, +	 */, +	private static class HttpDelete extends HttpEntityEnclosingRequestBase {, +, +		public HttpDelete(URI uri) {, +			super();, +			setURI(uri);, +		}, +, +		@Override, +		public String getMethod() {, +			return "DELETE";, +		}, +	}, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleClientHttpRequestFactory.java, +		if ("PUT".equals(httpMethod) || "POST".equals(httpMethod) ||, +				"PATCH".equals(httpMethod) || "DELETE".equals(httpMethod)) {, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java, +import org.apache.http.client.methods.HttpEntityEnclosingRequestBase;, +, +	/**, +	 * An alternative to {@link org.apache.http.client.methods.HttpDelete} that, +	 * extends {@link org.apache.http.client.methods.HttpEntityEnclosingRequestBase}, +	 * rather than {@link org.apache.http.client.methods.HttpRequestBase} and, +	 * hence allows HTTP delete with a request body. For use with the RestTemplate, +	 * exchange methods which allow the combination of HTTP DELETE with entity., +	 * @since 4.1.2, +	 */, +	private static class HttpDelete extends HttpEntityEnclosingRequestBase {, +, +		public HttpDelete(URI uri) {, +			super();, +			setURI(uri);, +		}, +, +		@Override, +		public String getMethod() {, +			return "DELETE";, +		}, +	}, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleClientHttpRequestFactory.java, +		if ("PUT".equals(httpMethod) || "POST".equals(httpMethod) ||, +				"PATCH".equals(httpMethod) || "DELETE".equals(httpMethod)) {, +++ b/spring-web/src/test/java/org/springframework/http/client/BufferedSimpleHttpRequestFactoryTests.java, + * Copyright 2002-2014 the original author or authors., +import static org.junit.Assert.assertEquals;, +, +import java.io.IOException;, +import java.net.HttpURLConnection;, +import java.net.URL;, +	@Test, +	public void prepareConnectionWithRequestBody() throws Exception {, +		URL uri = new URL("http://example.com");, +		testRequestBodyAllowed(uri, "GET", false);, +		testRequestBodyAllowed(uri, "HEAD", false);, +		testRequestBodyAllowed(uri, "OPTIONS", false);, +		testRequestBodyAllowed(uri, "TRACE", false);, +		testRequestBodyAllowed(uri, "PUT", true);, +		testRequestBodyAllowed(uri, "POST", true);, +		testRequestBodyAllowed(uri, "DELETE", true);, +	}, +, +	private void testRequestBodyAllowed(URL uri, String httpMethod, boolean allowed) throws IOException {, +		HttpURLConnection connection = new TestHttpURLConnection(uri);, +		((SimpleClientHttpRequestFactory) this.factory).prepareConnection(connection, httpMethod);, +		assertEquals(allowed, connection.getDoOutput());, +	}, +]