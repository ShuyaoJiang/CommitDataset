[+++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, +	public Map<String,?> matchInParameterValuesWithCallParameters(Object[] parameterValues) {, +		Map<String, Object> matchedParameters = new HashMap<String, Object>(parameterValues.length);, +		int i = 0;, +		for (SqlParameter parameter : this.callParameters) {, +			if (parameter.isInputValueProvided()) {, +				String parameterName =  parameter.getName();, +				matchedParameters.put(parameterName, parameterValues[i++]);, +			}, +		}, +		return matchedParameters;, +	}, +, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, +	public Map<String,?> matchInParameterValuesWithCallParameters(Object[] parameterValues) {, +		Map<String, Object> matchedParameters = new HashMap<String, Object>(parameterValues.length);, +		int i = 0;, +		for (SqlParameter parameter : this.callParameters) {, +			if (parameter.isInputValueProvided()) {, +				String parameterName =  parameter.getName();, +				matchedParameters.put(parameterName, parameterValues[i++]);, +			}, +		}, +		return matchedParameters;, +	}, +, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java, +	 * Method that provides execution of the call using the passed in array of parameters, +	 * @param args array of parameter values; order must match the order declared for the stored procedure, +	 * @return Map of out parameters, +	 */, +	protected Map<String, Object> doExecute(Object[] args) {, +		checkCompiled();, +		Map<String, ?> params = matchInParameterValuesWithCallParameters(args);, +		return executeCallInternal(params);, +	}, +, +	/**, +	 * @param args the parameter values provided as an array, +	 * @return Map with parameter names and values, +	 */, +	private Map<String,?> matchInParameterValuesWithCallParameters(Object[] args) {, +		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args);, +	}, +, +	/**, +	 * Match the provided in parameter values with registered parameters and, +	 * parameters defined via metadata processing., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, +	public Map<String,?> matchInParameterValuesWithCallParameters(Object[] parameterValues) {, +		Map<String, Object> matchedParameters = new HashMap<String, Object>(parameterValues.length);, +		int i = 0;, +		for (SqlParameter parameter : this.callParameters) {, +			if (parameter.isInputValueProvided()) {, +				String parameterName =  parameter.getName();, +				matchedParameters.put(parameterName, parameterValues[i++]);, +			}, +		}, +		return matchedParameters;, +	}, +, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java, +	 * Method that provides execution of the call using the passed in array of parameters, +	 * @param args array of parameter values; order must match the order declared for the stored procedure, +	 * @return Map of out parameters, +	 */, +	protected Map<String, Object> doExecute(Object[] args) {, +		checkCompiled();, +		Map<String, ?> params = matchInParameterValuesWithCallParameters(args);, +		return executeCallInternal(params);, +	}, +, +	/**, +	 * @param args the parameter values provided as an array, +	 * @return Map with parameter names and values, +	 */, +	private Map<String,?> matchInParameterValuesWithCallParameters(Object[] args) {, +		return this.callMetaDataContext.matchInParameterValuesWithCallParameters(args);, +	}, +, +	/**, +	 * Match the provided in parameter values with registered parameters and, +	 * parameters defined via metadata processing., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcCall.java, +	@SuppressWarnings("unchecked"), +	public <T> T executeFunction(Class<T> returnType, Object... args) {, +		return (T) doExecute(args).get(getScalarOutParameterName());, +	}, +	public <T> T executeObject(Class<T> returnType, Object... args) {, +		return (T) doExecute(args).get(getScalarOutParameterName());, +	}, +, +	@SuppressWarnings("unchecked"), +	public Map<String, Object> execute(Object... args) {, +		return doExecute(args);, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, +	public Map<String,?> matchInParameterValuesWithCallParameters(Object[] parameterValues) {, +		Map<String, Object> matchedParameters = new HashMap<String, Object>(parameterValues.length);, +		int i = 0;, +		for (SqlParameter parameter : this.callParameters) {]