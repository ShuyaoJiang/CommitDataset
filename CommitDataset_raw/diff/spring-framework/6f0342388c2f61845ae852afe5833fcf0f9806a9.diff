[+++ b/org.springframework.beans/src/test/java/org/springframework/beans/factory/config/MethodInvokingFactoryBeanTests.java, +/*, + * Copyright 2002-2008 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.beans.factory.config;, +, +import java.util.ArrayList;, +import java.util.Collection;, +import java.util.List;, +, +import junit.framework.TestCase;, +, +import org.springframework.beans.propertyeditors.StringTrimmerEditor;, +import org.springframework.beans.support.ArgumentConvertingMethodInvoker;, +import org.springframework.util.MethodInvoker;, +, +/**, + * @author Colin Sampaleanu, + * @author Juergen Hoeller, + * @since 21.11.2003, + */, +public class MethodInvokingFactoryBeanTests extends TestCase {, +, +	public void testParameterValidation() throws Exception {, +		String validationError = "improper validation of input properties";, +, +		// assert that only static OR non static are set, but not both or none, +		MethodInvokingFactoryBean mcfb = new MethodInvokingFactoryBean();, +		try {, +			mcfb.afterPropertiesSet();, +			fail(validationError);, +		}, +		catch (IllegalArgumentException ex) {, +			// expected, +		}, +, +		mcfb = new MethodInvokingFactoryBean();, +		mcfb.setTargetObject(this);, +		mcfb.setTargetMethod("whatever");, +		try {, +			mcfb.afterPropertiesSet();, +			fail(validationError);, +		}, +		catch (NoSuchMethodException ex) {, +			// expected, +		}, +, +		// bogus static method, +		mcfb = new MethodInvokingFactoryBean();, +		mcfb.setTargetClass(TestClass1.class);, +		mcfb.setTargetMethod("some.bogus.Method.name");, +		try {, +			mcfb.afterPropertiesSet();, +			fail(validationError);, +		}, +		catch (NoSuchMethodException ex) {, +			// expected, +		}, +, +		// bogus static method, +		mcfb = new MethodInvokingFactoryBean();, +		mcfb.setTargetClass(TestClass1.class);, +		mcfb.setTargetMethod("method1");, +		try {, +			mcfb.afterPropertiesSet();, +			fail(validationError);, +		}, +		catch (IllegalArgumentException ex) {, +			// expected, +		}, +, +		// missing method, +		mcfb = new MethodInvokingFactoryBean();, +		mcfb.setTargetObject(this);, +		try {, +			mcfb.afterPropertiesSet();, +			fail(validationError);, +		}, +		catch (IllegalArgumentException ex) {, +			// expected, +		}, +, +		// bogus method, +		mcfb = new MethodInvokingFactoryBean();, +		mcfb.setTargetObject(this);, +		mcfb.setTargetMethod("bogus");, +		try {]