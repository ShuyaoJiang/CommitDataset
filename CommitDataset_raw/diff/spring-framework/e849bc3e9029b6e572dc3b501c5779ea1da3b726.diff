[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +	 * @param beanInstance the corresponding bean instance (can be null), +	 * @param beanInstance the bean instance to check (can be null), +		if (beanInstance != null) {, +		return null;, +	}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +	 * @param beanInstance the corresponding bean instance (can be null), +	 * @param beanInstance the bean instance to check (can be null), +		if (beanInstance != null) {, +		return null;, +	}, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/DefaultListableBeanFactoryTests.java, +	public void testGetBeanByTypeWithPriorityAndNullInstance() throws Exception {, +		DefaultListableBeanFactory lbf = new DefaultListableBeanFactory();, +		RootBeanDefinition bd1 = new RootBeanDefinition(HighPriorityTestBean.class);, +		RootBeanDefinition bd2 = new RootBeanDefinition(NullTestBeanFactoryBean.class);, +		lbf.registerBeanDefinition("bd1", bd1);, +		lbf.registerBeanDefinition("bd2", bd2);, +		TestBean bean = lbf.getBean(TestBean.class);, +		assertThat(bean.getBeanName(), equalTo("bd1"));, +	}, +, +	@Test, +	private static class NullTestBeanFactoryBean<T> implements FactoryBean<TestBean> {, +, +		@Override, +		public TestBean getObject() throws Exception {, +			return null;, +		}, +, +		@Override, +		public Class<?> getObjectType() {, +			return TestBean.class;, +		}, +, +		@Override, +		public boolean isSingleton() {, +			return true;, +		}, +	}, +]