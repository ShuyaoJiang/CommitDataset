[+++ b/build.gradle, +		classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.3"), +		classpath("org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.14"), +		classpath("org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.6"), +	apply from: "${gradleScriptDir}/sniffer.gradle", +	apply from: "${gradleScriptDir}/docs.gradle", +++ b/build.gradle, +		classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.3"), +		classpath("org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.14"), +		classpath("org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.6"), +	apply from: "${gradleScriptDir}/sniffer.gradle", +	apply from: "${gradleScriptDir}/docs.gradle", +++ b/gradle/docs.gradle, +/*, + * Copyright 2002-2017 the original author or authors., + *, + *  Licensed under the Apache License, Version 2.0 (the "License");, + *  you may not use this file except in compliance with the License., + *  You may obtain a copy of the License at, + *, + *       http://www.apache.org/licenses/LICENSE-2.0, + *, + *  Unless required by applicable law or agreed to in writing, software, + *  distributed under the License is distributed on an "AS IS" BASIS,, + *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + *  See the License for the specific language governing permissions and, + *  limitations under the License., + */, +, +apply plugin: "org.asciidoctor.convert", +, +asciidoctor {, +	sources {, +		include '*.adoc', +	}, +	logDocuments = true, +	backends = ["html5", "pdf"], +	options doctype: 'book', eruby: 'erubis', +	attributes  'icons': 'font',, +				'idprefix': '',, +				'idseparator': '-',, +				docinfo: '',, +				revnumber: project.version,, +				sectanchors: '',, +				sectnums: '',, +				'source-highlighter': 'coderay',, +				stylesdir: 'stylesheets/',, +				stylesheet: 'spring.css',, +				'spring-version': project.version, +, +}, +, +task api(type: Javadoc) {, +	group = "Documentation", +	description = "Generates aggregated Javadoc API documentation.", +	title = "${rootProject.description} ${version} API", +, +	dependsOn {, +		subprojects.collect {, +			it.tasks.getByName("jar"), +		}, +	}, +	options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED, +	options.author = true, +	options.header = rootProject.description, +	options.overview = "src/docs/api/overview.html", +	options.stylesheetFile = file("src/docs/api/stylesheet.css"), +	options.splitIndex = true, +	options.links(project.ext.javadocLinks), +	options.addStringOption('Xdoclint:none', '-quiet'), +, +	source subprojects.collect { project ->, +		project.sourceSets.main.allJava, +	}, +, +	maxMemory = "1024m", +	destinationDir = new File(buildDir, "api"), +, +	doFirst {, +		classpath = files(, +				// ensure the javadoc process can resolve types compiled from .aj sources, +				project(":spring-aspects").sourceSets.main.output, +		), +		classpath += files(subprojects.collect { it.sourceSets.main.compileClasspath }), +	}, +}, +, +task docsZip(type: Zip, dependsOn: 'asciidoctor') {, +	group = "Distribution", +	baseName = "spring-framework", +	classifier = "docs", +	description = "Builds -${classifier} archive containing api and reference " +, +			"for deployment at http://docs.spring.io/spring-framework/docs.", +, +	from("src/dist") {, +		include "changelog.txt", +	}, +, +	from (api) {, +		into "javadoc-api"]