[+++ b/org.springframework.testsuite/src/test/java/org/springframework/util/ReflectionUtilsTests.java, +import static org.junit.Assert.*;, +import org.junit.Test;, + * <p> JUnit 4 based unit tests for {@link ReflectionUtils}. </p>, + * @author Arjen Poutsma, +public class ReflectionUtilsTests {, +	@Test, +	public void findField() {, +		Field field = ReflectionUtils.findField(TestBeanSubclassWithPublicField.class, "publicField", String.class);, +	@Test, +	public void setField() {, +	@Test(expected = IllegalStateException.class), +	public void setFieldIllegal() {, +		final TestBeanSubclassWithNewField testBean = new TestBeanSubclassWithNewField();, +		final Field field = ReflectionUtils.findField(TestBeanSubclassWithNewField.class, "name", String.class);, +		ReflectionUtils.setField(field, testBean, "FooBar");, +	}, +	@Test, +	public void invokeMethod() throws Exception {, +		String juergen = "Juergen Hoeller";, +	@Test, +	public void declaresException() throws Exception {, +	@Test, +	public void copySrcToDestinationOfIncorrectClass() {, +	@Test, +	public void rejectsNullSrc() {, +	@Test, +	public void rejectsNullDest() {, +	@Test, +	public void validCopy() {, +	@Test, +	public void validCopyOnSubTypeWithNewField() {, +	@Test, +	public void validCopyToSubType() {, +	@Test, +	public void validCopyToSubTypeWithFinalField() {, +		private List<String> methodNames = new LinkedList<String>();, +, +		private List<Method> methods = new LinkedList<Method>();, +	}, +, +		@Override, +, +, +, +, +, +		private void foo(Integer i) throws RemoteException {, +		}, +, +		void bar(String s) throws IllegalArgumentException {, +		}]