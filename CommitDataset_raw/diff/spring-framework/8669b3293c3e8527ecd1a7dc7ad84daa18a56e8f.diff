[+++ b/org.springframework.jms/src/main/java/org/springframework/jms/JmsException.java, + * Copyright 2002-2009 the original author or authors., +			if (linkedEx != null) {, +				String linkedMessage = linkedEx.getMessage();, +				String causeMessage = cause.getMessage();, +				if (linkedMessage != null && (causeMessage == null || !causeMessage.contains(linkedMessage))) {, +		}, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/JmsException.java, + * Copyright 2002-2009 the original author or authors., +			if (linkedEx != null) {, +				String linkedMessage = linkedEx.getMessage();, +				String causeMessage = cause.getMessage();, +				if (linkedMessage != null && (causeMessage == null || !causeMessage.contains(linkedMessage))) {, +		}, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java, +	 * <p>The default implementation logs the exception at info level, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/JmsException.java, + * Copyright 2002-2009 the original author or authors., +			if (linkedEx != null) {, +				String linkedMessage = linkedEx.getMessage();, +				String causeMessage = cause.getMessage();, +				if (linkedMessage != null && (causeMessage == null || !causeMessage.contains(linkedMessage))) {, +		}, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java, +	 * <p>The default implementation logs the exception at info level, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/support/JmsUtils.java, + * Copyright 2002-2009 the original author or authors., +			else {, +				String linkedMessage = linkedEx.getMessage();, +				if (linkedMessage != null && !message.contains(linkedMessage)) {, +		}]