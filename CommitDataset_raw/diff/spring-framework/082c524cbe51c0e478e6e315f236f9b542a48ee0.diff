[+++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionWrapper.java, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_NAME);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_TYPE);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_CONSTRUCTOR);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_NAME);, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionWrapper.java, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_NAME);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_TYPE);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_CONSTRUCTOR);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_NAME);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		if (ctors != null || mbd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR ||, +		if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME || mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) {, +			if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME) {, +			if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) {, +		boolean needsDepCheck = (mbd.getDependencyCheck() != AbstractBeanDefinition.DEPENDENCY_CHECK_NONE);, +				boolean unsatisfied = (dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_ALL) ||, +						(isSimple && dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_SIMPLE) ||, +						(!isSimple && dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_OBJECTS);, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionWrapper.java, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_NAME);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_TYPE);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_CONSTRUCTOR);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_NAME);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		if (ctors != null || mbd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR ||, +		if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME || mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) {, +			if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME) {, +			if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) {, +		boolean needsDepCheck = (mbd.getDependencyCheck() != AbstractBeanDefinition.DEPENDENCY_CHECK_NONE);, +				boolean unsatisfied = (dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_ALL) ||, +						(isSimple && dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_SIMPLE) ||, +						(!isSimple && dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_OBJECTS);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, +	public static <T> BeanDefinitionBuilder genericBeanDefinition(Class<T> beanClass, Supplier<T> instanceSupplier) {, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionWrapper.java, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_NAME);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_TYPE);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_CONSTRUCTOR);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_NAME);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		if (ctors != null || mbd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR ||, +		if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME || mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) {, +			if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME) {, +			if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) {, +		boolean needsDepCheck = (mbd.getDependencyCheck() != AbstractBeanDefinition.DEPENDENCY_CHECK_NONE);, +				boolean unsatisfied = (dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_ALL) ||, +						(isSimple && dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_SIMPLE) ||, +						(!isSimple && dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_OBJECTS);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, +	public static <T> BeanDefinitionBuilder genericBeanDefinition(Class<T> beanClass, Supplier<T> instanceSupplier) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +import org.springframework.beans.factory.config.AutowireCapableBeanFactory;, +					mbd.getResolvedAutowireMode() == AutowireCapableBeanFactory.AUTOWIRE_CONSTRUCTOR);, +			boolean autowiring = (mbd.getResolvedAutowireMode() == AutowireCapableBeanFactory.AUTOWIRE_CONSTRUCTOR);, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionWrapper.java, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_NAME);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_TYPE);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_CONSTRUCTOR);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_NAME);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		if (ctors != null || mbd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR ||, +		if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME || mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) {, +			if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME) {, +			if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) {, +		boolean needsDepCheck = (mbd.getDependencyCheck() != AbstractBeanDefinition.DEPENDENCY_CHECK_NONE);, +				boolean unsatisfied = (dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_ALL) ||, +						(isSimple && dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_SIMPLE) ||, +						(!isSimple && dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_OBJECTS);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, +	public static <T> BeanDefinitionBuilder genericBeanDefinition(Class<T> beanClass, Supplier<T> instanceSupplier) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +import org.springframework.beans.factory.config.AutowireCapableBeanFactory;, +					mbd.getResolvedAutowireMode() == AutowireCapableBeanFactory.AUTOWIRE_CONSTRUCTOR);, +			boolean autowiring = (mbd.getResolvedAutowireMode() == AutowireCapableBeanFactory.AUTOWIRE_CONSTRUCTOR);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +import org.springframework.beans.factory.support.AbstractBeanDefinition;, +		beanDef.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_CONSTRUCTOR);, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionWrapper.java, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_NAME);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_TYPE);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_CONSTRUCTOR);, +					bd.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_NAME);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		if (ctors != null || mbd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR ||, +		if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME || mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) {, +			if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME) {, +			if (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) {, +		boolean needsDepCheck = (mbd.getDependencyCheck() != AbstractBeanDefinition.DEPENDENCY_CHECK_NONE);, +				boolean unsatisfied = (dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_ALL) ||, +						(isSimple && dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_SIMPLE) ||, +						(!isSimple && dependencyCheck == AbstractBeanDefinition.DEPENDENCY_CHECK_OBJECTS);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java]