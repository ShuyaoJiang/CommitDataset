[+++ b/spring-aop/src/main/java/org/aopalliance/intercept/MethodInvocation.java, +	 * <p>This method is a friendly implementation of the, +++ b/spring-aop/src/main/java/org/aopalliance/intercept/MethodInvocation.java, +	 * <p>This method is a friendly implementation of the, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, +	 * Key used in ReflectiveMethodInvocation userAttributes map for the current joinpoint., +++ b/spring-aop/src/main/java/org/aopalliance/intercept/MethodInvocation.java, +	 * <p>This method is a friendly implementation of the, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, +	 * Key used in ReflectiveMethodInvocation userAttributes map for the current joinpoint., +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +		// argNames should be supported in Around as it is in Pointcut, +	public interface MutableModifiable extends Modifiable {, +	public static class ModifiableImpl implements MutableModifiable {, +			JoinPoint jp, MutableModifiable mixin, Object newValue) {, +	public static MutableModifiable mixin;, +++ b/spring-aop/src/main/java/org/aopalliance/intercept/MethodInvocation.java, +	 * <p>This method is a friendly implementation of the, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, +	 * Key used in ReflectiveMethodInvocation userAttributes map for the current joinpoint., +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +		// argNames should be supported in Around as it is in Pointcut, +	public interface MutableModifiable extends Modifiable {, +	public static class ModifiableImpl implements MutableModifiable {, +			JoinPoint jp, MutableModifiable mixin, Object newValue) {, +	public static MutableModifiable mixin;, +++ b/spring-aop/src/test/java/org/springframework/aop/support/DelegatingIntroductionInterceptorTests.java, +		// Shouldn't proxy framework interfaces, +++ b/spring-aop/src/main/java/org/aopalliance/intercept/MethodInvocation.java, +	 * <p>This method is a friendly implementation of the, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, +	 * Key used in ReflectiveMethodInvocation userAttributes map for the current joinpoint., +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +		// argNames should be supported in Around as it is in Pointcut, +	public interface MutableModifiable extends Modifiable {, +	public static class ModifiableImpl implements MutableModifiable {, +			JoinPoint jp, MutableModifiable mixin, Object newValue) {, +	public static MutableModifiable mixin;, +++ b/spring-aop/src/test/java/org/springframework/aop/support/DelegatingIntroductionInterceptorTests.java, +		// Shouldn't proxy framework interfaces, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +	 * Obtain a lazily initialized CachedIntrospectionResults instance, +++ b/spring-aop/src/main/java/org/aopalliance/intercept/MethodInvocation.java, +	 * <p>This method is a friendly implementation of the, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, +	 * Key used in ReflectiveMethodInvocation userAttributes map for the current joinpoint., +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +		// argNames should be supported in Around as it is in Pointcut, +	public interface MutableModifiable extends Modifiable {, +	public static class ModifiableImpl implements MutableModifiable {, +			JoinPoint jp, MutableModifiable mixin, Object newValue) {, +	public static MutableModifiable mixin;, +++ b/spring-aop/src/test/java/org/springframework/aop/support/DelegatingIntroductionInterceptorTests.java, +		// Shouldn't proxy framework interfaces, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +	 * Obtain a lazily initialized CachedIntrospectionResults instance, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AutowireUtils.java, +	 * method for {@code createProxy()} and an {@code Object[]} array containing, +++ b/spring-aop/src/main/java/org/aopalliance/intercept/MethodInvocation.java, +	 * <p>This method is a friendly implementation of the, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, +	 * Key used in ReflectiveMethodInvocation userAttributes map for the current joinpoint., +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +		// argNames should be supported in Around as it is in Pointcut, +	public interface MutableModifiable extends Modifiable {, +	public static class ModifiableImpl implements MutableModifiable {, +			JoinPoint jp, MutableModifiable mixin, Object newValue) {, +	public static MutableModifiable mixin;, +++ b/spring-aop/src/test/java/org/springframework/aop/support/DelegatingIntroductionInterceptorTests.java, +		// Shouldn't proxy framework interfaces, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +	 * Obtain a lazily initialized CachedIntrospectionResults instance, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AutowireUtils.java, +	 * method for {@code createProxy()} and an {@code Object[]} array containing, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, +	 * Set the dependency check mode for this definition., +++ b/spring-aop/src/main/java/org/aopalliance/intercept/MethodInvocation.java, +	 * <p>This method is a friendly implementation of the, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, +	 * Key used in ReflectiveMethodInvocation userAttributes map for the current joinpoint., +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +		// argNames should be supported in Around as it is in Pointcut, +	public interface MutableModifiable extends Modifiable {, +	public static class ModifiableImpl implements MutableModifiable {, +			JoinPoint jp, MutableModifiable mixin, Object newValue) {, +	public static MutableModifiable mixin;, +++ b/spring-aop/src/test/java/org/springframework/aop/support/DelegatingIntroductionInterceptorTests.java, +		// Shouldn't proxy framework interfaces, +++ b/spring-beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +	 * Obtain a lazily initialized CachedIntrospectionResults instance, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AutowireUtils.java, +	 * method for {@code createProxy()} and an {@code Object[]} array containing, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, +	 * Set the dependency check mode for this definition., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionResource.java, +++ b/spring-aop/src/main/java/org/aopalliance/intercept/MethodInvocation.java, +	 * <p>This method is a friendly implementation of the, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, +	 * Key used in ReflectiveMethodInvocation userAttributes map for the current joinpoint., +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java]