[+++ b/spring-framework-reference/src/transaction.xml, +        (CMT) or choosing to drive local transactions through a proprietary, +        API such as Hibernate.</para>, +        <!--The section (formerly called Motivation) does not mention Hibernate. It talks about local and global. TR: REVISED, PLS REVIEW added 'local' to the sentence-->, +        properly.<!--Added above link and bullet item. TR: OK--></para>, +    <title>Advantages of the Spring Framework's transaction support model<!--Renamed section to make it more to the point. TR: OK--></title>, +    <!--Gave global, local, and spring models their own sections. These need to be called out at a higher level, esp. Spring advantage! TR: OK-->, +      <!--Do you need to specify that Spring allows you to work with *multiple* transactional resourcess (as global transactions do)? TR: OK AS IS-->, +TR: OK AS IS - I think it's fine as is - the concepts apply to both programmatic and declarative transactions, +TR: REVISED, PLS REVIEW - changed to say "some of the bean definitions in your configuration file"-->, +    <title>Understanding the Spring Framework transaction abstraction<!--If this section applies only to prog. tx management, we should say that up front. Add info? , +TR: OK AS IS - It's relevant for declarative tx as well--></title>, +TR: REVISED, PLS REVIEW - spelled SPI out and added a bit of clarification at the end-->Because, +    <emphasis role="bold">thread</emphasis> of execution.<!--Previous sentences were difficult to follow because of all the parenthetical phrases.Revise if necessary. TR: OK AS IS--></para>, +        However, you have the option of specifying the behavior in the event, +        that a transactional method is executed when a transaction context, +        already exists. <!--Correct to say you have options? A human has to specify what the behavior will be, right? TR: REVISED, PLS REVIEW-->For, +        transaction can be used when your code reads but does not modify data., +        such as when you are using Hibernate.</para>, +, +        <!--describes status but we could say 'reads but does not modify' I added that it describes status. OK? Elaborate on purpose?, +TR:REVISED, PLS REVIEW-->, +    TR: OK AS IS - at this point in the text, I don't think you would need that, +    <!--Indicate what the following example demonstrates.What is its purpose? TR: REVISED, PLS REVIEW-->, +     TR: REVISED, PLS REVIEW - I clarified this a bit, +    <interfacename>PlatformTransactionManager</interfacename>.<!--I broke into two sentences. Last part of sentence unclear,revise to say what triggers tx synch. Revise sentences if necessray. TR: OK--></para>, +TR: REVISED, PLS REVIEW - I re-wrote this to match the current preferred approaches--></para>, +      <!--I don't understand this. Why tell them to use DataSourceUtils and then say you will prefer Spring abstraction? , +Why not give example of using Spring abstraction? , +TR: OK AS IS - it's not the prefered way, but we need to cover this if someine decideds to use it-->, +      provided by a Java EE server.<!--What is the purpose of TransactionAwareDataSourceProxy, do you use it instead of 4.2 or 4.1 approaches or in addition to?, +TR: OK AS IS - it's and additional tool, rarely used, but needs to be documented--></para>, +        Hibernate or JDO by simple adjusting the configuration files.<!--Indicate what kind of config changes? Changes to what  , +TR: REVISED, PLS REVIEW - rewrote this to hoefully make it more clear--></para>, +    specify which exceptions (and throwables) <!--If no difference between exceptions and throwables, delete throwables. TR: OK AS IS-->should, +    <!--customize this so that what happens? TR: OK AS IS - i think - the option is to provide alternate rules for when a transaction , +would be rolled back, not necessarily following the EJB rules-->, +      <!--I don't see this image in src file or in pdf. Maybe it was added to src after pdf was created? , +TR: OK AS IS - images don't show up in the editor, but they do show up in the generated docs-->, +      <literal>fooService</literal> bean definition. <!--Clarify what you mean by around the object; do you mean associated with the object? Revise to clarify. Around is vague. , +TR: OK AS IS - around is used a lot in AOP, so I think the audience will understand this usage-->The, +TR: REVISED, PLS REVIEW - I changed it to *in its default configuration*--></para>, +TR: OK AS IS - Errors aren't thrown by application code, only checked or unchecked exceptions are. So the Errors part is just clarifying that , +      metadata that can be consumed by something<!--Please identify *something* . , +TR: OK AS IS - it's not defined what this something is - could be code written by the user or could be an , +existing BeanPostProcessor provided or something else--> that is, +      <interfacename>@Transactional</interfacename>-aware and that can use the, +      metadata to configure the appropriate beans with transactional behavior., +      In the preceding example, the, +      <para>Consider the use of AspectJ mode (see mode attribute in table, +      below) if you expect self-invocations to be wrapped with transactions as, +      well. <!--*see below* is not clear re AspectJmode. Provide clear x-ref to mode in table below, or to Using Transactional with AspectJ section. Also clarify reference to *as well*. As well as what?--><!--Below, *in this case* meaning in *what* case? Explain what table shows. TR: REVISED, PLS REVIEW-->In, +        controllers, and not your services. <!--I don't understand the logic of preceding explanation. Also identify *it* in first sentence of Note. , +TR: OK AS IS - "it" refers to <tx:annotation-driven/>-->See <xref, +        linkend="mvc-servlet" /> for more information.</para>, +      transactional settings for a method. <!--Do you need to clarify what *most derived* location means? Lowest level? TR: OK AS IS - following sentence explains it-->In, +            does not.<!--Bullet list above does not exactly map to properties in table.ok? TR: OK AS IS--></para>, +        name + "." + <!--Meaning of symbols is unclear. TR: OK AS IS - means concatenation and it would be clear to any programmer reading the docs-->method, +        name of the transactionally-advised class. For example, if the, +TR: REVISED, PLS REVIEW - changed it back; it's not just settings, the section discusses propagation in general as well as the settings-->, +        <literal>PROPAGATION_REQUIRED</literal> behavior, all these scopes<!--OK? Need to identify *they*. TR: OK AS IS-->, +        to).<!--Do you need to explain what an inner transaction scope as opposed to an outer transaction scope? TR: OK AS IS--></para>, +      <title>Advising transactional operations<!--Need better heading? Executing transactional advice? TR: OK AS IS--></title>, +      method, you want to see the following actions:<!--I changed this to a numbered list because language indicated that one thing happens after another. TR: OK--></para>, +      <!--If you mean this code produces actions above, say that. TR: REVISED, PLS REVIEW - added 'discussed above'-->The, +TR: REVISED, PLS REVIEW - changed to 'desired'; seems clear that the desired order is profiling first followed by transactional aspect-->You, +      is higher than the transactional advice's order value.<!--Do you mean ...transactional advice *bean's* order value? TR: OK AS IS--></para>, +      based on your choice of transactional technologies and requirements.<!--for *what* requirements? Identify *their* TR: REVISED, PLS REVIEW - clarified this a bit-->]