[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/CssLinkResourceTransformer.java, +import java.util.SortedSet;, +import java.util.TreeSet;, +		SortedSet<ContentChunkInfo> links = new TreeSet<>();, +			parser.parse(content, links);, +		if (links.isEmpty()) {, +		for (ContentChunkInfo linkContentChunkInfo : links) {, +			writer.write(content.substring(index, linkContentChunkInfo.getStart()));, +			String link = content.substring(linkContentChunkInfo.getStart(), linkContentChunkInfo.getEnd());, +			index = linkContentChunkInfo.getEnd();, +	/**, +	 * Extract content chunks that represent links., +	 */, +		void parse(String content, SortedSet<ContentChunkInfo> result);, +		/** Return the keyword to use to search for links, e.g. "@import", "url(" */, +		public void parse(String content, SortedSet<ContentChunkInfo> result) {, +			int position = 0;, +			while (true) {, +				position = content.indexOf(getKeyword(), position);, +				if (position == -1) {, +					return;, +				position += getKeyword().length();, +				while (Character.isWhitespace(content.charAt(position))) {, +					position++;, +				if (content.charAt(position) == '\'') {, +					position = extractLink(position, "'", content, result);, +				}, +				else if (content.charAt(position) == '"') {, +					position = extractLink(position, "\"", content, result);, +					position = extractLink(position, content, result);, +		protected int extractLink(int index, String endKey, String content, SortedSet<ContentChunkInfo> linksToAdd) {, +			linksToAdd.add(new ContentChunkInfo(start, end));, +		protected abstract int extractLink(int index, String content,, +				SortedSet<ContentChunkInfo> linksToAdd);, +		protected int extractLink(int index, String content, SortedSet<ContentChunkInfo> linksToAdd) {, +		protected int extractLink(int index, String content, SortedSet<ContentChunkInfo> linksToAdd) {, +			return extractLink(index - 1, ")", content, linksToAdd);, +	private static class ContentChunkInfo implements Comparable<ContentChunkInfo> {, +		ContentChunkInfo(int start, int end) {, +		public int compareTo(ContentChunkInfo other) {, +			if (obj instanceof ContentChunkInfo) {, +				ContentChunkInfo other = (ContentChunkInfo) obj;]