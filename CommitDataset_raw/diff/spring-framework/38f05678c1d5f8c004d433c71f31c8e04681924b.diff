[+++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriComponents.java, +	public UriComponents expand(Map<String, ?> map) {, +		Assert.notNull(map, "'uriVariables' must not be null");, +		return expandInternal(new MapTemplateVariables(map));, +	}, +, +	/**, +	 * Replaces all URI template variables with the values from a given array. The array represent variable values., +	 * The order of variables is significant., +, +	 * @param uriVariableValues URI variable values, +	 * @return the expanded uri components, +	 */, +	public UriComponents expand(Object... uriVariableValues) {, +		Assert.notNull(uriVariableValues, "'uriVariableValues' must not be null");, +, +		return expandInternal(new VarArgsTemplateVariables(uriVariableValues));, +	}, +, +	private UriComponents expandInternal(UriTemplateVariables uriVariables) {, +	private static String expandUriComponent(String source, UriTemplateVariables uriVariables) {, +			Object variableValue = uriVariables.getValue(variableName);, +			String variableValueString = getVariableValueAsString(variableValue);, +			String replacement = Matcher.quoteReplacement(variableValueString);, +		PathComponent expand(UriTemplateVariables uriVariables);, +		public PathComponent expand(UriTemplateVariables uriVariables) {, +		public PathComponent expand(UriTemplateVariables uriVariables) {, +		public PathComponent expand(UriTemplateVariables uriVariables) {, +	/**, +	 * Defines the contract for URI Template variables, +	 *, +	 * @see UriComponents#expand, +	 */, +	private interface UriTemplateVariables {, +, +		Object getValue(String name);, +, +, +	}, +, +	/**, +	 * URI template variables backed by a map., +	 */, +	private static class MapTemplateVariables implements UriTemplateVariables {, +, +		private final Map<String, ?> uriVariables;, +, +		public MapTemplateVariables(Map<String, ?> uriVariables) {, +			this.uriVariables = uriVariables;, +		}, +, +		public Object getValue(String name) {, +			return this.uriVariables.get(name);, +		}, +	}, +, +	/**, +	 * URI template variables backed by a variable argument array., +	 */, +	private static class VarArgsTemplateVariables implements UriTemplateVariables {, +		private final Iterator<Object> valueIterator;, +, +		public VarArgsTemplateVariables(Object... uriVariableValues) {, +			this.valueIterator = Arrays.asList(uriVariableValues).iterator();, +		}, +, +		public Object getValue(String name) {, +			if (!valueIterator.hasNext()) {, +				throw new IllegalArgumentException("Not enough variable values available to expand [" + name + "]");, +			}, +			return valueIterator.next();, +		}, +	}, +]