[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/PropertyEditorRegistry.java, +	void registerCustomEditor(Class<?> requiredType, PropertyEditor propertyEditor);, +	void registerCustomEditor(Class<?> requiredType, String propertyPath, PropertyEditor propertyEditor);, +	PropertyEditor findCustomEditor(Class<?> requiredType, String propertyPath);, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/PropertyEditorRegistry.java, +	void registerCustomEditor(Class<?> requiredType, PropertyEditor propertyEditor);, +	void registerCustomEditor(Class<?> requiredType, String propertyPath, PropertyEditor propertyEditor);, +	PropertyEditor findCustomEditor(Class<?> requiredType, String propertyPath);, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractBindingResult.java, +@SuppressWarnings("serial"), +		Class<?> fieldType = getFieldType(field);, +	public Class<?> getFieldType(String field) {, +	public PropertyEditor findEditor(String field, Class<?> valueType) {, +			Class<?> valueTypeToUse = valueType;, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/PropertyEditorRegistry.java, +	void registerCustomEditor(Class<?> requiredType, PropertyEditor propertyEditor);, +	void registerCustomEditor(Class<?> requiredType, String propertyPath, PropertyEditor propertyEditor);, +	PropertyEditor findCustomEditor(Class<?> requiredType, String propertyPath);, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractBindingResult.java, +@SuppressWarnings("serial"), +		Class<?> fieldType = getFieldType(field);, +	public Class<?> getFieldType(String field) {, +	public PropertyEditor findEditor(String field, Class<?> valueType) {, +			Class<?> valueTypeToUse = valueType;, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractErrors.java, +@SuppressWarnings("serial"), +		List<ObjectError> globalErrors = getGlobalErrors();, +		return (!globalErrors.isEmpty() ? globalErrors.get(0) : null);, +		List<FieldError> fieldErrors = getFieldErrors();, +		return (!fieldErrors.isEmpty() ? fieldErrors.get(0) : null);, +		List<FieldError> fieldErrors = getFieldErrors(field);, +	public Class<?> getFieldType(String field) {, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/PropertyEditorRegistry.java, +	void registerCustomEditor(Class<?> requiredType, PropertyEditor propertyEditor);, +	void registerCustomEditor(Class<?> requiredType, String propertyPath, PropertyEditor propertyEditor);, +	PropertyEditor findCustomEditor(Class<?> requiredType, String propertyPath);, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractBindingResult.java, +@SuppressWarnings("serial"), +		Class<?> fieldType = getFieldType(field);, +	public Class<?> getFieldType(String field) {, +	public PropertyEditor findEditor(String field, Class<?> valueType) {, +			Class<?> valueTypeToUse = valueType;, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractErrors.java, +@SuppressWarnings("serial"), +		List<ObjectError> globalErrors = getGlobalErrors();, +		return (!globalErrors.isEmpty() ? globalErrors.get(0) : null);, +		List<FieldError> fieldErrors = getFieldErrors();, +		return (!fieldErrors.isEmpty() ? fieldErrors.get(0) : null);, +		List<FieldError> fieldErrors = getFieldErrors(field);, +	public Class<?> getFieldType(String field) {, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractPropertyBindingResult.java, +@SuppressWarnings("serial"), +	public Class<?> getFieldType(String field) {, +		Class<?> targetType = getPropertyAccessor().getPropertyType(fixedField);, +	public PropertyEditor findEditor(String field, Class<?> valueType) {, +		Class<?> valueTypeForLookup = valueType;, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/PropertyEditorRegistry.java, +	void registerCustomEditor(Class<?> requiredType, PropertyEditor propertyEditor);, +	void registerCustomEditor(Class<?> requiredType, String propertyPath, PropertyEditor propertyEditor);, +	PropertyEditor findCustomEditor(Class<?> requiredType, String propertyPath);, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractBindingResult.java, +@SuppressWarnings("serial"), +		Class<?> fieldType = getFieldType(field);, +	public Class<?> getFieldType(String field) {, +	public PropertyEditor findEditor(String field, Class<?> valueType) {, +			Class<?> valueTypeToUse = valueType;, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractErrors.java, +@SuppressWarnings("serial"), +		List<ObjectError> globalErrors = getGlobalErrors();, +		return (!globalErrors.isEmpty() ? globalErrors.get(0) : null);, +		List<FieldError> fieldErrors = getFieldErrors();, +		return (!fieldErrors.isEmpty() ? fieldErrors.get(0) : null);, +		List<FieldError> fieldErrors = getFieldErrors(field);, +	public Class<?> getFieldType(String field) {, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractPropertyBindingResult.java, +@SuppressWarnings("serial"), +	public Class<?> getFieldType(String field) {, +		Class<?> targetType = getPropertyAccessor().getPropertyType(fixedField);, +	public PropertyEditor findEditor(String field, Class<?> valueType) {, +		Class<?> valueTypeForLookup = valueType;, +++ b/org.springframework.context/src/main/java/org/springframework/validation/BeanPropertyBindingResult.java, +@SuppressWarnings("serial"), +++ b/org.springframework.beans/src/main/java/org/springframework/beans/PropertyEditorRegistry.java, +	void registerCustomEditor(Class<?> requiredType, PropertyEditor propertyEditor);, +	void registerCustomEditor(Class<?> requiredType, String propertyPath, PropertyEditor propertyEditor);, +	PropertyEditor findCustomEditor(Class<?> requiredType, String propertyPath);, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractBindingResult.java, +@SuppressWarnings("serial"), +		Class<?> fieldType = getFieldType(field);, +	public Class<?> getFieldType(String field) {, +	public PropertyEditor findEditor(String field, Class<?> valueType) {, +			Class<?> valueTypeToUse = valueType;, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractErrors.java, +@SuppressWarnings("serial"), +		List<ObjectError> globalErrors = getGlobalErrors();, +		return (!globalErrors.isEmpty() ? globalErrors.get(0) : null);, +		List<FieldError> fieldErrors = getFieldErrors();, +		return (!fieldErrors.isEmpty() ? fieldErrors.get(0) : null);, +		List<FieldError> fieldErrors = getFieldErrors(field);, +	public Class<?> getFieldType(String field) {]