[+++ b/src/docs/asciidoc/data-access-appendix.adoc, +		xmlns:tx="http://www.springframework.org/schema/tx" <1>, +		xsi:schemaLocation=", +			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">, +, +		<!-- bean definitions here -->, +<1> Declare usage of the `tx` namespace., +		xmlns:jdbc="http://www.springframework.org/schema/jdbc" <1>, +		xsi:schemaLocation=", +			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd"> <2>, +, +		<!-- bean definitions here -->, +<1> Declare usage of the `jdbc` namespace., +++ b/src/docs/asciidoc/data-access-appendix.adoc, +		xmlns:tx="http://www.springframework.org/schema/tx" <1>, +		xsi:schemaLocation=", +			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">, +, +		<!-- bean definitions here -->, +<1> Declare usage of the `tx` namespace., +		xmlns:jdbc="http://www.springframework.org/schema/jdbc" <1>, +		xsi:schemaLocation=", +			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd"> <2>, +, +		<!-- bean definitions here -->, +<1> Declare usage of the `jdbc` namespace., +++ b/src/docs/asciidoc/testing.adoc, +	@DirtiesContext <1>, +++ b/src/docs/asciidoc/data-access-appendix.adoc, +		xmlns:tx="http://www.springframework.org/schema/tx" <1>, +		xsi:schemaLocation=", +			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">, +, +		<!-- bean definitions here -->, +<1> Declare usage of the `tx` namespace., +		xmlns:jdbc="http://www.springframework.org/schema/jdbc" <1>, +		xsi:schemaLocation=", +			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd"> <2>, +, +		<!-- bean definitions here -->, +<1> Declare usage of the `jdbc` namespace., +++ b/src/docs/asciidoc/testing.adoc, +	@DirtiesContext <1>, +++ b/src/docs/asciidoc/web/webflux-webclient.adoc, +You can share resources between multiple instances of the Jetty client (and server) and, +ensure that the resources are shut down when the Spring `ApplicationContext` is closed by, +declaring a Spring-managed bean of type `JettyResourceFactory`, as the following example, +shows:, +	public JettyResourceFactory resourceFactory() { <1>, +				new JettyClientHttpConnector(resourceFactory(), customizer); <2>, +		return WebClient.builder().clientConnector(connector).build(); <3>, +<1> Create resource factory for shared resources., +++ b/src/docs/asciidoc/data-access-appendix.adoc, +		xmlns:tx="http://www.springframework.org/schema/tx" <1>, +		xsi:schemaLocation=", +			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">, +, +		<!-- bean definitions here -->, +<1> Declare usage of the `tx` namespace., +		xmlns:jdbc="http://www.springframework.org/schema/jdbc" <1>, +		xsi:schemaLocation=", +			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd"> <2>, +, +		<!-- bean definitions here -->, +<1> Declare usage of the `jdbc` namespace., +++ b/src/docs/asciidoc/testing.adoc, +	@DirtiesContext <1>, +++ b/src/docs/asciidoc/web/webflux-webclient.adoc, +You can share resources between multiple instances of the Jetty client (and server) and, +ensure that the resources are shut down when the Spring `ApplicationContext` is closed by, +declaring a Spring-managed bean of type `JettyResourceFactory`, as the following example, +shows:, +	public JettyResourceFactory resourceFactory() { <1>, +				new JettyClientHttpConnector(resourceFactory(), customizer); <2>, +		return WebClient.builder().clientConnector(connector).build(); <3>, +<1> Create resource factory for shared resources., +++ b/src/docs/asciidoc/web/webmvc.adoc, +The following example uses the `@SessionAttributes` annotation:, +	@SessionAttributes("pet") <1>, +<1> Using the `@SessionAttributes` annotation., +				status.setComplete(); <2>, +<1> Storing the `Pet` value in the Servlet session., +<2> Clearing the `Pet` value from the Servlet session., +	public String handle(@RequestAttribute Client client) { <1>, +<1> Using the `@RequestAttribute` annotation., +++ b/src/docs/asciidoc/data-access-appendix.adoc, +		xmlns:tx="http://www.springframework.org/schema/tx" <1>, +		xsi:schemaLocation=", +			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">, +, +		<!-- bean definitions here -->, +<1> Declare usage of the `tx` namespace., +		xmlns:jdbc="http://www.springframework.org/schema/jdbc" <1>, +		xsi:schemaLocation=", +			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd"> <2>, +, +		<!-- bean definitions here -->, +<1> Declare usage of the `jdbc` namespace., +++ b/src/docs/asciidoc/testing.adoc, +	@DirtiesContext <1>]