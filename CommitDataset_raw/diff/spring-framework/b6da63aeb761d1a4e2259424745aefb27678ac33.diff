[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultRenderingResponseBuilder.java, +			MediaType contentType = exchange.getResponse().getHeaders().getContentType();, +						return view.render(model(),, +								contentType == null && !mediaTypes.isEmpty() ? mediaTypes.get(0) : contentType,, +								exchange);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultRenderingResponseBuilder.java, +			MediaType contentType = exchange.getResponse().getHeaders().getContentType();, +						return view.render(model(),, +								contentType == null && !mediaTypes.isEmpty() ? mediaTypes.get(0) : contentType,, +								exchange);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageReaderArgumentResolver.java, +		isBodyRequired = isBodyRequired || (adapter != null && !adapter.supportsEmpty());, +					if (isBodyRequired) {, +						flux = flux.switchIfEmpty(Flux.error(() -> handleMissingBody(bodyParam)));, +					if (isBodyRequired) {, +						mono = mono.switchIfEmpty(Mono.error(() -> handleMissingBody(bodyParam)));, +			if (isBodyRequired) {, +				body = body.switchIfEmpty(Mono.error(() -> handleMissingBody(bodyParam)));]