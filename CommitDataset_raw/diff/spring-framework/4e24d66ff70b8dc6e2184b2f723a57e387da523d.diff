[+++ b/build.gradle, +		"http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.3.0/",, +++ b/build.gradle, +		"http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.3.0/",, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, +/*, + * Copyright 2002-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.http.converter.json;, +, +import java.text.DateFormat;, +import java.text.SimpleDateFormat;, +import java.util.HashMap;, +import java.util.LinkedHashMap;, +import java.util.LinkedList;, +import java.util.List;, +import java.util.Map;, +, +import com.fasterxml.jackson.annotation.JsonInclude;, +import com.fasterxml.jackson.core.JsonGenerator;, +import com.fasterxml.jackson.core.JsonParser;, +import com.fasterxml.jackson.databind.AnnotationIntrospector;, +import com.fasterxml.jackson.databind.DeserializationFeature;, +import com.fasterxml.jackson.databind.JsonDeserializer;, +import com.fasterxml.jackson.databind.JsonSerializer;, +import com.fasterxml.jackson.databind.MapperFeature;, +import com.fasterxml.jackson.databind.Module;, +import com.fasterxml.jackson.databind.ObjectMapper;, +import com.fasterxml.jackson.databind.PropertyNamingStrategy;, +import com.fasterxml.jackson.databind.SerializationFeature;, +import com.fasterxml.jackson.databind.module.SimpleModule;, +import com.fasterxml.jackson.dataformat.xml.XmlMapper;, +, +import org.springframework.beans.BeanUtils;, +import org.springframework.beans.FatalBeanException;, +import org.springframework.util.Assert;, +import org.springframework.util.ClassUtils;, +, +/**, + * A builder used to create {@link ObjectMapper} instances with a fluent API., + *, + * <p>Note that Jackson's JSR-310 and Joda-Time support modules will be registered automatically, + * when available (and when Java 8 and Joda-Time themselves are available, respectively)., + *, + * <p>Tested against Jackson 2.2 and 2.3; compatible with Jackson 2.0 and higher., + *, + * @author Sebastien Deleuze, + * @since 4.1.1, + */, +public class Jackson2ObjectMapperBuilder {, +, +	private static final boolean jackson2XmlPresent =, +			ClassUtils.isPresent("com.fasterxml.jackson.dataformat.xml.XmlMapper", getClassLoader());, +, +	private ObjectMapper objectMapper;, +, +	private boolean createXmlMapper = false;, +, +	private DateFormat dateFormat;, +, +	private JsonInclude.Include serializationInclusion;, +, +	private AnnotationIntrospector annotationIntrospector;, +, +	private final Map<Class<?>, JsonSerializer<?>>, +			serializers = new LinkedHashMap<Class<?>, JsonSerializer<?>>();, +, +	private final Map<Class<?>, JsonDeserializer<?>>, +			deserializers = new LinkedHashMap<Class<?>, JsonDeserializer<?>>();, +, +	private final Map<Object, Boolean> features = new HashMap<Object, Boolean>();, +, +	private List<Module> modules;, +, +	private Class<? extends Module>[] modulesToInstall;, +, +	private boolean findModulesViaServiceLoader;, +, +	private PropertyNamingStrategy propertyNamingStrategy;, +, +, +	private Jackson2ObjectMapperBuilder() {, +	}, +, +	private Jackson2ObjectMapperBuilder(ObjectMapper objectMapper) {, +		this.objectMapper = objectMapper;, +	}]