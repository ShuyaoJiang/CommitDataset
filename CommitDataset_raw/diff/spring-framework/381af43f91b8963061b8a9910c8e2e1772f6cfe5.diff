[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMethodAdapter.java, +import org.springframework.web.bind.WebDataBinder;, +import org.springframework.web.bind.annotation.SessionAttributes;, +import org.springframework.web.method.annotation.InitBinderMethodDataBinderFactory;, + * A {@link AbstractHandlerMethodAdapter} variant with support for invoking {@link RequestMapping} handler methods., + * , + * <p>Invoking a {@link RequestMapping} method typically involves the invocation of other handler methods such as , + * {@link ModelAttribute} methods for contributing attributes to the model and {@link InitBinder} methods for , + * initializing {@link WebDataBinder} instances for data binding and type conversion purposes., + * , + * <p>{@link InvocableHandlerMethod} is the key contributing class that helps with the invocation of any handler , + * method after resolving its arguments through a set of {@link HandlerMethodArgumentResolver}s. , + * {@link ServletInvocableHandlerMethod} on the other hand, handles the return value through a set of , + * {@link HandlerMethodReturnValueHandler}s resulting in a {@link ModelAndView} when view resolution applies., + * , + * <p>Specifically assisting with the invocation of {@link ModelAttribute} methods is the {@link ModelFactory} while , + * the invocation of {@link InitBinder} methods is done with the help of the {@link InitBinderMethodDataBinderFactory},, + * which is passed on to {@link HandlerMethodArgumentResolver}s where data binder instances are needed., + * , + * <p>This class is the central point that assembles all of the above mentioned contributors and drives them while, + * also invoking the actual {@link RequestMapping} handler method through a {@link ServletInvocableHandlerMethod}.  , + * @see InvocableHandlerMethod, + * @see ServletInvocableHandlerMethod, + * @see HandlerMethodArgumentResolver, + * @see HandlerMethodReturnValueHandler, +	 * <p>Note: this is provided for backward compatibility. The preferred way to do this is to , +	 * implement a {@link HandlerMethodArgumentResolver}., +	 * <p>Note: this is provided for backward compatibility. The preferred way to do this is to , +	 * implement a {@link HandlerMethodReturnValueHandler}., +	/**, +	 * Whether the given handler type defines any handler-specific session attributes via {@link SessionAttributes}. , +	 * Also initializes the sessionAttributesHandlerCache for the given handler type. , +	 */, +	/**, +	 * Invoke the {@link RequestMapping} handler method preparing a {@link ModelAndView} if view resolution is required., +	 */, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMethodAdapter.java, +import org.springframework.web.bind.WebDataBinder;, +import org.springframework.web.bind.annotation.SessionAttributes;, +import org.springframework.web.method.annotation.InitBinderMethodDataBinderFactory;, + * A {@link AbstractHandlerMethodAdapter} variant with support for invoking {@link RequestMapping} handler methods., + * , + * <p>Invoking a {@link RequestMapping} method typically involves the invocation of other handler methods such as , + * {@link ModelAttribute} methods for contributing attributes to the model and {@link InitBinder} methods for , + * initializing {@link WebDataBinder} instances for data binding and type conversion purposes., + * , + * <p>{@link InvocableHandlerMethod} is the key contributing class that helps with the invocation of any handler , + * method after resolving its arguments through a set of {@link HandlerMethodArgumentResolver}s. , + * {@link ServletInvocableHandlerMethod} on the other hand, handles the return value through a set of , + * {@link HandlerMethodReturnValueHandler}s resulting in a {@link ModelAndView} when view resolution applies., + * , + * <p>Specifically assisting with the invocation of {@link ModelAttribute} methods is the {@link ModelFactory} while , + * the invocation of {@link InitBinder} methods is done with the help of the {@link InitBinderMethodDataBinderFactory},, + * which is passed on to {@link HandlerMethodArgumentResolver}s where data binder instances are needed., + * , + * <p>This class is the central point that assembles all of the above mentioned contributors and drives them while, + * also invoking the actual {@link RequestMapping} handler method through a {@link ServletInvocableHandlerMethod}.  , + * @see InvocableHandlerMethod, + * @see ServletInvocableHandlerMethod, + * @see HandlerMethodArgumentResolver, + * @see HandlerMethodReturnValueHandler, +	 * <p>Note: this is provided for backward compatibility. The preferred way to do this is to , +	 * implement a {@link HandlerMethodArgumentResolver}., +	 * <p>Note: this is provided for backward compatibility. The preferred way to do this is to , +	 * implement a {@link HandlerMethodReturnValueHandler}., +	/**, +	 * Whether the given handler type defines any handler-specific session attributes via {@link SessionAttributes}. , +	 * Also initializes the sessionAttributesHandlerCache for the given handler type. , +	 */, +	/**, +	 * Invoke the {@link RequestMapping} handler method preparing a {@link ModelAndView} if view resolution is required., +	 */, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMethodExceptionResolver.java, +import org.springframework.web.bind.annotation.RequestMapping;, + * An {@link AbstractHandlerMethodExceptionResolver} that looks for an {@link ExceptionHandler}-annotated method , + * that can handle a thrown exception. If a match is found the exception-handling method is invoked to finish , + * processing the request., + * <p>{@link ExceptionMethodMapping} is a key contributing class storing method-to-exception type mappings extracted, + * from {@link ExceptionHandler} annotations or from the list of method arguments on the exception-handling method., + * {@link ExceptionMethodMapping} assists with actually locating a method for a thrown exception.  , + * , + * <p>Once located the invocation of the exception-handling method is done using much of the same classes, + * used for {@link RequestMapping} methods, which is described under {@link RequestMappingHandlerMethodAdapter}., + *  , + * <p>See {@link ExceptionHandler} for information on supported method arguments and return values for , + * exception-handling methods. , +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMethodAdapter.java, +import org.springframework.web.bind.WebDataBinder;, +import org.springframework.web.bind.annotation.SessionAttributes;, +import org.springframework.web.method.annotation.InitBinderMethodDataBinderFactory;, + * A {@link AbstractHandlerMethodAdapter} variant with support for invoking {@link RequestMapping} handler methods., + * , + * <p>Invoking a {@link RequestMapping} method typically involves the invocation of other handler methods such as , + * {@link ModelAttribute} methods for contributing attributes to the model and {@link InitBinder} methods for , + * initializing {@link WebDataBinder} instances for data binding and type conversion purposes., + * , + * <p>{@link InvocableHandlerMethod} is the key contributing class that helps with the invocation of any handler , + * method after resolving its arguments through a set of {@link HandlerMethodArgumentResolver}s. , + * {@link ServletInvocableHandlerMethod} on the other hand, handles the return value through a set of , + * {@link HandlerMethodReturnValueHandler}s resulting in a {@link ModelAndView} when view resolution applies.]