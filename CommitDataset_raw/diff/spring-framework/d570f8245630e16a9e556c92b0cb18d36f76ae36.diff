[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/HeaderAssertions.java, +	public WebTestClient.ResponseSpec expires(long expires) {, +	public WebTestClient.ResponseSpec lastModified(long lastModified) {, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/HeaderAssertions.java, +	public WebTestClient.ResponseSpec expires(long expires) {, +	public WebTestClient.ResponseSpec lastModified(long lastModified) {, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/HeaderAssertionTests.java, +import java.time.ZoneId;, +import java.time.ZonedDateTime;, +	@Test, +	public void expires() {, +		HttpHeaders headers = new HttpHeaders();, +		ZonedDateTime expires = ZonedDateTime.of(2018, 1, 1, 0, 0, 0, 0, ZoneId.of("UTC"));, +		headers.setExpires(expires);, +		HeaderAssertions assertions = headerAssertions(headers);, +		assertions.expires(expires.toInstant().toEpochMilli());, +		try {, +			assertions.expires(expires.toInstant().toEpochMilli() + 1);, +			fail("Wrong value expected");, +		}, +		catch (AssertionError error) {, +			// Expected, +		}, +	}, +, +	@Test, +	public void lastModified() {, +		HttpHeaders headers = new HttpHeaders();, +		ZonedDateTime lastModified = ZonedDateTime.of(2018, 1, 1, 0, 0, 0, 0, ZoneId.of("UTC"));, +		headers.setLastModified(lastModified.toInstant().toEpochMilli());, +		HeaderAssertions assertions = headerAssertions(headers);, +		assertions.lastModified(lastModified.toInstant().toEpochMilli());, +		try {, +			assertions.lastModified(lastModified.toInstant().toEpochMilli() + 1);, +			fail("Wrong value expected");, +		}, +		catch (AssertionError error) {, +			// Expected, +		}, +	}]