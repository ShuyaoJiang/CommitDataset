[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketNamespaceUtils.java, +			attrValue = sockJsElement.getAttribute("suppress-cors");, +			if (!attrValue.isEmpty()) {, +				sockJsServiceDef.getPropertyValues().add("suppressCors", Boolean.valueOf(attrValue));, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketNamespaceUtils.java, +			attrValue = sockJsElement.getAttribute("suppress-cors");, +			if (!attrValue.isEmpty()) {, +				sockJsServiceDef.getPropertyValues().add("suppressCors", Boolean.valueOf(attrValue));, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/SockJsServiceRegistration.java, +	private Boolean suppressCors;, +, +	 * This option can be used to disable automatic addition of CORS headers for, +	 * SockJS requests., +	 * <p>The default value is "false"., +	 * @since 4.1.2, +	 */, +	public SockJsServiceRegistration setSupressCors(boolean suppressCors) {, +		this.suppressCors = suppressCors;, +		return this;, +	}, +, +	/**, +		if (this.suppressCors != null) {, +			service.setSuppressCors(this.suppressCors);, +		}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketNamespaceUtils.java, +			attrValue = sockJsElement.getAttribute("suppress-cors");, +			if (!attrValue.isEmpty()) {, +				sockJsServiceDef.getPropertyValues().add("suppressCors", Boolean.valueOf(attrValue));, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/SockJsServiceRegistration.java, +	private Boolean suppressCors;, +, +	 * This option can be used to disable automatic addition of CORS headers for, +	 * SockJS requests., +	 * <p>The default value is "false"., +	 * @since 4.1.2, +	 */, +	public SockJsServiceRegistration setSupressCors(boolean suppressCors) {, +		this.suppressCors = suppressCors;, +		return this;, +	}, +, +	/**, +		if (this.suppressCors != null) {, +			service.setSuppressCors(this.suppressCors);, +		}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java, +	private boolean suppressCors = false;, +, +	 * This option can be used to disable automatic addition of CORS headers for, +	 * SockJS requests., +	 * <p>The default value is "false"., +	 * @since 4.1.2, +	 */, +	public void setSuppressCors(boolean suppressCors) {, +		this.suppressCors = suppressCors;, +	}, +, +	/**, +	 * @since 4.1.2, +	 * @see #setSuppressCors(boolean), +	 */, +	public boolean shouldSuppressCors() {, +		return this.suppressCors;, +	}, +, +	/**, +		if(!this.suppressCors && origin != null && !hasCorsResponseHeaders) {, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketNamespaceUtils.java, +			attrValue = sockJsElement.getAttribute("suppress-cors");, +			if (!attrValue.isEmpty()) {, +				sockJsServiceDef.getPropertyValues().add("suppressCors", Boolean.valueOf(attrValue));, +			}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/SockJsServiceRegistration.java, +	private Boolean suppressCors;, +, +	 * This option can be used to disable automatic addition of CORS headers for, +	 * SockJS requests., +	 * <p>The default value is "false"., +	 * @since 4.1.2, +	 */, +	public SockJsServiceRegistration setSupressCors(boolean suppressCors) {, +		this.suppressCors = suppressCors;, +		return this;, +	}, +, +	/**, +		if (this.suppressCors != null) {, +			service.setSuppressCors(this.suppressCors);, +		}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java, +	private boolean suppressCors = false;, +, +	 * This option can be used to disable automatic addition of CORS headers for, +	 * SockJS requests., +	 * <p>The default value is "false"., +	 * @since 4.1.2]