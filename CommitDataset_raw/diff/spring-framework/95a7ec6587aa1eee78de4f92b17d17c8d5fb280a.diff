[+++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/annotation/AnnotationJmxAttributeSource.java, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/annotation/AnnotationJmxAttributeSource.java, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/annotation/ManagedResource.java, + * Copyright 2002-2009 the original author or authors., +import java.lang.annotation.Inherited;, + * JDK 1.5+ class-level annotation that indicates to register instances of a, + * class with a JMX server, corresponding to the ManagedResource attribute., + *, + * <p><b>Note:</b> This annotation is marked as inherited, allowing for generic, + * management-aware base classes. In such a scenario, it is recommended to, + * <i>not</i> specify an object name value since this would lead to naming, + * collisions in case of multiple subclasses getting registered., +@Inherited, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/annotation/AnnotationJmxAttributeSource.java, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/annotation/ManagedResource.java, + * Copyright 2002-2009 the original author or authors., +import java.lang.annotation.Inherited;, + * JDK 1.5+ class-level annotation that indicates to register instances of a, + * class with a JMX server, corresponding to the ManagedResource attribute., + *, + * <p><b>Note:</b> This annotation is marked as inherited, allowing for generic, + * management-aware base classes. In such a scenario, it is recommended to, + * <i>not</i> specify an object name value since this would lead to naming, + * collisions in case of multiple subclasses getting registered., +@Inherited, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/naming/MetadataNamingStrategy.java, + * Copyright 2002-2009 the original author or authors., + * {@link org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource}, + * introspects a well-defined set of Java 5 annotations that come with Spring., + * @see org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource, +				Hashtable<String, String> properties = new Hashtable<String, String>();]