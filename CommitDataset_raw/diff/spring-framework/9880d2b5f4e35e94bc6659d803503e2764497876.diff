[+++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.java, +	 * Set the same property on ScheduledExecutorService (JDK 1.7+)., +	 * There is no default. If not set, the executor property is not set., +		if (executor instanceof ScheduledThreadPoolExecutor && this.removeOnCancelPolicy != null) {, +			((ScheduledThreadPoolExecutor) executor).setRemoveOnCancelPolicy(this.removeOnCancelPolicy);, +++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.java, +	 * Set the same property on ScheduledExecutorService (JDK 1.7+)., +	 * There is no default. If not set, the executor property is not set., +		if (executor instanceof ScheduledThreadPoolExecutor && this.removeOnCancelPolicy != null) {, +			((ScheduledThreadPoolExecutor) executor).setRemoveOnCancelPolicy(this.removeOnCancelPolicy);, +++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java, + * @see #setRemoveOnCancelPolicy, +	 * Set the same property on ScheduledExecutorService (JDK 1.7+)., +	 * There is no default. If not set, the executor property is not set., +			((ScheduledThreadPoolExecutor) this.scheduledExecutor).setRemoveOnCancelPolicy(removeOnCancelPolicy);, +		if (this.scheduledExecutor instanceof ScheduledThreadPoolExecutor && this.removeOnCancelPolicy != null) {, +			((ScheduledThreadPoolExecutor) this.scheduledExecutor).setRemoveOnCancelPolicy(this.removeOnCancelPolicy);, +		if (this.scheduledExecutor == null) {, +			// Not initialized yet: return false (the default of the executor), +			return false;, +		}, +		return getScheduledThreadPoolExecutor().getRemoveOnCancelPolicy();]