[+++ b/spring-framework-reference/src/jms.xml, +    that simplify the use of the JMS by handling the creation and release of, +      receiving messages.</para>, +      transaction management and perform pooling of connections and sessions., +      In order to use this implementation, Java EE containers typically, +      require that you declare a JMS connection factory as a, +      Even though the creation of dynamic destinations is not part of the JMS, +      This property used by <classname>JmsTemplate</classname> determines the, +      behavior of dynamic destination resolution via implementations of the, +      <interfacename>DestinationResolver</interfacename> interface.</para>, +        configured with a <classname>JtaTransactionManager</classname>; so, +        processing may take advantage of XA transaction semantics. This, +        listener container strikes a good balance between low requirements on, +        the JMS provider, advanced functionality such as transaction, +      message listener container implementations that ship with Spring have, +      server's configuration of JNDI resources.) This allows message reception, +    MessageListener) and any provider-specific ActivationSpec object. Check, +    subclasses for more details on the individual properties. The Javadoc also]