[+++ b/spring-beans/src/main/java/org/springframework/beans/annotation/AnnotationBeanUtils.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.util.StringValueResolver;, +	 * @param ann the annotation to copy from, +	 * @param bean the bean instance to copy to, +	 * @param excludedProperties the names of excluded properties, if any, +		copyPropertiesToBean(ann, bean, null, excludedProperties);, +	}, +, +	/**, +	 * Copy the properties of the supplied {@link Annotation} to the supplied target bean., +	 * Any properties defined in <code>excludedProperties</code> will not be copied., +	 * <p>A specified value resolver may resolve placeholders in property values, for example., +	 * @param ann the annotation to copy from, +	 * @param bean the bean instance to copy to, +	 * @param valueResolver a resolve to post-process String property values (may be <code>null</code>), +	 * @param excludedProperties the names of excluded properties, if any, +	 * @see org.springframework.beans.BeanWrapper, +	 */, +	public static void copyPropertiesToBean(Annotation ann, Object bean, StringValueResolver valueResolver, String... excludedProperties) {, +				if (valueResolver != null && value instanceof String) {, +					value = valueResolver.resolveStringValue((String) value);, +				}, +++ b/spring-beans/src/main/java/org/springframework/beans/annotation/AnnotationBeanUtils.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.util.StringValueResolver;, +	 * @param ann the annotation to copy from, +	 * @param bean the bean instance to copy to, +	 * @param excludedProperties the names of excluded properties, if any, +		copyPropertiesToBean(ann, bean, null, excludedProperties);, +	}, +, +	/**, +	 * Copy the properties of the supplied {@link Annotation} to the supplied target bean., +	 * Any properties defined in <code>excludedProperties</code> will not be copied., +	 * <p>A specified value resolver may resolve placeholders in property values, for example., +	 * @param ann the annotation to copy from, +	 * @param bean the bean instance to copy to, +	 * @param valueResolver a resolve to post-process String property values (may be <code>null</code>), +	 * @param excludedProperties the names of excluded properties, if any, +	 * @see org.springframework.beans.BeanWrapper, +	 */, +	public static void copyPropertiesToBean(Annotation ann, Object bean, StringValueResolver valueResolver, String... excludedProperties) {, +				if (valueResolver != null && value instanceof String) {, +					value = valueResolver.resolveStringValue((String) value);, +				}, +++ b/spring-context/src/main/java/org/springframework/jmx/export/annotation/AnnotationJmxAttributeSource.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.context.EmbeddedValueResolverAware;, +import org.springframework.util.StringValueResolver;, +public class AnnotationJmxAttributeSource implements JmxAttributeSource, EmbeddedValueResolverAware {, +, +	private StringValueResolver embeddedValueResolver;, +, +, +	public void setEmbeddedValueResolver(StringValueResolver resolver) {, +		this.embeddedValueResolver = resolver;, +	}, +, +		AnnotationBeanUtils.copyPropertiesToBean(ann, managedResource, this.embeddedValueResolver);, +			String value = ann.value();, +			if (this.embeddedValueResolver != null) {, +				value = this.embeddedValueResolver.resolveStringValue(value);, +			}, +			managedResource.setObjectName(value);, +++ b/spring-beans/src/main/java/org/springframework/beans/annotation/AnnotationBeanUtils.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.util.StringValueResolver;, +	 * @param ann the annotation to copy from, +	 * @param bean the bean instance to copy to, +	 * @param excludedProperties the names of excluded properties, if any, +		copyPropertiesToBean(ann, bean, null, excludedProperties);, +	}, +, +	/**, +	 * Copy the properties of the supplied {@link Annotation} to the supplied target bean., +	 * Any properties defined in <code>excludedProperties</code> will not be copied., +	 * <p>A specified value resolver may resolve placeholders in property values, for example., +	 * @param ann the annotation to copy from, +	 * @param bean the bean instance to copy to, +	 * @param valueResolver a resolve to post-process String property values (may be <code>null</code>), +	 * @param excludedProperties the names of excluded properties, if any, +	 * @see org.springframework.beans.BeanWrapper, +	 */, +	public static void copyPropertiesToBean(Annotation ann, Object bean, StringValueResolver valueResolver, String... excludedProperties) {, +				if (valueResolver != null && value instanceof String) {, +					value = valueResolver.resolveStringValue((String) value);, +				}, +++ b/spring-context/src/main/java/org/springframework/jmx/export/annotation/AnnotationJmxAttributeSource.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.context.EmbeddedValueResolverAware;, +import org.springframework.util.StringValueResolver;, +public class AnnotationJmxAttributeSource implements JmxAttributeSource, EmbeddedValueResolverAware {, +, +	private StringValueResolver embeddedValueResolver;, +, +, +	public void setEmbeddedValueResolver(StringValueResolver resolver) {, +		this.embeddedValueResolver = resolver;, +	}]