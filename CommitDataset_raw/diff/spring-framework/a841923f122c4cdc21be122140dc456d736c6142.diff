[+++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/LocalSessionFactoryBuilder.java, +import java.lang.annotation.Annotation;, +import java.util.LinkedHashSet;, +import java.util.Set;, +, +	private static final Set<TypeFilter> entityTypeFilters;, +, +	static {, +		entityTypeFilters = new LinkedHashSet<TypeFilter>(4);, +		entityTypeFilters.add(new AnnotationTypeFilter(Entity.class, false));, +		entityTypeFilters.add(new AnnotationTypeFilter(Embeddable.class, false));, +		entityTypeFilters.add(new AnnotationTypeFilter(MappedSuperclass.class, false));, +		try {, +			@SuppressWarnings("unchecked"), +			Class<? extends Annotation> converterAnnotation = (Class<? extends Annotation>), +					LocalSessionFactoryBuilder.class.getClassLoader().loadClass("javax.persistence.Converter");, +			entityTypeFilters.add(new AnnotationTypeFilter(converterAnnotation, false));, +		}, +		catch (ClassNotFoundException ex) {, +			// JPA 2.1 API not available - Hibernate <4.3, +		}, +	}, +, +		for (TypeFilter filter : entityTypeFilters) {, +++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/LocalSessionFactoryBuilder.java, +import java.lang.annotation.Annotation;, +import java.util.LinkedHashSet;, +import java.util.Set;, +, +	private static final Set<TypeFilter> entityTypeFilters;, +, +	static {, +		entityTypeFilters = new LinkedHashSet<TypeFilter>(4);, +		entityTypeFilters.add(new AnnotationTypeFilter(Entity.class, false));, +		entityTypeFilters.add(new AnnotationTypeFilter(Embeddable.class, false));, +		entityTypeFilters.add(new AnnotationTypeFilter(MappedSuperclass.class, false));, +		try {, +			@SuppressWarnings("unchecked"), +			Class<? extends Annotation> converterAnnotation = (Class<? extends Annotation>), +					LocalSessionFactoryBuilder.class.getClassLoader().loadClass("javax.persistence.Converter");, +			entityTypeFilters.add(new AnnotationTypeFilter(converterAnnotation, false));, +		}, +		catch (ClassNotFoundException ex) {, +			// JPA 2.1 API not available - Hibernate <4.3, +		}, +	}, +, +		for (TypeFilter filter : entityTypeFilters) {, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.java, +import java.lang.annotation.Annotation;, +import java.util.LinkedHashSet;, +	private static final Set<TypeFilter> entityTypeFilters;, +, +	static {, +		entityTypeFilters = new LinkedHashSet<TypeFilter>(4);, +		entityTypeFilters.add(new AnnotationTypeFilter(Entity.class, false));, +		entityTypeFilters.add(new AnnotationTypeFilter(Embeddable.class, false));, +		entityTypeFilters.add(new AnnotationTypeFilter(MappedSuperclass.class, false));, +		try {, +			@SuppressWarnings("unchecked"), +			Class<? extends Annotation> converterAnnotation = (Class<? extends Annotation>), +					DefaultPersistenceUnitManager.class.getClassLoader().loadClass("javax.persistence.Converter");, +			entityTypeFilters.add(new AnnotationTypeFilter(converterAnnotation, false));, +		}, +		catch (ClassNotFoundException ex) {, +			// JPA 2.1 API not available, +		}, +	}, +]