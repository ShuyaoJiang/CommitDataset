[+++ b/spring-core/src/test/java/org/springframework/core/convert/support/CollectionToCollectionConverterTests.java, +	public ArrayList<Integer> scalarListTarget;, +, +	public List<Integer> emptyListTarget;, +, +	public LinkedList<Integer> emptyListDifferentTarget;, +, +	public List<List<List<Integer>>> objectToCollection;, +, +	public List<String> strings;, +, +	public List<?> list = Collections.emptyList();, +, +	public Collection<?> wildcardCollection = Collections.emptyList();, +, +	public List<Resource> resources;, +, +	public EnumSet<MyEnum> enumSet;, +, +, +	public enum MyEnum {A, B, C}, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/CollectionToCollectionConverterTests.java, +	public ArrayList<Integer> scalarListTarget;, +, +	public List<Integer> emptyListTarget;, +, +	public LinkedList<Integer> emptyListDifferentTarget;, +, +	public List<List<List<Integer>>> objectToCollection;, +, +	public List<String> strings;, +, +	public List<?> list = Collections.emptyList();, +, +	public Collection<?> wildcardCollection = Collections.emptyList();, +, +	public List<Resource> resources;, +, +	public EnumSet<MyEnum> enumSet;, +, +, +	public enum MyEnum {A, B, C}, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/DefaultConversionServiceTests.java, +, +		public Color convert(String source) {, +			if (!source.startsWith("#")) {, +				source = "#" + source;, +			}, +			return Color.decode(source);, +		}, +		static int toStringCount = 0;, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/CollectionToCollectionConverterTests.java, +	public ArrayList<Integer> scalarListTarget;, +, +	public List<Integer> emptyListTarget;, +, +	public LinkedList<Integer> emptyListDifferentTarget;, +, +	public List<List<List<Integer>>> objectToCollection;, +, +	public List<String> strings;, +, +	public List<?> list = Collections.emptyList();, +, +	public Collection<?> wildcardCollection = Collections.emptyList();, +, +	public List<Resource> resources;, +, +	public EnumSet<MyEnum> enumSet;, +, +, +	public enum MyEnum {A, B, C}, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/DefaultConversionServiceTests.java, +, +		public Color convert(String source) {, +			if (!source.startsWith("#")) {, +				source = "#" + source;, +			}, +			return Color.decode(source);, +		}, +		static int toStringCount = 0;, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/MapToMapConverterTests.java, +/**, + * @author Keith Donald, + * @author Phil Webb, + * @author Juergen Hoeller, + */, +	private final GenericConversionService conversionService = new GenericConversionService();, +, +		catch (ConversionFailedException ex) {, +			assertTrue(ex.getCause() instanceof ConverterNotFoundException);, +		}, +, +, +, +		catch (ConversionFailedException ex) {, +			assertTrue(ex.getCause() instanceof ConverterNotFoundException);, +		}, +, +]