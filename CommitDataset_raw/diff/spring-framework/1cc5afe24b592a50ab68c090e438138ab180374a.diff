[+++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, +	protected Object convertToInternal(Object payload, @Nullable MessageHeaders headers,, +			@Nullable Object conversionHint) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, +	protected Object convertToInternal(Object payload, @Nullable MessageHeaders headers,, +			@Nullable Object conversionHint) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MarshallingMessageConverter.java, +	protected Object convertToInternal(Object payload, @Nullable MessageHeaders headers,, +			@Nullable Object conversionHint) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, +	protected Object convertToInternal(Object payload, @Nullable MessageHeaders headers,, +			@Nullable Object conversionHint) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MarshallingMessageConverter.java, +	protected Object convertToInternal(Object payload, @Nullable MessageHeaders headers,, +			@Nullable Object conversionHint) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractMessageSendingTemplate.java, +	public void convertAndSend(D destination, Object payload, @Nullable Map<String, Object> headers), +			throws MessagingException {, +, +	public void convertAndSend(Object payload, @Nullable MessagePostProcessor postProcessor), +			throws MessagingException {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, +	protected Object convertToInternal(Object payload, @Nullable MessageHeaders headers,, +			@Nullable Object conversionHint) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MarshallingMessageConverter.java, +	protected Object convertToInternal(Object payload, @Nullable MessageHeaders headers,, +			@Nullable Object conversionHint) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractMessageSendingTemplate.java, +	public void convertAndSend(D destination, Object payload, @Nullable Map<String, Object> headers), +			throws MessagingException {, +, +	public void convertAndSend(Object payload, @Nullable MessagePostProcessor postProcessor), +			throws MessagingException {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/MessageSendingOperations.java, +	void convertAndSend(D destination, Object payload, @Nullable Map<String, Object> headers,, +			@Nullable MessagePostProcessor postProcessor) throws MessagingException;, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, +	protected Object convertToInternal(Object payload, @Nullable MessageHeaders headers,, +			@Nullable Object conversionHint) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MarshallingMessageConverter.java, +	protected Object convertToInternal(Object payload, @Nullable MessageHeaders headers,, +			@Nullable Object conversionHint) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractMessageSendingTemplate.java, +	public void convertAndSend(D destination, Object payload, @Nullable Map<String, Object> headers), +			throws MessagingException {, +, +	public void convertAndSend(Object payload, @Nullable MessagePostProcessor postProcessor), +			throws MessagingException {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/MessageSendingOperations.java, +	void convertAndSend(D destination, Object payload, @Nullable Map<String, Object> headers,, +			@Nullable MessagePostProcessor postProcessor) throws MessagingException;, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/DestinationPatternsMessageCondition.java, +public class DestinationPatternsMessageCondition, +		extends AbstractMessageCondition<DestinationPatternsMessageCondition> {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, +	protected Object convertToInternal(Object payload, @Nullable MessageHeaders headers,, +			@Nullable Object conversionHint) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MarshallingMessageConverter.java, +	protected Object convertToInternal(Object payload, @Nullable MessageHeaders headers,, +			@Nullable Object conversionHint) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractMessageSendingTemplate.java, +	public void convertAndSend(D destination, Object payload, @Nullable Map<String, Object> headers), +			throws MessagingException {, +, +	public void convertAndSend(Object payload, @Nullable MessagePostProcessor postProcessor), +			throws MessagingException {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/MessageSendingOperations.java, +	void convertAndSend(D destination, Object payload, @Nullable Map<String, Object> headers,, +			@Nullable MessagePostProcessor postProcessor) throws MessagingException;, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/DestinationPatternsMessageCondition.java, +public class DestinationPatternsMessageCondition, +		extends AbstractMessageCondition<DestinationPatternsMessageCondition> {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/AbstractNamedValueMethodArgumentResolver.java, +	protected AbstractNamedValueMethodArgumentResolver(ConversionService cs,, +			@Nullable ConfigurableBeanFactory beanFactory) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, +	protected Object convertToInternal(Object payload, @Nullable MessageHeaders headers,, +			@Nullable Object conversionHint) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MarshallingMessageConverter.java, +	protected Object convertToInternal(Object payload, @Nullable MessageHeaders headers,, +			@Nullable Object conversionHint) {, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/core/AbstractMessageSendingTemplate.java]