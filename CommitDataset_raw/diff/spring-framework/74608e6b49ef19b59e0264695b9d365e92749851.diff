[+++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotatedElementUtilsTests.java, +		AnnotationAttributes attributes = assertComponentScanAttributes(TestComponentScanClass.class, "com.example.app.test");, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotatedElementUtilsTests.java, +		AnnotationAttributes attributes = assertComponentScanAttributes(TestComponentScanClass.class, "com.example.app.test");, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationAttributesTests.java, + * Copyright 2002-2016 the original author or authors., +		assertThat(attributes.getClassArray("classes"), equalTo(new Class<?>[] {Number.class, Short.class, Integer.class}));, +		assertThat(attributes.getClassArray("classes"), equalTo(new Class<?>[] {Number.class}));, +		attributes.put("classes", new Class<?>[] {String.class});, +		attributes.put("value", new Class<?>[] {Number.class});, +, +, +, +, +, +, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotatedElementUtilsTests.java, +		AnnotationAttributes attributes = assertComponentScanAttributes(TestComponentScanClass.class, "com.example.app.test");, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationAttributesTests.java, + * Copyright 2002-2016 the original author or authors., +		assertThat(attributes.getClassArray("classes"), equalTo(new Class<?>[] {Number.class, Short.class, Integer.class}));, +		assertThat(attributes.getClassArray("classes"), equalTo(new Class<?>[] {Number.class}));, +		attributes.put("classes", new Class<?>[] {String.class});, +		attributes.put("value", new Class<?>[] {Number.class});, +, +, +, +, +, +, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/ConnectionCallback.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotatedElementUtilsTests.java, +		AnnotationAttributes attributes = assertComponentScanAttributes(TestComponentScanClass.class, "com.example.app.test");, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationAttributesTests.java, + * Copyright 2002-2016 the original author or authors., +		assertThat(attributes.getClassArray("classes"), equalTo(new Class<?>[] {Number.class, Short.class, Integer.class}));, +		assertThat(attributes.getClassArray("classes"), equalTo(new Class<?>[] {Number.class}));, +		attributes.put("classes", new Class<?>[] {String.class});, +		attributes.put("value", new Class<?>[] {Number.class});, +, +, +, +, +, +, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/ConnectionCallback.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/PreparedStatementCallback.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotatedElementUtilsTests.java, +		AnnotationAttributes attributes = assertComponentScanAttributes(TestComponentScanClass.class, "com.example.app.test");, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationAttributesTests.java, + * Copyright 2002-2016 the original author or authors., +		assertThat(attributes.getClassArray("classes"), equalTo(new Class<?>[] {Number.class, Short.class, Integer.class}));, +		assertThat(attributes.getClassArray("classes"), equalTo(new Class<?>[] {Number.class}));, +		attributes.put("classes", new Class<?>[] {String.class});, +		attributes.put("value", new Class<?>[] {Number.class});, +, +, +, +, +, +, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/ConnectionCallback.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/PreparedStatementCallback.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCallback.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotatedElementUtilsTests.java, +		AnnotationAttributes attributes = assertComponentScanAttributes(TestComponentScanClass.class, "com.example.app.test");, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationAttributesTests.java, + * Copyright 2002-2016 the original author or authors., +		assertThat(attributes.getClassArray("classes"), equalTo(new Class<?>[] {Number.class, Short.class, Integer.class}));, +		assertThat(attributes.getClassArray("classes"), equalTo(new Class<?>[] {Number.class}));, +		attributes.put("classes", new Class<?>[] {String.class});, +		attributes.put("value", new Class<?>[] {Number.class});, +, +, +, +, +, +, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/ConnectionCallback.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/PreparedStatementCallback.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCallback.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/OracleLobHandler.java, + * Copyright 2002-2016 the original author or authors., +	protected interface LobCallback {, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotatedElementUtilsTests.java, +		AnnotationAttributes attributes = assertComponentScanAttributes(TestComponentScanClass.class, "com.example.app.test");, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationAttributesTests.java, + * Copyright 2002-2016 the original author or authors., +		assertThat(attributes.getClassArray("classes"), equalTo(new Class<?>[] {Number.class, Short.class, Integer.class}));, +		assertThat(attributes.getClassArray("classes"), equalTo(new Class<?>[] {Number.class}));, +		attributes.put("classes", new Class<?>[] {String.class});]