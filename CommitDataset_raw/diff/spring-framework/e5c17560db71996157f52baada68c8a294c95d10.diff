[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.dao.DataAccessException;, +import org.springframework.jdbc.UncategorizedSQLException;, +import org.springframework.jdbc.datasource.init.ScriptUtils.ScriptStatementExecutor;, + * @author Chris Baldwin, +	private String separator = ScriptUtils.DEFAULT_STATEMENT_SEPARATOR;, +	private String commentPrefix = ScriptUtils.DEFAULT_COMMENT_PREFIX;, +, +	private String blockCommentStartDelimiter = ScriptUtils.DEFAULT_BLOCK_COMMENT_START_DELIMITER;, +	, +	private String blockCommentEndDelimiter = ScriptUtils.DEFAULT_BLOCK_COMMENT_END_DELIMITER;, +	 * Set the block comment start delimiter in the SQL script., +	 * Default is "/*", +	 * @since 4.0.3, +	 */, +	public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {, +		this.blockCommentStartDelimiter = blockCommentStartDelimiter;		, +	}, +	, +	/**, +	 * Set the block comment end delimiter in the SQL script., +	 * Default is "*\/", +	 * @since 4.0.3, +	 */, +	public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {, +		this.blockCommentEndDelimiter = blockCommentEndDelimiter;, +	}, +	, +	/**, +		Statement statement = null;, +		try {, +			statement = connection.createStatement();, +			final Statement stmt = statement; , +				ScriptUtils.executeSqlScript(, +						new ScriptStatementExecutor() {, +							, +							@Override, +							public int executeScriptStatement(String statement) throws DataAccessException {, +								try {, +									stmt.execute(statement);, +									return stmt.getUpdateCount();, +								}, +								catch (SQLException e) {, +									throw new UncategorizedSQLException(getClass().getName(), statement, e);, +								}, +							}, +						}, , +						applyEncodingIfNecessary(script), this.continueOnError, this.ignoreFailedDrops, , +						this.commentPrefix, this.separator,	this.blockCommentStartDelimiter, , +						this.blockCommentEndDelimiter);, +			}, +		}, +		finally {, +			if (statement != null) {, +				statement.close();, +			}, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.dao.DataAccessException;, +import org.springframework.jdbc.UncategorizedSQLException;, +import org.springframework.jdbc.datasource.init.ScriptUtils.ScriptStatementExecutor;, + * @author Chris Baldwin, +	private String separator = ScriptUtils.DEFAULT_STATEMENT_SEPARATOR;, +	private String commentPrefix = ScriptUtils.DEFAULT_COMMENT_PREFIX;, +, +	private String blockCommentStartDelimiter = ScriptUtils.DEFAULT_BLOCK_COMMENT_START_DELIMITER;, +	, +	private String blockCommentEndDelimiter = ScriptUtils.DEFAULT_BLOCK_COMMENT_END_DELIMITER;, +	 * Set the block comment start delimiter in the SQL script., +	 * Default is "/*", +	 * @since 4.0.3, +	 */, +	public void setBlockCommentStartDelimiter(String blockCommentStartDelimiter) {, +		this.blockCommentStartDelimiter = blockCommentStartDelimiter;		, +	}, +	, +	/**, +	 * Set the block comment end delimiter in the SQL script., +	 * Default is "*\/", +	 * @since 4.0.3, +	 */, +	public void setBlockCommentEndDelimiter(String blockCommentEndDelimiter) {, +		this.blockCommentEndDelimiter = blockCommentEndDelimiter;, +	}, +	, +	/**, +		Statement statement = null;, +		try {, +			statement = connection.createStatement();, +			final Statement stmt = statement; , +				ScriptUtils.executeSqlScript(, +						new ScriptStatementExecutor() {, +							, +							@Override, +							public int executeScriptStatement(String statement) throws DataAccessException {, +								try {, +									stmt.execute(statement);, +									return stmt.getUpdateCount();, +								}]