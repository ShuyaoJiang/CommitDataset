[+++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/SpringBeanJobFactory.java, + * Copyright 2002-2009 the original author or authors., +	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {, +		Object job = bundle.getJobDetail().getJobClass().newInstance();, +				for (String propName : this.ignoredUnknownProperties) {, +++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/SpringBeanJobFactory.java, + * Copyright 2002-2009 the original author or authors., +	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {, +		Object job = bundle.getJobDetail().getJobClass().newInstance();, +				for (String propName : this.ignoredUnknownProperties) {, +++ b/org.springframework.context/src/main/java/org/springframework/context/support/MessageSourceResourceBundle.java, + * Copyright 2002-2009 the original author or authors., +	public Enumeration<String> getKeys() {, +++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/SpringBeanJobFactory.java, + * Copyright 2002-2009 the original author or authors., +	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {, +		Object job = bundle.getJobDetail().getJobClass().newInstance();, +				for (String propName : this.ignoredUnknownProperties) {, +++ b/org.springframework.context/src/main/java/org/springframework/context/support/MessageSourceResourceBundle.java, + * Copyright 2002-2009 the original author or authors., +	public Enumeration<String> getKeys() {, +++ b/org.springframework.core/src/main/java/org/springframework/util/ObjectUtils.java, + * Miscellaneous object utility methods., + *, + * <p>Mainly for internal use within the framework; consider, + * <a href="http://jakarta.apache.org/commons/lang/">Jakarta's Commons Lang</a>, + * for a more comprehensive suite of object utilities., + *, + * <p>Thanks to Alex Ruiz for contributing several enhancements to this class!, +++ b/org.springframework.context.support/src/main/java/org/springframework/scheduling/quartz/SpringBeanJobFactory.java, + * Copyright 2002-2009 the original author or authors., +	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {, +		Object job = bundle.getJobDetail().getJobClass().newInstance();, +				for (String propName : this.ignoredUnknownProperties) {, +++ b/org.springframework.context/src/main/java/org/springframework/context/support/MessageSourceResourceBundle.java, + * Copyright 2002-2009 the original author or authors., +	public Enumeration<String> getKeys() {, +++ b/org.springframework.core/src/main/java/org/springframework/util/ObjectUtils.java, + * Miscellaneous object utility methods., + *, + * <p>Mainly for internal use within the framework; consider, + * <a href="http://jakarta.apache.org/commons/lang/">Jakarta's Commons Lang</a>, + * for a more comprehensive suite of object utilities., + *, + * <p>Thanks to Alex Ruiz for contributing several enhancements to this class!, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/DispatcherServlet.java, +, +	 * Set whether to detect all HandlerMapping beans in this servlet's context. Otherwise,, +	 * just a single bean with name "handlerMapping" will be expected., +	 * <p>Default is "true". Turn this off if you want this servlet to use a single, +	 * Set whether to detect all HandlerAdapter beans in this servlet's context. Otherwise,, +	 * just a single bean with name "handlerAdapter" will be expected., +	 * <p>Default is "true". Turn this off if you want this servlet to use a single, +	 * Set whether to detect all HandlerExceptionResolver beans in this servlet's context. Otherwise,, +	 * just a single bean with name "handlerExceptionResolver" will be expected., +	 * <p>Default is "true". Turn this off if you want this servlet to use a single, +	 * HandlerExceptionResolver, despite multiple HandlerExceptionResolver beans being defined in the context., +	 * Set whether to detect all ViewResolver beans in this servlet's context. Otherwise,, +	 * just a single bean with name "viewResolver" will be expected., +	 * <p>Default is "true". Turn this off if you want this servlet to use a single, +	 * Set whether to perform cleanup of request attributes after an include request, that is,, +	 * whether to reset the original state of all request attributes after the DispatcherServlet, +	 * has processed within an include request. Otherwise, just the DispatcherServlet's own, +	 * request attributes will be reset, but not model attributes for JSPs or special attributes, +	 * set by views (for example, JSTL's)., +	 * <p>Default is "true", which is strongly recommended. Views should not rely on request attributes, +	 * having been set by (dynamic) includes. This allows JSP views rendered by an included controller, +	 * to use any model attributes, even with the same names as in the main JSP, without causing side, +	 * effects. Only turn this off for special needs, for example to deliberately allow main JSPs to, +	 * access attributes from JSP views rendered by an included controller., +	/**, +	 * This implementation calls {@link #initStrategies}., +	 */, +	 * Initialize the strategy objects that this servlet uses., +	 * <p>May be overridden in subclasses in order to initialize further strategy objects., +	 * Initialize the MultipartResolver used by this class., +	 * <p>If no bean is defined with the given name in the BeanFactory for this namespace,, +	 * no multipart handling is provided., +	 * Initialize the LocaleResolver used by this class., +	 * <p>If no bean is defined with the given name in the BeanFactory for this namespace,, +	 * we default to AcceptHeaderLocaleResolver., +	 * Initialize the ThemeResolver used by this class., +	 * <p>If no bean is defined with the given name in the BeanFactory for this namespace,, +	 * we default to a FixedThemeResolver., +	 * Initialize the HandlerMappings used by this class., +	 * <p>If no HandlerMapping beans are defined in the BeanFactory for this namespace,, +	 * we default to BeanNameUrlHandlerMapping., +	 * Initialize the HandlerAdapters used by this class., +	 * <p>If no HandlerAdapter beans are defined in the BeanFactory for this namespace,, +	 * we default to SimpleControllerHandlerAdapter., +	 * Initialize the HandlerExceptionResolver used by this class., +	 * <p>If no bean is defined with the given name in the BeanFactory for this namespace,, +	 * we default to no exception resolver., +	 * Initialize the RequestToViewNameTranslator used by this servlet instance., +	 * <p>If no implementation is configured then we default to DefaultRequestToViewNameTranslator., +	 * Initialize the ViewResolvers used by this class., +	 * <p>If no ViewResolver beans are defined in the BeanFactory for this, +	 * Return this servlet's ThemeSource, if any; else return <code>null</code>., +	 * <p>Default is to return the WebApplicationContext as ThemeSource,, +	 * provided that it implements the ThemeSource interface.]