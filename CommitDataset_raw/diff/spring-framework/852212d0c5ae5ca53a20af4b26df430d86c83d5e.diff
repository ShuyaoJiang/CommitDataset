[+++ b/spring-beans/src/test/java/org/springframework/tests/beans/CollectingReaderEventListener.java, + * Copyright 2002-2016 the original author or authors., +	private final List<DefaultsDefinition> defaults = new LinkedList<>();, +	private final Map<String, ComponentDefinition> componentDefinitions = new LinkedHashMap<>(8);, +	private final Map<String, List<AliasDefinition>> aliasMap = new LinkedHashMap<>(8);, +	private final List<ImportDefinition> imports = new LinkedList<>();, +, +	public List<DefaultsDefinition> getDefaults() {, +		return this.componentDefinitions.get(name);, +		Collection<ComponentDefinition> collection = this.componentDefinitions.values();, +		return collection.toArray(new ComponentDefinition[collection.size()]);, +		List<AliasDefinition> aliases = this.aliasMap.get(aliasDefinition.getBeanName());, +			aliases = new ArrayList<>();, +	public List<AliasDefinition> getAliases(String beanName) {, +		List<AliasDefinition> aliases = this.aliasMap.get(beanName);, +		return (aliases != null ? Collections.unmodifiableList(aliases) : null);, +	public List<ImportDefinition> getImports() {, +++ b/spring-beans/src/test/java/org/springframework/tests/beans/CollectingReaderEventListener.java, + * Copyright 2002-2016 the original author or authors., +	private final List<DefaultsDefinition> defaults = new LinkedList<>();, +	private final Map<String, ComponentDefinition> componentDefinitions = new LinkedHashMap<>(8);, +	private final Map<String, List<AliasDefinition>> aliasMap = new LinkedHashMap<>(8);, +	private final List<ImportDefinition> imports = new LinkedList<>();, +, +	public List<DefaultsDefinition> getDefaults() {, +		return this.componentDefinitions.get(name);, +		Collection<ComponentDefinition> collection = this.componentDefinitions.values();, +		return collection.toArray(new ComponentDefinition[collection.size()]);, +		List<AliasDefinition> aliases = this.aliasMap.get(aliasDefinition.getBeanName());, +			aliases = new ArrayList<>();, +	public List<AliasDefinition> getAliases(String beanName) {, +		List<AliasDefinition> aliases = this.aliasMap.get(beanName);, +		return (aliases != null ? Collections.unmodifiableList(aliases) : null);, +	public List<ImportDefinition> getImports() {, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +, +, +++ b/spring-beans/src/test/java/org/springframework/tests/beans/CollectingReaderEventListener.java, + * Copyright 2002-2016 the original author or authors., +	private final List<DefaultsDefinition> defaults = new LinkedList<>();, +	private final Map<String, ComponentDefinition> componentDefinitions = new LinkedHashMap<>(8);, +	private final Map<String, List<AliasDefinition>> aliasMap = new LinkedHashMap<>(8);, +	private final List<ImportDefinition> imports = new LinkedList<>();, +, +	public List<DefaultsDefinition> getDefaults() {, +		return this.componentDefinitions.get(name);, +		Collection<ComponentDefinition> collection = this.componentDefinitions.values();, +		return collection.toArray(new ComponentDefinition[collection.size()]);, +		List<AliasDefinition> aliases = this.aliasMap.get(aliasDefinition.getBeanName());, +			aliases = new ArrayList<>();, +	public List<AliasDefinition> getAliases(String beanName) {, +		List<AliasDefinition> aliases = this.aliasMap.get(beanName);, +		return (aliases != null ? Collections.unmodifiableList(aliases) : null);, +	public List<ImportDefinition> getImports() {, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java]