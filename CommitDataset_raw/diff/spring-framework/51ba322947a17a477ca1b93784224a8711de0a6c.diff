[+++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +	 * Add an HTTP header entry for the given name., +	 * <p>While this method can take any {@code Object} as a parameter,, +	 * it is recommended to use the following types:, +	 * Remove already registered values for the specified HTTP header, if any., +	 * @since 5.1.1, +	 */, +	public void removeHeader(String name) {, +		Assert.notNull(name, "Header name must not be null");, +		this.headers.remove(name);, +	}, +, +	/**, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +	 * Add an HTTP header entry for the given name., +	 * <p>While this method can take any {@code Object} as a parameter,, +	 * it is recommended to use the following types:, +	 * Remove already registered values for the specified HTTP header, if any., +	 * @since 5.1.1, +	 */, +	public void removeHeader(String name) {, +		Assert.notNull(name, "Header name must not be null");, +		this.headers.remove(name);, +	}, +, +	/**, +++ b/spring-web/src/test/java/org/springframework/mock/web/test/HeaderValueHolder.java, +import org.springframework.lang.Nullable;, +	public void setValue(@Nullable Object value) {, +	@Nullable, +	@Nullable, +	@Nullable, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +	 * Add an HTTP header entry for the given name., +	 * <p>While this method can take any {@code Object} as a parameter,, +	 * it is recommended to use the following types:, +	 * Remove already registered values for the specified HTTP header, if any., +	 * @since 5.1.1, +	 */, +	public void removeHeader(String name) {, +		Assert.notNull(name, "Header name must not be null");, +		this.headers.remove(name);, +	}, +, +	/**, +++ b/spring-web/src/test/java/org/springframework/mock/web/test/HeaderValueHolder.java, +import org.springframework.lang.Nullable;, +	public void setValue(@Nullable Object value) {, +	@Nullable, +	@Nullable, +	@Nullable, +++ b/spring-web/src/test/java/org/springframework/mock/web/test/MockAsyncContext.java, +		MockHttpServletRequest mockRequest = WebUtils.getNativeRequest(this.request, MockHttpServletRequest.class);, +	/**, +	 * By default this is set to 10000 (10 seconds) even though the Servlet API, +	 * specifies a default async request timeout of 30 seconds. Keep in mind the, +	 * timeout could further be impacted by global configuration through the MVC, +	 * Java config or the XML namespace, as well as be overridden per request on, +	 * {@link org.springframework.web.context.request.async.DeferredResult DeferredResult}, +	 * or on, +	 * {@link org.springframework.web.servlet.mvc.method.annotation.SseEmitter SseEmitter}., +	 * @param timeout the timeout value to use., +	 * @see AsyncContext#setTimeout(long), +	 */, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +	 * Add an HTTP header entry for the given name., +	 * <p>While this method can take any {@code Object} as a parameter,, +	 * it is recommended to use the following types:, +	 * Remove already registered values for the specified HTTP header, if any., +	 * @since 5.1.1, +	 */, +	public void removeHeader(String name) {, +		Assert.notNull(name, "Header name must not be null");, +		this.headers.remove(name);, +	}, +, +	/**, +++ b/spring-web/src/test/java/org/springframework/mock/web/test/HeaderValueHolder.java, +import org.springframework.lang.Nullable;, +	public void setValue(@Nullable Object value) {, +	@Nullable, +	@Nullable, +	@Nullable, +++ b/spring-web/src/test/java/org/springframework/mock/web/test/MockAsyncContext.java, +		MockHttpServletRequest mockRequest = WebUtils.getNativeRequest(this.request, MockHttpServletRequest.class);, +	/**, +	 * By default this is set to 10000 (10 seconds) even though the Servlet API, +	 * specifies a default async request timeout of 30 seconds. Keep in mind the, +	 * timeout could further be impacted by global configuration through the MVC, +	 * Java config or the XML namespace, as well as be overridden per request on, +	 * {@link org.springframework.web.context.request.async.DeferredResult DeferredResult}, +	 * or on, +	 * {@link org.springframework.web.servlet.mvc.method.annotation.SseEmitter SseEmitter}., +	 * @param timeout the timeout value to use., +	 * @see AsyncContext#setTimeout(long), +	 */, +++ b/spring-web/src/test/java/org/springframework/mock/web/test/MockBodyContent.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.lang.Nullable;, +]