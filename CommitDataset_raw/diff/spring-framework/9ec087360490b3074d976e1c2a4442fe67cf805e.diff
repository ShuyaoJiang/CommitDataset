[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/MockWebResponseBuilder.java, +import org.apache.http.impl.cookie.BasicClientCookie;, +		BasicClientCookie result = new BasicClientCookie(cookie.getName(), cookie.getValue());, +		result.setDomain(cookie.getDomain());, +		result.setComment(cookie.getComment());, +		result.setExpiryDate(expires);, +		result.setPath(cookie.getPath());, +		result.setSecure(cookie.getSecure());, +		if(cookie.isHttpOnly()) {, +			result.setAttribute("httponly", "true");, +		}, +		return new com.gargoylesoftware.htmlunit.util.Cookie(result).toString();, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/MockWebResponseBuilder.java, +import org.apache.http.impl.cookie.BasicClientCookie;, +		BasicClientCookie result = new BasicClientCookie(cookie.getName(), cookie.getValue());, +		result.setDomain(cookie.getDomain());, +		result.setComment(cookie.getComment());, +		result.setExpiryDate(expires);, +		result.setPath(cookie.getPath());, +		result.setSecure(cookie.getSecure());, +		if(cookie.isHttpOnly()) {, +			result.setAttribute("httponly", "true");, +		}, +		return new com.gargoylesoftware.htmlunit.util.Cookie(result).toString();, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/htmlunit/MockWebResponseBuilderTests.java, +	// SPR-14169, +	@Test, +	public void buildResponseHeadersNullDomainDefaulted() throws Exception {, +		Cookie cookie = new Cookie("cookieA", "valueA");, +		this.response.addCookie(cookie);, +		WebResponse webResponse = this.responseBuilder.build();, +, +		List<NameValuePair> responseHeaders = webResponse.getResponseHeaders();, +		assertThat(responseHeaders.size(), equalTo(1));, +		NameValuePair header = responseHeaders.get(0);, +		assertThat(header.getName(), equalTo("Set-Cookie"));, +		assertThat(header.getValue(), equalTo("cookieA=valueA"));, +	}, +]