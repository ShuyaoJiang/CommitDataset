[+++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJWeaverMessageHandler.java, +	private static final Log logger = LogFactory.getLog("AspectJ Weaver");, +			if (logger.isDebugEnabled()) {, +				logger.debug(makeMessageFor(message));, +		else if (messageKind == IMessage.INFO || messageKind == IMessage.WEAVEINFO) {, +			if (logger.isInfoEnabled()) {, +				logger.info(makeMessageFor(message));, +			if (logger.isWarnEnabled()) {, +				logger.warn(makeMessageFor(message));, +			if (logger.isErrorEnabled()) {, +				logger.error(makeMessageFor(message));, +			if (logger.isFatalEnabled()) {, +				logger.fatal(makeMessageFor(message));, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJWeaverMessageHandler.java, +	private static final Log logger = LogFactory.getLog("AspectJ Weaver");, +			if (logger.isDebugEnabled()) {, +				logger.debug(makeMessageFor(message));, +		else if (messageKind == IMessage.INFO || messageKind == IMessage.WEAVEINFO) {, +			if (logger.isInfoEnabled()) {, +				logger.info(makeMessageFor(message));, +			if (logger.isWarnEnabled()) {, +				logger.warn(makeMessageFor(message));, +			if (logger.isErrorEnabled()) {, +				logger.error(makeMessageFor(message));, +			if (logger.isFatalEnabled()) {, +				logger.fatal(makeMessageFor(message));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +]