[+++ b/spring-context/src/main/java/org/springframework/context/annotation/AdviceModeImportSelector.java, +		if (attributes == null) {, +			throw new IllegalArgumentException(String.format(, +		}, +		if (imports == null) {, +			throw new IllegalArgumentException(String.format("Unknown AdviceMode: '%s'", adviceMode));, +		}, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AdviceModeImportSelector.java, +		if (attributes == null) {, +			throw new IllegalArgumentException(String.format(, +		}, +		if (imports == null) {, +			throw new IllegalArgumentException(String.format("Unknown AdviceMode: '%s'", adviceMode));, +		}, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributes.java, + * Copyright 2002-2015 the original author or authors., +		if (value == null) {, +			throw new IllegalArgumentException(String.format("Attribute '%s' not found", attributeName));, +		}, +						String.format("Attribute '%s' is of type [%s], but [%s] was expected.",, +						attributeName, value.getClass().getName(), expectedType.getName()));, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AdviceModeImportSelector.java, +		if (attributes == null) {, +			throw new IllegalArgumentException(String.format(, +		}, +		if (imports == null) {, +			throw new IllegalArgumentException(String.format("Unknown AdviceMode: '%s'", adviceMode));, +		}, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributes.java, + * Copyright 2002-2015 the original author or authors., +		if (value == null) {, +			throw new IllegalArgumentException(String.format("Attribute '%s' not found", attributeName));, +		}, +						String.format("Attribute '%s' is of type [%s], but [%s] was expected.",, +						attributeName, value.getClass().getName(), expectedType.getName()));, +++ b/spring-core/src/main/java/org/springframework/core/env/ReadOnlySystemAttributesMap.java, + * Copyright 2002-2015 the original author or authors., +		if (!(key instanceof String)) {, +			throw new IllegalArgumentException(, +					"Key of type [" + (key != null ? key.getClass().getName() : "null") +, +					"] must be an instance of java.lang.String.");, +		}]