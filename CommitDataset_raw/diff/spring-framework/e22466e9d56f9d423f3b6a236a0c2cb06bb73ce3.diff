[+++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/MessageMethodArgumentResolver.java, + * Copyright 2002-2018 the original author or authors., +		return resolvableType.getGeneric().resolve(Object.class);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/MessageMethodArgumentResolver.java, + * Copyright 2002-2018 the original author or authors., +		return resolvableType.getGeneric().resolve(Object.class);, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/reactive/MockClientHttpRequest.java, + * Copyright 2002-2018 the original author or authors., + *, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/MessageMethodArgumentResolver.java, + * Copyright 2002-2018 the original author or authors., +		return resolvableType.getGeneric().resolve(Object.class);, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/reactive/MockClientHttpRequest.java, + * Copyright 2002-2018 the original author or authors., + *, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpResponse.java, + * Copyright 2002-2018 the original author or authors., +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/MessageMethodArgumentResolver.java, + * Copyright 2002-2018 the original author or authors., +		return resolvableType.getGeneric().resolve(Object.class);, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/reactive/MockClientHttpRequest.java, + * Copyright 2002-2018 the original author or authors., + *, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpResponse.java, + * Copyright 2002-2018 the original author or authors., +++ b/spring-test/src/main/java/org/springframework/test/web/client/AbstractRequestExpectationManager.java, +		 * @deprecated as of 5.0.3, if favor of {@link #addAllExpectations}, +		/**, +		 * Reset all expectations for this group., +		 */, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/MessageMethodArgumentResolver.java, + * Copyright 2002-2018 the original author or authors., +		return resolvableType.getGeneric().resolve(Object.class);, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/reactive/MockClientHttpRequest.java, + * Copyright 2002-2018 the original author or authors., + *, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpResponse.java, + * Copyright 2002-2018 the original author or authors., +++ b/spring-test/src/main/java/org/springframework/test/web/client/AbstractRequestExpectationManager.java, +		 * @deprecated as of 5.0.3, if favor of {@link #addAllExpectations}, +		/**, +		 * Reset all expectations for this group., +		 */, +++ b/spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java, +		ResolvableType valueType = (shouldWrap ? elementType.getGeneric() : elementType);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/MessageMethodArgumentResolver.java, + * Copyright 2002-2018 the original author or authors., +		return resolvableType.getGeneric().resolve(Object.class);, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/reactive/MockClientHttpRequest.java, + * Copyright 2002-2018 the original author or authors., + *, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpResponse.java, + * Copyright 2002-2018 the original author or authors., +++ b/spring-test/src/main/java/org/springframework/test/web/client/AbstractRequestExpectationManager.java, +		 * @deprecated as of 5.0.3, if favor of {@link #addAllExpectations}, +		/**, +		 * Reset all expectations for this group., +		 */, +++ b/spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java, +		ResolvableType valueType = (shouldWrap ? elementType.getGeneric() : elementType);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageWriterResultHandler.java, +			ResolvableType genericType = bodyType.getGeneric();, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/MessageMethodArgumentResolver.java, + * Copyright 2002-2018 the original author or authors., +		return resolvableType.getGeneric().resolve(Object.class);, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/reactive/MockClientHttpRequest.java, + * Copyright 2002-2018 the original author or authors., + *, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpResponse.java, + * Copyright 2002-2018 the original author or authors., +++ b/spring-test/src/main/java/org/springframework/test/web/client/AbstractRequestExpectationManager.java, +		 * @deprecated as of 5.0.3, if favor of {@link #addAllExpectations}, +		/**, +		 * Reset all expectations for this group., +		 */, +++ b/spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java, +		ResolvableType valueType = (shouldWrap ? elementType.getGeneric() : elementType);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageWriterResultHandler.java, +			ResolvableType genericType = bodyType.getGeneric();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java, +	private final ReactiveAdapterRegistry reactiveAdapterRegistry;, +	private final List<MediaType> mediaTypes = new ArrayList<>(4);, +	public AbstractView(ReactiveAdapterRegistry reactiveAdapterRegistry) {, +		this.reactiveAdapterRegistry = reactiveAdapterRegistry;, +			ReactiveAdapter adapter = this.reactiveAdapterRegistry.getAdapter(null, value);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/MessageMethodArgumentResolver.java, + * Copyright 2002-2018 the original author or authors., +		return resolvableType.getGeneric().resolve(Object.class);, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/reactive/MockClientHttpRequest.java, + * Copyright 2002-2018 the original author or authors., + *, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpResponse.java, + * Copyright 2002-2018 the original author or authors., +++ b/spring-test/src/main/java/org/springframework/test/web/client/AbstractRequestExpectationManager.java, +		 * @deprecated as of 5.0.3, if favor of {@link #addAllExpectations}, +		/**, +		 * Reset all expectations for this group., +		 */, +++ b/spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java, +		ResolvableType valueType = (shouldWrap ? elementType.getGeneric() : elementType);]