[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/ActiveProfiles.java, +	 * Alias for {@link #profiles}., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ActiveProfiles.java, +	 * Alias for {@link #profiles}., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextCache.java, +	 * <p>Generally speaking, you would only call this method if you change the, +	 * state of a singleton bean, potentially affecting future interaction with, +	 * the context., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ActiveProfiles.java, +	 * Alias for {@link #profiles}., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextCache.java, +	 * <p>Generally speaking, you would only call this method if you change the, +	 * state of a singleton bean, potentially affecting future interaction with, +	 * the context., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextConfiguration.java, + * @see ContextConfigurationAttributes, + * @see MergedContextConfiguration, +	 * Alias for {@link #locations}., +	 * <p>Check out the Javadoc for, +	 * used at runtime if <code>locations</code> are configured. See the, +	 * documentation for {@link #loader} for further details regarding default, +	 * loaders., +	 * The {@link org.springframework.context.annotation.Configuration, +	 * configuration classes} to use for loading an, +	 * <p>Check out the Javadoc for, +	 * {@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses, +	 * AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details, +	 * on how default configuration classes will be detected if none are specified., +	 * See the documentation for {@link #loader} for further details regarding, +	 * default loaders., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ActiveProfiles.java, +	 * Alias for {@link #profiles}., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextCache.java, +	 * <p>Generally speaking, you would only call this method if you change the, +	 * state of a singleton bean, potentially affecting future interaction with, +	 * the context., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextConfiguration.java, + * @see ContextConfigurationAttributes, + * @see MergedContextConfiguration, +	 * Alias for {@link #locations}., +	 * <p>Check out the Javadoc for, +	 * used at runtime if <code>locations</code> are configured. See the, +	 * documentation for {@link #loader} for further details regarding default, +	 * loaders., +	 * The {@link org.springframework.context.annotation.Configuration, +	 * configuration classes} to use for loading an, +	 * <p>Check out the Javadoc for, +	 * {@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses, +	 * AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details, +	 * on how default configuration classes will be detected if none are specified., +	 * See the documentation for {@link #loader} for further details regarding, +	 * default loaders., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextLoader.java, + * Strategy interface for loading an {@link ApplicationContext application context}, + * for an integration test managed by the Spring TestContext Framework., + * <p><b>Note</b>: as of Spring 3.1, implement {@link SmartContextLoader} instead, + * of this interface in order to provide support for configuration classes and, + * active bean definition profiles., + * @see org.springframework.test.context.support.AnnotationConfigContextLoader AnnotationConfigContextLoader, +	 * processors with bean factories of {@link ApplicationContext application, +	 * contexts} loaded by this ContextLoader. Beans will therefore automatically, +	 * be candidates for annotation-based dependency injection using, +	 * {@link org.springframework.beans.factory.annotation.Autowired @Autowired},, +	 * {@link javax.annotation.Resource @Resource}, and, +	 * {@link javax.inject.Inject @Inject}., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ActiveProfiles.java, +	 * Alias for {@link #profiles}., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextCache.java, +	 * <p>Generally speaking, you would only call this method if you change the, +	 * state of a singleton bean, potentially affecting future interaction with, +	 * the context., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextConfiguration.java, + * @see ContextConfigurationAttributes, + * @see MergedContextConfiguration, +	 * Alias for {@link #locations}., +	 * <p>Check out the Javadoc for, +	 * used at runtime if <code>locations</code> are configured. See the, +	 * documentation for {@link #loader} for further details regarding default, +	 * loaders., +	 * The {@link org.springframework.context.annotation.Configuration, +	 * configuration classes} to use for loading an, +	 * <p>Check out the Javadoc for, +	 * {@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses, +	 * AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details, +	 * on how default configuration classes will be detected if none are specified., +	 * See the documentation for {@link #loader} for further details regarding, +	 * default loaders., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/ContextLoader.java, + * Strategy interface for loading an {@link ApplicationContext application context}, + * for an integration test managed by the Spring TestContext Framework., + * <p><b>Note</b>: as of Spring 3.1, implement {@link SmartContextLoader} instead, + * of this interface in order to provide support for configuration classes and, + * active bean definition profiles., + * @see org.springframework.test.context.support.AnnotationConfigContextLoader AnnotationConfigContextLoader, +	 * processors with bean factories of {@link ApplicationContext application, +	 * contexts} loaded by this ContextLoader. Beans will therefore automatically, +	 * be candidates for annotation-based dependency injection using, +	 * {@link org.springframework.beans.factory.annotation.Autowired @Autowired},, +	 * {@link javax.annotation.Resource @Resource}, and, +	 * {@link javax.inject.Inject @Inject}.]