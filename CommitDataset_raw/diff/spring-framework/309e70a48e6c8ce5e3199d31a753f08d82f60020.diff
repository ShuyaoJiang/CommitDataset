[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		mbd.factoryMethodToIntrospect = uniqueCandidate;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		mbd.factoryMethodToIntrospect = uniqueCandidate;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +		mbd.factoryMethodToIntrospect = uniqueCandidate;, +					mbd.factoryMethodToIntrospect = uniqueCandidate;, +				mbd.factoryMethodToIntrospect = factoryMethodToUse;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		mbd.factoryMethodToIntrospect = uniqueCandidate;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +		mbd.factoryMethodToIntrospect = uniqueCandidate;, +					mbd.factoryMethodToIntrospect = uniqueCandidate;, +				mbd.factoryMethodToIntrospect = factoryMethodToUse;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		if (mbd.isFactoryMethodUnique && mbd.factoryMethodToIntrospect == null) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		mbd.factoryMethodToIntrospect = uniqueCandidate;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +		mbd.factoryMethodToIntrospect = uniqueCandidate;, +					mbd.factoryMethodToIntrospect = uniqueCandidate;, +				mbd.factoryMethodToIntrospect = factoryMethodToUse;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		if (mbd.isFactoryMethodUnique && mbd.factoryMethodToIntrospect == null) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/RootBeanDefinition.java, +	/** Package-visible field for caching a unique factory method candidate for introspection. */, +	@Nullable, +	volatile Method factoryMethodToIntrospect;, +, +		return this.factoryMethodToIntrospect;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		mbd.factoryMethodToIntrospect = uniqueCandidate;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, +		mbd.factoryMethodToIntrospect = uniqueCandidate;, +					mbd.factoryMethodToIntrospect = uniqueCandidate;, +				mbd.factoryMethodToIntrospect = factoryMethodToUse;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		if (mbd.isFactoryMethodUnique && mbd.factoryMethodToIntrospect == null) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/RootBeanDefinition.java, +	/** Package-visible field for caching a unique factory method candidate for introspection. */, +	@Nullable, +	volatile Method factoryMethodToIntrospect;, +, +		return this.factoryMethodToIntrospect;, +++ b/spring-context/src/test/java/org/springframework/context/annotation/configuration/BeanMethodQualificationTests.java, +		assertTrue(BeanFactoryAnnotationUtils.isQualifierMatch(value -> value.equals("boring"),, +				"testBean2", ctx.getDefaultListableBeanFactory()));]