[+++ b/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.util.Assert;, +	private static final String DEFAULT_WEB_BOOTSTRAP_CONTEXT_CLASS_NAME = "org.springframework.test.context.web.WebTestContextBootstrapper";, +, +	private static final String WEB_APP_CONFIGURATION_ANNOTATION = "org.springframework.test.context.web.WebAppConfiguration";, +, +		Class<?> clazz = null;, +			clazz = resolveExplicitTestContextBootstrapper(testClass);, +			if (clazz == null) {, +				clazz = resolveDefaultTestContextBootstrapper(testClass);, +		catch (Throwable ex) {, +			if (ex instanceof IllegalStateException) {, +				throw (IllegalStateException) ex;, +					+ "or make the default bootstrapper class available.", ex);, +	private static Class<?> resolveExplicitTestContextBootstrapper(Class<?> testClass) {, +		MultiValueMap<String, Object> attributesMultiMap = AnnotatedElementUtils.getAllAnnotationAttributes(, +				testClass, BootstrapWith.class.getName());, +		List<Object> values = (attributesMultiMap == null ? null : attributesMultiMap.get(AnnotationUtils.VALUE));, +		if (values == null) {, +			return null;, +		}, +		Assert.state(values.size() == 1, String.format("Configuration error: found multiple declarations of ", +				+ "@BootstrapWith on test class [%s] with values %s", testClass.getName(), values));, +		return (Class<?>) values.get(0);, +	}, +, +	private static Class<?> resolveDefaultTestContextBootstrapper(Class<?> testClass), +			throws Exception {, +		ClassLoader classLoader = BootstrapUtils.class.getClassLoader();, +		if (AnnotatedElementUtils.isAnnotated(testClass, WEB_APP_CONFIGURATION_ANNOTATION)) {, +			return ClassUtils.forName(DEFAULT_WEB_BOOTSTRAP_CONTEXT_CLASS_NAME, classLoader);, +		}, +		return ClassUtils.forName(DEFAULT_TEST_CONTEXT_BOOTSTRAPPER_CLASS_NAME, classLoader);, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.util.Assert;, +	private static final String DEFAULT_WEB_BOOTSTRAP_CONTEXT_CLASS_NAME = "org.springframework.test.context.web.WebTestContextBootstrapper";, +, +	private static final String WEB_APP_CONFIGURATION_ANNOTATION = "org.springframework.test.context.web.WebAppConfiguration";, +, +		Class<?> clazz = null;, +			clazz = resolveExplicitTestContextBootstrapper(testClass);, +			if (clazz == null) {, +				clazz = resolveDefaultTestContextBootstrapper(testClass);, +		catch (Throwable ex) {, +			if (ex instanceof IllegalStateException) {, +				throw (IllegalStateException) ex;, +					+ "or make the default bootstrapper class available.", ex);, +	private static Class<?> resolveExplicitTestContextBootstrapper(Class<?> testClass) {, +		MultiValueMap<String, Object> attributesMultiMap = AnnotatedElementUtils.getAllAnnotationAttributes(, +				testClass, BootstrapWith.class.getName());, +		List<Object> values = (attributesMultiMap == null ? null : attributesMultiMap.get(AnnotationUtils.VALUE));, +		if (values == null) {, +			return null;, +		}, +		Assert.state(values.size() == 1, String.format("Configuration error: found multiple declarations of ", +				+ "@BootstrapWith on test class [%s] with values %s", testClass.getName(), values));, +		return (Class<?>) values.get(0);, +	}, +, +	private static Class<?> resolveDefaultTestContextBootstrapper(Class<?> testClass), +			throws Exception {, +		ClassLoader classLoader = BootstrapUtils.class.getClassLoader();, +		if (AnnotatedElementUtils.isAnnotated(testClass, WEB_APP_CONFIGURATION_ANNOTATION)) {, +			return ClassUtils.forName(DEFAULT_WEB_BOOTSTRAP_CONTEXT_CLASS_NAME, classLoader);, +		}, +		return ClassUtils.forName(DEFAULT_TEST_CONTEXT_BOOTSTRAPPER_CLASS_NAME, classLoader);, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/context/web/WebAppConfiguration.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.util.Assert;, +	private static final String DEFAULT_WEB_BOOTSTRAP_CONTEXT_CLASS_NAME = "org.springframework.test.context.web.WebTestContextBootstrapper";, +, +	private static final String WEB_APP_CONFIGURATION_ANNOTATION = "org.springframework.test.context.web.WebAppConfiguration";, +, +		Class<?> clazz = null;, +			clazz = resolveExplicitTestContextBootstrapper(testClass);, +			if (clazz == null) {, +				clazz = resolveDefaultTestContextBootstrapper(testClass);, +		catch (Throwable ex) {, +			if (ex instanceof IllegalStateException) {, +				throw (IllegalStateException) ex;, +					+ "or make the default bootstrapper class available.", ex);, +	private static Class<?> resolveExplicitTestContextBootstrapper(Class<?> testClass) {, +		MultiValueMap<String, Object> attributesMultiMap = AnnotatedElementUtils.getAllAnnotationAttributes(, +				testClass, BootstrapWith.class.getName());, +		List<Object> values = (attributesMultiMap == null ? null : attributesMultiMap.get(AnnotationUtils.VALUE));, +		if (values == null) {, +			return null;, +		}, +		Assert.state(values.size() == 1, String.format("Configuration error: found multiple declarations of ", +				+ "@BootstrapWith on test class [%s] with values %s", testClass.getName(), values));, +		return (Class<?>) values.get(0);, +	}]