[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.java, +import javax.servlet.http.HttpServletRequest;, +import javax.servlet.http.HttpServletResponse;, +import org.springframework.web.context.request.ServletWebRequest;, +	 * @param webRequest the current request, +			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest) {, +		if (webRequest instanceof ServletWebRequest) {, +			ServletWebRequest servletRequest = (ServletWebRequest) webRequest;, +			HttpServletRequest request = servletRequest.getNativeRequest(HttpServletRequest.class);, +			HttpServletResponse response = servletRequest.getNativeResponse(HttpServletResponse.class);, +			if (response.isCommitted()) {, +				logger.error("Async timeout for " + request.getMethod() + " [" +  request.getRequestURI() + "]");, +				return null;, +			}, +		}, +		return handleExceptionInternal(ex, null, headers, status, webRequest);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.java, +import javax.servlet.http.HttpServletRequest;, +import javax.servlet.http.HttpServletResponse;, +import org.springframework.web.context.request.ServletWebRequest;, +	 * @param webRequest the current request, +			AsyncRequestTimeoutException ex, HttpHeaders headers, HttpStatus status, WebRequest webRequest) {, +		if (webRequest instanceof ServletWebRequest) {, +			ServletWebRequest servletRequest = (ServletWebRequest) webRequest;, +			HttpServletRequest request = servletRequest.getNativeRequest(HttpServletRequest.class);, +			HttpServletResponse response = servletRequest.getNativeResponse(HttpServletResponse.class);, +			if (response.isCommitted()) {, +				logger.error("Async timeout for " + request.getMethod() + " [" +  request.getRequestURI() + "]");, +				return null;, +			}, +		}, +		return handleExceptionInternal(ex, null, headers, status, webRequest);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.java, +		if (!response.isCommitted()) {, +		}, +		else if (logger.isErrorEnabled()) {, +			logger.error("Async timeout for " + request.getMethod() + " [" + request.getRequestURI() + "]");, +		}, +]