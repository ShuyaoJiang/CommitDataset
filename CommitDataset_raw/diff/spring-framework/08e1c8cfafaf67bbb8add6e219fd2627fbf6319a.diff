[+++ b/spring-webmvc/src/main/resources/org/springframework/web/servlet/view/freemarker/spring.ftl, +<#macro message code>${springMacroRequestContext.getMessage(code)?no_esc}</#macro>, +<#macro messageText code, text>${springMacroRequestContext.getMessage(code, text)?no_esc}</#macro>, +<#macro messageArgs code, args>${springMacroRequestContext.getMessage(code, args)?no_esc}</#macro>, +<#macro messageArgsText code, args, text>${springMacroRequestContext.getMessage(code, args, text)?no_esc}</#macro>, +<#macro theme code>${springMacroRequestContext.getThemeMessage(code)?no_esc}</#macro>, +<#macro themeText code, text>${springMacroRequestContext.getThemeMessage(code, text)?no_esc}</#macro>, +<#macro themeArgs code, args>${springMacroRequestContext.getThemeMessage(code, args)?no_esc}</#macro>, +<#macro themeArgsText code, args, text>${springMacroRequestContext.getThemeMessage(code, args, text)?no_esc}</#macro>, +<#macro url relativeUrl extra...><#if extra?? && extra?size!=0>${springMacroRequestContext.getContextUrl(relativeUrl,extra)?no_esc}<#else>${springMacroRequestContext.getContextUrl(relativeUrl)?no_esc}</#if></#macro>, + * @param path the path (string value) of the value required to bind to., + *     Spring defaults to a command name of "command" but this can be, + *     overridden by user configuration., + * @param attributes any additional attributes for the element, + *    (such as class or CSS styles or size), + * @param attributes any additional attributes for the element, + *    (such as class or CSS styles or size), + * @param attributes any additional attributes for the element, + *    (such as class or CSS styles or size), + * @param attributes any additional attributes for the element, + *    (such as class or CSS styles or size), + * @param attributes any additional attributes for the element, + *    (such as class or CSS styles or size), + * @param attributes any additional attributes for the element, + *    (such as class or CSS styles or size), + * @param separator the HTML tag or other character list that should be used to, + *    separate each option (typically '&nbsp;' or '<br>'), + * @param attributes any additional attributes for the element, + *    (such as class or CSS styles or size), +    <label for="${id}">${options[value]}</label>${separator?no_esc}, + * @param separator the HTML tag or other character list that should be used to, + *    separate each option (typically '&nbsp;' or '<br>'), + * @param attributes any additional attributes for the element, + *    (such as class or CSS styles or size), +    <label for="${id}">${options[value]}</label>${separator?no_esc}, + * @param attributes any additional attributes for the element, + *    (such as class or CSS styles or size), + * @param separator the HTML tag or other character list that should be used to, + *    separate each option (typically '&nbsp;' or '<br>'), + *    the template or an external CSS file) or an inline style. If the value passed, + *    in here contains a colon (:) then a 'style=' attribute will be used,, + *    otherwise a 'class=' attribute will be used., +    <#if error_has_next>${separator?no_esc}</#if>]