[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java, +import java.util.Arrays;, +import org.springframework.http.HttpMethod;, +import org.springframework.http.HttpRequest;, +	private static final List<HttpMethod> SUPPORTED_METHODS =, +			Arrays.asList(HttpMethod.POST, HttpMethod.PUT, HttpMethod.PATCH);, +, +		HttpMethod httpMethod = ((HttpRequest) inputMessage).getMethod();, +			if (!SUPPORTED_METHODS.contains(httpMethod)) {, +				return null;, +			}, +		private final HttpMethod method;, +, +			this.method = ((HttpRequest) inputMessage).getMethod();, +, +		public HttpMethod getMethod() {, +			return this.method;, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java, +import java.util.Arrays;, +import org.springframework.http.HttpMethod;, +import org.springframework.http.HttpRequest;, +	private static final List<HttpMethod> SUPPORTED_METHODS =, +			Arrays.asList(HttpMethod.POST, HttpMethod.PUT, HttpMethod.PATCH);, +, +		HttpMethod httpMethod = ((HttpRequest) inputMessage).getMethod();, +			if (!SUPPORTED_METHODS.contains(httpMethod)) {, +				return null;, +			}, +		private final HttpMethod method;, +, +			this.method = ((HttpRequest) inputMessage).getMethod();, +, +		public HttpMethod getMethod() {, +			return this.method;, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java, +import java.util.Arrays;, +import org.springframework.http.HttpMethod;, +import org.springframework.http.HttpRequest;, +	private static final List<HttpMethod> SUPPORTED_METHODS =, +			Arrays.asList(HttpMethod.POST, HttpMethod.PUT, HttpMethod.PATCH);, +, +		HttpMethod httpMethod = ((HttpRequest) inputMessage).getMethod();, +			if (!SUPPORTED_METHODS.contains(httpMethod)) {, +				return null;, +			}, +		private final HttpMethod method;, +, +			this.method = ((HttpRequest) inputMessage).getMethod();, +, +		public HttpMethod getMethod() {, +			return this.method;, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.java, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessorMockTests.java, +import static org.junit.Assert.*;, +import static org.mockito.BDDMockito.*;, +import static org.springframework.web.servlet.HandlerMapping.*;, +, +		servletRequest = new MockHttpServletRequest("POST", "/foo");, +		given(messageConverter.getSupportedMediaTypes()).willReturn(Collections.singletonList(contentType));, +		given(messageConverter.getSupportedMediaTypes()).willReturn(Collections.singletonList(MediaType.TEXT_PLAIN));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java, +import java.util.Arrays;, +import org.springframework.http.HttpMethod;, +import org.springframework.http.HttpRequest;, +	private static final List<HttpMethod> SUPPORTED_METHODS =, +			Arrays.asList(HttpMethod.POST, HttpMethod.PUT, HttpMethod.PATCH);, +, +		HttpMethod httpMethod = ((HttpRequest) inputMessage).getMethod();, +			if (!SUPPORTED_METHODS.contains(httpMethod)) {, +				return null;, +			}, +		private final HttpMethod method;, +, +			this.method = ((HttpRequest) inputMessage).getMethod();, +, +		public HttpMethod getMethod() {, +			return this.method;, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.java, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessorMockTests.java, +import static org.junit.Assert.*;, +import static org.mockito.BDDMockito.*;, +import static org.springframework.web.servlet.HandlerMapping.*;, +, +		servletRequest = new MockHttpServletRequest("POST", "/foo");, +		given(messageConverter.getSupportedMediaTypes()).willReturn(Collections.singletonList(contentType));, +		given(messageConverter.getSupportedMediaTypes()).willReturn(Collections.singletonList(MediaType.TEXT_PLAIN));, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessorTests.java, +import java.util.Collections;, +import com.fasterxml.jackson.annotation.JsonTypeInfo;, +import com.fasterxml.jackson.annotation.JsonTypeName;, +import static org.junit.Assert.*;, +, +@SuppressWarnings("unused"), +		servletRequest.setMethod("POST");, +]