[+++ /dev/null, +++ /dev/null, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java, +import org.springframework.messaging.support.IdTimestampMessageHeaderInitializer;, +	private static final IdTimestampMessageHeaderInitializer headerInitializer;, +, +	static {, +		headerInitializer = new IdTimestampMessageHeaderInitializer();, +		headerInitializer.setDisableIdGeneration();, +		headerInitializer.setEnableTimestamp(false);, +	}, +		headerInitializer.initHeaders(this);, +		headerInitializer.initHeaders(this);, +		return new SimpMessageHeaderAccessor(SimpMessageType.MESSAGE, null);, +		return new SimpMessageHeaderAccessor(messageType, null);, +		return new SimpMessageHeaderAccessor(message);, +		return wrap(message);, +++ /dev/null, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java, +import org.springframework.messaging.support.IdTimestampMessageHeaderInitializer;, +	private static final IdTimestampMessageHeaderInitializer headerInitializer;, +, +	static {, +		headerInitializer = new IdTimestampMessageHeaderInitializer();, +		headerInitializer.setDisableIdGeneration();, +		headerInitializer.setEnableTimestamp(false);, +	}, +		headerInitializer.initHeaders(this);, +		headerInitializer.initHeaders(this);, +		return new SimpMessageHeaderAccessor(SimpMessageType.MESSAGE, null);, +		return new SimpMessageHeaderAccessor(messageType, null);, +		return new SimpMessageHeaderAccessor(message);, +		return wrap(message);, +++ /dev/null, +++ /dev/null, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java, +import org.springframework.messaging.support.IdTimestampMessageHeaderInitializer;, +	private static final IdTimestampMessageHeaderInitializer headerInitializer;, +, +	static {, +		headerInitializer = new IdTimestampMessageHeaderInitializer();, +		headerInitializer.setDisableIdGeneration();, +		headerInitializer.setEnableTimestamp(false);, +	}, +		headerInitializer.initHeaders(this);, +		headerInitializer.initHeaders(this);, +		return new SimpMessageHeaderAccessor(SimpMessageType.MESSAGE, null);, +		return new SimpMessageHeaderAccessor(messageType, null);, +		return new SimpMessageHeaderAccessor(message);, +		return wrap(message);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java, +import org.springframework.messaging.support.IdTimestampMessageHeaderInitializer;, +	private static final IdTimestampMessageHeaderInitializer headerInitializer;, +, +	static {, +		headerInitializer = new IdTimestampMessageHeaderInitializer();, +		headerInitializer.setDisableIdGeneration();, +		headerInitializer.setEnableTimestamp(false);, +	}, +		headerInitializer.initHeaders(this);, +		headerInitializer.initHeaders(this);, +		return new SimpMessageHeaderAccessor(SimpMessageType.MESSAGE, null);, +		return new SimpMessageHeaderAccessor(messageType, null);, +		return new SimpMessageHeaderAccessor(message);, +		return wrap(message);, +++ /dev/null, +++ /dev/null, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompHeaderAccessor.java, +		return new StompHeaderAccessor(command, null);, +		return new StompHeaderAccessor(command, headers);, +		return new StompHeaderAccessor();, +		return new StompHeaderAccessor(message);, +		return wrap(message);, +++ /dev/null, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java, +import org.springframework.messaging.support.IdTimestampMessageHeaderInitializer;, +	private static final IdTimestampMessageHeaderInitializer headerInitializer;, +, +	static {, +		headerInitializer = new IdTimestampMessageHeaderInitializer();, +		headerInitializer.setDisableIdGeneration();, +		headerInitializer.setEnableTimestamp(false);, +	}, +		headerInitializer.initHeaders(this);, +		headerInitializer.initHeaders(this);, +		return new SimpMessageHeaderAccessor(SimpMessageType.MESSAGE, null);, +		return new SimpMessageHeaderAccessor(messageType, null);, +		return new SimpMessageHeaderAccessor(message);, +		return wrap(message);, +++ /dev/null, +++ /dev/null, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompHeaderAccessor.java, +		return new StompHeaderAccessor(command, null);, +		return new StompHeaderAccessor(command, headers);, +		return new StompHeaderAccessor();, +		return new StompHeaderAccessor(message);, +		return wrap(message);]