[+++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Bean.java, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Bean.java, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Configuration.java, + * @see ConfigurationClassPostProcessor, + * @see AnnotationConfigApplicationContext, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Bean.java, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Configuration.java, + * @see ConfigurationClassPostProcessor, + * @see AnnotationConfigApplicationContext, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClass.java, +	private String beanName;, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Bean.java, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Configuration.java, + * @see ConfigurationClassPostProcessor, + * @see AnnotationConfigApplicationContext, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClass.java, +	private String beanName;, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Bean.java, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Configuration.java, + * @see ConfigurationClassPostProcessor, + * @see AnnotationConfigApplicationContext, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClass.java, +	private String beanName;, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, + * Parses a {@link Configuration} class definition, populating a collection of, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Bean.java, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Configuration.java, + * @see ConfigurationClassPostProcessor, + * @see AnnotationConfigApplicationContext, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClass.java, +	private String beanName;, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, + * Parses a {@link Configuration} class definition, populating a collection of, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Import.java, + * Indicates one or more {@link Configuration} classes to import., + * Only supported for actual {@literal @Configuration}-annotated classes., + *, + * <p>{@literal @Bean} definitions declared in imported {@literal @Configuration} classes, + * should be accessed by using {@link Autowired @Autowired} injection.  Either the bean, + * itself can be autowired, or the configuration class instance declaring the bean can be, + * autowired.  The latter approach allows for explicit, IDE-friendly navigation between, + * {@literal @Configuration} class methods., + *, + * <p>If XML or other non-{@literal @Configuration} bean definition resources need to be, + * imported, use {@link ImportResource @ImportResource}, + * @see ImportResource, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Bean.java, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Configuration.java, + * @see ConfigurationClassPostProcessor, + * @see AnnotationConfigApplicationContext, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClass.java, +	private String beanName;, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, + * Parses a {@link Configuration} class definition, populating a collection of, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Import.java, + * Indicates one or more {@link Configuration} classes to import., + * Only supported for actual {@literal @Configuration}-annotated classes., + *, + * <p>{@literal @Bean} definitions declared in imported {@literal @Configuration} classes, + * should be accessed by using {@link Autowired @Autowired} injection.  Either the bean, + * itself can be autowired, or the configuration class instance declaring the bean can be, + * autowired.  The latter approach allows for explicit, IDE-friendly navigation between, + * {@literal @Configuration} class methods., + *, + * <p>If XML or other non-{@literal @Configuration} bean definition resources need to be, + * imported, use {@link ImportResource @ImportResource}, + * @see ImportResource, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ImportResource.java, +, +/**, + * Indicates one or more resources containing bean definitions to import., + *, + * <p>Like {@link Import @Import}, this annotation provides functionality similar to the, + * {@literal <import/>} element in Spring XML.  It is typically used when, + * designing {@link Configuration @Configuration} classes to be bootstrapped by, + * {@link AnnotationConfigApplicationContext}, but where some XML functionality such as, + * namespaces is still necessary., + *, + * <p>By default, arguments to the {@link #value()} attribute will be processed using, + * an {@link XmlBeanDefinitionReader}, i.e. it is assumed that resources are Spring, + * {@literal <beans/>} XML files.  Optionally, the {@link #reader()} attribute may be, + * supplied, allowing the user to specify a different {@link BeanDefinitionReader}, + * implementation, such as, + * {@link org.springframework.beans.factory.support.PropertiesBeanDefinitionReader}., + *, + * @author Chris Beams, + * @since 3.0, + * @see Configuration, + * @see Import, + */, +	/**]