[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToArrayConverter.java, + * Converts a Map to an Array., + * First converts the source Map to a Collection, then converts that Collection to an Array., + * Delegates to {@link MapToCollectionConverter} and {@link CollectionToArrayConverter} helpers to do this., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToArrayConverter.java, + * Converts a Map to an Array., + * First converts the source Map to a Collection, then converts that Collection to an Array., + * Delegates to {@link MapToCollectionConverter} and {@link CollectionToArrayConverter} helpers to do this., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToCollectionConverter.java, + * Converts a Map to a Collection., + * First, creates a new Collection of the requested targetType with a size equal to the size of the source Map., + * Then copies each element in the source map to the target collection., + * During the copy process, if the target collection's parameterized type is a String, each Map entry is first encoded as a "key=value" property String, then added to the Collection., + * If the collection type is another Object type, the value of each Map entry is added to the Collection., + * Will perform a conversion from the source maps's parameterized K,V types to the target collection's parameterized type if necessary., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToArrayConverter.java, + * Converts a Map to an Array., + * First converts the source Map to a Collection, then converts that Collection to an Array., + * Delegates to {@link MapToCollectionConverter} and {@link CollectionToArrayConverter} helpers to do this., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToCollectionConverter.java, + * Converts a Map to a Collection., + * First, creates a new Collection of the requested targetType with a size equal to the size of the source Map., + * Then copies each element in the source map to the target collection., + * During the copy process, if the target collection's parameterized type is a String, each Map entry is first encoded as a "key=value" property String, then added to the Collection., + * If the collection type is another Object type, the value of each Map entry is added to the Collection., + * Will perform a conversion from the source maps's parameterized K,V types to the target collection's parameterized type if necessary., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToMapConverter.java, + * Converts a Map to another Map., + * First, creates a new Map of the requested targetType with a size equal to the size of the source Map., + * Then copies each element in the source map to the target map., + * Will perform a conversion from the source maps's parameterized K,V types to the target map's parameterized types K,V if necessary., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToArrayConverter.java, + * Converts a Map to an Array., + * First converts the source Map to a Collection, then converts that Collection to an Array., + * Delegates to {@link MapToCollectionConverter} and {@link CollectionToArrayConverter} helpers to do this., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToCollectionConverter.java, + * Converts a Map to a Collection., + * First, creates a new Collection of the requested targetType with a size equal to the size of the source Map., + * Then copies each element in the source map to the target collection., + * During the copy process, if the target collection's parameterized type is a String, each Map entry is first encoded as a "key=value" property String, then added to the Collection., + * If the collection type is another Object type, the value of each Map entry is added to the Collection., + * Will perform a conversion from the source maps's parameterized K,V types to the target collection's parameterized type if necessary., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToMapConverter.java, + * Converts a Map to another Map., + * First, creates a new Map of the requested targetType with a size equal to the size of the source Map., + * Then copies each element in the source map to the target map., + * Will perform a conversion from the source maps's parameterized K,V types to the target map's parameterized types K,V if necessary., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToObjectConverter.java, + * Converts a Map to an Object by returning the first Map entry value after converting it to the desired targetType., +		return this.conversionService.canConvert(sourceType.getMapKeyTypeDescriptor(), targetType), +				&& this.conversionService.canConvert(sourceType.getMapValueTypeDescriptor(), targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToArrayConverter.java, + * Converts a Map to an Array., + * First converts the source Map to a Collection, then converts that Collection to an Array., + * Delegates to {@link MapToCollectionConverter} and {@link CollectionToArrayConverter} helpers to do this., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToCollectionConverter.java, + * Converts a Map to a Collection., + * First, creates a new Collection of the requested targetType with a size equal to the size of the source Map., + * Then copies each element in the source map to the target collection., + * During the copy process, if the target collection's parameterized type is a String, each Map entry is first encoded as a "key=value" property String, then added to the Collection., + * If the collection type is another Object type, the value of each Map entry is added to the Collection., + * Will perform a conversion from the source maps's parameterized K,V types to the target collection's parameterized type if necessary., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToMapConverter.java, + * Converts a Map to another Map., + * First, creates a new Map of the requested targetType with a size equal to the size of the source Map., + * Then copies each element in the source map to the target map., + * Will perform a conversion from the source maps's parameterized K,V types to the target map's parameterized types K,V if necessary., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToObjectConverter.java, + * Converts a Map to an Object by returning the first Map entry value after converting it to the desired targetType., +		return this.conversionService.canConvert(sourceType.getMapKeyTypeDescriptor(), targetType), +				&& this.conversionService.canConvert(sourceType.getMapValueTypeDescriptor(), targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToStringConverter.java, + * Converts from a Map to a String by storing each source Map entry into the String as a property (name=value pair). , + * @see Properties#store(java.io.OutputStream, String), +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToArrayConverter.java, + * Converts a Map to an Array., + * First converts the source Map to a Collection, then converts that Collection to an Array., + * Delegates to {@link MapToCollectionConverter} and {@link CollectionToArrayConverter} helpers to do this., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToCollectionConverter.java, + * Converts a Map to a Collection., + * First, creates a new Collection of the requested targetType with a size equal to the size of the source Map., + * Then copies each element in the source map to the target collection., + * During the copy process, if the target collection's parameterized type is a String, each Map entry is first encoded as a "key=value" property String, then added to the Collection., + * If the collection type is another Object type, the value of each Map entry is added to the Collection., + * Will perform a conversion from the source maps's parameterized K,V types to the target collection's parameterized type if necessary., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToMapConverter.java, + * Converts a Map to another Map., + * First, creates a new Map of the requested targetType with a size equal to the size of the source Map., + * Then copies each element in the source map to the target map., + * Will perform a conversion from the source maps's parameterized K,V types to the target map's parameterized types K,V if necessary., +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToObjectConverter.java, + * Converts a Map to an Object by returning the first Map entry value after converting it to the desired targetType., +		return this.conversionService.canConvert(sourceType.getMapKeyTypeDescriptor(), targetType), +				&& this.conversionService.canConvert(sourceType.getMapValueTypeDescriptor(), targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/MapToStringConverter.java, + * Converts from a Map to a String by storing each source Map entry into the String as a property (name=value pair). , + * @see Properties#store(java.io.OutputStream, String), +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ObjectToArrayConverter.java, + * Converts an Object to a single-element Array containing the Object., + * Will convert the Object to the target Array's component type if necessary.]