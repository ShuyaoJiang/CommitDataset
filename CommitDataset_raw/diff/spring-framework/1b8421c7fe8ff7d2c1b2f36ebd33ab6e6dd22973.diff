[+++ b/spring-test/src/main/java/org/springframework/mock/web/MockCookie.java, +		String[] directives = valueAndDirectives.length > 1 ? valueAndDirectives[1].split("\\s*;\\s*") : new String[0];, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockCookie.java, +		String[] directives = valueAndDirectives.length > 1 ? valueAndDirectives[1].split("\\s*;\\s*") : new String[0];, +++ b/spring-test/src/test/java/org/springframework/mock/web/MockHttpServletRequestTests.java, +	@Test, +	public void testCookieParsing() {, +		MockCookie m = MockCookie.parse("foo=bar");, +		testCookie("foo", "bar", m);, +		m = MockCookie.parse("foo=bar;");, +		assertFalse(m.isHttpOnly());, +		assertFalse(m.getSecure());, +		testCookie("foo", "bar", m);, +		m = MockCookie.parse("foo=bar; HttpOnly");, +		testCookie("foo", "bar", m);, +		assertTrue(m.isHttpOnly());, +		assertFalse(m.getSecure());, +		m = MockCookie.parse("foo=bar; Secure");, +		testCookie("foo", "bar", m);, +		assertTrue(m.getSecure());, +		assertFalse(m.isHttpOnly());, +	}, +, +	private void testCookie(String name, String value, MockCookie mockCookie) {, +		assertEquals(name, mockCookie.getName());, +		assertEquals(value, mockCookie.getValue());, +	}, +]