[+++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.java, +		doRegisterBean(annotatedClass, null, null, null, null);, +	 * class-declared annotations., +	 * (or {@code null} for generating a default bean name), +	 * @since 5.2, +	public void registerBean(Class<?> annotatedClass, @Nullable String name) {, +		doRegisterBean(annotatedClass, name, null, null, null);, +		doRegisterBean(annotatedClass, null, qualifiers, null, null);, +	 * (or {@code null} for generating a default bean name), +	public void registerBean(Class<?> annotatedClass, @Nullable String name,, +			Class<? extends Annotation>... qualifiers) {, +, +		doRegisterBean(annotatedClass, name, qualifiers, null, null);, +	}, +, +	/**, +	 * Register a bean from the given bean class, deriving its metadata from, +	 * class-declared annotations, using the given supplier for obtaining a new, +	 * instance (possibly declared as a lambda expression or method reference)., +	 * @param annotatedClass the class of the bean, +	 * @param supplier a callback for creating an instance of the bean, +	 * (may be {@code null}), +	 * @since 5.0, +	 */, +	public <T> void registerBean(Class<T> annotatedClass, @Nullable Supplier<T> supplier) {, +		doRegisterBean(annotatedClass, null, null, supplier, null);, +	}, +, +	/**, +	 * Register a bean from the given bean class, deriving its metadata from, +	 * class-declared annotations, using the given supplier for obtaining a new, +	 * instance (possibly declared as a lambda expression or method reference)., +	 * @param annotatedClass the class of the bean, +	 * @param name an explicit name for the bean, +	 * (or {@code null} for generating a default bean name), +	 * @param supplier a callback for creating an instance of the bean, +	 * (may be {@code null}), +	 * @since 5.0, +	 */, +	public <T> void registerBean(Class<T> annotatedClass, @Nullable String name, @Nullable Supplier<T> supplier) {, +		doRegisterBean(annotatedClass, name, null, supplier, null);, +	 * (or {@code null} for generating a default bean name), +	 * @param supplier a callback for creating an instance of the bean, +	 * (may be {@code null}), +	 * @param customizers one or more callbacks for customizing the factory's, +	 * {@link BeanDefinition}, e.g. setting a lazy-init or primary flag, +	 * @since 5.2, +	 */, +	public <T> void registerBean(Class<T> annotatedClass, @Nullable String name, @Nullable Supplier<T> supplier,, +			BeanDefinitionCustomizer... customizers) {, +, +		doRegisterBean(annotatedClass, name, null, supplier, customizers);, +	}, +, +	/**, +	 * Register a bean from the given bean class, deriving its metadata from, +	 * class-declared annotations., +	 * @param annotatedClass the class of the bean, +	 * @param name an explicit name for the bean, +	 * @param supplier a callback for creating an instance of the bean, +	 * (may be {@code null}), +	 * @param customizers one or more callbacks for customizing the factory's, +	 * {@link BeanDefinition}, e.g. setting a lazy-init or primary flag, +	private <T> void doRegisterBean(Class<T> annotatedClass, @Nullable String name,, +			@Nullable Class<? extends Annotation>[] qualifiers, @Nullable Supplier<T> supplier,, +			@Nullable BeanDefinitionCustomizer[] customizers) {, +		abd.setInstanceSupplier(supplier);, +		if (customizers != null) {, +			for (BeanDefinitionCustomizer customizer : customizers) {, +		}, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.java, +		doRegisterBean(annotatedClass, null, null, null, null);, +	 * class-declared annotations., +	 * (or {@code null} for generating a default bean name), +	 * @since 5.2, +	public void registerBean(Class<?> annotatedClass, @Nullable String name) {, +		doRegisterBean(annotatedClass, name, null, null, null);, +		doRegisterBean(annotatedClass, null, qualifiers, null, null);, +	 * (or {@code null} for generating a default bean name), +	public void registerBean(Class<?> annotatedClass, @Nullable String name,, +			Class<? extends Annotation>... qualifiers) {, +, +		doRegisterBean(annotatedClass, name, qualifiers, null, null);, +	}, +, +	/**, +	 * Register a bean from the given bean class, deriving its metadata from, +	 * class-declared annotations, using the given supplier for obtaining a new, +	 * instance (possibly declared as a lambda expression or method reference)., +	 * @param annotatedClass the class of the bean, +	 * @param supplier a callback for creating an instance of the bean, +	 * (may be {@code null}), +	 * @since 5.0, +	 */, +	public <T> void registerBean(Class<T> annotatedClass, @Nullable Supplier<T> supplier) {, +		doRegisterBean(annotatedClass, null, null, supplier, null);, +	}, +, +	/**, +	 * Register a bean from the given bean class, deriving its metadata from]