[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilter.java, +import javax.servlet.ServletRequest;, +import javax.servlet.ServletResponse;, +import org.springframework.web.filter.GenericFilterBean;, +public class ResourceUrlEncodingFilter extends GenericFilterBean {, +	public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain), +			throws IOException, ServletException {, +		if (!(request instanceof HttpServletRequest) || !(response instanceof HttpServletResponse)) {, +			throw new ServletException("ResourceUrlEncodingFilter just supports HTTP requests");, +		}, +		HttpServletRequest httpRequest = (HttpServletRequest) request;, +		HttpServletResponse httpResponse = (HttpServletResponse) response;, +		filterChain.doFilter(httpRequest, new ResourceUrlEncodingResponseWrapper(httpRequest, httpResponse));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilter.java, +import javax.servlet.ServletRequest;, +import javax.servlet.ServletResponse;, +import org.springframework.web.filter.GenericFilterBean;, +public class ResourceUrlEncodingFilter extends GenericFilterBean {, +	public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain), +			throws IOException, ServletException {, +		if (!(request instanceof HttpServletRequest) || !(response instanceof HttpServletResponse)) {, +			throw new ServletException("ResourceUrlEncodingFilter just supports HTTP requests");, +		}, +		HttpServletRequest httpRequest = (HttpServletRequest) request;, +		HttpServletResponse httpResponse = (HttpServletResponse) response;, +		filterChain.doFilter(httpRequest, new ResourceUrlEncodingResponseWrapper(httpRequest, httpResponse));, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilterTests.java, +import static org.junit.Assert.assertEquals;, +		this.filter.doFilter(request, response, (req, res) -> {, +			String result = ((HttpServletResponse) res).encodeURL("/resources/bar.css");, +		this.filter.doFilter(request, response, (req, res) -> {, +			String result = ((HttpServletResponse) res).encodeURL("/context/resources/bar.css");, +		this.filter.doFilter(request, response, (req, res) -> {, +			String result = ((HttpServletResponse) res).encodeURL("/context/resources/bar.css");, +		this.filter.doFilter(request, response, (req, res) -> {, +			String result = ((HttpServletResponse) res).encodeURL("/context/resources/bar.css");, +		this.filter.doFilter(request, response, (req, res) -> {, +			String result = ((HttpServletResponse) res).encodeURL("?foo=1");, +		this.filter.doFilter(request, response, (req, res) -> {, +			String result = ((HttpServletResponse) res).encodeURL("/resources/bar.css?foo=bar&url=http://example.org");, +		this.filter.doFilter(request, response, (req, res) -> {, +			String result = ((HttpServletResponse) res).encodeURL("index?key=value");]