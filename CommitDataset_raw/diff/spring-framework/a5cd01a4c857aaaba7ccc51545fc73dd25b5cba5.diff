[+++ b/spring-web/src/main/java/org/springframework/web/filter/reactive/HiddenHttpMethodFilter.java, + * Copyright 2002-2018 the original author or authors., +import java.util.Arrays;, +import java.util.Collections;, +import java.util.List;, +	private static final List<HttpMethod> ALLOWED_METHODS =, +			Collections.unmodifiableList(Arrays.asList(HttpMethod.PUT,, +					HttpMethod.DELETE, HttpMethod.PATCH));, +, +		if (ALLOWED_METHODS.contains(httpMethod)) {, +		else {, +			return exchange;, +		}, +	}, +++ b/spring-web/src/main/java/org/springframework/web/filter/reactive/HiddenHttpMethodFilter.java, + * Copyright 2002-2018 the original author or authors., +import java.util.Arrays;, +import java.util.Collections;, +import java.util.List;, +	private static final List<HttpMethod> ALLOWED_METHODS =, +			Collections.unmodifiableList(Arrays.asList(HttpMethod.PUT,, +					HttpMethod.DELETE, HttpMethod.PATCH));, +, +		if (ALLOWED_METHODS.contains(httpMethod)) {, +		else {, +			return exchange;, +		}, +	}, +++ b/spring-web/src/test/java/org/springframework/web/filter/reactive/HiddenHttpMethodFilterTests.java, + * Copyright 2002-2018 the original author or authors., +	public void filterWithParameterMethodNotAllowed() {, +		postForm("_method=TRACE").block(Duration.ZERO);, +		assertEquals(HttpMethod.POST, this.filterChain.getHttpMethod());, +	}, +, +	@Test]