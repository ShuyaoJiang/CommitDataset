[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/resource/AppCacheManifestTransformer.java, + * <p>All files that have the ".appcache" file extension, or the extension given in the constructor,, + * will be transformed by this class. This hash is computed using the content of the appcache manifest, + * and the content of the linked resources; so changing a resource linked in the manifest, + * <p>In order to serve manifest files with the proper {@code "text/manifest"} content type,, + * it is required to configure it with, + * {@code requestedContentTypeResolverBuilder.mediaType("appcache", MediaType.valueOf("text/manifest")}, + * in {@code WebReactiveConfiguration.configureRequestedContentTypeResolver()}., + *, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/resource/AppCacheManifestTransformer.java, + * <p>All files that have the ".appcache" file extension, or the extension given in the constructor,, + * will be transformed by this class. This hash is computed using the content of the appcache manifest, + * and the content of the linked resources; so changing a resource linked in the manifest, + * <p>In order to serve manifest files with the proper {@code "text/manifest"} content type,, + * it is required to configure it with, + * {@code requestedContentTypeResolverBuilder.mediaType("appcache", MediaType.valueOf("text/manifest")}, + * in {@code WebReactiveConfiguration.configureRequestedContentTypeResolver()}., + *, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/AppCacheManifestTransformer.java, + * <p>All files that have the ".appcache" file extension, or the extension given in the constructor,, + * will be transformed by this class. This hash is computed using the content of the appcache manifest, + * and the content of the linked resources; so changing a resource linked in the manifest, + * or the manifest itself should invalidate the browser cache., + * <p>In order to serve manifest files with the proper {@code "text/manifest"} content type,, + * it is required to configure it with, + * {@code contentNegotiationConfigurer.mediaType("appcache", MediaType.valueOf("text/manifest")}, + * in a {@code WebMvcConfigurerAdapter}.]