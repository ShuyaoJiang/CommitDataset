[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientResponse.java, + * <p><strong>NOTE:</strong> When given access to a {@link ClientResponse},, + * through the {@code WebClient}, + * {@link WebClient.RequestHeadersSpec#exchange() exchange()} method,, + * you must always use one of the body or toEntity methods to ensure resources, + * are released and avoid potential issues with HTTP connection pooling., + * You can use {@code bodyToMono(Void.class)} if no response content is, + * expected. However keep in mind that if the response does have content, the, + * connection will be closed and will not be placed back in the pool., +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientResponse.java, + * <p><strong>NOTE:</strong> When given access to a {@link ClientResponse},, + * through the {@code WebClient}, + * {@link WebClient.RequestHeadersSpec#exchange() exchange()} method,, + * you must always use one of the body or toEntity methods to ensure resources, + * are released and avoid potential issues with HTTP connection pooling., + * You can use {@code bodyToMono(Void.class)} if no response content is, + * expected. However keep in mind that if the response does have content, the, + * connection will be closed and will not be placed back in the pool., +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/WebClient.java, +		 * <p><strong>NOTE:</strong> You must always use one of the body or, +		 * entity methods of the response to ensure resources are released., +		 * See {@link ClientResponse} for more details., +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientResponse.java, + * <p><strong>NOTE:</strong> When given access to a {@link ClientResponse},, + * through the {@code WebClient}, + * {@link WebClient.RequestHeadersSpec#exchange() exchange()} method,, + * you must always use one of the body or toEntity methods to ensure resources, + * are released and avoid potential issues with HTTP connection pooling., + * You can use {@code bodyToMono(Void.class)} if no response content is, + * expected. However keep in mind that if the response does have content, the, + * connection will be closed and will not be placed back in the pool., +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/WebClient.java, +		 * <p><strong>NOTE:</strong> You must always use one of the body or, +		 * entity methods of the response to ensure resources are released., +		 * See {@link ClientResponse} for more details., +++ b/src/docs/asciidoc/web/webflux-webclient.adoc, +When using `exchange()` you must always use any of the body or toEntity methods of, +connection pooling. You can use `bodyToMono(Void.class)` if no response content is, +expected. However keep in mind that if the response does have content, the connection, +will be closed and will not be placed back in the pool.]