[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * Determine if the supplied {@link Annotation} is defined in the core JDK, +	 * @param annotation the annotation to check (never {@code null}), +	 * Retrieve the given annotation's attributes as a {@link Map}, preserving all, +	 * attribute types as-is., +	 * <p>Note: This method actually returns an {@link AnnotationAttributes} instance., +	 * However, the {@code Map} signature has been preserved for binary compatibility., +	 * Retrieve the given annotation's attributes as a {@link Map}. Equivalent to, +	 * calling {@link #getAnnotationAttributes(Annotation, boolean, boolean)} with, +	 * <p>Note: This method actually returns an {@link AnnotationAttributes} instance., +	 * However, the {@code Map} signature has been preserved for binary compatibility., +	 * compatibility with {@link org.springframework.core.type.AnnotationMetadata}, +	 * or to preserve them as Class references, +	 * map structure., +	 * <p>This method provides fully recursive annotation reading capabilities on par with, +	 * the reflection-based {@link org.springframework.core.type.StandardAnnotationMetadata}., +	 * compatibility with {@link org.springframework.core.type.AnnotationMetadata}, +	 * or to preserve them as Class references, +	 * Retrieve the <em>value</em> of a named attribute, given an annotation instance., +	 * Retrieve the <em>default value</em> of a named attribute, given an annotation instance., +	 * Retrieve the <em>default value</em> of a named attribute, given the, +	 * {@link Class annotation type}.]