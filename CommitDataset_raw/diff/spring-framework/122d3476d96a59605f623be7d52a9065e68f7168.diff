[+++ b/spring-context/src/main/java/org/springframework/cache/annotation/CacheEvict.java, + * Copyright 2002-2015 the original author or authors., + * a cache eviction operation., +	 * Spring Expression Language (SpEL) attribute used for making the cache, +	 * eviction operation conditional., +	 * <p>Default is "", meaning the cache eviction is always performed., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/CacheEvict.java, + * Copyright 2002-2015 the original author or authors., + * a cache eviction operation., +	 * Spring Expression Language (SpEL) attribute used for making the cache, +	 * eviction operation conditional., +	 * <p>Default is "", meaning the cache eviction is always performed., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/CachePut.java, + * Copyright 2002-2015 the original author or authors., +	 * Spring Expression Language (SpEL) attribute used for making the cache, +	 * put operation conditional., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/CacheEvict.java, + * Copyright 2002-2015 the original author or authors., + * a cache eviction operation., +	 * Spring Expression Language (SpEL) attribute used for making the cache, +	 * eviction operation conditional., +	 * <p>Default is "", meaning the cache eviction is always performed., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/CachePut.java, + * Copyright 2002-2015 the original author or authors., +	 * Spring Expression Language (SpEL) attribute used for making the cache, +	 * put operation conditional., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/Cacheable.java, + * Copyright 2002-2015 the original author or authors., + * and the returned value is used as the cache value., +	 * Spring Expression Language (SpEL) attribute used for making the method, +	 * caching conditional., +	 * <p>Default is "", meaning the method result is always cached., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/CacheEvict.java, + * Copyright 2002-2015 the original author or authors., + * a cache eviction operation., +	 * Spring Expression Language (SpEL) attribute used for making the cache, +	 * eviction operation conditional., +	 * <p>Default is "", meaning the cache eviction is always performed., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/CachePut.java, + * Copyright 2002-2015 the original author or authors., +	 * Spring Expression Language (SpEL) attribute used for making the cache, +	 * put operation conditional., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/Cacheable.java, + * Copyright 2002-2015 the original author or authors., + * and the returned value is used as the cache value., +	 * Spring Expression Language (SpEL) attribute used for making the method, +	 * caching conditional., +	 * <p>Default is "", meaning the method result is always cached., +++ b/spring-context/src/main/java/org/springframework/context/event/EventListener.java, +	 * Spring Expression Language (SpEL) attribute used for making the event, +	 * handling conditional., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/CacheEvict.java, + * Copyright 2002-2015 the original author or authors., + * a cache eviction operation., +	 * Spring Expression Language (SpEL) attribute used for making the cache, +	 * eviction operation conditional., +	 * <p>Default is "", meaning the cache eviction is always performed., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/CachePut.java, + * Copyright 2002-2015 the original author or authors., +	 * Spring Expression Language (SpEL) attribute used for making the cache, +	 * put operation conditional., +++ b/spring-context/src/main/java/org/springframework/cache/annotation/Cacheable.java, + * Copyright 2002-2015 the original author or authors., + * and the returned value is used as the cache value., +	 * Spring Expression Language (SpEL) attribute used for making the method, +	 * caching conditional., +	 * <p>Default is "", meaning the method result is always cached., +++ b/spring-context/src/main/java/org/springframework/context/event/EventListener.java, +	 * Spring Expression Language (SpEL) attribute used for making the event, +	 * handling conditional., +++ b/spring-tx/src/main/java/org/springframework/transaction/event/TransactionalEventListener.java, + *, + * <p>If the event is not published within the boundaries of a managed transaction, the event, + *, + * <p>Adding {@link org.springframework.core.annotation.Order @Order} on your annotated method, + * allows you to prioritize that listener amongst other listeners running in the same phase., +	 * event is not processed at all unless {@link #fallbackExecution} has been, +	 * Spring Expression Language (SpEL) attribute used for making the event, +	 * handling conditional., +	 * @see EventListener#condition]