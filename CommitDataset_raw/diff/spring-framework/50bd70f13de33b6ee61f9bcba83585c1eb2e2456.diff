[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/ParamTag.java, + * Copyright 2002-2013 the original author or authors., + * @author Nicholas Williams, +	private boolean valueSet;, +		Param param = new Param();, +		param.setName(this.name);, +		if (this.valueSet) {, +			param.setValue(this.value);, +		this.valueSet = true;, +	}, +, +	@Override, +	public void release() {, +		super.release();, +		this.name = null;, +		this.value = null;, +		this.valueSet = false;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/ParamTag.java, + * Copyright 2002-2013 the original author or authors., + * @author Nicholas Williams, +	private boolean valueSet;, +		Param param = new Param();, +		param.setName(this.name);, +		if (this.valueSet) {, +			param.setValue(this.value);, +		this.valueSet = true;, +	}, +, +	@Override, +	public void release() {, +		super.release();, +		this.name = null;, +		this.value = null;, +		this.valueSet = false;, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/tags/ParamTagTests.java, + * Copyright 2002-2013 the original author or authors., + * Unit tests for {@link ParamTag}, + * @author Nicholas Williams, +	public void testParamWithImplicitNullValue() throws JspException {, +	public void testParamWithExplicitNullValue() throws JspException {, +		tag.setName("name");, +		tag.setValue(null);, +, +		int action = tag.doEndTag();, +, +		assertEquals(Tag.EVAL_PAGE, action);, +		assertEquals("name", parent.getParam().getName());, +		assertNull(parent.getParam().getValue());, +	}, +, +	public void testParamWithValueThenReleaseThenBodyValue() throws JspException {, +		tag.setName("name1");, +		tag.setValue("value1");, +, +		int action = tag.doEndTag();, +, +		assertEquals(Tag.EVAL_PAGE, action);, +		assertEquals("name1", parent.getParam().getName());, +		assertEquals("value1", parent.getParam().getValue());, +, +		tag.release();, +, +		parent = new MockParamSupportTag();, +		tag.setPageContext(createPageContext());, +		tag.setParent(parent);, +		tag.setName("name2");, +		tag.setBodyContent(new MockBodyContent("value2",, +				new MockHttpServletResponse()));, +, +		action = tag.doEndTag();, +, +		assertEquals(Tag.EVAL_PAGE, action);, +		assertEquals("name2", parent.getParam().getName());, +		assertEquals("value2", parent.getParam().getValue());, +	}, +]