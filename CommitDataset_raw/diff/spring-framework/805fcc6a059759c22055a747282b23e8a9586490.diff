[+++ b/spring-web/src/main/java/org/springframework/web/client/AsyncRestTemplate.java, +		getErrorHandler().handleError(url, method, response);, +++ b/spring-web/src/main/java/org/springframework/web/client/AsyncRestTemplate.java, +		getErrorHandler().handleError(url, method, response);, +++ b/spring-web/src/main/java/org/springframework/web/client/ResponseErrorHandler.java, +import java.net.URI;, +import org.springframework.http.HttpMethod;, +	/**, +	 * Alternative to {@link #handleError(ClientHttpResponse)} with extra, +	 * information providing access to the request URL and HTTP method., +	 * @param url the request URL, +	 * @param method the HTTP method, +	 * @param response the response with the error, +	 * @throws IOException in case of I/O errors, +	 * @since 5.0, +	 */, +	default void handleError(URI url, HttpMethod method, ClientHttpResponse response) throws IOException {, +		handleError(response);, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/client/AsyncRestTemplate.java, +		getErrorHandler().handleError(url, method, response);, +++ b/spring-web/src/main/java/org/springframework/web/client/ResponseErrorHandler.java, +import java.net.URI;, +import org.springframework.http.HttpMethod;, +	/**, +	 * Alternative to {@link #handleError(ClientHttpResponse)} with extra, +	 * information providing access to the request URL and HTTP method., +	 * @param url the request URL, +	 * @param method the HTTP method, +	 * @param response the response with the error, +	 * @throws IOException in case of I/O errors, +	 * @since 5.0, +	 */, +	default void handleError(URI url, HttpMethod method, ClientHttpResponse response) throws IOException {, +		handleError(response);, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, +			errorHandler.handleError(url, method, response);, +++ b/spring-web/src/main/java/org/springframework/web/client/AsyncRestTemplate.java, +		getErrorHandler().handleError(url, method, response);, +++ b/spring-web/src/main/java/org/springframework/web/client/ResponseErrorHandler.java, +import java.net.URI;, +import org.springframework.http.HttpMethod;, +	/**, +	 * Alternative to {@link #handleError(ClientHttpResponse)} with extra, +	 * information providing access to the request URL and HTTP method., +	 * @param url the request URL, +	 * @param method the HTTP method, +	 * @param response the response with the error, +	 * @throws IOException in case of I/O errors, +	 * @since 5.0, +	 */, +	default void handleError(URI url, HttpMethod method, ClientHttpResponse response) throws IOException {, +		handleError(response);, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, +			errorHandler.handleError(url, method, response);, +++ b/spring-web/src/test/java/org/springframework/web/client/RestTemplateTests.java, +		URI uri = new URI("http://example.com");, +		given(requestFactory.createRequest(uri, HttpMethod.GET)).willReturn(request);, +		willThrow(new HttpServerErrorException(HttpStatus.INTERNAL_SERVER_ERROR)), +				.given(errorHandler).handleError(uri, HttpMethod.GET, response);]