[+++ b/spring-aop/src/test/java/org/springframework/aop/target/HotSwappableTargetSourceTests.java, +		assertTrue(ex.getMessage().contains("null"));, +++ b/spring-aop/src/test/java/org/springframework/aop/target/HotSwappableTargetSourceTests.java, +		assertTrue(ex.getMessage().contains("null"));, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperGenericsTests.java, +			assertTrue(ex.getMessage().contains("java.lang.Integer"));, +++ b/spring-aop/src/test/java/org/springframework/aop/target/HotSwappableTargetSourceTests.java, +		assertTrue(ex.getMessage().contains("null"));, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperGenericsTests.java, +			assertTrue(ex.getMessage().contains("java.lang.Integer"));, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBeanTests.java, +		assertTrue(factory.toString().contains("TestServiceLocator3"));, +++ b/spring-aop/src/test/java/org/springframework/aop/target/HotSwappableTargetSourceTests.java, +		assertTrue(ex.getMessage().contains("null"));, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperGenericsTests.java, +			assertTrue(ex.getMessage().contains("java.lang.Integer"));, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBeanTests.java, +		assertTrue(factory.toString().contains("TestServiceLocator3"));, +++ b/spring-context/src/test/java/org/springframework/aop/aspectj/OverloadedAdviceTests.java, +					cause.getMessage().contains("invalidAbsoluteTypeName"));, +					cause.getMessage().contains("Cannot resolve method 'myBeforeAdvice' to a unique method"));, +++ b/spring-aop/src/test/java/org/springframework/aop/target/HotSwappableTargetSourceTests.java, +		assertTrue(ex.getMessage().contains("null"));, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperGenericsTests.java, +			assertTrue(ex.getMessage().contains("java.lang.Integer"));, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBeanTests.java, +		assertTrue(factory.toString().contains("TestServiceLocator3"));, +++ b/spring-context/src/test/java/org/springframework/aop/aspectj/OverloadedAdviceTests.java, +					cause.getMessage().contains("invalidAbsoluteTypeName"));, +					cause.getMessage().contains("Cannot resolve method 'myBeforeAdvice' to a unique method"));, +++ b/spring-context/src/test/java/org/springframework/aop/framework/AbstractAopProxyTests.java, +			assertTrue(ex.getMessage().contains("ntroduction"));, +			assertTrue(ex.getMessage().contains("frozen"));, +++ b/spring-aop/src/test/java/org/springframework/aop/target/HotSwappableTargetSourceTests.java, +		assertTrue(ex.getMessage().contains("null"));, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperGenericsTests.java, +			assertTrue(ex.getMessage().contains("java.lang.Integer"));, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBeanTests.java, +		assertTrue(factory.toString().contains("TestServiceLocator3"));, +++ b/spring-context/src/test/java/org/springframework/aop/aspectj/OverloadedAdviceTests.java, +					cause.getMessage().contains("invalidAbsoluteTypeName"));, +					cause.getMessage().contains("Cannot resolve method 'myBeforeAdvice' to a unique method"));, +++ b/spring-context/src/test/java/org/springframework/aop/framework/AbstractAopProxyTests.java, +			assertTrue(ex.getMessage().contains("ntroduction"));, +			assertTrue(ex.getMessage().contains("frozen"));, +++ b/spring-context/src/test/java/org/springframework/aop/framework/ProxyFactoryBeanTests.java, +			assertTrue(aex.getMessage().contains("TargetSource"));, +++ b/spring-aop/src/test/java/org/springframework/aop/target/HotSwappableTargetSourceTests.java, +		assertTrue(ex.getMessage().contains("null"));, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperGenericsTests.java, +			assertTrue(ex.getMessage().contains("java.lang.Integer"));, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBeanTests.java, +		assertTrue(factory.toString().contains("TestServiceLocator3"));, +++ b/spring-context/src/test/java/org/springframework/aop/aspectj/OverloadedAdviceTests.java, +					cause.getMessage().contains("invalidAbsoluteTypeName"));, +					cause.getMessage().contains("Cannot resolve method 'myBeforeAdvice' to a unique method"));, +++ b/spring-context/src/test/java/org/springframework/aop/framework/AbstractAopProxyTests.java, +			assertTrue(ex.getMessage().contains("ntroduction"));, +			assertTrue(ex.getMessage().contains("frozen"));, +++ b/spring-context/src/test/java/org/springframework/aop/framework/ProxyFactoryBeanTests.java, +			assertTrue(aex.getMessage().contains("TargetSource"));, +++ b/spring-context/src/test/java/org/springframework/beans/factory/xml/XmlBeanFactoryTests.java, +			assertTrue(ex.getMessage().contains("bogusParent"));, +			assertTrue(ex.getResourceDescription().contains("initializers.xml"));, +			assertTrue(ex.getMessage().contains("initializers.xml"));, +			assertTrue(ex.getMessage().contains("init-method3"));, +			assertTrue(ex.getMessage().contains("init"));, +			assertTrue(ex.toString().contains("touchy"));, +			assertTrue(ex.getResourceDescription().contains("classNotFound.xml"));, +			assertTrue("Bogus method name correctly reported", ex.getMessage().contains("bogusMethod"));, +++ b/spring-aop/src/test/java/org/springframework/aop/target/HotSwappableTargetSourceTests.java, +		assertTrue(ex.getMessage().contains("null"));, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperGenericsTests.java, +			assertTrue(ex.getMessage().contains("java.lang.Integer"));, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBeanTests.java, +		assertTrue(factory.toString().contains("TestServiceLocator3"));, +++ b/spring-context/src/test/java/org/springframework/aop/aspectj/OverloadedAdviceTests.java, +					cause.getMessage().contains("invalidAbsoluteTypeName"));, +					cause.getMessage().contains("Cannot resolve method 'myBeforeAdvice' to a unique method"));, +++ b/spring-context/src/test/java/org/springframework/aop/framework/AbstractAopProxyTests.java, +			assertTrue(ex.getMessage().contains("ntroduction"));, +			assertTrue(ex.getMessage().contains("frozen"));, +++ b/spring-context/src/test/java/org/springframework/aop/framework/ProxyFactoryBeanTests.java, +			assertTrue(aex.getMessage().contains("TargetSource"));, +++ b/spring-context/src/test/java/org/springframework/beans/factory/xml/XmlBeanFactoryTests.java, +			assertTrue(ex.getMessage().contains("bogusParent"));, +			assertTrue(ex.getResourceDescription().contains("initializers.xml"));, +			assertTrue(ex.getMessage().contains("initializers.xml"));, +			assertTrue(ex.getMessage().contains("init-method3"));, +			assertTrue(ex.getMessage().contains("init"));, +			assertTrue(ex.toString().contains("touchy"));, +			assertTrue(ex.getResourceDescription().contains("classNotFound.xml"));, +			assertTrue("Bogus method name correctly reported", ex.getMessage().contains("bogusMethod"));, +++ b/spring-context/src/test/java/org/springframework/context/BeanThatBroadcasts.java, +		if (applicationContext.getDisplayName().contains("listener")) {, +++ b/spring-aop/src/test/java/org/springframework/aop/target/HotSwappableTargetSourceTests.java, +		assertTrue(ex.getMessage().contains("null"));, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperGenericsTests.java, +			assertTrue(ex.getMessage().contains("java.lang.Integer"));, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBeanTests.java]