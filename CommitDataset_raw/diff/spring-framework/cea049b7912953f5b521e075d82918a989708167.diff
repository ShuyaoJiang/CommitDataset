[+++ b/spring-websocket/src/main/resources/META-INF/spring.tooling, +http\://www.springframework.org/schema/websocket@icon=org/springframework/web/socket/config/spring-websocket.gif, +++ b/spring-websocket/src/main/resources/META-INF/spring.tooling, +http\://www.springframework.org/schema/websocket@icon=org/springframework/web/socket/config/spring-websocket.gif, +++ /dev/null, +++ b/spring-websocket/src/main/resources/META-INF/spring.tooling, +http\://www.springframework.org/schema/websocket@icon=org/springframework/web/socket/config/spring-websocket.gif, +++ /dev/null, +++ /dev/null, +++ b/spring-websocket/src/main/resources/META-INF/spring.tooling, +http\://www.springframework.org/schema/websocket@icon=org/springframework/web/socket/config/spring-websocket.gif, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-websocket/src/main/resources/META-INF/spring.tooling, +http\://www.springframework.org/schema/websocket@icon=org/springframework/web/socket/config/spring-websocket.gif, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-websocket/src/main/resources/META-INF/spring.tooling, +http\://www.springframework.org/schema/websocket@icon=org/springframework/web/socket/config/spring-websocket.gif, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-websocket/src/main/resources/META-INF/spring.tooling, +http\://www.springframework.org/schema/websocket@icon=org/springframework/web/socket/config/spring-websocket.gif, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/config/annotation/AbstractWebSocketHandlerRegistrationTests.java, +/*, + * Copyright 2002-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.socket.config.annotation;, +, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +, +import org.junit.Before;, +import org.junit.Test;, +import org.mockito.Mockito;, +import org.springframework.scheduling.TaskScheduler;, +import org.springframework.web.socket.WebSocketHandler;, +import org.springframework.web.socket.adapter.TextWebSocketHandlerAdapter;, +import org.springframework.web.socket.config.annotation.AbstractWebSocketHandlerRegistration;, +import org.springframework.web.socket.server.support.DefaultHandshakeHandler;, +import org.springframework.web.socket.server.HandshakeHandler;, +import org.springframework.web.socket.server.HandshakeInterceptor;, +import org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor;, +import org.springframework.web.socket.sockjs.SockJsService;, +import org.springframework.web.socket.sockjs.transport.TransportType;, +import org.springframework.web.socket.sockjs.transport.handler.DefaultSockJsService;, +import org.springframework.web.socket.sockjs.transport.handler.WebSocketTransportHandler;, +, +import static org.junit.Assert.*;, +, +/**, + * Test fixture for {@link org.springframework.web.socket.config.annotation.AbstractWebSocketHandlerRegistration}., + *, + * @author Rossen Stoyanchev, + */, +public class AbstractWebSocketHandlerRegistrationTests {, +, +	private TestWebSocketHandlerRegistration registration;, +, +	private TaskScheduler taskScheduler;, +, +, +	@Before, +	public void setup() {, +		this.taskScheduler = Mockito.mock(TaskScheduler.class);, +		this.registration = new TestWebSocketHandlerRegistration(taskScheduler);, +	}, +, +	@Test, +	public void minimal() {, +, +		WebSocketHandler wsHandler = new TextWebSocketHandlerAdapter();, +		this.registration.addHandler(wsHandler, "/foo", "/bar");, +, +		List<Mapping> mappings = this.registration.getMappings();]