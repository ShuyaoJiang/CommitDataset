[+++ b/org.springframework.aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java, +import java.io.IOException;, +import java.io.ObjectInputStream;, +	private static final Set<PointcutPrimitive> SUPPORTED_PRIMITIVES = new HashSet<PointcutPrimitive>();, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.EXECUTION);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.ARGS);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.REFERENCE);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.THIS);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.TARGET);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.WITHIN);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.AT_ANNOTATION);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.AT_WITHIN);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.AT_ARGS);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.AT_TARGET);, +	private transient PointcutParser pointcutParser;, +	private transient PointcutExpression pointcutExpression;, +, +	private transient Map<Method, ShadowMatch> shadowMatchCache = new ConcurrentHashMap<Method, ShadowMatch>(32);, +		initializePointcutParser();, +		initializePointcutParser();, +	private void initializePointcutParser() {, +		this.pointcutParser =, +				PointcutParser.getPointcutParserSupportingSpecifiedPrimitivesAndUsingContextClassloaderForResolution(, +						SUPPORTED_PRIMITIVES);, +		this.pointcutParser.registerPointcutDesignatorHandler(new BeanNamePointcutDesignatorHandler());, +	}, +, +, +	//---------------------------------------------------------------------, +	// Serialization support, +	//---------------------------------------------------------------------, +, +	private void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException {, +		// Rely on default serialization, just initialize state after deserialization., +		ois.defaultReadObject();, +, +		// Initialize transient fields., +		initializePointcutParser();, +		this.shadowMatchCache = new ConcurrentHashMap<Method, ShadowMatch>(32);, +	}, +, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java, +import java.io.IOException;, +import java.io.ObjectInputStream;, +	private static final Set<PointcutPrimitive> SUPPORTED_PRIMITIVES = new HashSet<PointcutPrimitive>();, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.EXECUTION);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.ARGS);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.REFERENCE);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.THIS);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.TARGET);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.WITHIN);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.AT_ANNOTATION);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.AT_WITHIN);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.AT_ARGS);, +		SUPPORTED_PRIMITIVES.add(PointcutPrimitive.AT_TARGET);, +	private transient PointcutParser pointcutParser;, +	private transient PointcutExpression pointcutExpression;, +, +	private transient Map<Method, ShadowMatch> shadowMatchCache = new ConcurrentHashMap<Method, ShadowMatch>(32);, +		initializePointcutParser();, +		initializePointcutParser();, +	private void initializePointcutParser() {, +		this.pointcutParser =, +				PointcutParser.getPointcutParserSupportingSpecifiedPrimitivesAndUsingContextClassloaderForResolution(, +						SUPPORTED_PRIMITIVES);, +		this.pointcutParser.registerPointcutDesignatorHandler(new BeanNamePointcutDesignatorHandler());, +	}, +, +, +	//---------------------------------------------------------------------, +	// Serialization support, +	//---------------------------------------------------------------------, +, +	private void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException {, +		// Rely on default serialization, just initialize state after deserialization., +		ois.defaultReadObject();, +, +		// Initialize transient fields., +		initializePointcutParser();, +		this.shadowMatchCache = new ConcurrentHashMap<Method, ShadowMatch>(32);, +	}, +, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.java, + * Copyright 2002-2010 the original author or authors., +import java.io.IOException;, +import java.io.ObjectInputStream;, +, +	private transient Advice advice;, +	private transient volatile Object adviceMonitor = new Object();, +				this.advice = this.beanFactory.getBean(this.adviceBeanName, Advice.class);, +, +	//---------------------------------------------------------------------, +	// Serialization support, +	//---------------------------------------------------------------------, +, +	private void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException {, +		// Rely on default serialization, just initialize state after deserialization., +		ois.defaultReadObject();, +, +		// Initialize transient fields.]