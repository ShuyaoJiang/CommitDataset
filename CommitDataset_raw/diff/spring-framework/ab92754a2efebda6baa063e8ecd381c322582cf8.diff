[+++ b/spring-web/src/test/java/org/springframework/web/method/MvcAnnotationPredicates.java, +import org.springframework.web.bind.annotation.MatrixVariable;, +	public static MatrixVariablePredicate matrixAttribute() {, +		return new MatrixVariablePredicate();, +	}, +	public static class MatrixVariablePredicate implements Predicate<MethodParameter> {, +, +		private String name;, +, +		private String pathVar;, +, +, +		public MatrixVariablePredicate name(String name) {, +			this.name = name;, +			return this;, +		}, +, +		public MatrixVariablePredicate noName() {, +			this.name = "";, +			return this;, +		}, +, +		public MatrixVariablePredicate pathVar(String name) {, +			this.pathVar = name;, +			return this;, +		}, +, +		public MatrixVariablePredicate noPathVar() {, +			this.pathVar = ValueConstants.DEFAULT_NONE;, +			return this;, +		}, +, +		@Override, +		public boolean test(MethodParameter parameter) {, +			MatrixVariable annotation = parameter.getParameterAnnotation(MatrixVariable.class);, +			return annotation != null &&, +					(this.name == null || this.name.equalsIgnoreCase(annotation.name())) &&, +					(this.pathVar == null || this.pathVar.equalsIgnoreCase(annotation.pathVar()));, +		}, +	}, +, +++ b/spring-web/src/test/java/org/springframework/web/method/MvcAnnotationPredicates.java, +import org.springframework.web.bind.annotation.MatrixVariable;, +	public static MatrixVariablePredicate matrixAttribute() {, +		return new MatrixVariablePredicate();, +	}, +	public static class MatrixVariablePredicate implements Predicate<MethodParameter> {, +, +		private String name;, +, +		private String pathVar;, +, +, +		public MatrixVariablePredicate name(String name) {, +			this.name = name;, +			return this;, +		}, +, +		public MatrixVariablePredicate noName() {, +			this.name = "";, +			return this;, +		}, +, +		public MatrixVariablePredicate pathVar(String name) {, +			this.pathVar = name;, +			return this;, +		}, +, +		public MatrixVariablePredicate noPathVar() {, +			this.pathVar = ValueConstants.DEFAULT_NONE;, +			return this;, +		}, +, +		@Override, +		public boolean test(MethodParameter parameter) {, +			MatrixVariable annotation = parameter.getParameterAnnotation(MatrixVariable.class);, +			return annotation != null &&, +					(this.name == null || this.name.equalsIgnoreCase(annotation.name())) &&, +					(this.pathVar == null || this.pathVar.equalsIgnoreCase(annotation.pathVar()));, +		}, +	}, +, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractNamedValueSyncArgumentResolver.java, +, +	protected AbstractNamedValueSyncArgumentResolver(@Nullable ConfigurableBeanFactory factory,, +			ReactiveAdapterRegistry registry) {, +, +++ b/spring-web/src/test/java/org/springframework/web/method/MvcAnnotationPredicates.java, +import org.springframework.web.bind.annotation.MatrixVariable;, +	public static MatrixVariablePredicate matrixAttribute() {, +		return new MatrixVariablePredicate();, +	}, +	public static class MatrixVariablePredicate implements Predicate<MethodParameter> {, +, +		private String name;, +, +		private String pathVar;, +, +, +		public MatrixVariablePredicate name(String name) {]