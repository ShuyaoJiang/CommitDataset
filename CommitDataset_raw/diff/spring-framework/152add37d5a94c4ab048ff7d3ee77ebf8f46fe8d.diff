[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/FlashMap.java, +	private final UrlPathHelper urlPathHelper = new UrlPathHelper();, +	, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/FlashMap.java, +	private final UrlPathHelper urlPathHelper = new UrlPathHelper();, +	, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/FlashMapManager.java, + * underlying storage until the next request. , + * , + * <p>The most common use case for using flash storage is a redirect. , + * For example creating a resource in a POST request and then redirecting, + * to the page that shows the resource. Flash storage may be used to , + * pass along a success message., +	 * Request attribute holding the read-only Map with flash attributes saved , +	 * during the previous request., +	 * @see RequestContextUtils#getInputFlashMap(HttpServletRequest), +	public static final String INPUT_FLASH_MAP_ATTRIBUTE = FlashMapManager.class.getName() + ".INPUT_FLASH_MAP";, +	 * Request attribute holding the {@link FlashMap} to add attributes to during , +	 * the current request., +	 * @see RequestContextUtils#getOutputFlashMap(HttpServletRequest), +	public static final String OUTPUT_FLASH_MAP_ATTRIBUTE = FlashMapManager.class.getName() + ".OUTPUT_FLASH_MAP";, +	 * 	<li>Create a FlashMap and make it available under the request attribute , +	 * 	{@link #OUTPUT_FLASH_MAP_ATTRIBUTE}., +	 * 	<li>Locate the FlashMap saved during the previous request and make it, +	 * 	available under the request attribute {@link #INPUT_FLASH_MAP_ATTRIBUTE}., +	 * 	<li>Remove expired FlashMap instances., +	 * <p>If the {@link #OUTPUT_FLASH_MAP_ATTRIBUTE} request attribute exists, +	 * return "false" immediately., +	 * Access the FlashMap with attributes added during the current request and, +	 * if it is not empty, save it in the underlying storage. , +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/FlashMap.java, +	private final UrlPathHelper urlPathHelper = new UrlPathHelper();, +	, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/FlashMapManager.java, + * underlying storage until the next request. , + * , + * <p>The most common use case for using flash storage is a redirect. , + * For example creating a resource in a POST request and then redirecting, + * to the page that shows the resource. Flash storage may be used to , + * pass along a success message., +	 * Request attribute holding the read-only Map with flash attributes saved , +	 * during the previous request., +	 * @see RequestContextUtils#getInputFlashMap(HttpServletRequest), +	public static final String INPUT_FLASH_MAP_ATTRIBUTE = FlashMapManager.class.getName() + ".INPUT_FLASH_MAP";, +	 * Request attribute holding the {@link FlashMap} to add attributes to during , +	 * the current request., +	 * @see RequestContextUtils#getOutputFlashMap(HttpServletRequest), +	public static final String OUTPUT_FLASH_MAP_ATTRIBUTE = FlashMapManager.class.getName() + ".OUTPUT_FLASH_MAP";, +	 * 	<li>Create a FlashMap and make it available under the request attribute , +	 * 	{@link #OUTPUT_FLASH_MAP_ATTRIBUTE}., +	 * 	<li>Locate the FlashMap saved during the previous request and make it, +	 * 	available under the request attribute {@link #INPUT_FLASH_MAP_ATTRIBUTE}., +	 * 	<li>Remove expired FlashMap instances., +	 * <p>If the {@link #OUTPUT_FLASH_MAP_ATTRIBUTE} request attribute exists, +	 * return "false" immediately., +	 * Access the FlashMap with attributes added during the current request and, +	 * if it is not empty, save it in the underlying storage. , +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java, +		mavContainer.addAllAttributes(RequestContextUtils.getInputFlashMap(request));, +				FlashMap flashMap = RequestContextUtils.getOutputFlashMap(request);, +				flashMap.putAll(redirectModel.getFlashAttributes());, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/FlashMap.java, +	private final UrlPathHelper urlPathHelper = new UrlPathHelper();, +	, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/FlashMapManager.java, + * underlying storage until the next request. , + * , + * <p>The most common use case for using flash storage is a redirect. , + * For example creating a resource in a POST request and then redirecting, + * to the page that shows the resource. Flash storage may be used to , + * pass along a success message., +	 * Request attribute holding the read-only Map with flash attributes saved , +	 * during the previous request., +	 * @see RequestContextUtils#getInputFlashMap(HttpServletRequest), +	public static final String INPUT_FLASH_MAP_ATTRIBUTE = FlashMapManager.class.getName() + ".INPUT_FLASH_MAP";, +	 * Request attribute holding the {@link FlashMap} to add attributes to during , +	 * the current request., +	 * @see RequestContextUtils#getOutputFlashMap(HttpServletRequest), +	public static final String OUTPUT_FLASH_MAP_ATTRIBUTE = FlashMapManager.class.getName() + ".OUTPUT_FLASH_MAP";, +	 * 	<li>Create a FlashMap and make it available under the request attribute , +	 * 	{@link #OUTPUT_FLASH_MAP_ATTRIBUTE}., +	 * 	<li>Locate the FlashMap saved during the previous request and make it, +	 * 	available under the request attribute {@link #INPUT_FLASH_MAP_ATTRIBUTE}., +	 * 	<li>Remove expired FlashMap instances., +	 * <p>If the {@link #OUTPUT_FLASH_MAP_ATTRIBUTE} request attribute exists, +	 * return "false" immediately., +	 * Access the FlashMap with attributes added during the current request and, +	 * if it is not empty, save it in the underlying storage. , +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java, +		mavContainer.addAllAttributes(RequestContextUtils.getInputFlashMap(request));, +				FlashMap flashMap = RequestContextUtils.getOutputFlashMap(request);, +				flashMap.putAll(redirectModel.getFlashAttributes());, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/support/DefaultFlashMapManager.java, +import java.util.Map;, +	 * <p>This method never creates an HTTP session. The new FlashMap created , +	 * for the current request is exposed as a request attribute only and is , +	 * not saved in the session until {@link #requestCompleted} is called., +		if (request.getAttribute(OUTPUT_FLASH_MAP_ATTRIBUTE) != null) {, +		FlashMap outputFlashMap = new FlashMap();, +		request.setAttribute(OUTPUT_FLASH_MAP_ATTRIBUTE, outputFlashMap);]