[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/BufferingStompDecoder.java, +public class BufferingStompDecoder {, +, +	private final StompDecoder stompDecoder;, +	public BufferingStompDecoder(StompDecoder stompDecoder, int bufferSizeLimit) {, +		Assert.notNull(stompDecoder, "'stompDecoder' is required");, +		this.stompDecoder = stompDecoder;, +	 * Return the wrapped, +	 * {@link org.springframework.messaging.simp.stomp.StompDecoder}., +	 */, +	public StompDecoder getStompDecoder() {, +		return this.stompDecoder;, +	}, +, +	/**, +		List<Message<byte[]>> messages = this.stompDecoder.decode(bufferToDecode, headers);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/BufferingStompDecoder.java, +public class BufferingStompDecoder {, +, +	private final StompDecoder stompDecoder;, +	public BufferingStompDecoder(StompDecoder stompDecoder, int bufferSizeLimit) {, +		Assert.notNull(stompDecoder, "'stompDecoder' is required");, +		this.stompDecoder = stompDecoder;, +	 * Return the wrapped, +	 * {@link org.springframework.messaging.simp.stomp.StompDecoder}., +	 */, +	public StompDecoder getStompDecoder() {, +		return this.stompDecoder;, +	}, +, +	/**, +		List<Message<byte[]>> messages = this.stompDecoder.decode(bufferToDecode, headers);, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/stomp/BufferingStompDecoderTests.java, +import java.util.Collections;, +	private final StompDecoder STOMP_DECODER = new StompDecoder();, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +		assertEquals(Collections.<Message<byte[]>>emptyList(), messages);, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +			// expected, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 10);, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +		List<Message<byte[]>> messages = stompDecoder.decode(toByteBuffer(chunk));, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/BufferingStompDecoder.java, +public class BufferingStompDecoder {, +, +	private final StompDecoder stompDecoder;, +	public BufferingStompDecoder(StompDecoder stompDecoder, int bufferSizeLimit) {, +		Assert.notNull(stompDecoder, "'stompDecoder' is required");, +		this.stompDecoder = stompDecoder;, +	 * Return the wrapped, +	 * {@link org.springframework.messaging.simp.stomp.StompDecoder}., +	 */, +	public StompDecoder getStompDecoder() {, +		return this.stompDecoder;, +	}, +, +	/**, +		List<Message<byte[]>> messages = this.stompDecoder.decode(bufferToDecode, headers);, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/stomp/BufferingStompDecoderTests.java, +import java.util.Collections;, +	private final StompDecoder STOMP_DECODER = new StompDecoder();, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +		assertEquals(Collections.<Message<byte[]>>emptyList(), messages);, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +			// expected, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 10);, +		BufferingStompDecoder stompDecoder = new BufferingStompDecoder(STOMP_DECODER, 128);, +		List<Message<byte[]>> messages = stompDecoder.decode(toByteBuffer(chunk));, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/StompSubProtocolHandler.java, +import org.springframework.messaging.simp.stomp.StompDecoder;, +	private final StompDecoder stompDecoder = new StompDecoder();, +, +	private final Map<String, BufferingStompDecoder> decoders = new ConcurrentHashMap<String, BufferingStompDecoder>();, +, +		List<Message<byte[]>> messages;, +		this.decoders.put(session.getId(), new BufferingStompDecoder(this.stompDecoder, getMessageSizeLimit()));]