[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompEncoder.java, +			if (command.requiresContentLength() && "content-length".equals(entry.getKey())) {, +				continue;, +			}, +			if (StompCommand.CONNECT.equals(command) &&, +					StompHeaderAccessor.STOMP_PASSCODE_HEADER.equals(entry.getKey())) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompEncoder.java, +			if (command.requiresContentLength() && "content-length".equals(entry.getKey())) {, +				continue;, +			}, +			if (StompCommand.CONNECT.equals(command) &&, +					StompHeaderAccessor.STOMP_PASSCODE_HEADER.equals(entry.getKey())) {, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/stomp/StompCodecTests.java, +	@Test, +	public void encodeFrameWithContentLengthPresent() {, +		StompHeaderAccessor headers = StompHeaderAccessor.create(StompCommand.SEND);, +		headers.setContentLength(12);, +, +		Message<byte[]> frame = MessageBuilder.createMessage("Message body".getBytes(), headers.getMessageHeaders());, +, +		assertEquals("SEND\ncontent-length:12\n\nMessage body\0",, +				new Reactor11StompCodec().encoder().apply(frame).asString());, +	}, +]