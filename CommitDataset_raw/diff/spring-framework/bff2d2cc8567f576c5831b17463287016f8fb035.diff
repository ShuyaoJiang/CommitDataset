[+++ b/spring-context/src/test/java/org/springframework/context/support/SimpleThreadScopeTests.java, + * Copyright 2002-2018 the original author or authors., +		TestBean bean = this.applicationContext.getBean(name, TestBean.class);, +		TestBean bean2 = this.applicationContext.getBean(name, TestBean.class);, +		TestBean[] beans = new TestBean[2];, +					.pollInterval(10, TimeUnit.MILLISECONDS), +					.until(() -> (beans[0] != null) && (beans[1] != null));, +++ b/spring-context/src/test/java/org/springframework/context/support/SimpleThreadScopeTests.java, + * Copyright 2002-2018 the original author or authors., +		TestBean bean = this.applicationContext.getBean(name, TestBean.class);, +		TestBean bean2 = this.applicationContext.getBean(name, TestBean.class);, +		TestBean[] beans = new TestBean[2];, +					.pollInterval(10, TimeUnit.MILLISECONDS), +					.until(() -> (beans[0] != null) && (beans[1] != null));, +++ b/spring-context/src/test/java/org/springframework/scheduling/annotation/AsyncExecutionTests.java, +		context.close();, +++ b/spring-context/src/test/java/org/springframework/context/support/SimpleThreadScopeTests.java, + * Copyright 2002-2018 the original author or authors., +		TestBean bean = this.applicationContext.getBean(name, TestBean.class);, +		TestBean bean2 = this.applicationContext.getBean(name, TestBean.class);, +		TestBean[] beans = new TestBean[2];, +					.pollInterval(10, TimeUnit.MILLISECONDS), +					.until(() -> (beans[0] != null) && (beans[1] != null));, +++ b/spring-context/src/test/java/org/springframework/scheduling/annotation/AsyncExecutionTests.java, +		context.close();, +++ b/spring-context/src/test/java/org/springframework/scheduling/annotation/EnableAsyncTests.java, +		ctx.close();, +		ctx.close();, +		ctx.close();, +, +		ctx.close();, +, +		ctx.close();, +, +		ctx.close();, +, +		ctx.close();, +, +		ctx.close();, +		@SuppressWarnings("resource"), +					.pollInterval(10, TimeUnit.MILLISECONDS), +					.pollInterval(10, TimeUnit.MILLISECONDS), +++ b/spring-context/src/test/java/org/springframework/context/support/SimpleThreadScopeTests.java, + * Copyright 2002-2018 the original author or authors., +		TestBean bean = this.applicationContext.getBean(name, TestBean.class);, +		TestBean bean2 = this.applicationContext.getBean(name, TestBean.class);, +		TestBean[] beans = new TestBean[2];, +					.pollInterval(10, TimeUnit.MILLISECONDS), +					.until(() -> (beans[0] != null) && (beans[1] != null));, +++ b/spring-context/src/test/java/org/springframework/scheduling/annotation/AsyncExecutionTests.java, +		context.close();, +++ b/spring-context/src/test/java/org/springframework/scheduling/annotation/EnableAsyncTests.java, +		ctx.close();, +		ctx.close();, +		ctx.close();, +, +		ctx.close();, +, +		ctx.close();, +, +		ctx.close();, +, +		ctx.close();, +, +		ctx.close();, +		@SuppressWarnings("resource"), +					.pollInterval(10, TimeUnit.MILLISECONDS), +					.pollInterval(10, TimeUnit.MILLISECONDS), +++ b/spring-context/src/test/java/org/springframework/scheduling/concurrent/AbstractSchedulingTaskExecutorTests.java]