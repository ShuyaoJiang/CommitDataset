[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +		return this.helperConverter.matches(sourceType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +		return this.helperConverter.matches(sourceType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		if (targetType.getElementTypeDescriptor() == null) {, +			// yes, +		boolean canConvert = conversionService.canConvert(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor());, +		if (canConvert) {, +			// yes, +			return true;, +		} else {, +			if (sourceType.getElementTypeDescriptor().getType().isAssignableFrom(targetType.getElementTypeDescriptor().getType())) {, +				// maybe;, +				return true;, +			} else {, +				// no;, +				return false;, +			}, +		}, +	}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +		return this.helperConverter.matches(sourceType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		if (targetType.getElementTypeDescriptor() == null) {, +			// yes, +		boolean canConvert = conversionService.canConvert(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor());, +		if (canConvert) {, +			// yes, +			return true;, +		} else {, +			if (sourceType.getElementTypeDescriptor().getType().isAssignableFrom(targetType.getElementTypeDescriptor().getType())) {, +				// maybe;, +				return true;, +			} else {, +				// no;, +				return false;, +			}, +		}, +	}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectConverter.java, +		return this.helperConverter.matches(sourceType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +		return this.helperConverter.matches(sourceType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		if (targetType.getElementTypeDescriptor() == null) {, +			// yes, +		boolean canConvert = conversionService.canConvert(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor());, +		if (canConvert) {, +			// yes, +			return true;, +		} else {, +			if (sourceType.getElementTypeDescriptor().getType().isAssignableFrom(targetType.getElementTypeDescriptor().getType())) {, +				// maybe;, +				return true;, +			} else {, +				// no;, +				return false;, +			}, +		}, +	}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectConverter.java, +		return this.helperConverter.matches(sourceType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToStringConverter.java, +		return this.helperConverter.matches(sourceType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +		return this.helperConverter.matches(sourceType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		if (targetType.getElementTypeDescriptor() == null) {, +			// yes, +		boolean canConvert = conversionService.canConvert(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor());, +		if (canConvert) {, +			// yes, +			return true;, +		} else {, +			if (sourceType.getElementTypeDescriptor().getType().isAssignableFrom(targetType.getElementTypeDescriptor().getType())) {, +				// maybe;, +				return true;, +			} else {, +				// no;, +				return false;, +			}, +		}, +	}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectConverter.java, +		return this.helperConverter.matches(sourceType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToStringConverter.java, +		return this.helperConverter.matches(sourceType, targetType);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayConverter.java, +		if (sourceType.getElementTypeDescriptor() == null) {, +			// maybe, +		boolean canConvert = conversionService.canConvert(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor());, +		if (canConvert) {, +			// yes, +			return true;, +		} else {, +			if (sourceType.getElementTypeDescriptor().getType().isAssignableFrom(targetType.getElementTypeDescriptor().getType())) {, +				// maybe;, +				return true;, +			} else {]