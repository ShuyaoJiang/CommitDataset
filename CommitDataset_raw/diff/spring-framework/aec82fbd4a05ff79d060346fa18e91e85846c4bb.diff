[+++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java, +		String sqlToUse = sql;, +		if (sql.contains("\\:")) {, +			sqlToUse = sql.replace("\\:", ":"); , +		}, +		ParsedSql parsedSql = new ParsedSql(sqlToUse);, +		int escapes = 0;, +				String parameter = null;, +				if (j < statement.length && c == ':' && statement[j] == '{') {, +					// :{x} style parameter, +					while (j < statement.length && !('}' == statement[j])) {, +						j++;, +					}, +					if (j - i > 3) {, +						parameter = sql.substring(i + 2, j);, +						namedParameterCount = addNewNamedParameter(namedParameters, namedParameterCount, parameter);, +						totalParameterCount = addNamedParameter(parsedSql, totalParameterCount, escapes, i, j + 1, parameter);, +					}, +					j++;, +				}, +				else {, +						parameter = sql.substring(i + 1, j);, +						namedParameterCount = addNewNamedParameter(namedParameters, namedParameterCount, parameter);, +						totalParameterCount = addNamedParameter(parsedSql, totalParameterCount, escapes, i, j, parameter);, +				if (c == '\\') {, +					int j = i + 1;, +					if (j < statement.length && statement[j] == ':') {, +						// this is an escaped : and should be skipped, +						escapes++;, +						i = i + 2;, +						continue;, +					}, +				}, +	protected static int addNamedParameter(ParsedSql parsedSql, int totalParameterCount, int escapes, int i, int j,, +			String parameter) {, +		parsedSql.addNamedParameter(parameter, i - escapes, j - escapes);, +		totalParameterCount++;, +		return totalParameterCount;, +	}, +, +	protected static int addNewNamedParameter(Set<String> namedParameters, int namedParameterCount, String parameter) {, +		if (!namedParameters.contains(parameter)) {, +			namedParameters.add(parameter);, +			namedParameterCount++;, +		}, +		return namedParameterCount;, +	}, +, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java, +		String sqlToUse = sql;, +		if (sql.contains("\\:")) {, +			sqlToUse = sql.replace("\\:", ":"); , +		}, +		ParsedSql parsedSql = new ParsedSql(sqlToUse);, +		int escapes = 0;, +				String parameter = null;, +				if (j < statement.length && c == ':' && statement[j] == '{') {, +					// :{x} style parameter, +					while (j < statement.length && !('}' == statement[j])) {, +						j++;, +					}, +					if (j - i > 3) {, +						parameter = sql.substring(i + 2, j);, +						namedParameterCount = addNewNamedParameter(namedParameters, namedParameterCount, parameter);, +						totalParameterCount = addNamedParameter(parsedSql, totalParameterCount, escapes, i, j + 1, parameter);, +					}, +					j++;, +				}, +				else {, +						parameter = sql.substring(i + 1, j);, +						namedParameterCount = addNewNamedParameter(namedParameters, namedParameterCount, parameter);, +						totalParameterCount = addNamedParameter(parsedSql, totalParameterCount, escapes, i, j, parameter);, +				if (c == '\\') {, +					int j = i + 1;, +					if (j < statement.length && statement[j] == ':') {, +						// this is an escaped : and should be skipped, +						escapes++;, +						i = i + 2;, +						continue;, +					}, +				}, +	protected static int addNamedParameter(ParsedSql parsedSql, int totalParameterCount, int escapes, int i, int j,, +			String parameter) {, +		parsedSql.addNamedParameter(parameter, i - escapes, j - escapes);, +		totalParameterCount++;, +		return totalParameterCount;, +	}, +, +	protected static int addNewNamedParameter(Set<String> namedParameters, int namedParameterCount, String parameter) {, +		if (!namedParameters.contains(parameter)) {, +			namedParameters.add(parameter);, +			namedParameterCount++;, +		}, +		return namedParameterCount;, +	}, +, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/core/namedparam/NamedParameterUtilsTests.java, +	 * SPR-7476, +	 */, +	@Test]