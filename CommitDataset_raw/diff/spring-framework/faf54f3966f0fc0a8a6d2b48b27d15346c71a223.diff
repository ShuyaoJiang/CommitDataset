[+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java, +	private final boolean nullSafe;, +, +	public MethodReference(boolean nullSafe, String methodName, int pos, SpelNodeImpl... arguments) {, +		this.nullSafe = nullSafe;, +		List<TypeDescriptor> argumentTypes = getArgumentTypes(arguments);, +		this.cachedExecutor = new CachedMethodExecutor(executorToUse, targetType, argumentTypes);, +					value.getClass().getName(), ex.getMessage());, +	private MethodExecutor getCachedExecutor(TypeDescriptor target, List<TypeDescriptor> argumentTypes) {, +							SpelMessage.PROBLEM_LOCATING_METHOD, name, contextObject.getClass());, +						contextObject instanceof Class ? ((Class<?>) contextObject) : contextObject.getClass()));, +		private final EvaluationContext evaluationContext;, +		private final Object value;, +		private final TypeDescriptor targetType;, +		private final Object[] arguments;, +		public MethodValueRef(ExpressionState state) {, +		public CachedMethodExecutor(MethodExecutor methodExecutor, TypeDescriptor target, List<TypeDescriptor> argumentTypes) {, +		public boolean isSuitable(TypeDescriptor target, List<TypeDescriptor> argumentTypes) {, +			return (this.methodExecutor != null && this.target != null &&, +					this.target.equals(target) && this.argumentTypes.equals(argumentTypes));, +]