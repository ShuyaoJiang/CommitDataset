[+++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DerbyEmbeddedDatabaseConfigurer.java, +	public static OutputStream getNoopOutputStream() {, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DerbyEmbeddedDatabaseConfigurer.java, +	public static OutputStream getNoopOutputStream() {, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.java, + * @author Dave Syer, +	 * Create a new embedded database builder with the given ResourceLoader., +	 * Sets a flag to say that the database populator should continue on , +	 * errors in the scripts provided (if any)., +	 * , +	 * @param continueOnError the flag value, +	 * @return this, for fluent call chaining, +	 */, +	public EmbeddedDatabaseBuilder continueOnError(boolean continueOnError) {, +		this.databasePopulator.setContinueOnError(continueOnError);, +		return this;, +	}, +, +	/**, +	 * Sets a flag to say that the database populator should continue on , +	 * errors in DROP statements in the scripts provided (if any)., +	 * , +	 * @param ignoreFailedDrops the flag value, +	 * @return this, for fluent call chaining, +	 */, +	public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean ignoreFailedDrops) {, +		this.databasePopulator.setIgnoreFailedDrops(ignoreFailedDrops);, +		return this;, +	}, +, +	/**, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DerbyEmbeddedDatabaseConfigurer.java, +	public static OutputStream getNoopOutputStream() {, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.java, + * @author Dave Syer, +	 * Create a new embedded database builder with the given ResourceLoader., +	 * Sets a flag to say that the database populator should continue on , +	 * errors in the scripts provided (if any)., +	 * , +	 * @param continueOnError the flag value, +	 * @return this, for fluent call chaining, +	 */, +	public EmbeddedDatabaseBuilder continueOnError(boolean continueOnError) {, +		this.databasePopulator.setContinueOnError(continueOnError);, +		return this;, +	}, +, +	/**, +	 * Sets a flag to say that the database populator should continue on , +	 * errors in DROP statements in the scripts provided (if any)., +	 * , +	 * @param ignoreFailedDrops the flag value, +	 * @return this, for fluent call chaining, +	 */, +	public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean ignoreFailedDrops) {, +		this.databasePopulator.setIgnoreFailedDrops(ignoreFailedDrops);, +		return this;, +	}, +, +	/**, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +	private static String COMMENT_PREFIX = "--";, +, +			if (StringUtils.hasText(currentStatement) && !currentStatement.startsWith(COMMENT_PREFIX)) {, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/DerbyEmbeddedDatabaseConfigurer.java, +	public static OutputStream getNoopOutputStream() {, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.java, + * @author Dave Syer, +	 * Create a new embedded database builder with the given ResourceLoader., +	 * Sets a flag to say that the database populator should continue on , +	 * errors in the scripts provided (if any)., +	 * , +	 * @param continueOnError the flag value, +	 * @return this, for fluent call chaining, +	 */, +	public EmbeddedDatabaseBuilder continueOnError(boolean continueOnError) {, +		this.databasePopulator.setContinueOnError(continueOnError);, +		return this;, +	}, +, +	/**, +	 * Sets a flag to say that the database populator should continue on , +	 * errors in DROP statements in the scripts provided (if any)., +	 * , +	 * @param ignoreFailedDrops the flag value, +	 * @return this, for fluent call chaining, +	 */, +	public EmbeddedDatabaseBuilder ignoreFailedDrops(boolean ignoreFailedDrops) {, +		this.databasePopulator.setIgnoreFailedDrops(ignoreFailedDrops);, +		return this;, +	}, +, +	/**, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +	private static String COMMENT_PREFIX = "--";, +, +			if (StringUtils.hasText(currentStatement) && !currentStatement.startsWith(COMMENT_PREFIX)) {, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilderTests.java, +	public void testBuildWithComments() {, +		EmbeddedDatabaseBuilder builder = new EmbeddedDatabaseBuilder(new ClassRelativeResourceLoader(getClass()));]