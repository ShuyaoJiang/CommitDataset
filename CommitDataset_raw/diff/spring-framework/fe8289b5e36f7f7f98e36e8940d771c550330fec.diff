[+++ b/spring-core/src/main/java/org/springframework/core/io/ByteArrayResource.java, + * Copyright 2002-2015 the original author or authors., + * <p>Creates a {@link ByteArrayInputStream} for the given byte array., + * @author Sam Brannen, +	 * This implementation returns a description that includes the passed-in, +	 * {@code description}, if any., +		return "Byte array resource [" + this.description + "]";, +++ b/spring-core/src/main/java/org/springframework/core/io/ByteArrayResource.java, + * Copyright 2002-2015 the original author or authors., + * <p>Creates a {@link ByteArrayInputStream} for the given byte array., + * @author Sam Brannen, +	 * This implementation returns a description that includes the passed-in, +	 * {@code description}, if any., +		return "Byte array resource [" + this.description + "]";, +++ b/spring-core/src/main/java/org/springframework/core/io/InputStreamResource.java, + * Copyright 2002-2015 the original author or authors., + * {@link Resource} implementation for a given {@link InputStream}., + * <p>Should only be used if no other specific {@code Resource} implementation, + * is applicable. In particular, prefer {@link ByteArrayResource} or any of the, + * file-based {@code Resource} implementations where possible., + * <p>In contrast to other {@code Resource} implementations, this is a descriptor, + * for an <i>already opened</i> resource - therefore returning {@code true} from, + * {@link #isOpen()}. Do not use an {@code InputStreamResource} if you need to, + * keep the resource descriptor somewhere, or if you need to read from a stream, + * multiple times., + * @author Sam Brannen, +	 * This implementation returns a description that includes the passed-in, +	 * description, if any., +		return "InputStream resource [" + this.description + "]";, +++ b/spring-core/src/main/java/org/springframework/core/io/ByteArrayResource.java, + * Copyright 2002-2015 the original author or authors., + * <p>Creates a {@link ByteArrayInputStream} for the given byte array., + * @author Sam Brannen, +	 * This implementation returns a description that includes the passed-in, +	 * {@code description}, if any., +		return "Byte array resource [" + this.description + "]";, +++ b/spring-core/src/main/java/org/springframework/core/io/InputStreamResource.java, + * Copyright 2002-2015 the original author or authors., + * {@link Resource} implementation for a given {@link InputStream}., + * <p>Should only be used if no other specific {@code Resource} implementation, + * is applicable. In particular, prefer {@link ByteArrayResource} or any of the, + * file-based {@code Resource} implementations where possible., + * <p>In contrast to other {@code Resource} implementations, this is a descriptor, + * for an <i>already opened</i> resource - therefore returning {@code true} from, + * {@link #isOpen()}. Do not use an {@code InputStreamResource} if you need to, + * keep the resource descriptor somewhere, or if you need to read from a stream, + * multiple times., + * @author Sam Brannen, +	 * This implementation returns a description that includes the passed-in, +	 * description, if any., +		return "InputStream resource [" + this.description + "]";, +++ b/spring-core/src/main/java/org/springframework/core/io/PathResource.java, + * Copyright 2002-2015 the original author or authors., + * <p>Supports resolution as File, and also as URL., + * <p>Implements the extended {@link WritableResource} interface., +++ b/spring-core/src/main/java/org/springframework/core/io/ByteArrayResource.java, + * Copyright 2002-2015 the original author or authors., + * <p>Creates a {@link ByteArrayInputStream} for the given byte array., + * @author Sam Brannen, +	 * This implementation returns a description that includes the passed-in, +	 * {@code description}, if any., +		return "Byte array resource [" + this.description + "]";, +++ b/spring-core/src/main/java/org/springframework/core/io/InputStreamResource.java, + * Copyright 2002-2015 the original author or authors., + * {@link Resource} implementation for a given {@link InputStream}., + * <p>Should only be used if no other specific {@code Resource} implementation, + * is applicable. In particular, prefer {@link ByteArrayResource} or any of the, + * file-based {@code Resource} implementations where possible., + * <p>In contrast to other {@code Resource} implementations, this is a descriptor, + * for an <i>already opened</i> resource - therefore returning {@code true} from, + * {@link #isOpen()}. Do not use an {@code InputStreamResource} if you need to, + * keep the resource descriptor somewhere, or if you need to read from a stream, + * multiple times., + * @author Sam Brannen, +	 * This implementation returns a description that includes the passed-in, +	 * description, if any., +		return "InputStream resource [" + this.description + "]";, +++ b/spring-core/src/main/java/org/springframework/core/io/PathResource.java, + * Copyright 2002-2015 the original author or authors., + * <p>Supports resolution as File, and also as URL., + * <p>Implements the extended {@link WritableResource} interface., +++ b/spring-core/src/main/java/org/springframework/core/io/UrlResource.java, + * Copyright 2002-2015 the original author or authors., + * <p>Supports resolution as a {@code URL} and also as a {@code File} in, + * case of the {@code "file:"} protocol., +	 * Create a new {@code UrlResource} based on the given URI object., +	 * Create a new {@code UrlResource} based on the given URL object., +	 * Create a new {@code UrlResource} based on a URL path., +	 * Create a new {@code UrlResource} based on a URI specification., +	 * Create a new {@code UrlResource} based on a URI specification., +	 * <p>It sets the {@code useCaches} flag to {@code false},, +	 * This implementation creates a {@code UrlResource}, applying the given path, +++ b/spring-core/src/main/java/org/springframework/core/io/ByteArrayResource.java, + * Copyright 2002-2015 the original author or authors., + * <p>Creates a {@link ByteArrayInputStream} for the given byte array., + * @author Sam Brannen, +	 * This implementation returns a description that includes the passed-in, +	 * {@code description}, if any., +		return "Byte array resource [" + this.description + "]";, +++ b/spring-core/src/main/java/org/springframework/core/io/InputStreamResource.java]