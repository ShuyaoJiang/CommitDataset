[+++ b/spring-web/src/main/java/org/springframework/http/codec/protobuf/ProtobufDecoder.java, +import java.nio.ByteBuffer;, + * A {@code Decoder} that reads {@link com.google.protobuf.Message}s using, + * <a href="https://developers.google.com/protocol-buffers/">Google Protocol Buffers</a>., + * <a href="https://developers.google.com/protocol-buffers/docs/techniques?hl=en#streaming">, + * delimited Protobuf messages</a> with the size of each message specified before, + * the message itself. Single values deserialized via, + * {@link #decodeToMono(Publisher, ResolvableType, MimeType, Map)} are expected, + * to use regular Protobuf message format (without the size prepended before, + * the message)., + * <p>Notice that default instance of Protobuf message produces empty byte, + * array, so {@code Mono.just(Msg.getDefaultInstance())} sent over the network, + * will be deserialized as an empty {@link Mono}., + * <p>To generate {@code Message} Java classes, you need to install the, + * {@code protoc} binary., + * {@code "application/x-protobuf"} and {@code "application/octet-stream"} with, + * the official {@code "com.google.protobuf:protobuf-java"} library., +	/** The default max size for aggregating messages. */, +						ByteBuffer buffer = dataBuffer.asByteBuffer();, +						builder.mergeFrom(CodedInputStream.newInstance(buffer), this.extensionRegistry);, +					}, +					finally {, +, +, +									"The number of bytes to read from the incoming stream " +, +											"(" + this.messageBytesToRead + ") exceeds " +, +											"the configured limit (" + this.maxMessageSize + ")");, +						ByteBuffer buffer = this.output.asByteBuffer();, +						builder.mergeFrom(CodedInputStream.newInstance(buffer), extensionRegistry);]