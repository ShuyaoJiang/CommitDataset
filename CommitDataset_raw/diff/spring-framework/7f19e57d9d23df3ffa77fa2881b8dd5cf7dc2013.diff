[+++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java, +	public void setMultipartCharset(Charset charset) {, +		this.multipartCharset = charset;, +++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java, +	public void setMultipartCharset(Charset charset) {, +		this.multipartCharset = charset;, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java, +	protected ServerHttpRequest createRequest(HttpServletRequest request, AsyncContext context) throws IOException {, +	protected ServerHttpResponse createResponse(HttpServletResponse response, AsyncContext context) throws IOException {, +	/**, +	 * We cannot combine ERROR_LISTENER and HandlerResultSubscriber due to:, +	 * https://issues.jboss.org/browse/WFLY-8515, +	 */, +	private static void runIfAsyncNotComplete(AsyncContext asyncContext, Runnable task) {, +		try {, +			if (asyncContext.getRequest().isAsyncStarted()) {, +				task.run();, +			}, +		}, +		catch (IllegalStateException ex) {, +			// Ignore: AsyncContext recycled and should not be used, +			// e.g. TIMEOUT_LISTENER (above) may have completed the AsyncContext, +		}, +	}, +, +, +, +++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java, +	public void setMultipartCharset(Charset charset) {, +		this.multipartCharset = charset;, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java, +	protected ServerHttpRequest createRequest(HttpServletRequest request, AsyncContext context) throws IOException {, +	protected ServerHttpResponse createResponse(HttpServletResponse response, AsyncContext context) throws IOException {, +	/**, +	 * We cannot combine ERROR_LISTENER and HandlerResultSubscriber due to:, +	 * https://issues.jboss.org/browse/WFLY-8515, +	 */, +	private static void runIfAsyncNotComplete(AsyncContext asyncContext, Runnable task) {, +		try {, +			if (asyncContext.getRequest().isAsyncStarted()) {, +				task.run();, +			}, +		}, +		catch (IllegalStateException ex) {, +			// Ignore: AsyncContext recycled and should not be used, +			// e.g. TIMEOUT_LISTENER (above) may have completed the AsyncContext, +		}, +	}, +, +, +, +++ b/spring-web/src/test/java/org/springframework/http/codec/multipart/MultipartHttpMessageWriterTests.java, +import static org.junit.Assert.*;, +, +	private final MultipartHttpMessageWriter writer = new MultipartHttpMessageWriter(Arrays.asList(, +, +		assertTrue(this.writer.canWrite(, +				ResolvableType.forClassWithGenerics(MultiValueMap.class, String.class, Object.class),, +		assertTrue(this.writer.canWrite(, +				ResolvableType.forClassWithGenerics(MultiValueMap.class, String.class, String.class),, +		assertFalse(this.writer.canWrite(, +				ResolvableType.forClassWithGenerics(Map.class, String.class, Object.class),, +		assertFalse(this.writer.canWrite(, +				ResolvableType.forClassWithGenerics(MultiValueMap.class, String.class, Object.class),, +				.header(HttpHeaders.CONTENT_TYPE, contentType.toString()), +		ResolvableType elementType = ResolvableType.forClassWithGenerics(MultiValueMap.class, String.class, Part.class);, +, +++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java, +	public void setMultipartCharset(Charset charset) {, +		this.multipartCharset = charset;, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java, +	protected ServerHttpRequest createRequest(HttpServletRequest request, AsyncContext context) throws IOException {, +	protected ServerHttpResponse createResponse(HttpServletResponse response, AsyncContext context) throws IOException {, +	/**, +	 * We cannot combine ERROR_LISTENER and HandlerResultSubscriber due to:, +	 * https://issues.jboss.org/browse/WFLY-8515, +	 */, +	private static void runIfAsyncNotComplete(AsyncContext asyncContext, Runnable task) {, +		try {, +			if (asyncContext.getRequest().isAsyncStarted()) {, +				task.run();, +			}, +		}, +		catch (IllegalStateException ex) {, +			// Ignore: AsyncContext recycled and should not be used, +			// e.g. TIMEOUT_LISTENER (above) may have completed the AsyncContext, +		}, +	}, +, +, +, +++ b/spring-web/src/test/java/org/springframework/http/codec/multipart/MultipartHttpMessageWriterTests.java, +import static org.junit.Assert.*;, +, +	private final MultipartHttpMessageWriter writer = new MultipartHttpMessageWriter(Arrays.asList(, +, +		assertTrue(this.writer.canWrite(, +				ResolvableType.forClassWithGenerics(MultiValueMap.class, String.class, Object.class),, +		assertTrue(this.writer.canWrite(, +				ResolvableType.forClassWithGenerics(MultiValueMap.class, String.class, String.class),]