[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompCodec.java, +					}, +					else {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompCodec.java, +					}, +					else {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompDecoder.java, + * Decodes STOMP frames from a {@link ByteBuffer}. If the buffer does not contain, + * enough data to form a complete STOMP frame, the buffer is reset and the value, + * returned is {@code null} indicating that no message could be read., + * @author Rossen Stoyanchev, +	 * If the given ByteBuffer contains partial STOMP frame content, the method, +	 * resets the buffer and returns {@code null}., +	 *, +	 * @return The decoded message or {@code null}, +		skipLeadingEol(buffer);, +					throw new StompConversionException(stompCommand + " shouldn't have but " +, +							"has a payload with length=" + payload.length + ", headers=" + headers);, +			}, +			else {, +				if (logger.isTraceEnabled()) {, +					logger.trace("Received incomplete frame. Resetting buffer");, +			decodedMessage = MessageBuilder.withPayload(HEARTBEAT_PAYLOAD).setHeaders(, +					StompHeaderAccessor.create(SimpMessageType.HEARTBEAT)).build();, +		}, +		return decodedMessage;, +	private void skipLeadingEol(ByteBuffer buffer) {, +		while (true) {, +			if (!isEol(buffer)) {, +				break;, +			}, +		}, +				byte[] payload = new byte[contentLength];, +				return payload;, +			}, +			else {]