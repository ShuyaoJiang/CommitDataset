[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, + * Copyright 2002-2015 the original author or authors., +			if (valueHolder == null && (!autowiring || paramTypes.length == resolvedValues.getArgumentCount())) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/ConstructorResolver.java, + * Copyright 2002-2015 the original author or authors., +			if (valueHolder == null && (!autowiring || paramTypes.length == resolvedValues.getArgumentCount())) {, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessorTests.java, +import java.util.Collections;, +	@Test, +	public void testSingleConstructorWithProvidedArgument() {, +		DefaultListableBeanFactory bf = new DefaultListableBeanFactory();, +		AutowiredAnnotationBeanPostProcessor bpp = new AutowiredAnnotationBeanPostProcessor();, +		bpp.setBeanFactory(bf);, +		bf.addBeanPostProcessor(bpp);, +		RootBeanDefinition bd = new RootBeanDefinition(ProvidedArgumentBean.class);, +		bd.getConstructorArgumentValues().addGenericArgumentValue(Collections.singletonList("value"));, +		bf.registerBeanDefinition("beanWithArgs", bd);, +		assertNotNull(bf.getBean(ProvidedArgumentBean.class));, +	}, +, +, +	public static class ProvidedArgumentBean {, +, +		public ProvidedArgumentBean(String[] args) {, +		}, +	}, +]