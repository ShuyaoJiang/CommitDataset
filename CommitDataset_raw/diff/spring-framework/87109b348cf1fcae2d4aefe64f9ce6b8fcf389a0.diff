[+++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +	/**, +	 * Decode the given matrix variables via, +	 * {@link #decodeRequestString(HttpServletRequest, String)} unless, +	 * {@link #setUrlDecode(boolean)} is set to {@code true} in which case it is, +	 * assumed the URL path from which the variables were extracted is already, +	 * decoded through a call to, +	 * {@link #getLookupPathForRequest(HttpServletRequest)}., +	 *, +	 * @param request current HTTP request, +	 * @param vars URI variables extracted from the URL path, +	 * @return the same Map or a new Map instance, +	 */, +	public MultiValueMap<String, String> decodeMatrixVariables(HttpServletRequest request, MultiValueMap<String, String> vars) {, +		if (this.urlDecode) {, +			return vars;, +		}, +		else {, +			MultiValueMap<String, String> decodedVars = new LinkedMultiValueMap	<String, String>(vars.size());, +			for (String key : vars.keySet()) {, +				for (String value : vars.get(key)) {, +					decodedVars.add(key, decodeInternal(request, value));, +				}, +			}, +			return decodedVars;, +		}, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +	/**, +	 * Decode the given matrix variables via, +	 * {@link #decodeRequestString(HttpServletRequest, String)} unless, +	 * {@link #setUrlDecode(boolean)} is set to {@code true} in which case it is, +	 * assumed the URL path from which the variables were extracted is already, +	 * decoded through a call to, +	 * {@link #getLookupPathForRequest(HttpServletRequest)}., +	 *, +	 * @param request current HTTP request, +	 * @param vars URI variables extracted from the URL path, +	 * @return the same Map or a new Map instance, +	 */, +	public MultiValueMap<String, String> decodeMatrixVariables(HttpServletRequest request, MultiValueMap<String, String> vars) {, +		if (this.urlDecode) {, +			return vars;, +		}, +		else {, +			MultiValueMap<String, String> decodedVars = new LinkedMultiValueMap	<String, String>(vars.size());, +			for (String key : vars.keySet()) {, +				for (String value : vars.get(key)) {, +					decodedVars.add(key, decodeInternal(request, value));, +				}, +			}, +			return decodedVars;, +		}, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java, +			request.setAttribute(HandlerMapping.MATRIX_VARIABLES_ATTRIBUTE, extractMatrixVariables(request, uriVariables));, +	private Map<String, MultiValueMap<String, String>> extractMatrixVariables(, +			HttpServletRequest request, Map<String, String> uriVariables) {, +, +			MultiValueMap<String, String> vars = WebUtils.parseMatrixVariables(matrixVariables);, +			result.put(uriVar.getKey(), getUrlPathHelper().decodeMatrixVariables(request, vars));, +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +	/**, +	 * Decode the given matrix variables via, +	 * {@link #decodeRequestString(HttpServletRequest, String)} unless, +	 * {@link #setUrlDecode(boolean)} is set to {@code true} in which case it is, +	 * assumed the URL path from which the variables were extracted is already, +	 * decoded through a call to, +	 * {@link #getLookupPathForRequest(HttpServletRequest)}., +	 *, +	 * @param request current HTTP request, +	 * @param vars URI variables extracted from the URL path, +	 * @return the same Map or a new Map instance, +	 */, +	public MultiValueMap<String, String> decodeMatrixVariables(HttpServletRequest request, MultiValueMap<String, String> vars) {, +		if (this.urlDecode) {, +			return vars;, +		}, +		else {, +			MultiValueMap<String, String> decodedVars = new LinkedMultiValueMap	<String, String>(vars.size());, +			for (String key : vars.keySet()) {, +				for (String value : vars.get(key)) {, +					decodedVars.add(key, decodeInternal(request, value));, +				}, +			}, +			return decodedVars;, +		}, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java, +			request.setAttribute(HandlerMapping.MATRIX_VARIABLES_ATTRIBUTE, extractMatrixVariables(request, uriVariables));, +	private Map<String, MultiValueMap<String, String>> extractMatrixVariables(]