[+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +	private List<DeferredImportSelectorHolder> deferredImportSelectors;, +		this.deferredImportSelectors = new LinkedList<DeferredImportSelectorHolder>();, +, +, +		processImports(configClass, sourceClass, getImports(sourceClass), true);, +		List<DeferredImportSelectorHolder> deferredImports = this.deferredImportSelectors;, +		this.deferredImportSelectors = null;, +		Collections.sort(deferredImports, DEFERRED_IMPORT_COMPARATOR);, +, +		for (DeferredImportSelectorHolder deferredImport : deferredImports) {, +				processImports(configClass, asSourceClass(configClass), asSourceClasses(imports), false);, +			Collection<SourceClass> importCandidates, boolean checkForCircularImports) throws IOException {, +						if (this.deferredImportSelectors != null && selector instanceof DeferredImportSelector) {, +							processImports(configClass, currentSourceClass, importSourceClasses, false);]