[+++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +	protected void copyToUriComponentsBuilder(UriComponentsBuilder builder) {, +		builder.scheme(getScheme());, +		builder.userInfo(getUserInfo());, +		builder.host(getHost());, +		builder.port(getPort());, +		builder.replacePath("");, +		this.path.copyToUriComponentsBuilder(builder);, +		builder.replaceQueryParams(getQueryParams());, +		builder.fragment(getFragment());, +	}, +, +, +	@Override, +, +		void copyToUriComponentsBuilder(UriComponentsBuilder builder);, +		public void copyToUriComponentsBuilder(UriComponentsBuilder builder) {, +			builder.path(getPath());, +		}, +, +		@Override, +			Assert.notNull(pathSegments);, +		public void copyToUriComponentsBuilder(UriComponentsBuilder builder) {, +			builder.pathSegment(getPathSegments().toArray(new String[getPathSegments().size()]));, +		}, +, +		@Override, +			Assert.notNull(pathComponents);, +, +		@Override, +		public void copyToUriComponentsBuilder(UriComponentsBuilder builder) {, +			for (PathComponent pathComponent : this.pathComponents) {, +				pathComponent.copyToUriComponentsBuilder(builder);, +			}, +		}, +		public void copyToUriComponentsBuilder(UriComponentsBuilder builder) {, +		}, +		@Override, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +	protected void copyToUriComponentsBuilder(UriComponentsBuilder builder) {, +		builder.scheme(getScheme());, +		builder.userInfo(getUserInfo());, +		builder.host(getHost());, +		builder.port(getPort());, +		builder.replacePath("");, +		this.path.copyToUriComponentsBuilder(builder);, +		builder.replaceQueryParams(getQueryParams());, +		builder.fragment(getFragment());, +	}, +, +, +	@Override, +, +		void copyToUriComponentsBuilder(UriComponentsBuilder builder);, +		public void copyToUriComponentsBuilder(UriComponentsBuilder builder) {, +			builder.path(getPath());, +		}, +, +		@Override, +			Assert.notNull(pathSegments);, +		public void copyToUriComponentsBuilder(UriComponentsBuilder builder) {, +			builder.pathSegment(getPathSegments().toArray(new String[getPathSegments().size()]));, +		}, +, +		@Override, +			Assert.notNull(pathComponents);, +, +		@Override, +		public void copyToUriComponentsBuilder(UriComponentsBuilder builder) {, +			for (PathComponent pathComponent : this.pathComponents) {, +				pathComponent.copyToUriComponentsBuilder(builder);, +			}, +		}, +		public void copyToUriComponentsBuilder(UriComponentsBuilder builder) {, +		}, +		@Override, +++ b/spring-web/src/main/java/org/springframework/web/util/OpaqueUriComponents.java, + * Copyright 2002-2015 the original author or authors., +	@Override, +	protected void copyToUriComponentsBuilder(UriComponentsBuilder builder) {, +		builder.scheme(getScheme());, +		builder.schemeSpecificPart(getSchemeSpecificPart());, +		builder.fragment(getFragment());, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +	protected void copyToUriComponentsBuilder(UriComponentsBuilder builder) {, +		builder.scheme(getScheme());, +		builder.userInfo(getUserInfo());, +		builder.host(getHost());, +		builder.port(getPort());, +		builder.replacePath("");, +		this.path.copyToUriComponentsBuilder(builder);, +		builder.replaceQueryParams(getQueryParams());, +		builder.fragment(getFragment());, +	}, +, +, +	@Override, +]