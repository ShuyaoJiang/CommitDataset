[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/socket/HandshakeInfo.java, +import java.net.InetSocketAddress;, +	@Nullable, +	private final InetSocketAddress remoteAddress;, +, +	 * Constructor with basic information about the handshake., +		this(uri, headers, principal, protocol, null, Collections.emptyMap(), null);, +	 * Constructor targetting server-side use with extra information about the, +	 * handshake, the remote address, and a pre-existing log prefix for, +	 * correlation., +	 * @param remoteAddress the remote address where the handshake came from, +			@Nullable String protocol, @Nullable InetSocketAddress remoteAddress,, +			Map<String, Object> attributes, @Nullable String logPrefix) {, +		this.remoteAddress = remoteAddress;, +	 * For a server-side session this is the remote address where the handshake, +	 * request came from., +	 * @since 5.1, +	 */, +	@Nullable, +	public InetSocketAddress getRemoteAddress() {, +		return this.remoteAddress;, +	}, +, +	/**, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/socket/HandshakeInfo.java, +import java.net.InetSocketAddress;, +	@Nullable, +	private final InetSocketAddress remoteAddress;, +, +	 * Constructor with basic information about the handshake., +		this(uri, headers, principal, protocol, null, Collections.emptyMap(), null);, +	 * Constructor targetting server-side use with extra information about the, +	 * handshake, the remote address, and a pre-existing log prefix for, +	 * correlation., +	 * @param remoteAddress the remote address where the handshake came from, +			@Nullable String protocol, @Nullable InetSocketAddress remoteAddress,, +			Map<String, Object> attributes, @Nullable String logPrefix) {, +		this.remoteAddress = remoteAddress;, +	 * For a server-side session this is the remote address where the handshake, +	 * request came from., +	 * @since 5.1, +	 */, +	@Nullable, +	public InetSocketAddress getRemoteAddress() {, +		return this.remoteAddress;, +	}, +, +	/**, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/socket/server/support/HandshakeWebSocketService.java, +import java.net.InetSocketAddress;, +		InetSocketAddress remoteAddress = request.getRemoteAddress();, +		return new HandshakeInfo(uri, headers, principal, protocol, remoteAddress, attributes, logPrefix);]