[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/NoSuchBeanDefinitionException.java, +	 */, +	public NoSuchBeanDefinitionException(Class type) {, +		super("No unique bean of type [" + type.getName() + "] is defined");, +		this.beanType = type;, +	}, +, +	/**, +	 * Create a new NoSuchBeanDefinitionException., +	 * @param type required type of bean, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/NoSuchBeanDefinitionException.java, +	 */, +	public NoSuchBeanDefinitionException(Class type) {, +		super("No unique bean of type [" + type.getName() + "] is defined");, +		this.beanType = type;, +	}, +, +	/**, +	 * Create a new NoSuchBeanDefinitionException., +	 * @param type required type of bean, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Bean.java, + * @see DependsOn, + * @see Scope, + * @see Value, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/NoSuchBeanDefinitionException.java, +	 */, +	public NoSuchBeanDefinitionException(Class type) {, +		super("No unique bean of type [" + type.getName() + "] is defined");, +		this.beanType = type;, +	}, +, +	/**, +	 * Create a new NoSuchBeanDefinitionException., +	 * @param type required type of bean, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Bean.java, + * @see DependsOn, + * @see Scope, + * @see Value, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Configuration.java, +, + * @see Import, + * @see Bean, + * @see ConfigurationClassApplicationContext;, +	/**, +	 * Explicitly specify the name of the Spring bean definition associated, +	 * with this Configuration class.  If left unspecified (the common case),, +	 * a bean name will be automatically generated., +	 * , +	 * <p>The custom name applies only if the Configuration class is picked up via, +	 * component scanning or supplied directly to a {@link ConfigurationClassApplicationContext}., +	 * If the Configuration class is registered as a traditional XML bean definition,, +	 * the name/id of the bean element will take precedence., +	 * , +	 * @return the specified bean name, if any, +	 * @see org.springframework.beans.factory.support.DefaultBeanNameGenerator, +	 */, +	String value() default "";, +	, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/NoSuchBeanDefinitionException.java, +	 */, +	public NoSuchBeanDefinitionException(Class type) {, +		super("No unique bean of type [" + type.getName() + "] is defined");, +		this.beanType = type;, +	}, +, +	/**, +	 * Create a new NoSuchBeanDefinitionException., +	 * @param type required type of bean, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Bean.java, + * @see DependsOn, + * @see Scope, + * @see Value, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/Configuration.java, +, + * @see Import, + * @see Bean, + * @see ConfigurationClassApplicationContext;, +	/**, +	 * Explicitly specify the name of the Spring bean definition associated, +	 * with this Configuration class.  If left unspecified (the common case),, +	 * a bean name will be automatically generated., +	 * , +	 * <p>The custom name applies only if the Configuration class is picked up via, +	 * component scanning or supplied directly to a {@link ConfigurationClassApplicationContext}., +	 * If the Configuration class is registered as a traditional XML bean definition,, +	 * the name/id of the bean element will take precedence., +	 * , +	 * @return the specified bean name, if any, +	 * @see org.springframework.beans.factory.support.DefaultBeanNameGenerator, +	 */, +	String value() default "";, +	, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassApplicationContext.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *]