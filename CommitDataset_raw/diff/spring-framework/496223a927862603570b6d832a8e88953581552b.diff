[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ModelAttributeMethodArgumentResolver.java, +				() -> getClass().getSimpleName() + " does not support multi-value reactive type wrapper: " +, +			String fieldDefaultPrefix = binder.getFieldDefaultPrefix();, +			String fieldMarkerPrefix = binder.getFieldMarkerPrefix();, +				String paramName = paramNames[i];, +				Class<?> paramType = paramTypes[i];, +				Object value = bindValues.get(paramName);, +				if (value == null) {, +					if (fieldDefaultPrefix != null) {, +						value = bindValues.get(fieldDefaultPrefix + paramName);, +					}, +					if (value == null && fieldMarkerPrefix != null) {, +						if (bindValues.get(fieldMarkerPrefix + paramName) != null) {, +							value = binder.getEmptyValue(paramType);, +						}, +					}, +				}, +				value = (value instanceof List ? ((List<?>) value).toArray() : value);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ModelAttributeMethodArgumentResolver.java, +				() -> getClass().getSimpleName() + " does not support multi-value reactive type wrapper: " +, +			String fieldDefaultPrefix = binder.getFieldDefaultPrefix();, +			String fieldMarkerPrefix = binder.getFieldMarkerPrefix();, +				String paramName = paramNames[i];, +				Class<?> paramType = paramTypes[i];, +				Object value = bindValues.get(paramName);, +				if (value == null) {, +					if (fieldDefaultPrefix != null) {, +						value = bindValues.get(fieldDefaultPrefix + paramName);, +					}, +					if (value == null && fieldMarkerPrefix != null) {, +						if (bindValues.get(fieldMarkerPrefix + paramName) != null) {, +							value = binder.getEmptyValue(paramType);, +						}, +					}, +				}, +				value = (value instanceof List ? ((List<?>) value).toArray() : value);, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/ModelAttributeMethodArgumentResolverTests.java, +	// TODO: SPR-15871, SPR-15542, +]