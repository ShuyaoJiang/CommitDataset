[+++ b/spring-web/src/main/java/org/springframework/http/HttpRequest.java, + * Copyright 2002-2018 the original author or authors., +	 * @see #getMethodValue(), +	 * @see HttpMethod#resolve(String), +	 * Return the HTTP method of the request as a String value., +	 * @return the HTTP method as a plain String, +	 * @since 5.0, +	 * @see #getMethod(), +	 * Return the URI of the request (including a query string if any,, +	 * but only if it is well-formed for a URI representation)., +++ b/spring-web/src/main/java/org/springframework/http/HttpRequest.java, + * Copyright 2002-2018 the original author or authors., +	 * @see #getMethodValue(), +	 * @see HttpMethod#resolve(String), +	 * Return the HTTP method of the request as a String value., +	 * @return the HTTP method as a plain String, +	 * @since 5.0, +	 * @see #getMethod(), +	 * Return the URI of the request (including a query string if any,, +	 * but only if it is well-formed for a URI representation)., +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpRequest.java, + * Copyright 2002-2018 the original author or authors., + * @author Juergen Hoeller, +	private URI uri;, +, +	@Nullable, +	@Nullable, +	public HttpMethod getMethod() {, +		return HttpMethod.resolve(this.servletRequest.getMethod());, +	}, +, +	@Override, +		if (this.uri == null) {, +			String urlString = null;, +			boolean hasQuery = false;, +				hasQuery = StringUtils.hasText(query);, +				if (hasQuery) {, +				urlString = url.toString();, +				this.uri = new URI(urlString);, +				if (true || !hasQuery) {, +					throw new IllegalStateException("Could not resolve HttpServletRequest as URI: " + urlString, ex);, +				// Maybe a malformed query string... try plain request URL, +				try {, +					urlString = this.servletRequest.getRequestURL().toString();, +					this.uri = new URI(urlString);, +				}, +				catch (URISyntaxException ex2) {, +					throw new IllegalStateException("Could not resolve HttpServletRequest as URI: " + urlString, ex2);, +				}, +			}, +		}, +		return this.uri;, +++ b/spring-web/src/main/java/org/springframework/http/HttpRequest.java, + * Copyright 2002-2018 the original author or authors., +	 * @see #getMethodValue(), +	 * @see HttpMethod#resolve(String), +	 * Return the HTTP method of the request as a String value., +	 * @return the HTTP method as a plain String, +	 * @since 5.0, +	 * @see #getMethod(), +	 * Return the URI of the request (including a query string if any,, +	 * but only if it is well-formed for a URI representation)., +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpRequest.java, + * Copyright 2002-2018 the original author or authors., + * @author Juergen Hoeller, +	private URI uri;, +, +	@Nullable, +	@Nullable, +	public HttpMethod getMethod() {, +		return HttpMethod.resolve(this.servletRequest.getMethod());, +	}, +, +	@Override, +		if (this.uri == null) {, +			String urlString = null;, +			boolean hasQuery = false;, +				hasQuery = StringUtils.hasText(query);, +				if (hasQuery) {, +				urlString = url.toString();, +				this.uri = new URI(urlString);, +				if (true || !hasQuery) {, +					throw new IllegalStateException("Could not resolve HttpServletRequest as URI: " + urlString, ex);, +				// Maybe a malformed query string... try plain request URL, +				try {, +					urlString = this.servletRequest.getRequestURL().toString();, +					this.uri = new URI(urlString);, +				}, +				catch (URISyntaxException ex2) {, +					throw new IllegalStateException("Could not resolve HttpServletRequest as URI: " + urlString, ex2);, +				}, +			}, +		}, +		return this.uri;, +++ b/spring-web/src/test/java/org/springframework/http/server/ServletServerHttpRequestTests.java, + * Copyright 2002-2018 the original author or authors., +import java.io.IOException;, +import java.net.URISyntaxException;, + * @author Juergen Hoeller, +	public void create() {]