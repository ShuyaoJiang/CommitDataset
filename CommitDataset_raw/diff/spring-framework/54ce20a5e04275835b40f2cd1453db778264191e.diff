[+++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/HandlerResult.java, +import org.springframework.util.Assert;, +	private final ResolvableType valueType;, +	public HandlerResult(Object handler, Object value, ResolvableType valueType) {, +		Assert.notNull(handler, "'handler' is required");, +		Assert.notNull(handler, "'valueType' is required");, +		this.valueType = valueType;, +	public ResolvableType getValueType() {, +		return this.valueType;, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/HandlerResult.java, +import org.springframework.util.Assert;, +	private final ResolvableType valueType;, +	public HandlerResult(Object handler, Object value, ResolvableType valueType) {, +		Assert.notNull(handler, "'handler' is required");, +		Assert.notNull(handler, "'valueType' is required");, +		this.valueType = valueType;, +	public ResolvableType getValueType() {, +		return this.valueType;, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/SimpleHandlerResultHandler.java, +		ResolvableType type = result.getValueType();, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/HandlerResult.java, +import org.springframework.util.Assert;, +	private final ResolvableType valueType;, +	public HandlerResult(Object handler, Object value, ResolvableType valueType) {, +		Assert.notNull(handler, "'handler' is required");, +		Assert.notNull(handler, "'valueType' is required");, +		this.valueType = valueType;, +	public ResolvableType getValueType() {, +		return this.valueType;, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/SimpleHandlerResultHandler.java, +		ResolvableType type = result.getValueType();, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/handler/HttpHandlerAdapter.java, +	private static final ResolvableType PUBLISHER_VOID = ResolvableType.forClassWithGenerics(, +			Publisher.class, Void.class);, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/HandlerResult.java, +import org.springframework.util.Assert;, +	private final ResolvableType valueType;, +	public HandlerResult(Object handler, Object value, ResolvableType valueType) {, +		Assert.notNull(handler, "'handler' is required");, +		Assert.notNull(handler, "'valueType' is required");, +		this.valueType = valueType;, +	public ResolvableType getValueType() {, +		return this.valueType;, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/SimpleHandlerResultHandler.java, +		ResolvableType type = result.getValueType();, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/handler/HttpHandlerAdapter.java, +	private static final ResolvableType PUBLISHER_VOID = ResolvableType.forClassWithGenerics(, +			Publisher.class, Void.class);, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/web/dispatch/method/annotation/ResponseBodyResultHandler.java, +		ResolvableType returnType = result.getValueType();]