[+++ b/spring-test/src/main/java/org/springframework/test/util/JsonPathExpectationsHelper.java, + * Copyright 2002-2018 the original author or authors., +			String message = "No value at JSON path \"" + this.expression + "\"";, +			String message = "No value at JSON path \"" + this.expression + "\"";, +++ b/spring-test/src/main/java/org/springframework/test/util/JsonPathExpectationsHelper.java, + * Copyright 2002-2018 the original author or authors., +			String message = "No value at JSON path \"" + this.expression + "\"";, +			String message = "No value at JSON path \"" + this.expression + "\"";, +++ b/spring-test/src/main/java/org/springframework/test/web/client/match/JsonPathRequestMatchers.java, + * Copyright 2002-2018 the original author or authors., + *, +	 * An overloaded variant of {@link #value(Matcher)} that also accepts a, +	 * target type for the resulting value that the matcher can work reliably, +	 * against., +	 * <p>This can be useful for matching numbers reliably &mdash; for example,, +	 * to coerce an integer into a double., +++ b/spring-test/src/main/java/org/springframework/test/util/JsonPathExpectationsHelper.java, + * Copyright 2002-2018 the original author or authors., +			String message = "No value at JSON path \"" + this.expression + "\"";, +			String message = "No value at JSON path \"" + this.expression + "\"";, +++ b/spring-test/src/main/java/org/springframework/test/web/client/match/JsonPathRequestMatchers.java, + * Copyright 2002-2018 the original author or authors., + *, +	 * An overloaded variant of {@link #value(Matcher)} that also accepts a, +	 * target type for the resulting value that the matcher can work reliably, +	 * against., +	 * <p>This can be useful for matching numbers reliably &mdash; for example,, +	 * to coerce an integer into a double., +++ b/spring-test/src/main/java/org/springframework/test/web/client/match/MockRestRequestMatchers.java, +++ b/spring-test/src/main/java/org/springframework/test/util/JsonPathExpectationsHelper.java, + * Copyright 2002-2018 the original author or authors., +			String message = "No value at JSON path \"" + this.expression + "\"";, +			String message = "No value at JSON path \"" + this.expression + "\"";, +++ b/spring-test/src/main/java/org/springframework/test/web/client/match/JsonPathRequestMatchers.java, + * Copyright 2002-2018 the original author or authors., + *, +	 * An overloaded variant of {@link #value(Matcher)} that also accepts a, +	 * target type for the resulting value that the matcher can work reliably, +	 * against., +	 * <p>This can be useful for matching numbers reliably &mdash; for example,, +	 * to coerce an integer into a double., +++ b/spring-test/src/main/java/org/springframework/test/web/client/match/MockRestRequestMatchers.java, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/JsonPathResultMatchers.java, + * Copyright 2002-2018 the original author or authors., +	 * @see #value(Matcher, Class), +	 * @see #value(Object), +	public <T> ResultMatcher value(Matcher<T> matcher) {, +	 * An overloaded variant of {@link #value(Matcher)} that also accepts a, +	 * target type for the resulting value that the matcher can work reliably, +	 * against., +	 * <p>This can be useful for matching numbers reliably &mdash; for example,, +	 * to coerce an integer into a double., +	 * @since 4.3.15, +	 * @see #value(Matcher), +	 * @see #value(Object), +	 */, +	public <T> ResultMatcher value(Matcher<T> matcher, Class<T> targetType) {, +		return result -> {, +			String content = getContent(result);, +			jsonPathHelper.assertValue(content, matcher, targetType);, +		};, +	}, +, +	/**, +	 * @see #value(Matcher), +	 * @see #value(Matcher, Class), +	public ResultMatcher value(Object expectedValue) {, +++ b/spring-test/src/main/java/org/springframework/test/util/JsonPathExpectationsHelper.java, + * Copyright 2002-2018 the original author or authors., +			String message = "No value at JSON path \"" + this.expression + "\"";, +			String message = "No value at JSON path \"" + this.expression + "\"";, +++ b/spring-test/src/main/java/org/springframework/test/web/client/match/JsonPathRequestMatchers.java, + * Copyright 2002-2018 the original author or authors., + *, +	 * An overloaded variant of {@link #value(Matcher)} that also accepts a, +	 * target type for the resulting value that the matcher can work reliably, +	 * against., +	 * <p>This can be useful for matching numbers reliably &mdash; for example,, +	 * to coerce an integer into a double., +++ b/spring-test/src/main/java/org/springframework/test/web/client/match/MockRestRequestMatchers.java, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/JsonPathResultMatchers.java, + * Copyright 2002-2018 the original author or authors., +	 * @see #value(Matcher, Class), +	 * @see #value(Object), +	public <T> ResultMatcher value(Matcher<T> matcher) {, +	 * An overloaded variant of {@link #value(Matcher)} that also accepts a, +	 * target type for the resulting value that the matcher can work reliably, +	 * against., +	 * <p>This can be useful for matching numbers reliably &mdash; for example,, +	 * to coerce an integer into a double., +	 * @since 4.3.15, +	 * @see #value(Matcher), +	 * @see #value(Object), +	 */, +	public <T> ResultMatcher value(Matcher<T> matcher, Class<T> targetType) {, +		return result -> {, +			String content = getContent(result);, +			jsonPathHelper.assertValue(content, matcher, targetType);, +		};, +	}]