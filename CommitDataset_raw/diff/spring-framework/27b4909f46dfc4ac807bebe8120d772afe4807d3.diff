[+++ b/spring-test/src/main/java/org/springframework/test/context/MergedContextConfiguration.java, +, +, +	private static final Set<Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>> EMPTY_INITIALIZER_CLASSES =, +, +, +, +, +, +, +, +, +, +		return (array != null ? array : EMPTY_STRING_ARRAY);, +		return (classes != null ? classes : EMPTY_CLASS_ARRAY);, +, +		return (contextInitializerClasses != null ?, +				Collections.unmodifiableSet(contextInitializerClasses) : EMPTY_INITIALIZER_CLASSES);, +		return (contextLoader != null ? contextLoader.getClass().getName() : "null");, +, +, +	public MergedContextConfiguration(Class<?> testClass, String[] locations, Class<?>[] classes,, +, +	public MergedContextConfiguration(Class<?> testClass, String[] locations, Class<?>[] classes,, +, +	public MergedContextConfiguration(Class<?> testClass, String[] locations, Class<?>[] classes,, +, +, +	 * Get the {@linkplain Class test class} associated with this, +	 * {@code MergedContextConfiguration}., +		return this.testClass;, +		return this.locations;, +		return this.classes;, +		return (hasLocations() || hasClasses());, +		return this.contextInitializerClasses;, +		return this.activeProfiles;, +	 * Get the merged resource locations for test {@code PropertySources}, +	 * for the {@linkplain #getTestClass() test class}., +		return this.propertySourceLocations;, +		return this.propertySourceProperties;, +		return this.contextLoader;, +	 * Get the {@link MergedContextConfiguration} for the parent application context, +	 * in a context hierarchy., +	 * <p>If the parent context has not yet been loaded, it will be loaded, stored, +	 * in the cache, and then returned., +		if (this.parent == null) {, +		Assert.state(this.cacheAwareContextLoaderDelegate != null,, +				"Cannot retrieve a parent application context without access to the CacheAwareContextLoaderDelegate");, +		return this.cacheAwareContextLoaderDelegate.loadContext(this.parent);, +	public boolean equals(Object other) {, +		if (this == other) {, +		if (!(other instanceof MergedContextConfiguration)) {, +		MergedContextConfiguration otherConfig = (MergedContextConfiguration) other;, +		if (!Arrays.equals(this.locations, otherConfig.locations)) {, +		if (!Arrays.equals(this.classes, otherConfig.classes)) {, +		if (!this.contextInitializerClasses.equals(otherConfig.contextInitializerClasses)) {, +		if (!Arrays.equals(this.activeProfiles, otherConfig.activeProfiles)) {, +		if (!Arrays.equals(this.propertySourceLocations, otherConfig.propertySourceLocations)) {, +		if (!Arrays.equals(this.propertySourceProperties, otherConfig.propertySourceProperties)) {, +			if (otherConfig.parent != null) {, +		else if (!this.parent.equals(otherConfig.parent)) {, +		if (!nullSafeToString(this.contextLoader).equals(nullSafeToString(otherConfig.contextLoader))) {, +	 * Generate a unique hash code for all properties of this, +	 * {@code MergedContextConfiguration} excluding the, +	 * {@linkplain #getTestClass() test class}., +	 */, +	@Override, +	public int hashCode() {, +		int result = Arrays.hashCode(this.locations);, +		result = 31 * result + Arrays.hashCode(this.classes);, +		result = 31 * result + this.contextInitializerClasses.hashCode();, +		result = 31 * result + Arrays.hashCode(this.activeProfiles);, +		result = 31 * result + Arrays.hashCode(this.propertySourceLocations);, +		result = 31 * result + Arrays.hashCode(this.propertySourceProperties);, +		result = 31 * result + (this.parent != null ? this.parent.hashCode() : 0);, +		result = 31 * result + nullSafeToString(this.contextLoader).hashCode();, +		return result;, +	}, +, +	/**, +		return new ToStringCreator(this), +				.append("testClass", this.testClass), +				.append("locations", ObjectUtils.nullSafeToString(this.locations)), +				.append("classes", ObjectUtils.nullSafeToString(this.classes)), +				.append("contextInitializerClasses", ObjectUtils.nullSafeToString(this.contextInitializerClasses)), +				.append("activeProfiles", ObjectUtils.nullSafeToString(this.activeProfiles)), +				.append("propertySourceLocations", ObjectUtils.nullSafeToString(this.propertySourceLocations)), +				.append("propertySourceProperties", ObjectUtils.nullSafeToString(this.propertySourceProperties)), +				.append("contextLoader", nullSafeToString(this.contextLoader)), +				.append("parent", this.parent), +++ b/spring-test/src/main/java/org/springframework/test/context/MergedContextConfiguration.java, +, +, +	private static final Set<Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>> EMPTY_INITIALIZER_CLASSES =, +, +, +, +, +, +]