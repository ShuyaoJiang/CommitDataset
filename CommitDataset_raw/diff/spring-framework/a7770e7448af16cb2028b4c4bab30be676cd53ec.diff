[+++ b/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/ParameterAutowireUtils.java, + * Copyright 2002-2019 the original author or authors., +	 * Determine if the supplied {@link Parameter} can <em>potentially</em> be, +	 * autowired from an {@link AutowireCapableBeanFactory}., +	 * <p>Returns {@code true} if the supplied parameter is annotated or, +	 * <p>Note that {@link #resolveDependency} may still be able to resolve the, +	 * dependency for the supplied parameter even if this method returns {@code false}., +	 * @param parameterIndex the index of the parameter in the constructor or method, +	 * that declares the parameter, +	 * supplied {@link AutowireCapableBeanFactory}., +	 * <p>The dependency is required unless the parameter is annotated or meta-annotated, +	 * with {@link Autowired @Autowired} with the {@link Autowired#required required}, +	 * @param parameterIndex the index of the parameter in the constructor or method, +	 * that declares the parameter, +	 * @param beanFactory the {@code AutowireCapableBeanFactory} from which to resolve, +	 * the dependency, +	 * @see SynthesizingMethodParameter#forExecutable(Executable, int), +			Parameter parameter, int parameterIndex, Class<?> containingClass, AutowireCapableBeanFactory beanFactory) {, +		return beanFactory.resolveDependency(descriptor, null);, +++ b/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/ParameterAutowireUtils.java, + * Copyright 2002-2019 the original author or authors., +	 * Determine if the supplied {@link Parameter} can <em>potentially</em> be, +	 * autowired from an {@link AutowireCapableBeanFactory}., +	 * <p>Returns {@code true} if the supplied parameter is annotated or, +	 * <p>Note that {@link #resolveDependency} may still be able to resolve the, +	 * dependency for the supplied parameter even if this method returns {@code false}., +	 * @param parameterIndex the index of the parameter in the constructor or method, +	 * that declares the parameter, +	 * supplied {@link AutowireCapableBeanFactory}., +	 * <p>The dependency is required unless the parameter is annotated or meta-annotated, +	 * with {@link Autowired @Autowired} with the {@link Autowired#required required}, +	 * @param parameterIndex the index of the parameter in the constructor or method, +	 * that declares the parameter, +	 * @param beanFactory the {@code AutowireCapableBeanFactory} from which to resolve, +	 * the dependency, +	 * @see SynthesizingMethodParameter#forExecutable(Executable, int), +			Parameter parameter, int parameterIndex, Class<?> containingClass, AutowireCapableBeanFactory beanFactory) {, +		return beanFactory.resolveDependency(descriptor, null);, +++ b/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/SpringExtension.java, + * Copyright 2002-2019 the original author or authors., +	 * that is annotated with {@link Autowired @Autowired} or if the parameter is, +	 * of type {@link ApplicationContext} (or a sub-type thereof) and otherwise delegates, +	 * to {@link ParameterAutowireUtils#isAutowirable}., +				ApplicationContext.class.isAssignableFrom(parameter.getType()) ||, +		return ParameterAutowireUtils.resolveDependency(parameter, index, testClass,, +			applicationContext.getAutowireCapableBeanFactory());]