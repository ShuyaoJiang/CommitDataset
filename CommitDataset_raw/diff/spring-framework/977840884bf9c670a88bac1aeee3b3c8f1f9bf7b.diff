[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceChainRegistration.java, + * Copyright 2002-2016 the original author or authors., +	private boolean hasWebjarsResolver;, +, +		else if (resolver instanceof WebJarsResourceResolver) {, +			this.hasWebjarsResolver = true;, +		}, +			if (isWebJarsAssetLocatorPresent && !this.hasWebjarsResolver) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceChainRegistration.java, + * Copyright 2002-2016 the original author or authors., +	private boolean hasWebjarsResolver;, +, +		else if (resolver instanceof WebJarsResourceResolver) {, +			this.hasWebjarsResolver = true;, +		}, +			if (isWebJarsAssetLocatorPresent && !this.hasWebjarsResolver) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/WebJarsResourceResolver.java, +, +	private final WebJarAssetLocator webJarAssetLocator;, +	/**, +	 * Create a {@code WebJarsResourceResolver} with a default {@code WebJarAssetLocator} instance., +	 */, +	public WebJarsResourceResolver() {, +		this(new WebJarAssetLocator());, +	}, +, +	/**, +	 * Create a {@code WebJarsResourceResolver} with a custom {@code WebJarAssetLocator} instance,, +	 * e.g. with a custom index., +	 * @since 4.3.0, +	 */, +	public WebJarsResourceResolver(WebJarAssetLocator webJarAssetLocator) {, +		this.webJarAssetLocator = webJarAssetLocator;, +	}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceChainRegistration.java, + * Copyright 2002-2016 the original author or authors., +	private boolean hasWebjarsResolver;, +, +		else if (resolver instanceof WebJarsResourceResolver) {, +			this.hasWebjarsResolver = true;, +		}, +			if (isWebJarsAssetLocatorPresent && !this.hasWebjarsResolver) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/WebJarsResourceResolver.java, +, +	private final WebJarAssetLocator webJarAssetLocator;, +	/**, +	 * Create a {@code WebJarsResourceResolver} with a default {@code WebJarAssetLocator} instance., +	 */, +	public WebJarsResourceResolver() {, +		this(new WebJarAssetLocator());, +	}, +, +	/**, +	 * Create a {@code WebJarsResourceResolver} with a custom {@code WebJarAssetLocator} instance,, +	 * e.g. with a custom index., +	 * @since 4.3.0, +	 */, +	public WebJarsResourceResolver(WebJarAssetLocator webJarAssetLocator) {, +		this.webJarAssetLocator = webJarAssetLocator;, +	}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistryTests.java, +		WebJarsResourceResolver webjarsResolver = Mockito.mock(WebJarsResourceResolver.class);, +					.addResolver(webjarsResolver), +		assertThat(resolvers.toString(), resolvers, Matchers.hasSize(4));, +		assertThat(resolvers.get(2), Matchers.sameInstance(webjarsResolver));, +		assertThat(resolvers.get(3), Matchers.sameInstance(pathResourceResolver));]