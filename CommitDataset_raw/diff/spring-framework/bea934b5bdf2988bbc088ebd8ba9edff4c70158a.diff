[+++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, + * @author Juergen Hoeller, +	// Component getters, +	 * Return the map of query parameters. Empty if no query has been set., +	// Encoding, +	 * @param charset the encoding of the values, +	 * @return the encoded URI components, +	 * @param source the source String, +	 * @param encoding the encoding of the source String, +	 * @throws IllegalArgumentException when the given value is not a valid URI component, +	 * @param source the source String, +	 * @param charset the encoding of the source String, +	// Verifying, +	// Expanding, +	// Other functionality, +	 * Returns a URI String from this {@code UriComponents} instance., +	// Nested types, +	 * Represents a path backed by a String., +	 * Represents a path backed by a String list (i.e. path segments)., +			Assert.notNull(pathSegments, "List must not be null");, +			return getClass().hashCode();, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, + * @author Juergen Hoeller, +	// Component getters, +	 * Return the map of query parameters. Empty if no query has been set., +	// Encoding, +	 * @param charset the encoding of the values, +	 * @return the encoded URI components, +	 * @param source the source String, +	 * @param encoding the encoding of the source String, +	 * @throws IllegalArgumentException when the given value is not a valid URI component, +	 * @param source the source String, +	 * @param charset the encoding of the source String, +	// Verifying, +	// Expanding, +	// Other functionality, +	 * Returns a URI String from this {@code UriComponents} instance., +	// Nested types, +	 * Represents a path backed by a String., +	 * Represents a path backed by a String list (i.e. path segments)., +			Assert.notNull(pathSegments, "List must not be null");, +			return getClass().hashCode();, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, + * @author Juergen Hoeller, +	/** Captures URI template variable names */, +	 * @return the expanded URI components, +	 * Return a URI String from this {@code UriComponents} instance., +	// Static expansion helpers, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, + * @author Juergen Hoeller, +	// Component getters, +	 * Return the map of query parameters. Empty if no query has been set., +	// Encoding, +	 * @param charset the encoding of the values, +	 * @return the encoded URI components, +	 * @param source the source String, +	 * @param encoding the encoding of the source String, +	 * @throws IllegalArgumentException when the given value is not a valid URI component, +	 * @param source the source String, +	 * @param charset the encoding of the source String, +	// Verifying, +	// Expanding, +	// Other functionality, +	 * Returns a URI String from this {@code UriComponents} instance., +	// Nested types, +	 * Represents a path backed by a String., +	 * Represents a path backed by a String list (i.e. path segments)., +			Assert.notNull(pathSegments, "List must not be null");, +			return getClass().hashCode();, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, + * @author Juergen Hoeller, +	/** Captures URI template variable names */, +	 * @return the expanded URI components, +	 * Return a URI String from this {@code UriComponents} instance., +	// Static expansion helpers, +++ b/spring-web/src/main/java/org/springframework/web/util/UriUtils.java, + * Copyright 2002-2017 the original author or authors., +	 * @param source the String to be encoded, +	 * @return the encoded String]