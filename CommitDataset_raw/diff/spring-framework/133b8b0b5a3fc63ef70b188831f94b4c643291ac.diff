[+++ b/spring-core/src/main/java/org/springframework/core/io/buffer/NettyDataBuffer.java, +				ByteBuf[] nativeBuffers = new ByteBuf[buffers.length];, +				for (int i = 0 ; i < buffers.length; i++) {, +					nativeBuffers[i] = ((NettyDataBuffer) buffers[i]).getNativeBuffer();, +				}, +				ByteBuffer[] byteBuffers = new ByteBuffer[buffers.length];, +				for (int i = 0 ; i < buffers.length; i++) {, +					byteBuffers[i] = buffers[i].asByteBuffer();, +, +				}, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/NettyDataBuffer.java, +				ByteBuf[] nativeBuffers = new ByteBuf[buffers.length];, +				for (int i = 0 ; i < buffers.length; i++) {, +					nativeBuffers[i] = ((NettyDataBuffer) buffers[i]).getNativeBuffer();, +				}, +				ByteBuffer[] byteBuffers = new ByteBuffer[buffers.length];, +				for (int i = 0 ; i < buffers.length; i++) {, +					byteBuffers[i] = buffers[i].asByteBuffer();, +, +				}, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/NettyDataBufferFactory.java, +	 * Wrap the given Netty {@link ByteBuf} in a {@code NettyDataBuffer}., +	 * @param byteBuf the Netty byte buffer to wrap, +	 * @return the wrapped buffer, +	 */, +	public NettyDataBuffer wrap(ByteBuf byteBuf) {, +		return new NettyDataBuffer(byteBuf, this);, +	}, +, +	/**, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/NettyDataBuffer.java, +				ByteBuf[] nativeBuffers = new ByteBuf[buffers.length];, +				for (int i = 0 ; i < buffers.length; i++) {, +					nativeBuffers[i] = ((NettyDataBuffer) buffers[i]).getNativeBuffer();, +				}, +				ByteBuffer[] byteBuffers = new ByteBuffer[buffers.length];, +				for (int i = 0 ; i < buffers.length; i++) {, +					byteBuffers[i] = buffers[i].asByteBuffer();, +, +				}, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/NettyDataBufferFactory.java, +	 * Wrap the given Netty {@link ByteBuf} in a {@code NettyDataBuffer}., +	 * @param byteBuf the Netty byte buffer to wrap, +	 * @return the wrapped buffer, +	 */, +	public NettyDataBuffer wrap(ByteBuf byteBuf) {, +		return new NettyDataBuffer(byteBuf, this);, +	}, +, +	/**, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageReaderArgumentResolver.java, +	 * @param bodyParam represents the element type for the body, +	 * @param actualParam the actual method argument type; possibly different, +	 * from {@code bodyParam}, e.g. for an {@code HttpEntity} argument, +	 * @return a Mono with the value to use for the method argument, +		Object[] hints = extractValidationHints(bodyParam);]