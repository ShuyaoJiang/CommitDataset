[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java, +		 * followed by {@link #and()}, followed by the right-hand side, followed by {@link #endAnd()}., +		 * Receive "middle" notification of a logical AND predicate., +		 * The following notification contains the right-hand side, followed by {@link #endAnd()}., +		 * @see RequestPredicate#and(RequestPredicate), +		 */, +		void and();, +, +		/**, +		 * Receive "middle" notification of a logical OR predicate., +		 * The following notification contains the right-hand side, followed by {@link #endOr()}., +		 * @see RequestPredicate#or(RequestPredicate), +		 */, +		void or();, +, +		/**, +			visitor.and();, +			visitor.or();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java, +		 * followed by {@link #and()}, followed by the right-hand side, followed by {@link #endAnd()}., +		 * Receive "middle" notification of a logical AND predicate., +		 * The following notification contains the right-hand side, followed by {@link #endAnd()}., +		 * @see RequestPredicate#and(RequestPredicate), +		 */, +		void and();, +, +		/**, +		 * Receive "middle" notification of a logical OR predicate., +		 * The following notification contains the right-hand side, followed by {@link #endOr()}., +		 * @see RequestPredicate#or(RequestPredicate), +		 */, +		void or();, +, +		/**, +			visitor.and();, +			visitor.or();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ToStringVisitor.java, +	}, +, +	@Override, +	public void and() {, +		this.builder.append(" && ");, +	}, +, +	@Override, +	public void or() {, +		this.builder.append(" || ");, +, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java, +		 * followed by {@link #and()}, followed by the right-hand side, followed by {@link #endAnd()}., +		 * Receive "middle" notification of a logical AND predicate., +		 * The following notification contains the right-hand side, followed by {@link #endAnd()}., +		 * @see RequestPredicate#and(RequestPredicate), +		 */, +		void and();, +, +		/**, +		 * Receive "middle" notification of a logical OR predicate., +		 * The following notification contains the right-hand side, followed by {@link #endOr()}., +		 * @see RequestPredicate#or(RequestPredicate), +		 */, +		void or();, +, +		/**, +			visitor.and();, +			visitor.or();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ToStringVisitor.java, +	}, +, +	@Override, +	public void and() {, +		this.builder.append(" && ");, +	}, +, +	@Override, +	public void or() {, +		this.builder.append(" || ");, +, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/server/ToStringVisitorTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RequestPredicates.accept;, +import static org.springframework.web.reactive.function.server.RequestPredicates.contentType;, +import static org.springframework.web.reactive.function.server.RequestPredicates.method;, +import static org.springframework.web.reactive.function.server.RequestPredicates.methods;, +import static org.springframework.web.reactive.function.server.RequestPredicates.path;, +import static org.springframework.web.reactive.function.server.RequestPredicates.pathExtension;, +import static org.springframework.web.reactive.function.server.RequestPredicates.queryParam;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +, +		testPredicate(GET("/foo"), +				.or(contentType(MediaType.TEXT_PLAIN)), +				.and(accept(MediaType.APPLICATION_JSON).negate()),, +				"(((GET && /foo) || Content-Type: text/plain) && !(Accept: application/json))");]