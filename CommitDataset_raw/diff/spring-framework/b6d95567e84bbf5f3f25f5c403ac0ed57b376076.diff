[+++ b/spring-orm/src/main/java/org/springframework/orm/hibernate5/LocalSessionFactoryBean.java, +import org.hibernate.integrator.spi.Integrator;, +import org.hibernate.service.ServiceRegistry;, + * {@link FactoryBean} that creates a Hibernate {@link SessionFactory}. This is the usual, + * way to set up a shared Hibernate SessionFactory in a Spring application context; the, + * SessionFactory can then be passed to data access objects via dependency injection., + * <p>Compatible with Hibernate 5.0/5.1 as well as 5.2/5.3, as of Spring 5.1., +	@Nullable, +	private Integrator[] hibernateIntegrators;, +, +	 * Specify one or more Hibernate {@link Integrator} implementations to apply., +	 * <p>This will only be applied for an internally built {@link MetadataSources}, +	 * instance. {@link #setMetadataSources} effectively overrides such settings,, +	 * with integrators to be applied to the externally built {@link MetadataSources}., +	 * @since 5.1, +	 * @see #setMetadataSources, +	 * @see BootstrapServiceRegistryBuilder#applyIntegrator, +	 */, +	public void setHibernateIntegrators(Integrator... hibernateIntegrators) {, +		this.hibernateIntegrators = hibernateIntegrators;, +	}, +, +	/**, +	 * @see MetadataSources#MetadataSources(ServiceRegistry), +	 * @see BootstrapServiceRegistryBuilder#build(), +			if (this.hibernateIntegrators != null) {, +				for (Integrator integrator : this.hibernateIntegrators) {, +					builder = builder.applyIntegrator(integrator);, +				}, +			}, +++ b/spring-orm/src/main/java/org/springframework/orm/hibernate5/LocalSessionFactoryBean.java, +import org.hibernate.integrator.spi.Integrator;, +import org.hibernate.service.ServiceRegistry;, + * {@link FactoryBean} that creates a Hibernate {@link SessionFactory}. This is the usual, + * way to set up a shared Hibernate SessionFactory in a Spring application context; the, + * SessionFactory can then be passed to data access objects via dependency injection., + * <p>Compatible with Hibernate 5.0/5.1 as well as 5.2/5.3, as of Spring 5.1., +	@Nullable, +	private Integrator[] hibernateIntegrators;, +, +	 * Specify one or more Hibernate {@link Integrator} implementations to apply., +	 * <p>This will only be applied for an internally built {@link MetadataSources}, +	 * instance. {@link #setMetadataSources} effectively overrides such settings,, +	 * with integrators to be applied to the externally built {@link MetadataSources}., +	 * @since 5.1, +	 * @see #setMetadataSources, +	 * @see BootstrapServiceRegistryBuilder#applyIntegrator, +	 */, +	public void setHibernateIntegrators(Integrator... hibernateIntegrators) {, +		this.hibernateIntegrators = hibernateIntegrators;, +	}, +, +	/**, +	 * @see MetadataSources#MetadataSources(ServiceRegistry), +	 * @see BootstrapServiceRegistryBuilder#build(), +			if (this.hibernateIntegrators != null) {, +				for (Integrator integrator : this.hibernateIntegrators) {, +					builder = builder.applyIntegrator(integrator);, +				}, +			}, +++ b/spring-orm/src/main/java/org/springframework/orm/hibernate5/LocalSessionFactoryBuilder.java, + * <p>Compatible with Hibernate 5.0/5.1 as well as 5.2/5.3, as of Spring 5.1., +	public LocalSessionFactoryBuilder(, +			@Nullable DataSource dataSource, ResourceLoader resourceLoader, MetadataSources metadataSources) {, +]