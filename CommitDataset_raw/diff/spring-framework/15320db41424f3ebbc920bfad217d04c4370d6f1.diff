[+++ b/spring-context/src/test/java/org/springframework/context/support/SimpleThreadScopeTests.java, +, +	private final ApplicationContext applicationContext =, +			new ClassPathXmlApplicationContext("simpleThreadScopeTests.xml", getClass());, +, +				beans[0] = applicationContext.getBean("threadScopedObject", TestBean.class);, +				beans[1] = applicationContext.getBean("threadScopedObject", TestBean.class);, +++ b/spring-context/src/test/java/org/springframework/context/support/SimpleThreadScopeTests.java, +, +	private final ApplicationContext applicationContext =, +			new ClassPathXmlApplicationContext("simpleThreadScopeTests.xml", getClass());, +, +				beans[0] = applicationContext.getBean("threadScopedObject", TestBean.class);, +				beans[1] = applicationContext.getBean("threadScopedObject", TestBean.class);, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, +	// Protected template methods, +, +, +++ b/spring-context/src/test/java/org/springframework/context/support/SimpleThreadScopeTests.java, +, +	private final ApplicationContext applicationContext =, +			new ClassPathXmlApplicationContext("simpleThreadScopeTests.xml", getClass());, +, +				beans[0] = applicationContext.getBean("threadScopedObject", TestBean.class);, +				beans[1] = applicationContext.getBean("threadScopedObject", TestBean.class);, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, +	// Protected template methods, +, +, +++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, +, +++ b/spring-context/src/test/java/org/springframework/context/support/SimpleThreadScopeTests.java, +, +	private final ApplicationContext applicationContext =, +			new ClassPathXmlApplicationContext("simpleThreadScopeTests.xml", getClass());, +, +				beans[0] = applicationContext.getBean("threadScopedObject", TestBean.class);, +				beans[1] = applicationContext.getBean("threadScopedObject", TestBean.class);, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, +	// Protected template methods, +, +, +++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, +, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/AbstractCookieValueMethodArgumentResolver.java, +, +	protected void handleMissingValue(String name, MethodParameter parameter) throws ServletRequestBindingException {, +		throw new ServletRequestBindingException("Missing cookie '" + name +, +				"' for method parameter of type " + parameter.getParameterType().getSimpleName());, +, +, +++ b/spring-context/src/test/java/org/springframework/context/support/SimpleThreadScopeTests.java, +, +	private final ApplicationContext applicationContext =, +			new ClassPathXmlApplicationContext("simpleThreadScopeTests.xml", getClass());, +, +				beans[0] = applicationContext.getBean("threadScopedObject", TestBean.class);, +				beans[1] = applicationContext.getBean("threadScopedObject", TestBean.class);, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, +	// Protected template methods, +, +, +++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, +, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/AbstractCookieValueMethodArgumentResolver.java, +, +	protected void handleMissingValue(String name, MethodParameter parameter) throws ServletRequestBindingException {, +		throw new ServletRequestBindingException("Missing cookie '" + name +, +				"' for method parameter of type " + parameter.getParameterType().getSimpleName());, +, +, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/ExpressionValueMethodArgumentResolver.java, +, +, +, +++ b/spring-context/src/test/java/org/springframework/context/support/SimpleThreadScopeTests.java, +, +	private final ApplicationContext applicationContext =, +			new ClassPathXmlApplicationContext("simpleThreadScopeTests.xml", getClass());, +, +				beans[0] = applicationContext.getBean("threadScopedObject", TestBean.class);, +				beans[1] = applicationContext.getBean("threadScopedObject", TestBean.class);, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, +	// Protected template methods, +, +, +++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, +, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/AbstractCookieValueMethodArgumentResolver.java, +, +	protected void handleMissingValue(String name, MethodParameter parameter) throws ServletRequestBindingException {, +		throw new ServletRequestBindingException("Missing cookie '" + name +, +				"' for method parameter of type " + parameter.getParameterType().getSimpleName());, +, +, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/ExpressionValueMethodArgumentResolver.java, +, +, +, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/RequestHeaderMethodArgumentResolver.java]