[+++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/HandlerMethod.java, +	/** Public for wrapping with fallback logger. */, +	public static final Log defaultLogger = LogFactory.getLog(HandlerMethod.class);, +, +, +	protected Log logger = defaultLogger;, +, +	/**, +	 * Set an alternative logger to use than the one based on the class name., +	 * @param logger the logger to use, +	 * @since 5.1, +	 */, +	public void setLogger(Log logger) {, +		this.logger = logger;, +	}, +, +	/**, +	 * Return the currently configured Logger., +	 * @since 5.1, +	 */, +	public Log getLogger() {, +		return logger;, +	}, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/HandlerMethod.java, +	/** Public for wrapping with fallback logger. */, +	public static final Log defaultLogger = LogFactory.getLog(HandlerMethod.class);, +, +, +	protected Log logger = defaultLogger;, +, +	/**, +	 * Set an alternative logger to use than the one based on the class name., +	 * @param logger the logger to use, +	 * @since 5.1, +	 */, +	public void setLogger(Log logger) {, +		this.logger = logger;, +	}, +, +	/**, +	 * Return the currently configured Logger., +	 * @since 5.1, +	 */, +	public Log getLogger() {, +		return logger;, +	}, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +	@Nullable, +	private Log handlerMethodLogger;, +, +, +		Log returnValueLogger = getReturnValueHandlerLogger();, +		if (returnValueLogger != null) {, +			this.returnValueHandlers.setLogger(returnValueLogger);, +		}, +, +		this.handlerMethodLogger = getHandlerMethodLogger();, +	 * Return a logger to set on {@link HandlerMethodReturnValueHandlerComposite}., +	 * @since 5.1, +	 */, +	@Nullable, +	protected Log getReturnValueHandlerLogger() {, +		return null;, +	}, +, +	/**, +	 * Return a logger to set on {@link InvocableHandlerMethod}., +	 * @since 5.1, +	 */, +	@Nullable, +	protected Log getHandlerMethodLogger() {, +		return null;, +	}, +, +	/**, +		if (this.handlerMethodLogger != null) {, +			invocable.setLogger(this.handlerMethodLogger);, +		}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/HandlerMethod.java, +	/** Public for wrapping with fallback logger. */, +	public static final Log defaultLogger = LogFactory.getLog(HandlerMethod.class);, +, +, +	protected Log logger = defaultLogger;, +, +	/**, +	 * Set an alternative logger to use than the one based on the class name., +	 * @param logger the logger to use, +	 * @since 5.1, +	 */, +	public void setLogger(Log logger) {, +		this.logger = logger;, +	}, +, +	/**, +	 * Return the currently configured Logger., +	 * @since 5.1, +	 */]