[+++ b/spring-web/src/main/java/org/springframework/http/codec/DecoderHttpMessageReader.java, + * {@code HttpMessageReader} that wraps and delegates to a {@link Decoder}., + *, + * <p>Also a {@code ServerHttpMessageReader} that pre-resolves decoding hints, + * from the extra information available on the server side such as the request, + * or controller method parameter annotations., +		allHints.putAll(getReadHints(streamType, elementType, request, response));, +		allHints.putAll(getReadHints(streamType, elementType, request, response));, +	 * Get additional hints for decoding for example based on the server request, +	 * or annotations from controller method parameters. By default, delegate to, +	 * the decoder if it is an instance of {@link ServerHttpDecoder}., +	protected Map<String, Object> getReadHints(ResolvableType streamType,, +		if (this.decoder instanceof ServerHttpDecoder) {, +			ServerHttpDecoder<?> httpDecoder = (ServerHttpDecoder<?>) this.decoder;, +			return httpDecoder.getDecodeHints(streamType, elementType, request, response);, +		}, +++ b/spring-web/src/main/java/org/springframework/http/codec/DecoderHttpMessageReader.java, + * {@code HttpMessageReader} that wraps and delegates to a {@link Decoder}., + *, + * <p>Also a {@code ServerHttpMessageReader} that pre-resolves decoding hints, + * from the extra information available on the server side such as the request, + * or controller method parameter annotations., +		allHints.putAll(getReadHints(streamType, elementType, request, response));, +		allHints.putAll(getReadHints(streamType, elementType, request, response));, +	 * Get additional hints for decoding for example based on the server request, +	 * or annotations from controller method parameters. By default, delegate to, +	 * the decoder if it is an instance of {@link ServerHttpDecoder}., +	protected Map<String, Object> getReadHints(ResolvableType streamType,, +		if (this.decoder instanceof ServerHttpDecoder) {, +			ServerHttpDecoder<?> httpDecoder = (ServerHttpDecoder<?>) this.decoder;, +			return httpDecoder.getDecodeHints(streamType, elementType, request, response);, +		}, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, + * {@code HttpMessageWriter} that wraps and delegates to a {@link Encoder}., + *, + * <p>Also a {@code ServerHttpMessageWriter} that pre-resolves encoding hints, + * from the extra information available on the server side such as the request, + * or controller method annotations., +		allHints.putAll(getWriteHints(streamType, elementType, mediaType, request, response));, +	 * Get additional hints for encoding for example based on the server request, +	 * or annotations from controller method parameters. By default, delegate to, +	 * the encoder if it is an instance of {@link ServerHttpEncoder}., +	protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,, +		if (this.encoder instanceof ServerHttpEncoder) {, +			ServerHttpEncoder<?> httpEncoder = (ServerHttpEncoder<?>) this.encoder;, +			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response);, +		}, +++ b/spring-web/src/main/java/org/springframework/http/codec/DecoderHttpMessageReader.java, + * {@code HttpMessageReader} that wraps and delegates to a {@link Decoder}., + *, + * <p>Also a {@code ServerHttpMessageReader} that pre-resolves decoding hints, + * from the extra information available on the server side such as the request, + * or controller method parameter annotations., +		allHints.putAll(getReadHints(streamType, elementType, request, response));, +		allHints.putAll(getReadHints(streamType, elementType, request, response));, +	 * Get additional hints for decoding for example based on the server request, +	 * or annotations from controller method parameters. By default, delegate to, +	 * the decoder if it is an instance of {@link ServerHttpDecoder}., +	protected Map<String, Object> getReadHints(ResolvableType streamType,, +		if (this.decoder instanceof ServerHttpDecoder) {, +			ServerHttpDecoder<?> httpDecoder = (ServerHttpDecoder<?>) this.decoder;, +			return httpDecoder.getDecodeHints(streamType, elementType, request, response);, +		}, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, + * {@code HttpMessageWriter} that wraps and delegates to a {@link Encoder}., + *, + * <p>Also a {@code ServerHttpMessageWriter} that pre-resolves encoding hints, + * from the extra information available on the server side such as the request, + * or controller method annotations., +		allHints.putAll(getWriteHints(streamType, elementType, mediaType, request, response));, +	 * Get additional hints for encoding for example based on the server request, +	 * or annotations from controller method parameters. By default, delegate to, +	 * the encoder if it is an instance of {@link ServerHttpEncoder}., +	protected Map<String, Object> getWriteHints(ResolvableType streamType, ResolvableType elementType,, +		if (this.encoder instanceof ServerHttpEncoder) {, +			ServerHttpEncoder<?> httpEncoder = (ServerHttpEncoder<?>) this.encoder;, +			return httpEncoder.getEncodeHints(streamType, elementType, mediaType, request, response);, +		}, +++ /dev/null, +++ b/spring-web/src/main/java/org/springframework/http/codec/DecoderHttpMessageReader.java, + * {@code HttpMessageReader} that wraps and delegates to a {@link Decoder}., + *, + * <p>Also a {@code ServerHttpMessageReader} that pre-resolves decoding hints, + * from the extra information available on the server side such as the request, + * or controller method parameter annotations., +		allHints.putAll(getReadHints(streamType, elementType, request, response));, +		allHints.putAll(getReadHints(streamType, elementType, request, response));, +	 * Get additional hints for decoding for example based on the server request, +	 * or annotations from controller method parameters. By default, delegate to, +	 * the decoder if it is an instance of {@link ServerHttpDecoder}., +	protected Map<String, Object> getReadHints(ResolvableType streamType,, +		if (this.decoder instanceof ServerHttpDecoder) {, +			ServerHttpDecoder<?> httpDecoder = (ServerHttpDecoder<?>) this.decoder;, +			return httpDecoder.getDecodeHints(streamType, elementType, request, response);, +		}, +++ b/spring-web/src/main/java/org/springframework/http/codec/EncoderHttpMessageWriter.java, + * {@code HttpMessageWriter} that wraps and delegates to a {@link Encoder}., + *, + * <p>Also a {@code ServerHttpMessageWriter} that pre-resolves encoding hints, + * from the extra information available on the server side such as the request]