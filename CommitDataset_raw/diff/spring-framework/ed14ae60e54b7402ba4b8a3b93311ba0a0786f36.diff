[+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvocationException.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvocationException.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvocationException.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodResolver.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvocationException.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodResolver.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +	 * Portlet-specific subclass of {@code HandlerMethodResolver}., +	@SuppressWarnings("deprecation"), +	private static class PortletHandlerMethodResolver extends org.springframework.web.bind.annotation.support.HandlerMethodResolver {, +	 * Portlet-specific subclass of {@code HandlerMethodInvoker}., +	@SuppressWarnings("deprecation"), +	private class PortletHandlerMethodInvoker extends org.springframework.web.bind.annotation.support.HandlerMethodInvoker {, +		public PortletHandlerMethodInvoker(org.springframework.web.bind.annotation.support.HandlerMethodResolver resolver) {, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvocationException.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodResolver.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +	 * Portlet-specific subclass of {@code HandlerMethodResolver}., +	@SuppressWarnings("deprecation"), +	private static class PortletHandlerMethodResolver extends org.springframework.web.bind.annotation.support.HandlerMethodResolver {, +	 * Portlet-specific subclass of {@code HandlerMethodInvoker}., +	@SuppressWarnings("deprecation"), +	private class PortletHandlerMethodInvoker extends org.springframework.web.bind.annotation.support.HandlerMethodInvoker {, +		public PortletHandlerMethodInvoker(org.springframework.web.bind.annotation.support.HandlerMethodResolver resolver) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +	private org.springframework.web.servlet.mvc.multiaction.MethodNameResolver methodNameResolver =, +			new org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver();, +	public void setMethodNameResolver(org.springframework.web.servlet.mvc.multiaction.MethodNameResolver methodNameResolver) {, +	 * Servlet-specific subclass of {@code HandlerMethodResolver}., +	@SuppressWarnings("deprecation"), +	private class ServletHandlerMethodResolver extends org.springframework.web.bind.annotation.support.HandlerMethodResolver {, +				throw new org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException(, +						lookupPath, request.getMethod(), request.getParameterMap());, +	 * Servlet-specific subclass of {@code HandlerMethodInvoker}., +	@SuppressWarnings("deprecation"), +	private class ServletHandlerMethodInvoker extends org.springframework.web.bind.annotation.support.HandlerMethodInvoker {, +		private ServletHandlerMethodInvoker(org.springframework.web.bind.annotation.support.HandlerMethodResolver resolver) {, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvocationException.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodInvoker.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/support/HandlerMethodResolver.java, + * @deprecated as of 4.3, in favor of the {@code HandlerMethod}-based MVC infrastructure, +@Deprecated, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +	 * Portlet-specific subclass of {@code HandlerMethodResolver}., +	@SuppressWarnings("deprecation"), +	private static class PortletHandlerMethodResolver extends org.springframework.web.bind.annotation.support.HandlerMethodResolver {, +	 * Portlet-specific subclass of {@code HandlerMethodInvoker}., +	@SuppressWarnings("deprecation"), +	private class PortletHandlerMethodInvoker extends org.springframework.web.bind.annotation.support.HandlerMethodInvoker {, +		public PortletHandlerMethodInvoker(org.springframework.web.bind.annotation.support.HandlerMethodResolver resolver) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +	private org.springframework.web.servlet.mvc.multiaction.MethodNameResolver methodNameResolver =, +			new org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver();, +	public void setMethodNameResolver(org.springframework.web.servlet.mvc.multiaction.MethodNameResolver methodNameResolver) {, +	 * Servlet-specific subclass of {@code HandlerMethodResolver}., +	@SuppressWarnings("deprecation"), +	private class ServletHandlerMethodResolver extends org.springframework.web.bind.annotation.support.HandlerMethodResolver {, +				throw new org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException(, +						lookupPath, request.getMethod(), request.getParameterMap());, +	 * Servlet-specific subclass of {@code HandlerMethodInvoker}., +	@SuppressWarnings("deprecation"), +	private class ServletHandlerMethodInvoker extends org.springframework.web.bind.annotation.support.HandlerMethodInvoker {, +		private ServletHandlerMethodInvoker(org.springframework.web.bind.annotation.support.HandlerMethodResolver resolver) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.java, +	@SuppressWarnings("deprecation"), +			org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException.class,, +		if (ex instanceof org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException) {, +			return handleNoSuchRequestHandlingMethod((org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException) ex, headers, status, request);]