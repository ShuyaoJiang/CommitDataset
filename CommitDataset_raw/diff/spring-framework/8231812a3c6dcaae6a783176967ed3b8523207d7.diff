[+++ b/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2CodecSupport.java, +import org.springframework.util.ObjectUtils;, +	private final List<MimeType> mimeTypes;, +, +	protected Jackson2CodecSupport(ObjectMapper objectMapper, MimeType... mimeTypes) {, +		this.mimeTypes = !ObjectUtils.isEmpty(mimeTypes) ? Arrays.asList(mimeTypes) : JSON_MIME_TYPES;, +		return (mimeType == null || this.mimeTypes.stream().anyMatch(m -> m.isCompatibleWith(mimeType)));, +++ b/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2CodecSupport.java, +import org.springframework.util.ObjectUtils;, +	private final List<MimeType> mimeTypes;, +, +	protected Jackson2CodecSupport(ObjectMapper objectMapper, MimeType... mimeTypes) {, +		this.mimeTypes = !ObjectUtils.isEmpty(mimeTypes) ? Arrays.asList(mimeTypes) : JSON_MIME_TYPES;, +		return (mimeType == null || this.mimeTypes.stream().anyMatch(m -> m.isCompatibleWith(mimeType)));, +++ b/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2JsonDecoder.java, +	public Jackson2JsonDecoder(ObjectMapper mapper, MimeType... mimeTypes) {, +		super(mapper, mimeTypes);, +++ b/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2CodecSupport.java, +import org.springframework.util.ObjectUtils;, +	private final List<MimeType> mimeTypes;, +, +	protected Jackson2CodecSupport(ObjectMapper objectMapper, MimeType... mimeTypes) {, +		this.mimeTypes = !ObjectUtils.isEmpty(mimeTypes) ? Arrays.asList(mimeTypes) : JSON_MIME_TYPES;, +		return (mimeType == null || this.mimeTypes.stream().anyMatch(m -> m.isCompatibleWith(mimeType)));, +++ b/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2JsonDecoder.java, +	public Jackson2JsonDecoder(ObjectMapper mapper, MimeType... mimeTypes) {, +		super(mapper, mimeTypes);, +++ b/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2JsonEncoder.java, +	public Jackson2JsonEncoder(ObjectMapper mapper, MimeType... mimeTypes) {, +		super(mapper, mimeTypes);]