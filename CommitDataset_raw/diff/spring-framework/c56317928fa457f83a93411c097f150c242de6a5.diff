[+++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.http.codec.multipart.Part;, +, +	@Override, +	@SuppressWarnings("unchecked"), +	public Mono<MultiValueMap<String, String>> formData() {, +		Assert.state(this.body != null, "No body");, +		return (Mono<MultiValueMap<String, String>>) this.body;, +	}, +, +	@Override, +	@SuppressWarnings("unchecked"), +	public Mono<MultiValueMap<String, Part>> multipartData() {, +		Assert.state(this.body != null, "No body");, +		return (Mono<MultiValueMap<String, Part>>) this.body;, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.http.codec.multipart.Part;, +, +	@Override, +	@SuppressWarnings("unchecked"), +	public Mono<MultiValueMap<String, String>> formData() {, +		Assert.state(this.body != null, "No body");, +		return (Mono<MultiValueMap<String, String>>) this.body;, +	}, +, +	@Override, +	@SuppressWarnings("unchecked"), +	public Mono<MultiValueMap<String, Part>> multipartData() {, +		Assert.state(this.body != null, "No body");, +		return (Mono<MultiValueMap<String, Part>>) this.body;, +	}, +, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.http.codec.multipart.Part;, +	@Override, +	public Mono<MultiValueMap<String, String>> formData() {, +		return this.exchange.getFormData();, +	}, +, +	@Override, +	public Mono<MultiValueMap<String, Part>> multipartData() {, +		return this.exchange.getMultipartData();, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.http.codec.multipart.Part;, +, +	@Override, +	@SuppressWarnings("unchecked"), +	public Mono<MultiValueMap<String, String>> formData() {, +		Assert.state(this.body != null, "No body");, +		return (Mono<MultiValueMap<String, String>>) this.body;, +	}, +, +	@Override, +	@SuppressWarnings("unchecked"), +	public Mono<MultiValueMap<String, Part>> multipartData() {, +		Assert.state(this.body != null, "No body");, +		return (Mono<MultiValueMap<String, Part>>) this.body;, +	}, +, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.http.codec.multipart.Part;, +	@Override, +	public Mono<MultiValueMap<String, String>> formData() {, +		return this.exchange.getFormData();, +	}, +, +	@Override, +	public Mono<MultiValueMap<String, Part>> multipartData() {, +		return this.exchange.getMultipartData();, +	}, +, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.http.codec.multipart.Part;, +		public Mono<MultiValueMap<String, String>> formData() {, +			return this.request.formData();, +		}, +, +		@Override, +		public Mono<MultiValueMap<String, Part>> multipartData() {, +			return this.request.multipartData();, +		}, +, +		@Override, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.http.codec.multipart.Part;, +, +	@Override, +	@SuppressWarnings("unchecked"), +	public Mono<MultiValueMap<String, String>> formData() {]