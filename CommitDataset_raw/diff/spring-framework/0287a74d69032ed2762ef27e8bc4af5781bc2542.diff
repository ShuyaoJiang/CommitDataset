[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultWebTestClient.java, +			return (S) new DefaultRequestBodySpec(this.uriSpec.uri(uri), null);, +			return (S) new DefaultRequestBodySpec(this.uriSpec.uri(uriTemplate, uriVariables), uriTemplate);, +			return (S) new DefaultRequestBodySpec(this.uriSpec.uri(uriTemplate, uriVariables), uriTemplate);, +			return (S) new DefaultRequestBodySpec(this.uriSpec.uri(uriBuilder), null);, +		private final String uriTemplate;, +, +		DefaultRequestBodySpec(WebClient.RequestBodySpec spec, String uriTemplate) {, +			this.uriTemplate = uriTemplate;, +			return new DefaultResponseSpec(exchangeResult, clientResponse, this.uriTemplate, getTimeout());, +		UndecodedExchangeResult(ExchangeResult result, ClientResponse response,, +				String uriTemplate, Duration timeout) {, +, +			super(result, uriTemplate);, +		DefaultResponseSpec(ExchangeResult result, ClientResponse response, String uriTemplate, Duration timeout) {, +			this.result = new UndecodedExchangeResult(result, response, uriTemplate, timeout);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultWebTestClient.java, +			return (S) new DefaultRequestBodySpec(this.uriSpec.uri(uri), null);, +			return (S) new DefaultRequestBodySpec(this.uriSpec.uri(uriTemplate, uriVariables), uriTemplate);, +			return (S) new DefaultRequestBodySpec(this.uriSpec.uri(uriTemplate, uriVariables), uriTemplate);, +			return (S) new DefaultRequestBodySpec(this.uriSpec.uri(uriBuilder), null);, +		private final String uriTemplate;, +, +		DefaultRequestBodySpec(WebClient.RequestBodySpec spec, String uriTemplate) {, +			this.uriTemplate = uriTemplate;, +			return new DefaultResponseSpec(exchangeResult, clientResponse, this.uriTemplate, getTimeout());, +		UndecodedExchangeResult(ExchangeResult result, ClientResponse response,, +				String uriTemplate, Duration timeout) {, +, +			super(result, uriTemplate);, +		DefaultResponseSpec(ExchangeResult result, ClientResponse response, String uriTemplate, Duration timeout) {, +			this.result = new UndecodedExchangeResult(result, response, uriTemplate, timeout);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/ExchangeResult.java, +	private final String uriTemplate;, +, +	 * Constructor to use after the server response is first received in the, +	 * {@link WiretapConnector} and the {@code ClientHttpResponse} created., +	ExchangeResult(WiretapClientHttpRequest request, WiretapClientHttpResponse response) {, +		this.uriTemplate = null;, +	 * Constructor to copy the from the yet undecoded ExchangeResult with extra, +	 * information to expose such as the original URI template used, if any., +	ExchangeResult(ExchangeResult other, String uriTemplate) {, +		this.uriTemplate = uriTemplate;, +	}, +, +	/**, +	 * Copy constructor to use after body is decoded and/or consumed., +	 */, +	ExchangeResult(ExchangeResult other) {, +		this.request = other.request;, +		this.response = other.response;, +		this.uriTemplate = other.uriTemplate;, +	 * Return the original URI template used to prepare the request, if any., +	 */, +	public String getUriTemplate() {, +		return this.uriTemplate;, +	}, +, +	/**]