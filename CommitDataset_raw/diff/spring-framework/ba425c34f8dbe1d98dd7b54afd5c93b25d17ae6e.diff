[+++ b/org.springframework.context.support/src/test/java/org/springframework/cache/ehcache/EhCacheSupportTests.java, + * Copyright 2002-2009 the original author or authors., +import net.sf.ehcache.config.CacheConfiguration;, +			CacheManager cm = cacheManagerFb.getObject();, +			CacheManager cm = cacheManagerFb.getObject();, +			assertFalse("myCache1 is not eternal", myCache1.getCacheConfiguration().isEternal());, +			assertTrue("myCache1.maxElements == 300", myCache1.getCacheConfiguration().getMaxElementsInMemory() == 300);, +				cacheFb.setCacheManager(cacheManagerFb.getObject());, +			CacheConfiguration config = cache.getCacheConfiguration();, +				assertEquals("myCache1.maxElements", 300, config.getMaxElementsInMemory());, +				assertEquals("myCache1.maxElements", 10000, config.getMaxElementsInMemory());, +				cacheFb.setCacheManager(cacheManagerFb.getObject());, +			config = cache.getCacheConfiguration();, +			assertTrue("default maxElements is correct", config.getMaxElementsInMemory() == 10000);, +			assertTrue("default overflowToDisk is correct", config.isOverflowToDisk());, +			assertFalse("default eternal is correct", config.isEternal());, +			assertTrue("default timeToLive is correct", config.getTimeToLiveSeconds() == 120);, +			assertTrue("default timeToIdle is correct", config.getTimeToIdleSeconds() == 120);, +			assertTrue("default diskPersistent is correct", !config.isDiskPersistent());, +			assertTrue("default diskExpiryThreadIntervalSeconds is correct", config.getDiskExpiryThreadIntervalSeconds() == 120);, +				cacheFb.setCacheManager(cacheManagerFb.getObject());, +			config = cache.getCacheConfiguration();, +			assertTrue("overridden maxElements is correct", config.getMaxElementsInMemory() == 5);, +			assertFalse("overridden overflowToDisk is correct", config.isOverflowToDisk());, +			assertTrue("overridden eternal is correct", config.isEternal());, +			assertTrue("default timeToLive is correct", config.getTimeToLiveSeconds() == 8);, +			assertTrue("default timeToIdle is correct", config.getTimeToIdleSeconds() == 7);, +			assertTrue("overridden diskPersistent is correct", config.isDiskPersistent());, +			assertTrue("overridden diskExpiryThreadIntervalSeconds is correct", config.getDiskExpiryThreadIntervalSeconds() == 10);, +			CacheManager cm = cacheManagerFb.getObject();, +			CacheManager cm = cacheManagerFb.getObject();, +			CacheManager cm = cacheManagerFb.getObject();]