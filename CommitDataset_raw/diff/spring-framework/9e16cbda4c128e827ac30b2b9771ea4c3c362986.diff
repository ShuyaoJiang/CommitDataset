[+++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpRequest.java, + * Copyright 2002-2016 the original author or authors., +			String query = this.servletRequest.getQueryString();, +			if (StringUtils.hasText(query)) {, +				url.append('?').append(query);, +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpRequest.java, + * Copyright 2002-2016 the original author or authors., +			String query = this.servletRequest.getQueryString();, +			if (StringUtils.hasText(query)) {, +				url.append('?').append(query);, +++ b/spring-web/src/test/java/org/springframework/http/server/ServletServerHttpRequestTests.java, + * Copyright 2002-2016 the original author or authors., +		URI uri = new URI("http://example.com/path?query");, +		mockRequest.setServerName(uri.getHost());, +		mockRequest.setServerPort(uri.getPort());, +		mockRequest.setRequestURI(uri.getPath());, +		mockRequest.setQueryString(uri.getQuery());, +		assertEquals("Invalid uri", uri, request.getURI());, +	}, +, +	// SPR-13876, +, +	@Test, +	public void getUriWithEncoding() throws Exception {, +        URI uri = new URI("https://example.com/%E4%B8%AD%E6%96%87" +, +				"?redirect=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework");, +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpRequest.java, + * Copyright 2002-2016 the original author or authors., +			String query = this.servletRequest.getQueryString();, +			if (StringUtils.hasText(query)) {, +				url.append('?').append(query);, +++ b/spring-web/src/test/java/org/springframework/http/server/ServletServerHttpRequestTests.java, + * Copyright 2002-2016 the original author or authors., +		URI uri = new URI("http://example.com/path?query");, +		mockRequest.setServerName(uri.getHost());, +		mockRequest.setServerPort(uri.getPort());, +		mockRequest.setRequestURI(uri.getPath());, +		mockRequest.setQueryString(uri.getQuery());, +		assertEquals("Invalid uri", uri, request.getURI());, +	}, +, +	// SPR-13876, +, +	@Test, +	public void getUriWithEncoding() throws Exception {, +        URI uri = new URI("https://example.com/%E4%B8%AD%E6%96%87" +, +				"?redirect=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework");, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessorMockTests.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpRequest.java, + * Copyright 2002-2016 the original author or authors., +			String query = this.servletRequest.getQueryString();, +			if (StringUtils.hasText(query)) {, +				url.append('?').append(query);, +++ b/spring-web/src/test/java/org/springframework/http/server/ServletServerHttpRequestTests.java, + * Copyright 2002-2016 the original author or authors., +		URI uri = new URI("http://example.com/path?query");, +		mockRequest.setServerName(uri.getHost());, +		mockRequest.setServerPort(uri.getPort());, +		mockRequest.setRequestURI(uri.getPath());, +		mockRequest.setQueryString(uri.getQuery());, +		assertEquals("Invalid uri", uri, request.getURI());, +	}, +, +	// SPR-13876, +, +	@Test, +	public void getUriWithEncoding() throws Exception {, +        URI uri = new URI("https://example.com/%E4%B8%AD%E6%96%87" +, +				"?redirect=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework");, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessorMockTests.java, + * Copyright 2002-2016 the original author or authors., +++ b/spring-websocket/src/test/java/org/springframework/web/socket/sockjs/transport/handler/HttpSendingTransportHandlerTests.java, + * Copyright 2002-2016 the original author or authors.]