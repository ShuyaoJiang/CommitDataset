[+++ b/spring-web/src/test/java/org/springframework/web/context/request/ServletWebRequestHttpMethodsTests.java, +	@Test // SPR-14559, +	public void checkNotModifiedInvalidIfNoneMatchHeader() {, +		String eTag = "\"etagvalue\"";, +		servletRequest.addHeader("If-None-Match", "missingquotes");, +		assertFalse(request.checkNotModified(eTag));, +		assertEquals(200, servletResponse.getStatus());, +		assertEquals(eTag, servletResponse.getHeader("ETag"));, +	}, +, +++ b/spring-web/src/test/java/org/springframework/web/context/request/ServletWebRequestHttpMethodsTests.java, +	@Test // SPR-14559, +	public void checkNotModifiedInvalidIfNoneMatchHeader() {, +		String eTag = "\"etagvalue\"";, +		servletRequest.addHeader("If-None-Match", "missingquotes");, +		assertFalse(request.checkNotModified(eTag));, +		assertEquals(200, servletResponse.getStatus());, +		assertEquals(eTag, servletResponse.getHeader("ETag"));, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.java, +		boolean notModified = false;, +		try {, +			List<String> ifNoneMatch = inputMessage.getHeaders().getIfNoneMatch();, +		}, +		catch (IllegalArgumentException exc) {, +			// invalid conditional request, do not process, +		}, +++ b/spring-web/src/test/java/org/springframework/web/context/request/ServletWebRequestHttpMethodsTests.java, +	@Test // SPR-14559, +	public void checkNotModifiedInvalidIfNoneMatchHeader() {, +		String eTag = "\"etagvalue\"";, +		servletRequest.addHeader("If-None-Match", "missingquotes");, +		assertFalse(request.checkNotModified(eTag));, +		assertEquals(200, servletResponse.getStatus());, +		assertEquals(eTag, servletResponse.getHeader("ETag"));, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.java, +		boolean notModified = false;, +		try {, +			List<String> ifNoneMatch = inputMessage.getHeaders().getIfNoneMatch();, +		}, +		catch (IllegalArgumentException exc) {, +			// invalid conditional request, do not process, +		}, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessorMockTests.java, +	@Test // SPR-14559, +	public void handleReturnValueEtagInvalidIfNoneMatch() throws Exception {, +		String etagValue = "\"deadb33f8badf00d\"";, +		servletRequest.addHeader(HttpHeaders.IF_NONE_MATCH, "unquoted");, +		HttpHeaders responseHeaders = new HttpHeaders();, +		responseHeaders.set(HttpHeaders.ETAG, etagValue);, +		ResponseEntity<String> returnValue = new ResponseEntity<>("body", responseHeaders, HttpStatus.OK);, +, +		initStringMessageConversion(MediaType.TEXT_PLAIN);, +		processor.handleReturnValue(returnValue, returnTypeResponseEntity, mavContainer, webRequest);, +, +		assertTrue(mavContainer.isRequestHandled());, +		assertEquals(HttpStatus.OK.value(), servletResponse.getStatus());, +	}, +]