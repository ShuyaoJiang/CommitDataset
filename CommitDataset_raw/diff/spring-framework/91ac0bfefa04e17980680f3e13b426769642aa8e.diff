[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeansDtdResolver.java, + * Copyright 2002-2016 the original author or authors., + * <p>Fetches "spring-beans.dtd" from the class path resource, + * "/org/springframework/beans/factory/xml/spring-beans.dtd",, +				String dtdFile = DTD_NAME + DTD_EXTENSION;, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeansDtdResolver.java, + * Copyright 2002-2016 the original author or authors., + * <p>Fetches "spring-beans.dtd" from the class path resource, + * "/org/springframework/beans/factory/xml/spring-beans.dtd",, +				String dtdFile = DTD_NAME + DTD_EXTENSION;, +++ b/spring-beans/src/main/resources/org/springframework/beans/factory/xml/spring-beans.dtd, +<!--, +	Spring XML Beans DTD, version 2.0, +	Authors: Rod Johnson, Juergen Hoeller, Alef Arendsen, Colin Sampaleanu, Rob Harrop, +, +	This defines a simple and consistent way of creating a namespace, +	of JavaBeans objects, managed by a Spring BeanFactory, read by, +	XmlBeanDefinitionReader (with DefaultBeanDefinitionDocumentReader)., +, +	This document type is used by most Spring functionality, including, +	web application contexts, which are based on bean factories., +, +	Each "bean" element in this document defines a JavaBean., +	Typically the bean class is specified, along with JavaBean properties, +	and/or constructor arguments., +, +	A bean instance can be a "singleton" (shared instance) or a "prototype", +	(independent instance). Further scopes can be provided by extended, +	bean factories, for example in a web environment., +, +	References among beans are supported, that is, setting a JavaBean property, +	or a constructor argument to refer to another bean in the same factory, +	(or an ancestor factory)., +, +	As alternative to bean references, "inner bean definitions" can be used., +	Singleton flags of such inner bean definitions are effectively ignored:, +	Inner beans are typically anonymous prototypes., +, +	There is also support for lists, sets, maps, and java.util.Properties, +	as bean property types or constructor argument types., +, +	For simple purposes, this DTD is sufficient. As of Spring 2.0,, +	XSD-based bean definitions are supported as more powerful alternative., +, +	XML documents that conform to this DTD should declare the following doctype:, +, +	<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN", +			"http://www.springframework.org/dtd/spring-beans-2.0.dtd">, +-->, +, +, +<!--, +	The document root. A document can contain bean definitions only,, +	imports only, or a mixture of both (typically with imports first)., +-->, +<!ELEMENT beans (, +	description?,, +	(import | alias | bean)*, +)>, +, +<!--, +	Default values for all bean definitions. Can be overridden at, +	the "bean" level. See those attribute definitions for details., +-->, +<!ATTLIST beans default-lazy-init (true | false) "false">, +<!ATTLIST beans default-merge (true | false) "false">, +<!ATTLIST beans default-autowire (no | byName | byType | constructor | autodetect) "no">, +<!ATTLIST beans default-init-method CDATA #IMPLIED>, +<!ATTLIST beans default-destroy-method CDATA #IMPLIED>, +, +<!--, +	Element containing informative text describing the purpose of the enclosing, +	element. Always optional., +	Used primarily for user documentation of XML bean definition documents., +-->, +<!ELEMENT description (#PCDATA)>, +, +, +<!--, +	Specifies an XML bean definition resource to import., +-->, +<!ELEMENT import EMPTY>, +, +<!--, +	The relative resource location of the XML bean definition file to import,, +	for example "myImport.xml" or "includes/myImport.xml" or "../myImport.xml"., +-->, +<!ATTLIST import resource CDATA #REQUIRED>, +, +, +<!--, +	Defines an alias for a bean, which can reside in a different definition file., +-->, +<!ELEMENT alias EMPTY>, +, +<!--, +	The name of the bean to define an alias for., +-->, +<!ATTLIST alias name CDATA #REQUIRED>, +]