[+++ b/org.springframework.context/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/org.antlr/com.springsource.antlr/2.7.6/com.springsource.antlr-2.7.6.jar" sourcepath="/IVY_CACHE/org.antlr/com.springsource.antlr/2.7.6/com.springsource.antlr-sources-2.7.6.jar"/>, +++ b/org.springframework.context/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/org.antlr/com.springsource.antlr/2.7.6/com.springsource.antlr-2.7.6.jar" sourcepath="/IVY_CACHE/org.antlr/com.springsource.antlr/2.7.6/com.springsource.antlr-sources-2.7.6.jar"/>, +++ b/org.springframework.context/.classpath.swp, +++ b/org.springframework.context/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/org.antlr/com.springsource.antlr/2.7.6/com.springsource.antlr-2.7.6.jar" sourcepath="/IVY_CACHE/org.antlr/com.springsource.antlr/2.7.6/com.springsource.antlr-sources-2.7.6.jar"/>, +++ b/org.springframework.context/.classpath.swp, +++ b/org.springframework.context/.ivy.xml.swp, +++ b/org.springframework.context/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/org.antlr/com.springsource.antlr/2.7.6/com.springsource.antlr-2.7.6.jar" sourcepath="/IVY_CACHE/org.antlr/com.springsource.antlr/2.7.6/com.springsource.antlr-sources-2.7.6.jar"/>, +++ b/org.springframework.context/.classpath.swp, +++ b/org.springframework.context/.ivy.xml.swp, +++ b/org.springframework.context/ivy.xml, +		<dependency org="org.antlr" name="com.springsource.antlr" rev="2.7.6" conf="test->compile"/>, +++ b/org.springframework.context/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/org.antlr/com.springsource.antlr/2.7.6/com.springsource.antlr-2.7.6.jar" sourcepath="/IVY_CACHE/org.antlr/com.springsource.antlr/2.7.6/com.springsource.antlr-sources-2.7.6.jar"/>, +++ b/org.springframework.context/.classpath.swp, +++ b/org.springframework.context/.ivy.xml.swp, +++ b/org.springframework.context/ivy.xml, +		<dependency org="org.antlr" name="com.springsource.antlr" rev="2.7.6" conf="test->compile"/>, +++ b/org.springframework.context/src/test/java/org/springframework/aop/framework/CountingBeforeAdvice.java, +/*, + * Copyright 2002-2005 the original author or authors., + * , + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + * , + *      http://www.apache.org/licenses/LICENSE-2.0, + * , + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.aop.framework;, +, +import java.lang.reflect.Method;, +, +import org.springframework.aop.MethodBeforeAdvice;, +, +/**, + * Simple before advice example that we can use for counting checks., + *, + * @author Rod Johnson, + */, +public class CountingBeforeAdvice extends MethodCounter implements MethodBeforeAdvice {, +, +	public void before(Method m, Object[] args, Object target) throws Throwable {, +		count(m);, +	}, +, +}, +++ b/org.springframework.context/.classpath, +	<classpathentry kind="var" path="IVY_CACHE/org.antlr/com.springsource.antlr/2.7.6/com.springsource.antlr-2.7.6.jar" sourcepath="/IVY_CACHE/org.antlr/com.springsource.antlr/2.7.6/com.springsource.antlr-sources-2.7.6.jar"/>, +++ b/org.springframework.context/.classpath.swp, +++ b/org.springframework.context/.ivy.xml.swp, +++ b/org.springframework.context/ivy.xml, +		<dependency org="org.antlr" name="com.springsource.antlr" rev="2.7.6" conf="test->compile"/>, +++ b/org.springframework.context/src/test/java/org/springframework/aop/framework/CountingBeforeAdvice.java, +/*, + * Copyright 2002-2005 the original author or authors., + * , + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + * , + *      http://www.apache.org/licenses/LICENSE-2.0, + * , + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.aop.framework;, +, +import java.lang.reflect.Method;, +, +import org.springframework.aop.MethodBeforeAdvice;, +, +/**, + * Simple before advice example that we can use for counting checks., + *, + * @author Rod Johnson, + */, +public class CountingBeforeAdvice extends MethodCounter implements MethodBeforeAdvice {, +, +	public void before(Method m, Object[] args, Object target) throws Throwable {, +		count(m);, +	}, +, +}, +++ b/org.springframework.context/src/test/java/org/springframework/aop/framework/MethodCounter.java, +/*, + * Copyright 2002-2007 the original author or authors.]