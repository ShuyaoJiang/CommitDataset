[+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +import java.util.StringJoiner;, +			StringJoiner joiner = new StringJoiner("->", "[", "]");, +			for (ConfigurationClass configurationClass : this) {, +				joiner.add(configurationClass.getSimpleName());, +			return joiner.toString();, +		public ConfigurationClass asConfigClass(ConfigurationClass importedBy) {, +		public Set<SourceClass> getAnnotations() {, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +import java.util.StringJoiner;, +			StringJoiner joiner = new StringJoiner("->", "[", "]");, +			for (ConfigurationClass configurationClass : this) {, +				joiner.add(configurationClass.getSimpleName());, +			return joiner.toString();, +		public ConfigurationClass asConfigClass(ConfigurationClass importedBy) {, +		public Set<SourceClass> getAnnotations() {, +++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(", ", "[", "]");, +		for (Class<?> clazz : classes) {, +			sj.add(clazz.getName());, +		return sj.toString();, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +import java.util.StringJoiner;, +			StringJoiner joiner = new StringJoiner("->", "[", "]");, +			for (ConfigurationClass configurationClass : this) {, +				joiner.add(configurationClass.getSimpleName());, +			return joiner.toString();, +		public ConfigurationClass asConfigClass(ConfigurationClass importedBy) {, +		public Set<SourceClass> getAnnotations() {, +++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(", ", "[", "]");, +		for (Class<?> clazz : classes) {, +			sj.add(clazz.getName());, +		return sj.toString();, +++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, +import java.util.StringJoiner;, +		StringJoiner joiner = new StringJoiner(", ");, +		for (String val : headerValues) {, +				joiner.add(val);, +		return joiner.toString();]