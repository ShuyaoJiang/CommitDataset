[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java, + * Copyright 2002-2014 the original author or authors., +		int port = request.getServerPort();, +		String hostHeader = request.getHeader("X-Forwarded-Host");, +		if (StringUtils.hasText(hostHeader)) {, +			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader);, +		String portHeader = request.getHeader("X-Forwarded-Port");, +		if (StringUtils.hasText(portHeader)) {, +			port = Integer.parseInt(portHeader);, +		}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java, + * Copyright 2002-2014 the original author or authors., +		int port = request.getServerPort();, +		String hostHeader = request.getHeader("X-Forwarded-Host");, +		if (StringUtils.hasText(hostHeader)) {, +			String[] hosts = StringUtils.commaDelimitedListToStringArray(hostHeader);, +		String portHeader = request.getHeader("X-Forwarded-Port");, +		if (StringUtils.hasText(portHeader)) {, +			port = Integer.parseInt(portHeader);, +		}, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/support/ServletUriComponentsBuilderTests.java, + * Copyright 2002-2014 the original author or authors., +import static org.junit.Assert.assertEquals;, + * Unit tests for, + * {@link org.springframework.web.servlet.support.ServletUriComponentsBuilder}., + *, +	public void fromRequestWithForwardedHost() {, +	public void fromRequestWithForwardedHostIncludingPort() {, +	// SPR-11855, +, +	@Test, +	public void fromRequestWithForwardedHostAndPort() {, +		this.request.addHeader("X-Forwarded-Host", "foobarhost");, +		this.request.addHeader("X-Forwarded-Port", "9090");, +		this.request.setServerPort(8080);, +		UriComponents uriComponents = ServletUriComponentsBuilder.fromRequest(this.request).build();, +, +		assertEquals("foobarhost", uriComponents.getHost());, +		assertEquals(9090, uriComponents.getPort());, +	}, +]