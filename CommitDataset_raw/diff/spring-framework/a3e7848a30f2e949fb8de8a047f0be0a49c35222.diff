[+++ b/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, + * Copyright 2002-2015 the original author or authors., +	@SuppressWarnings({ "unchecked", "rawtypes" }), +	@SuppressWarnings({ "unchecked", "rawtypes" }), +++ b/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, + * Copyright 2002-2015 the original author or authors., +	@SuppressWarnings({ "unchecked", "rawtypes" }), +	@SuppressWarnings({ "unchecked", "rawtypes" }), +++ b/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java, +++ b/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, + * Copyright 2002-2015 the original author or authors., +	@SuppressWarnings({ "unchecked", "rawtypes" }), +	@SuppressWarnings({ "unchecked", "rawtypes" }), +++ b/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java, +++ b/spring-core/src/test/java/org/springframework/core/BridgeMethodResolverTests.java, + * Copyright 2002-2015 the original author or authors., +@SuppressWarnings("rawtypes"), +++ b/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, + * Copyright 2002-2015 the original author or authors., +	@SuppressWarnings({ "unchecked", "rawtypes" }), +	@SuppressWarnings({ "unchecked", "rawtypes" }), +++ b/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java, +++ b/spring-core/src/test/java/org/springframework/core/BridgeMethodResolverTests.java, + * Copyright 2002-2015 the original author or authors., +@SuppressWarnings("rawtypes"), +++ b/spring-core/src/test/java/org/springframework/core/ExceptionDepthComparatorTests.java, + * Copyright 2002-2015 the original author or authors., +@SuppressWarnings("unchecked"), +++ b/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, + * Copyright 2002-2015 the original author or authors., +	@SuppressWarnings({ "unchecked", "rawtypes" }), +	@SuppressWarnings({ "unchecked", "rawtypes" }), +++ b/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java, +++ b/spring-core/src/test/java/org/springframework/core/BridgeMethodResolverTests.java, + * Copyright 2002-2015 the original author or authors., +@SuppressWarnings("rawtypes"), +++ b/spring-core/src/test/java/org/springframework/core/ExceptionDepthComparatorTests.java, + * Copyright 2002-2015 the original author or authors., +@SuppressWarnings("unchecked"), +++ b/spring-core/src/test/java/org/springframework/core/GenericTypeResolverTests.java, +@SuppressWarnings({ "unchecked", "rawtypes" }), +		assertThat(resolved, equalTo((Class<?>) Object[].class));, +		assertThat(resolved, equalTo((Class<?>) Object[].class));, +++ b/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, + * Copyright 2002-2015 the original author or authors., +	@SuppressWarnings({ "unchecked", "rawtypes" }), +	@SuppressWarnings({ "unchecked", "rawtypes" }), +++ b/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java, +++ b/spring-core/src/test/java/org/springframework/core/BridgeMethodResolverTests.java, + * Copyright 2002-2015 the original author or authors., +@SuppressWarnings("rawtypes"), +++ b/spring-core/src/test/java/org/springframework/core/ExceptionDepthComparatorTests.java, + * Copyright 2002-2015 the original author or authors., +@SuppressWarnings("unchecked"), +++ b/spring-core/src/test/java/org/springframework/core/GenericTypeResolverTests.java, +@SuppressWarnings({ "unchecked", "rawtypes" }), +		assertThat(resolved, equalTo((Class<?>) Object[].class));, +		assertThat(resolved, equalTo((Class<?>) Object[].class));, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/CollectionToCollectionConverterTests.java, + * Copyright 2002-2015 the original author or authors., +	public List<?> list = Collections.emptyList();, +++ b/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, + * Copyright 2002-2015 the original author or authors., +	@SuppressWarnings({ "unchecked", "rawtypes" }), +	@SuppressWarnings({ "unchecked", "rawtypes" }), +++ b/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java, +++ b/spring-core/src/test/java/org/springframework/core/BridgeMethodResolverTests.java, + * Copyright 2002-2015 the original author or authors., +@SuppressWarnings("rawtypes"), +++ b/spring-core/src/test/java/org/springframework/core/ExceptionDepthComparatorTests.java, + * Copyright 2002-2015 the original author or authors., +@SuppressWarnings("unchecked"), +++ b/spring-core/src/test/java/org/springframework/core/GenericTypeResolverTests.java, +@SuppressWarnings({ "unchecked", "rawtypes" }), +		assertThat(resolved, equalTo((Class<?>) Object[].class));, +		assertThat(resolved, equalTo((Class<?>) Object[].class));, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/CollectionToCollectionConverterTests.java, + * Copyright 2002-2015 the original author or authors., +	public List<?> list = Collections.emptyList();, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/MapToMapConverterTests.java, + * Copyright 2002-2015 the original author or authors., +	@SuppressWarnings("rawtypes"), +++ b/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java, + * Copyright 2002-2015 the original author or authors., +	@SuppressWarnings({ "unchecked", "rawtypes" }), +	@SuppressWarnings({ "unchecked", "rawtypes" }), +++ b/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java, +++ b/spring-core/src/test/java/org/springframework/core/BridgeMethodResolverTests.java, + * Copyright 2002-2015 the original author or authors., +@SuppressWarnings("rawtypes"), +++ b/spring-core/src/test/java/org/springframework/core/ExceptionDepthComparatorTests.java, + * Copyright 2002-2015 the original author or authors., +@SuppressWarnings("unchecked"), +++ b/spring-core/src/test/java/org/springframework/core/GenericTypeResolverTests.java, +@SuppressWarnings({ "unchecked", "rawtypes" }), +		assertThat(resolved, equalTo((Class<?>) Object[].class));, +		assertThat(resolved, equalTo((Class<?>) Object[].class));, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/CollectionToCollectionConverterTests.java, + * Copyright 2002-2015 the original author or authors., +	public List<?> list = Collections.emptyList();]