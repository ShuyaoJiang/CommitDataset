[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +			catch (Throwable ex) {, +			catch (Throwable ex) {, +		catch (Throwable ex) {, +					"Annotation type must be a repeatable annotation: failed to resolve container type for " +, +					annotationType.getName());, +		catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +			catch (Throwable ex) {, +			catch (Throwable ex) {, +		catch (Throwable ex) {, +					"Annotation type must be a repeatable annotation: failed to resolve container type for " +, +					annotationType.getName());, +		catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +			catch (Throwable ex) {, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +	 * @param annotation the annotation to check, +		return (annotation != null && isInJavaLangAnnotationPackage(annotation.annotationType().getName()));, +		return (annotationType != null && annotationType.startsWith("java.lang.annotation"));, +			catch (Throwable ex) {, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +	static void handleIntrospectionFailure(AnnotatedElement element, Throwable ex) {, +				catch (Throwable ex) {, +			catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +			catch (Throwable ex) {, +			catch (Throwable ex) {, +		catch (Throwable ex) {, +					"Annotation type must be a repeatable annotation: failed to resolve container type for " +, +					annotationType.getName());, +		catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +			catch (Throwable ex) {, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +	 * @param annotation the annotation to check, +		return (annotation != null && isInJavaLangAnnotationPackage(annotation.annotationType().getName()));, +		return (annotationType != null && annotationType.startsWith("java.lang.annotation"));, +			catch (Throwable ex) {, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +		Assert.notNull(annotationType, "'annotationType' must not be null");, +	static void handleIntrospectionFailure(AnnotatedElement element, Throwable ex) {, +				catch (Throwable ex) {, +			catch (Throwable ex) {, +++ b/spring-core/src/test/java/org/springframework/core/annotation/ComposedRepeatableAnnotationsTests.java, +		exception.expectMessage(startsWith("Annotation type must be a repeatable annotation"));]