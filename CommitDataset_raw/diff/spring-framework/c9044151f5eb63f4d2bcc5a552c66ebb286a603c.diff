[+++ b/src/asciidoc/index.adoc, +		<beans profile="default">, +			<jdbc:embedded-database id="dataSource">, +				<jdbc:script, +					location="classpath:com/bank/config/sql/schema.sql"/>, +			</jdbc:embedded-database>, +		</beans>, +, +`dataSource` is defined three times, that is the __production__ profile, the, +__dev__ profile and the __default__ profile., +It is sometimes useful to assign beans to a `default` profile. Beans within the default profile, +are only included when no other profile is specifically activated. This can be used to define, +_fallback_ beans to be used in the application's default state. For example, you may, +explicitly provide a data source for `dev` and `production` profiles, but define an in-memory, +data source as a default when neither of these are specified., +, +	@Profile("default"), +	public class DefaultDataConfig {, +, +		@Bean, +		public DataSource dataSource() {, +			return new EmbeddedDatabaseBuilder(), +				.setType(EmbeddedDatabaseType.HSQL), +				.addScript("classpath:com/bank/config/sql/schema.sql"), +				.build();, +		}, +	}, +----, +, +[source,java,indent=0], +[subs="verbatim,quotes"], +----, +	@Configuration, +			JndiDataConfig.class,, +			DefaultDataConfig.class}), +In this variation, we have split the XML configuration into four independent, +* `DefaultDataConfig`: defines a `dataSource` for a default embedded database in case, +  no profile is active, +with `@ActiveProfiles("dev")`, but this time we specify all four configuration classes, +			JndiDataConfig.class,, +			DefaultDataConfig.class})]