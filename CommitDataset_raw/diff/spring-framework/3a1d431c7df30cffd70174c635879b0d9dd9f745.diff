[+++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +, +, +, +, +, +, +, +, +, +, +		if (index == -1) {, +			// no occurrence -> can return input as-is, +			return inString;, +		}, +, +		StringBuilder sb = new StringBuilder(inString.length());, +		int pos = 0;  // our position in the old string, +		// append any characters to the right of a match, +, +		StringBuilder sb = new StringBuilder(inString.length());, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +, +, +, +, +, +, +, +, +, +, +		if (index == -1) {, +			// no occurrence -> can return input as-is, +			return inString;, +		}, +, +		StringBuilder sb = new StringBuilder(inString.length());, +		int pos = 0;  // our position in the old string, +		// append any characters to the right of a match, +, +		StringBuilder sb = new StringBuilder(inString.length());, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +, +++ b/spring-core/src/test/java/org/springframework/util/StringUtilsTests.java, + * Copyright 2002-2017 the original author or authors., +		assertSame("Replace non-matched is returned as-is", inString, s);, +		assertSame("Replace non-matched is returned as-is", inString, s);, +		assertSame("Replace non-matched is returned as-is", inString, s);]