[+++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/ClassArrayEditor.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(",");, +		for (Class<?> klass : classes) {, +			sj.add(ClassUtils.getQualifiedName(klass));, +		return sj.toString();, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/ClassArrayEditor.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(",");, +		for (Class<?> klass : classes) {, +			sj.add(ClassUtils.getQualifiedName(klass));, +		return sj.toString();, +++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(delim);, +		for (Object o : arr) {, +			sj.add(String.valueOf(o));, +		return sj.toString();, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/ClassArrayEditor.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(",");, +		for (Class<?> klass : classes) {, +			sj.add(ClassUtils.getQualifiedName(klass));, +		return sj.toString();, +++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(delim);, +		for (Object o : arr) {, +			sj.add(String.valueOf(o));, +		return sj.toString();, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/CompoundExpression.java, +import java.util.StringJoiner;, +, +		StringJoiner sj = new StringJoiner(".");, +			sj.add(getChild(i).toStringAST());, +		return sj.toString();, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/ClassArrayEditor.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(",");, +		for (Class<?> klass : classes) {, +			sj.add(ClassUtils.getQualifiedName(klass));, +		return sj.toString();, +++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(delim);, +		for (Object o : arr) {, +			sj.add(String.valueOf(o));, +		return sj.toString();, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/CompoundExpression.java, +import java.util.StringJoiner;, +, +		StringJoiner sj = new StringJoiner(".");, +			sj.add(getChild(i).toStringAST());, +		return sj.toString();, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/FormatHelper.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(",", "(", ")");, +		for (TypeDescriptor typeDescriptor : argumentTypes) {, +				sj.add(formatClassNameForMessage(typeDescriptor.getType()));, +				sj.add(formatClassNameForMessage(null));, +		return name + sj.toString();, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/ClassArrayEditor.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(",");, +		for (Class<?> klass : classes) {, +			sj.add(ClassUtils.getQualifiedName(klass));, +		return sj.toString();, +++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(delim);, +		for (Object o : arr) {, +			sj.add(String.valueOf(o));, +		return sj.toString();, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/CompoundExpression.java, +import java.util.StringJoiner;, +, +		StringJoiner sj = new StringJoiner(".");, +			sj.add(getChild(i).toStringAST());, +		return sj.toString();, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/FormatHelper.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(",", "(", ")");, +		for (TypeDescriptor typeDescriptor : argumentTypes) {, +				sj.add(formatClassNameForMessage(typeDescriptor.getType()));, +				sj.add(formatClassNameForMessage(null));, +		return name + sj.toString();, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(",", "(", ")");, +			sj.add(getChild(i).toStringAST());, +		return '#' + this.name + sj.toString();, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/ClassArrayEditor.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(",");, +		for (Class<?> klass : classes) {, +			sj.add(ClassUtils.getQualifiedName(klass));, +		return sj.toString();, +++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +import java.util.StringJoiner;, +		StringJoiner sj = new StringJoiner(delim);]