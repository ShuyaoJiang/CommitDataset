[+++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/ArgumentBindingTests.java, + * Copyright 2002-2016 the original author or authors., +public class ArgumentBindingTests {, +		ITestBean proxiedTestBean = proxyFactory.getProxy();, +		proxiedTestBean.setName("Supercalifragalisticexpialidocious");, +		ITransactionalBean proxiedTestBean = proxyFactory.getProxy();, +		proxiedTestBean.doInTransaction();, +, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/ArgumentBindingTests.java, + * Copyright 2002-2016 the original author or authors., +public class ArgumentBindingTests {, +		ITestBean proxiedTestBean = proxyFactory.getProxy();, +		proxiedTestBean.setName("Supercalifragalisticexpialidocious");, +		ITransactionalBean proxiedTestBean = proxyFactory.getProxy();, +		proxiedTestBean.doInTransaction();, +, +++ b/spring-beans/src/test/resources/org/springframework/beans/factory/xml/import.xml, +<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/ArgumentBindingTests.java, + * Copyright 2002-2016 the original author or authors., +public class ArgumentBindingTests {, +		ITestBean proxiedTestBean = proxyFactory.getProxy();, +		proxiedTestBean.setName("Supercalifragalisticexpialidocious");, +		ITransactionalBean proxiedTestBean = proxyFactory.getProxy();, +		proxiedTestBean.doInTransaction();, +, +++ b/spring-beans/src/test/resources/org/springframework/beans/factory/xml/import.xml, +<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">, +++ b/spring-context/src/main/java/org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.java, +	public void setManagedMethods(String... methodNames) {, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/ArgumentBindingTests.java, + * Copyright 2002-2016 the original author or authors., +public class ArgumentBindingTests {, +		ITestBean proxiedTestBean = proxyFactory.getProxy();, +		proxiedTestBean.setName("Supercalifragalisticexpialidocious");, +		ITransactionalBean proxiedTestBean = proxyFactory.getProxy();, +		proxiedTestBean.doInTransaction();, +, +++ b/spring-beans/src/test/resources/org/springframework/beans/factory/xml/import.xml, +<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">, +++ b/spring-context/src/main/java/org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.java, +	public void setManagedMethods(String... methodNames) {, +++ b/spring-context/src/test/java/org/springframework/aop/aspectj/autoproxy/AnnotationBindingTests.java, + * Copyright 2002-2016 the original author or authors., +public class AnnotationBindingTests {, +, +, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/ArgumentBindingTests.java, + * Copyright 2002-2016 the original author or authors., +public class ArgumentBindingTests {, +		ITestBean proxiedTestBean = proxyFactory.getProxy();, +		proxiedTestBean.setName("Supercalifragalisticexpialidocious");, +		ITransactionalBean proxiedTestBean = proxyFactory.getProxy();, +		proxiedTestBean.doInTransaction();, +, +++ b/spring-beans/src/test/resources/org/springframework/beans/factory/xml/import.xml, +<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">, +++ b/spring-context/src/main/java/org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.java, +	public void setManagedMethods(String... methodNames) {, +++ b/spring-context/src/test/java/org/springframework/aop/aspectj/autoproxy/AnnotationBindingTests.java, + * Copyright 2002-2016 the original author or authors., +public class AnnotationBindingTests {, +, +, +++ b/spring-context/src/test/java/org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBeanTests.java, + * Copyright 2002-2016 the original author or authors., +	public interface MyHome extends EJBLocalHome {, +	public interface MyBusinessMethods  {, +	public interface MyEjb extends EJBLocalObject, MyBusinessMethods {, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/ArgumentBindingTests.java, + * Copyright 2002-2016 the original author or authors., +public class ArgumentBindingTests {, +		ITestBean proxiedTestBean = proxyFactory.getProxy();, +		proxiedTestBean.setName("Supercalifragalisticexpialidocious");, +		ITransactionalBean proxiedTestBean = proxyFactory.getProxy();, +		proxiedTestBean.doInTransaction();, +, +++ b/spring-beans/src/test/resources/org/springframework/beans/factory/xml/import.xml, +<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">, +++ b/spring-context/src/main/java/org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.java, +	public void setManagedMethods(String... methodNames) {, +++ b/spring-context/src/test/java/org/springframework/aop/aspectj/autoproxy/AnnotationBindingTests.java, + * Copyright 2002-2016 the original author or authors., +public class AnnotationBindingTests {, +, +, +++ b/spring-context/src/test/java/org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBeanTests.java, + * Copyright 2002-2016 the original author or authors., +	public interface MyHome extends EJBLocalHome {, +	public interface MyBusinessMethods  {, +	public interface MyEjb extends EJBLocalObject, MyBusinessMethods {, +++ b/spring-context/src/test/java/org/springframework/ejb/access/SimpleRemoteStatelessSessionProxyFactoryBeanTests.java, + * Copyright 2002-2016 the original author or authors., +	protected interface MyHome extends EJBHome {, +	protected interface MyBusinessMethods  {, +	protected interface MyLocalBusinessMethods  {, +	protected interface MyEjb extends EJBObject, MyBusinessMethods {, +++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/ArgumentBindingTests.java, + * Copyright 2002-2016 the original author or authors., +public class ArgumentBindingTests {]