[+++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java, +	@Override, +	public <T> T getNativeRequest() {, +		throw new IllegalStateException("This is a mock. No running server, no native request.");, +	}, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java, +	@Override, +	public <T> T getNativeRequest() {, +		throw new IllegalStateException("This is a mock. No running server, no native request.");, +	}, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpResponse.java, +	@Override, +	public <T> T getNativeResponse() {, +		throw new IllegalStateException("This is a mock. No running server, no native response.");, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java, +	@Override, +	public <T> T getNativeRequest() {, +		throw new IllegalStateException("This is a mock. No running server, no native request.");, +	}, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpResponse.java, +	@Override, +	public <T> T getNativeResponse() {, +		throw new IllegalStateException("This is a mock. No running server, no native response.");, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpRequest.java, +class ReactorClientHttpRequest extends AbstractClientHttpRequest implements ZeroCopyHttpOutputMessage {, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java, +	@Override, +	public <T> T getNativeRequest() {, +		throw new IllegalStateException("This is a mock. No running server, no native request.");, +	}, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpResponse.java, +	@Override, +	public <T> T getNativeResponse() {, +		throw new IllegalStateException("This is a mock. No running server, no native response.");, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpRequest.java, +class ReactorClientHttpRequest extends AbstractClientHttpRequest implements ZeroCopyHttpOutputMessage {, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpResponse.java, +class ReactorClientHttpResponse implements ClientHttpResponse {, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java, +	@Override, +	public <T> T getNativeRequest() {, +		throw new IllegalStateException("This is a mock. No running server, no native request.");, +	}, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpResponse.java, +	@Override, +	public <T> T getNativeResponse() {, +		throw new IllegalStateException("This is a mock. No running server, no native response.");, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpRequest.java, +class ReactorClientHttpRequest extends AbstractClientHttpRequest implements ZeroCopyHttpOutputMessage {, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpResponse.java, +class ReactorClientHttpResponse implements ClientHttpResponse {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +	/**, +	 * Return the underlying server response., +	 * <p><strong>Note:</strong> This is exposed mainly for internal framework, +	 * use such as WebSocket upgrades in the spring-webflux module., +	 */, +	public abstract <T> T getNativeRequest();, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java, +	@Override, +	public <T> T getNativeRequest() {, +		throw new IllegalStateException("This is a mock. No running server, no native request.");, +	}, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpResponse.java, +	@Override, +	public <T> T getNativeResponse() {, +		throw new IllegalStateException("This is a mock. No running server, no native response.");, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpRequest.java, +class ReactorClientHttpRequest extends AbstractClientHttpRequest implements ZeroCopyHttpOutputMessage {, +++ b/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpResponse.java, +class ReactorClientHttpResponse implements ClientHttpResponse {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java, +	/**, +	 * Return the underlying server response., +	 * <p><strong>Note:</strong> This is exposed mainly for internal framework, +	 * use such as WebSocket upgrades in the spring-webflux module., +	 */, +	public abstract <T> T getNativeRequest();, +, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java, +	/**, +	 * Return the underlying server response., +	 * <p><strong>Note:</strong> This is exposed mainly for internal framework, +	 * use such as WebSocket upgrades in the spring-webflux module., +	 */, +	public abstract <T> T getNativeResponse();, +, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java]