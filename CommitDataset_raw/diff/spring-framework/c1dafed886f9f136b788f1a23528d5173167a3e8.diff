[+++ b/spring-core/src/main/java/org/springframework/util/AntPathMatcher.java, +		if (!StringUtils.hasText(pattern1)) {, +		if (!StringUtils.hasText(pattern2)) {, +		// /hotels/* + /booking -> /hotels/booking, +		// /hotels/* + booking -> /hotels/booking, +		if (pattern1.endsWith("/*")) {, +			return slashConcat(pattern1.substring(0, pattern1.length() - 2), pattern2);, +, +		// /hotels/** + /booking -> /hotels/**/booking, +		// /hotels/** + booking -> /hotels/**/booking, +		if (pattern1.endsWith("/**")) {, +			return slashConcat(pattern1, pattern2);, +		}, +, +		int starDotPos1 = pattern1.indexOf("*.");, +		if (pattern1ContainsUriVar || starDotPos1 == -1) {, +			// simply concatenate the two patterns, +			return slashConcat(pattern1, pattern2);, +		}, +		String extension1 = pattern1.substring(starDotPos1 + 1);, +		int dotPos2 = pattern2.indexOf('.');, +		String fileName2 = (dotPos2 == -1 ? pattern2 : pattern2.substring(0, dotPos2));, +		String extension2 = (dotPos2 == -1 ? "" : pattern2.substring(dotPos2));, +		String extension = extension1.startsWith("*") ? extension2 : extension1;, +		return fileName2 + extension;, +	}, +, +	private String slashConcat(String path1, String path2) {, +		if (path1.endsWith("/") || path2.startsWith("/")) {, +			return path1 + path2;, +		}, +		return path1 + "/" + path2;, +++ b/spring-core/src/main/java/org/springframework/util/AntPathMatcher.java, +		if (!StringUtils.hasText(pattern1)) {, +		if (!StringUtils.hasText(pattern2)) {, +		// /hotels/* + /booking -> /hotels/booking, +		// /hotels/* + booking -> /hotels/booking, +		if (pattern1.endsWith("/*")) {, +			return slashConcat(pattern1.substring(0, pattern1.length() - 2), pattern2);, +, +		// /hotels/** + /booking -> /hotels/**/booking, +		// /hotels/** + booking -> /hotels/**/booking, +		if (pattern1.endsWith("/**")) {, +			return slashConcat(pattern1, pattern2);, +		}, +, +		int starDotPos1 = pattern1.indexOf("*.");, +		if (pattern1ContainsUriVar || starDotPos1 == -1) {, +			// simply concatenate the two patterns, +			return slashConcat(pattern1, pattern2);, +		}, +		String extension1 = pattern1.substring(starDotPos1 + 1);, +		int dotPos2 = pattern2.indexOf('.');, +		String fileName2 = (dotPos2 == -1 ? pattern2 : pattern2.substring(0, dotPos2));, +		String extension2 = (dotPos2 == -1 ? "" : pattern2.substring(dotPos2));, +		String extension = extension1.startsWith("*") ? extension2 : extension1;, +		return fileName2 + extension;, +	}, +, +	private String slashConcat(String path1, String path2) {, +		if (path1.endsWith("/") || path2.startsWith("/")) {, +			return path1 + path2;, +		}, +		return path1 + "/" + path2;, +++ b/spring-core/src/test/java/org/springframework/util/AntPathMatcherTests.java, +		assertEquals("/hotels/booking", pathMatcher.combine("/hotels/", "booking"));, +		assertEquals("/1.0/foo/test", pathMatcher.combine("/1.0", "/foo/test")); // SPR-10554]