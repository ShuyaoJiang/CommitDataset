[+++ b/org.springframework.context/ivy.xml, +		<dependency org="org.jboss.cl" name="com.springsource.org.jboss.classloader" rev="2.0.5.GA" conf="provided->compile"/>, +		<dependency org="org.jboss.util" name="com.springsource.org.jboss.util" rev="2.2.13.GA" conf="provided->compile"/>, +++ b/org.springframework.context/ivy.xml, +		<dependency org="org.jboss.cl" name="com.springsource.org.jboss.classloader" rev="2.0.5.GA" conf="provided->compile"/>, +		<dependency org="org.jboss.util" name="com.springsource.org.jboss.util" rev="2.2.13.GA" conf="provided->compile"/>, +++ b/org.springframework.context/pom.xml, +		    <groupId>org.jboss.cl</groupId>, +		    <artifactId>com.springsource.org.jboss.classloader</artifactId>, +		    <version>2.0.5.GA</version>, +			<scope>provided</scope>, +		</dependency>, +		<dependency>, +		    <groupId>org.jboss.util</groupId>, +		    <artifactId>com.springsource.org.jboss.util</artifactId>, +		    <version>2.2.13.GA</version>, +			<scope>provided</scope>, +		</dependency>, +		<dependency>, +++ b/org.springframework.context/ivy.xml, +		<dependency org="org.jboss.cl" name="com.springsource.org.jboss.classloader" rev="2.0.5.GA" conf="provided->compile"/>, +		<dependency org="org.jboss.util" name="com.springsource.org.jboss.util" rev="2.2.13.GA" conf="provided->compile"/>, +++ b/org.springframework.context/pom.xml, +		    <groupId>org.jboss.cl</groupId>, +		    <artifactId>com.springsource.org.jboss.classloader</artifactId>, +		    <version>2.0.5.GA</version>, +			<scope>provided</scope>, +		</dependency>, +		<dependency>, +		    <groupId>org.jboss.util</groupId>, +		    <artifactId>com.springsource.org.jboss.util</artifactId>, +		    <version>2.2.13.GA</version>, +			<scope>provided</scope>, +		</dependency>, +		<dependency>, +++ b/org.springframework.context/src/main/java/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.java, +import org.springframework.instrument.classloading.jboss.JBoss5LoadTimeWeaver;, +			else if (classLoader.getClass().getName().startsWith("org.jboss")) {, +				return new JBoss5LoadTimeWeaver(classLoader);, +			}, +++ b/org.springframework.context/ivy.xml, +		<dependency org="org.jboss.cl" name="com.springsource.org.jboss.classloader" rev="2.0.5.GA" conf="provided->compile"/>, +		<dependency org="org.jboss.util" name="com.springsource.org.jboss.util" rev="2.2.13.GA" conf="provided->compile"/>, +++ b/org.springframework.context/pom.xml, +		    <groupId>org.jboss.cl</groupId>, +		    <artifactId>com.springsource.org.jboss.classloader</artifactId>, +		    <version>2.0.5.GA</version>, +			<scope>provided</scope>, +		</dependency>, +		<dependency>, +		    <groupId>org.jboss.util</groupId>, +		    <artifactId>com.springsource.org.jboss.util</artifactId>, +		    <version>2.2.13.GA</version>, +			<scope>provided</scope>, +		</dependency>, +		<dependency>, +++ b/org.springframework.context/src/main/java/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.java, +import org.springframework.instrument.classloading.jboss.JBoss5LoadTimeWeaver;, +			else if (classLoader.getClass().getName().startsWith("org.jboss")) {, +				return new JBoss5LoadTimeWeaver(classLoader);, +			}, +++ b/org.springframework.context/src/main/java/org/springframework/instrument/classloading/jboss/ClassFileTransformer2Translator.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.instrument.classloading.jboss;, +, +import java.security.ProtectionDomain;, +import java.lang.instrument.ClassFileTransformer;, +, +import org.jboss.util.loading.Translator;, +, +/**, + * ClassFileTransfomer to Translator bridge., + *, + * @author Ales Justin, + */, +public class ClassFileTransformer2Translator implements Translator {, +, +	private ClassFileTransformer transformer;, +, +	public ClassFileTransformer2Translator(ClassFileTransformer transformer) {, +		if (transformer == null) {, +			throw new IllegalArgumentException("Null transformer");, +		}, +, +		this.transformer = transformer;, +	}]