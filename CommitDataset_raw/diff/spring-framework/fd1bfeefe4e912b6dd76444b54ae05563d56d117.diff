[+++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/support/TransactionSynchronizationUtils.java, +import org.springframework.aop.scope.ScopedObject;, +import org.springframework.util.ClassUtils;, +	private static final boolean aopAvailable = ClassUtils.isPresent(, +			"org.springframework.aop.scope.ScopedObject", TransactionSynchronizationUtils.class.getClassLoader());, +, +		// unwrap infrastructure proxy, +		if (resourceRef instanceof InfrastructureProxy) {, +			resourceRef = ((InfrastructureProxy) resourceRef).getWrappedObject();, +		if (aopAvailable) {, +			// now unwrap scoped proxy, +			resourceRef = ScopedProxyUnwrapper.unwrapIfNecessary(resource);, +		}, +		return resourceRef;, +, +	/**, +	 * Inner class to avoid hard-coded dependency on AOP module., +	 */, +	private static class ScopedProxyUnwrapper {, +, +		public static Object unwrapIfNecessary(Object resource) {, +			if (resource instanceof ScopedObject) {, +				return ((ScopedObject) resource).getTargetObject();, +			}, +			else {, +				return resource;, +			}, +		}, +	}, +]