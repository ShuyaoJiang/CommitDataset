[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionFailedException.java, +import org.springframework.util.ObjectUtils;, +, +		super("Unable to convert value \"" + ObjectUtils.nullSafeToString(value) + "\" from type '" +, +				sourceType.getName() + "' to type '" + targetType.getName() + "'", cause);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionFailedException.java, +import org.springframework.util.ObjectUtils;, +, +		super("Unable to convert value \"" + ObjectUtils.nullSafeToString(value) + "\" from type '" +, +				sourceType.getName() + "' to type '" + targetType.getName() + "'", cause);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConverterNotFoundException.java, + * Copyright 2002-2010 the original author or authors., +		super("No converter found capable of converting from '" + sourceType.getName() +, +				"' to '" + targetType.getName() + "'");, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionFailedException.java, +import org.springframework.util.ObjectUtils;, +, +		super("Unable to convert value \"" + ObjectUtils.nullSafeToString(value) + "\" from type '" +, +				sourceType.getName() + "' to type '" + targetType.getName() + "'", cause);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConverterNotFoundException.java, + * Copyright 2002-2010 the original author or authors., +		super("No converter found capable of converting from '" + sourceType.getName() +, +				"' to '" + targetType.getName() + "'");, +++ b/org.springframework.core/src/test/java/org/springframework/core/convert/support/GenericConversionServiceTests.java, +import org.springframework.util.StringUtils;, +	public void testStringArrayToIntegerArray() {, +		GenericConversionService conversionService = ConversionServiceFactory.createDefaultConversionService();, +		conversionService.addConverter(new MyStringArrayToIntegerArrayConverter());, +		Integer[] converted = conversionService.convert(new String[] {"x1", "z3"}, Integer[].class);, +		assertEquals(2, converted.length);, +		assertEquals(1, converted[0].intValue());, +		assertEquals(3, converted[1].intValue());, +	}, +, +	@Test, +	public void testStringToIntegerArray() {, +		GenericConversionService conversionService = ConversionServiceFactory.createDefaultConversionService();, +		conversionService.addConverter(new MyStringToIntegerArrayConverter());, +		Integer[] converted = conversionService.convert("x1,z3", Integer[].class);, +		assertEquals(2, converted.length);, +		assertEquals(1, converted[0].intValue());, +		assertEquals(3, converted[1].intValue());, +	}, +, +	@Test, +	private static class MyStringArrayToIntegerArrayConverter implements Converter<String[], Integer[]>	{, +, +		public Integer[] convert(String[] source) {, +			Integer[] result = new Integer[source.length];, +			for (int i = 0; i < source.length; i++) {, +				result[i] = Integer.parseInt(source[i].substring(1));, +			}, +			return result;, +		}, +	}, +, +, +	private static class MyStringToIntegerArrayConverter implements Converter<String, Integer[]>	{, +, +		public Integer[] convert(String source) {, +			String[] srcArray = StringUtils.commaDelimitedListToStringArray(source);, +			Integer[] result = new Integer[srcArray.length];, +			for (int i = 0; i < srcArray.length; i++) {, +				result[i] = Integer.parseInt(srcArray[i].substring(1));, +			}, +			return result;, +		}, +	}, +, +]