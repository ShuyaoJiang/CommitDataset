[+++ b/build.gradle, +	compileJava.options*.compilerArgs = [, +		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",, +		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",, +		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",, +		"-Xlint:try", "-Xlint:fallthrough", "-Xlint:rawtypes", "-Xlint:deprecation",, +		"-Xlint:unchecked", "-Xlint:-options", "-Werror", +	compileTestJava.options*.compilerArgs = [, +		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",, +		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",, +		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",, +		"-Xlint:try", "-Xlint:-fallthrough", "-Xlint:-rawtypes", "-Xlint:-deprecation",, +		"-Xlint:-unchecked", "-Xlint:-options"], +, +++ b/build.gradle, +	compileJava.options*.compilerArgs = [, +		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",, +		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",, +		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",, +		"-Xlint:try", "-Xlint:fallthrough", "-Xlint:rawtypes", "-Xlint:deprecation",, +		"-Xlint:unchecked", "-Xlint:-options", "-Werror", +	compileTestJava.options*.compilerArgs = [, +		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",, +		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",, +		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",, +		"-Xlint:try", "-Xlint:-fallthrough", "-Xlint:-rawtypes", "-Xlint:-deprecation",, +		"-Xlint:-unchecked", "-Xlint:-options"], +, +++ b/spring-aop/src/main/java/org/springframework/aop/IntroductionAwareMethodMatcher.java, +	boolean matches(Method method, Class<?> targetClass, boolean hasIntroductions);, +++ b/build.gradle, +	compileJava.options*.compilerArgs = [, +		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",, +		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",, +		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",, +		"-Xlint:try", "-Xlint:fallthrough", "-Xlint:rawtypes", "-Xlint:deprecation",, +		"-Xlint:unchecked", "-Xlint:-options", "-Werror", +	compileTestJava.options*.compilerArgs = [, +		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",, +		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",, +		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",, +		"-Xlint:try", "-Xlint:-fallthrough", "-Xlint:-rawtypes", "-Xlint:-deprecation",, +		"-Xlint:-unchecked", "-Xlint:-options"], +, +++ b/spring-aop/src/main/java/org/springframework/aop/IntroductionAwareMethodMatcher.java, +	boolean matches(Method method, Class<?> targetClass, boolean hasIntroductions);, +++ b/spring-aop/src/main/java/org/springframework/aop/IntroductionInfo.java, +	Class<?>[] getInterfaces();, +++ b/build.gradle, +	compileJava.options*.compilerArgs = [, +		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",, +		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",, +		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",, +		"-Xlint:try", "-Xlint:fallthrough", "-Xlint:rawtypes", "-Xlint:deprecation",, +		"-Xlint:unchecked", "-Xlint:-options", "-Werror", +	compileTestJava.options*.compilerArgs = [, +		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",, +		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",, +		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",, +		"-Xlint:try", "-Xlint:-fallthrough", "-Xlint:-rawtypes", "-Xlint:-deprecation",, +		"-Xlint:-unchecked", "-Xlint:-options"], +, +++ b/spring-aop/src/main/java/org/springframework/aop/IntroductionAwareMethodMatcher.java, +	boolean matches(Method method, Class<?> targetClass, boolean hasIntroductions);, +++ b/spring-aop/src/main/java/org/springframework/aop/IntroductionInfo.java, +	Class<?>[] getInterfaces();, +++ b/spring-aop/src/main/java/org/springframework/aop/TrueClassFilter.java, +	public boolean matches(Class<?> clazz) {, +++ b/build.gradle, +	compileJava.options*.compilerArgs = [, +		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",, +		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",, +		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",, +		"-Xlint:try", "-Xlint:fallthrough", "-Xlint:rawtypes", "-Xlint:deprecation",, +		"-Xlint:unchecked", "-Xlint:-options", "-Werror", +	compileTestJava.options*.compilerArgs = [, +		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",, +		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",, +		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",, +		"-Xlint:try", "-Xlint:-fallthrough", "-Xlint:-rawtypes", "-Xlint:-deprecation",, +		"-Xlint:-unchecked", "-Xlint:-options"], +, +++ b/spring-aop/src/main/java/org/springframework/aop/IntroductionAwareMethodMatcher.java, +	boolean matches(Method method, Class<?> targetClass, boolean hasIntroductions);, +++ b/spring-aop/src/main/java/org/springframework/aop/IntroductionInfo.java, +	Class<?>[] getInterfaces();, +++ b/spring-aop/src/main/java/org/springframework/aop/TrueClassFilter.java, +	public boolean matches(Class<?> clazz) {, +++ b/spring-aop/src/main/java/org/springframework/aop/TrueMethodMatcher.java, +	public boolean matches(Method method, Class<?> targetClass) {, +	public boolean matches(Method method, Class<?> targetClass, Object[] args) {, +++ b/build.gradle, +	compileJava.options*.compilerArgs = [, +		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",, +		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",, +		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",, +		"-Xlint:try", "-Xlint:fallthrough", "-Xlint:rawtypes", "-Xlint:deprecation",, +		"-Xlint:unchecked", "-Xlint:-options", "-Werror", +	compileTestJava.options*.compilerArgs = [, +		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",]