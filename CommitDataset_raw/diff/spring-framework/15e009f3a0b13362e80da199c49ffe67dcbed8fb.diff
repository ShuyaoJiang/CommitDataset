[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToCollectionConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToCollectionConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToObjectConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType, conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToCollectionConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToObjectConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType, conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToStringConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType, conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToCollectionConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToObjectConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType, conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToStringConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType, conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ConversionUtils.java, +import org.springframework.core.convert.ConversionService;, +	public static boolean canConvertElements(TypeDescriptor sourceElementType, TypeDescriptor targetElementType, ConversionService conversionService) {, +		if (targetElementType == null) {, +			// yes, +			return true;, +		}, +		if (sourceElementType == null) {, +			// maybe, +			return true;, +		}, +		boolean canConvert = conversionService.canConvert(sourceElementType, targetElementType);, +		if (canConvert) {, +			// yes, +			return true;, +		} else {, +			if (sourceElementType.getType().isAssignableFrom(targetElementType.getType())) {, +				// maybe;, +				return true;, +			} else {, +				// no;, +				return false;, +			}, +		}		, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToArrayConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToCollectionConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor(), conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToObjectConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType, conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/CollectionToStringConverter.java, +		return ConversionUtils.canConvertElements(sourceType.getElementTypeDescriptor(), targetType, conversionService);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ConversionUtils.java, +import org.springframework.core.convert.ConversionService;, +	public static boolean canConvertElements(TypeDescriptor sourceElementType, TypeDescriptor targetElementType, ConversionService conversionService) {, +		if (targetElementType == null) {, +			// yes, +			return true;, +		}, +		if (sourceElementType == null) {, +			// maybe, +			return true;, +		}, +		boolean canConvert = conversionService.canConvert(sourceElementType, targetElementType);, +		if (canConvert) {, +			// yes, +			return true;, +		} else {, +			if (sourceElementType.getType().isAssignableFrom(targetElementType.getType())) {, +				// maybe;, +				return true;, +			} else {, +				// no;, +				return false;, +			}, +		}		]