[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/RedirectView.java, +			targetUrl.append(getContextPath(request));, +	private String getContextPath(HttpServletRequest request) {, +		String contextPath = request.getContextPath();, +		while (contextPath.startsWith("//")) {, +			contextPath = contextPath.substring(1);, +		}, +		return contextPath;, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/RedirectView.java, +			targetUrl.append(getContextPath(request));, +	private String getContextPath(HttpServletRequest request) {, +		String contextPath = request.getContextPath();, +		while (contextPath.startsWith("//")) {, +			contextPath = contextPath.substring(1);, +		}, +		return contextPath;, +	}, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/view/RedirectViewTests.java, + * Copyright 2002-2018 the original author or authors., +	@Test // SPR-13693, +	@Test // SPR-16752, +	public void contextRelativeWithValidatedContextPath() throws Exception {, +		String url = "/myUrl";, +, +		this.request.setContextPath("//context");, +		this.response = new MockHttpServletResponse();, +		doTest(new HashMap<>(), url, true, "/context" + url);, +, +		this.request.setContextPath("///context");, +		this.response = new MockHttpServletResponse();, +		doTest(new HashMap<>(), url, true, "/context" + url);, +	}, +]