[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +		else if (containsSingleton(beanName)) {, +			return true;, +		}, +		else if (containsSingleton(beanName) && !containsBeanDefinition(beanName)) {, +			// null instance registered, +			return false;, +		}, +		else if (containsSingleton(beanName) && !containsBeanDefinition(beanName)) {, +			// null instance registered, +			return null;, +		}, +		else if (containsSingleton(beanName)) {, +			// null instance registered, +			return false;, +		}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +		else if (containsSingleton(beanName)) {, +			return true;, +		}, +		else if (containsSingleton(beanName) && !containsBeanDefinition(beanName)) {, +			// null instance registered, +			return false;, +		}, +		else if (containsSingleton(beanName) && !containsBeanDefinition(beanName)) {, +			// null instance registered, +			return null;, +		}, +		else if (containsSingleton(beanName)) {, +			// null instance registered, +			return false;, +		}, +++ b/org.springframework.context/src/test/java/org/springframework/context/support/GenericApplicationContextTests.java, +/*, + * Copyright 2002-2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.context.support;, +, +import org.junit.Test;, +, +import org.springframework.beans.factory.support.DefaultListableBeanFactory;, +, +/**, + * @author Juergen Hoeller, + * @author Chris Beams, + */, +public class GenericApplicationContextTests {, +, +	@Test, +	public void nullBeanRegistration() {, +			DefaultListableBeanFactory bf = new DefaultListableBeanFactory();, +			bf.registerSingleton("nullBean", null);, +			new GenericApplicationContext(bf).refresh();, +	}, +, +}]