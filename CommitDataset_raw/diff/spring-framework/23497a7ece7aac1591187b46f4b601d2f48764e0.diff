[+++ b/spring-context/src/main/kotlin/org/springframework/context/support/BeanDefinitionDsl.kt, +import org.springframework.beans.factory.support.AbstractBeanDefinition, + * 	bean<Routes>(), +	 * Autowire enum constants., +	 */, +	enum class Autowire {, +, +		/**, +		 * Autowire constant that indicates no externally defined autowiring, +		 * @see org.springframework.beans.factory.config.AutowireCapableBeanFactory.AUTOWIRE_NO, +		 */, +		NO,, +		/**, +		 * Autowire constant that indicates autowiring bean properties by name, +		 * @see org.springframework.beans.factory.config.AutowireCapableBeanFactory.AUTOWIRE_BY_NAME, +		 */, +		BY_NAME,, +		/**, +		 * Autowire constant that indicates autowiring bean properties by type, +		 * @see org.springframework.beans.factory.config.AutowireCapableBeanFactory.AUTOWIRE_BY_TYPE, +		 */, +		BY_TYPE,, +, +		/**, +		 * Autowire constant that indicates autowiring the greediest constructor that can be satisfied, +		 * @see org.springframework.beans.factory.config.AutowireCapableBeanFactory.AUTOWIRE_CONSTRUCTOR, +		 */, +		CONSTRUCTOR, +, +	}, +, +	/**, +	 * @param autowireMode Set the autowire mode, `Autowire.CONSTRUCTOR` by default, +									  autowireMode: Autowire = Autowire.CONSTRUCTOR,, +				if (bd is AbstractBeanDefinition) {, +					bd.autowireMode = autowireMode.ordinal, +				}, +	 * @param name the name of the bean, +	 * @param scope Override the target scope of this bean, specifying a new scope name., +	 * @param isLazyInit Set whether this bean should be lazily initialized., +	 * @param isPrimary Set whether this bean is a primary autowire candidate., +	 * @param autowireMode Set the autowire mode, `Autowire.NO` by default, +	 * @param isAutowireCandidate Set whether this bean is a candidate for getting autowired into some other bean., +	 * @param function the bean supplier function, +	 * @see org.springframework.beans.factory.config.BeanDefinition, +									  autowireMode: Autowire = Autowire.NO,, +			if (bd is AbstractBeanDefinition) {, +				bd.autowireMode = autowireMode.ordinal, +			}, +++ b/spring-context/src/main/kotlin/org/springframework/context/support/BeanDefinitionDsl.kt, +import org.springframework.beans.factory.support.AbstractBeanDefinition, + * 	bean<Routes>(), +	 * Autowire enum constants., +	 */, +	enum class Autowire {, +, +		/**, +		 * Autowire constant that indicates no externally defined autowiring, +		 * @see org.springframework.beans.factory.config.AutowireCapableBeanFactory.AUTOWIRE_NO, +		 */, +		NO,, +		/**, +		 * Autowire constant that indicates autowiring bean properties by name, +		 * @see org.springframework.beans.factory.config.AutowireCapableBeanFactory.AUTOWIRE_BY_NAME, +		 */, +		BY_NAME,, +		/**, +		 * Autowire constant that indicates autowiring bean properties by type, +		 * @see org.springframework.beans.factory.config.AutowireCapableBeanFactory.AUTOWIRE_BY_TYPE, +		 */, +		BY_TYPE,, +, +		/**, +		 * Autowire constant that indicates autowiring the greediest constructor that can be satisfied, +		 * @see org.springframework.beans.factory.config.AutowireCapableBeanFactory.AUTOWIRE_CONSTRUCTOR, +		 */, +		CONSTRUCTOR, +, +	}, +, +	/**, +	 * @param autowireMode Set the autowire mode, `Autowire.CONSTRUCTOR` by default, +									  autowireMode: Autowire = Autowire.CONSTRUCTOR,, +				if (bd is AbstractBeanDefinition) {, +					bd.autowireMode = autowireMode.ordinal, +				}, +	 * @param name the name of the bean, +	 * @param scope Override the target scope of this bean, specifying a new scope name., +	 * @param isLazyInit Set whether this bean should be lazily initialized., +	 * @param isPrimary Set whether this bean is a primary autowire candidate., +	 * @param autowireMode Set the autowire mode, `Autowire.NO` by default, +	 * @param isAutowireCandidate Set whether this bean is a candidate for getting autowired into some other bean., +	 * @param function the bean supplier function, +	 * @see org.springframework.beans.factory.config.BeanDefinition, +									  autowireMode: Autowire = Autowire.NO,, +			if (bd is AbstractBeanDefinition) {, +				bd.autowireMode = autowireMode.ordinal, +			}, +++ b/src/docs/asciidoc/kotlin.adoc, +  bean<Routes>()]