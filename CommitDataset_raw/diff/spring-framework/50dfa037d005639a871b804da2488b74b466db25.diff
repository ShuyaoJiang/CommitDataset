[+++ b/src/asciidoc/index.adoc, +to deploy a Spring 4 application into a Servlet 2.5 environment. However, Servlet 3.0+, +is strongly recommended and a prerequisite in Spring's test and mock packages for test, +setups in development environments., +[NOTE], +====, +The `local` attribute on the `ref` element is no longer supported in the 4.0 beans xsd, +since it does not provide value over a regular `bean` reference anymore. Simply change, +your existing `ref local` references to `ref bean` when upgrading to the 4.0 schema., +====, +, +If you use a Servlet 2.5 web container, with requests processed outside of Spring's, +interface. Alternatively, or for older containers, add the following declaration to, +your web application's `web.xml` file:, +Alternatively, if there are issues with your listener setup, consider the provided, +`RequestContextFilter`. The filter mapping depends on the surrounding web, +application configuration, so you have to change it as appropriate., +activate the files-only switch of the JAR task. Also, classpath directories may not, +get exposed based on security policies in some environments, e.g. standalone apps on, +JDK 1.7.0_45 and higher (which requires 'Trusted-Library' setup in your manifests; see, +http://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources)., +Thus `LockMixin` extends `DelegatingIntroductionInterceptor` and implements `Lockable`, +It's possible for such advisors to be unique to each advised class (for example, mixins):, +they simply need to be defined as prototype, rather than singleton, bean definitions., +For example, the `LockMixin` introduction interceptor from the Spring test suite,, +shown above, could be used in conjunction with a generic `DefaultIntroductionAdvisor`:, +	<bean id="lockMixin" class="test.mixin.LockMixin" scope="prototype"/>, +	<bean id="lockableAdvisor" class="org.springframework.aop.support.DefaultIntroductionAdvisor", +		<constructor-arg ref="lockMixin"/>, +Note that both `lockMixin` and `lockableAdvisor` are defined as prototypes., +, +Note: As of Spring 4.0, the set of mocks in the `org.springframework.mock.web` package, +is now based on the Servlet 3.0 API.]