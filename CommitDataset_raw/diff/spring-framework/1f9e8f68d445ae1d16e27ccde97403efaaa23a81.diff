[+++ b/build.gradle, +	def objenesisVersion = "2.0", +		objenesis, +	task objenesisRepackJar(type: Jar) { repackJar ->, +		repackJar.baseName = "spring-objenesis-repack", +		repackJar.version = objenesisVersion, +, +		doLast() {, +			project.ant {, +				taskdef name: "jarjar", classname: "com.tonicsystems.jarjar.JarJarTask",, +					classpath: configurations.jarjar.asPath, +				jarjar(destfile: repackJar.archivePath) {, +					configurations.objenesis.each { originalJar ->, +						zipfileset(src: originalJar), +					}, +					// repackage org.objenesis => org.springframework.objenesis, +					rule(pattern: "org.objenesis.**", result: "org.springframework.objenesis.@1"), +				}, +			}, +		}, +	}, +, +		objenesis("org.objenesis:objenesis:${objenesisVersion}@jar"), +, +		dependsOn objenesisRepackJar, +		from(zipTree(objenesisRepackJar.archivePath)) {, +			include "org/springframework/objenesis/**", +		}, +		compile(files(project(":spring-core").objenesisRepackJar)), +++ b/build.gradle, +	def objenesisVersion = "2.0", +		objenesis, +	task objenesisRepackJar(type: Jar) { repackJar ->, +		repackJar.baseName = "spring-objenesis-repack", +		repackJar.version = objenesisVersion, +, +		doLast() {, +			project.ant {, +				taskdef name: "jarjar", classname: "com.tonicsystems.jarjar.JarJarTask",, +					classpath: configurations.jarjar.asPath, +				jarjar(destfile: repackJar.archivePath) {, +					configurations.objenesis.each { originalJar ->, +						zipfileset(src: originalJar), +					}, +					// repackage org.objenesis => org.springframework.objenesis, +					rule(pattern: "org.objenesis.**", result: "org.springframework.objenesis.@1"), +				}, +			}, +		}, +	}, +, +		objenesis("org.objenesis:objenesis:${objenesisVersion}@jar"), +, +		dependsOn objenesisRepackJar, +		from(zipTree(objenesisRepackJar.archivePath)) {, +			include "org/springframework/objenesis/**", +		}, +		compile(files(project(":spring-core").objenesisRepackJar)), +++ b/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java, +class CglibAopProxy implements AopProxy, Serializable {, +, +, +			enhancer.setCallbackFilter(new ProxyCallbackFilter(, +					this.advised.getConfigurationOnlyCopy(), this.fixedInterceptorMap, this.fixedInterceptorOffset));, +			return createProxyClassAndInstance(enhancer, callbacks);, +	protected Object createProxyClassAndInstance(Enhancer enhancer, Callback[] callbacks) {, +, +		enhancer.setInterceptDuringConstruction(false);, +		enhancer.setCallbacks(callbacks);, +, +		return this.constructorArgs == null ? enhancer.create() : enhancer.create(, +				this.constructorArgTypes, this.constructorArgs);, +	}, +, +++ b/build.gradle, +	def objenesisVersion = "2.0", +		objenesis, +	task objenesisRepackJar(type: Jar) { repackJar ->, +		repackJar.baseName = "spring-objenesis-repack", +		repackJar.version = objenesisVersion, +, +		doLast() {, +			project.ant {, +				taskdef name: "jarjar", classname: "com.tonicsystems.jarjar.JarJarTask",, +					classpath: configurations.jarjar.asPath, +				jarjar(destfile: repackJar.archivePath) {, +					configurations.objenesis.each { originalJar ->, +						zipfileset(src: originalJar), +					}, +					// repackage org.objenesis => org.springframework.objenesis, +					rule(pattern: "org.objenesis.**", result: "org.springframework.objenesis.@1"), +				}, +			}, +		}, +	}, +, +		objenesis("org.objenesis:objenesis:${objenesisVersion}@jar"), +, +		dependsOn objenesisRepackJar, +		from(zipTree(objenesisRepackJar.archivePath)) {]