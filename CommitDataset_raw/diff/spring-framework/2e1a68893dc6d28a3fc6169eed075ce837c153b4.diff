[+++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, +		List<MediaType> result = (value != null) ? MediaType.parseMediaTypes(value) : Collections.<MediaType>emptyList();, +, +		// Some containers parse 'Accept' into multiple values, +		if ((result.size() == 1) && (headers.get(ACCEPT).size() > 1)) {, +			value = StringUtils.collectionToCommaDelimitedString(headers.get(ACCEPT));, +			result = MediaType.parseMediaTypes(value);, +		}, +, +		return result;, +++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, +		List<MediaType> result = (value != null) ? MediaType.parseMediaTypes(value) : Collections.<MediaType>emptyList();, +, +		// Some containers parse 'Accept' into multiple values, +		if ((result.size() == 1) && (headers.get(ACCEPT).size() > 1)) {, +			value = StringUtils.collectionToCommaDelimitedString(headers.get(ACCEPT));, +			result = MediaType.parseMediaTypes(value);, +		}, +, +		return result;, +++ b/spring-web/src/test/java/org/springframework/http/HttpHeadersTests.java, +	// SPR-9655, +, +	@Test, +	public void acceptiPlanet() {, +		headers.add("Accept", "text/html");, +		headers.add("Accept", "text/plain");, +		List<MediaType> expected = Arrays.asList(new MediaType("text", "html"), new MediaType("text", "plain"));, +		assertEquals("Invalid Accept header", expected, headers.getAccept());, +	}, +]