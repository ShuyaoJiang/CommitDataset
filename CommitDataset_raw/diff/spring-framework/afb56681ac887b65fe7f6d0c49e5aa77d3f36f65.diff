[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/standard/StandardToWebSocketExtensionAdapter.java, +import org.springframework.util.LinkedCaseInsensitiveMap;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +, + * A sub-class of {@link org.springframework.web.socket.WebSocketExtension} that, + * can be constructed from an {@link javax.websocket.Extension}., + *, +, +	public StandardToWebSocketExtensionAdapter(Extension extension) {, +		super(extension.getName(), initParameters(extension));, +, +, +	private static Map<String, String> initParameters(Extension extension) {, +		List<Extension.Parameter> parameters = extension.getParameters();, +		Map<String, String> result = new LinkedCaseInsensitiveMap<String>(parameters.size(), Locale.ENGLISH);, +		for (Extension.Parameter parameter : parameters) {, +			result.put(parameter.getName(), parameter.getValue());, +		}, +		return result;, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/standard/StandardToWebSocketExtensionAdapter.java, +import org.springframework.util.LinkedCaseInsensitiveMap;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +, + * A sub-class of {@link org.springframework.web.socket.WebSocketExtension} that, + * can be constructed from an {@link javax.websocket.Extension}., + *, +, +	public StandardToWebSocketExtensionAdapter(Extension extension) {, +		super(extension.getName(), initParameters(extension));, +, +, +	private static Map<String, String> initParameters(Extension extension) {, +		List<Extension.Parameter> parameters = extension.getParameters();, +		Map<String, String> result = new LinkedCaseInsensitiveMap<String>(parameters.size(), Locale.ENGLISH);, +		for (Extension.Parameter parameter : parameters) {, +			result.put(parameter.getName(), parameter.getValue());, +		}, +		return result;, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/standard/WebSocketToStandardExtensionAdapter.java, + * Adapt an instance of {@link org.springframework.web.socket.WebSocketExtension} to, + * the {@link javax.websocket.Extension} interface., + *, +, +	public WebSocketToStandardExtensionAdapter(final WebSocketExtension extension) {, +		this.name = extension.getName();, +		for (final String paramName : extension.getParameters().keySet()) {, +					return extension.getParameters().get(paramName);]