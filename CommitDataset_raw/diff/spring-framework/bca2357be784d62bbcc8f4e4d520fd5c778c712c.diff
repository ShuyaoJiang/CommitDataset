[+++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, + * Copyright 2002-2012 the original author or authors., +, +, +, +++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, + * Copyright 2002-2012 the original author or authors., +, +, +, +++ b/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java, + * Copyright 2002-2012 the original author or authors., + * <p>This error handler checks for the status code on the {@link ClientHttpResponse}: any, + * code with series {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR} or, + * {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR} is considered to be an, + * error. This behavior can be changed by overriding the {@link #hasError(HttpStatus)}, + * method., +++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, + * Copyright 2002-2012 the original author or authors., +, +, +, +++ b/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java, + * Copyright 2002-2012 the original author or authors., + * <p>This error handler checks for the status code on the {@link ClientHttpResponse}: any, + * code with series {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR} or, + * {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR} is considered to be an, + * error. This behavior can be changed by overriding the {@link #hasError(HttpStatus)}, + * method., +++ b/spring-web/src/main/java/org/springframework/web/client/HttpClientErrorException.java, +, +	 * Construct a new instance of {@code HttpClientErrorException} based on an, +	 * {@link HttpStatus}., +	 * Construct a new instance of {@code HttpClientErrorException} based on an, +	 * {@link HttpStatus} and status text., +	 * Construct a new instance of {@code HttpClientErrorException} based on an, +	 * {@link HttpStatus}, status text, and response body content., +	public HttpClientErrorException(HttpStatus statusCode, String statusText,, +			byte[] responseBody, Charset responseCharset) {, +, +++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, + * Copyright 2002-2012 the original author or authors., +, +, +, +++ b/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java, + * Copyright 2002-2012 the original author or authors., + * <p>This error handler checks for the status code on the {@link ClientHttpResponse}: any, + * code with series {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR} or, + * {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR} is considered to be an, + * error. This behavior can be changed by overriding the {@link #hasError(HttpStatus)}, + * method., +++ b/spring-web/src/main/java/org/springframework/web/client/HttpClientErrorException.java, +, +	 * Construct a new instance of {@code HttpClientErrorException} based on an, +	 * {@link HttpStatus}., +	 * Construct a new instance of {@code HttpClientErrorException} based on an, +	 * {@link HttpStatus} and status text., +	 * Construct a new instance of {@code HttpClientErrorException} based on an, +	 * {@link HttpStatus}, status text, and response body content., +	public HttpClientErrorException(HttpStatus statusCode, String statusText,, +			byte[] responseBody, Charset responseCharset) {, +, +++ b/spring-web/src/main/java/org/springframework/web/client/HttpServerErrorException.java, +, +	 * Construct a new instance of {@code HttpServerErrorException} based on an, +	 * {@link HttpStatus}., +	 * Construct a new instance of {@code HttpServerErrorException} based on an, +	 * {@link HttpStatus} and status text., +	 * Construct a new instance of {@code HttpServerErrorException} based on an, +	 * {@link HttpStatus}, status text, and response body content., +	public HttpServerErrorException(HttpStatus statusCode, String statusText,, +			byte[] responseBody, Charset responseCharset) {, +, +++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, + * Copyright 2002-2012 the original author or authors., +, +, +, +++ b/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java, + * Copyright 2002-2012 the original author or authors., + * <p>This error handler checks for the status code on the {@link ClientHttpResponse}: any, + * code with series {@link org.springframework.http.HttpStatus.Series#CLIENT_ERROR} or, + * {@link org.springframework.http.HttpStatus.Series#SERVER_ERROR} is considered to be an, + * error. This behavior can be changed by overriding the {@link #hasError(HttpStatus)}, + * method., +++ b/spring-web/src/main/java/org/springframework/web/client/HttpClientErrorException.java, +, +	 * Construct a new instance of {@code HttpClientErrorException} based on an, +	 * {@link HttpStatus}., +	 * Construct a new instance of {@code HttpClientErrorException} based on an, +	 * {@link HttpStatus} and status text., +	 * Construct a new instance of {@code HttpClientErrorException} based on an, +	 * {@link HttpStatus}, status text, and response body content., +	public HttpClientErrorException(HttpStatus statusCode, String statusText,, +			byte[] responseBody, Charset responseCharset) {, +, +++ b/spring-web/src/main/java/org/springframework/web/client/HttpServerErrorException.java, +, +	 * Construct a new instance of {@code HttpServerErrorException} based on an]