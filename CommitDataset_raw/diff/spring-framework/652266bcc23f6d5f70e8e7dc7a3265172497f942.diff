[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		return getAutowireCandidateResolver().isRequired(descriptor);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		return getAutowireCandidateResolver().isRequired(descriptor);, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * value cannot be retrieved due to an {@link AnnotationConfigurationException},, +	 * in which case such an exception will be rethrown, +	 * value cannot be retrieved due to an {@link AnnotationConfigurationException},, +	 * in which case such an exception will be rethrown, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		return getAutowireCandidateResolver().isRequired(descriptor);, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * value cannot be retrieved due to an {@link AnnotationConfigurationException},, +	 * in which case such an exception will be rethrown, +	 * value cannot be retrieved due to an {@link AnnotationConfigurationException},, +	 * in which case such an exception will be rethrown, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/CookieResultMatchers.java, +import org.springframework.test.web.servlet.MvcResult;, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +		return result -> getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +, +	private static Cookie getCookie(MvcResult result, String name) {, +		Cookie cookie = result.getResponse().getCookie(name);, +		assertTrue("No cookie with name '" + name + "'", cookie != null);, +		return cookie;, +	}, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		return getAutowireCandidateResolver().isRequired(descriptor);, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * value cannot be retrieved due to an {@link AnnotationConfigurationException},, +	 * in which case such an exception will be rethrown, +	 * value cannot be retrieved due to an {@link AnnotationConfigurationException},, +	 * in which case such an exception will be rethrown, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/CookieResultMatchers.java, +import org.springframework.test.web.servlet.MvcResult;, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +		return result -> getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +, +	private static Cookie getCookie(MvcResult result, String name) {, +		Cookie cookie = result.getResponse().getCookie(name);, +		assertTrue("No cookie with name '" + name + "'", cookie != null);, +		return cookie;, +	}, +, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/HandlerResultMatchers.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		return getAutowireCandidateResolver().isRequired(descriptor);, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +	 * value cannot be retrieved due to an {@link AnnotationConfigurationException},, +	 * in which case such an exception will be rethrown, +	 * value cannot be retrieved due to an {@link AnnotationConfigurationException},, +	 * in which case such an exception will be rethrown, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/result/CookieResultMatchers.java, +import org.springframework.test.web.servlet.MvcResult;, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +		return result -> getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +			Cookie cookie = getCookie(result, name);, +, +	private static Cookie getCookie(MvcResult result, String name) {, +		Cookie cookie = result.getResponse().getCookie(name);, +		assertTrue("No cookie with name '" + name + "'", cookie != null);]