[+++ b/org.springframework.aop/src/main/java/org/springframework/aop/aspectj/AspectJPointcutAdvisor.java, + * Copyright 2002-2008 the original author or authors., +		this.order = order;, +			return this.order;, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/aspectj/AspectJPointcutAdvisor.java, + * Copyright 2002-2008 the original author or authors., +		this.order = order;, +			return this.order;, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, +				return equals(args[0]);, +				return hashCode();, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/aspectj/AspectJPointcutAdvisor.java, + * Copyright 2002-2008 the original author or authors., +		this.order = order;, +			return this.order;, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, +				return equals(args[0]);, +				return hashCode();, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.java, +				return (proxy == args[0]);, +				return System.identityHashCode(proxy);, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/aspectj/AspectJPointcutAdvisor.java, + * Copyright 2002-2008 the original author or authors., +		this.order = order;, +			return this.order;, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, +				return equals(args[0]);, +				return hashCode();, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.java, +				return (proxy == args[0]);, +				return System.identityHashCode(proxy);, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/MBeanExporter.java, +		if (!constants.getValues(CONSTANT_PREFIX_AUTODETECT).contains(autodetectMode)) {, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/aspectj/AspectJPointcutAdvisor.java, + * Copyright 2002-2008 the original author or authors., +		this.order = order;, +			return this.order;, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, +				return equals(args[0]);, +				return hashCode();, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.java, +				return (proxy == args[0]);, +				return System.identityHashCode(proxy);, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/MBeanExporter.java, +		if (!constants.getValues(CONSTANT_PREFIX_AUTODETECT).contains(autodetectMode)) {, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.java, +	protected static final int ATTRIBUTE_OPERATION_VISIBILITY = 4;, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/aspectj/AspectJPointcutAdvisor.java, + * Copyright 2002-2008 the original author or authors., +		this.order = order;, +			return this.order;, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, +				return equals(args[0]);, +				return hashCode();, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.java, +				return (proxy == args[0]);, +				return System.identityHashCode(proxy);, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/MBeanExporter.java, +		if (!constants.getValues(CONSTANT_PREFIX_AUTODETECT).contains(autodetectMode)) {, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.java, +	protected static final int ATTRIBUTE_OPERATION_VISIBILITY = 4;, +++ b/org.springframework.context/src/main/java/org/springframework/scripting/bsh/BshScriptUtils.java, +				return (isProxyForSameBshObject(args[0]));, +				return this.xt.hashCode();, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/aspectj/AspectJPointcutAdvisor.java, + * Copyright 2002-2008 the original author or authors., +		this.order = order;, +			return this.order;, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, +				return equals(args[0]);, +				return hashCode();, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.java, +				return (proxy == args[0]);, +				return System.identityHashCode(proxy);, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/MBeanExporter.java, +		if (!constants.getValues(CONSTANT_PREFIX_AUTODETECT).contains(autodetectMode)) {, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.java, +	protected static final int ATTRIBUTE_OPERATION_VISIBILITY = 4;, +++ b/org.springframework.context/src/main/java/org/springframework/scripting/bsh/BshScriptUtils.java, +				return (isProxyForSameBshObject(args[0]));, +				return this.xt.hashCode();, +++ b/org.springframework.context/src/main/java/org/springframework/scripting/jruby/JRubyScriptUtils.java, +				return (isProxyForSameRubyObject(args[0]));, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/aspectj/AspectJPointcutAdvisor.java, + * Copyright 2002-2008 the original author or authors., +		this.order = order;, +			return this.order;, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java, +				return equals(args[0]);, +				return hashCode();, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.java, +				return (proxy == args[0]);, +				return System.identityHashCode(proxy);, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/MBeanExporter.java, +		if (!constants.getValues(CONSTANT_PREFIX_AUTODETECT).contains(autodetectMode)) {, +++ b/org.springframework.context/src/main/java/org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.java, +	protected static final int ATTRIBUTE_OPERATION_VISIBILITY = 4;, +++ b/org.springframework.context/src/main/java/org/springframework/scripting/bsh/BshScriptUtils.java, +				return (isProxyForSameBshObject(args[0]));, +				return this.xt.hashCode();]