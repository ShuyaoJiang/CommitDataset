[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java, +import java.util.HashSet;, +	 * @since 4.0, +		return isDependent(beanName, dependentBeanName, null);, +	}, +, +	private boolean isDependent(String beanName, String dependentBeanName, Set<String> alreadySeen) {, +		if (alreadySeen != null && alreadySeen.contains(beanName)) {, +			return false;, +		}, +			if (alreadySeen == null) {, +				alreadySeen = new HashSet<String>();, +			}, +			alreadySeen.add(beanName);, +			if (isDependent(transitiveDependency, dependentBeanName, alreadySeen)) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java, +import java.util.HashSet;, +	 * @since 4.0, +		return isDependent(beanName, dependentBeanName, null);, +	}, +, +	private boolean isDependent(String beanName, String dependentBeanName, Set<String> alreadySeen) {, +		if (alreadySeen != null && alreadySeen.contains(beanName)) {, +			return false;, +		}, +			if (alreadySeen == null) {, +				alreadySeen = new HashSet<String>();, +			}, +			alreadySeen.add(beanName);, +			if (isDependent(transitiveDependency, dependentBeanName, alreadySeen)) {, +++ /dev/null, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java, +import java.util.HashSet;, +	 * @since 4.0, +		return isDependent(beanName, dependentBeanName, null);, +	}, +, +	private boolean isDependent(String beanName, String dependentBeanName, Set<String> alreadySeen) {, +		if (alreadySeen != null && alreadySeen.contains(beanName)) {, +			return false;, +		}, +			if (alreadySeen == null) {, +				alreadySeen = new HashSet<String>();, +			}, +			alreadySeen.add(beanName);, +			if (isDependent(transitiveDependency, dependentBeanName, alreadySeen)) {, +++ /dev/null, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistryTests.java, +/*, + * Copyright 2002-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.beans.factory.support;, +, +import org.junit.Test;, +, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.ObjectFactory;, +import org.springframework.tests.sample.beans.DerivedTestBean;, +import org.springframework.tests.sample.beans.TestBean;, +, +import static org.junit.Assert.*;, +, +/**, + * @author Juergen Hoeller, + * @author Chris Beams, + * @since 04.07.2006, + */, +public class DefaultSingletonBeanRegistryTests {, +, +	@Test, +	public void testSingletons() {, +		DefaultSingletonBeanRegistry beanRegistry = new DefaultSingletonBeanRegistry();, +, +		TestBean tb = new TestBean();, +		beanRegistry.registerSingleton("tb", tb);, +		assertSame(tb, beanRegistry.getSingleton("tb"));, +, +		TestBean tb2 = (TestBean) beanRegistry.getSingleton("tb2", new ObjectFactory<Object>() {, +			@Override, +			public Object getObject() throws BeansException {, +				return new TestBean();, +			}, +		});, +		assertSame(tb2, beanRegistry.getSingleton("tb2"));, +, +		assertSame(tb, beanRegistry.getSingleton("tb"));, +		assertSame(tb2, beanRegistry.getSingleton("tb2"));]