[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/HttpHeadResponseDecorator.java, +, +		return Flux.from(body), +				.then();, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/HttpHeadResponseDecorator.java, +, +		return Flux.from(body), +				.then();, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorHttpHandlerAdapter.java, +	public Mono<Void> apply(HttpServerRequest reactorRequest, HttpServerResponse reactorResponse) {, +		NettyDataBufferFactory bufferFactory = new NettyDataBufferFactory(reactorResponse.alloc());, +			ServerHttpRequest request = new ReactorServerHttpRequest(reactorRequest, bufferFactory);, +			ServerHttpResponse response = new ReactorServerHttpResponse(reactorResponse, bufferFactory);, +, +			if (request.getMethod() == HttpMethod.HEAD) {, +				response = new HttpHeadResponseDecorator(response);, +			}, +, +			String logPrefix = ((ReactorServerHttpRequest) request).getLogPrefix();, +, +			return this.httpHandler.handle(request, response), +					.doOnError(ex -> logger.trace(logPrefix + "Failed to complete: " + ex.getMessage())), +					.doOnSuccess(aVoid -> logger.trace(logPrefix + "Handling completed"));, +			reactorResponse.status(HttpResponseStatus.BAD_REQUEST);]