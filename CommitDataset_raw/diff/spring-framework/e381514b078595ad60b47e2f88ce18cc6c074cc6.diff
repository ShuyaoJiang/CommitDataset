[+++ b/spring-context/src/main/java/org/springframework/cache/config/CacheAdviceParser.java, +		if (!cacheDefs.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/cache/config/CacheAdviceParser.java, +		if (!cacheDefs.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jmx/support/JmxUtils.java, +			if (servers != null && !servers.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/cache/config/CacheAdviceParser.java, +		if (!cacheDefs.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jmx/support/JmxUtils.java, +			if (servers != null && !servers.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/validation/DataBinder.java, +		return (!this.validators.isEmpty() ? this.validators.get(0) : null);, +++ b/spring-context/src/main/java/org/springframework/cache/config/CacheAdviceParser.java, +		if (!cacheDefs.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jmx/support/JmxUtils.java, +			if (servers != null && !servers.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/validation/DataBinder.java, +		return (!this.validators.isEmpty() ? this.validators.get(0) : null);, +++ b/spring-core/src/main/java/org/springframework/core/codec/StringDecoder.java, +		if (!dataBuffers.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/cache/config/CacheAdviceParser.java, +		if (!cacheDefs.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jmx/support/JmxUtils.java, +			if (servers != null && !servers.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/validation/DataBinder.java, +		return (!this.validators.isEmpty() ? this.validators.get(0) : null);, +++ b/spring-core/src/main/java/org/springframework/core/codec/StringDecoder.java, +		if (!dataBuffers.isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/DatabasePopulatorConfigUtils.java, +		if (!scripts.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/cache/config/CacheAdviceParser.java, +		if (!cacheDefs.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jmx/support/JmxUtils.java, +			if (servers != null && !servers.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/validation/DataBinder.java, +		return (!this.validators.isEmpty() ? this.validators.get(0) : null);, +++ b/spring-core/src/main/java/org/springframework/core/codec/StringDecoder.java, +		if (!dataBuffers.isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/DatabasePopulatorConfigUtils.java, +		if (!scripts.isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, +			return (!this.outParameterNames.isEmpty() ? this.outParameterNames.get(0) : null);, +					if (param == null && !getOutParameterNames().isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/cache/config/CacheAdviceParser.java, +		if (!cacheDefs.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jmx/support/JmxUtils.java, +			if (servers != null && !servers.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/validation/DataBinder.java, +		return (!this.validators.isEmpty() ? this.validators.get(0) : null);, +++ b/spring-core/src/main/java/org/springframework/core/codec/StringDecoder.java, +		if (!dataBuffers.isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/DatabasePopulatorConfigUtils.java, +		if (!scripts.isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, +			return (!this.outParameterNames.isEmpty() ? this.outParameterNames.get(0) : null);, +					if (param == null && !getOutParameterNames().isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java, +		if (!declaredColumns.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/cache/config/CacheAdviceParser.java, +		if (!cacheDefs.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jmx/support/JmxUtils.java, +			if (servers != null && !servers.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/validation/DataBinder.java, +		return (!this.validators.isEmpty() ? this.validators.get(0) : null);, +++ b/spring-core/src/main/java/org/springframework/core/codec/StringDecoder.java, +		if (!dataBuffers.isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/DatabasePopulatorConfigUtils.java, +		if (!scripts.isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, +			return (!this.outParameterNames.isEmpty() ? this.outParameterNames.get(0) : null);, +					if (param == null && !getOutParameterNames().isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java, +		if (!declaredColumns.isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/GeneratedKeyHolder.java, +		if (this.keyList.isEmpty()) {, +		if (this.keyList.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/cache/config/CacheAdviceParser.java, +		if (!cacheDefs.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jmx/support/JmxUtils.java, +			if (servers != null && !servers.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/validation/DataBinder.java, +		return (!this.validators.isEmpty() ? this.validators.get(0) : null);, +++ b/spring-core/src/main/java/org/springframework/core/codec/StringDecoder.java, +		if (!dataBuffers.isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/DatabasePopulatorConfigUtils.java, +		if (!scripts.isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java, +			return (!this.outParameterNames.isEmpty() ? this.outParameterNames.get(0) : null);, +					if (param == null && !getOutParameterNames().isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java, +		if (!declaredColumns.isEmpty()) {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/GeneratedKeyHolder.java, +		if (this.keyList.isEmpty()) {, +		if (this.keyList.isEmpty()) {, +++ b/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java, +		if (annotations.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/cache/config/CacheAdviceParser.java, +		if (!cacheDefs.isEmpty()) {, +++ b/spring-context/src/main/java/org/springframework/jmx/support/JmxUtils.java, +			if (servers != null && !servers.isEmpty()) {]