[+++ b/spring-test/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java, + * Copyright 2002-2016 the original author or authors., +import java.io.ByteArrayInputStream;, +import java.io.InputStream;, +import org.springframework.http.HttpHeaders;, +import org.springframework.http.HttpInputMessage;, +import org.springframework.http.converter.FormHttpMessageConverter;, +import org.springframework.util.MultiValueMap;, +, +	 * Parse the body as form data and compare to the given {@code MultiValueMap}., +	 */, +	public RequestMatcher formData(final MultiValueMap<String, String> expectedContent) {, +		return new RequestMatcher() {, +			@Override, +			public void match(ClientHttpRequest request) throws IOException, AssertionError {, +				HttpInputMessage inputMessage = new HttpInputMessage() {, +					@Override, +					public InputStream getBody() throws IOException {, +						MockClientHttpRequest mockRequest = (MockClientHttpRequest) request;, +						return new ByteArrayInputStream(mockRequest.getBodyAsBytes());, +					}, +					@Override, +					public HttpHeaders getHeaders() {, +						return request.getHeaders();, +					}, +				};, +				FormHttpMessageConverter converter = new FormHttpMessageConverter();, +				assertEquals("Request content", expectedContent, converter.read(null, inputMessage));, +			}, +		};, +	}, +, +	/**, +++ b/spring-test/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java, + * Copyright 2002-2016 the original author or authors., +import java.io.ByteArrayInputStream;, +import java.io.InputStream;, +import org.springframework.http.HttpHeaders;, +import org.springframework.http.HttpInputMessage;, +import org.springframework.http.converter.FormHttpMessageConverter;, +import org.springframework.util.MultiValueMap;, +, +	 * Parse the body as form data and compare to the given {@code MultiValueMap}., +	 */, +	public RequestMatcher formData(final MultiValueMap<String, String> expectedContent) {, +		return new RequestMatcher() {, +			@Override, +			public void match(ClientHttpRequest request) throws IOException, AssertionError {, +				HttpInputMessage inputMessage = new HttpInputMessage() {, +					@Override, +					public InputStream getBody() throws IOException {, +						MockClientHttpRequest mockRequest = (MockClientHttpRequest) request;, +						return new ByteArrayInputStream(mockRequest.getBodyAsBytes());, +					}, +					@Override, +					public HttpHeaders getHeaders() {, +						return request.getHeaders();, +					}, +				};, +				FormHttpMessageConverter converter = new FormHttpMessageConverter();, +				assertEquals("Request content", expectedContent, converter.read(null, inputMessage));, +			}, +		};, +	}, +, +	/**, +++ b/spring-test/src/test/java/org/springframework/test/web/client/match/ContentRequestMatchersTests.java, + * Copyright 2002-2016 the original author or authors., +import java.nio.charset.Charset;, +, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +, +, +, +	public void testFormData() throws Exception {, +		String contentType = "application/x-www-form-urlencoded;charset=UTF-8";, +		String body = "name+1=value+1&name+2=value+A&name+2=value+B&name+3";, +, +		this.request.getHeaders().setContentType(MediaType.parseMediaType(contentType));, +		this.request.getBody().write(body.getBytes(Charset.forName("UTF-8")));, +, +		MultiValueMap<String, String> map = new LinkedMultiValueMap<>();, +		map.add("name 1", "value 1");, +		map.add("name 2", "value A");, +		map.add("name 2", "value B");, +		map.add("name 3", null);, +		MockRestRequestMatchers.content().formData(map).match(this.request);, +	}, +, +	@Test, +++ b/spring-test/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java, + * Copyright 2002-2016 the original author or authors., +import java.io.ByteArrayInputStream;, +import java.io.InputStream;, +import org.springframework.http.HttpHeaders;, +import org.springframework.http.HttpInputMessage;, +import org.springframework.http.converter.FormHttpMessageConverter;, +import org.springframework.util.MultiValueMap;, +]