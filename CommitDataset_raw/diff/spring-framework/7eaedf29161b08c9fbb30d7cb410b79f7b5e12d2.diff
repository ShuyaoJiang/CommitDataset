[+++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, +		if (cause == null) {, +			return;, +		}, +, +		boolean debugLevel = (cause instanceof JsonMappingException &&, +				cause.getMessage().startsWith("Can not find"));, +, +		if (debugLevel ? logger.isDebugEnabled() : logger.isWarnEnabled()) {, +			if (debugLevel) {, +				logger.debug(msg, cause);, +			}, +			else if (logger.isDebugEnabled()) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, +		if (cause == null) {, +			return;, +		}, +, +		boolean debugLevel = (cause instanceof JsonMappingException &&, +				cause.getMessage().startsWith("Can not find"));, +, +		if (debugLevel ? logger.isDebugEnabled() : logger.isWarnEnabled()) {, +			if (debugLevel) {, +				logger.debug(msg, cause);, +			}, +			else if (logger.isDebugEnabled()) {, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.java, +		if (cause == null) {, +			return;, +		}, +, +		boolean debugLevel = (cause instanceof JsonMappingException &&, +				cause.getMessage().startsWith("Can not find"));, +, +		if (debugLevel ? logger.isDebugEnabled() : logger.isWarnEnabled()) {, +			if (debugLevel) {, +				logger.debug(msg, cause);, +			}, +			else if (logger.isDebugEnabled()) {]