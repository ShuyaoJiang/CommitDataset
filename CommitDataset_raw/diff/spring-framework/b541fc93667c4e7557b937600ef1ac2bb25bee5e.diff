[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.java, + * Copyright 2002-2015 the original author or authors., +		doProcessProperties(beanFactoryToProcess, valueResolver);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.java, + * Copyright 2002-2015 the original author or authors., +		doProcessProperties(beanFactoryToProcess, valueResolver);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, + * Copyright 2002-2015 the original author or authors., +			this.beanDefinition.setDependsOn(beanName);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.java, + * Copyright 2002-2015 the original author or authors., +		doProcessProperties(beanFactoryToProcess, valueResolver);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, + * Copyright 2002-2015 the original author or authors., +			this.beanDefinition.setDependsOn(beanName);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/Role.java, + * Copyright 2002-2015 the original author or authors., + * {@link org.springframework.stereotype.Component} or on methods, + * annotated with {@link Bean}., + * <p>If this annotation is not present on a Component or Bean definition,, + * the default value of {@link BeanDefinition#ROLE_APPLICATION} will apply., + * <p>If Role is present on a {@link Configuration @Configuration} class,, + * this indicates the role of the configuration class bean definition and, + * does not cascade to all @{@code Bean} methods defined within. This behavior, + * is different than that of the @{@link Lazy} annotation, for example., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.java, + * Copyright 2002-2015 the original author or authors., +		doProcessProperties(beanFactoryToProcess, valueResolver);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, + * Copyright 2002-2015 the original author or authors., +			this.beanDefinition.setDependsOn(beanName);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/Role.java, + * Copyright 2002-2015 the original author or authors., + * {@link org.springframework.stereotype.Component} or on methods, + * annotated with {@link Bean}., + * <p>If this annotation is not present on a Component or Bean definition,, + * the default value of {@link BeanDefinition#ROLE_APPLICATION} will apply., + * <p>If Role is present on a {@link Configuration @Configuration} class,, + * this indicates the role of the configuration class bean definition and, + * does not cascade to all @{@code Bean} methods defined within. This behavior, + * is different than that of the @{@link Lazy} annotation, for example., +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ProxyAsyncConfiguration.java, +		Class<? extends Annotation> customAsyncAnnotation = this.enableAsync.getClass("annotation");, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.java, + * Copyright 2002-2015 the original author or authors., +		doProcessProperties(beanFactoryToProcess, valueResolver);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, + * Copyright 2002-2015 the original author or authors., +			this.beanDefinition.setDependsOn(beanName);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/Role.java, + * Copyright 2002-2015 the original author or authors., + * {@link org.springframework.stereotype.Component} or on methods, + * annotated with {@link Bean}., + * <p>If this annotation is not present on a Component or Bean definition,, + * the default value of {@link BeanDefinition#ROLE_APPLICATION} will apply., + * <p>If Role is present on a {@link Configuration @Configuration} class,, + * this indicates the role of the configuration class bean definition and, + * does not cascade to all @{@code Bean} methods defined within. This behavior, + * is different than that of the @{@link Lazy} annotation, for example., +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ProxyAsyncConfiguration.java, +		Class<? extends Annotation> customAsyncAnnotation = this.enableAsync.getClass("annotation");, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/ByteBufferConverterTests.java, + * Copyright 2002-2015 the original author or authors., +, +, +, +, +	private static class ByteArrayToOtherTypeConverter implements Converter<byte[], OtherType> {, +, +	private static class OtherTypeToByteArrayConverter implements Converter<OtherType, byte[]> {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.java, + * Copyright 2002-2015 the original author or authors., +		doProcessProperties(beanFactoryToProcess, valueResolver);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionBuilder.java, + * Copyright 2002-2015 the original author or authors., +			this.beanDefinition.setDependsOn(beanName);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/Role.java, + * Copyright 2002-2015 the original author or authors., + * {@link org.springframework.stereotype.Component} or on methods, + * annotated with {@link Bean}., + * <p>If this annotation is not present on a Component or Bean definition,, + * the default value of {@link BeanDefinition#ROLE_APPLICATION} will apply., + * <p>If Role is present on a {@link Configuration @Configuration} class,, + * this indicates the role of the configuration class bean definition and, + * does not cascade to all @{@code Bean} methods defined within. This behavior, + * is different than that of the @{@link Lazy} annotation, for example., +++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ProxyAsyncConfiguration.java, +		Class<? extends Annotation> customAsyncAnnotation = this.enableAsync.getClass("annotation");, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/ByteBufferConverterTests.java, + * Copyright 2002-2015 the original author or authors., +, +, +, +, +	private static class ByteArrayToOtherTypeConverter implements Converter<byte[], OtherType> {, +, +	private static class OtherTypeToByteArrayConverter implements Converter<OtherType, byte[]> {, +++ b/spring-core/src/test/java/org/springframework/tests/TestGroup.java, + * Copyright 2002-2015 the original author or authors., +]