[+++ b/spring-aop/src/main/java/org/springframework/aop/support/AbstractRegexpMethodPointcut.java, + * Copyright 2002-2013 the original author or authors., + * <li>patterns: alternative property taking a String array of patterns., + * The result will be the union of these patterns., + * <p>This base class is serializable. Subclasses should declare all fields transient;, + * the {@link #initPatternRepresentation} method will be invoked again on deserialization., +	/**, +	 * Regular expressions to match., +	 */, +	/**, +	 * Regular expressions <strong>not</strong> to match., +	 */, +	 * Matching will be the union of all these; if any match, the pointcut matches., +	 * @see #setPattern, +	 * Matching will be the union of all these; if any match, the pointcut matches., +	 * @see #setExcludedPattern, +	 * Does the pattern at the given index match the given String?, +	 * @param pattern the {@code String} pattern to match, +	 * @param patternIndex index of pattern (starting from 0), +	 * @return {@code true} if there is a match, {@code false} otherwise, +	 * Does the exclusion pattern at the given index match the given String?, +	 * @param pattern the {@code String} pattern to match, +	 * @param patternIndex index of pattern (starting from 0), +	 * @return {@code true} if there is a match, {@code false} otherwise]