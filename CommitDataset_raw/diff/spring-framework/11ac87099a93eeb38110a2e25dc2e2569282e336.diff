[+++ b/src/docs/asciidoc/index.adoc, +and <<web.adoc#webflux, Spring WebFlux>>; and it enables you to, +++ b/src/docs/asciidoc/index.adoc, +and <<web.adoc#webflux, Spring WebFlux>>; and it enables you to, +++ b/src/docs/asciidoc/web.adoc, +This part of the documentation covers support for web applications. As of Spring Framework 5.0, +web applications can run on a traditional Servlet stack (Servlet API + Servlet container), +or on a reactive stack (Reactive Streams API + non-blocking runtime)., +The first few chapters cover the Servlet-based <<mvc,Spring MVC>> web framework, +including <<view,Views>>, <<cors,CORS>>, and <<websocket,WebSocket>> support., +Subsequent chapters cover the <<webflux,Spring WebFlux>> reactive web framework, +including its <<webflux-fn,WebFlux.fn>> functional programming model., +, +include::web/web-flux-functional.adoc[leveloffset=+1], +, +include::web/web-integration.adoc[leveloffset=+1], +++ b/src/docs/asciidoc/index.adoc, +and <<web.adoc#webflux, Spring WebFlux>>; and it enables you to, +++ b/src/docs/asciidoc/web.adoc, +This part of the documentation covers support for web applications. As of Spring Framework 5.0, +web applications can run on a traditional Servlet stack (Servlet API + Servlet container), +or on a reactive stack (Reactive Streams API + non-blocking runtime)., +The first few chapters cover the Servlet-based <<mvc,Spring MVC>> web framework, +including <<view,Views>>, <<cors,CORS>>, and <<websocket,WebSocket>> support., +Subsequent chapters cover the <<webflux,Spring WebFlux>> reactive web framework, +including its <<webflux-fn,WebFlux.fn>> functional programming model., +, +include::web/web-flux-functional.adoc[leveloffset=+1], +, +include::web/web-integration.adoc[leveloffset=+1], +++ b/src/docs/asciidoc/web/web-cors.adoc, += Spring Web MVC CORS Support, +++ b/src/docs/asciidoc/index.adoc, +and <<web.adoc#webflux, Spring WebFlux>>; and it enables you to, +++ b/src/docs/asciidoc/web.adoc, +This part of the documentation covers support for web applications. As of Spring Framework 5.0, +web applications can run on a traditional Servlet stack (Servlet API + Servlet container), +or on a reactive stack (Reactive Streams API + non-blocking runtime)., +The first few chapters cover the Servlet-based <<mvc,Spring MVC>> web framework, +including <<view,Views>>, <<cors,CORS>>, and <<websocket,WebSocket>> support., +Subsequent chapters cover the <<webflux,Spring WebFlux>> reactive web framework, +including its <<webflux-fn,WebFlux.fn>> functional programming model., +, +include::web/web-flux-functional.adoc[leveloffset=+1], +, +include::web/web-integration.adoc[leveloffset=+1], +++ b/src/docs/asciidoc/web/web-cors.adoc, += Spring Web MVC CORS Support, +++ b/src/docs/asciidoc/web/web-flux-functional.adoc, +[[webflux-fn]], += Spring WebFlux Functional Programming Model, +[[webflux-fn-handler-functions]], +== HandlerFunctions, +[[webflux-fn-router-functions]], +== RouterFunctions, +[[webflux-fn-running]], +=== Running a Server, +// TODO: DispatcherHandler, +[[webflux-fn-handler-filter-function]], +== HandlerFilterFunction, +++ b/src/docs/asciidoc/index.adoc, +and <<web.adoc#webflux, Spring WebFlux>>; and it enables you to, +++ b/src/docs/asciidoc/web.adoc, +This part of the documentation covers support for web applications. As of Spring Framework 5.0, +web applications can run on a traditional Servlet stack (Servlet API + Servlet container), +or on a reactive stack (Reactive Streams API + non-blocking runtime)., +The first few chapters cover the Servlet-based <<mvc,Spring MVC>> web framework, +including <<view,Views>>, <<cors,CORS>>, and <<websocket,WebSocket>> support., +Subsequent chapters cover the <<webflux,Spring WebFlux>> reactive web framework, +including its <<webflux-fn,WebFlux.fn>> functional programming model., +, +include::web/web-flux-functional.adoc[leveloffset=+1], +, +include::web/web-integration.adoc[leveloffset=+1], +++ b/src/docs/asciidoc/web/web-cors.adoc, += Spring Web MVC CORS Support, +++ b/src/docs/asciidoc/web/web-flux-functional.adoc, +[[webflux-fn]], += Spring WebFlux Functional Programming Model, +[[webflux-fn-handler-functions]], +== HandlerFunctions, +[[webflux-fn-router-functions]], +== RouterFunctions, +[[webflux-fn-running]], +=== Running a Server, +// TODO: DispatcherHandler, +[[webflux-fn-handler-filter-function]], +== HandlerFilterFunction, +++ b/src/docs/asciidoc/web/web-flux.adoc, +[[webflux]], += Spring WebFlux framework, +++ b/src/docs/asciidoc/index.adoc, +and <<web.adoc#webflux, Spring WebFlux>>; and it enables you to, +++ b/src/docs/asciidoc/web.adoc, +This part of the documentation covers support for web applications. As of Spring Framework 5.0, +web applications can run on a traditional Servlet stack (Servlet API + Servlet container), +or on a reactive stack (Reactive Streams API + non-blocking runtime)., +The first few chapters cover the Servlet-based <<mvc,Spring MVC>> web framework, +including <<view,Views>>, <<cors,CORS>>, and <<websocket,WebSocket>> support., +Subsequent chapters cover the <<webflux,Spring WebFlux>> reactive web framework]