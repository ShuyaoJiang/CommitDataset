[+++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.http.MediaType;, +			try {, +				MediaType mediaType = MediaType.parseMediaType(contentType);, +				if (mediaType.getCharSet() != null) {, +					this.characterEncoding = mediaType.getCharSet().name();, +				}, +			}, +			catch (Exception ex) {, +				// Try to get charset value anyway, +			}, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.http.MediaType;, +			try {, +				MediaType mediaType = MediaType.parseMediaType(contentType);, +				if (mediaType.getCharSet() != null) {, +					this.characterEncoding = mediaType.getCharSet().name();, +				}, +			}, +			catch (Exception ex) {, +				// Try to get charset value anyway, +			}, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.http.MediaType;, +			try {, +				MediaType mediaType = MediaType.parseMediaType(contentType);, +				if (mediaType.getCharSet() != null) {, +					this.characterEncoding = mediaType.getCharSet().name();, +					this.charset = true;, +				}, +			}, +			catch (Exception ex) {, +				// Try to get charset value anyway, +			}, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.http.MediaType;, +			try {, +				MediaType mediaType = MediaType.parseMediaType(contentType);, +				if (mediaType.getCharSet() != null) {, +					this.characterEncoding = mediaType.getCharSet().name();, +				}, +			}, +			catch (Exception ex) {, +				// Try to get charset value anyway, +			}, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.http.MediaType;, +			try {, +				MediaType mediaType = MediaType.parseMediaType(contentType);, +				if (mediaType.getCharSet() != null) {, +					this.characterEncoding = mediaType.getCharSet().name();, +					this.charset = true;, +				}, +			}, +			catch (Exception ex) {, +				// Try to get charset value anyway, +			}, +++ b/spring-test/src/test/java/org/springframework/mock/web/MockHttpServletRequestTests.java, +	// SPR-12677, +, +	@Test, +	public void setContentTypeHeaderWithMoreComplexCharsetSyntax() {, +		String contentType = "test/plain;charset=\"utf-8\";foo=\"charset=bar\";foocharset=bar;foo=bar";, +		request.addHeader("Content-Type", contentType);, +		assertEquals(contentType, request.getContentType());, +		assertEquals(contentType, request.getHeader("Content-Type"));, +		assertEquals("UTF-8", request.getCharacterEncoding());, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.http.MediaType;, +			try {, +				MediaType mediaType = MediaType.parseMediaType(contentType);, +				if (mediaType.getCharSet() != null) {, +					this.characterEncoding = mediaType.getCharSet().name();, +				}, +			}, +			catch (Exception ex) {, +				// Try to get charset value anyway, +			}, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.http.MediaType;, +			try {, +				MediaType mediaType = MediaType.parseMediaType(contentType);, +				if (mediaType.getCharSet() != null) {, +					this.characterEncoding = mediaType.getCharSet().name();, +					this.charset = true;, +				}, +			}, +			catch (Exception ex) {, +				// Try to get charset value anyway, +			}, +++ b/spring-test/src/test/java/org/springframework/mock/web/MockHttpServletRequestTests.java]