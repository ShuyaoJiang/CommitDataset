[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +			"javax.validation.Validator", AnnotationDrivenBeanDefinitionParser.class.getClassLoader());, +		annMappingDef.getPropertyValues().add("detectInterceptors", true);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +			"javax.validation.Validator", AnnotationDrivenBeanDefinitionParser.class.getClassLoader());, +		annMappingDef.getPropertyValues().add("detectInterceptors", true);, +++ /dev/null, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +			"javax.validation.Validator", AnnotationDrivenBeanDefinitionParser.class.getClassLoader());, +		annMappingDef.getPropertyValues().add("detectInterceptors", true);, +++ /dev/null, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/MvcNamespaceHandler.java, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +			"javax.validation.Validator", AnnotationDrivenBeanDefinitionParser.class.getClassLoader());, +		annMappingDef.getPropertyValues().add("detectInterceptors", true);, +++ /dev/null, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/MvcNamespaceHandler.java, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java, +			handlerMappingDef.getPropertyValues().add("detectInterceptors", true);			, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +			"javax.validation.Validator", AnnotationDrivenBeanDefinitionParser.class.getClassLoader());, +		annMappingDef.getPropertyValues().add("detectInterceptors", true);, +++ /dev/null, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/MvcNamespaceHandler.java, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java, +			handlerMappingDef.getPropertyValues().add("detectInterceptors", true);			, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java, +	private boolean detectInterceptors;, +	/**, +	 * Configure whether this handler mapping should detect interceptors registered in the WebApplicationContext., +	 * If true, {@link HandlerInterceptor} and {@link WebRequestInterceptor} beans will be detected by type and added to the interceptors list., +	 * Default is false., +	 * @param detectInterceptors the detect interceptors flag, +	 */, +	public void setDetectInterceptors(boolean detectInterceptors) {, +		this.detectInterceptors = detectInterceptors;, +	}, +		if (this.detectInterceptors) {, +			Map<String, HandlerInterceptor> handlerInterceptors = getApplicationContext().getBeansOfType(HandlerInterceptor.class);, +			if (handlerInterceptors != null && !handlerInterceptors.isEmpty()) {, +				this.interceptors.addAll(handlerInterceptors.values());, +			}, +			Map<String, WebRequestInterceptor> webInterceptors = getApplicationContext().getBeansOfType(WebRequestInterceptor.class);, +			if (webInterceptors != null && !webInterceptors.isEmpty()) {, +				for (WebRequestInterceptor interceptor : webInterceptors.values()) {, +					this.interceptors.add(new WebRequestHandlerInterceptorAdapter(interceptor));			, +				}, +			}			, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +			"javax.validation.Validator", AnnotationDrivenBeanDefinitionParser.class.getClassLoader());, +		annMappingDef.getPropertyValues().add("detectInterceptors", true);, +++ /dev/null, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/MvcNamespaceHandler.java, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java, +			handlerMappingDef.getPropertyValues().add("detectInterceptors", true);			, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java, +	private boolean detectInterceptors;, +	/**, +	 * Configure whether this handler mapping should detect interceptors registered in the WebApplicationContext., +	 * If true, {@link HandlerInterceptor} and {@link WebRequestInterceptor} beans will be detected by type and added to the interceptors list., +	 * Default is false., +	 * @param detectInterceptors the detect interceptors flag, +	 */, +	public void setDetectInterceptors(boolean detectInterceptors) {, +		this.detectInterceptors = detectInterceptors;, +	}, +		if (this.detectInterceptors) {, +			Map<String, HandlerInterceptor> handlerInterceptors = getApplicationContext().getBeansOfType(HandlerInterceptor.class);, +			if (handlerInterceptors != null && !handlerInterceptors.isEmpty()) {, +				this.interceptors.addAll(handlerInterceptors.values());, +			}, +			Map<String, WebRequestInterceptor> webInterceptors = getApplicationContext().getBeansOfType(WebRequestInterceptor.class);, +			if (webInterceptors != null && !webInterceptors.isEmpty()) {, +				for (WebRequestInterceptor interceptor : webInterceptors.values()) {, +					this.interceptors.add(new WebRequestHandlerInterceptorAdapter(interceptor));			, +				}, +			}			, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/config/MvcNamespaceTests.java, +import org.springframework.web.context.request.Log4jNestedDiagnosticContextInterceptor;, +import org.springframework.web.servlet.handler.WebRequestHandlerInterceptorAdapter;, +		assertEquals(7, container.getBeanDefinitionCount());, +		assertEquals(4, chain.getInterceptors().length);, +		assertTrue(chain.getInterceptors()[3] instanceof WebRequestHandlerInterceptorAdapter);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +			"javax.validation.Validator", AnnotationDrivenBeanDefinitionParser.class.getClassLoader());, +		annMappingDef.getPropertyValues().add("detectInterceptors", true);, +++ /dev/null, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/MvcNamespaceHandler.java, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java, +			handlerMappingDef.getPropertyValues().add("detectInterceptors", true);			, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java, +	private boolean detectInterceptors;, +	/**, +	 * Configure whether this handler mapping should detect interceptors registered in the WebApplicationContext., +	 * If true, {@link HandlerInterceptor} and {@link WebRequestInterceptor} beans will be detected by type and added to the interceptors list., +	 * Default is false., +	 * @param detectInterceptors the detect interceptors flag, +	 */, +	public void setDetectInterceptors(boolean detectInterceptors) {, +		this.detectInterceptors = detectInterceptors;]