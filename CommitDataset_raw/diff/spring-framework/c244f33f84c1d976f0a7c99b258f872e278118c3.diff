[+++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, +import org.springframework.util.StringUtils;, +			return !StringUtils.hasLength(path);, +		else if (!StringUtils.hasLength(path)) {, +		else if (!StringUtils.hasLength(path)) {, +			return !StringUtils.hasLength(path);, +		else if (!StringUtils.hasLength(path)) {, +		else if (!StringUtils.hasLength(path)) {, +		if (!StringUtils.hasLength(this.patternString)) {, +			if (!StringUtils.hasLength(pattern2string)) {, +		else if (!StringUtils.hasLength(pattern2string)) {, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, +import org.springframework.util.StringUtils;, +			return !StringUtils.hasLength(path);, +		else if (!StringUtils.hasLength(path)) {, +		else if (!StringUtils.hasLength(path)) {, +			return !StringUtils.hasLength(path);, +		else if (!StringUtils.hasLength(path)) {, +		else if (!StringUtils.hasLength(path)) {, +		if (!StringUtils.hasLength(this.patternString)) {, +			if (!StringUtils.hasLength(pattern2string)) {, +		else if (!StringUtils.hasLength(pattern2string)) {, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/RegexPathElement.java, + * are {@link RegexPathElement} path elements. Derived from the general, + * {@link org.springframework.util.AntPathMatcher} approach., +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, +import org.springframework.util.StringUtils;, +			return !StringUtils.hasLength(path);, +		else if (!StringUtils.hasLength(path)) {, +		else if (!StringUtils.hasLength(path)) {, +			return !StringUtils.hasLength(path);, +		else if (!StringUtils.hasLength(path)) {, +		else if (!StringUtils.hasLength(path)) {, +		if (!StringUtils.hasLength(this.patternString)) {, +			if (!StringUtils.hasLength(pattern2string)) {, +		else if (!StringUtils.hasLength(pattern2string)) {, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/RegexPathElement.java, + * are {@link RegexPathElement} path elements. Derived from the general, + * {@link org.springframework.util.AntPathMatcher} approach., +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/SeparatorPathElement.java, +					matched = (candidateIndex + 1 == matchingContext.candidateLength);, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, +import org.springframework.util.StringUtils;, +			return !StringUtils.hasLength(path);, +		else if (!StringUtils.hasLength(path)) {, +		else if (!StringUtils.hasLength(path)) {, +			return !StringUtils.hasLength(path);, +		else if (!StringUtils.hasLength(path)) {, +		else if (!StringUtils.hasLength(path)) {, +		if (!StringUtils.hasLength(this.patternString)) {, +			if (!StringUtils.hasLength(pattern2string)) {, +		else if (!StringUtils.hasLength(pattern2string)) {, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/RegexPathElement.java, + * are {@link RegexPathElement} path elements. Derived from the general, + * {@link org.springframework.util.AntPathMatcher} approach., +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/SeparatorPathElement.java, +					matched = (candidateIndex + 1 == matchingContext.candidateLength);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +			Assert.isTrue(!(body instanceof Publisher),, +					"Please specify the element class by using body(Publisher, Class)");, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/PathPattern.java, +import org.springframework.util.StringUtils;, +			return !StringUtils.hasLength(path);, +		else if (!StringUtils.hasLength(path)) {, +		else if (!StringUtils.hasLength(path)) {, +			return !StringUtils.hasLength(path);, +		else if (!StringUtils.hasLength(path)) {, +		else if (!StringUtils.hasLength(path)) {, +		if (!StringUtils.hasLength(this.patternString)) {, +			if (!StringUtils.hasLength(pattern2string)) {, +		else if (!StringUtils.hasLength(pattern2string)) {, +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/RegexPathElement.java, + * are {@link RegexPathElement} path elements. Derived from the general, + * {@link org.springframework.util.AntPathMatcher} approach., +++ b/spring-web/src/main/java/org/springframework/web/util/pattern/SeparatorPathElement.java, +					matched = (candidateIndex + 1 == matchingContext.candidateLength);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java, +			Assert.isTrue(!(body instanceof Publisher),, +					"Please specify the element class by using body(Publisher, Class)");, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/WebClient.java, +, +, +]