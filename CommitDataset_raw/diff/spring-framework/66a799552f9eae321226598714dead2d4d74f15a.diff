[+++ b/org.springframework.core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, +	public void setAll(Map<K, V> values) {, +		for (Entry<K, V> entry : values.entrySet()) {, +			set(entry.getKey(), entry.getValue());, +		}, +	}, +, +	public Map<K, V> toSingleValueMap() {, +		LinkedHashMap<K, V> singleValueMap = new LinkedHashMap<K,V>(this.targetMap.size());, +		for (Entry<K, List<V>> entry : targetMap.entrySet()) {, +			singleValueMap.put(entry.getKey(), entry.getValue().get(0));, +		}, +		return singleValueMap;, +	}, +++ b/org.springframework.core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, +	public void setAll(Map<K, V> values) {, +		for (Entry<K, V> entry : values.entrySet()) {, +			set(entry.getKey(), entry.getValue());, +		}, +	}, +, +	public Map<K, V> toSingleValueMap() {, +		LinkedHashMap<K, V> singleValueMap = new LinkedHashMap<K,V>(this.targetMap.size());, +		for (Entry<K, List<V>> entry : targetMap.entrySet()) {, +			singleValueMap.put(entry.getKey(), entry.getValue().get(0));, +		}, +		return singleValueMap;, +	}, +++ b/org.springframework.core/src/main/java/org/springframework/util/MultiValueMap.java, +	/**, +	 * Set the given values under., +	 * @param values the values., +	 */, +	void setAll(Map<K, V> values);, +, +	/**, +	 * Returns the first values contained in this {@code MultiValueMap}., +	 * @return a single value representation of this map, +	 */, +	Map<K, V> toSingleValueMap();, +, +++ b/org.springframework.core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, +	public void setAll(Map<K, V> values) {, +		for (Entry<K, V> entry : values.entrySet()) {, +			set(entry.getKey(), entry.getValue());, +		}, +	}, +, +	public Map<K, V> toSingleValueMap() {, +		LinkedHashMap<K, V> singleValueMap = new LinkedHashMap<K,V>(this.targetMap.size());, +		for (Entry<K, List<V>> entry : targetMap.entrySet()) {, +			singleValueMap.put(entry.getKey(), entry.getValue().get(0));, +		}, +		return singleValueMap;, +	}, +++ b/org.springframework.core/src/main/java/org/springframework/util/MultiValueMap.java, +	/**, +	 * Set the given values under., +	 * @param values the values., +	 */, +	void setAll(Map<K, V> values);, +, +	/**, +	 * Returns the first values contained in this {@code MultiValueMap}., +	 * @return a single value representation of this map, +	 */, +	Map<K, V> toSingleValueMap();, +, +++ b/org.springframework.test/src/main/java/org/springframework/mock/web/MockMultipartHttpServletRequest.java, +import java.util.List;, +import org.springframework.util.MultiValueMap;, +import org.springframework.util.LinkedMultiValueMap;, + * @author Arjen Poutsma, +	private final MultiValueMap<String, MultipartFile> multipartFiles = new LinkedMultiValueMap<String, MultipartFile>();, +		this.multipartFiles.add(file.getName(), file);, +		return this.multipartFiles.getFirst(name);, +	}, +, +	public List<MultipartFile> getFiles(String name) {, +		List<MultipartFile> multipartFiles = this.multipartFiles.get(name);, +		if (multipartFiles != null) {, +			return multipartFiles;, +		}, +		else {, +			return Collections.emptyList();, +		}, +		return Collections.unmodifiableMap(this.multipartFiles.toSingleValueMap());, +	}, +, +	public MultiValueMap<String, MultipartFile> getMultiFileMap() {, +		return new LinkedMultiValueMap<String, MultipartFile>(Collections.unmodifiableMap(this.multipartFiles));, +++ b/org.springframework.core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, +	public void setAll(Map<K, V> values) {, +		for (Entry<K, V> entry : values.entrySet()) {, +			set(entry.getKey(), entry.getValue());, +		}, +	}, +, +	public Map<K, V> toSingleValueMap() {, +		LinkedHashMap<K, V> singleValueMap = new LinkedHashMap<K,V>(this.targetMap.size());]