[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +	 * pattern comparator}.) Typically, this means that patterns without wild cards and uri templates will be ordered, +			int info1ParamCount = info1.params.length;, +			int info2ParamCount = info2.params.length;, +			if (info1ParamCount != info2ParamCount) {, +				return info2ParamCount - info1ParamCount;, +			}, +			int info1HeaderCount = info1.headers.length;, +			int info2HeaderCount = info2.headers.length;, +			if (info1HeaderCount != info2HeaderCount) {, +				return info2HeaderCount - info1HeaderCount;, +			}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +	 * pattern comparator}.) Typically, this means that patterns without wild cards and uri templates will be ordered, +			int info1ParamCount = info1.params.length;, +			int info2ParamCount = info2.params.length;, +			if (info1ParamCount != info2ParamCount) {, +				return info2ParamCount - info1ParamCount;, +			}, +			int info1HeaderCount = info1.headers.length;, +			int info2HeaderCount = info2.headers.length;, +			if (info1HeaderCount != info2HeaderCount) {, +				return info2HeaderCount - info1HeaderCount;, +			}, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationControllerTests.java, +	@Test, +	public void ambiguousParams() throws ServletException, IOException {, +		initServlet(AmbiguousParamsController.class);, +, +		MockHttpServletRequest request;// = new MockHttpServletRequest("GET", "/test");, +		MockHttpServletResponse response;// = new MockHttpServletResponse();, +//		servlet.service(request, response);, +//		assertEquals("noParams", response.getContentAsString());, +, +		request = new MockHttpServletRequest("GET", "/test");, +		request.addParameter("myParam", "42");, +		response = new MockHttpServletResponse();, +		servlet.service(request, response);, +		assertEquals("myParam-42", response.getContentAsString());, +	}, +, +	@Controller, +	@RequestMapping("/test*"), +	private static class AmbiguousParamsController {, +, +		@RequestMapping(method = RequestMethod.GET), +		public void noParams(Writer writer) throws IOException {, +			writer.write("noParams");, +		}, +, +		@RequestMapping(params = "myParam"), +		public void param(@RequestParam("myParam") int myParam, Writer writer) throws IOException {, +			writer.write("myParam-" + myParam);, +		}, +, +	}]