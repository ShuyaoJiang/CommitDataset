[+++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +import org.springframework.beans.propertyeditors.ZoneIdEditor;, +	private static Class<?> zoneIdClass;, +, +	static {, +		try {, +			zoneIdClass = PropertyEditorRegistrySupport.class.getClassLoader().loadClass("java.time.ZoneId");, +		}, +		catch (ClassNotFoundException ex) {, +			// Java 8 ZoneId class not available, +			zoneIdClass = null;, +		}, +	}, +, +, +		if (zoneIdClass != null) {, +			this.defaultEditors.put(zoneIdClass, new ZoneIdEditor());, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +import org.springframework.beans.propertyeditors.ZoneIdEditor;, +	private static Class<?> zoneIdClass;, +, +	static {, +		try {, +			zoneIdClass = PropertyEditorRegistrySupport.class.getClassLoader().loadClass("java.time.ZoneId");, +		}, +		catch (ClassNotFoundException ex) {, +			// Java 8 ZoneId class not available, +			zoneIdClass = null;, +		}, +	}, +, +, +		if (zoneIdClass != null) {, +			this.defaultEditors.put(zoneIdClass, new ZoneIdEditor());, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/TimeZoneEditor.java, + * Copyright 2002-2013 the original author or authors., + * TimeZone objects. Exposed the TimeZone ID as a text representation., + * @see ZoneIdEditor, +		TimeZone value = (TimeZone) getValue();, +		return (value != null ? value.getID() : "");, +++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java, +import org.springframework.beans.propertyeditors.ZoneIdEditor;, +	private static Class<?> zoneIdClass;, +, +	static {, +		try {, +			zoneIdClass = PropertyEditorRegistrySupport.class.getClassLoader().loadClass("java.time.ZoneId");, +		}, +		catch (ClassNotFoundException ex) {, +			// Java 8 ZoneId class not available, +			zoneIdClass = null;, +		}, +	}, +, +, +		if (zoneIdClass != null) {, +			this.defaultEditors.put(zoneIdClass, new ZoneIdEditor());, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/TimeZoneEditor.java, + * Copyright 2002-2013 the original author or authors., + * TimeZone objects. Exposed the TimeZone ID as a text representation., + * @see ZoneIdEditor, +		TimeZone value = (TimeZone) getValue();, +		return (value != null ? value.getID() : "");, +++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/ZoneIdEditor.java, +/*, + * Copyright 2002-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.beans.propertyeditors;, +, +import java.beans.PropertyEditorSupport;, +import java.time.ZoneId;, +, +/**, + * Editor for {@code java.time.ZoneId}, translating zone ID Strings into, + * ZoneId objects. Exposed the TimeZone ID as a text representation., + *, + * @author Juergen Hoeller, + * @since 4.0, + * @see java.time.ZoneId, + * @see TimeZoneEditor, + */, +public class ZoneIdEditor extends PropertyEditorSupport {, +, +	@Override]