[+++ b/spring-test/src/main/java/org/springframework/test/util/JsonPathExpectationsHelper.java, + * Copyright 2002-2014 the original author or authors., +import java.lang.reflect.Array;, +import java.lang.reflect.Method;, +import org.springframework.util.Assert;, +import org.springframework.util.ReflectionUtils;, +, + * A helper class for applying assertions via JSON path expressions., + *, + * <p>Based on the <a href="https://github.com/jayway/JsonPath">JsonPath</a>, + * project: requiring version 0.9+, with 1.1+ strongly recommended., + * @author Juergen Hoeller, +	private static Method compileMethod;, +, +	private static Object emptyFilters;, +, +	static {, +		// Reflective bridging between JsonPath 0.9.x and 1.x, +		for (Method candidate : JsonPath.class.getMethods()) {, +			if (candidate.getName().equals("compile")) {, +				Class<?>[] paramTypes = candidate.getParameterTypes();, +				if (paramTypes.length == 2 && paramTypes[0].equals(String.class) && paramTypes[1].isArray()) {, +					compileMethod = candidate;, +					emptyFilters = Array.newInstance(paramTypes[1].getComponentType(), 0);, +					break;, +				}, +			}, +		}, +		Assert.state(compileMethod != null, "Unexpected JsonPath API - no compile(String, ...) method found");, +	}, +, +, +	 * Construct a new JsonPathExpectationsHelper., +	 * @param expression the JsonPath expression, +	 * @param args arguments to parameterize the JSON path expression with, +		this.jsonPath = (JsonPath) ReflectionUtils.invokeMethod(, +				compileMethod, null, this.expression, emptyFilters);, +, +	 * Evaluate the JSON path and assert the resulting value with the given {@code Matcher}., +	 * Apply the JSON path and assert the resulting value., +			if (actualValueList.isEmpty()) {, +	 * Apply the JSON path and assert the resulting value is an array., +]