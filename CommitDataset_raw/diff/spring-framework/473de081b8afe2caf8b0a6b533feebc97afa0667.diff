[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java, +			String lookupPath, HttpServletRequest request) throws ServletException {, +, +, +		Set<RequestMappingInfo> patternMatches = new HashSet<RequestMappingInfo>();, +		Set<RequestMappingInfo> patternAndMethodMatches = new HashSet<RequestMappingInfo>();, +, +				patternMatches.add(info);, +				if (info.getMethodsCondition().getMatchingCondition(request) != null) {, +					patternAndMethodMatches.add(info);, +				}, +				else {, +, +		if (patternMatches.isEmpty()) {, +			return null;, +		else if (patternAndMethodMatches.isEmpty() && !allowedMethods.isEmpty()) {, +, +		Set<MediaType> consumableMediaTypes;, +		Set<MediaType> producibleMediaTypes;, +, +		if (patternAndMethodMatches.isEmpty()) {, +			consumableMediaTypes = getConsumableMediaTypes(request, patternMatches);, +			producibleMediaTypes = getProdicubleMediaTypes(request, patternMatches);, +		}, +		else {, +			consumableMediaTypes = getConsumableMediaTypes(request, patternAndMethodMatches);, +			producibleMediaTypes = getProdicubleMediaTypes(request, patternAndMethodMatches);, +		}, +, +		if (!consumableMediaTypes.isEmpty()) {, +	private Set<MediaType> getConsumableMediaTypes(HttpServletRequest request, Set<RequestMappingInfo> partialMatches) {, +		Set<MediaType> result = new HashSet<MediaType>();, +		for (RequestMappingInfo partialMatch : partialMatches) {, +			if (partialMatch.getConsumesCondition().getMatchingCondition(request) == null) {, +				result.addAll(partialMatch.getConsumesCondition().getConsumableMediaTypes());, +			}, +		}, +		return result;, +	}, +, +	private Set<MediaType> getProdicubleMediaTypes(HttpServletRequest request, Set<RequestMappingInfo> partialMatches) {, +		Set<MediaType> result = new HashSet<MediaType>();, +		for (RequestMappingInfo partialMatch : partialMatches) {, +			if (partialMatch.getProducesCondition().getMatchingCondition(request) == null) {, +				result.addAll(partialMatch.getProducesCondition().getProducibleMediaTypes());, +			}, +		}, +		return result;, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java, +			String lookupPath, HttpServletRequest request) throws ServletException {, +, +, +		Set<RequestMappingInfo> patternMatches = new HashSet<RequestMappingInfo>();, +		Set<RequestMappingInfo> patternAndMethodMatches = new HashSet<RequestMappingInfo>();, +, +				patternMatches.add(info);, +				if (info.getMethodsCondition().getMatchingCondition(request) != null) {, +					patternAndMethodMatches.add(info);, +				}, +				else {, +, +		if (patternMatches.isEmpty()) {, +			return null;, +		else if (patternAndMethodMatches.isEmpty() && !allowedMethods.isEmpty()) {, +, +		Set<MediaType> consumableMediaTypes;, +		Set<MediaType> producibleMediaTypes;, +, +		if (patternAndMethodMatches.isEmpty()) {, +			consumableMediaTypes = getConsumableMediaTypes(request, patternMatches);, +			producibleMediaTypes = getProdicubleMediaTypes(request, patternMatches);, +		}, +		else {, +			consumableMediaTypes = getConsumableMediaTypes(request, patternAndMethodMatches);, +			producibleMediaTypes = getProdicubleMediaTypes(request, patternAndMethodMatches);, +		}, +, +		if (!consumableMediaTypes.isEmpty()) {, +	private Set<MediaType> getConsumableMediaTypes(HttpServletRequest request, Set<RequestMappingInfo> partialMatches) {, +		Set<MediaType> result = new HashSet<MediaType>();, +		for (RequestMappingInfo partialMatch : partialMatches) {, +			if (partialMatch.getConsumesCondition().getMatchingCondition(request) == null) {, +				result.addAll(partialMatch.getConsumesCondition().getConsumableMediaTypes());, +			}, +		}, +		return result;, +	}, +, +	private Set<MediaType> getProdicubleMediaTypes(HttpServletRequest request, Set<RequestMappingInfo> partialMatches) {, +		Set<MediaType> result = new HashSet<MediaType>();, +		for (RequestMappingInfo partialMatch : partialMatches) {, +			if (partialMatch.getProducesCondition().getMatchingCondition(request) == null) {, +				result.addAll(partialMatch.getProducesCondition().getProducibleMediaTypes());, +			}, +		}, +		return result;, +	}, +]