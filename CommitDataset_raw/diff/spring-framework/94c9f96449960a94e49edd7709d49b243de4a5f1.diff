[+++ b/spring-context/src/main/java/org/springframework/context/annotation/Bean.java, + * <h3>Overview</h3>, + *, + * <h3>Scope, DependsOn, Primary, and Lazy</h3>, + * depends-on, primary, or lazy. Rather, it should be used in conjunction with, + * {@link Scope @Scope}, {@link DependsOn @DependsOn}, {@link Primary @Primary},, + * and {@link Lazy @Lazy} annotations to achieve those semantics. For example:, + * <h3>{@code @Bean} <em>Lite</em> Mode</h3>, + * <p>{@code @Bean} methods may also be declared within classes that are <em>not</em>, + * annotated with {@code @Configuration}. For example, bean methods may be declared, + * in a {@code @Component} class or even in a <em>plain old class</em>. In such cases,, + * a {@code @Bean} method will get processed in a configuration class <em>'lite'</em>, + * mode., + *, + * <p>In contrast to bean methods in {@code @Configuration} classes as described, + * above, bean methods in <em>lite</em> mode will be called as plain <em>factory, + * methods</em> from the container (similar to {@code factory-method} declarations, + * in XML) but with <b><em>prototype</em></b> semantics. The containing class remains, + * unmodified in this case, and there are no unusual constraints for factory methods;, + * however, scoping semantics are <b>not</b> respected as described above for, + * 'inter-bean method invocations in this mode. For example:]