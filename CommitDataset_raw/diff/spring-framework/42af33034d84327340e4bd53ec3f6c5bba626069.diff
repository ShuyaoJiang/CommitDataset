[+++ b/spring-test/src/main/java/org/springframework/test/context/support/TestPropertySourceUtils.java, +	/**, +	 * The name of the {@link MapPropertySource} created from <em>inlined properties</em>., +	 * @since 4.1.5, +	 * @see {@link #addInlinedPropertiesToEnvironment(ConfigurableEnvironment, String[])}, +	 */, +	public static final String INLINED_PROPERTIES_PROPERTY_SOURCE_NAME = "Inlined Test Properties";, +, +	 * <p>Property placeholders in resource locations (i.e., <code>${...}</code>), +	 * will be {@linkplain Environment#resolveRequiredPlaceholders(String) resolved}, +	 * against the {@code Environment}., +	 * <p>Each properties file will be converted to a {@link ResourcePropertySource}, +	 * @param context the application context whose environment should be updated;, +	 * never {@code null}, +	 * @param locations the resource locations of {@code Properties} files to add, +	 * to the environment; potentially empty but never {@code null}, +		Assert.notNull(context, "context must not be null");, +		Assert.notNull(locations, "locations must not be null");, +	 * Add the given <em>inlined properties</em> to the {@link Environment} of the, +	 * supplied {@code context}., +	 * @param context the application context whose environment should be updated;, +	 * never {@code null}, +	 * @param inlinedProperties the inlined properties to add to the environment;, +	 * potentially empty but never {@code null}, +		Assert.notNull(context, "context must not be null");, +		Assert.notNull(inlinedProperties, "inlinedProperties must not be null");, +	 * @param environment the environment to update; never {@code null}, +	 * @param inlinedProperties the inlined properties to add to the environment;, +	 * potentially empty but never {@code null}, +	 * @see #INLINED_PROPERTIES_PROPERTY_SOURCE_NAME, +		Assert.notNull(environment, "environment must not be null");, +		Assert.notNull(inlinedProperties, "inlinedProperties must not be null");, +			if (logger.isDebugEnabled()) {, +				logger.debug("Adding inlined properties to environment: ", +						+ ObjectUtils.nullSafeToString(inlinedProperties));, +			}, +			MapPropertySource ps = new MapPropertySource(INLINED_PROPERTIES_PROPERTY_SOURCE_NAME,, +				convertInlinedPropertiesToMap(inlinedProperties));, +	 * @param inlinedProperties the inlined properties to convert; potentially empty, +	 * but never {@code null}, +	 * @return a new, ordered map containing the converted properties, +	 * @see #addInlinedPropertiesToEnvironment(ConfigurableEnvironment, String[]), +		Assert.notNull(inlinedProperties, "inlinedProperties must not be null");, +++ b/spring-test/src/main/java/org/springframework/test/context/support/TestPropertySourceUtils.java, +	/**, +	 * The name of the {@link MapPropertySource} created from <em>inlined properties</em>., +	 * @since 4.1.5, +	 * @see {@link #addInlinedPropertiesToEnvironment(ConfigurableEnvironment, String[])}, +	 */, +	public static final String INLINED_PROPERTIES_PROPERTY_SOURCE_NAME = "Inlined Test Properties";, +, +	 * <p>Property placeholders in resource locations (i.e., <code>${...}</code>), +	 * will be {@linkplain Environment#resolveRequiredPlaceholders(String) resolved}, +	 * against the {@code Environment}., +	 * <p>Each properties file will be converted to a {@link ResourcePropertySource}, +	 * @param context the application context whose environment should be updated;, +	 * never {@code null}, +	 * @param locations the resource locations of {@code Properties} files to add, +	 * to the environment; potentially empty but never {@code null}, +		Assert.notNull(context, "context must not be null");, +		Assert.notNull(locations, "locations must not be null");, +	 * Add the given <em>inlined properties</em> to the {@link Environment} of the, +	 * supplied {@code context}., +	 * @param context the application context whose environment should be updated;, +	 * never {@code null}, +	 * @param inlinedProperties the inlined properties to add to the environment;, +	 * potentially empty but never {@code null}, +		Assert.notNull(context, "context must not be null");, +		Assert.notNull(inlinedProperties, "inlinedProperties must not be null");, +	 * @param environment the environment to update; never {@code null}, +	 * @param inlinedProperties the inlined properties to add to the environment;, +	 * potentially empty but never {@code null}, +	 * @see #INLINED_PROPERTIES_PROPERTY_SOURCE_NAME, +		Assert.notNull(environment, "environment must not be null");, +		Assert.notNull(inlinedProperties, "inlinedProperties must not be null");, +			if (logger.isDebugEnabled()) {, +				logger.debug("Adding inlined properties to environment: ", +						+ ObjectUtils.nullSafeToString(inlinedProperties));, +			}, +			MapPropertySource ps = new MapPropertySource(INLINED_PROPERTIES_PROPERTY_SOURCE_NAME,, +				convertInlinedPropertiesToMap(inlinedProperties));, +	 * @param inlinedProperties the inlined properties to convert; potentially empty, +	 * but never {@code null}, +	 * @return a new, ordered map containing the converted properties, +	 * @see #addInlinedPropertiesToEnvironment(ConfigurableEnvironment, String[]), +		Assert.notNull(inlinedProperties, "inlinedProperties must not be null");, +++ b/spring-test/src/test/java/org/springframework/test/context/env/InlinedPropertiesTestPropertySourceTests.java, +import static org.hamcrest.CoreMatchers.*;, +import static org.springframework.test.context.support.TestPropertySourceUtils.*;, +	private ConfigurableEnvironment env;, +	private String property(String key) {, +		return env.getProperty(key);, +	}, +, +		assertThat(property("foo"), is("bar"));, +		assertThat(property("baz"), is("quux"));, +		assertThat(property("enigma"), is("42"));, +		assertThat(property("x.y.z"), is("a=b=c"));, +		assertThat(property("server.url"), is("http://example.com"));, +		assertThat(property("key.value.1"), is("key=value"));]