[+++ b/spring-core/src/main/java/org/springframework/core/io/VfsResource.java, + * <p>As of Spring 4.0, this class supports VFS 3.x on JBoss AS 6+, + * (package {@code org.jboss.vfs}) and is in particular compatible with, + * JBoss AS 7 and WildFly 8+., +	/**, +	 * Create a new {@code VfsResource} wrapping the given resource handle., +	 * @param resource a {@code org.jboss.vfs.VirtualFile} instance, +	 * (untyped in order to avoid a static dependency on the VFS API), +	 */, +++ b/spring-core/src/main/java/org/springframework/core/io/VfsResource.java, + * <p>As of Spring 4.0, this class supports VFS 3.x on JBoss AS 6+, + * (package {@code org.jboss.vfs}) and is in particular compatible with, + * JBoss AS 7 and WildFly 8+., +	/**, +	 * Create a new {@code VfsResource} wrapping the given resource handle., +	 * @param resource a {@code org.jboss.vfs.VirtualFile} instance, +	 * (untyped in order to avoid a static dependency on the VFS API), +	 */, +++ b/spring-core/src/main/java/org/springframework/core/io/VfsUtils.java, + * Copyright 2002-2018 the original author or authors., + * <p>As of Spring 4.0, this class supports VFS 3.x on JBoss AS 6+, + * (package {@code org.jboss.vfs}) and is in particular compatible with, + * JBoss AS 7 and WildFly 8+., +	private static final Method VIRTUAL_FILE_METHOD_GET_PHYSICAL_FILE;, +			VIRTUAL_FILE_METHOD_GET_PHYSICAL_FILE = virtualFile.getMethod("getPhysicalFile");, +			return (Long) invokeVfsMethod(VIRTUAL_FILE_METHOD_GET_SIZE, vfsResource) > 0;, +		return (File) invokeVfsMethod(VIRTUAL_FILE_METHOD_GET_PHYSICAL_FILE, vfsResource);]