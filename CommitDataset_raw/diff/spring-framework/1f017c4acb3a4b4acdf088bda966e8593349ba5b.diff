[+++ b/spring-test/.springBeans, +	<pluginVersion><![CDATA[3.5.0.201402030809-M2]]></pluginVersion>, +		<config>src/test/java/org/springframework/test/context/junit4/hybrid/hybrid-config.xml</config>, +	<autoconfigs>, +	</autoconfigs>, +++ b/spring-test/.springBeans, +	<pluginVersion><![CDATA[3.5.0.201402030809-M2]]></pluginVersion>, +		<config>src/test/java/org/springframework/test/context/junit4/hybrid/hybrid-config.xml</config>, +	<autoconfigs>, +	</autoconfigs>, +++ b/spring-test/src/main/java/org/springframework/test/context/ContextConfiguration.java, + * Copyright 2002-2014 the original author or authors., + * <em>either</em> path-based <em>or</em> class-based resources. As of Spring, + * 4.0.4, {@linkplain #loader context loaders} may choose to support path-based, + * <em>and</em> class-based resources simultaneously. Consequently, + * resource locations (via the {@link #locations} or {@link #value} attribute), + * <em>or</em> annotated classes (via the {@link #classes} attribute). Note,, + * however, that most implementations of {@link SmartContextLoader} only support, + * a single resource type., +	 * <p>This attribute may <strong>not</strong> be used in conjunction with, +	 * {@link #locations}, but it may be used instead of {@link #locations}., +	 * {@link #value}, but it may be used instead of {@link #value}., +++ b/spring-test/.springBeans, +	<pluginVersion><![CDATA[3.5.0.201402030809-M2]]></pluginVersion>, +		<config>src/test/java/org/springframework/test/context/junit4/hybrid/hybrid-config.xml</config>, +	<autoconfigs>, +	</autoconfigs>, +++ b/spring-test/src/main/java/org/springframework/test/context/ContextConfiguration.java, + * Copyright 2002-2014 the original author or authors., + * <em>either</em> path-based <em>or</em> class-based resources. As of Spring, + * 4.0.4, {@linkplain #loader context loaders} may choose to support path-based, + * <em>and</em> class-based resources simultaneously. Consequently, + * resource locations (via the {@link #locations} or {@link #value} attribute), + * <em>or</em> annotated classes (via the {@link #classes} attribute). Note,, + * however, that most implementations of {@link SmartContextLoader} only support, + * a single resource type., +	 * <p>This attribute may <strong>not</strong> be used in conjunction with, +	 * {@link #locations}, but it may be used instead of {@link #locations}., +	 * {@link #value}, but it may be used instead of {@link #value}., +++ b/spring-test/src/main/java/org/springframework/test/context/ContextConfigurationAttributes.java, + * Copyright 2002-2014 the original author or authors., + * {@code ContextConfigurationAttributes} encapsulates the context configuration, + * attributes declared via {@link ContextConfiguration @ContextConfiguration}., +	 * supplied {@link AnnotationAttributes} (parsed from a, +	 * {@link ContextConfiguration @ContextConfiguration} annotation) and, +	 * the {@linkplain Class test class} that declared them., +	 * {@code null}, +	 * {@code null}, +	 * {@code null}, +		if (!ObjectUtils.isEmpty(locations) && !ObjectUtils.isEmpty(classes) && logger.isDebugEnabled()) {, +			logger.debug(String.format(, +						+ "and 'classes' %s attributes. Most SmartContextLoader implementations support ", +						+ "only one declaration of resources per @ContextConfiguration annotation.",, +				declaringClass.getName(), ObjectUtils.nullSafeToString(locations),, +				ObjectUtils.nullSafeToString(classes)));, +++ b/spring-test/.springBeans, +	<pluginVersion><![CDATA[3.5.0.201402030809-M2]]></pluginVersion>, +		<config>src/test/java/org/springframework/test/context/junit4/hybrid/hybrid-config.xml</config>, +	<autoconfigs>, +	</autoconfigs>, +++ b/spring-test/src/main/java/org/springframework/test/context/ContextConfiguration.java, + * Copyright 2002-2014 the original author or authors., + * <em>either</em> path-based <em>or</em> class-based resources. As of Spring, + * 4.0.4, {@linkplain #loader context loaders} may choose to support path-based, + * <em>and</em> class-based resources simultaneously. Consequently, + * resource locations (via the {@link #locations} or {@link #value} attribute), + * <em>or</em> annotated classes (via the {@link #classes} attribute). Note,, + * however, that most implementations of {@link SmartContextLoader} only support, + * a single resource type., +	 * <p>This attribute may <strong>not</strong> be used in conjunction with, +	 * {@link #locations}, but it may be used instead of {@link #locations}., +	 * {@link #value}, but it may be used instead of {@link #value}., +++ b/spring-test/src/main/java/org/springframework/test/context/ContextConfigurationAttributes.java, + * Copyright 2002-2014 the original author or authors., + * {@code ContextConfigurationAttributes} encapsulates the context configuration, + * attributes declared via {@link ContextConfiguration @ContextConfiguration}., +	 * supplied {@link AnnotationAttributes} (parsed from a, +	 * {@link ContextConfiguration @ContextConfiguration} annotation) and, +	 * the {@linkplain Class test class} that declared them., +	 * {@code null}, +	 * {@code null}, +	 * {@code null}, +		if (!ObjectUtils.isEmpty(locations) && !ObjectUtils.isEmpty(classes) && logger.isDebugEnabled()) {, +			logger.debug(String.format(, +						+ "and 'classes' %s attributes. Most SmartContextLoader implementations support ", +						+ "only one declaration of resources per @ContextConfiguration annotation.",, +				declaringClass.getName(), ObjectUtils.nullSafeToString(locations),, +				ObjectUtils.nullSafeToString(classes)));, +++ b/spring-test/src/main/java/org/springframework/test/context/MergedContextConfiguration.java, +	 * Determine if this {@code MergedContextConfiguration} instance has, +	 * path-based resource locations., +	 *, +	 * @return {@code true} if the {@link #getLocations() locations} array is not empty, +	 * @since 4.0.4, +	 * @see #hasResources(), +	 * @see #hasClasses(), +	 */, +	public boolean hasLocations() {, +		return !ObjectUtils.isEmpty(getLocations());, +	}]