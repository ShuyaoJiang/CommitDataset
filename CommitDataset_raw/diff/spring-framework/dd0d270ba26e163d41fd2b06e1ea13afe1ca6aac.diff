[+++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, +	 * @see #isDisconnectedClientError(Throwable), +					handleFailure(response, ex);, +	private void handleFailure(ServerHttpResponse response, Throwable ex) {, +		boolean statusCodeChanged = response.setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR);, +		if (isDisconnectedClientError(ex)) {, +		else if (!statusCodeChanged) {, +			logger.error("Unhandled failure: " + ex.getMessage() + ", " +, +					"response already committed with status=" + response.getStatusCode());, +		}, +	private boolean isDisconnectedClientError(Throwable ex)  {, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, +	 * @see #isDisconnectedClientError(Throwable), +					handleFailure(response, ex);, +	private void handleFailure(ServerHttpResponse response, Throwable ex) {, +		boolean statusCodeChanged = response.setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR);, +		if (isDisconnectedClientError(ex)) {, +		else if (!statusCodeChanged) {, +			logger.error("Unhandled failure: " + ex.getMessage() + ", " +, +					"response already committed with status=" + response.getStatusCode());, +		}, +	private boolean isDisconnectedClientError(Throwable ex)  {, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java, +import org.springframework.http.HttpStatus;, +			HttpStatus status = ((ResponseStatusException) ex).getStatus();, +			if (exchange.getResponse().setStatusCode(status)) {, +				logger.trace(ex.getMessage());, +		}, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, +	 * @see #isDisconnectedClientError(Throwable), +					handleFailure(response, ex);, +	private void handleFailure(ServerHttpResponse response, Throwable ex) {, +		boolean statusCodeChanged = response.setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR);, +		if (isDisconnectedClientError(ex)) {, +		else if (!statusCodeChanged) {, +			logger.error("Unhandled failure: " + ex.getMessage() + ", " +, +					"response already committed with status=" + response.getStatusCode());, +		}, +	private boolean isDisconnectedClientError(Throwable ex)  {, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java, +import org.springframework.http.HttpStatus;, +			HttpStatus status = ((ResponseStatusException) ex).getStatus();, +			if (exchange.getResponse().setStatusCode(status)) {, +				logger.trace(ex.getMessage());, +		}, +++ b/spring-web/src/test/java/org/springframework/web/server/handler/ResponseStatusExceptionHandlerTests.java, +		Mono<Void> mono = this.exchange.getResponse().setComplete(), +				.then(this.handler.handle(this.exchange, ex));, +		StepVerifier.create(mono).consumeErrorWith(actual -> assertSame(ex, actual)).verify();]