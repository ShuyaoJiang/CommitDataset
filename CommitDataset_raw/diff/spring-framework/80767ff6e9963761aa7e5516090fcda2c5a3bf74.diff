[+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/ResponseStatus.java, + * method is invoked., + *, + * <p><strong>Note:</strong> when using this annotation on an exception class,, + * or when setting the {@code reason} attribute of the annotation,, + * the {@code HttpServletResponse.sendError} method will be used., + *, + * With {@code HttpServletResponse.sendError}, the response is considered, + * complete and should not be written to any further., + * Furthermore servlet container will typically write an HTML error page, + * therefore making the use of a reason unsuitable for REST APIs., + * For such cases prefer the use of {@link org.springframework.http.ResponseEntity}, + * as a return type and avoid {@code ResponseStatus} altogether., + * @see javax.servlet.http.HttpServletResponse#sendError(int, String), +	 * @see javax.servlet.http.HttpServletResponse#sendError(int), +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/ResponseStatus.java, + * method is invoked., + *, + * <p><strong>Note:</strong> when using this annotation on an exception class,, + * or when setting the {@code reason} attribute of the annotation,, + * the {@code HttpServletResponse.sendError} method will be used., + *, + * With {@code HttpServletResponse.sendError}, the response is considered, + * complete and should not be written to any further., + * Furthermore servlet container will typically write an HTML error page, + * therefore making the use of a reason unsuitable for REST APIs., + * For such cases prefer the use of {@link org.springframework.http.ResponseEntity}, + * as a return type and avoid {@code ResponseStatus} altogether., + * @see javax.servlet.http.HttpServletResponse#sendError(int, String), +	 * @see javax.servlet.http.HttpServletResponse#sendError(int), +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.java, +			response.sendError(statusCode);, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/ResponseStatus.java, + * method is invoked., + *, + * <p><strong>Note:</strong> when using this annotation on an exception class,, + * or when setting the {@code reason} attribute of the annotation,, + * the {@code HttpServletResponse.sendError} method will be used., + *, + * With {@code HttpServletResponse.sendError}, the response is considered, + * complete and should not be written to any further., + * Furthermore servlet container will typically write an HTML error page, + * therefore making the use of a reason unsuitable for REST APIs., + * For such cases prefer the use of {@link org.springframework.http.ResponseEntity}, + * as a return type and avoid {@code ResponseStatus} altogether., + * @see javax.servlet.http.HttpServletResponse#sendError(int, String), +	 * @see javax.servlet.http.HttpServletResponse#sendError(int), +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.java, +			response.sendError(statusCode);, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolverTests.java, +		assertTrue("Response has not been committed", response.isCommitted());, +		assertTrue("Response has not been committed", response.isCommitted());]