[+++ b/org.springframework.core/src/main/java/org/springframework/core/NestedCheckedException.java, + * Copyright 2002-2009 the original author or authors., +	static {, +		// Eagerly load the NestedExceptionUtils class to avoid classloader deadlock, +		// issues on OSGi when calling getMessage(). Reported by Don Brown; SPR-5607., +		NestedExceptionUtils.class.getName();, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/NestedCheckedException.java, + * Copyright 2002-2009 the original author or authors., +	static {, +		// Eagerly load the NestedExceptionUtils class to avoid classloader deadlock, +		// issues on OSGi when calling getMessage(). Reported by Don Brown; SPR-5607., +		NestedExceptionUtils.class.getName();, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/NestedIOException.java, + * Copyright 2002-2009 the original author or authors., + * Subclass of {@link IOException} that properly handles a root cause,, + * <p>Proper root cause handling has not been added to standard IOException before, + * Java 6, which is why we need to do it ourselves for Java 5 compatibility purposes., + *, + * class is unavoidable, as this class needs to derive from IOException., +	static {, +		// Eagerly load the NestedExceptionUtils class to avoid classloader deadlock, +		// issues on OSGi when calling getMessage(). Reported by Don Brown; SPR-5607., +		NestedExceptionUtils.class.getName();, +	}, +, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/NestedCheckedException.java, + * Copyright 2002-2009 the original author or authors., +	static {, +		// Eagerly load the NestedExceptionUtils class to avoid classloader deadlock, +		// issues on OSGi when calling getMessage(). Reported by Don Brown; SPR-5607., +		NestedExceptionUtils.class.getName();, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/NestedIOException.java, + * Copyright 2002-2009 the original author or authors., + * Subclass of {@link IOException} that properly handles a root cause,, + * <p>Proper root cause handling has not been added to standard IOException before, + * Java 6, which is why we need to do it ourselves for Java 5 compatibility purposes., + *, + * class is unavoidable, as this class needs to derive from IOException., +	static {, +		// Eagerly load the NestedExceptionUtils class to avoid classloader deadlock, +		// issues on OSGi when calling getMessage(). Reported by Don Brown; SPR-5607., +		NestedExceptionUtils.class.getName();, +	}, +, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/NestedRuntimeException.java, + * Copyright 2002-2009 the original author or authors., +	static {, +		// Eagerly load the NestedExceptionUtils class to avoid classloader deadlock, +		// issues on OSGi when calling getMessage(). Reported by Don Brown; SPR-5607., +		NestedExceptionUtils.class.getName();, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/NestedCheckedException.java, + * Copyright 2002-2009 the original author or authors., +	static {, +		// Eagerly load the NestedExceptionUtils class to avoid classloader deadlock, +		// issues on OSGi when calling getMessage(). Reported by Don Brown; SPR-5607., +		NestedExceptionUtils.class.getName();, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/NestedIOException.java, + * Copyright 2002-2009 the original author or authors., + * Subclass of {@link IOException} that properly handles a root cause,, + * <p>Proper root cause handling has not been added to standard IOException before, + * Java 6, which is why we need to do it ourselves for Java 5 compatibility purposes., + *, + * class is unavoidable, as this class needs to derive from IOException., +	static {, +		// Eagerly load the NestedExceptionUtils class to avoid classloader deadlock, +		// issues on OSGi when calling getMessage(). Reported by Don Brown; SPR-5607., +		NestedExceptionUtils.class.getName();, +	}, +, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/NestedRuntimeException.java, + * Copyright 2002-2009 the original author or authors., +	static {, +		// Eagerly load the NestedExceptionUtils class to avoid classloader deadlock, +		// issues on OSGi when calling getMessage(). Reported by Don Brown; SPR-5607., +		NestedExceptionUtils.class.getName();, +	}, +, +++ b/org.springframework.web/src/main/java/org/springframework/web/util/NestedServletException.java, + * Copyright 2002-2009 the original author or authors., + * Subclass of {@link ServletException} that properly handles a root cause in terms, + *, + * <p>Note that the plain ServletException doesn't expose its root cause at all,, + * neither in the exception message nor in printed stack traces! While this might, + * be fixed in later Servlet API variants (which even differ per vendor for the, + * same API version), it is not reliably available on Servlet 2.4 (the minimum, + * version required by Spring 3.x), which is why we need to do it ourselves., + * class is unavoidable, as this class needs to derive from ServletException.]