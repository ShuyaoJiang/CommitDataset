[+++ b/spring-core/src/main/java/org/springframework/core/convert/ConversionService.java, +++ b/spring-core/src/main/java/org/springframework/core/convert/ConversionService.java, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +		if ((conversionService instanceof GenericConversionService), +				&& ((GenericConversionService) conversionService).canBypassConvert(, +						sourceType.getElementTypeDescriptor(),, +++ b/spring-core/src/main/java/org/springframework/core/convert/ConversionService.java, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +		if ((conversionService instanceof GenericConversionService), +				&& ((GenericConversionService) conversionService).canBypassConvert(, +						sourceType.getElementTypeDescriptor(),, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, +	/**, +	 * Returns true if conversion between the sourceType and targetType can be bypassed., +	 * More precisely this method will return true if objects of sourceType can be, +	 * converted to the targetType by returning the source object unchanged., +	 * @param sourceType context about the source type to convert from (may be null if source is null), +	 * @param targetType context about the target type to convert to (required), +	 * @return true if conversion can be bypassed, +	 * @throws IllegalArgumentException if targetType is null, +	 * @since 3.2, +	 */]