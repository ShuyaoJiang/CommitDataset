[+++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, +import org.springframework.util.Assert;, +	 * Set the {@code ObjectMapper} for this converter., +	 * If not set, a default {@link ObjectMapper#ObjectMapper() ObjectMapper} is used., +	 * <p>Setting a custom-configured {@code ObjectMapper} is one way to take further, +	 * control of the JSON serialization process. For example, an extended, +	 * {@link com.fasterxml.jackson.databind.ser.SerializerFactory} can be, +	 * configured that provides custom serializers for specific types. The other, +	 * option for refining the serialization process is to use Jackson's provided, +	 * annotations on the types to be serialized, in which case a custom-configured, +	 * ObjectMapper is unnecessary., +	 */, +	public void setObjectMapper(ObjectMapper objectMapper) {, +		Assert.notNull(objectMapper, "ObjectMapper must not be null");, +		this.objectMapper = objectMapper;, +		configurePrettyPrint();, +	}, +, +	/**, +	 * Return the underlying {@code ObjectMapper} for this converter., +	 */, +	public ObjectMapper getObjectMapper() {, +		return this.objectMapper;, +	}, +, +	/**, +++ b/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java, +import org.springframework.util.Assert;, +	 * Set the {@code ObjectMapper} for this converter., +	 * If not set, a default {@link ObjectMapper#ObjectMapper() ObjectMapper} is used., +	 * <p>Setting a custom-configured {@code ObjectMapper} is one way to take further, +	 * control of the JSON serialization process. For example, an extended, +	 * {@link com.fasterxml.jackson.databind.ser.SerializerFactory} can be, +	 * configured that provides custom serializers for specific types. The other, +	 * option for refining the serialization process is to use Jackson's provided, +	 * annotations on the types to be serialized, in which case a custom-configured, +	 * ObjectMapper is unnecessary., +	 */, +	public void setObjectMapper(ObjectMapper objectMapper) {, +		Assert.notNull(objectMapper, "ObjectMapper must not be null");, +		this.objectMapper = objectMapper;, +		configurePrettyPrint();, +	}, +, +	/**, +	 * Return the underlying {@code ObjectMapper} for this converter., +	 */, +	public ObjectMapper getObjectMapper() {, +		return this.objectMapper;, +	}, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, +	 * <p>Setting a custom-configured {@code ObjectMapper} is one way to take further, +	 * control of the JSON serialization process. For example, an extended, +	 * {@link com.fasterxml.jackson.databind.ser.SerializerFactory}, +	 * can be configured that provides custom serializers for specific types., +	 * The other option for refining the serialization process is to use Jackson's, +	 * provided annotations on the types to be serialized, in which case a, +	 * custom-configured ObjectMapper is unnecessary.]