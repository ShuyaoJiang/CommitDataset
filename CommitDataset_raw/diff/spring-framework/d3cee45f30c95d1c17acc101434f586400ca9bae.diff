[+++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/CacheResolverAdapter.java, +/*, + * Copyright 2002-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.cache.jcache.interceptor;, +, +		Assert.notNull(target, "JSR-107 CacheResolver is required");, +, +	 * Return the underlying {@link javax.cache.annotation.CacheResolver}, +	 * that this instance is using., +		javax.cache.Cache<Object, Object> cache = this.target.resolveCache(cacheInvocationContext);, +		if (cache == null) {, +			throw new IllegalStateException("Could not resolve cache for " + context + " using " + this.target);, +		}, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/CacheResolverAdapter.java, +/*, + * Copyright 2002-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.cache.jcache.interceptor;, +, +		Assert.notNull(target, "JSR-107 CacheResolver is required");, +, +	 * Return the underlying {@link javax.cache.annotation.CacheResolver}, +	 * that this instance is using., +		javax.cache.Cache<Object, Object> cache = this.target.resolveCache(cacheInvocationContext);, +		if (cache == null) {, +			throw new IllegalStateException("Could not resolve cache for " + context + " using " + this.target);, +		}, +++ b/spring-context-support/src/test/java/org/springframework/cache/jcache/interceptor/CacheResolverAdapterTests.java, + * Copyright 2002-2018 the original author or authors., +		thrown.expect(IllegalStateException.class);, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/CacheResolverAdapter.java, +/*, + * Copyright 2002-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.cache.jcache.interceptor;, +, +		Assert.notNull(target, "JSR-107 CacheResolver is required");, +, +	 * Return the underlying {@link javax.cache.annotation.CacheResolver}, +	 * that this instance is using., +		javax.cache.Cache<Object, Object> cache = this.target.resolveCache(cacheInvocationContext);, +		if (cache == null) {, +			throw new IllegalStateException("Could not resolve cache for " + context + " using " + this.target);, +		}, +++ b/spring-context-support/src/test/java/org/springframework/cache/jcache/interceptor/CacheResolverAdapterTests.java, + * Copyright 2002-2018 the original author or authors., +		thrown.expect(IllegalStateException.class);, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheResolver.java, + * Copyright 2002-2018 the original author or authors., +	 * @throws IllegalStateException if cache resolution failed, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/CacheResolverAdapter.java, +/*, + * Copyright 2002-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.]