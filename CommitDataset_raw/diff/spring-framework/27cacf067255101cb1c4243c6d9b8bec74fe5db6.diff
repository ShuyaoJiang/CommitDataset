[+++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java, + * Copyright 2002-2014 the original author or authors., + * Contains all the messages that can be produced by the Spring Expression Language., + * Each message has a kind (info, warn, error) and a code number. Tests can be written to, + * The prefix captures the code and the error kind, whilst the position is included, + * if it is known., +			"Constructor call: No suitable constructor found on type {0} for arguments {1}"),, +			"A problem occurred whilst attempting to construct an object of type ''{0}'' using arguments ''{1}''"),, +			"Property or field ''{0}'' cannot be found on null"),, +			"Property or field ''{0}'' cannot be found on object of type ''{1}'' - maybe not public?"),, +			"Property or field ''{0}'' cannot be set on null"),, +			"Property or field ''{0}'' cannot be set on object of type ''{1}'' - maybe not public?"),, +			"Incorrect number of arguments for function, {0} supplied but function takes {1}"),, +			"The argument list of a lambda expression should never have getValue() called upon it"),, +			"A problem occurred whilst attempting to access the property ''{0}'': ''{1}''"),, +			"The function ''{0}'' mapped to an object of type ''{1}'' which cannot be invoked"),, +			"A problem occurred whilst attempting to invoke the function ''{0}'': ''{1}''"),, +			"The operator 'instanceof' needs the right operand to be a class, not a ''{0}''"),, +			"A problem occurred when trying to execute method ''{0}'' on object of type ''{1}'': ''{2}''"),, +			"The operator ''{0}'' is not supported between objects of type ''{1}'' and ''{2}''"),, +			"Method call of ''{0}'' is ambiguous, supported type conversions allow multiple variants to match"),, +			"After parsing a valid expression, there is still more data in the expression: ''{0}''"),, +, +	private final Kind kind;, +, +	private final int code;, +, +	private final String message;, +	 * Produce a complete message including the prefix, the position (if known), +	 * and with the inserts applied to the message., +	 * @param pos the position (ignored and not included in the message if less than 0), +	public static enum Kind { INFO, WARNING, ERROR }, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java, + * Copyright 2002-2014 the original author or authors., + * Contains all the messages that can be produced by the Spring Expression Language., + * Each message has a kind (info, warn, error) and a code number. Tests can be written to, + * The prefix captures the code and the error kind, whilst the position is included, + * if it is known., +			"Constructor call: No suitable constructor found on type {0} for arguments {1}"),, +			"A problem occurred whilst attempting to construct an object of type ''{0}'' using arguments ''{1}''"),, +			"Property or field ''{0}'' cannot be found on null"),, +			"Property or field ''{0}'' cannot be found on object of type ''{1}'' - maybe not public?"),, +			"Property or field ''{0}'' cannot be set on null"),, +			"Property or field ''{0}'' cannot be set on object of type ''{1}'' - maybe not public?"),, +			"Incorrect number of arguments for function, {0} supplied but function takes {1}"),, +			"The argument list of a lambda expression should never have getValue() called upon it"),, +			"A problem occurred whilst attempting to access the property ''{0}'': ''{1}''"),, +			"The function ''{0}'' mapped to an object of type ''{1}'' which cannot be invoked"),, +			"A problem occurred whilst attempting to invoke the function ''{0}'': ''{1}''"),, +			"The operator 'instanceof' needs the right operand to be a class, not a ''{0}''"),, +			"A problem occurred when trying to execute method ''{0}'' on object of type ''{1}'': ''{2}''"),, +			"The operator ''{0}'' is not supported between objects of type ''{1}'' and ''{2}''"),, +			"Method call of ''{0}'' is ambiguous, supported type conversions allow multiple variants to match"),, +			"After parsing a valid expression, there is still more data in the expression: ''{0}''"),, +, +	private final Kind kind;, +, +	private final int code;, +, +	private final String message;, +	 * Produce a complete message including the prefix, the position (if known), +	 * and with the inserts applied to the message., +	 * @param pos the position (ignored and not included in the message if less than 0), +	public static enum Kind { INFO, WARNING, ERROR }, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java, + * Copyright 2002-2014 the original author or authors., + * Simple {@link PropertyAccessor} that uses reflection to access properties, + * for reading and writing., + *, + * <p>A property can be accessed through a public getter method (when being read), + * or a public setter method (when being written), and also as a public field., +	 * Returns {@code null} which means this is a general purpose accessor., +			// Treat it like a property..., +			// The readerCache will only contain gettable properties (let's not worry about setters for now)., +					// Treat it like a property..., +					// The readerCache will only contain gettable properties (let's not worry about setters for now)., +, +	 * Find a field of a certain name on a specified class., +++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java, + * Copyright 2002-2014 the original author or authors., + * Contains all the messages that can be produced by the Spring Expression Language., + * Each message has a kind (info, warn, error) and a code number. Tests can be written to, + * The prefix captures the code and the error kind, whilst the position is included, + * if it is known., +			"Constructor call: No suitable constructor found on type {0} for arguments {1}"),, +			"A problem occurred whilst attempting to construct an object of type ''{0}'' using arguments ''{1}''"),, +			"Property or field ''{0}'' cannot be found on null"),, +			"Property or field ''{0}'' cannot be found on object of type ''{1}'' - maybe not public?"),, +			"Property or field ''{0}'' cannot be set on null"),, +			"Property or field ''{0}'' cannot be set on object of type ''{1}'' - maybe not public?"),, +			"Incorrect number of arguments for function, {0} supplied but function takes {1}"),, +			"The argument list of a lambda expression should never have getValue() called upon it"),, +			"A problem occurred whilst attempting to access the property ''{0}'': ''{1}''"),, +			"The function ''{0}'' mapped to an object of type ''{1}'' which cannot be invoked"),, +			"A problem occurred whilst attempting to invoke the function ''{0}'': ''{1}''"),, +			"The operator 'instanceof' needs the right operand to be a class, not a ''{0}''"),, +			"A problem occurred when trying to execute method ''{0}'' on object of type ''{1}'': ''{2}''"),, +			"The operator ''{0}'' is not supported between objects of type ''{1}'' and ''{2}''"),, +			"Method call of ''{0}'' is ambiguous, supported type conversions allow multiple variants to match"),, +			"After parsing a valid expression, there is still more data in the expression: ''{0}''"),]