[+++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +			BindingImpl binding = (BindingImpl) getBinding(value.getProperty());, +			results.add(binding.setValue(value.getValue()));, +		// implementing Binding, +		, +		public BindingResult setValue(Object value) {, +			if (value instanceof String) {, +				return setStringValue((String) value);, +			} else if (value instanceof String[]) {, +				return setStringValues((String[]) value);, +			} else {, +				return setObjectValue(value);, +		public String[] getCollectionValues() {, +		// internal helpers, +		, +		private BindingResult setStringValue(String formatted) {, +			Formatter formatter;, +			try {, +				formatter = getFormatter();, +			} catch (EvaluationException e) {, +				// could occur the property was not found or is not readable, +				// TODO probably should not handle all EL failures, only type conversion & property not found?, +				return new ExpressionEvaluationErrorResult(property.getExpressionString(), formatted, e);, +			}, +			Object parsed;, +			try {, +				parsed = formatter.parse(formatted, LocaleContextHolder.getLocale());, +			} catch (ParseException e) {, +				return new InvalidFormatResult(property.getExpressionString(), formatted, e);, +			}, +			return setValue(parsed, formatted);, +		}, +		, +		private BindingResult setStringValues(String[] formatted) {, +		private BindingResult setObjectValue(Object value) {, +			return setValue(value, value);, +		}, +		private BindingResult setValue(Object parsedValue, Object userValue) {, +				property.setValue(createEvaluationContext(), parsedValue);, +				return new SuccessResult(property.getExpressionString(), userValue);, +				return new ExpressionEvaluationErrorResult(property.getExpressionString(), userValue, e);, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +			BindingImpl binding = (BindingImpl) getBinding(value.getProperty());, +			results.add(binding.setValue(value.getValue()));, +		// implementing Binding, +		, +		public BindingResult setValue(Object value) {, +			if (value instanceof String) {, +				return setStringValue((String) value);, +			} else if (value instanceof String[]) {, +				return setStringValues((String[]) value);, +			} else {, +				return setObjectValue(value);, +		public String[] getCollectionValues() {, +		// internal helpers, +		, +		private BindingResult setStringValue(String formatted) {, +			Formatter formatter;, +			try {, +				formatter = getFormatter();, +			} catch (EvaluationException e) {, +				// could occur the property was not found or is not readable, +				// TODO probably should not handle all EL failures, only type conversion & property not found?, +				return new ExpressionEvaluationErrorResult(property.getExpressionString(), formatted, e);, +			}, +			Object parsed;, +			try {, +				parsed = formatter.parse(formatted, LocaleContextHolder.getLocale());, +			} catch (ParseException e) {, +				return new InvalidFormatResult(property.getExpressionString(), formatted, e);, +			}, +			return setValue(parsed, formatted);, +		}, +		, +		private BindingResult setStringValues(String[] formatted) {, +		private BindingResult setObjectValue(Object value) {, +			return setValue(value, value);, +		}, +		private BindingResult setValue(Object parsedValue, Object userValue) {, +				property.setValue(createEvaluationContext(), parsedValue);, +				return new SuccessResult(property.getExpressionString(), userValue);, +				return new ExpressionEvaluationErrorResult(property.getExpressionString(), userValue, e);, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binding.java, +	 * Set the property associated with this binding to the value provided., +	 * The value may be a formatted String, a formatted String[] if a collection binding, or an Object of a type that can be coersed to the underlying property type., +	 * @param value the new value to bind, +	BindingResult setValue(Object value);, +	 * If so, a client should call {@link #getCollectionValues()} to display property values in the user interface., +	String[] getCollectionValues();, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +			BindingImpl binding = (BindingImpl) getBinding(value.getProperty());, +			results.add(binding.setValue(value.getValue()));, +		// implementing Binding, +		, +		public BindingResult setValue(Object value) {, +			if (value instanceof String) {, +				return setStringValue((String) value);, +			} else if (value instanceof String[]) {, +				return setStringValues((String[]) value);, +			} else {]