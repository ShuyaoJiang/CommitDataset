[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +				// Cache the merged bean definition for the time being, +				// (it might still get re-merged later on in order to pick up metadata changes), +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +				// Cache the merged bean definition for the time being, +				// (it might still get re-merged later on in order to pick up metadata changes), +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +			throw new IllegalStateException(, +					"Could not obtain value for annotation attribute '" + attributeName + "' on " + annotation, ex);, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +				// Cache the merged bean definition for the time being, +				// (it might still get re-merged later on in order to pick up metadata changes), +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +			throw new IllegalStateException(, +					"Could not obtain value for annotation attribute '" + attributeName + "' on " + annotation, ex);, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/io/ResourceEditor.java, + * Copyright 2002-2017 the original author or authors., +	public ResourceEditor(ResourceLoader resourceLoader, PropertyResolver propertyResolver,, +			boolean ignoreUnresolvablePlaceholders) {, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +				// Cache the merged bean definition for the time being, +				// (it might still get re-merged later on in order to pick up metadata changes), +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +			throw new IllegalStateException(, +					"Could not obtain value for annotation attribute '" + attributeName + "' on " + annotation, ex);, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/io/ResourceEditor.java, + * Copyright 2002-2017 the original author or authors., +	public ResourceEditor(ResourceLoader resourceLoader, PropertyResolver propertyResolver,, +			boolean ignoreUnresolvablePlaceholders) {, +, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationUtilsTests.java, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +		getValue(synthesizeAnnotation(ContextConfigMismatch.class.getAnnotation(ContextConfig.class)));, +	@ContextConfig(value = "foo", location = "bar"), +	interface ContextConfigMismatch {, +	}, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +				// Cache the merged bean definition for the time being, +				// (it might still get re-merged later on in order to pick up metadata changes), +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +			throw new IllegalStateException(, +					"Could not obtain value for annotation attribute '" + attributeName + "' on " + annotation, ex);, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/io/ResourceEditor.java, + * Copyright 2002-2017 the original author or authors., +	public ResourceEditor(ResourceLoader resourceLoader, PropertyResolver propertyResolver,, +			boolean ignoreUnresolvablePlaceholders) {, +, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationUtilsTests.java, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2, +		getValue(synthesizeAnnotation(ContextConfigMismatch.class.getAnnotation(ContextConfig.class)));, +	@ContextConfig(value = "foo", location = "bar"), +	interface ContextConfigMismatch {, +	}, +, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/JettyHttpHandlerAdapter.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +				// Cache the merged bean definition for the time being, +				// (it might still get re-merged later on in order to pick up metadata changes), +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +			throw new IllegalStateException(, +					"Could not obtain value for annotation attribute '" + attributeName + "' on " + annotation, ex);, +		catch (Throwable ex) {, +		catch (Throwable ex) {, +++ b/spring-core/src/main/java/org/springframework/core/io/ResourceEditor.java, + * Copyright 2002-2017 the original author or authors., +	public ResourceEditor(ResourceLoader resourceLoader, PropertyResolver propertyResolver,, +			boolean ignoreUnresolvablePlaceholders) {, +, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationUtilsTests.java, +	// @since 4.2, +	// @since 4.2, +	// @since 4.2]