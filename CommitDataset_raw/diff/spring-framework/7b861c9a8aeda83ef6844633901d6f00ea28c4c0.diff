[+++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, +import com.fasterxml.jackson.dataformat.xml.JacksonXmlModule;, +import com.fasterxml.jackson.dataformat.xml.XmlFactory;, +	private Boolean defaultUseWrapper;, +, +	 * Define if a wrapper will be used for indexed (List, array) properties or not by, +	 * default (only applies to {@link XmlMapper})., +	 * @since 4.3, +	 */, +	public Jackson2ObjectMapperBuilder defaultUseWrapper(boolean defaultUseWrapper) {, +		this.defaultUseWrapper = defaultUseWrapper;, +		return this;, +	}, +, +	/**, +			mapper = (this.defaultUseWrapper == null ? new XmlObjectMapperInitializer().create(), +					: new XmlObjectMapperInitializer().create(this.defaultUseWrapper));, +			return new XmlMapper(xmlInputFactory());, +		}, +, +		public ObjectMapper create(boolean defaultUseWrapper) {, +			JacksonXmlModule module = new JacksonXmlModule();, +			module.setDefaultUseWrapper(defaultUseWrapper);, +			return new XmlMapper(new XmlFactory(xmlInputFactory()), module);, +		}, +, +		private static final XMLInputFactory xmlInputFactory() {, +			return inputFactory;, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, +import com.fasterxml.jackson.dataformat.xml.JacksonXmlModule;, +import com.fasterxml.jackson.dataformat.xml.XmlFactory;, +	private Boolean defaultUseWrapper;, +, +	 * Define if a wrapper will be used for indexed (List, array) properties or not by, +	 * default (only applies to {@link XmlMapper})., +	 * @since 4.3, +	 */, +	public Jackson2ObjectMapperBuilder defaultUseWrapper(boolean defaultUseWrapper) {, +		this.defaultUseWrapper = defaultUseWrapper;, +		return this;, +	}, +, +	/**, +			mapper = (this.defaultUseWrapper == null ? new XmlObjectMapperInitializer().create(), +					: new XmlObjectMapperInitializer().create(this.defaultUseWrapper));, +			return new XmlMapper(xmlInputFactory());, +		}, +, +		public ObjectMapper create(boolean defaultUseWrapper) {, +			JacksonXmlModule module = new JacksonXmlModule();, +			module.setDefaultUseWrapper(defaultUseWrapper);, +			return new XmlMapper(new XmlFactory(xmlInputFactory()), module);, +		}, +, +		private static final XMLInputFactory xmlInputFactory() {, +			return inputFactory;, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.java, +	 * Define if a wrapper will be used for indexed (List, array) properties or not by, +	 * default (only applies to {@link XmlMapper})., +	 * @since 4.3, +	 */, +	public void setDefaultUseWrapper(boolean defaultUseWrapper) {, +		this.builder.defaultUseWrapper(defaultUseWrapper);, +	}, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, +import com.fasterxml.jackson.dataformat.xml.JacksonXmlModule;, +import com.fasterxml.jackson.dataformat.xml.XmlFactory;, +	private Boolean defaultUseWrapper;, +, +	 * Define if a wrapper will be used for indexed (List, array) properties or not by, +	 * default (only applies to {@link XmlMapper})., +	 * @since 4.3, +	 */, +	public Jackson2ObjectMapperBuilder defaultUseWrapper(boolean defaultUseWrapper) {, +		this.defaultUseWrapper = defaultUseWrapper;, +		return this;, +	}, +, +	/**, +			mapper = (this.defaultUseWrapper == null ? new XmlObjectMapperInitializer().create(), +					: new XmlObjectMapperInitializer().create(this.defaultUseWrapper));, +			return new XmlMapper(xmlInputFactory());, +		}, +, +		public ObjectMapper create(boolean defaultUseWrapper) {, +			JacksonXmlModule module = new JacksonXmlModule();, +			module.setDefaultUseWrapper(defaultUseWrapper);, +			return new XmlMapper(new XmlFactory(xmlInputFactory()), module);, +		}, +, +		private static final XMLInputFactory xmlInputFactory() {, +			return inputFactory;, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.java, +	 * Define if a wrapper will be used for indexed (List, array) properties or not by, +	 * default (only applies to {@link XmlMapper})., +	 * @since 4.3, +	 */, +	public void setDefaultUseWrapper(boolean defaultUseWrapper) {]