[+++ b/spring-web/src/main/java/org/springframework/http/converter/AbstractGenericHttpMessageConverter.java, +	public boolean canWrite(Type type, Class<?> clazz, MediaType mediaType) {, +		return canWrite(clazz, mediaType);, +++ b/spring-web/src/main/java/org/springframework/http/converter/AbstractGenericHttpMessageConverter.java, +	public boolean canWrite(Type type, Class<?> clazz, MediaType mediaType) {, +		return canWrite(clazz, mediaType);, +++ b/spring-web/src/main/java/org/springframework/http/converter/GenericHttpMessageConverter.java, +	 * @param type the (potentially generic) type to test for readability, +	 * @param type the (potentially generic) type of object to return. This type must have, +	 * previously been passed to the {@link #canRead canRead} method of this interface,, +	 * @param type the (potentially generic) type to test for writability, can be, +	 * {@code null} if not specified., +	 * @param clazz the source object class to test for writability, +	boolean canWrite(Type type, Class<?> clazz, MediaType mediaType);, +	 * @param t the object to write to the output message. The type of this object must, +	 * have previously been passed to the {@link #canWrite canWrite} method of this, +	 * interface, which must have returned {@code true}., +	 * @param type the (potentially generic) type of object to write. This type must have, +	 * previously been passed to the {@link #canWrite canWrite} method of this interface,, +	 * @param contentType the content type to use when writing. May be {@code null} to, +	 * indicate that the default content type of the converter must be used. If not, +	 * {@code null}, this media type must have previously been passed to the, +	 * {@link #canWrite canWrite} method of this interface, which must have returned, +	 * {@code true}., +++ b/spring-web/src/main/java/org/springframework/http/converter/AbstractGenericHttpMessageConverter.java, +	public boolean canWrite(Type type, Class<?> clazz, MediaType mediaType) {, +		return canWrite(clazz, mediaType);, +++ b/spring-web/src/main/java/org/springframework/http/converter/GenericHttpMessageConverter.java, +	 * @param type the (potentially generic) type to test for readability, +	 * @param type the (potentially generic) type of object to return. This type must have, +	 * previously been passed to the {@link #canRead canRead} method of this interface,, +	 * @param type the (potentially generic) type to test for writability, can be, +	 * {@code null} if not specified., +	 * @param clazz the source object class to test for writability, +	boolean canWrite(Type type, Class<?> clazz, MediaType mediaType);, +	 * @param t the object to write to the output message. The type of this object must, +	 * have previously been passed to the {@link #canWrite canWrite} method of this, +	 * interface, which must have returned {@code true}., +	 * @param type the (potentially generic) type of object to write. This type must have, +	 * previously been passed to the {@link #canWrite canWrite} method of this interface,, +	 * @param contentType the content type to use when writing. May be {@code null} to, +	 * indicate that the default content type of the converter must be used. If not, +	 * {@code null}, this media type must have previously been passed to the, +	 * {@link #canWrite canWrite} method of this interface, which must have returned, +	 * {@code true}., +++ b/spring-web/src/main/java/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.java, +	public boolean canWrite(Type type, Class<?> clazz, MediaType mediaType) {]