[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java, + * Class to manage context meta-data used for the configuration, +	// Should we access insert parameter meta-data info or not, +	// Should we override default for including synonyms for meta-data lookups, +	// The provider of table meta-data, +	 * Specify whether we should access table column meta-data., +	 * Are we accessing table meta-data?, +	 * Process the current meta-data with the provided configuration options., +	 * Compare columns created from meta-data with declared columns and return a reconciled list., +		// database meta-data is not necessarily providing case-sensitive column names, +	 * Build the insert string based on configuration and meta-data information, +	 * Build the array of {@link java.sql.Types} based on configuration and meta-data information., +		Map<String, TableParameterMetaData> parameterMap = new LinkedHashMap<>(parameters.size());, +	 * Does this database support the JDBC 3.0 feature of retrieving generated keys:, +	 * when the JDBC 3.0 feature is not supported:, +	 * @deprecated as of 4.3.15, in favor of {@link #getSimpleQueryForGetGeneratedKey}, +	 */, +	@Deprecated, +	@Nullable, +	public String getSimulationQueryForGetGeneratedKey(String tableName, String keyColumnName) {, +		return getSimpleQueryForGetGeneratedKey(tableName, keyColumnName);, +	}, +, +	/**, +	 * Does this database support a simple query to retrieve generated keys, +	 * when the JDBC 3.0 feature is not supported:, +	public String getSimpleQueryForGetGeneratedKey(String tableName, String keyColumnName) {, +	 * Is a column name String array for retrieving generated keys supported:, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java, + * Class to manage context meta-data used for the configuration, +	// Should we access insert parameter meta-data info or not, +	// Should we override default for including synonyms for meta-data lookups, +	// The provider of table meta-data, +	 * Specify whether we should access table column meta-data., +	 * Are we accessing table meta-data?, +	 * Process the current meta-data with the provided configuration options., +	 * Compare columns created from meta-data with declared columns and return a reconciled list., +		// database meta-data is not necessarily providing case-sensitive column names, +	 * Build the insert string based on configuration and meta-data information, +	 * Build the array of {@link java.sql.Types} based on configuration and meta-data information., +		Map<String, TableParameterMetaData> parameterMap = new LinkedHashMap<>(parameters.size());, +	 * Does this database support the JDBC 3.0 feature of retrieving generated keys:, +	 * when the JDBC 3.0 feature is not supported:, +	 * @deprecated as of 4.3.15, in favor of {@link #getSimpleQueryForGetGeneratedKey}, +	 */, +	@Deprecated, +	@Nullable, +	public String getSimulationQueryForGetGeneratedKey(String tableName, String keyColumnName) {, +		return getSimpleQueryForGetGeneratedKey(tableName, keyColumnName);, +	}, +, +	/**, +	 * Does this database support a simple query to retrieve generated keys, +	 * when the JDBC 3.0 feature is not supported:, +	public String getSimpleQueryForGetGeneratedKey(String tableName, String keyColumnName) {, +	 * Is a column name String array for retrieving generated keys supported:, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java, + * based on configuration options and database meta-data., + *, + * <p>This class provides the base SPI for {@link SimpleJdbcInsert}., +	/** Context used to retrieve and manage database meta-data */, +	 * Specify whether the parameter meta-data for the call should be used., +	 * Compile this JdbcInsert using provided parameters and meta-data plus other settings., +					"Configuration cannot be altered once the class has been compiled or used");, +			final String keyQuery = this.tableMetaDataContext.getSimpleQueryForGetGeneratedKey(, +			Assert.state(keyQuery != null, "Query for simulating get generated keys must not be null");, +	 * defined via meta-data processing., +	 * defined via meta-data processing.]