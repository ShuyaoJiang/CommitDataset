[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/FluxExchangeResult.java, +				.then(Mono.defer(() -> Mono.just(super.getResponseBodyContent()))), +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/FluxExchangeResult.java, +				.then(Mono.defer(() -> Mono.just(super.getResponseBodyContent()))), +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, + * Copyright 2002-2017 the original author or authors., +				.then(Mono.defer(response::setComplete));, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/FluxExchangeResult.java, +				.then(Mono.defer(() -> Mono.just(super.getResponseBodyContent()))), +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, + * Copyright 2002-2017 the original author or authors., +				.then(Mono.defer(response::setComplete));, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/AbstractHandlerMethodMapping.java, +					.then(Mono.defer(() -> {, +					}));, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/FluxExchangeResult.java, +				.then(Mono.defer(() -> Mono.just(super.getResponseBodyContent()))), +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, + * Copyright 2002-2017 the original author or authors., +				.then(Mono.defer(response::setComplete));, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/AbstractHandlerMethodMapping.java, +					.then(Mono.defer(() -> {, +					}));, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.java, +				.then(Mono.defer(() -> this.methodResolver.getRequestMappingMethod(handlerMethod), +						.onErrorResume(exceptionHandler)));]