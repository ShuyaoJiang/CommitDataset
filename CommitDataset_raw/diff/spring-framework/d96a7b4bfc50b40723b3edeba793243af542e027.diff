[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientRequest.java, +		return Optional.ofNullable(attributes().get(name));, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientRequest.java, +		return Optional.ofNullable(attributes().get(name));, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/client/DefaultWebClientTests.java, +	public void withStringAttribute() {, +, +		ClientRequest request = verifyAndGetRequest();, +		assertEquals("bar", request.attribute("foo").get());, +	}, +, +	@Test, +	public void withNullAttribute() {, +		Map<String, Object> actual = new HashMap<>();, +		ExchangeFilterFunction filter = (request, next) -> {, +			actual.putAll(request.attributes());, +			return next.exchange(request);, +		};, +, +		this.builder.filter(filter).build(), +				.get().uri("/path"), +				.attribute("foo", null), +				.exchange();, +, +		assertNull(actual.get("foo"));, +, +		ClientRequest request = verifyAndGetRequest();, +		assertFalse(request.attribute("foo").isPresent());]