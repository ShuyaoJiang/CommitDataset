[+++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +	private static final MultiValueMap<String, String> EMPTY_QUERY_PARAMS =, +			CollectionUtils.unmodifiableMultiValueMap(new LinkedMultiValueMap<>(0));, +, +	 * @param query the query parameters, +			@Nullable MultiValueMap<String, String> query, boolean encoded) {, +		this.path = path != null ? path : NULL_PATH_COMPONENT;, +		this.queryParams = query != null ? CollectionUtils.unmodifiableMultiValueMap(query) : EMPTY_QUERY_PARAMS;, +	private HierarchicalUriComponents(@Nullable String scheme, @Nullable String fragment,, +			@Nullable String userInfo, @Nullable String host, @Nullable String port,, +			PathComponent path, MultiValueMap<String, String> queryParams,, +			EncodeState encodeState, @Nullable UnaryOperator<String> variableEncoder) {, +		this.path = path;, +		this.queryParams = queryParams;, +	/**, +	 * Identical to {@link #encode()} but skipping over URI variable placeholders., +	 * Also {@link #variableEncoder} is initialized with the given charset for, +	 * use later when URI variables are expanded., +	 */, +		MultiValueMap<String, String> queryParamsTo = encodeQueryParams(encoder);, +				hostTo, this.port, pathTo, queryParamsTo, EncodeState.TEMPLATE_ENCODED, this.variableEncoder);, +		MultiValueMap<String, String> queryParamsTo = encodeQueryParams(encoder);, +				hostTo, this.port, pathTo, queryParamsTo, EncodeState.FULLY_ENCODED, null);, +				encodedValues.add(value != null ? encoder.apply(value, Type.QUERY_PARAM) : null);, +		return CollectionUtils.unmodifiableMultiValueMap(result);, +		MultiValueMap<String, String> queryParamsTo = expandQueryParams(uriVariables);, +				hostTo, portTo, pathTo, queryParamsTo, this.encodeState, this.variableEncoder);, +		return CollectionUtils.unmodifiableMultiValueMap(result);, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +	private static final MultiValueMap<String, String> EMPTY_QUERY_PARAMS =, +			CollectionUtils.unmodifiableMultiValueMap(new LinkedMultiValueMap<>(0));, +, +	 * @param query the query parameters, +			@Nullable MultiValueMap<String, String> query, boolean encoded) {, +		this.path = path != null ? path : NULL_PATH_COMPONENT;, +		this.queryParams = query != null ? CollectionUtils.unmodifiableMultiValueMap(query) : EMPTY_QUERY_PARAMS;, +	private HierarchicalUriComponents(@Nullable String scheme, @Nullable String fragment,, +			@Nullable String userInfo, @Nullable String host, @Nullable String port,, +			PathComponent path, MultiValueMap<String, String> queryParams,, +			EncodeState encodeState, @Nullable UnaryOperator<String> variableEncoder) {, +		this.path = path;, +		this.queryParams = queryParams;, +	/**, +	 * Identical to {@link #encode()} but skipping over URI variable placeholders., +	 * Also {@link #variableEncoder} is initialized with the given charset for, +	 * use later when URI variables are expanded., +	 */, +		MultiValueMap<String, String> queryParamsTo = encodeQueryParams(encoder);, +				hostTo, this.port, pathTo, queryParamsTo, EncodeState.TEMPLATE_ENCODED, this.variableEncoder);, +		MultiValueMap<String, String> queryParamsTo = encodeQueryParams(encoder);, +				hostTo, this.port, pathTo, queryParamsTo, EncodeState.FULLY_ENCODED, null);, +				encodedValues.add(value != null ? encoder.apply(value, Type.QUERY_PARAM) : null);, +		return CollectionUtils.unmodifiableMultiValueMap(result);, +		MultiValueMap<String, String> queryParamsTo = expandQueryParams(uriVariables);, +				hostTo, portTo, pathTo, queryParamsTo, this.encodeState, this.variableEncoder);, +		return CollectionUtils.unmodifiableMultiValueMap(result);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +		this.encodeTemplate = other.encodeTemplate;, +		this.charset = other.charset;, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +	private static final MultiValueMap<String, String> EMPTY_QUERY_PARAMS =, +			CollectionUtils.unmodifiableMultiValueMap(new LinkedMultiValueMap<>(0));, +, +	 * @param query the query parameters, +			@Nullable MultiValueMap<String, String> query, boolean encoded) {, +		this.path = path != null ? path : NULL_PATH_COMPONENT;, +		this.queryParams = query != null ? CollectionUtils.unmodifiableMultiValueMap(query) : EMPTY_QUERY_PARAMS;, +	private HierarchicalUriComponents(@Nullable String scheme, @Nullable String fragment,, +			@Nullable String userInfo, @Nullable String host, @Nullable String port,, +			PathComponent path, MultiValueMap<String, String> queryParams,, +			EncodeState encodeState, @Nullable UnaryOperator<String> variableEncoder) {, +		this.path = path;, +		this.queryParams = queryParams;, +	/**, +	 * Identical to {@link #encode()} but skipping over URI variable placeholders., +	 * Also {@link #variableEncoder} is initialized with the given charset for, +	 * use later when URI variables are expanded., +	 */, +		MultiValueMap<String, String> queryParamsTo = encodeQueryParams(encoder);, +				hostTo, this.port, pathTo, queryParamsTo, EncodeState.TEMPLATE_ENCODED, this.variableEncoder);, +		MultiValueMap<String, String> queryParamsTo = encodeQueryParams(encoder);, +				hostTo, this.port, pathTo, queryParamsTo, EncodeState.FULLY_ENCODED, null);, +				encodedValues.add(value != null ? encoder.apply(value, Type.QUERY_PARAM) : null);, +		return CollectionUtils.unmodifiableMultiValueMap(result);, +		MultiValueMap<String, String> queryParamsTo = expandQueryParams(uriVariables);, +				hostTo, portTo, pathTo, queryParamsTo, this.encodeState, this.variableEncoder);, +		return CollectionUtils.unmodifiableMultiValueMap(result);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +		this.encodeTemplate = other.encodeTemplate;, +		this.charset = other.charset;, +++ b/spring-web/src/test/java/org/springframework/web/util/UriComponentsBuilderTests.java, +		builder1.scheme("http").host("e1.com").path("/p1").pathSegment("ps1").queryParam("q1").fragment("f1").encode();, +		builder2.scheme("https").host("e2.com").path("p2").pathSegment("{ps2}").queryParam("q2").fragment("f2");, +		UriComponents result2 = builder2.buildAndExpand("ps2;a");, +		assertEquals("/p1/ps1/p2/ps2%3Ba", result2.getPath());, +++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java, +	private static final MultiValueMap<String, String> EMPTY_QUERY_PARAMS =, +			CollectionUtils.unmodifiableMultiValueMap(new LinkedMultiValueMap<>(0));, +, +	 * @param query the query parameters]