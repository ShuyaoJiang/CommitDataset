[+++ b/spring-test/src/main/java/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.java, +		SmartContextLoader[] candidates = {getXmlLoader(), getAnnotationConfigLoader()};, +, +++ b/spring-test/src/main/java/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.java, +		SmartContextLoader[] candidates = {getXmlLoader(), getAnnotationConfigLoader()};, +, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/InitBinderDataBinderFactory.java, +import org.springframework.util.ObjectUtils;, +		String[] names = ann.value();, +		return ObjectUtils.isEmpty(names) || Arrays.asList(names).contains(binder.getObjectName());, +++ b/spring-test/src/main/java/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.java, +		SmartContextLoader[] candidates = {getXmlLoader(), getAnnotationConfigLoader()};, +, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/InitBinderDataBinderFactory.java, +import org.springframework.util.ObjectUtils;, +		String[] names = ann.value();, +		return ObjectUtils.isEmpty(names) || Arrays.asList(names).contains(binder.getObjectName());, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/InitBinderBindingContext.java, +import org.springframework.util.ObjectUtils;, +					String[] names = ann.value();, +					return ObjectUtils.isEmpty(names) || Arrays.asList(names).contains(dataBinder.getObjectName());, +++ b/spring-test/src/main/java/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.java, +		SmartContextLoader[] candidates = {getXmlLoader(), getAnnotationConfigLoader()};, +, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/InitBinderDataBinderFactory.java, +import org.springframework.util.ObjectUtils;, +		String[] names = ann.value();, +		return ObjectUtils.isEmpty(names) || Arrays.asList(names).contains(binder.getObjectName());, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/InitBinderBindingContext.java, +import org.springframework.util.ObjectUtils;, +					String[] names = ann.value();, +					return ObjectUtils.isEmpty(names) || Arrays.asList(names).contains(dataBinder.getObjectName());, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/HandlersBeanDefinitionParser.java, +			String[] mappings = StringUtils.tokenizeToStringArray(pathAttribute, ",");, +			String[] mappings = StringUtils.tokenizeToStringArray(pathAttribute, ",");]