[+++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java, + * Copyright 2002-2010 the original author or authors., +							ps.setClob(paramIndex, new InputStreamReader(asciiStream, "US-ASCII"), contentLength);, +							ps.setClob(paramIndex, new PassThroughClob(asciiStream, contentLength));, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java, + * Copyright 2002-2010 the original author or authors., +							ps.setClob(paramIndex, new InputStreamReader(asciiStream, "US-ASCII"), contentLength);, +							ps.setClob(paramIndex, new PassThroughClob(asciiStream, contentLength));, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/support/lob/LobCreator.java, + * Copyright 2002-2010 the original author or authors., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java, + * Copyright 2002-2010 the original author or authors., +							ps.setClob(paramIndex, new InputStreamReader(asciiStream, "US-ASCII"), contentLength);, +							ps.setClob(paramIndex, new PassThroughClob(asciiStream, contentLength));, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/support/lob/LobCreator.java, + * Copyright 2002-2010 the original author or authors., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/support/lob/PassThroughBlob.java, + * Copyright 2002-2010 the original author or authors., +		// no-op, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java, + * Copyright 2002-2010 the original author or authors., +							ps.setClob(paramIndex, new InputStreamReader(asciiStream, "US-ASCII"), contentLength);, +							ps.setClob(paramIndex, new PassThroughClob(asciiStream, contentLength));, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/support/lob/LobCreator.java, + * Copyright 2002-2010 the original author or authors., +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/support/lob/PassThroughBlob.java, + * Copyright 2002-2010 the original author or authors., +		// no-op, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/support/lob/PassThroughClob.java, + * Copyright 2002-2010 the original author or authors., +import java.io.ByteArrayInputStream;, +import java.io.IOException;, +import java.io.InputStreamReader;, +import java.io.UnsupportedEncodingException;, +import org.springframework.util.FileCopyUtils;, +, +	private InputStream asciiStream;, +, +	public PassThroughClob(InputStream asciiStream, long contentLength) {, +		this.asciiStream = asciiStream;, +		this.contentLength = contentLength;, +	}, +, +		try {, +			if (this.content != null) {, +				return new StringReader(this.content);, +			}, +			else if (this.characterStream != null) {, +				return this.characterStream;, +			}, +			else {, +				return new InputStreamReader(this.asciiStream, "US-ASCII");, +			}, +		}, +		catch (UnsupportedEncodingException ex) {, +			throw new SQLException("US-ASCII encoding not supported: " + ex);, +		}, +	}, +, +	public InputStream getAsciiStream() throws SQLException {, +		try {, +			if (this.content != null) {, +				return new ByteArrayInputStream(this.content.getBytes("US-ASCII"));, +			}, +			else if (this.characterStream != null) {, +				String tempContent = FileCopyUtils.copyToString(this.characterStream);, +				return new ByteArrayInputStream(tempContent.getBytes("US-ASCII"));, +			}, +			else {, +				return this.asciiStream;, +			}, +		}, +		catch (UnsupportedEncodingException ex) {, +			throw new SQLException("US-ASCII encoding not supported: " + ex);, +		}, +		catch (IOException ex) {, +			throw new SQLException("Failed to read stream content: " + ex);, +		}, +		// no-op]