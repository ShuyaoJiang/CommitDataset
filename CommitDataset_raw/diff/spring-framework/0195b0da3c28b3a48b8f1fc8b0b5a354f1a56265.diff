[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +		return setDefaultValue(tokens);, +		PropertyValue pv = createDefaultPropertyValue(tokens);, +		setPropertyValue(tokens, pv);, +		return pv.getValue();, +		Class type = getPropertyType(tokens.canonicalName);, +		if (type == null) {, +			throw new NullValueInNestedPathException(getRootClass(), this.nestedPath + tokens.canonicalName,, +					"Could not determine property type for auto-growing a default value");, +		}, +		Object defaultValue = newValue(type, tokens.canonicalName);, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +		return setDefaultValue(tokens);, +		PropertyValue pv = createDefaultPropertyValue(tokens);, +		setPropertyValue(tokens, pv);, +		return pv.getValue();, +		Class type = getPropertyType(tokens.canonicalName);, +		if (type == null) {, +			throw new NullValueInNestedPathException(getRootClass(), this.nestedPath + tokens.canonicalName,, +					"Could not determine property type for auto-growing a default value");, +		}, +		Object defaultValue = newValue(type, tokens.canonicalName);, +++ b/org.springframework.beans/src/test/java/org/springframework/beans/BeanWrapperAutoGrowingTests.java, +		wrapper.setPropertyValue("map[A]", new Bean());, +		assertTrue(bean.getMap().get("A") instanceof Bean);]