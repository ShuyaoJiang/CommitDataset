[+++ b/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.web.method.HandlerMethod;, + * Exception for an {@link HttpStatus#INTERNAL_SERVER_ERROR} that exposes extra, + * information about a controller method that failed, or a controller method, + * argument that could not be resolved., +	private final HandlerMethod handlerMethod;, +, +	@Nullable, +		super(HttpStatus.INTERNAL_SERVER_ERROR, reason, null);, +		this.handlerMethod = null;, +		this.parameter = null;, +	 * Constructor with a reason and root cause., +	 * @since 5.0.5, +	public ServerErrorException(String reason, Throwable cause) {, +		super(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);, +		this.handlerMethod = null;, +		this.parameter = null;, +	}, +, +	/**, +	 * Constructor for a 500 error with a {@link MethodParameter}., +	 */, +	public ServerErrorException(String reason, MethodParameter parameter, @Nullable Throwable cause) {, +		super(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);, +		this.handlerMethod = null;, +		this.parameter = parameter;, +	public ServerErrorException(String reason, HandlerMethod handlerMethod, @Nullable Throwable cause) {, +		this.handlerMethod = handlerMethod;, +		this.parameter = null;, +	}, +, +	/**, +	 * Constructor for a 500 error linked to a specific {@code MethodParameter}., +	 * @deprecated in favor of {@link #ServerErrorException(String, MethodParameter, Throwable)}, +	 */, +	@Deprecated, +	public ServerErrorException(String reason, MethodParameter parameter) {, +		this(reason, parameter, null);, +	 * Return the controller method associated with the error, if any., +	 * @since 5.0.5, +	 */, +	@Nullable, +	public HandlerMethod getHandlerMethod() {, +		return this.handlerMethod;, +	}, +, +	/**, +	 * Return the controller method argument associated with this error, if any., +++ b/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.web.method.HandlerMethod;, + * Exception for an {@link HttpStatus#INTERNAL_SERVER_ERROR} that exposes extra, + * information about a controller method that failed, or a controller method, + * argument that could not be resolved., +	private final HandlerMethod handlerMethod;, +, +	@Nullable, +		super(HttpStatus.INTERNAL_SERVER_ERROR, reason, null);, +		this.handlerMethod = null;, +		this.parameter = null;, +	 * Constructor with a reason and root cause., +	 * @since 5.0.5, +	public ServerErrorException(String reason, Throwable cause) {, +		super(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);, +		this.handlerMethod = null;, +		this.parameter = null;, +	}, +, +	/**, +	 * Constructor for a 500 error with a {@link MethodParameter}., +	 */, +	public ServerErrorException(String reason, MethodParameter parameter, @Nullable Throwable cause) {, +		super(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);, +		this.handlerMethod = null;, +		this.parameter = parameter;, +	public ServerErrorException(String reason, HandlerMethod handlerMethod, @Nullable Throwable cause) {, +		this.handlerMethod = handlerMethod;, +		this.parameter = null;, +	}, +, +	/**, +	 * Constructor for a 500 error linked to a specific {@code MethodParameter}., +	 * @deprecated in favor of {@link #ServerErrorException(String, MethodParameter, Throwable)}, +	 */, +	@Deprecated, +	public ServerErrorException(String reason, MethodParameter parameter) {, +		this(reason, parameter, null);, +	 * Return the controller method associated with the error, if any., +	 * @since 5.0.5, +	 */, +	@Nullable, +	public HandlerMethod getHandlerMethod() {, +		return this.handlerMethod;, +	}, +, +	/**, +	 * Return the controller method argument associated with this error, if any., +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/BindingContext.java, + * Copyright 2002-2018 the original author or authors.]