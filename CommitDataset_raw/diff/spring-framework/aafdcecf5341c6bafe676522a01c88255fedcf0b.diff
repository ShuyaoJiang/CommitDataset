[+++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java, +	private int connectionRequestTimeout;, +, +	 * Set the timeout in milliseconds used when requesting a connection from the connection, +	 * manager using the underlying HttpClient., +	 * A timeout value of 0 specifies an infinite timeout., +	 * @param connectionRequestTimeout the timeout value to request a connection in milliseconds, +	 */, +	public void setConnectionRequestTimeout(int connectionRequestTimeout) {, +		this.connectionRequestTimeout = connectionRequestTimeout;, +	}, +, +	/**, +				if (this.connectTimeout > 0 || this.connectionRequestTimeout > 0 || this.socketTimeout > 0) {, +							.setConnectionRequestTimeout(this.connectionRequestTimeout), +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java, +	private int connectionRequestTimeout;, +, +	 * Set the timeout in milliseconds used when requesting a connection from the connection, +	 * manager using the underlying HttpClient., +	 * A timeout value of 0 specifies an infinite timeout., +	 * @param connectionRequestTimeout the timeout value to request a connection in milliseconds, +	 */, +	public void setConnectionRequestTimeout(int connectionRequestTimeout) {, +		this.connectionRequestTimeout = connectionRequestTimeout;, +	}, +, +	/**, +				if (this.connectTimeout > 0 || this.connectionRequestTimeout > 0 || this.socketTimeout > 0) {, +							.setConnectionRequestTimeout(this.connectionRequestTimeout), +++ b/spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.java, +	private int connectionRequestTimeout = 0;, +	 * Set the timeout in milliseconds used when requesting a connection from the connection, +	 * manager using the underlying HttpClient., +	 * A timeout value of 0 specifies an infinite timeout., +	 * @param connectionRequestTimeout the timeout value to request a connection in milliseconds, +	 */, +	public void setConnectionRequestTimeout(int connectionRequestTimeout) {, +		this.connectionRequestTimeout = connectionRequestTimeout;, +	}, +, +	/**, +		if (this.connectionTimeout > 0 || this.connectionRequestTimeout > 0 || this.readTimeout > 0) {, +					.setConnectionRequestTimeout(this.connectionRequestTimeout), +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java, +	private int connectionRequestTimeout;, +, +	 * Set the timeout in milliseconds used when requesting a connection from the connection, +	 * manager using the underlying HttpClient., +	 * A timeout value of 0 specifies an infinite timeout., +	 * @param connectionRequestTimeout the timeout value to request a connection in milliseconds, +	 */, +	public void setConnectionRequestTimeout(int connectionRequestTimeout) {, +		this.connectionRequestTimeout = connectionRequestTimeout;, +	}, +, +	/**, +				if (this.connectTimeout > 0 || this.connectionRequestTimeout > 0 || this.socketTimeout > 0) {, +							.setConnectionRequestTimeout(this.connectionRequestTimeout), +++ b/spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.java, +	private int connectionRequestTimeout = 0;, +	 * Set the timeout in milliseconds used when requesting a connection from the connection, +	 * manager using the underlying HttpClient., +	 * A timeout value of 0 specifies an infinite timeout., +	 * @param connectionRequestTimeout the timeout value to request a connection in milliseconds, +	 */, +	public void setConnectionRequestTimeout(int connectionRequestTimeout) {, +		this.connectionRequestTimeout = connectionRequestTimeout;, +	}, +, +	/**, +		if (this.connectionTimeout > 0 || this.connectionRequestTimeout > 0 || this.readTimeout > 0) {, +					.setConnectionRequestTimeout(this.connectionRequestTimeout), +++ b/spring-web/src/test/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactoryTests.java, +		hrf.setConnectionRequestTimeout(4321);, +		assertEquals("Wrong custom connection request timeout", 4321, requestConfig.getConnectionRequestTimeout());, +++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java, +	private int connectionRequestTimeout;, +, +	 * Set the timeout in milliseconds used when requesting a connection from the connection, +	 * manager using the underlying HttpClient., +	 * A timeout value of 0 specifies an infinite timeout., +	 * @param connectionRequestTimeout the timeout value to request a connection in milliseconds, +	 */, +	public void setConnectionRequestTimeout(int connectionRequestTimeout) {, +		this.connectionRequestTimeout = connectionRequestTimeout;, +	}, +, +	/**, +				if (this.connectTimeout > 0 || this.connectionRequestTimeout > 0 || this.socketTimeout > 0) {, +							.setConnectionRequestTimeout(this.connectionRequestTimeout), +++ b/spring-web/src/main/java/org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor.java, +	private int connectionRequestTimeout = 0;, +	 * Set the timeout in milliseconds used when requesting a connection from the connection, +	 * manager using the underlying HttpClient., +	 * A timeout value of 0 specifies an infinite timeout., +	 * @param connectionRequestTimeout the timeout value to request a connection in milliseconds, +	 */, +	public void setConnectionRequestTimeout(int connectionRequestTimeout) {, +		this.connectionRequestTimeout = connectionRequestTimeout;]