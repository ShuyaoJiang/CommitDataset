[+++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DataBuffer.java, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DataBuffer.java, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DefaultDataBuffer.java, + * ByteBuffer} internally, with separate read and write positions. Constructed, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DataBuffer.java, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DefaultDataBuffer.java, + * ByteBuffer} internally, with separate read and write positions. Constructed, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DefaultDataBufferAllocator.java, +		return "DefaultDataBufferFactory - preferDirect: " + this.preferDirect;, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DataBuffer.java, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DefaultDataBuffer.java, + * ByteBuffer} internally, with separate read and write positions. Constructed, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DefaultDataBufferAllocator.java, +		return "DefaultDataBufferFactory - preferDirect: " + this.preferDirect;, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/NettyDataBuffer.java, +				ByteBuf[] nativeBuffers = Arrays.stream(buffers), +						.map(b -> ((NettyDataBuffer) b).getNativeBuffer()), +		composite.addComponents(byteBufs);, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DataBuffer.java, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DefaultDataBuffer.java, + * ByteBuffer} internally, with separate read and write positions. Constructed, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DefaultDataBufferAllocator.java, +		return "DefaultDataBufferFactory - preferDirect: " + this.preferDirect;, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/NettyDataBuffer.java, +				ByteBuf[] nativeBuffers = Arrays.stream(buffers), +						.map(b -> ((NettyDataBuffer) b).getNativeBuffer()), +		composite.addComponents(byteBufs);, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/NettyDataBufferAllocator.java, + * Implementation of the {@code DataBufferAllocator} interface based on a Netty, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DataBuffer.java, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DefaultDataBuffer.java, + * ByteBuffer} internally, with separate read and write positions. Constructed, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/DefaultDataBufferAllocator.java, +		return "DefaultDataBufferFactory - preferDirect: " + this.preferDirect;, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/NettyDataBuffer.java, +				ByteBuf[] nativeBuffers = Arrays.stream(buffers), +						.map(b -> ((NettyDataBuffer) b).getNativeBuffer()), +		composite.addComponents(byteBufs);, +++ b/spring-web-reactive/src/main/java/org/springframework/core/io/buffer/NettyDataBufferAllocator.java, + * Implementation of the {@code DataBufferAllocator} interface based on a Netty, +++ b/spring-web-reactive/src/test/java/org/springframework/core/io/buffer/DataBufferTests.java, +				{new DefaultDataBufferAllocator(true)},, +				{new DefaultDataBufferAllocator(false)}};]