[+++ b/org.springframework.context/src/main/java/org/springframework/ui/format/jodatime/JodaTimeFormattingConfigurer.java, +	public void installJodaTimeFormatting(FormatterRegistry formatterRegistry) {, +		JodaTimeConverters.registerConverters(formatterRegistry.getConverterRegistry());, +		formatterRegistry.addFormatterForFieldType(LocalDate.class, new ReadablePartialPrinter(jodaDateFormatter), new DateTimeParser(jodaDateFormatter));, +		formatterRegistry.addFormatterForFieldType(LocalTime.class, new ReadablePartialPrinter(jodaTimeFormatter), new DateTimeParser(jodaTimeFormatter));, +		formatterRegistry.addFormatterForFieldType(LocalDateTime.class, new ReadablePartialPrinter(jodaDateTimeFormatter), dateTimeParser);, +		formatterRegistry.addFormatterForFieldType(ReadableInstant.class, readableInstantPrinter, dateTimeParser);, +		formatterRegistry.addFormatterForFieldType(Calendar.class, readableInstantPrinter, dateTimeParser);, +		formatterRegistry.addFormatterForFieldType(Date.class, new MillisecondInstantPrinter(jodaDateTimeFormatter), dateTimeParser);, +		formatterRegistry.addFormatterForFieldAnnotation(new DateTimeFormatAnnotationFormatterFactory());, +++ b/org.springframework.context/src/main/java/org/springframework/ui/format/jodatime/JodaTimeFormattingConfigurer.java, +	public void installJodaTimeFormatting(FormatterRegistry formatterRegistry) {, +		JodaTimeConverters.registerConverters(formatterRegistry.getConverterRegistry());, +		formatterRegistry.addFormatterForFieldType(LocalDate.class, new ReadablePartialPrinter(jodaDateFormatter), new DateTimeParser(jodaDateFormatter));, +		formatterRegistry.addFormatterForFieldType(LocalTime.class, new ReadablePartialPrinter(jodaTimeFormatter), new DateTimeParser(jodaTimeFormatter));, +		formatterRegistry.addFormatterForFieldType(LocalDateTime.class, new ReadablePartialPrinter(jodaDateTimeFormatter), dateTimeParser);, +		formatterRegistry.addFormatterForFieldType(ReadableInstant.class, readableInstantPrinter, dateTimeParser);, +		formatterRegistry.addFormatterForFieldType(Calendar.class, readableInstantPrinter, dateTimeParser);, +		formatterRegistry.addFormatterForFieldType(Date.class, new MillisecondInstantPrinter(jodaDateTimeFormatter), dateTimeParser);, +		formatterRegistry.addFormatterForFieldAnnotation(new DateTimeFormatAnnotationFormatterFactory());, +++ b/org.springframework.context/src/test/java/org/springframework/ui/format/jodatime/JodaTimeFormattingTests.java, +package org.springframework.ui.format.jodatime;, +, +import static org.junit.Assert.assertEquals;, +, +import java.util.Calendar;, +import java.util.Date;, +import java.util.Locale;, +, +import org.joda.time.DateTime;, +import org.joda.time.LocalDate;, +import org.joda.time.LocalDateTime;, +import org.joda.time.LocalTime;, +import org.junit.After;, +import org.junit.Before;, +import org.junit.Test;, +import org.springframework.beans.MutablePropertyValues;, +import org.springframework.context.i18n.LocaleContextHolder;, +import org.springframework.ui.format.support.FormattingConversionService;, +import org.springframework.validation.DataBinder;, +, +public class JodaTimeFormattingTests {, +, +	private FormattingConversionService conversionService = new FormattingConversionService();, +, +	private DataBinder binder;, +, +	@Before, +	public void setUp() {, +		JodaTimeFormattingConfigurer configurer = new JodaTimeFormattingConfigurer();, +		configurer.installJodaTimeFormatting(conversionService);, +		, +		binder = new DataBinder(new JodaTimeBean());, +		binder.setConversionService(conversionService);, +		, +		LocaleContextHolder.setLocale(Locale.US);, +	}, +, +	@After, +	public void tearDown() {, +		LocaleContextHolder.setLocale(null);, +	}, +, +	@Test, +	public void testBindLocalDate() {, +		MutablePropertyValues propertyValues = new MutablePropertyValues();, +		propertyValues.addPropertyValue("localDate", "10/31/09");, +		binder.bind(propertyValues);, +		assertEquals(0, binder.getBindingResult().getErrorCount());, +	}, +, +	@Test, +	public void testBindLocalDateArray() {, +		MutablePropertyValues propertyValues = new MutablePropertyValues();, +		propertyValues.addPropertyValue("localDate", new String[] { "10/31/09" });, +		binder.bind(propertyValues);, +		assertEquals(0, binder.getBindingResult().getErrorCount());, +	}, +, +	private static class JodaTimeBean {, +		, +		private LocalDate localDate;, +, +		private LocalTime localTime;, +, +		private LocalDateTime localDateTime;, +, +		private DateTime dateTime;, +, +		private Date date;, +, +		private Calendar calendar;, +, +		private Long millis;, +, +		public LocalDate getLocalDate() {, +			return localDate;, +		}, +, +		public void setLocalDate(LocalDate localDate) {]