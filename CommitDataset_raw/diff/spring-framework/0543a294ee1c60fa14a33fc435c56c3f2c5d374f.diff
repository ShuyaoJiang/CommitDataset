[+++ b/org.springframework.context/src/main/java/org/springframework/validation/DefaultBindingErrorProcessor.java, +import org.springframework.util.ObjectUtils;, +import org.springframework.util.StringUtils;, +		Object rejectedValue = ex.getValue();, +		if (rejectedValue != null && rejectedValue.getClass().isArray()) {, +			rejectedValue = StringUtils.arrayToCommaDelimitedString(ObjectUtils.toObjectArray(rejectedValue));, +		}, +				bindingResult.getObjectName(), field, rejectedValue, true,, +++ b/org.springframework.context/src/main/java/org/springframework/validation/DefaultBindingErrorProcessor.java, +import org.springframework.util.ObjectUtils;, +import org.springframework.util.StringUtils;, +		Object rejectedValue = ex.getValue();, +		if (rejectedValue != null && rejectedValue.getClass().isArray()) {, +			rejectedValue = StringUtils.arrayToCommaDelimitedString(ObjectUtils.toObjectArray(rejectedValue));, +		}, +				bindingResult.getObjectName(), field, rejectedValue, true,, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationControllerTests.java, +import static org.junit.Assert.*;, +, +import org.springframework.validation.FieldError;, +			FieldError error = errors.getFieldError("age");, +			assertNotNull("Must have field error for age property", error);, +			assertEquals("value2", error.getRejectedValue());]