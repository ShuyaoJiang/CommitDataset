[+++ b/spring-web/src/test/java/org/springframework/web/client/DefaultResponseErrorHandlerTests.java, + * Copyright 2002-2018 the original author or authors., +import java.nio.charset.StandardCharsets;, +import org.springframework.util.StreamUtils;, + * @author Juergen Hoeller, + * @author Denys Ivano, +	@Test  // SPR-16604, +	public void bodyAvailableAfterHasErrorForUnknownStatusCode() throws Exception {, +		HttpHeaders headers = new HttpHeaders();, +		headers.setContentType(MediaType.TEXT_PLAIN);, +		TestByteArrayInputStream body = new TestByteArrayInputStream("Hello World".getBytes(StandardCharsets.UTF_8));, +, +		given(response.getRawStatusCode()).willReturn(999);, +		given(response.getStatusText()).willReturn("Custom status code");, +		given(response.getHeaders()).willReturn(headers);, +		given(response.getBody()).willReturn(body);, +, +		assertFalse(handler.hasError(response));, +		assertFalse(body.isClosed());, +		assertEquals("Hello World", StreamUtils.copyToString(response.getBody(), StandardCharsets.UTF_8));, +	}, +, +, +	private static class TestByteArrayInputStream extends ByteArrayInputStream {, +, +		private boolean closed;, +, +		public TestByteArrayInputStream(byte[] buf) {, +			super(buf);, +			this.closed = false;, +		}, +, +		public boolean isClosed() {, +			return closed;, +		}, +, +		@Override, +		public boolean markSupported() {, +			return false;, +		}, +, +		@Override, +		public synchronized void mark(int readlimit) {, +			throw new UnsupportedOperationException("mark/reset not supported");, +		}, +, +		@Override, +		public synchronized void reset() {, +			throw new UnsupportedOperationException("mark/reset not supported");, +		}, +, +		@Override, +		public void close() throws IOException {, +			super.close();, +			this.closed = true;, +		}, +	}, +]