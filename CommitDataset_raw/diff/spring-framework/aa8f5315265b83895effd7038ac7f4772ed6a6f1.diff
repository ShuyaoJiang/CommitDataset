[+++ b/build.gradle, +	    testCompile("com.squareup.okhttp3:mockwebserver:${okhttp3Version}"), + * Copyright 2002-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +/*, +++ b/build.gradle, +	    testCompile("com.squareup.okhttp3:mockwebserver:${okhttp3Version}"), + * Copyright 2002-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +/*, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/client/ClientRequest.java, +/*, + * Copyright 2002-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.reactive.function.client;, +, +import java.net.URI;, +import java.nio.charset.Charset;, +import java.time.ZonedDateTime;, +, +import org.reactivestreams.Publisher;, +import reactor.core.publisher.Mono;, +, +import org.springframework.http.HttpHeaders;, +import org.springframework.http.HttpMethod;, +import org.springframework.http.MediaType;, +import org.springframework.http.client.reactive.ClientHttpRequest;, +import org.springframework.http.codec.BodyInserter;, +import org.springframework.util.Assert;, +import org.springframework.util.MultiValueMap;, +import org.springframework.web.util.DefaultUriTemplateHandler;, +import org.springframework.web.util.UriTemplateHandler;, +, +/**, + * Represents a typed, immutable, client-side HTTP request, as executed by the {@link WebClient}., + * Instances of this interface are created via static builder methods:, + * {@link #method(HttpMethod, String, Object...)}, {@link #GET(String, Object...)}, etc., + *, + * @param <T> the type of the body that this request contains, + * @author Brian Clozel, + * @author Arjen Poutsma, + * @since 5.0, + */, +public interface ClientRequest<T> {, +, +	// Instance methods, +, +	/**, +	 * Return the HTTP method., +	 */, +	HttpMethod method();, +, +	/**, +	 * Return the request URI., +	 */, +	URI url();, +, +	/**, +	 * Return the headers of this request., +	 */, +	HttpHeaders headers();]