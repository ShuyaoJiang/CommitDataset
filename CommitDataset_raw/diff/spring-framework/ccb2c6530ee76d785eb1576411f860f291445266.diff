[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, +import java.util.ArrayList;, +	private final List<Object> controllerAdvice = new ArrayList<>(8);, +, +	public DefaultControllerSpec controllerAdvice(Object... controllerAdvice) {, +		this.controllerAdvice.addAll(Arrays.asList(controllerAdvice));, +		return this;, +	}, +, +	@Override, +		return WebTestClient.bindToApplicationContext(createApplicationContext());, +	}, +, +	protected AnnotationConfigApplicationContext createApplicationContext() {, +		this.controllerAdvice.forEach(advice -> registerBean(context, advice));, +		return context;, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, +import java.util.ArrayList;, +	private final List<Object> controllerAdvice = new ArrayList<>(8);, +, +	public DefaultControllerSpec controllerAdvice(Object... controllerAdvice) {, +		this.controllerAdvice.addAll(Arrays.asList(controllerAdvice));, +		return this;, +	}, +, +	@Override, +		return WebTestClient.bindToApplicationContext(createApplicationContext());, +	}, +, +	protected AnnotationConfigApplicationContext createApplicationContext() {, +		this.controllerAdvice.forEach(advice -> registerBean(context, advice));, +		return context;, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +		 * Register one or more, +		 * {@link org.springframework.web.bind.annotation.ControllerAdvice, +		 * ControllerAdvice} instances to be used in tests., +		 */, +		ControllerSpec controllerAdvice(Object... controllerAdvice);, +, +		/**, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, +import java.util.ArrayList;, +	private final List<Object> controllerAdvice = new ArrayList<>(8);, +, +	public DefaultControllerSpec controllerAdvice(Object... controllerAdvice) {, +		this.controllerAdvice.addAll(Arrays.asList(controllerAdvice));, +		return this;, +	}, +, +	@Override, +		return WebTestClient.bindToApplicationContext(createApplicationContext());, +	}, +, +	protected AnnotationConfigApplicationContext createApplicationContext() {, +		this.controllerAdvice.forEach(advice -> registerBean(context, advice));, +		return context;, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +		 * Register one or more, +		 * {@link org.springframework.web.bind.annotation.ControllerAdvice, +		 * ControllerAdvice} instances to be used in tests., +		 */, +		ControllerSpec controllerAdvice(Object... controllerAdvice);, +, +		/**, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/DefaultControllerSpecTests.java, +/*, + * Copyright 2002-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.test.web.reactive.server;, +, +import org.junit.Test;, +, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.annotation.AnnotationConfigApplicationContext;, +, +import static org.junit.Assert.assertSame;, +, +/**, + * Unit tests for {@link DefaultControllerSpec}., + * @author Rossen Stoyanchev, + */, +public class DefaultControllerSpecTests {, +, +	@Test, +	public void controllers() throws Exception {, +		OneController controller1 = new OneController();, +		SecondController controller2 = new SecondController();, +]