[+++ b/.gitignore, +# Eclipse artifacts, including WTP generated manifests, +.classpath, +.project, +spring-*/src/main/java/META-INF/MANIFEST.MF, +, +++ b/.gitignore, +# Eclipse artifacts, including WTP generated manifests, +.classpath, +.project, +spring-*/src/main/java/META-INF/MANIFEST.MF, +, +++ b/build.gradle, +		if (project.name in ["spring", "spring-jms",, +		testCompile("org.codehaus.woodstox:wstx-asl:3.2.7") {, +			exclude group: "stax", module: "stax-api", +		}, +, +	task testNG(type: Test) {, +		// "TestCase" classes are run by other test classes, not the build., +		exclude "**/*TestCase.class", +		// Generate TestNG reports alongside JUnit reports., +		testReport true, +, +	test {, +		dependsOn testNG, +		useJUnit(), +		// "TestCase" classes are run by other test classes, not the build., +		exclude "**/*TestCase.class", +	}, +, +	apply plugin: "detect-split-packages", +	detectSplitPackages {, +		projectsToScan -= project(":spring-instrument-tomcat"), +	}, +, +, +++ b/.gitignore, +# Eclipse artifacts, including WTP generated manifests, +.classpath, +.project, +spring-*/src/main/java/META-INF/MANIFEST.MF, +, +++ b/build.gradle, +		if (project.name in ["spring", "spring-jms",, +		testCompile("org.codehaus.woodstox:wstx-asl:3.2.7") {, +			exclude group: "stax", module: "stax-api", +		}, +, +	task testNG(type: Test) {, +		// "TestCase" classes are run by other test classes, not the build., +		exclude "**/*TestCase.class", +		// Generate TestNG reports alongside JUnit reports., +		testReport true, +, +	test {, +		dependsOn testNG, +		useJUnit(), +		// "TestCase" classes are run by other test classes, not the build., +		exclude "**/*TestCase.class", +	}, +, +	apply plugin: "detect-split-packages", +	detectSplitPackages {, +		projectsToScan -= project(":spring-instrument-tomcat"), +	}, +, +, +++ b/buildSrc/src/main/groovy/org/springframework/build/gradle/DetectSplitPackagesPlugin.groovy, +/*, + * Copyright 2002-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.build.gradle, +, +import org.gradle.api.DefaultTask, +import org.gradle.api.GradleException, +import org.gradle.api.Plugin, +import org.gradle.api.Project, +import org.gradle.api.Task, +import org.gradle.api.tasks.Input, +import org.gradle.api.tasks.TaskAction, +, +/**, + * Gradle plugin that detects identically named, non-empty packages split across multiple, + * subprojects, e.g. "org.springframework.context.annotation" existing in both spring-core, + * and spring-aspects. Adds a 'detectSplitPackages' task to the current project's task, + * collection. If the project already contains a 'check' task (i.e. is a typical Gradle]