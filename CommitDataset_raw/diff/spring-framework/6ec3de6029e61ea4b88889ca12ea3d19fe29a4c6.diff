[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +		if (channelElement == null) {, +			executorDef = getDefaultExecutorBeanDefinition(channelName);, +		}, +		else {, +			Element executor = DomUtils.getChildElementByTagName(channelElement, "executor");, +			if (executor == null) {, +				executorDef = getDefaultExecutorBeanDefinition(channelName);, +			}, +			else {, +		ConstructorArgumentValues argValues = new ConstructorArgumentValues();, +			argValues.addIndexedArgumentValue(0, new RuntimeBeanReference(executorName));, +		RootBeanDefinition channelDef = new RootBeanDefinition(ExecutorSubscribableChannel.class, argValues, null);, +	private RootBeanDefinition getDefaultExecutorBeanDefinition(String channelName) {, +		if (channelName.equals("brokerChannel")) {, +			return null;, +		}, +		RootBeanDefinition executorDef = new RootBeanDefinition(ThreadPoolTaskExecutor.class);, +		executorDef.getPropertyValues().add("corePoolSize", Runtime.getRuntime().availableProcessors() * 2);, +		executorDef.getPropertyValues().add("maxPoolSize", Integer.MAX_VALUE);, +		executorDef.getPropertyValues().add("queueCapacity", Integer.MAX_VALUE);, +		return executorDef;, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +		if (channelElement == null) {, +			executorDef = getDefaultExecutorBeanDefinition(channelName);, +		}, +		else {, +			Element executor = DomUtils.getChildElementByTagName(channelElement, "executor");, +			if (executor == null) {, +				executorDef = getDefaultExecutorBeanDefinition(channelName);, +			}, +			else {, +		ConstructorArgumentValues argValues = new ConstructorArgumentValues();, +			argValues.addIndexedArgumentValue(0, new RuntimeBeanReference(executorName));, +		RootBeanDefinition channelDef = new RootBeanDefinition(ExecutorSubscribableChannel.class, argValues, null);, +	private RootBeanDefinition getDefaultExecutorBeanDefinition(String channelName) {, +		if (channelName.equals("brokerChannel")) {, +			return null;, +		}, +		RootBeanDefinition executorDef = new RootBeanDefinition(ThreadPoolTaskExecutor.class);, +		executorDef.getPropertyValues().add("corePoolSize", Runtime.getRuntime().availableProcessors() * 2);, +		executorDef.getPropertyValues().add("maxPoolSize", Integer.MAX_VALUE);, +		executorDef.getPropertyValues().add("queueCapacity", Integer.MAX_VALUE);, +		return executorDef;, +	}, +, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParserTests.java, +, +		testExecutor("clientInboundChannel", Runtime.getRuntime().availableProcessors() * 2, Integer.MAX_VALUE, 60);, +		assertFalse(this.appContext.containsBean("brokerChannelExecutor"));, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, +		if (channelElement == null) {, +			executorDef = getDefaultExecutorBeanDefinition(channelName);, +		}, +		else {, +			Element executor = DomUtils.getChildElementByTagName(channelElement, "executor");, +			if (executor == null) {, +				executorDef = getDefaultExecutorBeanDefinition(channelName);, +			}, +			else {, +		ConstructorArgumentValues argValues = new ConstructorArgumentValues();, +			argValues.addIndexedArgumentValue(0, new RuntimeBeanReference(executorName));, +		RootBeanDefinition channelDef = new RootBeanDefinition(ExecutorSubscribableChannel.class, argValues, null);, +	private RootBeanDefinition getDefaultExecutorBeanDefinition(String channelName) {, +		if (channelName.equals("brokerChannel")) {, +			return null;, +		}, +		RootBeanDefinition executorDef = new RootBeanDefinition(ThreadPoolTaskExecutor.class);, +		executorDef.getPropertyValues().add("corePoolSize", Runtime.getRuntime().availableProcessors() * 2);, +		executorDef.getPropertyValues().add("maxPoolSize", Integer.MAX_VALUE);, +		executorDef.getPropertyValues().add("queueCapacity", Integer.MAX_VALUE);, +		return executorDef;, +	}, +, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParserTests.java, +, +		testExecutor("clientInboundChannel", Runtime.getRuntime().availableProcessors() * 2, Integer.MAX_VALUE, 60);, +		assertFalse(this.appContext.containsBean("brokerChannelExecutor"));, +++ b/spring-websocket/src/test/resources/org/springframework/web/socket/config/websocket-config-broker-customchannels-default-executor.xml, +       xsi:schemaLocation=", +        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd, +        <websocket:stomp-endpoint path="/foo"/>, +        <websocket:broker-channel>, +            <websocket:interceptors>, +                <ref bean="myInterceptor"/>, +            </websocket:interceptors>, +        </websocket:broker-channel>]