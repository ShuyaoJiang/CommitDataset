[+++ b/spring-context/src/main/java/org/springframework/format/datetime/standard/DateTimeFormatterFactory.java, + * Copyright 2002-2018 the original author or authors., +			String patternToUse = StringUtils.replace(this.pattern, "yy", "uu");, +++ b/spring-context/src/main/java/org/springframework/format/datetime/standard/DateTimeFormatterFactory.java, + * Copyright 2002-2018 the original author or authors., +			String patternToUse = StringUtils.replace(this.pattern, "yy", "uu");, +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/WeavingTransformer.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.util.StringUtils;, +		String internalName = StringUtils.replace(className, ".", "/");, +++ b/spring-context/src/main/java/org/springframework/format/datetime/standard/DateTimeFormatterFactory.java, + * Copyright 2002-2018 the original author or authors., +			String patternToUse = StringUtils.replace(this.pattern, "yy", "uu");, +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/WeavingTransformer.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.util.StringUtils;, +		String internalName = StringUtils.replace(className, ".", "/");, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/StringLiteral.java, +import org.springframework.util.StringUtils;, +, +		String valueWithinQuotes = value.substring(1, value.length() - 1);, +		valueWithinQuotes = StringUtils.replace(valueWithinQuotes, "''", "'");, +		valueWithinQuotes = StringUtils.replace(valueWithinQuotes, "\"\"", "\"");, +, +		this.value = new TypedValue(valueWithinQuotes);, +++ b/spring-context/src/main/java/org/springframework/format/datetime/standard/DateTimeFormatterFactory.java, + * Copyright 2002-2018 the original author or authors., +			String patternToUse = StringUtils.replace(this.pattern, "yy", "uu");, +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/WeavingTransformer.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.util.StringUtils;, +		String internalName = StringUtils.replace(className, ".", "/");, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/StringLiteral.java, +import org.springframework.util.StringUtils;, +, +		String valueWithinQuotes = value.substring(1, value.length() - 1);, +		valueWithinQuotes = StringUtils.replace(valueWithinQuotes, "''", "'");, +		valueWithinQuotes = StringUtils.replace(valueWithinQuotes, "\"\"", "\"");, +, +		this.value = new TypedValue(valueWithinQuotes);, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelCompiler.java, +import org.springframework.util.StringUtils;, +		String className = "spel/Ex" + getNextSuffix();, +		cw.visit(V1_5, ACC_PUBLIC, className, null, "org/springframework/expression/spel/CompiledExpression", null);, +		CodeFlow cf = new CodeFlow(className, cw);, +		return loadClass(StringUtils.replace(className, "/", "."), data);, +++ b/spring-context/src/main/java/org/springframework/format/datetime/standard/DateTimeFormatterFactory.java, + * Copyright 2002-2018 the original author or authors., +			String patternToUse = StringUtils.replace(this.pattern, "yy", "uu");, +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/WeavingTransformer.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.util.StringUtils;, +		String internalName = StringUtils.replace(className, ".", "/");, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/StringLiteral.java, +import org.springframework.util.StringUtils;, +, +		String valueWithinQuotes = value.substring(1, value.length() - 1);, +		valueWithinQuotes = StringUtils.replace(valueWithinQuotes, "''", "'");, +		valueWithinQuotes = StringUtils.replace(valueWithinQuotes, "\"\"", "\"");, +, +		this.value = new TypedValue(valueWithinQuotes);, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelCompiler.java, +import org.springframework.util.StringUtils;, +		String className = "spel/Ex" + getNextSuffix();, +		cw.visit(V1_5, ACC_PUBLIC, className, null, "org/springframework/expression/spel/CompiledExpression", null);, +		CodeFlow cf = new CodeFlow(className, cw);, +		return loadClass(StringUtils.replace(className, "/", "."), data);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/BeanPropertyRowMapper.java, +			String field = lowerCaseName(StringUtils.delete(column, " "));, +++ b/spring-context/src/main/java/org/springframework/format/datetime/standard/DateTimeFormatterFactory.java, + * Copyright 2002-2018 the original author or authors., +			String patternToUse = StringUtils.replace(this.pattern, "yy", "uu");, +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/WeavingTransformer.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.util.StringUtils;, +		String internalName = StringUtils.replace(className, ".", "/");, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/StringLiteral.java, +import org.springframework.util.StringUtils;, +, +		String valueWithinQuotes = value.substring(1, value.length() - 1);, +		valueWithinQuotes = StringUtils.replace(valueWithinQuotes, "''", "'");, +		valueWithinQuotes = StringUtils.replace(valueWithinQuotes, "\"\"", "\"");, +, +		this.value = new TypedValue(valueWithinQuotes);, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelCompiler.java, +import org.springframework.util.StringUtils;, +		String className = "spel/Ex" + getNextSuffix();, +		cw.visit(V1_5, ACC_PUBLIC, className, null, "org/springframework/expression/spel/CompiledExpression", null);, +		CodeFlow cf = new CodeFlow(className, cw);, +		return loadClass(StringUtils.replace(className, "/", "."), data);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/BeanPropertyRowMapper.java, +			String field = lowerCaseName(StringUtils.delete(column, " "));, +++ b/spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageWriter.java, +import org.springframework.util.StringUtils;, +				sb.append(':').append(StringUtils.replace(comment, "\n", "\n:")).append("\n");, +			return Flux.from(encodeText(StringUtils.replace(text, "\n", "\ndata:") + "\n", mediaType, factory));, +++ b/spring-context/src/main/java/org/springframework/format/datetime/standard/DateTimeFormatterFactory.java, + * Copyright 2002-2018 the original author or authors., +			String patternToUse = StringUtils.replace(this.pattern, "yy", "uu");, +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/WeavingTransformer.java]