[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +					if (!(indexedWriteMethod != null, +							&& indexedWriteMethod.getName().equals(method.getName()))) {, +						indexedWriteMethod = method;, +					}, +			if (pd instanceof IndexedPropertyDescriptor) {, +				((IndexedPropertyDescriptor)pd).setIndexedReadMethod(indexedReadMethod);, +				try {, +					((IndexedPropertyDescriptor)pd).setIndexedWriteMethod(indexedWriteMethod);, +				} catch (IntrospectionException ex) {, +					logger.debug(format("Could not add indexed write method [%s] for property [%s]. Reason: %s",, +							indexedWriteMethod, propertyName, ex.getMessage()));, +					// fall through -> add property descriptor as best we can, +				}, +			}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +					if (!(indexedWriteMethod != null, +							&& indexedWriteMethod.getName().equals(method.getName()))) {, +						indexedWriteMethod = method;, +					}, +			if (pd instanceof IndexedPropertyDescriptor) {, +				((IndexedPropertyDescriptor)pd).setIndexedReadMethod(indexedReadMethod);, +				try {, +					((IndexedPropertyDescriptor)pd).setIndexedWriteMethod(indexedWriteMethod);, +				} catch (IntrospectionException ex) {, +					logger.debug(format("Could not add indexed write method [%s] for property [%s]. Reason: %s",, +							indexedWriteMethod, propertyName, ex.getMessage()));, +					// fall through -> add property descriptor as best we can, +				}, +			}, +++ b/org.springframework.beans/src/test/java/org/springframework/beans/ExtendedBeanInfoTests.java, +import org.springframework.core.JdkVersion;, +		assertThat(hasIndexedWriteMethodForProperty(bi, "foos"), is(trueUntilJdk17()));, +, +		BeanInfo ebi = new ExtendedBeanInfo(Introspector.getBeanInfo(C.class));, +		assertThat(hasIndexedWriteMethodForProperty(bi, "foos"), is(trueUntilJdk17()));, +		assertThat(hasIndexedWriteMethodForProperty(bi, "dateFormat"), is(trueUntilJdk17()));, +		assertThat(hasWriteMethodForProperty(bi, "dateFormat"), is(false));, +		assertThat(hasIndexedWriteMethodForProperty(bi, "dateFormat"), is(trueUntilJdk17()));, +		assertThat(hasWriteMethodForProperty(ebi, "dateFormat"), is(false));, +	private boolean trueUntilJdk17() {, +		return JdkVersion.getMajorJavaVersion() < JdkVersion.JAVA_17;, +	}, +]