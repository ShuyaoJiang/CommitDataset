[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.web.context.request.WebRequest;, +import org.springframework.web.method.HandlerMethod;, +import org.springframework.web.servlet.mvc.LastModified;, +	/**, +	 * This method always returns -1 since an annotated controller can have many methods, each, +	 * requiring separate lastModified calculations. Instead an @{@link RequestMapping} method , +	 * can calculate the lastModified value, call {@link WebRequest#checkNotModified(long)} to, +	 * check it, and return {@code null} if that returns {@code true}., +	 * @see WebRequest#checkNotModified(long), +	 */, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.web.context.request.WebRequest;, +import org.springframework.web.method.HandlerMethod;, +import org.springframework.web.servlet.mvc.LastModified;, +	/**, +	 * This method always returns -1 since an annotated controller can have many methods, each, +	 * requiring separate lastModified calculations. Instead an @{@link RequestMapping} method , +	 * can calculate the lastModified value, call {@link WebRequest#checkNotModified(long)} to, +	 * check it, and return {@code null} if that returns {@code true}., +	 * @see WebRequest#checkNotModified(long), +	 */, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java, +import org.springframework.web.context.request.WebRequest;, +import org.springframework.web.servlet.mvc.LastModified;, +	/**, +	 * This method always returns -1 since {@link HandlerMethod} does not implement {@link LastModified}., +	 * Instead an @{@link RequestMapping} method, calculate the lastModified value, and call , +	 * {@link WebRequest#checkNotModified(long)}, and return {@code null} if that returns {@code true}., +	 * @see WebRequest#checkNotModified(long), +	 */, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import org.springframework.web.context.request.WebRequest;, +import org.springframework.web.method.HandlerMethod;, +import org.springframework.web.servlet.mvc.LastModified;, +	/**, +	 * This method always returns -1 since an annotated controller can have many methods, each, +	 * requiring separate lastModified calculations. Instead an @{@link RequestMapping} method , +	 * can calculate the lastModified value, call {@link WebRequest#checkNotModified(long)} to, +	 * check it, and return {@code null} if that returns {@code true}., +	 * @see WebRequest#checkNotModified(long), +	 */, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java, +import org.springframework.web.context.request.WebRequest;, +import org.springframework.web.servlet.mvc.LastModified;, +	/**, +	 * This method always returns -1 since {@link HandlerMethod} does not implement {@link LastModified}., +	 * Instead an @{@link RequestMapping} method, calculate the lastModified value, and call , +	 * {@link WebRequest#checkNotModified(long)}, and return {@code null} if that returns {@code true}., +	 * @see WebRequest#checkNotModified(long), +	 */, +++ b/spring-framework-reference/src/mvc.xml, +        parts of a URL in a <interfacename>@RequestMapping</interfacename> method.</para>, +        <para>In Spring MVC you can use the <interfacename>@PathVariable</interfacename> annotation on, +        a method argument to bind it to the value of a URI template variable:</para>, +        is set to the value found in the appropriate part of the URI., +        of <literal>ownerId</literal> is <literal>fred</literal>.</para>, +	        <para>To process the @PathVariable annotation, Spring MVC needs to find the , +	        matching URI template variable by name. You can specify it in the annotation:</para>, +, +			<para>Or if the URI template variable name matches the method argument name , +			you can omit that detail. As long as your code is not compiled without debugging, +	        information, Spring MVC will match the method argument name to the URI template variable name:</para>, +	, +	        <programlisting language="java">@RequestMapping(value="/owners/{ownerId}", method=RequestMethod.GET), +public String findOwner(<emphasis role="bold">@PathVariable</emphasis> String ownerId, Model model) {, +  // implementation omitted, +}</programlisting>, +	, +        <para>A method can have any number of <interfacename>@PathVariable</interfacename> annotations:</para>, +		<para>A <interfacename>@PathVariable</interfacename> argument can be of, +          You can also register support for parsing additional data types., +      <section id="mvc-ann-requestmapping-uri-templates-regex">, +        <title>URI Template Patterns with Regular Expressions</title>, +        , +        <para>Sometimes you need more precision in defining URI template variables. , +        Consider the URL <code>"/spring-web/spring-web-3.0.5.jar"</code>., +        How do you break it down into multiple parts?</para>, +        , +        <para>The <interfacename>@RequestMapping</interfacename> annotation supports the , +        use of regular expressions in URI template variables., +        The syntax is <code>{varName:regex}</code> where the first part defines the , +        variable name and the second - the regular expression.For example:</para>, +, +        <programlisting language="java">, +@RequestMapping("/spring-web/{symbolicName:[a-z-]+}-{version:\d\.\d\.\d}.{extension:\.[a-z]}"), +  public void handle(@PathVariable String version, @PathVariable String extension) {    , +    // ..., +  }, +}, +</programlisting>, +        , +      </section>, +, +      <section id="mvc-ann-lastmodified">, +        <title>Support for the 'Last-Modified' Response Header To Facilitate Content Caching</title>, +        , +        <para>An <interfacename>@RequestMapping</interfacename> method may wish , +        to support <literal>'Last-Modified'</literal> HTTP requests, , +        as defined in the contract for the Servlet API's ]