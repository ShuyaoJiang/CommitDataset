[+++ b/spring-web/src/main/java/org/springframework/web/context/ConfigurableWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-web/src/main/java/org/springframework/web/context/ConfigurableWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-web/src/main/java/org/springframework/web/context/ContextLoader.java, +import org.springframework.core.env.ConfigurableEnvironment;, +		ConfigurableEnvironment env = applicationContext.getEnvironment();, +		if (env instanceof ConfigurableWebEnvironment) {, +			((ConfigurableWebEnvironment)env).initPropertySources(servletContext, null);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/ConfigurableWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-web/src/main/java/org/springframework/web/context/ContextLoader.java, +import org.springframework.core.env.ConfigurableEnvironment;, +		ConfigurableEnvironment env = applicationContext.getEnvironment();, +		if (env instanceof ConfigurableWebEnvironment) {, +			((ConfigurableWebEnvironment)env).initPropertySources(servletContext, null);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +		ConfigurableEnvironment env = this.getEnvironment();, +		if (env instanceof ConfigurableWebEnvironment) {, +			((ConfigurableWebEnvironment)env).initPropertySources(, +					this.servletContext, this.servletConfig);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/ConfigurableWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-web/src/main/java/org/springframework/web/context/ContextLoader.java, +import org.springframework.core.env.ConfigurableEnvironment;, +		ConfigurableEnvironment env = applicationContext.getEnvironment();, +		if (env instanceof ConfigurableWebEnvironment) {, +			((ConfigurableWebEnvironment)env).initPropertySources(servletContext, null);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +		ConfigurableEnvironment env = this.getEnvironment();, +		if (env instanceof ConfigurableWebEnvironment) {, +			((ConfigurableWebEnvironment)env).initPropertySources(, +					this.servletContext, this.servletConfig);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/support/GenericWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +		ConfigurableEnvironment env = this.getEnvironment();, +		if (env instanceof ConfigurableWebEnvironment) {, +			((ConfigurableWebEnvironment)env).initPropertySources(, +					this.servletContext, null);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/ConfigurableWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-web/src/main/java/org/springframework/web/context/ContextLoader.java, +import org.springframework.core.env.ConfigurableEnvironment;, +		ConfigurableEnvironment env = applicationContext.getEnvironment();, +		if (env instanceof ConfigurableWebEnvironment) {, +			((ConfigurableWebEnvironment)env).initPropertySources(servletContext, null);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +		ConfigurableEnvironment env = this.getEnvironment();, +		if (env instanceof ConfigurableWebEnvironment) {, +			((ConfigurableWebEnvironment)env).initPropertySources(, +					this.servletContext, this.servletConfig);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/support/GenericWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +		ConfigurableEnvironment env = this.getEnvironment();, +		if (env instanceof ConfigurableWebEnvironment) {, +			((ConfigurableWebEnvironment)env).initPropertySources(, +					this.servletContext, null);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/support/StaticWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-web/src/main/java/org/springframework/web/context/ConfigurableWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-web/src/main/java/org/springframework/web/context/ContextLoader.java, +import org.springframework.core.env.ConfigurableEnvironment;, +		ConfigurableEnvironment env = applicationContext.getEnvironment();, +		if (env instanceof ConfigurableWebEnvironment) {, +			((ConfigurableWebEnvironment)env).initPropertySources(servletContext, null);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +		ConfigurableEnvironment env = this.getEnvironment();, +		if (env instanceof ConfigurableWebEnvironment) {, +			((ConfigurableWebEnvironment)env).initPropertySources(, +					this.servletContext, this.servletConfig);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/support/GenericWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +		ConfigurableEnvironment env = this.getEnvironment();, +		if (env instanceof ConfigurableWebEnvironment) {, +			((ConfigurableWebEnvironment)env).initPropertySources(, +					this.servletContext, null);, +		}, +++ b/spring-web/src/main/java/org/springframework/web/context/support/StaticWebApplicationContext.java, + * Copyright 2002-2013 the original author or authors., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java, + * Copyright 2002-2013 the original author or authors., +import org.springframework.core.env.ConfigurableEnvironment;, +import org.springframework.web.context.ConfigurableWebEnvironment;, +		ConfigurableEnvironment env = wac.getEnvironment();]