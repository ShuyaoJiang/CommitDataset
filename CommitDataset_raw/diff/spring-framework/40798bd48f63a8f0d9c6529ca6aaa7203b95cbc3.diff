[+++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +						processImport(configClass, selector.selectImports(importingClassMetadata), false);, +					} catch (ClassNotFoundException ex) {, +						throw new IllegalStateException(ex);, +					}, +				}, +				else if (new AssignableTypeFilter(ImportBeanDefinitionRegistrar.class).match(reader, metadataReaderFactory)) {, +					// the candidate class is an ImportBeanDefinitionRegistrar -> delegate to it to register additional bean definitions, +					try {, +						ImportBeanDefinitionRegistrar registrar = BeanUtils.instantiateClass(Class.forName(candidate), ImportBeanDefinitionRegistrar.class);, +						registrar.registerBeanDefinitions(importingClassMetadata, registry);, +					// the candidate class not an ImportSelector or ImportBeanDefinitionRegistrar -> process it as a @Configuration class, +		 * <ul>, +		 * </ul>, +		 * return "ImportStack: [Foo->Bar->Baz]"., +			StringBuilder builder = new StringBuilder("ImportStack: [");, +			return builder.append(']').toString();]