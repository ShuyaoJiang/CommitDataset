[+++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2016 the original author or authors., +		this.argumentBindings = new HashMap<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2016 the original author or authors., +		this.argumentBindings = new HashMap<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverer.java, + * Copyright 2002-2016 the original author or authors., +	private static final Set<String> singleValuedAnnotationPcds = new HashSet<>();, +	private static final Set<String> nonReferencePointcutTokens = new HashSet<>();, +		List<String> varNames = new ArrayList<>();, +		List<String> varNames = new ArrayList<>();, +				List<String> candidateVarNames = new ArrayList<>();, +		List<String> varNames = new ArrayList<>();, +			List<String> varNames = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2016 the original author or authors., +		this.argumentBindings = new HashMap<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverer.java, + * Copyright 2002-2016 the original author or authors., +	private static final Set<String> singleValuedAnnotationPcds = new HashSet<>();, +	private static final Set<String> nonReferencePointcutTokens = new HashSet<>();, +		List<String> varNames = new ArrayList<>();, +		List<String> varNames = new ArrayList<>();, +				List<String> candidateVarNames = new ArrayList<>();, +		List<String> varNames = new ArrayList<>();, +			List<String> varNames = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java, + * Copyright 2002-2016 the original author or authors., +	private static final Set<PointcutPrimitive> SUPPORTED_PRIMITIVES = new HashSet<>();, +	private transient Map<Method, ShadowMatch> shadowMatchCache = new ConcurrentHashMap<>(32);, +		this.shadowMatchCache = new ConcurrentHashMap<>(32);, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2016 the original author or authors., +		this.argumentBindings = new HashMap<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverer.java, + * Copyright 2002-2016 the original author or authors., +	private static final Set<String> singleValuedAnnotationPcds = new HashSet<>();, +	private static final Set<String> nonReferencePointcutTokens = new HashSet<>();, +		List<String> varNames = new ArrayList<>();, +		List<String> varNames = new ArrayList<>();, +				List<String> candidateVarNames = new ArrayList<>();, +		List<String> varNames = new ArrayList<>();, +			List<String> varNames = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java, + * Copyright 2002-2016 the original author or authors., +	private static final Set<PointcutPrimitive> SUPPORTED_PRIMITIVES = new HashSet<>();, +	private transient Map<Method, ShadowMatch> shadowMatchCache = new ConcurrentHashMap<>(32);, +		this.shadowMatchCache = new ConcurrentHashMap<>(32);, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.java, + * Copyright 2002-2016 the original author or authors., +			return new AspectJAnnotation<>(result);, +				new HashMap<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2016 the original author or authors., +		this.argumentBindings = new HashMap<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverer.java, + * Copyright 2002-2016 the original author or authors., +	private static final Set<String> singleValuedAnnotationPcds = new HashSet<>();, +	private static final Set<String> nonReferencePointcutTokens = new HashSet<>();, +		List<String> varNames = new ArrayList<>();, +		List<String> varNames = new ArrayList<>();, +				List<String> candidateVarNames = new ArrayList<>();, +		List<String> varNames = new ArrayList<>();, +			List<String> varNames = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java, + * Copyright 2002-2016 the original author or authors., +	private static final Set<PointcutPrimitive> SUPPORTED_PRIMITIVES = new HashSet<>();, +	private transient Map<Method, ShadowMatch> shadowMatchCache = new ConcurrentHashMap<>(32);, +		this.shadowMatchCache = new ConcurrentHashMap<>(32);, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.java, + * Copyright 2002-2016 the original author or authors., +			return new AspectJAnnotation<>(result);, +				new HashMap<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.java, + * Copyright 2002-2016 the original author or authors., +		this.includePatterns = new ArrayList<>(patterns.size());, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java, + * Copyright 2002-2016 the original author or authors., +		this.argumentBindings = new HashMap<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscoverer.java, + * Copyright 2002-2016 the original author or authors., +	private static final Set<String> singleValuedAnnotationPcds = new HashSet<>();, +	private static final Set<String> nonReferencePointcutTokens = new HashSet<>();, +		List<String> varNames = new ArrayList<>();, +		List<String> varNames = new ArrayList<>();, +				List<String> candidateVarNames = new ArrayList<>();, +		List<String> varNames = new ArrayList<>();, +			List<String> varNames = new ArrayList<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java, + * Copyright 2002-2016 the original author or authors., +	private static final Set<PointcutPrimitive> SUPPORTED_PRIMITIVES = new HashSet<>();, +	private transient Map<Method, ShadowMatch> shadowMatchCache = new ConcurrentHashMap<>(32);, +		this.shadowMatchCache = new ConcurrentHashMap<>(32);, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.java, + * Copyright 2002-2016 the original author or authors., +			return new AspectJAnnotation<>(result);, +				new HashMap<>();, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.java, + * Copyright 2002-2016 the original author or authors.]