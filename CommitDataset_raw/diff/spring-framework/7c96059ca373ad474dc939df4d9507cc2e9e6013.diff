[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/BeanPropertyRowMapper.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.core.convert.ConversionService;, +import org.springframework.core.convert.support.DefaultConversionService;, +	/** ConversionService for binding JDBC values to bean properties */, +	private ConversionService conversionService = new DefaultConversionService();, +, +	/**, +	 * Set a {@link ConversionService} for binding JDBC values to bean properties,, +	 * or {@code null} for none., +	 * <p>Default is a {@link DefaultConversionService}, as of Spring 4.3. This, +	 * provides support for {@code java.time} conversion and other special types., +	 * @since 4.3, +	 * @see #initBeanWrapper(BeanWrapper), +	 */, +	public void setConversionService(ConversionService conversionService) {, +		this.conversionService = conversionService;, +	}, +, +	/**, +	 * Return a {@link ConversionService} for binding JDBC values to bean properties,, +	 * or {@code null} if none., +	 * @since 4.3, +	 */, +	public ConversionService getConversionService() {, +		return this.conversionService;, +	}, +, +	 * <p>The default implementation applies the configured {@link ConversionService},, +	 * if any. Can be overridden in subclasses., +	 * @see #getConversionService(), +	 * @see BeanWrapper#setConversionService, +		ConversionService cs = getConversionService();, +		if (cs != null) {, +			bw.setConversionService(cs);, +		}]