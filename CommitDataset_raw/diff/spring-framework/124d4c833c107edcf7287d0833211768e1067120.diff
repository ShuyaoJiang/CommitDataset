[+++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/spr/FormContentTests.java, +import org.springframework.web.filter.FormContentFilter;, +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;, +				.addFilter(new FormContentFilter()), +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/spr/FormContentTests.java, +import org.springframework.web.filter.FormContentFilter;, +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;, +				.addFilter(new FormContentFilter()), +++ b/spring-web/src/main/java/org/springframework/web/filter/FormContentFilter.java, +/*, + * Copyright 2002-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.filter;, +, +import java.io.IOException;, +import java.io.InputStream;, +import java.nio.charset.Charset;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.Enumeration;, +import java.util.LinkedHashMap;, +import java.util.LinkedHashSet;, +import java.util.List;, +import java.util.Map;, +import java.util.Set;, +import javax.servlet.FilterChain;, +import javax.servlet.ServletException;, +import javax.servlet.http.HttpServletRequest;, +import javax.servlet.http.HttpServletRequestWrapper;, +import javax.servlet.http.HttpServletResponse;, +, +import org.springframework.http.HttpInputMessage;, +import org.springframework.http.MediaType;, +import org.springframework.http.converter.FormHttpMessageConverter;, +import org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter;, +import org.springframework.http.server.ServletServerHttpRequest;, +import org.springframework.lang.Nullable;, +import org.springframework.util.Assert;, +import org.springframework.util.MultiValueMap;, +import org.springframework.util.StringUtils;, +, +/**, + * {@code Filter} that parses form data for HTTP PUT, PATCH, and DELETE requests, + * and exposes it as Servlet request parameters. By default the Servlet spec, + * only requires this for HTTP POST., + *, + * @author Rossen Stoyanchev, + * @since 5.1, + */, +public class FormContentFilter extends OncePerRequestFilter {, +, +	private static final List<String> HTTP_METHODS = Arrays.asList("PUT", "PATCH", "DELETE");, +, +, +	private FormHttpMessageConverter formConverter = new AllEncompassingFormHttpMessageConverter();, +, +, +	/**, +	 * Set the converter to use for parsing form content., +	 * <p>By default this is an instance of {@link AllEncompassingFormHttpMessageConverter}., +	 */, +	public void setFormConverter(FormHttpMessageConverter converter) {, +		Assert.notNull(converter, "FormHttpMessageConverter is required.");, +		this.formConverter = converter;, +	}, +, +	public FormHttpMessageConverter getFormConverter() {, +		return this.formConverter;, +	}, +, +	/**, +	 * The default character set to use for reading form data., +	 * This is a shortcut for:<br>, +	 * {@code getFormConverter.setCharset(charset)}., +	 */, +	public void setCharset(Charset charset) {, +		this.formConverter.setCharset(charset);, +	}, +, +, +	@Override, +	protected void doFilterInternal(final HttpServletRequest request, HttpServletResponse response,, +			FilterChain filterChain) throws ServletException, IOException {, +]