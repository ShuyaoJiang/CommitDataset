[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.java, + * A sub-class of {@link WebMvcConfigurationSupport} that detects beans of , + * type {@link WebMvcConfigurer}. Each {@link WebMvcConfigurer} is given a , + * chance to customize the Spring MVC configuration provided through, + * {@link WebMvcConfigurationSupport}., + * , + * @see EnableWebMvc, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.java, + * A sub-class of {@link WebMvcConfigurationSupport} that detects beans of , + * type {@link WebMvcConfigurer}. Each {@link WebMvcConfigurer} is given a , + * chance to customize the Spring MVC configuration provided through, + * {@link WebMvcConfigurationSupport}., + * , + * @see EnableWebMvc, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/annotation/EnableWebMvc.java, + * Add this annotation to an {@code @Configuration} class to have the Spring MVC, + * configuration defined in {@link WebMvcConfigurationSupport} imported:, + * , + * public class MyWebConfiguration {, + * <p>Customize the imported configuration by implementing the, + * {@link WebMvcConfigurer} interface or more likely by extending the , + * {@link WebMvcConfigurerAdapter} base class and overriding individual methods: , + * , + * 	// More overridden methods ..., + *, + * }, + * </pre>, + *, + * <p>If the customization options of {@link WebMvcConfigurer} do not expose , + * something you need to configure, consider removing the {@code @EnableWebMvc} , + * annotation and extending directly from {@link WebMvcConfigurationSupport} , + * overriding selected {@code @Bean} methods:, + * , + * <pre class="code">, + * &#064;Configuration, + * &#064;ComponentScan(, + * 	basePackageClasses = { MyConfiguration.class },, + * 	excludeFilters = { @Filter(type = FilterType.ANNOTATION, value = Configuration.class) }, + * ), + * public class MyConfiguration extends WebMvcConfigurationSupport {, + *, + * 	&#064;Override, + *	public void addFormatters(FormatterRegistry formatterRegistry) {, + *		formatterRegistry.addConverter(new MyConverter());, + *	}, + *, + *	&#064;Bean, + *	public RequestMappingHandlerAdapter requestMappingHandlerAdapter() {, + *		// Create or delegate to "super" to create and, + *		// customize properties of RequestMapingHandlerAdapter, + *	}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.java, + * A sub-class of {@link WebMvcConfigurationSupport} that detects beans of , + * type {@link WebMvcConfigurer}. Each {@link WebMvcConfigurer} is given a , + * chance to customize the Spring MVC configuration provided through, + * {@link WebMvcConfigurationSupport}., + * , + * @see EnableWebMvc, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/annotation/EnableWebMvc.java, + * Add this annotation to an {@code @Configuration} class to have the Spring MVC, + * configuration defined in {@link WebMvcConfigurationSupport} imported:, + * , + * public class MyWebConfiguration {, + * <p>Customize the imported configuration by implementing the, + * {@link WebMvcConfigurer} interface or more likely by extending the , + * {@link WebMvcConfigurerAdapter} base class and overriding individual methods: , + * , + * 	// More overridden methods ..., + *, + * }, + * </pre>, + *, + * <p>If the customization options of {@link WebMvcConfigurer} do not expose , + * something you need to configure, consider removing the {@code @EnableWebMvc} , + * annotation and extending directly from {@link WebMvcConfigurationSupport} , + * overriding selected {@code @Bean} methods:, + * , + * <pre class="code">, + * &#064;Configuration, + * &#064;ComponentScan(, + * 	basePackageClasses = { MyConfiguration.class },, + * 	excludeFilters = { @Filter(type = FilterType.ANNOTATION, value = Configuration.class) }, + * ), + * public class MyConfiguration extends WebMvcConfigurationSupport {, + *, + * 	&#064;Override, + *	public void addFormatters(FormatterRegistry formatterRegistry) {, + *		formatterRegistry.addConverter(new MyConverter());, + *	}, + *, + *	&#064;Bean, + *	public RequestMappingHandlerAdapter requestMappingHandlerAdapter() {, + *		// Create or delegate to "super" to create and, + *		// customize properties of RequestMapingHandlerAdapter, + *	}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, + * A base class that provides configuration for Spring MVC applications , + * by registering Spring MVC infrastructure components detected by the ]