[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/GzipResourceResolver.java, + * Copyright 2002-2015 the original author or authors., +		if ((resource == null) || (request != null && !isGzipAccepted(request))) {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/GzipResourceResolver.java, + * Copyright 2002-2015 the original author or authors., +		if ((resource == null) || (request != null && !isGzipAccepted(request))) {, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/resource/GzipResourceResolverTests.java, +, +	// SPR-13149, +	@Test, +	public void resolveWithNullRequest() throws IOException {, +, +		String file = "js/foo.js";, +		String gzFile = file+".gz";, +		Resource gzResource = new ClassPathResource("test/"+gzFile, getClass());, +, +		// resolved resource is now cached in CachingResourceResolver, +		Resource resolved = resolver.resolveResource(null, file, locations);, +, +		assertEquals(gzResource.getDescription(), resolved.getDescription());, +		assertEquals(new ClassPathResource("test/" + file).getFilename(), resolved.getFilename());, +		assertTrue("Expected " + resolved + " to be of type " + EncodedResource.class,, +				resolved instanceof EncodedResource);, +	}]