[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/AbstractFlashMapManager.java, +		if (expectedPath != null) {, +		String queryString = getUrlPathHelper().getOriginatingQueryString(request);, +		UriComponents uriComponents = ServletUriComponentsBuilder.fromUriString(requestUri).query(queryString).build();, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/AbstractFlashMapManager.java, +		if (expectedPath != null) {, +		String queryString = getUrlPathHelper().getOriginatingQueryString(request);, +		UriComponents uriComponents = ServletUriComponentsBuilder.fromUriString(requestUri).query(queryString).build();, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/support/FlashMapManagerTests.java, +	// SPR-15505, +, +	@Test, +	public void retrieveAndUpdateMatchByOriginatingPathAndQueryString() {, +		FlashMap flashMap = new FlashMap();, +		flashMap.put("key", "value");, +		flashMap.setTargetRequestPath("/accounts");, +		flashMap.addTargetRequestParam("a", "b");, +, +		this.flashMapManager.setFlashMaps(Arrays.asList(flashMap));, +, +		this.request.setAttribute(WebUtils.FORWARD_REQUEST_URI_ATTRIBUTE, "/accounts");, +		this.request.setAttribute(WebUtils.FORWARD_QUERY_STRING_ATTRIBUTE, "a=b");, +		this.request.setRequestURI("/mvc/accounts");, +		this.request.setQueryString("x=y");, +		FlashMap inputFlashMap = this.flashMapManager.retrieveAndUpdate(this.request, this.response);, +, +		assertEquals(flashMap, inputFlashMap);, +		assertEquals("Input FlashMap should have been removed", 0, this.flashMapManager.getFlashMaps().size());, +	}]