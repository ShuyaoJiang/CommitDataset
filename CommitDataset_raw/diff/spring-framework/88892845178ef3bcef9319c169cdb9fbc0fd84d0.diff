[+++ b/build-spring-framework/resources/changelog.txt, +* Add ignoreDefaultModelOnRedirect attribute to <mvc:annotation-driven/>, +++ b/build-spring-framework/resources/changelog.txt, +* Add ignoreDefaultModelOnRedirect attribute to <mvc:annotation-driven/>, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +		if (element.hasAttribute("ignoreDefaultModelOnRedirect")) {, +			Boolean ignoreDefaultModel = Boolean.valueOf(element.getAttribute("ignoreDefaultModelOnRedirect"));, +			methodAdapterDef.getPropertyValues().add("ignoreDefaultModelOnRedirect", ignoreDefaultModel);, +		}, +++ b/build-spring-framework/resources/changelog.txt, +* Add ignoreDefaultModelOnRedirect attribute to <mvc:annotation-driven/>, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +		if (element.hasAttribute("ignoreDefaultModelOnRedirect")) {, +			Boolean ignoreDefaultModel = Boolean.valueOf(element.getAttribute("ignoreDefaultModelOnRedirect"));, +			methodAdapterDef.getPropertyValues().add("ignoreDefaultModelOnRedirect", ignoreDefaultModel);, +		}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +++ b/build-spring-framework/resources/changelog.txt, +* Add ignoreDefaultModelOnRedirect attribute to <mvc:annotation-driven/>, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +		if (element.hasAttribute("ignoreDefaultModelOnRedirect")) {, +			Boolean ignoreDefaultModel = Boolean.valueOf(element.getAttribute("ignoreDefaultModelOnRedirect"));, +			methodAdapterDef.getPropertyValues().add("ignoreDefaultModelOnRedirect", ignoreDefaultModel);, +		}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java, +	 * By default the content of the "default" model is used both during , +	 * rendering and redirect scenarios. Alternatively a controller method , +	 * can declare a {@link RedirectAttributes} argument and use it to provide, +	 * attributes for a redirect., +	 * <p>Setting this flag to {@code true} guarantees the "default" model is , +	 * never used in a redirect scenario even if a RedirectAttributes argument , +	 * is not declared. Setting it to {@code false} means the "default" model , +	 * may be used in a redirect if the controller method doesn't declare a , +	 * <p>The default setting is {@code false} but new applications should , +	 * consider setting it to {@code true}., +++ b/build-spring-framework/resources/changelog.txt, +* Add ignoreDefaultModelOnRedirect attribute to <mvc:annotation-driven/>, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +		if (element.hasAttribute("ignoreDefaultModelOnRedirect")) {, +			Boolean ignoreDefaultModel = Boolean.valueOf(element.getAttribute("ignoreDefaultModelOnRedirect"));, +			methodAdapterDef.getPropertyValues().add("ignoreDefaultModelOnRedirect", ignoreDefaultModel);, +		}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java, +	 * By default the content of the "default" model is used both during , +	 * rendering and redirect scenarios. Alternatively a controller method , +	 * can declare a {@link RedirectAttributes} argument and use it to provide, +	 * attributes for a redirect., +	 * <p>Setting this flag to {@code true} guarantees the "default" model is , +	 * never used in a redirect scenario even if a RedirectAttributes argument , +	 * is not declared. Setting it to {@code false} means the "default" model , +	 * may be used in a redirect if the controller method doesn't declare a , +	 * <p>The default setting is {@code false} but new applications should , +	 * consider setting it to {@code true}., +++ b/org.springframework.web.servlet/src/main/resources/org/springframework/web/servlet/config/spring-mvc-3.1.xsd, +			<xsd:attribute name="ignoreDefaultModelOnRedirect" type="xsd:boolean">, +				<xsd:annotation>, +					<xsd:documentation><![CDATA[, +	By default the content of the "default" model is used both during rendering and redirect scenarios. , +	Alternatively a controller method can declare a RedirectAttributes argument and use it to provide attributes for a redirect. , +	Setting this flag to true ensures the "default" model is never used in a redirect scenario even if a RedirectAttributes argument is not declared., +	Setting it to false means the "default" model may be used in a redirect if the controller method doesn't declare a RedirectAttributes argument., +	The default setting is false but new applications should consider setting it to true., +					]]></xsd:documentation>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/build-spring-framework/resources/changelog.txt, +* Add ignoreDefaultModelOnRedirect attribute to <mvc:annotation-driven/>, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +		if (element.hasAttribute("ignoreDefaultModelOnRedirect")) {, +			Boolean ignoreDefaultModel = Boolean.valueOf(element.getAttribute("ignoreDefaultModelOnRedirect"));, +			methodAdapterDef.getPropertyValues().add("ignoreDefaultModelOnRedirect", ignoreDefaultModel);, +		}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java, +	 * By default the content of the "default" model is used both during , +	 * rendering and redirect scenarios. Alternatively a controller method , +	 * can declare a {@link RedirectAttributes} argument and use it to provide, +	 * attributes for a redirect., +	 * <p>Setting this flag to {@code true} guarantees the "default" model is , +	 * never used in a redirect scenario even if a RedirectAttributes argument , +	 * is not declared. Setting it to {@code false} means the "default" model , +	 * may be used in a redirect if the controller method doesn't declare a , +	 * <p>The default setting is {@code false} but new applications should , +	 * consider setting it to {@code true}., +++ b/org.springframework.web.servlet/src/main/resources/org/springframework/web/servlet/config/spring-mvc-3.1.xsd, +			<xsd:attribute name="ignoreDefaultModelOnRedirect" type="xsd:boolean">, +				<xsd:annotation>, +					<xsd:documentation><![CDATA[, +	By default the content of the "default" model is used both during rendering and redirect scenarios. , +	Alternatively a controller method can declare a RedirectAttributes argument and use it to provide attributes for a redirect. , +	Setting this flag to true ensures the "default" model is never used in a redirect scenario even if a RedirectAttributes argument is not declared., +	Setting it to false means the "default" model may be used in a redirect if the controller method doesn't declare a RedirectAttributes argument., +	The default setting is false but new applications should consider setting it to true., +					]]></xsd:documentation>, +				</xsd:annotation>, +			</xsd:attribute>, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParserTests.java, +		assertEquals(false, new DirectFieldAccessor(adapter).getPropertyValue("ignoreDefaultModelOnRedirect"));]