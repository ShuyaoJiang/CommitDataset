[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.java, + * Copyright 2002-2011 the original author or authors., +					boolean negated = (separator > 0 && header.charAt(separator - 1) == '!');, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.java, + * Copyright 2002-2011 the original author or authors., +					boolean negated = (separator > 0 && header.charAt(separator - 1) == '!');, +++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriUtils.java, + * @see <a href="http://www.ietf.org/rfc/rfc3986.txt">RFC 3986</a>, +	 * Encodes the given source URI into an encoded String. All various URI components are, +	 * encoded according to their respective valid character sets., +	 * Encodes the given HTTP URI into an encoded String. All various URI components are, +	 * encoded according to their respective valid character sets., +	 * <p><strong>Note</strong> that this method does not support fragments ({@code #}),, +	 * Encodes the given source URI components into an encoded String. All various URI components, +	 * are optional, but encoded according to their respective valid character sets., +	public static String encodeUriComponents(String scheme, String authority, String userInfo,, +			String host, String port, String path, String query, String fragment, String encoding), +			throws UnsupportedEncodingException {, +, +		int portAsInt = (port != null ? Integer.parseInt(port) : -1);, +]