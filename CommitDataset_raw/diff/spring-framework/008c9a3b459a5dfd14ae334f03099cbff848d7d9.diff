[+++ b/spring-core/src/main/java/org/springframework/core/convert/support/ByteBufferConverter.java, +, +		return ((Buffer) byteBuffer).rewind();, +++ b/spring-core/src/main/java/org/springframework/core/convert/support/ByteBufferConverter.java, +, +		return ((Buffer) byteBuffer).rewind();, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/ByteBufferConverterTests.java, +		assertThat(convert.array(), not(sameInstance(bytes)));, +		assertThat(convert.array(), equalTo(bytes));, +		assertThat(convert, not(sameInstance(bytes)));, +		assertThat(convert, equalTo(bytes));, +		assertThat(convert.bytes, not(sameInstance(bytes)));, +		assertThat(convert.bytes, equalTo(bytes));, +		assertThat(convert.array(), not(sameInstance(bytes)));, +		assertThat(convert.array(), equalTo(bytes));, +	}, +, +	@Test, +	public void byteBufferToByteBuffer() throws Exception {, +		byte[] bytes = new byte[] { 1, 2, 3 };, +		ByteBuffer byteBuffer = ByteBuffer.wrap(bytes);, +		ByteBuffer convert = this.conversionService.convert(byteBuffer, ByteBuffer.class);, +		assertThat(convert, not(sameInstance(byteBuffer.rewind())));, +		assertThat(convert, equalTo(byteBuffer.rewind()));]