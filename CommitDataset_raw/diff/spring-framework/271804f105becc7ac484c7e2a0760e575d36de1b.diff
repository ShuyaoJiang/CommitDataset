[+++ b/spring-context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java, +	enum ISO {, +		 * e.g. "2000-10-31"., +		 * e.g. "01:30:00.000-05:00"., +		 * e.g. "2000-10-31 01:30:00.000-05:00"., +++ b/spring-context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java, +	enum ISO {, +		 * e.g. "2000-10-31"., +		 * e.g. "01:30:00.000-05:00"., +		 * e.g. "2000-10-31 01:30:00.000-05:00"., +++ b/spring-context/src/main/java/org/springframework/format/annotation/NumberFormat.java, +	enum Style {, +		 * The default format for the annotated type: typically 'number' but possibly, +		 * 'currency' for a money type (e.g. {@code javax.money.MonetaryAmount)}., +		PERCENT,, +, +		/**, +		 * The currency format for the current locale., +		 */, +		CURRENCY, +++ b/spring-context/src/main/java/org/springframework/format/annotation/DateTimeFormat.java, +	enum ISO {, +		 * e.g. "2000-10-31"., +		 * e.g. "01:30:00.000-05:00"., +		 * e.g. "2000-10-31 01:30:00.000-05:00"., +++ b/spring-context/src/main/java/org/springframework/format/annotation/NumberFormat.java, +	enum Style {, +		 * The default format for the annotated type: typically 'number' but possibly, +		 * 'currency' for a money type (e.g. {@code javax.money.MonetaryAmount)}., +		PERCENT,, +, +		/**, +		 * The currency format for the current locale., +		 */, +		CURRENCY, +++ b/spring-context/src/main/java/org/springframework/format/number/NumberFormatAnnotationFormatterFactory.java, +			if (style == Style.CURRENCY) {, +			else if (style == Style.PERCENT) {, +				return new PercentStyleFormatter();, +			}]