[+++ b/spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java, +	public Map<String, MediaType> getMediaTypes() {, +		return this.mediaTypes;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java, +	public Map<String, MediaType> getMediaTypes() {, +		return this.mediaTypes;, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +import java.util.HashMap;, +import java.util.Map;, +import org.springframework.web.accept.ServletPathExtensionContentNegotiationStrategy;, +	private ServletPathExtensionContentNegotiationStrategy pathExtensionStrategy;, +, +	private ServletContext servletContext;, +		this.servletContext = servletContext;, +		this.pathExtensionStrategy = initPathExtensionStrategy();, +	protected ServletPathExtensionContentNegotiationStrategy initPathExtensionStrategy() {, +		Map<String, MediaType> mediaTypes = null;, +		if (getContentNegotiationManager() != null) {, +			PathExtensionContentNegotiationStrategy strategy =, +					getContentNegotiationManager().getStrategy(PathExtensionContentNegotiationStrategy.class);, +			if (strategy != null) {, +				mediaTypes = new HashMap<>(strategy.getMediaTypes());, +			}, +		}, +		return new ServletPathExtensionContentNegotiationStrategy(this.servletContext, mediaTypes);, +	}, +, +, +		return this.pathExtensionStrategy.getMediaTypeForResource(resource);, +++ b/spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java, +	public Map<String, MediaType> getMediaTypes() {, +		return this.mediaTypes;, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +import java.util.HashMap;, +import java.util.Map;, +import org.springframework.web.accept.ServletPathExtensionContentNegotiationStrategy;, +	private ServletPathExtensionContentNegotiationStrategy pathExtensionStrategy;, +, +	private ServletContext servletContext;, +		this.servletContext = servletContext;, +		this.pathExtensionStrategy = initPathExtensionStrategy();, +	protected ServletPathExtensionContentNegotiationStrategy initPathExtensionStrategy() {, +		Map<String, MediaType> mediaTypes = null;, +		if (getContentNegotiationManager() != null) {, +			PathExtensionContentNegotiationStrategy strategy =, +					getContentNegotiationManager().getStrategy(PathExtensionContentNegotiationStrategy.class);, +			if (strategy != null) {, +				mediaTypes = new HashMap<>(strategy.getMediaTypes());, +			}, +		}, +		return new ServletPathExtensionContentNegotiationStrategy(this.servletContext, mediaTypes);, +	}, +, +, +		return this.pathExtensionStrategy.getMediaTypeForResource(resource);, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.java, +		ResourceHttpRequestHandler handler = new ResourceHttpRequestHandler();, +		handler.setServletContext(new MockServletContext());, +		handler.setLocations(paths);, +		handler.setContentNegotiationManager(manager);, +		handler.afterPropertiesSet();, +		handler.handleRequest(this.request, this.response);, +	@Test // SPR-14577, +	public void getMediaTypeWithFavorPathExtensionOff() throws Exception {, +		ResourceHttpRequestHandler handler = new ResourceHttpRequestHandler();, +		handler.setServletContext(new MockServletContext());, +		handler.setLocations(paths);, +		handler.setContentNegotiationManager(manager);, +		handler.afterPropertiesSet();, +		this.request.addHeader("Accept", "application/json,text/plain,*/*");, +		this.request.setAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE, "foo.html");, +		handler.handleRequest(this.request, this.response);, +		assertEquals("text/html", this.response.getContentType());, +		ResourceHttpRequestHandler handler = new ResourceHttpRequestHandler();, +		handler.setServletContext(servletContext);, +		handler.setLocations(paths);, +		handler.afterPropertiesSet();, +		handler.handleRequest(this.request, this.response);, +		handler.setServletContext(new MockServletContext());, +++ b/spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java, +	public Map<String, MediaType> getMediaTypes() {, +		return this.mediaTypes;, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +import java.util.HashMap;, +import java.util.Map;, +import org.springframework.web.accept.ServletPathExtensionContentNegotiationStrategy;, +	private ServletPathExtensionContentNegotiationStrategy pathExtensionStrategy;, +, +	private ServletContext servletContext;, +		this.servletContext = servletContext;, +		this.pathExtensionStrategy = initPathExtensionStrategy();, +	protected ServletPathExtensionContentNegotiationStrategy initPathExtensionStrategy() {]