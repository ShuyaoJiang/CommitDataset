[+++ b/spring-web/src/main/java/org/springframework/http/converter/ResourceHttpMessageConverter.java, + * @author Juergen Hoeller, + * @author Kazuki Shimizu, +		if (InputStreamResource.class == clazz){, +			return new InputStreamResource(inputMessage.getBody());, +		}, +		else if (clazz.isAssignableFrom(ByteArrayResource.class)) {, +		else {, +			throw new IllegalStateException("Unsupported resource class: " + clazz);, +		}, +	}, +++ b/spring-web/src/main/java/org/springframework/http/converter/ResourceHttpMessageConverter.java, + * @author Juergen Hoeller, + * @author Kazuki Shimizu, +		if (InputStreamResource.class == clazz){, +			return new InputStreamResource(inputMessage.getBody());, +		}, +		else if (clazz.isAssignableFrom(ByteArrayResource.class)) {, +		else {, +			throw new IllegalStateException("Unsupported resource class: " + clazz);, +		}, +	}, +++ b/spring-web/src/test/java/org/springframework/http/converter/ResourceHttpMessageConverterTests.java, + * Copyright 2002-2015 the original author or authors., +import java.io.InputStream;, +import org.springframework.core.io.InputStreamResource;, +import static org.hamcrest.core.Is.*;, +import static org.hamcrest.core.IsInstanceOf.*;, + * @author Kazuki Shimizu, +	private final ResourceHttpMessageConverter converter = new ResourceHttpMessageConverter();, +		Resource actualResource = converter.read(Resource.class, inputMessage);, +		assertThat(FileCopyUtils.copyToByteArray(actualResource.getInputStream()), is(body));, +	}, +, +	@Test  // SPR-13443, +	public void readWithInputStreamResource() throws IOException {, +		try (InputStream body = getClass().getResourceAsStream("logo.jpg") ) {, +			MockHttpInputMessage inputMessage = new MockHttpInputMessage(body);, +			inputMessage.getHeaders().setContentType(MediaType.IMAGE_JPEG);, +			Resource actualResource = converter.read(InputStreamResource.class, inputMessage);, +			assertThat(actualResource, instanceOf(InputStreamResource.class));, +			assertThat(actualResource.getInputStream(), is(body));, +		}, +	@Test  // SPR-10848]