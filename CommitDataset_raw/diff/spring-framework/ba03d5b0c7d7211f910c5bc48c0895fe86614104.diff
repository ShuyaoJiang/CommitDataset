[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/freemarker/spring.ftl, +	<input type="hidden" name="_${status.expression}" value="on"/>, +	<input type="checkbox" id="${id}" name="${status.expression}"<#if isSelected> checked="checked"</#if> ${attributes}/>, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/freemarker/spring.ftl, +	<input type="hidden" name="_${status.expression}" value="on"/>, +	<input type="checkbox" id="${id}" name="${status.expression}"<#if isSelected> checked="checked"</#if> ${attributes}/>, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/view/freemarker/FreeMarkerMacroTests.java, +		Map<String, Object> model = new HashMap<String, Object>();, +		Map<String, Object> model = new HashMap<String, Object>();, +	@Test, +	public void testForm18() throws Exception {, +		String output = getMacroOutput("FORM18");, +		assertTrue("Wrong output: " + output, output.startsWith("<input type=\"hidden\" name=\"_spouses[0].jedi\" value=\"on\"/>"));, +		assertTrue("Wrong output: " + output, output.contains("<input type=\"checkbox\" id=\"spouses0.jedi\" name=\"spouses[0].jedi\" checked=\"checked\" />"));, +	}, +, +		Map<String, String> msgMap = new HashMap<String, String>();, +		Map<String, String> themeMsgMap = new HashMap<String, String>();, +		TestBean darren = new TestBean("Darren", 99);, +		TestBean fred = new TestBean("Fred");, +		fred.setJedi(true);, +		darren.setSpouse(fred);, +		darren.setJedi(true);, +		request.setAttribute("command", darren);, +		Map<String, String> names = new HashMap<String, String>();, +		Map<String, Object> model = new HashMap<String, Object>();, +		model.put("command", darren);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/freemarker/spring.ftl, +	<input type="hidden" name="_${status.expression}" value="on"/>, +	<input type="checkbox" id="${id}" name="${status.expression}"<#if isSelected> checked="checked"</#if> ${attributes}/>, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/view/freemarker/FreeMarkerMacroTests.java, +		Map<String, Object> model = new HashMap<String, Object>();, +		Map<String, Object> model = new HashMap<String, Object>();, +	@Test, +	public void testForm18() throws Exception {, +		String output = getMacroOutput("FORM18");, +		assertTrue("Wrong output: " + output, output.startsWith("<input type=\"hidden\" name=\"_spouses[0].jedi\" value=\"on\"/>"));, +		assertTrue("Wrong output: " + output, output.contains("<input type=\"checkbox\" id=\"spouses0.jedi\" name=\"spouses[0].jedi\" checked=\"checked\" />"));, +	}, +, +		Map<String, String> msgMap = new HashMap<String, String>();, +		Map<String, String> themeMsgMap = new HashMap<String, String>();, +		TestBean darren = new TestBean("Darren", 99);, +		TestBean fred = new TestBean("Fred");, +		fred.setJedi(true);, +		darren.setSpouse(fred);, +		darren.setJedi(true);, +		request.setAttribute("command", darren);, +		Map<String, String> names = new HashMap<String, String>();, +		Map<String, Object> model = new HashMap<String, Object>();, +		model.put("command", darren);, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/view/freemarker/test.ftl, +, +FORM18, +<@spring.formCheckbox "command.spouses[0].jedi" />]