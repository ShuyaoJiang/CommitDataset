[+++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +				// Ignoring failure due to missing result, consider the cache put has to proceed, +		// Check if all puts have been excluded by condition, +		return (cachePutContexts.size() != excluded.size());, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +				// Ignoring failure due to missing result, consider the cache put has to proceed, +		// Check if all puts have been excluded by condition, +		return (cachePutContexts.size() != excluded.size());, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener.java, +	 * @return the payload response to handle, either the {@code result} argument, +	 * or any other object (for instance wrapping the result)., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +				// Ignoring failure due to missing result, consider the cache put has to proceed, +		// Check if all puts have been excluded by condition, +		return (cachePutContexts.size() != excluded.size());, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener.java, +	 * @return the payload response to handle, either the {@code result} argument, +	 * or any other object (for instance wrapping the result)., +++ b/spring-jms/src/main/java/org/springframework/jms/support/converter/MappingJackson2MessageConverter.java, +, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +				// Ignoring failure due to missing result, consider the cache put has to proceed, +		// Check if all puts have been excluded by condition, +		return (cachePutContexts.size() != excluded.size());, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener.java, +	 * @return the payload response to handle, either the {@code result} argument, +	 * or any other object (for instance wrapping the result)., +++ b/spring-jms/src/main/java/org/springframework/jms/support/converter/MappingJackson2MessageConverter.java, +, +++ b/spring-jms/src/main/java/org/springframework/jms/support/converter/MessagingMessageConverter.java, +	 * Create a JMS message for the specified payload and conversionHint., +	 * The conversion hint is an extra object passed to the {@link MessageConverter},, +	 * e.g. the associated {@code MethodParameter} (may be {@code null}}., +]