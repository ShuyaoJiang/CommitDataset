[+++ b/build.gradle, +	ext.activationVersion    = "1.1.1", +	ext.groovyVersion        = "2.4.12", +	ext.jettyVersion         = "9.4.7.RC0", +	ext.junitVintageVersion  = "4.12.0-RC2", +		testCompile("junit:junit:4.12") {, +		testCompile("org.hamcrest:hamcrest-all:1.3"), +		testCompile("org.xmlunit:xmlunit-matchers:2.3.0"), +		"http://ehcache.org/apidocs/2.10.4",, +		testCompile("com.fasterxml.woodstox:woodstox-core:5.0.3") {, +		optional("org.yaml:snakeyaml:1.18"), +		optional("javax.annotation:javax.annotation-api:1.3"), +		optional("javax.ejb:javax.ejb-api:3.2"), +		optional("javax.interceptor:javax.interceptor-api:1.2"), +		optional("joda-time:joda-time:2.9.9"), +		optional("javax.activation:activation:${activationVersion}"), +		optional("com.thoughtworks.xstream:xstream:1.4.10") {, +		testCompile("javax.servlet:javax.servlet-api:3.1.0"), +		testCompile("javax.validation:validation-api:1.1.0.Final"), +		testCompile("com.thoughtworks.xstream:xstream:1.4.10"), +		testRuntime("javax.activation:activation:${activationVersion}"), +		optional("javax.ejb:javax.ejb-api:3.2"), +		optional("javax.interceptor:javax.interceptor-api:1.2"), +		optional("javax.resource:javax.resource-api:1.7"), +		optional("javax.transaction:javax.transaction-api:1.2"), +		testCompile("org.eclipse.persistence:javax.persistence:2.1.1"), +		provided("javax.jms:javax.jms-api:2.0.1"), +		optional("javax.resource:javax.resource-api:1.7"), +		optional("javax.transaction:javax.transaction-api:1.2"), +		optional("javax.transaction:javax.transaction-api:1.2"), +		testCompile("javax.annotation:javax.annotation-api:1.3"), +		testCompile("org.eclipse.persistence:javax.persistence:2.1.1"), +		optional("javax.activation:activation:${activationVersion}"), +		optional("javax.cache:cache-api:1.0.0"), +		optional("com.github.ben-manes.caffeine:caffeine:2.5.5"), +		optional("net.sf.ehcache:ehcache:2.10.4"), +		optional("org.quartz-scheduler:quartz:2.3.0"), +		testCompile("org.hibernate:hibernate-validator:6.0.1.Final"), +		testRuntime("org.ehcache:jcache:1.0.1"), +		testRuntime("org.ehcache:ehcache:3.3.1"), +		testRuntime("javax.annotation:javax.annotation-api:1.3"), +		optional("javax.servlet:javax.servlet-api:3.1.0"), +		optional("javax.servlet.jsp:javax.servlet.jsp-api:2.3.2-b02"), +		optional("javax.el:javax.el-api:3.0.1-b04"), +		optional("javax.faces:javax.faces-api:2.2"), +		optional("javax.validation:validation-api:1.1.0.Final"), +		optional("commons-fileupload:commons-fileupload:1.3.3"), +		optional("org.synchronoss.cloud:nio-multipart-parser:1.1.0"), +	  	optional("com.fasterxml.woodstox:woodstox-core:5.0.3") {  // woodstox before aalto, +		optional("org.apache.httpcomponents:httpasyncclient:4.1.3") {, +		optional("com.google.code.gson:gson:2.8.1"), +		optional("com.rometools:rome:1.7.4"), +		optional("com.google.protobuf:protobuf-java-util:3.4.0"), +		testCompile("io.reactivex:rxnetty-http:0.5.2") {, +		testCompile("org.skyscreamer:jsonassert:1.5.0"), +		optional("org.eclipse.persistence:org.eclipse.persistence.jpa:2.7.0-RC3"), +		optional("org.hibernate:hibernate-core:5.2.10.Final"), +		optional("javax.servlet:javax.servlet-api:3.1.0"), +		provided("javax.servlet:javax.servlet-api:4.0.0"), +		optional("javax.servlet.jsp:javax.servlet.jsp-api:2.3.2-b02"), +		optional("javax.el:javax.el-api:3.0.1-b04"), +		optional("org.apache.poi:poi-ooxml:3.16"), +		optional("com.lowagie:itext:2.1.7"), +		optional("com.rometools:rome:1.7.4"), +		optional("org.reactivestreams:reactive-streams"), +		testCompile("javax.servlet:javax.servlet-api:4.0.0"), +		testCompile("org.eclipse.jetty:jetty-servlet:${jettyVersion}") {, +			exclude group: "javax.servlet", module: "javax.servlet", +		}, +		testCompile("org.eclipse.jetty:jetty-server:${jettyVersion}") {, +			exclude group: "javax.servlet", module: "javax.servlet", +		}, +		testCompile("org.hibernate:hibernate-validator:6.0.1.Final"), +		testCompile("org.apache.httpcomponents:httpclient:${httpclientVersion}") {, +			exclude group: "commons-logging", module: "commons-logging", +		}, +		testCompile("commons-fileupload:commons-fileupload:1.3.3"), +		testCompile("commons-io:commons-io:2.5"), +		testCompile("joda-time:joda-time:2.9.9"), +		testCompile("org.mozilla:rhino:1.7.7.1"), +		testCompile("io.reactivex.rxjava2:rxjava:${rxjava2Version}"), +		testRuntime("javax.activation:activation:${activationVersion}"), +		optional("javax.servlet:javax.servlet-api:3.1.0"), +		optional("javax.websocket:javax.websocket-api:1.1"), +		optional("org.glassfish.tyrus:tyrus-container-servlet:1.13.1"), +		optional("javax.servlet:javax.servlet-api:3.1.0"), +		optional("javax.websocket:javax.websocket-api:1.1"), +		testCompile("javax.xml.bind:jaxb-api:${jaxbVersion}"), +		testCompile("org.hibernate:hibernate-validator:6.0.1.Final"), +		testCompile("io.reactivex:rxnetty-http:0.5.2") {, +		testRuntime("org.synchronoss.cloud:nio-multipart-parser:1.1.0"), +		testRuntime("javax.activation:activation:${activationVersion}"), +		optional("junit:junit:4.12"), +		optional("org.testng:testng:6.11"), +		optional("javax.servlet:javax.servlet-api:4.0.0"), +		optional("javax.servlet.jsp:javax.servlet.jsp-api:2.3.2-b02"), +		optional("javax.el:javax.el-api:3.0.1-b04"), +		optional("javax.websocket:javax.websocket-api:1.1"), +		optional("javax.activation:activation:${activationVersion}"), +		optional("org.hamcrest:hamcrest-core:1.3")]