[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java, +, +		boolean registerDefaults = configureMessageConverters(converters);, +		if (registerDefaults) {, +, +		ContentTypeResolver contentTypeResolver = getContentTypeResolver();, +		if (contentTypeResolver == null) {, +			contentTypeResolver = new DefaultContentTypeResolver();, +			if (jackson2Present && registerDefaults) {, +				((DefaultContentTypeResolver) contentTypeResolver).setDefaultMimeType(MimeTypeUtils.APPLICATION_JSON);, +			}, +		return new CompositeMessageConverter(converters, contentTypeResolver);, +	}, +, +	/**, +	 * Override this method to add custom message converters., +	 * @param messageConverters the list to add converters to, initially empty, +	 *, +	 * @return {@code true} if default message converters should be added to list,, +	 * 	{@code false} if no more converters should be added., +	 */, +	/**, +	 * Override this method to provide a custom {@link ContentTypeResolver}., +	 */, +		return null;, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java, +, +		boolean registerDefaults = configureMessageConverters(converters);, +		if (registerDefaults) {, +, +		ContentTypeResolver contentTypeResolver = getContentTypeResolver();, +		if (contentTypeResolver == null) {, +			contentTypeResolver = new DefaultContentTypeResolver();, +			if (jackson2Present && registerDefaults) {, +				((DefaultContentTypeResolver) contentTypeResolver).setDefaultMimeType(MimeTypeUtils.APPLICATION_JSON);, +			}, +		return new CompositeMessageConverter(converters, contentTypeResolver);, +	}, +, +	/**, +	 * Override this method to add custom message converters., +	 * @param messageConverters the list to add converters to, initially empty, +	 *, +	 * @return {@code true} if default message converters should be added to list,, +	 * 	{@code false} if no more converters should be added., +	 */, +	/**, +	 * Override this method to provide a custom {@link ContentTypeResolver}., +	 */, +		return null;, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/config/MessageBrokerConfigurationTests.java, +, +		DefaultContentTypeResolver resolver = (DefaultContentTypeResolver) compositeConverter.getContentTypeResolver();, +		assertEquals(MimeTypeUtils.APPLICATION_JSON, resolver.getDefaultMimeType());, +		CompositeMessageConverter compositeConverter = config.brokerMessageConverter();, +, +		DefaultContentTypeResolver resolver = (DefaultContentTypeResolver) compositeConverter.getContentTypeResolver();, +		assertNull(resolver.getDefaultMimeType());, +, +		DefaultContentTypeResolver resolver = (DefaultContentTypeResolver) compositeConverter.getContentTypeResolver();, +		assertEquals(MimeTypeUtils.APPLICATION_JSON, resolver.getDefaultMimeType());]