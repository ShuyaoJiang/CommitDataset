[+++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +import java.nio.charset.StandardCharsets;, +import org.springframework.http.server.reactive.PathContainer;, +import org.springframework.http.server.reactive.RequestPath;, +	private final RequestPath pathContainer;, +, +	private MockServerRequest(HttpMethod method, URI uri, String contextPath, MockHeaders headers,, +		this.pathContainer = RequestPath.create(uri, contextPath, StandardCharsets.UTF_8);, +	public PathContainer pathContainer() {, +		return this.pathContainer;, +	}, +, +	@Override, +		Builder contextPath(String contextPath);, +, +		private String contextPath = "";, +, +		public Builder contextPath(String contextPath) {, +			Assert.notNull(contextPath, "'contextPath' must not be null");, +			this.contextPath = contextPath;, +			return this;, +, +		}, +, +		@Override, +			return new MockServerRequest(this.method, this.uri, this.contextPath, this.headers,, +					this.cookies, this.body, this.attributes, this.queryParams, this.pathVariables,, +					this.session, this.principal);, +			return new MockServerRequest(this.method, this.uri, this.contextPath, this.headers,, +					this.cookies, null, this.attributes, this.queryParams, this.pathVariables,, +					this.session, this.principal);, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +import java.nio.charset.StandardCharsets;, +import org.springframework.http.server.reactive.PathContainer;, +import org.springframework.http.server.reactive.RequestPath;, +	private final RequestPath pathContainer;, +, +	private MockServerRequest(HttpMethod method, URI uri, String contextPath, MockHeaders headers,, +		this.pathContainer = RequestPath.create(uri, contextPath, StandardCharsets.UTF_8);, +	public PathContainer pathContainer() {, +		return this.pathContainer;, +	}, +, +	@Override, +		Builder contextPath(String contextPath);, +, +		private String contextPath = "";, +, +		public Builder contextPath(String contextPath) {, +			Assert.notNull(contextPath, "'contextPath' must not be null");, +			this.contextPath = contextPath;, +			return this;, +, +		}, +, +		@Override, +			return new MockServerRequest(this.method, this.uri, this.contextPath, this.headers,, +					this.cookies, this.body, this.attributes, this.queryParams, this.pathVariables,, +					this.session, this.principal);, +			return new MockServerRequest(this.method, this.uri, this.contextPath, this.headers,, +					this.cookies, null, this.attributes, this.queryParams, this.pathVariables,, +					this.session, this.principal);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/RequestPath.java, +import java.net.URI;, +import java.nio.charset.Charset;, +, +	/**, +	 * Create a new {@code RequestPath} with the given parameters., +	 */, +	static RequestPath create(URI uri, String contextPath, Charset charset) {, +		return new DefaultRequestPath(uri, contextPath, charset);, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +import java.nio.charset.StandardCharsets;, +import org.springframework.http.server.reactive.PathContainer;, +import org.springframework.http.server.reactive.RequestPath;, +	private final RequestPath pathContainer;, +, +	private MockServerRequest(HttpMethod method, URI uri, String contextPath, MockHeaders headers,, +		this.pathContainer = RequestPath.create(uri, contextPath, StandardCharsets.UTF_8);, +	public PathContainer pathContainer() {, +		return this.pathContainer;, +	}, +, +	@Override, +		Builder contextPath(String contextPath);, +, +		private String contextPath = "";, +, +		public Builder contextPath(String contextPath) {, +			Assert.notNull(contextPath, "'contextPath' must not be null");, +			this.contextPath = contextPath;, +			return this;, +, +		}, +, +		@Override, +			return new MockServerRequest(this.method, this.uri, this.contextPath, this.headers,, +					this.cookies, this.body, this.attributes, this.queryParams, this.pathVariables,]