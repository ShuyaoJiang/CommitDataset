[+++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, + * Copyright 2002-2015 the original author or authors., +import java.util.Arrays;, +	private boolean createXmlMapper;, +	private Class<? extends Module>[] moduleClasses;, +	private boolean findWellKnownModules = true;, +, +	 * Specify one or more modules to be registered with the {@link ObjectMapper}., +	 * <p>Note: If this is set, no finding of modules is going to happen - not by, +	 * Jackson, and not by Spring either (see {@link #findModulesViaServiceLoader})., +	 * As a consequence, specifying an empty list here will suppress any kind of, +	 * module detection., +	 * <p>Specify either this or {@link #modulesToInstall}, not both., +	 * @since 4.1.5, +	 * @see #modules(List), +	 * @see com.fasterxml.jackson.databind.Module, +	 */, +	public Jackson2ObjectMapperBuilder modules(Module... modules) {, +		return modules(Arrays.asList(modules));, +	}, +, +	/**, +	 * @see #modules(Module...), +		this.findModulesViaServiceLoader = false;, +		this.findWellKnownModules = false;, +		return this;, +	}, +, +	/**, +	 * Specify one or more modules to be registered with the {@link ObjectMapper}., +	 * <p>Modules specified here will be registered after, +	 * Spring's autodetection of JSR-310 and Joda-Time, or Jackson's, +	 * finding of modules (see {@link #findModulesViaServiceLoader}),, +	 * allowing to eventually override their configuration., +	 * <p>Specify either this or {@link #modules}, not both., +	 * @since 4.1.5, +	 * @see com.fasterxml.jackson.databind.Module, +	 */, +	public Jackson2ObjectMapperBuilder modulesToInstall(Module... modules) {, +		this.modules = Arrays.asList(modules);, +		this.findWellKnownModules = true;, +	 * @see #modulesToInstall(Module...), +		this.moduleClasses = modules;, +		this.findWellKnownModules = true;, +		if (this.findModulesViaServiceLoader) {, +			// Jackson 2.2+, +			objectMapper.registerModules(ObjectMapper.findModules(this.moduleClassLoader));, +		}, +		else if (this.findWellKnownModules) {, +			registerWellKnownModulesIfAvailable(objectMapper);, +		}, +		if (this.moduleClasses != null) {, +			for (Class<? extends Module> module : this.moduleClasses) {, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, + * Copyright 2002-2015 the original author or authors., +import java.util.Arrays;, +	private boolean createXmlMapper;, +	private Class<? extends Module>[] moduleClasses;, +	private boolean findWellKnownModules = true;, +, +	 * Specify one or more modules to be registered with the {@link ObjectMapper}., +	 * <p>Note: If this is set, no finding of modules is going to happen - not by, +	 * Jackson, and not by Spring either (see {@link #findModulesViaServiceLoader})., +	 * As a consequence, specifying an empty list here will suppress any kind of, +	 * module detection., +	 * <p>Specify either this or {@link #modulesToInstall}, not both., +	 * @since 4.1.5, +	 * @see #modules(List), +	 * @see com.fasterxml.jackson.databind.Module, +	 */, +	public Jackson2ObjectMapperBuilder modules(Module... modules) {, +		return modules(Arrays.asList(modules));, +	}, +, +	/**, +	 * @see #modules(Module...), +		this.findModulesViaServiceLoader = false;, +		this.findWellKnownModules = false;, +		return this;, +	}, +, +	/**, +	 * Specify one or more modules to be registered with the {@link ObjectMapper}., +	 * <p>Modules specified here will be registered after, +	 * Spring's autodetection of JSR-310 and Joda-Time, or Jackson's, +	 * finding of modules (see {@link #findModulesViaServiceLoader}),, +	 * allowing to eventually override their configuration., +	 * <p>Specify either this or {@link #modules}, not both., +	 * @since 4.1.5, +	 * @see com.fasterxml.jackson.databind.Module, +	 */, +	public Jackson2ObjectMapperBuilder modulesToInstall(Module... modules) {, +		this.modules = Arrays.asList(modules);, +		this.findWellKnownModules = true;, +	 * @see #modulesToInstall(Module...), +		this.moduleClasses = modules;, +		this.findWellKnownModules = true;, +		if (this.findModulesViaServiceLoader) {, +			// Jackson 2.2+, +			objectMapper.registerModules(ObjectMapper.findModules(this.moduleClassLoader));]