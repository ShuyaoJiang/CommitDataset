[+++ b/spring-test/src/main/java/org/springframework/mock/http/MockHttpInputMessage.java, + * Copyright 2002-2016 the original author or authors., +, +		this.body = (contents != null ? new ByteArrayInputStream(contents) : null);, +		Assert.notNull(body, "InputStream must not be null");, +, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/MockHttpInputMessage.java, + * Copyright 2002-2016 the original author or authors., +, +		this.body = (contents != null ? new ByteArrayInputStream(contents) : null);, +		Assert.notNull(body, "InputStream must not be null");, +, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/MockClientHttpRequest.java, + * Copyright 2002-2016 the original author or authors., +	private URI uri;, +	private boolean executed = false;, +, +	public void setMethod(HttpMethod httpMethod) {, +		this.httpMethod = httpMethod;, +	public void setURI(URI uri) {, +		this.uri = uri;, +	}, +, +	@Override, +	public URI getURI() {, +		return this.uri;, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/MockHttpInputMessage.java, + * Copyright 2002-2016 the original author or authors., +, +		this.body = (contents != null ? new ByteArrayInputStream(contents) : null);, +		Assert.notNull(body, "InputStream must not be null");, +, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/MockClientHttpRequest.java, + * Copyright 2002-2016 the original author or authors., +	private URI uri;, +	private boolean executed = false;, +, +	public void setMethod(HttpMethod httpMethod) {, +		this.httpMethod = httpMethod;, +	public void setURI(URI uri) {, +		this.uri = uri;, +	}, +, +	@Override, +	public URI getURI() {, +		return this.uri;, +, +++ b/spring-test/src/main/java/org/springframework/test/web/client/response/DefaultResponseCreator.java, +		Assert.notNull(statusCode, "HttpStatus must not be null");, +++ b/spring-test/src/main/java/org/springframework/mock/http/MockHttpInputMessage.java, + * Copyright 2002-2016 the original author or authors., +, +		this.body = (contents != null ? new ByteArrayInputStream(contents) : null);, +		Assert.notNull(body, "InputStream must not be null");, +, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/MockClientHttpRequest.java, + * Copyright 2002-2016 the original author or authors., +	private URI uri;, +	private boolean executed = false;, +, +	public void setMethod(HttpMethod httpMethod) {, +		this.httpMethod = httpMethod;, +	public void setURI(URI uri) {, +		this.uri = uri;, +	}, +, +	@Override, +	public URI getURI() {, +		return this.uri;, +, +++ b/spring-test/src/main/java/org/springframework/test/web/client/response/DefaultResponseCreator.java, +		Assert.notNull(statusCode, "HttpStatus must not be null");, +++ b/spring-test/src/test/java/org/springframework/test/web/client/match/XpathRequestMatchersTests.java, + * Copyright 2002-2016 the original author or authors., +, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/MockHttpInputMessage.java, + * Copyright 2002-2016 the original author or authors., +, +		this.body = (contents != null ? new ByteArrayInputStream(contents) : null);, +		Assert.notNull(body, "InputStream must not be null");, +, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/MockClientHttpRequest.java, + * Copyright 2002-2016 the original author or authors., +	private URI uri;, +	private boolean executed = false;, +, +	public void setMethod(HttpMethod httpMethod) {, +		this.httpMethod = httpMethod;, +	public void setURI(URI uri) {, +		this.uri = uri;, +	}, +, +	@Override]