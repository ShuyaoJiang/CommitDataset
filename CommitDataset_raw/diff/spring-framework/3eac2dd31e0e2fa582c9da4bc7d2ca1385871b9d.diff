[+++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +				else if (isForwardedSslOn(headers)) {, +					scheme("https");, +					port(null);, +				}, +				else if (isForwardedSslOn(headers)) {, +					scheme("https");, +					port(null);, +				}, +	private boolean isForwardedSslOn(HttpHeaders headers) {, +		String forwardedSsl = headers.getFirst("X-Forwarded-Ssl");, +		return StringUtils.hasText(forwardedSsl) && forwardedSsl.equalsIgnoreCase("on");, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +				else if (isForwardedSslOn(headers)) {, +					scheme("https");, +					port(null);, +				}, +				else if (isForwardedSslOn(headers)) {, +					scheme("https");, +					port(null);, +				}, +	private boolean isForwardedSslOn(HttpHeaders headers) {, +		String forwardedSsl = headers.getFirst("X-Forwarded-Ssl");, +		return StringUtils.hasText(forwardedSsl) && forwardedSsl.equalsIgnoreCase("on");, +	}, +, +++ b/spring-web/src/test/java/org/springframework/web/filter/ForwardedHeaderFilterTests.java, +import static org.mockito.Mockito.*;, +		FilterChain filterChain = new MockFilterChain(mock(HttpServlet.class), this.filter, filter);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +				else if (isForwardedSslOn(headers)) {, +					scheme("https");, +					port(null);, +				}, +				else if (isForwardedSslOn(headers)) {, +					scheme("https");, +					port(null);, +				}, +	private boolean isForwardedSslOn(HttpHeaders headers) {, +		String forwardedSsl = headers.getFirst("X-Forwarded-Ssl");, +		return StringUtils.hasText(forwardedSsl) && forwardedSsl.equalsIgnoreCase("on");, +	}, +, +++ b/spring-web/src/test/java/org/springframework/web/filter/ForwardedHeaderFilterTests.java, +import static org.mockito.Mockito.*;, +		FilterChain filterChain = new MockFilterChain(mock(HttpServlet.class), this.filter, filter);, +++ b/spring-web/src/test/java/org/springframework/web/util/UriComponentsBuilderTests.java, +	@Test  // SPR-16863, +	public void fromHttpRequestWithForwardedSsl() {, +		MockHttpServletRequest request = new MockHttpServletRequest();, +		request.setScheme("http");, +		request.setServerName("example.org");, +		request.setServerPort(10080);, +		request.addHeader("X-Forwarded-Ssl", "on");, +, +		HttpRequest httpRequest = new ServletServerHttpRequest(request);, +		UriComponents result = UriComponentsBuilder.fromHttpRequest(httpRequest).build();, +, +		assertEquals("https", result.getScheme());, +		assertEquals("example.org", result.getHost());, +		assertEquals(-1, result.getPort());, +	}]