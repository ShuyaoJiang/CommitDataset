[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.java, + * Copyright 2002-2014 the original author or authors., +			return handleEmptyBody(methodParam);, +				return handleEmptyBody(methodParam);, +				return handleEmptyBody(methodParam);, +	private Object handleEmptyBody(MethodParameter param) {, +		if (param.getParameterAnnotation(RequestBody.class).required()) {, +			throw new HttpMessageNotReadableException("Required request body content is missing: " + param);, +		}, +		return null;, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.java, + * Copyright 2002-2014 the original author or authors., +			return handleEmptyBody(methodParam);, +				return handleEmptyBody(methodParam);, +				return handleEmptyBody(methodParam);, +	private Object handleEmptyBody(MethodParameter param) {, +		if (param.getParameterAnnotation(RequestBody.class).required()) {, +			throw new HttpMessageNotReadableException("Required request body content is missing: " + param);, +		}, +		return null;, +	}, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorMockTests.java, + * Copyright 2002-2014 the original author or authors., +import java.nio.charset.Charset;, +import org.springframework.http.converter.HttpMessageNotReadableException;, +		servletRequest.setContent(body.getBytes(Charset.forName("UTF-8")));, +		}, +		catch (MethodArgumentNotValidException e) {, +		servletRequest.setContent("payload".getBytes(Charset.forName("UTF-8")));, +		servletRequest.setContent("payload".getBytes(Charset.forName("UTF-8")));, +		servletRequest.setContent("payload".getBytes(Charset.forName("UTF-8")));, +		servletRequest.setContent("payload".getBytes(Charset.forName("UTF-8")));, +	// SPR-9942, +, +	@Test(expected = HttpMessageNotReadableException.class), +	public void resolveArgumentRequiredNoContent() throws Exception {, +		servletRequest.setContentType(MediaType.TEXT_PLAIN_VALUE);, +		servletRequest.setContent(new byte[0]);, +		given(messageConverter.canRead(String.class, MediaType.TEXT_PLAIN)).willReturn(true);, +		given(messageConverter.read(eq(String.class), isA(HttpInputMessage.class))).willReturn(null);, +		assertNull(processor.resolveArgument(paramRequestBodyString, mavContainer, webRequest, new ValidatingBinderFactory()));, +	}, +, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.java, + * Copyright 2002-2014 the original author or authors., +			return handleEmptyBody(methodParam);, +				return handleEmptyBody(methodParam);, +				return handleEmptyBody(methodParam);, +	private Object handleEmptyBody(MethodParameter param) {, +		if (param.getParameterAnnotation(RequestBody.class).required()) {, +			throw new HttpMessageNotReadableException("Required request body content is missing: " + param);, +		}, +		return null;, +	}, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorMockTests.java, + * Copyright 2002-2014 the original author or authors., +import java.nio.charset.Charset;, +import org.springframework.http.converter.HttpMessageNotReadableException;, +		servletRequest.setContent(body.getBytes(Charset.forName("UTF-8")));, +		}, +		catch (MethodArgumentNotValidException e) {, +		servletRequest.setContent("payload".getBytes(Charset.forName("UTF-8")));, +		servletRequest.setContent("payload".getBytes(Charset.forName("UTF-8")));, +		servletRequest.setContent("payload".getBytes(Charset.forName("UTF-8")));, +		servletRequest.setContent("payload".getBytes(Charset.forName("UTF-8")));, +	// SPR-9942, +, +	@Test(expected = HttpMessageNotReadableException.class), +	public void resolveArgumentRequiredNoContent() throws Exception {, +		servletRequest.setContentType(MediaType.TEXT_PLAIN_VALUE);, +		servletRequest.setContent(new byte[0]);, +		given(messageConverter.canRead(String.class, MediaType.TEXT_PLAIN)).willReturn(true);, +		given(messageConverter.read(eq(String.class), isA(HttpInputMessage.class))).willReturn(null);, +		assertNull(processor.resolveArgument(paramRequestBodyString, mavContainer, webRequest, new ValidatingBinderFactory()));, +	}, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorTests.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.http.converter.HttpMessageNotReadableException;, +	// SPR-9942, +, +	@Test(expected = HttpMessageNotReadableException.class), +	public void resolveArgumentRequiredNoContent() throws Exception {, +		this.servletRequest.setContent(new byte[0]);, +		this.servletRequest.setContentType("text/plain");, +		List<HttpMessageConverter<?>> converters = new ArrayList<HttpMessageConverter<?>>();, +		converters.add(new StringHttpMessageConverter());, +		RequestResponseBodyMethodProcessor processor = new RequestResponseBodyMethodProcessor(converters);, +		processor.resolveArgument(paramString, mavContainer, webRequest, binderFactory);, +	}, +]