[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java, +import org.springframework.messaging.converter.SimpleMessageConverter;, +	private MessageConverter converter = new SimpleMessageConverter();, +	 * <p>By default, {@link SimpleMessageConverter} is configured., +			throw new MessageConversionException("No suitable converter, payloadType=" + payloadType +, +					", handlerType=" + handler.getClass());, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java, +import org.springframework.messaging.converter.SimpleMessageConverter;, +	private MessageConverter converter = new SimpleMessageConverter();, +	 * <p>By default, {@link SimpleMessageConverter} is configured., +			throw new MessageConversionException("No suitable converter, payloadType=" + payloadType +, +					", handlerType=" + handler.getClass());, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompClientSupport.java, +import org.springframework.messaging.converter.SimpleMessageConverter;, +	private MessageConverter messageConverter = new SimpleMessageConverter();, +	 * <p>By default, {@link SimpleMessageConverter} is configured., +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java, +import org.springframework.messaging.converter.SimpleMessageConverter;, +	private MessageConverter converter = new SimpleMessageConverter();, +	 * <p>By default, {@link SimpleMessageConverter} is configured., +			throw new MessageConversionException("No suitable converter, payloadType=" + payloadType +, +					", handlerType=" + handler.getClass());, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompClientSupport.java, +import org.springframework.messaging.converter.SimpleMessageConverter;, +	private MessageConverter messageConverter = new SimpleMessageConverter();, +	 * <p>By default, {@link SimpleMessageConverter} is configured., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/DefaultSimpUserRegistry.java, +			return (sessionId != null ? this.sessions.get(sessionId) : null);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java, +import org.springframework.messaging.converter.SimpleMessageConverter;, +	private MessageConverter converter = new SimpleMessageConverter();, +	 * <p>By default, {@link SimpleMessageConverter} is configured., +			throw new MessageConversionException("No suitable converter, payloadType=" + payloadType +, +					", handlerType=" + handler.getClass());, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompClientSupport.java, +import org.springframework.messaging.converter.SimpleMessageConverter;, +	private MessageConverter messageConverter = new SimpleMessageConverter();, +	 * <p>By default, {@link SimpleMessageConverter} is configured., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/DefaultSimpUserRegistry.java, +			return (sessionId != null ? this.sessions.get(sessionId) : null);, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/messaging/DefaultSimpUserRegistryTests.java, +	@Test, +	public void nullSessionId() throws Exception {, +, +		DefaultSimpUserRegistry registry = new DefaultSimpUserRegistry();, +, +		TestPrincipal user = new TestPrincipal("joe");, +		Message<byte[]> message = createMessage(SimpMessageType.CONNECT_ACK, "123");, +		SessionConnectedEvent event = new SessionConnectedEvent(this, message, user);, +		registry.onApplicationEvent(event);, +, +		SimpUser simpUser = registry.getUser("joe");, +		assertNull(simpUser.getSession(null));, +	}, +, +]