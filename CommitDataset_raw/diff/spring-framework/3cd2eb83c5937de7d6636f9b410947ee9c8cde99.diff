[+++ b/spring-oxm/src/main/java/org/springframework/oxm/xstream/XStreamMarshaller.java, +import com.thoughtworks.xstream.MarshallingStrategy;, +import com.thoughtworks.xstream.converters.ConverterLookup;, +import com.thoughtworks.xstream.converters.ConverterRegistry;, +import com.thoughtworks.xstream.converters.reflection.ReflectionProvider;, +import com.thoughtworks.xstream.core.DefaultConverterLookup;, +	private ReflectionProvider reflectionProvider;, +, +	private ConverterLookup converterLookup = new DefaultConverterLookup();, +, +	private ConverterRegistry converterRegistry;, +	private MarshallingStrategy marshallingStrategy;, +, +	private Integer mode;, +, +	private Map<?, ?> useAttributeFor;, +	 * Set a custom XStream {@link ReflectionProvider} to use., +	 * @since 4.0, +	 */, +	public void setReflectionProvider(ReflectionProvider reflectionProvider) {, +		this.reflectionProvider = reflectionProvider;, +	}, +, +	/**, +	 * Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers., +	 * Set a custom XStream {@link Mapper} to use., +	 * Set a custom XStream {@link ConverterLookup} to use., +	 * Also used as {@link ConverterRegistry} if the given reference implements it as well., +	 * @since 4.0, +	 * @see DefaultConverterLookup, +	public void setConverterLookup(ConverterLookup converterLookup) {, +		this.converterLookup = converterLookup;, +	}, +, +	/**, +	 * Set a custom XStream {@link ConverterRegistry} to use., +	 * @since 4.0, +	 * @see #setConverterLookup, +	 * @see DefaultConverterLookup, +	 */, +	public void setConverterRegistry(ConverterRegistry converterRegistry) {, +		this.converterRegistry = converterRegistry;, +	 * Set a custom XStream {@link MarshallingStrategy} to use., +	 * @since 4.0, +	 */, +	public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {, +		this.marshallingStrategy = marshallingStrategy;, +	}, +, +	/**, +	 * Set the XStream mode to use., +	 * @see XStream#ID_REFERENCES, +	 * @see XStream#NO_REFERENCES, +	 */, +	public void setMode(int mode) {, +		this.mode = mode;, +	}, +, +	/**, +	public void setUseAttributeFor(Map<?, ?> useAttributeFor) {, +		this.useAttributeFor = useAttributeFor;, +		XStream xstream = new XStream(this.reflectionProvider, this.streamDriver,, +				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry);, +		if (this.marshallingStrategy != null) {, +			xstream.setMarshallingStrategy(this.marshallingStrategy);, +		}, +		if (this.mode != null) {, +			xstream.setMode(this.mode);, +		}, +, +		if (this.useAttributeFor != null) {, +			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {]