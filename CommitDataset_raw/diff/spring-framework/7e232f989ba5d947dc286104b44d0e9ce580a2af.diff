[+++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, +		String message = NestedExceptionUtils.getMostSpecificCause(ex).getMessage();, +		message = (message != null ? message.toLowerCase() : "");, +		String className = ex.getClass().getSimpleName();, +		return (message.contains("broken pipe") || DISCONNECTED_CLIENT_EXCEPTIONS.contains(className));, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, +		String message = NestedExceptionUtils.getMostSpecificCause(ex).getMessage();, +		message = (message != null ? message.toLowerCase() : "");, +		String className = ex.getClass().getSimpleName();, +		return (message.contains("broken pipe") || DISCONNECTED_CLIENT_EXCEPTIONS.contains(className));, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java, +		String message = NestedExceptionUtils.getMostSpecificCause(ex).getMessage();, +		message = (message != null ? message.toLowerCase() : "");, +		String className = ex.getClass().getSimpleName();, +		return (message.contains("broken pipe") || DISCONNECTED_CLIENT_EXCEPTIONS.contains(className));]