[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AbstractFactoryBean.java, + * Copyright 2002-2018 the original author or authors., +	 * provided that it is an interface, or {@code null} otherwise. The latter, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AbstractFactoryBean.java, + * Copyright 2002-2018 the original author or authors., +	 * provided that it is an interface, or {@code null} otherwise. The latter, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java, +				}, +				else {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AbstractFactoryBean.java, + * Copyright 2002-2018 the original author or authors., +	 * provided that it is an interface, or {@code null} otherwise. The latter, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java, +				}, +				else {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +	 * @return the type for the bean if determinable, or {@code null} otherwise, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AbstractFactoryBean.java, + * Copyright 2002-2018 the original author or authors., +	 * provided that it is an interface, or {@code null} otherwise. The latter, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java, +				}, +				else {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +	 * @return the type for the bean if determinable, or {@code null} otherwise, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/TypeHelper.java, + * Copyright 2002-2018 the original author or authors., +				return getQualifiedName(enclosingElement) + "$" + declaredType.asElement().getSimpleName().toString();, +			}, +			else {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AbstractFactoryBean.java, + * Copyright 2002-2018 the original author or authors., +	 * provided that it is an interface, or {@code null} otherwise. The latter, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java, +				}, +				else {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +	 * @return the type for the bean if determinable, or {@code null} otherwise, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/TypeHelper.java, + * Copyright 2002-2018 the original author or authors., +				return getQualifiedName(enclosingElement) + "$" + declaredType.asElement().getSimpleName().toString();, +			}, +			else {, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/DataBufferUtils.java, +					}, +					else {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AbstractFactoryBean.java, + * Copyright 2002-2018 the original author or authors., +	 * provided that it is an interface, or {@code null} otherwise. The latter, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java, +				}, +				else {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +	 * @return the type for the bean if determinable, or {@code null} otherwise, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/TypeHelper.java, + * Copyright 2002-2018 the original author or authors., +				return getQualifiedName(enclosingElement) + "$" + declaredType.asElement().getSimpleName().toString();, +			}, +			else {, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/DataBufferUtils.java, +					}, +					else {, +++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, +	 * @return {@code true} if found, {@code false} otherwise, +	 * @return {@code true} if found, {@code false} otherwise, +	 * @return {@code true} if found, {@code false} otherwise, +	 * multiple references to the same instance, {@code false} otherwise, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AbstractFactoryBean.java, + * Copyright 2002-2018 the original author or authors., +	 * provided that it is an interface, or {@code null} otherwise. The latter, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java, +				}, +				else {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +	 * @return the type for the bean if determinable, or {@code null} otherwise, +++ b/spring-context-indexer/src/main/java/org/springframework/context/index/TypeHelper.java, + * Copyright 2002-2018 the original author or authors., +				return getQualifiedName(enclosingElement) + "$" + declaredType.asElement().getSimpleName().toString();, +			}, +			else {, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/DataBufferUtils.java, +					}, +					else {, +++ b/spring-core/src/main/java/org/springframework/util/CollectionUtils.java, +	 * @return {@code true} if found, {@code false} otherwise, +	 * @return {@code true} if found, {@code false} otherwise, +	 * @return {@code true} if found, {@code false} otherwise, +	 * multiple references to the same instance, {@code false} otherwise, +++ b/spring-tx/src/main/java/org/springframework/transaction/TransactionDefinition.java, + * Copyright 2002-2018 the original author or authors., +	 * behave like {@link #PROPAGATION_REQUIRED} otherwise. There is no, +	 * analogous feature in EJB.]