[+++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClass.java, +	@Override, +	public boolean equals(Object other) {, +		if (this == other) {, +			return true;, +		}, +		if (!(other instanceof ConfigurationClass)) {, +			return false;, +		}, +		ConfigurationClass otherCc = (ConfigurationClass) other;, +		return getMetadata().getClassName().equals(otherCc.getMetadata().getClassName());, +	}, +, +	@Override, +	public int hashCode() {, +		return getMetadata().getClassName().hashCode();, +	}, +, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClass.java, +	@Override, +	public boolean equals(Object other) {, +		if (this == other) {, +			return true;, +		}, +		if (!(other instanceof ConfigurationClass)) {, +			return false;, +		}, +		ConfigurationClass otherCc = (ConfigurationClass) other;, +		return getMetadata().getClassName().equals(otherCc.getMetadata().getClassName());, +	}, +, +	@Override, +	public int hashCode() {, +		return getMetadata().getClassName().hashCode();, +	}, +, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java, +			String configBeanName = BeanDefinitionReaderUtils.registerWithGeneratedName(configBeanDef, this.registry);, +	 * the BeanDefinitionRegistry based on its contents.]