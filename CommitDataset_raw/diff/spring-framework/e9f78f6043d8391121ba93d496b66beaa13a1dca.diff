[+++ b/spring-aop/src/main/java/org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.java, +		// Create a new delegate now (but don't store it in the map)., +++ b/spring-aop/src/main/java/org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.java, +		// Create a new delegate now (but don't store it in the map)., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/NamespaceHandler.java, + * not implement this interface directly, but rather make use of the provided, +++ b/spring-aop/src/main/java/org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.java, +		// Create a new delegate now (but don't store it in the map)., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/NamespaceHandler.java, + * not implement this interface directly, but rather make use of the provided, +++ b/spring-core/src/main/java/org/springframework/asm/Frame.java, +        // updates the maximum height reached by the output stack, if needed, +++ b/spring-aop/src/main/java/org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.java, +		// Create a new delegate now (but don't store it in the map)., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/NamespaceHandler.java, + * not implement this interface directly, but rather make use of the provided, +++ b/spring-core/src/main/java/org/springframework/asm/Frame.java, +        // updates the maximum height reached by the output stack, if needed, +++ b/spring-core/src/main/java/org/springframework/util/AutoPopulatingList.java, +			Assert.notNull(elementClass, "Element class must not be null");, +++ b/spring-aop/src/main/java/org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.java, +		// Create a new delegate now (but don't store it in the map)., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/NamespaceHandler.java, + * not implement this interface directly, but rather make use of the provided, +++ b/spring-core/src/main/java/org/springframework/asm/Frame.java, +        // updates the maximum height reached by the output stack, if needed, +++ b/spring-core/src/main/java/org/springframework/util/AutoPopulatingList.java, +			Assert.notNull(elementClass, "Element class must not be null");, +++ b/spring-core/src/main/java/org/springframework/util/CompositeIterator.java, +		throw new NoSuchElementException("Exhausted all iterators");, +++ b/spring-aop/src/main/java/org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.java, +		// Create a new delegate now (but don't store it in the map)., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/NamespaceHandler.java, + * not implement this interface directly, but rather make use of the provided, +++ b/spring-core/src/main/java/org/springframework/asm/Frame.java, +        // updates the maximum height reached by the output stack, if needed, +++ b/spring-core/src/main/java/org/springframework/util/AutoPopulatingList.java, +			Assert.notNull(elementClass, "Element class must not be null");, +++ b/spring-core/src/main/java/org/springframework/util/CompositeIterator.java, +		throw new NoSuchElementException("Exhausted all iterators");, +++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +	 * Trim all occurrences of the supplied leading character from the given String., +	 * Trim all occurrences of the supplied trailing character from the given String., +	 * Replace all occurrences of a substring within a string with, +++ b/spring-aop/src/main/java/org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.java, +		// Create a new delegate now (but don't store it in the map)., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/NamespaceHandler.java, + * not implement this interface directly, but rather make use of the provided, +++ b/spring-core/src/main/java/org/springframework/asm/Frame.java, +        // updates the maximum height reached by the output stack, if needed, +++ b/spring-core/src/main/java/org/springframework/util/AutoPopulatingList.java, +			Assert.notNull(elementClass, "Element class must not be null");, +++ b/spring-core/src/main/java/org/springframework/util/CompositeIterator.java, +		throw new NoSuchElementException("Exhausted all iterators");, +++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +	 * Trim all occurrences of the supplied leading character from the given String., +	 * Trim all occurrences of the supplied trailing character from the given String., +	 * Replace all occurrences of a substring within a string with, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProvider.java, +	 * This is only called for databases that are supported. This initialization, +++ b/spring-aop/src/main/java/org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.java, +		// Create a new delegate now (but don't store it in the map)., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/NamespaceHandler.java, + * not implement this interface directly, but rather make use of the provided, +++ b/spring-core/src/main/java/org/springframework/asm/Frame.java, +        // updates the maximum height reached by the output stack, if needed, +++ b/spring-core/src/main/java/org/springframework/util/AutoPopulatingList.java, +			Assert.notNull(elementClass, "Element class must not be null");, +++ b/spring-core/src/main/java/org/springframework/util/CompositeIterator.java, +		throw new NoSuchElementException("Exhausted all iterators");, +++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +	 * Trim all occurrences of the supplied leading character from the given String., +	 * Trim all occurrences of the supplied trailing character from the given String., +	 * Replace all occurrences of a substring within a string with, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProvider.java, +	 * This is only called for databases that are supported. This initialization, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java, +	 * Create a CallMetaDataProvider based on the database metadata, +	 * @param dataSource used to retrieve metadata, +	 * @param context the class that holds configuration and metadata, +++ b/spring-aop/src/main/java/org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.java, +		// Create a new delegate now (but don't store it in the map)., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/NamespaceHandler.java, + * not implement this interface directly, but rather make use of the provided, +++ b/spring-core/src/main/java/org/springframework/asm/Frame.java, +        // updates the maximum height reached by the output stack, if needed, +++ b/spring-core/src/main/java/org/springframework/util/AutoPopulatingList.java, +			Assert.notNull(elementClass, "Element class must not be null");, +++ b/spring-core/src/main/java/org/springframework/util/CompositeIterator.java, +		throw new NoSuchElementException("Exhausted all iterators");, +++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java, +	 * Trim all occurrences of the supplied leading character from the given String., +	 * Trim all occurrences of the supplied trailing character from the given String., +	 * Replace all occurrences of a substring within a string with, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProvider.java, +	 * This is only called for databases that are supported. This initialization, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java, +	 * Create a CallMetaDataProvider based on the database metadata, +	 * @param dataSource used to retrieve metadata, +	 * @param context the class that holds configuration and metadata]