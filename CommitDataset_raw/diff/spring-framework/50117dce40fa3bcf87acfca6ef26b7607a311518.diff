[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMethodAdapter.java, +import org.springframework.validation.DataBinder;, +	 * Set a WebBindingInitializer to apply configure every DataBinder instance this controller uses., +	 * Return the WebBindingInitializer which applies pre-configured configuration to {@link DataBinder} instances., +	 */, +	public WebBindingInitializer getWebBindingInitializer() {, +		return webBindingInitializer;, +	}, +, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMethodAdapter.java, +import org.springframework.validation.DataBinder;, +	 * Set a WebBindingInitializer to apply configure every DataBinder instance this controller uses., +	 * Return the WebBindingInitializer which applies pre-configured configuration to {@link DataBinder} instances., +	 */, +	public WebBindingInitializer getWebBindingInitializer() {, +		return webBindingInitializer;, +	}, +, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ServletInitBinderMethodDataBinderFactory.java, +import java.util.Map;, +import org.springframework.beans.MutablePropertyValues;, +import org.springframework.web.context.request.RequestAttributes;, +import org.springframework.web.context.request.RequestContextHolder;, +import org.springframework.web.servlet.HandlerMapping;, +		return new ServletRequestPathVarDataBinder(target, objectName);, +	}, +, +	/**, +	 * Adds URI template variables to the map of request values used to do data binding. , +	 */, +	private static class ServletRequestPathVarDataBinder extends ServletRequestDataBinder {, +, +		public ServletRequestPathVarDataBinder(Object target, String objectName) {, +			super(target, objectName);, +		}, +, +		@SuppressWarnings("unchecked"), +		@Override, +		protected void doBind(MutablePropertyValues mpvs) {, +			RequestAttributes requestAttrs = RequestContextHolder.getRequestAttributes();, +			if (requestAttrs != null) {, +				String key = HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE;, +				int scope = RequestAttributes.SCOPE_REQUEST;, +				Map<String, String> uriTemplateVars = (Map<String, String>) requestAttrs.getAttribute(key, scope);, +				mpvs.addPropertyValues(uriTemplateVars);, +			}, +			super.doBind(mpvs);, +		}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMethodAdapter.java, +import org.springframework.validation.DataBinder;, +	 * Set a WebBindingInitializer to apply configure every DataBinder instance this controller uses., +	 * Return the WebBindingInitializer which applies pre-configured configuration to {@link DataBinder} instances., +	 */, +	public WebBindingInitializer getWebBindingInitializer() {, +		return webBindingInitializer;, +	}, +, +	/**, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ServletInitBinderMethodDataBinderFactory.java, +import java.util.Map;, +import org.springframework.beans.MutablePropertyValues;, +import org.springframework.web.context.request.RequestAttributes;, +import org.springframework.web.context.request.RequestContextHolder;, +import org.springframework.web.servlet.HandlerMapping;, +		return new ServletRequestPathVarDataBinder(target, objectName);, +	}, +, +	/**, +	 * Adds URI template variables to the map of request values used to do data binding. , +	 */, +	private static class ServletRequestPathVarDataBinder extends ServletRequestDataBinder {, +, +		public ServletRequestPathVarDataBinder(Object target, String objectName) {, +			super(target, objectName);, +		}, +, +		@SuppressWarnings("unchecked"), +		@Override, +		protected void doBind(MutablePropertyValues mpvs) {, +			RequestAttributes requestAttrs = RequestContextHolder.getRequestAttributes();, +			if (requestAttrs != null) {, +				String key = HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE;, +				int scope = RequestAttributes.SCOPE_REQUEST;, +				Map<String, String> uriTemplateVars = (Map<String, String>) requestAttrs.getAttribute(key, scope);, +				mpvs.addPropertyValues(uriTemplateVars);, +			}, +			super.doBind(mpvs);, +		}, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/method/annotation/ServletInitBinderMethodDataBinderFactoryTests.java, +/*, + * Copyright 2002-2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *]