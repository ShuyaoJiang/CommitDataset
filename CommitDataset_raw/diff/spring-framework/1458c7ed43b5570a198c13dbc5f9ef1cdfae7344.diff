[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy.java, +import java.lang.reflect.Method;, +import io.undertow.websockets.spi.WebSocketHttpExchange;, +import org.springframework.util.ReflectionUtils;, + * <p>Compatible with Undertow 1.0 to 1.3 - as included in WildFly 8.x, 9 and 10., + * @author Brian Clozel, + * @author Juergen Hoeller, +	private static final boolean exchangeConstructorWithPeerConnections;, +, +	private static final boolean endpointConstructorWithEndpointFactory;, +	private static final Method getBufferPoolMethod;, +, +	private static final Method createChannelMethod;, +		try {, +			Class<?>[] exchangeParamTypes =, +					new Class<?>[] {HttpServletRequest.class, HttpServletResponse.class, Set.class};, +			Constructor<ServletWebSocketHttpExchange> exchangeCtor =, +					ClassUtils.getConstructorIfAvailable(exchangeType, exchangeParamTypes);, +			if (exchangeCtor != null) {, +				// Undertow 1.1+, +				exchangeConstructor = exchangeCtor;, +				exchangeConstructorWithPeerConnections = true;, +				// Undertow 1.0, +				exchangeConstructor = exchangeType.getConstructor(exchangeParamTypes);, +				exchangeConstructorWithPeerConnections = false;, +			Constructor<ConfiguredServerEndpoint> endpointCtor =, +					ClassUtils.getConstructorIfAvailable(endpointType, endpointParamTypes);, +			if (endpointCtor != null) {, +				// Undertow 1.1+, +				endpointConstructor = endpointCtor;, +				endpointConstructorWithEndpointFactory = true;, +				// Undertow 1.0, +				endpointConstructor = endpointType.getConstructor(endpointParamTypes);, +				endpointConstructorWithEndpointFactory = false;, +			}, +, +			// Adapting between different Pool API types in Undertow 1.0-1.2 vs 1.3, +			getBufferPoolMethod = WebSocketHttpExchange.class.getMethod("getBufferPool");, +			createChannelMethod = Handshake.class.getMethod("createChannel",, +					WebSocketHttpExchange.class, StreamConnection.class, getBufferPoolMethod.getReturnType());, +		}, +		catch (Throwable ex) {, +			throw new IllegalStateException("Incompatible Undertow API version", ex);, +		if (exchangeConstructorWithPeerConnections) {, +			this.peerConnections = Collections.newSetFromMap(new ConcurrentHashMap<WebSocketChannel, Boolean>());, +			this.peerConnections = null;, +				Object bufferPool = ReflectionUtils.invokeMethod(getBufferPoolMethod, exchange);, +				WebSocketChannel channel = (WebSocketChannel) ReflectionUtils.invokeMethod(, +						createChannelMethod, handshake, exchange, connection, bufferPool);, +			return (endpointConstructorWithEndpointFactory ?]