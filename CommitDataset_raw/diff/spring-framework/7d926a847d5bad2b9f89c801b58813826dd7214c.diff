[+++ b/spring-test/src/test/java/org/springframework/test/context/event/EventPublishingTestExecutionListenerIntegrationTests.java, + * @author Sam Brannen, +	private final TestContextManager testContextManager = new TestContextManager(TestCase.class);, +	private final TestContext testContext = testContextManager.getTestContext();, +	private final TestExecutionListener listener = testContext.getApplicationContext().getBean(EventCaptureConfiguration.class).listener();, +	private final Object testInstance = new TestCase();, +	private final Method testMethod = null;, +	public void resetMock() {, +		// The mocked listener is a bean in the ApplicationContext that is stored, +		// in a static cache by the Spring TestContext Framework., +		public TestExecutionListener listener() {, +			listener().beforeTestClass(e.getSource());, +			listener().prepareTestInstance(e.getSource());, +			listener().beforeTestMethod(e.getSource());, +		public void beforeTestExecution(BeforeTestExecutionEvent e) throws Exception {, +			listener().beforeTestExecution(e.getSource());, +			listener().afterTestExecution(e.getSource());, +			listener().afterTestMethod(e.getSource());, +			listener().afterTestClass(e.getSource());, +	static class TestCase {, +++ b/spring-test/src/test/java/org/springframework/test/context/event/EventPublishingTestExecutionListenerIntegrationTests.java, + * @author Sam Brannen, +	private final TestContextManager testContextManager = new TestContextManager(TestCase.class);, +	private final TestContext testContext = testContextManager.getTestContext();, +	private final TestExecutionListener listener = testContext.getApplicationContext().getBean(EventCaptureConfiguration.class).listener();, +	private final Object testInstance = new TestCase();, +	private final Method testMethod = null;, +	public void resetMock() {, +		// The mocked listener is a bean in the ApplicationContext that is stored, +		// in a static cache by the Spring TestContext Framework., +		public TestExecutionListener listener() {, +			listener().beforeTestClass(e.getSource());, +			listener().prepareTestInstance(e.getSource());, +			listener().beforeTestMethod(e.getSource());, +		public void beforeTestExecution(BeforeTestExecutionEvent e) throws Exception {, +			listener().beforeTestExecution(e.getSource());, +			listener().afterTestExecution(e.getSource());, +			listener().afterTestMethod(e.getSource());, +			listener().afterTestClass(e.getSource());, +	static class TestCase {, +++ b/spring-test/src/test/java/org/springframework/test/context/event/EventPublishingTestExecutionListenerTests.java, +, +import static org.mockito.Mockito.only;, +import static org.mockito.Mockito.verify;, +	private final EventPublishingTestExecutionListener listener = new EventPublishingTestExecutionListener();, +, +	public void publishBeforeTestClassEvent() {, +	public void publishPrepareTestInstanceEvent() {, +	public void publishBeforeTestMethodEvent() {, +	public void publishBeforeTestExecutionEvent() {, +	public void publishAfterTestExecutionEvent() {, +	public void publishAfterTestMethodEvent() {, +	public void publishAfterTestClassEvent() {, +	private void assertEvent(Class<? extends TestContextEvent> eventClass) {]