[+++ b/build.gradle, +	compileJava {, +	}, +	compileTestJava {, +		sourceCompatibility=1.7, +		targetCompatibility=1.7, +	}, +, +	compileTestJava {, +		// necessary to avoid java.lang.VerifyError on jibx compilation, +		// see http://jira.codehaus.org/browse/JIBX-465, +		sourceCompatibility=1.6, +		targetCompatibility=1.6, +	}, +, +, +	compileTestJava {, +		// necessary to avoid java.lang.VerifyError on toplink compilation, +		// TODO: remove this block when we remove toplink, +		sourceCompatibility=1.6, +		targetCompatibility=1.6, +	}, +, +++ b/build.gradle, +	compileJava {, +	}, +	compileTestJava {, +		sourceCompatibility=1.7, +		targetCompatibility=1.7, +	}, +, +	compileTestJava {, +		// necessary to avoid java.lang.VerifyError on jibx compilation, +		// see http://jira.codehaus.org/browse/JIBX-465, +		sourceCompatibility=1.6, +		targetCompatibility=1.6, +	}, +, +, +	compileTestJava {, +		// necessary to avoid java.lang.VerifyError on toplink compilation, +		// TODO: remove this block when we remove toplink, +		sourceCompatibility=1.6, +		targetCompatibility=1.6, +	}, +, +++ b/spring-oxm/src/test/java/org/springframework/oxm/castor/CastorUnmarshallerTests.java, + * Copyright 2002-2012 the original author or authors., +import static org.hamcrest.CoreMatchers.*;, +, +		assertThat("Number is invalid", flight.getNumber(), equalTo(42L));, +		assertThat("Invalid items", item.getQuantity(), equalTo(15));, +		assertThat("Invalid items", item.getQuantity(), equalTo(20));]