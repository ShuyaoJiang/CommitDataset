[+++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +		public String toString() {, +			return "[BindingResults = " + results.toString() + "]";, +		}, +, +		public String toString() {, +			return getAlert().toString();, +		}, +, +		public String toString() {, +			return getAlert().toString();, +		}, +, +		public String toString() {, +			return getAlert().toString();, +		}, +, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +		public String toString() {, +			return "[BindingResults = " + results.toString() + "]";, +		}, +, +		public String toString() {, +			return getAlert().toString();, +		}, +, +		public String toString() {, +			return getAlert().toString();, +		}, +, +		public String toString() {, +			return getAlert().toString();, +		}, +, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericFormatterRegistry.java, +		Formatter<?> formatter = typeFormatters.get(propertyType.getType());, +		if (formatter != null) {, +			return formatter;, +		} else {, +			// TODO check class-level @Formatted annotation, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +		public String toString() {, +			return "[BindingResults = " + results.toString() + "]";, +		}, +, +		public String toString() {, +			return getAlert().toString();, +		}, +, +		public String toString() {, +			return getAlert().toString();, +		}, +, +		public String toString() {, +			return getAlert().toString();, +		}, +, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericFormatterRegistry.java, +		Formatter<?> formatter = typeFormatters.get(propertyType.getType());, +		if (formatter != null) {, +			return formatter;, +		} else {, +			// TODO check class-level @Formatted annotation, +++ b/org.springframework.context/src/test/java/org/springframework/ui/binding/support/GenericBinderTests.java, +import org.junit.Ignore;, +	@Ignore, +	public void bindToList() {, +		binder.addBinding("addresses");, +		Map<String, String> values = new LinkedHashMap<String, String>();, +		values.put("addresses[0]", "4655 Macy Lane, Melbourne FL 35452");		, +		values.put("addresses[1]", "1234 Rostock Circle, Palm Bay FL 32901");	, +		values.put("addresses[5]", "1977 Bel Aire Estates, Coker AL 12345");, +		BindingResults results = binder.bind(values);, +		assertEquals(3, results.size());		, +		System.out.println(results);, +		Assert.assertEquals(6, bean.addresses.size());, +		Assert.assertEquals("Palm Bay", bean.addresses.get(1).city);, +	}, +, +	@Test, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +		public String toString() {, +			return "[BindingResults = " + results.toString() + "]";, +		}, +, +		public String toString() {, +			return getAlert().toString();, +		}, +, +		public String toString() {, +			return getAlert().toString();, +		}, +, +		public String toString() {, +			return getAlert().toString();, +		}, +, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericFormatterRegistry.java, +		Formatter<?> formatter = typeFormatters.get(propertyType.getType());, +		if (formatter != null) {]