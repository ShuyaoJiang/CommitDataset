[+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java, +	private static final Set<Class<?>> ANY_TYPES = Collections.emptySet();, +, +, +		return this.lastReadInvokerPair.member;, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java, +	private static final Set<Class<?>> ANY_TYPES = Collections.emptySet();, +, +, +		return this.lastReadInvokerPair.member;, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java, +			if (logger.isErrorEnabled()) {, +				logger.error("No sub-protocols for " + handler);, +			}, +			if (replaced != null && replaced != handler) {, +			if (logger.isErrorEnabled()) {, +				logger.error("Couldn't find session id in " + message);, +			}, +, +, +		catch (Exception ex) {, +			if (logger.isDebugEnabled()) {, +				logger.debug("Failed to send message to client in " + session + ": " + message, ex);, +			}]