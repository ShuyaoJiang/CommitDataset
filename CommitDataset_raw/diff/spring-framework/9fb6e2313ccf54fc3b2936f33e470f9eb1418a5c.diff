[+++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java, + * Copyright 2002-2012 the original author or authors., +			int skipToPosition = i;, +			while (i < statement.length) {, +				skipToPosition = skipCommentsAndQuotes(statement, i);, +				if (i == skipToPosition) {, +				else {, +			}, +			if (i >= statement.length) {, +				break;, +			}, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java, + * Copyright 2002-2012 the original author or authors., +			int skipToPosition = i;, +			while (i < statement.length) {, +				skipToPosition = skipCommentsAndQuotes(statement, i);, +				if (i == skipToPosition) {, +				else {, +			}, +			if (i >= statement.length) {, +				break;, +			}, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/core/namedparam/NamedParameterUtilsTests.java, + * Copyright 2002-2012 the original author or authors., +	/*, +	 * SPR-8280, +	 */, +	@Test, +	public void parseSqlStatementWithQuotedSingleQuote() {, +		String sql = "SELECT ':foo'':doo', :xxx FROM DUAL";, +		ParsedSql psql = NamedParameterUtils.parseSqlStatement(sql);, +		assertEquals(1, psql.getTotalParameterCount());, +		assertEquals("xxx", psql.getParameterNames().get(0));, +	}, +, +	@Test, +	public void parseSqlStatementWithQuotesAndCommentBefore() {, +		String sql = "SELECT /*:doo*/':foo', :xxx FROM DUAL";, +		ParsedSql psql = NamedParameterUtils.parseSqlStatement(sql);, +		assertEquals(1, psql.getTotalParameterCount());, +		assertEquals("xxx", psql.getParameterNames().get(0));, +	}, +, +	@Test, +	public void parseSqlStatementWithQuotesAndCommentAfter() {, +		String sql2 = "SELECT ':foo'/*:doo*/, :xxx FROM DUAL";, +		ParsedSql psql2 = NamedParameterUtils.parseSqlStatement(sql2);, +		assertEquals(1, psql2.getTotalParameterCount());, +		assertEquals("xxx", psql2.getParameterNames().get(0));, +	}]