[+++ b/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java, + * Copyright 2002-2018 the original author or authors., +		synchronized (this) {, +			if (this.dispatchedPath == null) {, +			else {, +				handler.run();, +			}, +		}, +	}, +		synchronized (this) {, +			this.dispatchHandlers.forEach(Runnable::run);, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java, + * Copyright 2002-2018 the original author or authors., +		synchronized (this) {, +			if (this.dispatchedPath == null) {, +			else {, +				handler.run();, +			}, +		}, +	}, +		synchronized (this) {, +			this.dispatchHandlers.forEach(Runnable::run);, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/DefaultMvcResult.java, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +import org.springframework.util.Assert;, +	@Nullable, +	private CountDownLatch asyncDispatchLatch;, +, +		if (!awaitAsyncDispatch(timeToWait)) {, +		Object result = this.asyncResult.get();, +		Assert.state(result != RESULT_NONE, "Async result for handler [" + this.handler + "] was not set");, +		return this.asyncResult.get();, +	}, +, +	/**, +	 * True if is there a latch was not set, or the latch count reached 0., +	 */, +	private boolean awaitAsyncDispatch(long timeout) {, +		Assert.state(this.asyncDispatchLatch != null,, +				"The asynDispatch CountDownLatch was not set by the TestDispatcherServlet.\n");, +		try {, +			return this.asyncDispatchLatch.await(timeout, TimeUnit.MILLISECONDS);, +		}, +		catch (InterruptedException e) {, +			return false;, +		}, +	}, +, +	void setAsyncDispatchLatch(CountDownLatch asyncDispatchLatch) {, +		this.asyncDispatchLatch = asyncDispatchLatch;, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java, + * Copyright 2002-2018 the original author or authors., +		synchronized (this) {, +			if (this.dispatchedPath == null) {, +			else {, +				handler.run();, +			}, +		}, +	}, +		synchronized (this) {, +			this.dispatchHandlers.forEach(Runnable::run);, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/DefaultMvcResult.java, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +import org.springframework.util.Assert;, +	@Nullable, +	private CountDownLatch asyncDispatchLatch;, +, +		if (!awaitAsyncDispatch(timeToWait)) {, +		Object result = this.asyncResult.get();, +		Assert.state(result != RESULT_NONE, "Async result for handler [" + this.handler + "] was not set");, +		return this.asyncResult.get();, +	}, +, +	/**, +	 * True if is there a latch was not set, or the latch count reached 0., +	 */, +	private boolean awaitAsyncDispatch(long timeout) {, +		Assert.state(this.asyncDispatchLatch != null,, +				"The asynDispatch CountDownLatch was not set by the TestDispatcherServlet.\n");, +		try {, +			return this.asyncDispatchLatch.await(timeout, TimeUnit.MILLISECONDS);, +		}, +		catch (InterruptedException e) {, +			return false;, +		}, +	}, +, +	void setAsyncDispatchLatch(CountDownLatch asyncDispatchLatch) {, +		this.asyncDispatchLatch = asyncDispatchLatch;, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/TestDispatcherServlet.java, + * Copyright 2002-2018 the original author or authors., +import java.util.concurrent.CountDownLatch;, +import org.springframework.mock.web.MockAsyncContext;, +, +, +		if (request.getAsyncContext() != null) {, +			CountDownLatch dispatchLatch = new CountDownLatch(1);, +			((MockAsyncContext) request.getAsyncContext()).addDispatchHandler(dispatchLatch::countDown);]