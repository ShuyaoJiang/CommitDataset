[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RouterFunctions.java, +import java.util.Collections;, +import java.util.LinkedHashMap;, +								return this.routerFunction.route(nestedRequest), +										.doOnNext(match -> {, +											mergeTemplateVariables(serverRequest, nestedRequest.pathVariables());, +										});, +		@SuppressWarnings("unchecked"), +		private void mergeTemplateVariables(ServerRequest request, Map<String, String> variables) {, +			if (!variables.isEmpty()) {, +				Map<String, Object> attributes = request.attributes();, +				Map<String, String> oldVariables = (Map<String, String>)request.attribute(RouterFunctions.URI_TEMPLATE_VARIABLES_ATTRIBUTE), +						.orElseGet(LinkedHashMap::new);, +				Map<String, String> mergedVariables = new LinkedHashMap<>(oldVariables);, +				mergedVariables.putAll(variables);, +				attributes.put(RouterFunctions.URI_TEMPLATE_VARIABLES_ATTRIBUTE,, +						Collections.unmodifiableMap(mergedVariables));, +			}, +		}, +, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RouterFunctions.java, +import java.util.Collections;, +import java.util.LinkedHashMap;, +								return this.routerFunction.route(nestedRequest), +										.doOnNext(match -> {, +											mergeTemplateVariables(serverRequest, nestedRequest.pathVariables());, +										});, +		@SuppressWarnings("unchecked"), +		private void mergeTemplateVariables(ServerRequest request, Map<String, String> variables) {, +			if (!variables.isEmpty()) {, +				Map<String, Object> attributes = request.attributes();, +				Map<String, String> oldVariables = (Map<String, String>)request.attribute(RouterFunctions.URI_TEMPLATE_VARIABLES_ATTRIBUTE), +						.orElseGet(LinkedHashMap::new);, +				Map<String, String> mergedVariables = new LinkedHashMap<>(oldVariables);, +				mergedVariables.putAll(variables);, +				attributes.put(RouterFunctions.URI_TEMPLATE_VARIABLES_ATTRIBUTE,, +						Collections.unmodifiableMap(mergedVariables));, +			}, +		}, +, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/server/NestedRouteIntegrationTests.java, +					route(GET("/bar"), nestedHandler::variables).and(, +								route(GET("/{baz}"), nestedHandler::variables)))), +	// SPR-16868, +	@Test, +	public void parentVariables() throws Exception {, +		ResponseEntity<String> result =, +				restTemplate.getForEntity("http://localhost:" + port + "/1/bar", String.class);, +, +		assertEquals(HttpStatus.OK, result.getStatusCode());, +		assertEquals("{foo=1}", result.getBody());, +, +	}, +]