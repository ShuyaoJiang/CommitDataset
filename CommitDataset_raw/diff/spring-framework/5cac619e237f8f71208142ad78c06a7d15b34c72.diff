[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpRequest.java, +import io.netty.handler.codec.http.HttpHeaderNames;, +	private static URI initUri(HttpServerRequest request) throws URISyntaxException {, +		Assert.notNull(request, "'request' must not be null");, +		URI baseUri = resolveBaseUrl(request);, +		String requestUri = request.uri();, +		return (baseUri != null ? new URI(baseUri.toString() + requestUri) : new URI(requestUri));, +	private static URI resolveBaseUrl(HttpServerRequest request) throws URISyntaxException {, +		String header = request.requestHeaders().get(HttpHeaderNames.HOST);, +		if (header != null) {, +			final int portIndex;, +			if (header.startsWith("[")) {, +				portIndex = header.indexOf(':', header.indexOf(']'));, +			} else {, +				portIndex = header.indexOf(':');, +			}, +			if (portIndex != -1) {, +				try {, +					return new URI(null, null, header.substring(0, portIndex),, +							Integer.parseInt(header.substring(portIndex + 1)), null, null, null);, +				} catch (NumberFormatException ignore) {, +					throw new URISyntaxException(header, "Unable to parse port", portIndex);, +				}, +			}, +			else {, +				return new URI(null, header, null, null);, +			}, +		}, +		else {, +			InetSocketAddress localAddress = (InetSocketAddress) request.context().channel().localAddress();, +			return new URI(null, null, localAddress.getHostString(),, +					localAddress.getPort(), null, null, null);, +		}]