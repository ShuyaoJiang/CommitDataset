[+++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, + * Copyright 2002-2014 the original author or authors., + * @author Brian Clozel, +	private final List<HttpMessageConverter<?>> messageConverters = new ArrayList<HttpMessageConverter<?>>();, +	 * Default {@link HttpMessageConverter}s are initialized., +	/**, +	 * Create a new instance of the {@link RestTemplate} using the given list of, +	 * {@link HttpMessageConverter} to use, +	 * @param messageConverters the list of {@link HttpMessageConverter} to use, +	 * @since 4.0.1, +	 */, +	public RestTemplate(List<HttpMessageConverter<?>> messageConverters) {, +		Assert.notEmpty(messageConverters, "'messageConverters' must not be empty");, +		this.messageConverters.addAll(messageConverters);, +	}, +, +		this.messageConverters.clear();, +		this.messageConverters.addAll(messageConverters);, +++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java, + * Copyright 2002-2014 the original author or authors., + * @author Brian Clozel, +	private final List<HttpMessageConverter<?>> messageConverters = new ArrayList<HttpMessageConverter<?>>();, +	 * Default {@link HttpMessageConverter}s are initialized., +	/**, +	 * Create a new instance of the {@link RestTemplate} using the given list of, +	 * {@link HttpMessageConverter} to use, +	 * @param messageConverters the list of {@link HttpMessageConverter} to use, +	 * @since 4.0.1, +	 */, +	public RestTemplate(List<HttpMessageConverter<?>> messageConverters) {, +		Assert.notEmpty(messageConverters, "'messageConverters' must not be empty");, +		this.messageConverters.addAll(messageConverters);, +	}, +, +		this.messageConverters.clear();, +		this.messageConverters.addAll(messageConverters);, +++ b/spring-web/src/test/java/org/springframework/web/client/RestTemplateTests.java, + * Copyright 2002-2014 the original author or authors., +		template = new RestTemplate(Collections.<HttpMessageConverter<?>>singletonList(converter));, +		template.setRequestFactory(requestFactory);]