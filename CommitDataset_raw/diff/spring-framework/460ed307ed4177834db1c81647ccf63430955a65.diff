[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/ContentNegotiatingResultHandlerSupport.java, +	public ReactiveAdapterRegistry getAdapterRegistry() {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/ContentNegotiatingResultHandlerSupport.java, +	public ReactiveAdapterRegistry getAdapterRegistry() {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageReaderArgumentResolver.java, +	public ReactiveAdapterRegistry getAdapterRegistry() {, +		ReactiveAdapter adapter = getAdapterRegistry().getAdapterTo(bodyType);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/ContentNegotiatingResultHandlerSupport.java, +	public ReactiveAdapterRegistry getAdapterRegistry() {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageReaderArgumentResolver.java, +	public ReactiveAdapterRegistry getAdapterRegistry() {, +		ReactiveAdapter adapter = getAdapterRegistry().getAdapterTo(bodyType);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageWriterResultHandler.java, +		ReactiveAdapter adapter = getAdapterRegistry().getAdapterFrom(bodyClass, body);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/ContentNegotiatingResultHandlerSupport.java, +	public ReactiveAdapterRegistry getAdapterRegistry() {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageReaderArgumentResolver.java, +	public ReactiveAdapterRegistry getAdapterRegistry() {, +		ReactiveAdapter adapter = getAdapterRegistry().getAdapterTo(bodyType);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageWriterResultHandler.java, +		ReactiveAdapter adapter = getAdapterRegistry().getAdapterFrom(bodyClass, body);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java, +			ReactiveAdapter adapter = getAdapterRegistry().getAdapterFrom(rawClass, result.getReturnValue());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/ContentNegotiatingResultHandlerSupport.java, +	public ReactiveAdapterRegistry getAdapterRegistry() {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageReaderArgumentResolver.java, +	public ReactiveAdapterRegistry getAdapterRegistry() {, +		ReactiveAdapter adapter = getAdapterRegistry().getAdapterTo(bodyType);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageWriterResultHandler.java, +		ReactiveAdapter adapter = getAdapterRegistry().getAdapterFrom(bodyClass, body);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java, +			ReactiveAdapter adapter = getAdapterRegistry().getAdapterFrom(rawClass, result.getReturnValue());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler.java, +			ReactiveAdapter adapter = getAdapterRegistry().getAdapterFrom(returnType, result.getReturnValue());, +		ReactiveAdapter adapter = getAdapterRegistry().getAdapterFrom(rawClass, optionalValue);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/ContentNegotiatingResultHandlerSupport.java, +	public ReactiveAdapterRegistry getAdapterRegistry() {, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageReaderArgumentResolver.java, +	public ReactiveAdapterRegistry getAdapterRegistry() {, +		ReactiveAdapter adapter = getAdapterRegistry().getAdapterTo(bodyType);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageWriterResultHandler.java, +		ReactiveAdapter adapter = getAdapterRegistry().getAdapterFrom(bodyClass, body);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.java, +			ReactiveAdapter adapter = getAdapterRegistry().getAdapterFrom(rawClass, result.getReturnValue());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler.java, +			ReactiveAdapter adapter = getAdapterRegistry().getAdapterFrom(returnType, result.getReturnValue());, +		ReactiveAdapter adapter = getAdapterRegistry().getAdapterFrom(rawClass, optionalValue);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/ViewResolutionResultHandler.java, +		ReactiveAdapter adapter = getAdapterRegistry().getAdapterFrom(clazz, optional);, +		Optional<Object> optional = result.getReturnValue();, +		ReactiveAdapter adapter = getAdapterRegistry().getAdapterFrom(returnType.getRawClass(), optional);, +			if (optional.isPresent()) {, +				Mono<?> converted = adapter.toMono(optional);]