[+++ b/org.springframework.core/src/main/java/org/springframework/core/Conventions.java, + * Copyright 2002-2009 the original author or authors., +		Class valueClass;, +		Class valueClass;, +		Class valueClass;, +++ b/org.springframework.core/src/main/java/org/springframework/core/Conventions.java, + * Copyright 2002-2009 the original author or authors., +		Class valueClass;, +		Class valueClass;, +		Class valueClass;, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConverter.java, +, + * Uniform converter interface as returned from {@link GenericConversionService#getConverter}., + *, + * <p>This interface is primarily an internal detail of the {@link GenericConversionService}, + * implementation. It should generally not be implemented by application code directly., + *, + * @see GenericConversionService, +	 * @param source the source object to convert (never <code>null</code>), +++ b/org.springframework.core/src/main/java/org/springframework/core/Conventions.java, + * Copyright 2002-2009 the original author or authors., +		Class valueClass;, +		Class valueClass;, +		Class valueClass;, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConverter.java, +, + * Uniform converter interface as returned from {@link GenericConversionService#getConverter}., + *, + * <p>This interface is primarily an internal detail of the {@link GenericConversionService}, + * implementation. It should generally not be implemented by application code directly., + *, + * @see GenericConversionService, +	 * @param source the source object to convert (never <code>null</code>), +++ b/org.springframework.core/src/main/java/org/springframework/core/enums/AbstractCachingLabeledEnumResolver.java, +				if (logger != null && logger.isDebugEnabled()) {, +++ b/org.springframework.core/src/main/java/org/springframework/core/Conventions.java, + * Copyright 2002-2009 the original author or authors., +		Class valueClass;, +		Class valueClass;, +		Class valueClass;, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConverter.java, +, + * Uniform converter interface as returned from {@link GenericConversionService#getConverter}., + *, + * <p>This interface is primarily an internal detail of the {@link GenericConversionService}, + * implementation. It should generally not be implemented by application code directly., + *, + * @see GenericConversionService, +	 * @param source the source object to convert (never <code>null</code>), +++ b/org.springframework.core/src/main/java/org/springframework/core/enums/AbstractCachingLabeledEnumResolver.java, +				if (logger != null && logger.isDebugEnabled()) {, +++ b/org.springframework.core/src/main/java/org/springframework/util/ReflectionUtils.java, + *, + * <p>Only intended for internal use., +	 * <p>Thrown exceptions are handled via a call to, +	 * <p>Thrown exceptions are handled via a call to, +	 * <p>Returns <code>null</code> if no {@link Method} can be found., +	 * <p>Returns <code>null</code> if no {@link Method} can be found., +	 * <p>Thrown exceptions are handled via a call to, +	 * <p>Thrown exceptions are handled via a call to, +	 * <p>Throws the underlying RuntimeException or Error in case of an, +	 * <p>Throws the underlying RuntimeException or Error in case of such a root, +	 * <p>Rethrows the underlying exception cast to an {@link RuntimeException} or, +	 * <p>Rethrows the underlying exception cast to an {@link Exception} or, +	 * @see java.lang.Object#equals(Object), +	 * @see java.lang.Object#hashCode(), +	 * <p>The same named method occurring on subclass and superclass will appear, +	 * <p>The same named method occurring on subclass and superclass will appear, +, +	 * Callback optionally used to method fields to be operated on by a method callback., +, +	 * Callback optionally used to filter fields to be operated on by a field callback., +++ b/org.springframework.core/src/main/java/org/springframework/core/Conventions.java, + * Copyright 2002-2009 the original author or authors., +		Class valueClass;, +		Class valueClass;, +		Class valueClass;, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConverter.java, +, + * Uniform converter interface as returned from {@link GenericConversionService#getConverter}., + *, + * <p>This interface is primarily an internal detail of the {@link GenericConversionService}, + * implementation. It should generally not be implemented by application code directly., + *, + * @see GenericConversionService, +	 * @param source the source object to convert (never <code>null</code>), +++ b/org.springframework.core/src/main/java/org/springframework/core/enums/AbstractCachingLabeledEnumResolver.java, +				if (logger != null && logger.isDebugEnabled()) {, +++ b/org.springframework.core/src/main/java/org/springframework/util/ReflectionUtils.java, + *, + * <p>Only intended for internal use., +	 * <p>Thrown exceptions are handled via a call to, +	 * <p>Thrown exceptions are handled via a call to, +	 * <p>Returns <code>null</code> if no {@link Method} can be found., +	 * <p>Returns <code>null</code> if no {@link Method} can be found., +	 * <p>Thrown exceptions are handled via a call to, +	 * <p>Thrown exceptions are handled via a call to, +	 * <p>Throws the underlying RuntimeException or Error in case of an, +	 * <p>Throws the underlying RuntimeException or Error in case of such a root, +	 * <p>Rethrows the underlying exception cast to an {@link RuntimeException} or]