[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.java, +		String[] authSplit = StringUtils.split(authorization, ": ");, +		if (authSplit != null) {, +			request.setAuthType(authSplit[0]);, +		if (parent instanceof RequestBuilder) {, +			}, +			else {, +		}, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.java, +		String[] authSplit = StringUtils.split(authorization, ": ");, +		if (authSplit != null) {, +			request.setAuthType(authSplit[0]);, +		if (parent instanceof RequestBuilder) {, +			}, +			else {, +		}, +++ b/spring-tx/src/main/java/org/springframework/transaction/event/ApplicationListenerMethodTransactionalAdapter.java, + *, + * <p>Processing of {@link TransactionalEventListener} is enabled automatically, + * when Spring's transaction management is enabled. For other cases, registering, + * a bean of type {@link TransactionalEventListenerFactory} is required., +		else {, +			// No transactional event execution at all, +			if (logger.isDebugEnabled()) {, +				logger.debug("No transaction is active - skipping " + event);, +			}, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.java, +		String[] authSplit = StringUtils.split(authorization, ": ");, +		if (authSplit != null) {, +			request.setAuthType(authSplit[0]);, +		if (parent instanceof RequestBuilder) {, +			}, +			else {, +		}, +++ b/spring-tx/src/main/java/org/springframework/transaction/event/ApplicationListenerMethodTransactionalAdapter.java, + *, + * <p>Processing of {@link TransactionalEventListener} is enabled automatically, + * when Spring's transaction management is enabled. For other cases, registering, + * a bean of type {@link TransactionalEventListenerFactory} is required., +		else {, +			// No transactional event execution at all, +			if (logger.isDebugEnabled()) {, +				logger.debug("No transaction is active - skipping " + event);, +			}, +++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, +	 * <p>If the given {@linkplain InetSocketAddress#getPort() port} is {@code 0},, +	 * the host header will only contain the, +	 * {@linkplain InetSocketAddress#getHostString() hostname}., +	 * @since 5.0, +		String value = (host.getPort() != 0 ?, +				String.format("%s:%d", host.getHostString(), host.getPort()) : host.getHostString());, +	 * @since 5.0, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.java, +		String[] authSplit = StringUtils.split(authorization, ": ");, +		if (authSplit != null) {, +			request.setAuthType(authSplit[0]);, +		if (parent instanceof RequestBuilder) {, +			}, +			else {, +		}, +++ b/spring-tx/src/main/java/org/springframework/transaction/event/ApplicationListenerMethodTransactionalAdapter.java, + *, + * <p>Processing of {@link TransactionalEventListener} is enabled automatically, + * when Spring's transaction management is enabled. For other cases, registering, + * a bean of type {@link TransactionalEventListenerFactory} is required., +		else {, +			// No transactional event execution at all, +			if (logger.isDebugEnabled()) {, +				logger.debug("No transaction is active - skipping " + event);, +			}, +++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, +	 * <p>If the given {@linkplain InetSocketAddress#getPort() port} is {@code 0},, +	 * the host header will only contain the, +	 * {@linkplain InetSocketAddress#getHostString() hostname}., +	 * @since 5.0, +		String value = (host.getPort() != 0 ?, +				String.format("%s:%d", host.getHostString(), host.getPort()) : host.getHostString());, +	 * @since 5.0, +++ b/spring-web/src/main/java/org/springframework/http/HttpRange.java, +		Assert.isTrue(resource.getClass() != InputStreamResource.class,, +				"Cannot convert an InputStreamResource to a ResourceRegion");, +	 * Convert each {@code HttpRange} into a {@code ResourceRegion}, selecting the, +	 * appropriate segment of the given {@code Resource} using HTTP Range information., +	 * @since 4.3, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.java, +		String[] authSplit = StringUtils.split(authorization, ": ");, +		if (authSplit != null) {, +			request.setAuthType(authSplit[0]);, +		if (parent instanceof RequestBuilder) {, +			}, +			else {, +		}, +++ b/spring-tx/src/main/java/org/springframework/transaction/event/ApplicationListenerMethodTransactionalAdapter.java, + *, + * <p>Processing of {@link TransactionalEventListener} is enabled automatically, + * when Spring's transaction management is enabled. For other cases, registering, + * a bean of type {@link TransactionalEventListenerFactory} is required., +		else {, +			// No transactional event execution at all, +			if (logger.isDebugEnabled()) {]