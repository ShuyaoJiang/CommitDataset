[+++ b/build.gradle, +	ext.hibernate5Version    = "5.0.0.CR1"  // to be upgraded to 5.0 final in time for Spring Framework 4.2 GA, +	ext.hibval5Version       = "5.2.0.CR1"  // to be upgraded to 5.2 final in time for Spring Framework 4.2 GA, +	ext.jettyVersion         = "9.2.11.v20150529", +	ext.jrubyVersion         = "1.7.20", +	ext.reactorVersion       = "2.0.3.RELEASE", +	ext.tomcatVersion        = "8.0.23", +++ b/build.gradle, +	ext.hibernate5Version    = "5.0.0.CR1"  // to be upgraded to 5.0 final in time for Spring Framework 4.2 GA, +	ext.hibval5Version       = "5.2.0.CR1"  // to be upgraded to 5.2 final in time for Spring Framework 4.2 GA, +	ext.jettyVersion         = "9.2.11.v20150529", +	ext.jrubyVersion         = "1.7.20", +	ext.reactorVersion       = "2.0.3.RELEASE", +	ext.tomcatVersion        = "8.0.23", +++ b/spring-context/src/main/java/org/springframework/scripting/jruby/JRubyScriptUtils.java, + * Copyright 2002-2015 the original author or authors., +	@SuppressWarnings("unchecked"), +++ b/build.gradle, +	ext.hibernate5Version    = "5.0.0.CR1"  // to be upgraded to 5.0 final in time for Spring Framework 4.2 GA, +	ext.hibval5Version       = "5.2.0.CR1"  // to be upgraded to 5.2 final in time for Spring Framework 4.2 GA, +	ext.jettyVersion         = "9.2.11.v20150529", +	ext.jrubyVersion         = "1.7.20", +	ext.reactorVersion       = "2.0.3.RELEASE", +	ext.tomcatVersion        = "8.0.23", +++ b/spring-context/src/main/java/org/springframework/scripting/jruby/JRubyScriptUtils.java, + * Copyright 2002-2015 the original author or authors., +	@SuppressWarnings("unchecked"), +++ b/spring-orm-hibernate5/src/main/java/org/springframework/orm/hibernate5/HibernateTemplate.java, +					return session.get(entityClass, id, new LockOptions(lockMode));, +					return session.get(entityClass, id);, +					return session.load(entityClass, id, new LockOptions(lockMode));, +					return session.load(entityClass, id);, +++ b/build.gradle, +	ext.hibernate5Version    = "5.0.0.CR1"  // to be upgraded to 5.0 final in time for Spring Framework 4.2 GA, +	ext.hibval5Version       = "5.2.0.CR1"  // to be upgraded to 5.2 final in time for Spring Framework 4.2 GA, +	ext.jettyVersion         = "9.2.11.v20150529", +	ext.jrubyVersion         = "1.7.20", +	ext.reactorVersion       = "2.0.3.RELEASE", +	ext.tomcatVersion        = "8.0.23", +++ b/spring-context/src/main/java/org/springframework/scripting/jruby/JRubyScriptUtils.java, + * Copyright 2002-2015 the original author or authors., +	@SuppressWarnings("unchecked"), +++ b/spring-orm-hibernate5/src/main/java/org/springframework/orm/hibernate5/HibernateTemplate.java, +					return session.get(entityClass, id, new LockOptions(lockMode));, +					return session.get(entityClass, id);, +					return session.load(entityClass, id, new LockOptions(lockMode));, +					return session.load(entityClass, id);, +++ b/spring-orm-hibernate5/src/main/java/org/springframework/orm/hibernate5/SessionFactoryUtils.java, +import org.hibernate.engine.jdbc.connections.spi.ConnectionProvider;, +import org.hibernate.service.UnknownServiceException;, +	 * @see ConnectionProvider, +			try {, +				ConnectionProvider cp = ((SessionFactoryImplementor) sessionFactory).getServiceRegistry().getService(, +						ConnectionProvider.class);, +			catch (UnknownServiceException ex) {, +				if (logger.isDebugEnabled()) {, +					logger.debug("No ConnectionProvider found - cannot determine DataSource for SessionFactory: " + ex);, +				}, +			}, +		}]