[+++ b/spring-context/src/main/java/org/springframework/context/annotation/MBeanExportConfiguration.java, +		if (this.attributes == null) {, +			throw new IllegalArgumentException(, +	}, +++ b/spring-context/src/main/java/org/springframework/context/annotation/MBeanExportConfiguration.java, +		if (this.attributes == null) {, +			throw new IllegalArgumentException(, +	}, +++ b/spring-context/src/main/java/org/springframework/context/support/LiveBeansView.java, +, +, +++ b/spring-context/src/main/java/org/springframework/context/annotation/MBeanExportConfiguration.java, +		if (this.attributes == null) {, +			throw new IllegalArgumentException(, +	}, +++ b/spring-context/src/main/java/org/springframework/context/support/LiveBeansView.java, +, +, +++ b/spring-context/src/main/java/org/springframework/jmx/support/WebSphereMBeanServerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>See the javadocs for WebSphere's, + * <a href="http://bit.ly/UzccDt">{@code AdminServiceFactory}</a>, + * and <a href="http://bit.ly/TRlX2r">{@code MBeanFactory}</a>., +++ b/spring-context/src/main/java/org/springframework/context/annotation/MBeanExportConfiguration.java, +		if (this.attributes == null) {, +			throw new IllegalArgumentException(, +	}, +++ b/spring-context/src/main/java/org/springframework/context/support/LiveBeansView.java, +, +, +++ b/spring-context/src/main/java/org/springframework/jmx/support/WebSphereMBeanServerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>See the javadocs for WebSphere's, + * <a href="http://bit.ly/UzccDt">{@code AdminServiceFactory}</a>, + * and <a href="http://bit.ly/TRlX2r">{@code MBeanFactory}</a>., +++ b/spring-tx/src/main/java/org/springframework/transaction/config/JtaTransactionManagerFactoryBean.java, +					ClassUtils.forName(className, JtaTransactionManagerFactoryBean.class.getClassLoader());, +++ b/spring-context/src/main/java/org/springframework/context/annotation/MBeanExportConfiguration.java, +		if (this.attributes == null) {, +			throw new IllegalArgumentException(, +	}, +++ b/spring-context/src/main/java/org/springframework/context/support/LiveBeansView.java, +, +, +++ b/spring-context/src/main/java/org/springframework/jmx/support/WebSphereMBeanServerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>See the javadocs for WebSphere's, + * <a href="http://bit.ly/UzccDt">{@code AdminServiceFactory}</a>, + * and <a href="http://bit.ly/TRlX2r">{@code MBeanFactory}</a>., +++ b/spring-tx/src/main/java/org/springframework/transaction/config/JtaTransactionManagerFactoryBean.java, +					ClassUtils.forName(className, JtaTransactionManagerFactoryBean.class.getClassLoader());, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java, +	public void startCallableProcessing(Callable<?> callable, Object... processingContext) throws Exception {, +++ b/spring-context/src/main/java/org/springframework/context/annotation/MBeanExportConfiguration.java, +		if (this.attributes == null) {, +			throw new IllegalArgumentException(, +	}, +++ b/spring-context/src/main/java/org/springframework/context/support/LiveBeansView.java, +, +, +++ b/spring-context/src/main/java/org/springframework/jmx/support/WebSphereMBeanServerFactoryBean.java, + * Copyright 2002-2014 the original author or authors., + * <p>See the javadocs for WebSphere's, + * <a href="http://bit.ly/UzccDt">{@code AdminServiceFactory}</a>, + * and <a href="http://bit.ly/TRlX2r">{@code MBeanFactory}</a>., +++ b/spring-tx/src/main/java/org/springframework/transaction/config/JtaTransactionManagerFactoryBean.java, +					ClassUtils.forName(className, JtaTransactionManagerFactoryBean.class.getClassLoader());, +++ b/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java, +	public void startCallableProcessing(Callable<?> callable, Object... processingContext) throws Exception {, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebSocketMessageBrokerConfigurer.java, +import java.util.List;, + * protocols (e.g. STOMP) from WebSocket clients., + *, + * <p>Typically used to customize the configuration provided via, + * {@link EnableWebSocketMessageBroker @EnableWebSocketMessageBroker}., +	 * @param argumentResolvers the resolvers to register (initially an empty list), +	 * @param returnValueHandlers the handlers to register (initially an empty list), +	 * <p>The provided list, initially empty, can be used to add message converters, +	 * @param messageConverters the converters to configure (initially an empty list)]