[+++ b/org.springframework.orm/src/main/java/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.java, +	 * Specify one or more mapping resources (equivalent to <code>&lt;mapping-file&gt;</code>, +	 * entries in <code>persistence.xml</code>) for the default persistence unit., +	 * Can be used on its own or in combination with entity scanning in the classpath,, +	 * in both cases avoiding <code>persistence.xml</code>., +	 * <p>Note that mapping resources must be relative to the classpath root,, +	 * e.g. "META-INF/mappings.xml" or "com/mycompany/repository/mappings.xml",, +	 * so that they can be loaded through <code>ClassLoader.getResource</code>., +	 * <p><b>NOTE: Only applied if no external PersistenceUnitManager specified.</b>, +	 * @see #setPersistenceUnitManager, +	 */, +	public void setMappingResources(String... mappingResources) {, +		this.internalPersistenceUnitManager.setMappingResources(mappingResources);, +	}, +, +	/**, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.java, +	 * Specify one or more mapping resources (equivalent to <code>&lt;mapping-file&gt;</code>, +	 * entries in <code>persistence.xml</code>) for the default persistence unit., +	 * Can be used on its own or in combination with entity scanning in the classpath,, +	 * in both cases avoiding <code>persistence.xml</code>., +	 * <p>Note that mapping resources must be relative to the classpath root,, +	 * e.g. "META-INF/mappings.xml" or "com/mycompany/repository/mappings.xml",, +	 * so that they can be loaded through <code>ClassLoader.getResource</code>., +	 * <p><b>NOTE: Only applied if no external PersistenceUnitManager specified.</b>, +	 * @see #setPersistenceUnitManager, +	 */, +	public void setMappingResources(String... mappingResources) {, +		this.internalPersistenceUnitManager.setMappingResources(mappingResources);, +	}, +, +	/**, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.java, +	private static final String ENTITY_CLASS_RESOURCE_PATTERN = "/**/*.class";, +	private String[] mappingResources;, +, +	 * Specify one or more mapping resources (equivalent to <code>&lt;mapping-file&gt;</code>, +	 * entries in <code>persistence.xml</code>) for the default persistence unit., +	 * Can be used on its own or in combination with entity scanning in the classpath,, +	 * in both cases avoiding <code>persistence.xml</code>., +	 * <p>Note that mapping resources must be relative to the classpath root,, +	 * e.g. "META-INF/mappings.xml" or "com/mycompany/repository/mappings.xml",, +	 * so that they can be loaded through <code>ClassLoader.getResource</code>., +	 * @see #setPackagesToScan, +	 */, +	public void setMappingResources(String... mappingResources) {, +		this.mappingResources = mappingResources;, +	}, +, +	/**, +		if (this.packagesToScan != null || this.mappingResources != null) {, +			infos.add(buildDefaultPersistenceUnitInfo());, +	private SpringPersistenceUnitInfo buildDefaultPersistenceUnitInfo() {, +		if (this.packagesToScan != null) {, +				try {, +							ClassUtils.convertClassNameToResourcePath(pkg) + ENTITY_CLASS_RESOURCE_PATTERN;, +		}, +		if (this.mappingResources != null) {, +			for (String mappingFileName : this.mappingResources) {, +				scannedUnit.addMappingFileName(mappingFileName);, +			}, +		}, +		return scannedUnit;, +	}]