[+++ b/spring-expression/src/main/java/org/springframework/expression/TypedValue.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.util.ObjectUtils;, +		if (this.typeDescriptor == null && this.value != null) {, +	public boolean equals(Object other) {, +		if (this == other) {, +			return true;, +		}, +		if (!(other instanceof TypedValue)) {, +			return false;, +		}, +		TypedValue otherTv = (TypedValue) other;, +		return (ObjectUtils.nullSafeEquals(this.value, otherTv.value) &&, +				((this.typeDescriptor == null && otherTv.typeDescriptor == null) ||, +						getTypeDescriptor().equals(otherTv.getTypeDescriptor())));, +	}, +, +	@Override, +	public int hashCode() {, +		return ObjectUtils.nullSafeHashCode(this.value);, +	}, +, +	@Override, +		return "TypedValue: '" + this.value + "' of [" + getTypeDescriptor() + "]";, +++ b/spring-expression/src/main/java/org/springframework/expression/TypedValue.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.util.ObjectUtils;, +		if (this.typeDescriptor == null && this.value != null) {, +	public boolean equals(Object other) {, +		if (this == other) {, +			return true;, +		}, +		if (!(other instanceof TypedValue)) {, +			return false;, +		}, +		TypedValue otherTv = (TypedValue) other;, +		return (ObjectUtils.nullSafeEquals(this.value, otherTv.value) &&, +				((this.typeDescriptor == null && otherTv.typeDescriptor == null) ||, +						getTypeDescriptor().equals(otherTv.getTypeDescriptor())));, +	}, +, +	@Override, +	public int hashCode() {, +		return ObjectUtils.nullSafeHashCode(this.value);, +	}, +, +	@Override, +		return "TypedValue: '" + this.value + "' of [" + getTypeDescriptor() + "]";, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/support/ReflectionHelperTests.java, +		TypedValue tv1 = new TypedValue("hello");, +		TypedValue tv2 = new TypedValue("hello");, +		TypedValue tv3 = new TypedValue("bye");, +		assertEquals(String.class, tv1.getTypeDescriptor().getType());, +		assertEquals("TypedValue: 'hello' of [java.lang.String]", tv1.toString());, +		assertEquals(tv1, tv2);, +		assertEquals(tv2, tv1);, +		assertNotEquals(tv1, tv3);, +		assertNotEquals(tv2, tv3);, +		assertNotEquals(tv3, tv1);, +		assertNotEquals(tv3, tv2);, +		assertEquals(tv1.hashCode(), tv2.hashCode());, +		assertNotEquals(tv1.hashCode(), tv3.hashCode());, +		assertNotEquals(tv2.hashCode(), tv3.hashCode());]