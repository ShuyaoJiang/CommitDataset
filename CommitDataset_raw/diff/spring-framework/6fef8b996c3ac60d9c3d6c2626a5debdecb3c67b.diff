[+++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, + * Copyright 2002-2014 the original author or authors., +, + * @author Rossen Stoyanchev, +		public Jaxb2AttachmentMarshaller(MimeContainer mimeContainer) {, +		public Jaxb2AttachmentUnmarshaller(MimeContainer mimeContainer) {, +		public ByteArrayDataSource(String contentType, byte[] data, int offset, int length) {, +, +++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, + * Copyright 2002-2014 the original author or authors., +, + * @author Rossen Stoyanchev, +		public Jaxb2AttachmentMarshaller(MimeContainer mimeContainer) {, +		public Jaxb2AttachmentUnmarshaller(MimeContainer mimeContainer) {, +		public ByteArrayDataSource(String contentType, byte[] data, int offset, int length) {, +, +++ b/spring-web/src/main/java/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.java, + * Copyright 2002-2014 the original author or authors., + * @author Rossen Stoyanchev, +, +	 * <p>Can be overridden in subclasses, adding further initialization of the factory., +++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, + * Copyright 2002-2014 the original author or authors., +, + * @author Rossen Stoyanchev, +		public Jaxb2AttachmentMarshaller(MimeContainer mimeContainer) {, +		public Jaxb2AttachmentUnmarshaller(MimeContainer mimeContainer) {, +		public ByteArrayDataSource(String contentType, byte[] data, int offset, int length) {, +, +++ b/spring-web/src/main/java/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.java, + * Copyright 2002-2014 the original author or authors., + * @author Rossen Stoyanchev, +, +	 * <p>Can be overridden in subclasses, adding further initialization of the factory., +++ b/spring-web/src/main/java/org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.java, +import org.xml.sax.EntityResolver;, +import org.xml.sax.InputSource;, +import org.xml.sax.SAXException;, +import org.xml.sax.XMLReader;, +import org.xml.sax.helpers.XMLReaderFactory;, +, + * Implementation of {@link org.springframework.http.converter.HttpMessageConverter HttpMessageConverter}, + * that can read and write XML using JAXB2., + * <p>This converter can read classes annotated with {@link XmlRootElement} and {@link XmlType},, + * and write classes annotated with with {@link XmlRootElement}, or subclasses thereof., + * @author Rossen Stoyanchev, +	/**, +	 * Returns the configured value for whether XML external entities are allowed., +	 */, +, +		return (AnnotationUtils.findAnnotation(clazz, XmlRootElement.class) != null && canWrite(mediaType));, +++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, + * Copyright 2002-2014 the original author or authors., +, + * @author Rossen Stoyanchev, +		public Jaxb2AttachmentMarshaller(MimeContainer mimeContainer) {, +		public Jaxb2AttachmentUnmarshaller(MimeContainer mimeContainer) {, +		public ByteArrayDataSource(String contentType, byte[] data, int offset, int length) {, +, +++ b/spring-web/src/main/java/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.java, + * Copyright 2002-2014 the original author or authors., + * @author Rossen Stoyanchev, +, +	 * <p>Can be overridden in subclasses, adding further initialization of the factory., +++ b/spring-web/src/main/java/org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.java, +import org.xml.sax.EntityResolver;, +import org.xml.sax.InputSource;, +import org.xml.sax.SAXException;, +import org.xml.sax.XMLReader;, +import org.xml.sax.helpers.XMLReaderFactory;, +, + * Implementation of {@link org.springframework.http.converter.HttpMessageConverter HttpMessageConverter}, + * that can read and write XML using JAXB2., + * <p>This converter can read classes annotated with {@link XmlRootElement} and {@link XmlType},, + * and write classes annotated with with {@link XmlRootElement}, or subclasses thereof., + * @author Rossen Stoyanchev, +	/**, +	 * Returns the configured value for whether XML external entities are allowed., +	 */, +, +		return (AnnotationUtils.findAnnotation(clazz, XmlRootElement.class) != null && canWrite(mediaType));, +++ b/spring-web/src/main/java/org/springframework/http/converter/xml/SourceHttpMessageConverter.java, + * Copyright 2002-2014 the original author or authors., + * @author Rossen Stoyanchev, +	 * Returns the configured value for whether XML external entities are allowed., +]