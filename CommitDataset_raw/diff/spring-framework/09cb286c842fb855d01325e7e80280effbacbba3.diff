[+++ b/spring-web/src/main/java/org/springframework/http/MediaType.java, + * @author Sebastien Deleuze, +	 * @see #APPLICATION_JSON_UTF8, +	 */, +	 * @see #APPLICATION_JSON_UTF8_VALUE, +	 * Public constant media type for {@code application/json;charset=UTF-8}., +	 */, +	public final static MediaType APPLICATION_JSON_UTF8;, +, +	/**, +	 * A String equivalent of {@link MediaType#APPLICATION_JSON_UTF8}., +	 */, +	public final static String APPLICATION_JSON_UTF8_VALUE = APPLICATION_JSON_VALUE + ";charset=UTF-8";, +, +	/**, +		APPLICATION_JSON_UTF8 = valueOf(APPLICATION_JSON_UTF8_VALUE);, +++ b/spring-web/src/main/java/org/springframework/http/MediaType.java, + * @author Sebastien Deleuze, +	 * @see #APPLICATION_JSON_UTF8, +	 */, +	 * @see #APPLICATION_JSON_UTF8_VALUE, +	 * Public constant media type for {@code application/json;charset=UTF-8}., +	 */, +	public final static MediaType APPLICATION_JSON_UTF8;, +, +	/**, +	 * A String equivalent of {@link MediaType#APPLICATION_JSON_UTF8}., +	 */, +	public final static String APPLICATION_JSON_UTF8_VALUE = APPLICATION_JSON_VALUE + ";charset=UTF-8";, +, +	/**, +		APPLICATION_JSON_UTF8 = valueOf(APPLICATION_JSON_UTF8_VALUE);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/GsonHttpMessageConverter.java, + * By default, it supports {@code application/json} and {@code application/*+json} with, + * {@code UTF-8} character set., +		super(MediaType.APPLICATION_JSON_UTF8, new MediaType("application", "*+json", DEFAULT_CHARSET));, +++ b/spring-web/src/main/java/org/springframework/http/MediaType.java, + * @author Sebastien Deleuze, +	 * @see #APPLICATION_JSON_UTF8, +	 */, +	 * @see #APPLICATION_JSON_UTF8_VALUE, +	 * Public constant media type for {@code application/json;charset=UTF-8}., +	 */, +	public final static MediaType APPLICATION_JSON_UTF8;, +, +	/**, +	 * A String equivalent of {@link MediaType#APPLICATION_JSON_UTF8}., +	 */, +	public final static String APPLICATION_JSON_UTF8_VALUE = APPLICATION_JSON_VALUE + ";charset=UTF-8";, +, +	/**, +		APPLICATION_JSON_UTF8 = valueOf(APPLICATION_JSON_UTF8_VALUE);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/GsonHttpMessageConverter.java, + * By default, it supports {@code application/json} and {@code application/*+json} with, + * {@code UTF-8} character set., +		super(MediaType.APPLICATION_JSON_UTF8, new MediaType("application", "*+json", DEFAULT_CHARSET));, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, +		super(objectMapper, MediaType.APPLICATION_JSON_UTF8,, +++ b/spring-web/src/main/java/org/springframework/http/MediaType.java, + * @author Sebastien Deleuze, +	 * @see #APPLICATION_JSON_UTF8, +	 */, +	 * @see #APPLICATION_JSON_UTF8_VALUE, +	 * Public constant media type for {@code application/json;charset=UTF-8}., +	 */, +	public final static MediaType APPLICATION_JSON_UTF8;, +, +	/**, +	 * A String equivalent of {@link MediaType#APPLICATION_JSON_UTF8}., +	 */, +	public final static String APPLICATION_JSON_UTF8_VALUE = APPLICATION_JSON_VALUE + ";charset=UTF-8";, +, +	/**, +		APPLICATION_JSON_UTF8 = valueOf(APPLICATION_JSON_UTF8_VALUE);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/GsonHttpMessageConverter.java, + * By default, it supports {@code application/json} and {@code application/*+json} with, + * {@code UTF-8} character set., +		super(MediaType.APPLICATION_JSON_UTF8, new MediaType("application", "*+json", DEFAULT_CHARSET));, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, +		super(objectMapper, MediaType.APPLICATION_JSON_UTF8,, +++ b/src/asciidoc/web-mvc.adoc, +	@RequestMapping(path = "/pets/{petId}", method = RequestMethod.GET, **produces = MediaType.APPLICATION_JSON_UTF8_VALUE**), +		@RequestMapping(path = "/error", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)]