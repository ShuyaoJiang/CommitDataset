[+++ b/spring-web/src/main/java/org/springframework/web/filter/AbstractRequestLoggingFilter.java, + * Copyright 2002-2016 the original author or authors., +			String queryString = request.getQueryString();, +			if (queryString != null) {, +				msg.append('?').append(queryString);, +			}, +++ b/spring-web/src/main/java/org/springframework/web/filter/AbstractRequestLoggingFilter.java, + * Copyright 2002-2016 the original author or authors., +			String queryString = request.getQueryString();, +			if (queryString != null) {, +				msg.append('?').append(queryString);, +			}, +++ b/spring-web/src/test/java/org/springframework/web/filter/RequestLoggingFilterTests.java, + * Copyright 2002-2016 the original author or authors., + * @author Juergen Hoeller, +	private final MyRequestLoggingFilter filter = new MyRequestLoggingFilter();, +	public void queryStringIncluded() throws Exception {, +		MockHttpServletRequest request = new MockHttpServletRequest("POST", "/hotels");, +		assertTrue(filter.beforeRequestMessage.contains("[uri=/hotels?booking=42]"));, +		assertTrue(filter.afterRequestMessage.contains("[uri=/hotels?booking=42]"));, +	}, +, +	@Test, +	public void noQueryStringAvailable() throws Exception {, +		filter.setIncludeQueryString(true);, +, +		MockHttpServletRequest request = new MockHttpServletRequest("POST", "/hotels");, +		MockHttpServletResponse response = new MockHttpServletResponse();, +, +		FilterChain filterChain = new NoOpFilterChain();, +		filter.doFilter(request, response, filterChain);, +, +		assertNotNull(filter.beforeRequestMessage);, +		assertTrue(filter.beforeRequestMessage.contains("[uri=/hotels]"));, +, +		assertNotNull(filter.afterRequestMessage);, +		assertTrue(filter.afterRequestMessage.contains("[uri=/hotels]"));, +		FilterChain filterChain = new FilterChain() {, +		FilterChain filterChain = new FilterChain() {, +		FilterChain filterChain = new FilterChain() {]