[+++ b/src/asciidoc/testing.adoc, +The __"webAppContextSetup"__ loads your actual Spring MVC configuration resulting in a, +Spring configuration, it helps keep tests running fast, even as you introduce more tests, +in your test suite. Furthermore, you can inject mock services into controllers through, +Spring configuration in order to remain focused on testing the web layer. Here is an, +example of declaring a mock service with Mockito:, +You can then inject the mock service into the test in order set up and verify, +one controller at a time: the controller can be injected with mock dependencies manually,, +and it doesn't involve loading Spring configuration. Such tests are more focused on style, +and make it easier to see which controller is being tested, whether any specific Spring, +MVC configuration is required to work, and so on. The "standaloneSetup" is also a very, +convenient way to write ad-hoc tests to verify specific behavior or to debug an issue., +Just like with any "integration vs. unit testing" debate, there is no right or wrong, +answer. However, using the "standaloneSetup" does imply the need for additional, +"webAppContextSetup" tests in order to verify your Spring MVC configuration., +Alternatively, you may choose to write all tests with "webAppContextSetup" in order to, +always test against your actual Spring MVC configuration., +That is why the HTTP method and URI in the default request don't matter since they must be]