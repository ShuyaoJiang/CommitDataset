[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.java, +					Class<?> beanType = this.beanFactory.getType(bdHolder.getBeanName());, +				if (targetAnnotation == null && bd.hasBeanClass()) {, +					targetAnnotation = ClassUtils.getUserClass(bd.getBeanClass()).getAnnotation(type);, +				}, +			}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.java, +					Class<?> beanType = this.beanFactory.getType(bdHolder.getBeanName());, +				if (targetAnnotation == null && bd.hasBeanClass()) {, +					targetAnnotation = ClassUtils.getUserClass(bd.getBeanClass()).getAnnotation(type);, +				}, +			}, +++ b/org.springframework.context/src/test/java/org/springframework/beans/factory/xml/QualifierAnnotationTests-context.xml, +	<bean id="thetaClient" class="org.springframework.beans.factory.xml.QualifierAnnotationTests$MultiQualifierClient"/>, +, +    <bean id="thetaFactory" class="org.springframework.beans.factory.xml.QualifierAnnotationTests$QualifiedFactoryBean"/>, +, +    <bean id="thetaImpl" class="org.springframework.beans.factory.xml.QualifierAnnotationTests$ThetaImpl"/>, +	, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.java, +					Class<?> beanType = this.beanFactory.getType(bdHolder.getBeanName());, +				if (targetAnnotation == null && bd.hasBeanClass()) {, +					targetAnnotation = ClassUtils.getUserClass(bd.getBeanClass()).getAnnotation(type);, +				}, +			}, +++ b/org.springframework.context/src/test/java/org/springframework/beans/factory/xml/QualifierAnnotationTests-context.xml, +	<bean id="thetaClient" class="org.springframework.beans.factory.xml.QualifierAnnotationTests$MultiQualifierClient"/>, +, +    <bean id="thetaFactory" class="org.springframework.beans.factory.xml.QualifierAnnotationTests$QualifiedFactoryBean"/>, +, +    <bean id="thetaImpl" class="org.springframework.beans.factory.xml.QualifierAnnotationTests$ThetaImpl"/>, +	, +++ b/org.springframework.context/src/test/java/org/springframework/beans/factory/xml/QualifierAnnotationTests.java, +import org.springframework.beans.factory.FactoryBean;, +		context.registerSingleton("testBean", MultiQualifierClient.class);, +, +		MultiQualifierClient testBean = (MultiQualifierClient) context.getBean("testBean");, +, +		assertNotNull( testBean.factoryTheta);, +		assertNotNull( testBean.implTheta);, +	}, +, +	@Test, +	public void testInterfaceWithOneQualifiedFactoryAndOneQualifiedBean() {, +		StaticApplicationContext context = new StaticApplicationContext();, +		BeanDefinitionReader reader = new XmlBeanDefinitionReader(context);, +		reader.loadBeanDefinitions(CONFIG_LOCATION);, +, +	private static final String FACTORY_QUALIFIER = "FACTORY";, +, +	private static final String IMPL_QUALIFIER = "IMPL";, +, +, +	public static class MultiQualifierClient {, +, +		@Autowired @Qualifier(FACTORY_QUALIFIER), +		public Theta factoryTheta;, +, +		@Autowired @Qualifier(IMPL_QUALIFIER), +		public Theta implTheta;, +	}, +, +, +	public interface Theta {, +	}, +, +, +	@Qualifier(IMPL_QUALIFIER), +	public static class ThetaImpl implements Theta {, +	}, +, +, +	@Qualifier(FACTORY_QUALIFIER), +	public static class QualifiedFactoryBean implements FactoryBean<Theta> {, +, +		public Theta getObject() {, +			return new Theta() {};, +		}, +, +		public Class<Theta> getObjectType() {, +			return Theta.class;, +		}, +, +		public boolean isSingleton() {, +			return true;, +		}, +	}, +]