[+++ b/spring-aop/src/main/java/org/springframework/aop/target/CommonsPool2TargetSource.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.util.Assert;, +		Assert.state(this.pool != null, "No Commons ObjectPool available");, +		if (this.pool != null) {, +	}, +		return (this.pool != null ? this.pool.getNumActive() : 0);, +		return (this.pool != null ? this.pool.getNumIdle() : 0);, +		if (this.pool != null) {, +	}, +++ b/spring-aop/src/main/java/org/springframework/aop/target/CommonsPool2TargetSource.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.util.Assert;, +		Assert.state(this.pool != null, "No Commons ObjectPool available");, +		if (this.pool != null) {, +	}, +		return (this.pool != null ? this.pool.getNumActive() : 0);, +		return (this.pool != null ? this.pool.getNumIdle() : 0);, +		if (this.pool != null) {, +	}, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java, +		return nonNull(query(sql, new RowMapperResultSetExtractor<>(rowMapper)));, +		return nonNull(queryForObject(sql, getColumnMapRowMapper()));, +		return nonNull(query(sql, new SqlRowSetResultSetExtractor()));, +		return nonNull(queryForObject(sql, args, argTypes, getColumnMapRowMapper()));, +		return nonNull(queryForObject(sql, args, getColumnMapRowMapper()));, +++ b/spring-aop/src/main/java/org/springframework/aop/target/CommonsPool2TargetSource.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.util.Assert;, +		Assert.state(this.pool != null, "No Commons ObjectPool available");, +		if (this.pool != null) {, +	}, +		return (this.pool != null ? this.pool.getNumActive() : 0);, +		return (this.pool != null ? this.pool.getNumIdle() : 0);, +		if (this.pool != null) {, +	}, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java, +		return nonNull(query(sql, new RowMapperResultSetExtractor<>(rowMapper)));, +		return nonNull(queryForObject(sql, getColumnMapRowMapper()));, +		return nonNull(query(sql, new SqlRowSetResultSetExtractor()));, +		return nonNull(queryForObject(sql, args, argTypes, getColumnMapRowMapper()));, +		return nonNull(queryForObject(sql, args, getColumnMapRowMapper()));, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.java, +		Map<String, Object> result = queryForObject(sql, paramSource, new ColumnMapRowMapper());, +		Assert.state(result != null, "No result map");, +		return result;, +		Map<String, Object> result = queryForObject(sql, paramMap, new ColumnMapRowMapper());, +		Assert.state(result != null, "No result map");, +		return result;, +++ b/spring-aop/src/main/java/org/springframework/aop/target/CommonsPool2TargetSource.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.util.Assert;, +		Assert.state(this.pool != null, "No Commons ObjectPool available");, +		if (this.pool != null) {, +	}, +		return (this.pool != null ? this.pool.getNumActive() : 0);, +		return (this.pool != null ? this.pool.getNumIdle() : 0);, +		if (this.pool != null) {, +	}, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java, +		return nonNull(query(sql, new RowMapperResultSetExtractor<>(rowMapper)));, +		return nonNull(queryForObject(sql, getColumnMapRowMapper()));, +		return nonNull(query(sql, new SqlRowSetResultSetExtractor()));, +		return nonNull(queryForObject(sql, args, argTypes, getColumnMapRowMapper()));, +		return nonNull(queryForObject(sql, args, getColumnMapRowMapper()));, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.java, +		Map<String, Object> result = queryForObject(sql, paramSource, new ColumnMapRowMapper());, +		Assert.state(result != null, "No result map");, +		return result;, +		Map<String, Object> result = queryForObject(sql, paramMap, new ColumnMapRowMapper());, +		Assert.state(result != null, "No result map");, +		return result;, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/adapter/MessageListenerAdapter.java, +++ b/spring-aop/src/main/java/org/springframework/aop/target/CommonsPool2TargetSource.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.util.Assert;, +		Assert.state(this.pool != null, "No Commons ObjectPool available");, +		if (this.pool != null) {, +	}, +		return (this.pool != null ? this.pool.getNumActive() : 0);, +		return (this.pool != null ? this.pool.getNumIdle() : 0);, +		if (this.pool != null) {, +	}, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java, +		return nonNull(query(sql, new RowMapperResultSetExtractor<>(rowMapper)));, +		return nonNull(queryForObject(sql, getColumnMapRowMapper()));, +		return nonNull(query(sql, new SqlRowSetResultSetExtractor()));, +		return nonNull(queryForObject(sql, args, argTypes, getColumnMapRowMapper()));, +		return nonNull(queryForObject(sql, args, getColumnMapRowMapper()));, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.java, +		Map<String, Object> result = queryForObject(sql, paramSource, new ColumnMapRowMapper());, +		Assert.state(result != null, "No result map");, +		return result;, +		Map<String, Object> result = queryForObject(sql, paramMap, new ColumnMapRowMapper());, +		Assert.state(result != null, "No result map");, +		return result;, +++ b/spring-jms/src/main/java/org/springframework/jms/listener/adapter/MessageListenerAdapter.java, +++ b/spring-jms/src/test/java/org/springframework/jms/listener/adapter/MessageListenerAdapterTests.java, + * Copyright 2002-2017 the original author or authors., +++ b/spring-aop/src/main/java/org/springframework/aop/target/CommonsPool2TargetSource.java]