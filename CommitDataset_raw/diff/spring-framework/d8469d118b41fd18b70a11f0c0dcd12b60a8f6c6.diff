[+++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +import org.springframework.util.Assert;, +		String path = getRemainingPath(pathWithinApp, servletPath, false);, +		if (path != null) {, +			return path;, +		String path = getRemainingPath(requestUri, contextPath, true);, +		if (path != null) {, +	/**, +	 * Match the given "mapping" to the start of the "requestUri" and if there, +	 * is a match return the extra part. This method is needed because the, +	 * context path and the servlet path returned by the HttpServletRequest are, +	 * stripped of semicolon content unlike the requesUri., +	 */, +	private String getRemainingPath(String requestUri, String mapping, boolean ignoreCase) {, +		int index1 = 0;, +		int index2 = 0;, +		for ( ; (index1 < requestUri.length()) && (index2 < mapping.length()); index1++, index2++) {, +			char c1 = requestUri.charAt(index1);, +			char c2 = mapping.charAt(index2);, +			if (c1 == ';') {, +				index1 = requestUri.indexOf('/', index1);, +				if (index1 == -1) {, +					return null;, +				}, +				c1 = requestUri.charAt(index1);, +			}, +			if (c1 == c2) {, +				continue;, +			}, +			if (ignoreCase && (Character.toLowerCase(c1) == Character.toLowerCase(c2))) {, +				continue;, +			}, +			return null;, +		}, +		if (index2 != mapping.length()) {, +			return null;, +		}, +		if (index1 == requestUri.length()) {, +			return "";, +		}, +		else if (requestUri.charAt(index1) == ';') {, +			index1 = requestUri.indexOf('/', index1);, +		}, +		return (index1 != -1) ? requestUri.substring(index1) : "";, +	}, +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +import org.springframework.util.Assert;, +		String path = getRemainingPath(pathWithinApp, servletPath, false);, +		if (path != null) {, +			return path;, +		String path = getRemainingPath(requestUri, contextPath, true);, +		if (path != null) {, +	/**, +	 * Match the given "mapping" to the start of the "requestUri" and if there, +	 * is a match return the extra part. This method is needed because the, +	 * context path and the servlet path returned by the HttpServletRequest are, +	 * stripped of semicolon content unlike the requesUri., +	 */, +	private String getRemainingPath(String requestUri, String mapping, boolean ignoreCase) {, +		int index1 = 0;, +		int index2 = 0;, +		for ( ; (index1 < requestUri.length()) && (index2 < mapping.length()); index1++, index2++) {, +			char c1 = requestUri.charAt(index1);, +			char c2 = mapping.charAt(index2);, +			if (c1 == ';') {, +				index1 = requestUri.indexOf('/', index1);, +				if (index1 == -1) {, +					return null;, +				}, +				c1 = requestUri.charAt(index1);, +			}, +			if (c1 == c2) {, +				continue;, +			}, +			if (ignoreCase && (Character.toLowerCase(c1) == Character.toLowerCase(c2))) {, +				continue;, +			}, +			return null;, +		}, +		if (index2 != mapping.length()) {, +			return null;, +		}, +		if (index1 == requestUri.length()) {, +			return "";, +		}, +		else if (requestUri.charAt(index1) == ';') {, +			index1 = requestUri.indexOf('/', index1);, +		}, +		return (index1 != -1) ? requestUri.substring(index1) : "";, +	}, +++ b/spring-web/src/test/java/org/springframework/web/util/UrlPathHelperTests.java, +	public void getPathWithinServlet() {, +		request.setContextPath("/petclinic");, +		request.setServletPath("/main");, +		request.setRequestURI("/petclinic/main/welcome.html");, +, +		assertEquals("Incorrect path returned", "/welcome.html", helper.getPathWithinServletMapping(request));, +	}, +, +	@Test]