[+++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, +		this.timeZone = TimeZone.getTimeZone(zoneId);, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, +		this.timeZone = TimeZone.getTimeZone(zoneId);, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilderTests.java, +		TimeZone timeZone = TimeZone.getTimeZone("Europe/Paris");, +		TimeZone timeZone = TimeZone.getTimeZone(zoneId);, +	@Test, +		ObjectMapper objectMapper = Jackson2ObjectMapperBuilder.json().timeZone(zoneId).build();, +		TimeZone timeZone = TimeZone.getTimeZone("GMT");, +		assertEquals(timeZone, objectMapper.getSerializationConfig().getTimeZone());, +		assertEquals(timeZone, objectMapper.getDeserializationConfig().getTimeZone());, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java, +		this.timeZone = TimeZone.getTimeZone(zoneId);, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilderTests.java, +		TimeZone timeZone = TimeZone.getTimeZone("Europe/Paris");, +		TimeZone timeZone = TimeZone.getTimeZone(zoneId);, +	@Test, +		ObjectMapper objectMapper = Jackson2ObjectMapperBuilder.json().timeZone(zoneId).build();, +		TimeZone timeZone = TimeZone.getTimeZone("GMT");, +		assertEquals(timeZone, objectMapper.getSerializationConfig().getTimeZone());, +		assertEquals(timeZone, objectMapper.getDeserializationConfig().getTimeZone());, +++ b/spring-web/src/test/java/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBeanTests.java, +		TimeZone timeZone = TimeZone.getTimeZone("Europe/Paris");, +		TimeZone timeZone = TimeZone.getTimeZone(zoneId);, +	@Test, +, +		TimeZone timeZone = TimeZone.getTimeZone("GMT");, +		assertEquals(timeZone, this.factory.getObject().getSerializationConfig().getTimeZone());, +		assertEquals(timeZone, this.factory.getObject().getDeserializationConfig().getTimeZone());]