[+++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/FilterDefinitionFactoryBean.java, + * Copyright 2002-2010 the original author or authors., +import java.lang.reflect.Method;, +import org.springframework.util.ReflectionUtils;, +	private static Method heuristicTypeMethod;, +, +	private static Object typeResolver;, +, +	static {, +		// Hibernate 3.6 TypeResolver class available?, +		try {, +			Class trClass = FilterDefinitionFactoryBean.class.getClassLoader().loadClass(, +					"org.hibernate.type.TypeResolver");, +			heuristicTypeMethod = trClass.getMethod("heuristicType", String.class);, +			typeResolver = trClass.newInstance();, +		}, +		catch (Exception ex) {, +			try {, +				heuristicTypeMethod = TypeFactory.class.getMethod("heuristicType", String.class);, +				typeResolver = null;, +			}, +			catch (Exception ex2) {, +				throw new IllegalStateException("Cannot find Hibernate's heuristicType method", ex2);, +			}, +		}, +	}, +, +, +				this.parameterTypeMap.put(entry.getKey(),, +						(Type) ReflectionUtils.invokeMethod(heuristicTypeMethod, typeResolver, entry.getValue()));]