[+++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/CronTriggerBean.java, +	private long startDelay = 0;, +	public void setTriggerListenerNames(String... names) {, +		for (String name : names) {, +			addTriggerListener(name);, +	public void afterPropertiesSet() {, +		if (this.startDelay > 0 || getStartTime() == null) {, +			setStartTime(new Date(System.currentTimeMillis() + this.startDelay));, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/CronTriggerBean.java, +	private long startDelay = 0;, +	public void setTriggerListenerNames(String... names) {, +		for (String name : names) {, +			addTriggerListener(name);, +	public void afterPropertiesSet() {, +		if (this.startDelay > 0 || getStartTime() == null) {, +			setStartTime(new Date(System.currentTimeMillis() + this.startDelay));, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/CronTriggerFactoryBean.java, +	private long startDelay = 0;, +	 * Set a specific start time for the trigger., +	 * <p>Note that a dynamically computed {@link #setStartDelay} specification, +	 * overrides a static timestamp set here., +	 */, +	public void setStartTime(Date startTime) {, +		this.startTime = startTime;, +	}, +, +	/**, +		if (this.startDelay > 0 || this.startTime == null) {, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/CronTriggerBean.java, +	private long startDelay = 0;, +	public void setTriggerListenerNames(String... names) {, +		for (String name : names) {, +			addTriggerListener(name);, +	public void afterPropertiesSet() {, +		if (this.startDelay > 0 || getStartTime() == null) {, +			setStartTime(new Date(System.currentTimeMillis() + this.startDelay));, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/CronTriggerFactoryBean.java, +	private long startDelay = 0;, +	 * Set a specific start time for the trigger., +	 * <p>Note that a dynamically computed {@link #setStartDelay} specification, +	 * overrides a static timestamp set here., +	 */, +	public void setStartTime(Date startTime) {, +		this.startTime = startTime;, +	}, +, +	/**, +		if (this.startDelay > 0 || this.startTime == null) {, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/JobDetailBean.java, +, +	public Class<?> getJobClass() {, +	public void setJobListenerNames(String... names) {, +		for (String name : names) {, +			addJobListener(name);, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/CronTriggerBean.java, +	private long startDelay = 0;, +	public void setTriggerListenerNames(String... names) {, +		for (String name : names) {, +			addTriggerListener(name);, +	public void afterPropertiesSet() {, +		if (this.startDelay > 0 || getStartTime() == null) {, +			setStartTime(new Date(System.currentTimeMillis() + this.startDelay));, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/CronTriggerFactoryBean.java, +	private long startDelay = 0;, +	 * Set a specific start time for the trigger., +	 * <p>Note that a dynamically computed {@link #setStartDelay} specification, +	 * overrides a static timestamp set here., +	 */, +	public void setStartTime(Date startTime) {, +		this.startTime = startTime;, +	}, +, +	/**, +		if (this.startDelay > 0 || this.startTime == null) {, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/JobDetailBean.java, +, +	public Class<?> getJobClass() {, +	public void setJobListenerNames(String... names) {, +		for (String name : names) {, +			addJobListener(name);, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.java, +	public void setJobListenerNames(String... names) {, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/CronTriggerBean.java, +	private long startDelay = 0;, +	public void setTriggerListenerNames(String... names) {, +		for (String name : names) {, +			addTriggerListener(name);, +	public void afterPropertiesSet() {, +		if (this.startDelay > 0 || getStartTime() == null) {, +			setStartTime(new Date(System.currentTimeMillis() + this.startDelay));, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/CronTriggerFactoryBean.java, +	private long startDelay = 0;, +	 * Set a specific start time for the trigger., +	 * <p>Note that a dynamically computed {@link #setStartDelay} specification, +	 * overrides a static timestamp set here., +	 */, +	public void setStartTime(Date startTime) {, +		this.startTime = startTime;, +	}, +]