[+++ b/src/reference/docbook/mvc.xml, +        classes are enabled by default by the MVC namespace and the MVC Java, +        config but must be configured explicitly if using neither., +        This section describes a few, +      with use of the MVC Java config but must be, +        that if using the MVC namespace or the MVC Java config, a wider, +        range of message converters are registered by default., +        See <link linkend="mvc-config-enable">Enabling the MVC Java Config or, +        the MVC XML Namespace</link> for more information.</para>, +        <classname>org.springframework.oxm</classname> package. The example, +        below shows how to do that directly in your configuration but if, +        your application is configured through the MVC namespace or the, +        MVC Java config see <link linkend="mvc-config-enable">Enabling, +        the MVC Java Config or the MVC XML Namespace</link> instead.</para>, +        instance. When using the MVC namespace or the MVC Java config, a JSR-303 validator, +          <para>Also see <link linkend="mvc-config-enable">Enabling the MVC, +          Java Config or the MVC XML Namespace</link> for, +          through the MVC namespace or the MVC Java config.</para>, +        MVC Java config keep this flag set to <literal>false</literal> in order to maintain, +        the MVC namespace or the MVC Java config, or declare bean instances, +        of type <classname>MappedInterceptor</classname> to do that. See <link, +        linkend="mvc-config-enable">Enabling the MVC Java Config or the MVC, +        XML Namespace</link>.</para>, +      automatically enabled when using the MVC namespace and the MVC Java config,, +      or otherwise depending on whether the, +      by default with the MVC namespace, the MVC Java config, and also by the, +		<title>Enabling the MVC Java Config or the MVC XML Namespace</title>]