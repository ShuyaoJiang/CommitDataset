[+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * {@link org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#setSynchronizeOnSession, + * "synchronizeOnSession"} flag to "true" if multiple requests are allowed to, + * access a session concurrently.</i>, +	 * <p>In a Servlet environment this is an alias for {@link #path()}., +	 * For example {@code @RequestMapping("/foo")} is equivalent to, +	 * {@code @RequestMapping(path="/foo")}., +	 * <p>In a Portlet environment this is the mapped portlet modes, +	 * In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")., +	 * Ant-style path patterns are also supported (e.g. "/myPath/*.do")., +	 * At the method level, relative paths (e.g. "edit.do") are supported within, +	 * the primary mapping expressed at the type level. Path mapping URIs may, +	 * contain placeholders (e.g. "/${connect}"), +	 * <p><b>Supported at the type level as well as at the method level!</b>, +	 * When used at the type level, all method-level mappings inherit, +	 * this primary mapping, narrowing it for a specific handler method., +	 * @see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE, +	 * @since 4.2, +	 */, +	String[] path() default {};, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * {@link org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#setSynchronizeOnSession, + * "synchronizeOnSession"} flag to "true" if multiple requests are allowed to, + * access a session concurrently.</i>, +	 * <p>In a Servlet environment this is an alias for {@link #path()}., +	 * For example {@code @RequestMapping("/foo")} is equivalent to, +	 * {@code @RequestMapping(path="/foo")}., +	 * <p>In a Portlet environment this is the mapped portlet modes, +	 * In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")., +	 * Ant-style path patterns are also supported (e.g. "/myPath/*.do")., +	 * At the method level, relative paths (e.g. "edit.do") are supported within, +	 * the primary mapping expressed at the type level. Path mapping URIs may, +	 * contain placeholders (e.g. "/${connect}"), +	 * <p><b>Supported at the type level as well as at the method level!</b>, +	 * When used at the type level, all method-level mappings inherit, +	 * this primary mapping, narrowing it for a specific handler method., +	 * @see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE, +	 * @since 4.2, +	 */, +	String[] path() default {};, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java, +import org.springframework.core.annotation.AnnotatedElementUtils;, +import org.springframework.core.annotation.AnnotationAttributes;, +		String annotType = RequestMapping.class.getName();, +		AnnotationAttributes attrs = AnnotatedElementUtils.getAnnotationAttributes(controllerType, annotType);, +		if (attrs == null) {, +		String[] paths = attrs.getStringArray("path");, +		paths = ObjectUtils.isEmpty(paths) ? attrs.getStringArray("value") : paths;, +		if (ObjectUtils.isEmpty(paths) || StringUtils.isEmpty(paths[0])) {, +			return "/";, +		}, +		if (paths.length > 1 && logger.isWarnEnabled()) {, +		return paths[0];, +	private static String getMethodRequestMapping(Method method) {, +		String annotType = RequestMapping.class.getName();, +		AnnotationAttributes attrs = AnnotatedElementUtils.getAnnotationAttributes(method, annotType);, +		if (attrs == null) {, +			throw new IllegalArgumentException("No @RequestMapping on: " + method.toGenericString());, +		}, +		String[] paths = attrs.getStringArray("path");, +		paths = ObjectUtils.isEmpty(paths) ? attrs.getStringArray("value") : paths;, +		if (ObjectUtils.isEmpty(paths) || StringUtils.isEmpty(paths[0])) {, +			return "/";, +		}, +		if (paths.length > 1 && logger.isWarnEnabled()) {, +			logger.warn("Multiple paths on method " + method.toGenericString() + ", using first one");, +		}, +		return paths[0];, +	}, +, +, +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java, + * {@link org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#setSynchronizeOnSession, + * "synchronizeOnSession"} flag to "true" if multiple requests are allowed to, + * access a session concurrently.</i>, +	 * <p>In a Servlet environment this is an alias for {@link #path()}., +	 * For example {@code @RequestMapping("/foo")} is equivalent to, +	 * {@code @RequestMapping(path="/foo")}., +	 * <p>In a Portlet environment this is the mapped portlet modes, +	 * In a Servlet environment only: the path mapping URIs (e.g. "/myPath.do")., +	 * Ant-style path patterns are also supported (e.g. "/myPath/*.do")., +	 * At the method level, relative paths (e.g. "edit.do") are supported within, +	 * the primary mapping expressed at the type level. Path mapping URIs may, +	 * contain placeholders (e.g. "/${connect}"), +	 * <p><b>Supported at the type level as well as at the method level!</b>, +	 * When used at the type level, all method-level mappings inherit, +	 * this primary mapping, narrowing it for a specific handler method., +	 * @see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE, +	 * @since 4.2, +	 */, +	String[] path() default {};, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java, +import org.springframework.core.annotation.AnnotatedElementUtils;, +import org.springframework.core.annotation.AnnotationAttributes;]