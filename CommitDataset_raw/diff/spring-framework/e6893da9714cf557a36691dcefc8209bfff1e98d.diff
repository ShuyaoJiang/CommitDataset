[+++ b/spring-core/src/main/java/org/springframework/core/io/buffer/NettyDataBuffer.java, + * Copyright 2002-2018 the original author or authors., +	private final ByteBuf byteBuf;, +		Assert.notNull(buffers, "'buffers' must not be null");, +, +		if (buffers.length > 0) {, +			if (hasNettyDataBuffers(buffers)) {, +	private static boolean hasNettyDataBuffers(DataBuffer[] dataBuffers) {, +		for (DataBuffer dataBuffer : dataBuffers) {, +			if (!(dataBuffer instanceof NettyDataBuffer)) {, +				return false;, +			}, +		}, +		return true;, +	}, +, +, +		for (ByteBuffer buffer : buffers) {, +			this.byteBuf.writeBytes(buffer);, +		}, +		return this;, +		for (ByteBuf byteBuf : byteBufs) {, +			this.byteBuf.writeBytes(byteBuf);, +++ b/spring-core/src/main/java/org/springframework/core/io/buffer/NettyDataBuffer.java, + * Copyright 2002-2018 the original author or authors., +	private final ByteBuf byteBuf;, +		Assert.notNull(buffers, "'buffers' must not be null");, +, +		if (buffers.length > 0) {, +			if (hasNettyDataBuffers(buffers)) {, +	private static boolean hasNettyDataBuffers(DataBuffer[] dataBuffers) {, +		for (DataBuffer dataBuffer : dataBuffers) {, +			if (!(dataBuffer instanceof NettyDataBuffer)) {, +				return false;, +			}, +		}, +		return true;, +	}, +, +, +		for (ByteBuffer buffer : buffers) {, +			this.byteBuf.writeBytes(buffer);, +		}, +		return this;, +		for (ByteBuf byteBuf : byteBufs) {, +			this.byteBuf.writeBytes(byteBuf);, +++ b/spring-core/src/test/java/org/springframework/core/io/buffer/DataBufferTests.java, + * Copyright 2002-2018 the original author or authors., +		release(buffer1, buffer2, buffer3);, +	@Test, +	public void spr16351() {, +		DataBuffer buffer = createDataBuffer(6);, +		byte[] bytes = {'a', 'b', 'c', 'd', 'e', 'f'};, +		buffer.write(bytes);, +		DataBuffer slice = buffer.slice(3, 3);, +		buffer.writePosition(3);, +		buffer.write(slice);, +, +		assertEquals(6, buffer.readableByteCount());, +		byte[] result = new byte[6];, +		buffer.read(result);, +, +		assertArrayEquals(bytes, result);, +, +		release(buffer);, +	}, +]