[+++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, + * Abstract base class for {@link Decoder} implementations., + *, +, +		return this.decodableMimeTypes.stream().anyMatch(m -> m.isCompatibleWith(mimeType));, +	public Mono<T> decodeToMono(Publisher<DataBuffer> inputStream, ResolvableType elementType,, +			MimeType mimeType, Object... hints) {, +, +, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, + * Abstract base class for {@link Decoder} implementations., + *, +, +		return this.decodableMimeTypes.stream().anyMatch(m -> m.isCompatibleWith(mimeType));, +	public Mono<T> decodeToMono(Publisher<DataBuffer> inputStream, ResolvableType elementType,, +			MimeType mimeType, Object... hints) {, +, +, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, + * Abstract base class for {@link Decoder} implementations., + *, +, +		return this.encodableMimeTypes.stream().anyMatch(m -> m.isCompatibleWith(mimeType));, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, + * Abstract base class for {@link Decoder} implementations., + *, +, +		return this.decodableMimeTypes.stream().anyMatch(m -> m.isCompatibleWith(mimeType));, +	public Mono<T> decodeToMono(Publisher<DataBuffer> inputStream, ResolvableType elementType,, +			MimeType mimeType, Object... hints) {, +, +, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, + * Abstract base class for {@link Decoder} implementations., + *, +, +		return this.encodableMimeTypes.stream().anyMatch(m -> m.isCompatibleWith(mimeType));, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractSingleValueEncoder.java, + * Abstract base class for {@link org.springframework.core.codec.Encoder}, + * classes that can only deal with a single value., + *, +, +, +, +	 * Encode {@code T} to an output {@link DataBuffer} stream., +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, + * Abstract base class for {@link Decoder} implementations., + *, +, +		return this.decodableMimeTypes.stream().anyMatch(m -> m.isCompatibleWith(mimeType));, +	public Mono<T> decodeToMono(Publisher<DataBuffer> inputStream, ResolvableType elementType,, +			MimeType mimeType, Object... hints) {, +, +, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, + * Abstract base class for {@link Decoder} implementations., + *, +, +		return this.encodableMimeTypes.stream().anyMatch(m -> m.isCompatibleWith(mimeType));, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractSingleValueEncoder.java, + * Abstract base class for {@link org.springframework.core.codec.Encoder}, + * classes that can only deal with a single value., + *, +, +, +, +	 * Encode {@code T} to an output {@link DataBuffer} stream., +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferDecoder.java, + * Decoder for {@link ByteBuffer}s., + *, +, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, + * Abstract base class for {@link Decoder} implementations., + *, +, +		return this.decodableMimeTypes.stream().anyMatch(m -> m.isCompatibleWith(mimeType));, +	public Mono<T> decodeToMono(Publisher<DataBuffer> inputStream, ResolvableType elementType,, +			MimeType mimeType, Object... hints) {, +, +, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, + * Abstract base class for {@link Decoder} implementations., + *, +, +		return this.encodableMimeTypes.stream().anyMatch(m -> m.isCompatibleWith(mimeType));, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractSingleValueEncoder.java, + * Abstract base class for {@link org.springframework.core.codec.Encoder}, + * classes that can only deal with a single value., + *, +, +, +, +	 * Encode {@code T} to an output {@link DataBuffer} stream., +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferDecoder.java, + * Decoder for {@link ByteBuffer}s., + *, +, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, + * Encoder for {@link ByteBuffer}s., + *]