[+++ b/org.springframework.aspects/.classpath, +	<classpathentry combineaccessrules="false" kind="src" path="/org.springframework.orm"/>, +++ b/org.springframework.aspects/.classpath, +	<classpathentry combineaccessrules="false" kind="src" path="/org.springframework.orm"/>, +++ b/org.springframework.aspects/ivy.xml, +		<conf name="orm" extends="runtime" description="JARs needed to compile JPA aspects"/>, +		<dependency org="org.springframework" name="org.springframework.orm" rev="latest.integration" conf="optional,orm->compile"/>, +++ b/org.springframework.aspects/.classpath, +	<classpathentry combineaccessrules="false" kind="src" path="/org.springframework.orm"/>, +++ b/org.springframework.aspects/ivy.xml, +		<conf name="orm" extends="runtime" description="JARs needed to compile JPA aspects"/>, +		<dependency org="org.springframework" name="org.springframework.orm" rev="latest.integration" conf="optional,orm->compile"/>, +++ b/org.springframework.aspects/src/main/java/org/springframework/orm/jpa/aspectj/JpaExceptionTranslatorAspect.aj, +package org.springframework.orm.jpa.aspectj;, +, +import javax.persistence.EntityManager;, +import javax.persistence.EntityManagerFactory;, +import javax.persistence.EntityTransaction;, +import javax.persistence.Query;, +, +import org.springframework.dao.DataAccessException;, +import org.springframework.orm.jpa.EntityManagerFactoryUtils;, +, +public aspect JpaExceptionTranslatorAspect {, +    pointcut entityManagerCall(): call(* EntityManager.*(..)) || call(* EntityManagerFactory.*(..)) || call(* EntityTransaction.*(..)) || call(* Query.*(..));, +    , +    after() throwing(RuntimeException re): entityManagerCall() {     , +    	DataAccessException dex = EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(re);, +    	if (dex != null) {, +    		throw dex;, +    	} else {, +    		throw re;, +    	}        , +    }	, +}, +++ b/org.springframework.aspects/.classpath, +	<classpathentry combineaccessrules="false" kind="src" path="/org.springframework.orm"/>, +++ b/org.springframework.aspects/ivy.xml, +		<conf name="orm" extends="runtime" description="JARs needed to compile JPA aspects"/>, +		<dependency org="org.springframework" name="org.springframework.orm" rev="latest.integration" conf="optional,orm->compile"/>, +++ b/org.springframework.aspects/src/main/java/org/springframework/orm/jpa/aspectj/JpaExceptionTranslatorAspect.aj, +package org.springframework.orm.jpa.aspectj;, +, +import javax.persistence.EntityManager;, +import javax.persistence.EntityManagerFactory;, +import javax.persistence.EntityTransaction;, +import javax.persistence.Query;, +, +import org.springframework.dao.DataAccessException;, +import org.springframework.orm.jpa.EntityManagerFactoryUtils;, +, +public aspect JpaExceptionTranslatorAspect {, +    pointcut entityManagerCall(): call(* EntityManager.*(..)) || call(* EntityManagerFactory.*(..)) || call(* EntityTransaction.*(..)) || call(* Query.*(..));, +    , +    after() throwing(RuntimeException re): entityManagerCall() {     , +    	DataAccessException dex = EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(re);, +    	if (dex != null) {, +    		throw dex;, +    	} else {, +    		throw re;, +    	}        , +    }	, +}, +++ b/org.springframework.aspects/template.mf, + org.springframework.transaction.*;version="[3.0.0, 3.0.1)";resolution:=optional,, + org.springframework.orm.jpa.*;version="[3.0.0, 3.0.1)";resolution:=optional,, + org.springframework.dao.*;version="[3.0.0, 3.0.1)";resolution:=optional]