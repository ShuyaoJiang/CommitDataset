[+++ b/spring-test/src/main/java/org/springframework/test/context/web/ServletTestExecutionListener.java, +	/**, +	 * Attribute name for a {@link TestContext} attribute which indicates that, +	 * {@code ServletTestExecutionListener} has already populated Spring Web's, +	 * {@code RequestContextHolder}., +	 *, +	 * <p>Permissible values include {@link Boolean#TRUE} and {@link Boolean#FALSE}., +	 */, +	public static final String POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE = Conventions.getQualifiedAttributeName(, +		ServletTestExecutionListener.class, "populatedRequestContextHolder");, +, +	 *, +	 * <p>The {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} and, +	 * {@link #POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} will be subsequently, +	 * removed from the test context, regardless of their values., +		testContext.removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE);, +	private boolean alreadyPopulatedRequestContextHolder(TestContext testContext) {, +		return Boolean.TRUE.equals(testContext.getAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE));, +	}, +, +		if (notAnnotatedWithWebAppConfiguration(testContext) || alreadyPopulatedRequestContextHolder(testContext)) {, +			testContext.setAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE, Boolean.TRUE);, +++ b/spring-test/src/main/java/org/springframework/test/context/web/ServletTestExecutionListener.java, +	/**, +	 * Attribute name for a {@link TestContext} attribute which indicates that, +	 * {@code ServletTestExecutionListener} has already populated Spring Web's, +	 * {@code RequestContextHolder}., +	 *, +	 * <p>Permissible values include {@link Boolean#TRUE} and {@link Boolean#FALSE}., +	 */, +	public static final String POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE = Conventions.getQualifiedAttributeName(, +		ServletTestExecutionListener.class, "populatedRequestContextHolder");, +, +	 *, +	 * <p>The {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} and, +	 * {@link #POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} will be subsequently, +	 * removed from the test context, regardless of their values., +		testContext.removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE);, +	private boolean alreadyPopulatedRequestContextHolder(TestContext testContext) {, +		return Boolean.TRUE.equals(testContext.getAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE));, +	}, +, +		if (notAnnotatedWithWebAppConfiguration(testContext) || alreadyPopulatedRequestContextHolder(testContext)) {, +			testContext.setAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE, Boolean.TRUE);, +++ b/spring-test/src/test/java/org/springframework/test/context/web/ServletTestExecutionListenerTests.java, +		verify(testContext, times(1)).setAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE, Boolean.TRUE);, +		when(testContext.getAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)).thenReturn(Boolean.TRUE);, +		verify(testContext, times(1)).setAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE, Boolean.TRUE);, +		verify(testContext, times(1)).setAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE, Boolean.TRUE);, +		verify(testContext).removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE);]