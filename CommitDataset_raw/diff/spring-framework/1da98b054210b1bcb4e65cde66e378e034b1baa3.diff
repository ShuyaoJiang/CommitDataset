[+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, + * Copyright 2002-2015 the original author or authors., +					return enhanceFactoryBean(factoryBean, beanFactory, beanName);, +		private Object enhanceFactoryBean(final Object factoryBean, final ConfigurableBeanFactory beanFactory,, +			enhancer.setSuperclass(factoryBean.getClass());, +					return proxy.invoke(factoryBean, args);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, + * Copyright 2002-2015 the original author or authors., +					return enhanceFactoryBean(factoryBean, beanFactory, beanName);, +		private Object enhanceFactoryBean(final Object factoryBean, final ConfigurableBeanFactory beanFactory,, +			enhancer.setSuperclass(factoryBean.getClass());, +					return proxy.invoke(factoryBean, args);, +++ b/spring-context/src/test/java/org/springframework/context/annotation/ConfigurationWithFactoryBeanAndAutowiringTests.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.beans.factory.InitializingBean;, +import static org.junit.Assert.*;, +, + * @author Juergen Hoeller, +, +	@Test, +	public void withFactoryBeanCallingBean() {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		ctx.register(AppConfig.class);, +		ctx.register(FactoryBeanCallingConfig.class);, +		ctx.refresh();, +		assertEquals("true", ctx.getBean("myString"));, +	static class DummyBean {, +	static class MyFactoryBean implements FactoryBean<String>, InitializingBean {, +, +		private boolean initialized = false;, +, +		@Override, +		public void afterPropertiesSet() throws Exception {, +			this.initialized = true;, +		}, +, +, +, +, +		public String getString() {, +			return Boolean.toString(this.initialized);, +		}, +	static class MyParameterizedFactoryBean<T> implements FactoryBean<T> {, +	static class AppConfig {, +, +	static class ConcreteFactoryBeanImplementationConfig {, +, +	static class ParameterizedFactoryBeanImplementationConfig {, +, +	static class ParameterizedFactoryBeanInterfaceConfig {, +, +	static class NonPublicParameterizedFactoryBeanInterfaceConfig {, +, +	static class RawFactoryBeanInterfaceConfig {, +, +	static class WildcardParameterizedFactoryBeanInterfaceConfig {, +, +, +, +	@Configuration, +	static class FactoryBeanCallingConfig {, +, +		@Autowired, +		private DummyBean dummyBean;, +, +		@Bean, +		public MyFactoryBean factoryBean() {, +			Assert.notNull(dummyBean, "DummyBean was not injected.");, +			return new MyFactoryBean();, +		}, +, +		@Bean, +		public String myString() {, +			return factoryBean().getString();, +		}, +	}, +, +}]