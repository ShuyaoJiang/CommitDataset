[+++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	@Override, +	public String toString() {, +		StringBuffer str = new StringBuffer();, +		str.append("TypedValue: ").append(value).append(" of type "+typeDescriptor.asString());, +		return str.toString();, +	}, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	@Override, +	public String toString() {, +		StringBuffer str = new StringBuffer();, +		str.append("TypedValue: ").append(value).append(" of type "+typeDescriptor.asString());, +		return str.toString();, +	}, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/Assign.java, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	@Override, +	public String toString() {, +		StringBuffer str = new StringBuffer();, +		str.append("TypedValue: ").append(value).append(" of type "+typeDescriptor.asString());, +		return str.toString();, +	}, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/Assign.java, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java, +// TODO asc array constructor call logic has been removed for now, +	// TODO is this caching safe - passing the expression around will mean this executor is also being passed around, +	public ConstructorReference(Token payload) {, +			this.cachedExecutor = executorToUse;, +			TypedValue result = executorToUse.execute(state.getEvaluationContext(), arguments);, +			return result;, +		} catch (AccessException ae) {, +	@Override, +	public String toStringAST() {, +		StringBuilder sb = new StringBuilder();, +		sb.append("new ");, +, +		int index = 0;, +		sb.append(getChild(index++).toStringAST());, +, +			sb.append("(");, +			for (int i = index; i < getChildCount(); i++) {, +				if (i > index), +					sb.append(",");, +				sb.append(getChild(i).toStringAST());, +			}, +			sb.append(")");, +		return sb.toString();, +	}, +, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	@Override, +	public String toString() {, +		StringBuffer str = new StringBuffer();, +		str.append("TypedValue: ").append(value).append(" of type "+typeDescriptor.asString());, +		return str.toString();, +	}, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/Assign.java, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java, +// TODO asc array constructor call logic has been removed for now, +	// TODO is this caching safe - passing the expression around will mean this executor is also being passed around, +	public ConstructorReference(Token payload) {, +			this.cachedExecutor = executorToUse;, +			TypedValue result = executorToUse.execute(state.getEvaluationContext(), arguments);, +			return result;, +		} catch (AccessException ae) {, +	@Override, +	public String toStringAST() {, +		StringBuilder sb = new StringBuilder();, +		sb.append("new ");, +, +		int index = 0;, +		sb.append(getChild(index++).toStringAST());, +, +			sb.append("(");, +			for (int i = index; i < getChildCount(); i++) {, +				if (i > index), +					sb.append(",");, +				sb.append(getChild(i).toStringAST());, +			}, +			sb.append(")");, +		return sb.toString();, +	}, +, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/FormatHelper.java, +public class FormatHelper {, +			sb.append(formatClassNameForMessage(argumentTypes[i]));, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/TypedValue.java, +	@Override, +	public String toString() {, +		StringBuffer str = new StringBuffer();, +		str.append("TypedValue: ").append(value).append(" of type "+typeDescriptor.asString());, +		return str.toString();, +	}, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/Assign.java, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java, +// TODO asc array constructor call logic has been removed for now, +	// TODO is this caching safe - passing the expression around will mean this executor is also being passed around, +	public ConstructorReference(Token payload) {, +			this.cachedExecutor = executorToUse;, +			TypedValue result = executorToUse.execute(state.getEvaluationContext(), arguments);]