[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/DispatcherHandler.java, +import org.springframework.web.server.adapter.WebHttpHandlerBuilder;, +	 *, +	 * <p>Delegates to {@link WebHttpHandlerBuilder#applicationContext} that, +	 * detects the target {@link DispatcherHandler} along with, +	 * {@link org.springframework.web.server.WebFilter}s, and, +	 * {@link org.springframework.web.server.WebExceptionHandler}s in the given, +	 * ApplicationContext., +	 *, +	 * @param context the application context to find the handler beans in, +	public static HttpHandler toHttpHandler(ApplicationContext context) {, +		return WebHttpHandlerBuilder.applicationContext(context).build();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/DispatcherHandler.java, +import org.springframework.web.server.adapter.WebHttpHandlerBuilder;, +	 *, +	 * <p>Delegates to {@link WebHttpHandlerBuilder#applicationContext} that, +	 * detects the target {@link DispatcherHandler} along with, +	 * {@link org.springframework.web.server.WebFilter}s, and, +	 * {@link org.springframework.web.server.WebExceptionHandler}s in the given, +	 * ApplicationContext., +	 *, +	 * @param context the application context to find the handler beans in, +	public static HttpHandler toHttpHandler(ApplicationContext context) {, +		return WebHttpHandlerBuilder.applicationContext(context).build();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/config/WebReactiveConfigurationSupport.java, +import org.springframework.web.reactive.DispatcherHandler;, +import org.springframework.web.server.WebExceptionHandler;, +import org.springframework.web.server.handler.ResponseStatusExceptionHandler;, +	public DispatcherHandler webHandler() {, +		return new DispatcherHandler();, +	}, +, +	@Bean, +	public WebExceptionHandler responseStatusExceptionHandler() {, +		return new ResponseStatusExceptionHandler();, +	}, +, +	@Bean, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/DispatcherHandler.java, +import org.springframework.web.server.adapter.WebHttpHandlerBuilder;, +	 *, +	 * <p>Delegates to {@link WebHttpHandlerBuilder#applicationContext} that, +	 * detects the target {@link DispatcherHandler} along with, +	 * {@link org.springframework.web.server.WebFilter}s, and, +	 * {@link org.springframework.web.server.WebExceptionHandler}s in the given, +	 * ApplicationContext., +	 *, +	 * @param context the application context to find the handler beans in, +	public static HttpHandler toHttpHandler(ApplicationContext context) {, +		return WebHttpHandlerBuilder.applicationContext(context).build();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/config/WebReactiveConfigurationSupport.java, +import org.springframework.web.reactive.DispatcherHandler;, +import org.springframework.web.server.WebExceptionHandler;, +import org.springframework.web.server.handler.ResponseStatusExceptionHandler;, +	public DispatcherHandler webHandler() {, +		return new DispatcherHandler();, +	}, +, +	@Bean, +	public WebExceptionHandler responseStatusExceptionHandler() {, +		return new ResponseStatusExceptionHandler();, +	}, +, +	@Bean, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/result/method/annotation/AbstractRequestMappingIntegrationTests.java, +		return WebHttpHandlerBuilder.applicationContext(this.applicationContext).build();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/DispatcherHandler.java, +import org.springframework.web.server.adapter.WebHttpHandlerBuilder;, +	 *, +	 * <p>Delegates to {@link WebHttpHandlerBuilder#applicationContext} that, +	 * detects the target {@link DispatcherHandler} along with, +	 * {@link org.springframework.web.server.WebFilter}s, and, +	 * {@link org.springframework.web.server.WebExceptionHandler}s in the given, +	 * ApplicationContext., +	 *, +	 * @param context the application context to find the handler beans in, +	public static HttpHandler toHttpHandler(ApplicationContext context) {, +		return WebHttpHandlerBuilder.applicationContext(context).build();, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/config/WebReactiveConfigurationSupport.java, +import org.springframework.web.reactive.DispatcherHandler;, +import org.springframework.web.server.WebExceptionHandler;, +import org.springframework.web.server.handler.ResponseStatusExceptionHandler;, +	public DispatcherHandler webHandler() {, +		return new DispatcherHandler();, +	}, +, +	@Bean, +	public WebExceptionHandler responseStatusExceptionHandler() {, +		return new ResponseStatusExceptionHandler();, +	}, +, +	@Bean, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/result/method/annotation/AbstractRequestMappingIntegrationTests.java, +		return WebHttpHandlerBuilder.applicationContext(this.applicationContext).build();, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/WebHttpHandlerBuilder.java, +import java.util.Collection;, +import org.springframework.beans.factory.BeanFactoryUtils;, +import org.springframework.beans.factory.NoSuchBeanDefinitionException;, +import org.springframework.context.ApplicationContext;, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;]