[+++ b/spring-aop/src/test/java/org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactoryTests.java, +		ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor sia =, +				(ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor) advised.getAdvisors()[1];, +		ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor sia =, +				(ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor) advised.getAdvisors()[1];, +		ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor sia =, +				(ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor) advised.getAdvisors()[1];, +, +, +		@Around(value="execution(String mungeArgs(..)) && args(a, b, c, d, e)", argNames="b,c,d,e,a"), +, +, +, +, +, +, +	@Before(value="execution(void set*(*)) && this(modifiable) && args(newValue)", argNames="modifiable,newValue"), +	public void recordModificationIfSetterArgumentDiffersFromOldValue(, +			JoinPoint jp, MutableModifable mixin, Object newValue) {, +, +	@DeclareParents(value = "org.springframework..*", defaultImpl = DefaultLockable.class), +, +, +, +	// Just to check that this doesn't cause problems with introduction processing]