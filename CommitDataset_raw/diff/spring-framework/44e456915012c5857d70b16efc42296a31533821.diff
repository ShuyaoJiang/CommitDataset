[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SendToMethodReturnValueHandler.java, +		Assert.hasText(destination, "No lookup destination header in " + message);, +, +		return (destination.startsWith("/") ?, +				new String[] {defaultPrefix + destination} : new String[] {defaultPrefix + "/" + destination});, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SendToMethodReturnValueHandler.java, +		Assert.hasText(destination, "No lookup destination header in " + message);, +, +		return (destination.startsWith("/") ?, +				new String[] {defaultPrefix + destination} : new String[] {defaultPrefix + "/" + destination});, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/annotation/support/SendToMethodReturnValueHandlerTests.java, +	public void sendToDefaultDestinationWhenUsingDotPathSeparator() throws Exception {, +		Message<?> inputMessage = createInputMessage("sess1", "sub1", "/app/", "dest.foo.bar", null);, +		assertEquals("/topic/dest.foo.bar", headers.getDestination());, +	public void sendToUserDefaultDestinationWhenUsingDotPathSeparator() throws Exception {, +		Message<?> inputMessage = createInputMessage("sess1", "sub1", "/app/", "dest.foo.bar", user);, +		assertEquals("/user/" + user.getName() + "/queue/dest.foo.bar", headers.getDestination());]