[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +					String match = argTypeEle.getAttribute(ARG_TYPE_MATCH_ATTRIBUTE);, +					match = (StringUtils.hasText(match) ? match : DomUtils.getTextValue(argTypeEle));, +					if (StringUtils.hasText(match)) {, +						replaceOverride.addTypeIdentifier(match);, +					}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +					String match = argTypeEle.getAttribute(ARG_TYPE_MATCH_ATTRIBUTE);, +					match = (StringUtils.hasText(match) ? match : DomUtils.getTextValue(argTypeEle));, +					if (StringUtils.hasText(match)) {, +						replaceOverride.addTypeIdentifier(match);, +					}, +++ b/spring-context/src/test/java/org/springframework/beans/factory/xml/XmlBeanFactoryTestTypes.java, + * Copyright 2002-2012 the original author or authors., +	public String replaceMe(String someParam) {, +		return "replaceMe:"  + someParam;, +	}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +					String match = argTypeEle.getAttribute(ARG_TYPE_MATCH_ATTRIBUTE);, +					match = (StringUtils.hasText(match) ? match : DomUtils.getTextValue(argTypeEle));, +					if (StringUtils.hasText(match)) {, +						replaceOverride.addTypeIdentifier(match);, +					}, +++ b/spring-context/src/test/java/org/springframework/beans/factory/xml/XmlBeanFactoryTestTypes.java, + * Copyright 2002-2012 the original author or authors., +	public String replaceMe(String someParam) {, +		return "replaceMe:"  + someParam;, +	}, +++ b/spring-context/src/test/java/org/springframework/beans/factory/xml/XmlBeanFactoryTests-delegationOverrides.xml, +<beans xmlns="http://www.springframework.org/schema/beans", +       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">, +	<bean id="overrideOneMethodByAttribute" class="org.springframework.beans.factory.xml.OverrideOneMethod">, +		<replaced-method name="replaceMe" replacer="reverseReplacer">, +			<arg-type match="String"/>, +		</replaced-method>, +	</bean>, +, +	<bean id="overrideOneMethodByElement" class="org.springframework.beans.factory.xml.OverrideOneMethod">, +		<replaced-method name="replaceMe" replacer="reverseReplacer">, +			<arg-type>String</arg-type>, +		</replaced-method>, +	</bean>, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +					String match = argTypeEle.getAttribute(ARG_TYPE_MATCH_ATTRIBUTE);, +					match = (StringUtils.hasText(match) ? match : DomUtils.getTextValue(argTypeEle));, +					if (StringUtils.hasText(match)) {, +						replaceOverride.addTypeIdentifier(match);, +					}, +++ b/spring-context/src/test/java/org/springframework/beans/factory/xml/XmlBeanFactoryTestTypes.java, + * Copyright 2002-2012 the original author or authors., +	public String replaceMe(String someParam) {, +		return "replaceMe:"  + someParam;, +	}, +++ b/spring-context/src/test/java/org/springframework/beans/factory/xml/XmlBeanFactoryTests-delegationOverrides.xml, +<beans xmlns="http://www.springframework.org/schema/beans", +       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">, +	<bean id="overrideOneMethodByAttribute" class="org.springframework.beans.factory.xml.OverrideOneMethod">, +		<replaced-method name="replaceMe" replacer="reverseReplacer">, +			<arg-type match="String"/>, +		</replaced-method>, +	</bean>, +, +	<bean id="overrideOneMethodByElement" class="org.springframework.beans.factory.xml.OverrideOneMethod">, +		<replaced-method name="replaceMe" replacer="reverseReplacer">, +			<arg-type>String</arg-type>, +		</replaced-method>, +	</bean>, +, +++ b/spring-context/src/test/java/org/springframework/beans/factory/xml/XmlBeanFactoryTests.java, + * Copyright 2002-2012 the original author or authors., +	public @Test void testOverrideMethodByArgTypeAttribute() {, +		DefaultListableBeanFactory xbf = new DefaultListableBeanFactory();, +		XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(xbf);, +		reader.loadBeanDefinitions(DELEGATION_OVERRIDES_CONTEXT);, +		OverrideOneMethod oom = (OverrideOneMethod) xbf.getBean("overrideOneMethodByAttribute");, +		assertEquals("should not replace", "replaceMe:1", oom.replaceMe(1));, +		assertEquals("should replace", "cba", oom.replaceMe("abc"));, +	}, +, +	public @Test void testOverrideMethodByArgTypeElement() {, +		DefaultListableBeanFactory xbf = new DefaultListableBeanFactory();, +		XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(xbf);, +		reader.loadBeanDefinitions(DELEGATION_OVERRIDES_CONTEXT);, +		OverrideOneMethod oom = (OverrideOneMethod) xbf.getBean("overrideOneMethodByElement");, +		assertEquals("should not replace", "replaceMe:1", oom.replaceMe(1));, +		assertEquals("should replace", "cba", oom.replaceMe("abc"));, +	}, +]