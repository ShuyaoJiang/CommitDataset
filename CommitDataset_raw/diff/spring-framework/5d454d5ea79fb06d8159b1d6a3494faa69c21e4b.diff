[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractTyrusRequestUpgradeStrategy.java, +import static org.glassfish.tyrus.spi.WebSocketEngine.UpgradeStatus.*;, + * <p>Works with Tyrus 1.3.5 (WebLogic 12.1.3), Tyrus 1.7 (GlassFish 4.1.0),, + * Tyrus 1.11 (WebLogic 12.2.1), and Tyrus 1.12 (GlassFish 4.1.1)., +					logger.trace("Successful request upgrade: " + upgradeResponse.getHeaders());, +					// Tyrus 1.11+, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractTyrusRequestUpgradeStrategy.java, +import static org.glassfish.tyrus.spi.WebSocketEngine.UpgradeStatus.*;, + * <p>Works with Tyrus 1.3.5 (WebLogic 12.1.3), Tyrus 1.7 (GlassFish 4.1.0),, + * Tyrus 1.11 (WebLogic 12.2.1), and Tyrus 1.12 (GlassFish 4.1.1)., +					logger.trace("Successful request upgrade: " + upgradeResponse.getHeaders());, +					// Tyrus 1.11+, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/WebLogicRequestUpgradeStrategy.java, + * Supports 12.1.3 as well as 12.2.1, as of Spring Framework 4.2.3., +	private static final TyrusEndpointHelper endpointHelper =, +			(WLS_12_1_3 ? new Tyrus135EndpointHelper() : new Tyrus17EndpointHelper());, +	private static final Connection.CloseListener noOpCloseListener = new Connection.CloseListener() {, +		@Override, +		public void close(CloseReason reason) {, +		}, +	};, +, +	private static boolean isWebLogic1213() {, +		try {, +			type("weblogic.websocket.tyrus.TyrusMuxableWebSocket").getDeclaredConstructor(, +					type("weblogic.servlet.internal.MuxableSocketHTTP"));, +			return true;, +		catch (NoSuchMethodException ex) {, +			return false;, +		}, +		catch (ClassNotFoundException ex) {, +			throw new IllegalStateException("No compatible WebSocket version found", ex);, +		}, +		return WebLogicRequestUpgradeStrategy.class.getClassLoader().loadClass(className);, +	private static Object getNativeRequest(ServletRequest request) {, +		while (request instanceof ServletRequestWrapper) {, +			request = ((ServletRequestWrapper) request).getRequest();, +		return request;, +	}, +, +				Object[] args = (WLS_12_1_3 ? new Object[] {httpSocket} :, +, +]