[+++ b/spring-context/src/main/java/org/springframework/validation/ValidationUtils.java, +++ b/spring-context/src/main/java/org/springframework/validation/ValidationUtils.java, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java, +					if (j < statement.length && (statement[j] == '?' || statement[j] == '|' || statement[j] == '&')) {, +						// Postgres-style "??", "?|", "?&" operator should be skipped, +++ b/spring-context/src/main/java/org/springframework/validation/ValidationUtils.java, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java, +					if (j < statement.length && (statement[j] == '?' || statement[j] == '|' || statement[j] == '&')) {, +						// Postgres-style "??", "?|", "?&" operator should be skipped, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/namedparam/NamedParameterUtilsTests.java, +	@Test  // SPR-15382, +	public void parseSqlStatementWithPostgresAnyArrayStringsExistsOperator() throws Exception {, +		String expectedSql = "select '[\"3\", \"11\"]'::jsonb ?| '{1,3,11,12,17}'::text[]";, +		String sql = "select '[\"3\", \"11\"]'::jsonb ?| '{1,3,11,12,17}'::text[]";, +, +		ParsedSql parsedSql = NamedParameterUtils.parseSqlStatement(sql);, +		assertEquals(0, parsedSql.getTotalParameterCount());, +		assertEquals(expectedSql, NamedParameterUtils.substituteNamedParameters(parsedSql, null));, +	}, +, +	@Test  // SPR-15382, +	public void parseSqlStatementWithPostgresAllArrayStringsExistsOperator() throws Exception {, +		String expectedSql = "select '[\"3\", \"11\"]'::jsonb ?& '{1,3,11,12,17}'::text[] AND ? = 'Back in Black'";, +		String sql = "select '[\"3\", \"11\"]'::jsonb ?& '{1,3,11,12,17}'::text[] AND :album = 'Back in Black'";, +, +		ParsedSql parsedSql = NamedParameterUtils.parseSqlStatement(sql);, +		assertEquals(1, parsedSql.getTotalParameterCount());, +		assertEquals(expectedSql, NamedParameterUtils.substituteNamedParameters(parsedSql, null));, +	}, +]