[+++ b/spring-context/src/test/java/org/springframework/jmx/export/annotation/AnnotationMetadataAssemblerTests.java, + * Copyright 2002-2016 the original author or authors., + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., +	@Test, +	public void testRegistrationOnInterface() throws Exception {, +		Object bean = getContext().getBean("testInterfaceBean");, +		ModelMBeanInfo inf = getAssembler().getMBeanInfo(bean, "bean:name=interfaceTestBean");, +		assertNotNull(inf);, +		assertEquals("My Managed Bean", inf.getDescription());, +, +		ModelMBeanOperationInfo op = inf.getOperation("foo");, +		assertNotNull("foo operation not exposed", op);, +		assertEquals("invoke foo", op.getDescription());, +, +		assertNull("doNotExpose operation should not be exposed", inf.getOperation("doNotExpose"));, +, +		ModelMBeanAttributeInfo attr = inf.getAttribute("Bar");, +		assertNotNull("bar attribute not exposed", attr);, +		assertEquals("Bar description", attr.getDescription());, +, +		ModelMBeanAttributeInfo attr2 = inf.getAttribute("CacheEntries");, +		assertNotNull("cacheEntries attribute not exposed", attr2);, +		assertEquals("Metric Type should be COUNTER", "COUNTER",, +				attr2.getDescriptor().getFieldValue("metricType"));, +	}, +, +, +++ b/spring-context/src/test/java/org/springframework/jmx/export/annotation/AnnotationMetadataAssemblerTests.java, + * Copyright 2002-2016 the original author or authors., + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., +	@Test, +	public void testRegistrationOnInterface() throws Exception {, +		Object bean = getContext().getBean("testInterfaceBean");, +		ModelMBeanInfo inf = getAssembler().getMBeanInfo(bean, "bean:name=interfaceTestBean");, +		assertNotNull(inf);, +		assertEquals("My Managed Bean", inf.getDescription());, +, +		ModelMBeanOperationInfo op = inf.getOperation("foo");, +		assertNotNull("foo operation not exposed", op);, +		assertEquals("invoke foo", op.getDescription());, +, +		assertNull("doNotExpose operation should not be exposed", inf.getOperation("doNotExpose"));, +, +		ModelMBeanAttributeInfo attr = inf.getAttribute("Bar");, +		assertNotNull("bar attribute not exposed", attr);, +		assertEquals("Bar description", attr.getDescription());, +, +		ModelMBeanAttributeInfo attr2 = inf.getAttribute("CacheEntries");, +		assertNotNull("cacheEntries attribute not exposed", attr2);, +		assertEquals("Metric Type should be COUNTER", "COUNTER",, +				attr2.getDescriptor().getFieldValue("metricType"));, +	}, +, +, +++ b/spring-context/src/test/java/org/springframework/jmx/export/annotation/AnotherAnnotationTestBean.java, +/*, + * Copyright 2002-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.jmx.export.annotation;, +, +import org.springframework.jmx.support.MetricType;, +, +/**, + * @author Stephane Nicoll, + */, +@ManagedResource(objectName = "bean:name=interfaceTestBean", description = "My Managed Bean"), +public interface AnotherAnnotationTestBean {, +, +	@ManagedOperation(description = "invoke foo"), +	void foo();, +, +	@ManagedAttribute(description = "Bar description"), +	String getBar();, +, +	void setBar(String bar);]