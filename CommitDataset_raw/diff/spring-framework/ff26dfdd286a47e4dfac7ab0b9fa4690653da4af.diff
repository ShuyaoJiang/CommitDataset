[+++ b/spring-core/src/main/java/org/springframework/util/AntPathMatcher.java, +	/** Default path separator: "/" */, +	public static final String DEFAULT_PATH_SEPARATOR = "/";, +, +	private final Map<String, String[]> tokenizedPatternCache = new ConcurrentHashMap<String, String[]>(256);, +, +	final Map<String, AntPathStringMatcher> stringMatcherCache = new ConcurrentHashMap<String, AntPathStringMatcher>(256);, +	private void deactivatePatternCache() {, +		this.cachePatterns = false;, +		this.tokenizedPatternCache.clear();, +		this.stringMatcherCache.clear();, +	}, +, +		String[] pattDirs = tokenizePattern(pattern);, +		String[] pathDirs = tokenizePath(path);, +	 * Tokenize the given path pattern into parts, based on this matcher's settings., +	 * <p>Performs caching based on {@link #setCachePatterns}, delegating to, +	 * {@link #tokenizePath(String)} for the actual tokenization algorithm., +	 * @param pattern the pattern to tokenize, +	 * @return the tokenized pattern parts, +	 */, +	protected String[] tokenizePattern(String pattern) {, +		String[] tokenized = null;, +		Boolean cachePatterns = this.cachePatterns;, +		if (cachePatterns == null || cachePatterns.booleanValue()) {, +			tokenized = this.tokenizedPatternCache.get(pattern);, +		}, +		if (tokenized == null) {, +			tokenized = tokenizePath(pattern);, +			if (cachePatterns == null && this.tokenizedPatternCache.size() >= CACHE_TURNOFF_THRESHOLD) {, +				// Try to adapt to the runtime situation that we're encountering:, +				// There are obviously too many different patterns coming in here..., +				// So let's turn off the cache since the patterns are unlikely to be reoccurring., +				deactivatePatternCache();, +				return tokenized;, +			}, +			if (cachePatterns == null || cachePatterns.booleanValue()) {, +				this.tokenizedPatternCache.put(pattern, tokenized);, +			}, +		}, +		return tokenized;, +	}, +, +	/**, +	 * Tokenize the given path String into parts, based on this matcher's settings., +	 * @param path the path to tokenize, +	 * @return the tokenized path parts, +	 */, +	protected String[] tokenizePath(String path) {, +		return StringUtils.tokenizeToStringArray(path, this.pathSeparator, this.trimTokens, true);, +	}, +, +	/**, +				// There are obviously too many different patterns coming in here..., +				deactivatePatternCache();]