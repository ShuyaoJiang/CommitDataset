[+++ b/spring-framework-reference/src/jdbc.xml, +          <programlisting language="java">int rowCount = this.jdbcTemplate.queryForInt("select count(0) from t_accrual");</programlisting>, +          <programlisting language="java">int countOfActorsNamedJoe = this.jdbcTemplate.queryForInt(, +          <programlisting language="java">String surname = (String) this.jdbcTemplate.queryForObject(, +          <programlisting language="java">Actor actor = (Actor) this.jdbcTemplate.queryForObject(, +          <programlisting language="java">Collection actors = this.jdbcTemplate.query(, +          <programlisting language="java">public Collection findAllActors() {, +          <programlisting language="java">this.jdbcTemplate.update(, +          <programlisting language="java">this.jdbcTemplate.update(, +          <programlisting language="java">this.jdbcTemplate.update(, +          <programlisting language="java">this.jdbcTemplate.execute("create table mytable (id integer, name varchar(100))");</programlisting>, +          <programlisting language="java">this.jdbcTemplate.update(, +        <programlisting language="java">public class JdbcCorporateEventDao implements CorporateEventDao {, +        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;, +      <programlisting language="java"><lineannotation>// some JDBC-backed DAO class...</lineannotation>, +      <programlisting language="java"><lineannotation>// some JDBC-backed DAO class...</lineannotation>, +      <programlisting language="java">public class Actor {, +      <programlisting language="java"><lineannotation>// some JDBC-backed DAO class...</lineannotation>, +      <programlisting language="java"><lineannotation>// classic <classname>JdbcTemplate</classname>-style...</lineannotation>, +      <programlisting language="java"><lineannotation>// <classname>SimpleJdbcTemplate</classname>-style...</lineannotation>, +      <programlisting language="java">DriverManagerDataSource dataSource = new DriverManagerDataSource();, +      <programlisting language="java">public class MySQLErrorCodesTranslator extends SQLErrorCodeSQLExceptionTranslator {, +      <programlisting language="java"><lineannotation>// create a <classname>JdbcTemplate</classname> and set data source</lineannotation> , +      <programlisting language="java">import javax.sql.DataSource;, +      <programlisting language="java">import javax.sql.DataSource;, +      <programlisting language="java">, +      <programlisting language="java">import javax.sql.DataSource;, +      <programlisting language="java">final String INSERT_SQL = "insert into my_test (name) values(?)";, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">   new SqlParameter("in_id", Types.NUMERIC),, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <programlisting language="java">private class CustomerMappingQuery extends MappingSqlQuery {, +      <programlisting language="java">public Customer getCustomer(Integer id) {, +      <programlisting language="java">import java.sql.Types;, +      <para><programlisting language="java">   new SqlParameter("in_id", Types.NUMERIC),, +      <programlisting language="java">import java.sql.Types;, +      <programlisting language="java">import oracle.jdbc.driver.OracleTypes;, +      <programlisting language="java">import com.foo.sprocs.domain.Title;, +      <programlisting language="java">import org.springframework.jdbc.core.RowMapper;, +      <programlisting language="java">import oracle.jdbc.driver.OracleTypes;, +      <programlisting language="java">public int countRows() {, +        <programlisting language="java">final File blobIn = new File("spring2004.jpg");, +          <programlisting language="java">List l = jdbcTemplate.query("select id, a_clob, a_blob from lob_table",, +      <para><programlisting language="java">declareParameter(new SqlOutParameter("item", OracleTypes.STRUCT, "ITEM_TYPE",, +      <para><programlisting language="java">SqlTypeValue value = new AbstractSqlTypeValue() {, +++ b/spring-framework-reference/src/jdbc.xml, +          <programlisting language="java">int rowCount = this.jdbcTemplate.queryForInt("select count(0) from t_accrual");</programlisting>, +          <programlisting language="java">int countOfActorsNamedJoe = this.jdbcTemplate.queryForInt(, +          <programlisting language="java">String surname = (String) this.jdbcTemplate.queryForObject(, +          <programlisting language="java">Actor actor = (Actor) this.jdbcTemplate.queryForObject(, +          <programlisting language="java">Collection actors = this.jdbcTemplate.query(, +          <programlisting language="java">public Collection findAllActors() {, +          <programlisting language="java">this.jdbcTemplate.update(, +          <programlisting language="java">this.jdbcTemplate.update(, +          <programlisting language="java">this.jdbcTemplate.update(, +          <programlisting language="java">this.jdbcTemplate.execute("create table mytable (id integer, name varchar(100))");</programlisting>, +          <programlisting language="java">this.jdbcTemplate.update(, +        <programlisting language="java">public class JdbcCorporateEventDao implements CorporateEventDao {, +        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;, +      <programlisting language="java"><lineannotation>// some JDBC-backed DAO class...</lineannotation>, +      <programlisting language="java"><lineannotation>// some JDBC-backed DAO class...</lineannotation>, +      <programlisting language="java">public class Actor {, +      <programlisting language="java"><lineannotation>// some JDBC-backed DAO class...</lineannotation>, +      <programlisting language="java"><lineannotation>// classic <classname>JdbcTemplate</classname>-style...</lineannotation>, +      <programlisting language="java"><lineannotation>// <classname>SimpleJdbcTemplate</classname>-style...</lineannotation>, +      <programlisting language="java">DriverManagerDataSource dataSource = new DriverManagerDataSource();, +      <programlisting language="java">public class MySQLErrorCodesTranslator extends SQLErrorCodeSQLExceptionTranslator {, +      <programlisting language="java"><lineannotation>// create a <classname>JdbcTemplate</classname> and set data source</lineannotation> , +      <programlisting language="java">import javax.sql.DataSource;, +      <programlisting language="java">import javax.sql.DataSource;, +      <programlisting language="java">, +      <programlisting language="java">import javax.sql.DataSource;, +      <programlisting language="java">final String INSERT_SQL = "insert into my_test (name) values(?)";, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">   new SqlParameter("in_id", Types.NUMERIC),, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <para><programlisting language="java">public class JdbcActorDao implements ActorDao {, +      <programlisting language="java">private class CustomerMappingQuery extends MappingSqlQuery {, +      <programlisting language="java">public Customer getCustomer(Integer id) {]