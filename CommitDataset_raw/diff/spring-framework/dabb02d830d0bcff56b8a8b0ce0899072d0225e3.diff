[+++ b/src/docs/asciidoc/web/web-mvc.adoc, +The `DispatcherServlet` delegates to special beans to process requests and render the, +appropriate responses. By "special beans" we mean Spring-managed Object instances that, +implement specific framework contracts listed in the table further below in this section., +Spring MVC provides built-in implementations of these contracts so all you, +need to do is configure them in your Spring configuration. It is however possible to, +customize, extend, or completely replace those built-in implementations., +, +The table below lists special bean types the `DispatcherServlet` depends on, +and delegates to., +| Map a request to a handler along with a list of `HandlerInterceptor`s for, +  pre- and post-processing. The mapping is based on some criteria the details of, +  which vary by `HandlerMapping` implementation. The most popular implementation, +  supports annotated controllers but other implementations exists as well., +  how the handler is actually invoked. For example, invoking an annotated controller, +  requires resolving various annotations. The main purpose of a `HandlerAdapter` is, +| Strategy to resolve exceptions possibly mapping them to handlers, or to HTML error, +  views, or other., +| Resolves logical String-based view names returned from a handler to an actual `View`, +  to render to the response with., +| Resolves the `Locale` a client is using and possibly their time zone, in order to be able, +| Abstraction for parsing a multi-part request (e.g. browser form file upload) with, +  the help of some multipart parsing library., +=== `DispatcherServlet` Configuration, +There are more than one ways to actually configure the `DispatcherServlet` with the special, +bean types listed in the previous section., +If there are no beans of a given type in the `WebApplicationContext` by default the, +`DispatcherServlet` will refer to a list of default implementations to use in the file, +https://github.com/spring-projects/spring-framework/blob/master/spring-webmvc/src/main/resources/org/springframework/web/servlet/DispatcherServlet.properties[DispatcherServlet.properties]., +Applications can explicitly declare the special beans to use to take over the defaults., +However for most applications the MVC Java config or the MVC XML namespace are the, +best starting point. Each creates the necessary Spring configuration for the, +`DispatcherServlet` and also provide a higher-level API to configure Spring MVC without, +having to understand all the details. See <<mvc-config>> for more details., +[NOTE], +====, +Spring Boot uses the MVC Java config to configure Spring MVC and provides many, +extra options and conveniences on top., +====, +The `DispatcherServlet` processes requests as follows:, +  executed in order to prepare a model or rendering. Or alternatively for annotated, +  controllers, the response may be rendered (within the `HandlerAdapter`) instead of, +  returning a view., +The `HandlerExceptionResolver` beans declared in the `WebApplicationContext` are used to, +resolve exceptions thrown during request processing. Those exception resolvers allow, +customizing the logic to address exceptions. See <<mvc-exceptionhandlers>> for more details.]