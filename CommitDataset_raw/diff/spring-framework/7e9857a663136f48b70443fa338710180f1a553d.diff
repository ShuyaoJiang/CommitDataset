[+++ b/spring-web/src/main/java/org/springframework/web/server/adapter/ForwardedHeaderTransformer.java, +import org.springframework.context.ApplicationContext;, + * <p>An instance of this class is typically declared as a bean with the name, + * "forwardedHeaderTransformer" and detected by, + * {@link WebHttpHandlerBuilder#applicationContext(ApplicationContext)}, or it, + * can also be registered directly via, + * {@link WebHttpHandlerBuilder#forwardedHeaderTransformer(ForwardedHeaderTransformer)}., + *, +				URI uri = UriComponentsBuilder.fromHttpRequest(request).build(true).toUri();, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/ForwardedHeaderTransformer.java, +import org.springframework.context.ApplicationContext;, + * <p>An instance of this class is typically declared as a bean with the name, + * "forwardedHeaderTransformer" and detected by, + * {@link WebHttpHandlerBuilder#applicationContext(ApplicationContext)}, or it, + * can also be registered directly via, + * {@link WebHttpHandlerBuilder#forwardedHeaderTransformer(ForwardedHeaderTransformer)}., + *, +				URI uri = UriComponentsBuilder.fromHttpRequest(request).build(true).toUri();, +++ b/spring-web/src/test/java/org/springframework/web/server/adapter/ForwardedHeaderTransformerTests.java, +import org.springframework.http.HttpMethod;, +	@Test // SPR-17525, +	public void shouldNotDoubleEncode() throws Exception {, +		HttpHeaders headers = new HttpHeaders();, +		headers.add("Forwarded", "host=84.198.58.199;proto=https");, +, +		ServerHttpRequest request = MockServerHttpRequest, +				.method(HttpMethod.GET, new URI("http://example.com/a%20b?q=a%2Bb")), +				.headers(headers), +				.build();, +, +		request = this.requestMutator.apply(request);, +, +		assertEquals(new URI("https://84.198.58.199/a%20b?q=a%2Bb"), request.getURI());, +		assertForwardedHeadersRemoved(request);, +	}, +, +]