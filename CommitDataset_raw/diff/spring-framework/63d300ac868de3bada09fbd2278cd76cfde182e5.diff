[+++ b/spring-core/src/test/java/org/springframework/core/ResolvableTypeTests.java, +, +	private void assertTypedFieldToStringValue(String field, String expected) throws Exception {, +		ResolvableType type = ResolvableType.forField(field, TypedEnclosedInParameterizedType.TypedInnerTyped.class);, +	private static AssertAssignbleMatcher assertAssignable(final ResolvableType type, final ResolvableType... fromTypes) {, +++ b/spring-core/src/test/java/org/springframework/core/ResolvableTypeTests.java, +, +	private void assertTypedFieldToStringValue(String field, String expected) throws Exception {, +		ResolvableType type = ResolvableType.forField(field, TypedEnclosedInParameterizedType.TypedInnerTyped.class);, +	private static AssertAssignbleMatcher assertAssignable(final ResolvableType type, final ResolvableType... fromTypes) {, +++ b/spring-core/src/test/java/org/springframework/core/convert/support/CollectionToCollectionConverterTests.java, + * Copyright 2002-2013 the original author or authors., + * @author Juergen Hoeller, +		}, +		catch (ConversionFailedException ex) {, +			assertTrue(ex.getCause() instanceof ConverterNotFoundException);]