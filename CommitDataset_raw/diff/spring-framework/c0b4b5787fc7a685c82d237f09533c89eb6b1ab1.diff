[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.java, +			try (InputStream is = encodedResource.getResource().getInputStream()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.java, +			try (InputStream is = encodedResource.getResource().getInputStream()) {, +++ b/spring-context/src/main/java/org/springframework/context/support/ReloadableResourceBundleMessageSource.java, +		try (InputStream is = resource.getInputStream()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.java, +			try (InputStream is = encodedResource.getResource().getInputStream()) {, +++ b/spring-context/src/main/java/org/springframework/context/support/ReloadableResourceBundleMessageSource.java, +		try (InputStream is = resource.getInputStream()) {, +++ b/spring-context/src/main/java/org/springframework/context/support/ResourceBundleMessageSource.java, +					try (InputStreamReader bundleReader = new InputStreamReader(stream, encoding)) {, +						return loadBundle(bundleReader);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.java, +			try (InputStream is = encodedResource.getResource().getInputStream()) {, +++ b/spring-context/src/main/java/org/springframework/context/support/ReloadableResourceBundleMessageSource.java, +		try (InputStream is = resource.getInputStream()) {, +++ b/spring-context/src/main/java/org/springframework/context/support/ResourceBundleMessageSource.java, +					try (InputStreamReader bundleReader = new InputStreamReader(stream, encoding)) {, +						return loadBundle(bundleReader);, +++ b/spring-web/src/main/java/org/springframework/http/MediaTypeFactory.java, +		try (InputStream is = MediaTypeFactory.class.getResourceAsStream(MIME_TYPES_FILE_NAME)) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.java, +			try (InputStream is = encodedResource.getResource().getInputStream()) {, +++ b/spring-context/src/main/java/org/springframework/context/support/ReloadableResourceBundleMessageSource.java, +		try (InputStream is = resource.getInputStream()) {, +++ b/spring-context/src/main/java/org/springframework/context/support/ResourceBundleMessageSource.java, +					try (InputStreamReader bundleReader = new InputStreamReader(stream, encoding)) {, +						return loadBundle(bundleReader);, +++ b/spring-web/src/main/java/org/springframework/http/MediaTypeFactory.java, +		try (InputStream is = MediaTypeFactory.class.getResourceAsStream(MIME_TYPES_FILE_NAME)) {, +++ b/spring-web/src/main/java/org/springframework/remoting/caucho/HessianExporter.java, +				try (PrintWriter debugWriter = new PrintWriter(new CommonsLogWriter(this.debugLogger))){, +			}]