[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java, +	/** Do not log potentially sensitive information (params at DEBUG and headers at TRACE). */, +	private boolean disableLoggingRequestDetails = false;, +, +	/**, +	 * Set whether the {@code DispatcherServlet} should not log request, +	 * parameters and headers. By default request parameters are logged at DEBUG, +	 * while headers are logged at TRACE under the log category, +	 * {@code "org.springframework.web.servlet.DispatcherServlet"}. Those may, +	 * contain sensitive information, however this is typically not a problem, +	 * since DEBUG and TRACE are only expected to be enabled in development., +	 * This property may be used to explicitly disable logging of such, +	 * information regardless of the log level., +	 * <p>By default this is set to {@code false} in which case request details, +	 * are logged. If set to {@code true} request details will not be logged at, +	 * any log level., +	 * @param disableLoggingRequestDetails whether to disable or not, +	 * @since 5.1, +	 */, +	public void setDisableLoggingRequestDetails(boolean disableLoggingRequestDetails) {, +		this.disableLoggingRequestDetails = disableLoggingRequestDetails;, +	}, +, +, +		if (logger.isDebugEnabled() || logger.isTraceEnabled()) {, +			if (this.disableLoggingRequestDetails) {, +				logger.debug("Logging request parameters and headers is OFF.");, +			}, +			else {, +				logger.warn("\n\n" +, +						"!!!!!!!!!!!!!!!!!!!\n" +, +						"Logging of request parameters (DEBUG level) and headers (TRACE level) may log sensitive data.\n" +, +						"If not in development, lower the log level for \"org.springframework.web.servlet.DispatcherServlet\", or\n" +, +						"set the DispatcherServlet property \"disableLoggingRequestDetails\" to 'true'.\n" +, +						"!!!!!!!!!!!!!!!!!!!\n");, +			}, +		}, +			String params = "";, +			if (!this.disableLoggingRequestDetails) {, +				params = request.getParameterMap().entrySet().stream(), +			}, +				String headers = "";, +				if (!this.disableLoggingRequestDetails) {, +					headers = Collections.list(request.getHeaderNames()).stream(), +				}]