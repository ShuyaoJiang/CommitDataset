[+++ b/spring-context/src/main/java/org/springframework/context/support/ContextTypeMatchClassLoader.java, + * Copyright 2002-2014 the original author or authors., +import java.util.concurrent.ConcurrentHashMap;, +import org.springframework.lang.UsesJava7;, +@UsesJava7, +	static {, +		if (parallelCapableClassLoaderAvailable) {, +			ClassLoader.registerAsParallelCapable();, +		}, +	}, +, +, +			findLoadedClassMethod = ClassLoader.class.getDeclaredMethod("findLoadedClass", String.class);, +	private final Map<String, byte[]> bytesCache = new ConcurrentHashMap<String, byte[]>(256);, +++ b/spring-context/src/main/java/org/springframework/context/support/ContextTypeMatchClassLoader.java, + * Copyright 2002-2014 the original author or authors., +import java.util.concurrent.ConcurrentHashMap;, +import org.springframework.lang.UsesJava7;, +@UsesJava7, +	static {, +		if (parallelCapableClassLoaderAvailable) {, +			ClassLoader.registerAsParallelCapable();, +		}, +	}, +, +, +			findLoadedClassMethod = ClassLoader.class.getDeclaredMethod("findLoadedClass", String.class);, +	private final Map<String, byte[]> bytesCache = new ConcurrentHashMap<String, byte[]>(256);, +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/SimpleInstrumentableClassLoader.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.lang.UsesJava7;, +@UsesJava7, +	static {, +		if (parallelCapableClassLoaderAvailable) {, +			ClassLoader.registerAsParallelCapable();, +		}, +	}, +, +, +	 * Create a new SimpleInstrumentableClassLoader for the given ClassLoader., +	 * @param parent the ClassLoader to build an instrumentable ClassLoader for, +	 * Add a {@link ClassFileTransformer} to be applied by this ClassLoader., +	 * @param transformer the {@link ClassFileTransformer} to register, +++ b/spring-context/src/main/java/org/springframework/context/support/ContextTypeMatchClassLoader.java, + * Copyright 2002-2014 the original author or authors., +import java.util.concurrent.ConcurrentHashMap;, +import org.springframework.lang.UsesJava7;, +@UsesJava7, +	static {, +		if (parallelCapableClassLoaderAvailable) {, +			ClassLoader.registerAsParallelCapable();, +		}, +	}, +, +, +			findLoadedClassMethod = ClassLoader.class.getDeclaredMethod("findLoadedClass", String.class);, +	private final Map<String, byte[]> bytesCache = new ConcurrentHashMap<String, byte[]>(256);, +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/SimpleInstrumentableClassLoader.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.lang.UsesJava7;, +@UsesJava7, +	static {, +		if (parallelCapableClassLoaderAvailable) {, +			ClassLoader.registerAsParallelCapable();, +		}, +	}, +, +, +	 * Create a new SimpleInstrumentableClassLoader for the given ClassLoader., +	 * @param parent the ClassLoader to build an instrumentable ClassLoader for, +	 * Add a {@link ClassFileTransformer} to be applied by this ClassLoader., +	 * @param transformer the {@link ClassFileTransformer} to register, +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/SimpleThrowawayClassLoader.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.lang.UsesJava7;, +@UsesJava7, +	static {, +		if (parallelCapableClassLoaderAvailable) {, +			ClassLoader.registerAsParallelCapable();, +		}, +	}, +, +, +	 * Create a new SimpleThrowawayClassLoader for the given ClassLoader., +++ b/spring-context/src/main/java/org/springframework/context/support/ContextTypeMatchClassLoader.java, + * Copyright 2002-2014 the original author or authors., +import java.util.concurrent.ConcurrentHashMap;, +import org.springframework.lang.UsesJava7;, +@UsesJava7, +	static {, +		if (parallelCapableClassLoaderAvailable) {, +			ClassLoader.registerAsParallelCapable();, +		}, +	}, +, +, +			findLoadedClassMethod = ClassLoader.class.getDeclaredMethod("findLoadedClass", String.class);, +	private final Map<String, byte[]> bytesCache = new ConcurrentHashMap<String, byte[]>(256);, +++ b/spring-context/src/main/java/org/springframework/instrument/classloading/SimpleInstrumentableClassLoader.java, + * Copyright 2002-2014 the original author or authors.]