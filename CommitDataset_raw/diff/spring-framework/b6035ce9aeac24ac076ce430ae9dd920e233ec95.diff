[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInsertor.java, + * A component that can insert data into a {@link Response} body., + * @param <T> the type of data to insert, +	 * Insert into the given response., +	 * @param response the response to insert into, +	 * @param configuration the configuration to use, +	 * @return a {@code Mono} that indicates completion or error, +	Mono<Void> insert(ServerHttpResponse response, Configuration configuration);, +	 * Return the type contained in the body., +	 * @return the type contained in the body, +	T t();, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInsertor.java, + * A component that can insert data into a {@link Response} body., + * @param <T> the type of data to insert, +	 * Insert into the given response., +	 * @param response the response to insert into, +	 * @param configuration the configuration to use, +	 * @return a {@code Mono} that indicates completion or error, +	Mono<Void> insert(ServerHttpResponse response, Configuration configuration);, +	 * Return the type contained in the body., +	 * @return the type contained in the body, +	T t();, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInsertors.java, +		public Mono<Void> insert(ServerHttpResponse response, Configuration configuration) {, +			return this.writer.apply(response, configuration);, +		public T t() {, +			return this.supplier.get();, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInsertor.java, + * A component that can insert data into a {@link Response} body., + * @param <T> the type of data to insert, +	 * Insert into the given response., +	 * @param response the response to insert into, +	 * @param configuration the configuration to use, +	 * @return a {@code Mono} that indicates completion or error, +	Mono<Void> insert(ServerHttpResponse response, Configuration configuration);, +	 * Return the type contained in the body., +	 * @return the type contained in the body, +	T t();, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInsertors.java, +		public Mono<Void> insert(ServerHttpResponse response, Configuration configuration) {, +			return this.writer.apply(response, configuration);, +		public T t() {, +			return this.supplier.get();, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultResponseBuilder.java, +			return this.insertor.t();, +			return this.insertor.insert(response, configuration);, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInsertor.java, + * A component that can insert data into a {@link Response} body., + * @param <T> the type of data to insert, +	 * Insert into the given response., +	 * @param response the response to insert into, +	 * @param configuration the configuration to use, +	 * @return a {@code Mono} that indicates completion or error, +	Mono<Void> insert(ServerHttpResponse response, Configuration configuration);, +	 * Return the type contained in the body., +	 * @return the type contained in the body, +	T t();, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/BodyInsertors.java, +		public Mono<Void> insert(ServerHttpResponse response, Configuration configuration) {, +			return this.writer.apply(response, configuration);, +		public T t() {, +			return this.supplier.get();, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/function/DefaultResponseBuilder.java, +			return this.insertor.t();, +			return this.insertor.insert(response, configuration);, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/function/BodyInsertorsTests.java, +		assertEquals(body, insertor.t());, +		Mono<Void> result = insertor.insert(response, Configuration.builder().build());, +		assertEquals(body, insertor.t());, +		Mono<Void> result = insertor.insert(response, Configuration.builder().build());, +		assertEquals(body, insertor.t());, +		Mono<Void> result = insertor.insert(response, Configuration.builder().build());, +		assertEquals(body, insertor.t());, +		Mono<Void> result = insertor.insert(response, Configuration.builder().build());, +		assertEquals(body, insertor.t());, +		Mono<Void> result = insertor.insert(response, Configuration.builder().build());]