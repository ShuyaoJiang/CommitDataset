[+++ b/spring-framework-reference/src/aop.xml, +      beans by using <interfacename>@Autowired</interfacename> or, +      <interfacename>@Inject</interfacename> at the field or method level (see , +++ b/spring-framework-reference/src/aop.xml, +      beans by using <interfacename>@Autowired</interfacename> or, +      <interfacename>@Inject</interfacename> at the field or method level (see , +++ b/spring-framework-reference/src/dao.xml, +    the <interfacename>@Autowired,</interfacename>, <interfacename>@Inject</interfacename>,, +++ b/spring-framework-reference/src/aop.xml, +      beans by using <interfacename>@Autowired</interfacename> or, +      <interfacename>@Inject</interfacename> at the field or method level (see , +++ b/spring-framework-reference/src/dao.xml, +    the <interfacename>@Autowired,</interfacename>, <interfacename>@Inject</interfacename>,, +++ b/spring-framework-reference/src/testing.xml, +        consistency with the annotation support introduced in Spring 3.0, you, +        or the <interfacename>@Inject</interfacename> annotation from JSR, +        300. </para>, +        <para>Because <interfacename>@Autowired</interfacename> used solely performs <link, +        beans. In that case, you can use <interfacename>@Autowired</interfacename> in, +        <interfacename>@Named</interfacename>., +        Alternatively, if your test class has access to its, +        <classname>ApplicationContext</classname>, you can perform an explicit, +        lookup by using (for example) a call to, +        <methodname>applicationContext.getBean("titleRepository")</methodname>. </para>, +        <interfacename>@Autowired</interfacename> or, +        <interfacename>@Inject</interfacename>. Alternatively, you can, +        linkend="integration-testing-goals">Goals</link> section. The next two, +        code listings demonstrate the use of <interfacename>@Autowired</interfacename> on fields , +        and setter methods. The application context configuration is presented]