[+++ b/spring-test/src/main/java/org/springframework/test/context/junit4/AbstractJUnit4SpringContextTests.java, + * <strong>JUnit 4.9+</strong> environment., +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/AbstractJUnit4SpringContextTests.java, + * <strong>JUnit 4.9+</strong> environment., +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.java, + * {@code SpringJUnit4ClassRunner} is a custom extension of JUnit's, + * <em>Spring TestContext Framework</em> to standard JUnit tests by means of the, + * {@link TestContextManager} and associated support classes and annotations., + * or indirectly by {@code SpringJUnit4ClassRunner}. <em>(Note that additional, + * annotations may be supported by various, + * {@link org.springframework.test.context.TestExecutionListener TestExecutionListener}, + * or {@link org.springframework.test.context.TestContextBootstrapper TestContextBootstrapper}, + * implementations.)</em>, + * <p><strong>NOTE:</strong> As of Spring 4.1, {@code SpringJUnit4ClassRunner}, + * requires JUnit 4.9 or higher., +	private static final Method withRulesMethod;, +, +	static {, +		withRulesMethod = ReflectionUtils.findMethod(SpringJUnit4ClassRunner.class, "withRules", FrameworkMethod.class,, +			Object.class, Statement.class);, +		if (withRulesMethod == null) {, +			throw new IllegalStateException(, +				"Failed to find withRules() method: SpringJUnit4ClassRunner requires JUnit 4.9 or higher.");, +		}, +		ReflectionUtils.makeAccessible(withRulesMethod);, +	}, +, +		Description description = describeChild(frameworkMethod);, +			notifier.fireTestIgnored(description);, +		else {, +			runLeaf(methodBlock(frameworkMethod), description, notifier);, +	 * @see #withPotentialTimeout(FrameworkMethod, Object, Statement), +	 * Invoke JUnit's private {@code withRules()} method using reflection., +		return (Statement) ReflectionUtils.invokeMethod(withRulesMethod, this, frameworkMethod, testInstance, statement);, +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/AbstractJUnit4SpringContextTests.java, + * <strong>JUnit 4.9+</strong> environment., +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.java, + * {@code SpringJUnit4ClassRunner} is a custom extension of JUnit's, + * <em>Spring TestContext Framework</em> to standard JUnit tests by means of the, + * {@link TestContextManager} and associated support classes and annotations., + * or indirectly by {@code SpringJUnit4ClassRunner}. <em>(Note that additional, + * annotations may be supported by various, + * {@link org.springframework.test.context.TestExecutionListener TestExecutionListener}, + * or {@link org.springframework.test.context.TestContextBootstrapper TestContextBootstrapper}, + * implementations.)</em>, + * <p><strong>NOTE:</strong> As of Spring 4.1, {@code SpringJUnit4ClassRunner}, + * requires JUnit 4.9 or higher., +	private static final Method withRulesMethod;, +, +	static {, +		withRulesMethod = ReflectionUtils.findMethod(SpringJUnit4ClassRunner.class, "withRules", FrameworkMethod.class,, +			Object.class, Statement.class);, +		if (withRulesMethod == null) {, +			throw new IllegalStateException(, +				"Failed to find withRules() method: SpringJUnit4ClassRunner requires JUnit 4.9 or higher.");, +		}, +		ReflectionUtils.makeAccessible(withRulesMethod);, +	}, +, +		Description description = describeChild(frameworkMethod);, +			notifier.fireTestIgnored(description);, +		else {, +			runLeaf(methodBlock(frameworkMethod), description, notifier);, +	 * @see #withPotentialTimeout(FrameworkMethod, Object, Statement), +	 * Invoke JUnit's private {@code withRules()} method using reflection., +		return (Statement) ReflectionUtils.invokeMethod(withRulesMethod, this, frameworkMethod, testInstance, statement);, +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/package-info.java, + * <p>Support classes for integrating the <em>Spring TestContext Framework</em>, + * with JUnit.</p>, +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/AbstractJUnit4SpringContextTests.java, + * <strong>JUnit 4.9+</strong> environment., +++ b/spring-test/src/main/java/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.java, + * {@code SpringJUnit4ClassRunner} is a custom extension of JUnit's, + * <em>Spring TestContext Framework</em> to standard JUnit tests by means of the, + * {@link TestContextManager} and associated support classes and annotations., + * or indirectly by {@code SpringJUnit4ClassRunner}. <em>(Note that additional, + * annotations may be supported by various, + * {@link org.springframework.test.context.TestExecutionListener TestExecutionListener}, + * or {@link org.springframework.test.context.TestContextBootstrapper TestContextBootstrapper}, + * implementations.)</em>, + * <p><strong>NOTE:</strong> As of Spring 4.1, {@code SpringJUnit4ClassRunner}, + * requires JUnit 4.9 or higher., +	private static final Method withRulesMethod;, +, +	static {, +		withRulesMethod = ReflectionUtils.findMethod(SpringJUnit4ClassRunner.class, "withRules", FrameworkMethod.class,, +			Object.class, Statement.class);, +		if (withRulesMethod == null) {, +			throw new IllegalStateException(, +				"Failed to find withRules() method: SpringJUnit4ClassRunner requires JUnit 4.9 or higher.");, +		}, +		ReflectionUtils.makeAccessible(withRulesMethod);, +	}, +, +		Description description = describeChild(frameworkMethod);, +			notifier.fireTestIgnored(description);, +		else {, +			runLeaf(methodBlock(frameworkMethod), description, notifier);, +	 * @see #withPotentialTimeout(FrameworkMethod, Object, Statement), +	 * Invoke JUnit's private {@code withRules()} method using reflection.]