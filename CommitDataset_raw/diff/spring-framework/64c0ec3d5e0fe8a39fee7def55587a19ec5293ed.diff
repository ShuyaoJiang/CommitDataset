[+++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/server/DispatcherHandlerIntegrationTests.java, +import org.springframework.stereotype.Controller;, +import org.springframework.web.bind.annotation.RequestMapping;, +import org.springframework.web.bind.annotation.ResponseBody;, +import org.springframework.web.reactive.config.EnableWebFlux;, + * {@link DispatcherHandler}, combined with {@link Controller}s., +	@Test, +	public void controller() throws Exception {, +		ResponseEntity<Person> result =, +				this.restTemplate.getForEntity("http://localhost:" + this.port + "/controller", Person.class);, +, +		assertEquals(HttpStatus.OK, result.getStatusCode());, +		assertEquals("John", result.getBody().getName());, +	}, +, +		public PersonController personController() {, +			return new PersonController();, +		}, +, +		@Bean, +		public HandlerMapping handlerMapping() {, +			return RouterFunctions.toHandlerMapping(, +					route(RequestPredicates.GET("/mono"), personHandler::mono), +							.and(route(RequestPredicates.GET("/flux"), personHandler::flux)));, +	@Controller, +	private static class PersonController {, +, +		@RequestMapping("/controller"), +		@ResponseBody, +		public Mono<Person> controller() {, +			return Mono.just(new Person("John"));, +		}, +	}, +]