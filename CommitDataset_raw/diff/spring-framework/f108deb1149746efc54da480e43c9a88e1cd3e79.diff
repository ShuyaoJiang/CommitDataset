[+++ b/spring-context/src/main/java/org/springframework/context/support/AbstractResourceBasedMessageSource.java, +/*, + * Copyright 2002-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.context.support;, +, +import java.util.LinkedHashSet;, +import java.util.Set;, +, +import org.springframework.util.Assert;, +import org.springframework.util.ObjectUtils;, +, +/**, + * Abstract base class for {@code MessageSource} implementations based on, + * resource bundle conventions, such as {@link ResourceBundleMessageSource}, + * and {@link ReloadableResourceBundleMessageSource}. Provides common, + * configuration methods and corresponding semantic definitions., + *, + * @author Juergen Hoeller, + * @since 4.3, + * @see ResourceBundleMessageSource, + * @see ReloadableResourceBundleMessageSource, + */, +public abstract class AbstractResourceBasedMessageSource extends AbstractMessageSource {, +, +	private final Set<String> basenameSet = new LinkedHashSet<String>(4);, +, +	private String defaultEncoding;, +, +	private boolean fallbackToSystemLocale = true;, +, +	private long cacheMillis = -1;, +, +, +	/**, +	 * Set a single basename, following the basic ResourceBundle convention, +	 * of not specifying file extension or language codes. The resource location, +	 * format is up to the specific {@code MessageSource} implementation., +	 * <p>Regular and XMl properties files are supported: .g. "messages" will find, +	 * a "messages.properties", "messages_en.properties" etc arrangement as well, +	 * as "messages.xml", "messages_en.xml" etc., +	 * @param basename the single basename, +	 * @see #setBasenames, +	 * @see org.springframework.core.io.ResourceEditor, +	 * @see java.util.ResourceBundle, +	 */, +	public void setBasename(String basename) {, +		setBasenames(basename);, +	}, +, +	/**, +	 * Set an array of basenames, each following the basic ResourceBundle convention, +	 * of not specifying file extension or language codes. The resource location, +	 * format is up to the specific {@code MessageSource} implementation., +	 * <p>Regular and XMl properties files are supported: .g. "messages" will find, +	 * a "messages.properties", "messages_en.properties" etc arrangement as well, +	 * as "messages.xml", "messages_en.xml" etc., +	 * <p>The associated resource bundles will be checked sequentially when resolving, +	 * a message code. Note that message definitions in a <i>previous</i> resource, +	 * bundle will override ones in a later bundle, due to the sequential lookup., +	 * <p>Note: In contrast to {@link #addBasenames}, this replaces existing entries, +	 * with the given names and can therefore also be used to reset the configuration., +	 * @param basenames an array of basenames, +	 * @see #setBasename, +	 * @see java.util.ResourceBundle, +	 */, +	public void setBasenames(String... basenames) {, +		this.basenameSet.clear();, +		addBasenames(basenames);, +	}, +, +	/**, +	 * Add the specified basenames to the existing basename configuration., +	 * <p>Note: If a given basename already exists, the position of its entry, +	 * will remain as in the original set. New entries will be added at the, +	 * end of the list, to be searched after existing basenames., +	 * @since 4.3, +	 * @see #setBasenames, +	 * @see java.util.ResourceBundle, +	 */, +	public void addBasenames(String... basenames) {, +		if (!ObjectUtils.isEmpty(basenames)) {, +			for (String basename : basenames) {, +				Assert.hasText(basename, "Basename must not be empty");, +				this.basenameSet.add(basename.trim());, +			}, +		}]