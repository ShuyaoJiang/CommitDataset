[+++ b/spring-test/src/main/java/org/springframework/test/web/client/match/MockRestRequestMatchers.java, +	 * Assert the request URI string., +	 * @param expectedUri the expected URI, +	 * @param uriVars zero or more URI variables to populate the expected URI, +	 * @return the request matcher, +	 */, +	public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars) {, +		Assert.notNull(expectedUri, "'uri' must not be null");, +		String uri = UriComponentsBuilder.fromUriString(expectedUri).buildAndExpand(uriVars).encode().toString();, +		return request -> assertEquals("Request URI", uri, request.getURI().toString());, +	}, +, +	/**, +++ b/spring-test/src/main/java/org/springframework/test/web/client/match/MockRestRequestMatchers.java, +	 * Assert the request URI string., +	 * @param expectedUri the expected URI, +	 * @param uriVars zero or more URI variables to populate the expected URI, +	 * @return the request matcher, +	 */, +	public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars) {, +		Assert.notNull(expectedUri, "'uri' must not be null");, +		String uri = UriComponentsBuilder.fromUriString(expectedUri).buildAndExpand(uriVars).encode().toString();, +		return request -> assertEquals("Request URI", uri, request.getURI().toString());, +	}, +, +	/**, +++ b/spring-test/src/test/java/org/springframework/test/web/client/match/MockRestRequestMatchersTests.java, +	@Test // SPR-15819, +	public void requestToUriTemplate() throws Exception {, +		this.request.setURI(new URI("http://foo.com/bar"));, +, +		MockRestRequestMatchers.requestToUriTemplate("http://foo.com/{bar}", "bar").match(this.request);, +	}, +]