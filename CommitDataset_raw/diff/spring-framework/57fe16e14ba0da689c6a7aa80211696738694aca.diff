[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/form/ButtonTag.java, +/*, + * Copyright 2002-2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.servlet.tags.form;, +, +import javax.servlet.jsp.JspException;, +, +import org.springframework.web.servlet.support.RequestDataValueProcessor;, +, +/**, + * An HTML button tag. This tag is provided for completeness if the application , + * relies on a {@link RequestDataValueProcessor}., + *, + * @author Rossen Stoyanchev, + * @since 3.1, + */, +@SuppressWarnings("serial"), +public class ButtonTag extends AbstractHtmlElementTag {, +, +	/**, +	 * The name of the '<code>disabled</code>' attribute., +	 */, +	public static final String DISABLED_ATTRIBUTE = "disabled";, +, +	private TagWriter tagWriter;, +, +	private String name;, +	, +	private String value;, +, +	private String disabled;, +, +	/**, +	 * Set the value of the '<code>name</code>' attribute., +	 */, +	public String getName() {, +		return name;, +	}, +, +	/**, +	 * Get the value of the '<code>name</code>' attribute., +	 */, +	public void setName(String name) {, +		this.name = name;, +	}, +, +	/**, +	 * Get the value of the '<code>value</code>' attribute., +	 */, +	public String getValue() {, +		return this.value;, +	}, +	, +	/**, +	 * Set the value of the '<code>value</code>' attribute., +	 */, +	public void setValue(String value) {, +		this.value = value;, +	}, +	, +	/**, +	 * Get the value of the '<code>disabled</code>' attribute., +	 */, +	public String getDisabled() {, +		return this.disabled;, +	}, +	, +	/**, +	 * Set the value of the '<code>disabled</code>' attribute., +	 * May be a runtime expression., +	 */, +	public void setDisabled(String disabled) {, +		this.disabled = disabled;, +	}, +, +	@Override, +	protected int writeTagContent(TagWriter tagWriter) throws JspException {, +		tagWriter.startTag("button");, +		writeDefaultAttributes(tagWriter);, +		tagWriter.writeAttribute("type", getType());, +		writeValue(tagWriter);, +		if (isDisabled()) {, +			tagWriter.writeAttribute(DISABLED_ATTRIBUTE, "disabled");, +		}, +		tagWriter.forceBlock();, +		this.tagWriter = tagWriter;]