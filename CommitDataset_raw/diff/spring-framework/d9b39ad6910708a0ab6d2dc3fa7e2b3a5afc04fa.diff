[+++ b/spring-test/src/main/java/org/springframework/mock/http/MockHttpOutputMessage.java, +			throw new IllegalStateException(ex);, +++ b/spring-test/src/main/java/org/springframework/mock/http/MockHttpOutputMessage.java, +			throw new IllegalStateException(ex);, +++ b/spring-web/src/main/java/org/springframework/web/client/HttpStatusCodeException.java, + * Copyright 2002-2014 the original author or authors., +, +	protected HttpStatusCodeException(, +			HttpStatus statusCode, String statusText, byte[] responseBody, Charset responseCharset) {, +, +, +		return this.responseBody;, +			return new String(this.responseBody, this.responseCharset);, +			throw new IllegalStateException(ex);, +++ b/spring-test/src/main/java/org/springframework/mock/http/MockHttpOutputMessage.java, +			throw new IllegalStateException(ex);, +++ b/spring-web/src/main/java/org/springframework/web/client/HttpStatusCodeException.java, + * Copyright 2002-2014 the original author or authors., +, +	protected HttpStatusCodeException(, +			HttpStatus statusCode, String statusText, byte[] responseBody, Charset responseCharset) {, +, +, +		return this.responseBody;, +			return new String(this.responseBody, this.responseCharset);, +			throw new IllegalStateException(ex);, +++ b/spring-web/src/main/java/org/springframework/web/client/UnknownHttpStatusCodeException.java, + * Copyright 2002-2014 the original author or authors., +, +, +		return this.responseBody;, +			return new String(this.responseBody, this.responseCharset);, +			throw new IllegalStateException(ex);, +++ b/spring-test/src/main/java/org/springframework/mock/http/MockHttpOutputMessage.java, +			throw new IllegalStateException(ex);, +++ b/spring-web/src/main/java/org/springframework/web/client/HttpStatusCodeException.java, + * Copyright 2002-2014 the original author or authors., +, +	protected HttpStatusCodeException(, +			HttpStatus statusCode, String statusText, byte[] responseBody, Charset responseCharset) {, +, +, +		return this.responseBody;, +			return new String(this.responseBody, this.responseCharset);, +			throw new IllegalStateException(ex);, +++ b/spring-web/src/main/java/org/springframework/web/client/UnknownHttpStatusCodeException.java, + * Copyright 2002-2014 the original author or authors., +, +, +		return this.responseBody;, +			return new String(this.responseBody, this.responseCharset);, +			throw new IllegalStateException(ex);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, + * Represents an immutable collection of URI components, mapping component type to String, +	 * @return the encoded URI components, +		catch (UnsupportedEncodingException ex) {, +			// should not occur, +			throw new IllegalStateException(ex);, +	 * Replace all URI template variables with the values from a given map. The map keys, +	 * Replace all URI template variables with the values from a given array. The array, +	 * Replace all URI template variables with the values obtained through the, +	 * Replace all URI template variables with the values from the given {@link, +	 * Return a URI string from this {@code UriComponents} instance., +	 * Return a {@code URI} from this {@code UriComponents} instance.]