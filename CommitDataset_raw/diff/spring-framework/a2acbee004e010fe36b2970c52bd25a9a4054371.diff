[+++ b/spring-jms/src/test/java/org/springframework/jms/config/JmsListenerContainerFactoryTests.java, +		factory.setDestinationResolver(this.destinationResolver);, +		this.thrown.expect(IllegalStateException.class);, +		factory.setConnectionFactory(this.connectionFactory);, +		factory.setDestinationResolver(this.destinationResolver);, +		factory.setMessageConverter(this.messageConverter);, +		assertEquals(this.connectionFactory, container.getConnectionFactory());, +		assertEquals(this.destinationResolver, container.getDestinationResolver());, +		assertEquals(this.messageConverter, container.getMessageConverter());, +		factory.setDestinationResolver(this.destinationResolver);, +		factory.setTransactionManager(this.transactionManager);, +		factory.setMessageConverter(this.messageConverter);, +		assertEquals(this.messageConverter, container.getMessageConverter());, +		assertEquals(this.destinationResolver, container.getDestinationResolver());, +++ b/spring-jms/src/test/java/org/springframework/jms/config/JmsListenerContainerFactoryTests.java, +		factory.setDestinationResolver(this.destinationResolver);, +		this.thrown.expect(IllegalStateException.class);, +		factory.setConnectionFactory(this.connectionFactory);, +		factory.setDestinationResolver(this.destinationResolver);, +		factory.setMessageConverter(this.messageConverter);, +		assertEquals(this.connectionFactory, container.getConnectionFactory());, +		assertEquals(this.destinationResolver, container.getDestinationResolver());, +		assertEquals(this.messageConverter, container.getMessageConverter());, +		factory.setDestinationResolver(this.destinationResolver);, +		factory.setTransactionManager(this.transactionManager);, +		factory.setMessageConverter(this.messageConverter);, +		assertEquals(this.messageConverter, container.getMessageConverter());, +		assertEquals(this.destinationResolver, container.getDestinationResolver());, +++ b/spring-jms/src/test/java/org/springframework/jms/config/JmsListenerEndpointRegistrarTests.java, +		this.registrar.setEndpointRegistry(this.registry);, +		this.registrar.setBeanFactory(new StaticListableBeanFactory());, +		this.thrown.expect(IllegalArgumentException.class);, +		this.registrar.registerEndpoint(null, this.containerFactory);, +		this.thrown.expect(IllegalArgumentException.class);, +		this.registrar.registerEndpoint(new SimpleJmsListenerEndpoint(), this.containerFactory);, +		this.thrown.expect(IllegalArgumentException.class);, +		this.registrar.registerEndpoint(endpoint, this.containerFactory);, +		this.registrar.setContainerFactory(this.containerFactory);, +		this.registrar.registerEndpoint(endpoint, null);, +		this.registrar.afterPropertiesSet();, +		assertNotNull("Container not created", this.registry.getListenerContainer("some id"));, +		assertEquals(1, this.registry.getListenerContainers().size());, +		assertEquals("some id", this.registry.getListenerContainerIds().iterator().next());, +		this.registrar.registerEndpoint(endpoint, null);, +		this.thrown.expect(IllegalStateException.class);, +		this.thrown.expectMessage(endpoint.toString());, +		this.registrar.afterPropertiesSet();, +		this.registrar.setContainerFactory(this.containerFactory);, +		this.registrar.registerEndpoint(endpoint);, +		this.registrar.afterPropertiesSet();, +		assertNotNull("Container not created", this.registry.getListenerContainer("myEndpoint"));, +		assertEquals(1, this.registry.getListenerContainers().size());, +		assertEquals("myEndpoint", this.registry.getListenerContainerIds().iterator().next());, +++ b/spring-jms/src/test/java/org/springframework/jms/config/JmsListenerContainerFactoryTests.java, +		factory.setDestinationResolver(this.destinationResolver);, +		this.thrown.expect(IllegalStateException.class);, +		factory.setConnectionFactory(this.connectionFactory);, +		factory.setDestinationResolver(this.destinationResolver);, +		factory.setMessageConverter(this.messageConverter);, +		assertEquals(this.connectionFactory, container.getConnectionFactory());, +		assertEquals(this.destinationResolver, container.getDestinationResolver());, +		assertEquals(this.messageConverter, container.getMessageConverter());, +		factory.setDestinationResolver(this.destinationResolver);, +		factory.setTransactionManager(this.transactionManager);, +		factory.setMessageConverter(this.messageConverter);, +		assertEquals(this.messageConverter, container.getMessageConverter());, +		assertEquals(this.destinationResolver, container.getDestinationResolver());, +++ b/spring-jms/src/test/java/org/springframework/jms/config/JmsListenerEndpointRegistrarTests.java, +		this.registrar.setEndpointRegistry(this.registry);, +		this.registrar.setBeanFactory(new StaticListableBeanFactory());, +		this.thrown.expect(IllegalArgumentException.class);, +		this.registrar.registerEndpoint(null, this.containerFactory);, +		this.thrown.expect(IllegalArgumentException.class);, +		this.registrar.registerEndpoint(new SimpleJmsListenerEndpoint(), this.containerFactory);, +		this.thrown.expect(IllegalArgumentException.class);, +		this.registrar.registerEndpoint(endpoint, this.containerFactory);, +		this.registrar.setContainerFactory(this.containerFactory);, +		this.registrar.registerEndpoint(endpoint, null);, +		this.registrar.afterPropertiesSet();, +		assertNotNull("Container not created", this.registry.getListenerContainer("some id"));, +		assertEquals(1, this.registry.getListenerContainers().size());, +		assertEquals("some id", this.registry.getListenerContainerIds().iterator().next());, +		this.registrar.registerEndpoint(endpoint, null);, +		this.thrown.expect(IllegalStateException.class);, +		this.thrown.expectMessage(endpoint.toString());, +		this.registrar.afterPropertiesSet();, +		this.registrar.setContainerFactory(this.containerFactory);, +		this.registrar.registerEndpoint(endpoint);, +		this.registrar.afterPropertiesSet();, +		assertNotNull("Container not created", this.registry.getListenerContainer("myEndpoint"));, +		assertEquals(1, this.registry.getListenerContainers().size());, +		assertEquals("myEndpoint", this.registry.getListenerContainerIds().iterator().next());, +++ b/spring-jms/src/test/java/org/springframework/jms/config/MessageListenerTestContainer.java, +		return this.endpoint;, +		return this.startInvoked && this.initializationInvoked;, +		return this.stopInvoked && this.destroyInvoked;, +		if (!this.initializationInvoked) {, +		if (this.startInvoked) {, +		this.startInvoked = true;, +		if (this.stopInvoked) {]