[+++ b/org.springframework.core/src/main/java/org/springframework/core/io/FileSystemResource.java, + * Copyright 2002-2011 the original author or authors., +import java.io.FileOutputStream;, +import java.io.OutputStream;, + * Implements the extended {@link WritableResource} interface., +public class FileSystemResource extends AbstractResource implements WritableResource {, +	// implementation of WritableResource, +, +	/**, +	 * This implementation checks whether the underlying file is marked as writable, +	 * (and corresponds to an actual file with content, not to a directory)., +	 * @see java.io.File#canWrite(), +	 * @see java.io.File#isDirectory(), +	 */, +	public boolean isWritable() {, +		return (this.file.canWrite() && !this.file.isDirectory());, +	}, +, +	/**, +	 * This implementation opens a FileOutputStream for the underlying file., +	 * @see java.io.FileOutputStream, +	 */, +	public OutputStream getOutputStream() throws IOException {, +		return new FileOutputStream(this.file);, +	}, +, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/FileSystemResource.java, + * Copyright 2002-2011 the original author or authors., +import java.io.FileOutputStream;, +import java.io.OutputStream;, + * Implements the extended {@link WritableResource} interface., +public class FileSystemResource extends AbstractResource implements WritableResource {, +	// implementation of WritableResource, +, +	/**, +	 * This implementation checks whether the underlying file is marked as writable, +	 * (and corresponds to an actual file with content, not to a directory)., +	 * @see java.io.File#canWrite(), +	 * @see java.io.File#isDirectory(), +	 */, +	public boolean isWritable() {, +		return (this.file.canWrite() && !this.file.isDirectory());, +	}, +, +	/**, +	 * This implementation opens a FileOutputStream for the underlying file., +	 * @see java.io.FileOutputStream, +	 */, +	public OutputStream getOutputStream() throws IOException {, +		return new FileOutputStream(this.file);, +	}, +, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/Resource.java, + * Copyright 2002-2011 the original author or authors., + * @see WritableResource, + * @see ContextResource, +	 * @see #getInputStream(), +++ b/org.springframework.core/src/main/java/org/springframework/core/io/FileSystemResource.java, + * Copyright 2002-2011 the original author or authors., +import java.io.FileOutputStream;, +import java.io.OutputStream;, + * Implements the extended {@link WritableResource} interface., +public class FileSystemResource extends AbstractResource implements WritableResource {, +	// implementation of WritableResource, +, +	/**, +	 * This implementation checks whether the underlying file is marked as writable, +	 * (and corresponds to an actual file with content, not to a directory)., +	 * @see java.io.File#canWrite(), +	 * @see java.io.File#isDirectory(), +	 */, +	public boolean isWritable() {, +		return (this.file.canWrite() && !this.file.isDirectory());, +	}, +, +	/**, +	 * This implementation opens a FileOutputStream for the underlying file., +	 * @see java.io.FileOutputStream, +	 */, +	public OutputStream getOutputStream() throws IOException {, +		return new FileOutputStream(this.file);, +	}, +, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/io/Resource.java, + * Copyright 2002-2011 the original author or authors., + * @see WritableResource, + * @see ContextResource, +	 * @see #getInputStream(), +++ b/org.springframework.core/src/main/java/org/springframework/core/io/WritableResource.java, +/*, + * Copyright 2002-2011 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0]