[+++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, +import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;, +import com.fasterxml.jackson.databind.SerializationFeature;, +	private Boolean prettyPrint;, +, +		configurePrettyPrint();, +	}, +, +	private void configurePrettyPrint() {, +		if (this.prettyPrint != null) {, +			this.objectMapper.configure(SerializationFeature.INDENT_OUTPUT, this.prettyPrint);, +		}, +	/**, +	 * Whether to use the {@link DefaultPrettyPrinter} when writing JSON., +	 * This is a shortcut for setting up an {@code ObjectMapper} as follows:, +	 * <pre>, +	 * ObjectMapper mapper = new ObjectMapper();, +	 * mapper.configure(SerializationFeature.INDENT_OUTPUT, true);, +	 * converter.setObjectMapper(mapper);, +	 * </pre>, +	 */, +	public void setPrettyPrint(boolean prettyPrint) {, +		this.prettyPrint = prettyPrint;, +		configurePrettyPrint();, +	}, +, +, +		// A workaround for JsonGenerators not applying serialization features, +		// https://github.com/FasterXML/jackson-databind/issues/12, +		if (this.objectMapper.isEnabled(SerializationFeature.INDENT_OUTPUT)) {, +			jsonGenerator.useDefaultPrettyPrinter();, +		}, +, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.java, +import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;, +import com.fasterxml.jackson.databind.SerializationFeature;, +	private Boolean prettyPrint;, +, +		configurePrettyPrint();, +	}, +, +	private void configurePrettyPrint() {, +		if (this.prettyPrint != null) {, +			this.objectMapper.configure(SerializationFeature.INDENT_OUTPUT, this.prettyPrint);, +		}, +	/**, +	 * Whether to use the {@link DefaultPrettyPrinter} when writing JSON., +	 * This is a shortcut for setting up an {@code ObjectMapper} as follows:, +	 * <pre>, +	 * ObjectMapper mapper = new ObjectMapper();, +	 * mapper.configure(SerializationFeature.INDENT_OUTPUT, true);, +	 * converter.setObjectMapper(mapper);, +	 * </pre>, +	 */, +	public void setPrettyPrint(boolean prettyPrint) {, +		this.prettyPrint = prettyPrint;, +		configurePrettyPrint();, +	}, +, +, +		// A workaround for JsonGenerators not applying serialization features, +		// https://github.com/FasterXML/jackson-databind/issues/12, +		if (this.objectMapper.isEnabled(SerializationFeature.INDENT_OUTPUT)) {, +			jsonGenerator.useDefaultPrettyPrinter();, +		}, +, +++ b/spring-web/src/main/java/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.java, +import org.codehaus.jackson.map.SerializationConfig;, +import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;, +, +	private Boolean prettyPrint;, +, +		configurePrettyPrint();, +	}, +, +	private void configurePrettyPrint() {, +		if (this.prettyPrint != null) {, +			this.objectMapper.configure(SerializationConfig.Feature.INDENT_OUTPUT, this.prettyPrint);, +		}, +	/**, +	 * Whether to use the {@link DefaultPrettyPrinter} when writing JSON., +	 * This is a shortcut for setting up an {@code ObjectMapper} as follows:, +	 * <pre>, +	 * ObjectMapper mapper = new ObjectMapper();, +	 * mapper.configure(SerializationConfig.Feature.INDENT_OUTPUT, true);, +	 * converter.setObjectMapper(mapper);, +	 * </pre>, +	 * <p>The default value is {@code false}., +	 */, +	public void setPrettyPrint(boolean prettyPrint) {, +		this.prettyPrint = prettyPrint;, +		configurePrettyPrint();, +	}, +, +		// A workaround for JsonGenerators not applying serialization features, +		// https://github.com/FasterXML/jackson-databind/issues/12, +		if (this.objectMapper.getSerializationConfig().isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {, +			jsonGenerator.useDefaultPrettyPrinter();, +		}, +]