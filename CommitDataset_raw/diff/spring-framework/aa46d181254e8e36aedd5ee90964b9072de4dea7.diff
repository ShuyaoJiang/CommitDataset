[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/FlashMap.java, +	private String expectedRequestUri;, +	public FlashMap setExpectedRequestUri(HttpServletRequest request, String url) {, +		String path = extractRequestUri(url);, +		this.expectedRequestUri = path.startsWith("/") ? path : normalizeRelativePath(request, path);, +	private String extractRequestUri(String url) {, +		int index = url.indexOf("?");, +			url = url.substring(0, index);, +		index = url.indexOf("://");, +		if (index != -1) {, +			int pathBegin = url.indexOf("/", index + 3);, +			url = (pathBegin != -1 ) ? url.substring(pathBegin) : "";, +		}, +		return url;, +	private String normalizeRelativePath(HttpServletRequest request, String relativeUrl) {, +	 * expectations provided via {@link #setExpectedRequestUri} and , +		if (this.expectedRequestUri != null) {, +			String requestUri = this.urlPathHelper.getRequestUri(request);, +			if (!matchPathsIgnoreTrailingSlash(requestUri, this.expectedRequestUri)) {, +		int thisUrlPath = (this.expectedRequestUri != null) ? 1 : 0;, +		int otherUrlPath = (other.expectedRequestUri != null) ? 1 : 0;, +		result.append(", expecteRequestUri=").append(this.expectedRequestUri);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/FlashMap.java, +	private String expectedRequestUri;, +	public FlashMap setExpectedRequestUri(HttpServletRequest request, String url) {, +		String path = extractRequestUri(url);, +		this.expectedRequestUri = path.startsWith("/") ? path : normalizeRelativePath(request, path);, +	private String extractRequestUri(String url) {, +		int index = url.indexOf("?");, +			url = url.substring(0, index);, +		index = url.indexOf("://");, +		if (index != -1) {, +			int pathBegin = url.indexOf("/", index + 3);, +			url = (pathBegin != -1 ) ? url.substring(pathBegin) : "";, +		}, +		return url;, +	private String normalizeRelativePath(HttpServletRequest request, String relativeUrl) {, +	 * expectations provided via {@link #setExpectedRequestUri} and , +		if (this.expectedRequestUri != null) {, +			String requestUri = this.urlPathHelper.getRequestUri(request);, +			if (!matchPathsIgnoreTrailingSlash(requestUri, this.expectedRequestUri)) {, +		int thisUrlPath = (this.expectedRequestUri != null) ? 1 : 0;, +		int otherUrlPath = (other.expectedRequestUri != null) ? 1 : 0;, +		result.append(", expecteRequestUri=").append(this.expectedRequestUri);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/RedirectView.java, +			flashMap.setExpectedRequestUri(request, targetUrl.toString());, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/FlashMap.java, +	private String expectedRequestUri;, +	public FlashMap setExpectedRequestUri(HttpServletRequest request, String url) {, +		String path = extractRequestUri(url);, +		this.expectedRequestUri = path.startsWith("/") ? path : normalizeRelativePath(request, path);, +	private String extractRequestUri(String url) {, +		int index = url.indexOf("?");, +			url = url.substring(0, index);, +		index = url.indexOf("://");, +		if (index != -1) {, +			int pathBegin = url.indexOf("/", index + 3);, +			url = (pathBegin != -1 ) ? url.substring(pathBegin) : "";, +		}, +		return url;, +	private String normalizeRelativePath(HttpServletRequest request, String relativeUrl) {, +	 * expectations provided via {@link #setExpectedRequestUri} and , +		if (this.expectedRequestUri != null) {, +			String requestUri = this.urlPathHelper.getRequestUri(request);, +			if (!matchPathsIgnoreTrailingSlash(requestUri, this.expectedRequestUri)) {, +		int thisUrlPath = (this.expectedRequestUri != null) ? 1 : 0;, +		int otherUrlPath = (other.expectedRequestUri != null) ? 1 : 0;, +		result.append(", expecteRequestUri=").append(this.expectedRequestUri);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/view/RedirectView.java, +			flashMap.setExpectedRequestUri(request, targetUrl.toString());, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/FlashMapTests.java, +		flashMap.setExpectedRequestUri(null, "/yes");, +		flashMap.setExpectedRequestUri(null, "/thats it?");, +		flashMap.setExpectedRequestUri(new MockHttpServletRequest("GET", "/oh/no"), "yes");, +		flashMap.setExpectedRequestUri(new MockHttpServletRequest("GET", "/oh/not/again"), "../ok");, +		flashMap.setExpectedRequestUri(new MockHttpServletRequest("GET", "/yes/it/is"), "..");, +		flashMap.setExpectedRequestUri(new MockHttpServletRequest("GET", "/yes/it/is"), "../");, +		flashMap.setExpectedRequestUri(new MockHttpServletRequest("GET", "/thats it/really"), "./");, +		, +		flashMap.setExpectedRequestUri(new MockHttpServletRequest("GET", "/yes/it/is"), "..?url=http://example.com");, +		assertTrue(flashMap.matches(new MockHttpServletRequest("GET", "/yes")));, +		flashMap.setExpectedRequestUri(new MockHttpServletRequest(), "http://example.com");, +		flashMap.setExpectedRequestUri(null, "http://example.com/");, +		flashMap.setExpectedRequestUri(null, "http://example.com/yes");, +		flashMap.setExpectedRequestUri(null, "http://example.com/yes?a=1");, +		flashMap1.setExpectedRequestUri(null, "/path1");, +		flashMap2.setExpectedRequestUri(null, "/path2");, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/FlashMap.java, +	private String expectedRequestUri;, +	public FlashMap setExpectedRequestUri(HttpServletRequest request, String url) {, +		String path = extractRequestUri(url);, +		this.expectedRequestUri = path.startsWith("/") ? path : normalizeRelativePath(request, path);, +	private String extractRequestUri(String url) {, +		int index = url.indexOf("?");, +			url = url.substring(0, index);, +		index = url.indexOf("://");, +		if (index != -1) {, +			int pathBegin = url.indexOf("/", index + 3);, +			url = (pathBegin != -1 ) ? url.substring(pathBegin) : "";, +		}]