[+++ b/build.gradle, +	ext.beanvalVersion       = "1.1.0.Final", +	ext.jcaVersion           = "1.7", +	ext.jpaVersion           = "2.1.1", +		optional("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +		optional("javax.validation:validation-api:${beanvalVersion}"), +		testCompile("javax.validation:validation-api:${beanvalVersion}"), +		optional("javax.resource:javax.resource-api:${jcaVersion}"), +		testCompile("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +		provided("javax.jms:javax.jms-api:2.0.1"), +		optional("javax.resource:javax.resource-api:${jcaVersion}"), +		optional("javax.validation:validation-api:${beanvalVersion}"), +		optional("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +		testCompile("javax.validation:validation-api:${beanvalVersion}"), +		provided("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +		testCompile("javax.resource:javax.resource-api:${jcaVersion}"), +++ b/build.gradle, +	ext.beanvalVersion       = "1.1.0.Final", +	ext.jcaVersion           = "1.7", +	ext.jpaVersion           = "2.1.1", +		optional("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +		optional("javax.validation:validation-api:${beanvalVersion}"), +		testCompile("javax.validation:validation-api:${beanvalVersion}"), +		optional("javax.resource:javax.resource-api:${jcaVersion}"), +		testCompile("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +		provided("javax.jms:javax.jms-api:2.0.1"), +		optional("javax.resource:javax.resource-api:${jcaVersion}"), +		optional("javax.validation:validation-api:${beanvalVersion}"), +		optional("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +		testCompile("javax.validation:validation-api:${beanvalVersion}"), +		provided("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +		testCompile("javax.resource:javax.resource-api:${jcaVersion}"), +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachedMessageProducer.java, + * Copyright 2002-2016 the original author or authors., +import javax.jms.CompletionListener;, +	public void setDeliveryDelay(long deliveryDelay) throws JMSException {, +			this.originalDeliveryDelay = this.target.getDeliveryDelay();, +		this.target.setDeliveryDelay(deliveryDelay);, +	public long getDeliveryDelay() throws JMSException {, +		return this.target.getDeliveryDelay();, +	public void send(Message message, CompletionListener completionListener) throws JMSException {, +		this.target.send(message, this.deliveryMode, this.priority, this.timeToLive, completionListener);, +	}, +, +	@Override, +	public void send(Message message, int deliveryMode, int priority, long timeToLive,, +			CompletionListener completionListener) throws JMSException {, +, +		this.target.send(message, deliveryMode, priority, timeToLive, completionListener);, +	}, +, +	@Override, +	public void send(Destination destination, Message message, CompletionListener completionListener) throws JMSException {, +		this.target.send(destination, message, this.deliveryMode, this.priority, this.timeToLive, completionListener);, +	}, +, +	@Override, +	public void send(Destination destination, Message message, int deliveryMode, int priority,, +			long timeToLive, CompletionListener completionListener) throws JMSException {, +, +		this.target.send(destination, message, deliveryMode, priority, timeToLive, completionListener);, +, +	}, +, +	@Override, +			this.target.setDeliveryDelay(this.originalDeliveryDelay);, +++ b/build.gradle, +	ext.beanvalVersion       = "1.1.0.Final", +	ext.jcaVersion           = "1.7", +	ext.jpaVersion           = "2.1.1", +		optional("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +		optional("javax.validation:validation-api:${beanvalVersion}"), +		testCompile("javax.validation:validation-api:${beanvalVersion}"), +		optional("javax.resource:javax.resource-api:${jcaVersion}"), +		testCompile("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +		provided("javax.jms:javax.jms-api:2.0.1"), +		optional("javax.resource:javax.resource-api:${jcaVersion}"), +		optional("javax.validation:validation-api:${beanvalVersion}"), +		optional("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +		testCompile("javax.validation:validation-api:${beanvalVersion}"), +		provided("org.eclipse.persistence:javax.persistence:${jpaVersion}"), +		testCompile("javax.resource:javax.resource-api:${jcaVersion}"), +++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachedMessageProducer.java, + * Copyright 2002-2016 the original author or authors., +import javax.jms.CompletionListener;, +	public void setDeliveryDelay(long deliveryDelay) throws JMSException {, +			this.originalDeliveryDelay = this.target.getDeliveryDelay();, +		this.target.setDeliveryDelay(deliveryDelay);, +	public long getDeliveryDelay() throws JMSException {, +		return this.target.getDeliveryDelay();, +	public void send(Message message, CompletionListener completionListener) throws JMSException {, +		this.target.send(message, this.deliveryMode, this.priority, this.timeToLive, completionListener);, +	}, +, +	@Override, +	public void send(Message message, int deliveryMode, int priority, long timeToLive,, +			CompletionListener completionListener) throws JMSException {, +, +		this.target.send(message, deliveryMode, priority, timeToLive, completionListener);, +	}]