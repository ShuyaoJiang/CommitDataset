[+++ b/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java, +		else if (logger.isWarnEnabled()) {, +			logger.warn(logPrefix + formatError(ex, exchange.getRequest()));, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java, +		else if (logger.isWarnEnabled()) {, +			logger.warn(logPrefix + formatError(ex, exchange.getRequest()));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.java, +				// Print warn message, when warn logger is not enabled.., +				if (logger.isWarnEnabled() && (this.warnLogger == null || !this.warnLogger.isWarnEnabled())) {, +					logger.warn("Resolved [" + ex + "]" + (result.isEmpty() ? "" : " to " + result));, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java, +		else if (logger.isWarnEnabled()) {, +			logger.warn(logPrefix + formatError(ex, exchange.getRequest()));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.java, +				// Print warn message, when warn logger is not enabled.., +				if (logger.isWarnEnabled() && (this.warnLogger == null || !this.warnLogger.isWarnEnabled())) {, +					logger.warn("Resolved [" + ex + "]" + (result.isEmpty() ? "" : " to " + result));, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.java, +		pageNotFoundLogger.warn(ex.getMessage());]