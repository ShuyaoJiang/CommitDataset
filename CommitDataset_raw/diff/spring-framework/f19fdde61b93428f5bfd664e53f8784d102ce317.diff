[+++ b/org.springframework.core/src/main/java/org/springframework/core/enums/AbstractCachingLabeledEnumResolver.java, + * Copyright 2002-2009 the original author or authors., +		Map<Comparable, LabeledEnum> typeEnums = getLabeledEnumMap(type);, +		LabeledEnum codedEnum = typeEnums.get(code);, +	/**, +	 * Inner cache class that implements lazy building of LabeledEnum Maps., +	 */, +++ b/org.springframework.core/src/main/java/org/springframework/core/enums/AbstractCachingLabeledEnumResolver.java, + * Copyright 2002-2009 the original author or authors., +		Map<Comparable, LabeledEnum> typeEnums = getLabeledEnumMap(type);, +		LabeledEnum codedEnum = typeEnums.get(code);, +	/**, +	 * Inner cache class that implements lazy building of LabeledEnum Maps., +	 */, +++ b/org.springframework.core/src/test/java/org/springframework/context/annotation/Scope.java, + * Copyright 2002-2009 the original author or authors., +	String value() default "singleton";, +++ b/org.springframework.core/src/main/java/org/springframework/core/enums/AbstractCachingLabeledEnumResolver.java, + * Copyright 2002-2009 the original author or authors., +		Map<Comparable, LabeledEnum> typeEnums = getLabeledEnumMap(type);, +		LabeledEnum codedEnum = typeEnums.get(code);, +	/**, +	 * Inner cache class that implements lazy building of LabeledEnum Maps., +	 */, +++ b/org.springframework.core/src/test/java/org/springframework/context/annotation/Scope.java, + * Copyright 2002-2009 the original author or authors., +	String value() default "singleton";, +++ b/org.springframework.core/src/test/java/org/springframework/core/type/AspectJTypeFilterTests.java, + * Copyright 2002-2009 the original author or authors., +	public void testAnnotationPatternMatches() throws Exception {]