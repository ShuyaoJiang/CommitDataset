[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.java, +			if (isCandidateElement(node) && nodeNameEquals(node, META_ELEMENT)) {, +			if (isCandidateElement(node) && nodeNameEquals(node, CONSTRUCTOR_ARG_ELEMENT)) {, +			if (isCandidateElement(node) && nodeNameEquals(node, PROPERTY_ELEMENT)) {, +			if (isCandidateElement(node) && nodeNameEquals(node, QUALIFIER_ELEMENT)) {, +			if (isCandidateElement(node) && nodeNameEquals(node, LOOKUP_METHOD_ELEMENT)) {, +			if (isCandidateElement(node) && nodeNameEquals(node, REPLACED_METHOD_ELEMENT)) {, +				if (isCandidateElement(node) && nodeNameEquals(node, QUALIFIER_ATTRIBUTE_ELEMENT)) {, +	 * <p>The default implementation checks the supplied desired name against both, +	 * {@link Node#getNodeName()) and {@link Node#getLocalName()}., +	 * <p>Subclasses may override the default implementation to provide a different, +	 * mechanism for comparing node names., +	private boolean isCandidateElement(Node node) {, +		return (node instanceof Element && (isDefaultNamespace(node) || !isDefaultNamespace(node.getParentNode())));]