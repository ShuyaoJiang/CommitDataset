[+++ b/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.context.ApplicationContextAware;, +import org.springframework.context.ApplicationListener;, +import org.springframework.context.event.ContextRefreshedEvent;, +		EmbeddedValueResolverAware, BeanFactoryAware, ApplicationContextAware,, +		SmartInitializingSingleton, ApplicationListener<ContextRefreshedEvent>, DisposableBean {, +	private ApplicationContext applicationContext;, +, +	 * Setting an {@link ApplicationContext} is optional: If set, registered, +	 * tasks will be activated in the {@link ContextRefreshedEvent} phase;, +	 * if not set, it will happen at {@link #afterSingletonsInstantiated} time., +	@Override, +		this.applicationContext = applicationContext;, +		if (this.applicationContext == null) {, +			// Not running in an ApplicationContext -> register tasks early..., +			finishRegistration();, +		}, +	}, +, +	@Override, +	public void onApplicationEvent(ContextRefreshedEvent event) {, +		if (event.getApplicationContext() == this.applicationContext) {, +			// Running in an ApplicationContext -> register tasks this late..., +			// giving other ContextRefreshedEvent listeners a chance to perform, +			// their work at the same time (e.g. Spring Batch's job registration)., +			finishRegistration();, +		}, +	}, +, +	private void finishRegistration() {]