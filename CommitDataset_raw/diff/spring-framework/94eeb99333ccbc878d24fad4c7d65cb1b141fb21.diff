[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +import org.springframework.beans.factory.support.ManagedList;, +			List<BeanDefinition> interceptorBeans = new ManagedList<BeanDefinition>(beans.size());, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +import org.springframework.beans.factory.support.ManagedList;, +			List<BeanDefinition> interceptorBeans = new ManagedList<BeanDefinition>(beans.size());, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/config/MvcNamespaceTests.java, +import org.springframework.core.style.StylerUtils;, +		container.refresh();, +, +		container.refresh();, +, +		container.refresh();, +, +		container.refresh();, +, +		assertEquals(3, chain.getInterceptors().length);, +		assertTrue(chain.getInterceptors()[1] instanceof LocaleChangeInterceptor);, +		assertTrue(chain.getInterceptors()[2] instanceof ThemeChangeInterceptor);, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +import org.springframework.beans.factory.support.ManagedList;, +			List<BeanDefinition> interceptorBeans = new ManagedList<BeanDefinition>(beans.size());, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/config/MvcNamespaceTests.java, +import org.springframework.core.style.StylerUtils;, +		container.refresh();, +, +		container.refresh();, +, +		container.refresh();, +, +		container.refresh();, +, +		assertEquals(3, chain.getInterceptors().length);, +		assertTrue(chain.getInterceptors()[1] instanceof LocaleChangeInterceptor);, +		assertTrue(chain.getInterceptors()[2] instanceof ThemeChangeInterceptor);, +++ b/org.springframework.web.servlet/src/test/resources/org/springframework/web/servlet/config/mvc-config-interceptors.xml, +			<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />]