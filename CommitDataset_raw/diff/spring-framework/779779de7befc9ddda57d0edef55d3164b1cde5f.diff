[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/AbstractWebSocketHandlerRegistration.java, +	private TaskScheduler scheduler;, +, +	public AbstractWebSocketHandlerRegistration() {, +	}, +, +	/**, +	 * Deprecated constructor with a TaskScheduler., +	 *, +	 * @deprecated as of 5.0 a TaskScheduler is not provided upfront, not until, +	 * it is obvious that it is needed, see {@link #getSockJsServiceRegistration()}., +	 */, +	@Deprecated, +		this.scheduler = defaultTaskScheduler;, +		this.sockJsServiceRegistration = new SockJsServiceRegistration();, +		if (this.scheduler != null) {, +			this.sockJsServiceRegistration.setTaskScheduler(this.scheduler);, +		}, +	/**, +	 * Expose the {@code SockJsServiceRegistration} -- if SockJS is enabled or, +	 * {@code null} otherwise -- so that it can be configured with a TaskScheduler, +	 * if the application did not provide one. This should be done prior to, +	 * calling {@link #getMappings()}., +	 */, +	protected SockJsServiceRegistration getSockJsServiceRegistration() {, +		return this.sockJsServiceRegistration;, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/AbstractWebSocketHandlerRegistration.java, +	private TaskScheduler scheduler;, +, +	public AbstractWebSocketHandlerRegistration() {, +	}, +, +	/**, +	 * Deprecated constructor with a TaskScheduler., +	 *, +	 * @deprecated as of 5.0 a TaskScheduler is not provided upfront, not until, +	 * it is obvious that it is needed, see {@link #getSockJsServiceRegistration()}., +	 */, +	@Deprecated, +		this.scheduler = defaultTaskScheduler;, +		this.sockJsServiceRegistration = new SockJsServiceRegistration();, +		if (this.scheduler != null) {, +			this.sockJsServiceRegistration.setTaskScheduler(this.scheduler);, +		}, +	/**, +	 * Expose the {@code SockJsServiceRegistration} -- if SockJS is enabled or, +	 * {@code null} otherwise -- so that it can be configured with a TaskScheduler, +	 * if the application did not provide one. This should be done prior to, +	 * calling {@link #getMappings()}., +	 */, +	protected SockJsServiceRegistration getSockJsServiceRegistration() {, +		return this.sockJsServiceRegistration;, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistration.java, +	public ServletWebSocketHandlerRegistration() {, +	}, +, +	/**, +	 * Deprecated constructor with a TaskScheduler for SockJS use., +	 *, +	 * @deprecated as of 5.0 a TaskScheduler is not provided upfront, not until, +	 * it is obvious that it is needed, see {@link #getSockJsServiceRegistration()}., +	 */, +	@Deprecated, +	@SuppressWarnings("deprecated"), +	public ServletWebSocketHandlerRegistration(TaskScheduler scheduler) {, +		super(scheduler);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/AbstractWebSocketHandlerRegistration.java, +	private TaskScheduler scheduler;, +, +	public AbstractWebSocketHandlerRegistration() {, +	}, +, +	/**, +	 * Deprecated constructor with a TaskScheduler., +	 *, +	 * @deprecated as of 5.0 a TaskScheduler is not provided upfront, not until, +	 * it is obvious that it is needed, see {@link #getSockJsServiceRegistration()}., +	 */, +	@Deprecated, +		this.scheduler = defaultTaskScheduler;, +		this.sockJsServiceRegistration = new SockJsServiceRegistration();, +		if (this.scheduler != null) {, +			this.sockJsServiceRegistration.setTaskScheduler(this.scheduler);, +		}, +	/**, +	 * Expose the {@code SockJsServiceRegistration} -- if SockJS is enabled or, +	 * {@code null} otherwise -- so that it can be configured with a TaskScheduler, +	 * if the application did not provide one. This should be done prior to, +	 * calling {@link #getMappings()}., +	 */, +	protected SockJsServiceRegistration getSockJsServiceRegistration() {, +		return this.sockJsServiceRegistration;, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistration.java, +	public ServletWebSocketHandlerRegistration() {]