[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.java, +					boolean match = value.equals(request.getParameter(key));, +					if (negated) {, +						match = !match;, +					}, +					if (!match) {, +						return false;, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.java, +					boolean match = value.equals(request.getParameter(key));, +					if (negated) {, +						match = !match;, +					}, +					if (!match) {, +						return false;, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtilsTests.java, +	, +	@Test, +	public void checkParametersNegatedValueMatch() {, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/");, +		request.addParameter("param1", "value1");, +		String[] params = new String[]{"param1!=foo"};, +		boolean result = ServletAnnotationMappingUtils.checkParameters(params, request);, +		assertTrue("Invalid request method result", result);, +	}, +	, +	@Test, +	public void checkParametersNegatedValueNoMatch() {, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/");, +		request.addParameter("param1", "foo");, +		String[] params = new String[]{"param1!=foo"};, +		boolean result = ServletAnnotationMappingUtils.checkParameters(params, request);, +		assertFalse("Invalid request method result", result);, +	}, +, +	@Test, +	public void checkParametersCompositeNoMatch() {, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/");, +		request.addParameter("param1", "foo");, +		request.addParameter("param2", "foo");, +		String[] params = new String[]{"param1=foo", "param2!=foo"};, +		boolean result = ServletAnnotationMappingUtils.checkParameters(params, request);, +		assertFalse("[SPR-8059] Invalid request method result", result);, +	}]