[+++ b/spring-web/src/main/java/org/springframework/web/method/annotation/InitBinderDataBinderFactory.java, +, +	 * @throws Exception if one of the invoked @{@link InitBinder} methods fails, +	 * @see #isBinderMethodApplicable, +							"@InitBinder methods must not return a value (should be void): " + binderMethod);, +	 * Determine whether the given {@code @InitBinder} method should be used, +	 * to initialize the given {@link WebDataBinder} instance. By default we, +	 * check the specified attribute names in the annotation value, if any., +	protected boolean isBinderMethodApplicable(HandlerMethod initBinderMethod, WebDataBinder dataBinder) {, +		InitBinder ann = initBinderMethod.getMethodAnnotation(InitBinder.class);, +++ b/spring-web/src/main/java/org/springframework/web/method/annotation/InitBinderDataBinderFactory.java, +, +	 * @throws Exception if one of the invoked @{@link InitBinder} methods fails, +	 * @see #isBinderMethodApplicable, +							"@InitBinder methods must not return a value (should be void): " + binderMethod);, +	 * Determine whether the given {@code @InitBinder} method should be used, +	 * to initialize the given {@link WebDataBinder} instance. By default we, +	 * check the specified attribute names in the annotation value, if any., +	protected boolean isBinderMethodApplicable(HandlerMethod initBinderMethod, WebDataBinder dataBinder) {, +		InitBinder ann = initBinderMethod.getMethodAnnotation(InitBinder.class);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/InitBinderBindingContext.java, +	private void invokeBinderMethod(, +			WebExchangeDataBinder dataBinder, ServerWebExchange exchange, SyncInvocableHandlerMethod binderMethod) {, +					"@InitBinder methods must not return a value (should be void): " + binderMethod);, +					"@InitBinder methods are not allowed to add model attributes: " + binderMethod);]