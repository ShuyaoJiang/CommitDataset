[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java, +	private class UnsentDisconnectChannelInterceptor implements ChannelInterceptor {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java, +	private class UnsentDisconnectChannelInterceptor implements ChannelInterceptor {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/support/ChannelInterceptor.java, +	default Message<?> preSend(Message<?> message, MessageChannel channel) {, +		return message;, +	}, +	default void postSend(Message<?> message, MessageChannel channel, boolean sent) {, +	}, +	default void afterSendCompletion(Message<?> message, MessageChannel channel, boolean sent,, +			@Nullable Exception ex) {, +	}, +	default boolean preReceive(MessageChannel channel) {, +		return true;, +	}, +	default Message<?> postReceive(Message<?> message, MessageChannel channel) {, +		return message;, +	}, +	default void afterReceiveCompletion(@Nullable Message<?> message, MessageChannel channel,, +			@Nullable Exception ex) {, +	}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java, +	private class UnsentDisconnectChannelInterceptor implements ChannelInterceptor {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/support/ChannelInterceptor.java, +	default Message<?> preSend(Message<?> message, MessageChannel channel) {, +		return message;, +	}, +	default void postSend(Message<?> message, MessageChannel channel, boolean sent) {, +	}, +	default void afterSendCompletion(Message<?> message, MessageChannel channel, boolean sent,, +			@Nullable Exception ex) {, +	}, +	default boolean preReceive(MessageChannel channel) {, +		return true;, +	}, +	default Message<?> postReceive(Message<?> message, MessageChannel channel) {, +		return message;, +	}, +	default void afterReceiveCompletion(@Nullable Message<?> message, MessageChannel channel,, +			@Nullable Exception ex) {, +	}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/support/ChannelInterceptorAdapter.java, + * Copyright 2002-2018 the original author or authors., + * @deprecated as of 5.0.7 {@link ChannelInterceptor} has default methods (made, + * possible by a Java 8 baseline) and can be implemented directly without the, + * need for this no-op adapter, +@Deprecated, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java, +	private class UnsentDisconnectChannelInterceptor implements ChannelInterceptor {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/support/ChannelInterceptor.java, +	default Message<?> preSend(Message<?> message, MessageChannel channel) {, +		return message;, +	}, +	default void postSend(Message<?> message, MessageChannel channel, boolean sent) {, +	}, +	default void afterSendCompletion(Message<?> message, MessageChannel channel, boolean sent,, +			@Nullable Exception ex) {, +	}, +	default boolean preReceive(MessageChannel channel) {, +		return true;, +	}, +	default Message<?> postReceive(Message<?> message, MessageChannel channel) {, +		return message;, +	}, +	default void afterReceiveCompletion(@Nullable Message<?> message, MessageChannel channel,, +			@Nullable Exception ex) {, +	}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/support/ChannelInterceptorAdapter.java, + * Copyright 2002-2018 the original author or authors., + * @deprecated as of 5.0.7 {@link ChannelInterceptor} has default methods (made, + * possible by a Java 8 baseline) and can be implemented directly without the, + * need for this no-op adapter, +@Deprecated, +++ b/spring-messaging/src/main/java/org/springframework/messaging/support/ImmutableMessageChannelInterceptor.java, + * Copyright 2002-2018 the original author or authors., +public class ImmutableMessageChannelInterceptor implements ChannelInterceptor {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java, +	private class UnsentDisconnectChannelInterceptor implements ChannelInterceptor {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/support/ChannelInterceptor.java, +	default Message<?> preSend(Message<?> message, MessageChannel channel) {, +		return message;, +	}, +	default void postSend(Message<?> message, MessageChannel channel, boolean sent) {, +	}, +	default void afterSendCompletion(Message<?> message, MessageChannel channel, boolean sent,, +			@Nullable Exception ex) {, +	}, +	default boolean preReceive(MessageChannel channel) {, +		return true;, +	}, +	default Message<?> postReceive(Message<?> message, MessageChannel channel) {, +		return message;, +	}, +	default void afterReceiveCompletion(@Nullable Message<?> message, MessageChannel channel,, +			@Nullable Exception ex) {, +	}, +++ b/spring-messaging/src/main/java/org/springframework/messaging/support/ChannelInterceptorAdapter.java, + * Copyright 2002-2018 the original author or authors., + * @deprecated as of 5.0.7 {@link ChannelInterceptor} has default methods (made]