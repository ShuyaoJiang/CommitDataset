[+++ b/spring-web/src/test/java/org/springframework/web/client/RestTemplateTests.java, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +	private void addLogResponseStatusExpectations(HttpStatus status) throws IOException {, +		expect(response.getStatusCode()).andReturn(status).times(0, 1);, +		expect(response.getStatusText()).andReturn(status.getReasonPhrase()).times(0, 1);, +	}, +, +++ b/spring-web/src/test/java/org/springframework/web/client/RestTemplateTests.java, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +		addLogResponseStatusExpectations(HttpStatus.OK);, +	private void addLogResponseStatusExpectations(HttpStatus status) throws IOException {, +		expect(response.getStatusCode()).andReturn(status).times(0, 1);, +		expect(response.getStatusText()).andReturn(status.getReasonPhrase()).times(0, 1);, +	}, +, +++ b/spring-web/src/test/java/org/springframework/web/context/request/async/WebAsyncManagerTests.java, +import javax.servlet.http.HttpServletRequest;, +, +	private MockHttpServletRequest servletRequest;, +, +		this.servletRequest = new MockHttpServletRequest();, +		this.asyncManager = WebAsyncUtils.getAsyncManager(servletRequest);, +		expect(this.asyncWebRequest.getNativeRequest(HttpServletRequest.class)).andReturn(this.servletRequest).times(0, 1);, +		expect(this.asyncWebRequest.getNativeRequest(HttpServletRequest.class)).andReturn(this.servletRequest).times(0, 1);]