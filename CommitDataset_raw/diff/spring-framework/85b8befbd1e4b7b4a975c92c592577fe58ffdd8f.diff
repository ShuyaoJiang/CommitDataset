[+++ b/org.springframework.web/src/main/java/org/springframework/http/MediaType.java, +	 * includes {@code application/soap+xml}, etc. This method is non-symmetic., +		if (other == null) {, +			return false;, +		}, +		if (this.isWildcardType()) {, +			// */* includes anything, +		else if (this.type.equals(other.type)) {, +			if (this.subtype.equals(other.subtype) || this.isWildcardSubtype()) {, +		return false;, +	}, +, +	/**, +	 * Indicate whether this {@link MediaType} is compatible with the given media type., +	 *, +	 * <p>For instance, {@code text/*} is compatible with {@code text/plain}, {@code text/html}, and vice versa. In, +	 * effect, this method is similar to {@link #includes(MediaType)}, except that it's symmetric., +	 *, +	 * @param other the reference media type with which to compare, +	 * @return <code>true</code> if this media type is compatible with the given media type; <code>false</code> otherwise, +	 */, +	public boolean isCompatibleWith(MediaType other) {, +		if (other == null) {, +			return false;, +		}, +		if (isWildcardType() || other.isWildcardType()) {, +			return true;, +		}, +		else if (this.type.equals(other.type)) {, +			if (this.subtype.equals(other.subtype) || this.isWildcardSubtype() || other.isWildcardSubtype()) {, +				return true;, +			}, +			// application/*+xml is compatible with application/soap+xml, and vice-versa, +			int thisPlusIdx = this.subtype.indexOf('+');, +			int otherPlusIdx = other.subtype.indexOf('+');, +			if (thisPlusIdx != -1 && otherPlusIdx != -1) {, +				String thisSubtypeNoSuffix = this.subtype.substring(0, thisPlusIdx);, +				String otherSubtypeNoSuffix = other.subtype.substring(0, otherPlusIdx);, +, +				String thisSubtypeSuffix = this.subtype.substring(thisPlusIdx + 1);, +				String otherSubtypeSuffix = other.subtype.substring(otherPlusIdx + 1);, +, +				if (thisSubtypeSuffix.equals(otherSubtypeSuffix) &&, +						(WILDCARD_TYPE.equals(thisSubtypeNoSuffix) || WILDCARD_TYPE.equals(otherSubtypeNoSuffix))) {, +					return true;, +				}, +			}, +		}, +		return false;, +++ b/org.springframework.web/src/main/java/org/springframework/http/MediaType.java, +	 * includes {@code application/soap+xml}, etc. This method is non-symmetic., +		if (other == null) {, +			return false;, +		}, +		if (this.isWildcardType()) {, +			// */* includes anything, +		else if (this.type.equals(other.type)) {, +			if (this.subtype.equals(other.subtype) || this.isWildcardSubtype()) {, +		return false;, +	}, +, +	/**, +	 * Indicate whether this {@link MediaType} is compatible with the given media type., +	 *, +	 * <p>For instance, {@code text/*} is compatible with {@code text/plain}, {@code text/html}, and vice versa. In, +	 * effect, this method is similar to {@link #includes(MediaType)}, except that it's symmetric., +	 *, +	 * @param other the reference media type with which to compare, +	 * @return <code>true</code> if this media type is compatible with the given media type; <code>false</code> otherwise, +	 */, +	public boolean isCompatibleWith(MediaType other) {, +		if (other == null) {, +			return false;, +		}, +		if (isWildcardType() || other.isWildcardType()) {, +			return true;, +		}, +		else if (this.type.equals(other.type)) {, +			if (this.subtype.equals(other.subtype) || this.isWildcardSubtype() || other.isWildcardSubtype()) {, +				return true;, +			}, +			// application/*+xml is compatible with application/soap+xml, and vice-versa, +			int thisPlusIdx = this.subtype.indexOf('+');, +			int otherPlusIdx = other.subtype.indexOf('+');, +			if (thisPlusIdx != -1 && otherPlusIdx != -1) {, +				String thisSubtypeNoSuffix = this.subtype.substring(0, thisPlusIdx);, +				String otherSubtypeNoSuffix = other.subtype.substring(0, otherPlusIdx);, +, +				String thisSubtypeSuffix = this.subtype.substring(thisPlusIdx + 1);, +				String otherSubtypeSuffix = other.subtype.substring(otherPlusIdx + 1);, +, +				if (thisSubtypeSuffix.equals(otherSubtypeSuffix) &&, +						(WILDCARD_TYPE.equals(thisSubtypeNoSuffix) || WILDCARD_TYPE.equals(otherSubtypeNoSuffix))) {, +					return true;, +				}, +			}, +		}, +		return false;, +++ b/org.springframework.web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java, +	 * @param mediaType the media type to read, can be {@code null} if not specified. Typically the value of a]