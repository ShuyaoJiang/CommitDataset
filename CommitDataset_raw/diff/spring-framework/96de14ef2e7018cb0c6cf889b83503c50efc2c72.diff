[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +	private final CollectionToArrayConverter helperConverter;, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.helperConverter.matches(sourceType, targetType);, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +	private final CollectionToArrayConverter helperConverter;, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.helperConverter.matches(sourceType, targetType);, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +import static org.springframework.core.convert.support.ConversionUtils.invokeConverter;, +, +import org.springframework.core.convert.converter.ConditionalGenericConverter;, +final class ArrayToCollectionConverter implements ConditionalGenericConverter {, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.conversionService.canConvert(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor());, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +	private final CollectionToArrayConverter helperConverter;, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.helperConverter.matches(sourceType, targetType);, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +import static org.springframework.core.convert.support.ConversionUtils.invokeConverter;, +, +import org.springframework.core.convert.converter.ConditionalGenericConverter;, +final class ArrayToCollectionConverter implements ConditionalGenericConverter {, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.conversionService.canConvert(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor());, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToMapConverter.java, +import org.springframework.core.convert.converter.ConditionalGenericConverter;, +final class ArrayToMapConverter implements ConditionalGenericConverter {, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.helperConverter.matches(sourceType, targetType);, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +	private final CollectionToArrayConverter helperConverter;, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.helperConverter.matches(sourceType, targetType);, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +import static org.springframework.core.convert.support.ConversionUtils.invokeConverter;, +, +import org.springframework.core.convert.converter.ConditionalGenericConverter;, +final class ArrayToCollectionConverter implements ConditionalGenericConverter {, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.conversionService.canConvert(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor());, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToMapConverter.java, +import org.springframework.core.convert.converter.ConditionalGenericConverter;, +final class ArrayToMapConverter implements ConditionalGenericConverter {, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.helperConverter.matches(sourceType, targetType);, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectConverter.java, +import org.springframework.core.convert.converter.ConditionalGenericConverter;, +final class ArrayToObjectConverter implements ConditionalGenericConverter {, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.helperConverter.matches(sourceType, targetType);, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToArrayConverter.java, +	private final CollectionToArrayConverter helperConverter;, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.helperConverter.matches(sourceType, targetType);, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToCollectionConverter.java, +import static org.springframework.core.convert.support.ConversionUtils.invokeConverter;, +, +import org.springframework.core.convert.converter.ConditionalGenericConverter;, +final class ArrayToCollectionConverter implements ConditionalGenericConverter {, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.conversionService.canConvert(sourceType.getElementTypeDescriptor(), targetType.getElementTypeDescriptor());, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToMapConverter.java, +import org.springframework.core.convert.converter.ConditionalGenericConverter;, +final class ArrayToMapConverter implements ConditionalGenericConverter {, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.helperConverter.matches(sourceType, targetType);, +	}, +, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ArrayToObjectConverter.java, +import org.springframework.core.convert.converter.ConditionalGenericConverter;, +final class ArrayToObjectConverter implements ConditionalGenericConverter {, +	public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return this.helperConverter.matches(sourceType, targetType);, +	}]