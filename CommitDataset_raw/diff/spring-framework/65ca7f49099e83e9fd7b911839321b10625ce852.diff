[+++ b/spring-beans/src/test/java/org/springframework/beans/factory/DefaultListableBeanFactoryTests.java, +		Assume.group(TestGroup.PERFORMANCE);, +		Assume.group(TestGroup.PERFORMANCE);, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/DefaultListableBeanFactoryTests.java, +		Assume.group(TestGroup.PERFORMANCE);, +		Assume.group(TestGroup.PERFORMANCE);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/GeneratedKeyHolder.java, + * The standard implementation of the {@link KeyHolder} interface, to be used for, + * <p>Create an instance of this class for each insert operation, and pass it, + * to the corresponding {@link org.springframework.jdbc.core.JdbcTemplate} or, + * {@link org.springframework.jdbc.object.SqlUpdate} methods., +++ b/spring-beans/src/test/java/org/springframework/beans/factory/DefaultListableBeanFactoryTests.java, +		Assume.group(TestGroup.PERFORMANCE);, +		Assume.group(TestGroup.PERFORMANCE);, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/GeneratedKeyHolder.java, + * The standard implementation of the {@link KeyHolder} interface, to be used for, + * <p>Create an instance of this class for each insert operation, and pass it, + * to the corresponding {@link org.springframework.jdbc.core.JdbcTemplate} or, + * {@link org.springframework.jdbc.object.SqlUpdate} methods., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/KeyHolder.java, + * Copyright 2002-2018 the original author or authors., +	 * @return the generated key as a number, +	 * @throws InvalidDataAccessApiUsageException if multiple keys are encountered, +	 * Retrieve the first map of keys., +	 * <p>If there are multiple entries in the list (meaning that multiple rows, +	 * had keys returned), then an InvalidDataAccessApiUsageException is thrown., +	 * @return the Map of generated keys for a single row, +	 * <p>Can be used for extracting keys for multiple rows (an unusual case),, +	 * @return the List for the generated keys, with each entry representing, +	 * an individual row through a Map of column names and key values]