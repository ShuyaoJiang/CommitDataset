[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.java, + * Copyright 2002-2013 the original author or authors., +					// Service locator for a specific bean name, +					// Service locator for a bean type, +					return beanFactory.getBean(serviceLocatorMethodReturnType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.java, + * Copyright 2002-2013 the original author or authors., +					// Service locator for a specific bean name, +					// Service locator for a bean type, +					return beanFactory.getBean(serviceLocatorMethodReturnType);, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryUtils.java, + * Copyright 2002-2013 the original author or authors., +	 * persistence unit, provided that a discovered EntityManagerFactory, +	 * <p>If no unit name has been given, this method will search for a default, +	 * EntityManagerFactory through {@link ListableBeanFactory#getBean(Class)}., +			// Find unique EntityManagerFactory bean in the context, falling back to parent contexts., +			return beanFactory.getBean(EntityManagerFactory.class);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.java, + * Copyright 2002-2013 the original author or authors., +					// Service locator for a specific bean name, +					// Service locator for a bean type, +					return beanFactory.getBean(serviceLocatorMethodReturnType);, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryUtils.java, + * Copyright 2002-2013 the original author or authors., +	 * persistence unit, provided that a discovered EntityManagerFactory, +	 * <p>If no unit name has been given, this method will search for a default, +	 * EntityManagerFactory through {@link ListableBeanFactory#getBean(Class)}., +			// Find unique EntityManagerFactory bean in the context, falling back to parent contexts., +			return beanFactory.getBean(EntityManagerFactory.class);, +++ b/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java, + * Copyright 2002-2013 the original author or authors., +			return this.beanFactory.getBean(PlatformTransactionManager.class);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/ServiceLocatorFactoryBean.java, + * Copyright 2002-2013 the original author or authors., +					// Service locator for a specific bean name, +					// Service locator for a bean type, +					return beanFactory.getBean(serviceLocatorMethodReturnType);, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryUtils.java, + * Copyright 2002-2013 the original author or authors., +	 * persistence unit, provided that a discovered EntityManagerFactory, +	 * <p>If no unit name has been given, this method will search for a default, +	 * EntityManagerFactory through {@link ListableBeanFactory#getBean(Class)}., +			// Find unique EntityManagerFactory bean in the context, falling back to parent contexts., +			return beanFactory.getBean(EntityManagerFactory.class);, +++ b/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java, + * Copyright 2002-2013 the original author or authors., +			return this.beanFactory.getBean(PlatformTransactionManager.class);, +++ b/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionProxyFactoryBean.java, + * Copyright 2002-2013 the original author or authors., +	 * {@link PlatformTransactionManager} will be fetched from the BeanFactory., +	 * @see org.springframework.beans.factory.BeanFactory#getBean(Class)]