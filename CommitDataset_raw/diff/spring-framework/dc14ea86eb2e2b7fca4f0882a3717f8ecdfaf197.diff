[+++ b/spring-context/src/test/java/org/springframework/context/annotation/ImportAwareTests.java, + * Copyright 2002-2019 the original author or authors., +import java.util.Arrays;, +	public void importRegistrar() {, +	public void importRegistrarWithImport() {, +	@Test, +	public void importAwareWithAnnotationAttributes() {, +		new AnnotationConfigApplicationContext(ApplicationConfiguration.class);, +	}, +, +, +	@Configuration, +	@EnableFeature(policies = {, +			@EnableFeature.FeaturePolicy(name = "one"),, +			@EnableFeature.FeaturePolicy(name = "two"), +	}), +	public static class ApplicationConfiguration {, +	}, +, +, +	@Target(ElementType.TYPE), +	@Retention(RetentionPolicy.RUNTIME), +	@Import(FeatureConfiguration.class), +	public @interface EnableFeature {, +, +		FeaturePolicy[] policies() default {};, +, +		@interface FeaturePolicy {, +, +			String name();, +		}, +	}, +, +, +	@Configuration, +	public static class FeatureConfiguration implements ImportAware {, +, +		@Override, +		public void setImportMetadata(AnnotationMetadata annotationMetadata) {, +			AnnotationAttributes enableFeatureAttributes =, +					AnnotationAttributes.fromMap(annotationMetadata.getAnnotationAttributes(EnableFeature.class.getName()));, +			assertEquals(EnableFeature.class, enableFeatureAttributes.annotationType());, +			Arrays.stream(enableFeatureAttributes.getAnnotationArray("policies")).forEach(featurePolicyAttributes ->, +					assertEquals(EnableFeature.FeaturePolicy.class, featurePolicyAttributes.annotationType()));, +		}, +	}, +, +++ b/spring-context/src/test/java/org/springframework/context/annotation/ImportAwareTests.java, + * Copyright 2002-2019 the original author or authors., +import java.util.Arrays;, +	public void importRegistrar() {, +	public void importRegistrarWithImport() {, +	@Test, +	public void importAwareWithAnnotationAttributes() {, +		new AnnotationConfigApplicationContext(ApplicationConfiguration.class);, +	}, +, +, +	@Configuration, +	@EnableFeature(policies = {, +			@EnableFeature.FeaturePolicy(name = "one"),, +			@EnableFeature.FeaturePolicy(name = "two"), +	}), +	public static class ApplicationConfiguration {, +	}, +, +, +	@Target(ElementType.TYPE), +	@Retention(RetentionPolicy.RUNTIME), +	@Import(FeatureConfiguration.class), +	public @interface EnableFeature {, +, +		FeaturePolicy[] policies() default {};, +, +		@interface FeaturePolicy {, +, +			String name();, +		}, +	}, +, +, +	@Configuration, +	public static class FeatureConfiguration implements ImportAware {, +, +		@Override, +		public void setImportMetadata(AnnotationMetadata annotationMetadata) {, +			AnnotationAttributes enableFeatureAttributes =, +					AnnotationAttributes.fromMap(annotationMetadata.getAnnotationAttributes(EnableFeature.class.getName()));, +			assertEquals(EnableFeature.class, enableFeatureAttributes.annotationType());, +			Arrays.stream(enableFeatureAttributes.getAnnotationArray("policies")).forEach(featurePolicyAttributes ->, +					assertEquals(EnableFeature.FeaturePolicy.class, featurePolicyAttributes.annotationType()));, +		}, +	}, +, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractMergedAnnotation.java, +		return asMap(mergedAnnotation -> new AnnotationAttributes(mergedAnnotation.getType()), adaptations);]