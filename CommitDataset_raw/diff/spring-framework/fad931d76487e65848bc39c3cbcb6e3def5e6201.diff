[+++ b/spring-orm/src/main/java/org/springframework/orm/hibernate5/LocalSessionFactoryBuilder.java, +		// Hibernate 5.1/5.2: manually enforce connection release mode ON_CLOSE (the former default), +		try {, +			// Try Hibernate 5.2, +			AvailableSettings.class.getField("CONNECTION_HANDLING");, +		}, +		catch (NoSuchFieldException ex) {, +			// Try Hibernate 5.1, +			try {, +				AvailableSettings.class.getField("ACQUIRE_CONNECTIONS");, +				getProperties().put("hibernate.connection.release_mode", "ON_CLOSE");, +			}, +			catch (NoSuchFieldException ex2) {, +				// on Hibernate 5.0.x or lower - no need to change the default there, +			}, +		}, +		// Hibernate 5.1/5.2: manually enforce connection release mode AFTER_STATEMENT (the JTA default), +		try {, +			// Try Hibernate 5.2, +			AvailableSettings.class.getField("CONNECTION_HANDLING");, +		}, +		catch (NoSuchFieldException ex) {, +			// Try Hibernate 5.1, +			try {, +				AvailableSettings.class.getField("ACQUIRE_CONNECTIONS");, +				getProperties().put("hibernate.connection.release_mode", "AFTER_STATEMENT");, +			}, +			catch (NoSuchFieldException ex2) {, +				// on Hibernate 5.0.x or lower - no need to change the default there, +			}, +		}, +++ b/spring-orm/src/main/java/org/springframework/orm/hibernate5/LocalSessionFactoryBuilder.java, +		// Hibernate 5.1/5.2: manually enforce connection release mode ON_CLOSE (the former default), +		try {, +			// Try Hibernate 5.2, +			AvailableSettings.class.getField("CONNECTION_HANDLING");, +		}, +		catch (NoSuchFieldException ex) {, +			// Try Hibernate 5.1, +			try {, +				AvailableSettings.class.getField("ACQUIRE_CONNECTIONS");, +				getProperties().put("hibernate.connection.release_mode", "ON_CLOSE");, +			}, +			catch (NoSuchFieldException ex2) {, +				// on Hibernate 5.0.x or lower - no need to change the default there, +			}, +		}, +		// Hibernate 5.1/5.2: manually enforce connection release mode AFTER_STATEMENT (the JTA default), +		try {, +			// Try Hibernate 5.2, +			AvailableSettings.class.getField("CONNECTION_HANDLING");, +		}, +		catch (NoSuchFieldException ex) {, +			// Try Hibernate 5.1, +			try {, +				AvailableSettings.class.getField("ACQUIRE_CONNECTIONS");, +				getProperties().put("hibernate.connection.release_mode", "AFTER_STATEMENT");, +			}, +			catch (NoSuchFieldException ex2) {, +				// on Hibernate 5.0.x or lower - no need to change the default there, +			}, +		}, +++ b/spring-orm/src/main/java/org/springframework/orm/jpa/vendor/HibernateJpaVendorAdapter.java, +import org.hibernate.cfg.AvailableSettings;, +import org.hibernate.dialect.DerbyTenSevenDialect;, +import org.hibernate.dialect.MySQL5Dialect;, +import org.hibernate.dialect.Oracle12cDialect;, +import org.hibernate.dialect.PostgreSQL95Dialect;, +import org.hibernate.dialect.SQLServer2012Dialect;, +import org.hibernate.dialect.SybaseDialect;, + * backwards-compatible with Hibernate 4.3 at runtime on a best-effort basis., +			// Hibernate 5.1/5.2: manually enforce connection release mode ON_CLOSE (the former default), +			try {, +				// Try Hibernate 5.2, +				AvailableSettings.class.getField("CONNECTION_HANDLING");, +			catch (NoSuchFieldException ex) {, +				// Try Hibernate 5.1, +				try {, +					AvailableSettings.class.getField("ACQUIRE_CONNECTIONS");, +					jpaProperties.put("hibernate.connection.release_mode", "ON_CLOSE");, +				}, +				catch (NoSuchFieldException ex2) {, +					// on Hibernate 5.0.x or lower - no need to change the default there, +				}, +			}, +		}, +			case DERBY: return DerbyTenSevenDialect.class;, +			case MYSQL: return MySQL5Dialect.class;, +			case ORACLE: return Oracle12cDialect.class;, +			case POSTGRESQL: return PostgreSQL95Dialect.class;, +			case SQL_SERVER: return SQLServer2012Dialect.class;, +			case SYBASE: return SybaseDialect.class;]