[+++ b/org.springframework.context.support/.settings/org.eclipse.jdt.ui.prefs, +#Wed Mar 31 18:40:01 EEST 2010, +formatter_profile=_Spring, +++ b/org.springframework.context.support/.settings/org.eclipse.jdt.ui.prefs, +#Wed Mar 31 18:40:01 EEST 2010, +formatter_profile=_Spring, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/KeyGenerator.java, +import java.lang.reflect.Method;, +, + * Cache 'key' extractor. Used for creating a key based on the given method, + * (used as context) and its parameter., +	K extract(Method method, Object... params);, +++ b/org.springframework.context.support/.settings/org.eclipse.jdt.ui.prefs, +#Wed Mar 31 18:40:01 EEST 2010, +formatter_profile=_Spring, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/KeyGenerator.java, +import java.lang.reflect.Method;, +, + * Cache 'key' extractor. Used for creating a key based on the given method, + * (used as context) and its parameter., +	K extract(Method method, Object... params);, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/AnnotationCacheDefinitionSource.java, +			CacheDefinition attr = annotationParser.parseCacheAnnotation(ae);, +++ b/org.springframework.context.support/.settings/org.eclipse.jdt.ui.prefs, +#Wed Mar 31 18:40:01 EEST 2010, +formatter_profile=_Spring, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/KeyGenerator.java, +import java.lang.reflect.Method;, +, + * Cache 'key' extractor. Used for creating a key based on the given method, + * (used as context) and its parameter., +	K extract(Method method, Object... params);, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/AnnotationCacheDefinitionSource.java, +			CacheDefinition attr = annotationParser.parseCacheAnnotation(ae);, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/CacheAnnotationParser.java, +	CacheDefinition parseCacheAnnotation(AnnotatedElement ae);, +++ b/org.springframework.context.support/.settings/org.eclipse.jdt.ui.prefs, +#Wed Mar 31 18:40:01 EEST 2010, +formatter_profile=_Spring, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/KeyGenerator.java, +import java.lang.reflect.Method;, +, + * Cache 'key' extractor. Used for creating a key based on the given method, + * (used as context) and its parameter., +	K extract(Method method, Object... params);, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/AnnotationCacheDefinitionSource.java, +			CacheDefinition attr = annotationParser.parseCacheAnnotation(ae);, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/CacheAnnotationParser.java, +	CacheDefinition parseCacheAnnotation(AnnotatedElement ae);, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/CacheEvict.java, +	String[] value();, +	 * Whether or not all the entries inside the cache(s) are removed or not. By, +	 * default, only the value under the associated key is removed., +++ b/org.springframework.context.support/.settings/org.eclipse.jdt.ui.prefs, +#Wed Mar 31 18:40:01 EEST 2010, +formatter_profile=_Spring, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/KeyGenerator.java, +import java.lang.reflect.Method;, +, + * Cache 'key' extractor. Used for creating a key based on the given method, + * (used as context) and its parameter., +	K extract(Method method, Object... params);, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/AnnotationCacheDefinitionSource.java, +			CacheDefinition attr = annotationParser.parseCacheAnnotation(ae);, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/CacheAnnotationParser.java, +	CacheDefinition parseCacheAnnotation(AnnotatedElement ae);, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/CacheEvict.java, +	String[] value();, +	 * Whether or not all the entries inside the cache(s) are removed or not. By, +	 * default, only the value under the associated key is removed., +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/Cacheable.java, +	 * Name of the caches in which the update takes place., +	 * <p>, +	 * May be used to determine the target cache (or caches), matching the, +	 * qualifier value (or the bean name(s)) of (a) specific bean definition., +	String[] value();, +++ b/org.springframework.context.support/.settings/org.eclipse.jdt.ui.prefs, +#Wed Mar 31 18:40:01 EEST 2010, +formatter_profile=_Spring, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/KeyGenerator.java, +import java.lang.reflect.Method;, +, + * Cache 'key' extractor. Used for creating a key based on the given method, + * (used as context) and its parameter., +	K extract(Method method, Object... params);, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/AnnotationCacheDefinitionSource.java, +			CacheDefinition attr = annotationParser.parseCacheAnnotation(ae);, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/CacheAnnotationParser.java, +	CacheDefinition parseCacheAnnotation(AnnotatedElement ae);, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/CacheEvict.java, +	String[] value();, +	 * Whether or not all the entries inside the cache(s) are removed or not. By, +	 * default, only the value under the associated key is removed., +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/Cacheable.java, +	 * Name of the caches in which the update takes place., +	 * <p>, +	 * May be used to determine the target cache (or caches), matching the, +	 * qualifier value (or the bean name(s)) of (a) specific bean definition., +	String[] value();, +++ b/org.springframework.context.support/src/main/java/org/springframework/cache/annotation/SpringCachingAnnotationParser.java]