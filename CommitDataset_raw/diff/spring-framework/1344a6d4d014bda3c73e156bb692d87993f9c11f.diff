[+++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +								cause.getCause().printStackTrace();, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +								cause.getCause().printStackTrace();, +++ b/org.springframework.context/src/test/java/org/springframework/ui/binding/support/GenericBinderTests.java, +	@Ignore, +	public void bindToListSingleStringNoListFormatter() {, +		binder.addBinding("addresses");, +		//binder.registerFormatter(new GenericCollectionPropertyType(List.class, Address.class), new AddressListFormatter());, +		Map<String, String> values = new LinkedHashMap<String, String>();, +		values.put("addresses", "4655 Macy Lane:Melbourne:FL:35452,1234 Rostock Circle:Palm Bay:FL:32901,1977 Bel Aire Estates:Coker:AL:12345");		, +		BindingResults results = binder.bind(values);, +		Assert.assertEquals(3, bean.addresses.size());, +		assertEquals("4655 Macy Lane", bean.addresses.get(0).street);, +		assertEquals("Melbourne", bean.addresses.get(0).city);, +		assertEquals("FL", bean.addresses.get(0).state);, +		assertEquals("35452", bean.addresses.get(0).zip);, +		assertEquals("1234 Rostock Circle", bean.addresses.get(1).street);, +		assertEquals("Palm Bay", bean.addresses.get(1).city);, +		assertEquals("FL", bean.addresses.get(1).state);, +		assertEquals("32901", bean.addresses.get(1).zip);, +		assertEquals("1977 Bel Aire Estates", bean.addresses.get(2).street);, +		assertEquals("Coker", bean.addresses.get(2).city);, +		assertEquals("AL", bean.addresses.get(2).state);, +		assertEquals("12345", bean.addresses.get(2).zip);, +	}, +	, +	@Test, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +								cause.getCause().printStackTrace();, +++ b/org.springframework.context/src/test/java/org/springframework/ui/binding/support/GenericBinderTests.java, +	@Ignore, +	public void bindToListSingleStringNoListFormatter() {, +		binder.addBinding("addresses");, +		//binder.registerFormatter(new GenericCollectionPropertyType(List.class, Address.class), new AddressListFormatter());, +		Map<String, String> values = new LinkedHashMap<String, String>();, +		values.put("addresses", "4655 Macy Lane:Melbourne:FL:35452,1234 Rostock Circle:Palm Bay:FL:32901,1977 Bel Aire Estates:Coker:AL:12345");		, +		BindingResults results = binder.bind(values);, +		Assert.assertEquals(3, bean.addresses.size());, +		assertEquals("4655 Macy Lane", bean.addresses.get(0).street);, +		assertEquals("Melbourne", bean.addresses.get(0).city);, +		assertEquals("FL", bean.addresses.get(0).state);, +		assertEquals("35452", bean.addresses.get(0).zip);, +		assertEquals("1234 Rostock Circle", bean.addresses.get(1).street);, +		assertEquals("Palm Bay", bean.addresses.get(1).city);, +		assertEquals("FL", bean.addresses.get(1).state);, +		assertEquals("32901", bean.addresses.get(1).zip);, +		assertEquals("1977 Bel Aire Estates", bean.addresses.get(2).street);, +		assertEquals("Coker", bean.addresses.get(2).city);, +		assertEquals("AL", bean.addresses.get(2).state);, +		assertEquals("12345", bean.addresses.get(2).zip);, +	}, +	, +	@Test, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionFailedException.java, + * @since 3.0, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +								cause.getCause().printStackTrace();, +++ b/org.springframework.context/src/test/java/org/springframework/ui/binding/support/GenericBinderTests.java, +	@Ignore, +	public void bindToListSingleStringNoListFormatter() {, +		binder.addBinding("addresses");, +		//binder.registerFormatter(new GenericCollectionPropertyType(List.class, Address.class), new AddressListFormatter());, +		Map<String, String> values = new LinkedHashMap<String, String>();, +		values.put("addresses", "4655 Macy Lane:Melbourne:FL:35452,1234 Rostock Circle:Palm Bay:FL:32901,1977 Bel Aire Estates:Coker:AL:12345");		, +		BindingResults results = binder.bind(values);, +		Assert.assertEquals(3, bean.addresses.size());, +		assertEquals("4655 Macy Lane", bean.addresses.get(0).street);, +		assertEquals("Melbourne", bean.addresses.get(0).city);, +		assertEquals("FL", bean.addresses.get(0).state);, +		assertEquals("35452", bean.addresses.get(0).zip);, +		assertEquals("1234 Rostock Circle", bean.addresses.get(1).street);, +		assertEquals("Palm Bay", bean.addresses.get(1).city);, +		assertEquals("FL", bean.addresses.get(1).state);, +		assertEquals("32901", bean.addresses.get(1).zip);, +		assertEquals("1977 Bel Aire Estates", bean.addresses.get(2).street);, +		assertEquals("Coker", bean.addresses.get(2).city);, +		assertEquals("AL", bean.addresses.get(2).state);, +		assertEquals("12345", bean.addresses.get(2).zip);, +	}, +	, +	@Test, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConversionFailedException.java, + * @since 3.0, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/ConvertException.java, + * @since 3.0 , +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericBinder.java, +								cause.getCause().printStackTrace();, +++ b/org.springframework.context/src/test/java/org/springframework/ui/binding/support/GenericBinderTests.java, +	@Ignore, +	public void bindToListSingleStringNoListFormatter() {, +		binder.addBinding("addresses");, +		//binder.registerFormatter(new GenericCollectionPropertyType(List.class, Address.class), new AddressListFormatter());, +		Map<String, String> values = new LinkedHashMap<String, String>();, +		values.put("addresses", "4655 Macy Lane:Melbourne:FL:35452,1234 Rostock Circle:Palm Bay:FL:32901,1977 Bel Aire Estates:Coker:AL:12345");		, +		BindingResults results = binder.bind(values);, +		Assert.assertEquals(3, bean.addresses.size());, +		assertEquals("4655 Macy Lane", bean.addresses.get(0).street);, +		assertEquals("Melbourne", bean.addresses.get(0).city);, +		assertEquals("FL", bean.addresses.get(0).state);]