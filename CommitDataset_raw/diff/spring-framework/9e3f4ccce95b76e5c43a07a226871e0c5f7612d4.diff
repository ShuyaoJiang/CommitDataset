[+++ b/build.gradle, +	ext.kotlinVersion = '1.1.2-3', +	ext.annotationApiVersion   = "1.3", +	ext.caffeineVersion        = "2.5.0", +	ext.ehcacheVersion         = "2.10.4", +	ext.groovyVersion          = "2.4.11", +	ext.jackson2Version        = "2.9.0.pr3", +	ext.jettyVersion           = "9.4.5.v20170502", +	ext.nettyVersion           = "4.1.11.Final", +	ext.niomultipartVersion    = "1.0.2", +	ext.okhttp3Version         = "3.7.0", +	ext.poiVersion             = "3.16", +	ext.protobufVersion        = "3.3.0", +	ext.quartzVersion          = "2.3.0", +	ext.reactorVersion         = "Bismuth-M1", +	ext.romeVersion            = "1.7.2", +	ext.rxjavaVersion          = '1.3.0', +	ext.rxjava2Version         = '2.1.0', +	ext.tomcatVersion          = "8.5.14", +	ext.undertowVersion        = "1.4.14.Final", +			mavenBom "io.netty:netty-bom:${nettyVersion}", +		duplicatesStrategy = DuplicatesStrategy.EXCLUDE, +project("spring-jcl") {, +	description = "Spring Commons Logging Bridge", +, +	dependencies {, +		optional("org.apache.logging.log4j:log4j-api:${log4jVersion}"), +		optional("org.slf4j:slf4j-api:${slf4jVersion}"), +	}, +}, +, +		compile(project(":spring-jcl")), +		optional("io.netty:netty-buffer"), +		optional("io.netty:netty-all"), +		testCompile("io.netty:netty-all"), +		optional("com.h2database:h2:1.4.195"), +		optional("org.synchronoss.cloud:nio-multipart-parser:${niomultipartVersion}"), +		optional("io.netty:netty-buffer")  // temporarily for JsonObjectDecoder, +		optional("io.netty:netty-all"), +		optional("javax.json.bind:javax.json.bind-api:1.0.0-M2"), +		testCompile("com.fasterxml.jackson.datatype:jackson-datatype-joda:${jackson2Version}"), +		testCompile("org.jetbrains.kotlin:kotlin-script-runtime:${kotlinVersion}"), +		testRuntime("org.jetbrains.kotlin:kotlin-script-util:${kotlinVersion}"), +		testRuntime("org.jetbrains.kotlin:kotlin-compiler:${kotlinVersion}"), +		testRuntime("org.jruby:jruby:9.1.8.0"), +		testRuntime("org.python:jython-standalone:2.5.3"), +		testRuntime("org.webjars:underscorejs:1.8.3"), +		testRuntime("org.synchronoss.cloud:nio-multipart-parser:${niomultipartVersion}"), +		testRuntime("org.jetbrains.kotlin:kotlin-compiler:${kotlinVersion}"), +		testRuntime("org.jruby:jruby:9.1.8.0"), +		testRuntime("org.python:jython-standalone:2.5.3"), +		testCompile("io.netty:netty-all"), +		optional("org.seleniumhq.selenium:selenium-java:3.4.0") {, +		optional("org.skyscreamer:jsonassert:1.5.0"), +		// Pull in the latest JUnit 5 Launcher API and the Vintage engine as well, +		// so that we can run JUnit 4 tests in IntelliJ IDEA., +++ b/build.gradle, +	ext.kotlinVersion = '1.1.2-3', +	ext.annotationApiVersion   = "1.3", +	ext.caffeineVersion        = "2.5.0", +	ext.ehcacheVersion         = "2.10.4", +	ext.groovyVersion          = "2.4.11", +	ext.jackson2Version        = "2.9.0.pr3", +	ext.jettyVersion           = "9.4.5.v20170502", +	ext.nettyVersion           = "4.1.11.Final", +	ext.niomultipartVersion    = "1.0.2", +	ext.okhttp3Version         = "3.7.0", +	ext.poiVersion             = "3.16", +	ext.protobufVersion        = "3.3.0", +	ext.quartzVersion          = "2.3.0", +	ext.reactorVersion         = "Bismuth-M1", +	ext.romeVersion            = "1.7.2", +	ext.rxjavaVersion          = '1.3.0', +	ext.rxjava2Version         = '2.1.0', +	ext.tomcatVersion          = "8.5.14", +	ext.undertowVersion        = "1.4.14.Final", +			mavenBom "io.netty:netty-bom:${nettyVersion}", +		duplicatesStrategy = DuplicatesStrategy.EXCLUDE, +project("spring-jcl") {, +	description = "Spring Commons Logging Bridge", +, +	dependencies {, +		optional("org.apache.logging.log4j:log4j-api:${log4jVersion}"), +		optional("org.slf4j:slf4j-api:${slf4jVersion}"), +	}, +}, +, +		compile(project(":spring-jcl")), +		optional("io.netty:netty-buffer"), +		optional("io.netty:netty-all"), +		testCompile("io.netty:netty-all"), +		optional("com.h2database:h2:1.4.195"), +		optional("org.synchronoss.cloud:nio-multipart-parser:${niomultipartVersion}"), +		optional("io.netty:netty-buffer")  // temporarily for JsonObjectDecoder, +		optional("io.netty:netty-all"), +		optional("javax.json.bind:javax.json.bind-api:1.0.0-M2"), +		testCompile("com.fasterxml.jackson.datatype:jackson-datatype-joda:${jackson2Version}"), +		testCompile("org.jetbrains.kotlin:kotlin-script-runtime:${kotlinVersion}"), +		testRuntime("org.jetbrains.kotlin:kotlin-script-util:${kotlinVersion}"), +		testRuntime("org.jetbrains.kotlin:kotlin-compiler:${kotlinVersion}")]