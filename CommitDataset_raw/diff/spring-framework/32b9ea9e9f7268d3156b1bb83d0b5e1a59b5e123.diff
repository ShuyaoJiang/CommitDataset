[+++ b/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncUtils.java, + * Copyright 2002-2015 the original author or authors., +, + * @author Juergen Hoeller, +	// Determine whether Servlet 3.0's ServletRequest.startAsync method is available, +	private static final boolean startAsyncAvailable = ClassUtils.hasMethod(ServletRequest.class, "startAsync");, +	 * Create an AsyncWebRequest instance. By default, an instance of, +	 * {@link StandardServletAsyncWebRequest} gets created when running in, +	 * Servlet 3.0 (or higher) environment - as a fallback, an instance, +	 * of {@link NoSupportAsyncWebRequest} will be returned., +	 * @return an AsyncWebRequest instance (never {@code null}), +		return (startAsyncAvailable ? AsyncWebRequestFactory.createStandardAsyncWebRequest(request, response) :, +				new NoSupportAsyncWebRequest(request, response));, +, +	/**, +	 * Inner class to avoid a hard dependency on the Servlet 3.0 API., +	 */, +	private static class AsyncWebRequestFactory {, +, +		public static AsyncWebRequest createStandardAsyncWebRequest(HttpServletRequest request, HttpServletResponse response) {, +			return new StandardServletAsyncWebRequest(request, response);]