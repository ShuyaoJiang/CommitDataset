[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanWrapper.java, +	 * Set whether this BeanWrapper should attempt to "auto-grow" a nested path that contains a null value., +	 * <p>If "true", a null path location will be populated with a default object value and traversed, +	 * enables auto-growth of collection elements when accessing an out-of-bounds index., +	 * <p>Default is "false" on a plain BeanWrapper., +++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanWrapper.java, +	 * Set whether this BeanWrapper should attempt to "auto-grow" a nested path that contains a null value., +	 * <p>If "true", a null path location will be populated with a default object value and traversed, +	 * enables auto-growth of collection elements when accessing an out-of-bounds index., +	 * <p>Default is "false" on a plain BeanWrapper., +++ b/org.springframework.context/src/main/java/org/springframework/validation/BeanPropertyBindingResult.java, +	private final boolean autoGrowNestedPaths;, +, +		this(target, objectName, true);, +	}, +, +	/**, +	 * Creates a new instance of the {@link BeanPropertyBindingResult} class., +	 * @param target the target bean to bind onto, +	 * @param objectName the name of the target object, +	 * @param autoGrowNestedPaths whether to "auto-grow" a nested path that contains a null value, +	 */, +	public BeanPropertyBindingResult(Object target, String objectName, boolean autoGrowNestedPaths) {, +		this.autoGrowNestedPaths = autoGrowNestedPaths;, +			this.beanWrapper.setAutoGrowNestedPaths(this.autoGrowNestedPaths);, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanWrapper.java, +	 * Set whether this BeanWrapper should attempt to "auto-grow" a nested path that contains a null value., +	 * <p>If "true", a null path location will be populated with a default object value and traversed, +	 * enables auto-growth of collection elements when accessing an out-of-bounds index., +	 * <p>Default is "false" on a plain BeanWrapper., +++ b/org.springframework.context/src/main/java/org/springframework/validation/BeanPropertyBindingResult.java, +	private final boolean autoGrowNestedPaths;, +, +		this(target, objectName, true);, +	}, +, +	/**, +	 * Creates a new instance of the {@link BeanPropertyBindingResult} class., +	 * @param target the target bean to bind onto, +	 * @param objectName the name of the target object, +	 * @param autoGrowNestedPaths whether to "auto-grow" a nested path that contains a null value, +	 */, +	public BeanPropertyBindingResult(Object target, String objectName, boolean autoGrowNestedPaths) {, +		this.autoGrowNestedPaths = autoGrowNestedPaths;, +			this.beanWrapper.setAutoGrowNestedPaths(this.autoGrowNestedPaths);, +++ b/org.springframework.context/src/main/java/org/springframework/validation/DataBinder.java, +	private boolean autoGrowNestedPaths = true;, +, +		this.bindingResult = new BeanPropertyBindingResult(getTarget(), getObjectName(), isAutoGrowNestedPaths());, +	 * Set whether this binder should attempt to "auto-grow" a nested path that contains a null value., +	 * <p>If "true", a null path location will be populated with a default object value and traversed, +	 * instead of resulting in an exception. This flag also enables auto-growth of collection elements, +	 * when accessing an out-of-bounds index., +	 * <p>Default is "true" on a standard DataBinder., +	 * @see org.springframework.beans.BeanWrapper#setAutoGrowNestedPaths, +	 */, +	public void setAutoGrowNestedPaths(boolean autoGrowNestedPaths) {, +		this.autoGrowNestedPaths = autoGrowNestedPaths;, +	}, +, +	/**, +	 * Return whether "auto-growing" of nested paths has been activated., +	 */, +	public boolean isAutoGrowNestedPaths() {, +		return this.autoGrowNestedPaths;, +	}, +, +	/**]