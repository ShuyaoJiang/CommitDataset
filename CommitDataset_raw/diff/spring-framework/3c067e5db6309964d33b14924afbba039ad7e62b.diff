[+++ b/org.springframework.core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +import java.util.WeakHashMap;, +	private static final Map<Class, Boolean> annotatedInterfaceCache = new WeakHashMap<Class, Boolean>();, +, +			if (isInterfaceWithAnnotatedMethods(iface)) {, +					Method equivalentMethod = iface.getMethod(method.getName(), method.getParameterTypes());, +				catch (NoSuchMethodException ex) {, +					// Skip this interface - it doesn't have the method..., +		}, +	private static boolean isInterfaceWithAnnotatedMethods(Class<?> iface) {, +		synchronized (annotatedInterfaceCache) {, +			Boolean flag = annotatedInterfaceCache.get(iface);, +			if (flag != null) {, +				return flag;, +			}, +			boolean found = false;, +			for (Method ifcMethod : iface.getMethods()) {, +				if (ifcMethod.getAnnotations().length > 0) {, +					found = true;, +					break;, +				}, +			}, +			annotatedInterfaceCache.put(iface, found);, +			return found;, +		}, +	}, +, +	 * {@link java.lang.annotation.Inherited inherited} <i>as well as annotations on interfaces</i>., +		if (superClass == null || superClass == Object.class) {]