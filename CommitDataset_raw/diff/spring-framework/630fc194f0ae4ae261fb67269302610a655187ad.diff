[+++ b/spring-test/src/main/java/org/springframework/mock/http/client/MockClientHttpRequest.java, + * Copyright 2002-2017 the original author or authors., +	@Override, +	public String getMethodValue() {, +		return this.httpMethod.name();, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/MockClientHttpRequest.java, + * Copyright 2002-2017 the original author or authors., +	@Override, +	public String getMethodValue() {, +		return this.httpMethod.name();, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java, +	public String getMethodValue() {, +		return this.httpMethod.name();, +	}, +, +	@Override, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/MockClientHttpRequest.java, + * Copyright 2002-2017 the original author or authors., +	@Override, +	public String getMethodValue() {, +		return this.httpMethod.name();, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java, +	public String getMethodValue() {, +		return this.httpMethod.name();, +	}, +, +	@Override, +++ b/spring-web/src/main/java/org/springframework/http/HttpRequest.java, + * Copyright 2002-2017 the original author or authors., +	default HttpMethod getMethod() {, +		return HttpMethod.resolve(getMethodValue());, +	}, +, +	/**, +	 * Return the HTTP method of the request as a String, +	 * @return the HTTP method as a String, +	 */, +	String getMethodValue();, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/MockClientHttpRequest.java, + * Copyright 2002-2017 the original author or authors., +	@Override, +	public String getMethodValue() {, +		return this.httpMethod.name();, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java, +	public String getMethodValue() {, +		return this.httpMethod.name();, +	}, +, +	@Override, +++ b/spring-web/src/main/java/org/springframework/http/HttpRequest.java, + * Copyright 2002-2017 the original author or authors., +	default HttpMethod getMethod() {, +		return HttpMethod.resolve(getMethodValue());, +	}, +, +	/**, +	 * Return the HTTP method of the request as a String, +	 * @return the HTTP method as a String, +	 */, +	String getMethodValue();, +++ b/spring-web/src/main/java/org/springframework/http/client/BufferingClientHttpRequestWrapper.java, + * Copyright 2002-2017 the original author or authors., +	public String getMethodValue() {, +		return this.request.getMethodValue();, +	}, +, +	@Override, +++ b/spring-test/src/main/java/org/springframework/mock/http/client/MockClientHttpRequest.java, + * Copyright 2002-2017 the original author or authors., +	@Override, +	public String getMethodValue() {, +		return this.httpMethod.name();, +	}, +, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java, +	public String getMethodValue() {, +		return this.httpMethod.name();, +	}, +, +	@Override, +++ b/spring-web/src/main/java/org/springframework/http/HttpRequest.java, + * Copyright 2002-2017 the original author or authors., +	default HttpMethod getMethod() {, +		return HttpMethod.resolve(getMethodValue());, +	}, +, +	/**, +	 * Return the HTTP method of the request as a String, +	 * @return the HTTP method as a String, +	 */, +	String getMethodValue();, +++ b/spring-web/src/main/java/org/springframework/http/client/BufferingClientHttpRequestWrapper.java]