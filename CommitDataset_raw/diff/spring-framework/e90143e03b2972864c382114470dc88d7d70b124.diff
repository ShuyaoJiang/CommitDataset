[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleStreamingAsyncClientHttpRequest.java, +		return this.taskExecutor.submitListenable(new Callable<ClientHttpResponse>() {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleStreamingAsyncClientHttpRequest.java, +		return this.taskExecutor.submitListenable(new Callable<ClientHttpResponse>() {, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/client/standard/StandardWebSocketClient.java, +	 * <p>For XML configuration, see {@link WebSocketContainerFactoryBean}. For Java, +	 * configuration, use {@code ContainerProvider.getWebSocketContainer()} to obtain, +	 * <p>By default, an instance of {@code SimpleAsyncTaskExecutor} is used., +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleStreamingAsyncClientHttpRequest.java, +		return this.taskExecutor.submitListenable(new Callable<ClientHttpResponse>() {, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/client/standard/StandardWebSocketClient.java, +	 * <p>For XML configuration, see {@link WebSocketContainerFactoryBean}. For Java, +	 * configuration, use {@code ContainerProvider.getWebSocketContainer()} to obtain, +	 * <p>By default, an instance of {@code SimpleAsyncTaskExecutor} is used., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java, +	 * "https://d1fxtkz8shb9d2.cloudfront.net/sockjs-0.3.4.min.js"., +	 * However, it can also be set to point to a URL served by the application., +]