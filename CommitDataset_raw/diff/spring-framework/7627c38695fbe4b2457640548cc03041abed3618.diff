[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.java, +		InvocableHandlerMethod invocable = findExceptionHandler(handlerMethod, ex);, +					logger.debug("Invoking @ExceptionHandler method: " + invocable.getMethod());, +			catch (Throwable invocationEx) {, +				if (logger.isWarnEnabled()) {, +					logger.warn("Failed to invoke @ExceptionHandler method: " + invocable.getMethod(),, +							invocationEx);, +	protected InvocableHandlerMethod findExceptionHandler(HandlerMethod handlerMethod, Throwable exception) {, +		Method method = resolver.resolveMethodByExceptionType(exception.getClass());, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.java, +		InvocableHandlerMethod invocable = findExceptionHandler(handlerMethod, ex);, +					logger.debug("Invoking @ExceptionHandler method: " + invocable.getMethod());, +			catch (Throwable invocationEx) {, +				if (logger.isWarnEnabled()) {, +					logger.warn("Failed to invoke @ExceptionHandler method: " + invocable.getMethod(),, +							invocationEx);, +	protected InvocableHandlerMethod findExceptionHandler(HandlerMethod handlerMethod, Throwable exception) {, +		Method method = resolver.resolveMethodByExceptionType(exception.getClass());, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java, +		catch (Throwable invocationEx) {, +			if (logger.isWarnEnabled()) {, +				logger.warn("Failed to invoke @ExceptionHandler method: " + exceptionHandlerMethod, invocationEx);]