[+++ b/org.springframework.web/src/test/java/org/springframework/web/util/Log4jWebConfigurerTests.java, + * Copyright 2002-2011 the original author or authors., +import static org.junit.Assert.assertTrue;, +, +import org.junit.Test;, + * @author Sam Brannen, +public class Log4jWebConfigurerTests {, +	private static final String TESTLOG4J_PROPERTIES = "testlog4j.properties";, +	private static final String CLASSPATH_RESOURCE = "classpath:org/springframework/web/util/testlog4j.properties";, +	private static final String RELATIVE_PATH = "src/test/resources/org/springframework/web/util/testlog4j.properties";, +, +	@Test, +	public void initLoggingWithClasspathResource() {, +		initLogging(CLASSPATH_RESOURCE, false);, +	@Test, +	public void initLoggingWithClasspathResourceAndRefreshInterval() {, +		initLogging(CLASSPATH_RESOURCE, true);, +	@Test, +	public void initLoggingWithRelativeFilePath() {, +		initLogging(RELATIVE_PATH, false);, +	@Test, +	public void initLoggingWithRelativeFilePathAndRefreshInterval() {, +		initLogging(RELATIVE_PATH, true);, +	@Test, +	public void initLoggingWithUrl() {, +		URL url = Log4jWebConfigurerTests.class.getResource(TESTLOG4J_PROPERTIES);, +		initLogging(url.toString(), false);, +	@Test, +	public void initLoggingWithUrlAndRefreshInterval() {, +		URL url = Log4jWebConfigurerTests.class.getResource(TESTLOG4J_PROPERTIES);, +		initLogging(url.toString(), true);, +	@Ignore("Only works on MS Windows"), +	@Test, +	public void initLoggingWithAbsoluteFilePathAndRefreshInterval() {, +		URL url = Log4jWebConfigurerTests.class.getResource(TESTLOG4J_PROPERTIES);, +		initLogging(url.getFile(), true);, +	}, +, +	private void initLogging(String location, boolean refreshInterval) {, +			assertLogOutput();, +		} finally {, +	private void assertLogOutput() {, +	@Test, +		sc.addInitParameter(Log4jWebConfigurer.CONFIG_LOCATION_PARAM, RELATIVE_PATH);, +			assertLogOutput();, +		} finally {, +++ b/org.springframework.web/src/test/java/org/springframework/web/util/Log4jWebConfigurerTests.java, + * Copyright 2002-2011 the original author or authors., +import static org.junit.Assert.assertTrue;, +, +import org.junit.Test;, + * @author Sam Brannen, +public class Log4jWebConfigurerTests {, +	private static final String TESTLOG4J_PROPERTIES = "testlog4j.properties";, +	private static final String CLASSPATH_RESOURCE = "classpath:org/springframework/web/util/testlog4j.properties";, +	private static final String RELATIVE_PATH = "src/test/resources/org/springframework/web/util/testlog4j.properties";, +, +	@Test, +	public void initLoggingWithClasspathResource() {, +		initLogging(CLASSPATH_RESOURCE, false);, +	@Test, +	public void initLoggingWithClasspathResourceAndRefreshInterval() {, +		initLogging(CLASSPATH_RESOURCE, true);, +	@Test, +	public void initLoggingWithRelativeFilePath() {, +		initLogging(RELATIVE_PATH, false);, +	@Test, +	public void initLoggingWithRelativeFilePathAndRefreshInterval() {, +		initLogging(RELATIVE_PATH, true);, +	@Test, +	public void initLoggingWithUrl() {, +		URL url = Log4jWebConfigurerTests.class.getResource(TESTLOG4J_PROPERTIES);, +		initLogging(url.toString(), false);, +	@Test, +	public void initLoggingWithUrlAndRefreshInterval() {, +		URL url = Log4jWebConfigurerTests.class.getResource(TESTLOG4J_PROPERTIES);, +		initLogging(url.toString(), true);, +	@Ignore("Only works on MS Windows"), +	@Test, +	public void initLoggingWithAbsoluteFilePathAndRefreshInterval() {, +		URL url = Log4jWebConfigurerTests.class.getResource(TESTLOG4J_PROPERTIES);, +		initLogging(url.getFile(), true);, +	}, +, +	private void initLogging(String location, boolean refreshInterval) {, +			assertLogOutput();, +		} finally {, +	private void assertLogOutput() {, +	@Test, +		sc.addInitParameter(Log4jWebConfigurer.CONFIG_LOCATION_PARAM, RELATIVE_PATH);, +			assertLogOutput();, +		} finally {, +++ b/org.springframework.web/src/test/resources/org/springframework/web/util/testlog4j.properties, +log4j.rootCategory=DEBUG, mock, +log4j.appender.mock=org.springframework.web.util.MockLog4jAppender]