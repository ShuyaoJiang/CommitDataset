[+++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +	 * Create an instance by parsing the "Origin" header of an HTTP request., +		Matcher matcher = URI_PATTERN.matcher(origin);, +		if (matcher.matches()) {, +			UriComponentsBuilder builder = new UriComponentsBuilder();, +			String scheme = matcher.group(2);, +			String host = matcher.group(6);, +			String port = matcher.group(8);, +			if (StringUtils.hasLength(scheme)) {, +				builder.scheme(scheme);, +			builder.host(host);, +			if (StringUtils.hasLength(port)) {, +				builder.port(port);, +		else {, +			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value");, +		}, +	}, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java, +	 * Create an instance by parsing the "Origin" header of an HTTP request., +		Matcher matcher = URI_PATTERN.matcher(origin);, +		if (matcher.matches()) {, +			UriComponentsBuilder builder = new UriComponentsBuilder();, +			String scheme = matcher.group(2);, +			String host = matcher.group(6);, +			String port = matcher.group(8);, +			if (StringUtils.hasLength(scheme)) {, +				builder.scheme(scheme);, +			builder.host(host);, +			if (StringUtils.hasLength(port)) {, +				builder.port(port);, +		else {, +			throw new IllegalArgumentException("[" + origin + "] is not a valid \"Origin\" header value");, +		}, +	}, +++ b/spring-web/src/test/java/org/springframework/web/util/WebUtilsTests.java, +, +		// Handling of IPv6 hosts as described in SPR-13525, +		assertTrue(checkSameOrigin("[::1]", -1, "http://[::1]"));, +		assertTrue(checkSameOrigin("[::1]", 8080, "http://[::1]:8080"));, +		assertTrue(checkSameOrigin("[2001:0db8:0000:85a3:0000:0000:ac1f:8001]", -1, "http://[2001:0db8:0000:85a3:0000:0000:ac1f:8001]"));, +		assertTrue(checkSameOrigin("[2001:0db8:0000:85a3:0000:0000:ac1f:8001]", 8080, "http://[2001:0db8:0000:85a3:0000:0000:ac1f:8001]:8080"));, +		assertFalse(checkSameOrigin("[::1]", -1, "http://[::1]:8080"));, +		assertFalse(checkSameOrigin("[::1]", 8080, "http://[2001:0db8:0000:85a3:0000:0000:ac1f:8001]:8080"));]