[+++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java, + * Copyright 2002-2009 the original author or authors., +	/**, +	 * The bean name of the internally managed JSR-250 annotation processor., +	 */, +	public static final String COMMON_ANNOTATION_PROCESSOR_BEAN_NAME =, +			"org.springframework.context.annotation.internalCommonAnnotationProcessor";, +, +	/**, +	 * The bean name of the internally managed JPA annotation processor., +	 */, +	public static final String PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME =, +			"org.springframework.context.annotation.internalPersistenceAnnotationProcessor";, +, +		Set<BeanDefinitionHolder> beanDefs = new LinkedHashSet<BeanDefinitionHolder>(4);, +, +		if (!registry.containsBeanDefinition(AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME)) {, +			RootBeanDefinition def = new RootBeanDefinition(AutowiredAnnotationBeanPostProcessor.class);, +			def.setSource(source);, +			beanDefs.add(registerBeanPostProcessor(registry, def, AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME));, +		}, +, +		if (!registry.containsBeanDefinition(REQUIRED_ANNOTATION_PROCESSOR_BEAN_NAME)) {, +			RootBeanDefinition def = new RootBeanDefinition(RequiredAnnotationBeanPostProcessor.class);, +			def.setSource(source);, +			beanDefs.add(registerBeanPostProcessor(registry, def, REQUIRED_ANNOTATION_PROCESSOR_BEAN_NAME));, +		}, +, +		// Check for JSR-250 support, and if present add the CommonAnnotationBeanPostProcessor., +		if (jsr250Present && !registry.containsBeanDefinition(COMMON_ANNOTATION_PROCESSOR_BEAN_NAME)) {, +			RootBeanDefinition def = new RootBeanDefinition(CommonAnnotationBeanPostProcessor.class);, +			def.setSource(source);, +			beanDefs.add(registerBeanPostProcessor(registry, def, COMMON_ANNOTATION_PROCESSOR_BEAN_NAME));, +		}, +			beanDefs.add(registerBeanPostProcessor(registry, def, PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME));, +		return beanDefs;]