[+++ b/build.gradle, +	ext.jsonBindingVersion     = "1.0", +	ext.rxjava2Version         = '2.1.1', +	def objenesisVersion = "2.6", +		testRuntime("javax.activation:activation:${activationApiVersion}"), +		testRuntime("javax.activation:activation:${activationApiVersion}"), +project("spring-webflux") {, +	description = "Spring WebFlux", +, +	dependencies {, +		compile(project(":spring-core")), +		compile(project(":spring-web")), +		compile("org.reactivestreams:reactive-streams"), +		compile("io.projectreactor:reactor-core"), +		optional(project(":spring-context-support"))  // for FreeMarker support, +		provided "javax.servlet:javax.servlet-api:${servletVersion}", +		optional("javax.xml.bind:jaxb-api:${jaxbVersion}"), +		optional("com.fasterxml.jackson.core:jackson-databind:${jackson2Version}"), +		optional("org.freemarker:freemarker:${freemarkerVersion}"), +		optional("org.apache.httpcomponents:httpclient:${httpclientVersion}") {, +			exclude group: "commons-logging", module: "commons-logging", +		}, +		optional('org.webjars:webjars-locator:0.32-1'), +		optional("io.projectreactor.ipc:reactor-netty"), +		optional("io.reactivex:rxjava:${rxjavaVersion}"), +		optional("io.reactivex:rxjava-reactive-streams:${rxjavaAdapterVersion}"), +		optional("javax.websocket:javax.websocket-api:${websocketVersion}"), +		optional("org.apache.tomcat:tomcat-websocket:${tomcatVersion}") {, +			exclude group: "org.apache.tomcat", module: "tomcat-websocket-api", +			exclude group: "org.apache.tomcat", module: "tomcat-servlet-api", +		}, +		optional("org.eclipse.jetty.websocket:websocket-server:${jettyVersion}") {, +			exclude group: "javax.servlet", module: "javax.servlet", +		}, +		optional("io.undertow:undertow-websockets-jsr:${undertowVersion}") {, +			exclude group: "org.jboss.spec.javax.websocket", module: "jboss-websocket-api_1.1_spec", +		}, +		optional("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"), +		optional("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"), +		testCompile("io.projectreactor:reactor-test"), +		testCompile("javax.validation:validation-api:${beanvalVersion}"), +		testCompile("org.hibernate:hibernate-validator:${hibvalVersion}"), +		testCompile("org.apache.tomcat:tomcat-util:${tomcatVersion}"), +		testCompile("org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}"), +		testCompile("org.eclipse.jetty:jetty-server:${jettyVersion}"), +		testCompile("org.eclipse.jetty:jetty-servlet:${jettyVersion}"), +		testCompile "io.reactivex.rxjava2:rxjava:${rxjava2Version}", +		testCompile("io.undertow:undertow-core:${undertowVersion}"), +		testCompile("io.reactivex:rxnetty-http:${rxnettyVersion}") {, +			exclude group: 'io.reactivex', module: 'rxjava', +		}, +		testCompile("com.fasterxml:aalto-xml:1.0.0"), +		testCompile("org.xmlunit:xmlunit-matchers:${xmlunitVersion}"), +		testCompile("com.squareup.okhttp3:mockwebserver:${okhttp3Version}"), +		testCompile("org.jetbrains.kotlin:kotlin-script-runtime:${kotlinVersion}"), +		testRuntime("org.jetbrains.kotlin:kotlin-script-util:${kotlinVersion}"), +		testRuntime("org.jetbrains.kotlin:kotlin-compiler:${kotlinVersion}"), +		testRuntime("org.jruby:jruby:9.1.9.0"), +		testRuntime("org.python:jython-standalone:2.5.3"), +		testRuntime("org.synchronoss.cloud:nio-multipart-parser:${niomultipartVersion}"), +		testRuntime("org.webjars:underscorejs:1.8.3"), +		testRuntime("org.glassfish:javax.el:3.0.1-b08"), +		testRuntime("com.sun.xml.bind:jaxb-core:${jaxbVersion}"), +		testRuntime("com.sun.xml.bind:jaxb-impl:${jaxbVersion}"), +		testRuntime("javax.activation:activation:${activationApiVersion}"), +	}, +}, +, +		testRuntime("javax.annotation:javax.annotation-api:${annotationApiVersion}"), +		gradleVersion = '3.5.1', +++ b/build.gradle, +	ext.jsonBindingVersion     = "1.0", +	ext.rxjava2Version         = '2.1.1', +	def objenesisVersion = "2.6", +		testRuntime("javax.activation:activation:${activationApiVersion}"), +		testRuntime("javax.activation:activation:${activationApiVersion}"), +project("spring-webflux") {, +	description = "Spring WebFlux", +, +	dependencies {, +		compile(project(":spring-core")), +		compile(project(":spring-web")), +		compile("org.reactivestreams:reactive-streams"), +		compile("io.projectreactor:reactor-core"), +		optional(project(":spring-context-support"))  // for FreeMarker support, +		provided "javax.servlet:javax.servlet-api:${servletVersion}", +		optional("javax.xml.bind:jaxb-api:${jaxbVersion}"), +		optional("com.fasterxml.jackson.core:jackson-databind:${jackson2Version}"), +		optional("org.freemarker:freemarker:${freemarkerVersion}"), +		optional("org.apache.httpcomponents:httpclient:${httpclientVersion}") {, +			exclude group: "commons-logging", module: "commons-logging", +		}, +		optional('org.webjars:webjars-locator:0.32-1'), +		optional("io.projectreactor.ipc:reactor-netty"), +		optional("io.reactivex:rxjava:${rxjavaVersion}"), +		optional("io.reactivex:rxjava-reactive-streams:${rxjavaAdapterVersion}"), +		optional("javax.websocket:javax.websocket-api:${websocketVersion}"), +		optional("org.apache.tomcat:tomcat-websocket:${tomcatVersion}") {, +			exclude group: "org.apache.tomcat", module: "tomcat-websocket-api", +			exclude group: "org.apache.tomcat", module: "tomcat-servlet-api"]