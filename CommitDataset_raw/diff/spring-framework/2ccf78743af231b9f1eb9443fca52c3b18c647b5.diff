[+++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, +import java.util.Arrays;, +import java.util.HashSet;, +import java.util.Set;, +, +import org.springframework.core.NestedCheckedException;, +import org.springframework.web.server.handler.ExceptionHandlingWebHandler;, +	/**, +	 * Dedicated log category for disconnected client exceptions., +	 * <p>Servlet containers do not expose a notification when a client disconnects,, +	 * e.g. <a href="https://java.net/jira/browse/SERVLET_SPEC-44">SERVLET_SPEC-44</a>., +	 * <p>To avoid filling logs with unnecessary stack traces, we make an, +	 * effort to identify such network failures on a per-server basis, and then, +	 * log under a separate log category a simple one-line message at DEBUG level, +	 * or a full stack trace only at TRACE level., +	 */, +	private static final String DISCONNECTED_CLIENT_LOG_CATEGORY =, +			ExceptionHandlingWebHandler.class.getName() + ".DisconnectedClient";, +, +	private static final Set<String> DISCONNECTED_CLIENT_EXCEPTIONS =, +			new HashSet<>(Arrays.asList("ClientAbortException", "EOFException", "EofException"));, +, +, +	private static final Log disconnectedClientLogger = LogFactory.getLog(DISCONNECTED_CLIENT_LOG_CATEGORY);, +, +, +					logException(ex);, +	@SuppressWarnings("serial"), +	private void logException(Throwable ex) {, +		NestedCheckedException nestedEx = new NestedCheckedException("", ex) {};, +		if ("Broken pipe".equalsIgnoreCase(nestedEx.getMostSpecificCause().getMessage()) ||, +				DISCONNECTED_CLIENT_EXCEPTIONS.contains(ex.getClass().getSimpleName())) {, +, +			if (disconnectedClientLogger.isTraceEnabled()) {, +				disconnectedClientLogger.trace("Looks like the client has gone away", ex);, +			}, +			else if (disconnectedClientLogger.isDebugEnabled()) {, +				disconnectedClientLogger.debug(, +						"The client has gone away: " + nestedEx.getMessage() +, +								" (For a full stack trace, set the log category" +, +								"'" + DISCONNECTED_CLIENT_LOG_CATEGORY + "' to TRACE)");, +			}, +		}, +		else {, +			logger.error("Could not complete request", ex);, +		}, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, +import java.util.Arrays;, +import java.util.HashSet;, +import java.util.Set;, +, +import org.springframework.core.NestedCheckedException;, +import org.springframework.web.server.handler.ExceptionHandlingWebHandler;, +	/**, +	 * Dedicated log category for disconnected client exceptions., +	 * <p>Servlet containers do not expose a notification when a client disconnects,, +	 * e.g. <a href="https://java.net/jira/browse/SERVLET_SPEC-44">SERVLET_SPEC-44</a>., +	 * <p>To avoid filling logs with unnecessary stack traces, we make an, +	 * effort to identify such network failures on a per-server basis, and then, +	 * log under a separate log category a simple one-line message at DEBUG level, +	 * or a full stack trace only at TRACE level., +	 */, +	private static final String DISCONNECTED_CLIENT_LOG_CATEGORY =, +			ExceptionHandlingWebHandler.class.getName() + ".DisconnectedClient";, +, +	private static final Set<String> DISCONNECTED_CLIENT_EXCEPTIONS =, +			new HashSet<>(Arrays.asList("ClientAbortException", "EOFException", "EofException"));, +, +, +	private static final Log disconnectedClientLogger = LogFactory.getLog(DISCONNECTED_CLIENT_LOG_CATEGORY);, +, +, +					logException(ex);, +	@SuppressWarnings("serial"), +	private void logException(Throwable ex) {, +		NestedCheckedException nestedEx = new NestedCheckedException("", ex) {};, +		if ("Broken pipe".equalsIgnoreCase(nestedEx.getMostSpecificCause().getMessage()) ||, +				DISCONNECTED_CLIENT_EXCEPTIONS.contains(ex.getClass().getSimpleName())) {, +, +			if (disconnectedClientLogger.isTraceEnabled()) {, +				disconnectedClientLogger.trace("Looks like the client has gone away", ex);, +			}, +			else if (disconnectedClientLogger.isDebugEnabled()) {, +				disconnectedClientLogger.debug(, +						"The client has gone away: " + nestedEx.getMessage() +, +								" (For a full stack trace, set the log category" +, +								"'" + DISCONNECTED_CLIENT_LOG_CATEGORY + "' to TRACE)");, +			}, +		}, +		else {, +			logger.error("Could not complete request", ex);, +		}, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/server/handler/ExceptionHandlingWebHandler.java, +		this.exceptionHandlers = Collections.unmodifiableList(handlers);, +++ b/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java, +import java.util.Arrays;]