[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.java, +		statement = withPotentialTimeout(frameworkMethod, testInstance, statement);, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.java, +		statement = withPotentialTimeout(frameworkMethod, testInstance, statement);, +++ b/org.springframework.test/src/test/java/org/springframework/test/context/junit4/RepeatedSpringRunnerTests.java, +			{ RepeatedFiveTimesRepeatedTestCase.class, 0, 1, 1, 5 },//, +			{ TimedRepeatedTestCase.class, 3, 4, 4, (5 + 1 + 4 + 10) } //, +		public void nonAnnotated() throws Exception {, +		public void defaultRepeatValue() throws Exception {, +		public void negativeRepeatValue() throws Exception {, +		public void repeatedFiveTimes() throws Exception {, +	/**, +	 * Unit tests for claims raised in <a, +	 * href="http://jira.springframework.org/browse/SPR-6011", +	 * target="_blank">SPR-6011</a>., +	 */, +	public static final class TimedRepeatedTestCase extends AbstractRepeatedTestCase {, +, +		@Test, +		@Timed(millis = 10000), +		@Repeat(5), +		public void repeatedFiveTimesButDoesNotExceedTimeout() throws Exception {, +			incrementInvocationCount();, +		}, +, +		@Test, +		@Timed(millis = 100), +		@Repeat(1), +		public void singleRepetitionExceedsTimeout() throws Exception {, +			incrementInvocationCount();, +			Thread.sleep(250);, +		}, +, +		@Test, +		@Timed(millis = 200), +		@Repeat(4), +		public void firstRepetitionOfManyExceedsTimeout() throws Exception {, +			incrementInvocationCount();, +			Thread.sleep(250);, +		}, +, +		@Test, +		@Timed(millis = 1000), +		@Repeat(10), +		public void collectiveRepetitionsExceedTimeout() throws Exception {, +			incrementInvocationCount();, +			Thread.sleep(150);, +		}, +	}, +]