[+++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractCacheResolver.java, + * @author Juergen Hoeller, +		Collection<Cache> result = new ArrayList<>(cacheNames.size());, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractCacheResolver.java, + * @author Juergen Hoeller, +		Collection<Cache> result = new ArrayList<>(cacheNames.size());, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +		private final MultiValueMap<Class<? extends CacheOperation>, CacheOperationContext> contexts;, +			this.contexts = new LinkedMultiValueMap<>(operations.size());, +			for (CacheOperation op : operations) {, +				this.contexts.add(op.getClass(), getOperationContext(op, method, args, target, targetClass));, +					throw new IllegalStateException(, +							"@Cacheable(sync=true) cannot be combined with other cache operations on '" + method + "'");, +					throw new IllegalStateException(, +							"Only one @Cacheable(sync=true) entry is allowed on '" + method + "'");, +					throw new IllegalStateException(, +							"@Cacheable(sync=true) only allows a single cache on '" + operation + "'");, +					throw new IllegalStateException(, +							"@Cacheable(sync=true) does not support unless attribute on '" + operation + "'");]