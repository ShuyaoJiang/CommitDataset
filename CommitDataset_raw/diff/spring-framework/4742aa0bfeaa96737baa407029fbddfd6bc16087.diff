[+++ b/spring-jms/src/test/java/org/springframework/jms/annotation/EnableJmsTests.java, + * Copyright 2002-2016 the original author or authors., +import java.lang.annotation.Retention;, +import java.lang.annotation.RetentionPolicy;, +, +, +import org.springframework.core.annotation.AliasFor;, +import org.springframework.jms.config.MethodJmsListenerEndpoint;, + * @author Sam Brannen, +	public void composedJmsListeners() {, +		try (ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(, +			EnableJmsDefaultContainerFactoryConfig.class, ComposedJmsListenersBean.class)) {, +			JmsListenerContainerTestFactory simpleFactory = context.getBean("jmsListenerContainerFactory",, +				JmsListenerContainerTestFactory.class);, +			assertEquals(2, simpleFactory.getListenerContainers().size());, +, +			MethodJmsListenerEndpoint first = (MethodJmsListenerEndpoint) simpleFactory.getListenerContainer(, +				"first").getEndpoint();, +			assertEquals("first", first.getId());, +			assertEquals("orderQueue", first.getDestination());, +			assertNull(first.getConcurrency());, +, +			MethodJmsListenerEndpoint second = (MethodJmsListenerEndpoint) simpleFactory.getListenerContainer(, +				"second").getEndpoint();, +			assertEquals("second", second.getId());, +			assertEquals("billingQueue", second.getDestination());, +			assertEquals("2-10", second.getConcurrency());, +		}, +	}, +, +	@Test, +	@SuppressWarnings("resource"), +		new AnnotationConfigApplicationContext(EnableJmsSampleConfig.class, CustomBean.class);, +, +	@JmsListener(destination = "orderQueue"), +	@Retention(RetentionPolicy.RUNTIME), +	private @interface OrderQueueListener {, +, +		@AliasFor(annotation = JmsListener.class), +		String id() default "";, +, +		@AliasFor(annotation = JmsListener.class), +		String concurrency() default "";, +	}, +, +	@JmsListener(destination = "billingQueue"), +	@Retention(RetentionPolicy.RUNTIME), +	private @interface BillingQueueListener {, +, +		@AliasFor(annotation = JmsListener.class), +		String id() default "";, +, +		@AliasFor(annotation = JmsListener.class), +		String concurrency() default "";, +	}, +, +	@Component, +	static class ComposedJmsListenersBean {, +, +		@OrderQueueListener(id = "first"), +		@BillingQueueListener(id = "second", concurrency = "2-10"), +		public void repeatableHandle(String msg) {, +		}, +	}, +]