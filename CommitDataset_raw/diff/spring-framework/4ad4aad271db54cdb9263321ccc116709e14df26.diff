[+++ b/org.springframework.context.support/src/test/java/org/springframework/ui/jasperreports/JasperReportsUtilsTests.java, +/*, + * Copyright 2002-2007 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.ui.jasperreports;, +, +import java.io.ByteArrayInputStream;, +import java.io.ByteArrayOutputStream;, +import java.io.StringWriter;, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +import java.util.ResourceBundle;, +, +import junit.framework.TestCase;, +import net.sf.jasperreports.engine.JRDataSource;, +import net.sf.jasperreports.engine.JRParameter;, +import net.sf.jasperreports.engine.JasperFillManager;, +import net.sf.jasperreports.engine.JasperPrint;, +import net.sf.jasperreports.engine.JasperReport;, +import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;, +import net.sf.jasperreports.engine.export.JRCsvExporterParameter;, +import net.sf.jasperreports.engine.export.JRExportProgressMonitor;, +import net.sf.jasperreports.engine.export.JRHtmlExporter;, +import net.sf.jasperreports.engine.export.JRHtmlExporterParameter;, +import net.sf.jasperreports.engine.export.JRPdfExporter;, +import net.sf.jasperreports.engine.export.JRPdfExporterParameter;, +import net.sf.jasperreports.engine.export.JRXlsExporterParameter;, +import net.sf.jasperreports.engine.util.JRLoader;, +import org.apache.poi.hssf.usermodel.HSSFCell;, +import org.apache.poi.hssf.usermodel.HSSFRow;, +import org.apache.poi.hssf.usermodel.HSSFSheet;, +import org.apache.poi.hssf.usermodel.HSSFWorkbook;, +, +import org.springframework.core.io.ClassPathResource;, +, +/**, + * @author Rob Harrop, + * @author Juergen Hoeller, + * @since 18.11.2004, + */, +public class JasperReportsUtilsTests extends TestCase {, +, +	public void testRenderAsCsvWithDataSource() throws Exception {, +		StringWriter writer = new StringWriter();, +		JasperReportsUtils.renderAsCsv(getReport(), getParameters(), getDataSource(), writer);, +		String output = writer.getBuffer().toString();, +		assertCsvOutputCorrect(output);, +	}, +, +	public void testRenderAsCsvWithCollection() throws Exception {, +		StringWriter writer = new StringWriter();, +		JasperReportsUtils.renderAsCsv(getReport(), getParameters(), getData(), writer);, +		String output = writer.getBuffer().toString();, +		assertCsvOutputCorrect(output);, +	}, +, +	public void testRenderAsCsvWithExporterParameters() throws Exception {, +		StringWriter writer = new StringWriter();, +		Map exporterParameters = new HashMap();, +		exporterParameters.put(JRCsvExporterParameter.FIELD_DELIMITER, "~");, +		JasperReportsUtils.renderAsCsv(getReport(), getParameters(), getData(), writer, exporterParameters);, +		String output = writer.getBuffer().toString();, +		assertCsvOutputCorrect(output);, +		assertTrue("Delimiter is incorrect", output.indexOf("~") > -1);, +	}, +, +	public void testRenderAsHtmlWithDataSource() throws Exception {, +		StringWriter writer = new StringWriter();, +		JasperReportsUtils.renderAsHtml(getReport(), getParameters(), getDataSource(), writer);, +		String output = writer.getBuffer().toString();, +		assertHtmlOutputCorrect(output);, +	}, +, +	public void testRenderAsHtmlWithCollection() throws Exception {, +		StringWriter writer = new StringWriter();, +		JasperReportsUtils.renderAsHtml(getReport(), getParameters(), getData(), writer);, +		String output = writer.getBuffer().toString();, +		assertHtmlOutputCorrect(output);, +	}, +, +	public void testRenderAsHtmlWithExporterParameters() throws Exception {, +		StringWriter writer = new StringWriter();, +		Map exporterParameters = new HashMap();, +		String uri = "/my/uri";]