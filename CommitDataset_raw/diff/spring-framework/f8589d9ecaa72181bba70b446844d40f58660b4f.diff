[+++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +import org.springframework.util.CollectionUtils;, +	public MultiValueMap<String, String> queryParams() {, +		return CollectionUtils.unmodifiableMultiValueMap(this.queryParams);, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +import org.springframework.util.CollectionUtils;, +	public MultiValueMap<String, String> queryParams() {, +		return CollectionUtils.unmodifiableMultiValueMap(this.queryParams);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java, +	public MultiValueMap<String, String> queryParams() {, +		return request().getQueryParams();, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +import org.springframework.util.CollectionUtils;, +	public MultiValueMap<String, String> queryParams() {, +		return CollectionUtils.unmodifiableMultiValueMap(this.queryParams);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java, +	public MultiValueMap<String, String> queryParams() {, +		return request().getQueryParams();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java, +		public MultiValueMap<String, String> queryParams() {, +			return this.request.queryParams();, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +import org.springframework.util.CollectionUtils;, +	public MultiValueMap<String, String> queryParams() {, +		return CollectionUtils.unmodifiableMultiValueMap(this.queryParams);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java, +	public MultiValueMap<String, String> queryParams() {, +		return request().getQueryParams();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java, +		public MultiValueMap<String, String> queryParams() {, +			return this.request.queryParams();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java, +		List<String> queryParams = queryParams().get(name);, +	 * Return all query parameters for this request., +	MultiValueMap<String, String> queryParams();, +	 * Return all path variables for this request., +	 * Return the web session for this request. Always guaranteed to, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +import org.springframework.util.CollectionUtils;, +	public MultiValueMap<String, String> queryParams() {, +		return CollectionUtils.unmodifiableMultiValueMap(this.queryParams);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java, +	public MultiValueMap<String, String> queryParams() {, +		return request().getQueryParams();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java, +		public MultiValueMap<String, String> queryParams() {, +			return this.request.queryParams();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java, +		List<String> queryParams = queryParams().get(name);, +	 * Return all query parameters for this request., +	MultiValueMap<String, String> queryParams();, +	 * Return all path variables for this request., +	 * Return the web session for this request. Always guaranteed to, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java, +	public MultiValueMap<String, String> queryParams() {, +		return this.delegate.queryParams();, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +import org.springframework.util.CollectionUtils;, +	public MultiValueMap<String, String> queryParams() {, +		return CollectionUtils.unmodifiableMultiValueMap(this.queryParams);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java, +	public MultiValueMap<String, String> queryParams() {, +		return request().getQueryParams();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java, +		public MultiValueMap<String, String> queryParams() {, +			return this.request.queryParams();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java, +		List<String> queryParams = queryParams().get(name);, +	 * Return all query parameters for this request., +	MultiValueMap<String, String> queryParams();, +	 * Return all path variables for this request., +	 * Return the web session for this request. Always guaranteed to, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java, +	public MultiValueMap<String, String> queryParams() {, +		return this.delegate.queryParams();, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/server/MockServerRequest.java, +import org.springframework.util.CollectionUtils;, +	public MultiValueMap<String, String> queryParams() {, +		return CollectionUtils.unmodifiableMultiValueMap(this.queryParams);, +++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java, +import org.springframework.util.CollectionUtils;, +	public MultiValueMap<String, String> queryParams() {, +		return CollectionUtils.unmodifiableMultiValueMap(this.queryParams);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java, +	public MultiValueMap<String, String> queryParams() {, +		return request().getQueryParams();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java, +		public MultiValueMap<String, String> queryParams() {, +			return this.request.queryParams();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java, +		List<String> queryParams = queryParams().get(name);, +	 * Return all query parameters for this request., +	MultiValueMap<String, String> queryParams();, +	 * Return all path variables for this request., +	 * Return the web session for this request. Always guaranteed to, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java, +	public MultiValueMap<String, String> queryParams() {, +		return this.delegate.queryParams();, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/server/MockServerRequest.java, +import org.springframework.util.CollectionUtils;]