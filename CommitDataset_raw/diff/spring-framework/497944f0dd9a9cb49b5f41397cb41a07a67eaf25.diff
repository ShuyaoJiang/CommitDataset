[+++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistryTests.java, +		assertEquals("Expected two elements: " + actual, 2, actual.size());, +		assertEquals("Expected one element: " + actual, 1, actual.size());, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistryTests.java, +		assertEquals("Expected two elements: " + actual, 2, actual.size());, +		assertEquals("Expected one element: " + actual, 1, actual.size());, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandlerTests.java, + * Copyright 2002-2015 the original author or authors., +import static org.junit.Assert.assertTrue;, +		assertTrue(messageCaptured("sess1", "sub1", "/foo"));, +		assertTrue(messageCaptured("sess1", "sub2", "/foo"));, +		assertTrue(messageCaptured("sess2", "sub1", "/foo"));, +		assertTrue(messageCaptured("sess2", "sub2", "/foo"));, +		assertTrue(messageCaptured("sess1", "sub3", "/bar"));, +		assertTrue(messageCaptured("sess2", "sub3", "/bar"));, +		assertTrue(messageCaptured(sess2, "sub1", "/foo"));, +		assertTrue(messageCaptured(sess2, "sub2", "/foo"));, +		assertTrue(messageCaptured(sess2, "sub3", "/bar"));, +	private Message<String> createSubscriptionMessage(String sessionId, String subcriptionId, String destination) {, +	private Message<String> createConnectMessage(String sessionId) {, +	private Message<String> createMessage(String destination, String payload) {, +	private boolean messageCaptured(String sessionId, String subcriptionId, String destination) {]