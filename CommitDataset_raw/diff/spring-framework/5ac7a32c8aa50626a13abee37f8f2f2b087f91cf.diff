[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java, +	static boolean shouldIgnoreGetParameterType = SpringProperties.getFlag(IGNORE_GETPARAMETERTYPE_PROPERTY_NAME);, +			if (!shouldIgnoreGetParameterType) {, +				// Proceed with database-specific checks, +				DatabaseMetaData dbmd = ps.getConnection().getMetaData();, +				String jdbcDriverName = dbmd.getDriverName();, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java, +	static boolean shouldIgnoreGetParameterType = SpringProperties.getFlag(IGNORE_GETPARAMETERTYPE_PROPERTY_NAME);, +			if (!shouldIgnoreGetParameterType) {, +				// Proceed with database-specific checks, +				DatabaseMetaData dbmd = ps.getConnection().getMetaData();, +				String jdbcDriverName = dbmd.getDriverName();, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/StatementCreatorUtilsTests.java, + * Copyright 2002-2016 the original author or authors., +		StatementCreatorUtils.shouldIgnoreGetParameterType = true;, +		Connection con = mock(Connection.class);, +		DatabaseMetaData dbmd = mock(DatabaseMetaData.class);, +		given(preparedStatement.getConnection()).willReturn(con);, +		given(dbmd.getDatabaseProductName()).willReturn("Oracle");, +		given(dbmd.getDriverName()).willReturn("Oracle Driver");, +		given(con.getMetaData()).willReturn(dbmd);, +		StatementCreatorUtils.shouldIgnoreGetParameterType = false;, +		StatementCreatorUtils.shouldIgnoreGetParameterType = true;, +		StatementCreatorUtils.shouldIgnoreGetParameterType = false;, +		StatementCreatorUtils.shouldIgnoreGetParameterType = true;, +		StatementCreatorUtils.shouldIgnoreGetParameterType = false;, +		StatementCreatorUtils.shouldIgnoreGetParameterType = true;, +		Connection con = mock(Connection.class);, +		DatabaseMetaData dbmd = mock(DatabaseMetaData.class);, +		given(preparedStatement.getConnection()).willReturn(con);, +		given(dbmd.getDatabaseProductName()).willReturn("Oracle");, +		given(dbmd.getDriverName()).willReturn("Oracle Driver");, +		given(con.getMetaData()).willReturn(dbmd);, +		StatementCreatorUtils.shouldIgnoreGetParameterType = false;]