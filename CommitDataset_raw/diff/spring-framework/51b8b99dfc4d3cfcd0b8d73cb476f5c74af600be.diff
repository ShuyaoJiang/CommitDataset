[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/TestExecutionListener.java, +	 * <p>, +	 * If a given testing framework (e.g., JUnit 3.8) does not support, +	 * <em>before class</em> lifecycle callbacks, this method will not be called, +	 * for that framework., +	 * <p>, +	 * If a given testing framework (e.g., JUnit 3.8) does not support, +	 * <em>after class</em> lifecycle callbacks, this method will not be called, +	 * for that framework., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/TestExecutionListener.java, +	 * <p>, +	 * If a given testing framework (e.g., JUnit 3.8) does not support, +	 * <em>before class</em> lifecycle callbacks, this method will not be called, +	 * for that framework., +	 * <p>, +	 * If a given testing framework (e.g., JUnit 3.8) does not support, +	 * <em>after class</em> lifecycle callbacks, this method will not be called, +	 * for that framework., +++ b/org.springframework.test/src/main/java/org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.java, + * Copyright 2002-2009 the original author or authors., +, + * Abstract base {@link TestCase} which integrates the <i>Spring TestContext, + * Framework</i> and explicit {@link ApplicationContext} testing support in a, + * <strong>JUnit 3.8</strong> environment., + * {@link org.springframework.test.context.ContextConfiguration, + * &#064;ContextConfiguration} annotation to configure the, + * {@link ApplicationContext application context}, + * {@link org.springframework.test.context.ContextConfiguration#locations(), + * resource locations}. <i>If your test does not need to load an application, + * context, you may choose to omit the, + * {@link org.springframework.test.context.ContextConfiguration, + * &#064;ContextConfiguration} declaration and configure the appropriate, + * {@link org.springframework.test.context.TestExecutionListener, + * TestExecutionListeners} manually.</i></li>, + * {@link #AbstractJUnit38SpringContextTests(), + * AbstractJUnit38SpringContextTests()} and, + * {@link #AbstractJUnit38SpringContextTests(String), + * AbstractJUnit38SpringContextTests(String)} and delegate to, + * <code>super();</code> and <code>super(name);</code> respectively.</li>, + * by <code>AbstractJUnit38SpringContextTests</code>. <i>(Note that additional, + * annotations may be supported by various, + * {@link org.springframework.test.context.TestExecutionListener, + * TestExecutionListeners})</i>, + * <li>{@link org.springframework.test.annotation.DirtiesContext, + * &#064;DirtiesContext} (via the configured, + * {@link DirtiesContextTestExecutionListener}; only supported on methods for, + * JUnit 3.8)</li>, + * <li>, + * {@link org.springframework.test.annotation.ProfileValueSourceConfiguration, + * &#064;ProfileValueSourceConfiguration}</li>, + * <li>{@link IfProfileValue &#064;IfProfileValue}</li>, + * <li>{@link ExpectedException &#064;ExpectedException}</li>, + * <li>{@link Timed &#064;Timed}</li>, + * <li>{@link Repeat &#064;Repeat}</li>, + * </ul>, + * <p>, + * JUnit 3.8 does not support <i>before class</i> or <i>after class</i>, + * lifecycle callbacks. The following, + * {@link org.springframework.test.context.TestExecutionListener, + * TestExecutionListener} methods are therefore unsupported in a JUnit 3.8, + * environment:, + * <ul>, + * <li>, + * {@link org.springframework.test.context.TestExecutionListener#beforeTestClass(org.springframework.test.context.TestContext), + * beforeTestClass()}</li>, + * <li>, + * {@link org.springframework.test.context.TestExecutionListener#afterTestClass(org.springframework.test.context.TestContext), + * afterTestClass()}</li>, +	 * for internal use to provide support for {@link IfProfileValue, +	 * &#064;IfProfileValue}., +	 * Constructs a new AbstractJUnit38SpringContextTests instance; initializes, +	 * the internal {@link TestContextManager} for the current test; and, +	 * retrieves the configured (or default) {@link ProfileValueSource}., +	 * , +	 * <p>, +	 * In addition to standard {@link TestCase#runBare()} semantics, this, +	 * <li>Calls {@link TestContextManager#prepareTestInstance(Object), +	 * prepareTestInstance()},, +	 * {@link TestContextManager#beforeTestMethod(Object,Method), +	 * beforeTestMethod()}, and, +	 * {@link TestContextManager#afterTestMethod(Object,Method,Throwable), +	 * afterTestMethod()} on this test's {@link TestContextManager} at the, +	 * appropriate test execution points.</li>, +	 * <li>Provides support for {@link IfProfileValue &#064;IfProfileValue}.</li>, +	 * <li>Provides support for {@link Repeat &#064;Repeat}.</li>, +	 * <li>Provides support for {@link Timed &#064;Timed}.</li>, +	 * <li>Provides support for {@link ExpectedException, +	 * &#064;ExpectedException}.</li>, +	 * , +, +	 * Runs a <em>timed</em> test via the supplied {@link TestExecutionCallback}, +	 * , providing support for the {@link Timed &#064;Timed} annotation., +	 * , +	 * @param testMethod the actual test method: used to retrieve the, +	 * <code>timeout</code>, +	 * support for the {@link ExpectedException &#064;ExpectedException} and, +	 * {@link Repeat &#064;Repeat} annotations., +	 * , +	 * {@link ExpectedException &#064;ExpectedException} and {@link Repeat, +	 * &#064;Repeat} annotations]