[+++ b/org.springframework.context/src/main/java/org/springframework/cache/annotation/Cacheable.java, + * Copyright 2002-2011 the original author or authors., +	 * <p>May be used to determine the target cache (or caches), matching the, +	 * <p>Default is "", meaning all method parameters are considered as a key., +	 * <p>Default is "", meaning the method is always cached., +, +++ b/org.springframework.context/src/main/java/org/springframework/cache/annotation/Cacheable.java, + * Copyright 2002-2011 the original author or authors., +	 * <p>May be used to determine the target cache (or caches), matching the, +	 * <p>Default is "", meaning all method parameters are considered as a key., +	 * <p>Default is "", meaning the method is always cached., +, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.java, + * Copyright 2002-2011 the original author or authors., +			ErrorHandler errorHandler =, +					(this.errorHandler != null ? this.errorHandler : TaskUtils.getDefaultErrorHandler(true));, +++ b/org.springframework.context/src/main/java/org/springframework/cache/annotation/Cacheable.java, + * Copyright 2002-2011 the original author or authors., +	 * <p>May be used to determine the target cache (or caches), matching the, +	 * <p>Default is "", meaning all method parameters are considered as a key., +	 * <p>Default is "", meaning the method is always cached., +, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.java, + * Copyright 2002-2011 the original author or authors., +			ErrorHandler errorHandler =, +					(this.errorHandler != null ? this.errorHandler : TaskUtils.getDefaultErrorHandler(true));, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java, + * Copyright 2002-2011 the original author or authors., +			ErrorHandler errorHandler =, +					(this.errorHandler != null ? this.errorHandler : TaskUtils.getDefaultErrorHandler(true));, +++ b/org.springframework.context/src/main/java/org/springframework/cache/annotation/Cacheable.java, + * Copyright 2002-2011 the original author or authors., +	 * <p>May be used to determine the target cache (or caches), matching the, +	 * <p>Default is "", meaning all method parameters are considered as a key., +	 * <p>Default is "", meaning the method is always cached., +, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.java, + * Copyright 2002-2011 the original author or authors., +			ErrorHandler errorHandler =, +					(this.errorHandler != null ? this.errorHandler : TaskUtils.getDefaultErrorHandler(true));, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java, + * Copyright 2002-2011 the original author or authors., +			ErrorHandler errorHandler =, +					(this.errorHandler != null ? this.errorHandler : TaskUtils.getDefaultErrorHandler(true));, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/config/package-info.java, +, +/**, + *, + * Support package for declarative scheduling configuration,, + * with XML schema being the primary configuration format., + *, + */, +package org.springframework.scheduling.config;, +, +++ b/org.springframework.context/src/main/java/org/springframework/cache/annotation/Cacheable.java, + * Copyright 2002-2011 the original author or authors., +	 * <p>May be used to determine the target cache (or caches), matching the, +	 * <p>Default is "", meaning all method parameters are considered as a key., +	 * <p>Default is "", meaning the method is always cached., +, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.java, + * Copyright 2002-2011 the original author or authors., +			ErrorHandler errorHandler =, +					(this.errorHandler != null ? this.errorHandler : TaskUtils.getDefaultErrorHandler(true));, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java, + * Copyright 2002-2011 the original author or authors., +			ErrorHandler errorHandler =, +					(this.errorHandler != null ? this.errorHandler : TaskUtils.getDefaultErrorHandler(true));, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/config/package-info.java, +, +/**, + *, + * Support package for declarative scheduling configuration,, + * with XML schema being the primary configuration format., + *, + */, +package org.springframework.scheduling.config;, +, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/support/TaskUtils.java, + * Copyright 2002-2011 the original author or authors., + *, + * <p><b>NOTE:</b> This class is intended for internal use by Spring's scheduler, +++ b/org.springframework.context/src/main/java/org/springframework/cache/annotation/Cacheable.java, + * Copyright 2002-2011 the original author or authors., +	 * <p>May be used to determine the target cache (or caches), matching the, +	 * <p>Default is "", meaning all method parameters are considered as a key., +	 * <p>Default is "", meaning the method is always cached., +, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.java, + * Copyright 2002-2011 the original author or authors., +			ErrorHandler errorHandler =, +					(this.errorHandler != null ? this.errorHandler : TaskUtils.getDefaultErrorHandler(true));, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java, + * Copyright 2002-2011 the original author or authors., +			ErrorHandler errorHandler =, +					(this.errorHandler != null ? this.errorHandler : TaskUtils.getDefaultErrorHandler(true));, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/config/package-info.java, +, +/**, + *]