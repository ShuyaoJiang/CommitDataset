[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistration.java, +, +	 * Return the URL path patterns for the resource handler., +	 * Return a {@link ResourceHttpRequestHandler} instance., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistration.java, +, +	 * Return the URL path patterns for the resource handler., +	 * Return a {@link ResourceHttpRequestHandler} instance., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +import org.springframework.context.EmbeddedValueResolverAware;, +import org.springframework.util.StringValueResolver;, +		implements HttpRequestHandler, EmbeddedValueResolverAware, InitializingBean, CorsConfigurationSource {, +	private final List<String> locationValues = new ArrayList<>(4);, +, +	@Nullable, +	private StringValueResolver embeddedValueResolver;, +, +	 * An alternative to {@link #setLocations(List)} that accepts a list of, +	 * String-based location values, with support for {@link UrlResource}'s, +	 * (e.g. files or HTTP URLs) with a special prefix to indicate the charset, +	 * to use when appending relative paths. For example, +	 * {@code "[charset=Windows-31J]http://example.org/path"}., +	 * @since 4.3.13, +	 */, +	public void setLocationValues(List<String> locationValues) {, +		Assert.notNull(locationValues, "Location values list must not be null");, +		this.locationValues.clear();, +		this.locationValues.addAll(locationValues);, +	}, +, +	/**, +	 * <p>Note that if {@link #setLocationValues(List) locationValues} are provided,, +	 * @see #setLocationValues, +	 * @see #setLocations, +	@Override, +	public void setEmbeddedValueResolver(StringValueResolver resolver) {, +		this.embeddedValueResolver = resolver;, +	}, +, +		resolveResourceLocations();, +	private void resolveResourceLocations() {, +		else if (!CollectionUtils.isEmpty(this.locations)) {, +			throw new IllegalArgumentException("Please set either Resource-based \"locations\" or " +, +					"String-based \"locationValues\", but not both.");, +, +		ApplicationContext applicationContext = obtainApplicationContext();, +			if (this.embeddedValueResolver != null) {, +				String resolvedLocation = this.embeddedValueResolver.resolveStringValue(location);, +				if (resolvedLocation == null) {, +					throw new IllegalArgumentException("Location resolved to null: " + location);, +				}, +				location = resolvedLocation;, +			Resource resource = applicationContext.getResource(location);]