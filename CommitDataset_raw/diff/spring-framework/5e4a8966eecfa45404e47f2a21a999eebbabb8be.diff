[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/TomcatHttpHandlerAdapter.java, +import javax.servlet.http.HttpServletRequestWrapper;, +import javax.servlet.http.HttpServletResponseWrapper;, +			RequestFacade requestFacade = getRequestFacade(request);, +					ReflectionUtils.getField(COYOTE_REQUEST_FIELD, requestFacade);, +		private static RequestFacade getRequestFacade(HttpServletRequest request) {, +			if (request instanceof RequestFacade) {, +				return (RequestFacade) request;, +			}, +			else if (request instanceof HttpServletRequestWrapper) {, +				HttpServletRequestWrapper wrapper = (HttpServletRequestWrapper) request;, +				HttpServletRequest wrappedRequest = (HttpServletRequest) wrapper.getRequest();, +				return getRequestFacade(wrappedRequest);, +			}, +			else {, +				throw new IllegalArgumentException("Cannot convert [" + request.getClass() +, +						"] to org.apache.catalina.connector.RequestFacade");, +			}, +		}, +, +			ResponseFacade responseFacade = getResponseFacade(response);, +					ReflectionUtils.getField(COYOTE_RESPONSE_FIELD, responseFacade);, +		private static ResponseFacade getResponseFacade(HttpServletResponse response) {, +			if (response instanceof ResponseFacade) {, +				return (ResponseFacade) response;, +			}, +			else if (response instanceof HttpServletResponseWrapper) {, +				HttpServletResponseWrapper wrapper = (HttpServletResponseWrapper) response;, +				HttpServletResponse wrappedResponse = (HttpServletResponse) wrapper.getResponse();, +				return getResponseFacade(wrappedResponse);, +			}, +			else {, +				throw new IllegalArgumentException("Cannot convert [" + response.getClass() +, +						"] to org.apache.catalina.connector.ResponseFacade");, +			}, +		}, +]