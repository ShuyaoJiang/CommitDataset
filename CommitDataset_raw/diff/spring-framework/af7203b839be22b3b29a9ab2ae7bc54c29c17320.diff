[+++ b/org.springframework.core/src/main/java/org/springframework/util/xml/StaxUtils.java, +import javax.xml.stream.XMLEventFactory;, +	/**, +	 * Return a {@link XMLStreamWriter} that writes to a {@link XMLEventWriter}., +	 * @return a stream writer that writes to an event writer, +	 * @since 3.0.5, +	 */, +	public static XMLStreamWriter createEventStreamWriter(XMLEventWriter eventWriter, XMLEventFactory eventFactory) {, +		return new XMLEventStreamWriter(eventWriter, eventFactory);, +	}, +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/StaxUtils.java, +import javax.xml.stream.XMLEventFactory;, +	/**, +	 * Return a {@link XMLStreamWriter} that writes to a {@link XMLEventWriter}., +	 * @return a stream writer that writes to an event writer, +	 * @since 3.0.5, +	 */, +	public static XMLStreamWriter createEventStreamWriter(XMLEventWriter eventWriter, XMLEventFactory eventFactory) {, +		return new XMLEventStreamWriter(eventWriter, eventFactory);, +	}, +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/XMLEventStreamReader.java, + * Implementation of the {@link javax.xml.stream.XMLStreamReader} interface that wraps a {@link XMLEventReader}. Useful,, + * because the StAX {@link javax.xml.stream.XMLInputFactory} allows one to create a event reader from a stream reader,, + * but not vice-versa., + * @see StaxUtils#createEventStreamReader(javax.xml.stream.XMLEventReader), +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/StaxUtils.java, +import javax.xml.stream.XMLEventFactory;, +	/**, +	 * Return a {@link XMLStreamWriter} that writes to a {@link XMLEventWriter}., +	 * @return a stream writer that writes to an event writer, +	 * @since 3.0.5, +	 */, +	public static XMLStreamWriter createEventStreamWriter(XMLEventWriter eventWriter, XMLEventFactory eventFactory) {, +		return new XMLEventStreamWriter(eventWriter, eventFactory);, +	}, +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/XMLEventStreamReader.java, + * Implementation of the {@link javax.xml.stream.XMLStreamReader} interface that wraps a {@link XMLEventReader}. Useful,, + * because the StAX {@link javax.xml.stream.XMLInputFactory} allows one to create a event reader from a stream reader,, + * but not vice-versa., + * @see StaxUtils#createEventStreamReader(javax.xml.stream.XMLEventReader), +++ b/org.springframework.core/src/main/java/org/springframework/util/xml/XMLEventStreamWriter.java, +/*, + * Copyright 2002-2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.util.xml;, +, +import java.util.ArrayList;, +import java.util.Iterator;, +import java.util.List;, +import javax.xml.namespace.NamespaceContext;, +import javax.xml.namespace.QName;, +import javax.xml.stream.XMLEventFactory;, +import javax.xml.stream.XMLEventWriter;, +import javax.xml.stream.XMLStreamException;, +import javax.xml.stream.XMLStreamWriter;, +import javax.xml.stream.events.EndElement;, +import javax.xml.stream.events.Namespace;, +import javax.xml.stream.events.StartElement;, +, +import org.springframework.util.Assert;, +, +/**, + * Implementation of the {@link javax.xml.stream.XMLStreamWriter} interface that wraps a {@link XMLEventWriter}., + *, + * @author Arjen Poutsma, + * @since 3.0.5, + * @see StaxUtils#createEventStreamWriter(javax.xml.stream.XMLEventWriter, javax.xml.stream.XMLEventFactory) , + */, +class XMLEventStreamWriter implements XMLStreamWriter {, +, +	private static final String DEFAULT_ENCODING = "UTF-8";, +, +	private final XMLEventWriter eventWriter;, +, +	private final XMLEventFactory eventFactory;, +, +	private List<EndElement> endElements = new ArrayList<EndElement>();, +, +	public XMLEventStreamWriter(XMLEventWriter eventWriter, XMLEventFactory eventFactory) {, +		Assert.notNull(eventWriter, "'eventWriter' must not be null");, +		Assert.notNull(eventFactory, "'eventFactory' must not be null");, +		, +		this.eventWriter = eventWriter;, +		this.eventFactory = eventFactory;, +	}, +, +	public NamespaceContext getNamespaceContext() {]