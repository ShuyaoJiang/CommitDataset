[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.java, +	protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) {, +			if (isEligibleAttribute(attribute, parserContext)) {, +	 * @param parserContext the <code>ParserContext</code>, +	protected boolean isEligibleAttribute(Attr attribute, ParserContext parserContext) {, +		boolean eligible = isEligibleAttribute(attribute);, +		if(!eligible) {, +			eligible = (!fullName.equals("xmlns") && !fullName.startsWith("xmlns:") &&, +					isEligibleAttribute(parserContext.getDelegate().getLocalName(attribute)));, +		}, +		return eligible;, +	}, +, +	/**, +	 * Determine whether the given attribute is eligible for being, +	 * turned into a corresponding bean property value., +	 * <p>The default implementation considers any attribute as eligible,, +	 * except for the "id" attribute and namespace declaration attributes., +	 * @param attribute the XML attribute to check, +	 * @see #isEligibleAttribute(String), +	 * @deprecated in favour of {@link #isEligibleAttribute(org.w3c.dom.Attr, ParserContext)}, +	 */, +	@Deprecated, +	protected boolean isEligibleAttribute(Attr attribute) {, +		return false;, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.java, +	protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) {, +			if (isEligibleAttribute(attribute, parserContext)) {, +	 * @param parserContext the <code>ParserContext</code>, +	protected boolean isEligibleAttribute(Attr attribute, ParserContext parserContext) {, +		boolean eligible = isEligibleAttribute(attribute);, +		if(!eligible) {, +			eligible = (!fullName.equals("xmlns") && !fullName.startsWith("xmlns:") &&, +					isEligibleAttribute(parserContext.getDelegate().getLocalName(attribute)));, +		}, +		return eligible;, +	}, +, +	/**, +	 * Determine whether the given attribute is eligible for being, +	 * turned into a corresponding bean property value., +	 * <p>The default implementation considers any attribute as eligible,, +	 * except for the "id" attribute and namespace declaration attributes., +	 * @param attribute the XML attribute to check, +	 * @see #isEligibleAttribute(String), +	 * @deprecated in favour of {@link #isEligibleAttribute(org.w3c.dom.Attr, ParserContext)}, +	 */, +	@Deprecated, +	protected boolean isEligibleAttribute(Attr attribute) {, +		return false;, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ComponentScanBeanDefinitionParser.java, +		parseTypeFilters(element, scanner, readerContext, parserContext);, +			Element element, ClassPathBeanDefinitionScanner scanner, XmlReaderContext readerContext, ParserContext parserContext) {, +				String localName = parserContext.getDelegate().getLocalName(node);]