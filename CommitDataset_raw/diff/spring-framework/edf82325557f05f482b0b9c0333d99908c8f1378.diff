[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +					int nonSyntheticConstructors = 0;, +						if (!candidate.isSynthetic()) {, +							nonSyntheticConstructors++;, +						}, +						else if (primaryConstructor != null) {, +					else if (nonSyntheticConstructors == 2 && primaryConstructor != null && defaultConstructor != null) {, +						candidateConstructors = new Constructor<?>[] {primaryConstructor, defaultConstructor};, +					}, +					else if (nonSyntheticConstructors == 1 && primaryConstructor != null) {, +						candidateConstructors = new Constructor<?>[] {primaryConstructor};, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +					int nonSyntheticConstructors = 0;, +						if (!candidate.isSynthetic()) {, +							nonSyntheticConstructors++;, +						}, +						else if (primaryConstructor != null) {, +					else if (nonSyntheticConstructors == 2 && primaryConstructor != null && defaultConstructor != null) {, +						candidateConstructors = new Constructor<?>[] {primaryConstructor, defaultConstructor};, +					}, +					else if (nonSyntheticConstructors == 1 && primaryConstructor != null) {, +						candidateConstructors = new Constructor<?>[] {primaryConstructor};, +++ b/spring-beans/src/test/kotlin/org/springframework/beans/factory/annotation/KotlinAutowiredTests.kt, +import org.springframework.beans.factory.BeanCreationException, +	fun `Autowiring by primary constructor with mandatory and optional parameters`() {, +		val bd = RootBeanDefinition(KotlinBeanWithMandatoryAndOptionalParameters::class.java), +		val kb = bf.getBean("bean", KotlinBeanWithMandatoryAndOptionalParameters::class.java), +	@Test, +	fun `Autowiring by primary constructor with optional parameters`() {, +		val bf = DefaultListableBeanFactory(), +		val bpp = AutowiredAnnotationBeanPostProcessor(), +		bpp.setBeanFactory(bf), +		bf.addBeanPostProcessor(bpp), +		val bd = RootBeanDefinition(KotlinBeanWithOptionalParameters::class.java), +		bd.scope = RootBeanDefinition.SCOPE_PROTOTYPE, +		bf.registerBeanDefinition("bean", bd), +, +		val kb = bf.getBean("bean", KotlinBeanWithOptionalParameters::class.java), +		assertNotNull(kb.optional1), +		assertEquals("foo", kb.optional2), +		assertEquals("bar", kb.initializedField), +	}, +, +		val bd = RootBeanDefinition(KotlinBeanWithAutowiredSecondaryConstructor::class.java), +		val kb = bf.getBean("bean", KotlinBeanWithAutowiredSecondaryConstructor::class.java), +	@Test(expected = BeanCreationException::class)  // SPR-16022, +	fun `No autowiring with primary and secondary non annotated constructors`() {, +		val bf = DefaultListableBeanFactory(), +		val bpp = AutowiredAnnotationBeanPostProcessor(), +		bpp.setBeanFactory(bf), +		bf.addBeanPostProcessor(bpp), +		val bd = RootBeanDefinition(KotlinBeanWithSecondaryConstructor::class.java), +		bd.scope = RootBeanDefinition.SCOPE_PROTOTYPE, +		bf.registerBeanDefinition("bean", bd), +		val tb = TestBean(), +		bf.registerSingleton("testBean", tb), +		val colour = Colour.BLUE, +		bf.registerSingleton("colour", colour), +, +		bf.getBean("bean", KotlinBeanWithSecondaryConstructor::class.java), +	}, +, +	class KotlinBeanWithMandatoryAndOptionalParameters(, +	class KotlinBeanWithOptionalParameters(, +			val optional1: TestBean = TestBean(),, +			val optional2: String = "foo", +	) {, +		var initializedField: String? = null, +, +		init {, +			initializedField = "bar", +		}, +	}, +, +	class KotlinBeanWithAutowiredSecondaryConstructor(, +	class KotlinBeanWithSecondaryConstructor(, +			val optional: String = "foo",, +			val injectedFromConstructor: TestBean, +	) {, +		constructor(injectedFromSecondaryConstructor: Colour, injectedFromConstructor: TestBean, optional: String = "bar") : this(optional, injectedFromConstructor) {, +			this.injectedFromSecondaryConstructor = injectedFromSecondaryConstructor, +		}, +, +		var injectedFromSecondaryConstructor: Colour? = null, +	}, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +					int nonSyntheticConstructors = 0;, +						if (!candidate.isSynthetic()) {, +							nonSyntheticConstructors++;, +						}, +						else if (primaryConstructor != null) {, +					else if (nonSyntheticConstructors == 2 && primaryConstructor != null && defaultConstructor != null) {, +						candidateConstructors = new Constructor<?>[] {primaryConstructor, defaultConstructor};, +					}, +					else if (nonSyntheticConstructors == 1 && primaryConstructor != null) {, +						candidateConstructors = new Constructor<?>[] {primaryConstructor};, +++ b/spring-beans/src/test/kotlin/org/springframework/beans/factory/annotation/KotlinAutowiredTests.kt, +import org.springframework.beans.factory.BeanCreationException, +	fun `Autowiring by primary constructor with mandatory and optional parameters`() {]