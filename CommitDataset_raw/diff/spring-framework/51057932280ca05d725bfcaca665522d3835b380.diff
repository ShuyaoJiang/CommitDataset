[+++ b/org.springframework.web/src/main/java/org/springframework/http/HttpEntity.java, + * HttpHeaders headers = new HttpHeaders();, + * headers.setContentType(MediaType.TEXT_PLAIN);, + * HttpEntity&lt;String&gt; entity = new HttpEntity&lt;String&gt;(helloWorld, headers);, + * <pre class="code">, + * public HttpEntity&lt;String&gt; handle() {, + *   return new HttpEntity&lt;String&gt;("Hello World", responseHeaders);, +++ b/org.springframework.web/src/main/java/org/springframework/http/HttpEntity.java, + * HttpHeaders headers = new HttpHeaders();, + * headers.setContentType(MediaType.TEXT_PLAIN);, + * HttpEntity&lt;String&gt; entity = new HttpEntity&lt;String&gt;(helloWorld, headers);, + * <pre class="code">, + * public HttpEntity&lt;String&gt; handle() {, + *   return new HttpEntity&lt;String&gt;("Hello World", responseHeaders);, +++ b/org.springframework.web/src/main/java/org/springframework/http/ResponseEntity.java, + * <p>Returned by {@link org.springframework.web.client.RestTemplate#getForEntity}:, + * <pre class="code">, + * ResponseEntity&lt;String&gt; entity = template.getForEntity("http://example.com", String.class);, + * String body = entity.getBody();, + * MediaType contentType = entity.getHeaders().getContentType();, + * HttpStatus statusCode = entity.getStatusCode();, + * </pre>, + * Can also be used in Spring MVC, as a return value from a @Controller method:, + * <p>Can be used in Spring MVC, as a return value from a @Controller method:, + * <pre class="code">, + * &#64;RequestMapping("/handle"), + * public ResponseEntity&lt;String&gt; handle() {, + *   HttpHeaders responseHeaders = new HttpHeaders();, + *   responseHeaders.set("MyResponseHeader", "MyValue");, + *   return new ResponseEntity&lt;String&gt;("Hello World", responseHeaders, HttpStatus.CREATED);, + * }, + * </pre>, + *]