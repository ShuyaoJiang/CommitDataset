[+++ b/spring-framework-reference/src/new-in-3.xml, +      for type conversion, and may also be used by a Spring Container when, +        conversion between objects and their representation in HTTP requests, +        and responses.</para>, +        <para>Refer to the sections on <link linkend="mvc">MVC</link> and <link, +++ b/spring-framework-reference/src/new-in-3.xml, +      for type conversion, and may also be used by a Spring Container when, +        conversion between objects and their representation in HTTP requests, +        and responses.</para>, +        <para>Refer to the sections on <link linkend="mvc">MVC</link> and <link, +++ b/spring-framework-reference/src/overview.xml, +      about Inversion of Control (IoC) on his site in 2004. Fowler suggested, +    <para>The Spring Framework <emphasis>Inversion of Control</emphasis> (IoC), +    component addresses this concern by, +      supports setting and getting property values, property assignment,, +      supports list projection and selection as well as common list, +      all of these O/R-mapping frameworks in combination with all of the other, +      features Spring offers, such as the simple declarative transaction, +      management feature mentioned previously.</para>, +      clean separation between domain model code and web, +    transactional, just as it would be if you used EJB container-managed, +    <para>The Spring Framework also provides an <link linkend="ejb">access, +    and abstraction layer</link> for Enterprise JavaBeans, enabling you to, +    reuse your existing POJOs and wrap them in stateless session beans for, +++ b/spring-framework-reference/src/new-in-3.xml, +      for type conversion, and may also be used by a Spring Container when, +        conversion between objects and their representation in HTTP requests, +        and responses.</para>, +        <para>Refer to the sections on <link linkend="mvc">MVC</link> and <link, +++ b/spring-framework-reference/src/overview.xml, +      about Inversion of Control (IoC) on his site in 2004. Fowler suggested, +    <para>The Spring Framework <emphasis>Inversion of Control</emphasis> (IoC), +    component addresses this concern by, +      supports setting and getting property values, property assignment,, +      supports list projection and selection as well as common list, +      all of these O/R-mapping frameworks in combination with all of the other, +      features Spring offers, such as the simple declarative transaction, +      management feature mentioned previously.</para>, +      clean separation between domain model code and web, +    transactional, just as it would be if you used EJB container-managed, +    <para>The Spring Framework also provides an <link linkend="ejb">access, +    and abstraction layer</link> for Enterprise JavaBeans, enabling you to, +    reuse your existing POJOs and wrap them in stateless session beans for, +++ b/spring-framework-reference/src/spring-framework-reference.xml, +			    easier to wire together in a test without having to set up]