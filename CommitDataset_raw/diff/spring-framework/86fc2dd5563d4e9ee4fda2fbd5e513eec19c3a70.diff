[+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveConstructorResolver.java, +			Constructor<?> matchRequiringConversion = null;, +					else if (matchInfo.isCloseMatch()) {, +					else if (matchInfo.isMatchRequiringConversion()) {, +						matchRequiringConversion = ctor;, +					}, +			if (closeMatch != null) {, +				return new ReflectiveConstructorExecutor(closeMatch);, +			}, +			else if (matchRequiringConversion != null) {, +				return new ReflectiveConstructorExecutor(matchRequiringConversion);, +			}, +			else {, +				return null;, +			}, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveConstructorResolver.java, +			Constructor<?> matchRequiringConversion = null;, +					else if (matchInfo.isCloseMatch()) {, +					else if (matchInfo.isMatchRequiringConversion()) {, +						matchRequiringConversion = ctor;, +					}, +			if (closeMatch != null) {, +				return new ReflectiveConstructorExecutor(closeMatch);, +			}, +			else if (matchRequiringConversion != null) {, +				return new ReflectiveConstructorExecutor(matchRequiringConversion);, +			}, +			else {, +				return null;, +			}, +++ b/spring-expression/src/test/java/org/springframework/expression/spel/SpelReproTests.java, +import java.util.Collection;, +import java.util.Collections;, +import java.util.HashSet;, +						} catch (Exception ex) {, +	public void SPR_9194() {, +		Expression expr = parser.parseExpression("['one'] == ['two']");, +		assertTrue(expr.getValue(map, Boolean.class));, +	}, +, +	@Test, +	public void SPR_11348() {, +		Collection<String> coll = new HashSet<String>();, +		coll.add("one");, +		coll.add("two");, +		coll = Collections.unmodifiableCollection(coll);, +, +		SpelExpressionParser parser = new SpelExpressionParser();, +		Expression expr = parser.parseExpression("new java.util.ArrayList(#root)");, +		Object value = expr.getValue(coll);, +		assertTrue(value instanceof ArrayList);, +		ArrayList list = (ArrayList) value;, +		assertEquals("one", list.get(0));, +		assertEquals("two", list.get(1));]