[+++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperTests.java, +	@Test, +	public void testGenericArraySetter() {, +		SkipReaderStub foo = new SkipReaderStub();, +		BeanWrapperImpl bwi = new BeanWrapperImpl(foo);, +		List<String> values = new LinkedList<String>();, +		values.add("1");, +		values.add("2");, +		values.add("3");, +		values.add("4");, +		bwi.setPropertyValue("items", values);, +		Object[] result = foo.items;, +		assertEquals(4, result.length);, +		assertEquals("1", result[0]);, +		assertEquals("2", result[1]);, +		assertEquals("3", result[2]);, +		assertEquals("4", result[3]);, +	}, +, +, +	public static class SkipReaderStub<T> {, +, +		public T[] items;, +, +		public SkipReaderStub() {, +		}, +, +		public SkipReaderStub(T... items) {, +			this.items = items;, +		}, +, +		public void setItems(T... items) {, +			this.items = items;, +		}, +	}, +, +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperTests.java, +	@Test, +	public void testGenericArraySetter() {, +		SkipReaderStub foo = new SkipReaderStub();, +		BeanWrapperImpl bwi = new BeanWrapperImpl(foo);, +		List<String> values = new LinkedList<String>();, +		values.add("1");, +		values.add("2");, +		values.add("3");, +		values.add("4");, +		bwi.setPropertyValue("items", values);, +		Object[] result = foo.items;, +		assertEquals(4, result.length);, +		assertEquals("1", result[0]);, +		assertEquals("2", result[1]);, +		assertEquals("3", result[2]);, +		assertEquals("4", result[3]);, +	}, +, +, +	public static class SkipReaderStub<T> {, +, +		public T[] items;, +, +		public SkipReaderStub() {, +		}, +, +		public SkipReaderStub(T... items) {, +			this.items = items;, +		}, +, +		public void setItems(T... items) {, +			this.items = items;, +		}, +	}, +, +++ b/spring-core/src/main/java/org/springframework/core/ResolvableType.java, +	 * however, bounds of {@code Object.class} will be ignored., +++ b/spring-beans/src/test/java/org/springframework/beans/BeanWrapperTests.java, +	@Test, +	public void testGenericArraySetter() {, +		SkipReaderStub foo = new SkipReaderStub();, +		BeanWrapperImpl bwi = new BeanWrapperImpl(foo);, +		List<String> values = new LinkedList<String>();, +		values.add("1");, +		values.add("2");, +		values.add("3");, +		values.add("4");, +		bwi.setPropertyValue("items", values);, +		Object[] result = foo.items;, +		assertEquals(4, result.length);, +		assertEquals("1", result[0]);, +		assertEquals("2", result[1]);, +		assertEquals("3", result[2]);, +		assertEquals("4", result[3]);, +	}, +, +, +	public static class SkipReaderStub<T> {, +, +		public T[] items;, +, +		public SkipReaderStub() {, +		}]