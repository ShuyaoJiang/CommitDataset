[+++ b/spring-websocket/src/main/java/org/springframework/sockjs/AbstractSockJsSession.java, +	public void delegateError(Throwable ex) throws Exception {, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/AbstractSockJsSession.java, +	public void delegateError(Throwable ex) throws Exception {, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/server/support/DefaultSockJsService.java, +import org.springframework.sockjs.server.SockJsService;, + * A default implementation of {@link SockJsService} adding support for transport handling, + * and session management., +	/**, +	 * Create an instance with default {@link TransportHandler transport handler} types., +	 *, +	 * @param taskScheduler a task scheduler for heart-beat messages and removing, +	 *        timed-out sessions; the provided TaskScheduler should be declared as a, +	 *        Spring bean to ensure it is initialized at start up and shut down when the, +	 *        application stops., +	 */, +	/**, +	 * Create an instance by overriding or replacing completely the default, +	 * {@link TransportHandler transport handler} types., +	 *, +	 * @param taskScheduler a task scheduler for heart-beat messages and removing, +	 *        timed-out sessions; the provided TaskScheduler should be declared as a, +	 *        Spring bean to ensure it is initialized at start up and shut down when the, +	 *        application stops., +	 * @param transportHandlers the transport handlers to use (replaces the default ones);, +	 *        can be {@code null}., +	 * @param transportHandlerOverrides zero or more overrides to the default transport, +	 *        handler types., +	 */, +	protected final Set<TransportHandler> getDefaultTransportHandlers() {, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/AbstractSockJsSession.java, +	public void delegateError(Throwable ex) throws Exception {, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/server/support/DefaultSockJsService.java, +import org.springframework.sockjs.server.SockJsService;, + * A default implementation of {@link SockJsService} adding support for transport handling, + * and session management., +	/**, +	 * Create an instance with default {@link TransportHandler transport handler} types., +	 *, +	 * @param taskScheduler a task scheduler for heart-beat messages and removing, +	 *        timed-out sessions; the provided TaskScheduler should be declared as a, +	 *        Spring bean to ensure it is initialized at start up and shut down when the, +	 *        application stops., +	 */, +	/**, +	 * Create an instance by overriding or replacing completely the default, +	 * {@link TransportHandler transport handler} types., +	 *, +	 * @param taskScheduler a task scheduler for heart-beat messages and removing, +	 *        timed-out sessions; the provided TaskScheduler should be declared as a, +	 *        Spring bean to ensure it is initialized at start up and shut down when the, +	 *        application stops., +	 * @param transportHandlers the transport handlers to use (replaces the default ones);, +	 *        can be {@code null}., +	 * @param transportHandlerOverrides zero or more overrides to the default transport, +	 *        handler types., +	 */, +	protected final Set<TransportHandler> getDefaultTransportHandlers() {, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/server/transport/SockJsWebSocketHandler.java, +	public void handleError(Throwable exception, WebSocketSession webSocketSession) throws Exception {, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/AbstractSockJsSession.java, +	public void delegateError(Throwable ex) throws Exception {, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/server/support/DefaultSockJsService.java, +import org.springframework.sockjs.server.SockJsService;, + * A default implementation of {@link SockJsService} adding support for transport handling, + * and session management., +	/**, +	 * Create an instance with default {@link TransportHandler transport handler} types., +	 *, +	 * @param taskScheduler a task scheduler for heart-beat messages and removing, +	 *        timed-out sessions; the provided TaskScheduler should be declared as a, +	 *        Spring bean to ensure it is initialized at start up and shut down when the, +	 *        application stops., +	 */, +	/**, +	 * Create an instance by overriding or replacing completely the default, +	 * {@link TransportHandler transport handler} types., +	 *, +	 * @param taskScheduler a task scheduler for heart-beat messages and removing, +	 *        timed-out sessions; the provided TaskScheduler should be declared as a, +	 *        Spring bean to ensure it is initialized at start up and shut down when the, +	 *        application stops., +	 * @param transportHandlers the transport handlers to use (replaces the default ones);, +	 *        can be {@code null}., +	 * @param transportHandlerOverrides zero or more overrides to the default transport, +	 *        handler types., +	 */, +	protected final Set<TransportHandler> getDefaultTransportHandlers() {, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/server/transport/SockJsWebSocketHandler.java, +	public void handleError(Throwable exception, WebSocketSession webSocketSession) throws Exception {, +++ b/spring-websocket/src/main/java/org/springframework/websocket/CloseStatus.java, +	 * "1012 indicates that the service is restarted. A client may reconnect, and if it, +	 * chooses to do, should reconnect using a randomized delay of 5 - 30s.", +	 * "1013 indicates that the service is experiencing overload. A client should only, +	 * the same IP upon user action.", +++ b/spring-websocket/src/main/java/org/springframework/sockjs/AbstractSockJsSession.java, +	public void delegateError(Throwable ex) throws Exception {, +++ b/spring-websocket/src/main/java/org/springframework/sockjs/server/support/DefaultSockJsService.java, +import org.springframework.sockjs.server.SockJsService;, + * A default implementation of {@link SockJsService} adding support for transport handling]