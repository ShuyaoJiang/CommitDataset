[+++ b/org.springframework.test/src/test/java/org/springframework/test/context/testng/ConcreteTransactionalTestNGSpringContextTests.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.test.context.testng;, +, +import static org.springframework.test.transaction.TransactionTestUtils.assertInTransaction;, +import static org.springframework.test.transaction.TransactionTestUtils.inTransaction;, +import static org.testng.Assert.assertEquals;, +import static org.testng.Assert.assertNotNull;, +import static org.testng.Assert.assertNull;, +import static org.testng.Assert.assertTrue;, +, +import javax.annotation.Resource;, +import javax.sql.DataSource;, +, +import org.springframework.beans.Employee;, +import org.springframework.beans.Pet;, +import org.springframework.beans.factory.BeanNameAware;, +import org.springframework.beans.factory.InitializingBean;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.jdbc.BadSqlGrammarException;, +import org.springframework.jdbc.core.simple.SimpleJdbcTemplate;, +import org.springframework.test.annotation.NotTransactional;, +import org.springframework.test.context.ContextConfiguration;, +import org.springframework.test.context.transaction.AfterTransaction;, +import org.springframework.test.context.transaction.BeforeTransaction;, +import org.springframework.test.jdbc.SimpleJdbcTestUtils;, +import org.testng.annotations.AfterClass;, +import org.testng.annotations.AfterMethod;, +import org.testng.annotations.BeforeClass;, +import org.testng.annotations.BeforeMethod;, +import org.testng.annotations.Test;, +, +/**, + * Combined unit test for {@link AbstractTestNGSpringContextTests} and, + * {@link AbstractTransactionalTestNGSpringContextTests}., + * , + * @author Sam Brannen, + * @since 2.5, + */, +@org.junit.Ignore("TestNG tests should not be run by JUnit"), +@ContextConfiguration, +public class ConcreteTransactionalTestNGSpringContextTests extends AbstractTransactionalTestNGSpringContextTests, +		implements BeanNameAware, InitializingBean {, +, +	private static final String BOB = "bob";, +	private static final String JANE = "jane";, +	private static final String SUE = "sue";, +	private static final String YODA = "yoda";, +, +	private static int numSetUpCalls = 0;, +	private static int numSetUpCallsInTransaction = 0;, +	private static int numTearDownCalls = 0;, +	private static int numTearDownCallsInTransaction = 0;, +, +	// ------------------------------------------------------------------------|, +, +	private boolean beanInitialized = false;, +, +	private String beanName = "replace me with [" + getClass().getName() + "]";, +, +	private Employee employee;, +, +	@Autowired, +	private Pet pet;, +, +	@Autowired(required = false), +	protected Long nonrequiredLong;, +, +	@Resource(), +	protected String foo;, +, +	protected String bar;, +, +, +	// ------------------------------------------------------------------------|, +, +	private static int clearPersonTable(SimpleJdbcTemplate simpleJdbcTemplate) {, +		return SimpleJdbcTestUtils.deleteFromTables(simpleJdbcTemplate, "person");, +	}, +, +	private static void createPersonTable(SimpleJdbcTemplate simpleJdbcTemplate) {, +		try {, +			simpleJdbcTemplate.update("CREATE TABLE person (name VARCHAR(20) NOT NULL, PRIMARY KEY(name))");, +		}, +		catch (BadSqlGrammarException bsge) {]