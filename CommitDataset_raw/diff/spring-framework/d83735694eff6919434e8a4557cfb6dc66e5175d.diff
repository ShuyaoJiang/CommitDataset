[+++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotationScopeMetadataResolver.java, +		this.defaultProxyMode = ScopedProxyMode.NO;, +, +, +				if (proxyMode == null || proxyMode == ScopedProxyMode.DEFAULT) {, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotationScopeMetadataResolver.java, +		this.defaultProxyMode = ScopedProxyMode.NO;, +, +, +				if (proxyMode == null || proxyMode == ScopedProxyMode.DEFAULT) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +			if (logger.isErrorEnabled()) {, +	}, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotationScopeMetadataResolver.java, +		this.defaultProxyMode = ScopedProxyMode.NO;, +, +, +				if (proxyMode == null || proxyMode == ScopedProxyMode.DEFAULT) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +			if (logger.isErrorEnabled()) {, +	}, +++ b/spring-web/src/main/java/org/springframework/web/method/support/HandlerMethodArgumentResolverComposite.java, + * Copyright 2002-2015 the original author or authors., +		return (getArgumentResolver(parameter) != null);, +		if (resolver == null) {, +			throw new IllegalArgumentException("Unknown parameter type [" + parameter.getParameterType().getName() + "]");, +		}, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotationScopeMetadataResolver.java, +		this.defaultProxyMode = ScopedProxyMode.NO;, +, +, +				if (proxyMode == null || proxyMode == ScopedProxyMode.DEFAULT) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +			if (logger.isErrorEnabled()) {, +	}, +++ b/spring-web/src/main/java/org/springframework/web/method/support/HandlerMethodArgumentResolverComposite.java, + * Copyright 2002-2015 the original author or authors., +		return (getArgumentResolver(parameter) != null);, +		if (resolver == null) {, +			throw new IllegalArgumentException("Unknown parameter type [" + parameter.getParameterType().getName() + "]");, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java, +import org.springframework.http.converter.HttpMessageNotReadableException;, +	protected <T> Object readWithMessageConverters(NativeWebRequest webRequest, MethodParameter methodParam,, +			Type paramType) throws IOException, HttpMediaTypeNotSupportedException, HttpMessageNotReadableException {, +	protected <T> Object readWithMessageConverters(HttpInputMessage inputMessage, MethodParameter param,, +			Type targetType) throws IOException, HttpMediaTypeNotSupportedException, HttpMessageNotReadableException {, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotationScopeMetadataResolver.java, +		this.defaultProxyMode = ScopedProxyMode.NO;, +, +, +				if (proxyMode == null || proxyMode == ScopedProxyMode.DEFAULT) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +			if (logger.isErrorEnabled()) {, +	}, +++ b/spring-web/src/main/java/org/springframework/web/method/support/HandlerMethodArgumentResolverComposite.java, + * Copyright 2002-2015 the original author or authors., +		return (getArgumentResolver(parameter) != null);, +		if (resolver == null) {, +			throw new IllegalArgumentException("Unknown parameter type [" + parameter.getParameterType().getName() + "]");, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java, +import org.springframework.http.converter.HttpMessageNotReadableException;, +	protected <T> Object readWithMessageConverters(NativeWebRequest webRequest, MethodParameter methodParam,, +			Type paramType) throws IOException, HttpMediaTypeNotSupportedException, HttpMessageNotReadableException {, +	protected <T> Object readWithMessageConverters(HttpInputMessage inputMessage, MethodParameter param,, +			Type targetType) throws IOException, HttpMediaTypeNotSupportedException, HttpMessageNotReadableException {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java, +import org.springframework.http.converter.HttpMessageNotWritableException;, +			throws IOException, HttpMediaTypeNotAcceptableException, HttpMessageNotWritableException {, +			throws IOException, HttpMediaTypeNotAcceptableException, HttpMessageNotWritableException {, +++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotationScopeMetadataResolver.java, +		this.defaultProxyMode = ScopedProxyMode.NO;, +, +, +				if (proxyMode == null || proxyMode == ScopedProxyMode.DEFAULT) {, +++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java, +			if (logger.isErrorEnabled()) {, +	}, +++ b/spring-web/src/main/java/org/springframework/web/method/support/HandlerMethodArgumentResolverComposite.java, + * Copyright 2002-2015 the original author or authors., +		return (getArgumentResolver(parameter) != null);, +		if (resolver == null) {, +			throw new IllegalArgumentException("Unknown parameter type [" + parameter.getParameterType().getName() + "]");, +		}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java, +import org.springframework.http.converter.HttpMessageNotReadableException;, +	protected <T> Object readWithMessageConverters(NativeWebRequest webRequest, MethodParameter methodParam,, +			Type paramType) throws IOException, HttpMediaTypeNotSupportedException, HttpMessageNotReadableException {, +	protected <T> Object readWithMessageConverters(HttpInputMessage inputMessage, MethodParameter param,, +			Type targetType) throws IOException, HttpMediaTypeNotSupportedException, HttpMessageNotReadableException {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java, +import org.springframework.http.converter.HttpMessageNotWritableException;, +			throws IOException, HttpMediaTypeNotAcceptableException, HttpMessageNotWritableException {, +			throws IOException, HttpMediaTypeNotAcceptableException, HttpMessageNotWritableException {, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.java, +import org.springframework.http.converter.HttpMessageNotWritableException;, +			Type paramType) throws IOException, HttpMediaTypeNotSupportedException, HttpMessageNotReadableException {, +			throws IOException, HttpMediaTypeNotAcceptableException, HttpMessageNotWritableException {]