[+++ b/spring-web-reactive/src/main/java/org/springframework/web/client/reactive/WebResponseExtractors.java, +	 * @see ResolvableType#forClassWithGenerics(Class, Class[]), +	public static <T> WebResponseExtractor<Mono<T>> body(ResolvableType bodyType) {, +				.flatMap(resp -> decodeResponseBody(resp, bodyType, webResponse.getMessageDecoders())), +	 * Extract the response body and decode it, returning it as a {@code Mono<T>}, +	 */, +	public static <T> WebResponseExtractor<Mono<T>> body(Class<T> sourceClass) {, +		ResolvableType bodyType = ResolvableType.forClass(sourceClass);, +		return body(bodyType);, +	}, +, +, +	/**, +	 * Extract the response body and decode it, returning it as a {@code Flux<T>}, +	 * @see ResolvableType#forClassWithGenerics(Class, Class[]), +	 */, +	public static <T> WebResponseExtractor<Flux<T>> bodyStream(ResolvableType bodyType) {, +		return webResponse -> webResponse.getClientResponse(), +				.flatMap(resp -> decodeResponseBody(resp, bodyType, webResponse.getMessageDecoders()));, +	}, +, +	/**, +		ResolvableType bodyType = ResolvableType.forClass(sourceClass);, +		return bodyStream(bodyType);, +	 * @see ResolvableType#forClassWithGenerics(Class, Class[]), +	public static <T> WebResponseExtractor<Mono<ResponseEntity<T>>> response(ResolvableType bodyType) {, +	 * with its body decoded as a single type {@code T}, +	 */, +	public static <T> WebResponseExtractor<Mono<ResponseEntity<T>>> response(Class<T> bodyClass) {, +		ResolvableType bodyType = ResolvableType.forClass(bodyClass);, +		return response(bodyType);, +	}, +, +	/**, +	 * Extract the full response body as a {@code ResponseEntity}, +	 * with its body decoded as a {@code Flux<T>}, +	 * @see ResolvableType#forClassWithGenerics(Class, Class[]), +	 */, +	public static <T> WebResponseExtractor<Mono<ResponseEntity<Flux<T>>>> responseStream(ResolvableType type) {, +		return webResponse -> webResponse.getClientResponse(), +				.map(response -> new ResponseEntity<>(, +						decodeResponseBody(response, type, webResponse.getMessageDecoders()),, +						response.getHeaders(), response.getStatusCode()));, +	}, +, +	/**, +	 * Extract the full response body as a {@code ResponseEntity}, +		return responseStream(resolvableType);]