[+++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +			if (nLocations == 0) {, +				throw new IllegalArgumentException("At least one @PropertySource(value) location is required");, +			}, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, +			if (nLocations == 0) {, +				throw new IllegalArgumentException("At least one @PropertySource(value) location is required");, +			}, +++ b/org.springframework.context/src/test/java/org/springframework/context/annotation/PropertySourceAnnotationTests.java, +	@Test(expected=IllegalArgumentException.class), +	public void withEmptyResourceLocations() {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		ctx.register(ConfigWithEmptyResourceLocations.class);, +		ctx.refresh();, +, +, +	@Configuration, +	@PropertySource(value = {}), +	static class ConfigWithEmptyResourceLocations {, +	}]