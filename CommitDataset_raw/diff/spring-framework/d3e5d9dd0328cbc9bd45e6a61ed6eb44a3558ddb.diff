[+++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/Jaxb2Decoder.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/Jaxb2Decoder.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/JacksonJsonEncoder.java, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/Jaxb2Decoder.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/JacksonJsonEncoder.java, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/Jaxb2Encoder.java, +, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/Jaxb2Decoder.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/JacksonJsonEncoder.java, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/Jaxb2Encoder.java, +, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/JsonObjectEncoder.java, +, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/Jaxb2Decoder.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/JacksonJsonEncoder.java, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/Jaxb2Encoder.java, +, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/JsonObjectEncoder.java, +, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/support/HintUtils.java, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/Jaxb2Decoder.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/JacksonJsonEncoder.java, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/Jaxb2Encoder.java, +, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/JsonObjectEncoder.java, +, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/support/HintUtils.java, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/io/BufferOutputStream.java, + * Simple extension of {@link OutputStream} that uses {@link Buffer} to stream, + * the content, + *, +	@Override, +	@Override, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/Jaxb2Decoder.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/JacksonJsonEncoder.java, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/Jaxb2Encoder.java, +, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/JsonObjectEncoder.java, +, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/support/HintUtils.java, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/io/BufferOutputStream.java, + * Simple extension of {@link OutputStream} that uses {@link Buffer} to stream, + * the content, + *, +	@Override, +	@Override, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/io/ByteBufferInputStream.java, +	public ByteBufferInputStream(ByteBuffer buf) {, +		b = buf;, +	}, +	public int available() {, +		return b.remaining();, +	}, +, +	@Override, +	public int read() throws IOException {, +		return b.hasRemaining() ? (b.get() & 0xFF) : -1;, +	}, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/decoder/Jaxb2Decoder.java, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/JacksonJsonEncoder.java, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/Jaxb2Encoder.java, +, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/encoder/JsonObjectEncoder.java, +, +, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/codec/support/HintUtils.java, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/io/BufferOutputStream.java, + * Simple extension of {@link OutputStream} that uses {@link Buffer} to stream, + * the content, + *, +	@Override, +	@Override, +++ b/spring-web-reactive/src/main/java/org/springframework/reactive/io/ByteBufferInputStream.java, +	public ByteBufferInputStream(ByteBuffer buf) {, +		b = buf;, +	}, +	public int available() {, +		return b.remaining();, +	}, +, +	@Override, +	public int read() throws IOException {]