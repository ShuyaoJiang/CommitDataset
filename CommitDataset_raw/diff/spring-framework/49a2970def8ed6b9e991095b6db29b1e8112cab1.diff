[+++ b/org.springframework.core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, + * Copyright 2002-2010 the original author or authors., +			Method equivalentMethod;, +				equivalentMethod = iface.getMethod(method.getName(), method.getParameterTypes());, +	 * @return the default value of the named attribute, or <code>null</code> if not found, +++ b/org.springframework.core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, + * Copyright 2002-2010 the original author or authors., +			Method equivalentMethod;, +				equivalentMethod = iface.getMethod(method.getName(), method.getParameterTypes());, +	 * @return the default value of the named attribute, or <code>null</code> if not found, +++ b/org.springframework.core/src/main/java/org/springframework/util/ReflectionUtils.java, +	 * class and superclasses (or given interface and super-interfaces)., +		Method[] methods = clazz.getDeclaredMethods();, +		if (clazz.getSuperclass() != null) {, +			doWithMethods(clazz.getSuperclass(), mc, mf);, +		else if (clazz.isInterface()) {, +			for (Class<?> superIfc : clazz.getInterfaces()) {, +				doWithMethods(superIfc, mc, mf);, +			}, +		}]