[+++ b/spring-context-support/src/test/java/org/springframework/validation/beanvalidation2/SpringValidatorAdapterTests.java, +import java.util.HashMap;, +import java.util.Map;, +import javax.validation.Valid;, +	@Test  // SPR-15839, +	public void testMapValueConstraint() {, +		Map<String, String> property = new HashMap<>();, +		property.put("no value can be", null);, +, +		BeanWithMapEntryConstraint bean = new BeanWithMapEntryConstraint();, +		bean.setProperty(property);, +, +		BeanPropertyBindingResult errors = new BeanPropertyBindingResult(bean, "bean");, +		validatorAdapter.validate(bean, errors);, +, +		assertThat(errors.getFieldErrorCount("property[no value can be]"), is(1));, +		assertNull(errors.getFieldValue("property[no value can be]"));, +	}, +, +	@Test  // SPR-15839, +	public void testMapEntryConstraint() {, +		Map<String, String> property = new HashMap<>();, +		property.put(null, null);, +, +		BeanWithMapEntryConstraint bean = new BeanWithMapEntryConstraint();, +		bean.setProperty(property);, +, +		BeanPropertyBindingResult errors = new BeanPropertyBindingResult(bean, "bean");, +		validatorAdapter.validate(bean, errors);, +, +		assertTrue(errors.hasFieldErrors("property[]"));, +		assertNull(errors.getFieldValue("property[]"));, +	}, +		@Valid, +, +, +	public class BeanWithMapEntryConstraint {, +, +		@Valid, +		private Map<@NotNull String, @NotNull String> property;, +, +		public Map<String, String> getProperty() {, +			return property;, +		}, +, +		public void setProperty(Map<String, String> property) {, +			this.property = property;, +		}, +	}, +, +++ b/spring-context-support/src/test/java/org/springframework/validation/beanvalidation2/SpringValidatorAdapterTests.java, +import java.util.HashMap;, +import java.util.Map;, +import javax.validation.Valid;, +	@Test  // SPR-15839, +	public void testMapValueConstraint() {, +		Map<String, String> property = new HashMap<>();, +		property.put("no value can be", null);, +, +		BeanWithMapEntryConstraint bean = new BeanWithMapEntryConstraint();, +		bean.setProperty(property);, +, +		BeanPropertyBindingResult errors = new BeanPropertyBindingResult(bean, "bean");, +		validatorAdapter.validate(bean, errors);, +, +		assertThat(errors.getFieldErrorCount("property[no value can be]"), is(1));, +		assertNull(errors.getFieldValue("property[no value can be]"));, +	}, +, +	@Test  // SPR-15839, +	public void testMapEntryConstraint() {, +		Map<String, String> property = new HashMap<>();, +		property.put(null, null);, +, +		BeanWithMapEntryConstraint bean = new BeanWithMapEntryConstraint();, +		bean.setProperty(property);, +, +		BeanPropertyBindingResult errors = new BeanPropertyBindingResult(bean, "bean");, +		validatorAdapter.validate(bean, errors);, +, +		assertTrue(errors.hasFieldErrors("property[]"));, +		assertNull(errors.getFieldValue("property[]"));, +	}, +		@Valid, +, +, +	public class BeanWithMapEntryConstraint {, +, +		@Valid, +		private Map<@NotNull String, @NotNull String> property;, +, +		public Map<String, String> getProperty() {, +			return property;, +		}, +, +		public void setProperty(Map<String, String> property) {, +			this.property = property;, +		}, +	}, +]