[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/CompositeDatabasePopulator.java, +, +, +	 * Add one or more populators to the list of delegates., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/CompositeDatabasePopulator.java, +, +, +	 * Add one or more populators to the list of delegates., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/DatabasePopulator.java, +	 * Populate the database using the provided JDBC connection., +	 * <p>Concrete implementations <em>may</em> throw an {@link SQLException} if, +	 * an error is encountered but are <em>strongly encouraged</em> to throw a, +	 * specific {@link ScriptException} instead. For example, Spring's, +	 * {@link ResourceDatabasePopulator} and {@link DatabasePopulatorUtils} wrap, +	 * all {@code SQLExceptions} in {@code ScriptExceptions}., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/CompositeDatabasePopulator.java, +, +, +	 * Add one or more populators to the list of delegates., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/DatabasePopulator.java, +	 * Populate the database using the provided JDBC connection., +	 * <p>Concrete implementations <em>may</em> throw an {@link SQLException} if, +	 * an error is encountered but are <em>strongly encouraged</em> to throw a, +	 * specific {@link ScriptException} instead. For example, Spring's, +	 * {@link ResourceDatabasePopulator} and {@link DatabasePopulatorUtils} wrap, +	 * all {@code SQLExceptions} in {@code ScriptExceptions}., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +	public void populate(Connection connection) throws ScriptException {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/CompositeDatabasePopulator.java, +, +, +	 * Add one or more populators to the list of delegates., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/DatabasePopulator.java, +	 * Populate the database using the provided JDBC connection., +	 * <p>Concrete implementations <em>may</em> throw an {@link SQLException} if, +	 * an error is encountered but are <em>strongly encouraged</em> to throw a, +	 * specific {@link ScriptException} instead. For example, Spring's, +	 * {@link ResourceDatabasePopulator} and {@link DatabasePopulatorUtils} wrap, +	 * all {@code SQLExceptions} in {@code ScriptExceptions}., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.java, +	public void populate(Connection connection) throws ScriptException {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java, +	 * @throws ScriptException if an error occurred while splitting the SQL script, +	 * @throws ScriptException if an error occurred while splitting the SQL script, +	 * @throws ScriptException if an error occurred while splitting the SQL script, +	 * @throws IOException in case of I/O errors, +	 * @throws IOException in case of I/O errors, +	 * @throws ScriptException if an error occurred while executing the SQL script, +	public static void executeSqlScript(Connection connection, Resource resource) throws ScriptException {, +	 * @throws ScriptException if an error occurred while executing the SQL script, +	public static void executeSqlScript(Connection connection, EncodedResource resource) throws ScriptException {, +	 * @throws ScriptException if an error occurred while executing the SQL script, +			String blockCommentEndDelimiter) throws ScriptException {, +		try {, +, +		catch (Exception ex) {, +			if (ex instanceof ScriptException) {, +				throw (ScriptException) ex;, +			}, +, +			throw new UncategorizedScriptException(, +				"Failed to execute database script from resource [" + resource + "]", ex);, +		}, +	}]