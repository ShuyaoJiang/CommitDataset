[+++ b/org.springframework.context/src/main/java/org/springframework/mapping/MappingFailure.java, + * TODO - other fields required here?, +++ b/org.springframework.context/src/main/java/org/springframework/mapping/MappingFailure.java, + * TODO - other fields required here?, +++ b/org.springframework.context/src/main/java/org/springframework/mapping/support/DefaultMapperTargetFactory.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.mapping.support;, +, +import org.springframework.beans.BeanUtils;, +import org.springframework.core.convert.TypeDescriptor;, +, +/**, + * Creates a mapping target by calling its default constructor., + * @author Keith Donald, + * @see BeanUtils#instantiate(Class), + */, +class DefaultMapperTargetFactory implements MapperTargetFactory {, +, +	public Object createTarget(Object source, TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return BeanUtils.instantiate(targetType.getType());, +	}, +, +}, +++ b/org.springframework.context/src/main/java/org/springframework/mapping/MappingFailure.java, + * TODO - other fields required here?, +++ b/org.springframework.context/src/main/java/org/springframework/mapping/support/DefaultMapperTargetFactory.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.mapping.support;, +, +import org.springframework.beans.BeanUtils;, +import org.springframework.core.convert.TypeDescriptor;, +, +/**, + * Creates a mapping target by calling its default constructor., + * @author Keith Donald, + * @see BeanUtils#instantiate(Class), + */, +class DefaultMapperTargetFactory implements MapperTargetFactory {, +, +	public Object createTarget(Object source, TypeDescriptor sourceType, TypeDescriptor targetType) {, +		return BeanUtils.instantiate(targetType.getType());, +	}, +, +}, +++ b/org.springframework.context/src/main/java/org/springframework/mapping/support/MapperConverter.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.mapping.support;, +, +import org.springframework.core.convert.TypeDescriptor;, +import org.springframework.core.convert.support.GenericConverter;, +import org.springframework.mapping.Mapper;, +, +/**, + * Adapts a Mapper to a Converter, allowing the conversion between two object types to be completed by a Mapper., + * Delegates to a {@link MapperTargetFactory} to construct the conversion target object that will be mapped., + * The default MapperTargetFactory instantiates a target by calling its default constructor., + * @author Keith Donald, + */]