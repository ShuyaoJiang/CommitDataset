[+++ b/build.gradle, +	ext.kotlinVersion = '1.1.2-eap-73', +		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }, +	ext.jackson2Version        = "2.9.0.pr2", +	ext.rxjava2Version         = '2.0.8', +	ext.undertowVersion        = "1.4.12.Final", +	ext.xnioVersion            = "3.4.5.Final", +		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }, +		optional("org.jboss.xnio:xnio-api:${xnioVersion}"), +		optional("javax.json.bind:javax.json.bind-api:1.0.0-M1"), +		testCompile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jackson2Version}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +		testCompile("org.jboss.xnio:xnio-api:${xnioVersion}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +		optional("org.jboss.xnio:xnio-api:${xnioVersion}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +++ b/build.gradle, +	ext.kotlinVersion = '1.1.2-eap-73', +		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }, +	ext.jackson2Version        = "2.9.0.pr2", +	ext.rxjava2Version         = '2.0.8', +	ext.undertowVersion        = "1.4.12.Final", +	ext.xnioVersion            = "3.4.5.Final", +		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }, +		optional("org.jboss.xnio:xnio-api:${xnioVersion}"), +		optional("javax.json.bind:javax.json.bind-api:1.0.0-M1"), +		testCompile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jackson2Version}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +		testCompile("org.jboss.xnio:xnio-api:${xnioVersion}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +		optional("org.jboss.xnio:xnio-api:${xnioVersion}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +++ b/spring-aop/src/main/java/org/springframework/aop/support/annotation/AnnotationClassFilter.java, + * Copyright 2002-2013 the original author or authors., +	 * @param checkInherited whether to explicitly check the superclasses and, +	 * interfaces for the annotation type as well (even if the annotation type, +	 * is not marked as inherited itself), +++ b/build.gradle, +	ext.kotlinVersion = '1.1.2-eap-73', +		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }, +	ext.jackson2Version        = "2.9.0.pr2", +	ext.rxjava2Version         = '2.0.8', +	ext.undertowVersion        = "1.4.12.Final", +	ext.xnioVersion            = "3.4.5.Final", +		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }, +		optional("org.jboss.xnio:xnio-api:${xnioVersion}"), +		optional("javax.json.bind:javax.json.bind-api:1.0.0-M1"), +		testCompile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jackson2Version}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +		testCompile("org.jboss.xnio:xnio-api:${xnioVersion}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +		optional("org.jboss.xnio:xnio-api:${xnioVersion}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +++ b/spring-aop/src/main/java/org/springframework/aop/support/annotation/AnnotationClassFilter.java, + * Copyright 2002-2013 the original author or authors., +	 * @param checkInherited whether to explicitly check the superclasses and, +	 * interfaces for the annotation type as well (even if the annotation type, +	 * is not marked as inherited itself), +++ b/spring-aop/src/main/java/org/springframework/aop/support/annotation/AnnotationMatchingPointcut.java, + * Copyright 2002-2013 the original author or authors., +		this.classFilter = new AnnotationClassFilter(classAnnotationType);, +		this.methodMatcher = MethodMatcher.TRUE;, +	 * @param checkInherited whether to explicitly check the superclasses and, +	 * interfaces for the annotation type as well (even if the annotation type, +	 * is not marked as inherited itself), +			this.classFilter = new AnnotationClassFilter(classAnnotationType);, +			this.methodMatcher = new AnnotationMethodMatcher(methodAnnotationType);, +++ b/build.gradle, +	ext.kotlinVersion = '1.1.2-eap-73', +		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }, +	ext.jackson2Version        = "2.9.0.pr2", +	ext.rxjava2Version         = '2.0.8', +	ext.undertowVersion        = "1.4.12.Final", +	ext.xnioVersion            = "3.4.5.Final", +		maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }, +		optional("org.jboss.xnio:xnio-api:${xnioVersion}"), +		optional("javax.json.bind:javax.json.bind-api:1.0.0-M1"), +		testCompile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jackson2Version}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +		testCompile("org.jboss.xnio:xnio-api:${xnioVersion}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +		optional("org.jboss.xnio:xnio-api:${xnioVersion}"), +		testRuntime("org.jboss.xnio:xnio-nio:${xnioVersion}"), +++ b/spring-aop/src/main/java/org/springframework/aop/support/annotation/AnnotationClassFilter.java, + * Copyright 2002-2013 the original author or authors., +	 * @param checkInherited whether to explicitly check the superclasses and, +	 * interfaces for the annotation type as well (even if the annotation type, +	 * is not marked as inherited itself), +++ b/spring-aop/src/main/java/org/springframework/aop/support/annotation/AnnotationMatchingPointcut.java, + * Copyright 2002-2013 the original author or authors., +		this.classFilter = new AnnotationClassFilter(classAnnotationType);, +		this.methodMatcher = MethodMatcher.TRUE;, +	 * @param checkInherited whether to explicitly check the superclasses and, +	 * interfaces for the annotation type as well (even if the annotation type, +	 * is not marked as inherited itself), +			this.classFilter = new AnnotationClassFilter(classAnnotationType);, +			this.methodMatcher = new AnnotationMethodMatcher(methodAnnotationType);, +++ b/spring-aop/src/main/java/org/springframework/aop/support/annotation/AnnotationMethodMatcher.java, + * Copyright 2002-2013 the original author or authors., +		if (method.isAnnotationPresent(this.annotationType)) {]