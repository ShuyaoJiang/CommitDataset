[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java, + * Copyright 2002-2015 the original author or authors., +					// Postgres-style "::" casting operator should be skipped, +						// escaped ":" should be skipped, +					int j = i + 1;, +					if (j < statement.length && statement[j] == '?') {, +						// Postgres-style "??" operator should be skipped, +						i = i + 2;, +						continue;, +					}, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java, + * Copyright 2002-2015 the original author or authors., +					// Postgres-style "::" casting operator should be skipped, +						// escaped ":" should be skipped, +					int j = i + 1;, +					if (j < statement.length && statement[j] == '?') {, +						// Postgres-style "??" operator should be skipped, +						i = i + 2;, +						continue;, +					}, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/namedparam/NamedParameterUtilsTests.java, + * Copyright 2002-2015 the original author or authors., + * @author Artur Geraschenko, +	@Test  // SPR-4789, +	@Test  // SPR-4612, +	@Test  // SPR-13582, +	public void parseSqlStatementWithPostgresContainedOperator() throws Exception {, +		String expectedSql = "select 'first name' from artists where info->'stat'->'albums' = ?? ? and '[\"1\",\"2\",\"3\"]'::jsonb ?? '4'";, +		String sql = "select 'first name' from artists where info->'stat'->'albums' = ?? :album and '[\"1\",\"2\",\"3\"]'::jsonb ?? '4'";, +		ParsedSql parsedSql = NamedParameterUtils.parseSqlStatement(sql);, +		assertEquals(1, parsedSql.getTotalParameterCount());, +		assertEquals(expectedSql, NamedParameterUtils.substituteNamedParameters(parsedSql, null));, +	}, +, +	@Test  // SPR-7476, +	@Test  // SPR-7476, +	@Test  // SPR-7476, +	@Test  // SPR-2544, +	@Test  // SPR-2544, +	@Test  // SPR-3173, +	@Test  // SPR-8280]