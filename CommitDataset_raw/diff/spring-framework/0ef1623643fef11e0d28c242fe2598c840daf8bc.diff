[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java, +		String sourceDestination = parseResult.getSourceDestination();, +		String sourceDestination = SimpMessageHeaderAccessor.getDestination(headers);, +		if (sourceDestination == null || !checkDestination(sourceDestination, this.prefix)) {, +		switch (messageType) {, +			case SUBSCRIBE:, +			case UNSUBSCRIBE:, +				return parseSubscriptionMessage(message, headers, sourceDestination);, +			case MESSAGE:, +				return parseMessage(headers, sourceDestination);, +			default:, +				return null;, +		}, +	}, +, +	private ParseResult parseSubscriptionMessage(Message<?> message, MessageHeaders headers, String sourceDestination) {, +		String actualDestination = sourceDestination.substring(prefixEnd);, +		Principal principal = SimpMessageHeaderAccessor.getUser(headers);, +		Set<String> sessionIds = Collections.singleton(sessionId);, +		return new ParseResult(sourceDestination, actualDestination, sourceDestination, sessionIds, user);, +, +	private ParseResult parseMessage(MessageHeaders headers, String sourceDestination) {, +		int userEnd = sourceDestination.indexOf('/', prefixEnd);, +		String actualDestination = sourceDestination.substring(userEnd);, +		String userName = sourceDestination.substring(prefixEnd, userEnd);, +		String sessionId = SimpMessageHeaderAccessor.getSessionId(headers);, +			sessionIds = getSessionIdsByUser(userName, sessionId);, +		}, +		if (!this.keepLeadingSlash) {, +			actualDestination = actualDestination.substring(1);, +		}, +		return new ParseResult(sourceDestination, actualDestination, subscribeDestination, sessionIds, userName);, +	}, +, +	private Set<String> getSessionIdsByUser(String userName, String sessionId) {, +		Set<String> sessionIds;, +		return sessionIds;, +		private final String sourceDestination;, +		public ParseResult(String sourceDest, String actualDest, String subscribeDest,, +				Set<String> sessionIds, String user) {, +			this.sourceDestination = sourceDest;, +, +		public String getSourceDestination() {, +			return this.sourceDestination;, +		}]