[+++ b/src/asciidoc/integration.adoc, +[[jms-annotated-response]], +==== Response management, +as follow to automatically send a response:, +If you need to compute the response destination at runtime, you can encapsulate your response, +in a `JmsResponse` instance that also provides the destination to use at runtime. The previous, +example can be rewritten as follows:, +, +[source,java,indent=0], +[subs="verbatim,quotes"], +----, +	@JmsListener(destination = "myDestination"), +	public JmsResponse<Message<OrderStatus>> processOrder(Order order) {, +    	// order processing, +    	Message<OrderStatus> response = MessageBuilder, +        	    .withPayload(status), +            	.setHeader("code", 1234), +            	.build();, +		return JmsResponse.forQueue(response, "status");, +	}, +----, +, +, +, +++ b/src/asciidoc/integration.adoc, +[[jms-annotated-response]], +==== Response management, +as follow to automatically send a response:, +If you need to compute the response destination at runtime, you can encapsulate your response, +in a `JmsResponse` instance that also provides the destination to use at runtime. The previous, +example can be rewritten as follows:, +, +[source,java,indent=0], +[subs="verbatim,quotes"], +----, +	@JmsListener(destination = "myDestination"), +	public JmsResponse<Message<OrderStatus>> processOrder(Order order) {, +    	// order processing, +    	Message<OrderStatus> response = MessageBuilder, +        	    .withPayload(status), +            	.setHeader("code", 1234), +            	.build();, +		return JmsResponse.forQueue(response, "status");, +	}, +----, +, +, +, +++ b/src/asciidoc/whats-new.adoc, +* The response destination can be <<jms-annotated-response,computed at runtime using `JmsResponse`>>]