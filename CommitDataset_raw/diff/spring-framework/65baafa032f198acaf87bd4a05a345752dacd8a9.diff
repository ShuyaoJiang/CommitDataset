[+++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriBuilder.java, +		String scheme = expand(this.scheme, UriComponents.Type.SCHEME, uriVariables, encodeUriVariableValues);, +		String userInfo = expand(this.userInfo, UriComponents.Type.USER_INFO, uriVariables, encodeUriVariableValues);, +		String host = expand(this.host, UriComponents.Type.HOST, uriVariables, encodeUriVariableValues);, +		String port = expand(this.portAsString(), UriComponents.Type.PORT, uriVariables, encodeUriVariableValues);, +				pathSegment = expand(pathSegment, UriComponents.Type.PATH_SEGMENT, uriVariables, encodeUriVariableValues);, +		String query = expand(this.queryAsString(), UriComponents.Type.QUERY, uriVariables, encodeUriVariableValues);, +		String fragment = expand(this.fragment, UriComponents.Type.FRAGMENT, uriVariables, encodeUriVariableValues);, +						  UriComponents.Type uriComponent,, +			template = new UriComponentTemplate(scheme, UriComponents.Type.SCHEME, encodeUriVariableValues);, +				template = new UriComponentTemplate(userInfo, UriComponents.Type.USER_INFO, encodeUriVariableValues);, +				template = new UriComponentTemplate(host, UriComponents.Type.HOST, encodeUriVariableValues);, +				template = new UriComponentTemplate(pathSegment, UriComponents.Type.PATH_SEGMENT, encodeUriVariableValues);, +			template = new UriComponentTemplate(queryBuilder.toString(), UriComponents.Type.QUERY, encodeUriVariableValues);, +			template = new UriComponentTemplate(fragment, UriComponents.Type.FRAGMENT, encodeUriVariableValues);, +			this.scheme = encodeUriComponent(scheme, UriComponents.Type.SCHEME);, +			this.userInfo = encodeUriComponent(userInfo, UriComponents.Type.USER_INFO);, +			this.host = encodeUriComponent(host, UriComponents.Type.HOST);, +			this.pathSegments.add(encodeUriComponent(segment, UriComponents.Type.PATH_SEGMENT));, +		String encodedName = encodeUriComponent(name, UriComponents.Type.QUERY_PARAM);, +					queryBuilder.append(encodeUriComponent(valueAsString, UriComponents.Type.QUERY_PARAM));, +			this.fragment = encodeUriComponent(fragment, UriComponents.Type.FRAGMENT);, +	private String encodeUriComponent(String source, UriComponents.Type uriComponent) {, +++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriBuilder.java, +		String scheme = expand(this.scheme, UriComponents.Type.SCHEME, uriVariables, encodeUriVariableValues);, +		String userInfo = expand(this.userInfo, UriComponents.Type.USER_INFO, uriVariables, encodeUriVariableValues);, +		String host = expand(this.host, UriComponents.Type.HOST, uriVariables, encodeUriVariableValues);, +		String port = expand(this.portAsString(), UriComponents.Type.PORT, uriVariables, encodeUriVariableValues);, +				pathSegment = expand(pathSegment, UriComponents.Type.PATH_SEGMENT, uriVariables, encodeUriVariableValues);, +		String query = expand(this.queryAsString(), UriComponents.Type.QUERY, uriVariables, encodeUriVariableValues);, +		String fragment = expand(this.fragment, UriComponents.Type.FRAGMENT, uriVariables, encodeUriVariableValues);, +						  UriComponents.Type uriComponent,, +			template = new UriComponentTemplate(scheme, UriComponents.Type.SCHEME, encodeUriVariableValues);, +				template = new UriComponentTemplate(userInfo, UriComponents.Type.USER_INFO, encodeUriVariableValues);, +				template = new UriComponentTemplate(host, UriComponents.Type.HOST, encodeUriVariableValues);, +				template = new UriComponentTemplate(pathSegment, UriComponents.Type.PATH_SEGMENT, encodeUriVariableValues);, +			template = new UriComponentTemplate(queryBuilder.toString(), UriComponents.Type.QUERY, encodeUriVariableValues);, +			template = new UriComponentTemplate(fragment, UriComponents.Type.FRAGMENT, encodeUriVariableValues);, +			this.scheme = encodeUriComponent(scheme, UriComponents.Type.SCHEME);, +			this.userInfo = encodeUriComponent(userInfo, UriComponents.Type.USER_INFO);, +			this.host = encodeUriComponent(host, UriComponents.Type.HOST);, +			this.pathSegments.add(encodeUriComponent(segment, UriComponents.Type.PATH_SEGMENT));, +		String encodedName = encodeUriComponent(name, UriComponents.Type.QUERY_PARAM);, +					queryBuilder.append(encodeUriComponent(valueAsString, UriComponents.Type.QUERY_PARAM));, +			this.fragment = encodeUriComponent(fragment, UriComponents.Type.FRAGMENT);, +	private String encodeUriComponent(String source, UriComponents.Type uriComponent) {, +++ /dev/null, +++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriBuilder.java, +		String scheme = expand(this.scheme, UriComponents.Type.SCHEME, uriVariables, encodeUriVariableValues);, +		String userInfo = expand(this.userInfo, UriComponents.Type.USER_INFO, uriVariables, encodeUriVariableValues);, +		String host = expand(this.host, UriComponents.Type.HOST, uriVariables, encodeUriVariableValues);, +		String port = expand(this.portAsString(), UriComponents.Type.PORT, uriVariables, encodeUriVariableValues);, +				pathSegment = expand(pathSegment, UriComponents.Type.PATH_SEGMENT, uriVariables, encodeUriVariableValues);, +		String query = expand(this.queryAsString(), UriComponents.Type.QUERY, uriVariables, encodeUriVariableValues);, +		String fragment = expand(this.fragment, UriComponents.Type.FRAGMENT, uriVariables, encodeUriVariableValues);, +						  UriComponents.Type uriComponent,, +			template = new UriComponentTemplate(scheme, UriComponents.Type.SCHEME, encodeUriVariableValues);, +				template = new UriComponentTemplate(userInfo, UriComponents.Type.USER_INFO, encodeUriVariableValues);, +				template = new UriComponentTemplate(host, UriComponents.Type.HOST, encodeUriVariableValues);, +				template = new UriComponentTemplate(pathSegment, UriComponents.Type.PATH_SEGMENT, encodeUriVariableValues);, +			template = new UriComponentTemplate(queryBuilder.toString(), UriComponents.Type.QUERY, encodeUriVariableValues);, +			template = new UriComponentTemplate(fragment, UriComponents.Type.FRAGMENT, encodeUriVariableValues);, +			this.scheme = encodeUriComponent(scheme, UriComponents.Type.SCHEME);, +			this.userInfo = encodeUriComponent(userInfo, UriComponents.Type.USER_INFO);, +			this.host = encodeUriComponent(host, UriComponents.Type.HOST);, +			this.pathSegments.add(encodeUriComponent(segment, UriComponents.Type.PATH_SEGMENT));, +		String encodedName = encodeUriComponent(name, UriComponents.Type.QUERY_PARAM);, +					queryBuilder.append(encodeUriComponent(valueAsString, UriComponents.Type.QUERY_PARAM));, +			this.fragment = encodeUriComponent(fragment, UriComponents.Type.FRAGMENT);, +	private String encodeUriComponent(String source, UriComponents.Type uriComponent) {, +++ /dev/null, +++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriComponentTemplate.java, +	private final UriComponents.Type uriComponent;, +	UriComponentTemplate(String uriTemplate, UriComponents.Type uriComponent, boolean encodeUriVariableValues) {, +++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriBuilder.java, +		String scheme = expand(this.scheme, UriComponents.Type.SCHEME, uriVariables, encodeUriVariableValues);, +		String userInfo = expand(this.userInfo, UriComponents.Type.USER_INFO, uriVariables, encodeUriVariableValues);, +		String host = expand(this.host, UriComponents.Type.HOST, uriVariables, encodeUriVariableValues);, +		String port = expand(this.portAsString(), UriComponents.Type.PORT, uriVariables, encodeUriVariableValues);, +				pathSegment = expand(pathSegment, UriComponents.Type.PATH_SEGMENT, uriVariables, encodeUriVariableValues);, +		String query = expand(this.queryAsString(), UriComponents.Type.QUERY, uriVariables, encodeUriVariableValues);, +		String fragment = expand(this.fragment, UriComponents.Type.FRAGMENT, uriVariables, encodeUriVariableValues);, +						  UriComponents.Type uriComponent,, +			template = new UriComponentTemplate(scheme, UriComponents.Type.SCHEME, encodeUriVariableValues);, +				template = new UriComponentTemplate(userInfo, UriComponents.Type.USER_INFO, encodeUriVariableValues);, +				template = new UriComponentTemplate(host, UriComponents.Type.HOST, encodeUriVariableValues);, +				template = new UriComponentTemplate(pathSegment, UriComponents.Type.PATH_SEGMENT, encodeUriVariableValues);, +			template = new UriComponentTemplate(queryBuilder.toString(), UriComponents.Type.QUERY, encodeUriVariableValues);, +			template = new UriComponentTemplate(fragment, UriComponents.Type.FRAGMENT, encodeUriVariableValues);, +			this.scheme = encodeUriComponent(scheme, UriComponents.Type.SCHEME);, +			this.userInfo = encodeUriComponent(userInfo, UriComponents.Type.USER_INFO);, +			this.host = encodeUriComponent(host, UriComponents.Type.HOST);, +			this.pathSegments.add(encodeUriComponent(segment, UriComponents.Type.PATH_SEGMENT));, +		String encodedName = encodeUriComponent(name, UriComponents.Type.QUERY_PARAM);, +					queryBuilder.append(encodeUriComponent(valueAsString, UriComponents.Type.QUERY_PARAM));, +			this.fragment = encodeUriComponent(fragment, UriComponents.Type.FRAGMENT);, +	private String encodeUriComponent(String source, UriComponents.Type uriComponent) {, +++ /dev/null, +++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriComponentTemplate.java, +	private final UriComponents.Type uriComponent;]