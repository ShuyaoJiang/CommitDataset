[+++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericFormatterRegistry.java, +		Class<?> type = getType(propertyType);, +		Formatter<?> formatter = typeFormatters.get(type);, +			Formatted formatted = AnnotationUtils.findAnnotation(type, Formatted.class);, +				typeFormatters.put(type, formatter);, +	private Class getType(TypeDescriptor descriptor) {, +		if (descriptor.isArray() || descriptor.isCollection()) {, +			return descriptor.getElementType();, +		} else {, +			return descriptor.getType();, +		}, +	}, +	, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericFormatterRegistry.java, +		Class<?> type = getType(propertyType);, +		Formatter<?> formatter = typeFormatters.get(type);, +			Formatted formatted = AnnotationUtils.findAnnotation(type, Formatted.class);, +				typeFormatters.put(type, formatter);, +	private Class getType(TypeDescriptor descriptor) {, +		if (descriptor.isArray() || descriptor.isCollection()) {, +			return descriptor.getElementType();, +		} else {, +			return descriptor.getType();, +		}, +	}, +	, +++ b/org.springframework.context/src/test/java/org/springframework/ui/binding/support/GenericBinderTests.java, +		Map<String, String[]> values = new LinkedHashMap<String, String[]>();, +		values.put("addresses", new String[] { "4655 Macy Lane:Melbourne:FL:35452", "1234 Rostock Circle:Palm Bay:FL:32901", "1977 Bel Aire Estates:Coker:AL:12345" });		, +		binder.bind(values);, +		Assert.assertEquals(3, bean.addresses.size());, +		assertEquals("4655 Macy Lane", bean.addresses.get(0).street);, +		assertEquals("Melbourne", bean.addresses.get(0).city);, +		assertEquals("FL", bean.addresses.get(0).state);, +		assertEquals("35452", bean.addresses.get(0).zip);, +	public void bindToListElements() {, +		binder.addBinding("addresses");, +		Map<String, String> values = new LinkedHashMap<String, String>();, +		values.put("addresses[0]", "4655 Macy Lane:Melbourne:FL:35452");		, +		values.put("addresses[1]", "1234 Rostock Circle:Palm Bay:FL:32901");	, +		values.put("addresses[5]", "1977 Bel Aire Estates:Coker:AL:12345");, +		binder.bind(values);, +		Assert.assertEquals(6, bean.addresses.size());, +		assertEquals("4655 Macy Lane", bean.addresses.get(0).street);, +		assertEquals("Melbourne", bean.addresses.get(0).city);, +		assertEquals("FL", bean.addresses.get(0).state);, +		assertEquals("35452", bean.addresses.get(0).zip);, +	}, +, +	@Test, +	public void bindToListHandleNullValueInNestedPath() {, +	public static enum FoodGroup {, +		DAIRY, VEG, FRUIT, BREAD, MEAT, +	}, +	, +		private Map<FoodGroup, String> favoriteFoodsByGroup;, +		public Map<FoodGroup, String> getFavoriteFoodsByGroup() {, +			return favoriteFoodsByGroup;, +		}, +, +		public void setFavoriteFoodsByGroup(Map<FoodGroup, String> favoriteFoodsByGroup) {, +			this.favoriteFoodsByGroup = favoriteFoodsByGroup;, +		}, +, +			return address.getStreet() + ":" + address.getCity() + ":" + address.getState() + ":" + address.getZip();, +			String[] fields = formatted.split(":");, +			address.setStreet(fields[0]);, +			address.setCity(fields[1]);, +			address.setState(fields[2]);, +			address.setZip(fields[3]);, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/support/GenericFormatterRegistry.java, +		Class<?> type = getType(propertyType);, +		Formatter<?> formatter = typeFormatters.get(type);, +			Formatted formatted = AnnotationUtils.findAnnotation(type, Formatted.class);, +				typeFormatters.put(type, formatter);, +	private Class getType(TypeDescriptor descriptor) {, +		if (descriptor.isArray() || descriptor.isCollection()) {, +			return descriptor.getElementType();, +		} else {, +			return descriptor.getType();, +		}, +	}, +	, +++ b/org.springframework.context/src/test/java/org/springframework/ui/binding/support/GenericBinderTests.java, +		Map<String, String[]> values = new LinkedHashMap<String, String[]>();, +		values.put("addresses", new String[] { "4655 Macy Lane:Melbourne:FL:35452", "1234 Rostock Circle:Palm Bay:FL:32901", "1977 Bel Aire Estates:Coker:AL:12345" });		, +		binder.bind(values);, +		Assert.assertEquals(3, bean.addresses.size());, +		assertEquals("4655 Macy Lane", bean.addresses.get(0).street);, +		assertEquals("Melbourne", bean.addresses.get(0).city);, +		assertEquals("FL", bean.addresses.get(0).state);, +		assertEquals("35452", bean.addresses.get(0).zip);, +	public void bindToListElements() {, +		binder.addBinding("addresses");, +		Map<String, String> values = new LinkedHashMap<String, String>();, +		values.put("addresses[0]", "4655 Macy Lane:Melbourne:FL:35452");		, +		values.put("addresses[1]", "1234 Rostock Circle:Palm Bay:FL:32901");	, +		values.put("addresses[5]", "1977 Bel Aire Estates:Coker:AL:12345");, +		binder.bind(values);, +		Assert.assertEquals(6, bean.addresses.size());]