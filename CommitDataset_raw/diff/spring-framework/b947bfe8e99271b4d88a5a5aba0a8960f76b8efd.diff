[+++ b/spring-core/src/main/java/org/springframework/util/StreamUtils.java, + * Copyright 2002-2016 the original author or authors., +	 * Drain the remaining content of the given InputStream., +	 * Leaves the InputStream open when done., +	 * @param in the InputStream to drain, +	 * @return the number of bytes read, +	 * @throws IOException in case of I/O errors, +	 * @since 4.3.0, +	 */, +	public static int drain(InputStream in) throws IOException {, +		Assert.notNull(in, "No InputStream specified");, +		byte[] buffer = new byte[BUFFER_SIZE];, +		int bytesRead = -1;, +		int byteCount = 0;, +		while ((bytesRead = in.read(buffer)) != -1) {, +			byteCount += bytesRead;, +		}, +		return byteCount;, +	}, +, +	/**, +++ b/spring-core/src/main/java/org/springframework/util/StreamUtils.java, + * Copyright 2002-2016 the original author or authors., +	 * Drain the remaining content of the given InputStream., +	 * Leaves the InputStream open when done., +	 * @param in the InputStream to drain, +	 * @return the number of bytes read, +	 * @throws IOException in case of I/O errors, +	 * @since 4.3.0, +	 */, +	public static int drain(InputStream in) throws IOException {, +		Assert.notNull(in, "No InputStream specified");, +		byte[] buffer = new byte[BUFFER_SIZE];, +		int bytesRead = -1;, +		int byteCount = 0;, +		while ((bytesRead = in.read(buffer)) != -1) {, +			byteCount += bytesRead;, +		}, +		return byteCount;, +	}, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleClientHttpResponse.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.util.StreamUtils;, + * @author Brian Clozel, +	private InputStream responseStream;, +, +		this.responseStream = (errorStream != null ? errorStream : this.connection.getInputStream());, +		return this.responseStream;, +		if (this.responseStream != null) {, +			try {, +				StreamUtils.drain(this.responseStream);, +				this.responseStream.close();, +			}, +			catch (IOException e) { }, +		}, +++ b/spring-core/src/main/java/org/springframework/util/StreamUtils.java, + * Copyright 2002-2016 the original author or authors., +	 * Drain the remaining content of the given InputStream., +	 * Leaves the InputStream open when done., +	 * @param in the InputStream to drain, +	 * @return the number of bytes read, +	 * @throws IOException in case of I/O errors, +	 * @since 4.3.0, +	 */, +	public static int drain(InputStream in) throws IOException {, +		Assert.notNull(in, "No InputStream specified");, +		byte[] buffer = new byte[BUFFER_SIZE];, +		int bytesRead = -1;, +		int byteCount = 0;, +		while ((bytesRead = in.read(buffer)) != -1) {, +			byteCount += bytesRead;, +		}, +		return byteCount;, +	}, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/http/client/SimpleClientHttpResponse.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.util.StreamUtils;, + * @author Brian Clozel, +	private InputStream responseStream;, +, +		this.responseStream = (errorStream != null ? errorStream : this.connection.getInputStream());, +		return this.responseStream;, +		if (this.responseStream != null) {, +			try {, +				StreamUtils.drain(this.responseStream);, +				this.responseStream.close();, +			}, +			catch (IOException e) { }, +		}, +++ b/spring-web/src/test/java/org/springframework/http/client/SimpleClientHttpResponseTests.java, +/*, + * Copyright 2002-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at]