[+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java, +import java.net.URISyntaxException;, +, +		ServerHttpRequest httpRequest;, +		try {, +			httpRequest = createRequest(((HttpServletRequest) request), asyncContext);, +		}, +		catch (URISyntaxException ex) {, +			if (logger.isWarnEnabled()) {, +				logger.warn("Invalid URL for incoming request: " + ex.getMessage());, +			}, +			((HttpServletResponse) response).setStatus(400);, +			asyncContext.complete();, +			return;, +		}, +	protected ServerHttpRequest createRequest(HttpServletRequest request, AsyncContext context), +			throws IOException, URISyntaxException {, +, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java, +import java.net.URISyntaxException;, +, +		ServerHttpRequest httpRequest;, +		try {, +			httpRequest = createRequest(((HttpServletRequest) request), asyncContext);, +		}, +		catch (URISyntaxException ex) {, +			if (logger.isWarnEnabled()) {, +				logger.warn("Invalid URL for incoming request: " + ex.getMessage());, +			}, +			((HttpServletResponse) response).setStatus(400);, +			asyncContext.complete();, +			return;, +		}, +	protected ServerHttpRequest createRequest(HttpServletRequest request, AsyncContext context), +			throws IOException, URISyntaxException {, +, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletServerHttpRequest.java, +			String servletPath, DataBufferFactory bufferFactory, int bufferSize), +			throws IOException, URISyntaxException {, +	private static URI initUri(HttpServletRequest request) throws URISyntaxException {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java, +import java.net.URISyntaxException;, +, +		ServerHttpRequest httpRequest;, +		try {, +			httpRequest = createRequest(((HttpServletRequest) request), asyncContext);, +		}, +		catch (URISyntaxException ex) {, +			if (logger.isWarnEnabled()) {, +				logger.warn("Invalid URL for incoming request: " + ex.getMessage());, +			}, +			((HttpServletResponse) response).setStatus(400);, +			asyncContext.complete();, +			return;, +		}, +	protected ServerHttpRequest createRequest(HttpServletRequest request, AsyncContext context), +			throws IOException, URISyntaxException {, +, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletServerHttpRequest.java, +			String servletPath, DataBufferFactory bufferFactory, int bufferSize), +			throws IOException, URISyntaxException {, +	private static URI initUri(HttpServletRequest request) throws URISyntaxException {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/TomcatHttpHandlerAdapter.java, +import java.net.URISyntaxException;, +			throws IOException, URISyntaxException {, +				String servletPath, DataBufferFactory factory, int bufferSize), +				throws IOException, URISyntaxException {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java, +import java.net.URISyntaxException;, +, +		ServerHttpRequest httpRequest;, +		try {, +			httpRequest = createRequest(((HttpServletRequest) request), asyncContext);, +		}, +		catch (URISyntaxException ex) {, +			if (logger.isWarnEnabled()) {, +				logger.warn("Invalid URL for incoming request: " + ex.getMessage());, +			}, +			((HttpServletResponse) response).setStatus(400);, +			asyncContext.complete();, +			return;, +		}, +	protected ServerHttpRequest createRequest(HttpServletRequest request, AsyncContext context), +			throws IOException, URISyntaxException {, +, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletServerHttpRequest.java, +			String servletPath, DataBufferFactory bufferFactory, int bufferSize), +			throws IOException, URISyntaxException {, +	private static URI initUri(HttpServletRequest request) throws URISyntaxException {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/TomcatHttpHandlerAdapter.java, +import java.net.URISyntaxException;, +			throws IOException, URISyntaxException {, +				String servletPath, DataBufferFactory factory, int bufferSize), +				throws IOException, URISyntaxException {, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowHttpHandlerAdapter.java, +import java.net.URISyntaxException;, +	public void handleRequest(HttpServerExchange exchange) {, +		ServerHttpRequest request = null;, +		try {, +			request = new UndertowServerHttpRequest(exchange, getDataBufferFactory());]