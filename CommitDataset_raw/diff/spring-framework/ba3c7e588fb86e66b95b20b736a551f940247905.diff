[+++ b/spring-test/src/main/java/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.java, + * or indirectly by {@code SpringJUnit4ClassRunner}., + * TestContextBootstrapper} implementations.)</em>, + * <li>{@link Test#expected() @Test(expected=...)}</li>, + * <li>{@link Test#timeout() @Test(timeout=...)}</li>, + * <li>{@link Timed @Timed}</li>, + * <li>{@link Repeat @Repeat}</li>, + * <li>{@link Ignore @Ignore}</li>, + * <li>{@link org.springframework.test.annotation.ProfileValueSourceConfiguration @ProfileValueSourceConfiguration}</li>, + * <li>{@link org.springframework.test.annotation.IfProfileValue @IfProfileValue}</li>, +	 * classes with a non-matching {@code @IfProfileValue} annotation from, +	 * running altogether, even skipping the execution of, +	 * {@code prepareTestInstance()} {@code TestExecutionListener} methods., +	 * in order to include execution of {@link org.junit.Before @Before}, +	 * and {@link org.junit.After @After} methods within the timed, +	 * Invokes JUnit 4.7's private {@code withRules()} method using reflection., +	 * <p>This is necessary for backwards compatibility with the JUnit 4.5 and, +	 * 4.6 implementations of {@link BlockJUnit4ClassRunner}., +	 * Returns {@code true} if {@link Ignore @Ignore} is present for the supplied, +	 * {@link FrameworkMethod test method} or if the test method is disabled via, +	 * {@code @IfProfileValue}., +	 * Supports both Spring's {@link Timed @Timed} and JUnit's, +	 * {@link Test#timeout() @Test(timeout=...)} annotations, but not both, +	 * Retrieves the configured JUnit {@code timeout} from the {@link Test @Test}, +	 * annotation on the supplied {@link FrameworkMethod test method}., +	 * {@link Timed @Timed} annotation on the supplied, +	 * Supports Spring's {@link Repeat @Repeat} annotation by returning a]