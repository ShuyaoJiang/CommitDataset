[+++ b/spring-web/src/main/java/org/springframework/http/ResponseCookie.java, + * Copyright 2002-2018 the original author or authors., + * @author Brian Clozel, +	@Nullable, +	private final String sameSite;, +, +			@Nullable String path, boolean secure, boolean httpOnly, @Nullable String sameSite) {, +		this.sameSite = sameSite;, +	/**, +	 * Return the cookie "SameSite" attribute, or {@code null} if not set., +	 * <p>This limits the scope of the cookie such that it will only be attached to, +	 * same site requests if {@code "Strict"} or cross-site requests if {@code "Lax"}., +	 * @see <a href="https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis#section-4.1.2.7">RFC6265 bis</a>, +	 */, +	@Nullable, +	public String getSameSite() {, +		return this.sameSite;, +	}, +		if (StringUtils.hasText(this.sameSite)) {, +			sb.append("; SameSite=").append(this.sameSite);, +		}, +			@Nullable, +			private String sameSite;, +, +			public ResponseCookieBuilder sameSite(String sameSite) {, +				this.sameSite = sameSite;, +				return this;, +			}, +, +			@Override, +						this.secure, this.httpOnly, this.sameSite);, +		 * Add the "SameSite" attribute to the cookie., +		 * @see <a href="https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis#section-4.1.2.7">RFC6265 bis</a>, +		 */, +		ResponseCookieBuilder sameSite(String sameSite);, +, +		/**, +++ b/spring-web/src/main/java/org/springframework/http/ResponseCookie.java, + * Copyright 2002-2018 the original author or authors., + * @author Brian Clozel, +	@Nullable, +	private final String sameSite;, +, +			@Nullable String path, boolean secure, boolean httpOnly, @Nullable String sameSite) {, +		this.sameSite = sameSite;, +	/**, +	 * Return the cookie "SameSite" attribute, or {@code null} if not set., +	 * <p>This limits the scope of the cookie such that it will only be attached to, +	 * same site requests if {@code "Strict"} or cross-site requests if {@code "Lax"}., +	 * @see <a href="https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis#section-4.1.2.7">RFC6265 bis</a>, +	 */, +	@Nullable, +	public String getSameSite() {, +		return this.sameSite;, +	}, +		if (StringUtils.hasText(this.sameSite)) {, +			sb.append("; SameSite=").append(this.sameSite);, +		}, +			@Nullable, +			private String sameSite;, +, +			public ResponseCookieBuilder sameSite(String sameSite) {, +				this.sameSite = sameSite;, +				return this;, +			}, +, +			@Override, +						this.secure, this.httpOnly, this.sameSite);, +		 * Add the "SameSite" attribute to the cookie., +		 * @see <a href="https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis#section-4.1.2.7">RFC6265 bis</a>, +		 */, +		ResponseCookieBuilder sameSite(String sameSite);, +, +		/**, +++ b/spring-web/src/main/java/org/springframework/web/server/session/CookieWebSessionIdResolver.java, + * @author Brian Clozel, +	private String sameSite = "Strict";, +, +	/**, +	 * Set the value for the "SameSite" attribute of the cookie that holds the, +	 * session id. For its meaning and possible values, see, +	 * {@link ResponseCookie#getSameSite()}., +	 * <p>By default set to {@code "Strict"}, +	 * @param sameSite the SameSite value, +	 */, +	public void setSameSite(String sameSite) {, +		this.sameSite = sameSite;, +	}, +, +	/**, +	 * Return the configured "SameSite" attribute value for the session cookie., +	 */, +	public String getSameSite() {, +		return sameSite;, +	}, +		setSessionCookie(exchange, id, getCookieMaxAge(), getSameSite());, +		setSessionCookie(exchange, "", Duration.ofSeconds(0), "");, +	private void setSessionCookie(ServerWebExchange exchange, String id, Duration maxAge, String sameSite) {, +						.maxAge(maxAge).httpOnly(true).secure(secure).sameSite(sameSite).build());, +++ b/spring-web/src/main/java/org/springframework/http/ResponseCookie.java]