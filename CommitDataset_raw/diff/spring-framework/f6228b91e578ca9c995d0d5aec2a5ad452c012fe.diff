[+++ b/spring-framework-reference/src/beans.xml, +        <literal>init-method</literal> and <literal>destroy-method</literal>, +        attributes of the &lt;bean/&gt; itself.</para>, +            different than the usual process of navigating interface-based code.</para>, +        name. The following is a simple example of a, +        <interfacename>@Bean</interfacename> method declaration:, +    &lt;bean id="transferService" class="com.acme.TransferServiceImpl"/&gt;, +        <para>Beans declared in a, +        <interfacename>@Configuration</interfacename>-annotated class support, +        the regular lifecycle callbacks. Any classes defined with the, +        <literal>@Bean</literal> annotation can use the, +        <literal>@PostConstruct</literal> and <literal>@PreDestroy</literal>, +        annotations from JSR-250, see <link, +        linkend="beans-postconstruct-and-predestroy-annotations">JSR-250, +        <code>destroy-method</code> attributes on the <code>bean</code>, +        protected Command createCommand() {, +        <para>By default, configuration classes use a, +        <interfacename>@Bean</interfacename> method's name as the name of the, +        to give a single bean multiple names, otherwise known as <emphasis>bean aliasing</emphasis>., +        The <literal>name</literal> attribute of the <literal>@Bean</literal> annotation accepts]