[+++ b/spring-jms/src/main/java/org/springframework/jms/config/JmsListenerEndpointRegistry.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.beans.BeansException;, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.ApplicationContextAware;, +import org.springframework.context.ApplicationListener;, +import org.springframework.context.event.ContextRefreshedEvent;, +public class JmsListenerEndpointRegistry implements DisposableBean, SmartLifecycle,, +		ApplicationContextAware, ApplicationListener<ContextRefreshedEvent> {, +	private ApplicationContext applicationContext;, +, +	private boolean contextRefreshed;, +, +	@Override, +	public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {, +		this.applicationContext = applicationContext;, +	}, +, +	@Override, +	public void onApplicationEvent(ContextRefreshedEvent event) {, +		if (event.getApplicationContext().equals(this.applicationContext)) {, +			this.contextRefreshed = true;, +		}, +	}, +, +	 * on startup or when start is called explicitly after startup., +	private void startIfNecessary(MessageListenerContainer listenerContainer) {, +		if (this.contextRefreshed || listenerContainer.isAutoStartup()) {, +++ b/spring-jms/src/main/java/org/springframework/jms/config/JmsListenerEndpointRegistry.java, + * Copyright 2002-2016 the original author or authors., +import org.springframework.beans.BeansException;, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.ApplicationContextAware;, +import org.springframework.context.ApplicationListener;, +import org.springframework.context.event.ContextRefreshedEvent;, +public class JmsListenerEndpointRegistry implements DisposableBean, SmartLifecycle,, +		ApplicationContextAware, ApplicationListener<ContextRefreshedEvent> {, +	private ApplicationContext applicationContext;, +, +	private boolean contextRefreshed;, +, +	@Override, +	public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {, +		this.applicationContext = applicationContext;, +	}, +, +	@Override, +	public void onApplicationEvent(ContextRefreshedEvent event) {, +		if (event.getApplicationContext().equals(this.applicationContext)) {, +			this.contextRefreshed = true;, +		}, +	}, +, +	 * on startup or when start is called explicitly after startup., +	private void startIfNecessary(MessageListenerContainer listenerContainer) {, +		if (this.contextRefreshed || listenerContainer.isAutoStartup()) {, +++ b/spring-jms/src/test/java/org/springframework/jms/annotation/EnableJmsTests.java, +	@Test, +	public void containerAreStartedByDefault() {, +		ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(, +				EnableJmsDefaultContainerFactoryConfig.class, DefaultBean.class);, +		JmsListenerContainerTestFactory factory =, +				context.getBean(JmsListenerContainerTestFactory.class);, +		MessageListenerTestContainer container = factory.getListenerContainers().get(0);, +		assertTrue(container.isAutoStartup());, +		assertTrue(container.isStarted());, +	}, +, +	@Test, +	public void containerCanBeStarterViaTheRegistry() {, +		ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(, +				EnableJmsAutoStartupFalseConfig.class, DefaultBean.class);, +		JmsListenerContainerTestFactory factory =, +				context.getBean(JmsListenerContainerTestFactory.class);, +		MessageListenerTestContainer container = factory.getListenerContainers().get(0);, +		assertFalse(container.isAutoStartup());, +		assertFalse(container.isStarted());, +		JmsListenerEndpointRegistry registry = context.getBean(JmsListenerEndpointRegistry.class);, +		registry.start();, +		assertTrue(container.isStarted());, +	}, +, +	@Configuration, +	@EnableJms, +	static class EnableJmsAutoStartupFalseConfig implements JmsListenerConfigurer {, +, +		@Override, +		public void configureJmsListeners(JmsListenerEndpointRegistrar registrar) {, +			registrar.setContainerFactory(simpleFactory());, +		}, +, +		@Bean, +		public JmsListenerContainerTestFactory simpleFactory() {, +			JmsListenerContainerTestFactory factory = new JmsListenerContainerTestFactory();, +			factory.setAutoStartup(false);, +			return factory;, +		}, +	}, +, +++ b/spring-jms/src/main/java/org/springframework/jms/config/JmsListenerEndpointRegistry.java]