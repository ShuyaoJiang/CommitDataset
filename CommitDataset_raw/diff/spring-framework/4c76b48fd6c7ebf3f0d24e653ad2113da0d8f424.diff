[+++ b/spring-framework-reference/src/mvc.xml, +      methods to supply your own behavior. This has not been done arbitrarily,, +      but specifically with this principal in mind.</para>, +    beans can be overridden in the servlet-specific scope, and you can define, +    new scope-specific beans local to a given servlet instance.</para>, +    role="bold">golfing</emphasis><literal>-servlet.xml</literal> in your, +    application; this file will contain all of your Spring Web MVC-specific, +    components (beans). You can change the exact location of this, +    configuration file through a servlet initialization parameter (see below, +    for details).</para>, +, +, +        <!-- MLP perhaps say that there are not side effect to this binding.etc... Clarify *ignore it*. Does this step still occur if you don't use themes? -->, +, +        <!--And what if you DO use themes, what do you do and when? Same question re locale resolving.-->, +        returned, (may be due to a preprocessor or postprocessor intercepting, +        the request, perhaps for security reasons), no view is rendered,, +        because the request could already have been fulfilled.</para>, +, +    mapping and tests whether the handler that is found implements the, +    <para>You can customize individual, +    <classname>DispatcherServlet</classname> instances by adding servlet, +    initialization parameters (<literal>init-param</literal> elements) to the, +    servlet declaration in the <literal>web.xml</literal> file. See the, +    following table for the list of supported parameters.</para>, +, +      resides in the <literal>org.springframework.samples.petclinic</literal>, +      module.</para>, +      an entire class or a particular handler method. Typically the, +      class-level annotation maps a specific request path (or path pattern), +      onto a form controller, with additional method-level annotations, +      narrowing the primary mapping for a specific HTTP method request method, +      ("GET"/"POST") or specific HTTP request parameters.</para>, +      <para>The following example shows a controller in a Spring MVC, +      application that uses this annotation:</para>, +        in order to bind the resolved value of the variable name to a method, +        parameter. For example:</para>, +, +        <para>You can also use a controller method with the following, +        <para>The following code snippet shows the usage of path variables on, +        a relative path, so that the <methodname>findPet()</methodname> method, +        <para>In the above example, the <methodname>addPet()</methodname>, +        method is only invoked when the <literal>content-type</literal>, +        matches the <literal>text/*</literal> pattern, for example,, +        <literal>text/xml</literal>.</para>, +        right after the corresponding command object, if desired): <!--Reword preceding sentence to clarify, make it a complete sentence and no parentheses: first it says validation results *must*--><!--immediately follow command object, but then it says *if desired*. Clarify what must happen if what is desired. And are validation --><!-- results a type of argument? Relate to the sentence that precedes it.-->, +              as the logical view name, with the model implicitly determined, +              through command objects and <literal>@ModelAttribute</literal>, +              annotated reference data accessor methods. The handler method, +              may also programmatically enrich the model by declaring a, +        <para>As with <interfacename>@RequestBody</interfacename>, Spring, +        converts the returned object to a response body by using an, +        <para>You can also use <classname>@ModelAttribute</classname> at the, +        method level to provide <emphasis>reference data</emphasis> for the, +        model (see the <literal>populatePetTypes()</literal> method in the, +        following example). For this usage the method signature can contain, +        model attributes which should be transparently stored in the session, +        or some conversational storage, serving as form-backing beans between, +        subsequent requests.</para>, +        <para>The following code snippet shows the usage of this annotation,, +        specifying the model attribute name:</para>, +        the <literal>Accept-Encoding</literal> and, +        <literal>Keep-Alive</literal> headers:</para>, +    override this default mapping, unless you need to override the default, +    property values. These properties are:</para>, +          <para>List of interceptors to use., +          <xref linkend="mvc-handlermapping-interceptor" />.</para>, +          <para>Default handler to use, when this handler mapping does not, +          result in a matching handler.</para>, +          <para>Based on the value of the order property (see the, +          <literal>org.springframework.core.Ordered</literal> interface),, +          Spring sorts all handler mappings available in the context and, +          applies the first matching handler.</para>, +          <para>If <literal>true</literal> , Spring uses the full path within, +          the current servlet context to find an appropriate handler. If, +          <literal>false</literal> (the default), the path within the current, +          servlet mapping is used. For example, if a servlet is mapped using, +          <literal>/testing/*</literal> and the, +          <literal>alwaysUseFullPath</literal> property is set to true,, +          property is set to false, <literal>/viewPage.html</literal> is, +          used.</para>, +          <para>Defaults to <literal>true</literal>, as of Spring 2.5. <!--OK, or do you mean 3.0?-->, +          If you prefer to compare encoded paths, set this flag to, +          <literal>false</literal>. However, the, +          <interfacename>HttpServletRequest</interfacename> always exposes the, +          servlet path in decoded form. Be aware that the servlet path will, +          not match when compared with encoded paths.</para>, +          <para>Allows lazy initialization of <emphasis>singleton</emphasis>, +          handlers (prototype handlers are always lazy-initialized). The, +          default value is <literal>false</literal>.</para>, +      <para>The <literal>alwaysUseFullPath</literal>,, +      <literal>urlDecode</literal>, and <literal>lazyInitHandlers</literal>, +      properties are only available to subclasses of, +      <interfacename>org.springframework.web.servlet.handler.AbstractUrlHandlerMapping</interfacename>.</para>, +      <para>The following example defines a handler mapping which maps all, +      requests matching the URL patterns "/*.form" and "/*.view" to a, +      particular controller, <literal>editAccountFormController</literal>. An, +      interceptor has been added that intercepts these requests and reroutes, +      the user to a specific page if the time is not between 9 a.m. and 6, +      p.m.</para>]