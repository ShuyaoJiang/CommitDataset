[+++ b/spring-aop/src/main/java/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.java, +		postProcessProxyFactory(proxyFactory);, +, +	/**, +	 * A hook for subclasses to post-process the {@link ProxyFactory}, +	 * before creating the proxy instance with it., +	 * @param proxyFactory the AOP ProxyFactory about to be used, +	 * @since 4.2, +	 */, +	protected void postProcessProxyFactory(ProxyFactory proxyFactory) {, +	}, +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.java, +		postProcessProxyFactory(proxyFactory);, +, +	/**, +	 * A hook for subclasses to post-process the {@link ProxyFactory}, +	 * before creating the proxy instance with it., +	 * @param proxyFactory the AOP ProxyFactory about to be used, +	 * @since 4.2, +	 */, +	protected void postProcessProxyFactory(ProxyFactory proxyFactory) {, +	}, +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/DefaultAopProxyFactory.java, +		Class<?>[] ifcs = config.getProxiedInterfaces();, +		return (ifcs.length == 0 || (ifcs.length == 1 && SpringProxy.class.isAssignableFrom(ifcs[0])));, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.java, +		postProcessProxyFactory(proxyFactory);, +, +	/**, +	 * A hook for subclasses to post-process the {@link ProxyFactory}, +	 * before creating the proxy instance with it., +	 * @param proxyFactory the AOP ProxyFactory about to be used, +	 * @since 4.2, +	 */, +	protected void postProcessProxyFactory(ProxyFactory proxyFactory) {, +	}, +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/DefaultAopProxyFactory.java, +		Class<?>[] ifcs = config.getProxiedInterfaces();, +		return (ifcs.length == 0 || (ifcs.length == 1 && SpringProxy.class.isAssignableFrom(ifcs[0])));, +++ b/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAttributeSourcePointcut.java, + * Copyright 2002-2015 the original author or authors., +		if (TransactionalProxy.class.isAssignableFrom(targetClass)) {, +			return false;, +		}, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.java, +		postProcessProxyFactory(proxyFactory);, +, +	/**, +	 * A hook for subclasses to post-process the {@link ProxyFactory}, +	 * before creating the proxy instance with it., +	 * @param proxyFactory the AOP ProxyFactory about to be used, +	 * @since 4.2, +	 */, +	protected void postProcessProxyFactory(ProxyFactory proxyFactory) {, +	}, +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/DefaultAopProxyFactory.java, +		Class<?>[] ifcs = config.getProxiedInterfaces();, +		return (ifcs.length == 0 || (ifcs.length == 1 && SpringProxy.class.isAssignableFrom(ifcs[0])));, +++ b/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAttributeSourcePointcut.java, + * Copyright 2002-2015 the original author or authors., +		if (TransactionalProxy.class.isAssignableFrom(targetClass)) {, +			return false;, +		}, +++ b/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionProxyFactoryBean.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.aop.framework.ProxyFactory;, +	/**, +	 * As of 4.2, this method adds {@link TransactionalProxy} to the set of, +	 * proxy interfaces in order to avoid re-processing of transaction metadata., +	 */, +	@Override, +	protected void postProcessProxyFactory(ProxyFactory proxyFactory) {, +		proxyFactory.addInterface(TransactionalProxy.class);, +	}, +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.java, +		postProcessProxyFactory(proxyFactory);, +, +	/**, +	 * A hook for subclasses to post-process the {@link ProxyFactory}, +	 * before creating the proxy instance with it., +	 * @param proxyFactory the AOP ProxyFactory about to be used, +	 * @since 4.2, +	 */, +	protected void postProcessProxyFactory(ProxyFactory proxyFactory) {, +	}, +, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/DefaultAopProxyFactory.java, +		Class<?>[] ifcs = config.getProxiedInterfaces();, +		return (ifcs.length == 0 || (ifcs.length == 1 && SpringProxy.class.isAssignableFrom(ifcs[0])));, +++ b/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAttributeSourcePointcut.java, + * Copyright 2002-2015 the original author or authors., +		if (TransactionalProxy.class.isAssignableFrom(targetClass)) {, +			return false;, +		}, +++ b/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionProxyFactoryBean.java]