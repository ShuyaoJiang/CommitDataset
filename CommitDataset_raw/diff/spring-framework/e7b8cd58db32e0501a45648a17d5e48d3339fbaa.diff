[+++ b/build.gradle, +    ext.aspectjVersion = '1.6.12', +    ext.hsqldbVersion='1.8.0.10', +    ext.junitVersion = '4.11.20120805.1225' // temporary use of snapshot; spring-test, +                                            // still builds against on 4.10, +    ext.gradleScriptDir = "${rootProject.projectDir}/gradle", +, +, +    // servlet-api (2.5) and tomcat-servlet-api (3.0) classpath entries should not be, +    // exported to dependent projects in Eclipse to avoid false compilation errors due, +    // to changing APIs across these versions, +    eclipse.classpath.file.whenMerged { classpath ->, +        classpath.entries.findAll { entry -> entry.path.contains('servlet-api') }*.exported = false, +    }, +        compile("org.apache.tiles:tiles-request-servlet-wildcard:1.0.1") { dep->, +            optional dep, +            exclude group: 'org.springframework', module: 'spring-web', +        }, +        compile project(":spring-web").sourceSets*.output // mock request & response, +    apply from: "ide.gradle", +++ b/build.gradle, +    ext.aspectjVersion = '1.6.12', +    ext.hsqldbVersion='1.8.0.10', +    ext.junitVersion = '4.11.20120805.1225' // temporary use of snapshot; spring-test, +                                            // still builds against on 4.10, +    ext.gradleScriptDir = "${rootProject.projectDir}/gradle", +, +, +    // servlet-api (2.5) and tomcat-servlet-api (3.0) classpath entries should not be, +    // exported to dependent projects in Eclipse to avoid false compilation errors due, +    // to changing APIs across these versions, +    eclipse.classpath.file.whenMerged { classpath ->, +        classpath.entries.findAll { entry -> entry.path.contains('servlet-api') }*.exported = false, +    }, +        compile("org.apache.tiles:tiles-request-servlet-wildcard:1.0.1") { dep->, +            optional dep, +            exclude group: 'org.springframework', module: 'spring-web', +        }, +        compile project(":spring-web").sourceSets*.output // mock request & response, +    apply from: "ide.gradle", +++ /dev/null, +++ b/build.gradle, +    ext.aspectjVersion = '1.6.12', +    ext.hsqldbVersion='1.8.0.10', +    ext.junitVersion = '4.11.20120805.1225' // temporary use of snapshot; spring-test, +                                            // still builds against on 4.10, +    ext.gradleScriptDir = "${rootProject.projectDir}/gradle", +, +, +    // servlet-api (2.5) and tomcat-servlet-api (3.0) classpath entries should not be, +    // exported to dependent projects in Eclipse to avoid false compilation errors due, +    // to changing APIs across these versions, +    eclipse.classpath.file.whenMerged { classpath ->, +        classpath.entries.findAll { entry -> entry.path.contains('servlet-api') }*.exported = false, +    }, +        compile("org.apache.tiles:tiles-request-servlet-wildcard:1.0.1") { dep->, +            optional dep, +            exclude group: 'org.springframework', module: 'spring-web', +        }, +        compile project(":spring-web").sourceSets*.output // mock request & response, +    apply from: "ide.gradle", +++ /dev/null, +++ b/gradle/merge-artifacts.gradle, +import org.gradle.plugins.ide.eclipse.model.ProjectDependency, +, +// GRADLE-1116, +mergeFromProject.eclipse.classpath.file.whenMerged { classpath ->, +    classpath.entries.removeAll { entry -> entry.path.contains("/${mergeIntoProject.name}/build/") }, +    def dependency = new ProjectDependency("/${mergeIntoProject.name}", mergeIntoProject.path), +    dependency.exported = true, +    classpath.entries.add(dependency), +}, +, +++ b/build.gradle, +    ext.aspectjVersion = '1.6.12', +    ext.hsqldbVersion='1.8.0.10', +    ext.junitVersion = '4.11.20120805.1225' // temporary use of snapshot; spring-test, +                                            // still builds against on 4.10, +    ext.gradleScriptDir = "${rootProject.projectDir}/gradle", +, +, +    // servlet-api (2.5) and tomcat-servlet-api (3.0) classpath entries should not be, +    // exported to dependent projects in Eclipse to avoid false compilation errors due, +    // to changing APIs across these versions, +    eclipse.classpath.file.whenMerged { classpath ->, +        classpath.entries.findAll { entry -> entry.path.contains('servlet-api') }*.exported = false, +    }, +        compile("org.apache.tiles:tiles-request-servlet-wildcard:1.0.1") { dep->, +            optional dep, +            exclude group: 'org.springframework', module: 'spring-web', +        }, +        compile project(":spring-web").sourceSets*.output // mock request & response, +    apply from: "ide.gradle", +++ /dev/null, +++ b/gradle/merge-artifacts.gradle, +import org.gradle.plugins.ide.eclipse.model.ProjectDependency, +, +// GRADLE-1116, +mergeFromProject.eclipse.classpath.file.whenMerged { classpath ->, +    classpath.entries.removeAll { entry -> entry.path.contains("/${mergeIntoProject.name}/build/") }]