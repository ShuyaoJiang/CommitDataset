[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompProtocolHandler.java, +import org.springframework.messaging.simp.handler.SimpleUserQueueSuffixResolver;, +	private MutableUserQueueSuffixResolver queueSuffixResolver = new SimpleUserQueueSuffixResolver();, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompProtocolHandler.java, +import org.springframework.messaging.simp.handler.SimpleUserQueueSuffixResolver;, +	private MutableUserQueueSuffixResolver queueSuffixResolver = new SimpleUserQueueSuffixResolver();, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/config/WebSocketMessageBrokerConfigurationTests.java, +import org.springframework.messaging.simp.stomp.StompTextMessageBuilder;, +		final TextMessage textMessage = StompTextMessageBuilder.create(StompCommand.SEND), +				.headers("destination:/app/foo").build();, +				session.sendMessage(textMessage);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompProtocolHandler.java, +import org.springframework.messaging.simp.handler.SimpleUserQueueSuffixResolver;, +	private MutableUserQueueSuffixResolver queueSuffixResolver = new SimpleUserQueueSuffixResolver();, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/config/WebSocketMessageBrokerConfigurationTests.java, +import org.springframework.messaging.simp.stomp.StompTextMessageBuilder;, +		final TextMessage textMessage = StompTextMessageBuilder.create(StompCommand.SEND), +				.headers("destination:/app/foo").build();, +				session.sendMessage(textMessage);, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/stomp/StompMessageConverterTests.java, +import org.springframework.web.socket.TextMessage;, +		String accept = "accept-version:1.1";, +		String host = "host:github.org";, +, +		TextMessage textMessage = StompTextMessageBuilder.create(StompCommand.CONNECT), +				.headers(accept, host).build();, +, +		@SuppressWarnings("unchecked"), +		Message<byte[]> message = (Message<byte[]>) this.converter.toMessage(textMessage.getPayload());, +		String accept = "accept-version:1.1";, +		String host = "ho\\c\\ns\\rt:st\\nomp.gi\\cthu\\b.org";, +, +		TextMessage textMessage = StompTextMessageBuilder.create(StompCommand.CONNECT), +				.headers(accept, host).build();, +, +		Message<byte[]> message = (Message<byte[]>) this.converter.toMessage(textMessage.getPayload());, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompProtocolHandler.java, +import org.springframework.messaging.simp.handler.SimpleUserQueueSuffixResolver;, +	private MutableUserQueueSuffixResolver queueSuffixResolver = new SimpleUserQueueSuffixResolver();, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/config/WebSocketMessageBrokerConfigurationTests.java, +import org.springframework.messaging.simp.stomp.StompTextMessageBuilder;, +		final TextMessage textMessage = StompTextMessageBuilder.create(StompCommand.SEND), +				.headers("destination:/app/foo").build();, +				session.sendMessage(textMessage);, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/stomp/StompMessageConverterTests.java, +import org.springframework.web.socket.TextMessage;, +		String accept = "accept-version:1.1";, +		String host = "host:github.org";, +, +		TextMessage textMessage = StompTextMessageBuilder.create(StompCommand.CONNECT), +				.headers(accept, host).build();, +, +		@SuppressWarnings("unchecked"), +		Message<byte[]> message = (Message<byte[]>) this.converter.toMessage(textMessage.getPayload());, +		String accept = "accept-version:1.1";, +		String host = "ho\\c\\ns\\rt:st\\nomp.gi\\cthu\\b.org";, +, +		TextMessage textMessage = StompTextMessageBuilder.create(StompCommand.CONNECT), +				.headers(accept, host).build();, +, +		Message<byte[]> message = (Message<byte[]>) this.converter.toMessage(textMessage.getPayload());, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/stomp/StompProtocolHandlerTests.java, +/*, + * Copyright 2002-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.messaging.simp.stomp;, +, +import java.util.Arrays;, +import java.util.HashSet;, +, +import org.junit.Before;, +import org.junit.Test;, +import org.mockito.ArgumentCaptor;, +import org.mockito.Mockito;, +import org.springframework.messaging.Message;, +import org.springframework.messaging.MessageChannel;, +import org.springframework.web.socket.TextMessage;, +import org.springframework.web.socket.support.TestPrincipal;, +import org.springframework.web.socket.support.TestWebSocketSession;, +, +import static org.junit.Assert.*;, +import static org.mockito.Mockito.*;, +, +/**, + * Test fixture for {@link StompProtocolHandler} tests., + *, + * @author Rossen Stoyanchev]