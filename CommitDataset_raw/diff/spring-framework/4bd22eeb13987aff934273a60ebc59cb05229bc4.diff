[+++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +	protected Log logger = LogFactory.getLog(getClass());, +	/**, +	 * Set an alternative logger to use than the one based on the class name., +	 * @param logger the logger to use, +	 * @since 5.1, +	 */, +	public void setLogger(Log logger) {, +		this.logger = logger;, +	}, +, +	/**, +	 * Return the currently configured Logger., +	 * @since 5.1, +	 */, +	public Log getLogger() {, +		return logger;, +	}, +, +, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +	protected Log logger = LogFactory.getLog(getClass());, +	/**, +	 * Set an alternative logger to use than the one based on the class name., +	 * @param logger the logger to use, +	 * @since 5.1, +	 */, +	public void setLogger(Log logger) {, +		this.logger = logger;, +	}, +, +	/**, +	 * Return the currently configured Logger., +	 * @since 5.1, +	 */, +	public Log getLogger() {, +		return logger;, +	}, +, +, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +	protected Log logger = LogFactory.getLog(getClass());, +	/**, +	 * Set an alternative logger to use than the one based on the class name., +	 * @param logger the logger to use, +	 * @since 5.1, +	 */, +	public void setLogger(Log logger) {, +		this.logger = logger;, +	}, +, +	/**, +	 * Return the currently configured Logger., +	 * @since 5.1, +	 */, +	public Log getLogger() {, +		return logger;, +	}, +, +, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +	protected Log logger = LogFactory.getLog(getClass());, +	/**, +	 * Set an alternative logger to use than the one based on the class name., +	 * @param logger the logger to use, +	 * @since 5.1, +	 */, +	public void setLogger(Log logger) {, +		this.logger = logger;, +	}, +, +	/**, +	 * Return the currently configured Logger., +	 * @since 5.1, +	 */, +	public Log getLogger() {, +		return logger;, +	}, +, +, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +	protected Log logger = LogFactory.getLog(getClass());, +	/**, +	 * Set an alternative logger to use than the one based on the class name., +	 * @param logger the logger to use, +	 * @since 5.1, +	 */, +	public void setLogger(Log logger) {, +		this.logger = logger;, +	}, +, +	/**, +	 * Return the currently configured Logger., +	 * @since 5.1, +	 */, +	public Log getLogger() {, +		return logger;, +	}, +, +]