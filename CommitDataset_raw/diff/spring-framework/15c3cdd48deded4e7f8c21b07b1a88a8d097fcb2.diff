[+++ b/spring-context/src/main/java/org/springframework/cache/support/NoOpCacheManager.java, +			try {, +				return valueLoader.call();, +			}, +			catch (Exception ex) {, +				throw new ValueRetrievalException(key, valueLoader, ex);, +			}, +++ b/spring-context/src/main/java/org/springframework/cache/support/NoOpCacheManager.java, +			try {, +				return valueLoader.call();, +			}, +			catch (Exception ex) {, +				throw new ValueRetrievalException(key, valueLoader, ex);, +			}, +++ b/spring-context/src/test/java/org/springframework/cache/NoOpCacheManagerTests.java, +/**, + * Tests for {@link NoOpCacheManager}., + *, + * @author Costin Leau, + * @author Stephane Nicoll, + */, +	private final CacheManager manager = new NoOpCacheManager();, +		Cache cache = this.manager.getCache("bucket");, +		assertSame(cache, this.manager.getCache("bucket"));, +		String name = createRandomKey();, +		Cache cache = this.manager.getCache(name);, +		assertFalse(this.manager.getCacheNames().contains(name));, +		this.manager.getCache(name);, +		assertTrue(this.manager.getCacheNames().contains(name));, +, +	@Test, +	public void testCacheCallable() throws Exception {, +		String name = createRandomKey();, +		Cache cache = this.manager.getCache(name);, +		Object returnValue = new Object();, +		Object value = cache.get(new Object(), () -> returnValue);, +		assertEquals(returnValue, value);, +	}, +, +	@Test, +	public void testCacheGetCallableFail() {, +		Cache cache = this.manager.getCache(createRandomKey());, +		String key = createRandomKey();, +		try {, +			cache.get(key, () -> {, +				throw new UnsupportedOperationException("Expected exception");, +			});, +		}, +		catch (Cache.ValueRetrievalException ex) {, +			assertNotNull(ex.getCause());, +			assertEquals(UnsupportedOperationException.class, ex.getCause().getClass());, +		}, +	}, +, +	private String createRandomKey() {, +		return UUID.randomUUID().toString();, +	}, +]