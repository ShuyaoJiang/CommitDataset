[+++ b/spring-context/src/main/java/org/springframework/cache/interceptor/BasicOperation.java, +	 * Return the cache name(s) associated with the operation., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/BasicOperation.java, +	 * Return the cache name(s) associated with the operation., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheOperationInvocationContext.java, + * Representation of the context of the invocation of a cache operation., + * <p>The cache operation is static and independent of a particular invocation;, + * this interface gathers the operation and a particular invocation., +	 * Return the cache operation., +	 * Return the target instance on which the method was invoked., +	 * Return the method which was invoked., +	 * Return the argument list used to invoke the method., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/BasicOperation.java, +	 * Return the cache name(s) associated with the operation., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheOperationInvocationContext.java, + * Representation of the context of the invocation of a cache operation., + * <p>The cache operation is static and independent of a particular invocation;, + * this interface gathers the operation and a particular invocation., +	 * Return the cache operation., +	 * Return the target instance on which the method was invoked., +	 * Return the method which was invoked., +	 * Return the argument list used to invoke the method., +++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelCompilerMode.java, +	 * The compiler is switched off; this is the default., +	 * In mixed mode, expression evaluation silently switches between interpreted and compiled over time., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/BasicOperation.java, +	 * Return the cache name(s) associated with the operation., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheOperationInvocationContext.java, + * Representation of the context of the invocation of a cache operation., + * <p>The cache operation is static and independent of a particular invocation;, + * this interface gathers the operation and a particular invocation., +	 * Return the cache operation., +	 * Return the target instance on which the method was invoked., +	 * Return the method which was invoked., +	 * Return the argument list used to invoke the method., +++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelCompilerMode.java, +	 * The compiler is switched off; this is the default., +	 * In mixed mode, expression evaluation silently switches between interpreted and compiled over time., +++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelParserConfiguration.java, +	 * Create a new {@code SpelParserConfiguration} instance with default settings., +	 * Create a new {@code SpelParserConfiguration} instance., +	 * Create a new {@code SpelParserConfiguration} instance., +	 * Create a new {@code SpelParserConfiguration} instance., +	 * Create a new {@code SpelParserConfiguration} instance., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/BasicOperation.java, +	 * Return the cache name(s) associated with the operation., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheOperationInvocationContext.java, + * Representation of the context of the invocation of a cache operation., + * <p>The cache operation is static and independent of a particular invocation;, + * this interface gathers the operation and a particular invocation., +	 * Return the cache operation., +	 * Return the target instance on which the method was invoked., +	 * Return the method which was invoked., +	 * Return the argument list used to invoke the method., +++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelCompilerMode.java, +	 * The compiler is switched off; this is the default., +	 * In mixed mode, expression evaluation silently switches between interpreted and compiled over time., +++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelParserConfiguration.java, +	 * Create a new {@code SpelParserConfiguration} instance with default settings., +	 * Create a new {@code SpelParserConfiguration} instance., +	 * Create a new {@code SpelParserConfiguration} instance., +	 * Create a new {@code SpelParserConfiguration} instance., +	 * Create a new {@code SpelParserConfiguration} instance., +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerConfigurer.java, + * Optional interface to be implemented by a Spring managed bean willing, + * used to define the default {@link org.springframework.jms.config.JmsListenerContainerFactory, + * JmsListenerContainerFactory} to use or for registering JMS endpoints, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/BasicOperation.java, +	 * Return the cache name(s) associated with the operation., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheOperationInvocationContext.java, + * Representation of the context of the invocation of a cache operation., + * <p>The cache operation is static and independent of a particular invocation;, + * this interface gathers the operation and a particular invocation., +	 * Return the cache operation., +	 * Return the target instance on which the method was invoked., +	 * Return the method which was invoked., +	 * Return the argument list used to invoke the method., +++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelCompilerMode.java, +	 * The compiler is switched off; this is the default., +	 * In mixed mode, expression evaluation silently switches between interpreted and compiled over time., +++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelParserConfiguration.java, +	 * Create a new {@code SpelParserConfiguration} instance with default settings., +	 * Create a new {@code SpelParserConfiguration} instance., +	 * Create a new {@code SpelParserConfiguration} instance., +	 * Create a new {@code SpelParserConfiguration} instance., +	 * Create a new {@code SpelParserConfiguration} instance., +++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerConfigurer.java, + * Optional interface to be implemented by a Spring managed bean willing, + * used to define the default {@link org.springframework.jms.config.JmsListenerContainerFactory, + * JmsListenerContainerFactory} to use or for registering JMS endpoints, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java, +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/BasicOperation.java, +	 * Return the cache name(s) associated with the operation., +++ b/spring-context/src/main/java/org/springframework/cache/interceptor/CacheOperationInvocationContext.java, + * Representation of the context of the invocation of a cache operation., + * <p>The cache operation is static and independent of a particular invocation;, + * this interface gathers the operation and a particular invocation., +	 * Return the cache operation., +	 * Return the target instance on which the method was invoked., +	 * Return the method which was invoked.]