[+++ b/build.gradle, +		optional("javax.money:money-api:1.0-RC3"), +		testCompile("org.javamoney:moneta:1.0-RC3"), +++ b/build.gradle, +		optional("javax.money:money-api:1.0-RC3"), +		testCompile("org.javamoney:moneta:1.0-RC3"), +++ b/spring-context/src/main/java/org/springframework/format/annotation/NumberFormat.java, + * <p>For style-based formatting, set the {@link #style} attribute to be the, + * desired {@link Style}. For custom formatting, set the {@link #pattern}, + * attribute to be the number pattern, such as {@code #, ###.##}., + * <p>Each attribute is mutually exclusive, so only set one attribute per, + * annotation instance (the one most convenient one for your formatting needs)., + * When the {@link #pattern} attribute is specified, it takes precedence over, + * the {@link #style} attribute. When no annotation attributes are specified,, + * the default format applied is style-based for either number of currency,, + * depending on the annotated field type., + * @author Juergen Hoeller, +	 * <p>Defaults to {@link Style#DEFAULT} for general-purpose number formatting, +	 * for most annotated types, except for money types which default to currency, +	 * formatting. Set this attribute when you wish to format your field in, +	 * accordance with a common style other than the default style., +	Style style() default Style.DEFAULT;, +		 * The default format for the annotated type: typically number, +		 * but possibly currency for a money type., +		 * @since 4.2, +		 */, +		DEFAULT,, +, +		/**, +++ b/build.gradle, +		optional("javax.money:money-api:1.0-RC3"), +		testCompile("org.javamoney:moneta:1.0-RC3"), +++ b/spring-context/src/main/java/org/springframework/format/annotation/NumberFormat.java, + * <p>For style-based formatting, set the {@link #style} attribute to be the, + * desired {@link Style}. For custom formatting, set the {@link #pattern}, + * attribute to be the number pattern, such as {@code #, ###.##}., + * <p>Each attribute is mutually exclusive, so only set one attribute per, + * annotation instance (the one most convenient one for your formatting needs)., + * When the {@link #pattern} attribute is specified, it takes precedence over, + * the {@link #style} attribute. When no annotation attributes are specified,, + * the default format applied is style-based for either number of currency,, + * depending on the annotated field type., + * @author Juergen Hoeller, +	 * <p>Defaults to {@link Style#DEFAULT} for general-purpose number formatting, +	 * for most annotated types, except for money types which default to currency, +	 * formatting. Set this attribute when you wish to format your field in, +	 * accordance with a common style other than the default style., +	Style style() default Style.DEFAULT;, +		 * The default format for the annotated type: typically number, +		 * but possibly currency for a money type., +		 * @since 4.2, +		 */, +		DEFAULT,, +, +		/**, +++ b/spring-context/src/main/java/org/springframework/format/number/AbstractNumberFormatter.java, +, +, +++ b/build.gradle, +		optional("javax.money:money-api:1.0-RC3"), +		testCompile("org.javamoney:moneta:1.0-RC3"), +++ b/spring-context/src/main/java/org/springframework/format/annotation/NumberFormat.java, + * <p>For style-based formatting, set the {@link #style} attribute to be the, + * desired {@link Style}. For custom formatting, set the {@link #pattern}, + * attribute to be the number pattern, such as {@code #, ###.##}., + * <p>Each attribute is mutually exclusive, so only set one attribute per, + * annotation instance (the one most convenient one for your formatting needs)., + * When the {@link #pattern} attribute is specified, it takes precedence over, + * the {@link #style} attribute. When no annotation attributes are specified,, + * the default format applied is style-based for either number of currency,, + * depending on the annotated field type., + * @author Juergen Hoeller, +	 * <p>Defaults to {@link Style#DEFAULT} for general-purpose number formatting, +	 * for most annotated types, except for money types which default to currency, +	 * formatting. Set this attribute when you wish to format your field in, +	 * accordance with a common style other than the default style., +	Style style() default Style.DEFAULT;, +		 * The default format for the annotated type: typically number, +		 * but possibly currency for a money type., +		 * @since 4.2, +		 */, +		DEFAULT,, +, +		/**, +++ b/spring-context/src/main/java/org/springframework/format/number/AbstractNumberFormatter.java, +, +, +++ b/spring-context/src/main/java/org/springframework/format/number/CurrencyFormatter.java, + * Copyright 2002-2015 the original author or authors., + * @since 4.2, + * @deprecated as of Spring 4.2, in favor of the more clearly named, + * {@link CurrencyStyleFormatter}, +@Deprecated, +public class CurrencyFormatter extends CurrencyStyleFormatter {, +++ b/build.gradle, +		optional("javax.money:money-api:1.0-RC3"), +		testCompile("org.javamoney:moneta:1.0-RC3"), +++ b/spring-context/src/main/java/org/springframework/format/annotation/NumberFormat.java, + * <p>For style-based formatting, set the {@link #style} attribute to be the, + * desired {@link Style}. For custom formatting, set the {@link #pattern}]