[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +import org.springframework.core.BridgeMethodResolver;, +			if (ao instanceof Method) {, +				ao = BridgeMethodResolver.findBridgedMethod((Method)ao);, +			}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +import org.springframework.core.BridgeMethodResolver;, +			if (ao instanceof Method) {, +				ao = BridgeMethodResolver.findBridgedMethod((Method)ao);, +			}, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.java, +, +import org.springframework.core.BridgeMethodResolver;, +							method = BridgeMethodResolver.findBridgedMethod(method);, +							Method mostSpecificMethod = BridgeMethodResolver.findBridgedMethod(ClassUtils.getMostSpecificMethod(method, clazz));, +							if (method.equals(mostSpecificMethod)) {, +								if (webServiceRefClass != null && method.isAnnotationPresent(webServiceRefClass)) {, +								else if (ejbRefClass != null && method.isAnnotationPresent(ejbRefClass)) {, +								else if (method.isAnnotationPresent(Resource.class)) {, +						}]