[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.java, +import org.springframework.web.HttpMediaTypeException;, +		if (!result.isEmpty()) {, +			return new ProducesRequestCondition(result, this.contentNegotiationManager);, +		}, +		try {, +			if (getAcceptedMediaTypes(request).contains(MediaType.ALL)) {, +				return new ProducesRequestCondition();, +			}, +		}, +		catch (HttpMediaTypeException ex) {, +			// Ignore, +		}, +		return null;, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.java, +import org.springframework.web.HttpMediaTypeException;, +		if (!result.isEmpty()) {, +			return new ProducesRequestCondition(result, this.contentNegotiationManager);, +		}, +		try {, +			if (getAcceptedMediaTypes(request).contains(MediaType.ALL)) {, +				return new ProducesRequestCondition();, +			}, +		}, +		catch (HttpMediaTypeException ex) {, +			// Ignore, +		}, +		return null;, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/condition/ProducesRequestConditionTests.java, + * Copyright 2002-2016 the original author or authors., +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertNull;, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, + * Unit tests for {@link ProducesRequestCondition}., +	public void matchNegatedWithoutAcceptHeader() {, +		ProducesRequestCondition condition = new ProducesRequestCondition("!text/plain");, +		MockHttpServletRequest request = new MockHttpServletRequest();, +, +		assertNotNull(condition.getMatchingCondition(request));, +		assertEquals(Collections.emptySet(), condition.getProducibleMediaTypes());, +	}, +, +	@Test]