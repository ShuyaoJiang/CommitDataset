[+++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canDecode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canDecode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canEncode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canDecode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canEncode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canEncode(elementType, mimeType) && CharSequence.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canDecode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canEncode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canEncode(elementType, mimeType) && CharSequence.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/Decoder.java, +	boolean canDecode(ResolvableType elementType, MimeType mimeType);, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canDecode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canEncode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canEncode(elementType, mimeType) && CharSequence.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/Decoder.java, +	boolean canDecode(ResolvableType elementType, MimeType mimeType);, +++ b/spring-core/src/main/java/org/springframework/core/codec/Encoder.java, +	boolean canEncode(ResolvableType elementType, MimeType mimeType);, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canDecode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canEncode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canEncode(elementType, mimeType) && CharSequence.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/Decoder.java, +	boolean canDecode(ResolvableType elementType, MimeType mimeType);, +++ b/spring-core/src/main/java/org/springframework/core/codec/Encoder.java, +	boolean canEncode(ResolvableType elementType, MimeType mimeType);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +				super.canDecode(elementType, mimeType);, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/AbstractEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferDecoder.java, +	public boolean canDecode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canDecode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {, +		return (super.canEncode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz));, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +	public boolean canEncode(ResolvableType elementType, MimeType mimeType) {]