[+++ b/spring-web/src/main/java/org/springframework/http/client/OkHttpAsyncClientHttpRequest.java, +		Request request = OkHttpClientHttpRequestFactory.buildRequest(headers, content, this.uri, this.method);, +, +	private static class OkHttpListenableFuture extends SettableListenableFuture<ClientHttpResponse> {, +++ b/spring-web/src/main/java/org/springframework/http/client/OkHttpAsyncClientHttpRequest.java, +		Request request = OkHttpClientHttpRequestFactory.buildRequest(headers, content, this.uri, this.method);, +, +	private static class OkHttpListenableFuture extends SettableListenableFuture<ClientHttpResponse> {, +++ b/spring-web/src/main/java/org/springframework/http/client/OkHttpClientHttpRequest.java, +	protected ClientHttpResponse executeInternal(HttpHeaders headers, byte[] content) throws IOException {, +		Request request = OkHttpClientHttpRequestFactory.buildRequest(headers, content, this.uri, this.method);, +++ b/spring-web/src/main/java/org/springframework/http/client/OkHttpAsyncClientHttpRequest.java, +		Request request = OkHttpClientHttpRequestFactory.buildRequest(headers, content, this.uri, this.method);, +, +	private static class OkHttpListenableFuture extends SettableListenableFuture<ClientHttpResponse> {, +++ b/spring-web/src/main/java/org/springframework/http/client/OkHttpClientHttpRequest.java, +	protected ClientHttpResponse executeInternal(HttpHeaders headers, byte[] content) throws IOException {, +		Request request = OkHttpClientHttpRequestFactory.buildRequest(headers, content, this.uri, this.method);, +++ b/spring-web/src/main/java/org/springframework/http/client/OkHttpClientHttpRequestFactory.java, +import java.io.IOException;, +		Assert.notNull(client, "OkHttpClient must not be null");, +, +	@Override, +	public void destroy() throws IOException {, +		if (this.defaultClient) {, +			// Clean up the client if we created it in the constructor, +			if (this.client.getCache() != null) {, +				this.client.getCache().close();, +			}, +			this.client.getDispatcher().getExecutorService().shutdown();, +		}, +	}, +, +, +, +		RequestBody body = (content.length > 0 ? RequestBody.create(contentType, content) : null);, +]