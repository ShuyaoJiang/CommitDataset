[+++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractPropertyBindingResult.java, +			if (fieldDesc != null && this.conversionService.canConvert(fieldDesc, TypeDescriptor.STRING)) {, +				return this.conversionService.convert(value, fieldDesc, TypeDescriptor.STRING);, +			if (this.conversionService.canConvert(TypeDescriptor.STRING, td)) {, +		}, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractPropertyBindingResult.java, +			if (fieldDesc != null && this.conversionService.canConvert(fieldDesc, TypeDescriptor.STRING)) {, +				return this.conversionService.convert(value, fieldDesc, TypeDescriptor.STRING);, +			if (this.conversionService.canConvert(TypeDescriptor.STRING, td)) {, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ConvertingPropertyEditorAdapter.java, +	private final boolean canConvertToString;, +, +		this.canConvertToString = conversionService.canConvert(this.targetDescriptor, TypeDescriptor.STRING);, +		setValue(this.conversionService.convert(text, TypeDescriptor.STRING, this.targetDescriptor));, +		if (this.canConvertToString) {, +			return (String) this.conversionService.convert(getValue(), this.targetDescriptor, TypeDescriptor.STRING);, +		}, +		else {, +			return null;, +		}, +++ b/org.springframework.context/src/main/java/org/springframework/validation/AbstractPropertyBindingResult.java, +			if (fieldDesc != null && this.conversionService.canConvert(fieldDesc, TypeDescriptor.STRING)) {, +				return this.conversionService.convert(value, fieldDesc, TypeDescriptor.STRING);, +			if (this.conversionService.canConvert(TypeDescriptor.STRING, td)) {, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ConvertingPropertyEditorAdapter.java, +	private final boolean canConvertToString;, +, +		this.canConvertToString = conversionService.canConvert(this.targetDescriptor, TypeDescriptor.STRING);, +		setValue(this.conversionService.convert(text, TypeDescriptor.STRING, this.targetDescriptor));, +		if (this.canConvertToString) {, +			return (String) this.conversionService.convert(getValue(), this.targetDescriptor, TypeDescriptor.STRING);, +		}, +		else {, +			return null;, +		}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/tags/form/ValueFormatter.java, + * Copyright 2002-2009 the original author or authors., +				String text = propertyEditor.getAsText();, +				if (text != null) {, +					return getDisplayString(text, htmlEscape);, +				}, +			}, +		}]