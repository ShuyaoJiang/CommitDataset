[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/StompSubProtocolHandler.java, +				if (logger.isErrorEnabled()) {, +				}, +		Assert.state(accessor != null, "Expected STOMP headers");, +			if (logger.isErrorEnabled()) {, +	}, +			if (logger.isErrorEnabled()) {, +			}, +		StompHeaderAccessor accessor = getStompHeaderAccessor(message);, +		StompCommand command = accessor.getCommand();, +			if (accessor.getSubscriptionId() == null && logger.isWarnEnabled()) {, +			String origDestination = accessor.getFirstNativeHeader(SimpMessageHeaderAccessor.ORIGINAL_DESTINATION);, +				accessor = toMutableAccessor(accessor, message);, +				accessor.removeNativeHeader(SimpMessageHeaderAccessor.ORIGINAL_DESTINATION);, +				accessor.setDestination(origDestination);, +			accessor = afterStompSessionConnected(message, accessor, session);, +			accessor = MessageHeaderAccessor.getAccessor(errorMessage, StompHeaderAccessor.class);, +			Assert.state(accessor != null, "Expected STOMP headers");, +		sendToClient(session, accessor, payload);, +			if (logger.isDebugEnabled()) {, +			}, +		if (message == null) {, +			throw new IllegalStateException("Original STOMP CONNECT not found in " + connectAckHeaders);, +		}, +, +, +, +]