[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/AbstractMockMvcBuilder.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.test.web.servlet.MockMvcBuilder;, + * Abstract implementation of {@link MockMvcBuilder} with common methods for, + * configuring filters, default request properties, global expectations and, + * global result actions., + *, + * <p>Sub-classes can use different strategies to prepare the Spring, + * {@code WebApplicationContext} that will be passed to the, + * {@code DispatcherServlet}., +	 * A method to obtain the {@code WebApplicationContext} to be passed to the, +	 * {@code DispatcherServlet}. Invoked from {@link #build()} before the, +	 * {@link MockMvc} instance is created., +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/AbstractMockMvcBuilder.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.test.web.servlet.MockMvcBuilder;, + * Abstract implementation of {@link MockMvcBuilder} with common methods for, + * configuring filters, default request properties, global expectations and, + * global result actions., + *, + * <p>Sub-classes can use different strategies to prepare the Spring, + * {@code WebApplicationContext} that will be passed to the, + * {@code DispatcherServlet}., +	 * A method to obtain the {@code WebApplicationContext} to be passed to the, +	 * {@code DispatcherServlet}. Invoked from {@link #build()} before the, +	 * {@link MockMvc} instance is created., +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder.java, + * Copyright 2002-2017 the original author or authors., +public interface ConfigurableMockMvcBuilder<B extends ConfigurableMockMvcBuilder<B>>, +		extends MockMvcBuilder {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/AbstractMockMvcBuilder.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.test.web.servlet.MockMvcBuilder;, + * Abstract implementation of {@link MockMvcBuilder} with common methods for, + * configuring filters, default request properties, global expectations and, + * global result actions., + *, + * <p>Sub-classes can use different strategies to prepare the Spring, + * {@code WebApplicationContext} that will be passed to the, + * {@code DispatcherServlet}., +	 * A method to obtain the {@code WebApplicationContext} to be passed to the, +	 * {@code DispatcherServlet}. Invoked from {@link #build()} before the, +	 * {@link MockMvc} instance is created., +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder.java, + * Copyright 2002-2017 the original author or authors., +public interface ConfigurableMockMvcBuilder<B extends ConfigurableMockMvcBuilder<B>>, +		extends MockMvcBuilder {, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/MockMvcConfigurer.java, + * Copyright 2002-2017 the original author or authors., + * Contract for customizing a {@code ConfigurableMockMvcBuilder} in some, + * specific way, e.g. a 3rd party library that wants to provide shortcuts for, + * setting up a MockMvc., + * <p>An implementation of this interface can be plugged in via, + * {@link ConfigurableMockMvcBuilder#apply} with instances of this type likely, + * created via static methods, e.g.:, + * import static org.example.ExampleSetup.mySetup;, + *, + * // ..., + *, +	 * Invoked immediately when this {@code MockMvcConfigurer} is added via, +	 * @param builder the builder for the MockMvc, +	 * Invoked when the MockMvc instance is about to be created with the MockMvc, +	 * builder and the Spring WebApplicationContext that will be passed to the, +	 * {@code DispatcherServlet}., +	 * @param builder the builder for the MockMvc, +	 * @param context the Spring configuration, +	 * @return a post processor to be applied to every request performed, +	 * through the {@code MockMvc} instance., +	RequestPostProcessor beforeMockMvcCreated(ConfigurableMockMvcBuilder<?> builder,, +			WebApplicationContext context);]