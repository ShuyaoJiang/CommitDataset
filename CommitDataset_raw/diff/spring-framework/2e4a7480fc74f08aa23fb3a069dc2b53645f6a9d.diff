[+++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java, +import java.nio.charset.StandardCharsets;, +		return new String(generateMultipartBoundary(), StandardCharsets.US_ASCII);, +++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java, +import java.nio.charset.StandardCharsets;, +		return new String(generateMultipartBoundary(), StandardCharsets.US_ASCII);, +++ b/spring-core/src/test/java/org/springframework/util/MimeTypeTests.java, +		assertEquals("Invalid charset", StandardCharsets.ISO_8859_1, mimeType.getCharset());, +++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java, +import java.nio.charset.StandardCharsets;, +		return new String(generateMultipartBoundary(), StandardCharsets.US_ASCII);, +++ b/spring-core/src/test/java/org/springframework/util/MimeTypeTests.java, +		assertEquals("Invalid charset", StandardCharsets.ISO_8859_1, mimeType.getCharset());, +++ b/spring-messaging/src/test/java/org/springframework/messaging/converter/MappingJackson2MessageConverterTests.java, + * Copyright 2002-2016 the original author or authors., +		MimeType contentType = new MimeType("application", "json", StandardCharsets.UTF_16BE);, +		assertEquals("\"" + payload + "\"", new String((byte[]) message.getPayload(), StandardCharsets.UTF_16BE));, +		MimeType contentType = new MimeType("application", "json", StandardCharsets.UTF_16BE);, +, +	@JsonView(MyJacksonView1.class), +	public JacksonViewBean jsonViewResponse() {, +		JacksonViewBean bean = new JacksonViewBean();, +		bean.setWithView1("with");, +		bean.setWithView2("with");, +		bean.setWithoutView("with");, +		return bean;, +	}, +, +	public void jsonViewPayload(@JsonView(MyJacksonView2.class) JacksonViewBean payload) {, +	}, +, +, +, +, +, +++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java, +import java.nio.charset.StandardCharsets;, +		return new String(generateMultipartBoundary(), StandardCharsets.US_ASCII);, +++ b/spring-core/src/test/java/org/springframework/util/MimeTypeTests.java, +		assertEquals("Invalid charset", StandardCharsets.ISO_8859_1, mimeType.getCharset());, +++ b/spring-messaging/src/test/java/org/springframework/messaging/converter/MappingJackson2MessageConverterTests.java, + * Copyright 2002-2016 the original author or authors., +		MimeType contentType = new MimeType("application", "json", StandardCharsets.UTF_16BE);, +		assertEquals("\"" + payload + "\"", new String((byte[]) message.getPayload(), StandardCharsets.UTF_16BE));, +		MimeType contentType = new MimeType("application", "json", StandardCharsets.UTF_16BE);, +, +	@JsonView(MyJacksonView1.class), +	public JacksonViewBean jsonViewResponse() {, +		JacksonViewBean bean = new JacksonViewBean();, +		bean.setWithView1("with");, +		bean.setWithView2("with");, +		bean.setWithoutView("with");, +		return bean;, +	}, +, +	public void jsonViewPayload(@JsonView(MyJacksonView2.class) JacksonViewBean payload) {, +	}, +, +, +, +, +, +++ b/spring-messaging/src/test/java/org/springframework/messaging/converter/StringMessageConverterTests.java, +		Message<byte[]> message = MessageBuilder.withPayload(payload.getBytes(StandardCharsets.ISO_8859_1)), +				.setHeader(MessageHeaders.CONTENT_TYPE, new MimeType("text", "plain", StandardCharsets.ISO_8859_1)).build();, +++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java, +import java.nio.charset.StandardCharsets;, +		return new String(generateMultipartBoundary(), StandardCharsets.US_ASCII);, +++ b/spring-core/src/test/java/org/springframework/util/MimeTypeTests.java, +		assertEquals("Invalid charset", StandardCharsets.ISO_8859_1, mimeType.getCharset());, +++ b/spring-messaging/src/test/java/org/springframework/messaging/converter/MappingJackson2MessageConverterTests.java, + * Copyright 2002-2016 the original author or authors., +		MimeType contentType = new MimeType("application", "json", StandardCharsets.UTF_16BE);, +		assertEquals("\"" + payload + "\"", new String((byte[]) message.getPayload(), StandardCharsets.UTF_16BE));, +		MimeType contentType = new MimeType("application", "json", StandardCharsets.UTF_16BE);, +, +	@JsonView(MyJacksonView1.class), +	public JacksonViewBean jsonViewResponse() {, +		JacksonViewBean bean = new JacksonViewBean();, +		bean.setWithView1("with");, +		bean.setWithView2("with");, +		bean.setWithoutView("with");, +		return bean;, +	}, +, +	public void jsonViewPayload(@JsonView(MyJacksonView2.class) JacksonViewBean payload) {, +	}, +, +, +, +, +, +++ b/spring-messaging/src/test/java/org/springframework/messaging/converter/StringMessageConverterTests.java, +		Message<byte[]> message = MessageBuilder.withPayload(payload.getBytes(StandardCharsets.ISO_8859_1)), +				.setHeader(MessageHeaders.CONTENT_TYPE, new MimeType("text", "plain", StandardCharsets.ISO_8859_1)).build();, +++ b/spring-web/src/main/java/org/springframework/http/converter/StringHttpMessageConverter.java, +import java.nio.charset.StandardCharsets;, +	public static final Charset DEFAULT_CHARSET = StandardCharsets.ISO_8859_1;, +++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java, +import java.nio.charset.StandardCharsets;]