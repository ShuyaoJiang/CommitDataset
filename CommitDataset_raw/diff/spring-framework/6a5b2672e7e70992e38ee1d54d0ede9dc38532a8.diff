[+++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/standalone/resultmatchers/StatusAssertionTests.java, + * Copyright 2002-2015 the original author or authors., +	private final MockMvc mockMvc = standaloneSetup(new StatusController()).build();, +		@ResponseStatus(code = HttpStatus.BAD_REQUEST, reason = "Expired token"), +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/standalone/resultmatchers/StatusAssertionTests.java, + * Copyright 2002-2015 the original author or authors., +	private final MockMvc mockMvc = standaloneSetup(new StatusController()).build();, +		@ResponseStatus(code = HttpStatus.BAD_REQUEST, reason = "Expired token"), +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/ResponseStatus.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * Marks a method or exception class with the status {@link #code} and, + * {@link #reason} that should be returned., + *, + * <p>The status code is applied to the HTTP response when the handler, + * method is invoked, or whenever said exception is thrown., + * @author Sam Brannen, +	 * Alias for {@link #code}., +	@AliasFor(attribute = "code"), +	HttpStatus value() default HttpStatus.INTERNAL_SERVER_ERROR;, +	 * The status <em>code</em> to use for the response., +	 * <p>Default is {@link HttpStatus#INTERNAL_SERVER_ERROR}, which should, +	 * typically be changed to something more appropriate., +	 * @since 4.2, +	 * @see javax.servlet.http.HttpServletResponse#setStatus(int), +	 */, +	@AliasFor(attribute = "value"), +	HttpStatus code() default HttpStatus.INTERNAL_SERVER_ERROR;, +, +	/**, +	 * The <em>reason</em> to be used for the response., +	 * <p>If this attribute is not set, it will default to the standard status, +	 * message for the status code. Note that due to the use of, +	 * {@code HttpServletResponse.sendError(int, String)}, the response will be, +	 * considered complete and should not be written to any further., +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/standalone/resultmatchers/StatusAssertionTests.java, + * Copyright 2002-2015 the original author or authors., +	private final MockMvc mockMvc = standaloneSetup(new StatusController()).build();, +		@ResponseStatus(code = HttpStatus.BAD_REQUEST, reason = "Expired token"), +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/ResponseStatus.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * Marks a method or exception class with the status {@link #code} and, + * {@link #reason} that should be returned., + *, + * <p>The status code is applied to the HTTP response when the handler, + * method is invoked, or whenever said exception is thrown., + * @author Sam Brannen, +	 * Alias for {@link #code}., +	@AliasFor(attribute = "code"), +	HttpStatus value() default HttpStatus.INTERNAL_SERVER_ERROR;, +	 * The status <em>code</em> to use for the response., +	 * <p>Default is {@link HttpStatus#INTERNAL_SERVER_ERROR}, which should, +	 * typically be changed to something more appropriate., +	 * @since 4.2, +	 * @see javax.servlet.http.HttpServletResponse#setStatus(int), +	 */, +	@AliasFor(attribute = "value"), +	HttpStatus code() default HttpStatus.INTERNAL_SERVER_ERROR;, +, +	/**, +	 * The <em>reason</em> to be used for the response., +	 * <p>If this attribute is not set, it will default to the standard status, +	 * message for the status code. Note that due to the use of, +	 * {@code HttpServletResponse.sendError(int, String)}, the response will be, +	 * considered complete and should not be written to any further., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +				HttpStatus responseStatus = responseStatusAnn.code();, +++ b/spring-test/src/test/java/org/springframework/test/web/servlet/samples/standalone/resultmatchers/StatusAssertionTests.java, + * Copyright 2002-2015 the original author or authors., +	private final MockMvc mockMvc = standaloneSetup(new StatusController()).build();, +		@ResponseStatus(code = HttpStatus.BAD_REQUEST, reason = "Expired token"), +++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/ResponseStatus.java, + * Copyright 2002-2015 the original author or authors., +import org.springframework.core.annotation.AliasFor;, + * Marks a method or exception class with the status {@link #code} and, + * {@link #reason} that should be returned., + *, + * <p>The status code is applied to the HTTP response when the handler, + * method is invoked, or whenever said exception is thrown., + * @author Sam Brannen, +	 * Alias for {@link #code}., +	@AliasFor(attribute = "code"), +	HttpStatus value() default HttpStatus.INTERNAL_SERVER_ERROR;, +	 * The status <em>code</em> to use for the response., +	 * <p>Default is {@link HttpStatus#INTERNAL_SERVER_ERROR}, which should, +	 * typically be changed to something more appropriate., +	 * @since 4.2, +	 * @see javax.servlet.http.HttpServletResponse#setStatus(int), +	 */, +	@AliasFor(attribute = "value"), +	HttpStatus code() default HttpStatus.INTERNAL_SERVER_ERROR;, +, +	/**, +	 * The <em>reason</em> to be used for the response., +	 * <p>If this attribute is not set, it will default to the standard status, +	 * message for the status code. Note that due to the use of, +	 * {@code HttpServletResponse.sendError(int, String)}, the response will be, +	 * considered complete and should not be written to any further., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java]