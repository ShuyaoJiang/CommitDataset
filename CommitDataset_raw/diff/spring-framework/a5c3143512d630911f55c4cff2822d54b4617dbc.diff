[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/AbstractWebSocketSession.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/AbstractWebSocketSession.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/JettyWebSocketSession.java, +	private final Principal user;, +	 * @param user the user associated with the session; can be left, +	public JettyWebSocketSession(Map<String, Object> handshakeAttributes, Principal user) {, +		this.user = user;, +		if (this.user != null) {, +			return this.user;, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/AbstractWebSocketSession.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/JettyWebSocketSession.java, +	private final Principal user;, +	 * @param user the user associated with the session; can be left, +	public JettyWebSocketSession(Map<String, Object> handshakeAttributes, Principal user) {, +		this.user = user;, +		if (this.user != null) {, +			return this.user;, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/standard/StandardWebSocketSession.java, +	private final Principal user;, +, +	 *, +, +		this(headers, handshakeAttributes, localAddress, remoteAddress, null);, +	}, +, +	/**, +	 * Class constructor that associates a user with the WebSocket session., +	 *, +	 * @param headers the headers of the handshake request, +	 * @param handshakeAttributes attributes from the HTTP handshake to make available, +	 * through the WebSocket session, +	 * @param localAddress the address on which the request was received, +	 * @param remoteAddress the address of the remote client, +	 * @param user the user associated with the session; can be left, +	 * 	{@code null} in which case, we'll fallback on the user available via, +	 */, +	public StandardWebSocketSession(HttpHeaders headers, Map<String, Object> handshakeAttributes,, +			InetSocketAddress localAddress, InetSocketAddress remoteAddress, Principal user) {, +, +		this.user = user;, +		if (this.user != null) {, +			return this.user;, +		}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/AbstractWebSocketSession.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/JettyWebSocketSession.java, +	private final Principal user;, +	 * @param user the user associated with the session; can be left, +	public JettyWebSocketSession(Map<String, Object> handshakeAttributes, Principal user) {, +		this.user = user;, +		if (this.user != null) {, +			return this.user;, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/standard/StandardWebSocketSession.java, +	private final Principal user;, +, +	 *, +, +		this(headers, handshakeAttributes, localAddress, remoteAddress, null);, +	}, +, +	/**, +	 * Class constructor that associates a user with the WebSocket session., +	 *, +	 * @param headers the headers of the handshake request, +	 * @param handshakeAttributes attributes from the HTTP handshake to make available, +	 * through the WebSocket session, +	 * @param localAddress the address on which the request was received, +	 * @param remoteAddress the address of the remote client, +	 * @param user the user associated with the session; can be left, +	 * 	{@code null} in which case, we'll fallback on the user available via, +	 */, +	public StandardWebSocketSession(HttpHeaders headers, Map<String, Object> handshakeAttributes,, +			InetSocketAddress localAddress, InetSocketAddress remoteAddress, Principal user) {, +, +		this.user = user;, +		if (this.user != null) {, +			return this.user;, +		}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/RequestUpgradeStrategy.java, +import java.security.Principal;, +	 * @param user the user to associate with the WebSocket session, +			String selectedProtocol, List<WebSocketExtension> selectedExtensions, Principal user,, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/AbstractWebSocketSession.java, + * Copyright 2002-2014 the original author or authors., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/JettyWebSocketSession.java, +	private final Principal user;, +	 * @param user the user associated with the session; can be left, +	public JettyWebSocketSession(Map<String, Object> handshakeAttributes, Principal user) {, +		this.user = user;, +		if (this.user != null) {, +			return this.user;, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/standard/StandardWebSocketSession.java, +	private final Principal user;, +, +	 *, +, +		this(headers, handshakeAttributes, localAddress, remoteAddress, null);]