[+++ b/org.springframework.aop/src/main/java/org/springframework/aop/config/AopConfigUtils.java, + * Copyright 2002-2010 the original author or authors., +	static void forceAutoProxyCreatorToExposeProxy(BeanDefinitionRegistry registry) {, +		if (registry.containsBeanDefinition(AUTO_PROXY_CREATOR_BEAN_NAME)) {, +			BeanDefinition definition = registry.getBeanDefinition(AUTO_PROXY_CREATOR_BEAN_NAME);, +			definition.getPropertyValues().add("exposeProxy", Boolean.TRUE);, +		}, +	}, +, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/config/AopConfigUtils.java, + * Copyright 2002-2010 the original author or authors., +	static void forceAutoProxyCreatorToExposeProxy(BeanDefinitionRegistry registry) {, +		if (registry.containsBeanDefinition(AUTO_PROXY_CREATOR_BEAN_NAME)) {, +			BeanDefinition definition = registry.getBeanDefinition(AUTO_PROXY_CREATOR_BEAN_NAME);, +			definition.getPropertyValues().add("exposeProxy", Boolean.TRUE);, +		}, +	}, +, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java, + * Copyright 2002-2010 the original author or authors., +	/**, +	 * The <code>expose-proxy</code> attribute as found on AOP-related XML tags., +	 */, +	private static final String EXPOSE_PROXY_ATTRIBUTE = "expose-proxy";, +, +			boolean exposeProxy = Boolean.valueOf(sourceElement.getAttribute(EXPOSE_PROXY_ATTRIBUTE));, +			if (exposeProxy) {, +				AopConfigUtils.forceAutoProxyCreatorToExposeProxy(registry);, +			}, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/config/AopConfigUtils.java, + * Copyright 2002-2010 the original author or authors., +	static void forceAutoProxyCreatorToExposeProxy(BeanDefinitionRegistry registry) {, +		if (registry.containsBeanDefinition(AUTO_PROXY_CREATOR_BEAN_NAME)) {, +			BeanDefinition definition = registry.getBeanDefinition(AUTO_PROXY_CREATOR_BEAN_NAME);, +			definition.getPropertyValues().add("exposeProxy", Boolean.TRUE);, +		}, +	}, +, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java, + * Copyright 2002-2010 the original author or authors., +	/**, +	 * The <code>expose-proxy</code> attribute as found on AOP-related XML tags., +	 */, +	private static final String EXPOSE_PROXY_ATTRIBUTE = "expose-proxy";, +, +			boolean exposeProxy = Boolean.valueOf(sourceElement.getAttribute(EXPOSE_PROXY_ATTRIBUTE));, +			if (exposeProxy) {, +				AopConfigUtils.forceAutoProxyCreatorToExposeProxy(registry);, +			}, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/framework/Cglib2AopProxy.java, + * Copyright 2002-2010 the original author or authors., +		Callback targetInterceptor;, +			System.arraycopy(mainCallbacks, 0, callbacks, 0, mainCallbacks.length);, +			System.arraycopy(fixedCallbacks, 0, callbacks, mainCallbacks.length, fixedCallbacks.length);, +				Object retVal;, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/config/AopConfigUtils.java, + * Copyright 2002-2010 the original author or authors., +	static void forceAutoProxyCreatorToExposeProxy(BeanDefinitionRegistry registry) {, +		if (registry.containsBeanDefinition(AUTO_PROXY_CREATOR_BEAN_NAME)) {, +			BeanDefinition definition = registry.getBeanDefinition(AUTO_PROXY_CREATOR_BEAN_NAME);, +			definition.getPropertyValues().add("exposeProxy", Boolean.TRUE);, +		}, +	}, +, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java, + * Copyright 2002-2010 the original author or authors., +	/**, +	 * The <code>expose-proxy</code> attribute as found on AOP-related XML tags., +	 */, +	private static final String EXPOSE_PROXY_ATTRIBUTE = "expose-proxy";, +, +			boolean exposeProxy = Boolean.valueOf(sourceElement.getAttribute(EXPOSE_PROXY_ATTRIBUTE));, +			if (exposeProxy) {, +				AopConfigUtils.forceAutoProxyCreatorToExposeProxy(registry);, +			}, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/framework/Cglib2AopProxy.java, + * Copyright 2002-2010 the original author or authors., +		Callback targetInterceptor;, +			System.arraycopy(mainCallbacks, 0, callbacks, 0, mainCallbacks.length);, +			System.arraycopy(fixedCallbacks, 0, callbacks, mainCallbacks.length, fixedCallbacks.length);, +				Object retVal;, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/framework/ProxyConfig.java, + * Copyright 2002-2010 the original author or authors., +	 * <p>Default is "false", in order to avoid unnecessary extra interception., +	 * This means that no guarantees are provided that AopContext access will, +	 * work consistently within any method of the advised object., +++ b/org.springframework.aop/src/main/java/org/springframework/aop/config/AopConfigUtils.java, + * Copyright 2002-2010 the original author or authors., +	static void forceAutoProxyCreatorToExposeProxy(BeanDefinitionRegistry registry) {, +		if (registry.containsBeanDefinition(AUTO_PROXY_CREATOR_BEAN_NAME)) {, +			BeanDefinition definition = registry.getBeanDefinition(AUTO_PROXY_CREATOR_BEAN_NAME);, +			definition.getPropertyValues().add("exposeProxy", Boolean.TRUE);, +		}, +	}, +, +++ b/org.springframework.aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java, + * Copyright 2002-2010 the original author or authors., +	/**, +	 * The <code>expose-proxy</code> attribute as found on AOP-related XML tags., +	 */]