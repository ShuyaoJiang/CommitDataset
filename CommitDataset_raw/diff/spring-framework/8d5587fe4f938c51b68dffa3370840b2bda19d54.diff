[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java, +		synchronized (this.containedBeanMap) {, +			Set<String> containedBeans =, +					this.containedBeanMap.computeIfAbsent(containingBeanName, k -> new LinkedHashSet<>(8));, +			if (!containedBeans.add(containedBeanName)) {, +, +		synchronized (this.dependentBeanMap) {, +			Set<String> dependentBeans =, +					this.dependentBeanMap.computeIfAbsent(canonicalName, k -> new LinkedHashSet<>(8));, +			if (!dependentBeans.add(dependentBeanName)) {, +, +		synchronized (this.dependentBeanMap) {, +	}, +		synchronized (this.dependentBeanMap) {, +	}, +		synchronized (this.dependenciesForBeanMap) {, +	}, +		Set<String> dependencies;, +		synchronized (this.dependentBeanMap) {, +			// Within full synchronization in order to guarantee a disconnected Set, +			dependencies = this.dependentBeanMap.remove(beanName);, +		}, +		Set<String> containedBeans;, +		synchronized (this.containedBeanMap) {, +			// Within full synchronization in order to guarantee a disconnected Set, +			containedBeans = this.containedBeanMap.remove(beanName);, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java, +		synchronized (this.containedBeanMap) {, +			Set<String> containedBeans =, +					this.containedBeanMap.computeIfAbsent(containingBeanName, k -> new LinkedHashSet<>(8));, +			if (!containedBeans.add(containedBeanName)) {, +, +		synchronized (this.dependentBeanMap) {, +			Set<String> dependentBeans =, +					this.dependentBeanMap.computeIfAbsent(canonicalName, k -> new LinkedHashSet<>(8));, +			if (!dependentBeans.add(dependentBeanName)) {, +, +		synchronized (this.dependentBeanMap) {, +	}, +		synchronized (this.dependentBeanMap) {, +	}, +		synchronized (this.dependenciesForBeanMap) {, +	}, +		Set<String> dependencies;, +		synchronized (this.dependentBeanMap) {, +			// Within full synchronization in order to guarantee a disconnected Set, +			dependencies = this.dependentBeanMap.remove(beanName);, +		}, +		Set<String> containedBeans;, +		synchronized (this.containedBeanMap) {, +			// Within full synchronization in order to guarantee a disconnected Set, +			containedBeans = this.containedBeanMap.remove(beanName);, +		}, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java, +		if (bean != null && bean != this) {]