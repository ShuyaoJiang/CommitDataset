[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java, +, +, +, +		synchronized (this.sessions) {, +			if (this.sessionCleanupTask != null) {, +				return;, +			}, +	}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java, +, +, +, +		synchronized (this.sessions) {, +			if (this.sessionCleanupTask != null) {, +				return;, +			}, +	}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/EventSourceTransportHandler.java, +import org.springframework.http.server.ServerHttpResponse;, +		protected void writePrelude(ServerHttpRequest request, ServerHttpResponse response) throws IOException {, +			response.getBody().write('\r');, +			response.getBody().write('\n');, +			response.flush();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java, +, +, +, +		synchronized (this.sessions) {, +			if (this.sessionCleanupTask != null) {, +				return;, +			}, +	}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/EventSourceTransportHandler.java, +import org.springframework.http.server.ServerHttpResponse;, +		protected void writePrelude(ServerHttpRequest request, ServerHttpResponse response) throws IOException {, +			response.getBody().write('\r');, +			response.getBody().write('\n');, +			response.flush();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/HtmlFileTransportHandler.java, +		protected void writePrelude(ServerHttpRequest request, ServerHttpResponse response) {, +			String callback = getCallbackParam(request);, +				response.getBody().write(html.getBytes("UTF-8"));, +				response.flush();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java, +, +, +, +		synchronized (this.sessions) {, +			if (this.sessionCleanupTask != null) {, +				return;, +			}, +	}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/EventSourceTransportHandler.java, +import org.springframework.http.server.ServerHttpResponse;, +		protected void writePrelude(ServerHttpRequest request, ServerHttpResponse response) throws IOException {, +			response.getBody().write('\r');, +			response.getBody().write('\n');, +			response.flush();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/HtmlFileTransportHandler.java, +		protected void writePrelude(ServerHttpRequest request, ServerHttpResponse response) {, +			String callback = getCallbackParam(request);, +				response.getBody().write(html.getBytes("UTF-8"));, +				response.flush();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/XhrStreamingTransportHandler.java, +import org.springframework.http.server.ServerHttpResponse;, +		protected void writePrelude(ServerHttpRequest request, ServerHttpResponse response) throws IOException {, +				response.getBody().write('h');, +			response.getBody().write('\n');, +			response.flush();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java, +, +, +, +		synchronized (this.sessions) {, +			if (this.sessionCleanupTask != null) {, +				return;, +			}, +	}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/EventSourceTransportHandler.java, +import org.springframework.http.server.ServerHttpResponse;, +		protected void writePrelude(ServerHttpRequest request, ServerHttpResponse response) throws IOException {, +			response.getBody().write('\r');, +			response.getBody().write('\n');, +			response.flush();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/HtmlFileTransportHandler.java, +		protected void writePrelude(ServerHttpRequest request, ServerHttpResponse response) {, +			String callback = getCallbackParam(request);, +				response.getBody().write(html.getBytes("UTF-8"));, +				response.flush();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/XhrStreamingTransportHandler.java, +import org.springframework.http.server.ServerHttpResponse;, +		protected void writePrelude(ServerHttpRequest request, ServerHttpResponse response) throws IOException {, +				response.getBody().write('h');, +			response.getBody().write('\n');, +			response.flush();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractHttpSockJsSession.java, +import java.util.Queue;, +import java.util.concurrent.LinkedBlockingQueue;, +	private final Queue<String> messageCache;]