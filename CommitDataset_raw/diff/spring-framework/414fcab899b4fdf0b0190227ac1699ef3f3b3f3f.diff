[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +		Class<?> type = getPropertyTypeDescriptor(tokens.canonicalName).getType();, +			// TODO Root cause exception context is lost here... should we throw another exception type that preserves context instead?, +				// null map value case, +				if (this.autoGrowNestedPaths) {, +					// TODO: cleanup, this is pretty hacky, +					int lastKeyIndex = tokens.canonicalName.lastIndexOf('[');, +					getterTokens.canonicalName = tokens.canonicalName.substring(0, lastKeyIndex);, +					propValue = setDefaultValue(getterTokens);, +				}, +				else {, +			}, +			if (propValue.getClass().isArray()) {, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +		Class<?> type = getPropertyTypeDescriptor(tokens.canonicalName).getType();, +			// TODO Root cause exception context is lost here... should we throw another exception type that preserves context instead?, +				// null map value case, +				if (this.autoGrowNestedPaths) {, +					// TODO: cleanup, this is pretty hacky, +					int lastKeyIndex = tokens.canonicalName.lastIndexOf('[');, +					getterTokens.canonicalName = tokens.canonicalName.substring(0, lastKeyIndex);, +					propValue = setDefaultValue(getterTokens);, +				}, +				else {, +			}, +			if (propValue.getClass().isArray()) {, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/annotation/Spr7839Tests.java, +	    private Map<String, NestedBean> map;, +	    private Map<String, List<Integer>> mapOfLists;, +	    	]