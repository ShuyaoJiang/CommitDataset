[+++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriComponents.java, + * Copyright 2002-2012 the original author or authors., +    /**, +     * Normalize the path removing sequences like "path/.."., +     * @see StringUtils#cleanPath(String), +     */, +    public UriComponents normalize() {, +		String normalizedPath = StringUtils.cleanPath(getPath());, +		return new UriComponents(scheme, userInfo, host, this.port, new FullPathComponent(normalizedPath),, +				queryParams, fragment, encoded, false);, +    }, +, +++ b/org.springframework.web/src/main/java/org/springframework/web/util/UriComponents.java, + * Copyright 2002-2012 the original author or authors., +    /**, +     * Normalize the path removing sequences like "path/.."., +     * @see StringUtils#cleanPath(String), +     */, +    public UriComponents normalize() {, +		String normalizedPath = StringUtils.cleanPath(getPath());, +		return new UriComponents(scheme, userInfo, host, this.port, new FullPathComponent(normalizedPath),, +				queryParams, fragment, encoded, false);, +    }, +, +++ b/org.springframework.web/src/test/java/org/springframework/web/util/UriComponentsTests.java, + * Copyright 2002-2012 the original author or authors., +	@Test, +	public void normalize() {, +		UriComponents uriComponents = UriComponentsBuilder.fromUriString("http://example.com/foo/../bar").build();, +		assertEquals("http://example.com/bar", uriComponents.normalize().toString());, +	}, +]