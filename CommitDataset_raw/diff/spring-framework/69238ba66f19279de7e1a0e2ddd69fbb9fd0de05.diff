[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketExtension.java, +/*, + * Copyright 2002-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.socket;, +, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.LinkedHashMap;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +, +import javax.websocket.Extension;, +, +import org.eclipse.jetty.websocket.api.extensions.ExtensionConfig;, +import org.springframework.util.Assert;, +import org.springframework.util.CollectionUtils;, +import org.springframework.util.LinkedCaseInsensitiveMap;, +import org.springframework.util.StringUtils;, +, +/**, + * Represents a WebSocket extension as defined in the RFC 6455., + * WebSocket extensions add protocol features to the WebSocket protocol. The extensions, + * used within a session are negotiated during the handshake phase as follows:, + * <ul>, + * <li>the client may ask for specific extensions in the HTTP handshake request</li>, + * <li>the server responds with the final list of extensions to use in the current session</li>, + * </ul>, + *, + * <p>WebSocket Extension HTTP headers may include parameters and follow, + * <a href="https://tools.ietf.org/html/rfc2616#section-4.2">RFC 2616 Section 4.2</a></p>, + *, + * <p>Note that the order of extensions in HTTP headers defines their order of execution,, + * e.g. extensions "foo, bar" will be executed as "bar(foo(message))".</p>, + *, + * @author Brian Clozel, + * @since 4.0, + * @see <a href="https://tools.ietf.org/html/rfc6455#section-9">WebSocket Protocol Extensions, RFC 6455 - Section 9</a>, + */, +public class WebSocketExtension {, +, +	private final String name;, +, +	private final Map<String, String> parameters;, +, +, +	/**, +	 * Create a WebSocketExtension with the given name., +	 * @param name the name of the extension, +	 */, +	public WebSocketExtension(String name) {, +		this(name, null);, +	}, +, +	/**, +	 * Create a WebSocketExtension with the given name and parameters., +	 * @param name the name of the extension, +	 * @param parameters the parameters, +	 */, +	public WebSocketExtension(String name, Map<String, String> parameters) {, +		Assert.hasLength(name, "extension name must not be empty");, +		this.name = name;, +		if (!CollectionUtils.isEmpty(parameters)) {, +			Map<String, String> m = new LinkedCaseInsensitiveMap<String>(parameters.size(), Locale.ENGLISH);, +			m.putAll(parameters);, +			this.parameters = Collections.unmodifiableMap(m);, +		}, +		else {, +			this.parameters = Collections.emptyMap();, +		}, +	}, +, +	/**, +	 * @return the name of the extension, +	 */, +	public String getName() {, +		return this.name;, +	}, +, +	/**, +	 * @return the parameters of the extension, never {@code null}, +	 */, +	public Map<String, String> getParameters() {, +		return this.parameters;, +	}, +]