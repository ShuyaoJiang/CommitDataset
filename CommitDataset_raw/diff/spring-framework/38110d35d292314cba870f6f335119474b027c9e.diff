[+++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/AnnotationScopeMetadataResolver.java, + * A {@link ScopeMetadataResolver} implementation that by default checks for, + * the presence of Spring's {@link Scope} annotation on the bean class., +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/AnnotationScopeMetadataResolver.java, + * A {@link ScopeMetadataResolver} implementation that by default checks for, + * the presence of Spring's {@link Scope} annotation on the bean class., +++ b/org.springframework.context/src/main/java/org/springframework/ui/format/support/FormattingConversionServiceAdapter.java, +, +		}, +		else {, +, +, +			}, +			catch (ParseException ex) {, +++ b/org.springframework.context/src/main/java/org/springframework/context/annotation/AnnotationScopeMetadataResolver.java, + * A {@link ScopeMetadataResolver} implementation that by default checks for, + * the presence of Spring's {@link Scope} annotation on the bean class., +++ b/org.springframework.context/src/main/java/org/springframework/ui/format/support/FormattingConversionServiceAdapter.java, +, +		}, +		else {, +, +, +			}, +			catch (ParseException ex) {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/format/support/GenericFormatterRegistry.java, +					}, +					else if (Formatter.class.isAssignableFrom((Class) rawType)) {, +				}, +				else if (Formatter.class.isAssignableFrom((Class) ifc)) {]