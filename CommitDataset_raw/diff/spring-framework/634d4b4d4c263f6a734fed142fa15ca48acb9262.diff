[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +					boolean candidateLocal = containsBeanDefinition(candidateBeanName);, +					boolean primaryLocal = containsBeanDefinition(primaryBeanName);, +					if (candidateLocal == primaryLocal) {, +					else if (candidateLocal && !primaryLocal) {, +				}, +				else {, +					primaryBeanName = candidateBeanName;, +				}, +			}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +					boolean candidateLocal = containsBeanDefinition(candidateBeanName);, +					boolean primaryLocal = containsBeanDefinition(primaryBeanName);, +					if (candidateLocal == primaryLocal) {, +					else if (candidateLocal && !primaryLocal) {, +				}, +				else {, +					primaryBeanName = candidateBeanName;, +				}, +			}, +++ b/org.springframework.beans/src/test/java/org/springframework/beans/factory/xml/AutowireWithExclusionTests.java, + * Copyright 2002-2009 the original author or authors., +import junit.framework.TestCase;, +import test.beans.TestBean;, +		parent.getBeanDefinition("props1").setPrimary(true);, +	public void testByTypeAutowireWithPrimaryInParentAndChild() throws Exception {, +		CountingFactory.reset();, +		XmlBeanFactory parent = getBeanFactory("autowire-with-exclusion.xml");, +		parent.getBeanDefinition("props1").setPrimary(true);, +		parent.preInstantiateSingletons();, +		DefaultListableBeanFactory child = new DefaultListableBeanFactory(parent);, +		RootBeanDefinition robDef = new RootBeanDefinition(TestBean.class, RootBeanDefinition.AUTOWIRE_BY_TYPE);, +		robDef.getPropertyValues().addPropertyValue("spouse", new RuntimeBeanReference("sally"));, +		child.registerBeanDefinition("rob2", robDef);, +		RootBeanDefinition propsDef = new RootBeanDefinition(PropertiesFactoryBean.class);, +		propsDef.getPropertyValues().addPropertyValue("properties", "name=props3");, +		propsDef.setPrimary(true);, +		child.registerBeanDefinition("props3", propsDef);, +		TestBean rob = (TestBean) child.getBean("rob2");, +		assertEquals("props3", rob.getSomeProperties().getProperty("name"));, +		Assert.assertEquals(1, CountingFactory.getFactoryBeanInstanceCount());, +	}, +]