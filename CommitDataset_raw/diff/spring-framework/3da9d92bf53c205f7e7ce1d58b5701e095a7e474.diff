[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java, +		} else {, +			redirectView.getPropertyValues().add("contextRelative", true);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java, +		} else {, +			redirectView.getPropertyValues().add("contextRelative", true);, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/config/MvcNamespaceTests.java, +import org.springframework.web.servlet.mvc.ParameterizableViewController;, +		ParameterizableViewController viewController = (ParameterizableViewController) hm.getUrlMap().get("/path");, +		assertNotNull(viewController);, +		assertEquals("home", viewController.getViewName());, +, +		ParameterizableViewController redirectViewController = (ParameterizableViewController) hm.getUrlMap().get("/old");, +		assertNotNull(redirectViewController);, +		assertThat(redirectViewController.getView(), Matchers.instanceOf(RedirectView.class));, +, +		ParameterizableViewController statusViewController = (ParameterizableViewController) hm.getUrlMap().get("/bad");, +		assertNotNull(statusViewController);, +		assertEquals(404, statusViewController.getStatusCode().value());]