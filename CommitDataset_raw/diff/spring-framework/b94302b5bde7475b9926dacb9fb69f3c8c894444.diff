[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectProvider.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectProvider.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +			return beanFactory.getBean(this.shortcut, this.requiredType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectProvider.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +			return beanFactory.getBean(this.shortcut, this.requiredType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AutowireCapableBeanFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectProvider.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +			return beanFactory.getBean(this.shortcut, this.requiredType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AutowireCapableBeanFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +		return beanFactory.getBean(beanName);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectProvider.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +			return beanFactory.getBean(this.shortcut, this.requiredType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AutowireCapableBeanFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +		return beanFactory.getBean(beanName);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectProvider.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +			return beanFactory.getBean(this.shortcut, this.requiredType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AutowireCapableBeanFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +		return beanFactory.getBean(beanName);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +			Object current = beanProcessor.postProcessBeforeInitialization(result, beanName);, +			if (current == null) {, +				return result;, +			result = current;, +			Object current = beanProcessor.postProcessAfterInitialization(result, beanName);, +			if (current == null) {, +				return result;, +			result = current;, +		final Object bean = instanceWrapper.getWrappedInstance();, +		Class<?> beanType = instanceWrapper.getWrappedClass();, +		if (beanType != NullBean.class) {, +		}, +	protected Object getEarlyBeanReference(String beanName, RootBeanDefinition mbd, Object bean) {, +		if (!mbd.isSynthetic() && hasInstantiationAwareBeanPostProcessors()) {, +			Object beanInstance, String name, String beanName, @Nullable RootBeanDefinition mbd) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectProvider.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +			return beanFactory.getBean(this.shortcut, this.requiredType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AutowireCapableBeanFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +		return beanFactory.getBean(beanName);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +			Object current = beanProcessor.postProcessBeforeInitialization(result, beanName);, +			if (current == null) {, +				return result;, +			result = current;, +			Object current = beanProcessor.postProcessAfterInitialization(result, beanName);, +			if (current == null) {, +				return result;, +			result = current;, +		final Object bean = instanceWrapper.getWrappedInstance();, +		Class<?> beanType = instanceWrapper.getWrappedClass();, +		if (beanType != NullBean.class) {, +		}, +	protected Object getEarlyBeanReference(String beanName, RootBeanDefinition mbd, Object bean) {, +		if (!mbd.isSynthetic() && hasInstantiationAwareBeanPostProcessors()) {, +			Object beanInstance, String name, String beanName, @Nullable RootBeanDefinition mbd) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +		if (requiredType != null && !requiredType.isInstance(bean)) {, +				T convertedBean = getTypeConverter().convertIfNecessary(bean, requiredType);, +				if (convertedBean == null) {, +					throw new BeanNotOfRequiredTypeException(name, requiredType, bean.getClass());, +				}, +				return convertedBean;, +		if (beanInstance != null && beanInstance.getClass() != NullBean.class) {, +		if (beanInstance != null && beanInstance.getClass() != NullBean.class) {, +			Object beanInstance, String name, String beanName, @Nullable RootBeanDefinition mbd) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/ObjectProvider.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +			return beanFactory.getBean(this.shortcut, this.requiredType);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/AutowireCapableBeanFactory.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/DependencyDescriptor.java, +		return beanFactory.getBean(beanName);, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.java, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +			Object current = beanProcessor.postProcessBeforeInitialization(result, beanName);, +			if (current == null) {, +				return result;, +			result = current;, +			Object current = beanProcessor.postProcessAfterInitialization(result, beanName);, +			if (current == null) {]