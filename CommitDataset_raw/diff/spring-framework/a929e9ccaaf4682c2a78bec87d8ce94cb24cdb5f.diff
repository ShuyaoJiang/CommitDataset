[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java, +	public int getUserCount() {, +		int userCount = 0;, +		for (UserRegistrySnapshot registry : this.remoteRegistries.values()) {, +			userCount += registry.getUserMap().size();, +		}, +		userCount += this.localRegistry.getUserCount();, +		return userCount;, +	}, +, +	@Override, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java, +	public int getUserCount() {, +		int userCount = 0;, +		for (UserRegistrySnapshot registry : this.remoteRegistries.values()) {, +			userCount += registry.getUserMap().size();, +		}, +		userCount += this.localRegistry.getUserCount();, +		return userCount;, +	}, +, +	@Override, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/SimpUserRegistry.java, +	 * Return the count of all connected users., +	 * @return the connected user count., +	 * @since 4.3.5, +	 */, +	int getUserCount();, +, +	/**, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java, +	public int getUserCount() {, +		int userCount = 0;, +		for (UserRegistrySnapshot registry : this.remoteRegistries.values()) {, +			userCount += registry.getUserMap().size();, +		}, +		userCount += this.localRegistry.getUserCount();, +		return userCount;, +	}, +, +	@Override, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/SimpUserRegistry.java, +	 * Return the count of all connected users., +	 * @return the connected user count., +	 * @since 4.3.5, +	 */, +	int getUserCount();, +, +	/**, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/user/MultiServerUserRegistryTests.java, +		when(this.localRegistry.getUserCount()).thenReturn(1);, +		assertEquals(1, this.registry.getUserCount());, +		assertEquals(1, this.registry.getUserCount());, +		assertEquals(3, this.registry.getUserCount());, +		assertEquals(1, this.registry.getUserCount());, +		assertEquals(1, this.registry.getUserCount());, +		assertEquals(0, this.registry.getUserCount());, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java, +	public int getUserCount() {, +		int userCount = 0;, +		for (UserRegistrySnapshot registry : this.remoteRegistries.values()) {, +			userCount += registry.getUserMap().size();, +		}, +		userCount += this.localRegistry.getUserCount();, +		return userCount;, +	}, +, +	@Override, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/SimpUserRegistry.java, +	 * Return the count of all connected users., +	 * @return the connected user count., +	 * @since 4.3.5, +	 */, +	int getUserCount();, +, +	/**, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/user/MultiServerUserRegistryTests.java, +		when(this.localRegistry.getUserCount()).thenReturn(1);, +		assertEquals(1, this.registry.getUserCount());, +		assertEquals(1, this.registry.getUserCount());, +		assertEquals(3, this.registry.getUserCount());, +		assertEquals(1, this.registry.getUserCount());, +		assertEquals(1, this.registry.getUserCount());, +		assertEquals(0, this.registry.getUserCount());, +++ b/spring-messaging/src/test/java/org/springframework/messaging/simp/user/UserRegistryMessageHandlerTests.java, +		assertEquals(2, remoteRegistry.getUserCount());, +		when(remoteUserRegistry.getUserCount()).thenReturn(2);, +		assertEquals(2, remoteRegistry.getUserCount());, +		when(this.localRegistry.getUserCount()).thenReturn(1);, +		assertEquals(1, this.multiServerRegistry.getUserCount());, +		assertEquals(1, this.multiServerRegistry.getUserCount());, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java, +	public int getUserCount() {, +		int userCount = 0;, +		for (UserRegistrySnapshot registry : this.remoteRegistries.values()) {, +			userCount += registry.getUserMap().size();, +		}, +		userCount += this.localRegistry.getUserCount();, +		return userCount;, +	}]