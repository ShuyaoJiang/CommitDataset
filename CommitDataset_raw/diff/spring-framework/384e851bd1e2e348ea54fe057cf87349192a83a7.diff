[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/client/JettyWebSocketClient.java, + * A {@link WebSocketClient} implementation for use with Jetty, + * {@link org.eclipse.jetty.websocket.client.WebSocketClient}., + *, + * <p><strong>Note: </strong> the Jetty {@code WebSocketClient} requires, + * lifecycle management and must be started and stopped. This is automatically, + * managed when this class is declared as a Spring bean and created with the, + * default constructor. See constructor notes for more details., +	private final boolean externallyManaged;, +, +	private boolean running = false;, +	private final DataBufferFactory bufferFactory = new DefaultDataBufferFactory();, +, +	 * Default constructor that creates and manages an instance of a Jetty, +	 * {@link org.eclipse.jetty.websocket.client.WebSocketClient WebSocketClient}., +	 * The instance can be obtained with {@link #getJettyClient()} for further, +	 * configuration., +	 *, +	 * <p><strong>Note: </strong> When this constructor is used {@link Lifecycle}, +	 * methods of this class are delegated to the Jetty {@code WebSocketClient}., +		this.jettyClient = new org.eclipse.jetty.websocket.client.WebSocketClient();, +		this.externallyManaged = false;, +	 * Constructor that accepts an existing instance of a Jetty, +	 * {@link org.eclipse.jetty.websocket.client.WebSocketClient WebSocketClient}., +	 *, +	 * <p><strong>Note: </strong> Use of this constructor implies the Jetty, +	 * {@code WebSocketClient} is externally managed and hence {@link Lifecycle}, +	 * methods of this class are not delegated to it., +		this.externallyManaged = true;, +	}, +, +, +	/**, +	 * Return the underlying Jetty {@code WebSocketClient}., +	 */, +	public org.eclipse.jetty.websocket.client.WebSocketClient getJettyClient() {, +		return this.jettyClient;, +		if (this.externallyManaged) {, +			return;, +		}, +					this.running = true;, +		if (this.externallyManaged) {, +			return;, +		}, +					this.running = false;, +			return this.running;, +				session -> {, +				});, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/client/JettyWebSocketClient.java, + * A {@link WebSocketClient} implementation for use with Jetty, + * {@link org.eclipse.jetty.websocket.client.WebSocketClient}., + *, + * <p><strong>Note: </strong> the Jetty {@code WebSocketClient} requires, + * lifecycle management and must be started and stopped. This is automatically, + * managed when this class is declared as a Spring bean and created with the, + * default constructor. See constructor notes for more details., +	private final boolean externallyManaged;, +, +	private boolean running = false;, +	private final DataBufferFactory bufferFactory = new DefaultDataBufferFactory();, +, +	 * Default constructor that creates and manages an instance of a Jetty, +	 * {@link org.eclipse.jetty.websocket.client.WebSocketClient WebSocketClient}., +	 * The instance can be obtained with {@link #getJettyClient()} for further, +	 * configuration., +	 *, +	 * <p><strong>Note: </strong> When this constructor is used {@link Lifecycle}, +	 * methods of this class are delegated to the Jetty {@code WebSocketClient}., +		this.jettyClient = new org.eclipse.jetty.websocket.client.WebSocketClient();, +		this.externallyManaged = false;, +	 * Constructor that accepts an existing instance of a Jetty, +	 * {@link org.eclipse.jetty.websocket.client.WebSocketClient WebSocketClient}., +	 *, +	 * <p><strong>Note: </strong> Use of this constructor implies the Jetty, +	 * {@code WebSocketClient} is externally managed and hence {@link Lifecycle}, +	 * methods of this class are not delegated to it., +		this.externallyManaged = true;, +	}, +, +, +	/**, +	 * Return the underlying Jetty {@code WebSocketClient}., +	 */, +	public org.eclipse.jetty.websocket.client.WebSocketClient getJettyClient() {, +		return this.jettyClient;, +		if (this.externallyManaged) {, +			return;, +		}, +					this.running = true;, +		if (this.externallyManaged) {, +			return;, +		}, +					this.running = false;, +			return this.running;, +				session -> {, +				});, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/socket/client/ReactorNettyWebSocketClient.java, + * {@link WebSocketClient} implementation for use with Reactor Netty., +	/**, +	 * Default constructor.]