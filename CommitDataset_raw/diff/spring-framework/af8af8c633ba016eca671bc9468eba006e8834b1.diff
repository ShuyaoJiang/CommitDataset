[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +import java.security.PrivilegedAction;, +			if (!Modifier.isPublic(readMethod.getDeclaringClass().getModifiers()) && !readMethod.isAccessible()) {, +				if (System.getSecurityManager() != null) {, +					AccessController.doPrivileged(new PrivilegedAction<Object>() {, +						public Object run() {, +							return null;, +						}, +					});, +				}, +				else {, +					readMethod.setAccessible(true);, +				}, +							if (!Modifier.isPublic(readMethod.getDeclaringClass().getModifiers()) && !readMethod.isAccessible()) {, +								if (System.getSecurityManager()!= null) {, +									AccessController.doPrivileged(new PrivilegedAction<Object>() {, +										public Object run() {, +											return null;, +										}, +									});, +								}, +								else {, +									readMethod.setAccessible(true);, +								}, +				if (!Modifier.isPublic(writeMethod.getDeclaringClass().getModifiers()) && !writeMethod.isAccessible()) {, +					if (System.getSecurityManager()!= null) {, +						AccessController.doPrivileged(new PrivilegedAction<Object>() {, +							public Object run() {, +								return null;, +							}, +						});, +					}, +					else {, +						writeMethod.setAccessible(true);, +					}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +import java.security.PrivilegedAction;, +			if (!Modifier.isPublic(readMethod.getDeclaringClass().getModifiers()) && !readMethod.isAccessible()) {, +				if (System.getSecurityManager() != null) {, +					AccessController.doPrivileged(new PrivilegedAction<Object>() {, +						public Object run() {, +							return null;, +						}, +					});, +				}, +				else {, +					readMethod.setAccessible(true);, +				}, +							if (!Modifier.isPublic(readMethod.getDeclaringClass().getModifiers()) && !readMethod.isAccessible()) {, +								if (System.getSecurityManager()!= null) {, +									AccessController.doPrivileged(new PrivilegedAction<Object>() {, +										public Object run() {, +											return null;, +										}, +									});, +								}, +								else {, +									readMethod.setAccessible(true);, +								}, +				if (!Modifier.isPublic(writeMethod.getDeclaringClass().getModifiers()) && !writeMethod.isAccessible()) {, +					if (System.getSecurityManager()!= null) {, +						AccessController.doPrivileged(new PrivilegedAction<Object>() {, +							public Object run() {, +								return null;, +							}, +						});, +					}, +					else {, +						writeMethod.setAccessible(true);, +					}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java, +		, +			AccessController.doPrivileged(new PrivilegedExceptionAction<Object>() {, +				public Object run() throws Exception {, +					ReflectionUtils.makeAccessible(initMethod);, +					return null;, +				}, +			});, +			, +				ReflectionUtils.makeAccessible(initMethod);, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/BeanWrapperImpl.java, +import java.security.PrivilegedAction;, +			if (!Modifier.isPublic(readMethod.getDeclaringClass().getModifiers()) && !readMethod.isAccessible()) {, +				if (System.getSecurityManager() != null) {, +					AccessController.doPrivileged(new PrivilegedAction<Object>() {, +						public Object run() {, +							return null;, +						}, +					});, +				}, +				else {, +					readMethod.setAccessible(true);, +				}, +							if (!Modifier.isPublic(readMethod.getDeclaringClass().getModifiers()) && !readMethod.isAccessible()) {, +								if (System.getSecurityManager()!= null) {, +									AccessController.doPrivileged(new PrivilegedAction<Object>() {, +										public Object run() {, +											return null;, +										}, +									});]