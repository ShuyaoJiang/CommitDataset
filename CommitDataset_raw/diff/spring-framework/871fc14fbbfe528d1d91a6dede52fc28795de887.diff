[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/GenericConversionService.java, +	private ConversionService parent;, +, +	private GenericConverter parentConverterAdapter = new GenericConverter() {, +		public Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType) {, +			return parent.convert(source, sourceType, targetType);, +		}, +	};, +, +, +, +	public void setParent(ConversionService parent) {, +	public ConversionService getParent() {, +, +, +	@SuppressWarnings("unchecked"), +		}, +		catch (ConversionFailedException ex) {, +			throw ex;, +		}, +		catch (Exception ex) {, +			throw new ConversionFailedException(sourceType, targetType, source, ex);, +		else if (this.parent != null && this.parent.canConvert(sourceType, targetType)) {, +			return this.parentConverterAdapter;, +		}, +		else {, +			}, +			else {, +, +					}, +					else if (Converter.class.isAssignableFrom((Class) rawType)) {, +				}, +				else if (Converter.class.isAssignableFrom((Class) ifc)) {, +		}, +		else {, +		}, +		else {, +				}, +				else {, +, +		@SuppressWarnings("unchecked"), +, +		@SuppressWarnings("unchecked")]