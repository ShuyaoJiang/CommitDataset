[+++ b/spring-core/src/main/java/org/springframework/util/PropertyPlaceholderHelper.java, + * Copyright 2002-2012 the original author or authors., +				String originalPlaceholder = placeholder;, +				if (!visitedPlaceholders.add(originalPlaceholder)) {, +							"Circular placeholder reference '" + originalPlaceholder + "' in property definitions");, +				visitedPlaceholders.remove(originalPlaceholder);, +++ b/spring-core/src/main/java/org/springframework/util/PropertyPlaceholderHelper.java, + * Copyright 2002-2012 the original author or authors., +				String originalPlaceholder = placeholder;, +				if (!visitedPlaceholders.add(originalPlaceholder)) {, +							"Circular placeholder reference '" + originalPlaceholder + "' in property definitions");, +				visitedPlaceholders.remove(originalPlaceholder);, +++ b/spring-core/src/test/java/org/springframework/util/PropertyPlaceholderHelperTests.java, + * Copyright 2002-2012 the original author or authors., +, +		text = "${top}";, +		props = new Properties();, +		props.setProperty("top", "${child}+${child}");, +		props.setProperty("child", "${${differentiator}.grandchild}");, +		props.setProperty("differentiator", "first");, +		props.setProperty("first.grandchild", "actualValue");, +, +		assertEquals("actualValue+actualValue", this.helper.replacePlaceholders(text, props));]