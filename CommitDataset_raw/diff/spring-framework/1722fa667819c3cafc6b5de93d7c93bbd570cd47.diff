[+++ b/spring-context/src/main/java/org/springframework/scripting/ScriptCompilationException.java, + * Copyright 2002-2015 the original author or authors., +	 * @param cause the root cause (usually from using an underlying script compiler API), +	 * @param msg the detail message, +	 * @since 4.2, +	public ScriptCompilationException(ScriptSource scriptSource, String msg) {, +		super("Could not compile " + scriptSource + ": " + msg);, +	 * @param cause the root cause (usually from using an underlying script compiler API), +	 */, +	public ScriptCompilationException(ScriptSource scriptSource, Throwable cause) {, +		super("Could not compile " + scriptSource, cause);, +		this.scriptSource = scriptSource;, +	}, +, +	/**, +	 * Constructor for ScriptCompilationException., +	 * @param scriptSource the source for the offending script, +	 * @param msg the detail message, +	 * @param cause the root cause (usually from using an underlying script compiler API), +		super("Could not compile " + scriptSource + ": " + msg, cause);, +++ b/spring-context/src/main/java/org/springframework/scripting/ScriptCompilationException.java, + * Copyright 2002-2015 the original author or authors., +	 * @param cause the root cause (usually from using an underlying script compiler API), +	 * @param msg the detail message, +	 * @since 4.2, +	public ScriptCompilationException(ScriptSource scriptSource, String msg) {, +		super("Could not compile " + scriptSource + ": " + msg);, +	 * @param cause the root cause (usually from using an underlying script compiler API), +	 */, +	public ScriptCompilationException(ScriptSource scriptSource, Throwable cause) {, +		super("Could not compile " + scriptSource, cause);, +		this.scriptSource = scriptSource;, +	}, +, +	/**, +	 * Constructor for ScriptCompilationException., +	 * @param scriptSource the source for the offending script, +	 * @param msg the detail message, +	 * @param cause the root cause (usually from using an underlying script compiler API), +		super("Could not compile " + scriptSource + ": " + msg, cause);, +++ b/spring-context/src/main/java/org/springframework/scripting/config/LangNamespaceHandler.java, + * Copyright 2002-2015 the original author or authors., +		registerScriptBeanDefinitionParser("std", "org.springframework.scripting.support.StandardScriptFactory");, +++ b/spring-context/src/main/java/org/springframework/scripting/ScriptCompilationException.java, + * Copyright 2002-2015 the original author or authors., +	 * @param cause the root cause (usually from using an underlying script compiler API), +	 * @param msg the detail message, +	 * @since 4.2, +	public ScriptCompilationException(ScriptSource scriptSource, String msg) {, +		super("Could not compile " + scriptSource + ": " + msg);, +	 * @param cause the root cause (usually from using an underlying script compiler API), +	 */, +	public ScriptCompilationException(ScriptSource scriptSource, Throwable cause) {, +		super("Could not compile " + scriptSource, cause);, +		this.scriptSource = scriptSource;, +	}, +, +	/**, +	 * Constructor for ScriptCompilationException., +	 * @param scriptSource the source for the offending script, +	 * @param msg the detail message, +	 * @param cause the root cause (usually from using an underlying script compiler API), +		super("Could not compile " + scriptSource + ": " + msg, cause);, +++ b/spring-context/src/main/java/org/springframework/scripting/config/LangNamespaceHandler.java, + * Copyright 2002-2015 the original author or authors., +		registerScriptBeanDefinitionParser("std", "org.springframework.scripting.support.StandardScriptFactory");, +++ b/spring-context/src/main/java/org/springframework/scripting/config/ScriptBeanDefinitionParser.java, + * Copyright 2002-2015 the original author or authors., +	private static final String ENGINE_ATTRIBUTE = "engine";, +, +		// Engine attribute only supported for <lang:std>, +		String engine = element.getAttribute(ENGINE_ATTRIBUTE);, +, +		if (StringUtils.hasLength(engine)) {, +			cav.addIndexedArgumentValue(constructorArgNum++, engine);, +		}, +			cav.addIndexedArgumentValue(, +					constructorArgNum++, element.getAttribute(SCRIPT_INTERFACES_ATTRIBUTE), "java.lang.Class[]");, +++ b/spring-context/src/main/java/org/springframework/scripting/ScriptCompilationException.java, + * Copyright 2002-2015 the original author or authors., +	 * @param cause the root cause (usually from using an underlying script compiler API), +	 * @param msg the detail message, +	 * @since 4.2, +	public ScriptCompilationException(ScriptSource scriptSource, String msg) {, +		super("Could not compile " + scriptSource + ": " + msg);, +	 * @param cause the root cause (usually from using an underlying script compiler API), +	 */, +	public ScriptCompilationException(ScriptSource scriptSource, Throwable cause) {, +		super("Could not compile " + scriptSource, cause);, +		this.scriptSource = scriptSource;, +	}, +, +	/**, +	 * Constructor for ScriptCompilationException., +	 * @param scriptSource the source for the offending script, +	 * @param msg the detail message, +	 * @param cause the root cause (usually from using an underlying script compiler API), +		super("Could not compile " + scriptSource + ": " + msg, cause);, +++ b/spring-context/src/main/java/org/springframework/scripting/config/LangNamespaceHandler.java, + * Copyright 2002-2015 the original author or authors.]