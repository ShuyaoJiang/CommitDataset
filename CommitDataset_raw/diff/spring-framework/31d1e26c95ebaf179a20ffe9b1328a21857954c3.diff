[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +import java.util.List;, +		 * Return the {@link HttpMessageReader}s to be used for body extraction., +		List<HttpMessageReader<?>> messageReaders();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +import java.util.List;, +		 * Return the {@link HttpMessageReader}s to be used for body extraction., +		List<HttpMessageReader<?>> messageReaders();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java, +		List<HttpMessageReader<?>> messageReaders = context.messageReaders();, +		return messageReaders.stream(), +					List<MediaType> supportedMediaTypes = messageReaders.stream(), +		return context.messageReaders().stream(), +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +import java.util.List;, +		 * Return the {@link HttpMessageReader}s to be used for body extraction., +		List<HttpMessageReader<?>> messageReaders();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java, +		List<HttpMessageReader<?>> messageReaders = context.messageReaders();, +		return messageReaders.stream(), +					List<MediaType> supportedMediaTypes = messageReaders.stream(), +		return context.messageReaders().stream(), +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserter.java, +import java.util.List;, +		 * Return the {@link HttpMessageWriter}s to be used for response body conversion., +		List<HttpMessageWriter<?>> messageWriters();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +import java.util.List;, +		 * Return the {@link HttpMessageReader}s to be used for body extraction., +		List<HttpMessageReader<?>> messageReaders();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java, +		List<HttpMessageReader<?>> messageReaders = context.messageReaders();, +		return messageReaders.stream(), +					List<MediaType> supportedMediaTypes = messageReaders.stream(), +		return context.messageReaders().stream(), +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserter.java, +import java.util.List;, +		 * Return the {@link HttpMessageWriter}s to be used for response body conversion., +		List<HttpMessageWriter<?>> messageWriters();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserters.java, +		return context.messageWriters().stream(), +			List<HttpMessageWriter<?>> messageWriters = context.messageWriters();, +			return messageWriters.stream(), +						List<MediaType> supportedMediaTypes = messageWriters.stream(), +		return context.messageWriters().stream(), +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +import java.util.List;, +		 * Return the {@link HttpMessageReader}s to be used for body extraction., +		List<HttpMessageReader<?>> messageReaders();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java, +		List<HttpMessageReader<?>> messageReaders = context.messageReaders();, +		return messageReaders.stream(), +					List<MediaType> supportedMediaTypes = messageReaders.stream(), +		return context.messageReaders().stream(), +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserter.java, +import java.util.List;, +		 * Return the {@link HttpMessageWriter}s to be used for response body conversion., +		List<HttpMessageWriter<?>> messageWriters();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserters.java, +		return context.messageWriters().stream(), +			List<HttpMessageWriter<?>> messageWriters = context.messageWriters();, +			return messageWriters.stream(), +						List<MediaType> supportedMediaTypes = messageWriters.stream(), +		return context.messageWriters().stream(), +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientRequestBuilder.java, +import java.util.List;, +				public List<HttpMessageWriter<?>> messageWriters() {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +import java.util.List;, +		 * Return the {@link HttpMessageReader}s to be used for body extraction., +		List<HttpMessageReader<?>> messageReaders();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java, +		List<HttpMessageReader<?>> messageReaders = context.messageReaders();, +		return messageReaders.stream(), +					List<MediaType> supportedMediaTypes = messageReaders.stream(), +		return context.messageReaders().stream(), +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserter.java, +import java.util.List;, +		 * Return the {@link HttpMessageWriter}s to be used for response body conversion., +		List<HttpMessageWriter<?>> messageWriters();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserters.java, +		return context.messageWriters().stream(), +			List<HttpMessageWriter<?>> messageWriters = context.messageWriters();, +			return messageWriters.stream(), +						List<MediaType> supportedMediaTypes = messageWriters.stream(), +		return context.messageWriters().stream(), +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientRequestBuilder.java, +import java.util.List;, +				public List<HttpMessageWriter<?>> messageWriters() {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientResponse.java, +			public List<HttpMessageReader<?>> messageReaders() {, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractor.java, +import java.util.List;, +		 * Return the {@link HttpMessageReader}s to be used for body extraction., +		List<HttpMessageReader<?>> messageReaders();, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java, +		List<HttpMessageReader<?>> messageReaders = context.messageReaders();, +		return messageReaders.stream(), +					List<MediaType> supportedMediaTypes = messageReaders.stream(), +		return context.messageReaders().stream()]