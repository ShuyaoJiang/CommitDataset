[+++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +			return this.newConnectionHolder;, +			return this.mustRestoreAutoCommit;, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +			return this.newConnectionHolder;, +			return this.mustRestoreAutoCommit;, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.java, + * Copyright 2002-2009 the original author or authors., +	public void flush() {, +		// no-op, +	}, +, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +			return this.newConnectionHolder;, +			return this.mustRestoreAutoCommit;, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.java, + * Copyright 2002-2009 the original author or authors., +	public void flush() {, +		// no-op, +	}, +, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/datasource/DataSourceTransactionManagerTests.java, + * Copyright 2002-2009 the original author or authors., +		public void flush() {, +		}, +, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +			return this.newConnectionHolder;, +			return this.mustRestoreAutoCommit;, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.java, + * Copyright 2002-2009 the original author or authors., +	public void flush() {, +		// no-op, +	}, +, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/datasource/DataSourceTransactionManagerTests.java, + * Copyright 2002-2009 the original author or authors., +		public void flush() {, +		}, +, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/connection/ConnectionFactoryUtils.java, + * Copyright 2002-2009 the original author or authors., +	private static class JmsResourceSynchronization extends ResourceHolderSynchronization<JmsResourceHolder, Object> {, +		protected void processResourceAfterCommit(JmsResourceHolder resourceHolder) {, +				resourceHolder.commitAll();, +		protected void releaseResource(JmsResourceHolder resourceHolder, Object resourceKey) {, +			resourceHolder.closeAll();, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +			return this.newConnectionHolder;, +			return this.mustRestoreAutoCommit;, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.java, + * Copyright 2002-2009 the original author or authors., +	public void flush() {, +		// no-op, +	}, +, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/datasource/DataSourceTransactionManagerTests.java, + * Copyright 2002-2009 the original author or authors., +		public void flush() {, +		}, +, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/connection/ConnectionFactoryUtils.java, + * Copyright 2002-2009 the original author or authors., +	private static class JmsResourceSynchronization extends ResourceHolderSynchronization<JmsResourceHolder, Object> {, +		protected void processResourceAfterCommit(JmsResourceHolder resourceHolder) {, +				resourceHolder.commitAll();, +		protected void releaseResource(JmsResourceHolder resourceHolder, Object resourceKey) {, +			resourceHolder.closeAll();, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/connection/JmsTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +, +		public void flush() {, +			// no-op, +		}, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java, + * Copyright 2002-2009 the original author or authors., +			return this.newConnectionHolder;, +			return this.mustRestoreAutoCommit;, +++ b/org.springframework.jdbc/src/main/java/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.java, + * Copyright 2002-2009 the original author or authors., +	public void flush() {, +		// no-op, +	}, +, +++ b/org.springframework.jdbc/src/test/java/org/springframework/jdbc/datasource/DataSourceTransactionManagerTests.java, + * Copyright 2002-2009 the original author or authors., +		public void flush() {, +		}, +, +++ b/org.springframework.jms/src/main/java/org/springframework/jms/connection/ConnectionFactoryUtils.java, + * Copyright 2002-2009 the original author or authors., +	private static class JmsResourceSynchronization extends ResourceHolderSynchronization<JmsResourceHolder, Object> {, +		protected void processResourceAfterCommit(JmsResourceHolder resourceHolder) {, +				resourceHolder.commitAll();, +		protected void releaseResource(JmsResourceHolder resourceHolder, Object resourceKey) {]