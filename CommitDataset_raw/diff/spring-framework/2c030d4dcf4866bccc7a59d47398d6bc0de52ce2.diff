[+++ b/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java, +import javax.xml.transform.dom.DOMSource;, +import javax.xml.transform.stream.StreamSource;, +	private boolean processExternalEntities = false;, +, +	/**, +	 * Indicates whether external XML entities are processed when unmarshalling., +	 * <p>Default is {@code false}, meaning that external entities are not resolved., +	 * Note that processing of external entities will only be enabled/disabled when the, +	 * {@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or, +	 * {@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}, +	 * instances., +	 */, +	public void setProcessExternalEntities(boolean processExternalEntities) {, +		this.processExternalEntities = processExternalEntities;, +	}, +, +		source = processSource(source);, +, +	private Source processSource(Source source) {, +		if (StaxUtils.isStaxSource(source) || source instanceof DOMSource) {, +			return source;, +		}, +, +		XMLReader xmlReader = null;, +		InputSource inputSource = null;, +, +		if (source instanceof SAXSource) {, +			SAXSource saxSource = (SAXSource) source;, +			xmlReader = saxSource.getXMLReader();, +			inputSource = saxSource.getInputSource();, +		}, +		else if (source instanceof StreamSource) {, +			StreamSource streamSource = (StreamSource) source;, +			if (streamSource.getInputStream() != null) {, +				inputSource = new InputSource(streamSource.getInputStream());, +			}, +			else if (streamSource.getReader() != null) {, +				inputSource = new InputSource(streamSource.getReader());, +			}, +		}, +, +		try {, +			if (xmlReader == null) {, +				xmlReader = XMLReaderFactory.createXMLReader();, +			}, +			xmlReader.setFeature("http://xml.org/sax/features/external-general-entities",, +					this.processExternalEntities);, +, +			return new SAXSource(xmlReader, inputSource);, +		}, +		catch (SAXException ex) {, +			logger.warn("Processing of external entities could not be disabled", ex);, +			return source;, +		}, +	}, +]