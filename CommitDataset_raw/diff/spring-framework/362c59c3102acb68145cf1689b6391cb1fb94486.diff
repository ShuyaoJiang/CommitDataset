[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/BatchUpdateUtils.java, + * Copyright 2002-2018 the original author or authors., + * @author Juergen Hoeller, +			String sql, final List<Object[]> batchArgs, final int[] columnTypes, JdbcOperations jdbcOperations) {, +, +		if (batchArgs.isEmpty()) {, +			return new int[0];, +		}, +						Object[] values = batchArgs.get(i);, +						return batchArgs.size();, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/BatchUpdateUtils.java, + * Copyright 2002-2018 the original author or authors., + * @author Juergen Hoeller, +			String sql, final List<Object[]> batchArgs, final int[] columnTypes, JdbcOperations jdbcOperations) {, +, +		if (batchArgs.isEmpty()) {, +			return new int[0];, +		}, +						Object[] values = batchArgs.get(i);, +						return batchArgs.size();, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterBatchUpdateUtils.java, + * Copyright 2002-2018 the original author or authors., + * @author Juergen Hoeller, +	public static int[] executeBatchUpdateWithNamedParameters(, +			final ParsedSql parsedSql, final SqlParameterSource[] batchArgs, JdbcOperations jdbcOperations) {, +		if (batchArgs.length == 0) {, +			return new int[0];, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/BatchUpdateUtils.java, + * Copyright 2002-2018 the original author or authors., + * @author Juergen Hoeller, +			String sql, final List<Object[]> batchArgs, final int[] columnTypes, JdbcOperations jdbcOperations) {, +, +		if (batchArgs.isEmpty()) {, +			return new int[0];, +		}, +						Object[] values = batchArgs.get(i);, +						return batchArgs.size();, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterBatchUpdateUtils.java, + * Copyright 2002-2018 the original author or authors., + * @author Juergen Hoeller, +	public static int[] executeBatchUpdateWithNamedParameters(, +			final ParsedSql parsedSql, final SqlParameterSource[] batchArgs, JdbcOperations jdbcOperations) {, +		if (batchArgs.length == 0) {, +			return new int[0];, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/JdbcTemplateTests.java, +	public void testBatchUpdateWithEmptyList() throws Exception {, +		final String sql = "UPDATE NOSUCHTABLE SET DATE_DISPATCHED = SYSDATE WHERE ID = ?";, +		JdbcTemplate template = new JdbcTemplate(this.dataSource, false);, +, +		int[] actualRowsAffected = template.batchUpdate(sql, Collections.emptyList());, +		assertTrue("executed 0 updates", actualRowsAffected.length == 0);, +	}, +, +	@Test, +		int[] actualRowsAffected = this.template.batchUpdate(sql, ids, sqlTypes);, +	public void testCouldNotGetConnectionForOperationOrExceptionTranslator() throws SQLException {, +, +	public void testCouldNotGetConnectionForOperationWithLazyExceptionTranslator() throws SQLException {, +, +	public void testCouldNotGetConnectionInOperationWithExceptionTranslatorInitializedViaBeanProperty(), +		doTestCouldNotGetConnectionInOperationWithExceptionTranslatorInitialized(true);, +	public void testCouldNotGetConnectionInOperationWithExceptionTranslatorInitializedInAfterPropertiesSet(), +		doTestCouldNotGetConnectionInOperationWithExceptionTranslatorInitialized(false);, +	private void doTestCouldNotGetConnectionInOperationWithExceptionTranslatorInitialized(boolean beanProperty), +	public void testCouldNotClose() throws Exception {, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/BatchUpdateUtils.java, + * Copyright 2002-2018 the original author or authors., + * @author Juergen Hoeller, +			String sql, final List<Object[]> batchArgs, final int[] columnTypes, JdbcOperations jdbcOperations) {, +, +		if (batchArgs.isEmpty()) {, +			return new int[0];, +		}, +						Object[] values = batchArgs.get(i);, +						return batchArgs.size();, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterBatchUpdateUtils.java, + * Copyright 2002-2018 the original author or authors., + * @author Juergen Hoeller, +	public static int[] executeBatchUpdateWithNamedParameters(, +			final ParsedSql parsedSql, final SqlParameterSource[] batchArgs, JdbcOperations jdbcOperations) {, +		if (batchArgs.length == 0) {, +			return new int[0];, +++ b/spring-jdbc/src/test/java/org/springframework/jdbc/core/JdbcTemplateTests.java, +	public void testBatchUpdateWithEmptyList() throws Exception {, +		final String sql = "UPDATE NOSUCHTABLE SET DATE_DISPATCHED = SYSDATE WHERE ID = ?";, +		JdbcTemplate template = new JdbcTemplate(this.dataSource, false);, +, +		int[] actualRowsAffected = template.batchUpdate(sql, Collections.emptyList());, +		assertTrue("executed 0 updates", actualRowsAffected.length == 0);, +	}, +, +	@Test, +		int[] actualRowsAffected = this.template.batchUpdate(sql, ids, sqlTypes);, +	public void testCouldNotGetConnectionForOperationOrExceptionTranslator() throws SQLException {, +, +	public void testCouldNotGetConnectionForOperationWithLazyExceptionTranslator() throws SQLException {, +, +	public void testCouldNotGetConnectionInOperationWithExceptionTranslatorInitializedViaBeanProperty(), +		doTestCouldNotGetConnectionInOperationWithExceptionTranslatorInitialized(true);, +	public void testCouldNotGetConnectionInOperationWithExceptionTranslatorInitializedInAfterPropertiesSet()]