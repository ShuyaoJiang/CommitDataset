[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/support/DelegatingSmartContextLoader.java, +		final boolean originallyHadResources = configAttributes.hasResources();, +			if (originallyHadResources) {, +		if (originallyHadResources && generatesDefaults() && !configAttributes.hasResources()) {, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/support/DelegatingSmartContextLoader.java, +		final boolean originallyHadResources = configAttributes.hasResources();, +			if (originallyHadResources) {, +		if (originallyHadResources && generatesDefaults() && !configAttributes.hasResources()) {, +++ b/org.springframework.test/src/test/java/org/springframework/test/context/expression/ExpressionUsageTests.java, + * Copyright 2002-2011 the original author or authors., +, +import static junit.framework.Assert.assertEquals;, +, +import org.junit.runner.RunWith;, +import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;, +@RunWith(SpringJUnit4ClassRunner.class), +public class ExpressionUsageTests {, +	@Autowired, +	@Qualifier("derived"), +	private Properties props;, +, +	@Test, +	public void testSpr5906() throws Exception {, +		// verify the property values have been evaluated as expressions, +		assertEquals("Dave", props.getProperty("user.name"));, +		assertEquals("Andy", props.getProperty("username"));, +, +		// verify the property keys have been evaluated as expressions, +		assertEquals("exists", props.getProperty("Dave"));, +		assertEquals("exists also", props.getProperty("Andy"));, +	}, +, +, +	public static class Foo {, +, +		private String name;, +, +, +		public String getName() {, +			return name;, +		}, +, +		public void setName(String name) {, +			this.name = name;, +		}, +	}, +, +++ b/org.springframework.test/src/main/java/org/springframework/test/context/support/DelegatingSmartContextLoader.java, +		final boolean originallyHadResources = configAttributes.hasResources();, +			if (originallyHadResources) {, +		if (originallyHadResources && generatesDefaults() && !configAttributes.hasResources()) {, +++ b/org.springframework.test/src/test/java/org/springframework/test/context/expression/ExpressionUsageTests.java, + * Copyright 2002-2011 the original author or authors., +, +import static junit.framework.Assert.assertEquals;, +, +import org.junit.runner.RunWith;, +import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;, +@RunWith(SpringJUnit4ClassRunner.class), +public class ExpressionUsageTests {, +	@Autowired, +	@Qualifier("derived"), +	private Properties props;, +, +	@Test, +	public void testSpr5906() throws Exception {, +		// verify the property values have been evaluated as expressions, +		assertEquals("Dave", props.getProperty("user.name"));, +		assertEquals("Andy", props.getProperty("username"));, +, +		// verify the property keys have been evaluated as expressions, +		assertEquals("exists", props.getProperty("Dave"));, +		assertEquals("exists also", props.getProperty("Andy"));, +	}, +, +, +	public static class Foo {, +, +		private String name;, +, +, +		public String getName() {, +			return name;, +		}, +, +		public void setName(String name) {, +			this.name = name;, +		}, +	}, +, +++ b/org.springframework.test/src/test/resources/log4j.xml, +	<logger name="org.springframework.test.context.support">, +		<level value="warn" />, +	</logger>]