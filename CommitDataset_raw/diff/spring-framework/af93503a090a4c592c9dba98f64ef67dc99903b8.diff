[+++ b/spring-expression/src/main/java/org/springframework/expression/ParserContext.java, +	 * The default ParserContext implementation that enables template expression, +	 * parsing mode. The expression prefix is "#{" and the expression suffix is "}"., +	ParserContext TEMPLATE_EXPRESSION = new ParserContext() {, +, +		@Override, +		public boolean isTemplate() {, +			return true;, +		}, +++ b/spring-expression/src/main/java/org/springframework/expression/ParserContext.java, +	 * The default ParserContext implementation that enables template expression, +	 * parsing mode. The expression prefix is "#{" and the expression suffix is "}"., +	ParserContext TEMPLATE_EXPRESSION = new ParserContext() {, +, +		@Override, +		public boolean isTemplate() {, +			return true;, +		}, +++ b/spring-expression/src/main/java/org/springframework/expression/common/TemplateAwareExpressionParser.java, +		return parseExpression(expressionString, null);, +	public Expression parseExpression(String expressionString, @Nullable ParserContext context) throws ParseException {, +		if (context != null && context.isTemplate()) {]