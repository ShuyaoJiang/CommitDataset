[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanDefinition.java, + * factoring out common properties of {@link GenericBeanDefinition},, + * {@link RootBeanDefinition} and {@link ChildBeanDefinition}., +	 * Constant that indicates the container should attempt to infer the, +	 * {@link #setDestroyMethodName destroy method name} for a bean as opposed to, +	 * explicit specification of a method name. The value {@value} is specifically, +	 * designed to include characters otherwise illegal in a method name, ensuring, +	 * no possibility of collisions with legitimately named methods having the same, +	 * name., +	 * <p>Currently, the method names detected during destroy method inference, +	 * are "close" and "shutdown", if present on the specific bean class., +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanDefinition.java, + * factoring out common properties of {@link GenericBeanDefinition},, + * {@link RootBeanDefinition} and {@link ChildBeanDefinition}., +	 * Constant that indicates the container should attempt to infer the, +	 * {@link #setDestroyMethodName destroy method name} for a bean as opposed to, +	 * explicit specification of a method name. The value {@value} is specifically, +	 * designed to include characters otherwise illegal in a method name, ensuring, +	 * no possibility of collisions with legitimately named methods having the same, +	 * name., +	 * <p>Currently, the method names detected during destroy method inference, +	 * are "close" and "shutdown", if present on the specific bean class., +++ b/spring-context/src/main/java/org/springframework/context/annotation/Bean.java, + * Copyright 2002-2014 the original author or authors., +	 * within the body of a Bean-annotated method., +	 * <p>The default value is {@code ""}, indicating no init method to be called., +	 * application context, for example a {@code close()} method on a JDBC, +	 * {@code DataSource} implementation, or a Hibernate {@code SessionFactory} object., +	 * method against an object returned from the {@code @Bean} method. For example, given, +	 * an {@code @Bean} method returning an Apache Commons DBCP {@code BasicDataSource},, +	 * the container will notice the {@code close()} method available on that object and, +	 * 'close' or 'shutdown'. The method may be declared at any level of the inheritance, +	 * hierarchy and will be detected regardless of the return type of the {@code @Bean}, +	 * method (i.e., detection occurs reflectively against the bean instance itself at, +	 * creation time).]