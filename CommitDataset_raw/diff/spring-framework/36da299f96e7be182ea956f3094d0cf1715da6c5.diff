[+++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, +	 * Set the {@link Locale} of the content language,, +	 * as specified by the {@literal Content-Language} header., +	 * <p>Use {@code set(CONTENT_LANGUAGE, ...)} if you need, +	 * to set multiple content languages.</p>, +	 */, +	public void setContentLanguage(Locale locale) {, +		Assert.notNull(locale, "'locale' must not be null");, +		set(CONTENT_LANGUAGE, locale.toLanguageTag());, +	}, +, +	/**, +	 * Return the first {@link Locale} of the content languages,, +	 * as specified by the {@literal Content-Language} header., +	 * <p>Returns {@code null} when the content language is unknown., +	 * <p>Use {@code getValuesAsList(CONTENT_LANGUAGE)} if you need, +	 * to get multiple content languages.</p>, +	 */, +	public Locale getContentLanguage() {, +		return getValuesAsList(CONTENT_LANGUAGE), +				.stream(), +				.findFirst(), +				.map(Locale::forLanguageTag), +				.orElse(null);, +	}, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java, +	 * Set the {@link Locale} of the content language,, +	 * as specified by the {@literal Content-Language} header., +	 * <p>Use {@code set(CONTENT_LANGUAGE, ...)} if you need, +	 * to set multiple content languages.</p>, +	 */, +	public void setContentLanguage(Locale locale) {, +		Assert.notNull(locale, "'locale' must not be null");, +		set(CONTENT_LANGUAGE, locale.toLanguageTag());, +	}, +, +	/**, +	 * Return the first {@link Locale} of the content languages,, +	 * as specified by the {@literal Content-Language} header., +	 * <p>Returns {@code null} when the content language is unknown., +	 * <p>Use {@code getValuesAsList(CONTENT_LANGUAGE)} if you need, +	 * to get multiple content languages.</p>, +	 */, +	public Locale getContentLanguage() {, +		return getValuesAsList(CONTENT_LANGUAGE), +				.stream(), +				.findFirst(), +				.map(Locale::forLanguageTag), +				.orElse(null);, +	}, +, +	/**, +++ b/spring-web/src/test/java/org/springframework/http/HttpHeadersTests.java, +	@Test, +	public void contentLanguage() {, +		assertNull(headers.getContentLanguage());, +		headers.setContentLanguage(Locale.FRANCE);, +		assertEquals(Locale.FRANCE, headers.getContentLanguage());, +		assertEquals("fr-FR", headers.getFirst(HttpHeaders.CONTENT_LANGUAGE));, +		headers.clear();, +		headers.set(HttpHeaders.CONTENT_LANGUAGE, Locale.GERMAN.toLanguageTag() + ", " + Locale.CANADA);, +		assertEquals(Locale.GERMAN, headers.getContentLanguage());, +	}, +]