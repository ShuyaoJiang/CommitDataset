[+++ b/spring-test/src/main/java/org/springframework/test/context/transaction/TestTransaction.java, + * <p>Test-managed transactions are transactions that are managed by the, + * <em>Spring TestContext Framework</em>., +++ b/spring-test/src/main/java/org/springframework/test/context/transaction/TestTransaction.java, + * <p>Test-managed transactions are transactions that are managed by the, + * <em>Spring TestContext Framework</em>., +++ b/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java, + * within <em>test-managed transactions</em> by honoring Spring's, + * annotation., + * <h3>Test-managed Transactions</h3>, + * <p><em>Test-managed transactions</em> are transactions that are managed, + * by this listener. Such transactions should not be confused with , + * <em>Spring-managed transactions</em> (i.e., those managed directly, + * by Spring within the {@code ApplicationContext} loaded for tests) or, + * <em>application-managed transactions</em> (i.e., those managed, + * programmatically within application code that is invoked via tests)., + * Spring-managed transactions and application-managed transactions will, + * typically participate in test-managed transactions; however, caution, + * should be taken if Spring-managed transactions or application-managed, + * transactions are configured with any propagation type other than, + * {@link org.springframework.transaction.annotation.Propagation#REQUIRED REQUIRED}, + * or {@link org.springframework.transaction.annotation.Propagation#SUPPORTS SUPPORTS}., + *, + * <h3>Enabling and Disabling Transactions</h3>, + * <p>Annotating a test method with {@code @Transactional} causes the test, + * to be run within a transaction that will, by default, be automatically, + * <em>rolled back</em> after completion of the test. If a test class is, + * annotated with {@code @Transactional}, each test method within that class, + * hierarchy will be run within a transaction. Test methods that are, + * <h3>Declarative Rollback and Commit Behavior</h3>, + * <p>By default, test transactions will be automatically <em>rolled back</em>, + * after completion of the test; however, transactional commit and rollback, + * behavior can be configured declaratively via the class-level, + * {@link TransactionConfiguration @TransactionConfiguration} and method-level, + * {@link Rollback @Rollback} annotations., + * <h3>Programmatic Transaction Management</h3>, + * <p>As of Spring Framework 4.1, it is possible to interact with test-managed, + * transactions programmatically via the static methods in {@link TestTransaction}., + * {@code TestTransaction} may be used within <em>test</em> methods,, + * <em>before</em> methods, and <em>after</em> methods., + *, + * <h3>Executing Code outside of a Transaction</h3>, + * <p>When executing transactional tests, it is sometimes useful to be able to, + * execute certain <em>set up</em> or <em>tear down</em> code outside of a, + * transaction. {@code TransactionalTestExecutionListener} provides such, + * support for methods annotated with, + * {@link BeforeTransaction @BeforeTransaction} or, + * {@link AfterTransaction @AfterTransaction}., + *, + * <h3>Configuring a Transaction Manager</h3>, + * <p>{@code TransactionalTestExecutionListener} expects a, + * {@link PlatformTransactionManager} bean to be defined in the Spring, + * {@code ApplicationContext} for the test. In case there are multiple, + * instances of {@code PlatformTransactionManager} within the test's, + * {@code ApplicationContext}, {@code @TransactionConfiguration} supports, + * configuring the bean name of the {@code PlatformTransactionManager} that, + * should be used to drive transactions. Alternatively, a <em>qualifier</em>, + * may be declared via, + * {@link org.springframework.transaction.annotation.Transactional#value @Transactional("myQualifier")}, or, + * {@link org.springframework.transaction.annotation.TransactionManagementConfigurer TransactionManagementConfigurer}, + * can be implemented by an, + * @see org.springframework.transaction.annotation.TransactionManagementConfigurer]