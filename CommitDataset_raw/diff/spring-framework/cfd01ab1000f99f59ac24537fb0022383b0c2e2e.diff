[+++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, + * Copyright 2002-2014 the original author or authors., +import org.springframework.util.ObjectUtils;, +, +		// Sort non-void returning write methods to guard against the ill effects of, +	public boolean equals(Object other) {, +		return (this == other || (other instanceof PropertyDescriptor &&, +				PropertyDescriptorUtils.equals(this, (PropertyDescriptor) other)));, +	}, +, +	@Override, +	public int hashCode() {, +		return (ObjectUtils.nullSafeHashCode(getReadMethod()) * 29 + ObjectUtils.nullSafeHashCode(getWriteMethod()));, +	public boolean equals(Object other) {, +		if (this == other) {, +		if (!(other instanceof IndexedPropertyDescriptor)) {, +		IndexedPropertyDescriptor otherPd = (IndexedPropertyDescriptor) other;, +		return (ObjectUtils.nullSafeEquals(getIndexedReadMethod(), otherPd.getIndexedReadMethod()) &&, +				ObjectUtils.nullSafeEquals(getIndexedWriteMethod(), otherPd.getIndexedWriteMethod()) &&, +				ObjectUtils.nullSafeEquals(getIndexedPropertyType(), otherPd.getIndexedPropertyType()) &&, +				PropertyDescriptorUtils.equals(this, otherPd));, +, +	@Override, +	public int hashCode() {, +		int hashCode = ObjectUtils.nullSafeHashCode(getReadMethod());, +		hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(getWriteMethod());, +		hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(getIndexedReadMethod());, +		hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(getIndexedWriteMethod());, +		return hashCode;, +	public static boolean equals(PropertyDescriptor pd, PropertyDescriptor otherPd) {, +		return (ObjectUtils.nullSafeEquals(pd.getReadMethod(), otherPd.getReadMethod()) &&, +				ObjectUtils.nullSafeEquals(pd.getWriteMethod(), otherPd.getWriteMethod()) &&, +				ObjectUtils.nullSafeEquals(pd.getPropertyType(), otherPd.getPropertyType()) &&, +				ObjectUtils.nullSafeEquals(pd.getPropertyEditorClass(), otherPd.getPropertyEditorClass()) &&, +				pd.isBound() == otherPd.isBound() && pd.isConstrained() == otherPd.isConstrained());]