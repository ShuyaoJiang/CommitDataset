[+++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/AbstractAopProxyTests.java, + * @author Chris Beams, +		@SuppressWarnings("serial"), +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/AbstractAopProxyTests.java, + * @author Chris Beams, +		@SuppressWarnings("serial"), +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/CglibProxyTests.java, +import static org.hamcrest.CoreMatchers.instanceOf;, + * @author Chris Beams, +			new Cglib2AopProxy(null);, +		assertThat(cglib.getProxy(), instanceOf(ITestBean.class));, +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/AbstractAopProxyTests.java, + * @author Chris Beams, +		@SuppressWarnings("serial"), +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/CglibProxyTests.java, +import static org.hamcrest.CoreMatchers.instanceOf;, + * @author Chris Beams, +			new Cglib2AopProxy(null);, +		assertThat(cglib.getProxy(), instanceOf(ITestBean.class));, +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/JdkDynamicProxyTests.java, +import static org.easymock.EasyMock.createMock;, +import static org.easymock.EasyMock.expect;, +import static org.easymock.EasyMock.replay;, +import static org.easymock.EasyMock.verify;, + * @author Chris Beams, +			new JdkDynamicAopProxy(null);, +		MethodInterceptor mi = createMock(MethodInterceptor.class);, +		expect(mi.invoke(null)).andReturn(age);, +		replay(mi);, +		verify(mi);, +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/AbstractAopProxyTests.java, + * @author Chris Beams, +		@SuppressWarnings("serial"), +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/CglibProxyTests.java, +import static org.hamcrest.CoreMatchers.instanceOf;, + * @author Chris Beams, +			new Cglib2AopProxy(null);, +		assertThat(cglib.getProxy(), instanceOf(ITestBean.class));, +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/JdkDynamicProxyTests.java, +import static org.easymock.EasyMock.createMock;, +import static org.easymock.EasyMock.expect;, +import static org.easymock.EasyMock.replay;, +import static org.easymock.EasyMock.verify;, + * @author Chris Beams, +			new JdkDynamicAopProxy(null);, +		MethodInterceptor mi = createMock(MethodInterceptor.class);, +		expect(mi.invoke(null)).andReturn(age);, +		replay(mi);, +		verify(mi);, +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/ProxyFactoryBeanTests.java, +import java.io.FileNotFoundException;, +import java.io.IOException;, +, +		expected = new FileNotFoundException();, +		catch (IOException ex) {, +		assertEquals(1, th.getCalls("ioException"));, +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/AbstractAopProxyTests.java, + * @author Chris Beams, +		@SuppressWarnings("serial"), +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/CglibProxyTests.java, +import static org.hamcrest.CoreMatchers.instanceOf;, + * @author Chris Beams, +			new Cglib2AopProxy(null);, +		assertThat(cglib.getProxy(), instanceOf(ITestBean.class));, +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/JdkDynamicProxyTests.java, +import static org.easymock.EasyMock.createMock;, +import static org.easymock.EasyMock.expect;, +import static org.easymock.EasyMock.replay;, +import static org.easymock.EasyMock.verify;, + * @author Chris Beams, +			new JdkDynamicAopProxy(null);, +		MethodInterceptor mi = createMock(MethodInterceptor.class);, +		expect(mi.invoke(null)).andReturn(age);, +		replay(mi);, +		verify(mi);, +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/ProxyFactoryBeanTests.java, +import java.io.FileNotFoundException;, +import java.io.IOException;, +, +		expected = new FileNotFoundException();, +		catch (IOException ex) {, +		assertEquals(1, th.getCalls("ioException"));, +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/adapter/AdvisorAdapterRegistrationTests.java, +import static org.junit.Assert.*;, +import org.junit.Test;, + * @author Chris Beams, +public class AdvisorAdapterRegistrationTests {, +    @Test, +    @Test, +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/AbstractAopProxyTests.java, + * @author Chris Beams, +		@SuppressWarnings("serial"), +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/CglibProxyTests.java, +import static org.hamcrest.CoreMatchers.instanceOf;, + * @author Chris Beams, +			new Cglib2AopProxy(null);, +		assertThat(cglib.getProxy(), instanceOf(ITestBean.class));, +++ b/org.springframework.testsuite/src/test/java/org/springframework/aop/framework/JdkDynamicProxyTests.java, +import static org.easymock.EasyMock.createMock;, +import static org.easymock.EasyMock.expect;]