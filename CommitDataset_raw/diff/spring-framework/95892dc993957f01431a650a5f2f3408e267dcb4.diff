[+++ /dev/null, +++ /dev/null, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java, +		if (!(o instanceof Method)) {, +			throw new SpelException(SpelMessages.INCORRECT_NUMBER_OF_ARGUMENTS_TO_FUNCTION, functionArgs.length, m, +					.getParameterTypes().length);, +			throw new SpelException(getCharPositionInLine(), SpelMessages.FUNCTION_MUST_BE_STATIC, m, +					.getDeclaringClass().getName(), +					+ "." + m.getName(), name);, +++ /dev/null, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java, +		if (!(o instanceof Method)) {, +			throw new SpelException(SpelMessages.INCORRECT_NUMBER_OF_ARGUMENTS_TO_FUNCTION, functionArgs.length, m, +					.getParameterTypes().length);, +			throw new SpelException(getCharPositionInLine(), SpelMessages.FUNCTION_MUST_BE_STATIC, m, +					.getDeclaringClass().getName(), +					+ "." + m.getName(), name);, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java, +		if (!(o instanceof Method)) {, +			throw new SpelException(SpelMessages.INCORRECT_NUMBER_OF_ARGUMENTS_TO_FUNCTION, functionArgs.length, m, +					.getParameterTypes().length);, +			throw new SpelException(getCharPositionInLine(), SpelMessages.FUNCTION_MUST_BE_STATIC, m, +					.getDeclaringClass().getName(), +					+ "." + m.getName(), name);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java, +		if (!(o instanceof Method)) {, +			throw new SpelException(SpelMessages.INCORRECT_NUMBER_OF_ARGUMENTS_TO_FUNCTION, functionArgs.length, m, +					.getParameterTypes().length);, +			throw new SpelException(getCharPositionInLine(), SpelMessages.FUNCTION_MUST_BE_STATIC, m, +					.getDeclaringClass().getName(), +					+ "." + m.getName(), name);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java, +		if (!(o instanceof Method)) {, +			throw new SpelException(SpelMessages.INCORRECT_NUMBER_OF_ARGUMENTS_TO_FUNCTION, functionArgs.length, m, +					.getParameterTypes().length);, +			throw new SpelException(getCharPositionInLine(), SpelMessages.FUNCTION_MUST_BE_STATIC, m, +					.getDeclaringClass().getName(), +					+ "." + m.getName(), name);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g, +++ /dev/null, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java, +		if (!(o instanceof Method)) {, +			throw new SpelException(SpelMessages.INCORRECT_NUMBER_OF_ARGUMENTS_TO_FUNCTION, functionArgs.length, m, +					.getParameterTypes().length);, +			throw new SpelException(getCharPositionInLine(), SpelMessages.FUNCTION_MUST_BE_STATIC, m, +					.getDeclaringClass().getName(), +					+ "." + m.getName(), name);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.tokens, +GREATER_THAN_OR_EQUAL=71, +SELECT_FIRST=52, +COMMA=45, +HOLDER=12, +GREATER_THAN=70, +TYPE=54, +MINUS=36, +MAP_ENTRY=21, +SELECT_LAST=53, +NUMBER=25, +LESS_THAN=68, +BANG=41, +FALSE=62, +METHOD=22, +LBRACKET=47, +MOD=39, +CONSTRUCTOR_ARRAY=13, +FUNCTIONREF=15, +NULL_LITERAL=58, +NAMED_ARGUMENT=14, +OR=33, +PIPE=77, +DOT=42, +RCURLY=50, +AND=34, +LCURLY=55, +REAL_TYPE_SUFFIX=84, +STRING_LITERAL=56, +SELECT=51, +RBRACKET=48, +SUBTRACT=24, +ASSIGN=27, +BETWEEN=74, +RPAREN=32, +SIGN=85, +LPAREN=31]