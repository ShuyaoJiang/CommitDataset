[+++ b/org.springframework.core/src/main/java/org/springframework/core/convert/TypeDescriptor.java, +	private Annotation[] annotations;, +	, +	public synchronized TypeDescriptor getElementTypeDescriptor() {, +		if (elementType == null) {, +		return elementType;, +	public synchronized TypeDescriptor getMapKeyTypeDescriptor() {, +		if (mapKeyType == null) {, +			mapKeyType = forElementType(resolveMapKeyType());			, +		return mapKeyType;, +	public synchronized TypeDescriptor getMapValueTypeDescriptor() {, +		if (mapValueType == null) {, +			mapValueType = forElementType(resolveMapValueType());, +		return mapValueType;, +	public synchronized Annotation[] getAnnotations() {, +		if (this.annotations == null) {, +			this.annotations = resolveAnnotations();, +		return this.annotations;, +		return type != null && isMap() ? GenericCollectionTypeResolver.getMapKeyType((Class<? extends Map>) this.type) : null;, +		return isMap() && type != null ? GenericCollectionTypeResolver.getMapValueType((Class<? extends Map>) this.type) : null;, +	}, +	, +	private Annotation[] resolveAnnotations() {, +		if (this.field != null) {, +			return this.field.getAnnotations();, +		}, +		else if (this.methodParameter != null) {, +			if (this.methodParameter.getParameterIndex() < 0) {, +				return this.methodParameter.getMethodAnnotations();, +			}, +			else {, +				return this.methodParameter.getParameterAnnotations();, +			}, +		}, +		else {, +			return EMPTY_ANNOTATION_ARRAY;, +		}]