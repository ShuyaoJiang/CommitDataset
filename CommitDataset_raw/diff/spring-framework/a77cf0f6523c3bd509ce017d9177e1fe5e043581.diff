[+++ b/org.springframework.test/src/main/java/org/springframework/test/context/support/AbstractGenericContextLoader.java, + * Abstract, generic extension of {@link AbstractContextLoader} that loads a, + * {@link GenericApplicationContext}., + * , + * <ul>, + * <li>If instances of concrete subclasses are invoked via the, + * {@link org.springframework.test.context.ContextLoader ContextLoader} SPI, the, + * context will be loaded from the <em>locations</em> provided to, + * {@link #loadContext(String...)}.</li>, + * <li>If instances of concrete subclasses are invoked via the, + * {@link org.springframework.test.context.SmartContextLoader SmartContextLoader}, + * SPI, the context will be loaded from the {@link MergedContextConfiguration}, + * provided to {@link #loadContext(MergedContextConfiguration)}. In such cases, a , + * <code>SmartContextLoader</code> will decide whether to load the context from, + * <em>locations</em> or, + * {@link org.springframework.context.annotation.Configuration configuration classes}.</li>, + * </ul>, + * as well., + * @see #loadContext(MergedContextConfiguration), + * @see #loadContext(String...), +	 * Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}., +	 * <p>Implementation details:, +	 * <ul>, +	 * <li>Creates a {@link GenericApplicationContext} instance.</li>, +	 * <li>Sets the <em>active bean definition profiles</em> from the supplied, +	 * <code>MergedContextConfiguration</code> in the, +	 * {@link org.springframework.core.env.Environment Environment} of the context.</li>, +	 * <li>Calls {@link #prepareContext(GenericApplicationContext)} to, +	 * prepare the context.</li>, +	 * <li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to, +	 * allow for customizing the context's <code>DefaultListableBeanFactory</code>.</li>, +	 * <li>Delegates to {@link #loadBeanDefinitions()} to populate the context, +	 * from the configuration locations or classes in the supplied, +	 * <code>MergedContextConfiguration</code>.</li>, +	 * <li>Delegates to {@link AnnotationConfigUtils} for, +	 * {@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}, +	 * annotation configuration processors.</li>, +	 * <li>Calls {@link #customizeContext(GenericApplicationContext)} to allow, +	 * for customizing the context before it is refreshed.</li>, +	 * <li>{@link ConfigurableApplicationContext#refresh Refreshes} the, +	 * context and registers a JVM shutdown hook for it.</li>, +	 * </ul>, +	 * @return a new application context, +	 * @see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration), +	 * @see GenericApplicationContext, +	 * Load a Spring ApplicationContext from the supplied <code>locations</code>., +	 * <li>Delegates to {@link #createBeanDefinitionReader()} to create a , +	 * {@link BeanDefinitionReader} which is then used to populate the context, +	 * from the specified config locations.</li>, +	 * <li>{@link ConfigurableApplicationContext#refresh Refreshes} the, +	 * <p><b>Note</b>: this method does not provide a means to set active bean definition, +	 * profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}, +	 * for an alternative., +	 * @see #loadContext(MergedContextConfiguration), +	 * Called <i>before</i> bean definitions are read., +	 * customize <code>GenericApplicationContext</code>'s standard settings., +	 * @param context the context that should be prepared, +	 * @see #loadContext(MergedContextConfiguration), +	 * @see #loadContext(String...), +	 * @see GenericApplicationContext#setAllowBeanDefinitionOverriding, +	 * @see GenericApplicationContext#setResourceLoader, +	 * @see GenericApplicationContext#setId, +	 * Customize the internal bean factory of the ApplicationContext created by, +	 * this <code>ContextLoader</code>., +	 * to customize <code>DefaultListableBeanFactory</code>'s standard settings., +	 * @see #loadContext(MergedContextConfiguration), +	 * @see #loadContext(String...), +	 * @see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding, +	 * @see DefaultListableBeanFactory#setAllowEagerClassLoading, +	 * @see DefaultListableBeanFactory#setAllowCircularReferences, +	 * @see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping, +	 * from the configuration locations or classes in the supplied, +	 * <code>MergedContextConfiguration</code>.</li>, +	 * returned by {@link #createBeanDefinitionReader()} to , +	 * {@link #createBeanDefinitionReader()}. Alternatively subclasses may, +	 * provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}, +	 * @param mergedConfig the merged context configuration , +	 * @see #loadContext(MergedContextConfiguration), +	 * Factory method for creating a new {@link BeanDefinitionReader} for loading, +	 * bean definitions into the supplied {@link GenericApplicationContext context}., +	 * @param context the context for which the <code>BeanDefinitionReader</code>, +	 * should be created, +	 * @return a <code>BeanDefinitionReader</code> for the supplied context, +	 * @see #loadBeanDefinitions, +	 * loaded into the context but <i>before</i> the context is refreshed., +	 * @see #loadContext(MergedContextConfiguration), +	 * @see #loadContext(String...), +++ b/org.springframework.test/src/main/java/org/springframework/test/context/support/AbstractGenericContextLoader.java, + * Abstract, generic extension of {@link AbstractContextLoader} that loads a, + * {@link GenericApplicationContext}., + * , + * <ul>, + * <li>If instances of concrete subclasses are invoked via the, + * {@link org.springframework.test.context.ContextLoader ContextLoader} SPI, the, + * context will be loaded from the <em>locations</em> provided to, + * {@link #loadContext(String...)}.</li>, + * <li>If instances of concrete subclasses are invoked via the, + * {@link org.springframework.test.context.SmartContextLoader SmartContextLoader}, + * SPI, the context will be loaded from the {@link MergedContextConfiguration}, + * provided to {@link #loadContext(MergedContextConfiguration)}. In such cases, a ]