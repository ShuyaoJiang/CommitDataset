[+++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java, +	public void setDefaultContentType(MediaType contentType) {, +		this.defaultNegotiationStrategy = new FixedContentNegotiationStrategy(contentType);, +	}, +, +	/**, +	 * Set the default content types to use when no content type is requested., +	 * <p>By default this is not set., +	 * @see #setDefaultContentTypeStrategy, +	 * @since 5.0, +	 */, +	public void setDefaultContentTypes(List<MediaType> contentTypes) {, +++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java, +	public void setDefaultContentType(MediaType contentType) {, +		this.defaultNegotiationStrategy = new FixedContentNegotiationStrategy(contentType);, +	}, +, +	/**, +	 * Set the default content types to use when no content type is requested., +	 * <p>By default this is not set., +	 * @see #setDefaultContentTypeStrategy, +	 * @since 5.0, +	 */, +	public void setDefaultContentTypes(List<MediaType> contentTypes) {, +++ b/spring-web/src/main/java/org/springframework/web/accept/FixedContentNegotiationStrategy.java, + * Copyright 2002-2017 the original author or authors., +import java.util.Collections;, +, +import org.springframework.util.Assert;, +	 * Constructor with a single default {@code MediaType}., +	public FixedContentNegotiationStrategy(MediaType contentType) {, +		this(Collections.singletonList(contentType));, +	 * Constructor with an ordered List of default {@code MediaType}'s to return, +	 * for use in applications that support a variety of content types., +	 * <p>Consider appending {@link MediaType#ALL} at the end if destinations, +	 * are present which do not support any of the other default media types., +	 * @since 5.0, +		Assert.notNull(contentTypes, "'contentTypes' must not be null");, +		this.contentTypes = Collections.unmodifiableList(contentTypes);, +	}, +, +, +	/**, +	 * Return the configured list of media types., +	 */, +	public List<MediaType> getContentTypes() {, +		return this.contentTypes;, +++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java, +	public void setDefaultContentType(MediaType contentType) {, +		this.defaultNegotiationStrategy = new FixedContentNegotiationStrategy(contentType);, +	}, +, +	/**, +	 * Set the default content types to use when no content type is requested., +	 * <p>By default this is not set., +	 * @see #setDefaultContentTypeStrategy, +	 * @since 5.0, +	 */, +	public void setDefaultContentTypes(List<MediaType> contentTypes) {, +++ b/spring-web/src/main/java/org/springframework/web/accept/FixedContentNegotiationStrategy.java, + * Copyright 2002-2017 the original author or authors., +import java.util.Collections;, +, +import org.springframework.util.Assert;, +	 * Constructor with a single default {@code MediaType}., +	public FixedContentNegotiationStrategy(MediaType contentType) {, +		this(Collections.singletonList(contentType));, +	 * Constructor with an ordered List of default {@code MediaType}'s to return, +	 * for use in applications that support a variety of content types., +	 * <p>Consider appending {@link MediaType#ALL} at the end if destinations, +	 * are present which do not support any of the other default media types., +	 * @since 5.0, +		Assert.notNull(contentTypes, "'contentTypes' must not be null");, +		this.contentTypes = Collections.unmodifiableList(contentTypes);, +	}, +, +, +	/**, +	 * Return the configured list of media types., +	 */, +	public List<MediaType> getContentTypes() {, +		return this.contentTypes;, +++ b/spring-web/src/test/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBeanTests.java, +import java.util.List;, +		this.factoryBean.setDefaultContentType(MediaType.APPLICATION_JSON);, +		assertEquals(MediaType.APPLICATION_JSON, manager.resolveMediaTypes(this.webRequest).get(0));, +		assertEquals(MediaType.APPLICATION_JSON, manager.resolveMediaTypes(this.webRequest).get(0));, +	@Test // SPR-15367, +	public void setDefaultContentTypes() throws Exception {, +		List<MediaType> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON, MediaType.ALL);, +		this.factoryBean.setDefaultContentTypes(mediaTypes);, +		assertEquals(mediaTypes, manager.resolveMediaTypes(this.webRequest));, +		assertEquals(mediaTypes, manager.resolveMediaTypes(this.webRequest));, +++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java, +	public void setDefaultContentType(MediaType contentType) {, +		this.defaultNegotiationStrategy = new FixedContentNegotiationStrategy(contentType);, +	}, +, +	/**, +	 * Set the default content types to use when no content type is requested.]