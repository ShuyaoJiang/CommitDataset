[+++ b/org.springframework.expression/src/main/java/org/springframework/expression/EvaluationContext.java, +	, +, +	/**, +	 * @param rootObject the root object against which unqualified properties/methods/etc should be resolved, +	 */, +	void setRootObject(Object object);, +, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/EvaluationContext.java, +	, +, +	/**, +	 * @param rootObject the root object against which unqualified properties/methods/etc should be resolved, +	 */, +	void setRootObject(Object object);, +, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, +		return new TypedValue(value,TypeDescriptor.forObject(value));, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/EvaluationContext.java, +	, +, +	/**, +	 * @param rootObject the root object against which unqualified properties/methods/etc should be resolved, +	 */, +	void setRootObject(Object object);, +, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, +		return new TypedValue(value,TypeDescriptor.forObject(value));, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/SpelMessages.java, +			Kind.ERROR, 1068, "Second operand to matches operator must be a string. ''{0}'' is not"), //, +			FUNCTION_MUST_BE_STATIC(Kind.ERROR, 1069,, +			"Only static methods can be called via function references. The method ''{0}'' referred to by name ''{1}'' is not static."),//, +			CANNOT_INDEX_INTO_NULL_VALUE(Kind.ERROR, 1070, "Cannot index into a null value");, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/EvaluationContext.java, +	, +, +	/**, +	 * @param rootObject the root object against which unqualified properties/methods/etc should be resolved, +	 */, +	void setRootObject(Object object);, +, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, +		return new TypedValue(value,TypeDescriptor.forObject(value));, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/SpelMessages.java, +			Kind.ERROR, 1068, "Second operand to matches operator must be a string. ''{0}'' is not"), //, +			FUNCTION_MUST_BE_STATIC(Kind.ERROR, 1069,, +			"Only static methods can be called via function references. The method ''{0}'' referred to by name ''{1}'' is not static."),//, +			CANNOT_INDEX_INTO_NULL_VALUE(Kind.ERROR, 1070, "Cannot index into a null value");, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java, +			Object value = childValue.getValue();, +			arguments[i] = value;, +			argumentTypes[i] = value==null?Object.class:value.getClass();, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/EvaluationContext.java, +	, +, +	/**, +	 * @param rootObject the root object against which unqualified properties/methods/etc should be resolved, +	 */, +	void setRootObject(Object object);, +, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, +		return new TypedValue(value,TypeDescriptor.forObject(value));, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/SpelMessages.java, +			Kind.ERROR, 1068, "Second operand to matches operator must be a string. ''{0}'' is not"), //, +			FUNCTION_MUST_BE_STATIC(Kind.ERROR, 1069,, +			"Only static methods can be called via function references. The method ''{0}'' referred to by name ''{1}'' is not static."),//, +			CANNOT_INDEX_INTO_NULL_VALUE(Kind.ERROR, 1070, "Cannot index into a null value");, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java, +			Object value = childValue.getValue();, +			arguments[i] = value;, +			argumentTypes[i] = value==null?Object.class:value.getClass();, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java, +import org.springframework.util.ReflectionUtils;, +			ReflectionUtils.makeAccessible(m);, +			Object result = m.invoke(m.getClass(), functionArgs);, +			return new TypedValue(result, new TypeDescriptor(new MethodParameter(m,-1)));, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/EvaluationContext.java, +	, +, +	/**, +	 * @param rootObject the root object against which unqualified properties/methods/etc should be resolved, +	 */, +	void setRootObject(Object object);, +, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ExpressionState.java, +		return new TypedValue(value,TypeDescriptor.forObject(value));, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/SpelMessages.java, +			Kind.ERROR, 1068, "Second operand to matches operator must be a string. ''{0}'' is not"), //, +			FUNCTION_MUST_BE_STATIC(Kind.ERROR, 1069,, +			"Only static methods can be called via function references. The method ''{0}'' referred to by name ''{1}'' is not static."),//, +			CANNOT_INDEX_INTO_NULL_VALUE(Kind.ERROR, 1070, "Cannot index into a null value");, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java, +			Object value = childValue.getValue();, +			arguments[i] = value;, +			argumentTypes[i] = value==null?Object.class:value.getClass();, +++ b/org.springframework.expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java, +import org.springframework.util.ReflectionUtils;, +			ReflectionUtils.makeAccessible(m);, +			Object result = m.invoke(m.getClass(), functionArgs);, +			return new TypedValue(result, new TypeDescriptor(new MethodParameter(m,-1)));]