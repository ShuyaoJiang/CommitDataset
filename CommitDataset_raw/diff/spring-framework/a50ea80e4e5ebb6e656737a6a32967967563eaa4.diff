[+++ b/spring-web/src/main/java/org/springframework/web/context/request/ServletWebRequest.java, +				if (hasRequestHeader(HEADER_IF_NONE_MATCH)) {, +					this.notModified = isEtagNotModified(etag);, +				}, +				else if (hasRequestHeader(HEADER_IF_MODIFIED_SINCE)) {, +					this.notModified = isTimestampNotModified(lastModifiedTimestamp);, +				}, +	private boolean hasRequestHeader(String headerName) {, +		return StringUtils.hasLength(getHeader(headerName));, +	}, +, +				&& hasRequestHeader(HEADER_IF_UNMODIFIED_SINCE);, +			String headerValue = getHeader(headerName);, +			String ifNoneMatch = getHeader(HEADER_IF_NONE_MATCH);, +++ b/spring-web/src/main/java/org/springframework/web/context/request/ServletWebRequest.java, +				if (hasRequestHeader(HEADER_IF_NONE_MATCH)) {, +					this.notModified = isEtagNotModified(etag);, +				}, +				else if (hasRequestHeader(HEADER_IF_MODIFIED_SINCE)) {, +					this.notModified = isTimestampNotModified(lastModifiedTimestamp);, +				}, +	private boolean hasRequestHeader(String headerName) {, +		return StringUtils.hasLength(getHeader(headerName));, +	}, +, +				&& hasRequestHeader(HEADER_IF_UNMODIFIED_SINCE);, +			String headerValue = getHeader(headerName);, +			String ifNoneMatch = getHeader(HEADER_IF_NONE_MATCH);, +++ b/spring-web/src/test/java/org/springframework/web/context/request/ServletWebRequestHttpMethodsTests.java, +	// SPR-14224, +		assertTrue(request.checkNotModified(eTag, currentEpoch));, +		assertEquals(304, servletResponse.getStatus());]