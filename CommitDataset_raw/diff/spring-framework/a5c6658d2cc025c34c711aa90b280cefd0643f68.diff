[+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, +				// The user (i.e. not the factory) is requesting this bean through a call to, +				// the bean method, direct or indirect. The bean may have already been marked, +				// as 'in creation' in certain autowiring scenarios; if so, temporarily set, +				// the in-creation status to false in order to avoid an exception., +					Method currentlyInvoked = SimpleInstantiationStrategy.getCurrentlyInvokedFactoryMethod();, +					if (currentlyInvoked != null) {, +						String outerBeanName = BeanAnnotationHelper.determineBeanNameFor(currentlyInvoked);, +						beanFactory.registerDependentBean(beanName, outerBeanName);, +					}, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java, +				// The user (i.e. not the factory) is requesting this bean through a call to, +				// the bean method, direct or indirect. The bean may have already been marked, +				// as 'in creation' in certain autowiring scenarios; if so, temporarily set, +				// the in-creation status to false in order to avoid an exception., +					Method currentlyInvoked = SimpleInstantiationStrategy.getCurrentlyInvokedFactoryMethod();, +					if (currentlyInvoked != null) {, +						String outerBeanName = BeanAnnotationHelper.determineBeanNameFor(currentlyInvoked);, +						beanFactory.registerDependentBean(beanName, outerBeanName);, +					}, +++ b/spring-context/src/test/java/org/springframework/context/annotation/ConfigurationClassPostProcessorTests.java, +import java.util.Arrays;, +		assertTrue(Arrays.asList(beanFactory.getDependentBeans("foo")).contains("bar"));]