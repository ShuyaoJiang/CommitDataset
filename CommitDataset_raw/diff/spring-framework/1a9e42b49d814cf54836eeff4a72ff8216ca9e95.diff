[+++ b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java, +import java.nio.charset.Charset;, + * @author Rossen Stoyanchev, +	private static final String FILENAME_WITH_CHARSET_KEY = "filename*=";, +, +	private static final Charset US_ASCII = Charset.forName("us-ascii");, +, +, +				String disposition = part.getHeader(CONTENT_DISPOSITION);, +				String filename = extractFilename(disposition);, +				if (filename == null) {, +					filename = extractFilenameWithCharset(disposition);, +				}, +		return extractFilename(contentDisposition, FILENAME_KEY);, +	}, +, +	private String extractFilename(String contentDisposition, String key) {, +		int startIndex = contentDisposition.indexOf(key);, +		String filename = contentDisposition.substring(startIndex + key.length());, +	private String extractFilenameWithCharset(String contentDisposition) {, +		String filename = extractFilename(contentDisposition, FILENAME_WITH_CHARSET_KEY);, +		if (filename == null) {, +			return null;, +		}, +		int index = filename.indexOf("'");, +		if (index != -1) {, +			Charset charset = null;, +			try {, +				charset = Charset.forName(filename.substring(0, index));, +			}, +			catch (IllegalArgumentException ex) {, +				// ignore, +			}, +			filename = filename.substring(index + 1);, +			// Skip language information.., +			index = filename.indexOf("'");, +			if (index != -1) {, +				filename = filename.substring(index + 1);, +			}, +			if (charset != null) {, +				filename = new String(filename.getBytes(US_ASCII), charset);, +			}, +		}, +		return filename;, +	}, +, +++ b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java, +import java.nio.charset.Charset;, + * @author Rossen Stoyanchev, +	private static final String FILENAME_WITH_CHARSET_KEY = "filename*=";, +, +	private static final Charset US_ASCII = Charset.forName("us-ascii");, +, +, +				String disposition = part.getHeader(CONTENT_DISPOSITION);, +				String filename = extractFilename(disposition);, +				if (filename == null) {, +					filename = extractFilenameWithCharset(disposition);, +				}, +		return extractFilename(contentDisposition, FILENAME_KEY);, +	}, +, +	private String extractFilename(String contentDisposition, String key) {, +		int startIndex = contentDisposition.indexOf(key);, +		String filename = contentDisposition.substring(startIndex + key.length());, +	private String extractFilenameWithCharset(String contentDisposition) {, +		String filename = extractFilename(contentDisposition, FILENAME_WITH_CHARSET_KEY);, +		if (filename == null) {, +			return null;, +		}, +		int index = filename.indexOf("'");, +		if (index != -1) {, +			Charset charset = null;, +			try {, +				charset = Charset.forName(filename.substring(0, index));, +			}, +			catch (IllegalArgumentException ex) {, +				// ignore, +			}, +			filename = filename.substring(index + 1);, +			// Skip language information.., +			index = filename.indexOf("'");, +			if (index != -1) {, +				filename = filename.substring(index + 1);, +			}, +			if (charset != null) {, +				filename = new String(filename.getBytes(US_ASCII), charset);, +			}, +		}, +		return filename;, +	}, +, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestPartIntegrationTests.java, +import java.util.Collections;, +import java.util.Map;, +import org.springframework.http.RequestEntity;, +import org.springframework.util.MimeTypeUtils;, +import static org.junit.Assert.assertEquals;, +import static org.springframework.web.bind.annotation.RequestMethod.POST;, +		emptyBodyConverter.setSupportedMediaTypes(Collections.singletonList(MediaType.APPLICATION_JSON));]