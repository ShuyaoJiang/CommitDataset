[+++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/JCacheCache.java, +	 * Create a {@code JCacheCache} instance., +	 * Create a {@code JCacheCache} instance., +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/JCacheCache.java, +	 * Create a {@code JCacheCache} instance., +	 * Create a {@code JCacheCache} instance., +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/JCacheCacheManager.java, + * Copyright 2002-2018 the original author or authors., +	 * Create a new {@code JCacheCacheManager} without a backing JCache, +	 * {@link CacheManager javax.cache.CacheManager}., +	 * <p>The backing JCache {@code javax.cache.CacheManager} can be set via the, +	 * {@link #setCacheManager} bean property., +	 * Create a new {@code JCacheCacheManager} for the given backing JCache, +	 * {@link CacheManager javax.cache.CacheManager}., +	 * @param cacheManager the backing JCache {@code javax.cache.CacheManager}, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/JCacheCache.java, +	 * Create a {@code JCacheCache} instance., +	 * Create a {@code JCacheCache} instance., +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/JCacheCacheManager.java, + * Copyright 2002-2018 the original author or authors., +	 * Create a new {@code JCacheCacheManager} without a backing JCache, +	 * {@link CacheManager javax.cache.CacheManager}., +	 * <p>The backing JCache {@code javax.cache.CacheManager} can be set via the, +	 * {@link #setCacheManager} bean property., +	 * Create a new {@code JCacheCacheManager} for the given backing JCache, +	 * {@link CacheManager javax.cache.CacheManager}., +	 * @param cacheManager the backing JCache {@code javax.cache.CacheManager}, +++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/JCacheManagerFactoryBean.java, + * Copyright 2002-2018 the original author or authors., + * {@link FactoryBean} for a JCache {@link CacheManager javax.cache.CacheManager},, + * obtaining a pre-defined {@code CacheManager} by name through the standard, + * JCache {@link Caching javax.cache.Caching} class., +	 * Specify the URI for the desired {@code CacheManager}., +	 * <p>Default is {@code null} (i.e. JCache's default)., +	 * Specify properties for the to-be-created {@code CacheManager}., +	 * <p>Default is {@code null} (i.e. no special properties to apply).]