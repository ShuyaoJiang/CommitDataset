[+++ b/spring-beans-groovy/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java, +	/**, +	 * Standard {@code XmlBeanDefinitionReader} created with default, +	 * settings for loading bean definitions from XML files., +	 */, +	private final XmlBeanDefinitionReader standardXmlBeanDefinitionReader;, +, +	/**, +	 * Groovy DSL {@code XmlBeanDefinitionReader} for loading bean definitions, +	 * via the Groovy DSL, typically configured with XML validation disabled., +	 */, +	private final XmlBeanDefinitionReader groovyDslXmlBeanDefinitionReader;, +		this.standardXmlBeanDefinitionReader = new XmlBeanDefinitionReader(registry);, +		this.groovyDslXmlBeanDefinitionReader = new XmlBeanDefinitionReader(registry);, +		this.groovyDslXmlBeanDefinitionReader.setValidating(false);, +	 * using its {@code BeanDefinitionRegistry} and delegating Groovy DSL loading to it., +		this.standardXmlBeanDefinitionReader = new XmlBeanDefinitionReader(xmlBeanDefinitionReader.getRegistry());, +		this.groovyDslXmlBeanDefinitionReader = xmlBeanDefinitionReader;, +		// Check for XML files and redirect them to the "standard" XmlBeanDefinitionReader, +			return this.standardXmlBeanDefinitionReader.loadBeanDefinitions(encodedResource);, +				NamespaceHandler namespaceHandler = this.groovyDslXmlBeanDefinitionReader.getNamespaceHandlerResolver().resolve(, +					uri);, +		XmlReaderContext readerContext = this.groovyDslXmlBeanDefinitionReader.createReaderContext(new DescriptiveResource(, +			"Groovy"));, +++ b/spring-beans-groovy/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java, +	/**, +	 * Standard {@code XmlBeanDefinitionReader} created with default, +	 * settings for loading bean definitions from XML files., +	 */, +	private final XmlBeanDefinitionReader standardXmlBeanDefinitionReader;, +, +	/**, +	 * Groovy DSL {@code XmlBeanDefinitionReader} for loading bean definitions, +	 * via the Groovy DSL, typically configured with XML validation disabled., +	 */, +	private final XmlBeanDefinitionReader groovyDslXmlBeanDefinitionReader;, +		this.standardXmlBeanDefinitionReader = new XmlBeanDefinitionReader(registry);, +		this.groovyDslXmlBeanDefinitionReader = new XmlBeanDefinitionReader(registry);, +		this.groovyDslXmlBeanDefinitionReader.setValidating(false);, +	 * using its {@code BeanDefinitionRegistry} and delegating Groovy DSL loading to it., +		this.standardXmlBeanDefinitionReader = new XmlBeanDefinitionReader(xmlBeanDefinitionReader.getRegistry());, +		this.groovyDslXmlBeanDefinitionReader = xmlBeanDefinitionReader;, +		// Check for XML files and redirect them to the "standard" XmlBeanDefinitionReader, +			return this.standardXmlBeanDefinitionReader.loadBeanDefinitions(encodedResource);, +				NamespaceHandler namespaceHandler = this.groovyDslXmlBeanDefinitionReader.getNamespaceHandlerResolver().resolve(, +					uri);, +		XmlReaderContext readerContext = this.groovyDslXmlBeanDefinitionReader.createReaderContext(new DescriptiveResource(, +			"Groovy"));, +++ b/spring-context/src/test/resources/org/springframework/context/groovy/test.xml, +	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">, +		<qualifier value="foo" />]