[+++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +		updateAcceptLanguageHeader();, +		updateAcceptLanguageHeader();, +	}, +, +	private void updateAcceptLanguageHeader() {, +		HttpHeaders headers = new HttpHeaders();, +		headers.setAcceptLanguageAsLocales(this.locales);, +		doAddHeaderValue(HttpHeaders.ACCEPT_LANGUAGE, headers.getFirst(HttpHeaders.ACCEPT_LANGUAGE), true);, +		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&, +				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {, +, +		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&, +				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {, +, +			HttpHeaders headers = new HttpHeaders();, +			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString());, +			setPreferredLocales(headers.getAcceptLanguageAsLocales());, +		}, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +		updateAcceptLanguageHeader();, +		updateAcceptLanguageHeader();, +	}, +, +	private void updateAcceptLanguageHeader() {, +		HttpHeaders headers = new HttpHeaders();, +		headers.setAcceptLanguageAsLocales(this.locales);, +		doAddHeaderValue(HttpHeaders.ACCEPT_LANGUAGE, headers.getFirst(HttpHeaders.ACCEPT_LANGUAGE), true);, +		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&, +				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {, +, +		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&, +				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {, +, +			HttpHeaders headers = new HttpHeaders();, +			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString());, +			setPreferredLocales(headers.getAcceptLanguageAsLocales());, +		}, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, +		if (locale != null) {, +			doAddHeaderValue(HttpHeaders.ACCEPT_LANGUAGE, locale.toLanguageTag(), true);, +		}, +		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name)) {, +			HttpHeaders headers = new HttpHeaders();, +			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString());, +			List<Locale> locales = headers.getAcceptLanguageAsLocales();, +			setLocale(locales.isEmpty() ? null : locales.get(0));, +			return true;, +		}, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +		updateAcceptLanguageHeader();, +		updateAcceptLanguageHeader();, +	}, +, +	private void updateAcceptLanguageHeader() {, +		HttpHeaders headers = new HttpHeaders();, +		headers.setAcceptLanguageAsLocales(this.locales);, +		doAddHeaderValue(HttpHeaders.ACCEPT_LANGUAGE, headers.getFirst(HttpHeaders.ACCEPT_LANGUAGE), true);, +		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&, +				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {, +, +		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&, +				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {, +, +			HttpHeaders headers = new HttpHeaders();, +			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString());, +			setPreferredLocales(headers.getAcceptLanguageAsLocales());, +		}, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java, +		if (locale != null) {, +			doAddHeaderValue(HttpHeaders.ACCEPT_LANGUAGE, locale.toLanguageTag(), true);, +		}, +		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name)) {, +			HttpHeaders headers = new HttpHeaders();, +			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString());, +			List<Locale> locales = headers.getAcceptLanguageAsLocales();, +			setLocale(locales.isEmpty() ? null : locales.get(0));, +			return true;, +		}, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/HtmlUnitRequestBuilder.java, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, +		updateAcceptLanguageHeader();, +		updateAcceptLanguageHeader();, +	}, +, +	private void updateAcceptLanguageHeader() {, +		HttpHeaders headers = new HttpHeaders();, +		headers.setAcceptLanguageAsLocales(this.locales);, +		doAddHeaderValue(HttpHeaders.ACCEPT_LANGUAGE, headers.getFirst(HttpHeaders.ACCEPT_LANGUAGE), true);, +		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&, +				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {, +, +		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&, +				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {, +, +			HttpHeaders headers = new HttpHeaders();, +			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString());, +			setPreferredLocales(headers.getAcceptLanguageAsLocales());, +		}, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java]