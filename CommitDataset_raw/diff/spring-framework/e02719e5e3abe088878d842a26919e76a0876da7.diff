[+++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +	 * <p>E.g.: servlet mapping = "/*"; request URI = "/test/a" -> "/test/a"., +	 * <p>E.g.: servlet mapping = "/"; request URI = "/test/a" -> "/test/a"., +		String sanitizedPathWithinApp = getSanitizedPath(pathWithinApp);, +		String path;, +, +		// if the app container sanitized the servletPath, check against the sanitized version, +		if(servletPath.indexOf(sanitizedPathWithinApp) != -1) {, +			path = getRemainingPath(sanitizedPathWithinApp, servletPath, false);, +		}, +		else {, +			path = getRemainingPath(pathWithinApp, servletPath, false);, +		}, +, +			else if (ignoreCase && (Character.toLowerCase(c1) == Character.toLowerCase(c2))) {, +		else if (index1 == requestUri.length()) {, +	 * Sanitize the given path with the following rules:, +	 * <ul>, +	 *     <li>replace all "//" by "/"</li>, +	 * </ul>, +	 */, +	private String getSanitizedPath(final String path) {, +		String sanitized = path;, +		while (true) {, +			int index = sanitized.indexOf("//");, +			if (index < 0) {, +				break;, +			}, +			else {, +				sanitized = sanitized.substring(0, index) + sanitized.substring(index + 1);, +			}, +		}, +		return sanitized;, +	}, +, +	/**, +++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java, +	 * <p>E.g.: servlet mapping = "/*"; request URI = "/test/a" -> "/test/a"., +	 * <p>E.g.: servlet mapping = "/"; request URI = "/test/a" -> "/test/a"., +		String sanitizedPathWithinApp = getSanitizedPath(pathWithinApp);, +		String path;, +, +		// if the app container sanitized the servletPath, check against the sanitized version, +		if(servletPath.indexOf(sanitizedPathWithinApp) != -1) {, +			path = getRemainingPath(sanitizedPathWithinApp, servletPath, false);, +		}, +		else {, +			path = getRemainingPath(pathWithinApp, servletPath, false);, +		}, +, +			else if (ignoreCase && (Character.toLowerCase(c1) == Character.toLowerCase(c2))) {, +		else if (index1 == requestUri.length()) {, +	 * Sanitize the given path with the following rules:, +	 * <ul>, +	 *     <li>replace all "//" by "/"</li>, +	 * </ul>, +	 */, +	private String getSanitizedPath(final String path) {, +		String sanitized = path;, +		while (true) {, +			int index = sanitized.indexOf("//");, +			if (index < 0) {, +				break;, +			}, +			else {, +				sanitized = sanitized.substring(0, index) + sanitized.substring(index + 1);, +			}, +		}, +		return sanitized;, +	}, +, +	/**, +++ b/spring-web/src/test/java/org/springframework/web/util/UrlPathHelperTests.java, + * Copyright 2002-2014 the original author or authors., +	@Test, +	public void alwaysUseFullPath() {, +		helper.setAlwaysUseFullPath(true);, +		request.setContextPath("/petclinic");, +		request.setServletPath("/main");, +		request.setRequestURI("/petclinic/main/welcome.html");, +, +		assertEquals("Incorrect path returned", "/main/welcome.html", helper.getLookupPathForRequest(request));, +	}, +, +	//SPR-12372, +	@Test, +	public void defaultServletEndingWithDoubleSlash() throws Exception {, +		request.setContextPath("/SPR-12372");, +		request.setPathInfo(null);, +		request.setServletPath("/foo/bar/");, +		request.setRequestURI("/SPR-12372/foo//bar/");, +, +		assertEquals("/foo//bar/", helper.getLookupPathForRequest(request));, +, +		request.setServletPath("/foo/bar/");, +		request.setRequestURI("/SPR-12372/foo/bar//");, +, +		assertEquals("/foo/bar//", helper.getLookupPathForRequest(request));, +, +		// "normal" case]