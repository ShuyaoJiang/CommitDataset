[+++ b/spring-web/src/main/java/org/springframework/web/util/WebUtils.java, +	 * @since 4.1.2, +	 * @since 4.1.2, +++ b/spring-web/src/main/java/org/springframework/web/util/WebUtils.java, +	 * @since 4.1.2, +	 * @since 4.1.2, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java, +, + * <p>The {@linkplain #setLocations "locations" property} takes a list of Spring {@link Resource}, + * locations from which static resources are allowed  to be served by this handler. For a given request,, + * the list of locations will be consulted in order for the presence of the requested resource, and the, + * allows resource requests to easily be mapped to locations other than the web application root., + * For example, resources could be served from a classpath location such as, + * "classpath:/META-INF/public-web-resources/", allowing convenient packaging and serving of resources, + * such as a JavaScript library from within jar files., + * resources upon deployment of new versions of the application, it is recommended that a version, + * string is used in the URL  mapping pattern that selects this handler. Such patterns can be easily, + * parameterized using Spring EL. See the reference manual for further examples of this approach., + * <p>For various front-end needs &mdash; such as ensuring that users with a primed browser cache, + * get the latest changes, or serving variations of resources (e.g., minified versions) &mdash;, + * {@link org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry}, + * or the {@code <mvc:resources/>} XML configuration element., +	 * <p>By default {@link PathResourceResolver} is configured. If using this property,, +	 * it is recommended to add {@link PathResourceResolver} as the last resolver., +		ResourceTransformerChain transformChain =, +				new DefaultResourceTransformerChain(resolveChain, getResourceTransformers());]