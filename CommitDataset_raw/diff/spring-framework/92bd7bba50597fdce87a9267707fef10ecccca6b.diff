[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java, +	/**, +	 * Create the user registry that provides access to the local users., +	 */, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java, +	/**, +	 * Create the user registry that provides access to the local users., +	 */, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java, +	@SuppressWarnings("deprecation"), +			org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry,, +		this.stompHandler.setUserSessionRegistry(userSessionRegistry);, +, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java, +	/**, +	 * Create the user registry that provides access to the local users., +	 */, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java, +	@SuppressWarnings("deprecation"), +			org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry,, +		this.stompHandler.setUserSessionRegistry(userSessionRegistry);, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebSocketMessageBrokerConfigurationSupport.java, +	@Override, +	@SuppressWarnings("deprecation"), +	protected SimpUserRegistry createLocalUserRegistry() {, +		org.springframework.messaging.simp.user.UserSessionRegistry sessionRegistry = userSessionRegistry();, +		if (sessionRegistry != null) {, +			return new UserSessionRegistryAdapter(sessionRegistry);, +		}, +		return new DefaultSimpUserRegistry();, +	}, +, +	@SuppressWarnings("deprecation"), +		WebMvcStompEndpointRegistry registry = new WebMvcStompEndpointRegistry(handler,, +				getTransportRegistration(), userSessionRegistry(), messageBrokerTaskScheduler());, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java, +	/**, +	 * Create the user registry that provides access to the local users., +	 */, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java, +	@SuppressWarnings("deprecation"), +			org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry,, +		this.stompHandler.setUserSessionRegistry(userSessionRegistry);, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebSocketMessageBrokerConfigurationSupport.java, +	@Override, +	@SuppressWarnings("deprecation"), +	protected SimpUserRegistry createLocalUserRegistry() {, +		org.springframework.messaging.simp.user.UserSessionRegistry sessionRegistry = userSessionRegistry();, +		if (sessionRegistry != null) {, +			return new UserSessionRegistryAdapter(sessionRegistry);, +		}, +		return new DefaultSimpUserRegistry();, +	}, +, +	@SuppressWarnings("deprecation"), +		WebMvcStompEndpointRegistry registry = new WebMvcStompEndpointRegistry(handler,, +				getTransportRegistration(), userSessionRegistry(), messageBrokerTaskScheduler());, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/DefaultSimpUserRegistry.java, + * Default, mutable, thread-safe implementation of {@link SimpUserRegistry} that, + * listens ApplicationContext events of type {@link AbstractSubProtocolEvent} to, + * keep track of user presence and subscription information., +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java, +	/**, +	 * Create the user registry that provides access to the local users., +	 */, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java, +	@SuppressWarnings("deprecation"), +			org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry,, +		this.stompHandler.setUserSessionRegistry(userSessionRegistry);, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebSocketMessageBrokerConfigurationSupport.java, +	@Override, +	@SuppressWarnings("deprecation"), +	protected SimpUserRegistry createLocalUserRegistry() {, +		org.springframework.messaging.simp.user.UserSessionRegistry sessionRegistry = userSessionRegistry();, +		if (sessionRegistry != null) {, +			return new UserSessionRegistryAdapter(sessionRegistry);, +		}, +		return new DefaultSimpUserRegistry();, +	}, +, +	@SuppressWarnings("deprecation"), +		WebMvcStompEndpointRegistry registry = new WebMvcStompEndpointRegistry(handler,, +				getTransportRegistration(), userSessionRegistry(), messageBrokerTaskScheduler());, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/DefaultSimpUserRegistry.java, + * Default, mutable, thread-safe implementation of {@link SimpUserRegistry} that, + * listens ApplicationContext events of type {@link AbstractSubProtocolEvent} to, + * keep track of user presence and subscription information., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/StompSubProtocolHandler.java, +import org.springframework.messaging.simp.user.DestinationUserNameProvider;, +	@SuppressWarnings("deprecation"), +	private org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry;, +, +, +	/**, +	 * Provide a registry with which to register active user session ids., +	 * @see org.springframework.messaging.simp.user.UserDestinationMessageHandler, +	 * @deprecated as of 4.2 in favor of {@link DefaultSimpUserRegistry} which relies]