[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/script/ScriptTemplateConfig.java, +, +import javax.script.Bindings;, +	 * Return the render function name (optional). If not specified, the script templates, +	 * will be evaluated with {@link ScriptEngine#eval(String, Bindings)}., +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/script/ScriptTemplateConfig.java, +, +import javax.script.Bindings;, +	 * Return the render function name (optional). If not specified, the script templates, +	 * will be evaluated with {@link ScriptEngine#eval(String, Bindings)}., +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/script/ScriptTemplateConfigurer.java, +, +import javax.script.Bindings;, +	 * Default constructor., +	 */, +	public ScriptTemplateConfigurer() {, +	}, +, +	/**, +	 * Create a new ScriptTemplateConfigurer using the given engine name., +	 */, +	public ScriptTemplateConfigurer(String engineName) {, +		this.engineName = engineName;, +	}, +, +, +	/**, +	 * If {@code renderFunction} is specified, the script engine must implement {@code Invocable}., +	 * If {@code renderFunction} is specified, the script engine must implement {@code Invocable}., +	 * Set the render function name (optional). If not specified, the script templates, +	 * will be evaluated with {@link ScriptEngine#eval(String, Bindings)}., +	 * <li>{@code RenderingContext context}: the rendering context (since 5.0)</li>, +	 * @see RenderingContext, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/script/ScriptTemplateConfig.java, +, +import javax.script.Bindings;, +	 * Return the render function name (optional). If not specified, the script templates, +	 * will be evaluated with {@link ScriptEngine#eval(String, Bindings)}., +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/script/ScriptTemplateConfigurer.java, +, +import javax.script.Bindings;, +	 * Default constructor., +	 */, +	public ScriptTemplateConfigurer() {, +	}, +, +	/**, +	 * Create a new ScriptTemplateConfigurer using the given engine name., +	 */, +	public ScriptTemplateConfigurer(String engineName) {, +		this.engineName = engineName;, +	}, +, +, +	/**, +	 * If {@code renderFunction} is specified, the script engine must implement {@code Invocable}., +	 * If {@code renderFunction} is specified, the script engine must implement {@code Invocable}., +	 * Set the render function name (optional). If not specified, the script templates, +	 * will be evaluated with {@link ScriptEngine#eval(String, Bindings)}., +	 * <li>{@code RenderingContext context}: the rendering context (since 5.0)</li>, +	 * @see RenderingContext, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/script/ScriptTemplateView.java, +import javax.script.SimpleBindings;, +		if (this.renderFunction != null && this.engine != null) {, +			Assert.isInstanceOf(Invocable.class, this.engine, "ScriptEngine must implement Invocable when 'renderFunction' is specified.");, +		}, +				if (this.renderFunction == null) {, +					SimpleBindings bindings = new SimpleBindings();, +					bindings.putAll(model);, +					model.put("renderingContext", context);, +					html = engine.eval(template, bindings);, +				}, +				else if (this.renderObject != null) {, +					html = ((Invocable)engine).invokeMethod(thiz, this.renderFunction, template, model, context);, +					html = ((Invocable)engine).invokeFunction(this.renderFunction, template, model, context);, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/script/ScriptTemplateConfig.java, +, +import javax.script.Bindings;, +	 * Return the render function name (optional). If not specified, the script templates, +	 * will be evaluated with {@link ScriptEngine#eval(String, Bindings)}., +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/script/ScriptTemplateConfigurer.java, +, +import javax.script.Bindings;, +	 * Default constructor., +	 */, +	public ScriptTemplateConfigurer() {, +	}, +, +	/**, +	 * Create a new ScriptTemplateConfigurer using the given engine name., +	 */, +	public ScriptTemplateConfigurer(String engineName) {, +		this.engineName = engineName;, +	}, +, +, +	/**, +	 * If {@code renderFunction} is specified, the script engine must implement {@code Invocable}., +	 * If {@code renderFunction} is specified, the script engine must implement {@code Invocable}., +	 * Set the render function name (optional). If not specified, the script templates]