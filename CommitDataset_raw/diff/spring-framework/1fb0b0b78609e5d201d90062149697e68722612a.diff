[+++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java, +import java.net.InetSocketAddress;, +import java.util.Optional;, +	private final InetSocketAddress remoteAddress;, +, +			InetSocketAddress remoteAddress,, +		this.remoteAddress = remoteAddress;, +	public Optional<InetSocketAddress> getRemoteAddress() {, +		return Optional.ofNullable(this.remoteAddress);, +	}, +, +	@Override, +		 * Set the remote address to return., +		 */, +		B remoteAddress(InetSocketAddress remoteAddress);, +, +		/**, +		private InetSocketAddress remoteAddress;, +, +		public BodyBuilder remoteAddress(InetSocketAddress remoteAddress) {, +			this.remoteAddress = remoteAddress;, +			return this;, +		}, +, +		@Override, +					this.headers, this.cookies, this.remoteAddress, body);, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java, +import java.net.InetSocketAddress;, +import java.util.Optional;, +	private final InetSocketAddress remoteAddress;, +, +			InetSocketAddress remoteAddress,, +		this.remoteAddress = remoteAddress;, +	public Optional<InetSocketAddress> getRemoteAddress() {, +		return Optional.ofNullable(this.remoteAddress);, +	}, +, +	@Override, +		 * Set the remote address to return., +		 */, +		B remoteAddress(InetSocketAddress remoteAddress);, +, +		/**, +		private InetSocketAddress remoteAddress;, +, +		public BodyBuilder remoteAddress(InetSocketAddress remoteAddress) {, +			this.remoteAddress = remoteAddress;, +			return this;, +		}, +, +		@Override, +					this.headers, this.cookies, this.remoteAddress, body);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpRequest.java, +import java.util.Optional;, +		String requestUri = channel.uri();, +		return (address != null ? getBaseUrl(address).resolve(requestUri) : URI.create(requestUri));, +	public Optional<InetSocketAddress> getRemoteAddress() {, +		return Optional.ofNullable(this.request.remoteAddress());, +	}, +, +	@Override, +++ b/spring-test/src/main/java/org/springframework/mock/http/server/reactive/MockServerHttpRequest.java, +import java.net.InetSocketAddress;, +import java.util.Optional;, +	private final InetSocketAddress remoteAddress;, +, +			InetSocketAddress remoteAddress,, +		this.remoteAddress = remoteAddress;, +	public Optional<InetSocketAddress> getRemoteAddress() {, +		return Optional.ofNullable(this.remoteAddress);, +	}, +, +	@Override, +		 * Set the remote address to return., +		 */, +		B remoteAddress(InetSocketAddress remoteAddress);, +, +		/**, +		private InetSocketAddress remoteAddress;, +, +		public BodyBuilder remoteAddress(InetSocketAddress remoteAddress) {, +			this.remoteAddress = remoteAddress;, +			return this;, +		}, +, +		@Override, +					this.headers, this.cookies, this.remoteAddress, body);, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpRequest.java, +import java.util.Optional;, +		String requestUri = channel.uri();, +		return (address != null ? getBaseUrl(address).resolve(requestUri) : URI.create(requestUri));, +	public Optional<InetSocketAddress> getRemoteAddress() {, +		return Optional.ofNullable(this.request.remoteAddress());, +	}, +, +	@Override, +++ b/spring-web/src/main/java/org/springframework/http/server/reactive/RxNettyHttpHandlerAdapter.java, +import java.net.InetSocketAddress;, +import java.net.SocketAddress;, +import io.netty.channel.Channel;]