[+++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, +			@Nullable UnaryOperator<String> encoder) {, +			String varName = getVariableName(match);, +			Object varValue = uriVariables.getValue(varName);, +			if (UriTemplateVariables.SKIP_VALUE.equals(varValue)) {, +			String formatted = getVariableValueAsString(varValue);, +			formatted = encoder != null ? encoder.apply(formatted) : Matcher.quoteReplacement(formatted);, +			matcher.appendReplacement(sb, formatted);, +++ b/spring-web/src/main/java/org/springframework/web/util/UriComponents.java, +			@Nullable UnaryOperator<String> encoder) {, +			String varName = getVariableName(match);, +			Object varValue = uriVariables.getValue(varName);, +			if (UriTemplateVariables.SKIP_VALUE.equals(varValue)) {, +			String formatted = getVariableValueAsString(varValue);, +			formatted = encoder != null ? encoder.apply(formatted) : Matcher.quoteReplacement(formatted);, +			matcher.appendReplacement(sb, formatted);, +++ b/spring-web/src/test/java/org/springframework/web/util/UriComponentsTests.java, +	@Test // SPR-17168, +	public void encodeAndExpandWithDollarSign() {, +		UriComponents uri = UriComponentsBuilder.fromPath("/path").queryParam("q", "{value}").encode().build();, +		assertEquals("/path?q=JavaClass%241.class", uri.expand("JavaClass$1.class").toString());, +	}, +]