[+++ b/spring-test/src/test/java/org/springframework/test/context/junit4/spr8849/Spr8849Tests.java, + * Copyright 2002-2015 the original author or authors., + * <p>By using a SpEL expression to generate a random {@code database-name}, + * for the embedded database (see {@code datasource-config.xml}), we ensure, + * that each {@code ApplicationContext} that imports the common configuration, + * will create an embedded database with a unique name., + * <p>To reproduce the problem mentioned in SPR-8849, delete the declaration, + * of the {@code database-name} attribute of the embedded database in, + * {@code datasource-config.xml} and run this <em>suite</em>., +++ b/spring-test/src/test/java/org/springframework/test/context/junit4/spr8849/Spr8849Tests.java, + * Copyright 2002-2015 the original author or authors., + * <p>By using a SpEL expression to generate a random {@code database-name}, + * for the embedded database (see {@code datasource-config.xml}), we ensure, + * that each {@code ApplicationContext} that imports the common configuration, + * will create an embedded database with a unique name., + * <p>To reproduce the problem mentioned in SPR-8849, delete the declaration, + * of the {@code database-name} attribute of the embedded database in, + * {@code datasource-config.xml} and run this <em>suite</em>., +++ b/spring-test/src/test/java/org/springframework/test/context/junit4/spr8849/TestClass1.java, + * Copyright 2002-2015 the original author or authors., +import javax.annotation.Resource;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.context.annotation.ImportResource;, +import static org.junit.Assert.*;, +, +	@Configuration, +	@ImportResource("classpath:/org/springframework/test/context/junit4/spr8849/datasource-config.xml"), +	static class Config {, +	}, +, +, +	@Resource, +	DataSource dataSource;, +		assertNotNull(dataSource);, +++ b/spring-test/src/test/java/org/springframework/test/context/junit4/spr8849/Spr8849Tests.java, + * Copyright 2002-2015 the original author or authors., + * <p>By using a SpEL expression to generate a random {@code database-name}, + * for the embedded database (see {@code datasource-config.xml}), we ensure, + * that each {@code ApplicationContext} that imports the common configuration, + * will create an embedded database with a unique name., + * <p>To reproduce the problem mentioned in SPR-8849, delete the declaration, + * of the {@code database-name} attribute of the embedded database in, + * {@code datasource-config.xml} and run this <em>suite</em>., +++ b/spring-test/src/test/java/org/springframework/test/context/junit4/spr8849/TestClass1.java, + * Copyright 2002-2015 the original author or authors., +import javax.annotation.Resource;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.context.annotation.ImportResource;, +import static org.junit.Assert.*;, +, +	@Configuration, +	@ImportResource("classpath:/org/springframework/test/context/junit4/spr8849/datasource-config.xml"), +	static class Config {, +	}, +, +, +	@Resource, +	DataSource dataSource;, +		assertNotNull(dataSource);, +++ b/spring-test/src/test/java/org/springframework/test/context/junit4/spr8849/TestClass2.java, + * Copyright 2002-2015 the original author or authors., +import javax.annotation.Resource;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.context.annotation.ImportResource;, +import static org.junit.Assert.*;, +, +	@Configuration, +	@ImportResource("classpath:/org/springframework/test/context/junit4/spr8849/datasource-config.xml"), +	static class Config {, +	}, +, +, +	@Resource, +		assertNotNull(dataSource);, +++ b/spring-test/src/test/java/org/springframework/test/context/junit4/spr8849/Spr8849Tests.java, + * Copyright 2002-2015 the original author or authors., + * <p>By using a SpEL expression to generate a random {@code database-name}, + * for the embedded database (see {@code datasource-config.xml}), we ensure, + * that each {@code ApplicationContext} that imports the common configuration, + * will create an embedded database with a unique name., + * <p>To reproduce the problem mentioned in SPR-8849, delete the declaration, + * of the {@code database-name} attribute of the embedded database in, + * {@code datasource-config.xml} and run this <em>suite</em>., +++ b/spring-test/src/test/java/org/springframework/test/context/junit4/spr8849/TestClass1.java, + * Copyright 2002-2015 the original author or authors., +import javax.annotation.Resource;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.context.annotation.ImportResource;, +import static org.junit.Assert.*;, +, +	@Configuration, +	@ImportResource("classpath:/org/springframework/test/context/junit4/spr8849/datasource-config.xml"), +	static class Config {, +	}, +, +, +	@Resource, +	DataSource dataSource;, +		assertNotNull(dataSource);, +++ b/spring-test/src/test/java/org/springframework/test/context/junit4/spr8849/TestClass2.java]