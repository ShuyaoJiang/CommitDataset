[+++ b/org.springframework.integration-tests/integration-tests.iml, +++ b/org.springframework.integration-tests/integration-tests.iml, +++ b/org.springframework.integration-tests/ivy.xml, +++ b/org.springframework.integration-tests/integration-tests.iml, +++ b/org.springframework.integration-tests/ivy.xml, +++ /dev/null, +++ b/org.springframework.integration-tests/integration-tests.iml, +++ b/org.springframework.integration-tests/ivy.xml, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.integration-tests/integration-tests.iml, +++ b/org.springframework.integration-tests/ivy.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.integration-tests/integration-tests.iml, +++ b/org.springframework.integration-tests/ivy.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.integration-tests/integration-tests.iml, +++ b/org.springframework.integration-tests/ivy.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.integration-tests/integration-tests.iml, +++ b/org.springframework.integration-tests/ivy.xml, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/org.springframework.orm/src/main/java/org/springframework/orm/hibernate3/AbstractSessionFactoryBean.java, +/*, + * Copyright 2002-2010 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.orm.hibernate3;, +, +import javax.sql.DataSource;, +, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +import org.hibernate.HibernateException;, +import org.hibernate.JDBCException;, +import org.hibernate.SessionFactory;, +, +import org.springframework.beans.factory.DisposableBean;, +import org.springframework.beans.factory.FactoryBean;, +import org.springframework.beans.factory.InitializingBean;, +import org.springframework.dao.DataAccessException;, +import org.springframework.dao.support.PersistenceExceptionTranslator;, +import org.springframework.jdbc.support.SQLExceptionTranslator;, +, +/**, + * Abstract {@link org.springframework.beans.factory.FactoryBean} that creates, + * a Hibernate {@link org.hibernate.SessionFactory} within a Spring application, + * context, providing general infrastructure not related to Hibernate's, + * specific configuration API., + *, + * <p>This class implements the, + * {@link org.springframework.dao.support.PersistenceExceptionTranslator}, + * interface, as autodetected by Spring's, + * {@link org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor},, + * for AOP-based translation of native exceptions to Spring DataAccessExceptions., + * Hence, the presence of e.g. LocalSessionFactoryBean automatically enables, + * a PersistenceExceptionTranslationPostProcessor to translate Hibernate exceptions., + *, + * <p>This class mainly serves as common base class for {@link LocalSessionFactoryBean}., + * For details on typical SessionFactory setup, see the LocalSessionFactoryBean javadoc., + *, + * @author Juergen Hoeller, + * @since 2.0, + * @see #setExposeTransactionAwareSessionFactory, + * @see org.hibernate.SessionFactory#getCurrentSession(), + * @see org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor, + */, +public abstract class AbstractSessionFactoryBean, +		implements FactoryBean<SessionFactory>, InitializingBean, DisposableBean, PersistenceExceptionTranslator {, +, +	/** Logger available to subclasses */, +	protected final Log logger = LogFactory.getLog(getClass());, +, +	private DataSource dataSource;, +]