[+++ b/spring-websocket/src/test/java/org/springframework/web/socket/AbstractWebSocketIntegrationTests.java, + * Copyright 2002-2015 the original author or authors., +, + * @author Sam Brannen, +		// Set ServletContext in WebApplicationContext after deployment but before, +		// starting the server., +		this.wac.setServletContext(this.server.getServletContext());, +		this.wac.refresh();, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/AbstractWebSocketIntegrationTests.java, + * Copyright 2002-2015 the original author or authors., +, + * @author Sam Brannen, +		// Set ServletContext in WebApplicationContext after deployment but before, +		// starting the server., +		this.wac.setServletContext(this.server.getServletContext());, +		this.wac.refresh();, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/JettyWebSocketTestServer.java, + * Copyright 2002-2015 the original author or authors., +, +import javax.servlet.ServletContext;, + * @author Sam Brannen, +	private ServletContextHandler contextHandler;, +, +	public void deployConfig(WebApplicationContext wac, Filter... filters) {, +		ServletHolder servletHolder = new ServletHolder(new DispatcherServlet(wac));, +		this.contextHandler = new ServletContextHandler();, +		this.contextHandler.addServlet(servletHolder, "/");, +			this.contextHandler.addFilter(new FilterHolder(filter), "/*", getDispatcherTypes());, +		this.jettyServer.setHandler(this.contextHandler);, +	public ServletContext getServletContext() {, +		return this.contextHandler.getServletContext();, +	}, +, +	@Override, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/AbstractWebSocketIntegrationTests.java, + * Copyright 2002-2015 the original author or authors., +, + * @author Sam Brannen, +		// Set ServletContext in WebApplicationContext after deployment but before, +		// starting the server., +		this.wac.setServletContext(this.server.getServletContext());, +		this.wac.refresh();, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/JettyWebSocketTestServer.java, + * Copyright 2002-2015 the original author or authors., +, +import javax.servlet.ServletContext;, + * @author Sam Brannen, +	private ServletContextHandler contextHandler;, +, +	public void deployConfig(WebApplicationContext wac, Filter... filters) {, +		ServletHolder servletHolder = new ServletHolder(new DispatcherServlet(wac));, +		this.contextHandler = new ServletContextHandler();, +		this.contextHandler.addServlet(servletHolder, "/");, +			this.contextHandler.addFilter(new FilterHolder(filter), "/*", getDispatcherTypes());, +		this.jettyServer.setHandler(this.contextHandler);, +	public ServletContext getServletContext() {, +		return this.contextHandler.getServletContext();, +	}, +, +	@Override, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/TomcatWebSocketTestServer.java, +import javax.servlet.ServletContext;, + * @author Sam Brannen, +	public ServletContext getServletContext() {, +		return this.context.getServletContext();, +	}, +, +	@Override, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/AbstractWebSocketIntegrationTests.java, + * Copyright 2002-2015 the original author or authors., +, + * @author Sam Brannen, +		// Set ServletContext in WebApplicationContext after deployment but before, +		// starting the server., +		this.wac.setServletContext(this.server.getServletContext());, +		this.wac.refresh();, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/JettyWebSocketTestServer.java, + * Copyright 2002-2015 the original author or authors., +, +import javax.servlet.ServletContext;, + * @author Sam Brannen, +	private ServletContextHandler contextHandler;, +, +	public void deployConfig(WebApplicationContext wac, Filter... filters) {, +		ServletHolder servletHolder = new ServletHolder(new DispatcherServlet(wac));, +		this.contextHandler = new ServletContextHandler();, +		this.contextHandler.addServlet(servletHolder, "/");, +			this.contextHandler.addFilter(new FilterHolder(filter), "/*", getDispatcherTypes());, +		this.jettyServer.setHandler(this.contextHandler);, +	public ServletContext getServletContext() {, +		return this.contextHandler.getServletContext();, +	}, +, +	@Override, +++ b/spring-websocket/src/test/java/org/springframework/web/socket/TomcatWebSocketTestServer.java, +import javax.servlet.ServletContext;, + * @author Sam Brannen, +	public ServletContext getServletContext() {, +		return this.context.getServletContext();, +	}]