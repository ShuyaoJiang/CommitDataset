[+++ b/spring-core/src/main/java/org/springframework/util/NumberUtils.java, + * <p>Mainly for internal use within the framework; consider Apache's, + * Commons Lang for a more comprehensive suite of number utilities., +					number.getClass().getName() + "] to unsupported target class [" + targetClass.getName() + "]");, +	 * Raise an <em>overflow</em> exception for the given number and target class., +	 * @throws IllegalArgumentException, +	 * Parse the given {@code text} into a {@link Number} instance of the given, +	 * target class, using the corresponding {@code decode} / {@code valueOf} method., +	 * <p>Supports numbers in hex format (with leading "0x", "0X", or "#") as well., +	 * Parse the given {@code text} into a {@link Number} instance of the, +	 * given target class, using the supplied {@link NumberFormat}., +	 * <p>Trims the input {@code String} before attempting to parse the number., +	 * @param numberFormat the {@code NumberFormat} to use for parsing (if, +	 * {@code null}, this method falls back to {@link #parseNumber(String, Class)}), +	 * Determine whether the given {@code value} String indicates a hex number,, +	 * i.e. needs to be passed into {@code Integer.decode} instead of, +	 * {@code Integer.valueOf}, etc., +	 * Decode a {@link java.math.BigInteger} from the supplied {@link String} value., +	 * <p>Supports decimal, hex, and octal notation.]