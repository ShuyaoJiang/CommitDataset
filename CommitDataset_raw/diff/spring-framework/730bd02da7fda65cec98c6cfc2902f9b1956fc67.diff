[+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java, +	 * Return the configured {@link ConversionService}., +	 * Return the PathMatcher implementation to use for matching destinations., +	 * Return the configured Validator instance., +		MessageMapping messageAnnotation = AnnotationUtils.findAnnotation(method, MessageMapping.class);, +		if (messageAnnotation != null) {, +			SimpMessageMappingInfo result = createMessageMappingCondition(messageAnnotation);, +		SubscribeMapping subscribeAnnotation = AnnotationUtils.findAnnotation(method, SubscribeMapping.class);, +		if (subscribeAnnotation != null) {, +			SimpMessageMappingInfo result = createSubscribeCondition(subscribeAnnotation);, +++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java, +	 * Return the configured {@link ConversionService}., +	 * Return the PathMatcher implementation to use for matching destinations., +	 * Return the configured Validator instance., +		MessageMapping messageAnnotation = AnnotationUtils.findAnnotation(method, MessageMapping.class);, +		if (messageAnnotation != null) {, +			SimpMessageMappingInfo result = createMessageMappingCondition(messageAnnotation);, +		SubscribeMapping subscribeAnnotation = AnnotationUtils.findAnnotation(method, SubscribeMapping.class);, +		if (subscribeAnnotation != null) {, +			SimpMessageMappingInfo result = createSubscribeCondition(subscribeAnnotation);, +++ b/spring-web/src/main/java/org/springframework/web/util/WebUtils.java]