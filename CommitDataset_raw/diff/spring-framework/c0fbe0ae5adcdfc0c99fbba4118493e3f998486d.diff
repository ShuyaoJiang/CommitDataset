[+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/EmbeddedDatabaseBeanDefinitionParser.java, +	/**, +	 * Constant for the "generate-name" attribute., +	 */, +	static final String GENERATE_NAME_ATTRIBUTE = "generate-name";, +, +		setGenerateUniqueDatabaseNameFlag(element, builder);, +	private void setGenerateUniqueDatabaseNameFlag(Element element, BeanDefinitionBuilder builder) {, +		String generateName = element.getAttribute(GENERATE_NAME_ATTRIBUTE);, +		if (StringUtils.hasText(generateName)) {, +			builder.addPropertyValue("generateUniqueDatabaseName", generateName);, +		}, +	}, +, +		// else, let EmbeddedDatabaseFactory use the default "testdb" name, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/EmbeddedDatabaseBeanDefinitionParser.java, +	/**, +	 * Constant for the "generate-name" attribute., +	 */, +	static final String GENERATE_NAME_ATTRIBUTE = "generate-name";, +, +		setGenerateUniqueDatabaseNameFlag(element, builder);, +	private void setGenerateUniqueDatabaseNameFlag(Element element, BeanDefinitionBuilder builder) {, +		String generateName = element.getAttribute(GENERATE_NAME_ATTRIBUTE);, +		if (StringUtils.hasText(generateName)) {, +			builder.addPropertyValue("generateUniqueDatabaseName", generateName);, +		}, +	}, +, +		// else, let EmbeddedDatabaseFactory use the default "testdb" name, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabase.java, + * Copyright 2002-2015 the original author or authors., + * shut down gracefully., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/EmbeddedDatabaseBeanDefinitionParser.java, +	/**, +	 * Constant for the "generate-name" attribute., +	 */, +	static final String GENERATE_NAME_ATTRIBUTE = "generate-name";, +, +		setGenerateUniqueDatabaseNameFlag(element, builder);, +	private void setGenerateUniqueDatabaseNameFlag(Element element, BeanDefinitionBuilder builder) {, +		String generateName = element.getAttribute(GENERATE_NAME_ATTRIBUTE);, +		if (StringUtils.hasText(generateName)) {, +			builder.addPropertyValue("generateUniqueDatabaseName", generateName);, +		}, +	}, +, +		// else, let EmbeddedDatabaseFactory use the default "testdb" name, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabase.java, + * Copyright 2002-2015 the original author or authors., + * shut down gracefully., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.java, + * Copyright 2002-2015 the original author or authors., +	 * Specify whether a unique ID should be generated and used as the database name., +	 * <p>If the configuration for this builder is reused across multiple, +	 * application contexts within a single JVM, this flag should be <em>enabled</em>, +	 * (i.e., set to {@code true}) in order to ensure that each application context, +	 * gets its own embedded database., +	 * <p>Enabling this flag overrides any explicit name set via {@link #setName}., +	 * @param flag {@code true} if a unique database name should be generated, +	 * @return {@code this}, to facilitate method chaining, +	 * @see #setName, +	 * @since 4.2, +	 */, +	public EmbeddedDatabaseBuilder generateUniqueName(boolean flag) {, +		this.databaseFactory.setGenerateUniqueDatabaseName(flag);, +		return this;, +	}, +, +	/**, +	 * <p>Will be overridden if the {@code generateUniqueName} flag has been, +	 * set to {@code true}., +	 * @see #generateUniqueName, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/config/EmbeddedDatabaseBeanDefinitionParser.java, +	/**, +	 * Constant for the "generate-name" attribute., +	 */, +	static final String GENERATE_NAME_ATTRIBUTE = "generate-name";, +, +		setGenerateUniqueDatabaseNameFlag(element, builder);, +	private void setGenerateUniqueDatabaseNameFlag(Element element, BeanDefinitionBuilder builder) {, +		String generateName = element.getAttribute(GENERATE_NAME_ATTRIBUTE);, +		if (StringUtils.hasText(generateName)) {, +			builder.addPropertyValue("generateUniqueDatabaseName", generateName);, +		}, +	}, +, +		// else, let EmbeddedDatabaseFactory use the default "testdb" name, +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabase.java, + * Copyright 2002-2015 the original author or authors., + * shut down gracefully., +++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.java, + * Copyright 2002-2015 the original author or authors., +	 * Specify whether a unique ID should be generated and used as the database name., +	 * <p>If the configuration for this builder is reused across multiple, +	 * application contexts within a single JVM, this flag should be <em>enabled</em>, +	 * (i.e., set to {@code true}) in order to ensure that each application context, +	 * gets its own embedded database., +	 * <p>Enabling this flag overrides any explicit name set via {@link #setName}., +	 * @param flag {@code true} if a unique database name should be generated]