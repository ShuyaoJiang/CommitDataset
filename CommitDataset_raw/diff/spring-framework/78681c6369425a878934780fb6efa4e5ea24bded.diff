[+++ b/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiServiceExporter.java, + * Copyright 2002-2018 the original author or authors., +import java.lang.reflect.InvocationTargetException;, +import java.lang.reflect.Method;, +import org.springframework.lang.Nullable;, +import org.springframework.util.ReflectionUtils;, +	@Nullable, +	private static Method exportObject;, +, +	@Nullable, +	private static Method unexportObject;, +, +	static {, +		try {, +			Class<?> portableRemoteObject =, +					JndiRmiServiceExporter.class.getClassLoader().loadClass("javax.rmi.PortableRemoteObject");, +			exportObject = portableRemoteObject.getMethod("exportObject", Remote.class);, +			unexportObject = portableRemoteObject.getMethod("unexportObject", Remote.class);, +		}, +		catch (Throwable ex) {, +			// java.corba module not available on JDK 9+, +			exportObject = null;, +			unexportObject = null;, +		}, +	}, +, +, +		invokePortableRemoteObject(exportObject);, +	public void destroy() throws NamingException, RemoteException {, +		invokePortableRemoteObject(unexportObject);, +	}, +, +, +	private void invokePortableRemoteObject(@Nullable Method method) throws RemoteException {, +		if (method != null) {, +			try {, +				method.invoke(null, this.exportedObject);, +			}, +			catch (InvocationTargetException ex) {, +				Throwable targetEx = ex.getTargetException();, +				if (targetEx instanceof RemoteException) {, +					throw (RemoteException) targetEx;, +				}, +				ReflectionUtils.rethrowRuntimeException(targetEx);, +			}, +			catch (Throwable ex) {, +				throw new IllegalStateException("PortableRemoteObject invocation failed", ex);, +			}, +		}]