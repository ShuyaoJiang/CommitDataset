[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java, +import javax.servlet.http.HttpServletResponseWrapper;, +, +		// Use response wrapper for Servlet 2.5 compatibility where, +		// the getHeader() method does not exist, +		super.doOptions(request, new HttpServletResponseWrapper(response) {, +			@Override, +			public void setHeader(String name, String value) {, +				if("Allow".equals(name)) {, +					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name();, +				}, +				super.setHeader(name, value);, +			}, +		});, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java, +import javax.servlet.http.HttpServletResponseWrapper;, +, +		// Use response wrapper for Servlet 2.5 compatibility where, +		// the getHeader() method does not exist, +		super.doOptions(request, new HttpServletResponseWrapper(response) {, +			@Override, +			public void setHeader(String name, String value) {, +				if("Allow".equals(name)) {, +					value = (StringUtils.hasLength(value) ? value + ", " : "") + RequestMethod.PATCH.name();, +				}, +				super.setHeader(name, value);, +			}, +		});, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/DispatcherServletTests.java, +import static org.mockito.Matchers.*;, +import static org.mockito.Mockito.*;, +		MockHttpServletResponse response = spy(new MockHttpServletResponse());, +		verify(response, never()).getHeader(anyString()); // SPR-10341]