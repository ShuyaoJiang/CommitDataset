[+++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/DirtiesContext.java, +@Retention(RetentionPolicy.RUNTIME), +@Target( { ElementType.TYPE, ElementType.METHOD }), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/DirtiesContext.java, +@Retention(RetentionPolicy.RUNTIME), +@Target( { ElementType.TYPE, ElementType.METHOD }), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/ExpectedException.java, + * Copyright 2002-2009 the original author or authors., +@Retention(RetentionPolicy.RUNTIME), +@Target(ElementType.METHOD), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/DirtiesContext.java, +@Retention(RetentionPolicy.RUNTIME), +@Target( { ElementType.TYPE, ElementType.METHOD }), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/ExpectedException.java, + * Copyright 2002-2009 the original author or authors., +@Retention(RetentionPolicy.RUNTIME), +@Target(ElementType.METHOD), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/IfProfileValue.java, +@Inherited, +@Retention(RetentionPolicy.RUNTIME), +@Target( { ElementType.TYPE, ElementType.METHOD }), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/DirtiesContext.java, +@Retention(RetentionPolicy.RUNTIME), +@Target( { ElementType.TYPE, ElementType.METHOD }), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/ExpectedException.java, + * Copyright 2002-2009 the original author or authors., +@Retention(RetentionPolicy.RUNTIME), +@Target(ElementType.METHOD), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/IfProfileValue.java, +@Inherited, +@Retention(RetentionPolicy.RUNTIME), +@Target( { ElementType.TYPE, ElementType.METHOD }), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/NotTransactional.java, +@Retention(RetentionPolicy.RUNTIME), +@Target(ElementType.METHOD), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/DirtiesContext.java, +@Retention(RetentionPolicy.RUNTIME), +@Target( { ElementType.TYPE, ElementType.METHOD }), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/ExpectedException.java, + * Copyright 2002-2009 the original author or authors., +@Retention(RetentionPolicy.RUNTIME), +@Target(ElementType.METHOD), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/IfProfileValue.java, +@Inherited, +@Retention(RetentionPolicy.RUNTIME), +@Target( { ElementType.TYPE, ElementType.METHOD }), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/NotTransactional.java, +@Retention(RetentionPolicy.RUNTIME), +@Target(ElementType.METHOD), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/ProfileValueSourceConfiguration.java, + * Copyright 2002-2009 the original author or authors., + * <em>profile values</em> configured via the {@link IfProfileValue, + * &#064;IfProfileValue} annotation., +@Documented, +@Inherited, +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/DirtiesContext.java, +@Retention(RetentionPolicy.RUNTIME), +@Target( { ElementType.TYPE, ElementType.METHOD }), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/ExpectedException.java, + * Copyright 2002-2009 the original author or authors., +@Retention(RetentionPolicy.RUNTIME), +@Target(ElementType.METHOD), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/IfProfileValue.java, +@Inherited, +@Retention(RetentionPolicy.RUNTIME), +@Target( { ElementType.TYPE, ElementType.METHOD }), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/NotTransactional.java, +@Retention(RetentionPolicy.RUNTIME), +@Target(ElementType.METHOD), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/ProfileValueSourceConfiguration.java, + * Copyright 2002-2009 the original author or authors., + * <em>profile values</em> configured via the {@link IfProfileValue, + * &#064;IfProfileValue} annotation., +@Documented, +@Inherited, +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/Repeat.java, + * Copyright 2002-2009 the original author or authors., + * test method itself as well as any <em>set up</em> or <em>tear down</em> of, + * the test fixture., +@Retention(RetentionPolicy.RUNTIME), +@Target(ElementType.METHOD), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/DirtiesContext.java, +@Retention(RetentionPolicy.RUNTIME), +@Target( { ElementType.TYPE, ElementType.METHOD }), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/ExpectedException.java, + * Copyright 2002-2009 the original author or authors., +@Retention(RetentionPolicy.RUNTIME), +@Target(ElementType.METHOD), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/IfProfileValue.java, +@Inherited, +@Retention(RetentionPolicy.RUNTIME), +@Target( { ElementType.TYPE, ElementType.METHOD }), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/NotTransactional.java, +@Retention(RetentionPolicy.RUNTIME), +@Target(ElementType.METHOD), +++ b/org.springframework.test/src/main/java/org/springframework/test/annotation/ProfileValueSourceConfiguration.java, + * Copyright 2002-2009 the original author or authors., + * <em>profile values</em> configured via the {@link IfProfileValue, + * &#064;IfProfileValue} annotation., +@Documented]