[+++ b/build.gradle, +		optional("joda-time:joda-time:2.2"), +++ b/build.gradle, +		optional("joda-time:joda-time:2.2"), +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/JodaDateTimeFormatAnnotationFormatterFactory.java, + * <p><b>NOTE:</b> Spring's Joda-Time support requires Joda-Time 2.x, as of Spring 4.0., + *, +	public Parser<?> getParser(DateTimeFormat annotation, Class<?> fieldType) {, +		if (LocalDate.class.equals(fieldType)) {, +			return new LocalDateParser(getFormatter(annotation, fieldType));, +		}, +		else if (LocalTime.class.equals(fieldType)) {, +			return new LocalTimeParser(getFormatter(annotation, fieldType));, +		}, +		else if (LocalDateTime.class.equals(fieldType)) {, +			return new LocalDateTimeParser(getFormatter(annotation, fieldType));, +		}, +		else {, +	}, +++ b/build.gradle, +		optional("joda-time:joda-time:2.2"), +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/JodaDateTimeFormatAnnotationFormatterFactory.java, + * <p><b>NOTE:</b> Spring's Joda-Time support requires Joda-Time 2.x, as of Spring 4.0., + *, +	public Parser<?> getParser(DateTimeFormat annotation, Class<?> fieldType) {, +		if (LocalDate.class.equals(fieldType)) {, +			return new LocalDateParser(getFormatter(annotation, fieldType));, +		}, +		else if (LocalTime.class.equals(fieldType)) {, +			return new LocalTimeParser(getFormatter(annotation, fieldType));, +		}, +		else if (LocalDateTime.class.equals(fieldType)) {, +			return new LocalDateTimeParser(getFormatter(annotation, fieldType));, +		}, +		else {, +	}, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.java, + * <p><b>NOTE:</b> Spring's Joda-Time support requires Joda-Time 2.x, as of Spring 4.0., + *, +				new LocalDateParser(dateFormatter),, +				new LocalTimeParser(timeFormatter),, +				new LocalDateTimeParser(dateTimeFormatter),, +++ b/build.gradle, +		optional("joda-time:joda-time:2.2"), +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/JodaDateTimeFormatAnnotationFormatterFactory.java, + * <p><b>NOTE:</b> Spring's Joda-Time support requires Joda-Time 2.x, as of Spring 4.0., + *, +	public Parser<?> getParser(DateTimeFormat annotation, Class<?> fieldType) {, +		if (LocalDate.class.equals(fieldType)) {, +			return new LocalDateParser(getFormatter(annotation, fieldType));, +		}, +		else if (LocalTime.class.equals(fieldType)) {, +			return new LocalTimeParser(getFormatter(annotation, fieldType));, +		}, +		else if (LocalDateTime.class.equals(fieldType)) {, +			return new LocalDateTimeParser(getFormatter(annotation, fieldType));, +		}, +		else {, +	}, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.java, + * <p><b>NOTE:</b> Spring's Joda-Time support requires Joda-Time 2.x, as of Spring 4.0., + *, +				new LocalDateParser(dateFormatter),, +				new LocalTimeParser(timeFormatter),, +				new LocalDateTimeParser(dateTimeFormatter),, +++ b/spring-context/src/main/java/org/springframework/format/datetime/joda/LocalDateParser.java, +/*, + * Copyright 2002-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.format.datetime.joda;, +, +import java.text.ParseException;, +import java.util.Locale;, +, +import org.joda.time.LocalDate;, +import org.joda.time.format.DateTimeFormatter;, +, +import org.springframework.format.Parser;, +, +/**, + * Parses Joda {@link org.joda.time.LocalDate} instances using a {@link org.joda.time.format.DateTimeFormatter}., + *, + * @author Juergen Hoeller, + * @since 4.0, + */, +public final class LocalDateParser implements Parser<LocalDate> {, +]