[+++ b/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2JsonDecoder.java, +		Flux<TokenBuffer> tokens = tokenize(input, true);, +		Flux<TokenBuffer> tokens = tokenize(input, false);, +		return decodeInternal(tokens, elementType, mimeType, hints).singleOrEmpty();, +	}, +, +	private Flux<TokenBuffer> tokenize(Publisher<DataBuffer> input, boolean tokenizeArrayElements) {, +		try {, +			JsonFactory factory = objectMapper().getFactory();, +			JsonParser nonBlockingParser = factory.createNonBlockingByteArrayParser();, +			Jackson2Tokenizer tokenizer = new Jackson2Tokenizer(nonBlockingParser,, +					tokenizeArrayElements);, +			return Flux.from(input), +		}, +		catch (IOException ex) {, +			return Flux.error(new UncheckedIOException(ex));, +		}, +		return tokens.map(tokenBuffer -> {, +				return reader.readValue(tokenBuffer.asParser());, +				throw new CodecException("Type definition error: " + ex.getType(), ex);, +				throw new DecodingException("JSON decoding error: " + ex.getOriginalMessage(), ex);, +				throw new DecodingException("I/O error while parsing input stream", ex);]