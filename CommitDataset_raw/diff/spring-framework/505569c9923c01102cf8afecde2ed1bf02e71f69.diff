[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/HttpMessageConverterView.java, +import org.springframework.core.codec.Encoder;, +import org.springframework.http.converter.reactive.CodecHttpMessageConverter;, +	/**, +	 * Create a {@code View} with the given {@code Encoder}., +	 * Internally this creates, +	 * {@link CodecHttpMessageConverter#CodecHttpMessageConverter(Encoder), +	 * CodecHttpMessageConverter(Encoder)}., +	 */, +	public HttpMessageConverterView(Encoder<?> encoder) {, +		this(new CodecHttpMessageConverter<>(encoder));, +	}, +, +	/**, +	 * Create a View that delegates to the given message converter., +	 */, +	/**, +	 * Return the configured message converter., +	 */, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/HttpMessageConverterView.java, +import org.springframework.core.codec.Encoder;, +import org.springframework.http.converter.reactive.CodecHttpMessageConverter;, +	/**, +	 * Create a {@code View} with the given {@code Encoder}., +	 * Internally this creates, +	 * {@link CodecHttpMessageConverter#CodecHttpMessageConverter(Encoder), +	 * CodecHttpMessageConverter(Encoder)}., +	 */, +	public HttpMessageConverterView(Encoder<?> encoder) {, +		this(new CodecHttpMessageConverter<>(encoder));, +	}, +, +	/**, +	 * Create a View that delegates to the given message converter., +	 */, +	/**, +	 * Return the configured message converter., +	 */, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/DispatcherHandlerErrorTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertThat;, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/result/view/HttpMessageConverterView.java, +import org.springframework.core.codec.Encoder;, +import org.springframework.http.converter.reactive.CodecHttpMessageConverter;, +	/**, +	 * Create a {@code View} with the given {@code Encoder}., +	 * Internally this creates, +	 * {@link CodecHttpMessageConverter#CodecHttpMessageConverter(Encoder), +	 * CodecHttpMessageConverter(Encoder)}., +	 */, +	public HttpMessageConverterView(Encoder<?> encoder) {, +		this(new CodecHttpMessageConverter<>(encoder));, +	}, +, +	/**, +	 * Create a View that delegates to the given message converter., +	 */, +	/**, +	 * Return the configured message converter., +	 */, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/DispatcherHandlerErrorTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertThat;, +++ b/spring-web-reactive/src/test/java/org/springframework/web/reactive/result/view/HttpMessageConverterViewTests.java, +		this.view = new HttpMessageConverterView(new JacksonJsonEncoder());, +		HttpMessageConverterView view = new HttpMessageConverterView(new StringEncoder());, +		HttpMessageConverterView view = new HttpMessageConverterView(new Jaxb2Encoder());]