[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		List<String> beanNames;, +			beanNames = new ArrayList<String>(this.beanDefinitionNames);, +		}, +		}, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		List<String> beanNames;, +			beanNames = new ArrayList<String>(this.beanDefinitionNames);, +		}, +		}, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java, +		String[] disposableBeanNames;, +			disposableBeanNames = StringUtils.toStringArray(this.disposableBeans.keySet());, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		List<String> beanNames;, +			beanNames = new ArrayList<String>(this.beanDefinitionNames);, +		}, +		}, +		}, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java, +		String[] disposableBeanNames;, +			disposableBeanNames = StringUtils.toStringArray(this.disposableBeans.keySet());, +		}, +++ b/spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java, + * Copyright 2002-2012 the original author or authors., +		synchronized (this.defaultRetriever) {, +	}, +			Set<ApplicationListener> listeners;, +			Set<String> listenerBeans;, +				listeners = new LinkedHashSet<ApplicationListener>(this.defaultRetriever.applicationListeners);, +				listenerBeans = new LinkedHashSet<String>(this.defaultRetriever.applicationListenerBeans);, +			}, +			for (ApplicationListener listener : listeners) {, +			if (!listenerBeans.isEmpty()) {, +				for (String listenerBeanName : listenerBeans) {]