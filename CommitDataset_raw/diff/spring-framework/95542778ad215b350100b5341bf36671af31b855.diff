[+++ b/spring-web/src/test/java/org/springframework/http/codec/multipart/MultipartHttpMessageWriterTests.java, +import org.junit.Before;, +import org.springframework.core.io.buffer.AbstractDataBufferAllocatingTestCase;, +public class MultipartHttpMessageWriterTests extends AbstractDataBufferAllocatingTestCase {, +	private MockServerHttpResponse response;, +, +, +	@Before, +	public void setUp() {, +		this.response = new MockServerHttpResponse(this.bufferFactory);, +	}, +, +		this.writer.write(result, null, MediaType.MULTIPART_FORM_DATA, this.response, hints).block(Duration.ofSeconds(5));, +		MultiValueMap<String, Part> requestParts = parse(hints);, +		this.writer.write(result, null, MediaType.MULTIPART_FORM_DATA, this.response, hints).block();, +		MultiValueMap<String, Part> requestParts = parse(hints);, +		this.writer.write(result, null, MediaType.MULTIPART_FORM_DATA, this.response, hints).block();, +		this.writer.write(Mono.just(multipartData), null, MediaType.MULTIPART_FORM_DATA,, +				this.response, hints).block();, +		MultiValueMap<String, Part> requestParts = parse(hints);, +	private MultiValueMap<String, Part> parse(Map<String, Object> hints) {, +		MediaType contentType = this.response.getHeaders().getContentType();, +				.body(this.response.getBody());, +			return this.bar;]