[+++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java, + * Copyright 2002-2015 the original author or authors., +	 * Copy constructor: Create a new LinkedMultiValueMap with the same mappings as, +	 * the specified Map. Note that this will be a shallow copy; its value-holding, +	 * List entries will get reused and therefore cannot get modified independently., +	 * @see #clone(), +	 * @see #deepCopy(), +		for (Entry<K, List<V>> entry : this.targetMap.entrySet()) {, +	public void putAll(Map<? extends K, ? extends List<V>> map) {, +		this.targetMap.putAll(map);, +	/**, +	 * Create a regular copy of this Map., +	 * @return a shallow copy of this Map, reusing this Map's value-holding List entries, +	 * @since 4.2, +	 * @see LinkedMultiValueMap#LinkedMultiValueMap(Map), +	 * @see #deepCopy(), +	 */, +	@Override, +	public LinkedMultiValueMap<K, V> clone() {, +		return new LinkedMultiValueMap<K, V>(this);, +	}, +, +	/**, +	 * Create a deep copy of this Map., +	 * @return a copy of this Map, including a copy of each value-holding List entry, +	 * @since 4.2, +	 * @see #clone(), +	 */, +	public LinkedMultiValueMap<K, V> deepCopy() {, +		LinkedMultiValueMap<K, V> copy = new LinkedMultiValueMap<K, V>(this.targetMap.size());, +		for (Map.Entry<K, List<V>> entry : this.targetMap.entrySet()) {, +			copy.put(entry.getKey(), new LinkedList<V>(entry.getValue()));, +		}, +		return copy;, +	}, +, +]