[+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, + * @author Sam Brannen, +			String[] resources = importResource.getAliasedStringArray("locations", ImportResource.class, sourceClass);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, + * @author Sam Brannen, +			String[] resources = importResource.getAliasedStringArray("locations", ImportResource.class, sourceClass);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ImportResource.java, +import org.springframework.core.annotation.AliasFor;, + * {@link org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader GroovyBeanDefinitionReader}, + * if ending in {@code ".groovy"}; otherwise, an, + * {@link org.springframework.beans.factory.xml.XmlBeanDefinitionReader XmlBeanDefinitionReader}, +	 * Alias for {@link #locations}., +	 * @see #locations, +	@AliasFor(attribute = "locations"), +	String[] value() default {};, +	 * Resource locations from which to import., +	 * <p>Supports resource-loading prefixes such as {@code classpath:},, +	 * {@code file:}, etc., +	 * <p>Consult the Javadoc for {@link #reader} for details on how resources, +	 * will be processed., +	 * @since 4.2, +	 * @see #value, +	 * @see #reader, +	 */, +	@AliasFor(attribute = "value"), +	String[] locations() default {};, +, +	/**, +	 * {@link BeanDefinitionReader} implementation to use when processing, +	 * resources specified via the {@link #value} attribute., +	 * {@link org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader GroovyBeanDefinitionReader};, +	 * {@link org.springframework.beans.factory.xml.XmlBeanDefinitionReader XmlBeanDefinitionReader}., +++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java, + * @author Sam Brannen, +			String[] resources = importResource.getAliasedStringArray("locations", ImportResource.class, sourceClass);, +++ b/spring-context/src/main/java/org/springframework/context/annotation/ImportResource.java, +import org.springframework.core.annotation.AliasFor;, + * {@link org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader GroovyBeanDefinitionReader}, + * if ending in {@code ".groovy"}; otherwise, an, + * {@link org.springframework.beans.factory.xml.XmlBeanDefinitionReader XmlBeanDefinitionReader}, +	 * Alias for {@link #locations}., +	 * @see #locations, +	@AliasFor(attribute = "locations"), +	String[] value() default {};, +	 * Resource locations from which to import., +	 * <p>Supports resource-loading prefixes such as {@code classpath:},, +	 * {@code file:}, etc., +	 * <p>Consult the Javadoc for {@link #reader} for details on how resources, +	 * will be processed., +	 * @since 4.2, +	 * @see #value, +	 * @see #reader, +	 */, +	@AliasFor(attribute = "value"), +	String[] locations() default {};, +, +	/**, +	 * {@link BeanDefinitionReader} implementation to use when processing, +	 * resources specified via the {@link #value} attribute., +	 * {@link org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader GroovyBeanDefinitionReader};, +	 * {@link org.springframework.beans.factory.xml.XmlBeanDefinitionReader XmlBeanDefinitionReader}., +++ b/spring-context/src/test/java/org/springframework/context/annotation/configuration/ImportResourceTests.java, + * Copyright 2002-2015 the original author or authors., +, + * @author Sam Brannen, +		ctx.close();, +		ctx.close();, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext(, +			ImportXmlByConventionConfig.class);, +		ctx.close();, +		ctx.close();, +		ctx.close();, +		ctx.close();, +		ctx.close();, +		ctx.close();, +		ctx.close();, +		ctx.close();, +		ctx.close();, +	@ImportResource("classpath:org/springframework/context/annotation/configuration/ImportXmlConfig-context.xml"), +	@ImportResource(locations = "classpath:org/springframework/context/annotation/configuration/ImportNonXmlResourceConfig-context.properties", reader = PropertiesBeanDefinitionReader.class), +	@ImportResource(locations = "classpath:org/springframework/context/annotation/configuration/ImportXmlConfig-context.xml", reader = XmlBeanDefinitionReader.class)]