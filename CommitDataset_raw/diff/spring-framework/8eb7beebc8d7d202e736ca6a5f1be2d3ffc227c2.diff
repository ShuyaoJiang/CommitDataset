[+++ b/spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +		AnnotationAwareOrderComparator.sort(allListeners);, +			AnnotationAwareOrderComparator.sort(allListeners);, +++ b/spring-context/src/main/java/org/springframework/context/event/AbstractApplicationEventMulticaster.java, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +		AnnotationAwareOrderComparator.sort(allListeners);, +			AnnotationAwareOrderComparator.sort(allListeners);, +++ b/spring-context/src/test/java/org/springframework/context/event/ApplicationContextEventTests.java, +import org.springframework.core.annotation.Order;, +	public void orderedListenersWithAnnotation() {, +		MyOrderedListener3 listener1 = new MyOrderedListener3();, +		MyOrderedListener4 listener2 = new MyOrderedListener4(listener1);, +, +		SimpleApplicationEventMulticaster smc = new SimpleApplicationEventMulticaster();, +		smc.addApplicationListener(listener2);, +		smc.addApplicationListener(listener1);, +, +		smc.multicastEvent(new MyEvent(this));, +		smc.multicastEvent(new MyOtherEvent(this));, +	}, +, +	@Test, +	@Order(5), +	public static class MyOrderedListener3 implements ApplicationListener<ApplicationEvent> {, +, +		public final Set<ApplicationEvent> seenEvents = new HashSet<ApplicationEvent>();, +, +		@Override, +		public void onApplicationEvent(ApplicationEvent event) {, +			this.seenEvents.add(event);, +		}, +, +	}, +, +	@Order(50), +	public static class MyOrderedListener4 implements ApplicationListener<MyEvent> {, +, +		private final MyOrderedListener3 otherListener;, +, +		public MyOrderedListener4(MyOrderedListener3 otherListener) {, +			this.otherListener = otherListener;, +		}, +, +		@Override, +		public void onApplicationEvent(MyEvent event) {, +			assertTrue(otherListener.seenEvents.contains(event));, +		}, +	}, +]