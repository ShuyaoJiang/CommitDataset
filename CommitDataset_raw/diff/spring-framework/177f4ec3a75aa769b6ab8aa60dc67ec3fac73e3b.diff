[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractAliasAwareAnnotationAttributeExtractor.java, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractAliasAwareAnnotationAttributeExtractor.java, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributes.java, +	private final Class<? extends Annotation> annotationType;, +		this.annotationType = getAnnotationType(annotationType, classLoader);, +		this.displayName = annotationType;, +	}, +, +	@SuppressWarnings("unchecked"), +	private static Class<? extends Annotation> getAnnotationType(String annotationType, ClassLoader classLoader) {, +				return (Class<? extends Annotation>) classLoader.loadClass(annotationType);, +		return null;, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractAliasAwareAnnotationAttributeExtractor.java, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributes.java, +	private final Class<? extends Annotation> annotationType;, +		this.annotationType = getAnnotationType(annotationType, classLoader);, +		this.displayName = annotationType;, +	}, +, +	@SuppressWarnings("unchecked"), +	private static Class<? extends Annotation> getAnnotationType(String annotationType, ClassLoader classLoader) {, +				return (Class<? extends Annotation>) classLoader.loadClass(annotationType);, +		return null;, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +		Class<? extends Annotation> annotationType = attributes.annotationType();, +			for (Method annotationAttribute : getAttributeMethods(annotationType)) {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AbstractAliasAwareAnnotationAttributeExtractor.java, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationAttributes.java, +	private final Class<? extends Annotation> annotationType;, +		this.annotationType = getAnnotationType(annotationType, classLoader);, +		this.displayName = annotationType;, +	}, +, +	@SuppressWarnings("unchecked"), +	private static Class<? extends Annotation> getAnnotationType(String annotationType, ClassLoader classLoader) {, +				return (Class<? extends Annotation>) classLoader.loadClass(annotationType);, +		return null;, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +		Class<? extends Annotation> annotationType = attributes.annotationType();, +			for (Method annotationAttribute : getAttributeMethods(annotationType)) {, +++ b/spring-core/src/main/java/org/springframework/core/annotation/DefaultAnnotationAttributeExtractor.java, + * Copyright 2002-2016 the original author or authors.]