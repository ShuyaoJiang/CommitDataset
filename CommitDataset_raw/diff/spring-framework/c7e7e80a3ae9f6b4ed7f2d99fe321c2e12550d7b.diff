[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/View.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.http.MediaType;, +, +	 * The {@link MediaType} selected during content negotiation, which may be, +	 * more specific than the one the View is configured with. For example:, +	 * "application/vnd.example-v1+xml" vs "application/*+xml"., +	 */, +	String SELECTED_CONTENT_TYPE = View.class.getName() + ".selectedContentType";, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/View.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.http.MediaType;, +, +	 * The {@link MediaType} selected during content negotiation, which may be, +	 * more specific than the one the View is configured with. For example:, +	 * "application/vnd.example-v1+xml" vs "application/*+xml"., +	 */, +	String SELECTED_CONTENT_TYPE = View.class.getName() + ".selectedContentType";, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/AbstractView.java, + * Copyright 2002-2012 the original author or authors., +, +import org.springframework.http.MediaType;, +	/**, +	 * Set the content type of the response to the configured, +	 * {@link #setContentType(String) content type} unless the, +	 * {@link View#SELECTED_CONTENT_TYPE} request attribute is present and set, +	 * to a concrete media type., +	 */, +	protected void setResponseContentType(HttpServletRequest request, HttpServletResponse response) {, +		MediaType mediaType = (MediaType) request.getAttribute(View.SELECTED_CONTENT_TYPE);, +		if (mediaType != null && mediaType.isConcrete()) {, +			response.setContentType(mediaType.toString());, +		}, +		else {, +			response.setContentType(getContentType());, +		}, +	}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/View.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.http.MediaType;, +, +	 * The {@link MediaType} selected during content negotiation, which may be, +	 * more specific than the one the View is configured with. For example:, +	 * "application/vnd.example-v1+xml" vs "application/*+xml"., +	 */, +	String SELECTED_CONTENT_TYPE = View.class.getName() + ".selectedContentType";, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/AbstractView.java, + * Copyright 2002-2012 the original author or authors., +, +import org.springframework.http.MediaType;, +	/**, +	 * Set the content type of the response to the configured, +	 * {@link #setContentType(String) content type} unless the, +	 * {@link View#SELECTED_CONTENT_TYPE} request attribute is present and set, +	 * to a concrete media type., +	 */, +	protected void setResponseContentType(HttpServletRequest request, HttpServletResponse response) {, +		MediaType mediaType = (MediaType) request.getAttribute(View.SELECTED_CONTENT_TYPE);, +		if (mediaType != null && mediaType.isConcrete()) {, +			response.setContentType(mediaType.toString());, +		}, +		else {, +			response.setContentType(getContentType());, +		}, +	}, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java, +			View bestView = getBestView(candidateViews, requestedMediaTypes, attrs);, +	private View getBestView(List<View> candidateViews, List<MediaType> requestedMediaTypes, RequestAttributes attrs) {, +					if (mediaType.isCompatibleWith(candidateContentType)) {, +						attrs.setAttribute(View.SELECTED_CONTENT_TYPE, mediaType, RequestAttributes.SCOPE_REQUEST);, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/View.java, + * Copyright 2002-2012 the original author or authors., +import org.springframework.http.MediaType;, +, +	 * The {@link MediaType} selected during content negotiation, which may be, +	 * more specific than the one the View is configured with. For example:, +	 * "application/vnd.example-v1+xml" vs "application/*+xml"., +	 */, +	String SELECTED_CONTENT_TYPE = View.class.getName() + ".selectedContentType";, +, +	/**, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/AbstractView.java, + * Copyright 2002-2012 the original author or authors., +, +import org.springframework.http.MediaType;, +	/**, +	 * Set the content type of the response to the configured, +	 * {@link #setContentType(String) content type} unless the, +	 * {@link View#SELECTED_CONTENT_TYPE} request attribute is present and set, +	 * to a concrete media type., +	 */, +	protected void setResponseContentType(HttpServletRequest request, HttpServletResponse response) {, +		MediaType mediaType = (MediaType) request.getAttribute(View.SELECTED_CONTENT_TYPE);, +		if (mediaType != null && mediaType.isConcrete()) {]