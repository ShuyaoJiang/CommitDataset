[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/InstantiationStrategy.java, + * Copyright 2002-2010 the original author or authors., +	Object instantiate(RootBeanDefinition beanDefinition, String beanName, BeanFactory owner), +			throws BeansException;, +	Object instantiate(RootBeanDefinition beanDefinition, String beanName, BeanFactory owner,, +			Constructor<?> ctor, Object[] args) throws BeansException;, +	Object instantiate(RootBeanDefinition beanDefinition, String beanName, BeanFactory owner,, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/InstantiationStrategy.java, + * Copyright 2002-2010 the original author or authors., +	Object instantiate(RootBeanDefinition beanDefinition, String beanName, BeanFactory owner), +			throws BeansException;, +	Object instantiate(RootBeanDefinition beanDefinition, String beanName, BeanFactory owner,, +			Constructor<?> ctor, Object[] args) throws BeansException;, +	Object instantiate(RootBeanDefinition beanDefinition, String beanName, BeanFactory owner,, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/support/SimpleInstantiationStrategy.java, + * Copyright 2002-2010 the original author or authors., +	public Object instantiate(RootBeanDefinition beanDefinition, String beanName, BeanFactory owner) {, +			Constructor<?> constructorToUse = (Constructor<?>) beanDefinition.resolvedConstructorOrFactoryMethod;, +					}, +					else {, +	public Object instantiate(RootBeanDefinition beanDefinition, String beanName, BeanFactory owner,, +			final Constructor<?> ctor, Object[] args) {, +	protected Object instantiateWithMethodInjection(RootBeanDefinition beanDefinition,, +			String beanName, BeanFactory owner, Constructor ctor, Object[] args) {, +	public Object instantiate(RootBeanDefinition beanDefinition, String beanName, BeanFactory owner,, +]