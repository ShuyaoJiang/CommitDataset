[+++ b/build.gradle, +		optional("io.undertow:undertow-core:1.0.0.Beta31"), +		optional("io.undertow:undertow-servlet:1.0.0.Beta31") {, +			exclude group: "org.jboss.spec.javax.servlet", module: "jboss-servlet-api_3.1_spec", +		}, +		optional("io.undertow:undertow-websockets-jsr:1.0.0.Beta31") {, +			exclude group: "org.jboss.spec.javax.websocket", module: "jboss-websocket-api_1.0_spec", +		}, +++ b/build.gradle, +		optional("io.undertow:undertow-core:1.0.0.Beta31"), +		optional("io.undertow:undertow-servlet:1.0.0.Beta31") {, +			exclude group: "org.jboss.spec.javax.servlet", module: "jboss-servlet-api_3.1_spec", +		}, +		optional("io.undertow:undertow-websockets-jsr:1.0.0.Beta31") {, +			exclude group: "org.jboss.spec.javax.websocket", module: "jboss-websocket-api_1.0_spec", +		}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractStandardUpgradeStrategy.java, +import javax.servlet.http.HttpServletResponse;, +import org.springframework.http.server.ServletServerHttpResponse;, +	protected final HttpServletResponse getHttpServletResponse(ServerHttpResponse response) {, +		Assert.isTrue(response instanceof ServletServerHttpResponse);, +		return ((ServletServerHttpResponse) response).getServletResponse();, +	}, +, +	protected final HttpServletRequest getHttpServletRequest(ServerHttpRequest request) {, +		Assert.isTrue(request instanceof ServletServerHttpRequest);, +		return ((ServletServerHttpRequest) request).getServletRequest();, +	}, +, +++ b/build.gradle, +		optional("io.undertow:undertow-core:1.0.0.Beta31"), +		optional("io.undertow:undertow-servlet:1.0.0.Beta31") {, +			exclude group: "org.jboss.spec.javax.servlet", module: "jboss-servlet-api_3.1_spec", +		}, +		optional("io.undertow:undertow-websockets-jsr:1.0.0.Beta31") {, +			exclude group: "org.jboss.spec.javax.websocket", module: "jboss-websocket-api_1.0_spec", +		}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractStandardUpgradeStrategy.java, +import javax.servlet.http.HttpServletResponse;, +import org.springframework.http.server.ServletServerHttpResponse;, +	protected final HttpServletResponse getHttpServletResponse(ServerHttpResponse response) {, +		Assert.isTrue(response instanceof ServletServerHttpResponse);, +		return ((ServletServerHttpResponse) response).getServletResponse();, +	}, +, +	protected final HttpServletRequest getHttpServletRequest(ServerHttpRequest request) {, +		Assert.isTrue(request instanceof ServletServerHttpRequest);, +		return ((ServletServerHttpRequest) request).getServletRequest();, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/GlassFishRequestUpgradeStrategy.java, + * Copyright 2002-2014 the original author or authors., +		HttpServletRequest servletRequest = getHttpServletRequest(request);, +		HttpServletResponse servletResponse = getHttpServletResponse(response);, +++ b/build.gradle, +		optional("io.undertow:undertow-core:1.0.0.Beta31"), +		optional("io.undertow:undertow-servlet:1.0.0.Beta31") {, +			exclude group: "org.jboss.spec.javax.servlet", module: "jboss-servlet-api_3.1_spec", +		}, +		optional("io.undertow:undertow-websockets-jsr:1.0.0.Beta31") {, +			exclude group: "org.jboss.spec.javax.websocket", module: "jboss-websocket-api_1.0_spec", +		}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractStandardUpgradeStrategy.java, +import javax.servlet.http.HttpServletResponse;, +import org.springframework.http.server.ServletServerHttpResponse;, +	protected final HttpServletResponse getHttpServletResponse(ServerHttpResponse response) {, +		Assert.isTrue(response instanceof ServletServerHttpResponse);, +		return ((ServletServerHttpResponse) response).getServletResponse();, +	}, +, +	protected final HttpServletRequest getHttpServletRequest(ServerHttpRequest request) {, +		Assert.isTrue(request instanceof ServletServerHttpRequest);, +		return ((ServletServerHttpRequest) request).getServletRequest();, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/GlassFishRequestUpgradeStrategy.java, + * Copyright 2002-2014 the original author or authors., +		HttpServletRequest servletRequest = getHttpServletRequest(request);, +		HttpServletResponse servletResponse = getHttpServletResponse(response);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/TomcatRequestUpgradeStrategy.java, + * Copyright 2002-2014 the original author or authors., +		HttpServletRequest servletRequest = getHttpServletRequest(request);, +		HttpServletResponse servletResponse = getHttpServletResponse(response);, +++ b/build.gradle, +		optional("io.undertow:undertow-core:1.0.0.Beta31"), +		optional("io.undertow:undertow-servlet:1.0.0.Beta31") {, +			exclude group: "org.jboss.spec.javax.servlet", module: "jboss-servlet-api_3.1_spec", +		}, +		optional("io.undertow:undertow-websockets-jsr:1.0.0.Beta31") {, +			exclude group: "org.jboss.spec.javax.websocket", module: "jboss-websocket-api_1.0_spec", +		}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractStandardUpgradeStrategy.java, +import javax.servlet.http.HttpServletResponse;, +import org.springframework.http.server.ServletServerHttpResponse;, +	protected final HttpServletResponse getHttpServletResponse(ServerHttpResponse response) {, +		Assert.isTrue(response instanceof ServletServerHttpResponse);, +		return ((ServletServerHttpResponse) response).getServletResponse();, +	}, +, +	protected final HttpServletRequest getHttpServletRequest(ServerHttpRequest request) {]