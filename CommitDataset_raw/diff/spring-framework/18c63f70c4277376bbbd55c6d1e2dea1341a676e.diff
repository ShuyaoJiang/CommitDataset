[+++ b/org.springframework.context/src/main/java/org/springframework/format/support/FormattingConversionService.java, +				public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +					return (sourceType.getAnnotation(annotationType) != null);, +				public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +					return (targetType.getAnnotation(annotationType) != null);, +++ b/org.springframework.context/src/main/java/org/springframework/format/support/FormattingConversionService.java, +				public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +					return (sourceType.getAnnotation(annotationType) != null);, +				public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {, +					return (targetType.getAnnotation(annotationType) != null);, +++ b/org.springframework.core/src/main/java/org/springframework/core/convert/support/ConversionServiceFactory.java, + * A factory for common ConversionService configurations., +	public static GenericConversionService createDefaultConversionService() {]