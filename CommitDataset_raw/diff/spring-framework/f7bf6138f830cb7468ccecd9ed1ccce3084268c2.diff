[+++ b/org.springframework.web/src/main/java/org/springframework/web/client/RestTemplate.java, +		return execute(url, HttpMethod.GET, new GetCallback<T>(supportedMessageConverters),, +		return execute(url, HttpMethod.GET, new GetCallback<T>(supportedMessageConverters),, +		private final List<HttpMessageConverter<T>> messageConverters;, +		private GetCallback(List<HttpMessageConverter<T>> messageConverters) {, +			this.messageConverters = messageConverters;, +			for (HttpMessageConverter<?> entityConverter : messageConverters) {, +++ b/org.springframework.web/src/main/java/org/springframework/web/client/RestTemplate.java, +		return execute(url, HttpMethod.GET, new GetCallback<T>(supportedMessageConverters),, +		return execute(url, HttpMethod.GET, new GetCallback<T>(supportedMessageConverters),, +		private final List<HttpMessageConverter<T>> messageConverters;, +		private GetCallback(List<HttpMessageConverter<T>> messageConverters) {, +			this.messageConverters = messageConverters;, +			for (HttpMessageConverter<?> entityConverter : messageConverters) {, +++ b/org.springframework.web/src/test/java/org/springframework/web/client/RestTemplateTests.java, +		expect(converter.supports(String.class)).andReturn(true).times(2);, +		assertEquals("Invalid Accept header", textPlain.toString(), requestHeaders.getFirst("Accept"));, +		expect(converter.supports(String.class)).andReturn(true).times(2);]