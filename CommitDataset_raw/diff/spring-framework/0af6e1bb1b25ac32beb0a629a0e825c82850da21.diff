[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java, + * @author Juergen Hoeller, +	/**, +	 * Bean name prefix for target beans behind scoped proxies. Used to exclude those, +	 * targets from handler method detection, in favor of the corresponding proxies., +	 * <p>We're not checking the autowire-candidate status here, which is how the, +	 * proxy target filtering problem is being handled at the autowiring level,, +	 * since autowire-candidate may have been turned to {@code false} for other, +	 * reasons, while still expecting the bean to be eligible for handler methods., +	 * <p>Originally defined in {@link org.springframework.aop.scope.ScopedProxyUtils}, +	 * but duplicated here to avoid a hard dependency on the spring-aop module., +	 */, +	private static final String SCOPED_TARGET_NAME_PREFIX = "scopedTarget.";, +, +, +			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX) &&, +					isHandler(getApplicationContext().getType(beanName))){, +		// Avoid repeated calls to getMappingForMethod which would rebuild RequestMappingInfo instances, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java, + * @author Juergen Hoeller, +	/**, +	 * Bean name prefix for target beans behind scoped proxies. Used to exclude those, +	 * targets from handler method detection, in favor of the corresponding proxies., +	 * <p>We're not checking the autowire-candidate status here, which is how the, +	 * proxy target filtering problem is being handled at the autowiring level,, +	 * since autowire-candidate may have been turned to {@code false} for other, +	 * reasons, while still expecting the bean to be eligible for handler methods., +	 * <p>Originally defined in {@link org.springframework.aop.scope.ScopedProxyUtils}, +	 * but duplicated here to avoid a hard dependency on the spring-aop module., +	 */, +	private static final String SCOPED_TARGET_NAME_PREFIX = "scopedTarget.";, +, +, +			if (!beanName.startsWith(SCOPED_TARGET_NAME_PREFIX) &&, +					isHandler(getApplicationContext().getType(beanName))){, +		// Avoid repeated calls to getMappingForMethod which would rebuild RequestMappingInfo instances, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupportTests.java, + * Copyright 2002-2014 the original author or authors., +, +import org.springframework.context.annotation.Scope;, +import org.springframework.context.annotation.ScopedProxyMode;, +import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;, + * @author Juergen Hoeller, +		cxt.register(TestConfig.class, ScopedController.class, ScopedProxyController.class);, +, +		assertNotNull(chain);, +, +		chain = handlerMapping.getHandler(new MockHttpServletRequest("GET", "/scoped"));, +		assertNotNull(chain);, +, +		chain = handlerMapping.getHandler(new MockHttpServletRequest("GET", "/scopedProxy"));, +		assertNotNull(chain);, +		@Bean(name="/testController"), +, +	public static class TestController {, +, +	@Controller, +	@Scope("prototype"), +	public static class ScopedController {, +, +		@RequestMapping("/scoped"), +		public void handle() {, +		}, +	}, +, +, +	@Controller, +	@Scope(value="prototype", proxyMode=ScopedProxyMode.TARGET_CLASS), +	public static class ScopedProxyController {, +, +		@RequestMapping("/scopedProxy"), +		public void handle() {, +		}, +	}, +]