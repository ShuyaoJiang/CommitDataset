[+++ b/org.springframework.core/src/main/java/org/springframework/util/AntPathMatcher.java, +		else if (!pattern1.contains("{") && match(pattern1, pattern2)) {, +++ b/org.springframework.core/src/main/java/org/springframework/util/AntPathMatcher.java, +		else if (!pattern1.contains("{") && match(pattern1, pattern2)) {, +++ b/org.springframework.core/src/test/java/org/springframework/util/AntPathMatcherTests.java, +		assertEquals("/*.html", pathMatcher.combine("/**", "/*.html"));, +		assertEquals("/*.html", pathMatcher.combine("/*", "/*.html"));, +		assertEquals("/{foo}/bar", pathMatcher.combine("/{foo}", "/bar"));, +++ b/org.springframework.core/src/main/java/org/springframework/util/AntPathMatcher.java, +		else if (!pattern1.contains("{") && match(pattern1, pattern2)) {, +++ b/org.springframework.core/src/test/java/org/springframework/util/AntPathMatcherTests.java, +		assertEquals("/*.html", pathMatcher.combine("/**", "/*.html"));, +		assertEquals("/*.html", pathMatcher.combine("/*", "/*.html"));, +		assertEquals("/{foo}/bar", pathMatcher.combine("/{foo}", "/bar"));, +++ b/org.springframework.web.servlet/src/test/java/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtilsTests.java, +		request.addHeader("Accept-Encoding", "gzip");, +		String[] headers1 = new String[]{"Accept-Encoding!=gzip"};, +		String[] headers2 = new String[]{"Accept-Encoding=gzip"};, +		assertFalse(ServletAnnotationMappingUtils.checkHeaders(headers1, request));, +		assertTrue(ServletAnnotationMappingUtils.checkHeaders(headers2, request));]