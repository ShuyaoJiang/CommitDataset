[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketSession.java, + * Copyright 2002-2015 the original author or authors., +	 * <p>On the server side the map can be populated initially through a, +	 * {@link org.springframework.web.socket.server.HandshakeInterceptor, +	 * HandshakeInterceptor}. On the client side the map can be populated via, +	 * {@link org.springframework.web.socket.client.WebSocketClient, +	 * WebSocketClient} handshake methods., +	 * @return a Map with the session attributes, never {@code null}., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketSession.java, + * Copyright 2002-2015 the original author or authors., +	 * <p>On the server side the map can be populated initially through a, +	 * {@link org.springframework.web.socket.server.HandshakeInterceptor, +	 * HandshakeInterceptor}. On the client side the map can be populated via, +	 * {@link org.springframework.web.socket.client.WebSocketClient, +	 * WebSocketClient} handshake methods., +	 * @return a Map with the session attributes, never {@code null}., +++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/WebSocketTransportHandler.java, + * Copyright 2002-2015 the original author or authors., +	public AbstractSockJsSession createSession(String id, WebSocketHandler handler, Map<String, Object> attrs) {, +		return new WebSocketServerSockJsSession(id, getServiceConfig(), handler, attrs);, +			this.handshakeHandler.doHandshake(request, response, wsHandler, sockJsSession.getAttributes());]