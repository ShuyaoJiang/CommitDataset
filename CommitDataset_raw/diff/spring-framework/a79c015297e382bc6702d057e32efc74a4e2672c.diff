[+++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/HandlerExecutionChain.java, + * Copyright 2002-2010 the original author or authors., +		if (this.handler == null) {, +			return "HandlerExecutionChain with no handler";, +		}, +		StringBuilder sb = new StringBuilder();, +		sb.append("HandlerExecutionChain with handler [").append(this.handler).append("]");, +		if (!CollectionUtils.isEmpty(this.interceptorList)) {, +			sb.append(" and ").append(this.interceptorList.size()).append(" interceptor");, +			if (this.interceptorList.size() > 1) {, +				sb.append("s");, +			}, +		}, +		return sb.toString();, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/HandlerExecutionChain.java, + * Copyright 2002-2010 the original author or authors., +		if (this.handler == null) {, +			return "HandlerExecutionChain with no handler";, +		}, +		StringBuilder sb = new StringBuilder();, +		sb.append("HandlerExecutionChain with handler [").append(this.handler).append("]");, +		if (!CollectionUtils.isEmpty(this.interceptorList)) {, +			sb.append(" and ").append(this.interceptorList.size()).append(" interceptor");, +			if (this.interceptorList.size() > 1) {, +				sb.append("s");, +			}, +		}, +		return sb.toString();, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java, +			logger.debug("Mapping [" + lookupPath + "] to " + handler);, +						"Cannot map " + getHandlerDescription(handler) + " to URL path [" + urlPath +, +						"]: There is already " + getHandlerDescription(mappedHandler) + " mapped.");, +					logger.info("Root mapping to " + getHandlerDescription(handler));, +					logger.info("Default mapping to " + getHandlerDescription(handler));, +					logger.info("Mapped URL path [" + urlPath + "] onto " + getHandlerDescription(handler));, +	private String getHandlerDescription(Object handler) {, +		return "handler " + (handler instanceof String ? "'" + handler + "'" : "of type [" + handler.getClass() + "]");, +	}, +]