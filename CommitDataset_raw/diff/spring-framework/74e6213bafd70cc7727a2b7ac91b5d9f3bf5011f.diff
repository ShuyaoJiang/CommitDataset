[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/MethodOverrides.java, + * Copyright 2002-2015 the original author or authors., +import java.util.LinkedHashSet;, +	private final Set<MethodOverride> overrides = new LinkedHashSet<MethodOverride>(0);, +		MethodOverride match = null;, +		for (MethodOverride candidate : this.overrides) {, +			if (candidate.matches(method)) {, +				match = candidate;, +		return match;, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/MethodOverrides.java, + * Copyright 2002-2015 the original author or authors., +import java.util.LinkedHashSet;, +	private final Set<MethodOverride> overrides = new LinkedHashSet<MethodOverride>(0);, +		MethodOverride match = null;, +		for (MethodOverride candidate : this.overrides) {, +			if (candidate.matches(method)) {, +				match = candidate;, +		return match;, +, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/support/LookupMethodTests.java, + * Copyright 2002-2015 the original author or authors., +	@Test, +	public void testWithOverriddenLookupMethod() {, +		AbstractBean bean = (AbstractBean) beanFactory.getBean("extendedBean");, +		assertNotNull(bean);, +		TestBean expected = bean.getOneArgument("haha");, +		assertEquals(TestBean.class, expected.getClass());, +		assertEquals("haha", expected.getName());, +		assertTrue(expected.isJedi());, +	}, +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/MethodOverrides.java, + * Copyright 2002-2015 the original author or authors., +import java.util.LinkedHashSet;, +	private final Set<MethodOverride> overrides = new LinkedHashSet<MethodOverride>(0);, +		MethodOverride match = null;, +		for (MethodOverride candidate : this.overrides) {, +			if (candidate.matches(method)) {, +				match = candidate;, +		return match;, +, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/support/LookupMethodTests.java, + * Copyright 2002-2015 the original author or authors., +	@Test, +	public void testWithOverriddenLookupMethod() {, +		AbstractBean bean = (AbstractBean) beanFactory.getBean("extendedBean");, +		assertNotNull(bean);, +		TestBean expected = bean.getOneArgument("haha");, +		assertEquals(TestBean.class, expected.getClass());, +		assertEquals("haha", expected.getName());, +		assertTrue(expected.isJedi());, +	}, +, +++ b/spring-beans/src/test/resources/org/springframework/beans/factory/support/lookupMethodTests.xml, +	<bean id="extendedBean" parent="abstractBean">, +		<lookup-method name="getOneArgument" bean="jedi"/>, +	</bean>, +, +	<bean id="jedi" class="org.springframework.tests.sample.beans.TestBean" scope="prototype" autowire-candidate="false">, +		<property name="jedi" value="true"/>, +	</bean>, +]