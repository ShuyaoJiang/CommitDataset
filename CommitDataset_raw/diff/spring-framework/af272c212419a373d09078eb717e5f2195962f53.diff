[+++ b/spring-web/src/main/java/org/springframework/http/HttpEntity.java, + * Copyright 2002-2015 the original author or authors., + * <p>Typically used in combination with the {@link org.springframework.web.client.RestTemplate},, + * like so:, + * @author Juergen Hoeller, +, +		if (other == null || !other.getClass().equals(getClass())) {, +++ b/spring-web/src/main/java/org/springframework/http/HttpEntity.java, + * Copyright 2002-2015 the original author or authors., + * <p>Typically used in combination with the {@link org.springframework.web.client.RestTemplate},, + * like so:, + * @author Juergen Hoeller, +, +		if (other == null || !other.getClass().equals(getClass())) {, +++ b/spring-web/src/main/java/org/springframework/http/RequestEntity.java, + * Copyright 2002-2015 the original author or authors., +		if (!super.equals(other)) {, +++ b/spring-web/src/main/java/org/springframework/http/HttpEntity.java, + * Copyright 2002-2015 the original author or authors., + * <p>Typically used in combination with the {@link org.springframework.web.client.RestTemplate},, + * like so:, + * @author Juergen Hoeller, +, +		if (other == null || !other.getClass().equals(getClass())) {, +++ b/spring-web/src/main/java/org/springframework/http/RequestEntity.java, + * Copyright 2002-2015 the original author or authors., +		if (!super.equals(other)) {, +++ b/spring-web/src/main/java/org/springframework/http/ResponseEntity.java, +, +		if (!super.equals(other)) {, +++ b/spring-web/src/main/java/org/springframework/http/HttpEntity.java, + * Copyright 2002-2015 the original author or authors., + * <p>Typically used in combination with the {@link org.springframework.web.client.RestTemplate},, + * like so:, + * @author Juergen Hoeller, +, +		if (other == null || !other.getClass().equals(getClass())) {, +++ b/spring-web/src/main/java/org/springframework/http/RequestEntity.java, + * Copyright 2002-2015 the original author or authors., +		if (!super.equals(other)) {, +++ b/spring-web/src/main/java/org/springframework/http/ResponseEntity.java, +, +		if (!super.equals(other)) {, +++ b/spring-web/src/test/java/org/springframework/http/HttpEntityTests.java, + * Copyright 2002-2015 the original author or authors., +import java.net.URI;, +, +		HttpEntity<String> httpEntity = new HttpEntity<String>(body, headers);, +		ResponseEntity<String> responseEntity = new ResponseEntity<String>(body, headers, HttpStatus.OK);, +		ResponseEntity<String> responseEntity2 = new ResponseEntity<String>(body, headers, HttpStatus.OK);, +		assertEquals(body, responseEntity.getBody());, +		assertEquals(MediaType.TEXT_PLAIN, responseEntity.getHeaders().getContentType());, +		assertEquals("text/plain", responseEntity.getHeaders().getFirst("Content-Type"));, +		assertEquals("text/plain", responseEntity.getHeaders().getFirst("Content-Type"));, +, +		assertFalse(httpEntity.equals(responseEntity));, +		assertFalse(responseEntity.equals(httpEntity));, +		assertTrue(responseEntity.equals(responseEntity2));, +		assertTrue(responseEntity2.equals(responseEntity));, +	}, +, +	@Test, +	public void requestEntity() throws Exception {, +		HttpHeaders headers = new HttpHeaders();, +		headers.setContentType(MediaType.TEXT_PLAIN);, +		String body = "foo";, +		HttpEntity<String> httpEntity = new HttpEntity<String>(body, headers);, +		RequestEntity<String> requestEntity = new RequestEntity<String>(body, headers, HttpMethod.GET, new URI("/"));, +		RequestEntity<String> requestEntity2 = new RequestEntity<String>(body, headers, HttpMethod.GET, new URI("/"));, +, +		assertEquals(body, requestEntity.getBody());, +		assertEquals(MediaType.TEXT_PLAIN, requestEntity.getHeaders().getContentType());, +		assertEquals("text/plain", requestEntity.getHeaders().getFirst("Content-Type"));, +		assertEquals("text/plain", requestEntity.getHeaders().getFirst("Content-Type"));, +, +		assertFalse(httpEntity.equals(requestEntity));, +		assertFalse(requestEntity.equals(httpEntity));, +		assertTrue(requestEntity.equals(requestEntity2));, +		assertTrue(requestEntity2.equals(requestEntity));, +++ b/spring-web/src/main/java/org/springframework/http/HttpEntity.java, + * Copyright 2002-2015 the original author or authors., + * <p>Typically used in combination with the {@link org.springframework.web.client.RestTemplate},, + * like so:, + * @author Juergen Hoeller, +, +		if (other == null || !other.getClass().equals(getClass())) {, +++ b/spring-web/src/main/java/org/springframework/http/RequestEntity.java, + * Copyright 2002-2015 the original author or authors., +		if (!super.equals(other)) {, +++ b/spring-web/src/main/java/org/springframework/http/ResponseEntity.java, +, +		if (!super.equals(other)) {, +++ b/spring-web/src/test/java/org/springframework/http/HttpEntityTests.java, + * Copyright 2002-2015 the original author or authors., +import java.net.URI;, +, +		HttpEntity<String> httpEntity = new HttpEntity<String>(body, headers);, +		ResponseEntity<String> responseEntity = new ResponseEntity<String>(body, headers, HttpStatus.OK);, +		ResponseEntity<String> responseEntity2 = new ResponseEntity<String>(body, headers, HttpStatus.OK);, +		assertEquals(body, responseEntity.getBody());]