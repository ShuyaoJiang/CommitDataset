[+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java, + * Copyright 2002-2013 the original author or authors., + * {@link LocaleResolver} implementation that simply uses the primary locale, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java, + * Copyright 2002-2013 the original author or authors., + * {@link LocaleResolver} implementation that simply uses the primary locale, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/LocaleChangeInterceptor.java, + * Copyright 2002-2013 the original author or authors., + * via a configurable request parameter (default parameter name: "locale")., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java, + * Copyright 2002-2013 the original author or authors., + * {@link LocaleResolver} implementation that simply uses the primary locale, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/LocaleChangeInterceptor.java, + * Copyright 2002-2013 the original author or authors., + * via a configurable request parameter (default parameter name: "locale")., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/SessionLocaleResolver.java, + * {@link org.springframework.web.servlet.LocaleResolver} implementation that, + * uses a locale attribute in the user's session in case of a custom setting,, + * with a fallback to the specified default locale or the request's, + * accept-header locale., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java, + * Copyright 2002-2013 the original author or authors., + * {@link LocaleResolver} implementation that simply uses the primary locale, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/LocaleChangeInterceptor.java, + * Copyright 2002-2013 the original author or authors., + * via a configurable request parameter (default parameter name: "locale")., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/SessionLocaleResolver.java, + * {@link org.springframework.web.servlet.LocaleResolver} implementation that, + * uses a locale attribute in the user's session in case of a custom setting,, + * with a fallback to the specified default locale or the request's, + * accept-header locale., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/theme/FixedThemeResolver.java, + * Copyright 2002-2013 the original author or authors., + * {@link org.springframework.web.servlet.ThemeResolver} implementation, + * that simply uses a fixed theme. The fixed name can be defined via, + * the "defaultThemeName" property; out of the box, it is "theme"., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java, + * Copyright 2002-2013 the original author or authors., + * {@link LocaleResolver} implementation that simply uses the primary locale, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/LocaleChangeInterceptor.java, + * Copyright 2002-2013 the original author or authors., + * via a configurable request parameter (default parameter name: "locale")., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/SessionLocaleResolver.java, + * {@link org.springframework.web.servlet.LocaleResolver} implementation that, + * uses a locale attribute in the user's session in case of a custom setting,, + * with a fallback to the specified default locale or the request's, + * accept-header locale., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/theme/FixedThemeResolver.java, + * Copyright 2002-2013 the original author or authors., + * {@link org.springframework.web.servlet.ThemeResolver} implementation, + * that simply uses a fixed theme. The fixed name can be defined via, + * the "defaultThemeName" property; out of the box, it is "theme"., +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/theme/ThemeChangeInterceptor.java, + * Copyright 2002-2013 the original author or authors., + * via a configurable request parameter (default parameter name: "theme")., +		String newTheme = request.getParameter(this.paramName);, +		if (newTheme != null) {]