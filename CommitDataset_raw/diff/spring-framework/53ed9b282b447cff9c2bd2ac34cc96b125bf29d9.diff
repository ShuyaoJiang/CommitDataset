[+++ b/spring-framework-reference/src/aop.xml, +      <note>, +        <para>Do not activate <interfacename>@Configurable</interfacename>, +        processing through the bean configurer aspect unless you really, +        mean to rely on its semantics at runtime. In particular, make sure, +        that you do not use <interfacename>@Configurable</interfacename>, +        on bean classes which are registered as regular Spring beans with, +        the container: You would get double initialization otherwise, once, +        through the container and once through the aspect.</para>, +      </note>, +, +++ b/spring-framework-reference/src/aop.xml, +      <note>, +        <para>Do not activate <interfacename>@Configurable</interfacename>, +        processing through the bean configurer aspect unless you really, +        mean to rely on its semantics at runtime. In particular, make sure, +        that you do not use <interfacename>@Configurable</interfacename>, +        on bean classes which are registered as regular Spring beans with, +        the container: You would get double initialization otherwise, once, +        through the container and once through the aspect.</para>, +      </note>, +, +++ b/spring-framework-reference/src/scheduling.xml, +, +			<note>, +				<para>Make sure that you are not initializing multiple instances, +				of the same @Scheduled annotation class at runtime, unless you do, +				want to schedule callbacks to each such instance. Related to this,, +				make sure that you do not use @Configurable on bean classes which, +				are annotated with @Scheduled and registered as regular Spring beans, +				with the container: You would get double initialization otherwise,, +				once through the container and once through the @Configurable aspect,, +				with the consequence of each @Scheduled method being invoked twice.</para>, +			</note>]