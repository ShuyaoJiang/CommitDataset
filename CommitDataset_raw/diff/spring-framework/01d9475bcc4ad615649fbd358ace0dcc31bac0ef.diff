[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, +import org.springframework.beans.BeanUtils;, +		this.controllers = instantiateIfNecessary(controllers);, +	private static List<Object> instantiateIfNecessary(Object[] specified) {, +		List<Object> instances = new ArrayList<>(specified.length);, +		for (Object obj : specified) {, +			instances.add(obj instanceof Class ? BeanUtils.instantiateClass((Class<?>) obj) : obj);, +		}, +		return instances;, +	}, +, +, +	public DefaultControllerSpec controllerAdvice(Object... controllerAdvices) {, +		this.controllerAdvice.addAll(instantiateIfNecessary(controllerAdvices));, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, +import org.springframework.beans.BeanUtils;, +		this.controllers = instantiateIfNecessary(controllers);, +	private static List<Object> instantiateIfNecessary(Object[] specified) {, +		List<Object> instances = new ArrayList<>(specified.length);, +		for (Object obj : specified) {, +			instances.add(obj instanceof Class ? BeanUtils.instantiateClass((Class<?>) obj) : obj);, +		}, +		return instances;, +	}, +, +, +	public DefaultControllerSpec controllerAdvice(Object... controllerAdvices) {, +		this.controllerAdvice.addAll(instantiateIfNecessary(controllerAdvices));, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, + * Copyright 2002-2018 the original author or authors., +	 * (specified {@code Class} will be turned into instance), +		 * Register one or more {@link org.springframework.web.bind.annotation.ControllerAdvice}, +		 * instances to be used in tests (specified {@code Class} will be turned into instance)., +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, +import org.springframework.beans.BeanUtils;, +		this.controllers = instantiateIfNecessary(controllers);, +	private static List<Object> instantiateIfNecessary(Object[] specified) {, +		List<Object> instances = new ArrayList<>(specified.length);, +		for (Object obj : specified) {, +			instances.add(obj instanceof Class ? BeanUtils.instantiateClass((Class<?>) obj) : obj);, +		}, +		return instances;, +	}, +, +, +	public DefaultControllerSpec controllerAdvice(Object... controllerAdvices) {, +		this.controllerAdvice.addAll(instantiateIfNecessary(controllerAdvices));, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, + * Copyright 2002-2018 the original author or authors., +	 * (specified {@code Class} will be turned into instance), +		 * Register one or more {@link org.springframework.web.bind.annotation.ControllerAdvice}, +		 * instances to be used in tests (specified {@code Class} will be turned into instance)., +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/MockMvcBuilders.java, + * Copyright 2002-2018 the original author or authors., +	 * (specified {@code Class} will be turned into instance), +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, +import org.springframework.beans.BeanUtils;, +		this.controllers = instantiateIfNecessary(controllers);, +	private static List<Object> instantiateIfNecessary(Object[] specified) {, +		List<Object> instances = new ArrayList<>(specified.length);, +		for (Object obj : specified) {, +			instances.add(obj instanceof Class ? BeanUtils.instantiateClass((Class<?>) obj) : obj);, +		}, +		return instances;, +	}, +, +, +	public DefaultControllerSpec controllerAdvice(Object... controllerAdvices) {, +		this.controllerAdvice.addAll(instantiateIfNecessary(controllerAdvices));, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, + * Copyright 2002-2018 the original author or authors., +	 * (specified {@code Class} will be turned into instance), +		 * Register one or more {@link org.springframework.web.bind.annotation.ControllerAdvice}, +		 * instances to be used in tests (specified {@code Class} will be turned into instance)., +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/MockMvcBuilders.java, + * Copyright 2002-2018 the original author or authors., +	 * (specified {@code Class} will be turned into instance), +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder.java, +import org.springframework.beans.BeanUtils;, +		this.controllers = instantiateIfNecessary(controllers);, +	private static List<Object> instantiateIfNecessary(Object[] specified) {, +		List<Object> instances = new ArrayList<>(specified.length);, +		for (Object obj : specified) {, +			instances.add(obj instanceof Class ? BeanUtils.instantiateClass((Class<?>) obj) : obj);, +		}, +		return instances;, +	}, +, +, +	 * Register one or more {@link org.springframework.web.bind.annotation.ControllerAdvice}, +	 * instances to be used in tests (specified {@code Class} will be turned into instance)., +	 * <p>Normally {@code @ControllerAdvice} are auto-detected as long as they're declared, +	 * as Spring beans. However since the standalone setup does not load any Spring config,, +	 * they need to be registered explicitly here instead much like controllers., +		this.controllerAdvice = instantiateIfNecessary(controllerAdvice);, +				Collections.singletonList(new InternalResourceViewResolver()));, +		public View resolveViewName(String viewName, Locale locale) {, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/DefaultControllerSpec.java, +import org.springframework.beans.BeanUtils;, +		this.controllers = instantiateIfNecessary(controllers);]