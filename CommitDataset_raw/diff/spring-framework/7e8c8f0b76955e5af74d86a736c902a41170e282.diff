[+++ b/spring-core/src/main/java/org/springframework/core/type/ClassMetadata.java, + * Copyright 2002-2017 the original author or authors., +	 * Determine whether the underlying class is independent, i.e. whether, +	 * it is a top-level class or a nested class (static inner class) that, +	 * can be constructed independently from an enclosing class., +	 * Return whether the underlying class is declared within an enclosing, +	 * class (i.e. the underlying class is an inner/nested class or a, +	 * local class within a method)., +	 * <p>If this method returns {@code false}, then the underlying, +	 * class is a top-level class., +++ b/spring-core/src/main/java/org/springframework/core/type/ClassMetadata.java, + * Copyright 2002-2017 the original author or authors., +	 * Determine whether the underlying class is independent, i.e. whether, +	 * it is a top-level class or a nested class (static inner class) that, +	 * can be constructed independently from an enclosing class., +	 * Return whether the underlying class is declared within an enclosing, +	 * class (i.e. the underlying class is an inner/nested class or a, +	 * local class within a method)., +	 * <p>If this method returns {@code false}, then the underlying, +	 * class is a top-level class., +++ b/spring-core/src/main/java/org/springframework/core/type/StandardClassMetadata.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.util.StringUtils;, +		LinkedHashSet<String> memberClassNames = new LinkedHashSet<>(4);, +		return StringUtils.toStringArray(memberClassNames);, +++ b/spring-core/src/main/java/org/springframework/core/type/ClassMetadata.java, + * Copyright 2002-2017 the original author or authors., +	 * Determine whether the underlying class is independent, i.e. whether, +	 * it is a top-level class or a nested class (static inner class) that, +	 * can be constructed independently from an enclosing class., +	 * Return whether the underlying class is declared within an enclosing, +	 * class (i.e. the underlying class is an inner/nested class or a, +	 * local class within a method)., +	 * <p>If this method returns {@code false}, then the underlying, +	 * class is a top-level class., +++ b/spring-core/src/main/java/org/springframework/core/type/StandardClassMetadata.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.util.StringUtils;, +		LinkedHashSet<String> memberClassNames = new LinkedHashSet<>(4);, +		return StringUtils.toStringArray(memberClassNames);, +++ b/spring-core/src/main/java/org/springframework/core/type/classreading/ClassMetadataReadingVisitor.java, +import org.springframework.util.StringUtils;, +	private Set<String> memberClassNames = new LinkedHashSet<>(4);, +		return StringUtils.toStringArray(this.memberClassNames);]