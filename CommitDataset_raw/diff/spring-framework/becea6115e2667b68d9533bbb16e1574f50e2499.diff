[+++ b/org.springframework.context/src/test/java/org/springframework/beans/factory/xml/SimplePropertyNamespaceHandlerWithExpressionLanguageTests.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.beans.factory.xml;, +, +import static org.junit.Assert.assertEquals;, +import org.junit.Test;, +import test.beans.ITestBean;, +, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.support.ClassPathXmlApplicationContext;, +, +/**, + * Tests for combining the expression language and the p namespace. This test, + *, + * @author Arjen Poutsma, + */, +public class SimplePropertyNamespaceHandlerWithExpressionLanguageTests {, +, +	@Test, +	public void combineWithExpressionLanguage() {, +		ApplicationContext applicationContext =, +				new ClassPathXmlApplicationContext("simplePropertyNamespaceHandlerWithExpressionLanguageTests.xml",, +						getClass());, +		ITestBean foo = applicationContext.getBean("foo", ITestBean.class);, +		ITestBean bar = applicationContext.getBean("bar", ITestBean.class);, +		assertEquals("Invalid name", "Baz", foo.getName());, +		assertEquals("Invalid name", "Baz", bar.getName());, +	}, +, +}, +++ b/org.springframework.context/src/test/java/org/springframework/beans/factory/xml/SimplePropertyNamespaceHandlerWithExpressionLanguageTests.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.beans.factory.xml;, +, +import static org.junit.Assert.assertEquals;, +import org.junit.Test;, +import test.beans.ITestBean;, +, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.support.ClassPathXmlApplicationContext;, +, +/**, + * Tests for combining the expression language and the p namespace. This test, + *, + * @author Arjen Poutsma, + */, +public class SimplePropertyNamespaceHandlerWithExpressionLanguageTests {, +, +	@Test, +	public void combineWithExpressionLanguage() {, +		ApplicationContext applicationContext =, +				new ClassPathXmlApplicationContext("simplePropertyNamespaceHandlerWithExpressionLanguageTests.xml",, +						getClass());, +		ITestBean foo = applicationContext.getBean("foo", ITestBean.class);, +		ITestBean bar = applicationContext.getBean("bar", ITestBean.class);, +		assertEquals("Invalid name", "Baz", foo.getName());, +		assertEquals("Invalid name", "Baz", bar.getName());, +	}, +, +}, +++ b/org.springframework.context/src/test/resources/org/springframework/beans/factory/xml/simplePropertyNamespaceHandlerWithExpressionLanguageTests.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<beans xmlns="http://www.springframework.org/schema/beans", +	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +	   xmlns:p="http://www.springframework.org/schema/p", +	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">, +, +	<bean id="foo" class="test.beans.TestBean" p:name="Baz"/>, +, +	<bean id="bar" class="test.beans.TestBean" p:name="#{foo.name}"/>]