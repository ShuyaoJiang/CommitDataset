[+++ b/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/SpringExtension.java, + * Copyright 2002-2017 the original author or authors., +	 * {@link Namespace} in which {@code TestContextManagers} are stored,, +	 * keyed by test class., +	private static final Namespace NAMESPACE = Namespace.create(SpringExtension.class);, +			context.getStore(NAMESPACE).remove(context.getTestClass().get());, +	 * Determine if the value for the {@link Parameter} in the supplied {@link ParameterContext}, +	 * should be autowired from the test's {@link ApplicationContext}., +	 * that is annotated with {@link Autowired @Autowired} and otherwise delegates to, +	 * {@link ParameterAutowireUtils#isAutowirable}., +	 * <p><strong>WARNING</strong>: If the parameter is declared in a {@code Constructor}, +	 * for resolving all parameters in the constructor. Consequently, no other registered, +	 * {@link ParameterResolver} will be able to resolve parameters., +		return (executable instanceof Constructor &&, +				AnnotatedElementUtils.hasAnnotation(executable, Autowired.class)) ||, +				ParameterAutowireUtils.isAutowirable(parameter);, +	 * Resolve a value for the {@link Parameter} in the supplied {@link ParameterContext} by, +	 * retrieving the corresponding dependency from the test's {@link ApplicationContext}., +, +	 * Get the {@link ApplicationContext} associated with the supplied {@code ExtensionContext}., +	 * @param context the current {@code ExtensionContext} (never {@code null}), +	 * @throws IllegalStateException if an error occurs while retrieving the application context, +	public static ApplicationContext getApplicationContext(ExtensionContext context) {, +	 * Get the {@link TestContextManager} associated with the supplied {@code ExtensionContext}., +	 * @return the {@code TestContextManager} (never {@code null}), +		Store store = context.getStore(NAMESPACE);]