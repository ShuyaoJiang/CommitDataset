[+++ b/org.springframework.context/src/main/java/org/springframework/scheduling/config/TaskExecutorFactoryBean.java, +import org.springframework.beans.factory.InitializingBean;, +			if (this.target instanceof InitializingBean) {, +				((InitializingBean)this.target).afterPropertiesSet();, +			}, +++ b/org.springframework.context/src/main/java/org/springframework/scheduling/config/TaskExecutorFactoryBean.java, +import org.springframework.beans.factory.InitializingBean;, +			if (this.target instanceof InitializingBean) {, +				((InitializingBean)this.target).afterPropertiesSet();, +			}, +++ b/org.springframework.context/src/test/java/org/springframework/scheduling/config/ExecutorBeanDefinitionParserTests.java, +import java.util.concurrent.Callable;, +import java.util.concurrent.ExecutionException;, +import java.util.concurrent.FutureTask;, +, +import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;, +	public void defaultExecutor() throws Exception {, +		FutureTask<String> task = new FutureTask<String>(new Callable<String>() {, +			public String call() throws Exception {, +				return "foo";, +			}, +		});, +		((ThreadPoolTaskExecutor)executor).execute(task);, +		assertEquals("foo", task.get());]