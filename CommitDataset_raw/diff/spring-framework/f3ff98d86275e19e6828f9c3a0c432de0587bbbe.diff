[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			result = (result == null ? null : resolver.resolveStringValue(result));, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java, +			result = (result == null ? null : resolver.resolveStringValue(result));, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/DefaultListableBeanFactoryTests.java, +import static org.mockito.BDDMockito.given;, +import static org.mockito.Matchers.isNull;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.never;, +import static org.mockito.Mockito.verify;, +import org.springframework.util.StringValueResolver;, +	@Test, +	public void resolveEmbeddedValue() throws Exception {, +		DefaultListableBeanFactory bf = new DefaultListableBeanFactory();, +		StringValueResolver r1 = mock(StringValueResolver.class);, +		StringValueResolver r2 = mock(StringValueResolver.class);, +		StringValueResolver r3 = mock(StringValueResolver.class);, +		bf.addEmbeddedValueResolver(r1);, +		bf.addEmbeddedValueResolver(r2);, +		bf.addEmbeddedValueResolver(r3);, +		given(r1.resolveStringValue("A")).willReturn("B");, +		given(r2.resolveStringValue("B")).willReturn(null);, +		given(r3.resolveStringValue(isNull(String.class))).willThrow(new IllegalArgumentException());, +, +		bf.resolveEmbeddedValue("A");, +, +		verify(r1).resolveStringValue("A");, +		verify(r2).resolveStringValue("B");, +		verify(r3, never()).resolveStringValue(isNull(String.class));, +	}, +]