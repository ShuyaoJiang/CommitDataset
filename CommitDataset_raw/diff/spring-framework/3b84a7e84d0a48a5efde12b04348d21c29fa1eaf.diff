[+++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/MockMvcWebClientBuilder.java, + * {@code MockMvcWebClientBuilder} simplifies the creation of an HtmlUnit, + * {@link WebClient} that delegates to a {@link MockMvc} instance., + *, + * <p>The {@code MockMvc} instance used by the builder may be, + * {@linkplain #mockMvcSetup supplied directly} or created transparently, + * from a {@link #webAppContextSetup WebApplicationContext}., + * @see #mockMvcSetup(MockMvc), + * @see #webAppContextSetup(WebApplicationContext), + * @see #webAppContextSetup(WebApplicationContext, MockMvcConfigurer), + * @see #withDelegate(WebClient), + * @see #build(), +	private WebClient webClient;, +, +, +	 * Create a new {@code MockMvcWebClientBuilder} based on the supplied, +	 * {@link MockMvc} instance., +	 * @param mockMvc the {@code MockMvc} instance to use; never {@code null}, +	 * @return the MockMvcWebClientBuilder to customize, +	 */, +	public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc) {, +		Assert.notNull(mockMvc, "MockMvc must not be null");, +		return new MockMvcWebClientBuilder(mockMvc);, +	}, +, +	/**, +	 * Create a new {@code MockMvcWebClientBuilder} based on the supplied, +	 * {@link WebApplicationContext}., +	 * Create a new {@code MockMvcWebClientBuilder} based on the supplied, +	 * {@link WebApplicationContext} and {@link MockMvcConfigurer}., +	 * Supply the {@code WebClient} that the client {@linkplain #build built}, +	 * by this builder should delegate to when processing, +	 * non-{@linkplain WebRequestMatcher matching} requests., +	 * @param webClient the {@code WebClient} to delegate to for requests, +	 * that do not match; never {@code null}, +	 * @return this builder for further customization, +	 * @see #build(), +	public MockMvcWebClientBuilder withDelegate(WebClient webClient) {, +		this.webClient = webClient;, +		return this;, +	}, +, +	/**, +	 * Build the {@link WebClient} configured via this builder., +	 * <p>The returned client will use the configured {@link MockMvc} instance, +	 * for processing any {@linkplain WebRequestMatcher matching} requests, +	 * and a delegate {@code WebClient} for all other requests., +	 * <p>If a {@linkplain #withDelegate delegate} has been explicitly configured,, +	 * it will be used; otherwise, a default {@code WebClient} will be configured, +	 * as the delegate., +	 * @return the {@code WebClient} to use, +	 * @see #withDelegate(WebClient), +	 */, +	public WebClient build() {, +		return (this.webClient != null ? this.webClient : withDelegate(new WebClient()).build());, +++ b/spring-test/src/main/java/org/springframework/test/web/servlet/htmlunit/MockMvcWebClientBuilder.java, + * {@code MockMvcWebClientBuilder} simplifies the creation of an HtmlUnit, + * {@link WebClient} that delegates to a {@link MockMvc} instance., + *, + * <p>The {@code MockMvc} instance used by the builder may be, + * {@linkplain #mockMvcSetup supplied directly} or created transparently, + * from a {@link #webAppContextSetup WebApplicationContext}., + * @see #mockMvcSetup(MockMvc), + * @see #webAppContextSetup(WebApplicationContext), + * @see #webAppContextSetup(WebApplicationContext, MockMvcConfigurer), + * @see #withDelegate(WebClient), + * @see #build(), +	private WebClient webClient;, +, +, +	 * Create a new {@code MockMvcWebClientBuilder} based on the supplied, +	 * {@link MockMvc} instance., +	 * @param mockMvc the {@code MockMvc} instance to use; never {@code null}, +	 * @return the MockMvcWebClientBuilder to customize, +	 */, +	public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc) {, +		Assert.notNull(mockMvc, "MockMvc must not be null");, +		return new MockMvcWebClientBuilder(mockMvc);, +	}, +, +	/**, +	 * Create a new {@code MockMvcWebClientBuilder} based on the supplied, +	 * {@link WebApplicationContext}., +	 * Create a new {@code MockMvcWebClientBuilder} based on the supplied, +	 * {@link WebApplicationContext} and {@link MockMvcConfigurer}., +	 * Supply the {@code WebClient} that the client {@linkplain #build built}, +	 * by this builder should delegate to when processing, +	 * non-{@linkplain WebRequestMatcher matching} requests., +	 * @param webClient the {@code WebClient} to delegate to for requests, +	 * that do not match; never {@code null}, +	 * @return this builder for further customization, +	 * @see #build(), +	public MockMvcWebClientBuilder withDelegate(WebClient webClient) {, +		this.webClient = webClient;, +		return this;, +	}, +, +	/**, +	 * Build the {@link WebClient} configured via this builder., +	 * <p>The returned client will use the configured {@link MockMvc} instance]