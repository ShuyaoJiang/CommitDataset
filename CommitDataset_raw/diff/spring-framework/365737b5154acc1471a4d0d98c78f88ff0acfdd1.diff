[+++ b/org.springframework.jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java, + * Copyright 2002-2010 the original author or authors., +		private final Map<DestinationCacheKey, MessageProducer> cachedProducers =, +				new HashMap<DestinationCacheKey, MessageProducer>();, +			DestinationCacheKey cacheKey = new DestinationCacheKey(dest);, +			MessageProducer producer = this.cachedProducers.get(cacheKey);, +				this.cachedProducers.put(cacheKey, producer);, +	 * Simple wrapper class around a Destination reference., +	 * Used as the cache key when caching MessageProducer objects., +	 */, +	private static class DestinationCacheKey {, +, +		private final Destination destination;, +, +		private String destinationString;, +, +		public DestinationCacheKey(Destination destination) {, +			this.destination = destination;, +		}, +, +		private String getDestinationString() {, +			if (this.destinationString == null) {, +				this.destinationString = this.destination.toString();, +			}, +			return this.destinationString;, +		}, +, +		protected boolean destinationEquals(DestinationCacheKey otherKey) {, +			return (this.destination.getClass().equals(otherKey.destination.getClass()) &&, +					(this.destination.equals(otherKey.destination) ||, +							getDestinationString().equals(otherKey.getDestinationString())));, +		}, +, +		public boolean equals(Object other) {, +			// Effectively checking object equality as well as toString equality., +			// On WebSphere MQ, Destination objects do not implement equals..., +			return (other == this || destinationEquals((DestinationCacheKey) other));, +		}, +, +		public int hashCode() {, +			// Can't use a more specific hashCode since we can't rely on, +			// this.destination.hashCode() actually being the same value, +			// for equivalent destinations... Thanks a lot, WebSphere MQ!, +			return this.destination.getClass().hashCode();, +		}, +	}, +, +, +	/**, +	private static class ConsumerCacheKey extends DestinationCacheKey {, +		public ConsumerCacheKey(Destination destination, String selector, boolean noLocal, String subscription) {, +			super(destination);, +			return (destinationEquals(otherKey) &&]