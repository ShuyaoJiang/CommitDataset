[+++ b/org.springframework.web/src/main/java/org/springframework/web/context/request/FacesRequestAttributes.java, +		if (scope == SCOPE_GLOBAL_SESSION && portletApiPresent) {, +			return PortletSessionAccessor.getAttribute(name, getExternalContext());, +		}, +		else {, +	}, +		if (scope == SCOPE_GLOBAL_SESSION && portletApiPresent) {, +			PortletSessionAccessor.setAttribute(name, value, getExternalContext());, +		}, +		else {, +	}, +		if (scope == SCOPE_GLOBAL_SESSION && portletApiPresent) {, +			PortletSessionAccessor.removeAttribute(name, getExternalContext());, +		}, +		else {, +	}, +		if (scope == SCOPE_GLOBAL_SESSION && portletApiPresent) {, +			return PortletSessionAccessor.getAttributeNames(getExternalContext());, +		}, +		else {, +	}, +		public static Object getAttribute(String name, ExternalContext externalContext) {, +			Object session = externalContext.getSession(false);, +				return ((PortletSession) session).getAttribute(name, PortletSession.APPLICATION_SCOPE);, +			}, +			else if (session != null) {, +				return externalContext.getSessionMap().get(name);, +				return null;, +			}, +		}, +, +		public static void setAttribute(String name, Object value, ExternalContext externalContext) {, +			Object session = externalContext.getSession(true);, +			if (session instanceof PortletSession) {, +				((PortletSession) session).setAttribute(name, value, PortletSession.APPLICATION_SCOPE);, +			}, +			else {, +				externalContext.getSessionMap().put(name, value);, +			}, +		}, +, +		public static void removeAttribute(String name, ExternalContext externalContext) {, +			Object session = externalContext.getSession(false);, +			if (session instanceof PortletSession) {, +				((PortletSession) session).removeAttribute(name, PortletSession.APPLICATION_SCOPE);, +			}, +			else if (session != null) {, +				externalContext.getSessionMap().remove(name);, +			}, +		}, +, +		public static String[] getAttributeNames(ExternalContext externalContext) {, +			Object session = externalContext.getSession(false);, +			if (session instanceof PortletSession) {, +				return StringUtils.toStringArray(, +						((PortletSession) session).getAttributeNames(PortletSession.APPLICATION_SCOPE));, +			}, +			else if (session != null) {, +				return StringUtils.toStringArray(externalContext.getSessionMap().keySet());, +			}, +			else {, +				return new String[0];]