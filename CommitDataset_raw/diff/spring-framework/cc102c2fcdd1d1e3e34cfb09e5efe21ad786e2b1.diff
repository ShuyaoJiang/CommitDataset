[+++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && byte[].class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && byte[].class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && byte[].class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && CharSequence.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && byte[].class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && CharSequence.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/DataBufferEncoder.java, +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && DataBuffer.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && byte[].class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && CharSequence.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/DataBufferEncoder.java, +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && DataBuffer.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceEncoder.java, +		Class<?> clazz = elementType.resolve(Object.class);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && byte[].class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && CharSequence.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/DataBufferEncoder.java, +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && DataBuffer.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceEncoder.java, +		Class<?> clazz = elementType.resolve(Object.class);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceRegionEncoder.java, +				&& ResourceRegion.class.isAssignableFrom(elementType.resolve(Object.class));, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && byte[].class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && ByteBuffer.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/CharSequenceEncoder.java, +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && CharSequence.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/DataBufferEncoder.java, +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && DataBuffer.class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceEncoder.java, +		Class<?> clazz = elementType.resolve(Object.class);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceRegionEncoder.java, +				&& ResourceRegion.class.isAssignableFrom(elementType.resolve(Object.class));, +++ b/spring-core/src/test/java/org/springframework/core/codec/ByteArrayEncoderTests.java, + * Copyright 2002-2017 the original author or authors., +, +		// SPR-15464, +		assertFalse(this.encoder.canEncode(ResolvableType.NONE, null));, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java, + * Copyright 2002-2017 the original author or authors., +		Class<?> clazz = elementType.resolve(Object.class);, +		return super.canEncode(elementType, mimeType) && byte[].class.isAssignableFrom(clazz);, +++ b/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java, + * Copyright 2002-2017 the original author or authors.]