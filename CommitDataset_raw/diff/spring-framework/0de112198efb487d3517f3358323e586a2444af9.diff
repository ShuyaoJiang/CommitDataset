[+++ b/spring-web/src/main/java/org/springframework/web/context/ContextLoader.java, +		if (initializerClasses.isEmpty()) {, +		AnnotationAwareOrderComparator.sort(initializerInstances);, +++ b/spring-web/src/main/java/org/springframework/web/context/ContextLoader.java, +		if (initializerClasses.isEmpty()) {, +		AnnotationAwareOrderComparator.sort(initializerInstances);, +++ b/spring-web/src/main/java/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.java, +		return (this.servletContext != null ? this.servletContext.getContextPath() : "");, +++ b/spring-web/src/main/java/org/springframework/web/context/ContextLoader.java, +		if (initializerClasses.isEmpty()) {, +		AnnotationAwareOrderComparator.sort(initializerInstances);, +++ b/spring-web/src/main/java/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.java, +		return (this.servletContext != null ? this.servletContext.getContextPath() : "");, +++ b/spring-web/src/main/java/org/springframework/web/context/support/GenericWebApplicationContext.java, +		return (this.servletContext != null ? this.servletContext.getContextPath() : "");, +++ b/spring-web/src/main/java/org/springframework/web/context/ContextLoader.java, +		if (initializerClasses.isEmpty()) {, +		AnnotationAwareOrderComparator.sort(initializerInstances);, +++ b/spring-web/src/main/java/org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.java, +		return (this.servletContext != null ? this.servletContext.getContextPath() : "");, +++ b/spring-web/src/main/java/org/springframework/web/context/support/GenericWebApplicationContext.java, +		return (this.servletContext != null ? this.servletContext.getContextPath() : "");, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java, +						ObjectUtils.getDisplayString(getServletContext().getContextPath()) + "/" + getServletName());, +		AnnotationAwareOrderComparator.sort(this.contextInitializers);]