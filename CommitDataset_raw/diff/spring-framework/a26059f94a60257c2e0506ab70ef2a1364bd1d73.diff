[+++ b/spring-context/src/main/java/org/springframework/format/datetime/DateFormatter.java, + * Copyright 2002-2012 the original author or authors., +import java.util.Collections;, +import java.util.HashMap;, +import java.util.Map;, +import org.springframework.format.annotation.DateTimeFormat;, +import org.springframework.format.annotation.DateTimeFormat.ISO;, +import org.springframework.util.Assert;, +import org.springframework.util.StringUtils;, + * @author Phillip Webb, +	private static final Map<ISO, String> ISO_PATTERNS;, +	static {, +		Map<ISO, String> formats = new HashMap<DateTimeFormat.ISO, String>();, +		formats.put(ISO.DATE, "yyyy-MM-dd");, +		formats.put(ISO.TIME, "HH:mm:ss.SSSZ");, +		formats.put(ISO.DATE_TIME, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");, +		ISO_PATTERNS = Collections.unmodifiableMap(formats);, +	}, +, +, +	private String stylePattern;, +, +	private ISO iso;, +, +	 * Set the two character to use to format date values. The first character used for, +	 * the date style, the second is for the time style. Supported characters are, +	 * <ul>, +	 * <li>'S' = Small</li>, +	 * <li>'M' = Medium</li>, +	 * <li>'L' = Long</li>, +	 * <li>'F' = Full</li>, +	 * <li>'-' = Omitted</li>, +	 * <ul>, +	 * This method mimics the styles supported by Joda Time., +	 * @param stylePattern two characters from the set {"S", "M", "L", "F", "-"}, +	 * @since 3.2, +	 */, +	public void setStylePattern(String stylePattern) {, +		this.stylePattern = stylePattern;, +	}, +, +	/**, +	 * Set the ISO format used for this date., +	 * @param iso the {@link ISO} format, +	 * @since 3.2, +	 */, +	public void setIso(ISO iso) {, +		this.iso = iso;, +	}, +	/**, +		DateFormat dateFormat = createDateFormat(locale);, +	private DateFormat createDateFormat(Locale locale) {, +		if (StringUtils.hasLength(this.pattern)) {, +			return new SimpleDateFormat(this.pattern, locale);, +		}, +		if (iso != null && iso != ISO.NONE) {, +			String pattern = ISO_PATTERNS.get(iso);, +			Assert.state(pattern != null, "Unsupported ISO format " + iso);, +			SimpleDateFormat format = new SimpleDateFormat(pattern);, +			format.setTimeZone(TimeZone.getTimeZone("UTC"));, +			return format;, +		}, +		if(StringUtils.hasLength(stylePattern)) {, +			int dateStyle = getStylePatternForChar(0);, +			int timeStyle = getStylePatternForChar(1);, +			if(dateStyle != -1 && timeStyle != -1) {, +				return DateFormat.getDateTimeInstance(dateStyle, timeStyle, locale);, +			}, +			if(dateStyle != -1) {, +				return DateFormat.getDateInstance(dateStyle, locale);, +			}, +			if(timeStyle != -1) {, +				return DateFormat.getTimeInstance(timeStyle, locale);, +			}, +			throw new IllegalStateException("Unsupported style pattern '"+ stylePattern+ "'");, +, +		}, +		return DateFormat.getDateInstance(this.style, locale);, +	}, +, +	private int getStylePatternForChar(int index) {, +		if(stylePattern != null && stylePattern.length() > index) {, +			switch (stylePattern.charAt(index)) {, +				case 'S': return DateFormat.SHORT;, +				case 'M': return DateFormat.MEDIUM;, +				case 'L': return DateFormat.LONG;, +				case 'F': return DateFormat.FULL;, +				case '-': return -1;, +			}, +		}, +		throw new IllegalStateException("Unsupported style pattern '"+ stylePattern+ "'");, +	}, +++ b/spring-context/src/main/java/org/springframework/format/datetime/DateFormatter.java, + * Copyright 2002-2012 the original author or authors., +import java.util.Collections;, +import java.util.HashMap;, +import java.util.Map;, +import org.springframework.format.annotation.DateTimeFormat;, +import org.springframework.format.annotation.DateTimeFormat.ISO;, +import org.springframework.util.Assert;]