[+++ b/build.gradle, +	ext.slf4jVersion         = "1.7.25"	// spring-jcl + consistent 3rd party deps, +, +		// Consistent slf4j version (e.g. clashes between slf4j versions), +		resolutionStrategy.eachDependency { DependencyResolveDetails details ->, +			if (details.requested.group == 'org.slf4j') {, +				details.useVersion slf4jVersion, +			}, +		}, +, +		exclude group: "org.slf4j", module: "jcl-over-slf4j", +		testRuntime("org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"), +		testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}"), +++ b/build.gradle, +	ext.slf4jVersion         = "1.7.25"	// spring-jcl + consistent 3rd party deps, +, +		// Consistent slf4j version (e.g. clashes between slf4j versions), +		resolutionStrategy.eachDependency { DependencyResolveDetails details ->, +			if (details.requested.group == 'org.slf4j') {, +				details.useVersion slf4jVersion, +			}, +		}, +, +		exclude group: "org.slf4j", module: "jcl-over-slf4j", +		testRuntime("org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"), +		testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}"), +++ b/spring-context-support/spring-context-support.gradle, +++ b/build.gradle, +	ext.slf4jVersion         = "1.7.25"	// spring-jcl + consistent 3rd party deps, +, +		// Consistent slf4j version (e.g. clashes between slf4j versions), +		resolutionStrategy.eachDependency { DependencyResolveDetails details ->, +			if (details.requested.group == 'org.slf4j') {, +				details.useVersion slf4jVersion, +			}, +		}, +, +		exclude group: "org.slf4j", module: "jcl-over-slf4j", +		testRuntime("org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"), +		testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}"), +++ b/spring-context-support/spring-context-support.gradle, +++ b/spring-context/spring-context.gradle, +++ b/build.gradle, +	ext.slf4jVersion         = "1.7.25"	// spring-jcl + consistent 3rd party deps, +, +		// Consistent slf4j version (e.g. clashes between slf4j versions), +		resolutionStrategy.eachDependency { DependencyResolveDetails details ->, +			if (details.requested.group == 'org.slf4j') {, +				details.useVersion slf4jVersion, +			}, +		}, +, +		exclude group: "org.slf4j", module: "jcl-over-slf4j", +		testRuntime("org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"), +		testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}"), +++ b/spring-context-support/spring-context-support.gradle, +++ b/spring-context/spring-context.gradle, +++ b/spring-test/spring-test.gradle, +	testCompile("org.apache.tiles:tiles-core:${tiles3Version}"), +	testCompile("org.apache.tiles:tiles-servlet:${tiles3Version}"), +++ b/build.gradle, +	ext.slf4jVersion         = "1.7.25"	// spring-jcl + consistent 3rd party deps, +, +		// Consistent slf4j version (e.g. clashes between slf4j versions), +		resolutionStrategy.eachDependency { DependencyResolveDetails details ->, +			if (details.requested.group == 'org.slf4j') {, +				details.useVersion slf4jVersion, +			}, +		}, +, +		exclude group: "org.slf4j", module: "jcl-over-slf4j", +		testRuntime("org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"), +		testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}"), +++ b/spring-context-support/spring-context-support.gradle, +++ b/spring-context/spring-context.gradle, +++ b/spring-test/spring-test.gradle, +	testCompile("org.apache.tiles:tiles-core:${tiles3Version}"), +	testCompile("org.apache.tiles:tiles-servlet:${tiles3Version}"), +++ b/spring-webmvc/spring-webmvc.gradle, +	optional("org.apache.tiles:tiles-core:${tiles3Version}"), +	optional("org.apache.tiles:tiles-servlet:${tiles3Version}"), +	optional("org.apache.tiles:tiles-jsp:${tiles3Version}"), +	optional("org.apache.tiles:tiles-el:${tiles3Version}")]