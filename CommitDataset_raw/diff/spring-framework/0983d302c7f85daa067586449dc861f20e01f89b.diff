[+++ b/spring-web-reactive/src/main/java/org/springframework/http/ReactiveHttpOutputMessage.java, +import java.util.function.Supplier;, +, +	 * Register an action to be applied just before the message is committed., +	 * @param action the action, +	 */, +	void beforeCommit(Supplier<? extends Mono<Void>> action);, +, +	/**, +++ b/spring-web-reactive/src/main/java/org/springframework/http/ReactiveHttpOutputMessage.java, +import java.util.function.Supplier;, +, +	 * Register an action to be applied just before the message is committed., +	 * @param action the action, +	 */, +	void beforeCommit(Supplier<? extends Mono<Void>> action);, +, +	/**, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/http/ReactiveHttpOutputMessage.java, +import java.util.function.Supplier;, +, +	 * Register an action to be applied just before the message is committed., +	 * @param action the action, +	 */, +	void beforeCommit(Supplier<? extends Mono<Void>> action);, +, +	/**, +++ /dev/null, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/http/ReactiveHttpOutputMessage.java, +import java.util.function.Supplier;, +, +	 * Register an action to be applied just before the message is committed., +	 * @param action the action, +	 */, +	void beforeCommit(Supplier<? extends Mono<Void>> action);, +, +	/**, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/http/ReactiveHttpOutputMessage.java, +import java.util.function.Supplier;, +, +	 * Register an action to be applied just before the message is committed., +	 * @param action the action, +	 */, +	void beforeCommit(Supplier<? extends Mono<Void>> action);, +, +	/**, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/spring-web-reactive/src/main/java/org/springframework/http/client/reactive/ClientHttpRequest.java, +/*, + * Copyright 2002-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.http.client.reactive;, +, +import java.net.URI;, +, +import reactor.core.publisher.Mono;, +, +import org.springframework.http.HttpMethod;, +import org.springframework.http.ReactiveHttpOutputMessage;, +, +/**, + * Represents a reactive client-side HTTP request., + *, + * @author Arjen Poutsma, + * @author Brian Clozel, + */, +public interface ClientHttpRequest extends ReactiveHttpOutputMessage {, +, +	/**, +	 * Return the HTTP method of the request., +	 */, +	HttpMethod getMethod();, +, +	/**, +	 * Return the URI of the request., +	 */, +	URI getURI();, +, +	/**, +	 * Execute this request, resulting in a reactive stream of a single]