[+++ b/spring-orm/src/main/java/org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener.java, +++ b/spring-orm/src/main/java/org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener.java, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.java, +	/**, +	 * Arbitrary {@link Method} reference, indicating no method found in the cache., +	 */, +	private static final Method NO_METHOD_FOUND = ClassUtils.getMethodIfAvailable(System.class, "currentTimeMillis");, +, +	 * @return the best matching method, or {@code null} if none found, +++ b/spring-orm/src/main/java/org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener.java, +++ b/spring-webmvc-portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.java, +	/**, +	 * Arbitrary {@link Method} reference, indicating no method found in the cache., +	 */, +	private static final Method NO_METHOD_FOUND = ClassUtils.getMethodIfAvailable(System.class, "currentTimeMillis");, +, +	 * @return the best matching method, or {@code null} if none found, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.java, +	/**, +	 * Arbitrary {@link Method} reference, indicating no method found in the cache., +	 */, +	private static final Method NO_METHOD_FOUND = ClassUtils.getMethodIfAvailable(System.class, "currentTimeMillis");, +, +	 * Uses the {@link ExceptionDepthComparator} to find the best matching method., +	 * @return the best matching method, or {@code null} if none found]