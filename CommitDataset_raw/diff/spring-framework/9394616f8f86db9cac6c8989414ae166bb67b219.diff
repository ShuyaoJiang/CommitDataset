[+++ b/build.gradle, +	ext.hibernate5Version    = "5.2.0.Final", +++ b/build.gradle, +	ext.hibernate5Version    = "5.2.0.Final", +++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/HibernateTransactionManager.java, + * Copyright 2002-2016 the original author or authors., +				if (FlushMode.MANUAL.equals(flushMode)) {, +++ b/build.gradle, +	ext.hibernate5Version    = "5.2.0.Final", +++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/HibernateTransactionManager.java, + * Copyright 2002-2016 the original author or authors., +				if (FlushMode.MANUAL.equals(flushMode)) {, +++ b/spring-orm-hibernate5/src/main/java/org/springframework/orm/hibernate5/HibernateTemplate.java, + * Copyright 2002-2016 the original author or authors., +	 * @see org.hibernate.Query#setCacheable, +	 * @see org.hibernate.Query#setCacheRegion, +	@SuppressWarnings("deprecation"), +			@SuppressWarnings({"unchecked", "deprecation"}), +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.createQuery(queryString);, +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.createQuery(queryString);, +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.createQuery(queryString);, +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.getNamedQuery(queryName);, +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.getNamedQuery(queryName);, +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.getNamedQuery(queryName);, +	@SuppressWarnings("deprecation"), +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.createQuery(queryString);, +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.createQuery(queryString);, +		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {, +	@SuppressWarnings({"rawtypes", "deprecation"}), +	protected void prepareQuery(org.hibernate.Query queryObject) {, +	@SuppressWarnings({"rawtypes", "deprecation"}), +	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value), +		@SuppressWarnings("deprecation"), +				if (retVal instanceof org.hibernate.Query) {, +					prepareQuery(((org.hibernate.Query) retVal));, +++ b/build.gradle, +	ext.hibernate5Version    = "5.2.0.Final", +++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/HibernateTransactionManager.java, + * Copyright 2002-2016 the original author or authors., +				if (FlushMode.MANUAL.equals(flushMode)) {, +++ b/spring-orm-hibernate5/src/main/java/org/springframework/orm/hibernate5/HibernateTemplate.java, + * Copyright 2002-2016 the original author or authors., +	 * @see org.hibernate.Query#setCacheable, +	 * @see org.hibernate.Query#setCacheRegion, +	@SuppressWarnings("deprecation"), +			@SuppressWarnings({"unchecked", "deprecation"}), +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.createQuery(queryString);, +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.createQuery(queryString);, +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.createQuery(queryString);, +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.getNamedQuery(queryName);, +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.getNamedQuery(queryName);, +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.getNamedQuery(queryName);, +	@SuppressWarnings("deprecation"), +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.createQuery(queryString);, +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.createQuery(queryString);, +		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {, +	@SuppressWarnings({"rawtypes", "deprecation"}), +	protected void prepareQuery(org.hibernate.Query queryObject) {, +	@SuppressWarnings({"rawtypes", "deprecation"}), +	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value), +		@SuppressWarnings("deprecation"), +				if (retVal instanceof org.hibernate.Query) {, +					prepareQuery(((org.hibernate.Query) retVal));, +++ b/spring-orm-hibernate5/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java, + * Copyright 2002-2016 the original author or authors., +	@SuppressWarnings("deprecation"), +				FlushMode flushMode = SessionFactoryUtils.getFlushMode(session);, +				if (FlushMode.MANUAL.equals(flushMode)) {, +	@SuppressWarnings("deprecation"), +	@SuppressWarnings("deprecation"), +++ b/build.gradle, +	ext.hibernate5Version    = "5.2.0.Final", +++ b/spring-orm-hibernate4/src/main/java/org/springframework/orm/hibernate4/HibernateTransactionManager.java, + * Copyright 2002-2016 the original author or authors., +				if (FlushMode.MANUAL.equals(flushMode)) {, +++ b/spring-orm-hibernate5/src/main/java/org/springframework/orm/hibernate5/HibernateTemplate.java, + * Copyright 2002-2016 the original author or authors., +	 * @see org.hibernate.Query#setCacheable, +	 * @see org.hibernate.Query#setCacheRegion, +	@SuppressWarnings("deprecation"), +			@SuppressWarnings({"unchecked", "deprecation"}), +			@SuppressWarnings({"rawtypes", "deprecation"}), +				org.hibernate.Query queryObject = session.createQuery(queryString);, +			@SuppressWarnings({"rawtypes", "deprecation"})]