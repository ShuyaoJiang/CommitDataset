[+++ b/org.springframework.web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java, + * Copyright 2002-2010 the original author or authors., +import java.nio.charset.Charset;, +import org.springframework.http.MediaType;, +import org.springframework.util.FileCopyUtils;, +		MediaType contentType = response.getHeaders().getContentType();, +		Charset charset = contentType != null ? contentType.getCharSet() : null;, +		byte[] body = FileCopyUtils.copyToByteArray(response.getBody());, +				throw new HttpClientErrorException(statusCode, response.getStatusText(), body, charset);, +				throw new HttpServerErrorException(statusCode, response.getStatusText(), body, charset);, +, +++ b/org.springframework.web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java, + * Copyright 2002-2010 the original author or authors., +import java.nio.charset.Charset;, +import org.springframework.http.MediaType;, +import org.springframework.util.FileCopyUtils;, +		MediaType contentType = response.getHeaders().getContentType();, +		Charset charset = contentType != null ? contentType.getCharSet() : null;, +		byte[] body = FileCopyUtils.copyToByteArray(response.getBody());, +				throw new HttpClientErrorException(statusCode, response.getStatusText(), body, charset);, +				throw new HttpServerErrorException(statusCode, response.getStatusText(), body, charset);, +, +++ b/org.springframework.web/src/main/java/org/springframework/web/client/HttpClientErrorException.java, +import java.nio.charset.Charset;, +, +	/**, +	 * Construct a new instance of {@code HttpClientErrorException} based on a {@link HttpStatus}, status text, and, +	 * response body content., +	 *, +	 * @param statusCode	  the status code, +	 * @param statusText	  the status text, +	 * @param responseBody	the response body content, may be {@code null}, +	 * @param responseCharset the response body charset, may be {@code null}, +	 */, +	public HttpClientErrorException(HttpStatus statusCode,, +			String statusText,, +			byte[] responseBody,, +			Charset responseCharset) {, +		super(statusCode, statusText, responseBody, responseCharset);, +	}, +++ b/org.springframework.web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java, + * Copyright 2002-2010 the original author or authors., +import java.nio.charset.Charset;, +import org.springframework.http.MediaType;, +import org.springframework.util.FileCopyUtils;, +		MediaType contentType = response.getHeaders().getContentType();, +		Charset charset = contentType != null ? contentType.getCharSet() : null;, +		byte[] body = FileCopyUtils.copyToByteArray(response.getBody());, +				throw new HttpClientErrorException(statusCode, response.getStatusText(), body, charset);, +				throw new HttpServerErrorException(statusCode, response.getStatusText(), body, charset);, +, +++ b/org.springframework.web/src/main/java/org/springframework/web/client/HttpClientErrorException.java, +import java.nio.charset.Charset;, +, +	/**, +	 * Construct a new instance of {@code HttpClientErrorException} based on a {@link HttpStatus}, status text, and, +	 * response body content., +	 *, +	 * @param statusCode	  the status code, +	 * @param statusText	  the status text, +	 * @param responseBody	the response body content, may be {@code null}, +	 * @param responseCharset the response body charset, may be {@code null}, +	 */, +	public HttpClientErrorException(HttpStatus statusCode,, +			String statusText,, +			byte[] responseBody,, +			Charset responseCharset) {, +		super(statusCode, statusText, responseBody, responseCharset);, +	}, +++ b/org.springframework.web/src/main/java/org/springframework/web/client/HttpServerErrorException.java, +import java.nio.charset.Charset;, +, + * @since 3.0, +	 *, +	 *, +	/**, +	 * Construct a new instance of {@code HttpServerErrorException} based on a {@link HttpStatus}, status text, and, +	 * response body content., +	 *, +	 * @param statusCode	  the status code, +	 * @param statusText	  the status text, +	 * @param responseBody	the response body content, may be {@code null}, +	 * @param responseCharset the response body charset, may be {@code null}, +	 * @since 3.0.5, +	 */, +	public HttpServerErrorException(HttpStatus statusCode,, +			String statusText,, +			byte[] responseBody,, +			Charset responseCharset) {, +		super(statusCode, statusText, responseBody, responseCharset);, +	}, +++ b/org.springframework.web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java, + * Copyright 2002-2010 the original author or authors., +import java.nio.charset.Charset;, +import org.springframework.http.MediaType;, +import org.springframework.util.FileCopyUtils;, +		MediaType contentType = response.getHeaders().getContentType();, +		Charset charset = contentType != null ? contentType.getCharSet() : null;, +		byte[] body = FileCopyUtils.copyToByteArray(response.getBody());, +				throw new HttpClientErrorException(statusCode, response.getStatusText(), body, charset);]