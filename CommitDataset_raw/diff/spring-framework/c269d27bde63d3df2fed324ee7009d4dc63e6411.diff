[+++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, + * Copyright 2002-2014 the original author or authors., +	private static final ServletInputStream EMPTY_SERVLET_INPUT_STREAM =, +			new DelegatingServletInputStream(new ByteArrayInputStream(new byte[0]));, +, +			return EMPTY_SERVLET_INPUT_STREAM;, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, + * Copyright 2002-2014 the original author or authors., +	private static final ServletInputStream EMPTY_SERVLET_INPUT_STREAM =, +			new DelegatingServletInputStream(new ByteArrayInputStream(new byte[0]));, +, +			return EMPTY_SERVLET_INPUT_STREAM;, +++ b/spring-test/src/test/java/org/springframework/mock/web/MockHttpServletRequestTests.java, + * Copyright 2002-2014 the original author or authors., +import java.io.IOException;, +import java.nio.charset.Charset;, +import org.springframework.util.StreamUtils;, +	public void content() throws IOException {, +		byte[] bytes = "body".getBytes(Charset.defaultCharset());, +		request.setContent(bytes);, +		assertEquals(bytes.length, request.getContentLength());, +		assertNotNull(request.getInputStream());, +		assertEquals("body", StreamUtils.copyToString(request.getInputStream(), Charset.defaultCharset()));, +	}, +, +	@Test, +	public void noContent() throws IOException {, +		assertEquals(-1, request.getContentLength());, +		assertNotNull(request.getInputStream());, +		assertEquals(-1, request.getInputStream().read());, +	}, +, +	@Test, +++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java, + * Copyright 2002-2014 the original author or authors., +	private static final ServletInputStream EMPTY_SERVLET_INPUT_STREAM =, +			new DelegatingServletInputStream(new ByteArrayInputStream(new byte[0]));, +, +			return EMPTY_SERVLET_INPUT_STREAM;, +++ b/spring-test/src/test/java/org/springframework/mock/web/MockHttpServletRequestTests.java, + * Copyright 2002-2014 the original author or authors., +import java.io.IOException;, +import java.nio.charset.Charset;, +import org.springframework.util.StreamUtils;, +	public void content() throws IOException {, +		byte[] bytes = "body".getBytes(Charset.defaultCharset());, +		request.setContent(bytes);, +		assertEquals(bytes.length, request.getContentLength());, +		assertNotNull(request.getInputStream());, +		assertEquals("body", StreamUtils.copyToString(request.getInputStream(), Charset.defaultCharset()));, +	}, +, +	@Test, +	public void noContent() throws IOException {, +		assertEquals(-1, request.getContentLength());, +		assertNotNull(request.getInputStream());, +		assertEquals(-1, request.getInputStream().read());, +	}, +, +	@Test, +++ b/spring-web/src/test/java/org/springframework/mock/web/test/MockHttpServletRequest.java, +	private static final ServletInputStream EMPTY_SERVLET_INPUT_STREAM =, +			new DelegatingServletInputStream(new ByteArrayInputStream(new byte[0]));, +, +			return EMPTY_SERVLET_INPUT_STREAM;]