[+++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/SimpleAspectInstanceFactory.java, + * Copyright 2002-2018 the original author or authors., +, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/SimpleAspectInstanceFactory.java, + * Copyright 2002-2018 the original author or authors., +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java, + * Copyright 2002-2018 the original author or authors., +			callable.call(this.currentBeanDefinition);, +		GroovyBeanDefinitionWrapper beanDefinition = this.currentBeanDefinition;, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/SimpleAspectInstanceFactory.java, + * Copyright 2002-2018 the original author or authors., +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java, + * Copyright 2002-2018 the original author or authors., +			callable.call(this.currentBeanDefinition);, +		GroovyBeanDefinitionWrapper beanDefinition = this.currentBeanDefinition;, +++ b/spring-jms/src/main/java/org/springframework/jms/support/JmsHeaderMapper.java, + * Copyright 2002-2018 the original author or authors., + * Strategy interface for mapping {@link org.springframework.messaging.Message}, + * headers to an outbound JMS {@link javax.jms.Message} (e.g. to configure JMS, + * properties) or extracting messaging header values from an inbound JMS Message., +	/**, +	 * The JMS-compliant {@code content_type} property., +	 */, +	String CONTENT_TYPE_PROPERTY = "content_type";, +++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/SimpleAspectInstanceFactory.java, + * Copyright 2002-2018 the original author or authors., +, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java, + * Copyright 2002-2018 the original author or authors., +			callable.call(this.currentBeanDefinition);, +		GroovyBeanDefinitionWrapper beanDefinition = this.currentBeanDefinition;, +++ b/spring-jms/src/main/java/org/springframework/jms/support/JmsHeaderMapper.java, + * Copyright 2002-2018 the original author or authors., + * Strategy interface for mapping {@link org.springframework.messaging.Message}, + * headers to an outbound JMS {@link javax.jms.Message} (e.g. to configure JMS, + * properties) or extracting messaging header values from an inbound JMS Message., +	/**, +	 * The JMS-compliant {@code content_type} property., +	 */, +	String CONTENT_TYPE_PROPERTY = "content_type";, +++ b/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java, + * Copyright 2002-2018 the original author or authors., +	 * <p>Convert {@link MessageHeaders#CONTENT_TYPE} to {@code content_type} for JMS compliance., +	 * @see #CONTENT_TYPE_PROPERTY, +	 * <p>Convert the JMS-compliant {@code content_type} to {@link MessageHeaders#CONTENT_TYPE}., +	 * @see #CONTENT_TYPE_PROPERTY]