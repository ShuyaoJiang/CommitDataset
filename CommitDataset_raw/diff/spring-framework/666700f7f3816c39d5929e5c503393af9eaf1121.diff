[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/config/ConstructorArgumentValues.java, +					addOrMergeGenericArgumentValue(valueHolder.copy());, +	 * Add an argument value for the given index in the constructor argument list., +	 * Add an argument value for the given index in the constructor argument list., +	 * Add an argument value for the given index in the constructor argument list., +	 * Add an argument value for the given index in the constructor argument list,, +	 * Add a generic argument value to be matched by type., +	 * Add a generic argument value to be matched by type., +	 * Add a generic argument value to be matched by type or name (if available)., +			addOrMergeGenericArgumentValue(newValue);, +	 * Add a generic argument value, merging the new value (typically a collection), +	 * with the current value if demanded: see {@link org.springframework.beans.Mergeable}., +	 * @param newValue the argument value in the form of a ValueHolder, +	 */, +	private void addOrMergeGenericArgumentValue(ValueHolder newValue) {, +		if (newValue.getName() != null) {, +			for (Iterator<ValueHolder> it = this.genericArgumentValues.iterator(); it.hasNext();) {, +				ValueHolder currentValue = it.next();, +				if (newValue.getName().equals(currentValue.getName())) {, +					if (newValue.getValue() instanceof Mergeable) {, +						Mergeable mergeable = (Mergeable) newValue.getValue();, +						if (mergeable.isMergeEnabled()) {, +							newValue.setValue(mergeable.merge(currentValue.getValue()));, +						}, +					}, +					it.remove();, +				}, +			}, +		}, +		this.genericArgumentValues.add(newValue);, +	}, +, +	/**, +	 * @param requiredName the name to match (can be <code>null</code> to not, +	 * match argument values by name), +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/config/ConstructorArgumentValues.java, +					addOrMergeGenericArgumentValue(valueHolder.copy());, +	 * Add an argument value for the given index in the constructor argument list., +	 * Add an argument value for the given index in the constructor argument list., +	 * Add an argument value for the given index in the constructor argument list., +	 * Add an argument value for the given index in the constructor argument list,, +	 * Add a generic argument value to be matched by type., +	 * Add a generic argument value to be matched by type., +	 * Add a generic argument value to be matched by type or name (if available)., +			addOrMergeGenericArgumentValue(newValue);, +	 * Add a generic argument value, merging the new value (typically a collection), +	 * with the current value if demanded: see {@link org.springframework.beans.Mergeable}., +	 * @param newValue the argument value in the form of a ValueHolder, +	 */, +	private void addOrMergeGenericArgumentValue(ValueHolder newValue) {, +		if (newValue.getName() != null) {, +			for (Iterator<ValueHolder> it = this.genericArgumentValues.iterator(); it.hasNext();) {, +				ValueHolder currentValue = it.next();, +				if (newValue.getName().equals(currentValue.getName())) {, +					if (newValue.getValue() instanceof Mergeable) {, +						Mergeable mergeable = (Mergeable) newValue.getValue();, +						if (mergeable.isMergeEnabled()) {, +							newValue.setValue(mergeable.merge(currentValue.getValue()));, +						}, +					}, +					it.remove();, +				}, +			}, +		}, +		this.genericArgumentValues.add(newValue);, +	}, +, +	/**, +	 * @param requiredName the name to match (can be <code>null</code> to not, +	 * match argument values by name), +++ b/org.springframework.context/src/test/java/org/springframework/beans/factory/xml/XmlBeanFactoryTests-constructorArg.xml, +	<bean id="rod17" parent="rod16">, +		<constructor-arg name="otherSpouse"><ref bean="kerry2"/></constructor-arg>, +		<constructor-arg name="spouse"><ref bean="kerry1"/></constructor-arg>, +	</bean>, +, +	<bean id="rod18" class="org.springframework.beans.factory.xml.SimpleConstructorArgBean" scope="prototype">, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/config/ConstructorArgumentValues.java, +					addOrMergeGenericArgumentValue(valueHolder.copy());, +	 * Add an argument value for the given index in the constructor argument list., +	 * Add an argument value for the given index in the constructor argument list., +	 * Add an argument value for the given index in the constructor argument list., +	 * Add an argument value for the given index in the constructor argument list,, +	 * Add a generic argument value to be matched by type., +	 * Add a generic argument value to be matched by type., +	 * Add a generic argument value to be matched by type or name (if available)., +			addOrMergeGenericArgumentValue(newValue);, +	 * Add a generic argument value, merging the new value (typically a collection), +	 * with the current value if demanded: see {@link org.springframework.beans.Mergeable}., +	 * @param newValue the argument value in the form of a ValueHolder, +	 */, +	private void addOrMergeGenericArgumentValue(ValueHolder newValue) {, +		if (newValue.getName() != null) {, +			for (Iterator<ValueHolder> it = this.genericArgumentValues.iterator(); it.hasNext();) {, +				ValueHolder currentValue = it.next();, +				if (newValue.getName().equals(currentValue.getName())) {, +					if (newValue.getValue() instanceof Mergeable) {, +						Mergeable mergeable = (Mergeable) newValue.getValue();, +						if (mergeable.isMergeEnabled()) {, +							newValue.setValue(mergeable.merge(currentValue.getValue()));]