[+++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java, +				if (this.applicationContext != null && this.jobFactory instanceof ApplicationContextAware) {, +					((ApplicationContextAware) this.jobFactory).setApplicationContext(this.applicationContext);, +				}, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java, +				if (this.applicationContext != null && this.jobFactory instanceof ApplicationContextAware) {, +					((ApplicationContextAware) this.jobFactory).setApplicationContext(this.applicationContext);, +				}, +++ b/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SpringBeanJobFactory.java, + * Copyright 2002-2018 the original author or authors., +import org.springframework.beans.factory.config.AutowireCapableBeanFactory;, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.ApplicationContextAware;, +public class SpringBeanJobFactory extends AdaptableJobFactory, +		implements ApplicationContextAware, SchedulerContextAware {, +	private ApplicationContext applicationContext;, +, +	@Nullable, +	public void setApplicationContext(ApplicationContext applicationContext) {, +		this.applicationContext = applicationContext;, +	}, +, +	@Override, +		Object job = (this.applicationContext != null ?, +				this.applicationContext.getAutowireCapableBeanFactory().createBean(, +						bundle.getJobDetail().getJobClass(), AutowireCapableBeanFactory.AUTOWIRE_CONSTRUCTOR, false) :, +				super.createJobInstance(bundle));, +, +]