[+++ b/org.springframework.aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java, + * Copyright 2002-2010 the original author or authors., +import org.springframework.beans.factory.config.ConfigurableBeanFactory;, +	private transient PointcutExpression pointcutExpression;, +, +	private transient Map<Method, ShadowMatch> shadowMatchCache = new ConcurrentHashMap<Method, ShadowMatch>(32);, +, +		PointcutParser parser = initializePointcutParser();, +			pointcutParameters[i] = parser.createPointcutParameter(, +		return parser.parsePointcutExpression(, +	 * Initialize the underlying AspectJ pointcut parser., +	 */, +	private PointcutParser initializePointcutParser() {, +		ClassLoader cl = (this.beanFactory instanceof ConfigurableBeanFactory ?, +				((ConfigurableBeanFactory) this.beanFactory).getBeanClassLoader() :, +				Thread.currentThread().getContextClassLoader());, +		PointcutParser parser =, +				PointcutParser.getPointcutParserSupportingSpecifiedPrimitivesAndUsingSpecifiedClassLoaderForResolution(, +						SUPPORTED_PRIMITIVES, cl);, +		parser.registerPointcutDesignatorHandler(new BeanNamePointcutDesignatorHandler());, +		return parser;, +	}, +, +	/**, +, +		// pointcutExpression will be initialized lazily by checkReadyToMatch()]