[+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientResponse.java, +import org.springframework.http.ResponseCookie;, +import org.springframework.util.MultiValueMap;, +	 * Return cookies of this response., +	 */, +	MultiValueMap<String, ResponseCookie> cookies();, +, +	/**, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientResponse.java, +import org.springframework.http.ResponseCookie;, +import org.springframework.util.MultiValueMap;, +	 * Return cookies of this response., +	 */, +	MultiValueMap<String, ResponseCookie> cookies();, +, +	/**, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientResponse.java, +import org.springframework.http.ResponseCookie;, +import org.springframework.util.MultiValueMap;, +	public MultiValueMap<String, ResponseCookie> cookies() {, +		return this.response.getCookies();, +	}, +, +	@Override, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientResponse.java, +import org.springframework.http.ResponseCookie;, +import org.springframework.util.MultiValueMap;, +	 * Return cookies of this response., +	 */, +	MultiValueMap<String, ResponseCookie> cookies();, +, +	/**, +++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientResponse.java, +import org.springframework.http.ResponseCookie;, +import org.springframework.util.MultiValueMap;, +	public MultiValueMap<String, ResponseCookie> cookies() {, +		return this.response.getCookies();, +	}, +, +	@Override, +++ b/spring-webflux/src/test/java/org/springframework/web/reactive/function/client/DefaultClientResponseTests.java, +import org.springframework.http.ResponseCookie;, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +import static org.junit.Assert.assertSame;, +	public void cookies() throws Exception {, +		ResponseCookie cookie = ResponseCookie.from("foo", "bar").build();, +		MultiValueMap<String, ResponseCookie> cookies = new LinkedMultiValueMap<>();, +		cookies.add("foo", cookie);, +, +		when(mockResponse.getCookies()).thenReturn(cookies);, +, +		assertSame(cookies, defaultClientResponse.cookies());, +	}, +, +, +	@Test]