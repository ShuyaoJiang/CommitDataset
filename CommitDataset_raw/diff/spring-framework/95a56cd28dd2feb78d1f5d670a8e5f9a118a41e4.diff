[+++ b/spring-context/src/main/java/org/springframework/context/support/DefaultMessageSourceResolvable.java, + * Copyright 2002-2018 the original author or authors., + * Spring's default implementation of the {@link MessageSourceResolvable} interface., +	 * The default implementation exposes the attributes of this MessageSourceResolvable., +	 * <p>To be overridden in more specific subclasses, potentially including the, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultMessageSourceResolvable.java, + * Copyright 2002-2018 the original author or authors., + * Spring's default implementation of the {@link MessageSourceResolvable} interface., +	 * The default implementation exposes the attributes of this MessageSourceResolvable., +	 * <p>To be overridden in more specific subclasses, potentially including the, +++ b/spring-context/src/test/java/org/springframework/validation/beanvalidation/SpringValidatorAdapterTests.java, +		messageSource.addMessage("Same", Locale.ENGLISH, "{2} must be same value as {1}");, +		assertThat(messageSource.getMessage(error, Locale.ENGLISH), is("Password must be same value as Password(Confirm)"));, +		assertThat(messageSource.getMessage(error1, Locale.ENGLISH), is("email must be same value as confirmEmail"));, +		assertThat(messageSource.getMessage(error1, Locale.ENGLISH), is("email must be same value as confirmEmail"));, +		@NotNull, +		@NotNull, +		@NotNull, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultMessageSourceResolvable.java, + * Copyright 2002-2018 the original author or authors., + * Spring's default implementation of the {@link MessageSourceResolvable} interface., +	 * The default implementation exposes the attributes of this MessageSourceResolvable., +	 * <p>To be overridden in more specific subclasses, potentially including the, +++ b/spring-context/src/test/java/org/springframework/validation/beanvalidation/SpringValidatorAdapterTests.java, +		messageSource.addMessage("Same", Locale.ENGLISH, "{2} must be same value as {1}");, +		assertThat(messageSource.getMessage(error, Locale.ENGLISH), is("Password must be same value as Password(Confirm)"));, +		assertThat(messageSource.getMessage(error1, Locale.ENGLISH), is("email must be same value as confirmEmail"));, +		assertThat(messageSource.getMessage(error1, Locale.ENGLISH), is("email must be same value as confirmEmail"));, +		@NotNull, +		@NotNull, +		@NotNull, +++ b/spring-context/src/test/java/org/springframework/validation/beanvalidation/ValidatorFactoryTests.java, +	public @interface InnerValid {, +++ b/spring-context/src/main/java/org/springframework/context/support/DefaultMessageSourceResolvable.java, + * Copyright 2002-2018 the original author or authors., + * Spring's default implementation of the {@link MessageSourceResolvable} interface., +	 * The default implementation exposes the attributes of this MessageSourceResolvable., +	 * <p>To be overridden in more specific subclasses, potentially including the, +++ b/spring-context/src/test/java/org/springframework/validation/beanvalidation/SpringValidatorAdapterTests.java, +		messageSource.addMessage("Same", Locale.ENGLISH, "{2} must be same value as {1}");, +		assertThat(messageSource.getMessage(error, Locale.ENGLISH), is("Password must be same value as Password(Confirm)"));, +		assertThat(messageSource.getMessage(error1, Locale.ENGLISH), is("email must be same value as confirmEmail"));, +		assertThat(messageSource.getMessage(error1, Locale.ENGLISH), is("email must be same value as confirmEmail"));, +		@NotNull, +		@NotNull, +		@NotNull, +++ b/spring-context/src/test/java/org/springframework/validation/beanvalidation/ValidatorFactoryTests.java, +	public @interface InnerValid {, +++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/OpEQ.java, + * Copyright 2002-2018 the original author or authors., +		return BooleanTypedValue.forValue(equalityCheck(state.getEvaluationContext(), left, right));]