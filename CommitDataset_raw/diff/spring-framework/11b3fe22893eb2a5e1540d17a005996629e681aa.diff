[+++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean.java, + * <p>Tested against Jackson 2.2 and 2.3; compatible with Jackson 2.0 and higher., + *, +	private List<Module> modules;, +	private Class<? extends Module>[] modulesToInstall;, +, +	private boolean findModulesViaServiceLoader;, +	 * Set a complete list of modules to be registered with the {@link ObjectMapper}., +	 * <p>Note: If this is set, no finding of modules is going to happen - not by, +	 * Jackson, and not by Spring either (see {@link #setFindModulesViaServiceLoader})., +	 * As a consequence, specifying an empty list here will suppress any kind of, +	 * module detection., +	 * <p>Specify either this or {@link #setModulesToInstall}, not both., +		this.modules = new LinkedList<Module>(modules);, +, +	/**, +	 * Specify one or more modules by class (or class name in XML),, +	 * to be registered with the {@link ObjectMapper}., +	 * <p>Modules specified here will be registered in combination with, +	 * Spring's autodetection of JSR-310 and Joda-Time, or Jackson's, +	 * finding of modules (see {@link #setFindModulesViaServiceLoader})., +	 * <p>Specify either this or {@link #setModules}, not both., +	 * @since 4.0.1, +	 * @see com.fasterxml.jackson.databind.Module, +	 */, +	public void setModulesToInstall(Class<? extends Module>... modules) {, +		this.modulesToInstall = modules;, +	}, +, +	/**, +	 * Set whether to let Jackson find available modules via the JDK ServiceLoader,, +	 * based on META-INF metadata in the classpath. Requires Jackson 2.2 or higher., +	 * <p>If this mode is not set, Spring's Jackson2ObjectMapperFactoryBean itself, +	 * will try to find the JSR-310 and Joda-Time support modules on the classpath -, +	 * provided that Java 8 and Joda-Time themselves are available, respectively., +	 * @since 4.0.1, +	 * @see com.fasterxml.jackson.databind.ObjectMapper#findModules(), +	 */, +	public void setFindModulesViaServiceLoader(boolean findModules) {, +		this.findModulesViaServiceLoader = findModules;, +		if (this.modules != null) {, +			// Complete list of modules given, +			for (Module module : this.modules) {, +				// Using Jackson 2.0+ registerModule method, not Jackson 2.2+ registerModules, +				this.objectMapper.registerModule(module);, +			}, +		}, +		else {, +			// Combination of modules by class names specified and class presence in the classpath, +			if (this.modulesToInstall != null) {, +				for (Class<? extends Module> module : this.modulesToInstall) {, +					this.objectMapper.registerModule(BeanUtils.instantiate(module));, +				}, +			}, +			if (this.findModulesViaServiceLoader) {, +				// Jackson 2.2+]