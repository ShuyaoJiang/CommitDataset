[+++ b/org.springframework.context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +		boolean log = logger.isTraceEnabled();, +, +					if (log) {, +						logger.trace("Computed cache key " + key + " for definition " + cacheDef);, +					}, +, +						throw new IllegalArgumentException(, +								"Null key returned for cache definition (maybe you are using named params on classes without debug info?) ", +										+ cacheDef);, +							if (log) {, +								logger.trace("Key " + key + " found in cache, returning value " + retVal);, +							}, +							if (log) {, +								logger.trace("Key " + key + " NOT found in cache, invoking target method for caching ", +										+ method);, +							}, +, +							if (log) {, +								logger.trace("Key " + key + " NOT found in cache(s), invoking cached target method  ", +										+ method);, +							}, +						else {, +							if (log) {, +								logger.trace("Key " + key + " found in cache, returning value " + retVal);, +							}, +						}, +							if (log) {, +								logger.trace("Invalidating entire cache for definition " + cacheDef + " on method ", +										+ method);, +							}, +							if (log) {, +								logger.trace("Invalidating cache key " + key + " for definition " + cacheDef, +										+ " on method " + method);, +							}, +			else {, +				if (log) {, +					logger.trace("Cache condition failed on method " + method + " for definition " + cacheDef);, +				}, +			}, +++ b/org.springframework.context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java, +		boolean log = logger.isTraceEnabled();, +, +					if (log) {, +						logger.trace("Computed cache key " + key + " for definition " + cacheDef);, +					}, +, +						throw new IllegalArgumentException(, +								"Null key returned for cache definition (maybe you are using named params on classes without debug info?) ", +										+ cacheDef);, +							if (log) {, +								logger.trace("Key " + key + " found in cache, returning value " + retVal);, +							}, +							if (log) {, +								logger.trace("Key " + key + " NOT found in cache, invoking target method for caching ", +										+ method);, +							}, +, +							if (log) {, +								logger.trace("Key " + key + " NOT found in cache(s), invoking cached target method  ", +										+ method);, +							}, +						else {, +							if (log) {, +								logger.trace("Key " + key + " found in cache, returning value " + retVal);, +							}, +						}, +							if (log) {, +								logger.trace("Invalidating entire cache for definition " + cacheDef + " on method ", +										+ method);, +							}, +							if (log) {, +								logger.trace("Invalidating cache key " + key + " for definition " + cacheDef, +										+ " on method " + method);, +							}, +			else {, +				if (log) {, +					logger.trace("Cache condition failed on method " + method + " for definition " + cacheDef);, +				}, +			}, +++ b/org.springframework.context/src/main/java/org/springframework/cache/interceptor/CacheInterceptor.java]