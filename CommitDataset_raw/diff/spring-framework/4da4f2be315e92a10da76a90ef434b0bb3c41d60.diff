[+++ b/spring-test/src/main/java/org/springframework/test/web/client/MockMvcClientHttpRequestFactory.java, + * Copyright 2002-2017 the original author or authors., +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.request;, +, + * <p>As of 5.0 this class also implements, + * {@link org.springframework.http.client.AsyncClientHttpRequestFactory, + * AsyncClientHttpRequestFactory}. However note that, + * {@link org.springframework.web.client.AsyncRestTemplate} and related classes, + * have been deprecated at the same time., + *, +@SuppressWarnings("deprecation"), +public class MockMvcClientHttpRequestFactory, +		implements ClientHttpRequestFactory, org.springframework.http.client.AsyncClientHttpRequestFactory {, +	public ClientHttpRequest createRequest(final URI uri, final HttpMethod httpMethod) {, +				return getClientHttpResponse(httpMethod, uri, getHeaders(), getBodyAsBytes());, +			}, +		};, +	}, +, +	@Override, +	public org.springframework.http.client.AsyncClientHttpRequest createAsyncRequest(URI uri, HttpMethod method) {, +		return new org.springframework.mock.http.client.MockAsyncClientHttpRequest(method, uri) {, +			@Override, +			protected ClientHttpResponse executeInternal() throws IOException {, +				return getClientHttpResponse(method, uri, getHeaders(), getBodyAsBytes());, +			}, +		};, +	}, +, +	private ClientHttpResponse getClientHttpResponse(, +			HttpMethod httpMethod, URI uri, HttpHeaders requestHeaders, byte[] requestBody) {, +, +			MockHttpServletResponse servletResponse = mockMvc, +					.perform(request(httpMethod, uri).content(requestBody).headers(requestHeaders)), +					.andReturn(), +					.getResponse();, +, +			clientResponse.getHeaders().putAll(getResponseHeaders(servletResponse));, +++ b/spring-test/src/main/java/org/springframework/test/web/client/MockMvcClientHttpRequestFactory.java, + * Copyright 2002-2017 the original author or authors., +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.request;, +, + * <p>As of 5.0 this class also implements, + * {@link org.springframework.http.client.AsyncClientHttpRequestFactory, + * AsyncClientHttpRequestFactory}. However note that, + * {@link org.springframework.web.client.AsyncRestTemplate} and related classes, + * have been deprecated at the same time., + *, +@SuppressWarnings("deprecation"), +public class MockMvcClientHttpRequestFactory, +		implements ClientHttpRequestFactory, org.springframework.http.client.AsyncClientHttpRequestFactory {, +	public ClientHttpRequest createRequest(final URI uri, final HttpMethod httpMethod) {, +				return getClientHttpResponse(httpMethod, uri, getHeaders(), getBodyAsBytes());, +			}, +		};, +	}, +, +	@Override, +	public org.springframework.http.client.AsyncClientHttpRequest createAsyncRequest(URI uri, HttpMethod method) {, +		return new org.springframework.mock.http.client.MockAsyncClientHttpRequest(method, uri) {, +			@Override, +			protected ClientHttpResponse executeInternal() throws IOException {, +				return getClientHttpResponse(method, uri, getHeaders(), getBodyAsBytes());, +			}, +		};, +	}, +, +	private ClientHttpResponse getClientHttpResponse(, +			HttpMethod httpMethod, URI uri, HttpHeaders requestHeaders, byte[] requestBody) {, +, +			MockHttpServletResponse servletResponse = mockMvc, +					.perform(request(httpMethod, uri).content(requestBody).headers(requestHeaders)), +					.andReturn(), +					.getResponse();, +, +			clientResponse.getHeaders().putAll(getResponseHeaders(servletResponse));, +++ b/spring-test/src/test/java/org/springframework/test/web/client/samples/MockMvcClientHttpRequestFactoryTests.java, + * Copyright 2002-2017 the original author or authors., +import org.springframework.http.ResponseEntity;, +import org.springframework.util.concurrent.ListenableFuture;, +import org.springframework.web.client.AsyncRestTemplate;, +import static org.junit.Assert.assertEquals;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;, +, +	private MockMvc mockMvc;, +		this.mockMvc = MockMvcBuilders.webAppContextSetup(this.wac).alwaysExpect(status().isOk()).build();, +		RestTemplate template = new RestTemplate(new MockMvcClientHttpRequestFactory(this.mockMvc));, +		String result = template.getForObject("/foo", String.class);, +	@Test, +	@SuppressWarnings("deprecation"), +	public void testAsyncTemplate() throws Exception {, +		AsyncRestTemplate template = new AsyncRestTemplate(new MockMvcClientHttpRequestFactory(this.mockMvc));, +		ListenableFuture<ResponseEntity<String>> entity = template.getForEntity("/foo", String.class);, +		assertEquals("bar", entity.get().getBody());, +	}, +]