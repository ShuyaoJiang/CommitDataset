[+++ b/spring-orm/src/test/java/org/springframework/mock/web/MockHttpServletResponse.java, + * Copyright 2002-2012 the original author or authors., +	private static final String LOCATION_HEADER = "Location";, +	 * <p>As of Servlet 3.0, this method is also defined in HttpServletResponse., +	 * <p>As of Servlet 3.0, this method is also defined in HttpServletResponse., +	 * override the common {@link #encodeURL} method instead, applying, +		setHeader(LOCATION_HEADER, url);, +		setStatus(HttpServletResponse.SC_MOVED_TEMPORARILY);, +		return getHeader(LOCATION_HEADER);, +++ b/spring-orm/src/test/java/org/springframework/mock/web/MockHttpServletResponse.java, + * Copyright 2002-2012 the original author or authors., +	private static final String LOCATION_HEADER = "Location";, +	 * <p>As of Servlet 3.0, this method is also defined in HttpServletResponse., +	 * <p>As of Servlet 3.0, this method is also defined in HttpServletResponse., +	 * override the common {@link #encodeURL} method instead, applying, +		setHeader(LOCATION_HEADER, url);, +		setStatus(HttpServletResponse.SC_MOVED_TEMPORARILY);, +		return getHeader(LOCATION_HEADER);, +++ b/spring-web/src/test/java/org/springframework/mock/web/MockHttpServletResponse.java, + * Copyright 2002-2012 the original author or authors., +	private static final String LOCATION_HEADER = "Location";, +	 * <p>As of Servlet 3.0, this method is also defined HttpServletResponse., +	 * Return the primary value for the given header as a String, if any., +	 * Will return the first value in case of multiple values., +	 * <p>As of Servlet 3.0, this method is also defined in HttpServletResponse., +	 * As of Spring 3.1, it returns a stringified value for Servlet 3.0 compatibility., +	 * Consider using {@link #getHeaderValue(String)} for raw Object access., +	 * @param name the name of the header, +	 * @return the associated header value, or <code>null<code> if none, +	 */, +	public String getHeader(String name) {, +		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name);, +		return (header != null ? header.getStringValue() : null);, +	}, +, +	/**, +	 * Return all values for the given header as a List of Strings., +	 * <p>As of Servlet 3.0, this method is also defined in HttpServletResponse., +	 * As of Spring 3.1, it returns a List of stringified values for Servlet 3.0 compatibility., +	 * Consider using {@link #getHeaderValues(String)} for raw Object access., +	 * @param name the name of the header, +	 * @return the associated header values, or an empty List if none, +	 */, +	public List<String> getHeaders(String name) {, +		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name);, +		if (header != null) {, +			return header.getStringValues();, +		}, +		else {, +			return Collections.emptyList();, +		}, +	}, +, +	/**, +	public Object getHeaderValue(String name) {, +		return (header != null ? header.getValue() : null);, +	public List<Object> getHeaderValues(String name) {, +		if (header != null) {, +			return header.getValues();, +		}, +		else {, +			return Collections.emptyList();, +		}, +	 * override the common {@link #encodeURL} method instead, applying, +		setHeader(LOCATION_HEADER, url);, +		setStatus(HttpServletResponse.SC_MOVED_TEMPORARILY);, +		return getHeader(LOCATION_HEADER);, +++ b/spring-orm/src/test/java/org/springframework/mock/web/MockHttpServletResponse.java, + * Copyright 2002-2012 the original author or authors., +	private static final String LOCATION_HEADER = "Location";, +	 * <p>As of Servlet 3.0, this method is also defined in HttpServletResponse., +	 * <p>As of Servlet 3.0, this method is also defined in HttpServletResponse., +	 * override the common {@link #encodeURL} method instead, applying, +		setHeader(LOCATION_HEADER, url);, +		setStatus(HttpServletResponse.SC_MOVED_TEMPORARILY);, +		return getHeader(LOCATION_HEADER);, +++ b/spring-web/src/test/java/org/springframework/mock/web/MockHttpServletResponse.java, + * Copyright 2002-2012 the original author or authors., +	private static final String LOCATION_HEADER = "Location";, +	 * <p>As of Servlet 3.0, this method is also defined HttpServletResponse., +	 * Return the primary value for the given header as a String, if any., +	 * Will return the first value in case of multiple values., +	 * <p>As of Servlet 3.0, this method is also defined in HttpServletResponse., +	 * As of Spring 3.1, it returns a stringified value for Servlet 3.0 compatibility., +	 * Consider using {@link #getHeaderValue(String)} for raw Object access., +	 * @param name the name of the header, +	 * @return the associated header value, or <code>null<code> if none, +	 */, +	public String getHeader(String name) {, +		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name);, +		return (header != null ? header.getStringValue() : null);, +	}, +, +	/**, +	 * Return all values for the given header as a List of Strings., +	 * <p>As of Servlet 3.0, this method is also defined in HttpServletResponse., +	 * As of Spring 3.1, it returns a List of stringified values for Servlet 3.0 compatibility., +	 * Consider using {@link #getHeaderValues(String)} for raw Object access., +	 * @param name the name of the header, +	 * @return the associated header values, or an empty List if none]