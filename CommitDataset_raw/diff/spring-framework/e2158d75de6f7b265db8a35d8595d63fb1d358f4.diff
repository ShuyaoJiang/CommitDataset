[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java, +, +	 * Callback interface that is used to process annotations during a search., +	 *, +	 * <p>Depending on the use case, a processor may choose to, +	 * {@linkplain #process} a single target annotation, multiple target, +	 * annotations, or all annotations discovered by the currently executing, +	 * search. The term "target" in this context refers to a matching, +	 * annotation (i.e., a specific annotation type that was found during, +	 * the search). Returning a non-null value from the {@link #process}, +	 * method instructs the search algorithm to stop searching further;, +	 * whereas, returning {@code null} from the {@link #process} method, +	 * instructs the search algorithm to continue searching for additional, +	 * annotations., +	 *, +	 * <p>Processors can optionally {@linkplain #postProcess post-process}, +	 * the result of the {@link #process} method as the search algorithm, +	 * goes back down the annotation hierarchy from an invocation of, +	 * {@link #process} that returned a non-null value down to the, +	 * {@link AnnotatedElement} that was supplied as the starting point to, +	 * the search algorithm., +		 * Process the supplied annotation., +		 *, +		 * <p>Depending on the use case, the supplied annotation may be an, +		 * actual target annotation that has been found by the search, +		 * algorithm, or it may be some other annotation within the, +		 * annotation hierarchy. In the latter case, the {@code metaDepth}, +		 * should have a value greater than {@code 0}. In any case, it is, +		 * up to concrete implementations of this method to decide what to, +		 * do with the supplied annotation., +		 * searching for additional annotations, +		 * {@link AnnotatedElement} and an invocation of {@link #process}, +		 * that returned a non-null value.]