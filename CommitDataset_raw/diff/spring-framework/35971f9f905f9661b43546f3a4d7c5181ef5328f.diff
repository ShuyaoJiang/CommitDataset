[+++ b/org.springframework.core/src/main/java/org/springframework/util/ReflectionUtils.java, +, +	/**, +	 * Pre-built MethodFilter that matches all non-bridge methods, +	 * which are not declared on <code>java.lang.Object</code>., +	 */, +	public static MethodFilter USER_DECLARED_METHODS = new MethodFilter() {, +, +		public boolean matches(Method method) {, +			return (!method.isBridge() && method.getDeclaringClass() != Object.class);, +		}, +	};, +, +++ b/org.springframework.core/src/main/java/org/springframework/util/ReflectionUtils.java, +, +	/**, +	 * Pre-built MethodFilter that matches all non-bridge methods, +	 * which are not declared on <code>java.lang.Object</code>., +	 */, +	public static MethodFilter USER_DECLARED_METHODS = new MethodFilter() {, +, +		public boolean matches(Method method) {, +			return (!method.isBridge() && method.getDeclaringClass() != Object.class);, +		}, +	};, +, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +			if (this.mappings.containsKey(method)) {, +				return true;, +			}, +			if (mappingInfo.phase != null) {, +				return true;, +			}, +			return false;, +++ b/org.springframework.core/src/main/java/org/springframework/util/ReflectionUtils.java, +, +	/**, +	 * Pre-built MethodFilter that matches all non-bridge methods, +	 * which are not declared on <code>java.lang.Object</code>., +	 */, +	public static MethodFilter USER_DECLARED_METHODS = new MethodFilter() {, +, +		public boolean matches(Method method) {, +			return (!method.isBridge() && method.getDeclaringClass() != Object.class);, +		}, +	};, +, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +			if (this.mappings.containsKey(method)) {, +				return true;, +			}, +			if (mappingInfo.phase != null) {, +				return true;, +			}, +			return false;, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/DefaultAnnotationHandlerMapping.java, + * Copyright 2002-2010 the original author or authors., +import java.util.LinkedHashSet;, +	protected boolean detectHandlerMethods(Class<?> handlerType, final String beanName, final RequestMapping typeMapping) {, +		Set<Class<?>> handlerTypes = new LinkedHashSet<Class<?>>();, +		handlerTypes.add(handlerType);, +		handlerTypes.addAll(Arrays.asList(handlerType.getInterfaces()));, +		for (Class<?> currentHandlerType : handlerTypes) {, +			ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() {, +			}, ReflectionUtils.USER_DECLARED_METHODS);, +		}, +++ b/org.springframework.core/src/main/java/org/springframework/util/ReflectionUtils.java, +, +	/**, +	 * Pre-built MethodFilter that matches all non-bridge methods, +	 * which are not declared on <code>java.lang.Object</code>., +	 */, +	public static MethodFilter USER_DECLARED_METHODS = new MethodFilter() {, +, +		public boolean matches(Method method) {, +			return (!method.isBridge() && method.getDeclaringClass() != Object.class);, +		}, +	};, +, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +			if (this.mappings.containsKey(method)) {, +				return true;, +			}, +			if (mappingInfo.phase != null) {, +				return true;, +			}, +			return false;, +++ b/org.springframework.web.portlet/src/main/java/org/springframework/web/portlet/mvc/annotation/DefaultAnnotationHandlerMapping.java, + * Copyright 2002-2010 the original author or authors., +import java.util.LinkedHashSet;, +	protected boolean detectHandlerMethods(Class<?> handlerType, final String beanName, final RequestMapping typeMapping) {, +		Set<Class<?>> handlerTypes = new LinkedHashSet<Class<?>>();, +		handlerTypes.add(handlerType);, +		handlerTypes.addAll(Arrays.asList(handlerType.getInterfaces()));, +		for (Class<?> currentHandlerType : handlerTypes) {, +			ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() {, +			}, ReflectionUtils.USER_DECLARED_METHODS);, +		}, +++ b/org.springframework.web.servlet/src/main/java/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.java, +import java.util.HashMap;]