[+++ b/build.gradle, +	ext.undertowVersion      = "1.1.1.Final", +			exclude group: "org.jboss.spec.javax.websocket", module: "jboss-websocket-api_1.1_spec", +++ b/build.gradle, +	ext.undertowVersion      = "1.1.1.Final", +			exclude group: "org.jboss.spec.javax.websocket", module: "jboss-websocket-api_1.1_spec", +++ b/spring-web/src/main/java/org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter.java, +		if (this.extensionRegistry != null) {, +++ b/build.gradle, +	ext.undertowVersion      = "1.1.1.Final", +			exclude group: "org.jboss.spec.javax.websocket", module: "jboss-websocket-api_1.1_spec", +++ b/spring-web/src/main/java/org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter.java, +		if (this.extensionRegistry != null) {, +++ b/spring-web/src/test/java/org/springframework/http/converter/protobuf/ProtobufHttpMessageConverterTests.java, +++ b/build.gradle, +	ext.undertowVersion      = "1.1.1.Final", +			exclude group: "org.jboss.spec.javax.websocket", module: "jboss-websocket-api_1.1_spec", +++ b/spring-web/src/main/java/org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter.java, +		if (this.extensionRegistry != null) {, +++ b/spring-web/src/test/java/org/springframework/http/converter/protobuf/ProtobufHttpMessageConverterTests.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java, +	private String originalPath;, +		String path = request.getRequestURI();, +		String prefix = request.getHeader("X-Forwarded-Prefix");, +		if (StringUtils.hasText(prefix)) {, +			path = prefix + path;, +		}, +, +		builder.initPath(path);, +	private void initPath(String path) {, +		this.originalPath = path;, +		replacePath(path);, +	 *, +	 * GET http://foo.com/rest/books/6.json, +		if (this.originalPath != null) {, +			String filename = WebUtils.extractFullFilenameFromUrlPath(this.originalPath);, +				int end = this.originalPath.length() - (extension.length() + 1);, +				replacePath(this.originalPath.substring(0, end));, +			this.originalPath = null;, +++ b/build.gradle, +	ext.undertowVersion      = "1.1.1.Final", +			exclude group: "org.jboss.spec.javax.websocket", module: "jboss-websocket-api_1.1_spec", +++ b/spring-web/src/main/java/org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter.java, +		if (this.extensionRegistry != null) {, +++ b/spring-web/src/test/java/org/springframework/http/converter/protobuf/ProtobufHttpMessageConverterTests.java, +++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java, +	private String originalPath;, +		String path = request.getRequestURI();, +		String prefix = request.getHeader("X-Forwarded-Prefix");, +		if (StringUtils.hasText(prefix)) {, +			path = prefix + path;, +		}, +, +		builder.initPath(path);, +	private void initPath(String path) {, +		this.originalPath = path;, +		replacePath(path);, +	 *, +	 * GET http://foo.com/rest/books/6.json, +		if (this.originalPath != null) {, +			String filename = WebUtils.extractFullFilenameFromUrlPath(this.originalPath);, +				int end = this.originalPath.length() - (extension.length() + 1);, +				replacePath(this.originalPath.substring(0, end));, +			this.originalPath = null;, +++ b/spring-webmvc/src/test/java/org/springframework/web/servlet/support/ServletUriComponentsBuilderTests.java, +	public void fromRequestWithForwardedPrefix() {, +		this.request.setRequestURI("/bar");, +		this.request.addHeader("X-Forwarded-Prefix", "/foo");, +		UriComponents result = ServletUriComponentsBuilder.fromRequest(request).build();, +, +		assertEquals("http://localhost/foo/bar", result.toUriString());, +	}, +, +	@Test, +	public void fromRequestWithForwardedPrefixTrailingSlash() {, +		this.request.setRequestURI("/bar");, +		this.request.addHeader("X-Forwarded-Prefix", "/foo/");, +		UriComponents result = ServletUriComponentsBuilder.fromRequest(request).build();, +, +		assertEquals("http://localhost/foo/bar", result.toUriString());, +	}, +, +	@Test]