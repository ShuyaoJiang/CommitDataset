[+++ b/spring-context-support/src/test/java/org/springframework/validation/beanvalidation2/SpringValidatorAdapterTests.java, + * Copyright 2002-2019 the original author or authors., +import javax.validation.ConstraintViolation;, +import org.springframework.validation.FieldError;, +import static org.hamcrest.core.StringContains.*;, +		messageSource.addMessage("Same", Locale.ENGLISH, "{2} must be same value as {1}");, +		FieldError error = errors.getFieldError("password");, +		assertNotNull(error);, +		assertThat(messageSource.getMessage(error, Locale.ENGLISH), is("Size of Password is must be between 8 and 128"));, +		assertTrue(error.contains(ConstraintViolation.class));, +		assertThat(error.unwrap(ConstraintViolation.class).getPropertyPath().toString(), is("password"));, +		FieldError error = errors.getFieldError("password");, +		assertNotNull(error);, +		assertThat(messageSource.getMessage(error, Locale.ENGLISH), is("Password must be same value as Password(Confirm)"));, +		assertTrue(error.contains(ConstraintViolation.class));, +		assertThat(error.unwrap(ConstraintViolation.class).getPropertyPath().toString(), is("password"));, +		FieldError error1 = errors.getFieldError("email");, +		FieldError error2 = errors.getFieldError("confirmEmail");, +		assertNotNull(error1);, +		assertNotNull(error2);, +		assertThat(messageSource.getMessage(error1, Locale.ENGLISH), is("email must be same value as confirmEmail"));, +		assertThat(messageSource.getMessage(error2, Locale.ENGLISH), is("Email required"));, +		assertTrue(error1.contains(ConstraintViolation.class));, +		assertThat(error1.unwrap(ConstraintViolation.class).getPropertyPath().toString(), is("email"));, +		assertTrue(error2.contains(ConstraintViolation.class));, +		assertThat(error2.unwrap(ConstraintViolation.class).getPropertyPath().toString(), is("confirmEmail"));, +		FieldError error1 = errors.getFieldError("email");, +		FieldError error2 = errors.getFieldError("confirmEmail");, +		assertNotNull(error1);, +		assertNotNull(error2);, +		assertThat(messageSource.getMessage(error1, Locale.ENGLISH), is("email must be same value as confirmEmail"));, +		assertThat(messageSource.getMessage(error2, Locale.ENGLISH), is("Email required"));, +		assertTrue(error1.contains(ConstraintViolation.class));, +		assertThat(error1.unwrap(ConstraintViolation.class).getPropertyPath().toString(), is("email"));, +		assertTrue(error2.contains(ConstraintViolation.class));, +		assertThat(error2.unwrap(ConstraintViolation.class).getPropertyPath().toString(), is("confirmEmail"));, +	}, +, +	@Test, +	public void testPatternMessage() {, +		TestBean testBean = new TestBean();, +		testBean.setEmail("X");, +		testBean.setConfirmEmail("X");, +, +		BeanPropertyBindingResult errors = new BeanPropertyBindingResult(testBean, "testBean");, +		validatorAdapter.validate(testBean, errors);, +, +		assertThat(errors.getFieldErrorCount("email"), is(1));, +		assertThat(errors.getFieldValue("email"), is("X"));, +		FieldError error = errors.getFieldError("email");, +		assertNotNull(error);, +		assertThat(messageSource.getMessage(error, Locale.ENGLISH), containsString("[\\w.'-]{1,}@[\\w.'-]{1,}"));, +		assertTrue(error.contains(ConstraintViolation.class));, +		assertThat(error.unwrap(ConstraintViolation.class).getPropertyPath().toString(), is("email"));, +		@Pattern(regexp = "[\\w.'-]{1,}@[\\w.'-]{1,}"), +		@NotNull, +		@NotNull, +		@NotNull, +++ b/spring-context-support/src/test/java/org/springframework/validation/beanvalidation2/SpringValidatorAdapterTests.java, + * Copyright 2002-2019 the original author or authors., +import javax.validation.ConstraintViolation;, +import org.springframework.validation.FieldError;, +import static org.hamcrest.core.StringContains.*;, +		messageSource.addMessage("Same", Locale.ENGLISH, "{2} must be same value as {1}");, +		FieldError error = errors.getFieldError("password");, +		assertNotNull(error);, +		assertThat(messageSource.getMessage(error, Locale.ENGLISH), is("Size of Password is must be between 8 and 128"));, +		assertTrue(error.contains(ConstraintViolation.class));, +		assertThat(error.unwrap(ConstraintViolation.class).getPropertyPath().toString(), is("password"));, +		FieldError error = errors.getFieldError("password");, +		assertNotNull(error);, +		assertThat(messageSource.getMessage(error, Locale.ENGLISH), is("Password must be same value as Password(Confirm)"));, +		assertTrue(error.contains(ConstraintViolation.class));, +		assertThat(error.unwrap(ConstraintViolation.class).getPropertyPath().toString(), is("password"));, +		FieldError error1 = errors.getFieldError("email");, +		FieldError error2 = errors.getFieldError("confirmEmail");, +		assertNotNull(error1);, +		assertNotNull(error2);, +		assertThat(messageSource.getMessage(error1, Locale.ENGLISH), is("email must be same value as confirmEmail"));, +		assertThat(messageSource.getMessage(error2, Locale.ENGLISH), is("Email required"));, +		assertTrue(error1.contains(ConstraintViolation.class));, +		assertThat(error1.unwrap(ConstraintViolation.class).getPropertyPath().toString(), is("email"));, +		assertTrue(error2.contains(ConstraintViolation.class));, +		assertThat(error2.unwrap(ConstraintViolation.class).getPropertyPath().toString(), is("confirmEmail"));, +		FieldError error1 = errors.getFieldError("email");, +		FieldError error2 = errors.getFieldError("confirmEmail");, +		assertNotNull(error1);, +		assertNotNull(error2);, +		assertThat(messageSource.getMessage(error1, Locale.ENGLISH), is("email must be same value as confirmEmail"));, +		assertThat(messageSource.getMessage(error2, Locale.ENGLISH), is("Email required"));, +		assertTrue(error1.contains(ConstraintViolation.class));, +		assertThat(error1.unwrap(ConstraintViolation.class).getPropertyPath().toString(), is("email"));, +		assertTrue(error2.contains(ConstraintViolation.class));, +		assertThat(error2.unwrap(ConstraintViolation.class).getPropertyPath().toString(), is("confirmEmail"));, +	}, +, +	@Test, +	public void testPatternMessage() {, +		TestBean testBean = new TestBean();, +		testBean.setEmail("X");]