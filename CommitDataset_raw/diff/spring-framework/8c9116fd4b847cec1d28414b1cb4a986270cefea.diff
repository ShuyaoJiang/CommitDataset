[+++ b/spring-context/src/test/java/org/springframework/context/annotation/ComponentScanAndImportAnnotationInteractionTests.java, + * Copyright 2002-2014 the original author or authors., +, +import org.springframework.beans.factory.support.RootBeanDefinition;, +	@Test, +	public void componentScanOverlapsWithImportUsingAsm() {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		ctx.registerBeanDefinition("config1", new RootBeanDefinition(Config1.class.getName()));, +		ctx.registerBeanDefinition("config2", new RootBeanDefinition(Config2.class.getName()));, +		ctx.refresh(); // no conflicts found trying to register SimpleComponent, +		ctx.getBean(SimpleComponent.class); // succeeds -> there is only one bean of type SimpleComponent, +	}, +, +	@Test, +	public void componentScanViaImport() {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		ctx.register(Config3.class);, +		ctx.refresh();, +		ctx.getBean(SimpleComponent.class);, +	}, +, +	@Test, +	public void componentScanViaImportUsingAsm() {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		ctx.registerBeanDefinition("config4", new RootBeanDefinition(Config3.class.getName()));, +		ctx.refresh();, +		ctx.getBean(SimpleComponent.class);, +	}, +, +	@Test, +	public void componentScanViaImportUsingScan() {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		ctx.scan("org.springframework.context.annotation.componentscan.importing");, +		ctx.refresh();, +		ctx.getBean(SimpleComponent.class);, +	}, +, +, +, +	@Configuration, +	@Import(ImportedConfig.class), +	static class Config3 {, +	}, +, +, +	@Configuration, +	@ComponentScan("org.springframework.context.annotation.componentscan.simple"), +	public static class ImportedConfig {, +	}, +, +++ b/spring-context/src/test/java/org/springframework/context/annotation/ComponentScanAndImportAnnotationInteractionTests.java, + * Copyright 2002-2014 the original author or authors., +, +import org.springframework.beans.factory.support.RootBeanDefinition;, +	@Test, +	public void componentScanOverlapsWithImportUsingAsm() {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		ctx.registerBeanDefinition("config1", new RootBeanDefinition(Config1.class.getName()));, +		ctx.registerBeanDefinition("config2", new RootBeanDefinition(Config2.class.getName()));, +		ctx.refresh(); // no conflicts found trying to register SimpleComponent, +		ctx.getBean(SimpleComponent.class); // succeeds -> there is only one bean of type SimpleComponent, +	}, +, +	@Test, +	public void componentScanViaImport() {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		ctx.register(Config3.class);, +		ctx.refresh();, +		ctx.getBean(SimpleComponent.class);, +	}, +, +	@Test, +	public void componentScanViaImportUsingAsm() {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		ctx.registerBeanDefinition("config4", new RootBeanDefinition(Config3.class.getName()));, +		ctx.refresh();, +		ctx.getBean(SimpleComponent.class);, +	}, +, +	@Test, +	public void componentScanViaImportUsingScan() {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		ctx.scan("org.springframework.context.annotation.componentscan.importing");, +		ctx.refresh();, +		ctx.getBean(SimpleComponent.class);, +	}, +, +, +, +	@Configuration, +	@Import(ImportedConfig.class), +	static class Config3 {, +	}, +, +, +	@Configuration, +	@ComponentScan("org.springframework.context.annotation.componentscan.simple"), +	public static class ImportedConfig {, +	}, +]