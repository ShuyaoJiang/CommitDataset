[+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		for (String beanName : getBeanDefinitionNames()) {, +			BeanDefinition beanDefinition = getBeanDefinition(beanName);, +			if (!beanDefinition.isAbstract() && (findAnnotationOnBean(beanName, annotationType) != null)) {, +				results.put(beanName, getBean(beanName));, +			}, +		}, +		for (String beanName : getSingletonNames()) {, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		for (String beanName : getBeanDefinitionNames()) {, +			BeanDefinition beanDefinition = getBeanDefinition(beanName);, +			if (!beanDefinition.isAbstract() && (findAnnotationOnBean(beanName, annotationType) != null)) {, +				results.put(beanName, getBean(beanName));, +			}, +		}, +		for (String beanName : getSingletonNames()) {, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/FactoryBeanTests-abstract.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">, +, +<beans>, +, +	<bean id="abstractFactoryBean" class="org.springframework.beans.factory.FactoryBeanTests$AbstractFactoryBean" abstract="true"/>, +, +</beans>, +++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java, +		for (String beanName : getBeanDefinitionNames()) {, +			BeanDefinition beanDefinition = getBeanDefinition(beanName);, +			if (!beanDefinition.isAbstract() && (findAnnotationOnBean(beanName, annotationType) != null)) {, +				results.put(beanName, getBean(beanName));, +			}, +		}, +		for (String beanName : getSingletonNames()) {, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/FactoryBeanTests-abstract.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">, +, +<beans>, +, +	<bean id="abstractFactoryBean" class="org.springframework.beans.factory.FactoryBeanTests$AbstractFactoryBean" abstract="true"/>, +, +</beans>, +++ b/spring-beans/src/test/java/org/springframework/beans/factory/FactoryBeanTests.java, +import org.springframework.stereotype.Component;, +	private static final Resource ABSTRACT_CONTEXT = qualifiedResource(CLASS, "abstract.xml");, +	@Test, +	public void testAbstractFactoryBeanViaAnnotation() throws Exception {, +		DefaultListableBeanFactory factory = new DefaultListableBeanFactory();, +		new XmlBeanDefinitionReader(factory).loadBeanDefinitions(ABSTRACT_CONTEXT);, +		factory.getBeansWithAnnotation(Component.class);, +	}, +, +	@Test, +	public void testAbstractFactoryBeanViaType() throws Exception {, +		DefaultListableBeanFactory factory = new DefaultListableBeanFactory();, +		new XmlBeanDefinitionReader(factory).loadBeanDefinitions(ABSTRACT_CONTEXT);, +		factory.getBeansOfType(AbstractFactoryBean.class);, +	}, +, +	@Component, +	public abstract static class AbstractFactoryBean implements FactoryBean<Object> {, +	}, +]