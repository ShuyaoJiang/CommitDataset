[+++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +import org.springframework.core.annotation.AnnotationUtils;, +							if (!isFactoryMethod(method)) {, +						}, +, +						private boolean isFactoryMethod(Method method) {							, +							if (AnnotationUtils.findAnnotation(method, FactoryMethod.class)!= null) {, +								return true;, +							} else {, +								return false;, +							}							, +						}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +import org.springframework.core.annotation.AnnotationUtils;, +							if (!isFactoryMethod(method)) {, +						}, +, +						private boolean isFactoryMethod(Method method) {							, +							if (AnnotationUtils.findAnnotation(method, FactoryMethod.class)!= null) {, +								return true;, +							} else {, +								return false;, +							}							, +						}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/FactoryMethod.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.beans.factory.annotation;, +, +import java.lang.annotation.ElementType;, +import java.lang.annotation.Retention;, +import java.lang.annotation.RetentionPolicy;, +import java.lang.annotation.Target;, +, +/**, + * Marks a method as being a factory-method of the class.  Use during component scanning, + * to create a bean definition that has factory-bean and factory-method metadata, + * , + * @author Mark Pollack, + * @since 3.0, + * @see RequiredAnnotationBeanPostProcessor, + */, +@Retention(RetentionPolicy.RUNTIME), +@Target({ElementType.METHOD}), +public @interface FactoryMethod {, +, +}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.java, +import org.springframework.core.annotation.AnnotationUtils;, +							if (!isFactoryMethod(method)) {, +						}, +, +						private boolean isFactoryMethod(Method method) {							, +							if (AnnotationUtils.findAnnotation(method, FactoryMethod.class)!= null) {, +								return true;, +							} else {, +								return false;, +							}							, +						}, +++ b/org.springframework.beans/src/main/java/org/springframework/beans/factory/annotation/FactoryMethod.java, +/*, + * Copyright 2002-2009 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.beans.factory.annotation;, +, +import java.lang.annotation.ElementType;, +import java.lang.annotation.Retention;, +import java.lang.annotation.RetentionPolicy;, +import java.lang.annotation.Target;, +, +/**, + * Marks a method as being a factory-method of the class.  Use during component scanning, + * to create a bean definition that has factory-bean and factory-method metadata]