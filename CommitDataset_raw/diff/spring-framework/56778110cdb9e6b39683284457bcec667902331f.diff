[+++ b/org.springframework.context/src/main/java/org/springframework/context/LifecycleProcessor.java, + * @author Juergen Hoeller, +	/**, +	 * Notification of context refresh, e.g. for auto-starting components., +	 */, +	/**, +	 * Notification of context close phase, e.g. for auto-stopping components., +	 */, +	void onClose();, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/LifecycleProcessor.java, + * @author Juergen Hoeller, +	/**, +	 * Notification of context refresh, e.g. for auto-starting components., +	 */, +	/**, +	 * Notification of context close phase, e.g. for auto-stopping components., +	 */, +	void onClose();, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java, +			getLifecycleProcessor().onClose();, +		getLifecycleProcessor().start();, +		getLifecycleProcessor().stop();, +		return getLifecycleProcessor().isRunning();, +++ b/org.springframework.context/src/main/java/org/springframework/context/LifecycleProcessor.java, + * @author Juergen Hoeller, +	/**, +	 * Notification of context refresh, e.g. for auto-starting components., +	 */, +	/**, +	 * Notification of context close phase, e.g. for auto-stopping components., +	 */, +	void onClose();, +, +++ b/org.springframework.context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java, +			getLifecycleProcessor().onClose();, +		getLifecycleProcessor().start();, +		getLifecycleProcessor().stop();, +		return getLifecycleProcessor().isRunning();, +++ b/org.springframework.context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java, +	public void onClose() {, +		stop();, +	}, +]