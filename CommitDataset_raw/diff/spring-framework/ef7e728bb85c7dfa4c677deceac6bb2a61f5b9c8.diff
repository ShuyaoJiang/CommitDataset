[+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +				// No equivalent method found, +			}, +			if (annotation == null) {, +				annotation = searchOnInterfaces(method, annotationType, cl.getInterfaces());, +++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java, +				// No equivalent method found, +			}, +			if (annotation == null) {, +				annotation = searchOnInterfaces(method, annotationType, cl.getInterfaces());, +++ b/spring-core/src/test/java/org/springframework/core/annotation/AnnotationUtilsTests.java, + * Copyright 2002-2012 the original author or authors., +, +import static org.junit.Assert.*;, +, +import static org.springframework.core.annotation.AnnotationUtils.*;, +, +	@Test, +	public void testFindAnnotationFromInterfaceWhenSuperDoesNotImplementMethod() throws Exception {, +, +		Method method = SubOfAbstractImplementsInterfaceWithAnnotatedMethod.class.getMethod("foo");, +		Order order = findAnnotation(method, Order.class);, +		assertNotNull(order);, +	}, +, +	public abstract static class AbstractDoesNotImplementInterfaceWithAnnotatedMethod implements InterfaceWithAnnotatedMethod {, +	}, +, +	public static class SubOfAbstractImplementsInterfaceWithAnnotatedMethod extends AbstractDoesNotImplementInterfaceWithAnnotatedMethod {, +, +		public void foo() {, +		}, +	}, +]