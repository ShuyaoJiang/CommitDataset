[+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketNamespaceUtils.java, +import java.util.concurrent.ExecutorService;, +import java.util.concurrent.RejectedExecutionHandler;, +import java.util.concurrent.ScheduledThreadPoolExecutor;, +import java.util.concurrent.ThreadFactory;, +, +			RootBeanDefinition taskSchedulerDef = new RootBeanDefinition(SockJsThreadPoolTaskScheduler.class);, +, +	@SuppressWarnings("serial"), +	private static class SockJsThreadPoolTaskScheduler extends ThreadPoolTaskScheduler {, +, +		@Override, +		protected ExecutorService initializeExecutor(ThreadFactory factory, RejectedExecutionHandler handler) {, +			ExecutorService service = super.initializeExecutor(factory, handler);, +			((ScheduledThreadPoolExecutor) service).setRemoveOnCancelPolicy(true);, +			return service;, +		}, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketNamespaceUtils.java, +import java.util.concurrent.ExecutorService;, +import java.util.concurrent.RejectedExecutionHandler;, +import java.util.concurrent.ScheduledThreadPoolExecutor;, +import java.util.concurrent.ThreadFactory;, +, +			RootBeanDefinition taskSchedulerDef = new RootBeanDefinition(SockJsThreadPoolTaskScheduler.class);, +, +	@SuppressWarnings("serial"), +	private static class SockJsThreadPoolTaskScheduler extends ThreadPoolTaskScheduler {, +, +		@Override, +		protected ExecutorService initializeExecutor(ThreadFactory factory, RejectedExecutionHandler handler) {, +			ExecutorService service = super.initializeExecutor(factory, handler);, +			((ScheduledThreadPoolExecutor) service).setRemoveOnCancelPolicy(true);, +			return service;, +		}, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebSocketConfigurationSupport.java, +import java.util.concurrent.ExecutorService;, +import java.util.concurrent.RejectedExecutionHandler;, +import java.util.concurrent.ScheduledThreadPoolExecutor;, +import java.util.concurrent.ThreadFactory;, +, +		@SuppressWarnings("serial"), +		ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler() {, +			@Override, +			protected ExecutorService initializeExecutor(ThreadFactory factory, RejectedExecutionHandler handler) {, +				ExecutorService service = super.initializeExecutor(factory, handler);, +				((ScheduledThreadPoolExecutor) service).setRemoveOnCancelPolicy(true);, +				return service;, +			}, +		};, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketNamespaceUtils.java, +import java.util.concurrent.ExecutorService;, +import java.util.concurrent.RejectedExecutionHandler;, +import java.util.concurrent.ScheduledThreadPoolExecutor;, +import java.util.concurrent.ThreadFactory;, +, +			RootBeanDefinition taskSchedulerDef = new RootBeanDefinition(SockJsThreadPoolTaskScheduler.class);, +, +	@SuppressWarnings("serial"), +	private static class SockJsThreadPoolTaskScheduler extends ThreadPoolTaskScheduler {, +, +		@Override, +		protected ExecutorService initializeExecutor(ThreadFactory factory, RejectedExecutionHandler handler) {, +			ExecutorService service = super.initializeExecutor(factory, handler);, +			((ScheduledThreadPoolExecutor) service).setRemoveOnCancelPolicy(true);, +			return service;, +		}, +	}, +, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebSocketConfigurationSupport.java, +import java.util.concurrent.ExecutorService;, +import java.util.concurrent.RejectedExecutionHandler;, +import java.util.concurrent.ScheduledThreadPoolExecutor;, +import java.util.concurrent.ThreadFactory;, +, +		@SuppressWarnings("serial"), +		ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler() {, +			@Override, +			protected ExecutorService initializeExecutor(ThreadFactory factory, RejectedExecutionHandler handler) {, +				ExecutorService service = super.initializeExecutor(factory, handler);, +				((ScheduledThreadPoolExecutor) service).setRemoveOnCancelPolicy(true);, +				return service;, +			}, +		};, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebSocketMessageBrokerConfigurationSupport.java, +import java.util.concurrent.ExecutorService;, +import java.util.concurrent.RejectedExecutionHandler;, +import java.util.concurrent.ScheduledThreadPoolExecutor;, +import java.util.concurrent.ThreadFactory;, +		@SuppressWarnings("serial"), +		ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler() {, +			@Override, +			protected ExecutorService initializeExecutor(ThreadFactory factory, RejectedExecutionHandler handler) {, +				ExecutorService service = super.initializeExecutor(factory, handler);, +				((ScheduledThreadPoolExecutor) service).setRemoveOnCancelPolicy(true);, +				return service;, +			}]