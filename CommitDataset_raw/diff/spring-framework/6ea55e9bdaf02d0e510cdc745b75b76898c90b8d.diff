[+++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +		public String getValue() {, +			setValue(parse(formatted));, +		public String format(Object selectableValue) {, +			selectableValue = typeConverter.convert(selectableValue, formatter.getFormattedObjectType());, +			return formatter.format(selectableValue, LocaleContextHolder.getLocale());, +		public String[] getValues() {, +		public BindingFailures getFailures() {, +		private void copy(Iterable<?> values, String[] formattedValues) {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +		public String getValue() {, +			setValue(parse(formatted));, +		public String format(Object selectableValue) {, +			selectableValue = typeConverter.convert(selectableValue, formatter.getFormattedObjectType());, +			return formatter.format(selectableValue, LocaleContextHolder.getLocale());, +		public String[] getValues() {, +		public BindingFailures getFailures() {, +		private void copy(Iterable<?> values, String[] formattedValues) {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binding.java, +	String getValue();, +	String format(Object selectableValue);, +	String[] getValues();, +	BindingFailures getFailures();	, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +		public String getValue() {, +			setValue(parse(formatted));, +		public String format(Object selectableValue) {, +			selectableValue = typeConverter.convert(selectableValue, formatter.getFormattedObjectType());, +			return formatter.format(selectableValue, LocaleContextHolder.getLocale());, +		public String[] getValues() {, +		public BindingFailures getFailures() {, +		private void copy(Iterable<?> values, String[] formattedValues) {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binding.java, +	String getValue();, +	String format(Object selectableValue);, +	String[] getValues();, +	BindingFailures getFailures();	, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/BindingFailure.java, +package org.springframework.ui.binding;, +, +import java.util.Map;, +, +public interface BindingFailure {, +	, +	String getCode();, +, +	String getSeverity();, +	, +	// TODO - where does arg formatting occur, +	Map<String, Object> getArgs();, +	, +	Map<String, String> getDetails();, +}, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java, +		public String getValue() {, +			setValue(parse(formatted));, +		public String format(Object selectableValue) {, +			selectableValue = typeConverter.convert(selectableValue, formatter.getFormattedObjectType());, +			return formatter.format(selectableValue, LocaleContextHolder.getLocale());, +		public String[] getValues() {, +		public BindingFailures getFailures() {, +		private void copy(Iterable<?> values, String[] formattedValues) {, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binding.java, +	String getValue();, +	String format(Object selectableValue);, +	String[] getValues();, +	BindingFailures getFailures();	, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/BindingFailure.java, +package org.springframework.ui.binding;, +, +import java.util.Map;, +, +public interface BindingFailure {, +	, +	String getCode();, +, +	String getSeverity();, +	, +	// TODO - where does arg formatting occur, +	Map<String, Object> getArgs();, +	, +	Map<String, String> getDetails();, +}, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/BindingFailures.java, +package org.springframework.ui.binding;, +, +import java.util.List;, +, +public interface BindingFailures {, +	, +	int getCount();, +	, +	Severity getMaximumSeverity();, +	, +	List<BindingFailure> getAll();, +, +	List<BindingFailure> getBySeverity(Severity severity);, +	, +}, +++ b/org.springframework.context/src/main/java/org/springframework/ui/binding/Binder.java]