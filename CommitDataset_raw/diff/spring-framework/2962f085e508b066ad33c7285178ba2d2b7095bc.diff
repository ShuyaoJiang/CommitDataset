[+++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageReader.java, +		return (MULTIVALUE_TYPE.isAssignableFrom(elementType)  ||, +				(elementType.hasUnresolvableGenerics() && MultiValueMap.class.isAssignableFrom(elementType.resolve()))) &&, +				(mediaType == null || MediaType.APPLICATION_FORM_URLENCODED.isCompatibleWith(mediaType));, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageReader.java, +		return (MULTIVALUE_TYPE.isAssignableFrom(elementType)  ||, +				(elementType.hasUnresolvableGenerics() && MultiValueMap.class.isAssignableFrom(elementType.resolve()))) &&, +				(mediaType == null || MediaType.APPLICATION_FORM_URLENCODED.isCompatibleWith(mediaType));, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java, +		return (MULTIVALUE_TYPE.isAssignableFrom(elementType) ||, +				(elementType.hasUnresolvableGenerics() && MultiValueMap.class.isAssignableFrom(elementType.resolve()))) &&, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageReader.java, +		return (MULTIVALUE_TYPE.isAssignableFrom(elementType)  ||, +				(elementType.hasUnresolvableGenerics() && MultiValueMap.class.isAssignableFrom(elementType.resolve()))) &&, +				(mediaType == null || MediaType.APPLICATION_FORM_URLENCODED.isCompatibleWith(mediaType));, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java, +		return (MULTIVALUE_TYPE.isAssignableFrom(elementType) ||, +				(elementType.hasUnresolvableGenerics() && MultiValueMap.class.isAssignableFrom(elementType.resolve()))) &&, +++ b/spring-web/src/test/java/org/springframework/http/codec/FormHttpMessageReaderTests.java, +import org.springframework.util.LinkedMultiValueMap;, +		assertTrue(this.reader.canRead(, +				ResolvableType.forInstance(new LinkedMultiValueMap<String, String>()),, +				MediaType.APPLICATION_FORM_URLENCODED));, +, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageReader.java, +		return (MULTIVALUE_TYPE.isAssignableFrom(elementType)  ||, +				(elementType.hasUnresolvableGenerics() && MultiValueMap.class.isAssignableFrom(elementType.resolve()))) &&, +				(mediaType == null || MediaType.APPLICATION_FORM_URLENCODED.isCompatibleWith(mediaType));, +++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java, +		return (MULTIVALUE_TYPE.isAssignableFrom(elementType) ||, +				(elementType.hasUnresolvableGenerics() && MultiValueMap.class.isAssignableFrom(elementType.resolve()))) &&, +++ b/spring-web/src/test/java/org/springframework/http/codec/FormHttpMessageReaderTests.java, +import org.springframework.util.LinkedMultiValueMap;, +		assertTrue(this.reader.canRead(, +				ResolvableType.forInstance(new LinkedMultiValueMap<String, String>()),, +				MediaType.APPLICATION_FORM_URLENCODED));, +, +++ b/spring-web/src/test/java/org/springframework/http/codec/FormHttpMessageWriterTests.java, +		assertTrue(this.writer.canWrite(, +				ResolvableType.forInstance(new LinkedMultiValueMap<String, String>()),, +				MediaType.APPLICATION_FORM_URLENCODED));, +]