[+++ b/spring-web/src/main/java/org/springframework/web/filter/HttpPutFormContentFilter.java, +			if (!formParameters.isEmpty()) {, +				return;, +		}, +, +			String[] parameterValues = super.getParameterValues(name);, +				return parameterValues;, +			if (parameterValues == null || getQueryString() == null) {, +				List<String> result = new ArrayList<>(parameterValues.length + formParam.size());, +				result.addAll(Arrays.asList(parameterValues));, +++ b/spring-web/src/main/java/org/springframework/web/filter/HttpPutFormContentFilter.java, +			if (!formParameters.isEmpty()) {, +				return;, +		}, +, +			String[] parameterValues = super.getParameterValues(name);, +				return parameterValues;, +			if (parameterValues == null || getQueryString() == null) {, +				List<String> result = new ArrayList<>(parameterValues.length + formParam.size());, +				result.addAll(Arrays.asList(parameterValues));, +++ b/spring-web/src/test/java/org/springframework/web/filter/HttpPutFormContentFilterTests.java, +		request.setContent("foo=bar".getBytes("ISO-8859-1"));, +	@Test // SPR-15835, +	public void hiddenHttpMethodFilterFollowedByHttpPutFormContentFilter() throws Exception {, +		request.addParameter("_method", "PUT");, +		request.addParameter("hiddenField", "testHidden");, +		filter.doFilter(request, response, filterChain);, +, +		assertArrayEquals(new String[]{"testHidden"}, filterChain.getRequest().getParameterValues("hiddenField"));, +	}, +]