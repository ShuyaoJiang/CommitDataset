[+++ b/spring-core/src/main/java/org/springframework/core/CollectionFactory.java, + * Copyright 2002-2013 the original author or authors., +import java.util.NavigableMap;, +import java.util.NavigableSet;, +		approximableCollectionTypes.add(NavigableSet.class);, +		approximableMapTypes.add(NavigableMap.class);, +++ b/spring-core/src/main/java/org/springframework/core/CollectionFactory.java, + * Copyright 2002-2013 the original author or authors., +import java.util.NavigableMap;, +import java.util.NavigableSet;, +		approximableCollectionTypes.add(NavigableSet.class);, +		approximableMapTypes.add(NavigableMap.class);, +++ /dev/null, +++ b/spring-core/src/main/java/org/springframework/core/CollectionFactory.java, + * Copyright 2002-2013 the original author or authors., +import java.util.NavigableMap;, +import java.util.NavigableSet;, +		approximableCollectionTypes.add(NavigableSet.class);, +		approximableMapTypes.add(NavigableMap.class);, +++ /dev/null, +++ b/spring-core/src/main/java/org/springframework/core/JdkVersion.java, + * Copyright 2002-2013 the original author or authors., + * <p>Note that Spring requires JVM 1.6 or higher, as of Spring 4.0., +	/**, +	 * Constant identifying the 1.8 JVM (Java 8)., +	 */, +	public static final int JAVA_18 = 5;, +, +		if (javaVersion.contains("1.8.")) {, +			majorJavaVersion = JAVA_18;, +		}, +		else if (javaVersion.contains("1.7.")) {, +			// else leave 1.6 as default (it's either 1.6 or unknown), +			majorJavaVersion = JAVA_16;, +	 * {@code if (getMajorJavaVersion() >= JAVA_17)}., +++ b/spring-core/src/main/java/org/springframework/core/CollectionFactory.java, + * Copyright 2002-2013 the original author or authors., +import java.util.NavigableMap;, +import java.util.NavigableSet;, +		approximableCollectionTypes.add(NavigableSet.class);, +		approximableMapTypes.add(NavigableMap.class);, +++ /dev/null, +++ b/spring-core/src/main/java/org/springframework/core/JdkVersion.java, + * Copyright 2002-2013 the original author or authors., + * <p>Note that Spring requires JVM 1.6 or higher, as of Spring 4.0., +	/**, +	 * Constant identifying the 1.8 JVM (Java 8)., +	 */, +	public static final int JAVA_18 = 5;, +, +		if (javaVersion.contains("1.8.")) {, +			majorJavaVersion = JAVA_18;, +		}, +		else if (javaVersion.contains("1.7.")) {, +			// else leave 1.6 as default (it's either 1.6 or unknown), +			majorJavaVersion = JAVA_16;, +	 * {@code if (getMajorJavaVersion() >= JAVA_17)}., +++ /dev/null]