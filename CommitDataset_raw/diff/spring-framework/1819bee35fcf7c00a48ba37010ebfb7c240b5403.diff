[+++ b/org.springframework.aop/src/main/java/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.java, + * Convenient superclass for {@link FactoryBean} types that produce singleton-scoped, + * proxy objects., +++ b/org.springframework.aop/src/main/java/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.java, + * Convenient superclass for {@link FactoryBean} types that produce singleton-scoped, + * proxy objects., +++ b/org.springframework.context/src/main/java/org/springframework/cache/interceptor/CacheProxyFactoryBean.java, + * <p>This class is designed to facilitate declarative cache demarcation: namely, wrapping, + * a singleton target object with a caching proxy, proxying all the interfaces that the, + * target implements. Exists primarily for third-party framework integration., + * <strong>Users should favor the {@code cache:} XML namespace, + * {@link org.springframework.cache.annotation.Cacheable @Cacheable} annotation.</strong>, + * See the <a href="http://bit.ly/p9rIvx">declarative annotation-based caching</a> section, + * of the Spring reference documentation for more information., +@SuppressWarnings("serial"), +++ b/org.springframework.aop/src/main/java/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.java, + * Convenient superclass for {@link FactoryBean} types that produce singleton-scoped, + * proxy objects., +++ b/org.springframework.context/src/main/java/org/springframework/cache/interceptor/CacheProxyFactoryBean.java, + * <p>This class is designed to facilitate declarative cache demarcation: namely, wrapping, + * a singleton target object with a caching proxy, proxying all the interfaces that the, + * target implements. Exists primarily for third-party framework integration., + * <strong>Users should favor the {@code cache:} XML namespace, + * {@link org.springframework.cache.annotation.Cacheable @Cacheable} annotation.</strong>, + * See the <a href="http://bit.ly/p9rIvx">declarative annotation-based caching</a> section, + * of the Spring reference documentation for more information., +@SuppressWarnings("serial"), +++ b/org.springframework.transaction/src/main/java/org/springframework/transaction/interceptor/TransactionProxyFactoryBean.java, + * <p><strong>HISTORICAL NOTE:</strong> This class was originally designed to cover the, + * typical case of declarative transaction demarcation: namely, wrapping a singleton, + * target object with a transactional proxy, proxying all the interfaces that the target, + * implements. However, in Spring versions 2.0 and beyond, the functionality provided here, + * is superseded by the more convenient {@code tx:} XML namespace. See the <a, + * href="http://bit.ly/qUwvwz">declarative transaction management</a> section of the, + * Spring reference documentation to understand the modern options for managing, + * transactions in Spring applications. For these reasons, <strong>users should favor of, + * the {@code tx:} XML namespace as well as, + * the @{@link org.springframework.transaction.annotation.Transactional Transactional}, + * and @{@link org.springframework.transaction.annotation.EnableTransactionManagement, + * EnableTransactionManagement} annotations.</strong>]