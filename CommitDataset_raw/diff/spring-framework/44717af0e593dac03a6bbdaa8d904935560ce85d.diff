[+++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/config/WebReactiveConfigurer.java, +	 * @param readers a list to add message readers to, initially an empty list, +	default void configureMessageReaders(List<HttpMessageReader<?>> readers) {, +	default void extendMessageReaders(List<HttpMessageReader<?>> readers) {, +	 * @param writers a list to add message writers to, initially an empty list, +	default void configureMessageWriters(List<HttpMessageWriter<?>> writers) {, +	default void extendMessageWriters(List<HttpMessageWriter<?>> writers) {, +	/**, +	 * Factory method for the {@link RequestMappingHandlerMapping} bean creating, +	 * an instance or a custom extension of it. Note that only one configurer, +	 * is allowed to implement this method., +	 * The default implementation returns {@code Optional.empty()}., +	 */, +	default Optional<RequestMappingHandlerMapping> createRequestMappingHandlerMapping() {, +		return Optional.empty();, +	}, +, +	/**, +	 * Factory method for the {@link RequestMappingHandlerAdapter} bean creating, +	 * an instance or a custom extension of it. Note that only one configurer, +	 * is allowed to implement this method., +	 * The default implementation returns {@code Optional.empty()}., +	 */, +	default Optional<RequestMappingHandlerAdapter> createRequestMappingHandlerAdapter() {, +		return Optional.empty();, +	}, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/config/WebReactiveConfigurer.java, +	 * @param readers a list to add message readers to, initially an empty list, +	default void configureMessageReaders(List<HttpMessageReader<?>> readers) {, +	default void extendMessageReaders(List<HttpMessageReader<?>> readers) {, +	 * @param writers a list to add message writers to, initially an empty list, +	default void configureMessageWriters(List<HttpMessageWriter<?>> writers) {, +	default void extendMessageWriters(List<HttpMessageWriter<?>> writers) {, +	/**, +	 * Factory method for the {@link RequestMappingHandlerMapping} bean creating, +	 * an instance or a custom extension of it. Note that only one configurer, +	 * is allowed to implement this method., +	 * The default implementation returns {@code Optional.empty()}., +	 */, +	default Optional<RequestMappingHandlerMapping> createRequestMappingHandlerMapping() {, +		return Optional.empty();, +	}, +, +	/**, +	 * Factory method for the {@link RequestMappingHandlerAdapter} bean creating, +	 * an instance or a custom extension of it. Note that only one configurer, +	 * is allowed to implement this method., +	 * The default implementation returns {@code Optional.empty()}., +	 */, +	default Optional<RequestMappingHandlerAdapter> createRequestMappingHandlerAdapter() {, +		return Optional.empty();, +	}, +, +++ b/spring-web-reactive/src/main/java/org/springframework/web/reactive/config/WebReactiveConfigurerComposite.java, +	public void configureMessageReaders(List<HttpMessageReader<?>> readers) {, +		this.delegates.stream().forEach(delegate -> delegate.configureMessageReaders(readers));, +	public void extendMessageReaders(List<HttpMessageReader<?>> readers) {, +		this.delegates.stream().forEach(delegate -> delegate.extendMessageReaders(readers));, +	public void configureMessageWriters(List<HttpMessageWriter<?>> writers) {, +		this.delegates.stream().forEach(delegate -> delegate.configureMessageWriters(writers));, +	public void extendMessageWriters(List<HttpMessageWriter<?>> writers) {, +		this.delegates.stream().forEach(delegate -> delegate.extendMessageWriters(writers));, +	@Override, +	public Optional<RequestMappingHandlerMapping> createRequestMappingHandlerMapping() {, +		return createSingleBean(WebReactiveConfigurer::createRequestMappingHandlerMapping,, +				RequestMappingHandlerMapping.class);, +	}, +, +	@Override, +	public Optional<RequestMappingHandlerAdapter> createRequestMappingHandlerAdapter() {, +		return createSingleBean(WebReactiveConfigurer::createRequestMappingHandlerAdapter,, +				RequestMappingHandlerAdapter.class);, +	}, +]