[+++ b/org.springframework.web/src/main/java/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.java, +import org.codehaus.jackson.map.JsonMappingException;, +		catch (JsonMappingException ex) {, +			throw new HttpMessageNotReadableException("Could not read JSON: " + ex.getMessage(), ex);, +		}, +++ b/org.springframework.web/src/main/java/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.java, +import org.codehaus.jackson.map.JsonMappingException;, +		catch (JsonMappingException ex) {, +			throw new HttpMessageNotReadableException("Could not read JSON: " + ex.getMessage(), ex);, +		}, +++ b/org.springframework.web/src/test/java/org/springframework/http/converter/json/MappingJacksonHttpMessageConverterTests.java, +import static org.junit.Assert.assertArrayEquals;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertTrue;, +, +		List<String> array = new ArrayList<String>();, +	@Test(expected = HttpMessageNotReadableException.class), +	public void readValidJsonWithUnknownProperty() throws IOException {, +		String body = "{\"string\":\"string\",\"unknownProperty\":\"value\"}";, +		MockHttpInputMessage inputMessage = new MockHttpInputMessage(body.getBytes("UTF-8"));, +		inputMessage.getHeaders().setContentType(new MediaType("application", "json"));, +		converter.read(MyBean.class, inputMessage);, +	}]