[+++ b/build.gradle, +	ext.jettyVersion         = "9.3.0.v20150612", +++ b/build.gradle, +	ext.jettyVersion         = "9.3.0.v20150612", +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/HandlersBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, +		RootBeanDefinition handlerMappingDef = new RootBeanDefinition(WebSocketHandlerMapping.class);, +++ b/build.gradle, +	ext.jettyVersion         = "9.3.0.v20150612", +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/HandlersBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, +		RootBeanDefinition handlerMappingDef = new RootBeanDefinition(WebSocketHandlerMapping.class);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistry.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, +		WebSocketHandlerMapping hm = new WebSocketHandlerMapping();, +++ b/build.gradle, +	ext.jettyVersion         = "9.3.0.v20150612", +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/HandlersBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, +		RootBeanDefinition handlerMappingDef = new RootBeanDefinition(WebSocketHandlerMapping.class);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistry.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, +		WebSocketHandlerMapping hm = new WebSocketHandlerMapping();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/jetty/JettyRequestUpgradeStrategy.java, +import java.lang.reflect.Method;, +import javax.servlet.ServletContext;, +import org.springframework.util.ClassUtils;, +import org.springframework.web.context.ServletContextAware;, +public class JettyRequestUpgradeStrategy implements RequestUpgradeStrategy, Lifecycle, ServletContextAware {, +, +	// Pre-Jetty 9.3 init method without ServletContext, +	private static final Method webSocketFactoryInitMethod =, +			ClassUtils.getMethodIfAvailable(WebSocketServerFactory.class, "init");, +	private ServletContext servletContext;, +, +	public void setServletContext(ServletContext servletContext) {, +		this.servletContext = servletContext;, +	}, +, +	@Override, +				if (webSocketFactoryInitMethod != null) {, +					webSocketFactoryInitMethod.invoke(this.factory);, +				}, +				else {, +					this.factory.init(this.servletContext);, +				}, +++ b/build.gradle, +	ext.jettyVersion         = "9.3.0.v20150612", +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/HandlersBeanDefinitionParser.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, +		RootBeanDefinition handlerMappingDef = new RootBeanDefinition(WebSocketHandlerMapping.class);, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistry.java, +import org.springframework.web.socket.server.support.WebSocketHandlerMapping;, +		WebSocketHandlerMapping hm = new WebSocketHandlerMapping();, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/jetty/JettyRequestUpgradeStrategy.java, +import java.lang.reflect.Method;, +import javax.servlet.ServletContext;, +import org.springframework.util.ClassUtils;, +import org.springframework.web.context.ServletContextAware;, +public class JettyRequestUpgradeStrategy implements RequestUpgradeStrategy, Lifecycle, ServletContextAware {, +, +	// Pre-Jetty 9.3 init method without ServletContext, +	private static final Method webSocketFactoryInitMethod =, +			ClassUtils.getMethodIfAvailable(WebSocketServerFactory.class, "init");, +	private ServletContext servletContext;, +, +	public void setServletContext(ServletContext servletContext) {, +		this.servletContext = servletContext;, +	}, +, +	@Override, +				if (webSocketFactoryInitMethod != null) {, +					webSocketFactoryInitMethod.invoke(this.factory);, +				}, +				else {, +					this.factory.init(this.servletContext);, +				}, +++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java, +/*, + * Copyright 2002-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.web.socket.server.support;, +, +import java.io.IOException;, +import java.nio.charset.Charset;, +import java.security.Principal;, +import java.util.ArrayList;]