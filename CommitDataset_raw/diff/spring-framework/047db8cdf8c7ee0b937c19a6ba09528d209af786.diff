[+++ b/build.gradle, +		optional("org.codehaus.jackson:jackson-mapper-asl:1.4.2"), +		optional("com.fasterxml.jackson.core:jackson-databind:2.0.1"), +++ b/build.gradle, +		optional("org.codehaus.jackson:jackson-mapper-asl:1.4.2"), +		optional("com.fasterxml.jackson.core:jackson-databind:2.0.1"), +++ b/gradle.properties, +version=3.2.1.BUILD-SNAPSHOT, +++ b/build.gradle, +		optional("org.codehaus.jackson:jackson-mapper-asl:1.4.2"), +		optional("com.fasterxml.jackson.core:jackson-databind:2.0.1"), +++ b/gradle.properties, +version=3.2.1.BUILD-SNAPSHOT, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +		if (beanName == null || !this.targetSourcedBeans.containsKey(beanName)) {, +		if (beanName != null) {, +		}, +		if (beanName != null && this.targetSourcedBeans.containsKey(beanName)) {, +	 * <p>The default implementation considers Advices, Advisors and, +	 * AopInfrastructureBeans as infrastructure classes., +	 * @see org.aopalliance.aop.Advice, +	 * @see org.springframework.aop.framework.AopInfrastructureBean, +		boolean retVal = Advice.class.isAssignableFrom(beanClass) ||, +				Advisor.class.isAssignableFrom(beanClass) ||, +++ b/build.gradle, +		optional("org.codehaus.jackson:jackson-mapper-asl:1.4.2"), +		optional("com.fasterxml.jackson.core:jackson-databind:2.0.1"), +++ b/gradle.properties, +version=3.2.1.BUILD-SNAPSHOT, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +		if (beanName == null || !this.targetSourcedBeans.containsKey(beanName)) {, +		if (beanName != null) {, +		}, +		if (beanName != null && this.targetSourcedBeans.containsKey(beanName)) {, +	 * <p>The default implementation considers Advices, Advisors and, +	 * AopInfrastructureBeans as infrastructure classes., +	 * @see org.aopalliance.aop.Advice, +	 * @see org.springframework.aop.framework.AopInfrastructureBean, +		boolean retVal = Advice.class.isAssignableFrom(beanClass) ||, +				Advisor.class.isAssignableFrom(beanClass) ||, +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +		super(propertyName, readMethod, writeMethod);, +		super(propertyName, readMethod, writeMethod, indexedReadMethod, indexedWriteMethod);, +			String key = (String)keys.nextElement();, +++ b/build.gradle, +		optional("org.codehaus.jackson:jackson-mapper-asl:1.4.2"), +		optional("com.fasterxml.jackson.core:jackson-databind:2.0.1"), +++ b/gradle.properties, +version=3.2.1.BUILD-SNAPSHOT, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +		if (beanName == null || !this.targetSourcedBeans.containsKey(beanName)) {, +		if (beanName != null) {, +		}, +		if (beanName != null && this.targetSourcedBeans.containsKey(beanName)) {, +	 * <p>The default implementation considers Advices, Advisors and, +	 * AopInfrastructureBeans as infrastructure classes., +	 * @see org.aopalliance.aop.Advice, +	 * @see org.springframework.aop.framework.AopInfrastructureBean, +		boolean retVal = Advice.class.isAssignableFrom(beanClass) ||, +				Advisor.class.isAssignableFrom(beanClass) ||, +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +		super(propertyName, readMethod, writeMethod);, +		super(propertyName, readMethod, writeMethod, indexedReadMethod, indexedWriteMethod);, +			String key = (String)keys.nextElement();, +++ b/spring-beans/src/test/java/org/springframework/beans/ExtendedBeanInfoTests.java, +				assertThat(pd.getWriteMethod(), is(C.class.getMethod("setFoo", int.class)));, +		assertThat(hasIndexedWriteMethodForProperty(ebi, "dateFormat"), is(true));, +++ b/build.gradle, +		optional("org.codehaus.jackson:jackson-mapper-asl:1.4.2"), +		optional("com.fasterxml.jackson.core:jackson-databind:2.0.1"), +++ b/gradle.properties, +version=3.2.1.BUILD-SNAPSHOT, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +		if (beanName == null || !this.targetSourcedBeans.containsKey(beanName)) {, +		if (beanName != null) {, +		}, +		if (beanName != null && this.targetSourcedBeans.containsKey(beanName)) {, +	 * <p>The default implementation considers Advices, Advisors and, +	 * AopInfrastructureBeans as infrastructure classes., +	 * @see org.aopalliance.aop.Advice, +	 * @see org.springframework.aop.framework.AopInfrastructureBean, +		boolean retVal = Advice.class.isAssignableFrom(beanClass) ||, +				Advisor.class.isAssignableFrom(beanClass) ||, +++ b/spring-beans/src/main/java/org/springframework/beans/ExtendedBeanInfo.java, +		super(propertyName, readMethod, writeMethod);, +		super(propertyName, readMethod, writeMethod, indexedReadMethod, indexedWriteMethod);, +			String key = (String)keys.nextElement();, +++ b/spring-beans/src/test/java/org/springframework/beans/ExtendedBeanInfoTests.java, +				assertThat(pd.getWriteMethod(), is(C.class.getMethod("setFoo", int.class)));, +		assertThat(hasIndexedWriteMethodForProperty(ebi, "dateFormat"), is(true));, +++ b/spring-context/src/main/resources/org/springframework/scheduling/config/spring-task-3.2.xsd, +		<xsd:attribute name="initial-delay" type="xsd:string" use="optional">, +++ b/build.gradle, +		optional("org.codehaus.jackson:jackson-mapper-asl:1.4.2"), +		optional("com.fasterxml.jackson.core:jackson-databind:2.0.1"), +++ b/gradle.properties, +version=3.2.1.BUILD-SNAPSHOT, +++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java, +		if (beanName == null || !this.targetSourcedBeans.containsKey(beanName)) {, +		if (beanName != null) {]