[+++ b/org.springframework.context/src/test/java/org/springframework/format/support/FormattingConversionServiceTests.java, +import org.springframework.beans.ConfigurablePropertyAccessor;, +		doTestFormatFieldForAnnotation(Model.class, false);, +	}, +, +	@Test, +	public void testFormatFieldForAnnotationWithDirectFieldAccess() throws Exception {, +		formattingService.addFormatterForFieldAnnotation(new JodaDateTimeFormatAnnotationFormatterFactory());, +		doTestFormatFieldForAnnotation(Model.class, true);, +		doTestFormatFieldForAnnotation(ModelWithPlaceholders.class, false);, +		doTestFormatFieldForAnnotation(ModelWithPlaceholders.class, false);, +	private void doTestFormatFieldForAnnotation(Class<?> modelClass, boolean directFieldAccess) throws Exception {, +		ConfigurablePropertyAccessor accessor = directFieldAccess ? PropertyAccessorFactory.forDirectFieldAccess(model) :, +				PropertyAccessorFactory.forBeanPropertyAccess(model);, +		if (!directFieldAccess) {, +	}, +		assertNull(formattingService.convert("", TypeDescriptor.valueOf(String.class), TypeDescriptor.valueOf(Integer.class)));, +		assertNull(formattingService.convert("", TypeDescriptor.valueOf(String.class), TypeDescriptor.valueOf(Integer.class)));]