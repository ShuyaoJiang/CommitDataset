[+++ b/spring-context/src/main/java/org/springframework/context/ApplicationContext.java, +	 * Return a name for the deployed application that this context belongs to., +	 * @return a name for the deployed application, or the empty String by default, +	 */, +	String getApplicationName();, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/ApplicationContext.java, +	 * Return a name for the deployed application that this context belongs to., +	 * @return a name for the deployed application, or the empty String by default, +	 */, +	String getApplicationName();, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java, +, +	public String getApplicationName() {, +		return "";, +	}, +, +			this.environment = createEnvironment();, +				getEnvironment().merge((ConfigurableEnvironment)parentEnvironment);, +		getEnvironment().validateRequiredProperties();, +		beanFactory.addPropertyEditorRegistrar(new ResourceEditorRegistrar(this, getEnvironment()));, +, +		// Participate in LiveBeansView MBean, if active., +		LiveBeansView.registerApplicationContext(this);, +			LiveBeansView.unregisterApplicationContext(this);, +, +++ b/spring-context/src/main/java/org/springframework/context/ApplicationContext.java, +	 * Return a name for the deployed application that this context belongs to., +	 * @return a name for the deployed application, or the empty String by default, +	 */, +	String getApplicationName();, +, +	/**, +++ b/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java, +, +	public String getApplicationName() {, +		return "";, +	}, +, +			this.environment = createEnvironment();, +				getEnvironment().merge((ConfigurableEnvironment)parentEnvironment);, +		getEnvironment().validateRequiredProperties();, +		beanFactory.addPropertyEditorRegistrar(new ResourceEditorRegistrar(this, getEnvironment()));, +, +		// Participate in LiveBeansView MBean, if active., +		LiveBeansView.registerApplicationContext(this);, +			LiveBeansView.unregisterApplicationContext(this);, +, +++ b/spring-context/src/main/java/org/springframework/context/support/LiveBeansView.java, +/*, + * Copyright 2002-2012 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.context.support;, +, +import java.lang.management.ManagementFactory;, +import java.util.Collections;, +import java.util.LinkedHashSet;, +import java.util.Set;, +import javax.management.MBeanServer;, +import javax.management.ObjectName;, +, +import org.springframework.beans.factory.config.BeanDefinition;, +import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.ApplicationContextAware;, +import org.springframework.context.ApplicationContextException;, +import org.springframework.context.ConfigurableApplicationContext;, +import org.springframework.util.Assert;, +import org.springframework.util.StringUtils;, +, +/**, + * Adapter for live beans view exposure, building a snapshot of current beans, + * and their dependencies from either a local ApplicationContext (with a, + * local LiveBeansView bean definition) or all registered ApplicationContexts, + * (driven by the "spring.liveBeansView.mbean" environment property)., + *, + * <p>Note: This feature is still in beta and primarily designed for use with, + * SpringSource Tool Suite 3.1., + *, + * @author Juergen Hoeller, + * @since 3.2, + * @see #getSnapshotAsJson(), + * @see org.springframework.web.context.support.LiveBeansViewServlet, + */]