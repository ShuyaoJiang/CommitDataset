[+++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/AbstractMockServerSpec.java, +import org.springframework.util.Assert;, +import org.springframework.web.server.session.DefaultWebSessionManager;, +import org.springframework.web.server.session.WebSessionManager;, +	private WebSessionManager sessionManager = new DefaultWebSessionManager();, +, +	public <T extends B> T webSessionManager(WebSessionManager sessionManager) {, +		Assert.notNull(sessionManager, "WebSessionManager must not be null.");, +		this.sessionManager = sessionManager;, +		return self();, +	}, +, +	@Override, +		builder.sessionManager(this.sessionManager);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/AbstractMockServerSpec.java, +import org.springframework.util.Assert;, +import org.springframework.web.server.session.DefaultWebSessionManager;, +import org.springframework.web.server.session.WebSessionManager;, +	private WebSessionManager sessionManager = new DefaultWebSessionManager();, +, +	public <T extends B> T webSessionManager(WebSessionManager sessionManager) {, +		Assert.notNull(sessionManager, "WebSessionManager must not be null.");, +		this.sessionManager = sessionManager;, +		return self();, +	}, +, +	@Override, +		builder.sessionManager(this.sessionManager);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +import org.springframework.web.server.session.WebSessionManager;, +		 * Register {@link WebFilter} instances to add to the mock server., +		 * Provide a session manager instance for the mock server., +		 * <p>By default an instance of, +		 * {@link org.springframework.web.server.session.DefaultWebSessionManager, +		 * DefaultWebSessionManager} is used., +		 * @param sessionManager the session manager to use, +		 */, +		<T extends B> T webSessionManager(WebSessionManager sessionManager);, +, +		/**, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/AbstractMockServerSpec.java, +import org.springframework.util.Assert;, +import org.springframework.web.server.session.DefaultWebSessionManager;, +import org.springframework.web.server.session.WebSessionManager;, +	private WebSessionManager sessionManager = new DefaultWebSessionManager();, +, +	public <T extends B> T webSessionManager(WebSessionManager sessionManager) {, +		Assert.notNull(sessionManager, "WebSessionManager must not be null.");, +		this.sessionManager = sessionManager;, +		return self();, +	}, +, +	@Override, +		builder.sessionManager(this.sessionManager);, +++ b/spring-test/src/main/java/org/springframework/test/web/reactive/server/WebTestClient.java, +import org.springframework.web.server.session.WebSessionManager;, +		 * Register {@link WebFilter} instances to add to the mock server., +		 * Provide a session manager instance for the mock server., +		 * <p>By default an instance of, +		 * {@link org.springframework.web.server.session.DefaultWebSessionManager, +		 * DefaultWebSessionManager} is used., +		 * @param sessionManager the session manager to use, +		 */, +		<T extends B> T webSessionManager(WebSessionManager sessionManager);, +, +		/**, +++ b/spring-test/src/test/java/org/springframework/test/web/reactive/server/MockServerIntegrationTests.java, +/*, + * Copyright 2002-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.test.web.reactive.server;, +, +import org.junit.Test;, +import reactor.core.publisher.Mono;, +, +import org.springframework.core.io.buffer.DataBuffer;, +import org.springframework.core.io.buffer.DefaultDataBufferFactory;, +import org.springframework.http.ResponseCookie;, +import org.springframework.web.server.WebHandler;, +, +import static java.nio.charset.StandardCharsets.UTF_8;, +, +/**, + * Mock server integration test scenarios., + * @author Rossen Stoyanchev, + */, +public class MockServerIntegrationTests {, +]