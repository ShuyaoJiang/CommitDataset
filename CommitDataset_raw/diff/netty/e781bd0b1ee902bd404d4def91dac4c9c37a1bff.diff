[+++ b/transport/src/main/java/io/netty/channel/socket/nio/NioEventLoop.java, +import io.netty.channel.SingleThreadEventLoop;, +import java.nio.channels.SelectableChannel;, +    private static final InternalLogger logger =, +            InternalLoggerFactory.getInstance(NioEventLoop.class);, +    Selector selector;, +    private final SelectorProvider provider;, +    private final AtomicBoolean wakenUp = new AtomicBoolean();, +                if (SelectorUtil.EPOLL_BUG_WORKAROUND) {, +                }, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioEventLoop.java, +import io.netty.channel.SingleThreadEventLoop;, +import java.nio.channels.SelectableChannel;, +    private static final InternalLogger logger =, +            InternalLoggerFactory.getInstance(NioEventLoop.class);, +    Selector selector;, +    private final SelectorProvider provider;, +    private final AtomicBoolean wakenUp = new AtomicBoolean();, +                if (SelectorUtil.EPOLL_BUG_WORKAROUND) {, +                }, +++ b/transport/src/main/java/io/netty/channel/socket/nio/SelectorUtil.java, +    static final boolean EPOLL_BUG_WORKAROUND =, +            SystemPropertyUtil.getBoolean("io.netty.epollBugWorkaround", false);, +        if (logger.isDebugEnabled()) {, +            logger.debug("Epoll-bug workaround enabled = " + EPOLL_BUG_WORKAROUND);, +        }]