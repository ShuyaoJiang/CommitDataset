[+++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +import org.jboss.netty.channel.Channels;, + *, + * The recommended approach is to specify a {@link ChannelPipelineFactory} by, + * calling {@link #setPipelineFactory(ChannelPipelineFactory)}., + *, + * <pre>, + * ConnectionlessBootstrap b = ...;, + * b.setPipelineFactory(new MyPipelineFactory());, + *, + * public class MyPipelineFactory implements {@link ChannelPipelineFactory} {, + *   public ChannelPipeline getPipeline() throws Exception {, + *     // Create and configure a new pipeline for a new channel., + *     {@link ChannelPipeline} p = {@link Channels}.pipeline();, + *     p.addLast("encoder", new EncodingHandler());, + *     p.addLast("decoder", new DecodingHandler());, + *     p.addLast("logic",   new LogicHandler());, + *     return p;, + *   }, + * }, + * </pre>, +, + * The alternative approach, which works only in a certain situation, is to use, + * ConnectionlessBootstrap b = ...;, + * // Add handlers to the default pipeline., + * Therefore, you cannot use this approach if you are going to open more than, + * one {@link Channel}s or run a server that accepts incoming connections to, + * create its child channels., +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +import org.jboss.netty.channel.Channels;, + *, + * The recommended approach is to specify a {@link ChannelPipelineFactory} by, + * calling {@link #setPipelineFactory(ChannelPipelineFactory)}., + *, + * <pre>, + * ConnectionlessBootstrap b = ...;, + * b.setPipelineFactory(new MyPipelineFactory());, + *, + * public class MyPipelineFactory implements {@link ChannelPipelineFactory} {, + *   public ChannelPipeline getPipeline() throws Exception {, + *     // Create and configure a new pipeline for a new channel., + *     {@link ChannelPipeline} p = {@link Channels}.pipeline();, + *     p.addLast("encoder", new EncodingHandler());, + *     p.addLast("decoder", new DecodingHandler());, + *     p.addLast("logic",   new LogicHandler());, + *     return p;, + *   }, + * }, + * </pre>, +, + * The alternative approach, which works only in a certain situation, is to use, + * ConnectionlessBootstrap b = ...;, + * // Add handlers to the default pipeline., + * Therefore, you cannot use this approach if you are going to open more than, + * one {@link Channel}s or run a server that accepts incoming connections to, + * create its child channels., +++ b/src/main/java/org/jboss/netty/bootstrap/ConnectionlessBootstrap.java, +import org.jboss.netty.channel.Channels;, + *, + * The recommended approach is to specify a {@link ChannelPipelineFactory} by, + * calling {@link #setPipelineFactory(ChannelPipelineFactory)}., + *, + * <pre>, + * ConnectionlessBootstrap b = ...;, + * b.setPipelineFactory(new MyPipelineFactory());, + *, + * public class MyPipelineFactory implements {@link ChannelPipelineFactory} {, + *   public ChannelPipeline getPipeline() throws Exception {, + *     // Create and configure a new pipeline for a new channel., + *     {@link ChannelPipeline} p = {@link Channels}.pipeline();, + *     p.addLast("encoder", new EncodingHandler());, + *     p.addLast("decoder", new DecodingHandler());, + *     p.addLast("logic",   new LogicHandler());, + *     return p;, + *   }, + * }, + * </pre>, +, + * The alternative approach, which works only in a certain situation, is to use, + * // Add handlers to the default pipeline., + * Therefore, you cannot use this approach if you are going to open more than, + * one {@link Channel}s or run a server that accepts incoming connections to, + * create its child channels., +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +import org.jboss.netty.channel.Channels;, + *, + * The recommended approach is to specify a {@link ChannelPipelineFactory} by, + * calling {@link #setPipelineFactory(ChannelPipelineFactory)}., + *, + * <pre>, + * ConnectionlessBootstrap b = ...;, + * b.setPipelineFactory(new MyPipelineFactory());, + *, + * public class MyPipelineFactory implements {@link ChannelPipelineFactory} {, + *   public ChannelPipeline getPipeline() throws Exception {, + *     // Create and configure a new pipeline for a new channel., + *     {@link ChannelPipeline} p = {@link Channels}.pipeline();, + *     p.addLast("encoder", new EncodingHandler());, + *     p.addLast("decoder", new DecodingHandler());, + *     p.addLast("logic",   new LogicHandler());]