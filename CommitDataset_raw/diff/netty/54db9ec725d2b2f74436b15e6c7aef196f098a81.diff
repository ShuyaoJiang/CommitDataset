[+++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.internal.StringUtil;, +            return StringUtil.simpleClassName(this) + "(freed)";, +        buf.append(StringUtil.simpleClassName(this));, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.internal.StringUtil;, +            return StringUtil.simpleClassName(this) + "(freed)";, +        buf.append(StringUtil.simpleClassName(this));, +++ b/buffer/src/main/java/io/netty/buffer/DefaultByteBufHolder.java, +import io.netty.util.internal.StringUtil;, +        return StringUtil.simpleClassName(this) + '(' + content().toString() + ')';, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.internal.StringUtil;, +            return StringUtil.simpleClassName(this) + "(freed)";, +        buf.append(StringUtil.simpleClassName(this));, +++ b/buffer/src/main/java/io/netty/buffer/DefaultByteBufHolder.java, +import io.netty.util.internal.StringUtil;, +        return StringUtil.simpleClassName(this) + '(' + content().toString() + ')';, +++ b/buffer/src/main/java/io/netty/buffer/EmptyByteBuf.java, +import io.netty.util.internal.StringUtil;, +        str = StringUtil.simpleClassName(this) + (order == ByteOrder.BIG_ENDIAN? "BE" : "LE");, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.internal.StringUtil;, +            return StringUtil.simpleClassName(this) + "(freed)";, +        buf.append(StringUtil.simpleClassName(this));, +++ b/buffer/src/main/java/io/netty/buffer/DefaultByteBufHolder.java, +import io.netty.util.internal.StringUtil;, +        return StringUtil.simpleClassName(this) + '(' + content().toString() + ')';, +++ b/buffer/src/main/java/io/netty/buffer/EmptyByteBuf.java, +import io.netty.util.internal.StringUtil;, +        str = StringUtil.simpleClassName(this) + (order == ByteOrder.BIG_ENDIAN? "BE" : "LE");, +++ b/buffer/src/main/java/io/netty/buffer/ReadOnlyByteBufferBuf.java, +import io.netty.util.internal.StringUtil;, +            throw new IllegalArgumentException("must be a readonly buffer: " + StringUtil.simpleClassName(buffer));, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.internal.StringUtil;, +            return StringUtil.simpleClassName(this) + "(freed)";, +        buf.append(StringUtil.simpleClassName(this));, +++ b/buffer/src/main/java/io/netty/buffer/DefaultByteBufHolder.java, +import io.netty.util.internal.StringUtil;, +        return StringUtil.simpleClassName(this) + '(' + content().toString() + ')';, +++ b/buffer/src/main/java/io/netty/buffer/EmptyByteBuf.java, +import io.netty.util.internal.StringUtil;, +        str = StringUtil.simpleClassName(this) + (order == ByteOrder.BIG_ENDIAN? "BE" : "LE");, +++ b/buffer/src/main/java/io/netty/buffer/ReadOnlyByteBufferBuf.java, +import io.netty.util.internal.StringUtil;, +            throw new IllegalArgumentException("must be a readonly buffer: " + StringUtil.simpleClassName(buffer));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpContent.java, +import io.netty.util.internal.StringUtil;, +        return StringUtil.simpleClassName(this) + "(data: " + content() + ", getDecoderResult: " + getDecoderResult() + ')';, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.internal.StringUtil;, +            return StringUtil.simpleClassName(this) + "(freed)";, +        buf.append(StringUtil.simpleClassName(this));, +++ b/buffer/src/main/java/io/netty/buffer/DefaultByteBufHolder.java, +import io.netty.util.internal.StringUtil;, +        return StringUtil.simpleClassName(this) + '(' + content().toString() + ')';, +++ b/buffer/src/main/java/io/netty/buffer/EmptyByteBuf.java, +import io.netty.util.internal.StringUtil;, +        str = StringUtil.simpleClassName(this) + (order == ByteOrder.BIG_ENDIAN? "BE" : "LE");, +++ b/buffer/src/main/java/io/netty/buffer/ReadOnlyByteBufferBuf.java, +import io.netty.util.internal.StringUtil;, +            throw new IllegalArgumentException("must be a readonly buffer: " + StringUtil.simpleClassName(buffer));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpContent.java, +import io.netty.util.internal.StringUtil;, +        return StringUtil.simpleClassName(this) + "(data: " + content() + ", getDecoderResult: " + getDecoderResult() + ')';, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpMessage.java, +        buf.append(StringUtil.simpleClassName(this));, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.internal.StringUtil;, +            return StringUtil.simpleClassName(this) + "(freed)";, +        buf.append(StringUtil.simpleClassName(this));, +++ b/buffer/src/main/java/io/netty/buffer/DefaultByteBufHolder.java, +import io.netty.util.internal.StringUtil;, +        return StringUtil.simpleClassName(this) + '(' + content().toString() + ')';, +++ b/buffer/src/main/java/io/netty/buffer/EmptyByteBuf.java, +import io.netty.util.internal.StringUtil;, +        str = StringUtil.simpleClassName(this) + (order == ByteOrder.BIG_ENDIAN? "BE" : "LE");, +++ b/buffer/src/main/java/io/netty/buffer/ReadOnlyByteBufferBuf.java, +import io.netty.util.internal.StringUtil;, +            throw new IllegalArgumentException("must be a readonly buffer: " + StringUtil.simpleClassName(buffer));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpContent.java, +import io.netty.util.internal.StringUtil;, +        return StringUtil.simpleClassName(this) + "(data: " + content() + ", getDecoderResult: " + getDecoderResult() + ')';, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpMessage.java, +        buf.append(StringUtil.simpleClassName(this));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpRequest.java, +        buf.append(StringUtil.simpleClassName(this));, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.internal.StringUtil;, +            return StringUtil.simpleClassName(this) + "(freed)";, +        buf.append(StringUtil.simpleClassName(this));, +++ b/buffer/src/main/java/io/netty/buffer/DefaultByteBufHolder.java, +import io.netty.util.internal.StringUtil;, +        return StringUtil.simpleClassName(this) + '(' + content().toString() + ')';, +++ b/buffer/src/main/java/io/netty/buffer/EmptyByteBuf.java, +import io.netty.util.internal.StringUtil;, +        str = StringUtil.simpleClassName(this) + (order == ByteOrder.BIG_ENDIAN? "BE" : "LE");, +++ b/buffer/src/main/java/io/netty/buffer/ReadOnlyByteBufferBuf.java, +import io.netty.util.internal.StringUtil;]