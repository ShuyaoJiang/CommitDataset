[+++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java, +import java.net.ConnectException;, +        final boolean failConnectPromise(Throwable cause) {, +            if (connectPromise != null) {, +                // SO_ERROR has been shown to return 0 on macOS if detect an error via read() and the write filter was, +                // not set before calling connect. This means finishConnect will not detect any error and would, +                // successfully complete the connectPromise and update the channel state to active (which is incorrect)., +                ChannelPromise connectPromise = AbstractKQueueChannel.this.connectPromise;, +                AbstractKQueueChannel.this.connectPromise = null;, +                if (connectPromise.tryFailure((cause instanceof ConnectException) ? cause, +                                : new ConnectException("failed to connect").initCause(cause))) {, +                    closeIfClosed();, +                    return true;, +                }, +            }, +            return false;, +        }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java, +import java.net.ConnectException;, +        final boolean failConnectPromise(Throwable cause) {, +            if (connectPromise != null) {, +                // SO_ERROR has been shown to return 0 on macOS if detect an error via read() and the write filter was, +                // not set before calling connect. This means finishConnect will not detect any error and would, +                // successfully complete the connectPromise and update the channel state to active (which is incorrect)., +                ChannelPromise connectPromise = AbstractKQueueChannel.this.connectPromise;, +                AbstractKQueueChannel.this.connectPromise = null;, +                if (connectPromise.tryFailure((cause instanceof ConnectException) ? cause, +                                : new ConnectException("failed to connect").initCause(cause))) {, +                    closeIfClosed();, +                    return true;, +                }, +            }, +            return false;, +        }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueStreamChannel.java, +        super(parent, fd, active);, +            if (!failConnectPromise(cause)) {, +    }]