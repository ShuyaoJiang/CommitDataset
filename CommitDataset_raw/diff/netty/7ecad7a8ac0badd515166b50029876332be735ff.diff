[+++ b/all/pom.xml, +++ b/all/pom.xml, +++ b/buffer/src/main/java/io/netty/array/ObjectArray.java, +package io.netty.array;, +, +, +public class ObjectArray<E> extends AbstractArray<E> {, +, +    public ObjectArray(E[] array, int offset, int length) {, +        super(array, offset, length);, +    }, +, +    @Override, +    public E[] array() {, +        return (E[]) super.array();, +    }, +}, +++ b/all/pom.xml, +++ b/buffer/src/main/java/io/netty/array/ObjectArray.java, +package io.netty.array;, +, +, +public class ObjectArray<E> extends AbstractArray<E> {, +, +    public ObjectArray(E[] array, int offset, int length) {, +        super(array, offset, length);, +    }, +, +    @Override, +    public E[] array() {, +        return (E[]) super.array();, +    }, +}, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +        return writerIndex > readerIndex;, +, +        if (readerIndex == writerIndex) {, +            clear();, +            return;, +        }, +, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +++ b/all/pom.xml, +++ b/buffer/src/main/java/io/netty/array/ObjectArray.java, +package io.netty.array;, +, +, +public class ObjectArray<E> extends AbstractArray<E> {, +, +    public ObjectArray(E[] array, int offset, int length) {, +        super(array, offset, length);, +    }, +, +    @Override, +    public E[] array() {, +        return (E[]) super.array();, +    }, +}, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +        return writerIndex > readerIndex;, +, +        if (readerIndex == writerIndex) {, +            clear();, +            return;, +        }, +, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +            throw new IndexOutOfBoundsException();, +++ b/buffer/src/main/java/io/netty/buffer/BigEndianHeapChannelBuffer.java, +            throw new IndexOutOfBoundsException();, +++ b/all/pom.xml, +++ b/buffer/src/main/java/io/netty/array/ObjectArray.java, +package io.netty.array;, +, +, +public class ObjectArray<E> extends AbstractArray<E> {, +, +    public ObjectArray(E[] array, int offset, int length) {, +        super(array, offset, length);, +    }, +]