[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfig.java, +    private final boolean shortCircuit;, +    CorsConfig(final CorsConfigBuilder builder) {, +        shortCircuit = builder.shortCircuit;, +    public boolean isShortCircuit() {, +        return shortCircuit;, +    }, +, +    /**, +     * @deprecated Use {@link #isShortCircuit()} instead., +     */, +    @Deprecated, +        return isShortCircuit();, +     * @deprecated Use {@link CorsConfigBuilder#forAnyOrigin()} instead., +    @Deprecated, +     * @deprecated Use {@link CorsConfigBuilder#forOrigin(String)} instead., +    @Deprecated, +     * @deprecated Use {@link CorsConfigBuilder#forOrigins(String...)} instead., +    @Deprecated, +     * @deprecated Use {@link CorsConfigBuilder} instead., +    @Deprecated, +        private final CorsConfigBuilder builder;, +         * @deprecated Use {@link CorsConfigBuilder} instead., +        @Deprecated, +            builder = new CorsConfigBuilder(origins);, +         * @deprecated Use {@link CorsConfigBuilder} instead., +        @Deprecated, +            builder = new CorsConfigBuilder();, +         * @deprecated Use {@link CorsConfigBuilder#allowNullOrigin()} instead., +        @Deprecated, +            builder.allowNullOrigin();, +         * @deprecated Use {@link CorsConfigBuilder#disable()} instead., +        @Deprecated, +            builder.disable();, +         * @deprecated Use {@link CorsConfigBuilder#exposeHeaders(String...)} instead., +        @Deprecated, +            builder.exposeHeaders(headers);, +         * @deprecated Use {@link CorsConfigBuilder#allowCredentials()} instead., +        @Deprecated, +            builder.allowCredentials();, +         * @deprecated Use {@link CorsConfigBuilder#maxAge(long)} instead., +        @Deprecated, +            builder.maxAge(max);, +         * @deprecated Use {@link CorsConfigBuilder#allowedRequestMethods(HttpMethod...)} instead., +        @Deprecated, +            builder.allowedRequestMethods(methods);, +         * @deprecated Use {@link CorsConfigBuilder#allowedRequestHeaders(String...)} instead., +        @Deprecated, +            builder.allowedRequestHeaders(headers);, +         * @deprecated Use {@link CorsConfigBuilder#preflightResponseHeader(CharSequence, Object...)} instead., +        @Deprecated, +            builder.preflightResponseHeader(name, values);, +         * @deprecated Use {@link CorsConfigBuilder#preflightResponseHeader(CharSequence, Iterable)} instead., +        @Deprecated, +            builder.preflightResponseHeader(name, value);, +         * @deprecated Use {@link CorsConfigBuilder#preflightResponseHeader(CharSequence, Callable)} instead., +        @Deprecated, +            builder.preflightResponseHeader(name, valueGenerator);, +         * @deprecated Use {@link CorsConfigBuilder#noPreflightResponseHeaders()} instead., +        @Deprecated, +            builder.noPreflightResponseHeaders();, +         * @deprecated Use {@link CorsConfigBuilder#build()} instead., +        @Deprecated, +            return builder.build();, +         * @deprecated Use {@link CorsConfigBuilder#shortCircuit()} instead., +        @Deprecated, +            builder.shortCircuit();, +     * @deprecated Removed without alternatives., +    @Deprecated, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfig.java, +    private final boolean shortCircuit;, +    CorsConfig(final CorsConfigBuilder builder) {, +        shortCircuit = builder.shortCircuit;, +    public boolean isShortCircuit() {, +        return shortCircuit;, +    }, +, +    /**, +     * @deprecated Use {@link #isShortCircuit()} instead., +     */, +    @Deprecated, +        return isShortCircuit();, +     * @deprecated Use {@link CorsConfigBuilder#forAnyOrigin()} instead., +    @Deprecated, +     * @deprecated Use {@link CorsConfigBuilder#forOrigin(String)} instead., +    @Deprecated, +     * @deprecated Use {@link CorsConfigBuilder#forOrigins(String...)} instead., +    @Deprecated, +     * @deprecated Use {@link CorsConfigBuilder} instead., +    @Deprecated, +        private final CorsConfigBuilder builder;, +         * @deprecated Use {@link CorsConfigBuilder} instead., +        @Deprecated, +            builder = new CorsConfigBuilder(origins);, +         * @deprecated Use {@link CorsConfigBuilder} instead., +        @Deprecated, +            builder = new CorsConfigBuilder();, +         * @deprecated Use {@link CorsConfigBuilder#allowNullOrigin()} instead., +        @Deprecated, +            builder.allowNullOrigin();]