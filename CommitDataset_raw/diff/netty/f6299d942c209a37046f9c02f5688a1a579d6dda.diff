[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/cookie/ClientCookieDecoder.java, +                cookieBuilder = new CookieBuilder(cookie, header);, +                cookieBuilder.appendAttribute(nameBegin, nameEnd, valueBegin, valueEnd);, +        private final String header;, +        private int expiresStart;, +        private int expiresEnd;, +        public CookieBuilder(DefaultCookie cookie, String header) {, +            this.header = header;, +        private long mergeMaxAgeAndExpires() {, +            } else {, +                String expires = computeValue(expiresStart, expiresEnd);, +                if (expires != null) {, +            }, +            cookie.setMaxAge(mergeMaxAgeAndExpires());, +         * @param valueStart, +         *            where the value starts in the header, +         * @param valueEnd, +         *            where the value ends in the header, +        public void appendAttribute(int keyStart, int keyEnd, int valueStart, int valueEnd) {, +                parse4(keyStart, valueStart, valueEnd);, +                parse6(keyStart, valueStart, valueEnd);, +                parse7(keyStart, valueStart, valueEnd);, +                parse8(keyStart, valueStart, valueEnd);, +        private void parse4(int nameStart, int valueStart, int valueEnd) {, +                path = computeValue(valueStart, valueEnd);, +        private void parse6(int nameStart, int valueStart, int valueEnd) {, +                domain = computeValue(valueStart, valueEnd);, +        private void parse7(int nameStart, int valueStart, int valueEnd) {, +                expiresStart = valueStart;, +                expiresEnd = valueEnd;, +                setMaxAge(computeValue(valueStart, valueEnd));, +        private void parse8(int nameStart, int valueStart, int valueEnd) {, +, +        private String computeValue(int valueStart, int valueEnd) {, +            return valueStart == -1 || valueStart == valueEnd ? null : header.substring(valueStart, valueEnd);, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cookie/ClientCookieDecoder.java, +                cookieBuilder = new CookieBuilder(cookie, header);, +                cookieBuilder.appendAttribute(nameBegin, nameEnd, valueBegin, valueEnd);, +        private final String header;, +        private int expiresStart;, +        private int expiresEnd;, +        public CookieBuilder(DefaultCookie cookie, String header) {, +            this.header = header;, +        private long mergeMaxAgeAndExpires() {, +            } else {, +                String expires = computeValue(expiresStart, expiresEnd);, +                if (expires != null) {, +            }, +            cookie.setMaxAge(mergeMaxAgeAndExpires());, +         * @param valueStart, +         *            where the value starts in the header, +         * @param valueEnd, +         *            where the value ends in the header, +        public void appendAttribute(int keyStart, int keyEnd, int valueStart, int valueEnd) {, +                parse4(keyStart, valueStart, valueEnd);, +                parse6(keyStart, valueStart, valueEnd);, +                parse7(keyStart, valueStart, valueEnd);, +                parse8(keyStart, valueStart, valueEnd);, +        private void parse4(int nameStart, int valueStart, int valueEnd) {, +                path = computeValue(valueStart, valueEnd);, +        private void parse6(int nameStart, int valueStart, int valueEnd) {, +                domain = computeValue(valueStart, valueEnd);, +        private void parse7(int nameStart, int valueStart, int valueEnd) {, +                expiresStart = valueStart;, +                expiresEnd = valueEnd;, +                setMaxAge(computeValue(valueStart, valueEnd));, +        private void parse8(int nameStart, int valueStart, int valueEnd) {, +, +        private String computeValue(int valueStart, int valueEnd) {, +            return valueStart == -1 || valueStart == valueEnd ? null : header.substring(valueStart, valueEnd);, +        }, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/cookie/ClientCookieDecoderTest.java, +, +    @Test, +    public void testIgnoreEmptyPath() {, +        String emptyPath = "sessionid=OTY4ZDllNTgtYjU3OC00MWRjLTkzMWMtNGUwNzk4MTY0MTUw;Domain=;Path=";, +        Cookie cookie = ClientCookieDecoder.STRICT.decode(emptyPath);, +        assertNull(cookie.path());, +    }]