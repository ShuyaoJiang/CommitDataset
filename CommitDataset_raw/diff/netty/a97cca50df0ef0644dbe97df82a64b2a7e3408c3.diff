[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandler.java, +import io.netty.channel.ChannelStateHandler;, + *, + * To know once a handshake was done you can intercept the, + * {@link ChannelStateHandler#userEventTriggered(ChannelHandlerContext, Object)} and check if the event was of type, + * {@link ClientHandshakeStateEvent#HANDSHAKE_ISSUED} or {@link ClientHandshakeStateEvent#HANDSHAKE_COMPLETE}., +     * Events that are fired to notify about handshake status, +     */, +    public enum ClientHandshakeStateEvent {, +        /**, +         * The Handshake was started but the server did not response yet to the request, +         */, +        HANDSHAKE_ISSUED,, +, +        /**, +         * The Handshake was complete succesful and so the channel was upgraded to websockets, +         */, +        HANDSHAKE_COMPLETE, +    }, +, +    /**, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandler.java, +import io.netty.channel.ChannelStateHandler;, + *, + * To know once a handshake was done you can intercept the, + * {@link ChannelStateHandler#userEventTriggered(ChannelHandlerContext, Object)} and check if the event was of type, + * {@link ClientHandshakeStateEvent#HANDSHAKE_ISSUED} or {@link ClientHandshakeStateEvent#HANDSHAKE_COMPLETE}., +     * Events that are fired to notify about handshake status, +     */, +    public enum ClientHandshakeStateEvent {, +        /**, +         * The Handshake was started but the server did not response yet to the request, +         */, +        HANDSHAKE_ISSUED,, +, +        /**, +         * The Handshake was complete succesful and so the channel was upgraded to websockets, +         */, +        HANDSHAKE_COMPLETE, +    }, +, +    /**, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler.java, +import io.netty.channel.ChannelFuture;, +    public void channelActive(final ChannelHandlerContext ctx) throws Exception {, +        handshaker.handshake(ctx.channel()).addListener(new ChannelFutureListener() {, +            @Override, +            public void operationComplete(ChannelFuture future) throws Exception {, +                if (!future.isSuccess()) {, +                    ctx.fireExceptionCaught(future.cause());, +                } else {, +                    ctx.fireUserEventTriggered(, +                            WebSocketClientProtocolHandler.ClientHandshakeStateEvent.HANDSHAKE_ISSUED);, +                }, +            }, +        });, +            ctx.fireUserEventTriggered(, +                    WebSocketClientProtocolHandler.ClientHandshakeStateEvent.HANDSHAKE_COMPLETE);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandler.java, +import io.netty.channel.ChannelStateHandler;, + *, + * To know once a handshake was done you can intercept the, + * {@link ChannelStateHandler#userEventTriggered(ChannelHandlerContext, Object)} and check if the event was of type, + * {@link ClientHandshakeStateEvent#HANDSHAKE_ISSUED} or {@link ClientHandshakeStateEvent#HANDSHAKE_COMPLETE}., +     * Events that are fired to notify about handshake status, +     */, +    public enum ClientHandshakeStateEvent {, +        /**, +         * The Handshake was started but the server did not response yet to the request, +         */, +        HANDSHAKE_ISSUED,, +, +        /**, +         * The Handshake was complete succesful and so the channel was upgraded to websockets, +         */, +        HANDSHAKE_COMPLETE, +    }, +, +    /**, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler.java, +import io.netty.channel.ChannelFuture;, +    public void channelActive(final ChannelHandlerContext ctx) throws Exception {, +        handshaker.handshake(ctx.channel()).addListener(new ChannelFutureListener() {, +            @Override, +            public void operationComplete(ChannelFuture future) throws Exception {, +                if (!future.isSuccess()) {, +                    ctx.fireExceptionCaught(future.cause());, +                } else {, +                    ctx.fireUserEventTriggered(, +                            WebSocketClientProtocolHandler.ClientHandshakeStateEvent.HANDSHAKE_ISSUED);, +                }, +            }, +        });, +            ctx.fireUserEventTriggered(, +                    WebSocketClientProtocolHandler.ClientHandshakeStateEvent.HANDSHAKE_COMPLETE);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +import io.netty.channel.ChannelStateHandler;, + *, + * To know once a handshake was done you can intercept the, + * {@link ChannelStateHandler#userEventTriggered(ChannelHandlerContext, Object)} and check if the event was of type]