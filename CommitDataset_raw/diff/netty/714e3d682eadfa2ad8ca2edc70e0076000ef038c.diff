[+++ b/handler/src/main/java/io/netty/handler/traffic/ChannelTrafficShapingHandler.java, +import io.netty.util.Timer;, + * <tt>ChannelTrafficShapingHandler myHandler = new ChannelTrafficShapingHandler(timer);</tt><br>, + * timer could be created using <tt>HashedWheelTimer<tt><br>, + * <li>When you shutdown your application, release all the external resources (except the timer internal itself), +    public ChannelTrafficShapingHandler(Timer timer, long writeLimit,, +        super(timer, writeLimit, readLimit, checkInterval);, +    public ChannelTrafficShapingHandler(Timer timer, long writeLimit,, +        super(timer, writeLimit, readLimit);, +    public ChannelTrafficShapingHandler(Timer timer, long checkInterval) {, +        super(timer, checkInterval);, +    public ChannelTrafficShapingHandler(Timer timer) {, +        super(timer);, +            ObjectSizeEstimator objectSizeEstimator, Timer timer,, +        super(objectSizeEstimator, timer, writeLimit, readLimit,, +            ObjectSizeEstimator objectSizeEstimator, Timer timer,, +        super(objectSizeEstimator, timer, writeLimit, readLimit);, +            ObjectSizeEstimator objectSizeEstimator, Timer timer,, +        super(objectSizeEstimator, timer, checkInterval);, +            ObjectSizeEstimator objectSizeEstimator, Timer timer) {, +        super(objectSizeEstimator, timer);, +            if (timer != null) {, +                trafficCounter = new TrafficCounter(this, timer, "ChannelTC" +, +        }]