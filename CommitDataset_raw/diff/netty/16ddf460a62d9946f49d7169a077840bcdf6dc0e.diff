[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +    private final boolean checkStartsWith;, +    public WebSocketServerProtocolHandler(String websocketPath, boolean checkStartsWith) {, +        this(websocketPath, null, false, 65536, false, checkStartsWith);, +    }, +, +        this(websocketPath, subprotocols, allowExtensions, maxFrameSize, allowMaskMismatch, false);, +    }, +, +    public WebSocketServerProtocolHandler(String websocketPath, String subprotocols,, +            boolean allowExtensions, int maxFrameSize, boolean allowMaskMismatch, boolean checkStartsWith) {, +        this.checkStartsWith = checkStartsWith;, +                            allowExtensions, maxFramePayloadLength, allowMaskMismatch, checkStartsWith));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +    private final boolean checkStartsWith;, +    public WebSocketServerProtocolHandler(String websocketPath, boolean checkStartsWith) {, +        this(websocketPath, null, false, 65536, false, checkStartsWith);, +    }, +, +        this(websocketPath, subprotocols, allowExtensions, maxFrameSize, allowMaskMismatch, false);, +    }, +, +    public WebSocketServerProtocolHandler(String websocketPath, String subprotocols,, +            boolean allowExtensions, int maxFrameSize, boolean allowMaskMismatch, boolean checkStartsWith) {, +        this.checkStartsWith = checkStartsWith;, +                            allowExtensions, maxFramePayloadLength, allowMaskMismatch, checkStartsWith));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +    private final boolean checkStartsWith;, +        this(websocketPath, subprotocols, allowExtensions, maxFrameSize, allowMaskMismatch, false);, +    }, +, +    WebSocketServerProtocolHandshakeHandler(String websocketPath, String subprotocols,, +            boolean allowExtensions, int maxFrameSize, boolean allowMaskMismatch, boolean checkStartsWith) {, +        this.checkStartsWith = checkStartsWith;, +        if (checkStartsWith) {, +            if (!req.uri().startsWith(websocketPath)) {, +                ctx.fireChannelRead(msg);, +                return;, +            }, +        } else if (!req.uri().equals(websocketPath)) {]