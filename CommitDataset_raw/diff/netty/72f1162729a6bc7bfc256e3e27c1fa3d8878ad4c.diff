[+++ b/src/main/java/org/jboss/netty/handler/codec/embedder/AbstractCodecEmbedder.java, + * A skeletal {@link CodecEmbedder} implementation., + *, +    /**, +     * Creates a new embedder whose pipeline is composed of the specified, +     * handlers., +     */, +    /**, +     * Creates a new embedder whose pipeline is composed of the specified, +     * handlers., +     *, +     * @param bufferFactory the {@link ChannelBufferFactory} to be used when, +     *                      creating a new buffer., +     */, +    /**, +     * Returns the virtual {@link Channel} which will be used as a mock, +     * during encoding and decoding., +     */, +    /**, +     * Returns {@code true} if and only if the produce queue is empty and, +     * therefore {@link #poll()} will return {@code null}., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/embedder/AbstractCodecEmbedder.java, + * A skeletal {@link CodecEmbedder} implementation., + *, +    /**, +     * Creates a new embedder whose pipeline is composed of the specified, +     * handlers., +     */, +    /**, +     * Creates a new embedder whose pipeline is composed of the specified, +     * handlers., +     *, +     * @param bufferFactory the {@link ChannelBufferFactory} to be used when, +     *                      creating a new buffer., +     */, +    /**, +     * Returns the virtual {@link Channel} which will be used as a mock, +     * during encoding and decoding., +     */, +    /**, +     * Returns {@code true} if and only if the produce queue is empty and, +     * therefore {@link #poll()} will return {@code null}., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/embedder/CodecEmbedder.java, + * A helper that wraps an encoder or a decoder (codec) so that they can be used, + * without doing actual I/O in unit tests or higher level codecs.  Please refer, + * to {@link EncoderEmbedder} and {@link DecoderEmbedder} for more information., + *, +    /**, +     * Offers an input object to the pipeline of this embedder., +     *, +     * @return {@code true} if and only if there is something to read in the, +     *         product queue (see {@link #poll()} and {@link #peek()}), +     */, +, +    /**, +     * Signals the pipeline that the encoding or decoding has been finished and, +     * no more data will be offered., +     *, +     * @return {@code true} if and only if there is something to read in the, +     *         product queue (see {@link #poll()} and {@link #peek()}), +     */, +, +    /**, +     * Consumes an encoded or decoded output from the product queue. The output, +     * object is generated by the offered input objects., +     *, +     * @return an encoded or decoded object., +     *         {@code null} if and only if there is no output object left in the, +     *         product queue., +     */, +, +    /**, +     * Reads an encoded or decoded output from the head of the product queue., +     * The difference from {@link #poll()} is that it does not remove the, +     * retrieved object from the product queue., +     *, +     * @return an encoded or decoded object., +     *         {@code null} if and only if there is no output object left in the, +     *         product queue., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/embedder/AbstractCodecEmbedder.java, + * A skeletal {@link CodecEmbedder} implementation., + *, +    /**, +     * Creates a new embedder whose pipeline is composed of the specified, +     * handlers., +     */, +    /**, +     * Creates a new embedder whose pipeline is composed of the specified, +     * handlers., +     *, +     * @param bufferFactory the {@link ChannelBufferFactory} to be used when, +     *                      creating a new buffer., +     */, +    /**, +     * Returns the virtual {@link Channel} which will be used as a mock, +     * during encoding and decoding., +     */]