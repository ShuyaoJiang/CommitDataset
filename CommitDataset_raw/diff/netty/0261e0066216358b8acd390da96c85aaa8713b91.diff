[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +                    if (file.length() == 0) {, +                        return;, +                    } else {, +                        if (!file.delete() || !file.createNewFile()) {, +                    }, +                }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +                    if (file.length() == 0) {, +                        return;, +                    } else {, +                        if (!file.delete() || !file.createNewFile()) {, +                    }, +                }, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/DiskFileUploadTest.java, +import io.netty.buffer.Unpooled;, +import java.io.IOException;, +, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertTrue;, +, +        assertEquals(f2, f2);, +        f2.delete();, +    }, +, +     @Test, +     public void testEmptyBufferSetMultipleTimes() throws IOException {, +         DiskFileUpload f =, +                 new DiskFileUpload("d1", "d1", "application/json", null, null, 100);, +, +         f.setContent(Unpooled.EMPTY_BUFFER);, +, +         assertTrue(f.getFile().exists());, +         assertEquals(0, f.getFile().length());, +         f.setContent(Unpooled.EMPTY_BUFFER);, +         assertTrue(f.getFile().exists());, +         assertEquals(0, f.getFile().length());, +         f.delete();, +     }, +, +    @Test, +    public void testEmptyBufferSetAfterNonEmptyBuffer() throws IOException {, +        DiskFileUpload f =, +                new DiskFileUpload("d1", "d1", "application/json", null, null, 100);, +, +        f.setContent(Unpooled.wrappedBuffer(new byte[] { 1, 2, 3, 4 }));, +, +        assertTrue(f.getFile().exists());, +        assertEquals(4, f.getFile().length());, +        f.setContent(Unpooled.EMPTY_BUFFER);, +        assertTrue(f.getFile().exists());, +        assertEquals(0, f.getFile().length());, +        f.delete();, +    }, +, +    @Test, +    public void testNonEmptyBufferSetMultipleTimes() throws IOException {, +        DiskFileUpload f =, +                new DiskFileUpload("d1", "d1", "application/json", null, null, 100);, +, +        f.setContent(Unpooled.wrappedBuffer(new byte[] { 1, 2, 3, 4 }));, +, +        assertTrue(f.getFile().exists());, +        assertEquals(4, f.getFile().length());, +        f.setContent(Unpooled.wrappedBuffer(new byte[] { 1, 2}));, +        assertTrue(f.getFile().exists());, +        assertEquals(2, f.getFile().length());, +        f.delete();]