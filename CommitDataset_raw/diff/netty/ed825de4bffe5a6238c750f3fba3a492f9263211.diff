[+++ b/common/src/main/java/io/netty/util/internal/TypeParameterMatcher.java, +                Type genericSuperType = currentClass.getGenericSuperclass();, +                if (!(genericSuperType instanceof ParameterizedType)) {, +                    return Object.class;, +                }, +, +                Type[] actualTypeParams = ((ParameterizedType) genericSuperType).getActualTypeArguments();, +++ b/common/src/main/java/io/netty/util/internal/TypeParameterMatcher.java, +                Type genericSuperType = currentClass.getGenericSuperclass();, +                if (!(genericSuperType instanceof ParameterizedType)) {, +                    return Object.class;, +                }, +, +                Type[] actualTypeParams = ((ParameterizedType) genericSuperType).getActualTypeArguments();, +++ b/common/src/test/java/io/netty/util/internal/TypeParameterMatcherTest.java, +, +    @Test, +    public void testRawType() throws Exception {, +        TypeParameterMatcher m = TypeParameterMatcher.find(new U() { }, U.class, "E");, +        assertTrue(m.match(new Object()));, +    }]