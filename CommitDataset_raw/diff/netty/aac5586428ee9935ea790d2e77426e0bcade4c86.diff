[+++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            ChannelBufferHolder<Object> in = ctx.in;, +            if (in != null && !in.isBypass() && in.hasByteBuffer()) {, +            ChannelBufferHolder<Object> in = ctx.inbound();, +            if (in != null && !in.isBypass() && in.hasMessageBuffer()) {, +            ChannelBufferHolder<Object> out = ctx.outbound();, +            if (out != null && !out.isBypass() && out.hasByteBuffer()) {, +            ChannelBufferHolder<Object> out = ctx.outbound();, +            if (out != null && !out.isBypass() && out.hasMessageBuffer()) {, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            ChannelBufferHolder<Object> in = ctx.in;, +            if (in != null && !in.isBypass() && in.hasByteBuffer()) {, +            ChannelBufferHolder<Object> in = ctx.inbound();, +            if (in != null && !in.isBypass() && in.hasMessageBuffer()) {, +            ChannelBufferHolder<Object> out = ctx.outbound();, +            if (out != null && !out.isBypass() && out.hasByteBuffer()) {, +            ChannelBufferHolder<Object> out = ctx.outbound();, +            if (out != null && !out.isBypass() && out.hasMessageBuffer()) {, +++ b/transport/src/test/java/io/netty/channel/SingleThreadEventLoopTest.java, +import java.util.concurrent.Executors;, +            super(Executors.defaultThreadFactory());]