[+++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        checkIndex(index, dst.remaining());, +        tmpBuf.clear().position(index).limit(index + dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        checkIndex(index, dst.remaining());, +        tmpBuf.clear().position(index).limit(index + dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        checkIndex(index, dst.remaining());, +        dst.put(memory, idx(index), dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        checkIndex(index, dst.remaining());, +        tmpBuf.clear().position(index).limit(index + dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        checkIndex(index, dst.remaining());, +        dst.put(memory, idx(index), dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +        checkIndex(index, dst.remaining());, +        tmpBuf.clear().position(index).limit(index + dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        checkIndex(index, dst.remaining());, +        tmpBuf.clear().position(index).limit(index + dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        checkIndex(index, dst.remaining());, +        dst.put(memory, idx(index), dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +        checkIndex(index, dst.remaining());, +        tmpBuf.clear().position(index).limit(index + dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledHeapByteBuf.java, +        checkIndex(index, dst.remaining());, +        dst.put(array, index, dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        checkIndex(index, dst.remaining());, +        tmpBuf.clear().position(index).limit(index + dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        checkIndex(index, dst.remaining());, +        dst.put(memory, idx(index), dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +        checkIndex(index, dst.remaining());, +        tmpBuf.clear().position(index).limit(index + dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledHeapByteBuf.java, +        checkIndex(index, dst.remaining());, +        dst.put(array, index, dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java, +        buf.checkIndex(index, dst.remaining());, +        if (dst.remaining() == 0) {, +            PlatformDependent.copyMemory(addr, dstAddress + dst.position(), dst.remaining());, +            dst.position(dst.position() + dst.remaining());, +            PlatformDependent.copyMemory(addr, dst.array(), dst.arrayOffset() + dst.position(), dst.remaining());, +            dst.position(dst.position() + dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        checkIndex(index, dst.remaining());, +        tmpBuf.clear().position(index).limit(index + dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        checkIndex(index, dst.remaining());, +        dst.put(memory, idx(index), dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +        checkIndex(index, dst.remaining());, +        tmpBuf.clear().position(index).limit(index + dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledHeapByteBuf.java, +        checkIndex(index, dst.remaining());, +        dst.put(array, index, dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java, +        buf.checkIndex(index, dst.remaining());, +        if (dst.remaining() == 0) {, +            PlatformDependent.copyMemory(addr, dstAddress + dst.position(), dst.remaining());, +            dst.position(dst.position() + dst.remaining());, +            PlatformDependent.copyMemory(addr, dst.array(), dst.arrayOffset() + dst.position(), dst.remaining());, +            dst.position(dst.position() + dst.remaining());, +++ b/buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java, +    @Test(expected = IndexOutOfBoundsException.class), +    public void testGetBytesByteBuffer() {, +        byte[] bytes = {'a', 'b', 'c', 'd', 'e', 'f', 'g'};, +        // Ensure destination buffer is bigger then what is in the ByteBuf., +        ByteBuffer nioBuffer = ByteBuffer.allocate(bytes.length + 1);, +        ByteBuf buffer = newBuffer(bytes.length);, +        try {, +            buffer.writeBytes(bytes);, +            buffer.getBytes(buffer.readerIndex(), nioBuffer);, +        } finally {, +            buffer.release();, +        }, +    }, +, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        checkIndex(index, dst.remaining());, +        tmpBuf.clear().position(index).limit(index + dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        checkIndex(index, dst.remaining());, +        dst.put(memory, idx(index), dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +        checkIndex(index, dst.remaining());, +        tmpBuf.clear().position(index).limit(index + dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledHeapByteBuf.java, +        checkIndex(index, dst.remaining());, +        dst.put(array, index, dst.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java, +        buf.checkIndex(index, dst.remaining());, +        if (dst.remaining() == 0) {, +            PlatformDependent.copyMemory(addr, dstAddress + dst.position(), dst.remaining());, +            dst.position(dst.position() + dst.remaining());]