[+++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00Test.java, +import io.netty.channel.embedded.EmbeddedByteChannel;, +import io.netty.handler.codec.http.HttpResponseDecoder;, +import io.netty.util.CharsetUtil;, +        EmbeddedByteChannel ch = new EmbeddedByteChannel(, +                new HttpChunkAggregator(42), new HttpRequestDecoder(), new HttpResponseEncoder());, +        ByteBuf buffer = ByteBufs.copiedBuffer("^n:ds[4U", CharsetUtil.US_ASCII);, +        new WebSocketServerHandshaker00(, +                "ws://example.com/chat", "chat", Integer.MAX_VALUE).handshake(ch, req);, +        ByteBuf resBuf = ch.readOutbound();, +, +        EmbeddedByteChannel ch2 = new EmbeddedByteChannel(new HttpResponseDecoder());, +        ch2.writeInbound(resBuf);, +        HttpResponse res = (HttpResponse) ch2.readInbound();, +, +        Assert.assertEquals("ws://example.com/chat", res.getHeader(Names.SEC_WEBSOCKET_LOCATION));, +        Assert.assertEquals("chat", res.getHeader(Names.SEC_WEBSOCKET_PROTOCOL));, +        Assert.assertEquals("8jKS'y:G*Co,Wxa-", res.getContent().toString(CharsetUtil.US_ASCII));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00Test.java, +import io.netty.channel.embedded.EmbeddedByteChannel;, +import io.netty.handler.codec.http.HttpResponseDecoder;, +import io.netty.util.CharsetUtil;, +        EmbeddedByteChannel ch = new EmbeddedByteChannel(, +                new HttpChunkAggregator(42), new HttpRequestDecoder(), new HttpResponseEncoder());, +        ByteBuf buffer = ByteBufs.copiedBuffer("^n:ds[4U", CharsetUtil.US_ASCII);, +        new WebSocketServerHandshaker00(, +                "ws://example.com/chat", "chat", Integer.MAX_VALUE).handshake(ch, req);, +        ByteBuf resBuf = ch.readOutbound();, +, +        EmbeddedByteChannel ch2 = new EmbeddedByteChannel(new HttpResponseDecoder());, +        ch2.writeInbound(resBuf);, +        HttpResponse res = (HttpResponse) ch2.readInbound();, +, +        Assert.assertEquals("ws://example.com/chat", res.getHeader(Names.SEC_WEBSOCKET_LOCATION));, +        Assert.assertEquals("chat", res.getHeader(Names.SEC_WEBSOCKET_PROTOCOL));, +        Assert.assertEquals("8jKS'y:G*Co,Wxa-", res.getContent().toString(CharsetUtil.US_ASCII));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08Test.java, +import io.netty.buffer.ByteBuf;, +import io.netty.channel.embedded.EmbeddedByteChannel;, +import io.netty.handler.codec.http.HttpResponseDecoder;, +        EmbeddedByteChannel ch = new EmbeddedByteChannel(, +                new HttpChunkAggregator(42), new HttpRequestDecoder(), new HttpResponseEncoder());, +        new WebSocketServerHandshaker08(, +                "ws://example.com/chat", "chat", false, Integer.MAX_VALUE).handshake(ch, req);, +        ByteBuf resBuf = ch.readOutbound();, +, +        EmbeddedByteChannel ch2 = new EmbeddedByteChannel(new HttpResponseDecoder());, +        ch2.writeInbound(resBuf);, +        HttpResponse res = (HttpResponse) ch2.readInbound();, +, +        Assert.assertEquals(, +                "s3pPLMBiTxaQ9kYGzzhZRbK+xOo=", res.getHeader(Names.SEC_WEBSOCKET_ACCEPT));, +        Assert.assertEquals("chat", res.getHeader(Names.SEC_WEBSOCKET_PROTOCOL));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00Test.java, +import io.netty.channel.embedded.EmbeddedByteChannel;, +import io.netty.handler.codec.http.HttpResponseDecoder;, +import io.netty.util.CharsetUtil;, +        EmbeddedByteChannel ch = new EmbeddedByteChannel(, +                new HttpChunkAggregator(42), new HttpRequestDecoder(), new HttpResponseEncoder());, +        ByteBuf buffer = ByteBufs.copiedBuffer("^n:ds[4U", CharsetUtil.US_ASCII);, +        new WebSocketServerHandshaker00(, +                "ws://example.com/chat", "chat", Integer.MAX_VALUE).handshake(ch, req);, +        ByteBuf resBuf = ch.readOutbound();, +, +        EmbeddedByteChannel ch2 = new EmbeddedByteChannel(new HttpResponseDecoder());, +        ch2.writeInbound(resBuf);, +        HttpResponse res = (HttpResponse) ch2.readInbound();, +, +        Assert.assertEquals("ws://example.com/chat", res.getHeader(Names.SEC_WEBSOCKET_LOCATION));, +        Assert.assertEquals("chat", res.getHeader(Names.SEC_WEBSOCKET_PROTOCOL));, +        Assert.assertEquals("8jKS'y:G*Co,Wxa-", res.getContent().toString(CharsetUtil.US_ASCII));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08Test.java, +import io.netty.buffer.ByteBuf;, +import io.netty.channel.embedded.EmbeddedByteChannel;, +import io.netty.handler.codec.http.HttpResponseDecoder;, +        EmbeddedByteChannel ch = new EmbeddedByteChannel(, +                new HttpChunkAggregator(42), new HttpRequestDecoder(), new HttpResponseEncoder());, +        new WebSocketServerHandshaker08(, +                "ws://example.com/chat", "chat", false, Integer.MAX_VALUE).handshake(ch, req);, +        ByteBuf resBuf = ch.readOutbound();, +, +        EmbeddedByteChannel ch2 = new EmbeddedByteChannel(new HttpResponseDecoder());, +        ch2.writeInbound(resBuf);, +        HttpResponse res = (HttpResponse) ch2.readInbound();, +, +        Assert.assertEquals(, +                "s3pPLMBiTxaQ9kYGzzhZRbK+xOo=", res.getHeader(Names.SEC_WEBSOCKET_ACCEPT));, +        Assert.assertEquals("chat", res.getHeader(Names.SEC_WEBSOCKET_PROTOCOL));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker13Test.java, +import io.netty.buffer.ByteBuf;, +import io.netty.channel.embedded.EmbeddedByteChannel;, +import io.netty.handler.codec.http.HttpResponseDecoder;, +        EmbeddedByteChannel ch = new EmbeddedByteChannel(, +                new HttpChunkAggregator(42), new HttpRequestDecoder(), new HttpResponseEncoder());, +        new WebSocketServerHandshaker13(, +                "ws://example.com/chat", "chat", false, Integer.MAX_VALUE).handshake(ch, req);, +, +        ByteBuf resBuf = ch.readOutbound();, +, +        EmbeddedByteChannel ch2 = new EmbeddedByteChannel(new HttpResponseDecoder());]