[+++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            final ChannelBufferHolder<Object> out = directOutbound;, +                    final int newSize = out.size();, +                    writeCounter += oldSize - newSize;, +                    if (newSize == 0 && out.hasByteBuffer()) {, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            final ChannelBufferHolder<Object> out = directOutbound;, +                    final int newSize = out.size();, +                    writeCounter += oldSize - newSize;, +                    if (newSize == 0 && out.hasByteBuffer()) {, +++ b/transport/src/main/java/io/netty/channel/DefaultChildEventExecutor.java, +    DefaultChildEventExecutor(ThreadFactory threadFactory) {, +        super(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            final ChannelBufferHolder<Object> out = directOutbound;, +                    final int newSize = out.size();, +                    writeCounter += oldSize - newSize;, +                    if (newSize == 0 && out.hasByteBuffer()) {, +++ b/transport/src/main/java/io/netty/channel/DefaultChildEventExecutor.java, +    DefaultChildEventExecutor(ThreadFactory threadFactory) {, +        super(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/DefaultEventExecutor.java, +        return new DefaultChildEventExecutor(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            final ChannelBufferHolder<Object> out = directOutbound;, +                    final int newSize = out.size();, +                    writeCounter += oldSize - newSize;, +                    if (newSize == 0 && out.hasByteBuffer()) {, +++ b/transport/src/main/java/io/netty/channel/DefaultChildEventExecutor.java, +    DefaultChildEventExecutor(ThreadFactory threadFactory) {, +        super(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/DefaultEventExecutor.java, +        return new DefaultChildEventExecutor(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/EventExecutor.java, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            final ChannelBufferHolder<Object> out = directOutbound;, +                    final int newSize = out.size();, +                    writeCounter += oldSize - newSize;, +                    if (newSize == 0 && out.hasByteBuffer()) {, +++ b/transport/src/main/java/io/netty/channel/DefaultChildEventExecutor.java, +    DefaultChildEventExecutor(ThreadFactory threadFactory) {, +        super(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/DefaultEventExecutor.java, +        return new DefaultChildEventExecutor(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/EventExecutor.java, +++ b/transport/src/main/java/io/netty/channel/EventLoop.java, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            final ChannelBufferHolder<Object> out = directOutbound;, +                    final int newSize = out.size();, +                    writeCounter += oldSize - newSize;, +                    if (newSize == 0 && out.hasByteBuffer()) {, +++ b/transport/src/main/java/io/netty/channel/DefaultChildEventExecutor.java, +    DefaultChildEventExecutor(ThreadFactory threadFactory) {, +        super(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/DefaultEventExecutor.java, +        return new DefaultChildEventExecutor(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/EventExecutor.java, +++ b/transport/src/main/java/io/netty/channel/EventLoop.java, +++ b/transport/src/main/java/io/netty/channel/MultithreadEventExecutor.java, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            final ChannelBufferHolder<Object> out = directOutbound;, +                    final int newSize = out.size();, +                    writeCounter += oldSize - newSize;, +                    if (newSize == 0 && out.hasByteBuffer()) {, +++ b/transport/src/main/java/io/netty/channel/DefaultChildEventExecutor.java, +    DefaultChildEventExecutor(ThreadFactory threadFactory) {, +        super(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/DefaultEventExecutor.java, +        return new DefaultChildEventExecutor(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/EventExecutor.java, +++ b/transport/src/main/java/io/netty/channel/EventLoop.java, +++ b/transport/src/main/java/io/netty/channel/MultithreadEventExecutor.java, +++ b/transport/src/main/java/io/netty/channel/MultithreadEventLoop.java, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            final ChannelBufferHolder<Object> out = directOutbound;, +                    final int newSize = out.size();, +                    writeCounter += oldSize - newSize;, +                    if (newSize == 0 && out.hasByteBuffer()) {, +++ b/transport/src/main/java/io/netty/channel/DefaultChildEventExecutor.java, +    DefaultChildEventExecutor(ThreadFactory threadFactory) {, +        super(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/DefaultEventExecutor.java, +        return new DefaultChildEventExecutor(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/EventExecutor.java, +++ b/transport/src/main/java/io/netty/channel/EventLoop.java, +++ b/transport/src/main/java/io/netty/channel/MultithreadEventExecutor.java, +++ b/transport/src/main/java/io/netty/channel/MultithreadEventLoop.java, +++ b/transport/src/main/java/io/netty/channel/SingleThreadEventExecutor.java, +    protected SingleThreadEventExecutor() {, +        this(Executors.defaultThreadFactory());, +    protected SingleThreadEventExecutor(ThreadFactory threadFactory) {, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            final ChannelBufferHolder<Object> out = directOutbound;, +                    final int newSize = out.size();, +                    writeCounter += oldSize - newSize;, +                    if (newSize == 0 && out.hasByteBuffer()) {, +++ b/transport/src/main/java/io/netty/channel/DefaultChildEventExecutor.java, +    DefaultChildEventExecutor(ThreadFactory threadFactory) {, +        super(threadFactory);, +++ b/transport/src/main/java/io/netty/channel/DefaultEventExecutor.java]