[+++ b/buffer/src/main/java/io/netty/buffer/DefaultMessageBuf.java, +import java.util.Iterator;, +    public void addFirst(T t) {, +        ensureValid();, +        super.addFirst(t);, +    }, +, +    @Override, +    public void addLast(T t) {, +        ensureValid();, +        super.addLast(t);, +    }, +, +    @Override, +    public T pollFirst() {, +        ensureValid();, +        return super.pollFirst();, +    }, +, +    @Override, +    public T pollLast() {, +        ensureValid();, +        return super.pollLast();, +    }, +, +    @Override, +    public T getFirst() {, +        ensureValid();, +        return super.getFirst();, +    }, +, +    @Override, +    public T getLast() {, +        ensureValid();, +        return super.getLast();, +    }, +, +    @Override, +    public T peekFirst() {, +        ensureValid();, +        return super.peekFirst();, +    }, +, +    @Override, +    public T peekLast() {, +        ensureValid();, +        return super.peekLast();, +    }, +, +    @Override, +    public boolean removeFirstOccurrence(Object o) {, +        ensureValid();, +        return super.removeFirstOccurrence(o);, +    }, +, +    @Override, +    public boolean removeLastOccurrence(Object o) {, +        ensureValid();, +        return super.removeLastOccurrence(o);, +    }, +, +    @Override, +    public Iterator<T> iterator() {, +        ensureValid();, +        return super.iterator();, +    }, +, +    @Override, +    public Iterator<T> descendingIterator() {, +        ensureValid();, +        return super.descendingIterator();, +    }, +, +    @Override, +    public boolean contains(Object o) {, +        ensureValid();, +        return super.contains(o);, +    }, +, +    @Override, +    public void clear() {, +        ensureValid();, +        super.clear();, +    }, +, +    @Override, +    public Object[] toArray() {, +        ensureValid();, +        return super.toArray();, +    }, +, +    @Override, +    public <T1 extends Object> T1[] toArray(T1[] a) {, +        ensureValid();, +        return super.toArray(a);, +    }, +, +    @Override, +    public ArrayDeque<T> clone() {, +        ensureValid();]