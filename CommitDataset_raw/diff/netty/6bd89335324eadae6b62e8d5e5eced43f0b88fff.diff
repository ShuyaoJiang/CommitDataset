[+++ b/pom.xml, +++ b/pom.xml, +++ b/src/main/java/org/jboss/netty/container/osgi/NettyBundleActivator.java, +    private OsgiLoggerFactory loggerFactory;, +        // Switch the internal logger to the OSGi LogService., +        loggerFactory = new OsgiLoggerFactory(ctx);, +        InternalLoggerFactory.setDefaultFactory(loggerFactory);, +        // Prepare the resources required for creating ChannelFactories., +, +        if (loggerFactory != null) {, +            InternalLoggerFactory.setDefaultFactory(loggerFactory.getFallback());, +            loggerFactory.destroy();, +            loggerFactory = null;, +++ b/pom.xml, +++ b/src/main/java/org/jboss/netty/container/osgi/NettyBundleActivator.java, +    private OsgiLoggerFactory loggerFactory;, +        // Switch the internal logger to the OSGi LogService., +        loggerFactory = new OsgiLoggerFactory(ctx);, +        InternalLoggerFactory.setDefaultFactory(loggerFactory);, +        // Prepare the resources required for creating ChannelFactories., +, +        if (loggerFactory != null) {, +            InternalLoggerFactory.setDefaultFactory(loggerFactory.getFallback());, +            loggerFactory.destroy();, +            loggerFactory = null;, +++ b/src/main/java/org/jboss/netty/logging/OsgiLogger.java, +    private final OsgiLoggerFactory parent;, +    private final InternalLogger fallback;, +    OsgiLogger(OsgiLoggerFactory parent, String name, InternalLogger fallback) {, +        this.parent = parent;, +        this.fallback = fallback;, +        LogService logService = parent.getLogService();, +        if (logService != null) {, +            logService.log(LogService.LOG_DEBUG, prefix + msg);, +        } else {, +            fallback.debug(msg);, +        }, +        LogService logService = parent.getLogService();, +        if (logService != null) {, +            logService.log(LogService.LOG_DEBUG, prefix + msg, cause);, +        } else {, +            fallback.debug(msg, cause);, +        }, +        LogService logService = parent.getLogService();, +        if (logService != null) {, +            logService.log(LogService.LOG_ERROR, prefix + msg);, +        } else {, +            fallback.error(msg);, +        }, +        LogService logService = parent.getLogService();, +        if (logService != null) {, +            logService.log(LogService.LOG_ERROR, prefix + msg, cause);, +        } else {, +            fallback.error(msg, cause);, +        }, +        LogService logService = parent.getLogService();, +        if (logService != null) {, +            logService.log(LogService.LOG_INFO, prefix + msg);, +        } else {, +            fallback.info(msg);, +        }, +        LogService logService = parent.getLogService();, +        if (logService != null) {, +            logService.log(LogService.LOG_INFO, prefix + msg, cause);, +        } else {, +            fallback.info(msg, cause);, +        }, +        LogService logService = parent.getLogService();, +        if (logService != null) {, +            logService.log(LogService.LOG_WARNING, prefix + msg);, +        } else {, +            fallback.warn(msg);, +        }, +        LogService logService = parent.getLogService();, +        if (logService != null) {, +            logService.log(LogService.LOG_WARNING, prefix + msg, cause);, +        } else {, +            fallback.warn(msg, cause);, +        }, +++ b/pom.xml, +++ b/src/main/java/org/jboss/netty/container/osgi/NettyBundleActivator.java, +    private OsgiLoggerFactory loggerFactory;, +        // Switch the internal logger to the OSGi LogService., +        loggerFactory = new OsgiLoggerFactory(ctx);, +        InternalLoggerFactory.setDefaultFactory(loggerFactory);, +        // Prepare the resources required for creating ChannelFactories., +, +        if (loggerFactory != null) {, +            InternalLoggerFactory.setDefaultFactory(loggerFactory.getFallback());, +            loggerFactory.destroy();, +            loggerFactory = null;, +++ b/src/main/java/org/jboss/netty/logging/OsgiLogger.java, +    private final OsgiLoggerFactory parent;, +    private final InternalLogger fallback;, +    OsgiLogger(OsgiLoggerFactory parent, String name, InternalLogger fallback) {, +        this.parent = parent;, +        this.fallback = fallback;, +        LogService logService = parent.getLogService();, +        if (logService != null) {, +            logService.log(LogService.LOG_DEBUG, prefix + msg);]