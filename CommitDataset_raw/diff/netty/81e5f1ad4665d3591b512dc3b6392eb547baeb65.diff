[+++ b/transport/src/main/java/io/netty/channel/local/LocalServerChannel.java, +            if (localAddress != null) {, +            }, +++ b/transport/src/main/java/io/netty/channel/local/LocalServerChannel.java, +            if (localAddress != null) {, +            }, +++ b/transport/src/test/java/io/netty/bootstrap/BootstrapTest.java, +    @Test, +    public void testLateRegisterFailed() throws Exception {, +        final TestEventLoopGroup group = new TestEventLoopGroup();, +        try {, +            ServerBootstrap bootstrap = new ServerBootstrap();, +            bootstrap.group(group);, +            bootstrap.channel(LocalServerChannel.class);, +            bootstrap.childHandler(new DummyHandler());, +            bootstrap.localAddress(new LocalAddress("1"));, +            ChannelFuture future = bootstrap.bind();, +            Assert.assertFalse(future.isDone());, +            group.promise.setFailure(new IllegalStateException());, +            final BlockingQueue<Boolean> queue = new LinkedBlockingQueue<Boolean>();, +            future.addListener(new ChannelFutureListener() {, +                @Override, +                public void operationComplete(ChannelFuture future) throws Exception {, +                    queue.add(group.next().inEventLoop(Thread.currentThread()));, +                }, +            });, +            Assert.assertFalse(queue.take());, +        } finally {, +            group.shutdownGracefully();, +            group.terminationFuture().sync();, +        }, +    }, +]