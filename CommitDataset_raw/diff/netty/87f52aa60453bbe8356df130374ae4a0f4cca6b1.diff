[+++ b/codec/src/main/java/io/netty/handler/codec/ByteToByteDecoder.java, +    public void inboundBufferUpdated(ChannelHandlerContext ctx, ChannelBuffer in) throws Exception {, +        callDecode(ctx, in, ctx.nextOutboundByteBuffer());, +        ChannelBuffer out = ctx.nextInboundByteBuffer();, +            callDecode(ctx, in, out);, +    private void callDecode(ChannelHandlerContext ctx, ChannelBuffer in, ChannelBuffer out) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToByteDecoder.java, +    public void inboundBufferUpdated(ChannelHandlerContext ctx, ChannelBuffer in) throws Exception {, +        callDecode(ctx, in, ctx.nextOutboundByteBuffer());, +        ChannelBuffer out = ctx.nextInboundByteBuffer();, +            callDecode(ctx, in, out);, +    private void callDecode(ChannelHandlerContext ctx, ChannelBuffer in, ChannelBuffer out) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +import io.netty.channel.ChannelBufferHolder;, +import io.netty.channel.ChannelBufferHolders;, +import io.netty.channel.ChannelInboundHandlerAdapter;, +public abstract class ByteToMessageDecoder<O> extends ChannelInboundHandlerAdapter<Byte> {, +    public ChannelBufferHolder<Byte> newInboundBuffer(ChannelHandlerContext ctx) throws Exception {, +        return ChannelBufferHolders.byteBuffer();, +    }, +, +    @Override, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToByteDecoder.java, +    public void inboundBufferUpdated(ChannelHandlerContext ctx, ChannelBuffer in) throws Exception {, +        callDecode(ctx, in, ctx.nextOutboundByteBuffer());, +        ChannelBuffer out = ctx.nextInboundByteBuffer();, +            callDecode(ctx, in, out);, +    private void callDecode(ChannelHandlerContext ctx, ChannelBuffer in, ChannelBuffer out) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +import io.netty.channel.ChannelBufferHolder;, +import io.netty.channel.ChannelBufferHolders;, +import io.netty.channel.ChannelInboundHandlerAdapter;, +public abstract class ByteToMessageDecoder<O> extends ChannelInboundHandlerAdapter<Byte> {, +    public ChannelBufferHolder<Byte> newInboundBuffer(ChannelHandlerContext ctx) throws Exception {, +        return ChannelBufferHolders.byteBuffer();, +    }, +, +    @Override, +++ b/codec/src/main/java/io/netty/handler/codec/CodecUtil.java, +            if (ctx.hasNextInboundMessageBuffer()) {, +            }, +, +            if (msg instanceof ChannelBuffer && ctx.hasNextInboundByteBuffer()) {, +            if (ctx.hasNextOutboundMessageBuffer()) {, +            }, +, +            if (msg instanceof ChannelBuffer && ctx.hasNextOutboundByteBuffer()) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToByteDecoder.java, +    public void inboundBufferUpdated(ChannelHandlerContext ctx, ChannelBuffer in) throws Exception {, +        callDecode(ctx, in, ctx.nextOutboundByteBuffer());, +        ChannelBuffer out = ctx.nextInboundByteBuffer();, +            callDecode(ctx, in, out);, +    private void callDecode(ChannelHandlerContext ctx, ChannelBuffer in, ChannelBuffer out) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +import io.netty.channel.ChannelBufferHolder;, +import io.netty.channel.ChannelBufferHolders;, +import io.netty.channel.ChannelInboundHandlerAdapter;, +public abstract class ByteToMessageDecoder<O> extends ChannelInboundHandlerAdapter<Byte> {, +    public ChannelBufferHolder<Byte> newInboundBuffer(ChannelHandlerContext ctx) throws Exception {, +        return ChannelBufferHolders.byteBuffer();, +    }, +, +    @Override, +++ b/codec/src/main/java/io/netty/handler/codec/CodecUtil.java, +            if (ctx.hasNextInboundMessageBuffer()) {, +            }, +, +            if (msg instanceof ChannelBuffer && ctx.hasNextInboundByteBuffer()) {, +            if (ctx.hasNextOutboundMessageBuffer()) {, +            }, +, +            if (msg instanceof ChannelBuffer && ctx.hasNextOutboundByteBuffer()) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +import io.netty.channel.ChannelBufferHolder;, +import io.netty.channel.ChannelBufferHolders;, +import io.netty.channel.ChannelInboundHandlerAdapter;, +public abstract class MessageToMessageDecoder<I, O> extends ChannelInboundHandlerAdapter<I> {, +, +    @Override, +    public ChannelBufferHolder<I> newInboundBuffer(ChannelHandlerContext ctx) throws Exception {, +        return ChannelBufferHolders.messageBuffer();, +    }, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToByteDecoder.java, +    public void inboundBufferUpdated(ChannelHandlerContext ctx, ChannelBuffer in) throws Exception {, +        callDecode(ctx, in, ctx.nextOutboundByteBuffer());, +        ChannelBuffer out = ctx.nextInboundByteBuffer();, +            callDecode(ctx, in, out);, +    private void callDecode(ChannelHandlerContext ctx, ChannelBuffer in, ChannelBuffer out) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +import io.netty.channel.ChannelBufferHolder;, +import io.netty.channel.ChannelBufferHolders;, +import io.netty.channel.ChannelInboundHandlerAdapter;, +public abstract class ByteToMessageDecoder<O> extends ChannelInboundHandlerAdapter<Byte> {, +    public ChannelBufferHolder<Byte> newInboundBuffer(ChannelHandlerContext ctx) throws Exception {, +        return ChannelBufferHolders.byteBuffer();, +    }, +, +    @Override, +++ b/codec/src/main/java/io/netty/handler/codec/CodecUtil.java, +            if (ctx.hasNextInboundMessageBuffer()) {]