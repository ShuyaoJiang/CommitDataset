[+++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +import java.lang.reflect.Field;, +    public static void putObject(Object o, long offset, Object x) {, +        PlatformDependent0.putObject(o, offset, x);, +    }, +, +    public static long objectFieldOffset(Field field) {, +        return PlatformDependent0.objectFieldOffset(field);, +    }, +, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +import java.lang.reflect.Field;, +    public static void putObject(Object o, long offset, Object x) {, +        PlatformDependent0.putObject(o, offset, x);, +    }, +, +    public static long objectFieldOffset(Field field) {, +        return PlatformDependent0.objectFieldOffset(field);, +    }, +, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent0.java, +    static void putObject(Object o, long offset, Object x) {, +        UNSAFE.putObject(o, offset, x);, +    }, +, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +import java.lang.reflect.Field;, +    public static void putObject(Object o, long offset, Object x) {, +        PlatformDependent0.putObject(o, offset, x);, +    }, +, +    public static long objectFieldOffset(Field field) {, +        return PlatformDependent0.objectFieldOffset(field);, +    }, +, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent0.java, +    static void putObject(Object o, long offset, Object x) {, +        UNSAFE.putObject(o, offset, x);, +    }, +, +++ b/transport/src/main/java/io/netty/channel/nio/NioEventLoop.java, +                    if (PlatformDependent.javaVersion() >= 9 && PlatformDependent.hasUnsafe()) {, +                        // Let us try to use sun.misc.Unsafe to replace the SelectionKeySet., +                        // This allows us to also do this in Java9+ without any extra flags., +                        long selectedKeysFieldOffset = PlatformDependent.objectFieldOffset(selectedKeysField);, +                        long publicSelectedKeysFieldOffset =, +                                PlatformDependent.objectFieldOffset(publicSelectedKeysField);, +, +                        if (selectedKeysFieldOffset != -1 && publicSelectedKeysFieldOffset != -1) {, +                            PlatformDependent.putObject(, +                                    unwrappedSelector, selectedKeysFieldOffset, selectedKeySet);, +                            PlatformDependent.putObject(, +                                    unwrappedSelector, publicSelectedKeysFieldOffset, selectedKeySet);, +                            return null;, +                        }, +                        // We could not retrieve the offset, lets try reflection as last-resort., +                    }, +]