[+++ b/transport/src/main/java/io/netty/bootstrap/ServerBootstrap.java, +++ b/transport/src/main/java/io/netty/bootstrap/ServerBootstrap.java, +++ b/transport/src/main/java/io/netty/channel/socket/aio/AioServerSocketChannel.java, +    public AioServerSocketChannel() {, +        super(null, null, null);, +        config = new AioServerSocketChannelConfig();, +    public AioServerSocketChannel(AsynchronousServerSocketChannel channel) {, +        super(null, null, channel);, +        config = new AioServerSocketChannelConfig(channel);, +        return ch != null && javaChannel().isOpen() && localAddress0() != null;, +        Runnable task = super.doRegister();, +        if (ch == null) {, +            AsynchronousServerSocketChannel channel = newSocket(((AioEventLoopGroup) eventLoop().parent()).group);, +            ch = channel;, +            config.channel = channel;, +        }, +        return task;, +++ b/transport/src/main/java/io/netty/bootstrap/ServerBootstrap.java, +++ b/transport/src/main/java/io/netty/channel/socket/aio/AioServerSocketChannel.java, +    public AioServerSocketChannel() {, +        super(null, null, null);, +        config = new AioServerSocketChannelConfig();, +    public AioServerSocketChannel(AsynchronousServerSocketChannel channel) {, +        super(null, null, channel);, +        config = new AioServerSocketChannelConfig(channel);, +        return ch != null && javaChannel().isOpen() && localAddress0() != null;, +        Runnable task = super.doRegister();, +        if (ch == null) {, +            AsynchronousServerSocketChannel channel = newSocket(((AioEventLoopGroup) eventLoop().parent()).group);, +            ch = channel;, +            config.channel = channel;, +        }, +        return task;, +++ b/transport/src/main/java/io/netty/channel/socket/aio/AioServerSocketChannelConfig.java, +    volatile AsynchronousServerSocketChannel channel;, +    AioServerSocketChannelConfig() {, +    }, +, +++ b/transport/src/main/java/io/netty/bootstrap/ServerBootstrap.java, +++ b/transport/src/main/java/io/netty/channel/socket/aio/AioServerSocketChannel.java, +    public AioServerSocketChannel() {, +        super(null, null, null);, +        config = new AioServerSocketChannelConfig();, +    public AioServerSocketChannel(AsynchronousServerSocketChannel channel) {, +        super(null, null, channel);, +        config = new AioServerSocketChannelConfig(channel);, +        return ch != null && javaChannel().isOpen() && localAddress0() != null;, +        Runnable task = super.doRegister();, +        if (ch == null) {, +            AsynchronousServerSocketChannel channel = newSocket(((AioEventLoopGroup) eventLoop().parent()).group);, +            ch = channel;, +            config.channel = channel;, +        }, +        return task;, +++ b/transport/src/main/java/io/netty/channel/socket/aio/AioServerSocketChannelConfig.java, +    volatile AsynchronousServerSocketChannel channel;, +    AioServerSocketChannelConfig() {, +    }, +, +++ b/transport/src/main/java/io/netty/channel/socket/aio/AioSocketChannel.java, +        config = new AioSocketChannelConfig(ch);]