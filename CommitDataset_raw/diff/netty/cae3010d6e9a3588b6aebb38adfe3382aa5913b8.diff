[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioAcceptedSocketChannel.java, +    final Thread bossThread;, +    , +            SocketChannel socket, NioWorker worker, Thread bossThread) {, +        this.bossThread = bossThread;, +        , +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioAcceptedSocketChannel.java, +    final Thread bossThread;, +    , +            SocketChannel socket, NioWorker worker, Thread bossThread) {, +        this.bossThread = bossThread;, +        , +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioServerSocketPipelineSink.java, +            final Thread currentThread = Thread.currentThread();, +            , +                        registerAcceptedChannel(acceptedSocket, currentThread);, +        private void registerAcceptedChannel(SocketChannel acceptedSocket, Thread currentThread) {, +                        worker, currentThread), null);, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioAcceptedSocketChannel.java, +    final Thread bossThread;, +    , +            SocketChannel socket, NioWorker worker, Thread bossThread) {, +        this.bossThread = bossThread;, +        , +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioServerSocketPipelineSink.java, +            final Thread currentThread = Thread.currentThread();, +            , +                        registerAcceptedChannel(acceptedSocket, currentThread);, +        private void registerAcceptedChannel(SocketChannel acceptedSocket, Thread currentThread) {, +                        worker, currentThread), null);, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioWorker.java, +    private static boolean scheduleWriteIfNecessary(final NioSocketChannel channel) {, +        final NioWorker worker = channel.worker;, +        final Thread currentThread = Thread.currentThread();, +        final Thread workerThread = worker.thread;, +        if (workerThread == null || currentThread != workerThread) {, +            , +            if (!(channel instanceof NioAcceptedSocketChannel) ||, +                ((NioAcceptedSocketChannel) channel).bossThread != currentThread) {, +                final Selector workerSelector = worker.selector;, +            } else {, +                // A write request can be made from an acceptor thread (boss), +                // when a user attempted to write something in:, +                //, +                //   * channelOpen(), +                //   * channelBound(), +                //   * channelConnected()., +                //, +                // In this case, there's no need to wake up the selector because, +                // the channel is not even registered yet at this moment., +            }, +            ]