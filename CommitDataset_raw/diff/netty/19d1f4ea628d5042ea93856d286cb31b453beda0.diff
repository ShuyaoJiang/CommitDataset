[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandler.java, +        this(handshaker, handleCloseFrames, true);, +    }, +, +    /**, +     * Base constructor, +     *, +     * @param handshaker, +     *            The {@link WebSocketClientHandshaker} which will be used to issue the handshake once the connection, +     *            was established to the remote peer., +     * @param handleCloseFrames, +     *            {@code true} if close frames should not be forwarded and just close the channel, +     * @param dropPongFrames, +     *            {@code true} if pong frames should not be forwarded, +     */, +    public WebSocketClientProtocolHandler(WebSocketClientHandshaker handshaker, boolean handleCloseFrames,, +                                          boolean dropPongFrames) {, +        super(dropPongFrames);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandler.java, +        this(handshaker, handleCloseFrames, true);, +    }, +, +    /**, +     * Base constructor, +     *, +     * @param handshaker, +     *            The {@link WebSocketClientHandshaker} which will be used to issue the handshake once the connection, +     *            was established to the remote peer., +     * @param handleCloseFrames, +     *            {@code true} if close frames should not be forwarded and just close the channel, +     * @param dropPongFrames, +     *            {@code true} if pong frames should not be forwarded, +     */, +    public WebSocketClientProtocolHandler(WebSocketClientHandshaker handshaker, boolean handleCloseFrames,, +                                          boolean dropPongFrames) {, +        super(dropPongFrames);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketProtocolHandler.java, +, +    private final boolean dropPongFrames;, +, +    /**, +     * Creates a new {@link WebSocketProtocolHandler} that will <i>drop</i> {@link PongWebSocketFrame}s., +     */, +    WebSocketProtocolHandler() {, +        this(true);, +    }, +, +    /**, +     * Creates a new {@link WebSocketProtocolHandler}, given a parameter that determines whether or not to drop {@link, +     * PongWebSocketFrame}s., +     *, +     * @param dropPongFrames, +     *            {@code true} if {@link PongWebSocketFrame}s should be dropped, +     */, +    WebSocketProtocolHandler(boolean dropPongFrames) {, +        this.dropPongFrames = dropPongFrames;, +    }, +, +        if (frame instanceof PongWebSocketFrame && dropPongFrames) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandler.java, +        this(handshaker, handleCloseFrames, true);, +    }, +, +    /**, +     * Base constructor, +     *, +     * @param handshaker, +     *            The {@link WebSocketClientHandshaker} which will be used to issue the handshake once the connection, +     *            was established to the remote peer., +     * @param handleCloseFrames, +     *            {@code true} if close frames should not be forwarded and just close the channel, +     * @param dropPongFrames, +     *            {@code true} if pong frames should not be forwarded, +     */, +    public WebSocketClientProtocolHandler(WebSocketClientHandshaker handshaker, boolean handleCloseFrames,, +                                          boolean dropPongFrames) {, +        super(dropPongFrames);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketProtocolHandler.java, +, +    private final boolean dropPongFrames;, +, +    /**, +     * Creates a new {@link WebSocketProtocolHandler} that will <i>drop</i> {@link PongWebSocketFrame}s., +     */, +    WebSocketProtocolHandler() {, +        this(true);, +    }, +, +    /**, +     * Creates a new {@link WebSocketProtocolHandler}, given a parameter that determines whether or not to drop {@link, +     * PongWebSocketFrame}s., +     *, +     * @param dropPongFrames, +     *            {@code true} if {@link PongWebSocketFrame}s should be dropped, +     */, +    WebSocketProtocolHandler(boolean dropPongFrames) {, +        this.dropPongFrames = dropPongFrames;, +    }, +, +        if (frame instanceof PongWebSocketFrame && dropPongFrames) {]