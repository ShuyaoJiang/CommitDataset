[+++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultCookie.java, + * The default {@link Cookie} implementation., + *, +    /**, +     * Creates a new cookie with the specified name and value., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultCookie.java, + * The default {@link Cookie} implementation., + *, +    /**, +     * Creates a new cookie with the specified name and value., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpChunk.java, + * The default {@link HttpChunk} implementation., + *, +    /**, +     * Creates a new instance with the specified chunk content. If an empty, +     * buffer is specified, this chunk becomes the 'end of chunk' marker., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultCookie.java, + * The default {@link Cookie} implementation., + *, +    /**, +     * Creates a new cookie with the specified name and value., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpChunk.java, + * The default {@link HttpChunk} implementation., + *, +    /**, +     * Creates a new instance with the specified chunk content. If an empty, +     * buffer is specified, this chunk becomes the 'end of chunk' marker., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpMessage.java, + * The default {@link HttpMessage} implementation., +    /**, +     * Creates a new instance., +     */, +    public boolean isKeepAlive() {, +        if (HttpHeaders.Values.CLOSE.equalsIgnoreCase(getHeader(HttpHeaders.Names.CONNECTION))) {, +            return false;, +        }, +, +        if (getProtocolVersion().equals(HttpVersion.HTTP_1_0) &&, +            !HttpHeaders.Values.KEEP_ALIVE.equalsIgnoreCase(getHeader(HttpHeaders.Names.CONNECTION))) {, +            return false;, +        }, +        return true;, +    }, +, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultCookie.java, + * The default {@link Cookie} implementation., + *, +    /**, +     * Creates a new cookie with the specified name and value., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpChunk.java, + * The default {@link HttpChunk} implementation., + *, +    /**, +     * Creates a new instance with the specified chunk content. If an empty, +     * buffer is specified, this chunk becomes the 'end of chunk' marker., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpMessage.java, + * The default {@link HttpMessage} implementation., +    /**, +     * Creates a new instance., +     */, +    public boolean isKeepAlive() {, +        if (HttpHeaders.Values.CLOSE.equalsIgnoreCase(getHeader(HttpHeaders.Names.CONNECTION))) {, +            return false;, +        }, +, +        if (getProtocolVersion().equals(HttpVersion.HTTP_1_0) &&, +            !HttpHeaders.Values.KEEP_ALIVE.equalsIgnoreCase(getHeader(HttpHeaders.Names.CONNECTION))) {, +            return false;, +        }, +        return true;, +    }, +, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpRequest.java, + * The default {@link HttpRequest} implementation., +    /**, +     * Creates a new instance., +     *, +     * @param httpVersion the HTTP version of the request, +     * @param method      the HTTP method of the request, +     * @param uri         the URI or path of the request, +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultCookie.java, + * The default {@link Cookie} implementation., + *, +    /**, +     * Creates a new cookie with the specified name and value., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpChunk.java, + * The default {@link HttpChunk} implementation., + *, +    /**, +     * Creates a new instance with the specified chunk content. If an empty, +     * buffer is specified, this chunk becomes the 'end of chunk' marker.]