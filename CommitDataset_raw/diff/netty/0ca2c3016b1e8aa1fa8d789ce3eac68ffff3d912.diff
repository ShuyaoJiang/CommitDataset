[+++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +, +            if (packetLength == SslUtils.NOT_ENCRYPTED) {, +                throw new NotSslRecordException("not an SSL/TLS record");, +            }, +, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +, +            if (packetLength == SslUtils.NOT_ENCRYPTED) {, +                throw new NotSslRecordException("not an SSL/TLS record");, +            }, +, +++ b/handler/src/main/java/io/netty/handler/ssl/SniHandler.java, +                            if (len == SslUtils.NOT_ENCRYPTED) {, +                            if (len == SslUtils.NOT_ENOUGH_DATA ||, +                                    writerIndex - readerIndex - SslUtils.SSL_RECORD_HEADER_LENGTH < len) {, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +, +            if (packetLength == SslUtils.NOT_ENCRYPTED) {, +                throw new NotSslRecordException("not an SSL/TLS record");, +            }, +, +++ b/handler/src/main/java/io/netty/handler/ssl/SniHandler.java, +                            if (len == SslUtils.NOT_ENCRYPTED) {, +                            if (len == SslUtils.NOT_ENOUGH_DATA ||, +                                    writerIndex - readerIndex - SslUtils.SSL_RECORD_HEADER_LENGTH < len) {, +++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, +        return getEncryptedPacketLength(buffer, buffer.readerIndex()) != SslUtils.NOT_ENCRYPTED;, +            if (packetLength == SslUtils.NOT_ENCRYPTED) {, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +, +            if (packetLength == SslUtils.NOT_ENCRYPTED) {, +                throw new NotSslRecordException("not an SSL/TLS record");, +            }, +, +++ b/handler/src/main/java/io/netty/handler/ssl/SniHandler.java, +                            if (len == SslUtils.NOT_ENCRYPTED) {, +                            if (len == SslUtils.NOT_ENOUGH_DATA ||, +                                    writerIndex - readerIndex - SslUtils.SSL_RECORD_HEADER_LENGTH < len) {, +++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, +        return getEncryptedPacketLength(buffer, buffer.readerIndex()) != SslUtils.NOT_ENCRYPTED;, +            if (packetLength == SslUtils.NOT_ENCRYPTED) {, +++ b/handler/src/main/java/io/netty/handler/ssl/SslUtils.java, +    static final int SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC = 20;, +    static final int SSL_CONTENT_TYPE_ALERT = 21;, +    static final int SSL_CONTENT_TYPE_HANDSHAKE = 22;, +    static final int SSL_CONTENT_TYPE_APPLICATION_DATA = 23;, +    static final int SSL_RECORD_HEADER_LENGTH = 5;, +, +    /**, +     * Not enough data in buffer to parse the record length, +     */, +    static final int NOT_ENOUGH_DATA = -1;, +, +    /**, +     * data is not encrypted, +     */, +    static final int NOT_ENCRYPTED = -2;, +     *                  The length of the encrypted packet that is included in the buffer or, +     *                  {@link #SslUtils#NOT_ENOUGH_DATA} if not enought data is present in the, +     *                  {@link ByteBuf}. This will return {@link SslUtils#NOT_ENCRYPTED} if, +     *                  the given {@link ByteBuf} is not encrypted at all., +                    return NOT_ENOUGH_DATA;, +                return NOT_ENCRYPTED;, +        if (buffer.remaining() >= SSL_RECORD_HEADER_LENGTH) {, +            case SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC:, +            case SSL_CONTENT_TYPE_ALERT:, +            case SSL_CONTENT_TYPE_HANDSHAKE:, +            case SSL_CONTENT_TYPE_APPLICATION_DATA:, +                packetLength = unsignedShort(buffer.getShort(pos + 3)) + SSL_RECORD_HEADER_LENGTH;, +                if (packetLength <= SSL_RECORD_HEADER_LENGTH) {, +                    return NOT_ENOUGH_DATA;, +                return NOT_ENCRYPTED;, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +, +            if (packetLength == SslUtils.NOT_ENCRYPTED) {, +                throw new NotSslRecordException("not an SSL/TLS record");, +            }, +, +++ b/handler/src/main/java/io/netty/handler/ssl/SniHandler.java, +                            if (len == SslUtils.NOT_ENCRYPTED) {, +                            if (len == SslUtils.NOT_ENOUGH_DATA ||, +                                    writerIndex - readerIndex - SslUtils.SSL_RECORD_HEADER_LENGTH < len) {, +++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, +        return getEncryptedPacketLength(buffer, buffer.readerIndex()) != SslUtils.NOT_ENCRYPTED;, +            if (packetLength == SslUtils.NOT_ENCRYPTED) {, +++ b/handler/src/main/java/io/netty/handler/ssl/SslUtils.java, +    static final int SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC = 20;, +    static final int SSL_CONTENT_TYPE_ALERT = 21;, +    static final int SSL_CONTENT_TYPE_HANDSHAKE = 22;, +    static final int SSL_CONTENT_TYPE_APPLICATION_DATA = 23;, +    static final int SSL_RECORD_HEADER_LENGTH = 5;, +, +    /**, +     * Not enough data in buffer to parse the record length, +     */, +    static final int NOT_ENOUGH_DATA = -1;, +, +    /**, +     * data is not encrypted]