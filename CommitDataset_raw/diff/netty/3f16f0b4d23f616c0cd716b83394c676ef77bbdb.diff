[+++ b/example/src/main/java/io/netty/example/http/upload/HttpUploadClient.java, +import java.util.logging.Level;, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(HttpUploadClient.class.getName());, +            logger.log(Level.WARNING, "Invalid URI syntax", e);, +            logger.log(Level.WARNING, "Only HTTP(S) is supported.");, +            logger.log(Level.WARNING, "Error: ", e);, +            logger.log(Level.WARNING, "A correct path is needed");, +            logger.log(Level.WARNING, "Error: ", e);, +++ b/example/src/main/java/io/netty/example/http/upload/HttpUploadClient.java, +import java.util.logging.Level;, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(HttpUploadClient.class.getName());, +            logger.log(Level.WARNING, "Invalid URI syntax", e);, +            logger.log(Level.WARNING, "Only HTTP(S) is supported.");, +            logger.log(Level.WARNING, "Error: ", e);, +            logger.log(Level.WARNING, "A correct path is needed");, +            logger.log(Level.WARNING, "Error: ", e);, +++ b/example/src/main/java/io/netty/example/http/upload/HttpUploadClientHandler.java, +, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(HttpUploadClientHandler.class.getName());, +++ b/example/src/main/java/io/netty/example/http/upload/HttpUploadClient.java, +import java.util.logging.Level;, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(HttpUploadClient.class.getName());, +            logger.log(Level.WARNING, "Invalid URI syntax", e);, +            logger.log(Level.WARNING, "Only HTTP(S) is supported.");, +            logger.log(Level.WARNING, "Error: ", e);, +            logger.log(Level.WARNING, "A correct path is needed");, +            logger.log(Level.WARNING, "Error: ", e);, +++ b/example/src/main/java/io/netty/example/http/upload/HttpUploadClientHandler.java, +, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(HttpUploadClientHandler.class.getName());, +++ b/example/src/main/java/io/netty/example/http/upload/HttpUploadServerHandler.java, +import java.util.logging.Level;, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(HttpUploadServerHandler.class.getName());, +        logger.log(Level.WARNING, responseContent.toString(), cause);, +++ b/example/src/main/java/io/netty/example/http/upload/HttpUploadClient.java, +import java.util.logging.Level;, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(HttpUploadClient.class.getName());, +            logger.log(Level.WARNING, "Invalid URI syntax", e);, +            logger.log(Level.WARNING, "Only HTTP(S) is supported.");, +            logger.log(Level.WARNING, "Error: ", e);, +            logger.log(Level.WARNING, "A correct path is needed");, +            logger.log(Level.WARNING, "Error: ", e);, +++ b/example/src/main/java/io/netty/example/http/upload/HttpUploadClientHandler.java, +, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(HttpUploadClientHandler.class.getName());, +++ b/example/src/main/java/io/netty/example/http/upload/HttpUploadServerHandler.java, +import java.util.logging.Level;, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(HttpUploadServerHandler.class.getName());, +        logger.log(Level.WARNING, responseContent.toString(), cause);, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/AutobahnServerHandler.java, +, +import java.util.logging.Level;, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(AutobahnServerHandler.class.getName());, +        if (logger.isLoggable(Level.FINE)) {, +            logger.fine(String.format(, +                    "Channel %s received %s", ctx.channel().id(), frame.getClass().getSimpleName()));, +++ b/example/src/main/java/io/netty/example/http/upload/HttpUploadClient.java, +import java.util.logging.Level;, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(HttpUploadClient.class.getName());, +            logger.log(Level.WARNING, "Invalid URI syntax", e);, +            logger.log(Level.WARNING, "Only HTTP(S) is supported.");, +            logger.log(Level.WARNING, "Error: ", e);, +            logger.log(Level.WARNING, "A correct path is needed");, +            logger.log(Level.WARNING, "Error: ", e);, +++ b/example/src/main/java/io/netty/example/http/upload/HttpUploadClientHandler.java, +, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(HttpUploadClientHandler.class.getName());, +++ b/example/src/main/java/io/netty/example/http/upload/HttpUploadServerHandler.java, +import java.util.logging.Level;, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(HttpUploadServerHandler.class.getName());, +        logger.log(Level.WARNING, responseContent.toString(), cause);, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/AutobahnServerHandler.java, +, +import java.util.logging.Level;, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(AutobahnServerHandler.class.getName());, +        if (logger.isLoggable(Level.FINE)) {, +            logger.fine(String.format(, +                    "Channel %s received %s", ctx.channel().id(), frame.getClass().getSimpleName()));, +++ b/example/src/main/java/io/netty/example/http/websocketx/server/WebSocketServerHandler.java, +, +import java.util.logging.Level;, +import java.util.logging.Logger;, +    private static final Logger logger = Logger.getLogger(WebSocketServerHandler.class.getName());, +        if (logger.isLoggable(Level.FINE)) {, +            logger.fine(String.format("Channel %s received %s", ctx.channel().id(), request));, +++ b/example/src/main/java/io/netty/example/http/upload/HttpUploadClient.java]