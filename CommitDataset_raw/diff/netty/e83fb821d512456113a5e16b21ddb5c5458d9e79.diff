[+++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +    /**, +     * Allocate a new direct {@link ByteBuffer} with the given initialCapacity., +     */, +    protected ByteBuffer allocateDirect(int initialCapacity) {, +        return ByteBuffer.allocateDirect(initialCapacity);, +    }, +, +            ByteBuffer newBuffer = allocateDirect(newCapacity);, +            ByteBuffer newBuffer = allocateDirect(newCapacity);, +                src.isDirect()? allocateDirect(length) : ByteBuffer.allocate(length);, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +    /**, +     * Allocate a new direct {@link ByteBuffer} with the given initialCapacity., +     */, +    protected ByteBuffer allocateDirect(int initialCapacity) {, +        return ByteBuffer.allocateDirect(initialCapacity);, +    }, +, +            ByteBuffer newBuffer = allocateDirect(newCapacity);, +            ByteBuffer newBuffer = allocateDirect(newCapacity);, +                src.isDirect()? allocateDirect(length) : ByteBuffer.allocate(length);, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledUnsafeDirectByteBuf.java, +        setByteBuffer(allocateDirect(initialCapacity));, +    /**, +     * Allocate a new direct {@link ByteBuffer} with the given initialCapacity., +     */, +    protected ByteBuffer allocateDirect(int initialCapacity) {, +        return ByteBuffer.allocateDirect(initialCapacity);, +    }, +, +            ByteBuffer newBuffer = allocateDirect(newCapacity);, +            ByteBuffer newBuffer = allocateDirect(newCapacity);]