[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramPipelineSink.java, +     *        the {@link Executor} that will run the {@link NioDatagramWorker}s, +     *        for this sink, +     * @param workerCount, +     *        the number of {@link NioDatagramWorker}s for this sink, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramPipelineSink.java, +     *        the {@link Executor} that will run the {@link NioDatagramWorker}s, +     *        for this sink, +     * @param workerCount, +     *        the number of {@link NioDatagramWorker}s for this sink, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramWorker.java, +import static org.jboss.netty.channel.Channels.*;, +import java.nio.channels.AsynchronousCloseException;, +import java.nio.channels.CancelledKeyException;, +import java.nio.channels.ClosedChannelException;, +import java.nio.channels.DatagramChannel;, +import java.nio.channels.NotYetConnectedException;, +import java.nio.channels.SelectionKey;, +import java.nio.channels.Selector;, +import org.jboss.netty.buffer.ChannelBufferFactory;, +import org.jboss.netty.channel.Channel;, +import org.jboss.netty.channel.ChannelException;, +import org.jboss.netty.channel.ChannelFuture;, +import org.jboss.netty.channel.MessageEvent;, +import org.jboss.netty.channel.ReceiveBufferSizePredictor;, +import org.jboss.netty.channel.socket.nio.SocketSendBufferPool.SendBuffer;, +import org.jboss.netty.logging.InternalLogger;, +import org.jboss.netty.logging.InternalLoggerFactory;, +import org.jboss.netty.util.ThreadRenamingRunnable;, +import org.jboss.netty.util.internal.LinkedTransferQueue;, +     * @param channel the channel to register, +     * @param future  the {@link ChannelFuture} that has to be notified on, +     *                completion, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramPipelineSink.java, +     *        the {@link Executor} that will run the {@link NioDatagramWorker}s, +     *        for this sink, +     * @param workerCount, +     *        the number of {@link NioDatagramWorker}s for this sink, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramWorker.java, +import static org.jboss.netty.channel.Channels.*;, +import java.nio.channels.AsynchronousCloseException;, +import java.nio.channels.CancelledKeyException;, +import java.nio.channels.ClosedChannelException;, +import java.nio.channels.DatagramChannel;, +import java.nio.channels.NotYetConnectedException;, +import java.nio.channels.SelectionKey;, +import java.nio.channels.Selector;, +import org.jboss.netty.buffer.ChannelBufferFactory;, +import org.jboss.netty.channel.Channel;, +import org.jboss.netty.channel.ChannelException;, +import org.jboss.netty.channel.ChannelFuture;, +import org.jboss.netty.channel.MessageEvent;, +import org.jboss.netty.channel.ReceiveBufferSizePredictor;, +import org.jboss.netty.channel.socket.nio.SocketSendBufferPool.SendBuffer;, +import org.jboss.netty.logging.InternalLogger;, +import org.jboss.netty.logging.InternalLoggerFactory;, +import org.jboss.netty.util.ThreadRenamingRunnable;, +import org.jboss.netty.util.internal.LinkedTransferQueue;, +     * @param channel the channel to register, +     * @param future  the {@link ChannelFuture} that has to be notified on, +     *                completion, +++ b/src/main/java/org/jboss/netty/util/internal/ConcurrentHashMap.java, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramPipelineSink.java, +     *        the {@link Executor} that will run the {@link NioDatagramWorker}s, +     *        for this sink, +     * @param workerCount, +     *        the number of {@link NioDatagramWorker}s for this sink, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramWorker.java, +import static org.jboss.netty.channel.Channels.*;, +import java.nio.channels.AsynchronousCloseException;, +import java.nio.channels.CancelledKeyException;, +import java.nio.channels.ClosedChannelException;, +import java.nio.channels.DatagramChannel;, +import java.nio.channels.NotYetConnectedException;, +import java.nio.channels.SelectionKey;, +import java.nio.channels.Selector;, +import org.jboss.netty.buffer.ChannelBufferFactory;, +import org.jboss.netty.channel.Channel;, +import org.jboss.netty.channel.ChannelException;, +import org.jboss.netty.channel.ChannelFuture;, +import org.jboss.netty.channel.MessageEvent;, +import org.jboss.netty.channel.ReceiveBufferSizePredictor;, +import org.jboss.netty.channel.socket.nio.SocketSendBufferPool.SendBuffer;, +import org.jboss.netty.logging.InternalLogger;, +import org.jboss.netty.logging.InternalLoggerFactory;, +import org.jboss.netty.util.ThreadRenamingRunnable;, +import org.jboss.netty.util.internal.LinkedTransferQueue;, +     * @param channel the channel to register, +     * @param future  the {@link ChannelFuture} that has to be notified on, +     *                completion, +++ b/src/main/java/org/jboss/netty/util/internal/ConcurrentHashMap.java, +++ b/src/main/java/org/jboss/netty/util/internal/ConcurrentIdentityHashMap.java, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramPipelineSink.java, +     *        the {@link Executor} that will run the {@link NioDatagramWorker}s, +     *        for this sink, +     * @param workerCount, +     *        the number of {@link NioDatagramWorker}s for this sink, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramWorker.java, +import static org.jboss.netty.channel.Channels.*;, +import java.nio.channels.AsynchronousCloseException;]