[+++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, + * <h4>NIO {@link ByteBuffer}</h4>, + *, + *, + * <h4>{@link String}</h4>, + *, + * Various {@link #toString(String)} methods convert a {@link ChannelBuffer}, + * into a {@link String}.  Plesae note that {@link #toString()} is not a, + * conversion method., + *, + * <h4>{@link InputStream} and {@link OutputStream}</h4>, + *, + * Please refer to {@link ChannelBufferInputStream} and, + * {@link ChannelBufferOutputStream}., +    /**, +     * Transfers the specified source buffer's data to this buffer starting at, +     * the specified absolute {@code index} until the destination becomes, +     * unreadable.  This method is basically same with {@link #setBytes(int, ChannelBuffer, int, int)},, +     * except that this method advances the {@code readerIndex} of the source, +     * buffer while {@link #getBytes(int, ChannelBuffer, int, int)} doesn't., +     *, +     * @throws IndexOutOfBoundsException, +     *         if the specified {@code index} is less than {@code 0} or, +     *         if {@code index + dst.writableBytes} is greater than {@code capacity}, +     */, +, +    /**, +     * Transfers the specified source buffer's data to this buffer starting at, +     * the specified absolute {@code index}., +     *, +     * @throws IndexOutOfBoundsException, +     *         if the specified {@code index} is less than {@code 0},, +     *         if the specified {@code srcIndex} is less than {@code 0},, +     *         if {@code index + length} is greater than {@code capacity}, or, +     *         if {@code srcIndex + length} is greater than {@code src.capacity}, +     */, +, +    /**, +     * Transfers the specified source array's data to this buffer starting at, +     * the specified absolute {@code index}., +     *, +     * @throws IndexOutOfBoundsException, +     *         if the specified {@code index} is less than {@code 0} or, +     *         if {@code index + src.length} is greater than {@code capacity}, +     */, +, +    /**, +     * Transfers the specified source array's data to this buffer starting at, +     * the specified absolute {@code index}., +     *, +     * @throws IndexOutOfBoundsException, +     *         if the specified {@code index} is less than {@code 0},, +     *         if the specified {@code srcIndex} is less than {@code 0},, +     *         if {@code index + length} is greater than {@code capacity}, or, +     *         if {@code srcIndex + length} is greater than {@code src.lenggth}, +     */, +, +    /**, +     * Transfers the specified source buffer's data to this buffer starting at, +     * the specified absolute {@code index} until the source buffer's position, +     * reaches to its limit., +     *, +     * @throws IndexOutOfBoundsException, +     *         if the specified {@code index} is less than {@code 0} or, +     *         if {@code index + src.remaining()} is greater than {@code capacity}, +     */, +, +    /**, +     * Transfers the content of the specified source stream to this buffer, +     * starting at the specified absolute {@code index}., +     *, +     * @throws IndexOutOfBoundsException, +     *         if the specified {@code index} is less than {@code 0} or, +     *         if {@code index + length} is greater than {@code capacity}, +     * @throws IOException, +     *         if the specified stream threw an exception during I/O, +     */, +, +    /**, +     * Transfers the content of the specified source channel to this buffer, +     * starting at the specified absolute {@code index}., +     *, +     * @return the number of bytes read from the specified channel, +     *, +     * @throws IndexOutOfBoundsException, +     *         if the specified {@code index} is less than {@code 0} or, +     *         if {@code index + length} is greater than {@code capacity}, +     * @throws IOException, +     *         if the specified channel threw an exception during I/O, +     */, +    /**, +     * Fills this buffer with <tt>NUL (0x00)</tt> starting at the specified, +     * absolute {@code index}., +     *, +     * @param length the number of <tt>NUL</tt>s to write to the buffer, +     *, +     * @throws IndexOutOfBoundsException, +     *         if the specified {@code index} is less than {@code 0} or, +     *         if {@code index + length} is greater than {@code capacity}, +     */]