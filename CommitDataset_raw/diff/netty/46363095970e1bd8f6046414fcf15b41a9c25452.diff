[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +     * Returns {@code true} if ID is for a server initiated stream or ping., +     */, +    static boolean isServerID(int ID) {, +        // Server initiated streams and pings have even IDs, +        return ID % 2 == 0;, +    }, +, +    /**, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +     * Returns {@code true} if ID is for a server initiated stream or ping., +     */, +    static boolean isServerID(int ID) {, +        // Server initiated streams and pings have even IDs, +        return ID % 2 == 0;, +    }, +, +    /**, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameCodec.java, +    private final SpdyFrameDecoder decoder;, +    private final SpdyFrameEncoder encoder;, +    /**, +     * Creates a new instance with the default decoder and encoder options, +     * ({@code maxChunkSize (8192)}, {@code maxFrameSize (65536)},, +     * {@code maxHeaderSize (16384)}, {@code compressionLevel (6)},, +     * {@code windowBits (15)}, and {@code memLevel (8)})., +     */, +        this(8192, 65536, 16384, 6, 15, 8);, +    }, +, +    /**, +     * Creates a new instance with the specified decoder and encoder options., +     */, +    public SpdyFrameCodec(, +            int maxChunkSize, int maxFrameSize, int maxHeaderSize,, +            int compressionLevel, int windowBits, int memLevel) {, +        decoder = new SpdyFrameDecoder(maxChunkSize, maxFrameSize, maxHeaderSize);, +        encoder = new SpdyFrameEncoder(compressionLevel, windowBits, memLevel);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +     * Returns {@code true} if ID is for a server initiated stream or ping., +     */, +    static boolean isServerID(int ID) {, +        // Server initiated streams and pings have even IDs, +        return ID % 2 == 0;, +    }, +, +    /**, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameCodec.java, +    private final SpdyFrameDecoder decoder;, +    private final SpdyFrameEncoder encoder;, +    /**, +     * Creates a new instance with the default decoder and encoder options, +     * ({@code maxChunkSize (8192)}, {@code maxFrameSize (65536)},, +     * {@code maxHeaderSize (16384)}, {@code compressionLevel (6)},, +     * {@code windowBits (15)}, and {@code memLevel (8)})., +     */, +        this(8192, 65536, 16384, 6, 15, 8);, +    }, +, +    /**, +     * Creates a new instance with the specified decoder and encoder options., +     */, +    public SpdyFrameCodec(, +            int maxChunkSize, int maxFrameSize, int maxHeaderSize,, +            int compressionLevel, int windowBits, int memLevel) {, +        decoder = new SpdyFrameDecoder(maxChunkSize, maxFrameSize, maxHeaderSize);, +        encoder = new SpdyFrameEncoder(compressionLevel, windowBits, memLevel);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameDecoder.java, +    private final int maxChunkSize;, +    private final int maxFrameSize;, +    private final int maxHeaderSize;, +, +    /**, +     * Creates a new instance with the default {@code maxChunkSize (8192)},, +     * {@code maxFrameSize (65536)}, and {@code maxHeaderSize (16384)}., +     */, +        this(8192, 65536, 16384);, +    }, +, +    /**, +     * Creates a new instance with the specified parameters., +     */, +    public SpdyFrameDecoder(, +            int maxChunkSize, int maxFrameSize, int maxHeaderSize) {, +        super(true); // Enable unfold for data frames, +        if (maxChunkSize <= 0) {, +            throw new IllegalArgumentException(, +                    "maxChunkSize must be a positive integer: " + maxChunkSize);, +        }, +        if (maxFrameSize <= 0) {, +            throw new IllegalArgumentException(, +                    "maxFrameSize must be a positive integer: " + maxFrameSize);, +        }, +        if (maxHeaderSize <= 0) {, +            throw new IllegalArgumentException(, +                    "maxHeaderSize must be a positive integer: " + maxHeaderSize);, +        }, +        this.maxChunkSize = maxChunkSize;, +        this.maxFrameSize = maxFrameSize;, +        this.maxHeaderSize = maxHeaderSize;]