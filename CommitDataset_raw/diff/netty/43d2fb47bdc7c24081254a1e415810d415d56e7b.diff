[+++ b/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java, +        PendingWrite pendingWrite;, +, +        if (msg.readable()) {, +            pendingWrite = new PendingWrite(evt.getFuture(), msg.toByteBuffer(msg.readerIndex(), msg.readableBytes()));, +        } else {, +            pendingWrite = new PendingWrite(evt.getFuture(), null);, +        }, +                    if (outAppBuf == null) {, +                        // A write request with an empty buffer, +                        pendingUnencryptedWrites.remove();, +                        offerEncryptedWriteRequest(, +                                new DownstreamMessageEvent(, +                                        channel, pendingWrite.future,, +                                        ChannelBuffers.EMPTY_BUFFER,, +                                        channel.getRemoteAddress()));, +                        offered = true;, +                    } else {, +                            offerEncryptedWriteRequest(encryptedWrite);, +                            offered = true;, +            }, +    private void offerEncryptedWriteRequest(MessageEvent encryptedWrite) {, +        boolean offered;, +        if (Thread.holdsLock(pendingEncryptedWrites)) {, +            offered = pendingEncryptedWrites.offer(encryptedWrite);, +        } else {, +            synchronized (pendingEncryptedWrites) {, +                offered = pendingEncryptedWrites.offer(encryptedWrite);, +            }, +        }, +        assert offered;, +    }, +]