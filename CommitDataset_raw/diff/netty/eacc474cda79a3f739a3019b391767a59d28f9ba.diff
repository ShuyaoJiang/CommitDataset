[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpMessage.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpMessage.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpRequest.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpMessage.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpRequest.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpResponse.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpMessage.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpRequest.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpResponse.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                encoder = result.contentEncoder();, +                        result.targetContentEncoding());, +        public String targetContentEncoding() {, +        public EmbeddedByteChannel contentEncoder() {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpMessage.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpRequest.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpResponse.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                encoder = result.contentEncoder();, +                        result.targetContentEncoding());, +        public String targetContentEncoding() {, +        public EmbeddedByteChannel contentEncoder() {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java, +    public String protocolName() {, +    public int majorVersion() {, +    public int minorVersion() {, +    public String text() {, +        return text();, +        return (protocolName().hashCode() * 31 + majorVersion()) * 31 +, +               minorVersion();, +        return minorVersion() == that.minorVersion() &&, +               majorVersion() == that.majorVersion() &&, +               protocolName().equals(that.protocolName());, +        int v = protocolName().compareTo(o.protocolName());, +        v = majorVersion() - o.majorVersion();, +        return minorVersion() - o.minorVersion();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpMessage.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpRequest.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpResponse.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                encoder = result.contentEncoder();, +                        result.targetContentEncoding());, +        public String targetContentEncoding() {, +        public EmbeddedByteChannel contentEncoder() {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java, +    public String protocolName() {, +    public int majorVersion() {, +    public int minorVersion() {, +    public String text() {, +        return text();, +        return (protocolName().hashCode() * 31 + majorVersion()) * 31 +, +               minorVersion();, +        return minorVersion() == that.minorVersion() &&, +               majorVersion() == that.majorVersion() &&, +               protocolName().equals(that.protocolName());, +        int v = protocolName().compareTo(o.protocolName());, +        v = majorVersion() - o.majorVersion();, +        return minorVersion() - o.minorVersion();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +    public String path() {, +    public Map<String, List<String>> parameters() {, +                int pathLength = path().length();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpMessage.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpRequest.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpResponse.java, +        buf.append(protocolVersion().text());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                encoder = result.contentEncoder();, +                        result.targetContentEncoding());, +        public String targetContentEncoding() {, +        public EmbeddedByteChannel contentEncoder() {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java, +    public String protocolName() {, +    public int majorVersion() {, +    public int minorVersion() {, +    public String text() {, +        return text();, +        return (protocolName().hashCode() * 31 + majorVersion()) * 31 +, +               minorVersion();, +        return minorVersion() == that.minorVersion() &&, +               majorVersion() == that.majorVersion() &&, +               protocolName().equals(that.protocolName());, +        int v = protocolName().compareTo(o.protocolName());]