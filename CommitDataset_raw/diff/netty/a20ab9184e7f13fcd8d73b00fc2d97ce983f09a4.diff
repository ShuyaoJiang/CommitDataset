[+++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/AutobahnServer.java, +import io.netty.logging.InternalLogger;, +import io.netty.logging.InternalLoggerFactory;, +    private static final InternalLogger logger =, +        InternalLoggerFactory.getInstance(AutobahnServer.class);, +, +        logger.info("Web Socket Server started at port " + port);, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/AutobahnServer.java, +import io.netty.logging.InternalLogger;, +import io.netty.logging.InternalLoggerFactory;, +    private static final InternalLogger logger =, +        InternalLoggerFactory.getInstance(AutobahnServer.class);, +, +        logger.info("Web Socket Server started at port " + port);, +++ b/handler/src/main/java/io/netty/handler/ipfilter/IpSubnet.java, +import io.netty.logging.InternalLogger;, +import io.netty.logging.InternalLoggerFactory;, +    , +    private static final InternalLogger logger =, +        InternalLoggerFactory.getInstance(IpSubnet.class);, +    , +            logger.debug("IpSubnet: " + ipSubnet.toString() + " from " + ipSubnet.cidr.getBaseAddress() + " to ", +                logger.debug("Is IN: " + args[1] + " " + ipSubnet.contains(args[1]));, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/AutobahnServer.java, +import io.netty.logging.InternalLogger;, +import io.netty.logging.InternalLoggerFactory;, +    private static final InternalLogger logger =, +        InternalLoggerFactory.getInstance(AutobahnServer.class);, +, +        logger.info("Web Socket Server started at port " + port);, +++ b/handler/src/main/java/io/netty/handler/ipfilter/IpSubnet.java, +import io.netty.logging.InternalLogger;, +import io.netty.logging.InternalLoggerFactory;, +    , +    private static final InternalLogger logger =, +        InternalLoggerFactory.getInstance(IpSubnet.class);, +    , +            logger.debug("IpSubnet: " + ipSubnet.toString() + " from " + ipSubnet.cidr.getBaseAddress() + " to ", +                logger.debug("Is IN: " + args[1] + " " + ipSubnet.contains(args[1]));, +++ b/handler/src/main/java/io/netty/handler/ipfilter/IpV4Subnet.java, +import io.netty.logging.InternalLogger;, +import io.netty.logging.InternalLoggerFactory;, +    , +    private static final InternalLogger logger =, +        InternalLoggerFactory.getInstance(IpV4Subnet.class);, +    , +                logger.debug("Is IN: " + args[1] + " " + ipV4Subnet.contains(args[1]));, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/AutobahnServer.java, +import io.netty.logging.InternalLogger;, +import io.netty.logging.InternalLoggerFactory;, +    private static final InternalLogger logger =, +        InternalLoggerFactory.getInstance(AutobahnServer.class);, +, +        logger.info("Web Socket Server started at port " + port);, +++ b/handler/src/main/java/io/netty/handler/ipfilter/IpSubnet.java, +import io.netty.logging.InternalLogger;, +import io.netty.logging.InternalLoggerFactory;, +    , +    private static final InternalLogger logger =, +        InternalLoggerFactory.getInstance(IpSubnet.class);, +    , +            logger.debug("IpSubnet: " + ipSubnet.toString() + " from " + ipSubnet.cidr.getBaseAddress() + " to ", +                logger.debug("Is IN: " + args[1] + " " + ipSubnet.contains(args[1]));, +++ b/handler/src/main/java/io/netty/handler/ipfilter/IpV4Subnet.java, +import io.netty.logging.InternalLogger;, +import io.netty.logging.InternalLoggerFactory;, +    , +    private static final InternalLogger logger =, +        InternalLoggerFactory.getInstance(IpV4Subnet.class);, +    , +                logger.debug("Is IN: " + args[1] + " " + ipV4Subnet.contains(args[1]));, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/AbstractSocketServerBootstrapTest.java, +import io.netty.logging.InternalLogger;, +import io.netty.logging.InternalLoggerFactory;, +    private static final InternalLogger logger =, +        InternalLoggerFactory.getInstance(AbstractSocketServerBootstrapTest.class);, +, +                logger.error("Socket.getReceiveBufferSize() does not work: " + e);, +            logger.error("Socket.setReceiveBufferSize() does not work: " + e);, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/AutobahnServer.java, +import io.netty.logging.InternalLogger;, +import io.netty.logging.InternalLoggerFactory;, +    private static final InternalLogger logger =, +        InternalLoggerFactory.getInstance(AutobahnServer.class);, +, +        logger.info("Web Socket Server started at port " + port);, +++ b/handler/src/main/java/io/netty/handler/ipfilter/IpSubnet.java, +import io.netty.logging.InternalLogger;, +import io.netty.logging.InternalLoggerFactory;, +    , +    private static final InternalLogger logger =, +        InternalLoggerFactory.getInstance(IpSubnet.class);, +    , +            logger.debug("IpSubnet: " + ipSubnet.toString() + " from " + ipSubnet.cidr.getBaseAddress() + " to ", +                logger.debug("Is IN: " + args[1] + " " + ipSubnet.contains(args[1]));, +++ b/handler/src/main/java/io/netty/handler/ipfilter/IpV4Subnet.java, +import io.netty.logging.InternalLogger;, +import io.netty.logging.InternalLoggerFactory;, +    , +    private static final InternalLogger logger =]