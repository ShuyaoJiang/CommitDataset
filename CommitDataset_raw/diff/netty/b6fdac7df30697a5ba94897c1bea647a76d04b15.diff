[+++ /dev/null, +++ /dev/null, +++ b/handler/src/main/java/io/netty/handler/logging/LoggingHandler.java, +    private void logMessages(ChannelHandlerContext ctx, String eventName, MessageList<Object> msgs) {, +            if (size == 0) {, +                logger.log(internalLevel, format(ctx, formatEmptyMessageList(eventName)));, +            } else {, +                    logger.log(internalLevel, format(ctx, formatMessage(eventName, i + 1, size, msg)));, +, +    protected String formatEmptyMessageList(String eventName) {, +        return eventName + "(empty)";, +    }, +, +    protected String formatMessage(String eventName, int seq, int size, Object msg) {, +        if (msg instanceof ByteBuf) {, +            return formatByteBuf(eventName, seq, size, (ByteBuf) msg);, +        } else {, +            return formatNonByteBuf(eventName, seq, size, msg);, +        }, +    }, +, +    protected String formatByteBuf(String eventName, int seq, int size, ByteBuf buf) {, +        StringBuilder dump = new StringBuilder(rows * 80 + eventName.length() + 16);, +        dump.append(eventName).append('(').append(seq).append('/').append(size).append(", ");, +        dump.append(length).append('B').append(')');, +    protected String formatNonByteBuf(String eventName, int seq, int size, Object msg) {, +        return eventName + '(' + seq + '/' + size + "): " + msg;, +++ /dev/null, +++ b/handler/src/main/java/io/netty/handler/logging/LoggingHandler.java, +    private void logMessages(ChannelHandlerContext ctx, String eventName, MessageList<Object> msgs) {, +            if (size == 0) {, +                logger.log(internalLevel, format(ctx, formatEmptyMessageList(eventName)));, +            } else {, +                    logger.log(internalLevel, format(ctx, formatMessage(eventName, i + 1, size, msg)));, +, +    protected String formatEmptyMessageList(String eventName) {, +        return eventName + "(empty)";, +    }, +, +    protected String formatMessage(String eventName, int seq, int size, Object msg) {, +        if (msg instanceof ByteBuf) {, +            return formatByteBuf(eventName, seq, size, (ByteBuf) msg);, +        } else {, +            return formatNonByteBuf(eventName, seq, size, msg);, +        }, +    }, +, +    protected String formatByteBuf(String eventName, int seq, int size, ByteBuf buf) {, +        StringBuilder dump = new StringBuilder(rows * 80 + eventName.length() + 16);, +        dump.append(eventName).append('(').append(seq).append('/').append(size).append(", ");, +        dump.append(length).append('B').append(')');, +    protected String formatNonByteBuf(String eventName, int seq, int size, Object msg) {, +        return eventName + '(' + seq + '/' + size + "): " + msg;, +++ /dev/null]