[+++ b/common/src/main/java/io/netty/util/ThreadDeathWatcher.java, +            // Set to null to ensure we not create classloader leaks by holds a strong reference to the inherited, +            // classloader., +            // See:, +            // - https://github.com/netty/netty/issues/7290, +            // - https://bugs.openjdk.java.net/browse/JDK-7008595, +            watcherThread.setContextClassLoader(null);, +, +++ b/common/src/main/java/io/netty/util/ThreadDeathWatcher.java, +            // Set to null to ensure we not create classloader leaks by holds a strong reference to the inherited, +            // classloader., +            // See:, +            // - https://github.com/netty/netty/issues/7290, +            // - https://bugs.openjdk.java.net/browse/JDK-7008595, +            watcherThread.setContextClassLoader(null);, +, +++ b/common/src/main/java/io/netty/util/concurrent/GlobalEventExecutor.java, +            // Set to null to ensure we not create classloader leaks by holds a strong reference to the inherited, +            // classloader., +            // See:, +            // - https://github.com/netty/netty/issues/7290, +            // - https://bugs.openjdk.java.net/browse/JDK-7008595, +            t.setContextClassLoader(null);, +]