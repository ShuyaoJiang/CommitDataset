[+++ b/transport/src/main/java/io/netty/channel/ChannelHandler.java, +     * Gets called if a {@link Throwable} was thrown., +     */, +    void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception;, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelHandler.java, +     * Gets called if a {@link Throwable} was thrown., +     */, +    void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception;, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerAdapter.java, +, +    /**, +     * Calls {@link ChannelHandlerContext#fireExceptionCaught(Throwable)} to forward, +     * to the next {@link ChannelHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +    @Override, +    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause), +            throws Exception {, +        ctx.fireExceptionCaught(cause);, +    }, +++ b/transport/src/main/java/io/netty/channel/ChannelHandler.java, +     * Gets called if a {@link Throwable} was thrown., +     */, +    void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception;, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerAdapter.java, +, +    /**, +     * Calls {@link ChannelHandlerContext#fireExceptionCaught(Throwable)} to forward, +     * to the next {@link ChannelHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +    @Override, +    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause), +            throws Exception {, +        ctx.fireExceptionCaught(cause);, +    }, +++ b/transport/src/main/java/io/netty/channel/ChannelStateHandler.java, +++ b/transport/src/main/java/io/netty/channel/ChannelHandler.java, +     * Gets called if a {@link Throwable} was thrown., +     */, +    void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception;, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerAdapter.java, +, +    /**, +     * Calls {@link ChannelHandlerContext#fireExceptionCaught(Throwable)} to forward, +     * to the next {@link ChannelHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +    @Override, +    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause), +            throws Exception {, +        ctx.fireExceptionCaught(cause);, +    }, +++ b/transport/src/main/java/io/netty/channel/ChannelStateHandler.java, +++ b/transport/src/main/java/io/netty/channel/ChannelStateHandlerAdapter.java, +++ b/transport/src/main/java/io/netty/channel/ChannelHandler.java, +     * Gets called if a {@link Throwable} was thrown., +     */, +    void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception;, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerAdapter.java, +, +    /**, +     * Calls {@link ChannelHandlerContext#fireExceptionCaught(Throwable)} to forward, +     * to the next {@link ChannelHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +    @Override, +    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause), +            throws Exception {, +        ctx.fireExceptionCaught(cause);, +    }, +++ b/transport/src/main/java/io/netty/channel/ChannelStateHandler.java, +++ b/transport/src/main/java/io/netty/channel/ChannelStateHandlerAdapter.java, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +        next.invokeExceptionCaught(cause);, +++ b/transport/src/main/java/io/netty/channel/ChannelHandler.java, +     * Gets called if a {@link Throwable} was thrown., +     */, +    void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception;, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerAdapter.java, +, +    /**, +     * Calls {@link ChannelHandlerContext#fireExceptionCaught(Throwable)} to forward, +     * to the next {@link ChannelHandler} in the {@link ChannelPipeline}.]