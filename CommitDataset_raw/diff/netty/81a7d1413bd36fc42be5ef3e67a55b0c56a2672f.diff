[+++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +        int hashCode = EmptyByteBuf.EMPTY_BYTE_BUF_HASH_CODE;, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +        int hashCode = EmptyByteBuf.EMPTY_BYTE_BUF_HASH_CODE;, +++ b/buffer/src/main/java/io/netty/buffer/EmptyByteBuf.java, +    static final int EMPTY_BYTE_BUF_HASH_CODE = 1;, +        return EMPTY_BYTE_BUF_HASH_CODE;, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +        int hashCode = EmptyByteBuf.EMPTY_BYTE_BUF_HASH_CODE;, +++ b/buffer/src/main/java/io/netty/buffer/EmptyByteBuf.java, +    static final int EMPTY_BYTE_BUF_HASH_CODE = 1;, +        return EMPTY_BYTE_BUF_HASH_CODE;, +++ b/buffer/src/test/java/io/netty/buffer/EmptyByteBufTest.java, +, +    @Test, +    public void consistentEqualsAndHashCodeWithAbstractBytebuf() {, +        ByteBuf empty = new EmptyByteBuf(UnpooledByteBufAllocator.DEFAULT);, +        ByteBuf emptyAbstract = new UnpooledHeapByteBuf(UnpooledByteBufAllocator.DEFAULT, 0, 0);, +        assertEquals(emptyAbstract, empty);, +        assertEquals(emptyAbstract.hashCode(), empty.hashCode());, +        assertEquals(EmptyByteBuf.EMPTY_BYTE_BUF_HASH_CODE, empty.hashCode());, +        assertTrue(emptyAbstract.release());, +        assertFalse(empty.release());, +    }]