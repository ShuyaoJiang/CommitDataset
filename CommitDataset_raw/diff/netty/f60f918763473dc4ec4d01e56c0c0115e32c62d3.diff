[+++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/NioNioSocketSpdyEchoTest.java, +        return new ChannelBootstrap(), +                .eventLoop(new SelectorEventLoop()), +                .channel(new NioSocketChannel());, +        return new ServerChannelBootstrap(), +                .eventLoop(new SelectorEventLoop(), new SelectorEventLoop()), +                .channel(new NioServerSocketChannel());, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/NioNioSocketSpdyEchoTest.java, +        return new ChannelBootstrap(), +                .eventLoop(new SelectorEventLoop()), +                .channel(new NioSocketChannel());, +        return new ServerChannelBootstrap(), +                .eventLoop(new SelectorEventLoop(), new SelectorEventLoop()), +                .channel(new NioServerSocketChannel());, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/NioOioSocketSpdyEchoTest.java, +import io.netty.channel.ChannelBootstrap;, +import io.netty.channel.ServerChannelBootstrap;, +import io.netty.channel.socket.nio.NioSocketChannel;, +import io.netty.channel.socket.nio.SelectorEventLoop;, +import io.netty.channel.socket.oio.BlockingChannelEventLoop;, +import io.netty.channel.socket.oio.OioServerSocketChannel;, +    protected ChannelBootstrap newClientBootstrap() {, +        return new ChannelBootstrap(), +                .eventLoop(new SelectorEventLoop()), +                .channel(new NioSocketChannel());, +    protected ServerChannelBootstrap newServerBootstrap() {, +        return new ServerChannelBootstrap(), +                .eventLoop(new BlockingChannelEventLoop(), new BlockingChannelEventLoop()), +                .channel(new OioServerSocketChannel());, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/NioNioSocketSpdyEchoTest.java, +        return new ChannelBootstrap(), +                .eventLoop(new SelectorEventLoop()), +                .channel(new NioSocketChannel());, +        return new ServerChannelBootstrap(), +                .eventLoop(new SelectorEventLoop(), new SelectorEventLoop()), +                .channel(new NioServerSocketChannel());, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/NioOioSocketSpdyEchoTest.java, +import io.netty.channel.ChannelBootstrap;, +import io.netty.channel.ServerChannelBootstrap;, +import io.netty.channel.socket.nio.NioSocketChannel;, +import io.netty.channel.socket.nio.SelectorEventLoop;, +import io.netty.channel.socket.oio.BlockingChannelEventLoop;, +import io.netty.channel.socket.oio.OioServerSocketChannel;, +    protected ChannelBootstrap newClientBootstrap() {, +        return new ChannelBootstrap(), +                .eventLoop(new SelectorEventLoop()), +                .channel(new NioSocketChannel());, +    protected ServerChannelBootstrap newServerBootstrap() {, +        return new ServerChannelBootstrap(), +                .eventLoop(new BlockingChannelEventLoop(), new BlockingChannelEventLoop()), +                .channel(new OioServerSocketChannel());, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/OioNioSocketSpdyEchoTest.java, +import io.netty.channel.ChannelBootstrap;, +import io.netty.channel.ServerChannelBootstrap;, +import io.netty.channel.socket.nio.NioServerSocketChannel;, +import io.netty.channel.socket.nio.SelectorEventLoop;, +import io.netty.channel.socket.oio.BlockingChannelEventLoop;, +import io.netty.channel.socket.oio.OioSocketChannel;, +    protected ChannelBootstrap newClientBootstrap() {, +        return new ChannelBootstrap(), +                .eventLoop(new BlockingChannelEventLoop()), +                .channel(new OioSocketChannel());, +    protected ServerChannelBootstrap newServerBootstrap() {, +        return new ServerChannelBootstrap(), +                .eventLoop(new SelectorEventLoop(), new SelectorEventLoop()), +                .channel(new NioServerSocketChannel());, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/NioNioSocketSpdyEchoTest.java, +        return new ChannelBootstrap(), +                .eventLoop(new SelectorEventLoop()), +                .channel(new NioSocketChannel());, +        return new ServerChannelBootstrap(), +                .eventLoop(new SelectorEventLoop(), new SelectorEventLoop()), +                .channel(new NioServerSocketChannel());, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/NioOioSocketSpdyEchoTest.java, +import io.netty.channel.ChannelBootstrap;, +import io.netty.channel.ServerChannelBootstrap;, +import io.netty.channel.socket.nio.NioSocketChannel;, +import io.netty.channel.socket.nio.SelectorEventLoop;, +import io.netty.channel.socket.oio.BlockingChannelEventLoop;, +import io.netty.channel.socket.oio.OioServerSocketChannel;, +    protected ChannelBootstrap newClientBootstrap() {, +        return new ChannelBootstrap(), +                .eventLoop(new SelectorEventLoop()), +                .channel(new NioSocketChannel());, +    protected ServerChannelBootstrap newServerBootstrap() {, +        return new ServerChannelBootstrap(), +                .eventLoop(new BlockingChannelEventLoop(), new BlockingChannelEventLoop()), +                .channel(new OioServerSocketChannel());, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/OioNioSocketSpdyEchoTest.java, +import io.netty.channel.ChannelBootstrap;, +import io.netty.channel.ServerChannelBootstrap;, +import io.netty.channel.socket.nio.NioServerSocketChannel;, +import io.netty.channel.socket.nio.SelectorEventLoop;, +import io.netty.channel.socket.oio.BlockingChannelEventLoop;, +import io.netty.channel.socket.oio.OioSocketChannel;, +    protected ChannelBootstrap newClientBootstrap() {, +        return new ChannelBootstrap(), +                .eventLoop(new BlockingChannelEventLoop()), +                .channel(new OioSocketChannel());, +    protected ServerChannelBootstrap newServerBootstrap() {]