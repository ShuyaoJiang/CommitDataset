[+++ b/example/src/main/java/io/netty/example/sctp/OioSctpEchoClient.java, +             .channel(OioSctpChannel.class), +++ b/example/src/main/java/io/netty/example/sctp/OioSctpEchoClient.java, +             .channel(OioSctpChannel.class), +++ b/example/src/main/java/io/netty/example/sctp/OioSctpEchoServer.java, +             .channel(OioSctpServerChannel.class), +++ b/example/src/main/java/io/netty/example/sctp/OioSctpEchoClient.java, +             .channel(OioSctpChannel.class), +++ b/example/src/main/java/io/netty/example/sctp/OioSctpEchoServer.java, +             .channel(OioSctpServerChannel.class), +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioSctpChannel.java, +++ b/example/src/main/java/io/netty/example/sctp/OioSctpEchoClient.java, +             .channel(OioSctpChannel.class), +++ b/example/src/main/java/io/netty/example/sctp/OioSctpEchoServer.java, +             .channel(OioSctpServerChannel.class), +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioSctpChannel.java, +++ b/transport/src/main/java/io/netty/channel/socket/oio/OioSctpChannel.java, +import io.netty.channel.ChannelFuture;, +import java.net.InetAddress;, +, +    @Override, +    public ChannelFuture bindAddress(InetAddress localAddress) {, +        ChannelFuture future = newFuture();, +        doBindAddress(localAddress, future);, +        return future;, +    }, +, +    void doBindAddress(final InetAddress localAddress, final ChannelFuture future) {, +        if (eventLoop().inEventLoop()) {, +            try {, +                ch.bindAddress(localAddress);, +                future.setSuccess();, +            } catch (Throwable t) {, +                future.setFailure(t);, +                pipeline().fireExceptionCaught(t);, +            }, +        } else {, +            eventLoop().execute(new Runnable() {, +                @Override, +                public void run() {, +                    doBindAddress(localAddress, future);, +                }, +            });, +        }, +    }, +, +    @Override, +    public ChannelFuture unbindAddress(InetAddress localAddress) {, +        ChannelFuture future = newFuture();, +        doUnbindAddress(localAddress, future);, +        return future;, +    }, +, +    void doUnbindAddress(final InetAddress localAddress, final ChannelFuture future) {, +        if (eventLoop().inEventLoop()) {, +            try {, +                ch.unbindAddress(localAddress);, +                future.setSuccess();, +            } catch (Throwable t) {, +                future.setFailure(t);, +                pipeline().fireExceptionCaught(t);, +            }, +        } else {, +            eventLoop().execute(new Runnable() {, +                @Override, +                public void run() {, +                    doUnbindAddress(localAddress, future);, +                }, +            });, +        }, +    }]