[+++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, + *, + * <p>Instances of this class <strong>must not</strong> be released before any {@link ReferenceCountedOpenSslEngine}, + * which depends upon the instance of this class is released. Otherwise if any method of, + * {@link ReferenceCountedOpenSslEngine} is called which uses this class's JNI resources the JVM may crash., +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, + *, + * <p>Instances of this class <strong>must not</strong> be released before any {@link ReferenceCountedOpenSslEngine}, + * which depends upon the instance of this class is released. Otherwise if any method of, + * {@link ReferenceCountedOpenSslEngine} is called which uses this class's JNI resources the JVM may crash., +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java, + *, + * <p>Instances of this class <strong>must not</strong> be released before any {@link ReferenceCountedOpenSslEngine}, + * which depends upon the instance of this class is released. Otherwise if any method of, + * {@link ReferenceCountedOpenSslEngine} is called which uses this class's JNI resources the JVM may crash., +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, + *, + * <p>Instances of this class <strong>must not</strong> be released before any {@link ReferenceCountedOpenSslEngine}, + * which depends upon the instance of this class is released. Otherwise if any method of, + * {@link ReferenceCountedOpenSslEngine} is called which uses this class's JNI resources the JVM may crash., +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java, + *, + * <p>Instances of this class <strong>must not</strong> be released before any {@link ReferenceCountedOpenSslEngine}, + * which depends upon the instance of this class is released. Otherwise if any method of, + * {@link ReferenceCountedOpenSslEngine} is called which uses this class's JNI resources the JVM may crash., +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, + *, + * <p>Instances of this class <strong>must</strong> be released before the {@link ReferenceCountedOpenSslContext}, + * the instance depends upon are released. Otherwise if any method of this class is called which uses the, + * the {@link ReferenceCountedOpenSslContext} JNI resources the JVM may crash., +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, + *, + * <p>Instances of this class <strong>must not</strong> be released before any {@link ReferenceCountedOpenSslEngine}, + * which depends upon the instance of this class is released. Otherwise if any method of, + * {@link ReferenceCountedOpenSslEngine} is called which uses this class's JNI resources the JVM may crash., +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java, + *, + * <p>Instances of this class <strong>must not</strong> be released before any {@link ReferenceCountedOpenSslEngine}, + * which depends upon the instance of this class is released. Otherwise if any method of, + * {@link ReferenceCountedOpenSslEngine} is called which uses this class's JNI resources the JVM may crash., +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, + *, + * <p>Instances of this class <strong>must</strong> be released before the {@link ReferenceCountedOpenSslContext}, + * the instance depends upon are released. Otherwise if any method of this class is called which uses the, + * the {@link ReferenceCountedOpenSslContext} JNI resources the JVM may crash., +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslServerContext.java, + *, + * <p>Instances of this class <strong>must not</strong> be released before any {@link ReferenceCountedOpenSslEngine}, + * which depends upon the instance of this class is released. Otherwise if any method of, + * {@link ReferenceCountedOpenSslEngine} is called which uses this class's JNI resources the JVM may crash., +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, + *, + * <p>Instances of this class <strong>must not</strong> be released before any {@link ReferenceCountedOpenSslEngine}, + * which depends upon the instance of this class is released. Otherwise if any method of, + * {@link ReferenceCountedOpenSslEngine} is called which uses this class's JNI resources the JVM may crash., +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java, + *, + * <p>Instances of this class <strong>must not</strong> be released before any {@link ReferenceCountedOpenSslEngine}, + * which depends upon the instance of this class is released. Otherwise if any method of, + * {@link ReferenceCountedOpenSslEngine} is called which uses this class's JNI resources the JVM may crash., +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, + *, + * <p>Instances of this class <strong>must</strong> be released before the {@link ReferenceCountedOpenSslContext}, + * the instance depends upon are released. Otherwise if any method of this class is called which uses the, + * the {@link ReferenceCountedOpenSslContext} JNI resources the JVM may crash., +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslServerContext.java, + *, + * <p>Instances of this class <strong>must not</strong> be released before any {@link ReferenceCountedOpenSslEngine}, + * which depends upon the instance of this class is released. Otherwise if any method of, + * {@link ReferenceCountedOpenSslEngine} is called which uses this class's JNI resources the JVM may crash., +++ b/handler/src/test/java/io/netty/handler/ssl/SSLEngineTest.java, +        ChannelFuture clientCloseFuture = null;, +        ChannelFuture serverConnectedCloseFuture = null;, +        ChannelFuture serverCloseFuture = null;, +            clientCloseFuture = clientChannel.close();, +            serverConnectedCloseFuture = serverConnectedChannel.close();, +            serverCloseFuture = serverChannel.close();, +        // We must wait for the Channel cleanup to finish. In the case if the ReferenceCountedOpenSslEngineTest, +        // the ReferenceCountedOpenSslEngine depends upon the SslContext and so we must wait the cleanup the, +        // SslContext to avoid JVM core dumps!, +        //, +        // See https://github.com/netty/netty/issues/5692, +        if (clientCloseFuture != null) {, +            clientCloseFuture.sync();, +        }, +        if (serverConnectedCloseFuture != null) {, +            serverConnectedCloseFuture.sync();, +        }, +        if (serverCloseFuture != null) {, +            serverCloseFuture.sync();, +        }]