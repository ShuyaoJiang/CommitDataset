[+++ b/handler/src/main/java/io/netty/handler/traffic/GlobalTrafficShapingHandler.java, +import io.netty.util.Timer;, + * <tt>GlobalTrafficShapingHandler myHandler = new GlobalTrafficShapingHandler(timer);</tt><br><br>, + * timer could be created using <tt>HashedWheelTimer<tt><br>, + * <li>When you shutdown your application, release all the external resources (except the timer internal itself), +        TrafficCounter tc;, +        if (timer != null) {, +            tc = new TrafficCounter(this, timer, "GlobalTC",, +    }, +    public GlobalTrafficShapingHandler(Timer timer, long writeLimit,, +        super(timer, writeLimit, readLimit, checkInterval);, +    public GlobalTrafficShapingHandler(Timer timer, long writeLimit,, +        super(timer, writeLimit, readLimit);, +    public GlobalTrafficShapingHandler(Timer timer, long checkInterval) {, +        super(timer, checkInterval);, +    public GlobalTrafficShapingHandler(Timer timer) {, +        super(timer);, +        createGlobalTrafficCounter();, +    }, +, +            Timer timer, long writeLimit, long readLimit,, +        super(objectSizeEstimator, timer, writeLimit, readLimit,, +            Timer timer, long writeLimit, long readLimit) {, +        super(objectSizeEstimator, timer, writeLimit, readLimit);, +            Timer timer, long checkInterval) {, +        super(objectSizeEstimator, timer, checkInterval);, +            Timer timer) {, +        super(objectSizeEstimator, timer);, +]