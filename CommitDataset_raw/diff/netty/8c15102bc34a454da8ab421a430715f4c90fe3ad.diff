[+++ b/src/main/java/org/jboss/netty/handler/execution/MemoryAwareThreadPoolExecutor.java, +import java.util.concurrent.atomic.AtomicLong;, +    private final ConcurrentMap<Channel, AtomicLong> channelCounters =, +        new ConcurrentHashMap<Channel, AtomicLong>();, +    private final AtomicLong totalCounter = new AtomicLong();, +            int corePoolSize, long maxChannelMemorySize, long maxTotalMemorySize) {, +, +            int corePoolSize, long maxChannelMemorySize, long maxTotalMemorySize,, +            long keepAliveTime, TimeUnit unit) {, +, +            int corePoolSize, long maxChannelMemorySize, long maxTotalMemorySize,, +            long keepAliveTime, TimeUnit unit, ThreadFactory threadFactory) {, +, +            int corePoolSize, long maxChannelMemorySize, long maxTotalMemorySize,, +            long keepAliveTime, TimeUnit unit, ObjectSizeEstimator objectSizeEstimator,, +            ThreadFactory threadFactory) {, +, +    public long getMaxChannelMemorySize() {, +    public void setMaxChannelMemorySize(long maxChannelMemorySize) {, +    public long getMaxTotalMemorySize() {, +    public void setMaxTotalMemorySize(long maxTotalMemorySize) {, +        long maxTotalMemorySize = settings.maxTotalMemorySize;, +        long maxChannelMemorySize = settings.maxChannelMemorySize;, +        long totalCounter = this.totalCounter.addAndGet(increment);, +            long channelCounter = getChannelCounter(channel).addAndGet(increment);, +        long maxTotalMemorySize = settings.maxTotalMemorySize;, +        long maxChannelMemorySize = settings.maxChannelMemorySize;, +        long totalCounter = this.totalCounter.addAndGet(-increment);, +            long channelCounter = getChannelCounter(channel).addAndGet(-increment);, +    private AtomicLong getChannelCounter(Channel channel) {, +        AtomicLong counter = channelCounters.get(channel);, +            counter = new AtomicLong();, +            AtomicLong oldCounter = channelCounters.putIfAbsent(channel, counter);, +        final long maxChannelMemorySize;, +        final long maxTotalMemorySize;, +        Settings(long maxChannelMemorySize, long maxTotalMemorySize) {, +++ b/src/main/java/org/jboss/netty/handler/execution/MemoryAwareThreadPoolExecutor.java, +import java.util.concurrent.atomic.AtomicLong;, +    private final ConcurrentMap<Channel, AtomicLong> channelCounters =, +        new ConcurrentHashMap<Channel, AtomicLong>();, +    private final AtomicLong totalCounter = new AtomicLong();, +            int corePoolSize, long maxChannelMemorySize, long maxTotalMemorySize) {, +, +            int corePoolSize, long maxChannelMemorySize, long maxTotalMemorySize,, +            long keepAliveTime, TimeUnit unit) {, +, +            int corePoolSize, long maxChannelMemorySize, long maxTotalMemorySize,, +            long keepAliveTime, TimeUnit unit, ThreadFactory threadFactory) {, +, +            int corePoolSize, long maxChannelMemorySize, long maxTotalMemorySize,, +            long keepAliveTime, TimeUnit unit, ObjectSizeEstimator objectSizeEstimator,, +            ThreadFactory threadFactory) {, +, +    public long getMaxChannelMemorySize() {, +    public void setMaxChannelMemorySize(long maxChannelMemorySize) {, +    public long getMaxTotalMemorySize() {, +    public void setMaxTotalMemorySize(long maxTotalMemorySize) {, +        long maxTotalMemorySize = settings.maxTotalMemorySize;, +        long maxChannelMemorySize = settings.maxChannelMemorySize;, +        long totalCounter = this.totalCounter.addAndGet(increment);, +            long channelCounter = getChannelCounter(channel).addAndGet(increment);, +        long maxTotalMemorySize = settings.maxTotalMemorySize;, +        long maxChannelMemorySize = settings.maxChannelMemorySize;, +        long totalCounter = this.totalCounter.addAndGet(-increment);, +            long channelCounter = getChannelCounter(channel).addAndGet(-increment);, +    private AtomicLong getChannelCounter(Channel channel) {, +        AtomicLong counter = channelCounters.get(channel);, +            counter = new AtomicLong();, +            AtomicLong oldCounter = channelCounters.putIfAbsent(channel, counter);, +        final long maxChannelMemorySize;, +        final long maxTotalMemorySize;, +        Settings(long maxChannelMemorySize, long maxTotalMemorySize) {, +++ b/src/main/java/org/jboss/netty/handler/execution/OrderedMemoryAwareThreadPoolExecutor.java, +            int corePoolSize, long maxChannelMemorySize, long maxTotalMemorySize) {, +            int corePoolSize, long maxChannelMemorySize, long maxTotalMemorySize,, +            int corePoolSize, long maxChannelMemorySize, long maxTotalMemorySize,, +            int corePoolSize, long maxChannelMemorySize, long maxTotalMemorySize,]