[+++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, +import java.util.Set;, +, +    Set<Integer> getPorts();, +    void setPorts(int... ports);, +    void setPorts(Iterable<Integer> ports);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, +import java.util.Set;, +, +    Set<Integer> getPorts();, +    void setPorts(int... ports);, +    void setPorts(Iterable<Integer> ports);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieDecoder.java, +import org.jboss.netty.util.CaseIgnoringComparator;, +, +                loop:, +                    if (val == null) {, +                        continue;, +                    }, +                    switch (val.length) {, +                    case 1:, +                        break;, +                    case 2:, +                        else if (CookieHeaderNames.PORT.equalsIgnoreCase(name)) {, +                        } else {, +                            break loop;, +                    if (ports != null) {, +                        theCookie.setPorts(ports);, +                    }, +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, +import java.util.Set;, +, +    Set<Integer> getPorts();, +    void setPorts(int... ports);, +    void setPorts(Iterable<Integer> ports);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieDecoder.java, +import org.jboss.netty.util.CaseIgnoringComparator;, +, +                loop:, +                    if (val == null) {, +                        continue;, +                    }, +                    switch (val.length) {, +                    case 1:, +                        break;, +                    case 2:, +                        else if (CookieHeaderNames.PORT.equalsIgnoreCase(name)) {, +                        } else {, +                            break loop;, +                    if (ports != null) {, +                        theCookie.setPorts(ports);, +                    }, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieEncoder.java, +import org.jboss.netty.util.CaseIgnoringComparator;, +, +                if(!cookie.getPorts().isEmpty()) {, +                    sb.append(CookieHeaderNames.PORT);, +                    for (int port: cookie.getPorts()) {, +                        sb.append(port);, +                    sb.setLength(sb.length() - 1); // Remove the trailing comma., +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, +import java.util.Set;, +, +    Set<Integer> getPorts();, +    void setPorts(int... ports);, +    void setPorts(Iterable<Integer> ports);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieDecoder.java, +import org.jboss.netty.util.CaseIgnoringComparator;, +, +                loop:, +                    if (val == null) {, +                        continue;, +                    }, +                    switch (val.length) {, +                    case 1:, +                        break;, +                    case 2:, +                        else if (CookieHeaderNames.PORT.equalsIgnoreCase(name)) {, +                        } else {, +                            break loop;, +                    if (ports != null) {, +                        theCookie.setPorts(ports);, +                    }, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieEncoder.java, +import org.jboss.netty.util.CaseIgnoringComparator;, +, +                if(!cookie.getPorts().isEmpty()) {, +                    sb.append(CookieHeaderNames.PORT);, +                    for (int port: cookie.getPorts()) {, +                        sb.append(port);, +                    sb.setLength(sb.length() - 1); // Remove the trailing comma., +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieHeaderNames.java, +    public static final String PORT = "port";, +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, +import java.util.Set;, +, +    Set<Integer> getPorts();, +    void setPorts(int... ports);, +    void setPorts(Iterable<Integer> ports);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieDecoder.java]