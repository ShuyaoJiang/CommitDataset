[+++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +                    protected ThreadLocalUnsafeDirectByteBuf newObject(Handle<ThreadLocalUnsafeDirectByteBuf> handle) {, +        private final Handle<ThreadLocalUnsafeDirectByteBuf> handle;, +        private ThreadLocalUnsafeDirectByteBuf(Handle<ThreadLocalUnsafeDirectByteBuf> handle) {, +                handle.recycle(this);, +            protected ThreadLocalDirectByteBuf newObject(Handle<ThreadLocalDirectByteBuf> handle) {, +        private final Handle<ThreadLocalDirectByteBuf> handle;, +        private ThreadLocalDirectByteBuf(Handle<ThreadLocalDirectByteBuf> handle) {, +                handle.recycle(this);, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +                    protected ThreadLocalUnsafeDirectByteBuf newObject(Handle<ThreadLocalUnsafeDirectByteBuf> handle) {, +        private final Handle<ThreadLocalUnsafeDirectByteBuf> handle;, +        private ThreadLocalUnsafeDirectByteBuf(Handle<ThreadLocalUnsafeDirectByteBuf> handle) {, +                handle.recycle(this);, +            protected ThreadLocalDirectByteBuf newObject(Handle<ThreadLocalDirectByteBuf> handle) {, +        private final Handle<ThreadLocalDirectByteBuf> handle;, +        private ThreadLocalDirectByteBuf(Handle<ThreadLocalDirectByteBuf> handle) {, +                handle.recycle(this);, +++ b/buffer/src/main/java/io/netty/buffer/PoolThreadCache.java, +            final Handle<Entry<?>> recyclerHandle;, +            Entry(Handle<Entry<?>> recyclerHandle) {, +                recyclerHandle.recycle(this);, +            @SuppressWarnings("unchecked"), +            protected Entry newObject(Handle<Entry> handle) {, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +                    protected ThreadLocalUnsafeDirectByteBuf newObject(Handle<ThreadLocalUnsafeDirectByteBuf> handle) {, +        private final Handle<ThreadLocalUnsafeDirectByteBuf> handle;, +        private ThreadLocalUnsafeDirectByteBuf(Handle<ThreadLocalUnsafeDirectByteBuf> handle) {, +                handle.recycle(this);, +            protected ThreadLocalDirectByteBuf newObject(Handle<ThreadLocalDirectByteBuf> handle) {, +        private final Handle<ThreadLocalDirectByteBuf> handle;, +        private ThreadLocalDirectByteBuf(Handle<ThreadLocalDirectByteBuf> handle) {, +                handle.recycle(this);, +++ b/buffer/src/main/java/io/netty/buffer/PoolThreadCache.java, +            final Handle<Entry<?>> recyclerHandle;, +            Entry(Handle<Entry<?>> recyclerHandle) {, +                recyclerHandle.recycle(this);, +            @SuppressWarnings("unchecked"), +            protected Entry newObject(Handle<Entry> handle) {, +++ b/common/src/main/java/io/netty/util/Recycler.java, +    /**, +     * @deprecated use {@link Handle#recycle(Object)}., +     */, +    @Deprecated, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +                    protected ThreadLocalUnsafeDirectByteBuf newObject(Handle<ThreadLocalUnsafeDirectByteBuf> handle) {, +        private final Handle<ThreadLocalUnsafeDirectByteBuf> handle;, +        private ThreadLocalUnsafeDirectByteBuf(Handle<ThreadLocalUnsafeDirectByteBuf> handle) {, +                handle.recycle(this);, +            protected ThreadLocalDirectByteBuf newObject(Handle<ThreadLocalDirectByteBuf> handle) {, +        private final Handle<ThreadLocalDirectByteBuf> handle;, +        private ThreadLocalDirectByteBuf(Handle<ThreadLocalDirectByteBuf> handle) {, +                handle.recycle(this);, +++ b/buffer/src/main/java/io/netty/buffer/PoolThreadCache.java, +            final Handle<Entry<?>> recyclerHandle;, +            Entry(Handle<Entry<?>> recyclerHandle) {, +                recyclerHandle.recycle(this);, +            @SuppressWarnings("unchecked"), +            protected Entry newObject(Handle<Entry> handle) {, +++ b/common/src/main/java/io/netty/util/Recycler.java, +    /**, +     * @deprecated use {@link Handle#recycle(Object)}., +     */, +    @Deprecated, +++ b/common/src/main/java/io/netty/util/internal/PendingWrite.java, +        handle.recycle(this);, +        return true;, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +                    protected ThreadLocalUnsafeDirectByteBuf newObject(Handle<ThreadLocalUnsafeDirectByteBuf> handle) {, +        private final Handle<ThreadLocalUnsafeDirectByteBuf> handle;, +        private ThreadLocalUnsafeDirectByteBuf(Handle<ThreadLocalUnsafeDirectByteBuf> handle) {, +                handle.recycle(this);, +            protected ThreadLocalDirectByteBuf newObject(Handle<ThreadLocalDirectByteBuf> handle) {, +        private final Handle<ThreadLocalDirectByteBuf> handle;, +        private ThreadLocalDirectByteBuf(Handle<ThreadLocalDirectByteBuf> handle) {, +                handle.recycle(this);, +++ b/buffer/src/main/java/io/netty/buffer/PoolThreadCache.java, +            final Handle<Entry<?>> recyclerHandle;, +            Entry(Handle<Entry<?>> recyclerHandle) {, +                recyclerHandle.recycle(this);, +            @SuppressWarnings("unchecked"), +            protected Entry newObject(Handle<Entry> handle) {, +++ b/common/src/main/java/io/netty/util/Recycler.java, +    /**, +     * @deprecated use {@link Handle#recycle(Object)}., +     */, +    @Deprecated, +++ b/common/src/main/java/io/netty/util/internal/PendingWrite.java, +        handle.recycle(this);, +        return true;, +++ b/common/src/main/java/io/netty/util/internal/RecyclableArrayList.java, +        handle.recycle(this);, +        return true;, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +                    protected ThreadLocalUnsafeDirectByteBuf newObject(Handle<ThreadLocalUnsafeDirectByteBuf> handle) {, +        private final Handle<ThreadLocalUnsafeDirectByteBuf> handle;, +        private ThreadLocalUnsafeDirectByteBuf(Handle<ThreadLocalUnsafeDirectByteBuf> handle) {, +                handle.recycle(this);, +            protected ThreadLocalDirectByteBuf newObject(Handle<ThreadLocalDirectByteBuf> handle) {, +        private final Handle<ThreadLocalDirectByteBuf> handle;]