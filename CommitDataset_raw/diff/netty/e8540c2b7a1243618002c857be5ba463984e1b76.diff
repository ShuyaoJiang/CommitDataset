[+++ b/README.md, +, +## Usage with JDK 9, +, +Netty can be used in modular JDK9 applications as a collection of automatic modules. The module names follow the, +reverse-DNS style, and are derived from subproject names rather than root packages due to historical reasons. They, +are listed below:, +, + * `io.netty.buffer`, + * `io.netty.codec`, + * `io.netty.codec.dns`, + * `io.netty.codec.haproxy`, + * `io.netty.codec.http`, + * `io.netty.codec.http2`, + * `io.netty.codec.memcache`, + * `io.netty.codec.mqtt`, + * `io.netty.codec.redis`, + * `io.netty.codec.smtp`, + * `io.netty.codec.socks`, + * `io.netty.codec.stomp`, + * `io.netty.codec.xml`, + * `io.netty.common`, + * `io.netty.handler`, + * `io.netty.handler.proxy`, + * `io.netty.resolver`, + * `io.netty.resolver.dns`, + * `io.netty.transport`, + * `io.netty.transport.epoll` (`native` omitted - reserved keyword in Java), + * `io.netty.transport.kqueue` (`native` omitted - reserved keyword in Java), + * `io.netty.transport.unix.common` (`native` omitted - reserved keyword in Java), + * `io.netty.transport.rxtx`, + * `io.netty.transport.sctp`, + * `io.netty.transport.udt`, +, +, +, +Automatic modules do not provide any means to declare dependencies, so you need to list each used module separately, +in your `module-info` file., +++ b/README.md, +, +## Usage with JDK 9, +, +Netty can be used in modular JDK9 applications as a collection of automatic modules. The module names follow the, +reverse-DNS style, and are derived from subproject names rather than root packages due to historical reasons. They, +are listed below:, +, + * `io.netty.buffer`, + * `io.netty.codec`, + * `io.netty.codec.dns`, + * `io.netty.codec.haproxy`, + * `io.netty.codec.http`, + * `io.netty.codec.http2`, + * `io.netty.codec.memcache`, + * `io.netty.codec.mqtt`, + * `io.netty.codec.redis`, + * `io.netty.codec.smtp`, + * `io.netty.codec.socks`, + * `io.netty.codec.stomp`, + * `io.netty.codec.xml`, + * `io.netty.common`, + * `io.netty.handler`, + * `io.netty.handler.proxy`, + * `io.netty.resolver`, + * `io.netty.resolver.dns`, + * `io.netty.transport`, + * `io.netty.transport.epoll` (`native` omitted - reserved keyword in Java), + * `io.netty.transport.kqueue` (`native` omitted - reserved keyword in Java), + * `io.netty.transport.unix.common` (`native` omitted - reserved keyword in Java), + * `io.netty.transport.rxtx`, + * `io.netty.transport.sctp`, + * `io.netty.transport.udt`, +, +, +, +Automatic modules do not provide any means to declare dependencies, so you need to list each used module separately, +in your `module-info` file., +++ b/buffer/pom.xml, +  <properties>, +    <javaModuleName>io.netty.buffer</javaModuleName>, +  </properties>, +, +++ b/README.md, +, +## Usage with JDK 9, +, +Netty can be used in modular JDK9 applications as a collection of automatic modules. The module names follow the, +reverse-DNS style, and are derived from subproject names rather than root packages due to historical reasons. They, +are listed below:, +, + * `io.netty.buffer`, + * `io.netty.codec`, + * `io.netty.codec.dns`, + * `io.netty.codec.haproxy`, + * `io.netty.codec.http`, + * `io.netty.codec.http2`, + * `io.netty.codec.memcache`, + * `io.netty.codec.mqtt`, + * `io.netty.codec.redis`, + * `io.netty.codec.smtp`, + * `io.netty.codec.socks`]