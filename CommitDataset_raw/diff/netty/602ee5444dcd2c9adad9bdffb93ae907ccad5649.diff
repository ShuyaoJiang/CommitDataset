[+++ b/common/src/main/java/io/netty/util/AsciiString.java, +        final int subCount = subString.length();, +            return start < length ? start : length;, +        if (subCount > length - start) {, +            return INDEX_NOT_FOUND;, +            return INDEX_NOT_FOUND;, +        final byte firstCharAsByte = c2b0(firstChar);, +        final int len = offset + start + length - subCount;, +        for (int i = start + offset; i <= len; ++i) {, +            if (value[i] == firstCharAsByte) {, +                while (++o2 < subCount && b2c(value[++o1]) == subString.charAt(o2)) {, +                    return i - offset;, +        return INDEX_NOT_FOUND;, +        if (ch > MAX_CHAR_VALUE) {, +            return INDEX_NOT_FOUND;, +        }, +, +        final byte chAsByte = c2b0(ch);, +        final int len = offset + start + length;, +        for (int i = start + offset; i < len; ++i) {, +            if (value[i] == chAsByte) {, +                return i - offset;, +        return INDEX_NOT_FOUND;, +        if (start < 0) {, +            start = 0;, +            return start < length ? start : length;, +        }, +        if (subCount > length - start) {, +            return INDEX_NOT_FOUND;, +            return INDEX_NOT_FOUND;, +        final byte firstCharAsByte = c2b0(firstChar);, +        final int end = offset + start;, +        for (int i = offset + start + length - subCount; i >= end; --i) {, +            if (value[i] == firstCharAsByte) {, +                while (++o2 < subCount && b2c(value[++o1]) == subString.charAt(o2)) {, +                    return i - offset;, +        return INDEX_NOT_FOUND;, +        final byte oldCharAsByte = c2b0(oldChar);, +        final byte newCharAsByte = c2b(newChar);, +        final int len = offset + length;, +        for (int i = offset; i < len; ++i) {, +            if (value[i] == oldCharAsByte) {, +                System.arraycopy(value, offset, buffer, 0, i - offset);, +                buffer[i - offset] = newCharAsByte;, +                ++i;, +                for (; i < len; ++i) {, +                    byte oldValue = value[i];, +                    buffer[i - offset] = oldValue != oldCharAsByte ? oldValue : newCharAsByte;, +        }, +        return this;, +    }, +        for (int i = start < 0 ? 0 : start; i < sz; i++) {, +    private static byte c2b0(char c) {, +        return (byte) c;, +    }, +, +++ b/common/src/main/java/io/netty/util/AsciiString.java, +        final int subCount = subString.length();, +            return start < length ? start : length;, +        if (subCount > length - start) {, +            return INDEX_NOT_FOUND;, +            return INDEX_NOT_FOUND;, +        final byte firstCharAsByte = c2b0(firstChar);, +        final int len = offset + start + length - subCount;, +        for (int i = start + offset; i <= len; ++i) {, +            if (value[i] == firstCharAsByte) {, +                while (++o2 < subCount && b2c(value[++o1]) == subString.charAt(o2)) {, +                    return i - offset;, +        return INDEX_NOT_FOUND;, +        if (ch > MAX_CHAR_VALUE) {, +            return INDEX_NOT_FOUND;, +        }, +, +        final byte chAsByte = c2b0(ch);, +        final int len = offset + start + length;, +        for (int i = start + offset; i < len; ++i) {, +            if (value[i] == chAsByte) {, +                return i - offset;, +        return INDEX_NOT_FOUND;, +        if (start < 0) {, +            start = 0;, +            return start < length ? start : length;, +        }, +        if (subCount > length - start) {, +            return INDEX_NOT_FOUND;, +            return INDEX_NOT_FOUND;, +        final byte firstCharAsByte = c2b0(firstChar);, +        final int end = offset + start;, +        for (int i = offset + start + length - subCount; i >= end; --i) {, +            if (value[i] == firstCharAsByte) {, +                while (++o2 < subCount && b2c(value[++o1]) == subString.charAt(o2)) {, +                    return i - offset;, +        return INDEX_NOT_FOUND;, +        final byte oldCharAsByte = c2b0(oldChar);, +        final byte newCharAsByte = c2b(newChar);, +        final int len = offset + length;, +        for (int i = offset; i < len; ++i) {, +            if (value[i] == oldCharAsByte) {, +                System.arraycopy(value, offset, buffer, 0, i - offset);, +                buffer[i - offset] = newCharAsByte;]