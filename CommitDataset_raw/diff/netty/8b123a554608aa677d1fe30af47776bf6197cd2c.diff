[+++ b/transport/src/test/java/io/netty/channel/AbstractChannelTest.java, +import org.easymock.IAnswer;, +import static org.easymock.EasyMock.*;, +, +        ChannelHandlerInvoker invoker = new DefaultChannelHandlerInvoker(eventLoop);, +        expect(eventLoop.asInvoker()).andReturn(invoker).anyTimes();, +        final EventLoop eventLoop = createNiceMock(EventLoop.class);, +        eventLoop.execute(anyObject(Runnable.class));, +        expectLastCall().andAnswer(new IAnswer<Object>() {, +            @Override, +            public Object answer() throws Throwable {, +                ((Runnable) getCurrentArguments()[0]).run();, +                return null;, +            }, +        }).once();, +        ChannelHandlerInvoker invoker = new DefaultChannelHandlerInvoker(eventLoop);, +        expect(eventLoop.asInvoker()).andReturn(invoker).anyTimes();, +        final TestChannel channel = new TestChannel();, +, +        handler.channelUnregistered(anyObject(ChannelHandlerContext.class));, +        expectLastCall().once(); // Should register twice, +, +, +    private static void registerChannel(EventLoop eventLoop, Channel channel) throws Exception {, +    private static Capture<Throwable> catchHandlerExceptions(ChannelInboundHandler handler) throws Exception {, +    private static void checkForHandlerException(Capture<Throwable> throwable) throws Throwable {]