[+++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksInitRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksInitRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksInitResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksInitRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksInitResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksMessageEncoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksInitRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksInitResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksMessageEncoder.java, +++ /dev/null, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksInitRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksInitResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksMessageEncoder.java, +++ /dev/null, +++ b/example/src/main/java/io/netty/example/discard/DiscardClient.java, +import io.netty.channel.ChannelInitializer;, +import io.netty.channel.ChannelPipeline;, +import io.netty.channel.socket.SocketChannel;, +import io.netty.handler.ssl.SslContext;, +import io.netty.handler.ssl.util.InsecureTrustManagerFactory;, +public final class DiscardClient {, +    static final boolean SSL = System.getProperty("ssl") != null;, +    static final String HOST = System.getProperty("host", "127.0.0.1");, +    static final int PORT = Integer.parseInt(System.getProperty("port", "8009"));, +    static final int SIZE = Integer.parseInt(System.getProperty("size", "256"));, +    public static void main(String[] args) throws Exception {, +        // Configure SSL., +        final SslContext sslCtx;, +        if (SSL) {, +            sslCtx = SslContext.newClientContext(InsecureTrustManagerFactory.INSTANCE);, +        } else {, +            sslCtx = null;, +             .handler(new ChannelInitializer<SocketChannel>() {, +                 @Override, +                 protected void initChannel(SocketChannel ch) throws Exception {, +                     ChannelPipeline p = ch.pipeline();, +                     if (sslCtx != null) {, +                         p.addLast(sslCtx.newHandler(ch.alloc(), HOST, PORT));, +                     }, +                     p.addLast(new DiscardClientHandler());, +                 }, +             });, +            ChannelFuture f = b.connect(HOST, PORT).sync();, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksInitRequestDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksInitResponseDecoder.java, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksMessageEncoder.java, +++ /dev/null, +++ b/example/src/main/java/io/netty/example/discard/DiscardClient.java, +import io.netty.channel.ChannelInitializer;, +import io.netty.channel.ChannelPipeline;, +import io.netty.channel.socket.SocketChannel;, +import io.netty.handler.ssl.SslContext;, +import io.netty.handler.ssl.util.InsecureTrustManagerFactory;, +public final class DiscardClient {, +    static final boolean SSL = System.getProperty("ssl") != null;, +    static final String HOST = System.getProperty("host", "127.0.0.1");, +    static final int PORT = Integer.parseInt(System.getProperty("port", "8009"));, +    static final int SIZE = Integer.parseInt(System.getProperty("size", "256"));, +    public static void main(String[] args) throws Exception {, +        // Configure SSL., +        final SslContext sslCtx;, +        if (SSL) {, +            sslCtx = SslContext.newClientContext(InsecureTrustManagerFactory.INSTANCE);, +        } else {, +            sslCtx = null;, +             .handler(new ChannelInitializer<SocketChannel>() {]