[+++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +            return forEachByteDesc0(writerIndex - 1, readerIndex, processor);, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +            return forEachByteDesc0(writerIndex - 1, readerIndex, processor);, +++ b/buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java, +    @Test, +    public void testForEachByteDesc2() {, +        byte[] expected = {1, 2, 3, 4};, +        ByteBuf buf = newBuffer(expected.length);, +        try {, +            buf.writeBytes(expected);, +            final byte[] bytes = new byte[expected.length];, +            int i = buf.forEachByteDesc(new ByteProcessor() {, +                private int index = bytes.length - 1;, +, +                @Override, +                public boolean process(byte value) throws Exception {, +                    bytes[index--] = value;, +                    return true;, +                }, +            });, +            assertEquals(-1, i);, +            assertArrayEquals(expected, bytes);, +        } finally {, +            buf.release();, +        }, +    }, +, +    @Test, +    public void testForEachByte2() {, +        byte[] expected = {1, 2, 3, 4};, +        ByteBuf buf = newBuffer(expected.length);, +        try {, +            buf.writeBytes(expected);, +            final byte[] bytes = new byte[expected.length];, +            int i = buf.forEachByte(new ByteProcessor() {, +                private int index;, +, +                @Override, +                public boolean process(byte value) throws Exception {, +                    bytes[index++] = value;, +                    return true;, +                }, +            });, +            assertEquals(-1, i);, +            assertArrayEquals(expected, bytes);, +        } finally {, +            buf.release();, +        }, +    }, +, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +            return forEachByteDesc0(writerIndex - 1, readerIndex, processor);, +++ b/buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java, +    @Test, +    public void testForEachByteDesc2() {, +        byte[] expected = {1, 2, 3, 4};, +        ByteBuf buf = newBuffer(expected.length);, +        try {, +            buf.writeBytes(expected);, +            final byte[] bytes = new byte[expected.length];, +            int i = buf.forEachByteDesc(new ByteProcessor() {, +                private int index = bytes.length - 1;, +, +                @Override, +                public boolean process(byte value) throws Exception {, +                    bytes[index--] = value;, +                    return true;, +                }, +            });, +            assertEquals(-1, i);, +            assertArrayEquals(expected, bytes);, +        } finally {, +            buf.release();, +        }, +    }, +, +    @Test, +    public void testForEachByte2() {, +        byte[] expected = {1, 2, 3, 4};, +        ByteBuf buf = newBuffer(expected.length);, +        try {, +            buf.writeBytes(expected);, +            final byte[] bytes = new byte[expected.length];, +            int i = buf.forEachByte(new ByteProcessor() {, +                private int index;, +, +                @Override, +                public boolean process(byte value) throws Exception {, +                    bytes[index++] = value;, +                    return true;, +                }, +            });, +            assertEquals(-1, i);, +            assertArrayEquals(expected, bytes);, +        } finally {, +            buf.release();, +        }, +    }, +]