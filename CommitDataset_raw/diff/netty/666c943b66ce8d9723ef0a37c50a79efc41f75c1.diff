[+++ b/src/main/java/org/jboss/netty/channel/ChannelFutureListener.java, +     * A {@link ChannelFutureListener} that closes the {@link Channel} when the, +     * operation ended up with a failure or cancellation rather than a success., +     */, +    static ChannelFutureListener CLOSE_ON_FAILURE = new ChannelFutureListener() {, +        public void operationComplete(ChannelFuture future) {, +            if (!future.isSuccess()) {, +                future.getChannel().close();, +            }, +        }, +    };, +, +    /**, +++ b/src/main/java/org/jboss/netty/channel/ChannelFutureListener.java, +     * A {@link ChannelFutureListener} that closes the {@link Channel} when the, +     * operation ended up with a failure or cancellation rather than a success., +     */, +    static ChannelFutureListener CLOSE_ON_FAILURE = new ChannelFutureListener() {, +        public void operationComplete(ChannelFuture future) {, +            if (!future.isSuccess()) {, +                future.getChannel().close();, +            }, +        }, +    };, +, +    /**, +++ b/src/main/java/org/jboss/netty/channel/socket/http/HttpTunnelingClientSocketPipelineSink.java, +    static final String LINE_TERMINATOR = "\r\n";, +        future.addListener(ChannelFutureListener.CLOSE_ON_FAILURE);, +++ b/src/main/java/org/jboss/netty/channel/ChannelFutureListener.java, +     * A {@link ChannelFutureListener} that closes the {@link Channel} when the, +     * operation ended up with a failure or cancellation rather than a success., +     */, +    static ChannelFutureListener CLOSE_ON_FAILURE = new ChannelFutureListener() {, +        public void operationComplete(ChannelFuture future) {, +            if (!future.isSuccess()) {, +                future.getChannel().close();, +            }, +        }, +    };, +, +    /**, +++ b/src/main/java/org/jboss/netty/channel/socket/http/HttpTunnelingClientSocketPipelineSink.java, +    static final String LINE_TERMINATOR = "\r\n";, +        future.addListener(ChannelFutureListener.CLOSE_ON_FAILURE);, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketPipelineSink.java, +                future.addListener(ChannelFutureListener.CLOSE_ON_FAILURE);, +++ b/src/main/java/org/jboss/netty/channel/ChannelFutureListener.java, +     * A {@link ChannelFutureListener} that closes the {@link Channel} when the, +     * operation ended up with a failure or cancellation rather than a success., +     */, +    static ChannelFutureListener CLOSE_ON_FAILURE = new ChannelFutureListener() {, +        public void operationComplete(ChannelFuture future) {, +            if (!future.isSuccess()) {, +                future.getChannel().close();, +            }, +        }, +    };, +, +    /**, +++ b/src/main/java/org/jboss/netty/channel/socket/http/HttpTunnelingClientSocketPipelineSink.java, +    static final String LINE_TERMINATOR = "\r\n";, +        future.addListener(ChannelFutureListener.CLOSE_ON_FAILURE);, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketPipelineSink.java, +                future.addListener(ChannelFutureListener.CLOSE_ON_FAILURE);, +++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioClientSocketPipelineSink.java, +        future.addListener(ChannelFutureListener.CLOSE_ON_FAILURE);, +++ b/src/main/java/org/jboss/netty/channel/ChannelFutureListener.java, +     * A {@link ChannelFutureListener} that closes the {@link Channel} when the, +     * operation ended up with a failure or cancellation rather than a success., +     */, +    static ChannelFutureListener CLOSE_ON_FAILURE = new ChannelFutureListener() {, +        public void operationComplete(ChannelFuture future) {, +            if (!future.isSuccess()) {, +                future.getChannel().close();, +            }, +        }, +    };, +, +    /**, +++ b/src/main/java/org/jboss/netty/channel/socket/http/HttpTunnelingClientSocketPipelineSink.java, +    static final String LINE_TERMINATOR = "\r\n";, +        future.addListener(ChannelFutureListener.CLOSE_ON_FAILURE);, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketPipelineSink.java, +                future.addListener(ChannelFutureListener.CLOSE_ON_FAILURE);, +++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioClientSocketPipelineSink.java, +        future.addListener(ChannelFutureListener.CLOSE_ON_FAILURE);, +++ b/src/main/java/org/jboss/netty/channel/xnio/XnioClientChannelSink.java, +                                    fc.addNotifier(new FutureConnectionNotifier(cc), future);, +, +    @SuppressWarnings("unchecked"), +    private static final class FutureConnectionNotifier implements Notifier {, +    , +        private final XnioClientChannel cc;, +    , +        FutureConnectionNotifier(XnioClientChannel cc) {, +            this.cc = cc;, +        }, +    , +        public void notify(IoFuture future, Object attachment) {]