[+++ b/codec/src/main/java/io/netty/handler/codec/marshalling/ContextBoundUnmarshallerProvider.java, +            ContextBoundUnmarshallerProvider.class.getName() + ".unmarshaller");, +++ b/codec/src/main/java/io/netty/handler/codec/marshalling/ContextBoundUnmarshallerProvider.java, +            ContextBoundUnmarshallerProvider.class.getName() + ".unmarshaller");, +++ b/codec/src/main/java/io/netty/handler/codec/serialization/CompatibleObjectEncoder.java, +            new AttributeKey<ObjectOutputStream>(CompatibleObjectEncoder.class.getName() + ".oos");, +++ b/codec/src/main/java/io/netty/handler/codec/marshalling/ContextBoundUnmarshallerProvider.java, +            ContextBoundUnmarshallerProvider.class.getName() + ".unmarshaller");, +++ b/codec/src/main/java/io/netty/handler/codec/serialization/CompatibleObjectEncoder.java, +            new AttributeKey<ObjectOutputStream>(CompatibleObjectEncoder.class.getName() + ".oos");, +++ b/common/src/main/java/io/netty/util/AttributeKey.java, +public final class AttributeKey<T> extends UniqueName {, +    public AttributeKey(String name) {, +        super(names, name);, +++ b/codec/src/main/java/io/netty/handler/codec/marshalling/ContextBoundUnmarshallerProvider.java, +            ContextBoundUnmarshallerProvider.class.getName() + ".unmarshaller");, +++ b/codec/src/main/java/io/netty/handler/codec/serialization/CompatibleObjectEncoder.java, +            new AttributeKey<ObjectOutputStream>(CompatibleObjectEncoder.class.getName() + ".oos");, +++ b/common/src/main/java/io/netty/util/AttributeKey.java, +public final class AttributeKey<T> extends UniqueName {, +    public AttributeKey(String name) {, +        super(names, name);, +++ /dev/null, +++ b/codec/src/main/java/io/netty/handler/codec/marshalling/ContextBoundUnmarshallerProvider.java, +            ContextBoundUnmarshallerProvider.class.getName() + ".unmarshaller");, +++ b/codec/src/main/java/io/netty/handler/codec/serialization/CompatibleObjectEncoder.java, +            new AttributeKey<ObjectOutputStream>(CompatibleObjectEncoder.class.getName() + ".oos");, +++ b/common/src/main/java/io/netty/util/AttributeKey.java, +public final class AttributeKey<T> extends UniqueName {, +    public AttributeKey(String name) {, +        super(names, name);, +++ /dev/null, +++ b/transport/src/main/java/io/netty/channel/ChannelOption.java, +import io.netty.util.UniqueName;, +public class ChannelOption<T> extends UniqueName {, +            new ChannelOption<Integer>("CONNECT_TIMEOUT_MILLIS");, +            new ChannelOption<Integer>("WRITE_SPIN_COUNT");, +            new ChannelOption<Boolean>("SO_BROADCAST");, +            new ChannelOption<Boolean>("SO_KEEPALIVE");, +            new ChannelOption<Integer>("SO_SNDBUF");, +            new ChannelOption<Integer>("SO_RCVBUF");, +            new ChannelOption<Boolean>("SO_REUSEADDR");, +            new ChannelOption<Integer>("SO_LINGER");, +            new ChannelOption<Integer>("SO_BACKLOG");, +            new ChannelOption<Integer>("IP_TOS");, +            new ChannelOption<InetAddress>("IP_MULTICAST_ADDR");, +            new ChannelOption<NetworkInterface>("IP_MULTICAST_IF");, +            new ChannelOption<Integer>("IP_MULTICAST_TTL");, +            new ChannelOption<Boolean>("IP_MULTICAST_LOOP_DISABLED");, +            new ChannelOption<Integer>("UDP_RECEIVE_PACKET_SIZE");, +            new ChannelOption<Boolean>("TCP_NODELAY");, +            new ChannelOption<Boolean>("SCTP_DISABLE_FRAGMENTS");, +            new ChannelOption<Boolean>("SCTP_EXPLICIT_COMPLETE");, +            new ChannelOption<Integer>("SCTP_FRAGMENT_INTERLEAVE");, +            new ChannelOption<List<Integer>>("SCTP_INIT_MAXSTREAMS") {, +            new ChannelOption<Boolean>("SCTP_NODELAY");, +            new ChannelOption<SocketAddress>("SCTP_PRIMARY_ADDR");, +            new ChannelOption<SocketAddress>("SCTP_SET_PEER_PRIMARY_ADDR");, +    public ChannelOption(String name) {, +        super(names, name);]