[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +        if (contentEncoding != null) {, +            // Content-Encoding was set, either as something specific or as the IDENTITY encoding, +            // Therefore, we should NOT encode here, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +        if (contentEncoding != null) {, +            // Content-Encoding was set, either as something specific or as the IDENTITY encoding, +            // Therefore, we should NOT encode here, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpContentCompressorTest.java, +    @Test, +    public void testCustomEncoding() throws Exception {, +        EmbeddedChannel ch = new EmbeddedChannel(new HttpContentCompressor());, +        assertTrue(ch.writeInbound(newRequest()));, +, +        FullHttpResponse res = new DefaultFullHttpResponse(, +                HttpVersion.HTTP_1_1, HttpResponseStatus.OK,, +                Unpooled.copiedBuffer("Hello, World", CharsetUtil.US_ASCII));, +        int len = res.content().readableBytes();, +        res.headers().set(HttpHeaderNames.CONTENT_LENGTH, len);, +        res.headers().set(HttpHeaderNames.CONTENT_ENCODING, "ascii");, +        assertTrue(ch.writeOutbound(res));, +, +        FullHttpResponse response = (FullHttpResponse) ch.readOutbound();, +        assertEquals(String.valueOf(len), response.headers().get(HttpHeaderNames.CONTENT_LENGTH));, +        assertEquals("ascii", response.headers().get(HttpHeaderNames.CONTENT_ENCODING));, +        assertEquals("Hello, World", response.content().toString(CharsetUtil.US_ASCII));, +        response.release();, +, +        assertTrue(ch.finishAndReleaseAll());, +    }, +]