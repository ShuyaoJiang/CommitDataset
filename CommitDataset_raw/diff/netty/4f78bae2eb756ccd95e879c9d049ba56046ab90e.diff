[+++ b/codec/src/main/java/io/netty/handler/codec/DatagramPacketDecoder.java, +, +    @Override, +    public boolean isSharable() {, +        return decoder.isSharable();, +    }, +++ b/codec/src/main/java/io/netty/handler/codec/DatagramPacketDecoder.java, +, +    @Override, +    public boolean isSharable() {, +        return decoder.isSharable();, +    }, +++ b/codec/src/main/java/io/netty/handler/codec/DatagramPacketEncoder.java, +, +    @Override, +    public boolean isSharable() {, +        return encoder.isSharable();, +    }, +++ b/codec/src/main/java/io/netty/handler/codec/DatagramPacketDecoder.java, +, +    @Override, +    public boolean isSharable() {, +        return decoder.isSharable();, +    }, +++ b/codec/src/main/java/io/netty/handler/codec/DatagramPacketEncoder.java, +, +    @Override, +    public boolean isSharable() {, +        return encoder.isSharable();, +    }, +++ b/codec/src/test/java/io/netty/handler/codec/DatagramPacketDecoderTest.java, +import io.netty.channel.ChannelHandlerContext;, +import java.util.List;, +, +    @Test, +    public void testIsNotSharable() {, +        testIsSharable(false);, +    }, +, +    @Test, +    public void testIsSharable() {, +        testIsSharable(true);, +    }, +, +    private static void testIsSharable(boolean sharable) {, +        MessageToMessageDecoder<ByteBuf> wrapped = new TestMessageToMessageDecoder(sharable);, +        DatagramPacketDecoder decoder = new DatagramPacketDecoder(wrapped);, +        assertEquals(wrapped.isSharable(), decoder.isSharable());, +    }, +, +    private static final class TestMessageToMessageDecoder extends MessageToMessageDecoder<ByteBuf> {, +, +        private final boolean sharable;, +, +        TestMessageToMessageDecoder(boolean sharable) {, +            this.sharable = sharable;, +        }, +, +        @Override, +        protected void decode(ChannelHandlerContext ctx, ByteBuf msg, List<Object> out) throws Exception {, +            // NOOP, +        }, +, +        @Override, +        public boolean isSharable() {, +            return sharable;, +        }, +    }, +++ b/codec/src/main/java/io/netty/handler/codec/DatagramPacketDecoder.java, +, +    @Override, +    public boolean isSharable() {, +        return decoder.isSharable();, +    }, +++ b/codec/src/main/java/io/netty/handler/codec/DatagramPacketEncoder.java, +, +    @Override, +    public boolean isSharable() {, +        return encoder.isSharable();, +    }, +++ b/codec/src/test/java/io/netty/handler/codec/DatagramPacketDecoderTest.java, +import io.netty.channel.ChannelHandlerContext;, +import java.util.List;, +, +    @Test, +    public void testIsNotSharable() {, +        testIsSharable(false);, +    }, +, +    @Test, +    public void testIsSharable() {, +        testIsSharable(true);, +    }, +, +    private static void testIsSharable(boolean sharable) {, +        MessageToMessageDecoder<ByteBuf> wrapped = new TestMessageToMessageDecoder(sharable);, +        DatagramPacketDecoder decoder = new DatagramPacketDecoder(wrapped);, +        assertEquals(wrapped.isSharable(), decoder.isSharable());, +    }, +]