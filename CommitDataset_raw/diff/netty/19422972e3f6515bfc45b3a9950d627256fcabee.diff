[+++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +import io.netty.util.internal.PlatformDependent;, +        String allocType = SystemPropertyUtil.get(, +                "io.netty.allocator.type", PlatformDependent.isAndroid() ? "unpooled" : "pooled");, +        allocType = allocType.toLowerCase(Locale.US).trim();, +, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +import io.netty.util.internal.PlatformDependent;, +        String allocType = SystemPropertyUtil.get(, +                "io.netty.allocator.type", PlatformDependent.isAndroid() ? "unpooled" : "pooled");, +        allocType = allocType.toLowerCase(Locale.US).trim();, +, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +import io.netty.util.internal.PlatformDependent;, +        String allocType = SystemPropertyUtil.get(, +                "io.netty.allocator.type", PlatformDependent.isAndroid() ? "unpooled" : "pooled");, +        allocType = allocType.toLowerCase(Locale.US).trim();, +, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent0.java, +        boolean directBufferFreeable = false;, +            Class<?> cls = Class.forName("sun.nio.ch.DirectBuffer", false, PlatformDependent0.class.getClassLoader());, +            Method method = cls.getMethod("cleaner");, +            if ("sun.misc.Cleaner".equals(method.getReturnType().getName())) {, +                directBufferFreeable = true;, +        } catch (Throwable t) {, +            // We don't have sun.nio.ch.DirectBuffer.cleaner()., +        }, +        logger.debug("sun.nio.ch.DirectBuffer.cleaner(): {}", directBufferFreeable? "available" : "unavailable");, +                // A heap buffer must have 0 address., +                ByteBuffer direct = ByteBuffer.allocateDirect(1);, +                    // A direct buffer must have non-zero address., +            // Failed to access the address field., +        if (addressField != null && directBufferFreeable) {, +                // Unsafe.copyMemory(Object, long, Object, long, long) unavailable., +]