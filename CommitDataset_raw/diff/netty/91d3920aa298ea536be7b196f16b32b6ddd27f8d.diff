[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java, +        if (line.length() == 0 && trailer == null) {, +            // We have received the empty line which signals the trailer is complete and did not parse any trailers, +            // before. Just return an empty last content to reduce allocations., +            return LastHttpContent.EMPTY_LAST_CONTENT;, +        }, +, +        CharSequence lastHeader = null;, +        while (line.length() > 0) {, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java, +        if (line.length() == 0 && trailer == null) {, +            // We have received the empty line which signals the trailer is complete and did not parse any trailers, +            // before. Just return an empty last content to reduce allocations., +            return LastHttpContent.EMPTY_LAST_CONTENT;, +        }, +, +        CharSequence lastHeader = null;, +        while (line.length() > 0) {, +        }, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpResponseDecoderTest.java, +, +    @Test, +    public void testTrailerWithEmptyLineInSeparateBuffer() {, +        HttpResponseDecoder decoder = new HttpResponseDecoder();, +        EmbeddedChannel channel = new EmbeddedChannel(decoder);, +, +        String headers = "HTTP/1.1 200 OK\r\n", +                + "Transfer-Encoding: chunked\r\n", +                + "Trailer: My-Trailer\r\n";, +        assertFalse(channel.writeInbound(Unpooled.copiedBuffer(headers.getBytes(CharsetUtil.US_ASCII))));, +        assertTrue(channel.writeInbound(Unpooled.copiedBuffer("\r\n".getBytes(CharsetUtil.US_ASCII))));, +, +        assertTrue(channel.writeInbound(Unpooled.copiedBuffer("0\r\n", CharsetUtil.US_ASCII)));, +        assertTrue(channel.writeInbound(Unpooled.copiedBuffer("My-Trailer: 42\r\n", CharsetUtil.US_ASCII)));, +        assertTrue(channel.writeInbound(Unpooled.copiedBuffer("\r\n", CharsetUtil.US_ASCII)));, +, +        HttpResponse response = channel.readInbound();, +        assertEquals(2, response.headers().size());, +        assertEquals("chunked", response.headers().get(HttpHeaderNames.TRANSFER_ENCODING));, +        assertEquals("My-Trailer", response.headers().get(HttpHeaderNames.TRAILER));, +, +        LastHttpContent lastContent = channel.readInbound();, +        assertEquals(1, lastContent.trailingHeaders().size());, +        assertEquals("42", lastContent.trailingHeaders().get("My-Trailer"));, +        assertEquals(0, lastContent.content().readableBytes());, +        lastContent.release();, +, +        assertFalse(channel.finish());, +    }]