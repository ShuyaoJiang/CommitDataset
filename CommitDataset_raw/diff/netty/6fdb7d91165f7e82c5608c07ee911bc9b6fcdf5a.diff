[+++ b/.gitignore, +/src/main/java/io/netty/util/Version.java, +++ b/.gitignore, +/src/main/java/io/netty/util/Version.java, +++ b/pom.xml, +		<echo message="// DO NOT MODIFY - WILL BE OVERWRITTEN DURING THE BUILD PROCESS${line.separator}package io.netty.util;${line.separator}/**${line.separator} * Provides the version information of Netty.${line.separator} * @apiviz.landmark${line.separator} */${line.separator}public final class Version {${line.separator} /** The version identifier. */${line.separator} public static final String ID = &quot;${project.version}-${buildNumber}&quot;;${line.separator} /** Prints out the version identifier to stdout. */${line.separator} public static void main(String[] args) { System.out.println(ID); }${line.separator} private Version() { super(); }${line.separator}}${line.separator}" file="${basedir}/src/main/java/io/netty/util/Version.java" />, +++ b/.gitignore, +/src/main/java/io/netty/util/Version.java, +++ b/pom.xml, +		<echo message="// DO NOT MODIFY - WILL BE OVERWRITTEN DURING THE BUILD PROCESS${line.separator}package io.netty.util;${line.separator}/**${line.separator} * Provides the version information of Netty.${line.separator} * @apiviz.landmark${line.separator} */${line.separator}public final class Version {${line.separator} /** The version identifier. */${line.separator} public static final String ID = &quot;${project.version}-${buildNumber}&quot;;${line.separator} /** Prints out the version identifier to stdout. */${line.separator} public static void main(String[] args) { System.out.println(ID); }${line.separator} private Version() { super(); }${line.separator}}${line.separator}" file="${basedir}/src/main/java/io/netty/util/Version.java" />, +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, +package io.netty.bootstrap;, +import static io.netty.channel.Channels.*;, +import io.netty.channel.Channel;, +import io.netty.channel.ChannelFactory;, +import io.netty.channel.ChannelHandler;, +import io.netty.channel.ChannelPipeline;, +import io.netty.channel.ChannelPipelineFactory;, +import io.netty.util.ExternalResourceReleasable;, + * @apiviz.uses io.netty.channel.ChannelFactory, +++ b/.gitignore, +/src/main/java/io/netty/util/Version.java, +++ b/pom.xml, +		<echo message="// DO NOT MODIFY - WILL BE OVERWRITTEN DURING THE BUILD PROCESS${line.separator}package io.netty.util;${line.separator}/**${line.separator} * Provides the version information of Netty.${line.separator} * @apiviz.landmark${line.separator} */${line.separator}public final class Version {${line.separator} /** The version identifier. */${line.separator} public static final String ID = &quot;${project.version}-${buildNumber}&quot;;${line.separator} /** Prints out the version identifier to stdout. */${line.separator} public static void main(String[] args) { System.out.println(ID); }${line.separator} private Version() { super(); }${line.separator}}${line.separator}" file="${basedir}/src/main/java/io/netty/util/Version.java" />, +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, +package io.netty.bootstrap;, +import static io.netty.channel.Channels.*;, +import io.netty.channel.Channel;, +import io.netty.channel.ChannelFactory;, +import io.netty.channel.ChannelHandler;, +import io.netty.channel.ChannelPipeline;, +import io.netty.channel.ChannelPipelineFactory;, +import io.netty.util.ExternalResourceReleasable;, + * @apiviz.uses io.netty.channel.ChannelFactory, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +package io.netty.bootstrap;, +import io.netty.channel.Channel;, +import io.netty.channel.ChannelConfig;, +import io.netty.channel.ChannelFactory;, +import io.netty.channel.ChannelFuture;, +import io.netty.channel.ChannelHandler;, +import io.netty.channel.ChannelPipeline;, +import io.netty.channel.ChannelPipelineException;, +import io.netty.channel.ChannelPipelineFactory;, +import io.netty.channel.Channels;, +++ b/.gitignore, +/src/main/java/io/netty/util/Version.java, +++ b/pom.xml, +		<echo message="// DO NOT MODIFY - WILL BE OVERWRITTEN DURING THE BUILD PROCESS${line.separator}package io.netty.util;${line.separator}/**${line.separator} * Provides the version information of Netty.${line.separator} * @apiviz.landmark${line.separator} */${line.separator}public final class Version {${line.separator} /** The version identifier. */${line.separator} public static final String ID = &quot;${project.version}-${buildNumber}&quot;;${line.separator} /** Prints out the version identifier to stdout. */${line.separator} public static void main(String[] args) { System.out.println(ID); }${line.separator} private Version() { super(); }${line.separator}}${line.separator}" file="${basedir}/src/main/java/io/netty/util/Version.java" />, +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, +package io.netty.bootstrap;, +import static io.netty.channel.Channels.*;, +import io.netty.channel.Channel;, +import io.netty.channel.ChannelFactory;, +import io.netty.channel.ChannelHandler;, +import io.netty.channel.ChannelPipeline;, +import io.netty.channel.ChannelPipelineFactory;, +import io.netty.util.ExternalResourceReleasable;, + * @apiviz.uses io.netty.channel.ChannelFactory, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +package io.netty.bootstrap;, +import io.netty.channel.Channel;, +import io.netty.channel.ChannelConfig;, +import io.netty.channel.ChannelFactory;, +import io.netty.channel.ChannelFuture;, +import io.netty.channel.ChannelHandler;, +import io.netty.channel.ChannelPipeline;, +import io.netty.channel.ChannelPipelineException;, +import io.netty.channel.ChannelPipelineFactory;, +import io.netty.channel.Channels;, +++ b/src/main/java/org/jboss/netty/bootstrap/ConnectionlessBootstrap.java, +package io.netty.bootstrap;, +import io.netty.channel.Channel;, +import io.netty.channel.ChannelConfig;, +import io.netty.channel.ChannelException;, +import io.netty.channel.ChannelFactory;, +import io.netty.channel.ChannelFuture;, +import io.netty.channel.ChannelHandler;, +import io.netty.channel.ChannelPipeline;, +import io.netty.channel.ChannelPipelineException;, +import io.netty.channel.ChannelPipelineFactory;, +import io.netty.channel.Channels;, +++ b/.gitignore, +/src/main/java/io/netty/util/Version.java, +++ b/pom.xml, +		<echo message="// DO NOT MODIFY - WILL BE OVERWRITTEN DURING THE BUILD PROCESS${line.separator}package io.netty.util;${line.separator}/**${line.separator} * Provides the version information of Netty.${line.separator} * @apiviz.landmark${line.separator} */${line.separator}public final class Version {${line.separator} /** The version identifier. */${line.separator} public static final String ID = &quot;${project.version}-${buildNumber}&quot;;${line.separator} /** Prints out the version identifier to stdout. */${line.separator} public static void main(String[] args) { System.out.println(ID); }${line.separator} private Version() { super(); }${line.separator}}${line.separator}" file="${basedir}/src/main/java/io/netty/util/Version.java" />, +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, +package io.netty.bootstrap;, +import static io.netty.channel.Channels.*;, +import io.netty.channel.Channel;, +import io.netty.channel.ChannelFactory;, +import io.netty.channel.ChannelHandler;, +import io.netty.channel.ChannelPipeline;, +import io.netty.channel.ChannelPipelineFactory;, +import io.netty.util.ExternalResourceReleasable;, + * @apiviz.uses io.netty.channel.ChannelFactory, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +package io.netty.bootstrap;, +import io.netty.channel.Channel;, +import io.netty.channel.ChannelConfig;]