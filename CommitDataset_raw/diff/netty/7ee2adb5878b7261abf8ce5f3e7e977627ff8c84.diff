[+++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +            if (out.drainToNextInbound(ctx)) {, +            if (out.drainToNextInbound(ctx)) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +            if (out.drainToNextInbound(ctx)) {, +            if (out.drainToNextInbound(ctx)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +            out.drainToNextInbound(ctx);, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +            if (out.drainToNextInbound(ctx)) {, +            if (out.drainToNextInbound(ctx)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +            out.drainToNextInbound(ctx);, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageEncoder.java, +            out.drainToNextOutbound(ctx);, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +            if (out.drainToNextInbound(ctx)) {, +            if (out.drainToNextInbound(ctx)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +            out.drainToNextInbound(ctx);, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageEncoder.java, +            out.drainToNextOutbound(ctx);, +++ b/codec/src/main/java/io/netty/handler/codec/OutputMessageBuf.java, +import io.netty.buffer.BufType;, +import io.netty.buffer.MessageBuf;, +import io.netty.channel.ChannelHandlerContext;, +    private int nonByteBufs;, +        if (added) {, +            if (e instanceof ByteBuf) {, +            } else {, +                nonByteBufs++;, +            }, +        if (removed) {, +            if (o instanceof ByteBuf) {, +            } else {, +                nonByteBufs--;, +            }, +        if (o == null) {, +            return o;, +        }, +        } else {, +            nonByteBufs--;, +        nonByteBufs = 0;, +    private boolean containsByteBuf() {, +, +    private boolean containsNonByteBuf() {, +       return nonByteBufs > 0;, +    }, +, +    public boolean drainToNextInbound(ChannelHandlerContext ctx) {, +        if (containsByteBuf() && ctx.nextInboundBufferType() == BufType.BYTE) {, +            ByteBuf buf = ctx.nextInboundByteBuffer();, +            boolean drained = false;, +            if (!containsNonByteBuf()) {, +                for (;;) {, +                    Object o = poll();, +                    if (o == null) {, +                        break;, +                    }, +                    buf.writeBytes((ByteBuf) o);, +                    drained = true;, +                }, +            } else {, +                // mixed case, +                MessageBuf<Object> msgBuf = ctx.nextInboundMessageBuffer();, +                for (;;) {, +                    Object o = poll();, +                    if (o == null) {, +                        break;, +                    }, +                    if (o instanceof ByteBuf) {, +                        buf.writeBytes((ByteBuf) o);, +                    } else {, +                        msgBuf.add(o);, +                    }, +                    drained = true;, +                }, +            }, +            return drained;, +        } else {, +            return drainTo(ctx.nextInboundMessageBuffer()) > 0;, +        }, +    }, +, +    public boolean drainToNextOutbound(ChannelHandlerContext ctx) {, +        if (containsByteBuf() && ctx.nextOutboundBufferType() == BufType.BYTE) {, +            ByteBuf buf = ctx.nextOutboundByteBuffer();, +            boolean drained = false;, +            if (!containsNonByteBuf()) {, +                for (;;) {, +                    Object o = poll();, +                    if (o == null) {, +                        break;, +                    }, +                    buf.writeBytes((ByteBuf) o);, +                    drained = true;, +                }, +            } else {, +                // mixed case, +                MessageBuf<Object> msgBuf = ctx.nextOutboundMessageBuffer();]