[+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollChannelOutboundBuffer.java, +                // Just break out of the loop as we can still use gathering writes for the buffers that we, +                // found by now., +                break;, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollChannelOutboundBuffer.java, +                // Just break out of the loop as we can still use gathering writes for the buffers that we, +                // found by now., +                break;, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannel.java, +            return writeBytesMultiple(in, 1, nioBuffers, nioBuffers.length, readableBytes);, +            EpollChannelOutboundBuffer in, int msgCount, AddressEntry[] addresses,, +            int addressCnt, int expectedWrittenBytes) throws IOException {, +    private static void updateOutboundBuffer(ChannelOutboundBuffer in, long writtenBytes, int msgCount,, +                    int addressesCnt = epollIn.addressCount();, +                    if (addressesCnt > 1) {, +                        if (!writeBytesMultiple(epollIn, msgCount, addresses, addressesCnt, epollIn.addressCount())) {, +                    int nioBufferCnt = nioIn.nioBufferCount();, +                    if (nioBufferCnt > 1) {, +                        if (!writeBytesMultiple(nioIn, msgCount, nioBuffers, nioBufferCnt, nioIn.nioBufferSize())) {, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollChannelOutboundBuffer.java, +                // Just break out of the loop as we can still use gathering writes for the buffers that we, +                // found by now., +                break;, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannel.java, +            return writeBytesMultiple(in, 1, nioBuffers, nioBuffers.length, readableBytes);, +            EpollChannelOutboundBuffer in, int msgCount, AddressEntry[] addresses,, +            int addressCnt, int expectedWrittenBytes) throws IOException {, +    private static void updateOutboundBuffer(ChannelOutboundBuffer in, long writtenBytes, int msgCount,, +                    int addressesCnt = epollIn.addressCount();, +                    if (addressesCnt > 1) {, +                        if (!writeBytesMultiple(epollIn, msgCount, addresses, addressesCnt, epollIn.addressCount())) {, +                    int nioBufferCnt = nioIn.nioBufferCount();, +                    if (nioBufferCnt > 1) {, +                        if (!writeBytesMultiple(nioIn, msgCount, nioBuffers, nioBufferCnt, nioIn.nioBufferSize())) {, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannel.java, +            NioSocketChannelOutboundBuffer nioIn = (NioSocketChannelOutboundBuffer) in;, +            int nioBufferCnt = nioIn.nioBufferCount();, +            if (nioBufferCnt <= 1) {, +                // We have something else beside ByteBuffers to write so fallback to normal writes., +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollChannelOutboundBuffer.java, +                // Just break out of the loop as we can still use gathering writes for the buffers that we, +                // found by now., +                break;, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannel.java, +            return writeBytesMultiple(in, 1, nioBuffers, nioBuffers.length, readableBytes);, +            EpollChannelOutboundBuffer in, int msgCount, AddressEntry[] addresses,, +            int addressCnt, int expectedWrittenBytes) throws IOException {, +    private static void updateOutboundBuffer(ChannelOutboundBuffer in, long writtenBytes, int msgCount,, +                    int addressesCnt = epollIn.addressCount();, +                    if (addressesCnt > 1) {, +                        if (!writeBytesMultiple(epollIn, msgCount, addresses, addressesCnt, epollIn.addressCount())) {, +                    int nioBufferCnt = nioIn.nioBufferCount();, +                    if (nioBufferCnt > 1) {, +                        if (!writeBytesMultiple(nioIn, msgCount, nioBuffers, nioBufferCnt, nioIn.nioBufferSize())) {, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannel.java, +            NioSocketChannelOutboundBuffer nioIn = (NioSocketChannelOutboundBuffer) in;, +            int nioBufferCnt = nioIn.nioBufferCount();, +            if (nioBufferCnt <= 1) {, +                // We have something else beside ByteBuffers to write so fallback to normal writes., +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannelOutboundBuffer.java, +                // Just break out of the loop as we can still use gathering writes for the buffers that we, +                // found by now., +                break;]