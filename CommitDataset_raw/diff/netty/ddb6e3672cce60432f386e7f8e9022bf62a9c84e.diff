[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +                out.add(toFullMessage(m));, +, +    private static FullHttpMessage toFullMessage(HttpMessage msg) {, +        if (msg instanceof FullHttpMessage) {, +            return ((FullHttpMessage) msg).retain();, +        }, +, +        FullHttpMessage fullMsg;, +        if (msg instanceof HttpRequest) {, +            HttpRequest req = (HttpRequest) msg;, +            fullMsg = new DefaultFullHttpRequest(, +                    req.getProtocolVersion(), req.getMethod(), req.getUri(), Unpooled.EMPTY_BUFFER, false);, +        } else if (msg instanceof HttpResponse) {, +            HttpResponse res = (HttpResponse) msg;, +            fullMsg = new DefaultFullHttpResponse(, +                    res.getProtocolVersion(), res.getStatus(), Unpooled.EMPTY_BUFFER, false);, +        } else {, +            throw new IllegalStateException();, +        }, +, +        return fullMsg;, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +                out.add(toFullMessage(m));, +, +    private static FullHttpMessage toFullMessage(HttpMessage msg) {, +        if (msg instanceof FullHttpMessage) {, +            return ((FullHttpMessage) msg).retain();, +        }, +, +        FullHttpMessage fullMsg;, +        if (msg instanceof HttpRequest) {, +            HttpRequest req = (HttpRequest) msg;, +            fullMsg = new DefaultFullHttpRequest(, +                    req.getProtocolVersion(), req.getMethod(), req.getUri(), Unpooled.EMPTY_BUFFER, false);, +        } else if (msg instanceof HttpResponse) {, +            HttpResponse res = (HttpResponse) msg;, +            fullMsg = new DefaultFullHttpResponse(, +                    res.getProtocolVersion(), res.getStatus(), Unpooled.EMPTY_BUFFER, false);, +        } else {, +            throw new IllegalStateException();, +        }, +, +        return fullMsg;, +    }, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpObjectAggregatorTest.java, +import static org.hamcrest.CoreMatchers.*;, +, +    @Test, +    public void testBadRequest() {, +        EmbeddedChannel ch = new EmbeddedChannel(new HttpRequestDecoder(), new HttpObjectAggregator(1024 * 1024));, +        ch.writeInbound(Unpooled.copiedBuffer("GET / HTTP/1.0 with extra\r\n", CharsetUtil.UTF_8));, +        assertThat(ch.readInbound(), is(instanceOf(FullHttpRequest.class)));, +        assertNull(ch.readInbound());, +        ch.finish();, +    }, +, +    @Test, +    public void testBadResponse() throws Exception {, +        EmbeddedChannel ch = new EmbeddedChannel(new HttpResponseDecoder(), new HttpObjectAggregator(1024 * 1024));, +        ch.writeInbound(Unpooled.copiedBuffer("HTTP/1.0 BAD_CODE Bad Server\r\n", CharsetUtil.UTF_8));, +        assertThat(ch.readInbound(), is(instanceOf(FullHttpResponse.class)));, +        assertNull(ch.readInbound());, +        ch.finish();, +    }]