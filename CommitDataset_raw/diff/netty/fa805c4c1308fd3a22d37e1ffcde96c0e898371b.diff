[+++ b/transport/src/main/java/io/netty/bootstrap/Bootstrap.java, +import io.netty.channel.socket.aio.AioEventLoopGroup;, +import io.netty.channel.socket.aio.AioSocketChannel;, +, +    @Override, +    public Bootstrap channel(Class<? extends Channel> channelClass) {, +        if (channelClass == null) {, +            throw new NullPointerException("channelClass");, +        }, +        if (channelClass == AioSocketChannel.class) {, +            return channelFactory(new AioSocketChannelFactory());, +        }, +        return super.channel(channelClass);, +    }, +, +    private final class AioSocketChannelFactory implements ChannelFactory {, +        @Override, +        public Channel newChannel() {, +            return new AioSocketChannel((AioEventLoopGroup) group());, +        }, +    }, +++ b/transport/src/main/java/io/netty/bootstrap/Bootstrap.java, +import io.netty.channel.socket.aio.AioEventLoopGroup;, +import io.netty.channel.socket.aio.AioSocketChannel;, +, +    @Override, +    public Bootstrap channel(Class<? extends Channel> channelClass) {, +        if (channelClass == null) {, +            throw new NullPointerException("channelClass");, +        }, +        if (channelClass == AioSocketChannel.class) {, +            return channelFactory(new AioSocketChannelFactory());, +        }, +        return super.channel(channelClass);, +    }, +, +    private final class AioSocketChannelFactory implements ChannelFactory {, +        @Override, +        public Channel newChannel() {, +            return new AioSocketChannel((AioEventLoopGroup) group());, +        }, +    }, +++ b/transport/src/main/java/io/netty/bootstrap/ServerBootstrap.java, +import io.netty.channel.socket.aio.AioEventLoopGroup;, +import io.netty.channel.socket.aio.AioServerSocketChannel;, +        if (channelClass == AioServerSocketChannel.class) {, +            channelFactory(new AioServerSocketChannelFactory());, +        }, +, +    private final class AioServerSocketChannelFactory implements ChannelFactory {, +        @Override, +        public Channel newChannel() {, +            return new AioServerSocketChannel((AioEventLoopGroup) group(),  (AioEventLoopGroup) childGroup);, +    }, +}, +]