[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java, +        String svalue = (valueStart >= valueEnd) ? StringUtil.EMPTY_STRING : sb.substring(valueStart, valueEnd);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java, +        String svalue = (valueStart >= valueEnd) ? StringUtil.EMPTY_STRING : sb.substring(valueStart, valueEnd);, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java, +, +    // https://github.com/netty/netty/issues/7620, +    @Test, +    public void testDecodeMalformedEmptyContentTypeFieldParameters() throws Exception {, +        final String boundary = "dLV9Wyq26L_-JQxk6ferf-RT153LhOO";, +        final DefaultFullHttpRequest req = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.POST,, +                                                                      "http://localhost");, +        req.headers().add(HttpHeaderNames.CONTENT_TYPE, "multipart/form-data; boundary=" + boundary);, +        // Force to use memory-based data., +        final DefaultHttpDataFactory inMemoryFactory = new DefaultHttpDataFactory(false);, +        final String data = "asdf";, +        final String filename = "tmp-0.txt";, +        final String body =, +                "--" + boundary + "\r\n" +, +                "Content-Disposition: form-data; name=\"file\"; filename=\"" + filename + "\"\r\n" +, +                "Content-Type: \r\n" +, +                "\r\n" +, +                data + "\r\n" +, +                "--" + boundary + "--\r\n";, +, +        req.content().writeBytes(body.getBytes(CharsetUtil.UTF_8.name()));, +        // Create decoder instance to test., +        final HttpPostRequestDecoder decoder = new HttpPostRequestDecoder(inMemoryFactory, req);, +        assertFalse(decoder.getBodyHttpDatas().isEmpty());, +        InterfaceHttpData part1 = decoder.getBodyHttpDatas().get(0);, +        assertTrue(part1 instanceof FileUpload);, +        FileUpload fileUpload = (FileUpload) part1;, +        assertEquals("tmp-0.txt", fileUpload.getFilename());, +        decoder.destroy();, +    }]