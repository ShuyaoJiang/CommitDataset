[+++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +    private final ChannelBufferHolder<Object> outbound;, +    @SuppressWarnings("unchecked"), +        outbound = (ChannelBufferHolder<Object>) newOutboundBuffer();, +            return outbound;, +    protected abstract ChannelBufferHolder<?> newOutboundBuffer();, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +    private final ChannelBufferHolder<Object> outbound;, +    @SuppressWarnings("unchecked"), +        outbound = (ChannelBufferHolder<Object>) newOutboundBuffer();, +            return outbound;, +    protected abstract ChannelBufferHolder<?> newOutboundBuffer();, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    protected ChannelBufferHolder<Object> newOutboundBuffer() {, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +    private final ChannelBufferHolder<Object> outbound;, +    @SuppressWarnings("unchecked"), +        outbound = (ChannelBufferHolder<Object>) newOutboundBuffer();, +            return outbound;, +    protected abstract ChannelBufferHolder<?> newOutboundBuffer();, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    protected ChannelBufferHolder<Object> newOutboundBuffer() {, +++ b/transport/src/main/java/io/netty/channel/socket/nio/AbstractNioMessageChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +        return ChannelBufferHolders.messageBuffer();, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +    private final ChannelBufferHolder<Object> outbound;, +    @SuppressWarnings("unchecked"), +        outbound = (ChannelBufferHolder<Object>) newOutboundBuffer();, +            return outbound;, +    protected abstract ChannelBufferHolder<?> newOutboundBuffer();, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    protected ChannelBufferHolder<Object> newOutboundBuffer() {, +++ b/transport/src/main/java/io/netty/channel/socket/nio/AbstractNioMessageChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +        return ChannelBufferHolders.messageBuffer();, +++ b/transport/src/main/java/io/netty/channel/socket/nio/AbstractNioStreamChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +        return ChannelBufferHolders.byteBuffer();, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +    private final ChannelBufferHolder<Object> outbound;, +    @SuppressWarnings("unchecked"), +        outbound = (ChannelBufferHolder<Object>) newOutboundBuffer();, +            return outbound;, +    protected abstract ChannelBufferHolder<?> newOutboundBuffer();, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    protected ChannelBufferHolder<Object> newOutboundBuffer() {, +++ b/transport/src/main/java/io/netty/channel/socket/nio/AbstractNioMessageChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +        return ChannelBufferHolders.messageBuffer();, +++ b/transport/src/main/java/io/netty/channel/socket/nio/AbstractNioStreamChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +        return ChannelBufferHolders.byteBuffer();, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioDatagramChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +        return ChannelBufferHolders.messageBuffer();, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +    private final ChannelBufferHolder<Object> outbound;, +    @SuppressWarnings("unchecked"), +        outbound = (ChannelBufferHolder<Object>) newOutboundBuffer();, +            return outbound;, +    protected abstract ChannelBufferHolder<?> newOutboundBuffer();, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    protected ChannelBufferHolder<Object> newOutboundBuffer() {, +++ b/transport/src/main/java/io/netty/channel/socket/nio/AbstractNioMessageChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +        return ChannelBufferHolders.messageBuffer();, +++ b/transport/src/main/java/io/netty/channel/socket/nio/AbstractNioStreamChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +        return ChannelBufferHolders.byteBuffer();, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioDatagramChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +        return ChannelBufferHolders.messageBuffer();, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +    private final ChannelBufferHolder<Object> outbound;, +    @SuppressWarnings("unchecked"), +        outbound = (ChannelBufferHolder<Object>) newOutboundBuffer();, +            return outbound;, +    protected abstract ChannelBufferHolder<?> newOutboundBuffer();, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    protected ChannelBufferHolder<Object> newOutboundBuffer() {, +++ b/transport/src/main/java/io/netty/channel/socket/nio/AbstractNioMessageChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +        return ChannelBufferHolders.messageBuffer();, +++ b/transport/src/main/java/io/netty/channel/socket/nio/AbstractNioStreamChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +        return ChannelBufferHolders.byteBuffer();, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioDatagramChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +        return ChannelBufferHolders.messageBuffer();, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannel.java, +    protected ChannelBufferHolder<?> newOutboundBuffer() {, +        return ChannelBufferHolders.byteBuffer();]