[+++ b/buffer/src/main/java/io/netty/buffer/IllegalBufferAccessException.java, + * {@link Buf#release()} } already., +++ b/buffer/src/main/java/io/netty/buffer/IllegalBufferAccessException.java, + * {@link Buf#release()} } already., +++ b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java, +import io.netty.handler.codec.http.DefaultHttpContent;, +import io.netty.handler.codec.http.DefaultHttpRequest;, +import io.netty.handler.codec.http.HttpHeaders;, +import io.netty.handler.codec.http.HttpMethod;, +import io.netty.handler.codec.http.HttpVersion;, +import static org.junit.Assert.*;, +            final String body =, +                    "--" + boundary + "\r\n" +, +++ b/buffer/src/main/java/io/netty/buffer/IllegalBufferAccessException.java, + * {@link Buf#release()} } already., +++ b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java, +import io.netty.handler.codec.http.DefaultHttpContent;, +import io.netty.handler.codec.http.DefaultHttpRequest;, +import io.netty.handler.codec.http.HttpHeaders;, +import io.netty.handler.codec.http.HttpMethod;, +import io.netty.handler.codec.http.HttpVersion;, +import static org.junit.Assert.*;, +            final String body =, +                    "--" + boundary + "\r\n" +, +++ b/example/src/main/java/io/netty/example/udt/util/UtilThreadFactory.java, +        return new Thread(runnable, name + '-' + counter.getAndIncrement());, +++ b/buffer/src/main/java/io/netty/buffer/IllegalBufferAccessException.java, + * {@link Buf#release()} } already., +++ b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java, +import io.netty.handler.codec.http.DefaultHttpContent;, +import io.netty.handler.codec.http.DefaultHttpRequest;, +import io.netty.handler.codec.http.HttpHeaders;, +import io.netty.handler.codec.http.HttpMethod;, +import io.netty.handler.codec.http.HttpVersion;, +import static org.junit.Assert.*;, +            final String body =, +                    "--" + boundary + "\r\n" +, +++ b/example/src/main/java/io/netty/example/udt/util/UtilThreadFactory.java, +        return new Thread(runnable, name + '-' + counter.getAndIncrement());, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/sctp/AbstractSctpTest.java, +++ b/buffer/src/main/java/io/netty/buffer/IllegalBufferAccessException.java, + * {@link Buf#release()} } already., +++ b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java, +import io.netty.handler.codec.http.DefaultHttpContent;, +import io.netty.handler.codec.http.DefaultHttpRequest;, +import io.netty.handler.codec.http.HttpHeaders;, +import io.netty.handler.codec.http.HttpMethod;, +import io.netty.handler.codec.http.HttpVersion;, +import static org.junit.Assert.*;, +            final String body =, +                    "--" + boundary + "\r\n" +, +++ b/example/src/main/java/io/netty/example/udt/util/UtilThreadFactory.java, +        return new Thread(runnable, name + '-' + counter.getAndIncrement());, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/sctp/AbstractSctpTest.java, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/sctp/SctpTestPermutation.java, +import io.netty.channel.nio.NioEventLoopGroup;, +import io.netty.channel.oio.OioEventLoopGroup;, +public final class SctpTestPermutation {, +++ b/buffer/src/main/java/io/netty/buffer/IllegalBufferAccessException.java, + * {@link Buf#release()} } already., +++ b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java, +import io.netty.handler.codec.http.DefaultHttpContent;, +import io.netty.handler.codec.http.DefaultHttpRequest;, +import io.netty.handler.codec.http.HttpHeaders;, +import io.netty.handler.codec.http.HttpMethod;, +import io.netty.handler.codec.http.HttpVersion;, +import static org.junit.Assert.*;, +            final String body =, +                    "--" + boundary + "\r\n" +, +++ b/example/src/main/java/io/netty/example/udt/util/UtilThreadFactory.java, +        return new Thread(runnable, name + '-' + counter.getAndIncrement());, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/sctp/AbstractSctpTest.java, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/sctp/SctpTestPermutation.java, +import io.netty.channel.nio.NioEventLoopGroup;, +import io.netty.channel.oio.OioEventLoopGroup;, +public final class SctpTestPermutation {, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelConfig.java, + * <td>{@link RxtxChannelOption#BAUD_RATE}</td><td>{@link #setBaudrate(int)}</td>, + * <td>{@link RxtxChannelOption#DTR}</td><td>{@link #setDtr(boolean)}</td>, + * <td>{@link RxtxChannelOption#RTS}</td><td>{@link #setRts(boolean)}</td>, + * <td>{@link RxtxChannelOption#STOP_BITS}</td><td>{@link #setStopbits(Stopbits)}</td>, + * <td>{@link RxtxChannelOption#DATA_BITS}</td><td>{@link #setDatabits(Databits)}</td>, + * <td>{@link RxtxChannelOption#PARITY_BIT}</td><td>{@link #setParitybit(Paritybit)}</td>, + * <td>{@link RxtxChannelOption#WAIT_TIME}</td><td>{@link #setWaitTimeMillis(int)}</td>, +++ b/buffer/src/main/java/io/netty/buffer/IllegalBufferAccessException.java, + * {@link Buf#release()} } already., +++ b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java, +import io.netty.handler.codec.http.DefaultHttpContent;, +import io.netty.handler.codec.http.DefaultHttpRequest;, +import io.netty.handler.codec.http.HttpHeaders;, +import io.netty.handler.codec.http.HttpMethod;, +import io.netty.handler.codec.http.HttpVersion;, +import static org.junit.Assert.*;, +            final String body =, +                    "--" + boundary + "\r\n" +, +++ b/example/src/main/java/io/netty/example/udt/util/UtilThreadFactory.java, +        return new Thread(runnable, name + '-' + counter.getAndIncrement());, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/sctp/AbstractSctpTest.java, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/sctp/SctpTestPermutation.java, +import io.netty.channel.nio.NioEventLoopGroup;]