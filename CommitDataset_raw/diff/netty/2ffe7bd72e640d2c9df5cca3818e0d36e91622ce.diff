[+++ b/transport-native-epoll/pom.xml, +              <replacement>CFLAGS=-O3 -DIO_NETTY_SENDMMSG_NOT_FOUND -Werror</replacement>, +              <replacement>CFLAGS=-O3 -Werror</replacement>, +++ b/transport-native-epoll/pom.xml, +              <replacement>CFLAGS=-O3 -DIO_NETTY_SENDMMSG_NOT_FOUND -Werror</replacement>, +              <replacement>CFLAGS=-O3 -Werror</replacement>, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c, +#include <inttypes.h>, +    } else {, +        return -EINVAL;, +    return 0;, +    return 0;, +#define _UNIX_ADDR_LENGTH(path_len) (uintptr_t) (((struct sockaddr_un *) 0)->sun_path) + path_len, +    jbyte* socket_path = (*env)->GetByteArrayElements(env, socketPath, 0);, +    jbyte* socket_path = (*env)->GetByteArrayElements(env, socketPath, 0);, +        ssize_t res;, +JNIEXPORT jint JNICALL Java_io_netty_channel_epoll_Native_splice0(JNIEnv* env, jclass clazz, jint fd, jlong offIn, jint fdOut, jlong offOut, jlong len) {, +    loff_t off_in = (loff_t) offIn;, +    loff_t off_out = (loff_t) offOut;, +, +    loff_t* p_off_in = off_in >= 0 ? &off_in : NULL;, +    loff_t* p_off_out = off_in >= 0 ? &off_out : NULL;, +       res = splice(fd, p_off_in, fdOut, p_off_out, (size_t) len, SPLICE_F_NONBLOCK | SPLICE_F_MOVE);, +++ b/transport-native-epoll/pom.xml, +              <replacement>CFLAGS=-O3 -DIO_NETTY_SENDMMSG_NOT_FOUND -Werror</replacement>, +              <replacement>CFLAGS=-O3 -Werror</replacement>, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c, +#include <inttypes.h>, +    } else {, +        return -EINVAL;, +    return 0;, +    return 0;, +#define _UNIX_ADDR_LENGTH(path_len) (uintptr_t) (((struct sockaddr_un *) 0)->sun_path) + path_len, +    jbyte* socket_path = (*env)->GetByteArrayElements(env, socketPath, 0);, +    jbyte* socket_path = (*env)->GetByteArrayElements(env, socketPath, 0);, +        ssize_t res;, +JNIEXPORT jint JNICALL Java_io_netty_channel_epoll_Native_splice0(JNIEnv* env, jclass clazz, jint fd, jlong offIn, jint fdOut, jlong offOut, jlong len) {, +    loff_t off_in = (loff_t) offIn;, +    loff_t off_out = (loff_t) offOut;, +, +    loff_t* p_off_in = off_in >= 0 ? &off_in : NULL;, +    loff_t* p_off_out = off_in >= 0 ? &off_out : NULL;, +       res = splice(fd, p_off_in, fdOut, p_off_out, (size_t) len, SPLICE_F_NONBLOCK | SPLICE_F_MOVE);, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.h, +jint Java_io_netty_channel_epoll_Native_splice0(JNIEnv* env, jclass clazz, jint fd, jlong offIn, jint fdOut, jlong offOut, jlong len);, +++ b/transport-native-epoll/pom.xml, +              <replacement>CFLAGS=-O3 -DIO_NETTY_SENDMMSG_NOT_FOUND -Werror</replacement>, +              <replacement>CFLAGS=-O3 -Werror</replacement>, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c, +#include <inttypes.h>, +    } else {, +        return -EINVAL;, +    return 0;, +    return 0;, +#define _UNIX_ADDR_LENGTH(path_len) (uintptr_t) (((struct sockaddr_un *) 0)->sun_path) + path_len, +    jbyte* socket_path = (*env)->GetByteArrayElements(env, socketPath, 0);, +    jbyte* socket_path = (*env)->GetByteArrayElements(env, socketPath, 0);, +        ssize_t res;, +JNIEXPORT jint JNICALL Java_io_netty_channel_epoll_Native_splice0(JNIEnv* env, jclass clazz, jint fd, jlong offIn, jint fdOut, jlong offOut, jlong len) {, +    loff_t off_in = (loff_t) offIn;, +    loff_t off_out = (loff_t) offOut;, +, +    loff_t* p_off_in = off_in >= 0 ? &off_in : NULL;, +    loff_t* p_off_out = off_in >= 0 ? &off_out : NULL;, +       res = splice(fd, p_off_in, fdOut, p_off_out, (size_t) len, SPLICE_F_NONBLOCK | SPLICE_F_MOVE);, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.h, +jint Java_io_netty_channel_epoll_Native_splice0(JNIEnv* env, jclass clazz, jint fd, jlong offIn, jint fdOut, jlong offOut, jlong len);, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/Native.java, +    public static int splice(int fd, long offIn, int fdOut, long offOut, long len) throws IOException {, +    private static native int splice0(int fd, long offIn, int fdOut, long offOut, long len);]