[+++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +import java.net.InetSocketAddress;, + * b.setOption("remoteAddress", new {@link InetSocketAddress}("example.com", 8080));, + * {@link ChannelPipeline} p = b.getPipeline();, + * public class MyPipelineFactory implements {@link ChannelPipelineFactory} {, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +import java.net.InetSocketAddress;, + * b.setOption("remoteAddress", new {@link InetSocketAddress}("example.com", 8080));, + * {@link ChannelPipeline} p = b.getPipeline();, + * public class MyPipelineFactory implements {@link ChannelPipelineFactory} {, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, +import java.net.InetSocketAddress;, + * b.setOption("localAddress", new {@link InetSocketAddress}(8080));, + * {@link ChannelPipeline} p = b.getPipeline();, + * public class MyPipelineFactory implements {@link ChannelPipelineFactory} {, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +import java.net.InetSocketAddress;, + * b.setOption("remoteAddress", new {@link InetSocketAddress}("example.com", 8080));, + * {@link ChannelPipeline} p = b.getPipeline();, + * public class MyPipelineFactory implements {@link ChannelPipelineFactory} {, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, +import java.net.InetSocketAddress;, + * b.setOption("localAddress", new {@link InetSocketAddress}(8080));, + * {@link ChannelPipeline} p = b.getPipeline();, + * public class MyPipelineFactory implements {@link ChannelPipelineFactory} {, +++ b/src/main/java/org/jboss/netty/channel/ChannelDownstreamHandler.java, + *, + * <h3>Downstream events</h3>, + * ignored and discarded., + *, + * <h4>Additional resources worth reading</h4>, + * <p>, + * You might want to refer to {@link ChannelUpstreamHandler} to see how a, + * {@link ChannelEvent} is interpreted when going upstream.  Also, please refer, + * to the {@link ChannelEvent} documentation to find out what a upstream event, + * and a downstream event are and what fundamental differences they have, if, + * you didn't read yet., + * void handleDownstream({@link ChannelHandlerContext} ctx, {@link ChannelEvent} e) throws Exception {, + * void handleDownstream({@link ChannelHandlerContext} ctx, {@link ChannelEvent} e) throws Exception {, + *, + * <h4>Using the helper class to fire an event</h4>, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +import java.net.InetSocketAddress;, + * b.setOption("remoteAddress", new {@link InetSocketAddress}("example.com", 8080));, + * {@link ChannelPipeline} p = b.getPipeline();, + * public class MyPipelineFactory implements {@link ChannelPipelineFactory} {, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, +import java.net.InetSocketAddress;, + * b.setOption("localAddress", new {@link InetSocketAddress}(8080));, + * {@link ChannelPipeline} p = b.getPipeline();, + * public class MyPipelineFactory implements {@link ChannelPipelineFactory} {, +++ b/src/main/java/org/jboss/netty/channel/ChannelDownstreamHandler.java, + *, + * <h3>Downstream events</h3>, + * ignored and discarded., + *, + * <h4>Additional resources worth reading</h4>, + * <p>, + * You might want to refer to {@link ChannelUpstreamHandler} to see how a, + * {@link ChannelEvent} is interpreted when going upstream.  Also, please refer, + * to the {@link ChannelEvent} documentation to find out what a upstream event, + * and a downstream event are and what fundamental differences they have, if, + * you didn't read yet., + * void handleDownstream({@link ChannelHandlerContext} ctx, {@link ChannelEvent} e) throws Exception {, + * void handleDownstream({@link ChannelHandlerContext} ctx, {@link ChannelEvent} e) throws Exception {, + *, + * <h4>Using the helper class to fire an event</h4>, +++ b/src/main/java/org/jboss/netty/channel/ChannelEvent.java, + *, + * <h4>Additional resources worth reading</h4>, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +import java.net.InetSocketAddress;, + * b.setOption("remoteAddress", new {@link InetSocketAddress}("example.com", 8080));, + * {@link ChannelPipeline} p = b.getPipeline();, + * public class MyPipelineFactory implements {@link ChannelPipelineFactory} {, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, +import java.net.InetSocketAddress;, + * b.setOption("localAddress", new {@link InetSocketAddress}(8080));, + * {@link ChannelPipeline} p = b.getPipeline();, + * public class MyPipelineFactory implements {@link ChannelPipelineFactory} {, +++ b/src/main/java/org/jboss/netty/channel/ChannelDownstreamHandler.java, + *, + * <h3>Downstream events</h3>, + * ignored and discarded., + *, + * <h4>Additional resources worth reading</h4>, + * <p>, + * You might want to refer to {@link ChannelUpstreamHandler} to see how a, + * {@link ChannelEvent} is interpreted when going upstream.  Also, please refer, + * to the {@link ChannelEvent} documentation to find out what a upstream event, + * and a downstream event are and what fundamental differences they have, if, + * you didn't read yet., + * void handleDownstream({@link ChannelHandlerContext} ctx, {@link ChannelEvent} e) throws Exception {, + * void handleDownstream({@link ChannelHandlerContext} ctx, {@link ChannelEvent} e) throws Exception {, + *, + * <h4>Using the helper class to fire an event</h4>, +++ b/src/main/java/org/jboss/netty/channel/ChannelEvent.java, + *, + * <h4>Additional resources worth reading</h4>, +++ b/src/main/java/org/jboss/netty/channel/ChannelHandler.java]