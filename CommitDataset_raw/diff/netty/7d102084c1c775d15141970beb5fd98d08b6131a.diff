[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/ClientCookieDecoder.java, +/*, + * Copyright 2014 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.handler.codec.http;, +, +import java.text.ParsePosition;, +import java.util.Date;, +, +import static io.netty.handler.codec.http.CookieEncoderUtil.*;, +, +/**, + * A <a href="http://tools.ietf.org/html/rfc6265">RFC6265</a> compliant cookie decoder to be used client side., + *, + * It will store the raw value in {@link Cookie#setRawValue(String)} so it can be, + * eventually sent back to the Origin server as is., + *, + * @see ClientCookieEncoder, + */, +public final class ClientCookieDecoder {, +, +    /**, +     * Decodes the specified Set-Cookie HTTP header value into a {@link Cookie}., +     *, +     * @return the decoded {@link Cookie}, +     */, +    public static Cookie decode(String header) {, +, +        if (header == null) {, +            throw new NullPointerException("header");, +        }, +, +        final int headerLen = header.length();, +, +        if (headerLen == 0) {, +            return null;, +        }, +, +        CookieBuilder cookieBuilder = null;, +, +        loop: for (int i = 0;;) {, +, +            // Skip spaces and separators., +            for (;;) {, +                if (i == headerLen) {, +                    break loop;, +                }, +                char c = header.charAt(i);, +                if (c == ',') {, +                    // Having multiple cookies in a single Set-Cookie header is, +                    // deprecated, modern browsers only parse the first one, +                    break loop;, +, +                } else if (c == '\t' || c == '\n' || c == 0x0b || c == '\f', +                        || c == '\r' || c == ' ' || c == ';') {, +                    i++;, +                    continue;, +                }, +                break;, +            }, +, +            int newNameStart = i;, +            int newNameEnd = i;, +            String value, rawValue;, +            boolean first = true;, +, +            if (i == headerLen) {, +                value = rawValue = null;, +            } else {, +                keyValLoop: for (;;) {, +, +                    char curChar = header.charAt(i);, +                    if (curChar == ';') {, +                        // NAME; (no value till ';'), +                        newNameEnd = i;, +                        value = rawValue = null;, +                        first = false;, +                        break keyValLoop;, +                    } else if (curChar == '=') {, +                        // NAME=VALUE, +                        newNameEnd = i;, +                        i++;, +                        if (i == headerLen) {, +                            // NAME= (empty value, i.e. nothing after '='), +                            value = rawValue = "";, +                            first = false;, +                            break keyValLoop;, +                        }]