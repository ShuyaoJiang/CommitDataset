[+++ b/transport/src/main/java/io/netty/channel/MultithreadEventExecutorGroup.java, +, +/*, + * Copyright 2012 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +import java.util.Collections;, +import java.util.LinkedHashMap;, +import java.util.Set;, +    protected Set<EventExecutor> children() {, +        Set<EventExecutor> children = Collections.newSetFromMap(new LinkedHashMap<EventExecutor, Boolean>());, +        Collections.addAll(children, this.children);, +        return children;, +    }, +, +++ b/transport/src/main/java/io/netty/channel/MultithreadEventExecutorGroup.java, +, +/*, + * Copyright 2012 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +import java.util.Collections;, +import java.util.LinkedHashMap;, +import java.util.Set;, +    protected Set<EventExecutor> children() {, +        Set<EventExecutor> children = Collections.newSetFromMap(new LinkedHashMap<EventExecutor, Boolean>());, +        Collections.addAll(children, this.children);, +        return children;, +    }, +, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioEventLoop.java, +, +/*, + * Copyright 2012 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +import java.util.ConcurrentModificationException;, +    public void rebuildSelector() {, +        if (!inEventLoop()) {, +            execute(new Runnable() {, +                @Override, +                public void run() {, +                    rebuildSelector();, +                }, +            });, +            return;, +        }, +, +        final Selector newSelector;, +, +        if (oldSelector == null) {, +            return;, +        }, +, +        try {, +            newSelector = Selector.open();, +        } catch (Exception e) {, +            logger.warn("Failed to create a new Selector.", e);, +            return;, +        }, +        int nChannels = 0;, +        for (;;) {, +                    Object a = key.attachment();, +                    try {, +                        if (key.channel().keyFor(newSelector) != null) {, +                            continue;, +]