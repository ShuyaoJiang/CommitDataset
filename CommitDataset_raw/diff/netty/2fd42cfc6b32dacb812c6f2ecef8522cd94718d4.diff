[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2ConnectionHandlerBuilder.java, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_HEADER_LIST_SIZE;, +    private Http2Settings initialSettings = new Http2Settings().maxHeaderListSize(DEFAULT_HEADER_LIST_SIZE);, +        Long maxHeaderListSize = initialSettings.maxHeaderListSize();, +        Http2FrameReader reader = new DefaultHttp2FrameReader(maxHeaderListSize == null ?, +                new DefaultHttp2HeadersDecoder(isValidateHeaders()) :, +                new DefaultHttp2HeadersDecoder(isValidateHeaders(), maxHeaderListSize));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2ConnectionHandlerBuilder.java, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_HEADER_LIST_SIZE;, +    private Http2Settings initialSettings = new Http2Settings().maxHeaderListSize(DEFAULT_HEADER_LIST_SIZE);, +        Long maxHeaderListSize = initialSettings.maxHeaderListSize();, +        Http2FrameReader reader = new DefaultHttp2FrameReader(maxHeaderListSize == null ?, +                new DefaultHttp2HeadersDecoder(isValidateHeaders()) :, +                new DefaultHttp2HeadersDecoder(isValidateHeaders(), maxHeaderListSize));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DecoratingHttp2FrameWriter.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +, +                                      boolean endStream, ChannelPromise promise) throws Http2Exception {, +                                      boolean endStream, ChannelPromise promise) throws Http2Exception {, +                                          Http2Headers headers, int padding, ChannelPromise promise), +            throws Http2Exception {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2ConnectionHandlerBuilder.java, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_HEADER_LIST_SIZE;, +    private Http2Settings initialSettings = new Http2Settings().maxHeaderListSize(DEFAULT_HEADER_LIST_SIZE);, +        Long maxHeaderListSize = initialSettings.maxHeaderListSize();, +        Http2FrameReader reader = new DefaultHttp2FrameReader(maxHeaderListSize == null ?, +                new DefaultHttp2HeadersDecoder(isValidateHeaders()) :, +                new DefaultHttp2HeadersDecoder(isValidateHeaders(), maxHeaderListSize));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DecoratingHttp2FrameWriter.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +, +                                      boolean endStream, ChannelPromise promise) throws Http2Exception {, +                                      boolean endStream, ChannelPromise promise) throws Http2Exception {, +                                          Http2Headers headers, int padding, ChannelPromise promise), +            throws Http2Exception {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java, +        private static final byte SENT_STATE_RST = 0x1;, +        private static final byte SENT_STATE_HEADERS = 0x2;, +        private static final byte SENT_STATE_PUSHPROMISE = 0x4;, +        private byte sentState;, +            return (sentState & SENT_STATE_RST) != 0;, +            sentState |= SENT_STATE_RST;, +            sentState |= SENT_STATE_HEADERS;, +            return (sentState & SENT_STATE_HEADERS) != 0;, +        }, +, +        @Override, +        public Http2Stream pushPromiseSent() {, +            sentState |= SENT_STATE_PUSHPROMISE;, +            return this;, +        }, +, +        @Override, +        public boolean isPushPromiseSent() {, +            return (sentState & SENT_STATE_PUSHPROMISE) != 0;, +, +        @Override, +        public Http2Stream pushPromiseSent() {, +            throw new UnsupportedOperationException();, +        }, +, +        @Override, +        public boolean isPushPromiseSent() {, +            throw new UnsupportedOperationException();, +        }, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2ConnectionHandlerBuilder.java, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_HEADER_LIST_SIZE;, +    private Http2Settings initialSettings = new Http2Settings().maxHeaderListSize(DEFAULT_HEADER_LIST_SIZE);, +        Long maxHeaderListSize = initialSettings.maxHeaderListSize();, +        Http2FrameReader reader = new DefaultHttp2FrameReader(maxHeaderListSize == null ?, +                new DefaultHttp2HeadersDecoder(isValidateHeaders()) :, +                new DefaultHttp2HeadersDecoder(isValidateHeaders(), maxHeaderListSize));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DecoratingHttp2FrameWriter.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +, +                                      boolean endStream, ChannelPromise promise) throws Http2Exception {, +                                      boolean endStream, ChannelPromise promise) throws Http2Exception {, +                                          Http2Headers headers, int padding, ChannelPromise promise), +            throws Http2Exception {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java, +        private static final byte SENT_STATE_RST = 0x1;, +        private static final byte SENT_STATE_HEADERS = 0x2;, +        private static final byte SENT_STATE_PUSHPROMISE = 0x4;, +        private byte sentState;, +            return (sentState & SENT_STATE_RST) != 0;, +            sentState |= SENT_STATE_RST;, +            sentState |= SENT_STATE_HEADERS;, +            return (sentState & SENT_STATE_HEADERS) != 0;, +        }, +, +        @Override, +        public Http2Stream pushPromiseSent() {, +            sentState |= SENT_STATE_PUSHPROMISE;, +            return this;, +        }, +, +        @Override, +        public boolean isPushPromiseSent() {, +            return (sentState & SENT_STATE_PUSHPROMISE) != 0;, +]