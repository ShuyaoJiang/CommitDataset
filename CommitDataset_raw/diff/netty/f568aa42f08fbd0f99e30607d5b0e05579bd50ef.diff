[+++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelOption.java, +public class RxtxChannelOption<T> extends ChannelOption<T> {, +    public static final RxtxChannelOption<Integer> BAUD_RATE =, +            new RxtxChannelOption<Integer>("BAUD_RATE");, +    public static final RxtxChannelOption<Boolean> DTR =, +            new RxtxChannelOption<Boolean>("DTR");, +    public static final RxtxChannelOption<Boolean> RTS =, +            new RxtxChannelOption<Boolean>("RTS");, +    public static final RxtxChannelOption<Stopbits> STOP_BITS =, +            new RxtxChannelOption<Stopbits>("STOP_BITS");, +    public static final RxtxChannelOption<Databits> DATA_BITS =, +            new RxtxChannelOption<Databits>("DATA_BITS");, +    public static final RxtxChannelOption<Paritybit> PARITY_BIT =, +            new RxtxChannelOption<Paritybit>("PARITY_BIT");, +    private RxtxChannelOption(String name) {, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelOption.java, +public class RxtxChannelOption<T> extends ChannelOption<T> {, +    public static final RxtxChannelOption<Integer> BAUD_RATE =, +            new RxtxChannelOption<Integer>("BAUD_RATE");, +    public static final RxtxChannelOption<Boolean> DTR =, +            new RxtxChannelOption<Boolean>("DTR");, +    public static final RxtxChannelOption<Boolean> RTS =, +            new RxtxChannelOption<Boolean>("RTS");, +    public static final RxtxChannelOption<Stopbits> STOP_BITS =, +            new RxtxChannelOption<Stopbits>("STOP_BITS");, +    public static final RxtxChannelOption<Databits> DATA_BITS =, +            new RxtxChannelOption<Databits>("DATA_BITS");, +    public static final RxtxChannelOption<Paritybit> PARITY_BIT =, +            new RxtxChannelOption<Paritybit>("PARITY_BIT");, +    private RxtxChannelOption(String name) {, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/SctpChannelOption.java, +    public static final SctpChannelOption<Boolean> SCTP_DISABLE_FRAGMENTS =, +            new SctpChannelOption<Boolean>("SCTP_DISABLE_FRAGMENTS");, +    public static final SctpChannelOption<Boolean> SCTP_EXPLICIT_COMPLETE =, +            new SctpChannelOption<Boolean>("SCTP_EXPLICIT_COMPLETE");, +    public static final SctpChannelOption<Integer> SCTP_FRAGMENT_INTERLEAVE =, +            new SctpChannelOption<Integer>("SCTP_FRAGMENT_INTERLEAVE");, +    public static final SctpChannelOption<List<Integer>> SCTP_INIT_MAXSTREAMS =, +            new SctpChannelOption<List<Integer>>("SCTP_INIT_MAXSTREAMS") {, +    public static final SctpChannelOption<Boolean> SCTP_NODELAY =, +            new SctpChannelOption<Boolean>("SCTP_NODELAY");, +    public static final SctpChannelOption<SocketAddress> SCTP_PRIMARY_ADDR =, +            new SctpChannelOption<SocketAddress>("SCTP_PRIMARY_ADDR");, +    public static final SctpChannelOption<SocketAddress> SCTP_SET_PEER_PRIMARY_ADDR =, +            new SctpChannelOption<SocketAddress>("SCTP_SET_PEER_PRIMARY_ADDR");, +    private SctpChannelOption(String name) {, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelOption.java, +public class RxtxChannelOption<T> extends ChannelOption<T> {, +    public static final RxtxChannelOption<Integer> BAUD_RATE =, +            new RxtxChannelOption<Integer>("BAUD_RATE");, +    public static final RxtxChannelOption<Boolean> DTR =, +            new RxtxChannelOption<Boolean>("DTR");, +    public static final RxtxChannelOption<Boolean> RTS =, +            new RxtxChannelOption<Boolean>("RTS");, +    public static final RxtxChannelOption<Stopbits> STOP_BITS =, +            new RxtxChannelOption<Stopbits>("STOP_BITS");, +    public static final RxtxChannelOption<Databits> DATA_BITS =, +            new RxtxChannelOption<Databits>("DATA_BITS");, +    public static final RxtxChannelOption<Paritybit> PARITY_BIT =, +            new RxtxChannelOption<Paritybit>("PARITY_BIT");, +    private RxtxChannelOption(String name) {, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/SctpChannelOption.java, +    public static final SctpChannelOption<Boolean> SCTP_DISABLE_FRAGMENTS =, +            new SctpChannelOption<Boolean>("SCTP_DISABLE_FRAGMENTS");, +    public static final SctpChannelOption<Boolean> SCTP_EXPLICIT_COMPLETE =, +            new SctpChannelOption<Boolean>("SCTP_EXPLICIT_COMPLETE");, +    public static final SctpChannelOption<Integer> SCTP_FRAGMENT_INTERLEAVE =, +            new SctpChannelOption<Integer>("SCTP_FRAGMENT_INTERLEAVE");, +    public static final SctpChannelOption<List<Integer>> SCTP_INIT_MAXSTREAMS =, +            new SctpChannelOption<List<Integer>>("SCTP_INIT_MAXSTREAMS") {, +    public static final SctpChannelOption<Boolean> SCTP_NODELAY =, +            new SctpChannelOption<Boolean>("SCTP_NODELAY");, +    public static final SctpChannelOption<SocketAddress> SCTP_PRIMARY_ADDR =, +            new SctpChannelOption<SocketAddress>("SCTP_PRIMARY_ADDR");, +    public static final SctpChannelOption<SocketAddress> SCTP_SET_PEER_PRIMARY_ADDR =, +            new SctpChannelOption<SocketAddress>("SCTP_SET_PEER_PRIMARY_ADDR");, +    private SctpChannelOption(String name) {, +++ b/transport-udt/src/main/java/io/netty/channel/udt/UdtChannelOption.java, +    public static final UdtChannelOption<Integer> PROTOCOL_RECEIVE_BUFFER_SIZE = new UdtChannelOption<Integer>(, +    public static final UdtChannelOption<Integer> PROTOCOL_SEND_BUFFER_SIZE = new UdtChannelOption<Integer>(, +    public static final UdtChannelOption<Integer> SYSTEM_RECEIVE_BUFFER_SIZE = new UdtChannelOption<Integer>(, +    public static final UdtChannelOption<Integer> SYSTEM_SEND_BUFFER_SIZE = new UdtChannelOption<Integer>(, +    private UdtChannelOption(String name) {, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelOption.java, +public class RxtxChannelOption<T> extends ChannelOption<T> {, +    public static final RxtxChannelOption<Integer> BAUD_RATE =, +            new RxtxChannelOption<Integer>("BAUD_RATE");, +    public static final RxtxChannelOption<Boolean> DTR =, +            new RxtxChannelOption<Boolean>("DTR");, +    public static final RxtxChannelOption<Boolean> RTS =, +            new RxtxChannelOption<Boolean>("RTS");, +    public static final RxtxChannelOption<Stopbits> STOP_BITS =, +            new RxtxChannelOption<Stopbits>("STOP_BITS");, +    public static final RxtxChannelOption<Databits> DATA_BITS =, +            new RxtxChannelOption<Databits>("DATA_BITS");, +    public static final RxtxChannelOption<Paritybit> PARITY_BIT =, +            new RxtxChannelOption<Paritybit>("PARITY_BIT");, +    private RxtxChannelOption(String name) {, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/SctpChannelOption.java, +    public static final SctpChannelOption<Boolean> SCTP_DISABLE_FRAGMENTS =]