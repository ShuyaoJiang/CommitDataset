[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +            if (boundary[1].charAt(0) == '"') {, +                String bound = boundary[1].trim();, +                int index = bound.length() - 1;, +                if (bound.charAt(index) == '"') {, +                    boundary[1] = bound.substring(1, index);, +                }, +            }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +            if (boundary[1].charAt(0) == '"') {, +                String bound = boundary[1].trim();, +                int index = bound.length() - 1;, +                if (bound.charAt(index) == '"') {, +                    boundary[1] = bound.substring(1, index);, +                }, +            }, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java, +    }, +, +    // See https://github.com/netty/netty/issues/2542, +    @Test, +    public void testQuotedBoundary() throws Exception {, +        final String boundary = "dLV9Wyq26L_-JQxk6ferf-RT153LhOO";, +, +        final DefaultFullHttpRequest req = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.POST,, +                "http://localhost");, +, +        req.setDecoderResult(DecoderResult.SUCCESS);, +        req.headers().add(HttpHeaders.Names.CONTENT_TYPE, "multipart/form-data; boundary=\"" + boundary + '"');, +        req.headers().add(HttpHeaders.Names.TRANSFER_ENCODING, HttpHeaders.Values.CHUNKED);, +, +        // Force to use memory-based data., +        final DefaultHttpDataFactory inMemoryFactory = new DefaultHttpDataFactory(false);, +, +        for (String data : Arrays.asList("", "\r", "\r\r", "\r\r\r")) {, +            final String body =, +                    "--" + boundary + "\r\n" +, +                            "Content-Disposition: form-data; name=\"file\"; filename=\"tmp-0.txt\"\r\n" +, +                            "Content-Type: image/gif\r\n" +, +                            "\r\n" +, +                            data + "\r\n" +, +                            "--" + boundary + "--\r\n";, +, +            req.content().writeBytes(body.getBytes(CharsetUtil.UTF_8));, +        }, +        // Create decoder instance to test., +        final HttpPostRequestDecoder decoder = new HttpPostRequestDecoder(inMemoryFactory, req);, +        assertFalse(decoder.getBodyHttpDatas().isEmpty());, +        decoder.destroy();]