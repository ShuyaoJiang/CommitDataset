[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +import io.netty.channel.ChannelInboundMessageHandler;, +     * Create the {@link ChannelInboundMessageHandler} that is responsible for handling the http requests, +    protected abstract ChannelInboundMessageHandler<?> createHttpRequestHandlerForHttp();, +     * Create the {@link ChannelInboundMessageHandler} that is responsible for handling the http responses, +    protected ChannelInboundMessageHandler<?> createHttpRequestHandlerForSpdy() {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +import io.netty.channel.ChannelInboundMessageHandler;, +     * Create the {@link ChannelInboundMessageHandler} that is responsible for handling the http requests, +    protected abstract ChannelInboundMessageHandler<?> createHttpRequestHandlerForHttp();, +     * Create the {@link ChannelInboundMessageHandler} that is responsible for handling the http responses, +    protected ChannelInboundMessageHandler<?> createHttpRequestHandlerForSpdy() {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +import io.netty.channel.ChannelInboundByteHandlerAdapter;, +    extends ChannelInboundByteHandlerAdapter {, +    public void inboundBufferUpdated(ChannelHandlerContext ctx, ByteBuf in) throws Exception {, +        callDecode(ctx, in);, +            callDecode(ctx, in);, +    protected void callDecode(ChannelHandlerContext ctx, ByteBuf in) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +import io.netty.channel.ChannelInboundMessageHandler;, +     * Create the {@link ChannelInboundMessageHandler} that is responsible for handling the http requests, +    protected abstract ChannelInboundMessageHandler<?> createHttpRequestHandlerForHttp();, +     * Create the {@link ChannelInboundMessageHandler} that is responsible for handling the http responses, +    protected ChannelInboundMessageHandler<?> createHttpRequestHandlerForSpdy() {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +import io.netty.channel.ChannelInboundByteHandlerAdapter;, +    extends ChannelInboundByteHandlerAdapter {, +    public void inboundBufferUpdated(ChannelHandlerContext ctx, ByteBuf in) throws Exception {, +        callDecode(ctx, in);, +            callDecode(ctx, in);, +    protected void callDecode(ChannelHandlerContext ctx, ByteBuf in) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +import io.netty.channel.ChannelStateHandlerAdapter;, +        extends ChannelStateHandlerAdapter implements ChannelInboundMessageHandler<I> {, +, +    @Override, +    public void freeInboundBuffer(ChannelHandlerContext ctx) throws Exception {, +        ctx.inboundMessageBuffer().free();, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +import io.netty.channel.ChannelInboundMessageHandler;, +     * Create the {@link ChannelInboundMessageHandler} that is responsible for handling the http requests, +    protected abstract ChannelInboundMessageHandler<?> createHttpRequestHandlerForHttp();, +     * Create the {@link ChannelInboundMessageHandler} that is responsible for handling the http responses, +    protected ChannelInboundMessageHandler<?> createHttpRequestHandlerForSpdy() {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +import io.netty.channel.ChannelInboundByteHandlerAdapter;, +    extends ChannelInboundByteHandlerAdapter {, +    public void inboundBufferUpdated(ChannelHandlerContext ctx, ByteBuf in) throws Exception {, +        callDecode(ctx, in);, +            callDecode(ctx, in);, +    protected void callDecode(ChannelHandlerContext ctx, ByteBuf in) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +import io.netty.channel.ChannelStateHandlerAdapter;, +        extends ChannelStateHandlerAdapter implements ChannelInboundMessageHandler<I> {, +, +    @Override, +    public void freeInboundBuffer(ChannelHandlerContext ctx) throws Exception {, +        ctx.inboundMessageBuffer().free();, +    }, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +            callDecode(ctx, in);, +    protected void callDecode(ChannelHandlerContext ctx, ByteBuf buf) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +import io.netty.channel.ChannelInboundMessageHandler;, +     * Create the {@link ChannelInboundMessageHandler} that is responsible for handling the http requests, +    protected abstract ChannelInboundMessageHandler<?> createHttpRequestHandlerForHttp();, +     * Create the {@link ChannelInboundMessageHandler} that is responsible for handling the http responses, +    protected ChannelInboundMessageHandler<?> createHttpRequestHandlerForSpdy() {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +import io.netty.channel.ChannelInboundByteHandlerAdapter;, +    extends ChannelInboundByteHandlerAdapter {, +    public void inboundBufferUpdated(ChannelHandlerContext ctx, ByteBuf in) throws Exception {, +        callDecode(ctx, in);, +            callDecode(ctx, in);, +    protected void callDecode(ChannelHandlerContext ctx, ByteBuf in) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +import io.netty.channel.ChannelStateHandlerAdapter;, +        extends ChannelStateHandlerAdapter implements ChannelInboundMessageHandler<I> {, +, +    @Override, +    public void freeInboundBuffer(ChannelHandlerContext ctx) throws Exception {, +        ctx.inboundMessageBuffer().free();, +    }, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +            callDecode(ctx, in);, +    protected void callDecode(ChannelHandlerContext ctx, ByteBuf buf) {, +++ b/transport/src/main/java/io/netty/bootstrap/ServerBootstrap.java, +import io.netty.channel.ChannelStateHandlerAdapter;, +            extends ChannelStateHandlerAdapter implements ChannelInboundMessageHandler<Channel> {, +, +        @Override, +        public void freeInboundBuffer(ChannelHandlerContext ctx) throws Exception {, +            ctx.inboundMessageBuffer().free();, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +import io.netty.channel.ChannelInboundMessageHandler;, +     * Create the {@link ChannelInboundMessageHandler} that is responsible for handling the http requests, +    protected abstract ChannelInboundMessageHandler<?> createHttpRequestHandlerForHttp();]