[+++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +import io.netty.util.internal.Signal;, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +import io.netty.util.internal.Signal;, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoderBuffer.java, +import io.netty.util.internal.Signal;, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +import io.netty.util.internal.Signal;, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoderBuffer.java, +import io.netty.util.internal.Signal;, +++ b/codec/src/test/java/io/netty/handler/codec/ReplayingDecoderBufferTest.java, +import io.netty.util.internal.Signal;, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +import io.netty.util.internal.Signal;, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoderBuffer.java, +import io.netty.util.internal.Signal;, +++ b/codec/src/test/java/io/netty/handler/codec/ReplayingDecoderBufferTest.java, +import io.netty.util.internal.Signal;, +++ /dev/null, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +import io.netty.util.internal.Signal;, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoderBuffer.java, +import io.netty.util.internal.Signal;, +++ b/codec/src/test/java/io/netty/handler/codec/ReplayingDecoderBufferTest.java, +import io.netty.util.internal.Signal;, +++ /dev/null, +++ b/common/src/main/java/io/netty/util/internal/Signal.java, +/*, + * Copyright 2012 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.util.internal;, +, +, +import io.netty.util.UniqueName;, +, +import java.util.concurrent.ConcurrentHashMap;, +import java.util.concurrent.ConcurrentMap;, +, +public final class Signal extends Error {, +, +    private static final long serialVersionUID = -221145131122459977L;, +, +    private static final ConcurrentMap<String, Boolean> map =, +            new ConcurrentHashMap<String, Boolean>();, +, +    private final UniqueName uname;, +, +    public Signal(String name) {, +        super(name);, +        uname = new UniqueName(map, name);, +    }, +, +    public void expect(Signal signal) {, +        if (this != signal) {, +            throw new IllegalStateException("unexpected signal: " + signal);, +        }, +    }, +, +    @Override, +    public Throwable initCause(Throwable cause) {, +        return this;, +    }, +, +    @Override, +    public Throwable fillInStackTrace() {, +        return this;, +    }, +, +    @Override, +    public String toString() {, +        return uname.name();, +    }, +}]