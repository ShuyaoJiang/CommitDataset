[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +    @Override, +    public boolean isFreed() {, +        if (file == null || !file.exists()) {, +            return true;, +        }, +        return false;, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +    @Override, +    public boolean isFreed() {, +        if (file == null || !file.exists()) {, +            return true;, +        }, +        return false;, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractHttpData.java, +import io.netty.buffer.ByteBuf;, +import io.netty.channel.ChannelException;, +import java.io.IOException;, +, +    @Override, +    public ByteBuf data() {, +        try {, +            return getByteBuf();, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +    @Override, +    public void free() {, +        delete();, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +    @Override, +    public boolean isFreed() {, +        if (file == null || !file.exists()) {, +            return true;, +        }, +        return false;, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractHttpData.java, +import io.netty.buffer.ByteBuf;, +import io.netty.channel.ChannelException;, +import java.io.IOException;, +, +    @Override, +    public ByteBuf data() {, +        try {, +            return getByteBuf();, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +    @Override, +    public void free() {, +        delete();, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractMemoryHttpData.java, +, +    @Override, +    public boolean isFreed() {, +        return data().isFreed();, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +    @Override, +    public boolean isFreed() {, +        if (file == null || !file.exists()) {, +            return true;, +        }, +        return false;, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractHttpData.java, +import io.netty.buffer.ByteBuf;, +import io.netty.channel.ChannelException;, +import java.io.IOException;, +, +    @Override, +    public ByteBuf data() {, +        try {, +            return getByteBuf();, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +    @Override, +    public void free() {, +        delete();, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractMemoryHttpData.java]