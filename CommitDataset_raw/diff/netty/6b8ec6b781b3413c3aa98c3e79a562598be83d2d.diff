[+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoop.java, +    private final boolean allowGrowing;, +    private long[] events;, +        if (maxEvents == 0) {, +            allowGrowing = true;, +            events = new long[128];, +        } else {, +            allowGrowing = false;, +        }, +                if (allowGrowing && ready == events.length) {, +                    // double the size of the array as we needed the whole space for the events, +                    events = new long[events.length << 1];, +                }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoop.java, +    private final boolean allowGrowing;, +    private long[] events;, +        if (maxEvents == 0) {, +            allowGrowing = true;, +            events = new long[128];, +        } else {, +            allowGrowing = false;, +        }, +                if (allowGrowing && ready == events.length) {, +                    // double the size of the array as we needed the whole space for the events, +                    events = new long[events.length << 1];, +                }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoopGroup.java, +    @SuppressWarnings("deprecation"), +        this(nThreads, threadFactory, 0);, +     *, +     * @deprecated  Use {@link #EpollEventLoopGroup(int)}, {@link #EpollEventLoopGroup(int)} or, +     *              {@link #EpollEventLoopGroup(int, ThreadFactory)}, +    @Deprecated]