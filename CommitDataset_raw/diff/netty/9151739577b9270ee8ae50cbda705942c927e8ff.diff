[+++ b/codec/src/main/java/io/netty/handler/codec/compression/Bzip2BlockCompressor.java, +import io.netty.util.ByteProcessor;, +    private final ByteProcessor writeProcessor = new ByteProcessor() {, +        @Override, +        public boolean process(byte value) throws Exception {, +            return write(value);, +        }, +    };, +, +     * @param buffer The buffer to write, +    int write(final ByteBuf buffer, int offset, int length) {, +        int index = buffer.forEachByte(offset, length, writeProcessor);, +        return index == -1 ? length : index - offset;, +++ b/codec/src/main/java/io/netty/handler/codec/compression/Bzip2BlockCompressor.java, +import io.netty.util.ByteProcessor;, +    private final ByteProcessor writeProcessor = new ByteProcessor() {, +        @Override, +        public boolean process(byte value) throws Exception {, +            return write(value);, +        }, +    };, +, +     * @param buffer The buffer to write, +    int write(final ByteBuf buffer, int offset, int length) {, +        int index = buffer.forEachByte(offset, length, writeProcessor);, +        return index == -1 ? length : index - offset;, +++ b/codec/src/main/java/io/netty/handler/codec/compression/Bzip2Encoder.java, +                    final int length = Math.min(in.readableBytes(), blockCompressor.availableSize());, +                    final int bytesWritten = blockCompressor.write(in, in.readerIndex(), length);]