[+++ b/common/src/main/java/io/netty/util/HashedWheelTimer.java, +, +        // Guard against overflow., +        if (delay > 0 && deadline < 0) {, +            deadline = Long.MAX_VALUE;, +        }, +++ b/common/src/main/java/io/netty/util/HashedWheelTimer.java, +, +        // Guard against overflow., +        if (delay > 0 && deadline < 0) {, +            deadline = Long.MAX_VALUE;, +        }, +++ b/common/src/test/java/io/netty/util/HashedWheelTimerTest.java, +    @Test, +    public void testOverflow() throws InterruptedException  {, +        final HashedWheelTimer timer = new HashedWheelTimer();, +        final CountDownLatch latch = new CountDownLatch(1);, +        Timeout timeout = timer.newTimeout(new TimerTask() {, +            @Override, +            public void run(Timeout timeout) {, +                latch.countDown();, +            }, +        }, Long.MAX_VALUE, TimeUnit.MILLISECONDS);, +        assertFalse(latch.await(1, TimeUnit.SECONDS));, +        timeout.cancel();, +        timer.stop();, +    }, +]