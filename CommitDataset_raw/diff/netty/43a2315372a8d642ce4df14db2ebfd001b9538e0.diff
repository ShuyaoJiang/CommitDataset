[+++ b/handler/src/test/java/io/netty/handler/ssl/JdkOpenSslEngineInteroptTest.java, +import org.junit.Test;, +    @Test, +    public void testMutualAuthInvalidIntermediateCASucceedWithOptionalClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());, +        super.testMutualAuthInvalidIntermediateCASucceedWithOptionalClientAuth();, +    }, +, +    @Override, +    @Test, +    public void testMutualAuthInvalidIntermediateCAFailWithOptionalClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());, +        super.testMutualAuthInvalidIntermediateCAFailWithOptionalClientAuth();, +    }, +, +    @Override, +    @Test, +    public void testMutualAuthInvalidIntermediateCAFailWithRequiredClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());, +        super.testMutualAuthInvalidIntermediateCAFailWithRequiredClientAuth();, +    }, +, +    @Override, +    @Test, +    public void testMutualAuthValidClientCertChainTooLongFailOptionalClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());, +        super.testMutualAuthValidClientCertChainTooLongFailOptionalClientAuth();, +    }, +, +    @Override, +    @Test, +    public void testMutualAuthValidClientCertChainTooLongFailRequireClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());, +        super.testMutualAuthValidClientCertChainTooLongFailRequireClientAuth();, +    }, +, +    @Override, +++ b/handler/src/test/java/io/netty/handler/ssl/JdkOpenSslEngineInteroptTest.java, +import org.junit.Test;, +    @Test, +    public void testMutualAuthInvalidIntermediateCASucceedWithOptionalClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());, +        super.testMutualAuthInvalidIntermediateCASucceedWithOptionalClientAuth();, +    }, +, +    @Override, +    @Test, +    public void testMutualAuthInvalidIntermediateCAFailWithOptionalClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());, +        super.testMutualAuthInvalidIntermediateCAFailWithOptionalClientAuth();, +    }, +, +    @Override, +    @Test, +    public void testMutualAuthInvalidIntermediateCAFailWithRequiredClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());, +        super.testMutualAuthInvalidIntermediateCAFailWithRequiredClientAuth();, +    }, +, +    @Override, +    @Test, +    public void testMutualAuthValidClientCertChainTooLongFailOptionalClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());, +        super.testMutualAuthValidClientCertChainTooLongFailOptionalClientAuth();, +    }, +, +    @Override, +    @Test, +    public void testMutualAuthValidClientCertChainTooLongFailRequireClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());, +        super.testMutualAuthValidClientCertChainTooLongFailRequireClientAuth();, +    }, +, +    @Override, +++ b/handler/src/test/java/io/netty/handler/ssl/OpenSslEngineTest.java, +    @Override, +    @Test, +    public void testMutualAuthInvalidIntermediateCASucceedWithOptionalClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());, +        super.testMutualAuthInvalidIntermediateCASucceedWithOptionalClientAuth();, +    }, +, +    @Override, +    @Test, +    public void testMutualAuthInvalidIntermediateCAFailWithOptionalClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());, +        super.testMutualAuthInvalidIntermediateCAFailWithOptionalClientAuth();, +    }, +, +    @Override, +    @Test, +    public void testMutualAuthInvalidIntermediateCAFailWithRequiredClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());, +        super.testMutualAuthInvalidIntermediateCAFailWithRequiredClientAuth();, +    }, +, +    @Override, +    @Test, +    public void testMutualAuthValidClientCertChainTooLongFailOptionalClientAuth() throws Exception {, +        assumeTrue(OpenSsl.supportsKeyManagerFactory());]