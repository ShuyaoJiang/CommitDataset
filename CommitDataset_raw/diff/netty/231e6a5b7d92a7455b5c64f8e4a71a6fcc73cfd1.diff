[+++ b/codec/src/main/java/io/netty/handler/codec/json/JsonObjectDecoder.java, +    private int lastReaderIndex;, +, +        if (this.idx > in.readerIndex() && lastReaderIndex != in.readerIndex()) {, +            this.idx = in.readerIndex();, +            reset();, +        }, +, +        this.lastReaderIndex = in.readerIndex();, +++ b/codec/src/main/java/io/netty/handler/codec/json/JsonObjectDecoder.java, +    private int lastReaderIndex;, +, +        if (this.idx > in.readerIndex() && lastReaderIndex != in.readerIndex()) {, +            this.idx = in.readerIndex();, +            reset();, +        }, +, +        this.lastReaderIndex = in.readerIndex();, +++ b/codec/src/test/java/io/netty/handler/codec/json/JsonObjectDecoderTest.java, +, +    @Test, +    public void testCorruptedFrameException() {, +        final String part1 = "{\"a\":{\"b\":{\"c\":{ \"d\":\"27301\", \"med\":\"d\", \"path\":\"27310\"} }," +, +                " \"status\":\"OK\" } }{\"";, +        final String part2 = "a\":{\"b\":{\"c\":{\"ory\":[{\"competi\":[{\"event\":[{" + "\"externalI\":{\"external\"" +, +                ":[{\"id\":\"O\"} ]";, +, +        EmbeddedChannel ch = new EmbeddedChannel(new JsonObjectDecoder());, +, +        ByteBuf res;, +, +        ch.writeInbound(Unpooled.copiedBuffer(part1, CharsetUtil.UTF_8));, +        res = ch.readInbound();, +        assertEquals("{\"a\":{\"b\":{\"c\":{ \"d\":\"27301\", \"med\":\"d\", \"path\":\"27310\"} }, " +, +                "\"status\":\"OK\" } }", res.toString(CharsetUtil.UTF_8));, +        res.release();, +, +        ch.writeInbound(Unpooled.copiedBuffer(part2, CharsetUtil.UTF_8));, +        res = ch.readInbound();, +, +        assertNull(res);, +, +        ch.writeInbound(Unpooled.copiedBuffer("}}]}]}]}}}}", CharsetUtil.UTF_8));, +        res = ch.readInbound();, +, +        assertEquals("{\"a\":{\"b\":{\"c\":{\"ory\":[{\"competi\":[{\"event\":[{" + "\"externalI\":{" +, +                "\"external\":[{\"id\":\"O\"} ]}}]}]}]}}}}", res.toString(CharsetUtil.UTF_8));, +        res.release();, +, +        assertFalse(ch.finish());, +    }]