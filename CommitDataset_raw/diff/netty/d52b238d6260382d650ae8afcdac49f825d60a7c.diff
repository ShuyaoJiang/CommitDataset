[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioWorker.java, +import java.nio.channels.NotYetConnectedException;, +        if (!channel.isConnected()) {, +            cleanUpWriteBuffer(channel);, +            return;, +        }, +, +        boolean open = true;, +                    if (t instanceof IOException) {, +                        open = false;, +                        close(channel, channel.getSucceededFuture());, +                    }, +        if (open) {, +    }, +        boolean open = true;, +                    if (t instanceof IOException) {, +                        open = false;, +                        close(channel, channel.getSucceededFuture());, +                    }, +        if (open) {, +    }, +, +                cleanUpWriteBuffer(channel);, +    private static void cleanUpWriteBuffer(NioSocketChannel channel) {, +        // Create the exception only once to avoid the excessive overhead, +        // caused by fillStackTrace., +        Exception cause;, +        if (channel.isOpen()) {, +            cause = new NotYetConnectedException();, +        } else {, +            cause = new ClosedChannelException();, +        }, +, +        // Clean up the stale messages in the write buffer., +        synchronized (channel.writeBuffer) {, +            MessageEvent evt = channel.currentWriteEvent;, +            if (evt != null) {, +                channel.currentWriteEvent = null;, +                channel.currentWriteIndex = 0;, +                evt.getFuture().setFailure(cause);, +                fireExceptionCaught(channel, cause);, +            }, +, +            for (;;) {, +                evt = channel.writeBuffer.poll();, +                if (evt == null) {, +                    break;, +                }, +, +                evt.getFuture().setFailure(cause);, +                fireExceptionCaught(channel, cause);, +            }, +        }, +    }, +]