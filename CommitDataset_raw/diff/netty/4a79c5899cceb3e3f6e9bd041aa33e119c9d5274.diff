[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java, +import io.netty.util.internal.logging.InternalLogger;, +import io.netty.util.internal.logging.InternalLoggerFactory;, +    private static final InternalLogger logger = InternalLoggerFactory.getInstance(DefaultHttp2Connection.class);, +        for (int i = 0; i < listeners.size(); ++i) {, +            try {, +                listeners.get(i).onGoAwayReceived(lastKnownStream, errorCode, debugData);, +            } catch (RuntimeException e) {, +                logger.error("Caught RuntimeException from listener onGoAwayReceived.", e);, +            }, +        for (int i = 0; i < listeners.size(); ++i) {, +            try {, +                listeners.get(i).onGoAwaySent(lastKnownStream, errorCode, debugData);, +            } catch (RuntimeException e) {, +                logger.error("Caught RuntimeException from listener onGoAwaySent.", e);, +            }, +                try {, +                } catch (RuntimeException e) {, +                    logger.error("Caught RuntimeException from listener onStreamRemoved.", e);, +                }, +                try {, +                } catch (RuntimeException e) {, +                    logger.error("Caught RuntimeException from listener onStreamHalfClosed.", e);, +                }, +                    try {, +                    } catch (RuntimeException e) {, +                        logger.error("Caught RuntimeException from listener onWeightChanged.", e);, +                    }, +            try {, +            } catch (RuntimeException e) {, +                logger.error("Caught RuntimeException from listener onPriorityTreeParentChanged.", e);, +            }, +            try {, +            } catch (RuntimeException e) {, +                logger.error("Caught RuntimeException from listener onPriorityTreeParentChanging.", e);, +            }, +                try {, +                } catch (RuntimeException e) {, +                    logger.error("Caught RuntimeException from listener onStreamAdded.", e);, +                }, +             * <p>, +             * If a {@link RuntimeException} object is thrown it will be logged and <strong>not propagated</strong>., +             * Throwing from this method is not supported and is considered a programming error., +                        try {, +                        } catch (RuntimeException e) {, +                            logger.error("Caught RuntimeException while processing pending ActiveStreams$Event.", e);, +                        }, +                    try {, +                    } catch (RuntimeException e) {, +                        logger.error("Caught RuntimeException from listener onStreamActive.", e);, +                    }, +                        try {, +                        } catch (RuntimeException e) {, +                            logger.error("Caught RuntimeException from listener onStreamClosed.", e);, +                        }, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java, +import io.netty.util.internal.logging.InternalLogger;, +import io.netty.util.internal.logging.InternalLoggerFactory;, +    private static final InternalLogger logger = InternalLoggerFactory.getInstance(DefaultHttp2Connection.class);, +        for (int i = 0; i < listeners.size(); ++i) {, +            try {, +                listeners.get(i).onGoAwayReceived(lastKnownStream, errorCode, debugData);, +            } catch (RuntimeException e) {, +                logger.error("Caught RuntimeException from listener onGoAwayReceived.", e);, +            }, +        for (int i = 0; i < listeners.size(); ++i) {, +            try {, +                listeners.get(i).onGoAwaySent(lastKnownStream, errorCode, debugData);, +            } catch (RuntimeException e) {, +                logger.error("Caught RuntimeException from listener onGoAwaySent.", e);, +            }, +                try {, +                } catch (RuntimeException e) {, +                    logger.error("Caught RuntimeException from listener onStreamRemoved.", e);, +                }, +                try {, +                } catch (RuntimeException e) {, +                    logger.error("Caught RuntimeException from listener onStreamHalfClosed.", e);, +                }, +                    try {, +                    } catch (RuntimeException e) {, +                        logger.error("Caught RuntimeException from listener onWeightChanged.", e);, +                    }, +            try {, +            } catch (RuntimeException e) {, +                logger.error("Caught RuntimeException from listener onPriorityTreeParentChanged.", e);, +            }, +            try {, +            } catch (RuntimeException e) {, +                logger.error("Caught RuntimeException from listener onPriorityTreeParentChanging.", e);, +            }, +                try {, +                } catch (RuntimeException e) {, +                    logger.error("Caught RuntimeException from listener onStreamAdded.", e);, +                }, +             * <p>, +             * If a {@link RuntimeException} object is thrown it will be logged and <strong>not propagated</strong>., +             * Throwing from this method is not supported and is considered a programming error., +                        try {, +                        } catch (RuntimeException e) {]