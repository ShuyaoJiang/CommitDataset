[+++ b/common/src/main/java/io/netty/util/internal/QueueFactory.java, +import org.jboss.netty.logging.InternalLogger;, +import org.jboss.netty.logging.InternalLoggerFactory;, +, +    private static final InternalLogger LOGGER = InternalLoggerFactory.getInstance(QueueFactory.class);, +        try {, +        } catch (Throwable t) {, +            // For whatever reason an exception was thrown while loading the LinkedTransferQueue, +            //, +            // This mostly happens because of a custom classloader or security policy that did not allow us to access the, +            // com.sun.Unmisc class. So just log it and fallback to the old LegacyLinkedTransferQueue that works in all cases, +            LOGGER.debug("Unable to instance LinkedTransferQueue, fallback to LegacyLinkedTransferQueue", t);, +        }, +        , +        return new LegacyLinkedTransferQueue<T>();, +       , +        try {, +        } catch (Throwable t) {, +            // For whatever reason an exception was thrown while loading the LinkedTransferQueue, +            //, +            // This mostly happens because of a custom classloader or security policy that did not allow us to access the, +            // com.sun.Unmisc class. So just log it and fallback to the old LegacyLinkedTransferQueue that works in all cases, +            LOGGER.debug("Unable to instance LinkedTransferQueue, fallback to LegacyLinkedTransferQueue", t);, +        }, +         , +        return new LegacyLinkedTransferQueue<T>(collection);, +        ]