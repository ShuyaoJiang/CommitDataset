[+++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DefaultDnsRecordDecoder.java, +            return new DefaultDnsPtrRecord(name, dnsClass, timeToLive, decodeName0(in));, +    protected String decodeName0(ByteBuf in) {, +        return decodeName(in);, +    }, +, +    /**, +     * Retrieves a domain name given a buffer containing a DNS packet. If the, +     * name contains a pointer, the position of the buffer will be set to, +     * directly after the pointer's index after the name has been read., +     *, +     * @param in the byte buffer containing the DNS packet, +     * @return the domain name for an entry, +     */, +    public static String decodeName(ByteBuf in) {, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DefaultDnsRecordDecoder.java, +            return new DefaultDnsPtrRecord(name, dnsClass, timeToLive, decodeName0(in));, +    protected String decodeName0(ByteBuf in) {, +        return decodeName(in);, +    }, +, +    /**, +     * Retrieves a domain name given a buffer containing a DNS packet. If the, +     * name contains a pointer, the position of the buffer will be set to, +     * directly after the pointer's index after the name has been read., +     *, +     * @param in the byte buffer containing the DNS packet, +     * @return the domain name for an entry, +     */, +    public static String decodeName(ByteBuf in) {, +++ b/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverContext.java, +import io.netty.handler.codec.CorruptedFrameException;, +    static String decodeDomainName(ByteBuf in) {, +        in.markReaderIndex();, +            return DefaultDnsRecordDecoder.decodeName(in);, +        } catch (CorruptedFrameException e) {, +            // In this case we just return null., +            in.resetReaderIndex();]