[+++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/AbstractDatagramMulticastTest.java, +        NetworkInterface iface = NetworkInterface.getByInetAddress(InetAddress.getLoopbackAddress());, +, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/AbstractDatagramMulticastTest.java, +        NetworkInterface iface = NetworkInterface.getByInetAddress(InetAddress.getLoopbackAddress());, +, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/nio/oio/NioOioDatagramMulticastTest.java, +        return new NioDatagramChannelFactory(executor);, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/AbstractDatagramMulticastTest.java, +        NetworkInterface iface = NetworkInterface.getByInetAddress(InetAddress.getLoopbackAddress());, +, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/nio/oio/NioOioDatagramMulticastTest.java, +        return new NioDatagramChannelFactory(executor);, +++ b/transport-sctp/src/test/java/io/netty/testsuite/transport/AbstractSocketServerBootstrapTest.java, +        } catch (Exception e) {, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/AbstractDatagramMulticastTest.java, +        NetworkInterface iface = NetworkInterface.getByInetAddress(InetAddress.getLoopbackAddress());, +, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/nio/oio/NioOioDatagramMulticastTest.java, +        return new NioDatagramChannelFactory(executor);, +++ b/transport-sctp/src/test/java/io/netty/testsuite/transport/AbstractSocketServerBootstrapTest.java, +        } catch (Exception e) {, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +import java.io.IOException;, +import java.net.InetSocketAddress;, +import java.net.SocketAddress;, +import java.nio.channels.NotYetConnectedException;, +import java.nio.channels.SelectionKey;, +, +    EventLoop eventLoop();, +, +, +    ChannelFuture deregister();, +    void deregister(ChannelFuture future);, +, +    Unsafe unsafe();, +, +    public interface Unsafe {, +        void setEventLoop(EventLoop eventLoop);, +        void clearEventLoop();, +        java.nio.channels.Channel ch();, +, +        void bind(SocketAddress local) throws IOException;, +        void connect(SocketAddress remote) throws IOException;, +        boolean finishConnect() throws IOException;, +        boolean read() throws IOException;, +        boolean write() throws IOException;, +        void unbind() throws IOException;, +        void disconnect() throws IOException;, +        void close() throws IOException;, +    }, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/AbstractDatagramMulticastTest.java, +        NetworkInterface iface = NetworkInterface.getByInetAddress(InetAddress.getLoopbackAddress());, +, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/nio/oio/NioOioDatagramMulticastTest.java, +        return new NioDatagramChannelFactory(executor);, +++ b/transport-sctp/src/test/java/io/netty/testsuite/transport/AbstractSocketServerBootstrapTest.java, +        } catch (Exception e) {, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +import java.io.IOException;, +import java.net.InetSocketAddress;, +import java.net.SocketAddress;, +import java.nio.channels.NotYetConnectedException;, +import java.nio.channels.SelectionKey;, +, +    EventLoop eventLoop();, +, +, +    ChannelFuture deregister();, +    void deregister(ChannelFuture future);, +, +    Unsafe unsafe();, +, +    public interface Unsafe {, +        void setEventLoop(EventLoop eventLoop);, +        void clearEventLoop();, +        java.nio.channels.Channel ch();, +, +        void bind(SocketAddress local) throws IOException;, +        void connect(SocketAddress remote) throws IOException;, +        boolean finishConnect() throws IOException;, +        boolean read() throws IOException;, +        boolean write() throws IOException;, +        void unbind() throws IOException;, +        void disconnect() throws IOException;, +        void close() throws IOException;, +    }, +++ b/transport/src/main/java/io/netty/channel/EventLoop.java, +package io.netty.channel;, +, +import java.util.concurrent.ExecutorService;, +, +public interface EventLoop extends ExecutorService {, +    ChannelFuture register(Channel channel);, +    void register(Channel channel, ChannelFuture future);, +    boolean inEventLoop();, +}, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/AbstractDatagramMulticastTest.java, +        NetworkInterface iface = NetworkInterface.getByInetAddress(InetAddress.getLoopbackAddress());, +]