[+++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +, +        // If the list is empty we need to assign a new one because, +        // we get a List that is immutable. , +        //, +        // See https://github.com/netty/netty/issues/325, +        if (list.isEmpty()) {, +            list = new ArrayList<ChannelBuffer>(1);, +        }, +        , +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +, +        // If the list is empty we need to assign a new one because, +        // we get a List that is immutable. , +        //, +        // See https://github.com/netty/netty/issues/325, +        if (list.isEmpty()) {, +            list = new ArrayList<ChannelBuffer>(1);, +        }, +        , +++ b/buffer/src/test/java/io/netty/buffer/AbstractChannelBufferTest.java, +    , +    // Test case for https://github.com/netty/netty/issues/325, +    @Test, +    public void testDiscardAllReadBytes() {, +        buffer.writerIndex(buffer.capacity());, +        buffer.readerIndex(buffer.writerIndex());, +        buffer.discardReadBytes();, +    }, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +, +        // If the list is empty we need to assign a new one because, +        // we get a List that is immutable. , +        //, +        // See https://github.com/netty/netty/issues/325, +        if (list.isEmpty()) {, +            list = new ArrayList<ChannelBuffer>(1);, +        }, +        , +++ b/buffer/src/test/java/io/netty/buffer/AbstractChannelBufferTest.java, +    , +    // Test case for https://github.com/netty/netty/issues/325, +    @Test, +    public void testDiscardAllReadBytes() {, +        buffer.writerIndex(buffer.capacity());, +        buffer.readerIndex(buffer.writerIndex());, +        buffer.discardReadBytes();, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     *            CSV of requested subprotocol(s) sent to the server., +        this.expectedSubprotocol = subprotocol;, +     * Returns the CSV of requested subprotocol(s) sent to the server as specified in the constructor, +     * Returns the subprotocol response sent by the server. Only available after end of handshake., +     * Null if no subprotocol was requested or confirmed by the server., +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +, +        // If the list is empty we need to assign a new one because, +        // we get a List that is immutable. , +        //, +        // See https://github.com/netty/netty/issues/325, +        if (list.isEmpty()) {, +            list = new ArrayList<ChannelBuffer>(1);, +        }, +        , +++ b/buffer/src/test/java/io/netty/buffer/AbstractChannelBufferTest.java, +    , +    // Test case for https://github.com/netty/netty/issues/325, +    @Test, +    public void testDiscardAllReadBytes() {, +        buffer.writerIndex(buffer.capacity());, +        buffer.readerIndex(buffer.writerIndex());, +        buffer.discardReadBytes();, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     *            CSV of requested subprotocol(s) sent to the server., +        this.expectedSubprotocol = subprotocol;, +     * Returns the CSV of requested subprotocol(s) sent to the server as specified in the constructor, +     * Returns the subprotocol response sent by the server. Only available after end of handshake., +     * Null if no subprotocol was requested or confirmed by the server., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java, +        String expectedSubprotocol = this.getExpectedSubprotocol(); , +        if (expectedSubprotocol != null && !expectedSubprotocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, expectedSubprotocol);, +, +        String subprotocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(subprotocol);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +, +        // If the list is empty we need to assign a new one because, +        // we get a List that is immutable. , +        //, +        // See https://github.com/netty/netty/issues/325, +        if (list.isEmpty()) {, +            list = new ArrayList<ChannelBuffer>(1);, +        }, +        , +++ b/buffer/src/test/java/io/netty/buffer/AbstractChannelBufferTest.java, +    , +    // Test case for https://github.com/netty/netty/issues/325, +    @Test]