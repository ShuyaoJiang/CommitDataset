[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/Cookie.java, +     * Returns the maximum age of this {@link Cookie} in seconds or {@link Long#MIN_VALUE} if unspecified, +     * If {@link Long#MIN_VALUE} is specified, this {@link Cookie} will be removed when the, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/Cookie.java, +     * Returns the maximum age of this {@link Cookie} in seconds or {@link Long#MIN_VALUE} if unspecified, +     * If {@link Long#MIN_VALUE} is specified, this {@link Cookie} will be removed when the, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java, +    private long maxAge = Long.MIN_VALUE;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/Cookie.java, +     * Returns the maximum age of this {@link Cookie} in seconds or {@link Long#MIN_VALUE} if unspecified, +     * If {@link Long#MIN_VALUE} is specified, this {@link Cookie} will be removed when the, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java, +    private long maxAge = Long.MIN_VALUE;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/ServerCookieEncoder.java, +        if (cookie.getMaxAge() != Long.MIN_VALUE) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/Cookie.java, +     * Returns the maximum age of this {@link Cookie} in seconds or {@link Long#MIN_VALUE} if unspecified, +     * If {@link Long#MIN_VALUE} is specified, this {@link Cookie} will be removed when the, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java, +    private long maxAge = Long.MIN_VALUE;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/ServerCookieEncoder.java, +        if (cookie.getMaxAge() != Long.MIN_VALUE) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySession.java, +import java.util.Queue;, +import java.util.concurrent.ConcurrentLinkedQueue;, +        private final Queue<Object> pendingWriteQueue = new ConcurrentLinkedQueue<Object>();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/Cookie.java, +     * Returns the maximum age of this {@link Cookie} in seconds or {@link Long#MIN_VALUE} if unspecified, +     * If {@link Long#MIN_VALUE} is specified, this {@link Cookie} will be removed when the, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java, +    private long maxAge = Long.MIN_VALUE;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/ServerCookieEncoder.java, +        if (cookie.getMaxAge() != Long.MIN_VALUE) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySession.java, +import java.util.Queue;, +import java.util.concurrent.ConcurrentLinkedQueue;, +        private final Queue<Object> pendingWriteQueue = new ConcurrentLinkedQueue<Object>();, +++ b/common/src/main/java/io/netty/logging/AbstractInternalLogger.java, +        case TRACE:, +            return isTraceEnabled();, +        case TRACE:, +            trace(msg, cause);, +            break;, +        case TRACE:, +            trace(msg);, +            break;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/Cookie.java, +     * Returns the maximum age of this {@link Cookie} in seconds or {@link Long#MIN_VALUE} if unspecified, +     * If {@link Long#MIN_VALUE} is specified, this {@link Cookie} will be removed when the, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java, +    private long maxAge = Long.MIN_VALUE;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/ServerCookieEncoder.java, +        if (cookie.getMaxAge() != Long.MIN_VALUE) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySession.java, +import java.util.Queue;, +import java.util.concurrent.ConcurrentLinkedQueue;, +        private final Queue<Object> pendingWriteQueue = new ConcurrentLinkedQueue<Object>();, +++ b/common/src/main/java/io/netty/logging/AbstractInternalLogger.java, +        case TRACE:, +            return isTraceEnabled();, +        case TRACE:, +            trace(msg, cause);, +            break;, +        case TRACE:, +            trace(msg);, +            break;, +++ b/common/src/main/java/io/netty/logging/CommonsLogger.java, +    public void trace(String msg) {, +        logger.trace(msg);, +    }, +, +    @Override, +    public void trace(String msg, Throwable cause) {, +        logger.trace(msg, cause);, +    }, +, +    @Override, +    public boolean isTraceEnabled() {, +        return logger.isTraceEnabled();, +    }, +, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/Cookie.java, +     * Returns the maximum age of this {@link Cookie} in seconds or {@link Long#MIN_VALUE} if unspecified, +     * If {@link Long#MIN_VALUE} is specified, this {@link Cookie} will be removed when the, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java, +    private long maxAge = Long.MIN_VALUE;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/ServerCookieEncoder.java, +        if (cookie.getMaxAge() != Long.MIN_VALUE) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySession.java, +import java.util.Queue;, +import java.util.concurrent.ConcurrentLinkedQueue;, +        private final Queue<Object> pendingWriteQueue = new ConcurrentLinkedQueue<Object>();, +++ b/common/src/main/java/io/netty/logging/AbstractInternalLogger.java, +        case TRACE:, +            return isTraceEnabled();, +        case TRACE:, +            trace(msg, cause);, +            break;, +        case TRACE:]