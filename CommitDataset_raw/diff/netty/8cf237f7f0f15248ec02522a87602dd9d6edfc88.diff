[+++ b/src/main/java/org/jboss/netty/handler/timeout/IdleStateHandler.java, +        if (readerIdleTime <= 0) {, +            readerIdleTimeMillis = 0;, +        } else {, +            readerIdleTimeMillis = Math.max(unit.toMillis(readerIdleTime), 1);, +        }, +        if (writerIdleTime <= 0) {, +            writerIdleTimeMillis = 0;, +        } else {, +            writerIdleTimeMillis = Math.max(unit.toMillis(writerIdleTime), 1);, +        }, +        if (allIdleTime <= 0) {, +            allIdleTimeMillis = 0;, +        } else {, +            allIdleTimeMillis = Math.max(unit.toMillis(allIdleTime), 1);, +        }, +++ b/src/main/java/org/jboss/netty/handler/timeout/IdleStateHandler.java, +        if (readerIdleTime <= 0) {, +            readerIdleTimeMillis = 0;, +        } else {, +            readerIdleTimeMillis = Math.max(unit.toMillis(readerIdleTime), 1);, +        }, +        if (writerIdleTime <= 0) {, +            writerIdleTimeMillis = 0;, +        } else {, +            writerIdleTimeMillis = Math.max(unit.toMillis(writerIdleTime), 1);, +        }, +        if (allIdleTime <= 0) {, +            allIdleTimeMillis = 0;, +        } else {, +            allIdleTimeMillis = Math.max(unit.toMillis(allIdleTime), 1);, +        }, +++ b/src/main/java/org/jboss/netty/handler/timeout/ReadTimeoutHandler.java, +        if (timeout <= 0) {, +            throw new IllegalArgumentException(, +                    "timeout: " + timeout + " (expected: a positive integer)");, +        }, +        timeoutMillis = Math.max(unit.toMillis(timeout), 1);, +++ b/src/main/java/org/jboss/netty/handler/timeout/IdleStateHandler.java, +        if (readerIdleTime <= 0) {, +            readerIdleTimeMillis = 0;, +        } else {, +            readerIdleTimeMillis = Math.max(unit.toMillis(readerIdleTime), 1);, +        }, +        if (writerIdleTime <= 0) {, +            writerIdleTimeMillis = 0;, +        } else {, +            writerIdleTimeMillis = Math.max(unit.toMillis(writerIdleTime), 1);, +        }, +        if (allIdleTime <= 0) {, +            allIdleTimeMillis = 0;, +        } else {, +            allIdleTimeMillis = Math.max(unit.toMillis(allIdleTime), 1);, +        }, +++ b/src/main/java/org/jboss/netty/handler/timeout/ReadTimeoutHandler.java, +        if (timeout <= 0) {, +            throw new IllegalArgumentException(, +                    "timeout: " + timeout + " (expected: a positive integer)");, +        }, +        timeoutMillis = Math.max(unit.toMillis(timeout), 1);, +++ b/src/main/java/org/jboss/netty/handler/timeout/WriteTimeoutHandler.java, +        if (timeout <= 0) {, +            throw new IllegalArgumentException(, +                    "timeout: " + timeout + " (expected: a positive integer)");, +        }, +        timeoutMillis = Math.max(unit.toMillis(timeout), 1);]