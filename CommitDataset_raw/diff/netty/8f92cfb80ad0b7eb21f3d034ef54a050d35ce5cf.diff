[+++ b/src/main/java/org/jboss/netty/channel/Channels.java, +        return new DownstreamMessageEvent(channel, future, message, remoteAddress);, +                new UpstreamChannelStateEvent(, +                        channel, ChannelState.OPEN, Boolean.TRUE));, +        ctx.sendUpstream(new UpstreamChannelStateEvent(, +                ctx.getChannel(), ChannelState.OPEN, Boolean.TRUE));, +                new UpstreamChannelStateEvent(, +                        channel, ChannelState.BOUND, localAddress));, +        ctx.sendUpstream(new UpstreamChannelStateEvent(, +                ctx.getChannel(), ChannelState.BOUND, localAddress));, +                new UpstreamChannelStateEvent(, +                        channel, ChannelState.CONNECTED, remoteAddress));, +        ctx.sendUpstream(new UpstreamChannelStateEvent(, +                ctx.getChannel(), ChannelState.CONNECTED, remoteAddress));, +                new UpstreamMessageEvent(channel, message, remoteAddress));, +        ctx.sendUpstream(new UpstreamMessageEvent(ctx.getChannel(), message, null));, +        ctx.sendUpstream(new UpstreamMessageEvent(, +                ctx.getChannel(), message, remoteAddress));, +                new DefaultWriteCompletionEvent(channel, amount));, +        ctx.sendUpstream(new DefaultWriteCompletionEvent(ctx.getChannel(), amount));, +                new UpstreamChannelStateEvent(, +                        channel, ChannelState.INTEREST_OPS, Channel.OP_READ));, +                new UpstreamChannelStateEvent(, +                        ctx.getChannel(), ChannelState.INTEREST_OPS, Channel.OP_READ));, +                new UpstreamChannelStateEvent(, +                        channel, ChannelState.CONNECTED, null));, +        ctx.sendUpstream(new UpstreamChannelStateEvent(, +                ctx.getChannel(), ChannelState.CONNECTED, null));, +        channel.getPipeline().sendUpstream(new UpstreamChannelStateEvent(, +                channel, ChannelState.BOUND, null));, +        ctx.sendUpstream(new UpstreamChannelStateEvent(, +                ctx.getChannel(), ChannelState.BOUND, null));, +                new UpstreamChannelStateEvent(, +                        channel, ChannelState.OPEN, Boolean.FALSE));, +                new UpstreamChannelStateEvent(, +                        ctx.getChannel(), ChannelState.OPEN, Boolean.FALSE));, +                new DefaultExceptionEvent(channel, cause));, +        ctx.sendUpstream(new DefaultExceptionEvent(ctx.getChannel(), cause));, +                new DefaultChildChannelStateEvent(channel, childChannel));, +        channel.getPipeline().sendDownstream(new DownstreamChannelStateEvent(, +        ctx.sendDownstream(new DownstreamChannelStateEvent(, +        ctx.sendDownstream(new DownstreamChannelStateEvent(, +        channel.getPipeline().sendDownstream(new DownstreamChannelStateEvent(, +        channel.getPipeline().sendDownstream(new DownstreamChannelStateEvent(, +        ctx.sendDownstream(new DownstreamChannelStateEvent(, +                new DownstreamMessageEvent(channel, future, message, remoteAddress));, +                new DownstreamMessageEvent(ctx.getChannel(), future, message, remoteAddress));, +        channel.getPipeline().sendDownstream(new DownstreamChannelStateEvent(, +                new DownstreamChannelStateEvent(, +        channel.getPipeline().sendDownstream(new DownstreamChannelStateEvent(, +        ctx.sendDownstream(new DownstreamChannelStateEvent(, +        channel.getPipeline().sendDownstream(new DownstreamChannelStateEvent(, +        ctx.sendDownstream(new DownstreamChannelStateEvent(, +++ b/src/main/java/org/jboss/netty/channel/Channels.java, +        return new DownstreamMessageEvent(channel, future, message, remoteAddress);, +                new UpstreamChannelStateEvent(, +                        channel, ChannelState.OPEN, Boolean.TRUE));, +        ctx.sendUpstream(new UpstreamChannelStateEvent(, +                ctx.getChannel(), ChannelState.OPEN, Boolean.TRUE));, +                new UpstreamChannelStateEvent(, +                        channel, ChannelState.BOUND, localAddress));, +        ctx.sendUpstream(new UpstreamChannelStateEvent(, +                ctx.getChannel(), ChannelState.BOUND, localAddress));, +                new UpstreamChannelStateEvent(, +                        channel, ChannelState.CONNECTED, remoteAddress));, +        ctx.sendUpstream(new UpstreamChannelStateEvent(, +                ctx.getChannel(), ChannelState.CONNECTED, remoteAddress));, +                new UpstreamMessageEvent(channel, message, remoteAddress));, +        ctx.sendUpstream(new UpstreamMessageEvent(ctx.getChannel(), message, null));, +        ctx.sendUpstream(new UpstreamMessageEvent(, +                ctx.getChannel(), message, remoteAddress));, +                new DefaultWriteCompletionEvent(channel, amount));, +        ctx.sendUpstream(new DefaultWriteCompletionEvent(ctx.getChannel(), amount));, +                new UpstreamChannelStateEvent(, +                        channel, ChannelState.INTEREST_OPS, Channel.OP_READ));, +                new UpstreamChannelStateEvent(, +                        ctx.getChannel(), ChannelState.INTEREST_OPS, Channel.OP_READ));, +                new UpstreamChannelStateEvent(, +                        channel, ChannelState.CONNECTED, null));, +        ctx.sendUpstream(new UpstreamChannelStateEvent(, +                ctx.getChannel(), ChannelState.CONNECTED, null));, +        channel.getPipeline().sendUpstream(new UpstreamChannelStateEvent(, +                channel, ChannelState.BOUND, null));, +        ctx.sendUpstream(new UpstreamChannelStateEvent(, +                ctx.getChannel(), ChannelState.BOUND, null));, +                new UpstreamChannelStateEvent(, +                        channel, ChannelState.OPEN, Boolean.FALSE));, +                new UpstreamChannelStateEvent(, +                        ctx.getChannel(), ChannelState.OPEN, Boolean.FALSE));, +                new DefaultExceptionEvent(channel, cause));, +        ctx.sendUpstream(new DefaultExceptionEvent(ctx.getChannel(), cause));, +                new DefaultChildChannelStateEvent(channel, childChannel));, +        channel.getPipeline().sendDownstream(new DownstreamChannelStateEvent(, +        ctx.sendDownstream(new DownstreamChannelStateEvent(, +        ctx.sendDownstream(new DownstreamChannelStateEvent(, +        channel.getPipeline().sendDownstream(new DownstreamChannelStateEvent(, +        channel.getPipeline().sendDownstream(new DownstreamChannelStateEvent(, +        ctx.sendDownstream(new DownstreamChannelStateEvent(, +                new DownstreamMessageEvent(channel, future, message, remoteAddress));, +                new DownstreamMessageEvent(ctx.getChannel(), future, message, remoteAddress));]