[+++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/AbstractSocketSpdyEchoTest.java, +    @Test(timeout = 10000), +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/AbstractSocketSpdyEchoTest.java, +    @Test(timeout = 10000), +++ b/example/src/main/java/io/netty/example/sctp/SctpClientHandler.java, +import io.netty.channel.sctp.SctpFrame;, +        stateEvent.getChannel().write(new SctpFrame(0, 0, ChannelBuffers.wrappedBuffer("SCTP ECHO".getBytes())));, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/AbstractSocketSpdyEchoTest.java, +    @Test(timeout = 10000), +++ b/example/src/main/java/io/netty/example/sctp/SctpClientHandler.java, +import io.netty.channel.sctp.SctpFrame;, +        stateEvent.getChannel().write(new SctpFrame(0, 0, ChannelBuffers.wrappedBuffer("SCTP ECHO".getBytes())));, +++ b/transport-sctp/pom.xml, +    <dependency>, +      <groupId>${project.groupId}</groupId>, +      <artifactId>netty-codec</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +      <groupId>${project.groupId}</groupId>, +      <artifactId>netty-handler</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/AbstractSocketSpdyEchoTest.java, +    @Test(timeout = 10000), +++ b/example/src/main/java/io/netty/example/sctp/SctpClientHandler.java, +import io.netty.channel.sctp.SctpFrame;, +        stateEvent.getChannel().write(new SctpFrame(0, 0, ChannelBuffers.wrappedBuffer("SCTP ECHO".getBytes())));, +++ b/transport-sctp/pom.xml, +    <dependency>, +      <groupId>${project.groupId}</groupId>, +      <artifactId>netty-codec</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +      <groupId>${project.groupId}</groupId>, +      <artifactId>netty-handler</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +++ b/transport-sctp/src/main/java/com/sun/nio/sctp/MessageInfo.java, +    public abstract boolean isUnordered();, +    public abstract MessageInfo unordered(boolean b);, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/AbstractSocketSpdyEchoTest.java, +    @Test(timeout = 10000), +++ b/example/src/main/java/io/netty/example/sctp/SctpClientHandler.java, +import io.netty.channel.sctp.SctpFrame;, +        stateEvent.getChannel().write(new SctpFrame(0, 0, ChannelBuffers.wrappedBuffer("SCTP ECHO".getBytes())));, +++ b/transport-sctp/pom.xml, +    <dependency>, +      <groupId>${project.groupId}</groupId>, +      <artifactId>netty-codec</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +      <groupId>${project.groupId}</groupId>, +      <artifactId>netty-handler</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +++ b/transport-sctp/src/main/java/com/sun/nio/sctp/MessageInfo.java, +    public abstract boolean isUnordered();, +    public abstract MessageInfo unordered(boolean b);, +++ b/transport-sctp/src/main/java/com/sun/nio/sctp/SctpChannel.java, +import java.net.InetAddress;, +, +    public abstract SctpChannel bindAddress(InetAddress inetAddress) throws IOException;, +    public abstract SctpChannel unbindAddress(InetAddress inetAddress) throws IOException;, +, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/AbstractSocketSpdyEchoTest.java, +    @Test(timeout = 10000), +++ b/example/src/main/java/io/netty/example/sctp/SctpClientHandler.java, +import io.netty.channel.sctp.SctpFrame;, +        stateEvent.getChannel().write(new SctpFrame(0, 0, ChannelBuffers.wrappedBuffer("SCTP ECHO".getBytes())));, +++ b/transport-sctp/pom.xml, +    <dependency>, +      <groupId>${project.groupId}</groupId>, +      <artifactId>netty-codec</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +    <dependency>, +      <groupId>${project.groupId}</groupId>, +      <artifactId>netty-handler</artifactId>, +      <version>${project.version}</version>, +    </dependency>, +++ b/transport-sctp/src/main/java/com/sun/nio/sctp/MessageInfo.java, +    public abstract boolean isUnordered();, +    public abstract MessageInfo unordered(boolean b);, +++ b/transport-sctp/src/main/java/com/sun/nio/sctp/SctpChannel.java, +import java.net.InetAddress;, +, +    public abstract SctpChannel bindAddress(InetAddress inetAddress) throws IOException;, +    public abstract SctpChannel unbindAddress(InetAddress inetAddress) throws IOException;, +, +++ b/transport-sctp/src/main/java/com/sun/nio/sctp/SctpServerChannel.java, +import java.net.InetAddress;, +, +    public abstract SctpServerChannel bindAddress(InetAddress inetAddress) throws IOException;, +    public abstract SctpServerChannel unbindAddress(InetAddress inetAddress) throws IOException;, +, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/AbstractSocketSpdyEchoTest.java, +    @Test(timeout = 10000)]