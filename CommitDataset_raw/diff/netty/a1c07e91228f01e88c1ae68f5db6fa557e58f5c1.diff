[+++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, +     * the specified absolute {@code index}.  This method is basically same, +     * with {@link #getBytes(int, ChannelBuffer, int, int)}, except that this, +     * method increases the {@code writerIndex} of the destination by the, +     * number of the transferred bytes while, +     * {@link #getBytes(int, ChannelBuffer, int, int)} doesn't., +     *, +     * @param length the number of bytes to transfer, +     *, +     * @throws IndexOutOfBoundsException, +     *         if the specified {@code index} is less than {@code 0},, +     *         if {@code index + length} is greater than, +     *            {@code this.capacity}, or, +     *         if {@code length} is greater than {@code dst.writableBytes}, +     */, +    void  getBytes(int index, ChannelBuffer dst, int length);, +, +    /**, +     * Transfers this buffer's data to the specified destination starting at, +     * method increases the {@code readerIndex} of the source buffer by, +     * the specified absolute {@code index}.  This method is basically same, +     * with {@link #setBytes(int, ChannelBuffer, int, int)}, except that this, +     * method increases the {@code readerIndex} of the source buffer by, +     * the number of the transferred bytes while, +     * {@link #getBytes(int, ChannelBuffer, int, int)} doesn't., +     *, +     * @param length the number of bytes to transfer, +     *, +     * @throws IndexOutOfBoundsException, +     *         if the specified {@code index} is less than {@code 0},, +     *         if {@code index + length} is greater than, +     *            {@code this.capacity}, or, +     *         if {@code length} is greater than {@code src.readableBytes}, +     */, +    void setBytes(int index, ChannelBuffer src, int length);, +, +    /**, +     * Transfers the specified source buffer's data to this buffer starting at, +     *         if {@code this.readableBytes} is less than {@code 1}, +     *         if {@code this.readableBytes} is less than {@code 1}, +     *         if {@code this.readableBytes} is less than {@code 2}, +     *         if {@code this.readableBytes} is less than {@code 2}, +     *         if {@code this.readableBytes} is less than {@code 3}, +     *         if {@code this.readableBytes} is less than {@code 3}, +     *         if {@code this.readableBytes} is less than {@code 4}, +     *         if {@code this.readableBytes} is less than {@code 4}, +     *         if {@code this.readableBytes} is less than {@code 8}, +     *         if {@code dst.writableBytes} is greater than, +     *            {@code this.readableBytes}, +     *         if {@code length} is greater than {@code this.readableBytes} or, +     *         if {@code length} is greater than {@code dst.writableBytes}, +     *         if {@code length} is greater than {@code this.readableBytes}, or, +     *         if {@code dst.length} is greater than {@code this.readableBytes}, +     *         if {@code length} is greater than {@code this.readableBytes}, or, +     *         if {@code dst.remaining()} is greater than, +     *            {@code this.readableBytes}, +     *         if {@code length} is greater than {@code this.readableBytes}, +     *         if {@code length} is greater than {@code this.readableBytes}, +     *         if {@code length} is greater than {@code this.readableBytes}, +     *         if {@code this.writableBytes} is less than {@code 1}, +     *         if {@code this.writableBytes} is less than {@code 2}, +     *         if {@code this.writableBytes} is less than {@code 3}, +     *         if {@code this.writableBytes} is less than {@code 4}, +     *         if {@code this.writableBytes} is less than {@code 8}, +     *         if {@code src.readableBytes} is greater than, +     *            {@code this.writableBytes}, +     *, +     *         if {@code length} is greater than {@code this.writableBytes} or, +     *         if {@code length} is greater then {@code src.readableBytes}, +     *         if {@code length} is greater than {@code this.writableBytes}, +     *         if {@code src.length} is greater than {@code this.writableBytes}, +     *         if {@code length} is greater than {@code this.writableBytes}, +     *         if {@code src.remaining()} is greater than, +     *            {@code this.writableBytes}, +     *         if {@code length} is greater than {@code this.writableBytes}, +     *         if {@code length} is greater than {@code this.writableBytes}, +     *         if {@code length} is greater than {@code this.writableBytes}, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, +     * the specified absolute {@code index}.  This method is basically same, +     * with {@link #getBytes(int, ChannelBuffer, int, int)}, except that this, +     * method increases the {@code writerIndex} of the destination by the, +     * number of the transferred bytes while, +     * {@link #getBytes(int, ChannelBuffer, int, int)} doesn't., +     *, +     * @param length the number of bytes to transfer, +     *, +     * @throws IndexOutOfBoundsException, +     *         if the specified {@code index} is less than {@code 0},, +     *         if {@code index + length} is greater than, +     *            {@code this.capacity}, or, +     *         if {@code length} is greater than {@code dst.writableBytes}, +     */, +    void  getBytes(int index, ChannelBuffer dst, int length);, +, +    /**, +     * Transfers this buffer's data to the specified destination starting at, +     * method increases the {@code readerIndex} of the source buffer by, +     * the specified absolute {@code index}.  This method is basically same, +     * with {@link #setBytes(int, ChannelBuffer, int, int)}, except that this, +     * method increases the {@code readerIndex} of the source buffer by]