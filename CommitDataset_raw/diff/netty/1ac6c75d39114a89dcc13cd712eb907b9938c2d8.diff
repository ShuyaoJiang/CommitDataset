[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketChannelFactory.java, +    private static final int DEFAULT_BOSS_COUNT = 1;, +, +     * {@link #NioClientSocketChannelFactory(Executor, Executor, int, int)} with, +     * 1 and (2 * the number of available processors in the machine) for, +     * <tt>bossCount</tt> and <tt>workerCount</tt> respectively.  The number of, +     *        the {@link Executor} which will execute the worker threads, +        this(bossExecutor, workerExecutor, DEFAULT_BOSS_COUNT, SelectorUtil.DEFAULT_IO_THREADS);, +     * Creates a new instance.  Calling this constructor is same with calling, +     * {@link #NioClientSocketChannelFactory(Executor, Executor, int, int)} with, +     * 1 as <tt>bossCount</tt>., +     *        the {@link Executor} which will execute the worker threads, +     *        the maximum number of worker threads, +     *        the maximum number of worker threads, +        sink = new NioClientSocketPipelineSink(, +                bossExecutor, workerExecutor, bossCount, workerCount);, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketChannelFactory.java, +    private static final int DEFAULT_BOSS_COUNT = 1;, +, +     * {@link #NioClientSocketChannelFactory(Executor, Executor, int, int)} with, +     * 1 and (2 * the number of available processors in the machine) for, +     * <tt>bossCount</tt> and <tt>workerCount</tt> respectively.  The number of, +     *        the {@link Executor} which will execute the worker threads, +        this(bossExecutor, workerExecutor, DEFAULT_BOSS_COUNT, SelectorUtil.DEFAULT_IO_THREADS);, +     * Creates a new instance.  Calling this constructor is same with calling, +     * {@link #NioClientSocketChannelFactory(Executor, Executor, int, int)} with, +     * 1 as <tt>bossCount</tt>., +     *        the {@link Executor} which will execute the worker threads, +     *        the maximum number of worker threads, +     *        the maximum number of worker threads, +        sink = new NioClientSocketPipelineSink(, +                bossExecutor, workerExecutor, bossCount, workerCount);, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketPipelineSink.java, +, +    NioClientSocketPipelineSink(, +            Executor bossExecutor, Executor workerExecutor,, +            int bossCount, int workerCount) {, +, +        bosses = new Boss[bossCount];, +        for (int i = 0; i < bosses.length; i ++) {, +        	bosses[i] = new Boss();, +        }]