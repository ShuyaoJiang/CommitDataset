[+++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslClientContext.java, +                destroy();, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslClientContext.java, +                destroy();, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslContext.java, +    /** The OpenSSL SSL_CTX object */, +    protected volatile long ctx;, +    private long aprPool;, +                destroy();, +     * Returns the pointer to the {@code SSL_CTX} object for this {@link OpenSslContext}., +     * Be aware that it is freed as soon as the {@link #finalize()}  method is called., +     * At this point {@code 0} will be returned., +     *, +     * @deprecated use {@link #sslCtxPointer()}, +    @Deprecated, +        destroy();, +    /**, +     * Returns the pointer to the {@code SSL_CTX} object for this {@link OpenSslContext}., +     * Be aware that it is freed as soon as the {@link #finalize()}  method is called., +     * At this point {@code 0} will be returned., +     */, +    public final long sslCtxPointer() {, +        return ctx;, +    }, +, +    protected final void destroy() {, +        synchronized (OpenSslContext.class) {, +            if (ctx != 0) {, +                SSLContext.free(ctx);, +                ctx = 0;, +            }, +, +            if (aprPool != 0) {, +                aprPool = 0;, +            }, +            engines.put(engine.sslPointer(), engine);, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslClientContext.java, +                destroy();, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslContext.java, +    /** The OpenSSL SSL_CTX object */, +    protected volatile long ctx;, +    private long aprPool;, +                destroy();, +     * Returns the pointer to the {@code SSL_CTX} object for this {@link OpenSslContext}., +     * Be aware that it is freed as soon as the {@link #finalize()}  method is called., +     * At this point {@code 0} will be returned., +     *, +     * @deprecated use {@link #sslCtxPointer()}, +    @Deprecated, +        destroy();, +    /**, +     * Returns the pointer to the {@code SSL_CTX} object for this {@link OpenSslContext}., +     * Be aware that it is freed as soon as the {@link #finalize()}  method is called., +     * At this point {@code 0} will be returned., +     */, +    public final long sslCtxPointer() {, +        return ctx;, +    }, +, +    protected final void destroy() {, +        synchronized (OpenSslContext.class) {, +            if (ctx != 0) {, +                SSLContext.free(ctx);, +                ctx = 0;, +            }, +, +            if (aprPool != 0) {, +                aprPool = 0;, +            }, +            engines.put(engine.sslPointer(), engine);, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslEngine.java, +    /**, +     * Returns the pointer to the {@code SSL} object for this {@link OpenSslEngine}., +     * Be aware that it is freed as soon as the {@link #finalize()} or {@link #shutdown} method is called., +     * At this point {@code 0} will be returned., +     */, +    public synchronized long sslPointer() {, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslClientContext.java, +                destroy();, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslContext.java, +    /** The OpenSSL SSL_CTX object */, +    protected volatile long ctx;, +    private long aprPool;, +                destroy();, +     * Returns the pointer to the {@code SSL_CTX} object for this {@link OpenSslContext}., +     * Be aware that it is freed as soon as the {@link #finalize()}  method is called., +     * At this point {@code 0} will be returned., +     *, +     * @deprecated use {@link #sslCtxPointer()}, +    @Deprecated, +        destroy();, +    /**, +     * Returns the pointer to the {@code SSL_CTX} object for this {@link OpenSslContext}., +     * Be aware that it is freed as soon as the {@link #finalize()}  method is called., +     * At this point {@code 0} will be returned., +     */, +    public final long sslCtxPointer() {, +        return ctx;, +    }, +]