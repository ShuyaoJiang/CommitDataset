[+++ b/buffer/src/test/java/io/netty/buffer/PooledByteBufAllocatorTest.java, +import java.util.concurrent.ConcurrentLinkedQueue;, +import java.util.concurrent.atomic.AtomicReference;, +        private final Queue<ByteBuf> buffers = new ConcurrentLinkedQueue<ByteBuf>();, +        private final AtomicReference<Object> finish = new AtomicReference<Object>();, +                while (finish.get() == null) {, +                finish.set(cause);, +            return finish.get() != null;, +                // Mark as finish if not already done but ensure we not override the previous set error., +                finish.compareAndSet(null, Boolean.TRUE);, +                join();, +            checkForError();, +            Object obj = finish.get();, +            if (obj instanceof Throwable) {, +                throw (Throwable) obj;]