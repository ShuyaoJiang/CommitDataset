[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Headers.java, +import static io.netty.handler.codec.http2.Http2Error.*;, +import static io.netty.handler.codec.http2.Http2Exception.*;, +import static io.netty.util.AsciiString.*;, +, +    public boolean contains(CharSequence name, CharSequence value, boolean caseInsensitive) {, +        return contains(name, value, caseInsensitive? CASE_INSENSITIVE_HASHER : CASE_SENSITIVE_HASHER);, +    }, +, +    @Override, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Headers.java, +import static io.netty.handler.codec.http2.Http2Error.*;, +import static io.netty.handler.codec.http2.Http2Exception.*;, +import static io.netty.util.AsciiString.*;, +, +    public boolean contains(CharSequence name, CharSequence value, boolean caseInsensitive) {, +        return contains(name, value, caseInsensitive? CASE_INSENSITIVE_HASHER : CASE_SENSITIVE_HASHER);, +    }, +, +    @Override, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/EmptyHttp2Headers.java, +, +    @Override, +    public boolean contains(CharSequence name, CharSequence value, boolean caseInsensitive) {, +        return false;, +    }, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Headers.java, +import static io.netty.handler.codec.http2.Http2Error.*;, +import static io.netty.handler.codec.http2.Http2Exception.*;, +import static io.netty.util.AsciiString.*;, +, +    public boolean contains(CharSequence name, CharSequence value, boolean caseInsensitive) {, +        return contains(name, value, caseInsensitive? CASE_INSENSITIVE_HASHER : CASE_SENSITIVE_HASHER);, +    }, +, +    @Override, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/EmptyHttp2Headers.java, +, +    @Override, +    public boolean contains(CharSequence name, CharSequence value, boolean caseInsensitive) {, +        return false;, +    }, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2Headers.java, +, +    /**, +     * Returns {@code true} if a header with the {@code name} and {@code value} exists, {@code false} otherwise., +     * <p>, +     * If {@code caseInsensitive} is {@code true} then a case insensitive compare is done on the value., +     *, +     * @param name the name of the header to find, +     * @param value the value of the header to find, +     * @param caseInsensitive {@code true} then a case insensitive compare is run to compare values., +     * otherwise a case sensitive compare is run to compare values., +     */, +    boolean contains(CharSequence name, CharSequence value, boolean caseInsensitive);, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Headers.java, +import static io.netty.handler.codec.http2.Http2Error.*;, +import static io.netty.handler.codec.http2.Http2Exception.*;, +import static io.netty.util.AsciiString.*;, +, +    public boolean contains(CharSequence name, CharSequence value, boolean caseInsensitive) {, +        return contains(name, value, caseInsensitive? CASE_INSENSITIVE_HASHER : CASE_SENSITIVE_HASHER);, +    }, +, +    @Override, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/EmptyHttp2Headers.java, +, +    @Override, +    public boolean contains(CharSequence name, CharSequence value, boolean caseInsensitive) {, +        return false;, +    }, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2Headers.java, +, +    /**, +     * Returns {@code true} if a header with the {@code name} and {@code value} exists, {@code false} otherwise., +     * <p>, +     * If {@code caseInsensitive} is {@code true} then a case insensitive compare is done on the value., +     *, +     * @param name the name of the header to find, +     * @param value the value of the header to find, +     * @param caseInsensitive {@code true} then a case insensitive compare is run to compare values., +     * otherwise a case sensitive compare is run to compare values., +     */, +    boolean contains(CharSequence name, CharSequence value, boolean caseInsensitive);, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/ReadOnlyHttp2Headers.java, +import io.netty.util.HashingStrategy;, +import static io.netty.handler.codec.CharSequenceValueConverter.*;, +import static io.netty.handler.codec.http2.DefaultHttp2Headers.*;, +import static io.netty.util.AsciiString.*;, +import static io.netty.util.internal.EmptyArrays.*;, +    public boolean contains(CharSequence name, CharSequence value, boolean caseInsensitive) {, +        final int nameHash = AsciiString.hashCode(name);, +        final HashingStrategy<CharSequence> strategy = caseInsensitive? CASE_INSENSITIVE_HASHER : CASE_SENSITIVE_HASHER;, +        final int valueHash = strategy.hashCode(value);, +, +        return contains(name, nameHash, value, valueHash, strategy, pseudoHeaders), +               || contains(name, nameHash, value, valueHash, strategy, otherHeaders);, +    }, +, +    private static boolean contains(CharSequence name, int nameHash, CharSequence value, int valueHash,]