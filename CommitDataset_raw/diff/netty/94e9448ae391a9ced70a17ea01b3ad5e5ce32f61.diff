[+++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateClientExtensionHandshakerTest.java, +        assertEquals("10", data.parameters().get(SERVER_MAX_WINDOW));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateClientExtensionHandshakerTest.java, +        assertEquals("10", data.parameters().get(SERVER_MAX_WINDOW));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateServerExtensionHandshakerTest.java, +        assertEquals("10", data.parameters().get(CLIENT_MAX_WINDOW));, +        assertEquals("12", data.parameters().get(SERVER_MAX_WINDOW));, +        assertEquals("12", data.parameters().get(SERVER_MAX_WINDOW));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateClientExtensionHandshakerTest.java, +        assertEquals("10", data.parameters().get(SERVER_MAX_WINDOW));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateServerExtensionHandshakerTest.java, +        assertEquals("10", data.parameters().get(CLIENT_MAX_WINDOW));, +        assertEquals("12", data.parameters().get(SERVER_MAX_WINDOW));, +        assertEquals("12", data.parameters().get(SERVER_MAX_WINDOW));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/extensions/compression/WebSocketServerCompressionHandlerTest.java, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateClientExtensionHandshakerTest.java, +        assertEquals("10", data.parameters().get(SERVER_MAX_WINDOW));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateServerExtensionHandshakerTest.java, +        assertEquals("10", data.parameters().get(CLIENT_MAX_WINDOW));, +        assertEquals("12", data.parameters().get(SERVER_MAX_WINDOW));, +        assertEquals("12", data.parameters().get(SERVER_MAX_WINDOW));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/extensions/compression/WebSocketServerCompressionHandlerTest.java, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateDecoder.class));, +        Assert.assertNotNull(ch.pipeline().get(PerMessageDeflateEncoder.class));, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/ReadOnlyHttp2HeadersTest.java, +import static org.junit.Assert.*;, +        assertNull(headers.get(Http2Headers.PseudoHeaderName.STATUS.value()));, +        assertNull(headers.get("a missing header"));]