[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, + * handler after {@link HttpResponseDecoder} in the {@link ChannelPipeline} if being used to handle, + * responses, or after {@link HttpRequestDecoder} and {@link HttpResponseEncoder} in the, + * {@link ChannelPipeline} if being used to handle requests., + * <blockquote>, + *  p.addLast("decoder", <b>new {@link HttpRequestDecoder}()</b>);, + *  p.addLast("encoder", <b>new {@link HttpResponseEncoder}()</b>);, + * </blockquote>, + * <p>, + * For convenience, consider putting a {@link HttpServerCodec} before the {@link HttpObjectAggregator}, + * as it functions as both a {@link HttpRequestDecoder} and a {@link HttpResponseEncoder}., + * </p>, + * Be aware that {@link HttpObjectAggregator} may end up sending a {@link HttpResponse}:, + * <table border summary="Possible Responses">, + *   <tbody>, + *     <tr>, + *       <th>Response Status</th>, + *       <th>Condition When Sent</th>, + *     </tr>, + *     <tr>, + *       <td>100 Continue</td>, + *       <td>A '100-continue' expectation is received and the 'content-length' doesn't exceed maxContentLength</td>, + *     </tr>, + *     <tr>, + *       <td>417 Expectation Failed</td>, + *       <td>A '100-continue' expectation is received and the 'content-length' exceeds maxContentLength</td>, + *     </tr>, + *     <tr>, + *       <td>413 Request Entity Too Large</td>, + *       <td>Either the 'content-length' or the bytes received so far exceed maxContentLength</td>, + *     </tr>, + *   </tbody>, + * </table>, + *, + * @see FullHttpRequest, + * @see FullHttpResponse, + * @see HttpResponseDecoder, + * @see HttpServerCodec]