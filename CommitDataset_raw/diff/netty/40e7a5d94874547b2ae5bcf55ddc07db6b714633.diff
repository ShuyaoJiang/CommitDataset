[+++ b/transport/src/main/java/io/netty/channel/AbstractChannelSink.java, +++ b/transport/src/main/java/io/netty/channel/AbstractChannelSink.java, +++ b/transport/src/main/java/io/netty/channel/ChannelPipeline.java, +     * Schedules the specified task to be executed in the I/O thread associated, +     * with this pipeline's {@link Channel}., +     */, +    ChannelFuture execute(Runnable task);, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/AbstractChannelSink.java, +++ b/transport/src/main/java/io/netty/channel/ChannelPipeline.java, +     * Schedules the specified task to be executed in the I/O thread associated, +     * with this pipeline's {@link Channel}., +     */, +    ChannelFuture execute(Runnable task);, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelSink.java, +     * Execute the given {@link Runnable} later in the io-thread., +     * Some implementation may not support this and just execute it directly., +++ b/transport/src/main/java/io/netty/channel/AbstractChannelSink.java, +++ b/transport/src/main/java/io/netty/channel/ChannelPipeline.java, +     * Schedules the specified task to be executed in the I/O thread associated, +     * with this pipeline's {@link Channel}., +     */, +    ChannelFuture execute(Runnable task);, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelSink.java, +     * Execute the given {@link Runnable} later in the io-thread., +     * Some implementation may not support this and just execute it directly., +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +    @Override, +    public ChannelFuture execute(Runnable task) {, +        return getSink().execute(this, task);, +    }, +]