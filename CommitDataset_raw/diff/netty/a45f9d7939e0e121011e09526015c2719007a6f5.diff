[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java, +                        final String charsetHeader = HttpHeaderValues.CHARSET.toString();, +                        if (contents[i].regionMatches(true, 0, charsetHeader, 0, charsetHeader.length())) {, +                                attribute = factory.createAttribute(request, charsetHeader, cleanString(values));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java, +                        final String charsetHeader = HttpHeaderValues.CHARSET.toString();, +                        if (contents[i].regionMatches(true, 0, charsetHeader, 0, charsetHeader.length())) {, +                                attribute = factory.createAttribute(request, charsetHeader, cleanString(values));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +        final String multiPartHeader = HttpHeaderValues.MULTIPART_FORM_DATA.toString();, +        if (headerContentType[0].regionMatches(true, 0, multiPartHeader, 0 , multiPartHeader.length())) {, +            final String boundaryHeader = HttpHeaderValues.BOUNDARY.toString();, +            if (headerContentType[1].regionMatches(true, 0, boundaryHeader, 0, boundaryHeader.length())) {, +            } else if (headerContentType[2].regionMatches(true, 0, boundaryHeader, 0, boundaryHeader.length())) {, +            final String charsetHeader = HttpHeaderValues.CHARSET.toString();, +            if (headerContentType[crank].regionMatches(true, 0, charsetHeader, 0, charsetHeader.length())) {]