[+++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/SocketSslEchoTest.java, +    protected enum RenegotiationType {, +    protected static class Renegotiation {, +        static final Renegotiation NONE = new Renegotiation(RenegotiationType.NONE, null);, +, +        final RenegotiationType type;, +        final String cipherSuite;, +, +        Renegotiation(RenegotiationType type, String cipherSuite) {, +            this.type = type;, +            this.cipherSuite = cipherSuite;, +        }, +, +        @Override, +        public String toString() {, +            if (type == RenegotiationType.NONE) {, +                return "NONE";, +            }, +, +            return type + "(" + cipherSuite + ')';, +        }, +    }, +, +                    Renegotiation r;, +                    if (rt == RenegotiationType.NONE) {, +                        r = Renegotiation.NONE;, +                    } else {, +                        r = new Renegotiation(rt, "SSL_RSA_WITH_RC4_128_SHA");, +                    }, +, +                                sc, cc, r,, +    private final Renegotiation renegotiation;, +            SslContext serverCtx, SslContext clientCtx, Renegotiation renegotiation,, +        this.renegotiation = renegotiation;, +        boolean needsRenegotiation = renegotiation.type == RenegotiationType.CLIENT_INITIATED;, +                SslHandler sslHandler = cc.pipeline().get(SslHandler.class);, +                sslHandler.engine().setEnabledCipherSuites(new String[] { renegotiation.cipherSuite });, +                renegoFuture = sslHandler.renegotiate();, +            if (renegotiation.type != RenegotiationType.NONE) {, +            if (server && renegotiation.type == RenegotiationType.SERVER_INITIATED &&, +                sslHandler.engine().setEnabledCipherSuites(new String[] { renegotiation.cipherSuite });, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/SocketSslEchoTest.java, +    protected enum RenegotiationType {, +    protected static class Renegotiation {, +        static final Renegotiation NONE = new Renegotiation(RenegotiationType.NONE, null);, +, +        final RenegotiationType type;, +        final String cipherSuite;, +, +        Renegotiation(RenegotiationType type, String cipherSuite) {, +            this.type = type;, +            this.cipherSuite = cipherSuite;, +        }, +, +        @Override, +        public String toString() {, +            if (type == RenegotiationType.NONE) {, +                return "NONE";, +            }, +, +            return type + "(" + cipherSuite + ')';, +        }, +    }, +, +                    Renegotiation r;, +                    if (rt == RenegotiationType.NONE) {, +                        r = Renegotiation.NONE;, +                    } else {, +                        r = new Renegotiation(rt, "SSL_RSA_WITH_RC4_128_SHA");, +                    }, +, +                                sc, cc, r,, +    private final Renegotiation renegotiation;, +            SslContext serverCtx, SslContext clientCtx, Renegotiation renegotiation,, +        this.renegotiation = renegotiation;, +        boolean needsRenegotiation = renegotiation.type == RenegotiationType.CLIENT_INITIATED;, +                SslHandler sslHandler = cc.pipeline().get(SslHandler.class);, +                sslHandler.engine().setEnabledCipherSuites(new String[] { renegotiation.cipherSuite });, +                renegoFuture = sslHandler.renegotiate();, +            if (renegotiation.type != RenegotiationType.NONE) {, +            if (server && renegotiation.type == RenegotiationType.SERVER_INITIATED &&, +                sslHandler.engine().setEnabledCipherSuites(new String[] { renegotiation.cipherSuite });, +++ b/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketSslEchoTest.java, +            SslContext serverCtx, SslContext clientCtx, Renegotiation renegotiation,, +        super(serverCtx, clientCtx, renegotiation,]