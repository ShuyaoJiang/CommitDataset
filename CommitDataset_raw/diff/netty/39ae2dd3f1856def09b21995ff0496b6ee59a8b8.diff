[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +    static final int SPDY_SESSION_STREAM_ID = 0;, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +    static final int SPDY_SESSION_STREAM_ID = 0;, +, +++ /dev/null, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +    static final int SPDY_SESSION_STREAM_ID = 0;, +, +++ /dev/null, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameCodec.java, +    public SpdyFrameCodec(SpdyVersion version) {, +            SpdyVersion version, int maxChunkSize, int maxHeaderSize,, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +    static final int SPDY_SESSION_STREAM_ID = 0;, +, +++ /dev/null, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameCodec.java, +    public SpdyFrameCodec(SpdyVersion version) {, +            SpdyVersion version, int maxChunkSize, int maxHeaderSize,, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameDecoder.java, +    public SpdyFrameDecoder(SpdyVersion version) {, +    public SpdyFrameDecoder(SpdyVersion version, int maxChunkSize, int maxHeaderSize) {, +            SpdyVersion version, int maxChunkSize, SpdyHeaderBlockDecoder headerBlockDecoder) {, +        if (version == null) {, +            throw new NullPointerException("version");, +        spdyVersion = version.getVersion();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +    static final int SPDY_SESSION_STREAM_ID = 0;, +, +++ /dev/null, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameCodec.java, +    public SpdyFrameCodec(SpdyVersion version) {, +            SpdyVersion version, int maxChunkSize, int maxHeaderSize,, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameDecoder.java, +    public SpdyFrameDecoder(SpdyVersion version) {, +    public SpdyFrameDecoder(SpdyVersion version, int maxChunkSize, int maxHeaderSize) {, +            SpdyVersion version, int maxChunkSize, SpdyHeaderBlockDecoder headerBlockDecoder) {, +        if (version == null) {, +            throw new NullPointerException("version");, +        spdyVersion = version.getVersion();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +    public SpdyFrameEncoder(SpdyVersion version) {, +    public SpdyFrameEncoder(SpdyVersion version, int compressionLevel, int windowBits, int memLevel) {, +    protected SpdyFrameEncoder(SpdyVersion version, SpdyHeaderBlockEncoder headerBlockEncoder) {, +        if (version == null) {, +            throw new NullPointerException("version");, +        this.version = version.getVersion();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +    static final int SPDY_SESSION_STREAM_ID = 0;, +, +++ /dev/null, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameCodec.java, +    public SpdyFrameCodec(SpdyVersion version) {, +            SpdyVersion version, int maxChunkSize, int maxHeaderSize,, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameDecoder.java, +    public SpdyFrameDecoder(SpdyVersion version) {, +    public SpdyFrameDecoder(SpdyVersion version, int maxChunkSize, int maxHeaderSize) {, +            SpdyVersion version, int maxChunkSize, SpdyHeaderBlockDecoder headerBlockDecoder) {, +        if (version == null) {, +            throw new NullPointerException("version");, +        spdyVersion = version.getVersion();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +    public SpdyFrameEncoder(SpdyVersion version) {, +    public SpdyFrameEncoder(SpdyVersion version, int compressionLevel, int windowBits, int memLevel) {, +    protected SpdyFrameEncoder(SpdyVersion version, SpdyHeaderBlockEncoder headerBlockEncoder) {, +        if (version == null) {, +            throw new NullPointerException("version");, +        this.version = version.getVersion();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockDecoder.java, +    static SpdyHeaderBlockDecoder newInstance(SpdyVersion version, int maxHeaderSize) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +    static final int SPDY_SESSION_STREAM_ID = 0;, +, +++ /dev/null, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameCodec.java, +    public SpdyFrameCodec(SpdyVersion version) {, +            SpdyVersion version, int maxChunkSize, int maxHeaderSize,, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameDecoder.java, +    public SpdyFrameDecoder(SpdyVersion version) {, +    public SpdyFrameDecoder(SpdyVersion version, int maxChunkSize, int maxHeaderSize) {, +            SpdyVersion version, int maxChunkSize, SpdyHeaderBlockDecoder headerBlockDecoder) {, +        if (version == null) {, +            throw new NullPointerException("version");, +        spdyVersion = version.getVersion();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +    public SpdyFrameEncoder(SpdyVersion version) {, +    public SpdyFrameEncoder(SpdyVersion version, int compressionLevel, int windowBits, int memLevel) {, +    protected SpdyFrameEncoder(SpdyVersion version, SpdyHeaderBlockEncoder headerBlockEncoder) {, +        if (version == null) {, +            throw new NullPointerException("version");, +        this.version = version.getVersion();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockDecoder.java, +    static SpdyHeaderBlockDecoder newInstance(SpdyVersion version, int maxHeaderSize) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockEncoder.java, +            SpdyVersion version, int compressionLevel, int windowBits, int memLevel) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +    static final int SPDY_SESSION_STREAM_ID = 0;, +]