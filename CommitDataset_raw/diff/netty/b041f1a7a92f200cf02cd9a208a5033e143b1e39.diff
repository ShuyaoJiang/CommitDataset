[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpServerKeepAliveHandler.java, +     *     <li>See <a href="https://tools.ietf.org/html/rfc7230#section-3.3.2"/></li>, +               isInformational(response) || response.status().code() == HttpResponseStatus.NO_CONTENT.code();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpServerKeepAliveHandler.java, +     *     <li>See <a href="https://tools.ietf.org/html/rfc7230#section-3.3.2"/></li>, +               isInformational(response) || response.status().code() == HttpResponseStatus.NO_CONTENT.code();, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpServerKeepAliveHandlerTest.java, +import static io.netty.handler.codec.http.HttpHeaderValues.CLOSE;, +import static io.netty.handler.codec.http.HttpHeaderValues.KEEP_ALIVE;, +import static io.netty.handler.codec.http.HttpHeaderValues.MULTIPART_MIXED;, +import static io.netty.handler.codec.http.HttpResponseStatus.NO_CONTENT;, +import static io.netty.handler.codec.http.HttpResponseStatus.OK;, +import static io.netty.handler.codec.http.HttpUtil.isContentLengthSet;, +import static io.netty.handler.codec.http.HttpUtil.isKeepAlive;, +import static io.netty.handler.codec.http.HttpUtil.setContentLength;, +import static io.netty.handler.codec.http.HttpUtil.setKeepAlive;, +import static io.netty.handler.codec.http.HttpUtil.setTransferEncodingChunked;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +    private final HttpResponseStatus responseStatus;, +                { true, HttpVersion.HTTP_1_0, OK, REQUEST_KEEP_ALIVE, SET_RESPONSE_LENGTH, KEEP_ALIVE },          //  0, +                { true, HttpVersion.HTTP_1_0, OK, REQUEST_KEEP_ALIVE, SET_MULTIPART, KEEP_ALIVE },                //  1, +                { false, HttpVersion.HTTP_1_0, OK, null, SET_RESPONSE_LENGTH, null },                             //  2, +                { true, HttpVersion.HTTP_1_1, OK, REQUEST_KEEP_ALIVE, SET_RESPONSE_LENGTH, null },                //  3, +                { false, HttpVersion.HTTP_1_1, OK, REQUEST_KEEP_ALIVE, SET_RESPONSE_LENGTH, CLOSE },              //  4, +                { true, HttpVersion.HTTP_1_1, OK, REQUEST_KEEP_ALIVE, SET_MULTIPART, null },                      //  5, +                { true, HttpVersion.HTTP_1_1, OK, REQUEST_KEEP_ALIVE, SET_CHUNKED, null },                        //  6, +                { false, HttpVersion.HTTP_1_1, OK, null, SET_RESPONSE_LENGTH, null },                             //  7, +                { false, HttpVersion.HTTP_1_0, OK, REQUEST_KEEP_ALIVE, NOT_SELF_DEFINED_MSG_LENGTH, null },       //  8, +                { false, HttpVersion.HTTP_1_0, OK, null, NOT_SELF_DEFINED_MSG_LENGTH, null },                     //  9, +                { false, HttpVersion.HTTP_1_1, OK, REQUEST_KEEP_ALIVE, NOT_SELF_DEFINED_MSG_LENGTH, null },       // 10, +                { false, HttpVersion.HTTP_1_1, OK, null, NOT_SELF_DEFINED_MSG_LENGTH, null },                     // 11, +                { false, HttpVersion.HTTP_1_0, OK, REQUEST_KEEP_ALIVE, SET_RESPONSE_LENGTH, null },               // 12, +                { true, HttpVersion.HTTP_1_1, NO_CONTENT, REQUEST_KEEP_ALIVE, NOT_SELF_DEFINED_MSG_LENGTH, null}, // 13, +                { false, HttpVersion.HTTP_1_0, NO_CONTENT, null, NOT_SELF_DEFINED_MSG_LENGTH, null}               // 14, +                                          HttpResponseStatus responseStatus, String sendKeepAlive,, +        this.responseStatus = responseStatus;, +        HttpResponse response = new DefaultFullHttpResponse(httpVersion, responseStatus);, +        FullHttpResponse response = new DefaultFullHttpResponse(httpVersion, responseStatus);]