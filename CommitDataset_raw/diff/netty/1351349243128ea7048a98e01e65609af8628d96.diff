[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockRawDecoder.java, +    private ByteBuf cumulation;, +, +        if (cumulation == null) {, +            decodeHeaderBlock(headerBlock, frame);, +            if (headerBlock.isReadable()) {, +                cumulation = headerBlock.alloc().buffer(headerBlock.readableBytes());, +                cumulation.writeBytes(headerBlock);, +            }, +        } else {, +            cumulation.writeBytes(headerBlock);, +            decodeHeaderBlock(cumulation, frame);, +            if (cumulation.isReadable()) {, +                cumulation.discardReadBytes();, +            } else {, +                cumulation = null;, +            }, +        }, +    }, +, +    protected void decodeHeaderBlock(ByteBuf headerBlock, SpdyHeadersFrame frame) throws Exception {, +, +        releaseBuffer();, +, +        releaseBuffer();, +    }, +, +    private void releaseBuffer() {, +        if (cumulation != null) {, +            cumulation.release();, +            cumulation = null;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockRawDecoder.java, +    private ByteBuf cumulation;, +, +        if (cumulation == null) {, +            decodeHeaderBlock(headerBlock, frame);, +            if (headerBlock.isReadable()) {, +                cumulation = headerBlock.alloc().buffer(headerBlock.readableBytes());, +                cumulation.writeBytes(headerBlock);, +            }, +        } else {, +            cumulation.writeBytes(headerBlock);, +            decodeHeaderBlock(cumulation, frame);, +            if (cumulation.isReadable()) {, +                cumulation.discardReadBytes();, +            } else {, +                cumulation = null;, +            }, +        }, +    }, +, +    protected void decodeHeaderBlock(ByteBuf headerBlock, SpdyHeadersFrame frame) throws Exception {, +, +        releaseBuffer();, +, +        releaseBuffer();, +    }, +, +    private void releaseBuffer() {, +        if (cumulation != null) {, +            cumulation.release();, +            cumulation = null;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockZlibDecoder.java, +                super.decodeHeaderBlock(decompressed, frame);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockRawDecoder.java, +    private ByteBuf cumulation;, +, +        if (cumulation == null) {, +            decodeHeaderBlock(headerBlock, frame);, +            if (headerBlock.isReadable()) {, +                cumulation = headerBlock.alloc().buffer(headerBlock.readableBytes());, +                cumulation.writeBytes(headerBlock);, +            }, +        } else {, +            cumulation.writeBytes(headerBlock);, +            decodeHeaderBlock(cumulation, frame);, +            if (cumulation.isReadable()) {, +                cumulation.discardReadBytes();, +            } else {, +                cumulation = null;, +            }, +        }, +    }, +, +    protected void decodeHeaderBlock(ByteBuf headerBlock, SpdyHeadersFrame frame) throws Exception {, +, +        releaseBuffer();, +, +        releaseBuffer();, +    }, +, +    private void releaseBuffer() {, +        if (cumulation != null) {, +            cumulation.release();, +            cumulation = null;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockZlibDecoder.java, +                super.decodeHeaderBlock(decompressed, frame);]