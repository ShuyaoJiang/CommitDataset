[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.java, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.java, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2RemoteFlowControllerTest.java, +        assertEquals(1000, dataA.written() + dataB.written() + dataC.written() + dataD.written());, +        int allowedError = 10;, +        dataA.assertPartiallyWritten(109, allowedError);, +        dataB.assertPartiallyWritten(445, allowedError);, +        dataC.assertPartiallyWritten(223, allowedError);, +        dataD.assertPartiallyWritten(223, allowedError);, +        assertEquals(DEFAULT_WINDOW_SIZE - dataA.written(), window(STREAM_A));, +        assertEquals(DEFAULT_WINDOW_SIZE - dataB.written(), window(STREAM_B));, +        assertEquals(DEFAULT_WINDOW_SIZE - dataC.written(), window(STREAM_C));, +        assertEquals(DEFAULT_WINDOW_SIZE - dataD.written(), window(STREAM_D));, +        public int written() {, +            return originalSize - currentSize;, +        }, +, +            assertPartiallyWritten(expectedWritten, 0);, +        }, +, +        public void assertPartiallyWritten(int expectedWritten, int delta) {, +            assertEquals(expectedWritten, written(), delta);]