[+++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +                                safeSetSuccess(promise);, +                                safeSetFailure(promise, t);, +                    safeSetSuccess(promise);, +                safeSetFailure(promise, t);, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +                                safeSetSuccess(promise);, +                                safeSetFailure(promise, t);, +                    safeSetSuccess(promise);, +                safeSetFailure(promise, t);, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +                    safeSetFailure(promise, t);, +                safeSetSuccess(promise);, +                safeSetFailure(promise, t);, +                safeSetFailure(promise, t);, +, +            safeSetSuccess(promise);, +                safeSetFailure(promise, t);, +, +, +            safeSetSuccess(promise);, +                safeSetSuccess(promise);, +                safeSetSuccess(promise);, +                safeSetFailure(promise, t);, +                safeSetSuccess(promise);, +                    safeSetSuccess(promise);, +                    safeSetSuccess(promise);, +                    safeSetFailure(promise, NOT_YET_CONNECTED_EXCEPTION);, +                    safeSetFailure(promise, CLOSED_CHANNEL_EXCEPTION);, +            safeSetFailure(promise, CLOSED_CHANNEL_EXCEPTION);, +        /**, +         * Marks the specified {@code promise} as success.  If the {@code promise} is done already, log a message., +         */, +        protected final void safeSetSuccess(ChannelPromise promise) {, +            if (!(promise instanceof VoidChannelPromise) && !promise.trySuccess()) {, +                logger.warn("Failed to mark a promise as success because it is done already: {}", promise);, +            }, +        }, +, +        /**, +         * Marks the specified {@code promise} as failure.  If the {@code promise} is done already, log a message., +         */, +        protected final void safeSetFailure(ChannelPromise promise, Throwable cause) {, +            if (!(promise instanceof VoidChannelPromise) && !promise.tryFailure(cause)) {, +                logger.warn("Failed to mark a promise as failure because it's done already: {}", promise, cause);, +            }, +        }, +, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +                                safeSetSuccess(promise);, +                                safeSetFailure(promise, t);, +                    safeSetSuccess(promise);, +                safeSetFailure(promise, t);, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +                    safeSetFailure(promise, t);, +                safeSetSuccess(promise);, +                safeSetFailure(promise, t);, +                safeSetFailure(promise, t);, +, +            safeSetSuccess(promise);, +                safeSetFailure(promise, t);, +, +, +            safeSetSuccess(promise);, +                safeSetSuccess(promise);, +                safeSetSuccess(promise);, +                safeSetFailure(promise, t);, +                safeSetSuccess(promise);, +                    safeSetSuccess(promise);, +                    safeSetSuccess(promise);, +                    safeSetFailure(promise, NOT_YET_CONNECTED_EXCEPTION);, +                    safeSetFailure(promise, CLOSED_CHANNEL_EXCEPTION);, +            safeSetFailure(promise, CLOSED_CHANNEL_EXCEPTION);, +        /**, +         * Marks the specified {@code promise} as success.  If the {@code promise} is done already, log a message., +         */, +        protected final void safeSetSuccess(ChannelPromise promise) {, +            if (!(promise instanceof VoidChannelPromise) && !promise.trySuccess()) {, +                logger.warn("Failed to mark a promise as success because it is done already: {}", promise);, +            }, +        }, +, +        /**, +         * Marks the specified {@code promise} as failure.  If the {@code promise} is done already, log a message., +         */, +        protected final void safeSetFailure(ChannelPromise promise, Throwable cause) {, +            if (!(promise instanceof VoidChannelPromise) && !promise.tryFailure(cause)) {, +                logger.warn("Failed to mark a promise as failure because it's done already: {}", promise, cause);, +            }, +        }, +, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +            safeSetFailure(promise, new UnsupportedOperationException());, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +                                safeSetSuccess(promise);, +                                safeSetFailure(promise, t);, +                    safeSetSuccess(promise);, +                safeSetFailure(promise, t);, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +                    safeSetFailure(promise, t);]