[+++ b/transport/src/main/java/io/netty/channel/DefaultChannelConfig.java, +    private volatile int maxMessagesPerRead = 1;, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelConfig.java, +    private volatile int maxMessagesPerRead = 1;, +++ b/transport/src/main/java/io/netty/channel/nio/AbstractNioByteChannel.java, +import io.netty.buffer.ByteBufAllocator;, +            final ByteBufAllocator allocator = config.getAllocator();, +            final int maxMessagesPerRead = config.getMaxMessagesPerRead();, +            final MessageList<ByteBuf> messages = MessageList.newInstance();, +, +            ByteBuf byteBuf = null;, +                for (;;) {, +                    byteBuf = allocHandle.allocate(allocator);, +                    if (localReadAmount == 0) {, +                        byteBuf.release();, +                        byteBuf = null;, +                        break;, +                    }, +                        byteBuf.release();, +                        byteBuf = null;, +                        break;, +                    }, +, +                    messages.add(byteBuf);, +                    allocHandle.record(localReadAmount);, +                    byteBuf = null;, +                    if (messages.size() == maxMessagesPerRead) {, +                        break;, +                    }, +                if (byteBuf != null) {, +                    if (byteBuf.isReadable()) {, +                        messages.add(byteBuf);, +                }, +, +                pipeline.fireMessageReceived(messages);]