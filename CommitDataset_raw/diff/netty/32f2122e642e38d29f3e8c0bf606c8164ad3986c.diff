[+++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthRequest.java, +    private static final SubnegotiationVersion SUBNEGOTIATION_VERSION = SubnegotiationVersion.AUTH_PASSWORD;, +        byteBuf.writeByte(SUBNEGOTIATION_VERSION.getByteValue());, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthRequest.java, +    private static final SubnegotiationVersion SUBNEGOTIATION_VERSION = SubnegotiationVersion.AUTH_PASSWORD;, +        byteBuf.writeByte(SUBNEGOTIATION_VERSION.getByteValue());, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthRequestDecoder.java, +    private SocksMessage.SubnegotiationVersion version;, +                version = SocksMessage.SubnegotiationVersion.fromByte(byteBuf.readByte());, +                if (version != SocksMessage.SubnegotiationVersion.AUTH_PASSWORD) {, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthRequest.java, +    private static final SubnegotiationVersion SUBNEGOTIATION_VERSION = SubnegotiationVersion.AUTH_PASSWORD;, +        byteBuf.writeByte(SUBNEGOTIATION_VERSION.getByteValue());, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthRequestDecoder.java, +    private SocksMessage.SubnegotiationVersion version;, +                version = SocksMessage.SubnegotiationVersion.fromByte(byteBuf.readByte());, +                if (version != SocksMessage.SubnegotiationVersion.AUTH_PASSWORD) {, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthResponse.java, +    private static final SubnegotiationVersion SUBNEGOTIATION_VERSION = SubnegotiationVersion.AUTH_PASSWORD;, +        byteBuf.writeByte(SUBNEGOTIATION_VERSION.getByteValue());, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthRequest.java, +    private static final SubnegotiationVersion SUBNEGOTIATION_VERSION = SubnegotiationVersion.AUTH_PASSWORD;, +        byteBuf.writeByte(SUBNEGOTIATION_VERSION.getByteValue());, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthRequestDecoder.java, +    private SocksMessage.SubnegotiationVersion version;, +                version = SocksMessage.SubnegotiationVersion.fromByte(byteBuf.readByte());, +                if (version != SocksMessage.SubnegotiationVersion.AUTH_PASSWORD) {, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthResponse.java, +    private static final SubnegotiationVersion SUBNEGOTIATION_VERSION = SubnegotiationVersion.AUTH_PASSWORD;, +        byteBuf.writeByte(SUBNEGOTIATION_VERSION.getByteValue());, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthResponseDecoder.java, +    private SocksMessage.SubnegotiationVersion version;, +                version = SocksMessage.SubnegotiationVersion.fromByte(byteBuf.readByte());, +                if (version != SocksMessage.SubnegotiationVersion.AUTH_PASSWORD) {, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthRequest.java, +    private static final SubnegotiationVersion SUBNEGOTIATION_VERSION = SubnegotiationVersion.AUTH_PASSWORD;, +        byteBuf.writeByte(SUBNEGOTIATION_VERSION.getByteValue());, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthRequestDecoder.java, +    private SocksMessage.SubnegotiationVersion version;, +                version = SocksMessage.SubnegotiationVersion.fromByte(byteBuf.readByte());, +                if (version != SocksMessage.SubnegotiationVersion.AUTH_PASSWORD) {, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthResponse.java, +    private static final SubnegotiationVersion SUBNEGOTIATION_VERSION = SubnegotiationVersion.AUTH_PASSWORD;, +        byteBuf.writeByte(SUBNEGOTIATION_VERSION.getByteValue());, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksAuthResponseDecoder.java, +    private SocksMessage.SubnegotiationVersion version;, +                version = SocksMessage.SubnegotiationVersion.fromByte(byteBuf.readByte());, +                if (version != SocksMessage.SubnegotiationVersion.AUTH_PASSWORD) {, +++ b/codec-socks/src/main/java/io/netty/codec/socks/SocksMessage.java, +    public enum SubnegotiationVersion {, +        AUTH_PASSWORD((byte) 0x01),, +        UNKNOWN((byte) 0xff);, +, +        private final byte b;, +, +        private SubnegotiationVersion(byte b) {, +            this.b = b;, +        }, +, +        public static SubnegotiationVersion fromByte(byte b) {, +            for (SubnegotiationVersion code : values()) {, +                if (code.b == b) {, +                    return code;, +                }, +            }, +            return UNKNOWN;, +        }, +, +        public byte getByteValue() {, +            return b;, +        }, +    }, +]