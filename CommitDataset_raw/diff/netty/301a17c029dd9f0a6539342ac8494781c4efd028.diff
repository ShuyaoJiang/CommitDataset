[+++ b/codec/src/main/java/io/netty/handler/codec/embedder/AbstractCodecEmbedder.java, +        public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/codec/src/main/java/io/netty/handler/codec/embedder/AbstractCodecEmbedder.java, +        public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-http/src/main/java/io/netty/channel/socket/http/AbstractHttpChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/codec/src/main/java/io/netty/handler/codec/embedder/AbstractCodecEmbedder.java, +        public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-http/src/main/java/io/netty/channel/socket/http/AbstractHttpChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent event) throws Exception {, +++ b/codec/src/main/java/io/netty/handler/codec/embedder/AbstractCodecEmbedder.java, +        public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-http/src/main/java/io/netty/channel/socket/http/AbstractHttpChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent event) throws Exception {, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/AbstractScptChannelSink.java, +    public void fireUpstreamEventLater(final ChannelPipeline pipeline, final ChannelEvent e) throws Exception {, +                channel.worker.executeInIoThread(new Runnable() {, +++ b/codec/src/main/java/io/netty/handler/codec/embedder/AbstractCodecEmbedder.java, +        public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-http/src/main/java/io/netty/channel/socket/http/AbstractHttpChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent event) throws Exception {, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/AbstractScptChannelSink.java, +    public void fireUpstreamEventLater(final ChannelPipeline pipeline, final ChannelEvent e) throws Exception {, +                channel.worker.executeInIoThread(new Runnable() {, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/SctpWorker.java, +    @Override, +    public void executeInIoThread(Runnable eventRunnable) {, +++ b/codec/src/main/java/io/netty/handler/codec/embedder/AbstractCodecEmbedder.java, +        public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-http/src/main/java/io/netty/channel/socket/http/AbstractHttpChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent event) throws Exception {, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/AbstractScptChannelSink.java, +    public void fireUpstreamEventLater(final ChannelPipeline pipeline, final ChannelEvent e) throws Exception {, +                channel.worker.executeInIoThread(new Runnable() {, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/SctpWorker.java, +    @Override, +    public void executeInIoThread(Runnable eventRunnable) {, +++ b/transport/src/main/java/io/netty/channel/ChannelSink.java, +    /**, +     * Schedule the given {@link ChannelEvent} for later execution (in the io-thread). Some implementation may not support his and just fire it directly, +     */, +    void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception;, +++ b/codec/src/main/java/io/netty/handler/codec/embedder/AbstractCodecEmbedder.java, +        public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-http/src/main/java/io/netty/channel/socket/http/AbstractHttpChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent event) throws Exception {, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/AbstractScptChannelSink.java, +    public void fireUpstreamEventLater(final ChannelPipeline pipeline, final ChannelEvent e) throws Exception {, +                channel.worker.executeInIoThread(new Runnable() {, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/SctpWorker.java, +    @Override, +    public void executeInIoThread(Runnable eventRunnable) {, +++ b/transport/src/main/java/io/netty/channel/ChannelSink.java, +    /**, +     * Schedule the given {@link ChannelEvent} for later execution (in the io-thread). Some implementation may not support his and just fire it directly, +     */, +    void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception;, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            getSink().fireUpstreamEventLater(this, e);, +        public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/codec/src/main/java/io/netty/handler/codec/embedder/AbstractCodecEmbedder.java, +        public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-http/src/main/java/io/netty/channel/socket/http/AbstractHttpChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent event) throws Exception {, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/AbstractScptChannelSink.java, +    public void fireUpstreamEventLater(final ChannelPipeline pipeline, final ChannelEvent e) throws Exception {, +                channel.worker.executeInIoThread(new Runnable() {, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/SctpWorker.java, +    @Override, +    public void executeInIoThread(Runnable eventRunnable) {, +++ b/transport/src/main/java/io/netty/channel/ChannelSink.java, +    /**, +     * Schedule the given {@link ChannelEvent} for later execution (in the io-thread). Some implementation may not support his and just fire it directly, +     */, +    void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception;, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            getSink().fireUpstreamEventLater(this, e);, +        public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport/src/main/java/io/netty/channel/iostream/IoStreamChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/codec/src/main/java/io/netty/handler/codec/embedder/AbstractCodecEmbedder.java, +        public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-http/src/main/java/io/netty/channel/socket/http/AbstractHttpChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelSink.java, +    public void fireUpstreamEventLater(ChannelPipeline pipeline, ChannelEvent event) throws Exception {, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/AbstractScptChannelSink.java, +    public void fireUpstreamEventLater(final ChannelPipeline pipeline, final ChannelEvent e) throws Exception {]