[+++ b/handler/src/main/java/io/netty/handler/ssl/ApplicationProtocolConfig.java, +import javax.net.ssl.SSLEngine;, +, +import static io.netty.handler.ssl.ApplicationProtocolUtil.toList;, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +        /**, +         * If the peer who selects the application protocol doesn't find a match this will result in the failing the, +         * handshake with a fatal alert., +         * <p>, +         * For example in the case of ALPN this will result in a, +         * <a herf="https://tools.ietf.org/html/rfc7301#section-3.2">no_application_protocol(120)</a> alert., +         */, +        FATAL_ALERT,, +        /**, +         * If the peer who selects the application protocol doesn't find a match it will pretend no to support, +         * the TLS extension by not advertising support for the TLS extension in the handshake. This is used in cases, +         * where a "best effort" is desired to talk even if there is no matching protocol., +         */, +        NO_ADVERTISE,, +        /**, +         * If the peer who selects the application protocol doesn't find a match it will just select the last protocol, +         * it advertised support for. This is used in cases where a "best effort" is desired to talk even if there, +         * is no matching protocol, and the assumption is the "most general" fallback protocol is typically listed last., +         * <p>, +         * This may be <a href="https://tools.ietf.org/html/rfc7301#section-3.2">illegal for some RFCs</a> but was, +         * observed behavior by some SSL implementations, and is supported for flexibility/compatibility., +         */, +        CHOOSE_MY_LAST_PROTOCOL, +        /**, +         * If the peer who is notified what protocol was selected determines the selection was not matched, or the peer, +         * didn't advertise support for the TLS extension then the handshake will continue and the application protocol, +         * is assumed to be accepted., +         */, +        ACCEPT,, +        /**, +         * If the peer who is notified what protocol was selected determines the selection was not matched, or the peer, +         * didn't advertise support for the TLS extension then the handshake will be failed with a fatal alert., +         */, +        FATAL_ALERT,, +        /**, +         * If the peer who is notified what protocol was selected determines the selection was not matched, or the peer, +         * didn't advertise support for the TLS extension then the handshake will continue assuming the last protocol, +         * supported by this peer is used. This is used in cases where a "best effort" is desired to talk even if there, +         * is no matching protocol, and the assumption is the "most general" fallback protocol is typically listed last., +         */, +        CHOOSE_MY_LAST_PROTOCOL]