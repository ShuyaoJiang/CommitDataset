[+++ b/transport/src/main/java/io/netty/channel/ChannelInboundHandlerAdapter.java, +    /**, +     * Calls {@link ChannelHandlerContext#fireChannelReadComplete()} to forward, +     * to the next {@link ChannelInboundHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +++ b/transport/src/main/java/io/netty/channel/ChannelInboundHandlerAdapter.java, +    /**, +     * Calls {@link ChannelHandlerContext#fireChannelReadComplete()} to forward, +     * to the next {@link ChannelInboundHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +++ b/transport/src/main/java/io/netty/channel/ChannelOutboundHandler.java, +    /**, +    * Called once a write operation is made. The write operation will write the messages through the, +     * {@link ChannelPipeline}. Those are then ready to be flushed to the actual {@link Channel} once, +     * {@link Channel#flush()} is called, +     *, +     * @param ctx               the {@link ChannelHandlerContext} for which the write operation is made, +     * @param msg               the message to write, +     * @param promise           the {@link ChannelPromise} to notify once the operation completes, +     * @throws Exception        thrown if an error accour, +     */, +    /**, +     * Called once a flush operation is made. The flush operation will try to flush out all previous written messages, +     * that are pending., +     *, +     * @param ctx               the {@link ChannelHandlerContext} for which the flush operation is made, +     * @throws Exception        thrown if an error accour, +     */]