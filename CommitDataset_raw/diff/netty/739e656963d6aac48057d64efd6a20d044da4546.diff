[+++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, +     * {@link ChannelPipeline} for each new {@link Channel}., +     * {@link ChannelPipeline} for each new {@link Channel}.  Calling this, +     * method invalidates the current {@code pipeline} property of this, +     * bootstrap.  Subsequent {@link #getPipeline()} and {@link #getPipelineAsMap()}, +     * calls will raise {@link IllegalStateException}., +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, +     * {@link ChannelPipeline} for each new {@link Channel}., +     * {@link ChannelPipeline} for each new {@link Channel}.  Calling this, +     * method invalidates the current {@code pipeline} property of this, +     * bootstrap.  Subsequent {@link #getPipeline()} and {@link #getPipelineAsMap()}, +     * calls will raise {@link IllegalStateException}., +++ b/src/main/java/org/jboss/netty/channel/ChannelPipelineFactory.java, +import org.jboss.netty.bootstrap.Bootstrap;, +import org.jboss.netty.bootstrap.ClientBootstrap;, +import org.jboss.netty.bootstrap.ConnectionlessBootstrap;, +, + * When a {@linkplain ServerChannel server-side channel} accepts a new incoming, + * connection, a new child channel is created for each newly accepted connection., + * A new child channel uses a new {@link ChannelPipeline}, which is created by, + * the {@link ChannelPipelineFactory} specified in the server-side channel's, + * {@link ChannelConfig#getPipelineFactory() "pipelineFactory"} option., + * <p>, + * Also, when a {@link ClientBootstrap} or {@link ConnectionlessBootstrap}, + * creates a new channel, it uses the {@link Bootstrap#getPipelineFactory() "pipelineFactory"}, + * property to create a new {@link ChannelPipeline} for each new channel.]