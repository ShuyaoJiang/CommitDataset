[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +     * Creates a new instance with the specified decoder options., +     */, +    public HttpClientCodec(, +            int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean failOnMissingResponse,, +            boolean validateHeaders, int initialBufferSize) {, +        init(new Decoder(maxInitialLineLength, maxHeaderSize, maxChunkSize, validateHeaders, initialBufferSize),, +             new Encoder());, +        this.failOnMissingResponse = failOnMissingResponse;, +    }, +, +    /**, +        Decoder(int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean validateHeaders,, +                int initialBufferSize) {, +            super(maxInitialLineLength, maxHeaderSize, maxChunkSize, validateHeaders, initialBufferSize);, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +     * Creates a new instance with the specified decoder options., +     */, +    public HttpClientCodec(, +            int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean failOnMissingResponse,, +            boolean validateHeaders, int initialBufferSize) {, +        init(new Decoder(maxInitialLineLength, maxHeaderSize, maxChunkSize, validateHeaders, initialBufferSize),, +             new Encoder());, +        this.failOnMissingResponse = failOnMissingResponse;, +    }, +, +    /**, +        Decoder(int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean validateHeaders,, +                int initialBufferSize) {, +            super(maxInitialLineLength, maxHeaderSize, maxChunkSize, validateHeaders, initialBufferSize);, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java, +        this(maxInitialLineLength, maxHeaderSize, maxChunkSize, chunkedSupported, validateHeaders, 128);, +    }, +    protected HttpObjectDecoder(, +            int maxInitialLineLength, int maxHeaderSize, int maxChunkSize,, +            boolean chunkedSupported, boolean validateHeaders, int initialBufferSize) {, +        AppendableCharSequence seq = new AppendableCharSequence(initialBufferSize);, +        lineParser = new LineParser(seq, maxInitialLineLength);, +        headerParser = new HeaderParser(seq, maxHeaderSize);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +     * Creates a new instance with the specified decoder options., +     */, +    public HttpClientCodec(, +            int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean failOnMissingResponse,, +            boolean validateHeaders, int initialBufferSize) {, +        init(new Decoder(maxInitialLineLength, maxHeaderSize, maxChunkSize, validateHeaders, initialBufferSize),, +             new Encoder());, +        this.failOnMissingResponse = failOnMissingResponse;, +    }, +, +    /**, +        Decoder(int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean validateHeaders,, +                int initialBufferSize) {, +            super(maxInitialLineLength, maxHeaderSize, maxChunkSize, validateHeaders, initialBufferSize);, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java, +        this(maxInitialLineLength, maxHeaderSize, maxChunkSize, chunkedSupported, validateHeaders, 128);, +    }, +    protected HttpObjectDecoder(, +            int maxInitialLineLength, int maxHeaderSize, int maxChunkSize,, +            boolean chunkedSupported, boolean validateHeaders, int initialBufferSize) {, +        AppendableCharSequence seq = new AppendableCharSequence(initialBufferSize);, +        lineParser = new LineParser(seq, maxInitialLineLength);, +        headerParser = new HeaderParser(seq, maxHeaderSize);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequestDecoder.java, +    public HttpRequestDecoder(, +            int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean validateHeaders,, +            int initialBufferSize) {, +        super(maxInitialLineLength, maxHeaderSize, maxChunkSize, true, validateHeaders, initialBufferSize);, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +     * Creates a new instance with the specified decoder options., +     */, +    public HttpClientCodec(, +            int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean failOnMissingResponse,, +            boolean validateHeaders, int initialBufferSize) {, +        init(new Decoder(maxInitialLineLength, maxHeaderSize, maxChunkSize, validateHeaders, initialBufferSize),, +             new Encoder());, +        this.failOnMissingResponse = failOnMissingResponse;, +    }, +, +    /**, +        Decoder(int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean validateHeaders,, +                int initialBufferSize) {, +            super(maxInitialLineLength, maxHeaderSize, maxChunkSize, validateHeaders, initialBufferSize);, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java, +        this(maxInitialLineLength, maxHeaderSize, maxChunkSize, chunkedSupported, validateHeaders, 128);, +    }, +    protected HttpObjectDecoder(, +            int maxInitialLineLength, int maxHeaderSize, int maxChunkSize,, +            boolean chunkedSupported, boolean validateHeaders, int initialBufferSize) {, +        AppendableCharSequence seq = new AppendableCharSequence(initialBufferSize);]