[+++ b/src/main/java/org/jboss/netty/handler/codec/frame/DelimiterBasedFrameDecoder.java, +        // Try all delimiters and choose the delimiter which yields the shortest frame., +        int minDelimIndex = Integer.MAX_VALUE;, +        ChannelBuffer minDelim = null;, +            if (delimIndex >= 0 && delimIndex < minDelimIndex) {, +                minDelimIndex = delimIndex;, +                minDelim = delim;, +        if (minDelim != null) {, +            ChannelBuffer frame = buffer.readBytes(minDelimIndex);, +            if (frame.readableBytes() > maxFrameLength) {, +                fail(frame.readableBytes());, +            }, +            buffer.skipBytes(minDelim.capacity());, +            return frame;, +        }, +, +            fail(buffer.readableBytes());, +    private void fail(int frameLength) throws TooLongFrameException {, +                "The frame length exceeds " + maxFrameLength + ": " + frameLength);, +++ b/src/main/java/org/jboss/netty/handler/codec/frame/DelimiterBasedFrameDecoder.java, +        // Try all delimiters and choose the delimiter which yields the shortest frame., +        int minDelimIndex = Integer.MAX_VALUE;, +        ChannelBuffer minDelim = null;, +            if (delimIndex >= 0 && delimIndex < minDelimIndex) {, +                minDelimIndex = delimIndex;, +                minDelim = delim;, +        if (minDelim != null) {, +            ChannelBuffer frame = buffer.readBytes(minDelimIndex);, +            if (frame.readableBytes() > maxFrameLength) {, +                fail(frame.readableBytes());, +            }, +            buffer.skipBytes(minDelim.capacity());, +            return frame;, +        }, +, +            fail(buffer.readableBytes());, +    private void fail(int frameLength) throws TooLongFrameException {, +                "The frame length exceeds " + maxFrameLength + ": " + frameLength);, +++ b/src/main/java/org/jboss/netty/handler/codec/frame/Delimiters.java, +        };, +++ b/src/main/java/org/jboss/netty/handler/codec/frame/DelimiterBasedFrameDecoder.java, +        // Try all delimiters and choose the delimiter which yields the shortest frame., +        int minDelimIndex = Integer.MAX_VALUE;, +        ChannelBuffer minDelim = null;, +            if (delimIndex >= 0 && delimIndex < minDelimIndex) {, +                minDelimIndex = delimIndex;, +                minDelim = delim;, +        if (minDelim != null) {, +            ChannelBuffer frame = buffer.readBytes(minDelimIndex);, +            if (frame.readableBytes() > maxFrameLength) {, +                fail(frame.readableBytes());, +            }, +            buffer.skipBytes(minDelim.capacity());, +            return frame;, +        }, +, +            fail(buffer.readableBytes());, +    private void fail(int frameLength) throws TooLongFrameException {, +                "The frame length exceeds " + maxFrameLength + ": " + frameLength);, +++ b/src/main/java/org/jboss/netty/handler/codec/frame/Delimiters.java, +        };, +++ b/src/test/java/org/jboss/netty/bootstrap/AbstractSocketClientBootstrapTest.java, +    public void testSuccessfulConnectionAttempt() throws Throwable {, +            if (future.getCause() != null) {, +                throw future.getCause();, +            }, +, +    public void testSuccessfulConnectionAttemptWithLocalAddress() throws Throwable {, +            if (future.getCause() != null) {, +                throw future.getCause();, +            }, +, +++ b/src/main/java/org/jboss/netty/handler/codec/frame/DelimiterBasedFrameDecoder.java, +        // Try all delimiters and choose the delimiter which yields the shortest frame., +        int minDelimIndex = Integer.MAX_VALUE;, +        ChannelBuffer minDelim = null;, +            if (delimIndex >= 0 && delimIndex < minDelimIndex) {, +                minDelimIndex = delimIndex;, +                minDelim = delim;, +        if (minDelim != null) {, +            ChannelBuffer frame = buffer.readBytes(minDelimIndex);, +            if (frame.readableBytes() > maxFrameLength) {, +                fail(frame.readableBytes());, +            }, +            buffer.skipBytes(minDelim.capacity());, +            return frame;, +        }, +, +            fail(buffer.readableBytes());, +    private void fail(int frameLength) throws TooLongFrameException {, +                "The frame length exceeds " + maxFrameLength + ": " + frameLength);, +++ b/src/main/java/org/jboss/netty/handler/codec/frame/Delimiters.java, +        };, +++ b/src/test/java/org/jboss/netty/bootstrap/AbstractSocketClientBootstrapTest.java, +    public void testSuccessfulConnectionAttempt() throws Throwable {, +            if (future.getCause() != null) {, +                throw future.getCause();, +            }, +, +    public void testSuccessfulConnectionAttemptWithLocalAddress() throws Throwable {]