[+++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +            if (buf instanceof WrappedCompositeByteBuf) {, +                // WrappedCompositeByteBuf is a sub-class of AbstractByteBuf so it needs special handling., +                buf = buf.unwrap();, +            } else if (buf instanceof AbstractByteBuf) {, +                if (buf instanceof WrappedCompositeByteBuf) {, +                    // WrappedCompositeByteBuf is a sub-class of AbstractByteBuf so it needs special handling., +                    buf = buf.unwrap();, +                } else if (buf instanceof AbstractByteBuf) {, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +            if (buf instanceof WrappedCompositeByteBuf) {, +                // WrappedCompositeByteBuf is a sub-class of AbstractByteBuf so it needs special handling., +                buf = buf.unwrap();, +            } else if (buf instanceof AbstractByteBuf) {, +                if (buf instanceof WrappedCompositeByteBuf) {, +                    // WrappedCompositeByteBuf is a sub-class of AbstractByteBuf so it needs special handling., +                    buf = buf.unwrap();, +                } else if (buf instanceof AbstractByteBuf) {, +++ b/buffer/src/test/java/io/netty/buffer/ByteBufUtilTest.java, +    public void testWriteUsAsciiComposite() {, +        String usAscii = "NettyRocks";, +        ByteBuf buf = Unpooled.buffer(16);, +        buf.writeBytes(usAscii.getBytes(CharsetUtil.US_ASCII));, +        ByteBuf buf2 = Unpooled.compositeBuffer().addComponent(, +                Unpooled.buffer(8)).addComponent(Unpooled.buffer(24));, +        // write some byte so we start writing with an offset., +        buf2.writeByte(1);, +        ByteBufUtil.writeAscii(buf2, usAscii);, +, +        // Skip the previously written byte., +        assertEquals(buf, buf2.skipBytes(1));, +, +        buf.release();, +        buf2.release();, +    }, +, +    @Test, +    public void testWriteUsAsciiCompositeWrapped() {, +        String usAscii = "NettyRocks";, +        ByteBuf buf = Unpooled.buffer(16);, +        buf.writeBytes(usAscii.getBytes(CharsetUtil.US_ASCII));, +        ByteBuf buf2 = new WrappedCompositeByteBuf(Unpooled.compositeBuffer().addComponent(, +                Unpooled.buffer(8)).addComponent(Unpooled.buffer(24)));, +        // write some byte so we start writing with an offset., +        buf2.writeByte(1);, +        ByteBufUtil.writeAscii(buf2, usAscii);, +, +        // Skip the previously written byte., +        assertEquals(buf, buf2.skipBytes(1));, +, +        buf.release();, +        buf2.release();, +    }, +, +    @Test, +    public void testWriteUtf8Composite() {, +        String utf8 = "Some UTF-8 like äÄ∏ŒŒ";, +        ByteBuf buf = Unpooled.buffer(16);, +        buf.writeBytes(utf8.getBytes(CharsetUtil.UTF_8));, +        ByteBuf buf2 = Unpooled.compositeBuffer().addComponent(, +                Unpooled.buffer(8)).addComponent(Unpooled.buffer(24));, +        // write some byte so we start writing with an offset., +        buf2.writeByte(1);, +        ByteBufUtil.writeUtf8(buf2, utf8);, +, +        // Skip the previously written byte., +        assertEquals(buf, buf2.skipBytes(1));, +, +        buf.release();, +        buf2.release();, +    }, +, +    @Test, +    public void testWriteUtf8CompositeWrapped() {, +        String utf8 = "Some UTF-8 like äÄ∏ŒŒ";, +        ByteBuf buf = Unpooled.buffer(16);, +        buf.writeBytes(utf8.getBytes(CharsetUtil.UTF_8));, +        ByteBuf buf2 = new WrappedCompositeByteBuf(Unpooled.compositeBuffer().addComponent(, +                Unpooled.buffer(8)).addComponent(Unpooled.buffer(24)));, +        // write some byte so we start writing with an offset., +        buf2.writeByte(1);, +        ByteBufUtil.writeUtf8(buf2, utf8);, +, +        // Skip the previously written byte., +        assertEquals(buf, buf2.skipBytes(1));, +, +        buf.release();, +        buf2.release();, +    }, +, +    @Test]