[+++ b/transport/src/main/java/io/netty/channel/ChannelConfig.java, +    ChannelConfig setConnectTimeoutMillis(int connectTimeoutMillis);, +    ChannelConfig setWriteSpinCount(int writeSpinCount);, +    /**, +     * Returns {@link ByteBufAllocator} which is used for the channel, +     * to allocate buffers., +     */, +, +    /**, +     * Set the {@link ByteBufAllocator} which is used for the channel, +     * to allocate buffers., +     */, +    ChannelConfig setAllocator(ByteBufAllocator allocator);, +++ b/transport/src/main/java/io/netty/channel/ChannelConfig.java, +    ChannelConfig setConnectTimeoutMillis(int connectTimeoutMillis);, +    ChannelConfig setWriteSpinCount(int writeSpinCount);, +    /**, +     * Returns {@link ByteBufAllocator} which is used for the channel, +     * to allocate buffers., +     */, +, +    /**, +     * Set the {@link ByteBufAllocator} which is used for the channel, +     * to allocate buffers., +     */, +    ChannelConfig setAllocator(ByteBufAllocator allocator);, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelConfig.java, +    public ChannelConfig setConnectTimeoutMillis(int connectTimeoutMillis) {, +        return this;, +    public ChannelConfig setWriteSpinCount(int writeSpinCount) {, +        return this;, +    public ChannelConfig setAllocator(ByteBufAllocator allocator) {, +        return this;, +++ b/transport/src/main/java/io/netty/channel/ChannelConfig.java, +    ChannelConfig setConnectTimeoutMillis(int connectTimeoutMillis);, +    ChannelConfig setWriteSpinCount(int writeSpinCount);, +    /**, +     * Returns {@link ByteBufAllocator} which is used for the channel, +     * to allocate buffers., +     */, +, +    /**, +     * Set the {@link ByteBufAllocator} which is used for the channel, +     * to allocate buffers., +     */, +    ChannelConfig setAllocator(ByteBufAllocator allocator);, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelConfig.java, +    public ChannelConfig setConnectTimeoutMillis(int connectTimeoutMillis) {, +        return this;, +    public ChannelConfig setWriteSpinCount(int writeSpinCount) {, +        return this;, +    public ChannelConfig setAllocator(ByteBufAllocator allocator) {, +        return this;, +++ b/transport/src/main/java/io/netty/channel/socket/DatagramChannelConfig.java, +import io.netty.buffer.ByteBufAllocator;, +    DatagramChannelConfig setSendBufferSize(int sendBufferSize);, +    DatagramChannelConfig setReceiveBufferSize(int receiveBufferSize);, +    DatagramChannelConfig setReceivePacketSize(int receivePacketSize);, +    DatagramChannelConfig setTrafficClass(int trafficClass);, +    DatagramChannelConfig setReuseAddress(boolean reuseAddress);, +    DatagramChannelConfig setBroadcast(boolean broadcast);, +    DatagramChannelConfig setLoopbackModeDisabled(boolean loopbackModeDisabled);, +    DatagramChannelConfig setTimeToLive(int ttl);, +    DatagramChannelConfig setInterface(InetAddress interfaceAddress);, +    DatagramChannelConfig setNetworkInterface(NetworkInterface networkInterface);, +, +    @Override, +    DatagramChannelConfig setWriteSpinCount(int writeSpinCount);, +, +    @Override, +    DatagramChannelConfig setConnectTimeoutMillis(int connectTimeoutMillis);, +, +    @Override, +    DatagramChannelConfig setAllocator(ByteBufAllocator allocator);, +++ b/transport/src/main/java/io/netty/channel/ChannelConfig.java, +    ChannelConfig setConnectTimeoutMillis(int connectTimeoutMillis);, +    ChannelConfig setWriteSpinCount(int writeSpinCount);, +    /**, +     * Returns {@link ByteBufAllocator} which is used for the channel, +     * to allocate buffers., +     */, +, +    /**, +     * Set the {@link ByteBufAllocator} which is used for the channel, +     * to allocate buffers., +     */, +    ChannelConfig setAllocator(ByteBufAllocator allocator);, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelConfig.java, +    public ChannelConfig setConnectTimeoutMillis(int connectTimeoutMillis) {, +        return this;, +    public ChannelConfig setWriteSpinCount(int writeSpinCount) {, +        return this;, +    public ChannelConfig setAllocator(ByteBufAllocator allocator) {, +        return this;, +++ b/transport/src/main/java/io/netty/channel/socket/DatagramChannelConfig.java, +import io.netty.buffer.ByteBufAllocator;, +    DatagramChannelConfig setSendBufferSize(int sendBufferSize);, +    DatagramChannelConfig setReceiveBufferSize(int receiveBufferSize);, +    DatagramChannelConfig setReceivePacketSize(int receivePacketSize);, +    DatagramChannelConfig setTrafficClass(int trafficClass);]