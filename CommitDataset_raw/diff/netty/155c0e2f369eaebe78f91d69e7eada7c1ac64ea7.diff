[+++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    private static final ByteBuffer EMPTY_NIO_BUFFER = Unpooled.EMPTY_BUFFER.nioBuffer();, +, +        switch (components.size()) {, +        case 0:, +            return true;, +        case 1:, +        default:, +    }, +        switch (components.size()) {, +        case 0:, +            return EmptyArrays.EMPTY_BYTES;, +        case 1:, +        default:, +    }, +        switch (components.size()) {, +        case 0:, +            return 0;, +        case 1:, +        default:, +    }, +        switch (components.size()) {, +        case 0:, +            return Unpooled.EMPTY_BUFFER.hasMemoryAddress();, +        case 1:, +        default:, +    }, +        switch (components.size()) {, +        case 0:, +            return Unpooled.EMPTY_BUFFER.memoryAddress();, +        case 1:, +        default:, +    }, +        final int numComponents = components.size();, +        if (numComponents == 0) {, +        return components.get(numComponents - 1).endOffset;, +            return in.read(EMPTY_NIO_BUFFER);, +        switch (components.size()) {, +        case 0:, +            return 1;, +        case 1:, +        default:, +        switch (components.size()) {, +        case 0:, +            return EMPTY_NIO_BUFFER;, +        case 1:, +        default:, +    }, +        checkIndex(index, length);, +, +        switch (components.size()) {, +        case 0:, +            return EMPTY_NIO_BUFFER;, +        case 1:, +, +        for (ByteBuffer buf: buffers) {, +            merged.put(buf);, +            return new ByteBuffer[] { EMPTY_NIO_BUFFER };]