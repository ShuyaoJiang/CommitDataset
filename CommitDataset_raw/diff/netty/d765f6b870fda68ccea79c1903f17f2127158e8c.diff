[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +            !HttpHeaders.equalsIgnoreCase(HttpHeaders.Values.IDENTITY, contentEncoding)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +            !HttpHeaders.equalsIgnoreCase(HttpHeaders.Values.IDENTITY, contentEncoding)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +class WebSocketServerProtocolHandshakeHandler extends ChannelInboundHandlerAdapter {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +            !HttpHeaders.equalsIgnoreCase(HttpHeaders.Values.IDENTITY, contentEncoding)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +class WebSocketServerProtocolHandshakeHandler extends ChannelInboundHandlerAdapter {, +++ b/codec-memcache/src/main/java/io/netty/handler/codec/memcache/binary/BinaryMemcacheClientCodec.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +            !HttpHeaders.equalsIgnoreCase(HttpHeaders.Values.IDENTITY, contentEncoding)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +class WebSocketServerProtocolHandshakeHandler extends ChannelInboundHandlerAdapter {, +++ b/codec-memcache/src/main/java/io/netty/handler/codec/memcache/binary/BinaryMemcacheClientCodec.java, +++ b/handler/src/main/java/io/netty/handler/logging/LoggingHandler.java, +@SuppressWarnings({ "StringConcatenationInsideStringBufferAppend", "StringBufferReplaceableByString" }), +        ctx.fireChannelUnregistered();, +        ctx.deregister(promise);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +            !HttpHeaders.equalsIgnoreCase(HttpHeaders.Values.IDENTITY, contentEncoding)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +class WebSocketServerProtocolHandshakeHandler extends ChannelInboundHandlerAdapter {, +++ b/codec-memcache/src/main/java/io/netty/handler/codec/memcache/binary/BinaryMemcacheClientCodec.java, +++ b/handler/src/main/java/io/netty/handler/logging/LoggingHandler.java, +@SuppressWarnings({ "StringConcatenationInsideStringBufferAppend", "StringBufferReplaceableByString" }), +        ctx.fireChannelUnregistered();, +        ctx.deregister(promise);, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java, +public class ChunkedWriteHandler extends ChannelDuplexHandler {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +            !HttpHeaders.equalsIgnoreCase(HttpHeaders.Values.IDENTITY, contentEncoding)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +class WebSocketServerProtocolHandshakeHandler extends ChannelInboundHandlerAdapter {, +++ b/codec-memcache/src/main/java/io/netty/handler/codec/memcache/binary/BinaryMemcacheClientCodec.java, +++ b/handler/src/main/java/io/netty/handler/logging/LoggingHandler.java, +@SuppressWarnings({ "StringConcatenationInsideStringBufferAppend", "StringBufferReplaceableByString" }), +        ctx.fireChannelUnregistered();, +        ctx.deregister(promise);, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java, +public class ChunkedWriteHandler extends ChannelDuplexHandler {, +++ b/transport/src/main/java/io/netty/channel/embedded/EmbeddedEventLoop.java, +]