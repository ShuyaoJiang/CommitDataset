[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JZlibEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JZlibEncoder.java, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JdkZlibEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JZlibEncoder.java, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JdkZlibEncoder.java, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    private static final ChannelMetadata METADATA = new ChannelMetadata(ChannelBufType.MESSAGE, false);, +, +    public ChannelMetadata metadata() {, +        return METADATA;, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JZlibEncoder.java, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JdkZlibEncoder.java, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    private static final ChannelMetadata METADATA = new ChannelMetadata(ChannelBufType.MESSAGE, false);, +, +    public ChannelMetadata metadata() {, +        return METADATA;, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +    ChannelMetadata metadata();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JZlibEncoder.java, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JdkZlibEncoder.java, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    private static final ChannelMetadata METADATA = new ChannelMetadata(ChannelBufType.MESSAGE, false);, +, +    public ChannelMetadata metadata() {, +        return METADATA;, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +    ChannelMetadata metadata();, +++ b/transport/src/main/java/io/netty/channel/ChannelMetadata.java, +/*, + * Copyright 2012 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.channel;, +, +import io.netty.buffer.ChannelBufType;, +, +import java.net.SocketAddress;, +, +/**, + * Represents the properties of a {@link Channel} implementation., + */, +public final class ChannelMetadata {, +, +    private final ChannelBufType bufferType;, +    private final boolean hasDisconnect;, +, +    public ChannelMetadata(ChannelBufType bufferType, boolean hasDisconnect) {, +        if (bufferType == null) {, +            throw new NullPointerException("bufferType");, +        }, +, +        this.bufferType = bufferType;, +        this.hasDisconnect = hasDisconnect;, +    }, +, +    public ChannelBufType bufferType() {, +        return bufferType;, +    }, +, +    /**, +     * Returns {@code true} if and only if the channel has the {@code disconnect()} operation, +     * that allows a user to disconnect and then call {@link Channel#connect(SocketAddress)} again,, +     * such as UDP/IP., +     */, +    public boolean hasDisconnect() {, +        return hasDisconnect;, +    }, +}, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JZlibEncoder.java, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JdkZlibEncoder.java, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    private static final ChannelMetadata METADATA = new ChannelMetadata(ChannelBufType.MESSAGE, false);, +, +    public ChannelMetadata metadata() {, +        return METADATA;, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +    ChannelMetadata metadata();, +++ b/transport/src/main/java/io/netty/channel/ChannelMetadata.java, +/*, + * Copyright 2012 The Netty Project, + *]