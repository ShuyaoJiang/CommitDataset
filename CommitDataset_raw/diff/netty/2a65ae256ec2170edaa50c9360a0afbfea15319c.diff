[+++ b/NOTICE.txt, +This product contains a modified portion of 'Apache Commons Lang', a Java library, +provides utilities for the java.lang API, which can be obtained at:, +, +  * LICENSE:, +    * license/LICENSE.commons-lang.txt (Apache License 2.0), +  * HOMEPAGE:, +    * https://commons.apache.org/proper/commons-lang/, +, +++ b/NOTICE.txt, +This product contains a modified portion of 'Apache Commons Lang', a Java library, +provides utilities for the java.lang API, which can be obtained at:, +, +  * LICENSE:, +    * license/LICENSE.commons-lang.txt (Apache License 2.0), +  * HOMEPAGE:, +    * https://commons.apache.org/proper/commons-lang/, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpUtil.java, +import io.netty.util.AsciiString;, +import io.netty.util.CharsetUtil;, +import java.nio.charset.Charset;, +import java.nio.charset.UnsupportedCharsetException;, +    private static final AsciiString CHARSET_EQUALS = AsciiString.of(HttpHeaderValues.CHARSET + "=");, +    /**, +     * Fetch charset from message's Content-Type header., +     *, +     * @return the charset from message's Content-Type header or {@link io.netty.util.CharsetUtil#ISO_8859_1}, +     * if charset is not presented or unparsable, +     */, +    public static Charset getCharset(HttpMessage message) {, +        return getCharset(message, CharsetUtil.ISO_8859_1);, +    }, +, +    /**, +     * Fetch charset from message's Content-Type header., +     *, +     * @return the charset from message's Content-Type header or {@code defaultCharset}, +     * if charset is not presented or unparsable, +     */, +    public static Charset getCharset(HttpMessage message, Charset defaultCharset) {, +        CharSequence charsetCharSequence = getCharsetAsString(message);, +        if (charsetCharSequence != null) {, +            try {, +                return Charset.forName(charsetCharSequence.toString());, +            } catch (UnsupportedCharsetException unsupportedException) {, +                return defaultCharset;, +            }, +        } else {, +            return defaultCharset;, +        }, +    }, +, +    /**, +     * Fetch charset string from message's Content-Type header., +     *, +     * A lot of sites/possibly clients have charset="CHARSET", for example charset="utf-8". Or "utf8" instead of "utf-8", +     * This is not according to standard, but this method provide an ability to catch desired mistakes manually in code, +     *, +     * @return the charset string from message's Content-Type header or {@code null} if charset is not presented, +     */, +    public static CharSequence getCharsetAsString(HttpMessage message) {, +        CharSequence contentTypeValue = message.headers().get(HttpHeaderNames.CONTENT_TYPE);, +        if (contentTypeValue != null) {, +            int indexOfCharset = AsciiString.indexOfIgnoreCaseAscii(contentTypeValue, CHARSET_EQUALS, 0);, +            if (indexOfCharset != AsciiString.INDEX_NOT_FOUND) {, +                int indexOfEncoding = indexOfCharset + CHARSET_EQUALS.length();, +                if (indexOfEncoding < contentTypeValue.length()) {, +                    return contentTypeValue.subSequence(indexOfEncoding, contentTypeValue.length());, +                }, +            }, +        }, +        return null;, +    }, +, +++ b/NOTICE.txt, +This product contains a modified portion of 'Apache Commons Lang', a Java library, +provides utilities for the java.lang API, which can be obtained at:, +, +  * LICENSE:, +    * license/LICENSE.commons-lang.txt (Apache License 2.0), +  * HOMEPAGE:, +    * https://commons.apache.org/proper/commons-lang/, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpUtil.java, +import io.netty.util.AsciiString;, +import io.netty.util.CharsetUtil;, +import java.nio.charset.Charset;, +import java.nio.charset.UnsupportedCharsetException;, +    private static final AsciiString CHARSET_EQUALS = AsciiString.of(HttpHeaderValues.CHARSET + "=");, +    /**, +     * Fetch charset from message's Content-Type header., +     *, +     * @return the charset from message's Content-Type header or {@link io.netty.util.CharsetUtil#ISO_8859_1}, +     * if charset is not presented or unparsable, +     */, +    public static Charset getCharset(HttpMessage message) {, +        return getCharset(message, CharsetUtil.ISO_8859_1);, +    }, +]