[+++ b/example/pom.xml, +, +    <!-- Needed on Java11 and later -->, +    <dependency>, +      <groupId>com.sun.activation</groupId>, +      <artifactId>javax.activation</artifactId>, +    </dependency>, +++ b/example/pom.xml, +, +    <!-- Needed on Java11 and later -->, +    <dependency>, +      <groupId>com.sun.activation</groupId>, +      <artifactId>javax.activation</artifactId>, +    </dependency>, +++ b/pom.xml, +    <!-- JDK11 -->, +    <profile>, +      <id>java11</id>, +      <activation>, +        <jdk>11</jdk>, +      </activation>, +      <properties>, +        <!-- Not use alpn agent as Java11 supports alpn out of the box -->, +        <argLine.alpnAgent />, +        <forbiddenapis.skip>true</forbiddenapis.skip>, +        <!-- Needed because of https://issues.apache.org/jira/browse/MENFORCER-275 -->, +        <enforcer.plugin.version>3.0.0-M1</enforcer.plugin.version>, +        <!-- 1.4.x does not work in Java10+ -->, +        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>, +      </properties>, +    </profile>, +, +      <!-- Needed for java11 and later as javax.activation is not part of the JDK anymore -->, +      <dependency>, +        <groupId>com.sun.activation</groupId>, +        <artifactId>javax.activation</artifactId>, +        <version>1.2.0</version>, +      </dependency>, +, +++ b/example/pom.xml, +, +    <!-- Needed on Java11 and later -->, +    <dependency>, +      <groupId>com.sun.activation</groupId>, +      <artifactId>javax.activation</artifactId>, +    </dependency>, +++ b/pom.xml, +    <!-- JDK11 -->, +    <profile>, +      <id>java11</id>, +      <activation>, +        <jdk>11</jdk>, +      </activation>, +      <properties>, +        <!-- Not use alpn agent as Java11 supports alpn out of the box -->, +        <argLine.alpnAgent />, +        <forbiddenapis.skip>true</forbiddenapis.skip>, +        <!-- Needed because of https://issues.apache.org/jira/browse/MENFORCER-275 -->, +        <enforcer.plugin.version>3.0.0-M1</enforcer.plugin.version>, +        <!-- 1.4.x does not work in Java10+ -->, +        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>, +      </properties>, +    </profile>, +, +      <!-- Needed for java11 and later as javax.activation is not part of the JDK anymore -->, +      <dependency>, +        <groupId>com.sun.activation</groupId>, +        <artifactId>javax.activation</artifactId>, +        <version>1.2.0</version>, +      </dependency>, +, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketHalfClosedTest.java, +import java.util.concurrent.TimeUnit;, +                            public void operationComplete(final ChannelFuture future) throws Exception {, +                                // This is a bit racy but there is no better way how to handle this in Java11., +                                // The problem is that on close() the underlying FD will not actually be closed directly, +                                // but the close will be done after the Selector did process all events. Because of, +                                // this we will need to give it a bit time to ensure the FD is actual closed before we, +                                // count down the latch and try to write., +                                future.channel().eventLoop().schedule(new Runnable() {, +                                    @Override, +                                    public void run() {, +                                }, 200, TimeUnit.MILLISECONDS);, +                            }, +++ b/example/pom.xml, +, +    <!-- Needed on Java11 and later -->, +    <dependency>, +      <groupId>com.sun.activation</groupId>, +      <artifactId>javax.activation</artifactId>, +    </dependency>, +++ b/pom.xml, +    <!-- JDK11 -->, +    <profile>, +      <id>java11</id>, +      <activation>, +        <jdk>11</jdk>, +      </activation>, +      <properties>, +        <!-- Not use alpn agent as Java11 supports alpn out of the box -->]