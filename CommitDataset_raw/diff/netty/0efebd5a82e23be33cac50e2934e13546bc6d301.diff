[+++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutor.java, +import java.util.Iterator;, +import java.util.NoSuchElementException;, +    public Iterator<EventExecutor> iterator() {, +        return new EventExecutorIterator();, +    }, +, +    @Override, +    private final class EventExecutorIterator implements Iterator<EventExecutor> {, +        private boolean nextCalled;, +, +        @Override, +        public boolean hasNext() {, +            return !nextCalled;, +        }, +, +        @Override, +        public EventExecutor next() {, +            if (!hasNext()) {, +                throw new NoSuchElementException();, +            }, +            nextCalled = true;, +            return AbstractEventExecutor.this;, +        }, +, +        @Override, +        public void remove() {, +            throw new UnsupportedOperationException("read-only");, +        }, +    }, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutor.java, +import java.util.Iterator;, +import java.util.NoSuchElementException;, +    public Iterator<EventExecutor> iterator() {, +        return new EventExecutorIterator();, +    }, +, +    @Override, +    private final class EventExecutorIterator implements Iterator<EventExecutor> {, +        private boolean nextCalled;, +, +        @Override, +        public boolean hasNext() {, +            return !nextCalled;, +        }, +, +        @Override, +        public EventExecutor next() {, +            if (!hasNext()) {, +                throw new NoSuchElementException();, +            }, +            nextCalled = true;, +            return AbstractEventExecutor.this;, +        }, +, +        @Override, +        public void remove() {, +            throw new UnsupportedOperationException("read-only");, +        }, +    }, +++ b/common/src/main/java/io/netty/util/concurrent/EventExecutorGroup.java, +import java.util.Iterator;, +public interface EventExecutorGroup extends ScheduledExecutorService, Iterable<EventExecutor> {, +    /**, +     * Returns a read-only {@link Iterator} over all {@link EventExecutor}, which are handled by this, +     * {@link EventExecutorGroup} at the time of invoke this method., +     */, +    @Override, +    Iterator<EventExecutor> iterator();, +, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutor.java, +import java.util.Iterator;, +import java.util.NoSuchElementException;, +    public Iterator<EventExecutor> iterator() {, +        return new EventExecutorIterator();, +    }, +, +    @Override, +    private final class EventExecutorIterator implements Iterator<EventExecutor> {, +        private boolean nextCalled;, +, +        @Override, +        public boolean hasNext() {, +            return !nextCalled;, +        }, +, +        @Override, +        public EventExecutor next() {, +            if (!hasNext()) {, +                throw new NoSuchElementException();, +            }, +            nextCalled = true;, +            return AbstractEventExecutor.this;, +        }, +, +        @Override, +        public void remove() {, +            throw new UnsupportedOperationException("read-only");, +        }, +    }]