[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioProviderMetadata.java, +import java.nio.channels.spi.SelectorProvider;, +import org.jboss.netty.util.SystemPropertyUtil;, +            String value = SystemPropertyUtil.get(CONSTRAINT_LEVEL_PROPERTY, "-1");, +            // format error, +            constraintLevel = detectConstraintLevelFromSystemProperties();, +, +            if (constraintLevel < 0) {, +                logger.debug(, +                        "Couldn't get the NIO constraint level from the system properties.");, +            }, +, +    private static int detectConstraintLevelFromSystemProperties() {, +        String os = SystemPropertyUtil.get("os.name");, +        String vendor = SystemPropertyUtil.get("java.vm.vendor");, +        String provider;, +        try {, +            provider = SelectorProvider.provider().getClass().getName();, +        } catch (Exception e) {, +            // Perhaps security exception., +            provider = null;, +        }, +, +        if (os == null || vendor == null || provider == null) {, +            return -1;, +        }, +, +        os = os.toLowerCase();, +        vendor = vendor.toLowerCase();, +, +        // Sun JVM, +        if (vendor.indexOf("sun") >= 0) {, +            // Linux, +            if (os.indexOf("linux") >= 0) {, +                if (provider.equals("sun.nio.ch.EPollSelectorProvider") ||, +                    provider.equals("sun.nio.ch.PollSelectorProvider")) {, +                    return 0;, +                }, +, +            // Windows, +            } else if (os.indexOf("windows") >= 0) {, +                if (provider.equals("sun.nio.ch.DevPollSelectorProvider")) {, +                    return 0;, +                }, +, +            // Solaris, +            } else if (os.indexOf("sunos") >= 0 || os.indexOf("solaris") >= 0) {, +                if (provider.equals("sun.nio.ch.WindowsSelectorProvider")) {, +                    return 0;, +                }, +            }, +        }, +, +        // Others: IBM JRE - 1 or 2, JRockIt - untested, +        return -1;, +    }, +]