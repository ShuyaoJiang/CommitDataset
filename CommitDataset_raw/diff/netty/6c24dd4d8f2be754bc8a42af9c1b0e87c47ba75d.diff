[+++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c, +jobject createInetSocketAddress(JNIEnv* env, const struct sockaddr_storage* addr) {, +    if (addr->ss_family == AF_INET) {, +        struct sockaddr_in* s = (struct sockaddr_in*) addr;, +        struct sockaddr_in6* s = (struct sockaddr_in6*) addr;, +static inline int addressLength(const struct sockaddr_storage* addr) {, +    if (addr->ss_family == AF_INET) {, +        struct sockaddr_in6* s = (struct sockaddr_in6*) addr;, +static inline void initInetSocketAddressArray(JNIEnv* env, const struct sockaddr_storage* addr, jbyteArray bArray, int offset, int len) {, +    if (addr->ss_family == AF_INET) {, +        struct sockaddr_in* s = (struct sockaddr_in*) addr;, +        struct sockaddr_in6* s = (struct sockaddr_in6*) addr;, +static jbyteArray createInetSocketAddressArray(JNIEnv* env, const struct sockaddr_storage* addr) {, +static jobject createDatagramSocketAddress(JNIEnv* env, const struct sockaddr_storage* addr, int len) {, +    if (addr->ss_family == AF_INET) {, +        struct sockaddr_in* s = (struct sockaddr_in*) addr;, +        struct sockaddr_in6* s = (struct sockaddr_in6*) addr;, +static int init_sockaddr(JNIEnv* env, jbyteArray address, jint scopeId, jint jport, const struct sockaddr_storage* addr) {, +    return createDatagramSocketAddress(env, &addr, res);, +    int len = addressLength(&addr);, +    initInetSocketAddressArray(env, &addr, acceptedAddress, 1, len);, +    return createInetSocketAddressArray(env, &addr);, +    return createInetSocketAddressArray(env, &addr);]