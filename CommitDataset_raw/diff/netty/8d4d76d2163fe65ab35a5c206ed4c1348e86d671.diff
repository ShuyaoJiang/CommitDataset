[+++ b/handler/src/main/java/io/netty/handler/ssl/DefaultOpenSslKeyMaterial.java, +import java.security.cert.X509Certificate;, +, +    private final X509Certificate[] x509CertificateChain;, +    DefaultOpenSslKeyMaterial(long chain, long privateKey, X509Certificate[] x509CertificateChain) {, +        this.x509CertificateChain = x509CertificateChain;, +    public X509Certificate[] certificateChain() {, +        return x509CertificateChain.clone();, +    }, +, +    @Override, +++ b/handler/src/main/java/io/netty/handler/ssl/DefaultOpenSslKeyMaterial.java, +import java.security.cert.X509Certificate;, +, +    private final X509Certificate[] x509CertificateChain;, +    DefaultOpenSslKeyMaterial(long chain, long privateKey, X509Certificate[] x509CertificateChain) {, +        this.x509CertificateChain = x509CertificateChain;, +    public X509Certificate[] certificateChain() {, +        return x509CertificateChain.clone();, +    }, +, +    @Override, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslKeyMaterial.java, +import java.security.cert.X509Certificate;, +, +     * Returns the configured {@link X509Certificate}s., +     */, +    X509Certificate[] certificateChain();, +, +    /**, +++ b/handler/src/main/java/io/netty/handler/ssl/DefaultOpenSslKeyMaterial.java, +import java.security.cert.X509Certificate;, +, +    private final X509Certificate[] x509CertificateChain;, +    DefaultOpenSslKeyMaterial(long chain, long privateKey, X509Certificate[] x509CertificateChain) {, +        this.x509CertificateChain = x509CertificateChain;, +    public X509Certificate[] certificateChain() {, +        return x509CertificateChain.clone();, +    }, +, +    @Override, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslKeyMaterial.java, +import java.security.cert.X509Certificate;, +, +     * Returns the configured {@link X509Certificate}s., +     */, +    X509Certificate[] certificateChain();, +, +    /**, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslKeyMaterialManager.java, +                engine.setKeyMaterial(keyMaterial);, +++ b/handler/src/main/java/io/netty/handler/ssl/DefaultOpenSslKeyMaterial.java, +import java.security.cert.X509Certificate;, +, +    private final X509Certificate[] x509CertificateChain;, +    DefaultOpenSslKeyMaterial(long chain, long privateKey, X509Certificate[] x509CertificateChain) {, +        this.x509CertificateChain = x509CertificateChain;, +    public X509Certificate[] certificateChain() {, +        return x509CertificateChain.clone();, +    }, +, +    @Override, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslKeyMaterial.java, +import java.security.cert.X509Certificate;, +, +     * Returns the configured {@link X509Certificate}s., +     */, +    X509Certificate[] certificateChain();, +, +    /**, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslKeyMaterialManager.java, +                engine.setKeyMaterial(keyMaterial);, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslKeyMaterialProvider.java, +                keyMaterial = ((OpenSslPrivateKey) key).toKeyMaterial(chain, certificates);, +                keyMaterial = new DefaultOpenSslKeyMaterial(chain, pkey, certificates);, +++ b/handler/src/main/java/io/netty/handler/ssl/DefaultOpenSslKeyMaterial.java, +import java.security.cert.X509Certificate;, +, +    private final X509Certificate[] x509CertificateChain;, +    DefaultOpenSslKeyMaterial(long chain, long privateKey, X509Certificate[] x509CertificateChain) {, +        this.x509CertificateChain = x509CertificateChain;, +    public X509Certificate[] certificateChain() {, +        return x509CertificateChain.clone();, +    }, +, +    @Override, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslKeyMaterial.java, +import java.security.cert.X509Certificate;, +, +     * Returns the configured {@link X509Certificate}s., +     */, +    X509Certificate[] certificateChain();, +, +    /**, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslKeyMaterialManager.java, +                engine.setKeyMaterial(keyMaterial);, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslKeyMaterialProvider.java, +                keyMaterial = ((OpenSslPrivateKey) key).toKeyMaterial(chain, certificates);, +                keyMaterial = new DefaultOpenSslKeyMaterial(chain, pkey, certificates);, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslPrivateKey.java]