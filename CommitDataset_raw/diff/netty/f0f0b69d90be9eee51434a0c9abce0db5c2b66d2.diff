[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/CharSequenceMap.java, +    public CharSequenceMap(boolean caseSensitive) {, +        this(caseSensitive, UnsupportedValueConverter.<V>instance());, +    public CharSequenceMap(boolean caseSensitive, ValueConverter<V> valueConverter) {, +        super(caseSensitive ? CASE_SENSITIVE_HASHER : CASE_INSENSITIVE_HASHER, valueConverter);, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/CharSequenceMap.java, +    public CharSequenceMap(boolean caseSensitive) {, +        this(caseSensitive, UnsupportedValueConverter.<V>instance());, +    public CharSequenceMap(boolean caseSensitive, ValueConverter<V> valueConverter) {, +        super(caseSensitive ? CASE_SENSITIVE_HASHER : CASE_INSENSITIVE_HASHER, valueConverter);, +++ b/codec-stomp/src/test/java/io/netty/handler/codec/stomp/StompHeadersTest.java, +    public void testHeadersCaseSensitive() {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/CharSequenceMap.java, +    public CharSequenceMap(boolean caseSensitive) {, +        this(caseSensitive, UnsupportedValueConverter.<V>instance());, +    public CharSequenceMap(boolean caseSensitive, ValueConverter<V> valueConverter) {, +        super(caseSensitive ? CASE_SENSITIVE_HASHER : CASE_INSENSITIVE_HASHER, valueConverter);, +++ b/codec-stomp/src/test/java/io/netty/handler/codec/stomp/StompHeadersTest.java, +    public void testHeadersCaseSensitive() {, +++ b/common/src/test/java/io/netty/util/AsciiStringCharacterTest.java, +    private static void assertContains(String a, String b, boolean caseSensitiveEquals, boolean caseInsenstaiveEquals) {, +        assertEquals(caseSensitiveEquals, contains(a, b));, +        final int expectedCaseInsensitive = lowerCaseAscii.hashCode();, +        assertEquals(errorString, expectedCaseInsensitive, AsciiString.hashCode(upperCaseBuilder));, +        assertEquals(errorString, expectedCaseInsensitive, AsciiString.hashCode(upperCaseString));, +        assertEquals(errorString, expectedCaseInsensitive, AsciiString.hashCode(lowerCaseString));, +        assertEquals(errorString, expectedCaseInsensitive, AsciiString.hashCode(lowerCaseAscii));, +        assertEquals(errorString, expectedCaseInsensitive, AsciiString.hashCode(upperCaseAscii));, +        assertEquals(errorString, expectedCaseInsensitive, lowerCaseAscii.hashCode());, +        assertEquals(errorString, expectedCaseInsensitive, upperCaseAscii.hashCode());]