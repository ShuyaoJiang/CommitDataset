[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler.java, +    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +            ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler.java, +    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +            ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +import static io.netty.handler.codec.http.HttpVersion.*;, +, +            public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +                    ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler.java, +    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +            ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +import static io.netty.handler.codec.http.HttpVersion.*;, +, +            public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +                    ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +    public void channelRead(final ChannelHandlerContext ctx, Object msg) throws Exception {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler.java, +    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +            ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +import static io.netty.handler.codec.http.HttpVersion.*;, +, +            public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +                    ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +    public void channelRead(final ChannelHandlerContext ctx, Object msg) throws Exception {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +            ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler.java, +    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +            ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +import static io.netty.handler.codec.http.HttpVersion.*;, +, +            public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +                    ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +    public void channelRead(final ChannelHandlerContext ctx, Object msg) throws Exception {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +            ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySession.java, +     * hasReceivedReply and receivedReply are only called from channelRead(), +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler.java, +    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +            ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +import static io.netty.handler.codec.http.HttpVersion.*;, +, +            public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +                    ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +    public void channelRead(final ChannelHandlerContext ctx, Object msg) throws Exception {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +            ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySession.java, +     * hasReceivedReply and receivedReply are only called from channelRead(), +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +        ctx.fireChannelRead(msg);, +        boolean fireChannelRead = !spdySession.isRemoteSideClosed(streamId);, +        if (fireChannelRead) {, +            ctx.fireChannelRead(spdyRstStreamFrame);, +                    ctx.fireChannelRead(spdyDataFrame);, +                    ctx.fireChannelRead(partialDataFrame);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler.java, +    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +            ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +import static io.netty.handler.codec.http.HttpVersion.*;, +, +            public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +                    ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +    public void channelRead(final ChannelHandlerContext ctx, Object msg) throws Exception {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +            ctx.fireChannelRead(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySession.java, +     * hasReceivedReply and receivedReply are only called from channelRead(), +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {, +        ctx.fireChannelRead(msg);, +        boolean fireChannelRead = !spdySession.isRemoteSideClosed(streamId);, +        if (fireChannelRead) {, +            ctx.fireChannelRead(spdyRstStreamFrame);, +                    ctx.fireChannelRead(spdyDataFrame);, +                    ctx.fireChannelRead(partialDataFrame);, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpObjectAggregatorTest.java, +        // this should trigger a channelRead event so return true, +        // this should trigger a channelRead event so return true, +        // this should trigger a channelRead event so return true, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler.java]