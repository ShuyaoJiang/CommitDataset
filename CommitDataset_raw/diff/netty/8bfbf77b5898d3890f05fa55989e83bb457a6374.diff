[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +    /**, +     * Creates a new instance with the specified decoder options., +     */, +        this(maxInitialLineLength, maxHeaderSize, maxChunkSize, failOnMissingResponse, true);, +    }, +, +    /**, +     * Creates a new instance with the specified decoder options., +     */, +    public HttpClientCodec(, +            int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean failOnMissingResponse,, +            boolean validateHeaders) {, +        init(new Decoder(maxInitialLineLength, maxHeaderSize, maxChunkSize, validateHeaders), new Encoder());, +        Decoder(int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean validateHeaders) {, +            super(maxInitialLineLength, maxHeaderSize, maxChunkSize, validateHeaders);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +    /**, +     * Creates a new instance with the specified decoder options., +     */, +        this(maxInitialLineLength, maxHeaderSize, maxChunkSize, failOnMissingResponse, true);, +    }, +, +    /**, +     * Creates a new instance with the specified decoder options., +     */, +    public HttpClientCodec(, +            int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean failOnMissingResponse,, +            boolean validateHeaders) {, +        init(new Decoder(maxInitialLineLength, maxHeaderSize, maxChunkSize, validateHeaders), new Encoder());, +        Decoder(int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean validateHeaders) {, +            super(maxInitialLineLength, maxHeaderSize, maxChunkSize, validateHeaders);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpServerCodec.java, +, +    /**, +     * Creates a new instance with the specified decoder options., +     */, +    public HttpServerCodec(int maxInitialLineLength, int maxHeaderSize, int maxChunkSize, boolean validateHeaders) {, +        super(new HttpRequestDecoder(maxInitialLineLength, maxHeaderSize, maxChunkSize, validateHeaders),, +                new HttpResponseEncoder());, +    }]