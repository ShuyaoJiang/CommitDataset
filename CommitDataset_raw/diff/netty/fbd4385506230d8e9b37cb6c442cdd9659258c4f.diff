[+++ b/buffer/src/main/java/io/netty/buffer/ByteBufAllocator.java, +    ByteBufAllocator DEFAULT = ByteBufUtil.DEFAULT_ALLOCATOR;, +, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufAllocator.java, +    ByteBufAllocator DEFAULT = ByteBufUtil.DEFAULT_ALLOCATOR;, +, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +import io.netty.util.internal.SystemPropertyUtil;, +import io.netty.util.internal.logging.InternalLogger;, +import io.netty.util.internal.logging.InternalLoggerFactory;, +import java.util.Locale;, +    private static final InternalLogger logger = InternalLoggerFactory.getInstance(ByteBufUtil.class);, +, +    static final ByteBufAllocator DEFAULT_ALLOCATOR;, +, +, +        String allocType = SystemPropertyUtil.get("io.netty.allocator.type", "pooled").toLowerCase(Locale.US).trim();, +        ByteBufAllocator alloc;, +        if ("unpooled".equals(allocType)) {, +            alloc = UnpooledByteBufAllocator.DEFAULT;, +            logger.debug("-Dio.netty.allocator.type: {}", allocType);, +        } else if ("pooled".equals(allocType)) {, +            alloc = PooledByteBufAllocator.DEFAULT;, +            logger.debug("-Dio.netty.allocator.type: {}", allocType);, +        } else {, +            alloc = PooledByteBufAllocator.DEFAULT;, +            logger.debug("-Dio.netty.allocator.type: pooled (unknown: {})", allocType);, +        }, +, +        DEFAULT_ALLOCATOR = alloc;, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufAllocator.java, +    ByteBufAllocator DEFAULT = ByteBufUtil.DEFAULT_ALLOCATOR;, +, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +import io.netty.util.internal.SystemPropertyUtil;, +import io.netty.util.internal.logging.InternalLogger;, +import io.netty.util.internal.logging.InternalLoggerFactory;, +import java.util.Locale;, +    private static final InternalLogger logger = InternalLoggerFactory.getInstance(ByteBufUtil.class);, +, +    static final ByteBufAllocator DEFAULT_ALLOCATOR;, +, +, +        String allocType = SystemPropertyUtil.get("io.netty.allocator.type", "pooled").toLowerCase(Locale.US).trim();, +        ByteBufAllocator alloc;, +        if ("unpooled".equals(allocType)) {, +            alloc = UnpooledByteBufAllocator.DEFAULT;, +            logger.debug("-Dio.netty.allocator.type: {}", allocType);, +        } else if ("pooled".equals(allocType)) {, +            alloc = PooledByteBufAllocator.DEFAULT;, +            logger.debug("-Dio.netty.allocator.type: {}", allocType);, +        } else {, +            alloc = PooledByteBufAllocator.DEFAULT;, +            logger.debug("-Dio.netty.allocator.type: pooled (unknown: {})", allocType);, +        }, +, +        DEFAULT_ALLOCATOR = alloc;, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelConfig.java, +    private volatile ByteBufAllocator allocator = ByteBufAllocator.DEFAULT;]