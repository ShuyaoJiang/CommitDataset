[+++ b/buffer/src/main/java/io/netty/buffer/ByteBufInputStream.java, +     * @param buffer The buffer which provides the content for this {@link InputStream}., +++ b/buffer/src/main/java/io/netty/buffer/ByteBufInputStream.java, +     * @param buffer The buffer which provides the content for this {@link InputStream}., +++ b/buffer/src/main/java/io/netty/buffer/PoolThreadCache.java, + * technics of, + * <a href="https://www.facebook.com/notes/facebook-engineering/scalable-memory-allocation-using-jemalloc/480222803919">, + * Scalable memory allocation using jemalloc</a>., +++ b/buffer/src/main/java/io/netty/buffer/ByteBufInputStream.java, +     * @param buffer The buffer which provides the content for this {@link InputStream}., +++ b/buffer/src/main/java/io/netty/buffer/PoolThreadCache.java, + * technics of, + * <a href="https://www.facebook.com/notes/facebook-engineering/scalable-memory-allocation-using-jemalloc/480222803919">, + * Scalable memory allocation using jemalloc</a>., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/ClientCookieEncoder.java, +import io.netty.handler.codec.http.cookie.ClientCookieDecoder;, +, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufInputStream.java, +     * @param buffer The buffer which provides the content for this {@link InputStream}., +++ b/buffer/src/main/java/io/netty/buffer/PoolThreadCache.java, + * technics of, + * <a href="https://www.facebook.com/notes/facebook-engineering/scalable-memory-allocation-using-jemalloc/480222803919">, + * Scalable memory allocation using jemalloc</a>., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/ClientCookieEncoder.java, +import io.netty.handler.codec.http.cookie.ClientCookieDecoder;, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +     * @see #getHeader(HttpMessage, CharSequence, String), +     * @see #setHeader(HttpMessage, CharSequence, Object), +     * @see #setHeader(HttpMessage, CharSequence, Iterable), +     * @see #addHeader(HttpMessage, CharSequence, Object), +     * @see #removeHeader(HttpMessage, CharSequence), +     * @see #getIntHeader(HttpMessage, CharSequence), +     * @see #getIntHeader(HttpMessage, CharSequence, int), +     * @see #setIntHeader(HttpMessage, CharSequence, int), +     * @see #setIntHeader(HttpMessage, CharSequence, Iterable), +     * @see #addIntHeader(HttpMessage, CharSequence, int), +     * @see #getDateHeader(HttpMessage, CharSequence), +     * @see #getDateHeader(HttpMessage, CharSequence, Date), +     * @see #setDateHeader(HttpMessage, CharSequence, Date), +     * @see #setDateHeader(HttpMessage, CharSequence, Iterable), +     * @see #addDateHeader(HttpMessage, CharSequence, Date), +     * @see #setHost(HttpMessage, CharSequence), +     * @see #contains(CharSequence), +++ b/buffer/src/main/java/io/netty/buffer/ByteBufInputStream.java, +     * @param buffer The buffer which provides the content for this {@link InputStream}., +++ b/buffer/src/main/java/io/netty/buffer/PoolThreadCache.java, + * technics of, + * <a href="https://www.facebook.com/notes/facebook-engineering/scalable-memory-allocation-using-jemalloc/480222803919">, + * Scalable memory allocation using jemalloc</a>., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/ClientCookieEncoder.java, +import io.netty.handler.codec.http.cookie.ClientCookieDecoder;, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +     * @see #getHeader(HttpMessage, CharSequence, String), +     * @see #setHeader(HttpMessage, CharSequence, Object), +     * @see #setHeader(HttpMessage, CharSequence, Iterable), +     * @see #addHeader(HttpMessage, CharSequence, Object), +     * @see #removeHeader(HttpMessage, CharSequence), +     * @see #getIntHeader(HttpMessage, CharSequence), +     * @see #getIntHeader(HttpMessage, CharSequence, int), +     * @see #setIntHeader(HttpMessage, CharSequence, int), +     * @see #setIntHeader(HttpMessage, CharSequence, Iterable), +     * @see #addIntHeader(HttpMessage, CharSequence, int), +     * @see #getDateHeader(HttpMessage, CharSequence), +     * @see #getDateHeader(HttpMessage, CharSequence, Date), +     * @see #setDateHeader(HttpMessage, CharSequence, Date), +     * @see #setDateHeader(HttpMessage, CharSequence, Iterable), +     * @see #addDateHeader(HttpMessage, CharSequence, Date), +     * @see #setHost(HttpMessage, CharSequence), +     * @see #contains(CharSequence), +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseStatus.java, +         * 0 = New or havn't seen {@link #ASCII_SPACE}., +         * 1 = Last byte was {@link #ASCII_SPACE}., +         * 2 = Terminal State. Processed the byte after {@link #ASCII_SPACE}, and parsed the status line., +         * 3 = Terminal State. There was no byte after {@link #ASCII_SPACE} but status has been parsed with what we saw., +++ b/buffer/src/main/java/io/netty/buffer/ByteBufInputStream.java, +     * @param buffer The buffer which provides the content for this {@link InputStream}., +++ b/buffer/src/main/java/io/netty/buffer/PoolThreadCache.java, + * technics of, + * <a href="https://www.facebook.com/notes/facebook-engineering/scalable-memory-allocation-using-jemalloc/480222803919">, + * Scalable memory allocation using jemalloc</a>., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/ClientCookieEncoder.java, +import io.netty.handler.codec.http.cookie.ClientCookieDecoder;, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +     * @see #getHeader(HttpMessage, CharSequence, String), +     * @see #setHeader(HttpMessage, CharSequence, Object), +     * @see #setHeader(HttpMessage, CharSequence, Iterable), +     * @see #addHeader(HttpMessage, CharSequence, Object), +     * @see #removeHeader(HttpMessage, CharSequence), +     * @see #getIntHeader(HttpMessage, CharSequence), +     * @see #getIntHeader(HttpMessage, CharSequence, int), +     * @see #setIntHeader(HttpMessage, CharSequence, int), +     * @see #setIntHeader(HttpMessage, CharSequence, Iterable), +     * @see #addIntHeader(HttpMessage, CharSequence, int), +     * @see #getDateHeader(HttpMessage, CharSequence), +     * @see #getDateHeader(HttpMessage, CharSequence, Date), +     * @see #setDateHeader(HttpMessage, CharSequence, Date), +     * @see #setDateHeader(HttpMessage, CharSequence, Iterable)]