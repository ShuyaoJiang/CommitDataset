[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java, +, +        // Bypass the encoder in case of an empty buffer, so that the following idiom works:, +        //, +        //     ch.write(Unpooled.EMPTY_BUFFER).addListener(ChannelFutureListener.CLOSE);, +        //, +        // See https://github.com/netty/netty/issues/2983 for more information., +, +        if (msg instanceof ByteBuf && !((ByteBuf) msg).isReadable()) {, +            out.add(EMPTY_BUFFER);, +            return;, +        }, +, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java, +, +        // Bypass the encoder in case of an empty buffer, so that the following idiom works:, +        //, +        //     ch.write(Unpooled.EMPTY_BUFFER).addListener(ChannelFutureListener.CLOSE);, +        //, +        // See https://github.com/netty/netty/issues/2983 for more information., +, +        if (msg instanceof ByteBuf && !((ByteBuf) msg).isReadable()) {, +            out.add(EMPTY_BUFFER);, +            return;, +        }, +, +, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpResponseEncoderTest.java, +import io.netty.buffer.Unpooled;, +import static org.hamcrest.Matchers.*;, +, +    @Test, +    public void testEmptyBufferBypass() throws Exception {, +        EmbeddedChannel channel = new EmbeddedChannel(new HttpResponseEncoder());, +, +        // Test writing an empty buffer works when the encoder is at ST_INIT., +        channel.writeOutbound(Unpooled.EMPTY_BUFFER);, +        ByteBuf buffer = channel.readOutbound();, +        assertThat(buffer, is(sameInstance(Unpooled.EMPTY_BUFFER)));, +, +        // Leave the ST_INIT state., +        HttpResponse response = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK);, +        assertTrue(channel.writeOutbound(response));, +        buffer = channel.readOutbound();, +        assertEquals("HTTP/1.1 200 OK\r\n\r\n", buffer.toString(CharsetUtil.US_ASCII));, +        buffer.release();, +, +        // Test writing an empty buffer works when the encoder is not at ST_INIT., +        channel.writeOutbound(Unpooled.EMPTY_BUFFER);, +        buffer = channel.readOutbound();, +        assertThat(buffer, is(sameInstance(Unpooled.EMPTY_BUFFER)));, +, +        assertFalse(channel.finish());, +    }]