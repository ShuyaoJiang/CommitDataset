[+++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslEngine.java, +        session = new OpenSslSession(sessionContext);, +        private long creationTime;, +        OpenSslSession(OpenSslSessionContext sessionContext) {, +            synchronized (OpenSslEngine.this) {, +                if (creationTime == 0 && !isDestroyed()) {, +                    creationTime = SSL.getTime(ssl) * 1000L;, +                }, +            }, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslEngine.java, +        session = new OpenSslSession(sessionContext);, +        private long creationTime;, +        OpenSslSession(OpenSslSessionContext sessionContext) {, +            synchronized (OpenSslEngine.this) {, +                if (creationTime == 0 && !isDestroyed()) {, +                    creationTime = SSL.getTime(ssl) * 1000L;, +                }, +            }, +++ b/handler/src/test/java/io/netty/handler/ssl/OpenSslEngineTest.java, +    public void testGetCreationTime() throws Exception {, +        assumeTrue(OpenSsl.isAvailable());, +        super.testGetCreationTime();, +    }, +, +    @Override, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslEngine.java, +        session = new OpenSslSession(sessionContext);, +        private long creationTime;, +        OpenSslSession(OpenSslSessionContext sessionContext) {, +            synchronized (OpenSslEngine.this) {, +                if (creationTime == 0 && !isDestroyed()) {, +                    creationTime = SSL.getTime(ssl) * 1000L;, +                }, +            }, +++ b/handler/src/test/java/io/netty/handler/ssl/OpenSslEngineTest.java, +    public void testGetCreationTime() throws Exception {, +        assumeTrue(OpenSsl.isAvailable());, +        super.testGetCreationTime();, +    }, +, +    @Override, +++ b/handler/src/test/java/io/netty/handler/ssl/SSLEngineTest.java, +import io.netty.buffer.UnpooledByteBufAllocator;, +    @Test, +    public void testGetCreationTime() throws Exception {, +        SslContext context = SslContextBuilder.forClient().sslProvider(sslProvider()).build();, +        SSLEngine engine = context.newEngine(UnpooledByteBufAllocator.DEFAULT);, +        assertTrue(engine.getSession().getCreationTime() <= System.currentTimeMillis());, +    }, +]