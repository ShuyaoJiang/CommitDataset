[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +     * @see {@link DefaultHttp2HeadersDecoder(boolean)}, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +     * @see {@link DefaultHttp2HeadersDecoder(boolean)}, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameWriter.java, +    public DefaultHttp2FrameWriter(Http2HeadersEncoder.SensitivityDetector headersSensativityDetector) {, +        this(new DefaultHttp2HeadersEncoder(Http2CodecUtil.DEFAULT_HEADER_TABLE_SIZE, headersSensativityDetector));, +    }, +, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +     * @see {@link DefaultHttp2HeadersDecoder(boolean)}, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameWriter.java, +    public DefaultHttp2FrameWriter(Http2HeadersEncoder.SensitivityDetector headersSensativityDetector) {, +        this(new DefaultHttp2HeadersEncoder(Http2CodecUtil.DEFAULT_HEADER_TABLE_SIZE, headersSensativityDetector));, +    }, +, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java, +        private Http2HeadersEncoder.SensitivityDetector headersSensativityDetector =, +                Http2HeadersEncoder.NEVER_SENSITIVE;, +         * Set the {@link Http2HeadersEncoder.SensitivityDetector} that will be used., +         */, +        public B headersSensativityDetector(Http2HeadersEncoder.SensitivityDetector headersSensativityDetector) {, +            this.headersSensativityDetector = checkNotNull(headersSensativityDetector, "headersSensativityDetector");, +            return thisB();, +        }, +, +        /**, +            Http2FrameWriter writer = new DefaultHttp2FrameWriter(headersSensativityDetector);, +         * <ul>, +         *   <li>{@link #server(boolean)}</li>, +         *   <li>{@link #frameLogger(Http2FrameLogger)}</li>, +         *   <li>{@link #encoderEnforceMaxConcurrentStreams(boolean)}</li>, +         *   <li>{@link #encoderEnforceMaxConcurrentStreams(boolean)} (int)}</li>, +         *   <li>{@link #headersSensativityDetector(Http2HeadersEncoder.SensitivityDetector)}</li>, +         * </ul>]