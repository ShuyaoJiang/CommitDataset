[+++ b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttEncoder.java, +import io.netty.handler.codec.DecoderException;, +        // as MQTT 3.1 & 3.1.1 spec, If the User Name Flag is set to 0, the Password Flag MUST be set to 0, +        if (!variableHeader.hasUserName() && variableHeader.hasPassword()) {, +            throw new DecoderException("Without a username, the password MUST be not set");, +        }, +, +++ b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttEncoder.java, +import io.netty.handler.codec.DecoderException;, +        // as MQTT 3.1 & 3.1.1 spec, If the User Name Flag is set to 0, the Password Flag MUST be set to 0, +        if (!variableHeader.hasUserName() && variableHeader.hasPassword()) {, +            throw new DecoderException("Without a username, the password MUST be not set");, +        }, +, +++ b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttMessageBuilders.java, +            this.hasUser = username != null;, +            this.hasPassword = password != null;, +++ b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttEncoder.java, +import io.netty.handler.codec.DecoderException;, +        // as MQTT 3.1 & 3.1.1 spec, If the User Name Flag is set to 0, the Password Flag MUST be set to 0, +        if (!variableHeader.hasUserName() && variableHeader.hasPassword()) {, +            throw new DecoderException("Without a username, the password MUST be not set");, +        }, +, +++ b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttMessageBuilders.java, +            this.hasUser = username != null;, +            this.hasPassword = password != null;, +++ b/codec-mqtt/src/test/java/io/netty/handler/codec/mqtt/MqttCodecTest.java, +    public void testConnectMessageNoPassword() throws Exception {, +        final MqttConnectMessage message = createConnectMessage(MqttVersion.MQTT_3_1_1, null, PASSWORD);, +, +        try {, +            ByteBuf byteBuf = MqttEncoder.doEncode(ALLOCATOR, message);, +        } catch (Exception cause) {, +            assertTrue(cause instanceof DecoderException);, +        }, +    }, +, +    @Test, +        return createConnectMessage(mqttVersion, USER_NAME, PASSWORD);, +    }, +, +    private static MqttConnectMessage createConnectMessage(MqttVersion mqttVersion, String username, String password) {, +                .username(username), +                .password(password)]