[+++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +    private int callDepth;, +    boolean isRunning() {, +        return callDepth != 0;, +    }, +, +            callDepth ++;, +            try {, +                ((ChannelInboundHandler) handler).channelRegistered(this);, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelInboundHandler) handler).channelUnregistered(this);, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelInboundHandler) handler).channelActive(this);, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelInboundHandler) handler).channelInactive(this);, +            } finally {, +                callDepth --;, +            }, +        try {, +            callDepth ++;, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelInboundHandler) handler).userEventTriggered(this, event);, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelInboundHandler) handler).channelRead(this, msg);, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelInboundHandler) handler).channelReadComplete(this);, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelInboundHandler) handler).channelWritabilityChanged(this);, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelOutboundHandler) handler).bind(this, localAddress, promise);, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelOutboundHandler) handler).connect(this, remoteAddress, localAddress, promise);, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelOutboundHandler) handler).disconnect(this, promise);, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelOutboundHandler) handler).close(this, promise);, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelOutboundHandler) handler).deregister(this, promise);, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelOutboundHandler) handler).read(this);, +            } finally {, +                callDepth --;, +            }, +            callDepth ++;, +            try {, +                ((ChannelOutboundHandler) handler).write(this, msg, promise);, +            } finally {, +                callDepth --;]