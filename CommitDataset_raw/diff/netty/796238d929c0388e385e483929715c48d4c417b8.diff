[+++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpMessage.java, +    private final Map<String, List<String>> headers = new TreeMap<String, List<String>>(caseIgnoringComparator);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpMessage.java, +    private final Map<String, List<String>> headers = new TreeMap<String, List<String>>(caseIgnoringComparator);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpRequestDecoder.java, +        message = new DefaultHttpRequest(HttpVersion.decode(split[2]), HttpMethod.valueOf(split[0]), new URI(split[1]));, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpMessage.java, +    private final Map<String, List<String>> headers = new TreeMap<String, List<String>>(caseIgnoringComparator);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpRequestDecoder.java, +        message = new DefaultHttpRequest(HttpVersion.decode(split[2]), HttpMethod.valueOf(split[0]), new URI(split[1]));, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpResponseDecoder.java, +        message = new DefaultHttpResponse(HttpVersion.decode(split[0]), new HttpResponseStatus(Integer.valueOf(split[1]), split[2]));, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpMessage.java, +    private final Map<String, List<String>> headers = new TreeMap<String, List<String>>(caseIgnoringComparator);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpRequestDecoder.java, +        message = new DefaultHttpRequest(HttpVersion.decode(split[2]), HttpMethod.valueOf(split[0]), new URI(split[1]));, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpResponseDecoder.java, +        message = new DefaultHttpResponse(HttpVersion.decode(split[0]), new HttpResponseStatus(Integer.valueOf(split[1]), split[2]));, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpVersion.java, +    private final String version;, +    private HttpVersion(String version) {, +        this.version = version;, +    public static HttpVersion decode(String value) {, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpMessage.java, +    private final Map<String, List<String>> headers = new TreeMap<String, List<String>>(caseIgnoringComparator);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpRequestDecoder.java, +        message = new DefaultHttpRequest(HttpVersion.decode(split[2]), HttpMethod.valueOf(split[0]), new URI(split[1]));, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpResponseDecoder.java, +        message = new DefaultHttpResponse(HttpVersion.decode(split[0]), new HttpResponseStatus(Integer.valueOf(split[1]), split[2]));, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpVersion.java, +    private final String version;, +    private HttpVersion(String version) {, +        this.version = version;, +    public static HttpVersion decode(String value) {, +++ b/src/main/java/org/jboss/netty/handler/codec/http/QueryStringDecoder.java, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpMessage.java, +    private final Map<String, List<String>> headers = new TreeMap<String, List<String>>(caseIgnoringComparator);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpRequestDecoder.java, +        message = new DefaultHttpRequest(HttpVersion.decode(split[2]), HttpMethod.valueOf(split[0]), new URI(split[1]));, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpResponseDecoder.java, +        message = new DefaultHttpResponse(HttpVersion.decode(split[0]), new HttpResponseStatus(Integer.valueOf(split[1]), split[2]));, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpVersion.java, +    private final String version;, +    private HttpVersion(String version) {, +        this.version = version;, +    public static HttpVersion decode(String value) {, +++ b/src/main/java/org/jboss/netty/handler/codec/http/QueryStringDecoder.java, +++ b/src/main/java/org/jboss/netty/handler/codec/http/QueryStringEncoder.java, +    private final String url;, +    private final List<Param> params = new ArrayList<Param>();]