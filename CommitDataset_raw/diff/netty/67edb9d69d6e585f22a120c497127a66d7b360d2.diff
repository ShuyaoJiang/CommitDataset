[+++ b/src/docbook/module/architecture.xml, +      the complexity of the NIO Selector API, hindering rapid development., +      Netty has a universal asynchronous I/O interface called &Channel;, +      &Channel; abstracts away all operations required to point-to-point, +      communication.  That is, once you wrote your application on one Netty, +      transport, your application can run on other Netty transports.  Netty, +      provides a number of essential transports via one universal API:, +            (See <literal>org.jboss.netty.channel.socket.nio</literal>),, +            (See <literal>org.jboss.netty.channel.socket.oio</literal>),, +            Local transport (See <literal>org.jboss.netty.channel.local</literal>)., +      Switching from one transport from the other usually takes just a couple, +      lines of changes such as choosing a different &ChannelFactory;, +      implementation., +      not written yet, serial port communication transport for instance, again, +      by replacing just a couple lines of constructor calls.  Moreover, you can, +      write your own transport by extending the core API because it is highly, +      extensible.]