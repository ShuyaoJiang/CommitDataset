[+++ b/.gitignore, +++ b/.gitignore, +++ b/all/pom.xml, +    <generatedSourceDir>${project.build.directory}/src</generatedSourceDir>, +    <dependencyVersionDir>${project.build.directory}/versions</dependencyVersionDir>, +          <!-- Populate the properties whose key is groupId:artifactId:type, +                                   and whose value is the path to the artifact -->, +          <execution>, +            <id>locate-dependencies</id>, +            <phase>initialize</phase>, +            <goals>, +              <goal>properties</goal>, +            </goals>, +          </execution>, +, +          <!-- Unpack all source files -->, +              <outputDirectory>${generatedSourceDir}</outputDirectory>, +, +          <!-- Unpack all class files -->, +, +      <plugin>, +        <artifactId>maven-antrun-plugin</artifactId>, +        <executions>, +          <!-- Instead of generating a new version property file, merge others' version property files into one. -->, +          <execution>, +            <id>write-version-properties</id>, +            <phase>none</phase>, +          </execution>, +          <execution>, +            <id>merge-version-properties</id>, +            <phase>prepare-package</phase>, +            <goals>, +              <goal>run</goal>, +            </goals>, +            <configuration>, +              <target>, +                <taskdef resource="net/sf/antcontrib/antlib.xml" />, +                <propertyselector, +                  property="versions", +                  match="^(${project.groupId}:(?!netty-example)[^:]+:jar)$" select="\1"/>, +                <for list="${versions}" param="x">, +                  <sequential>, +                    <unzip src="${@{x}}" dest="${dependencyVersionsDir}">, +                      <patternset>, +                        <include name="META-INF/${project.groupId}.versions.properties"/>, +                      </patternset>, +                    </unzip>, +                    <concat destfile="${project.build.outputDirectory}/META-INF/${project.groupId}.versions.properties", +                            append="true">, +                            <path path="${dependencyVersionsDir}/META-INF/${project.groupId}.versions.properties"/>, +                    </concat>, +                  </sequential>, +                </for>, +                <delete dir="${dependencyVersionsDir}" quiet="true"/>, +              </target>, +            </configuration>, +          </execution>, +, +          <!-- Clean everything once finished so that IDE doesn't find the unpacked files. -->, +          <execution>, +            <id>clean-source-directory</id>, +            <phase>package</phase>, +            <goals>, +              <goal>run</goal>, +            </goals>, +            <configuration>, +              <target>, +                <delete dir="${generatedSourceDir}" quiet="true" />, +                <delete dir="${dependencyVersionDir}" quiet="true" />, +                <delete dir="${project.build.outputDirectory}" quiet="true" />, +              </target>, +            </configuration>, +          </execution>, +        </executions>, +      </plugin>, +, +      <!-- Include the directory where the source files were unpacked -->, +                <source>${generatedSourceDir}</source>, +      <!-- Disable OSGi bundle manifest generation -->, +      <plugin>, +        <groupId>org.apache.felix</groupId>, +        <artifactId>maven-bundle-plugin</artifactId>, +        <executions>, +          <execution>, +            <id>generate-manifest</id>, +            <phase>none</phase>, +          </execution>, +        </executions>, +      </plugin>, +      <!-- Override the default JAR configuration -->, +      <plugin>, +        <artifactId>maven-jar-plugin</artifactId>, +        <executions>, +          <execution>, +            <id>default-jar</id>, +            <phase>none</phase>, +          </execution>, +          <execution>, +            <id>all-in-one-jar</id>, +            <phase>package</phase>]