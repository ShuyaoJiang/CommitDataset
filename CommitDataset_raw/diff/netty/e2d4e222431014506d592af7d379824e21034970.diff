[+++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +            (int) CharsetUtil.encoder(CharsetUtil.UTF_8).maxBytesPerChar();, +        final CharsetEncoder encoder = CharsetUtil.encoder(charset);, +        final CharsetDecoder decoder = CharsetUtil.decoder(charset);, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +            (int) CharsetUtil.encoder(CharsetUtil.UTF_8).maxBytesPerChar();, +        final CharsetEncoder encoder = CharsetUtil.encoder(charset);, +        final CharsetDecoder decoder = CharsetUtil.decoder(charset);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequest.java, +    private static final CharsetEncoder asciiEncoder = CharsetUtil.encoder(CharsetUtil.US_ASCII);, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +            (int) CharsetUtil.encoder(CharsetUtil.UTF_8).maxBytesPerChar();, +        final CharsetEncoder encoder = CharsetUtil.encoder(charset);, +        final CharsetDecoder decoder = CharsetUtil.decoder(charset);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequest.java, +    private static final CharsetEncoder asciiEncoder = CharsetUtil.encoder(CharsetUtil.US_ASCII);, +++ b/common/src/main/java/io/netty/util/AsciiString.java, +        CharsetEncoder encoder = CharsetUtil.encoder(charset);, +        CharsetEncoder encoder = CharsetUtil.encoder(charset);, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +            (int) CharsetUtil.encoder(CharsetUtil.UTF_8).maxBytesPerChar();, +        final CharsetEncoder encoder = CharsetUtil.encoder(charset);, +        final CharsetDecoder decoder = CharsetUtil.decoder(charset);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequest.java, +    private static final CharsetEncoder asciiEncoder = CharsetUtil.encoder(CharsetUtil.US_ASCII);, +++ b/common/src/main/java/io/netty/util/AsciiString.java, +        CharsetEncoder encoder = CharsetUtil.encoder(charset);, +        CharsetEncoder encoder = CharsetUtil.encoder(charset);, +++ b/common/src/main/java/io/netty/util/CharsetUtil.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +     * @deprecated Use {@link #encoder(Charset)}., +    @Deprecated, +        return encoder(charset);, +    /**, +     * Returns a new {@link CharsetEncoder} for the {@link Charset} with specified error actions., +     *, +     * @param charset The specified charset, +     * @param malformedInputAction The encoder's action for malformed-input errors, +     * @param unmappableCharacterAction The encoder's action for unmappable-character errors, +     * @return The encoder for the specified <code>charset</code>, +     */, +    public static CharsetEncoder encoder(Charset charset, CodingErrorAction malformedInputAction,, +                                         CodingErrorAction unmappableCharacterAction) {, +        checkNotNull(charset, "charset");, +        CharsetEncoder e = charset.newEncoder();, +        e.onMalformedInput(malformedInputAction).onUnmappableCharacter(unmappableCharacterAction);, +        return e;, +    }, +, +    /**, +     * Returns a new {@link CharsetEncoder} for the {@link Charset} with the specified error action., +     *, +     * @param charset The specified charset, +     * @param codingErrorAction The encoder's action for malformed-input and unmappable-character errors, +     * @return The encoder for the specified <code>charset</code>, +     */, +    public static CharsetEncoder encoder(Charset charset, CodingErrorAction codingErrorAction) {, +        return encoder(charset, codingErrorAction, codingErrorAction);, +    }, +, +    /**, +     * Returns a cached thread-local {@link CharsetEncoder} for the specified {@link Charset}., +     *, +     * @param charset The specified charset, +     * @return The encoder for the specified <code>charset</code>, +     */, +    public static CharsetEncoder encoder(Charset charset) {, +        checkNotNull(charset, "charset");, +, +            e.reset().onMalformedInput(CodingErrorAction.REPLACE).onUnmappableCharacter(CodingErrorAction.REPLACE);, +        e = encoder(charset, CodingErrorAction.REPLACE, CodingErrorAction.REPLACE);, +     * @deprecated Use {@link #decoder(Charset)}., +    @Deprecated, +        return decoder(charset);, +    /**, +     * Returns a new {@link CharsetDecoder} for the {@link Charset} with specified error actions., +     *, +     * @param charset The specified charset, +     * @param malformedInputAction The decoder's action for malformed-input errors, +     * @param unmappableCharacterAction The decoder's action for unmappable-character errors, +     * @return The decoder for the specified <code>charset</code>, +     */, +    public static CharsetDecoder decoder(Charset charset, CodingErrorAction malformedInputAction,, +                                         CodingErrorAction unmappableCharacterAction) {, +        checkNotNull(charset, "charset");, +        CharsetDecoder d = charset.newDecoder();, +        d.onMalformedInput(malformedInputAction).onUnmappableCharacter(unmappableCharacterAction);, +        return d;, +    }, +, +    /**, +     * Returns a new {@link CharsetDecoder} for the {@link Charset} with the specified error action., +     *, +     * @param charset The specified charset, +     * @param codingErrorAction The decoder's action for malformed-input and unmappable-character errors, +     * @return The decoder for the specified <code>charset</code>, +     */, +    public static CharsetDecoder decoder(Charset charset, CodingErrorAction codingErrorAction) {, +        return decoder(charset, codingErrorAction, codingErrorAction);, +    }]