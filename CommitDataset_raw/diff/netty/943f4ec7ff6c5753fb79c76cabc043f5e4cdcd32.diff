[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/CombinedHttpHeaders.java, +        private static CharSequence commaSeparateEscapedValues(CharSequence currentValue, CharSequence value) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CombinedHttpHeaders.java, +        private static CharSequence commaSeparateEscapedValues(CharSequence currentValue, CharSequence value) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cookie/ServerCookieEncoder.java, +    private static List<String> dedup(List<String> encoded, Map<String, Integer> nameToLastIndex) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CombinedHttpHeaders.java, +        private static CharSequence commaSeparateEscapedValues(CharSequence currentValue, CharSequence value) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cookie/ServerCookieEncoder.java, +    private static List<String> dedup(List<String> encoded, Map<String, Integer> nameToLastIndex) {, +++ b/common/src/main/java/io/netty/util/ConstantPool.java, +    private static String checkNotNullAndNotEmpty(String name) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CombinedHttpHeaders.java, +        private static CharSequence commaSeparateEscapedValues(CharSequence currentValue, CharSequence value) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cookie/ServerCookieEncoder.java, +    private static List<String> dedup(List<String> encoded, Map<String, Integer> nameToLastIndex) {, +++ b/common/src/main/java/io/netty/util/ConstantPool.java, +    private static String checkNotNullAndNotEmpty(String name) {, +++ b/common/src/main/java/io/netty/util/concurrent/SingleThreadEventExecutor.java, +    protected static Runnable pollTaskFrom(Queue<Runnable> taskQueue) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CombinedHttpHeaders.java, +        private static CharSequence commaSeparateEscapedValues(CharSequence currentValue, CharSequence value) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cookie/ServerCookieEncoder.java, +    private static List<String> dedup(List<String> encoded, Map<String, Integer> nameToLastIndex) {, +++ b/common/src/main/java/io/netty/util/ConstantPool.java, +    private static String checkNotNullAndNotEmpty(String name) {, +++ b/common/src/main/java/io/netty/util/concurrent/SingleThreadEventExecutor.java, +    protected static Runnable pollTaskFrom(Queue<Runnable> taskQueue) {, +++ b/example/src/main/java/io/netty/example/http2/helloworld/multiplex/server/HelloWorldHttp2Handler.java, +    private static void sendResponse(ChannelHandlerContext ctx, ByteBuf payload) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CombinedHttpHeaders.java, +        private static CharSequence commaSeparateEscapedValues(CharSequence currentValue, CharSequence value) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cookie/ServerCookieEncoder.java, +    private static List<String> dedup(List<String> encoded, Map<String, Integer> nameToLastIndex) {, +++ b/common/src/main/java/io/netty/util/ConstantPool.java, +    private static String checkNotNullAndNotEmpty(String name) {, +++ b/common/src/main/java/io/netty/util/concurrent/SingleThreadEventExecutor.java, +    protected static Runnable pollTaskFrom(Queue<Runnable> taskQueue) {, +++ b/example/src/main/java/io/netty/example/http2/helloworld/multiplex/server/HelloWorldHttp2Handler.java, +    private static void sendResponse(ChannelHandlerContext ctx, ByteBuf payload) {, +++ b/example/src/main/java/io/netty/example/http2/tiles/Http2RequestHandler.java, +    private static String streamId(FullHttpRequest request) {, +    private static void streamId(FullHttpResponse response, String streamId) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CombinedHttpHeaders.java, +        private static CharSequence commaSeparateEscapedValues(CharSequence currentValue, CharSequence value) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cookie/ServerCookieEncoder.java, +    private static List<String> dedup(List<String> encoded, Map<String, Integer> nameToLastIndex) {, +++ b/common/src/main/java/io/netty/util/ConstantPool.java, +    private static String checkNotNullAndNotEmpty(String name) {, +++ b/common/src/main/java/io/netty/util/concurrent/SingleThreadEventExecutor.java, +    protected static Runnable pollTaskFrom(Queue<Runnable> taskQueue) {, +++ b/example/src/main/java/io/netty/example/http2/helloworld/multiplex/server/HelloWorldHttp2Handler.java, +    private static void sendResponse(ChannelHandlerContext ctx, ByteBuf payload) {, +++ b/example/src/main/java/io/netty/example/http2/tiles/Http2RequestHandler.java, +    private static String streamId(FullHttpRequest request) {, +    private static void streamId(FullHttpResponse response, String streamId) {, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketAutoReadTest.java, +    private static void testAutoReadOffDuringReadOnlyReadsOneTime(boolean readOutsideEventLoopThread,, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CombinedHttpHeaders.java, +        private static CharSequence commaSeparateEscapedValues(CharSequence currentValue, CharSequence value) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cookie/ServerCookieEncoder.java, +    private static List<String> dedup(List<String> encoded, Map<String, Integer> nameToLastIndex) {, +++ b/common/src/main/java/io/netty/util/ConstantPool.java, +    private static String checkNotNullAndNotEmpty(String name) {, +++ b/common/src/main/java/io/netty/util/concurrent/SingleThreadEventExecutor.java, +    protected static Runnable pollTaskFrom(Queue<Runnable> taskQueue) {, +++ b/example/src/main/java/io/netty/example/http2/helloworld/multiplex/server/HelloWorldHttp2Handler.java, +    private static void sendResponse(ChannelHandlerContext ctx, ByteBuf payload) {, +++ b/example/src/main/java/io/netty/example/http2/tiles/Http2RequestHandler.java, +    private static String streamId(FullHttpRequest request) {, +    private static void streamId(FullHttpResponse response, String streamId) {, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketAutoReadTest.java, +    private static void testAutoReadOffDuringReadOnlyReadsOneTime(boolean readOutsideEventLoopThread,, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketSslSessionReuseTest.java, +    private static void rethrowHandlerExceptions(ReadAndDiscardHandler sh, ReadAndDiscardHandler ch) throws Throwable {, +    private static Set<String> sessionIdSet(Enumeration<byte[]> sessionIds) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CombinedHttpHeaders.java, +        private static CharSequence commaSeparateEscapedValues(CharSequence currentValue, CharSequence value) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cookie/ServerCookieEncoder.java, +    private static List<String> dedup(List<String> encoded, Map<String, Integer> nameToLastIndex) {, +++ b/common/src/main/java/io/netty/util/ConstantPool.java, +    private static String checkNotNullAndNotEmpty(String name) {, +++ b/common/src/main/java/io/netty/util/concurrent/SingleThreadEventExecutor.java, +    protected static Runnable pollTaskFrom(Queue<Runnable> taskQueue) {, +++ b/example/src/main/java/io/netty/example/http2/helloworld/multiplex/server/HelloWorldHttp2Handler.java, +    private static void sendResponse(ChannelHandlerContext ctx, ByteBuf payload) {, +++ b/example/src/main/java/io/netty/example/http2/tiles/Http2RequestHandler.java, +    private static String streamId(FullHttpRequest request) {, +    private static void streamId(FullHttpResponse response, String streamId) {, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketAutoReadTest.java, +    private static void testAutoReadOffDuringReadOnlyReadsOneTime(boolean readOutsideEventLoopThread,, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketSslSessionReuseTest.java, +    private static void rethrowHandlerExceptions(ReadAndDiscardHandler sh, ReadAndDiscardHandler ch) throws Throwable {, +    private static Set<String> sessionIdSet(Enumeration<byte[]> sessionIds) {, +++ b/transport/src/main/java/io/netty/channel/DefaultMaxBytesRecvByteBufAllocator.java, +    private static void checkMaxBytesPerReadPair(int maxBytesPerRead, int maxBytesPerIndividualRead) {]