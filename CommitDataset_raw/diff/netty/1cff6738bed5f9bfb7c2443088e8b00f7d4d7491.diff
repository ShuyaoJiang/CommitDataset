[+++ b/src/main/java/org/jboss/netty/channel/socket/http/HttpTunnelingSocketChannelConfig.java, +import org.jboss.netty.channel.ChannelConfig;, +import org.jboss.netty.channel.socket.SocketChannel;, + * The {@link ChannelConfig} of a client-side HTTP tunneling, + * {@link SocketChannel}.  A {@link SocketChannel} created by, + * {@link HttpTunnelingClientSocketChannelFactory} will return an instance of, + * this configuration type for {@link SocketChannel#getConfig()}., + *, + * <h3>Available options</h3>, + *, + * In addition to the options provided by {@link SocketChannelConfig},, + * {@link HttpTunnelingSocketChannelConfig} allows the following options in, + * the option map:, + *, + * <table border="1" cellspacing="0" cellpadding="6">, + * <tr>, + * <th>Name</th><th>Associated setter method</th>, + * </tr><tr>, + * <td>{@code "sslContext"}</td><td>{@link #setSslContext(SSLContext)}</td>, + * </tr>, + * </table>, + *, + * @author Trustin Lee (tlee@redhat.com), +public final class HttpTunnelingSocketChannelConfig implements SocketChannelConfig {, +    /**, +     * Returns the {@link SSLContext} which is used to establish an HTTPS, +     * connection.  If {@code null}, a plain-text HTTP connection is established., +     */, +    /**, +     * Sets the {@link SSLContext} which is used to establish an HTTPS connection., +     * If {@code null}, a plain-text HTTP connection is established., +     */]