[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +            ByteBuf buf = Unpooled.buffer();, +            finishDecode(buf);, +            buf.release();, +            buf.release();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +            ByteBuf buf = Unpooled.buffer();, +            finishDecode(buf);, +            buf.release();, +            buf.release();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java, +                ByteBuf chunkContent = chunk.content();, +                if (fullRequest.content() != chunkContent) {, +                    fullRequest.content().clear().writeBytes(chunkContent);, +                    chunkContent.release();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +            ByteBuf buf = Unpooled.buffer();, +            finishDecode(buf);, +            buf.release();, +            buf.release();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java, +                ByteBuf chunkContent = chunk.content();, +                if (fullRequest.content() != chunkContent) {, +                    fullRequest.content().clear().writeBytes(chunkContent);, +                    chunkContent.release();, +++ b/codec/src/main/java/io/netty/handler/codec/string/StringEncoder.java, +        try {, +        } finally {, +            encoded.release();, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +            ByteBuf buf = Unpooled.buffer();, +            finishDecode(buf);, +            buf.release();, +            buf.release();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java, +                ByteBuf chunkContent = chunk.content();, +                if (fullRequest.content() != chunkContent) {, +                    fullRequest.content().clear().writeBytes(chunkContent);, +                    chunkContent.release();, +++ b/codec/src/main/java/io/netty/handler/codec/string/StringEncoder.java, +        try {, +        } finally {, +            encoded.release();, +        }, +++ b/example/src/main/java/io/netty/example/http/file/HttpStaticFileServerHandler.java, +import io.netty.buffer.ByteBuf;, +        ByteBuf buffer = Unpooled.copiedBuffer(buf, CharsetUtil.UTF_8);, +        response.content().writeBytes(buffer);, +        buffer.release();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +            ByteBuf buf = Unpooled.buffer();, +            finishDecode(buf);, +            buf.release();, +            buf.release();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java, +                ByteBuf chunkContent = chunk.content();, +                if (fullRequest.content() != chunkContent) {, +                    fullRequest.content().clear().writeBytes(chunkContent);, +                    chunkContent.release();, +++ b/codec/src/main/java/io/netty/handler/codec/string/StringEncoder.java, +        try {, +        } finally {, +            encoded.release();, +        }, +++ b/example/src/main/java/io/netty/example/http/file/HttpStaticFileServerHandler.java, +import io.netty.buffer.ByteBuf;, +        ByteBuf buffer = Unpooled.copiedBuffer(buf, CharsetUtil.UTF_8);, +        response.content().writeBytes(buffer);, +        buffer.release();, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/AutobahnServerHandler.java, +import io.netty.buffer.ByteBuf;, +            ByteBuf buf = Unpooled.copiedBuffer(res.getStatus().toString(), CharsetUtil.UTF_8);, +            res.content().writeBytes(buf);, +            buf.release();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +            ByteBuf buf = Unpooled.buffer();, +            finishDecode(buf);, +            buf.release();, +            buf.release();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java, +                ByteBuf chunkContent = chunk.content();, +                if (fullRequest.content() != chunkContent) {, +                    fullRequest.content().clear().writeBytes(chunkContent);, +                    chunkContent.release();, +++ b/codec/src/main/java/io/netty/handler/codec/string/StringEncoder.java, +        try {, +        } finally {, +            encoded.release();, +        }, +++ b/example/src/main/java/io/netty/example/http/file/HttpStaticFileServerHandler.java, +import io.netty.buffer.ByteBuf;, +        ByteBuf buffer = Unpooled.copiedBuffer(buf, CharsetUtil.UTF_8);, +        response.content().writeBytes(buffer);, +        buffer.release();, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/AutobahnServerHandler.java, +import io.netty.buffer.ByteBuf;, +            ByteBuf buf = Unpooled.copiedBuffer(res.getStatus().toString(), CharsetUtil.UTF_8);, +            res.content().writeBytes(buf);, +            buf.release();]