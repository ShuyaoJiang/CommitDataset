[+++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +                if (ctx.isRemoved()) {, +            if (ctx.isRemoved()) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +                if (ctx.isRemoved()) {, +            if (ctx.isRemoved()) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +                if (!ctx.isRemoved() && acceptOutboundMessage(m)) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +                if (ctx.isRemoved()) {, +            if (ctx.isRemoved()) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +                if (!ctx.isRemoved() && acceptOutboundMessage(m)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +                if (!ctx.isRemoved() && acceptInboundMessage(m)) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +                if (ctx.isRemoved()) {, +            if (ctx.isRemoved()) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +                if (!ctx.isRemoved() && acceptOutboundMessage(m)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +                if (!ctx.isRemoved() && acceptInboundMessage(m)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageEncoder.java, +                if (!ctx.isRemoved() && acceptOutboundMessage(m)) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +                if (ctx.isRemoved()) {, +            if (ctx.isRemoved()) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +                if (!ctx.isRemoved() && acceptOutboundMessage(m)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +                if (!ctx.isRemoved() && acceptInboundMessage(m)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageEncoder.java, +                if (!ctx.isRemoved() && acceptOutboundMessage(m)) {, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerContext.java, +    /**, +     * Return {@code true} if the {@link ChannelHandler} which belongs to this {@link ChannelHandler} was removed, +     * from the {@link ChannelPipeline}. Note that this method is only meant to be called from with in the, +     * {@link EventLoop}., +     */, +    boolean isRemoved();, +, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +                if (ctx.isRemoved()) {, +            if (ctx.isRemoved()) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +                if (!ctx.isRemoved() && acceptOutboundMessage(m)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +                if (!ctx.isRemoved() && acceptInboundMessage(m)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageEncoder.java, +                if (!ctx.isRemoved() && acceptOutboundMessage(m)) {, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerContext.java, +    /**, +     * Return {@code true} if the {@link ChannelHandler} which belongs to this {@link ChannelHandler} was removed, +     * from the {@link ChannelPipeline}. Note that this method is only meant to be called from with in the, +     * {@link EventLoop}., +     */, +    boolean isRemoved();, +, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +    private boolean removed;, +, +    void setRemoved() {, +        removed = true;, +    }, +, +    @Override, +    public boolean isRemoved() {, +        return removed;, +    }, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +                if (ctx.isRemoved()) {, +            if (ctx.isRemoved()) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +                if (!ctx.isRemoved() && acceptOutboundMessage(m)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +                if (!ctx.isRemoved() && acceptInboundMessage(m)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageEncoder.java, +                if (!ctx.isRemoved() && acceptOutboundMessage(m)) {, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerContext.java, +    /**, +     * Return {@code true} if the {@link ChannelHandler} which belongs to this {@link ChannelHandler} was removed, +     * from the {@link ChannelPipeline}. Note that this method is only meant to be called from with in the, +     * {@link EventLoop}., +     */, +    boolean isRemoved();, +, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +    private boolean removed;, +, +    void setRemoved() {, +        removed = true;, +    }, +, +    @Override, +    public boolean isRemoved() {, +        return removed;, +    }, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            ctx.setRemoved();, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java]