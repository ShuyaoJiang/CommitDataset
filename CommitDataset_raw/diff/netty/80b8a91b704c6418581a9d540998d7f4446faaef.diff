[+++ b/codec/src/main/java/io/netty/handler/codec/LineBasedFrameDecoder.java, +    /** Last scan position. */, +    private int offset;, +, +                    offset = 0;, +    private int findEndOfLine(final ByteBuf buffer) {, +        int totalLength = buffer.readableBytes();, +        int i = buffer.forEachByte(buffer.readerIndex() + offset, totalLength - offset, ByteProcessor.FIND_LF);, +        if (i >= 0) {, +            offset = 0;, +        } else {, +            offset = totalLength;, +        }, +++ b/codec/src/main/java/io/netty/handler/codec/LineBasedFrameDecoder.java, +    /** Last scan position. */, +    private int offset;, +, +                    offset = 0;, +    private int findEndOfLine(final ByteBuf buffer) {, +        int totalLength = buffer.readableBytes();, +        int i = buffer.forEachByte(buffer.readerIndex() + offset, totalLength - offset, ByteProcessor.FIND_LF);, +        if (i >= 0) {, +            offset = 0;, +        } else {, +            offset = totalLength;, +        }, +++ b/codec/src/test/java/io/netty/handler/codec/LineBasedFrameDecoderTest.java, +, +    @Test, +    public void testEmptyLine() throws Exception {, +        EmbeddedChannel ch = new EmbeddedChannel(new LineBasedFrameDecoder(8192, true, false));, +, +        assertTrue(ch.writeInbound(copiedBuffer("\nabcna\r\n", CharsetUtil.US_ASCII)));, +, +        ByteBuf buf = ch.readInbound();, +        assertEquals("", buf.toString(CharsetUtil.US_ASCII));, +, +        ByteBuf buf2 = ch.readInbound();, +        assertEquals("abcna", buf2.toString(CharsetUtil.US_ASCII));, +, +        assertFalse(ch.finishAndReleaseAll());, +, +        buf.release();, +        buf2.release();, +    }]