[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +            dup.setDecoderResult(decoderResult());, +            dup.setDecoderResult(decoderResult());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +            dup.setDecoderResult(decoderResult());, +            dup.setDecoderResult(decoderResult());, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpObjectAggregatorTest.java, +import io.netty.handler.codec.DecoderResult;, +, +    @Test, +    public void testReplaceAggregatedRequest() {, +        EmbeddedChannel embedder = new EmbeddedChannel(new HttpObjectAggregator(1024 * 1024));, +, +        Exception boom = new Exception("boom");, +        HttpRequest req = new DefaultHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.GET, "http://localhost");, +        req.setDecoderResult(DecoderResult.failure(boom));, +, +        assertTrue(embedder.writeInbound(req) && embedder.finish());, +, +        FullHttpRequest aggregatedReq = embedder.readInbound();, +        FullHttpRequest replacedReq = aggregatedReq.replace(Unpooled.EMPTY_BUFFER);, +, +        assertEquals(replacedReq.decoderResult(), aggregatedReq.decoderResult());, +        aggregatedReq.release();, +        replacedReq.release();, +    }, +, +    @Test, +    public void testReplaceAggregatedResponse() {, +        EmbeddedChannel embedder = new EmbeddedChannel(new HttpObjectAggregator(1024 * 1024));, +, +        Exception boom = new Exception("boom");, +        HttpResponse rep = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK);, +        rep.setDecoderResult(DecoderResult.failure(boom));, +, +        assertTrue(embedder.writeInbound(rep) && embedder.finish());, +, +        FullHttpResponse aggregatedRep = embedder.readInbound();, +        FullHttpResponse replacedRep = aggregatedRep.replace(Unpooled.EMPTY_BUFFER);, +, +        assertEquals(replacedRep.decoderResult(), aggregatedRep.decoderResult());, +        aggregatedRep.release();, +        replacedRep.release();, +    }]