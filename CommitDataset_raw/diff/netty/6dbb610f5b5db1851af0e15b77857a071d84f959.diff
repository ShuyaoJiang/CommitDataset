[+++ b/microbench/src/main/java/io/netty/microbench/channel/EmbeddedChannelWriteReleaseHandlerContext.java, +import io.netty.channel.ChannelHandlerInvoker;, +import io.netty.channel.EventLoop;, +    private final EventLoop eventLoop;, +        this.eventLoop = checkNotNull(channel.eventLoop(), "eventLoop");, +        return eventLoop;, +    }, +, +    @Override, +    public ChannelHandlerInvoker invoker() {, +        return eventLoop.asInvoker();, +++ b/microbench/src/main/java/io/netty/microbench/channel/EmbeddedChannelWriteReleaseHandlerContext.java, +import io.netty.channel.ChannelHandlerInvoker;, +import io.netty.channel.EventLoop;, +    private final EventLoop eventLoop;, +        this.eventLoop = checkNotNull(channel.eventLoop(), "eventLoop");, +        return eventLoop;, +    }, +, +    @Override, +    public ChannelHandlerInvoker invoker() {, +        return eventLoop.asInvoker();, +++ b/transport/src/main/java/io/netty/channel/AbstractChannelHandlerContext.java, +    @Override, +++ b/microbench/src/main/java/io/netty/microbench/channel/EmbeddedChannelWriteReleaseHandlerContext.java, +import io.netty.channel.ChannelHandlerInvoker;, +import io.netty.channel.EventLoop;, +    private final EventLoop eventLoop;, +        this.eventLoop = checkNotNull(channel.eventLoop(), "eventLoop");, +        return eventLoop;, +    }, +, +    @Override, +    public ChannelHandlerInvoker invoker() {, +        return eventLoop.asInvoker();, +++ b/transport/src/main/java/io/netty/channel/AbstractChannelHandlerContext.java, +    @Override, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerContext.java, +     * Returns the {@link ChannelHandlerInvoker} which is used to trigger an event for the associated, +     * {@link ChannelHandler}. Note that the methods in {@link ChannelHandlerInvoker} are not intended to be called, +     * by a user. Use this method only to obtain the reference to the {@link ChannelHandlerInvoker}, +     * (and not calling its methods) unless you know what you are doing., +     */, +    ChannelHandlerInvoker invoker();, +, +    /**, +++ b/microbench/src/main/java/io/netty/microbench/channel/EmbeddedChannelWriteReleaseHandlerContext.java, +import io.netty.channel.ChannelHandlerInvoker;, +import io.netty.channel.EventLoop;, +    private final EventLoop eventLoop;, +        this.eventLoop = checkNotNull(channel.eventLoop(), "eventLoop");, +        return eventLoop;, +    }, +, +    @Override, +    public ChannelHandlerInvoker invoker() {, +        return eventLoop.asInvoker();, +++ b/transport/src/main/java/io/netty/channel/AbstractChannelHandlerContext.java, +    @Override, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerContext.java, +     * Returns the {@link ChannelHandlerInvoker} which is used to trigger an event for the associated, +     * {@link ChannelHandler}. Note that the methods in {@link ChannelHandlerInvoker} are not intended to be called, +     * by a user. Use this method only to obtain the reference to the {@link ChannelHandlerInvoker}, +     * (and not calling its methods) unless you know what you are doing., +     */, +    ChannelHandlerInvoker invoker();, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/CombinedChannelDuplexHandler.java, +        public ChannelHandlerInvoker invoker() {, +            return ctx.invoker();, +        }, +, +        @Override]