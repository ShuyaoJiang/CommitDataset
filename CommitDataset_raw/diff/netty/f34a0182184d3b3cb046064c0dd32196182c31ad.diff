[+++ b/src/main/java/org/jboss/netty/util/ImmediateExecutor.java, +    /**, +     * The default instance., +     */, +++ b/src/main/java/org/jboss/netty/util/ImmediateExecutor.java, +    /**, +     * The default instance., +     */, +++ b/src/main/java/org/jboss/netty/util/MapBackedSet.java, +    /**, +     * Creates a new instance which wraps the specified {@code map}., +     */, +    /**, +     * Creates a new instance which wraps the specified {@code map} and, +     * adds all elements of the specified collection., +     */, +++ b/src/main/java/org/jboss/netty/util/ImmediateExecutor.java, +    /**, +     * The default instance., +     */, +++ b/src/main/java/org/jboss/netty/util/MapBackedSet.java, +    /**, +     * Creates a new instance which wraps the specified {@code map}., +     */, +    /**, +     * Creates a new instance which wraps the specified {@code map} and, +     * adds all elements of the specified collection., +     */, +++ b/src/main/java/org/jboss/netty/util/NamePreservingRunnable.java, + * Meta {@link Runnable} that changes the current thread name and reverts it back, +    /**, +     * Creates a new instance which wraps the specified {@code runnable}, +     * and changes the thread name to the specified thread name when the, +     * specified {@code runnable} is running., +     */, +     * Wraps {@link Thread#setName(String)} to catch a possible, +     * {@link Exception} such as a {@link SecurityException} in a sandbox, +     * environment, such as an applet, +++ b/src/main/java/org/jboss/netty/util/ImmediateExecutor.java, +    /**, +     * The default instance., +     */, +++ b/src/main/java/org/jboss/netty/util/MapBackedSet.java, +    /**, +     * Creates a new instance which wraps the specified {@code map}., +     */, +    /**, +     * Creates a new instance which wraps the specified {@code map} and, +     * adds all elements of the specified collection., +     */, +++ b/src/main/java/org/jboss/netty/util/NamePreservingRunnable.java, + * Meta {@link Runnable} that changes the current thread name and reverts it back, +    /**, +     * Creates a new instance which wraps the specified {@code runnable}, +     * and changes the thread name to the specified thread name when the, +     * specified {@code runnable} is running., +     */, +     * Wraps {@link Thread#setName(String)} to catch a possible, +     * {@link Exception} such as a {@link SecurityException} in a sandbox, +     * environment, such as an applet, +++ b/src/main/java/org/jboss/netty/util/SwitchableInputStream.java, +    /**, +     * Creates a new instance without initializing the reference to the, +     * underlying stream., +     */, +    /**, +     * Creates a new instance with the initial reference to the underlying, +     * stream., +     */, +++ b/src/main/java/org/jboss/netty/util/ImmediateExecutor.java, +    /**, +     * The default instance., +     */, +++ b/src/main/java/org/jboss/netty/util/MapBackedSet.java, +    /**, +     * Creates a new instance which wraps the specified {@code map}., +     */, +    /**, +     * Creates a new instance which wraps the specified {@code map} and, +     * adds all elements of the specified collection., +     */, +++ b/src/main/java/org/jboss/netty/util/NamePreservingRunnable.java, + * Meta {@link Runnable} that changes the current thread name and reverts it back, +    /**, +     * Creates a new instance which wraps the specified {@code runnable}, +     * and changes the thread name to the specified thread name when the, +     * specified {@code runnable} is running., +     */, +     * Wraps {@link Thread#setName(String)} to catch a possible, +     * {@link Exception} such as a {@link SecurityException} in a sandbox, +     * environment, such as an applet, +++ b/src/main/java/org/jboss/netty/util/SwitchableInputStream.java, +    /**, +     * Creates a new instance without initializing the reference to the, +     * underlying stream., +     */, +    /**, +     * Creates a new instance with the initial reference to the underlying, +     * stream., +     */]