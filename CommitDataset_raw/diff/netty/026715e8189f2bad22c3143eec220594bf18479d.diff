[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +        Queue<Object> in = ctx.inbound().messageBuffer();, +        ctx.nextInboundMessageBuffer().add(msg);, +        Queue<Object> in = ctx.outbound().messageBuffer();, +        ctx.nextOutboundMessageBuffer().add(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +        Queue<Object> in = ctx.inbound().messageBuffer();, +        ctx.nextInboundMessageBuffer().add(msg);, +        Queue<Object> in = ctx.outbound().messageBuffer();, +        ctx.nextOutboundMessageBuffer().add(msg);, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/AbstractSocketSpdyEchoTest.java, +            ChannelBuffer m = ctx.inbound().byteBuffer().readBytes(ctx.inbound().byteBuffer().readableBytes());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +        Queue<Object> in = ctx.inbound().messageBuffer();, +        ctx.nextInboundMessageBuffer().add(msg);, +        Queue<Object> in = ctx.outbound().messageBuffer();, +        ctx.nextOutboundMessageBuffer().add(msg);, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/AbstractSocketSpdyEchoTest.java, +            ChannelBuffer m = ctx.inbound().byteBuffer().readBytes(ctx.inbound().byteBuffer().readableBytes());, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +        Queue<I> in = ctx.inbound().messageBuffer();, +                if (unfoldAndAdd(ctx, ctx.nextInboundMessageBuffer(), emsg)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +        Queue<Object> in = ctx.inbound().messageBuffer();, +        ctx.nextInboundMessageBuffer().add(msg);, +        Queue<Object> in = ctx.outbound().messageBuffer();, +        ctx.nextOutboundMessageBuffer().add(msg);, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/AbstractSocketSpdyEchoTest.java, +            ChannelBuffer m = ctx.inbound().byteBuffer().readBytes(ctx.inbound().byteBuffer().readableBytes());, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +        Queue<I> in = ctx.inbound().messageBuffer();, +                if (unfoldAndAdd(ctx, ctx.nextInboundMessageBuffer(), emsg)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageEncoder.java, +        Queue<I> in = ctx.outbound().messageBuffer();, +                if (unfoldAndAdd(ctx, ctx.nextOutboundMessageBuffer(), emsg)) {, +            ChannelHandlerContext ctx, Queue<Object> dst, Object msg) throws Exception {, +        dst.add(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +        Queue<Object> in = ctx.inbound().messageBuffer();, +        ctx.nextInboundMessageBuffer().add(msg);, +        Queue<Object> in = ctx.outbound().messageBuffer();, +        ctx.nextOutboundMessageBuffer().add(msg);, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/AbstractSocketSpdyEchoTest.java, +            ChannelBuffer m = ctx.inbound().byteBuffer().readBytes(ctx.inbound().byteBuffer().readableBytes());, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +        Queue<I> in = ctx.inbound().messageBuffer();, +                if (unfoldAndAdd(ctx, ctx.nextInboundMessageBuffer(), emsg)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageEncoder.java, +        Queue<I> in = ctx.outbound().messageBuffer();, +                if (unfoldAndAdd(ctx, ctx.nextOutboundMessageBuffer(), emsg)) {, +            ChannelHandlerContext ctx, Queue<Object> dst, Object msg) throws Exception {, +        dst.add(msg);, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToStreamEncoder.java, +        Queue<I> in = ctx.outbound().messageBuffer();, +        ChannelBuffer out = ctx.nextOutboundByteBuffer();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +        Queue<Object> in = ctx.inbound().messageBuffer();, +        ctx.nextInboundMessageBuffer().add(msg);, +        Queue<Object> in = ctx.outbound().messageBuffer();, +        ctx.nextOutboundMessageBuffer().add(msg);, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/AbstractSocketSpdyEchoTest.java, +            ChannelBuffer m = ctx.inbound().byteBuffer().readBytes(ctx.inbound().byteBuffer().readableBytes());, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +        Queue<I> in = ctx.inbound().messageBuffer();, +                if (unfoldAndAdd(ctx, ctx.nextInboundMessageBuffer(), emsg)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageEncoder.java, +        Queue<I> in = ctx.outbound().messageBuffer();, +                if (unfoldAndAdd(ctx, ctx.nextOutboundMessageBuffer(), emsg)) {, +            ChannelHandlerContext ctx, Queue<Object> dst, Object msg) throws Exception {, +        dst.add(msg);, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToStreamEncoder.java, +        Queue<I> in = ctx.outbound().messageBuffer();, +        ChannelBuffer out = ctx.nextOutboundByteBuffer();, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +            if (unfoldAndAdd(ctx, ctx.nextInboundMessageBuffer(), decodeLast(ctx, replayable))) {, +                if (unfoldAndAdd(ctx, ctx.nextInboundMessageBuffer(), result)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +        Queue<Object> in = ctx.inbound().messageBuffer();, +        ctx.nextInboundMessageBuffer().add(msg);, +        Queue<Object> in = ctx.outbound().messageBuffer();, +        ctx.nextOutboundMessageBuffer().add(msg);, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/AbstractSocketSpdyEchoTest.java, +            ChannelBuffer m = ctx.inbound().byteBuffer().readBytes(ctx.inbound().byteBuffer().readableBytes());, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +        Queue<I> in = ctx.inbound().messageBuffer();, +                if (unfoldAndAdd(ctx, ctx.nextInboundMessageBuffer(), emsg)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageEncoder.java, +        Queue<I> in = ctx.outbound().messageBuffer();, +                if (unfoldAndAdd(ctx, ctx.nextOutboundMessageBuffer(), emsg)) {, +            ChannelHandlerContext ctx, Queue<Object> dst, Object msg) throws Exception {, +        dst.add(msg);, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToStreamEncoder.java, +        Queue<I> in = ctx.outbound().messageBuffer();, +        ChannelBuffer out = ctx.nextOutboundByteBuffer();, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +            if (unfoldAndAdd(ctx, ctx.nextInboundMessageBuffer(), decodeLast(ctx, replayable))) {, +                if (unfoldAndAdd(ctx, ctx.nextInboundMessageBuffer(), result)) {, +++ b/codec/src/main/java/io/netty/handler/codec/StreamToMessageDecoder.java, +        ChannelBuffer in = ctx.inbound().byteBuffer();, +            if (unfoldAndAdd(ctx, ctx.nextInboundMessageBuffer(), decodeLast(ctx, in))) {]