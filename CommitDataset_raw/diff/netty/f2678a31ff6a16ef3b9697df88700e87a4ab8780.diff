[+++ b/handler/src/main/java/io/netty/handler/ssl/ApplicationProtocolConfig.java, +import javax.net.ssl.SSLEngine;, +import static io.netty.handler.ssl.ApplicationProtocolUtil.*;, +import static io.netty.util.internal.ObjectUtil.*;, +, +    /**, +     * The configuration that disables application protocol negotiation., +     */, +    public static final ApplicationProtocolConfig DISABLED = new ApplicationProtocolConfig();, +, +    private ApplicationProtocolConfig(, +            Protocol protocol, SelectorFailureBehavior selectorBehavior,, +, +        if (protocol == Protocol.NONE) {, +            throw new IllegalArgumentException("protocol (" + Protocol.NONE + ") must not be " + Protocol.NONE + '.');, +        }, +    }, +, +    /**, +     * A special constructor that is used to instantiate {@link #DISABLED}., +     */, +    private ApplicationProtocolConfig() {, +        supportedProtocols = Collections.emptyList();, +        protocol = Protocol.NONE;, +        selectorBehavior = SelectorFailureBehavior.CHOOSE_MY_LAST_PROTOCOL;, +        selectedBehavior = SelectedListenerFailureBehavior.ACCEPT;, +++ b/handler/src/main/java/io/netty/handler/ssl/ApplicationProtocolConfig.java, +import javax.net.ssl.SSLEngine;, +import static io.netty.handler.ssl.ApplicationProtocolUtil.*;, +import static io.netty.util.internal.ObjectUtil.*;, +, +    /**, +     * The configuration that disables application protocol negotiation., +     */, +    public static final ApplicationProtocolConfig DISABLED = new ApplicationProtocolConfig();, +, +    private ApplicationProtocolConfig(, +            Protocol protocol, SelectorFailureBehavior selectorBehavior,, +, +        if (protocol == Protocol.NONE) {, +            throw new IllegalArgumentException("protocol (" + Protocol.NONE + ") must not be " + Protocol.NONE + '.');, +        }, +    }, +, +    /**, +     * A special constructor that is used to instantiate {@link #DISABLED}., +     */, +    private ApplicationProtocolConfig() {, +        supportedProtocols = Collections.emptyList();, +        protocol = Protocol.NONE;, +        selectorBehavior = SelectorFailureBehavior.CHOOSE_MY_LAST_PROTOCOL;, +        selectedBehavior = SelectedListenerFailureBehavior.ACCEPT;, +++ b/handler/src/main/java/io/netty/handler/ssl/SslContext.java, +            apn = ApplicationProtocolConfig.DISABLED;]