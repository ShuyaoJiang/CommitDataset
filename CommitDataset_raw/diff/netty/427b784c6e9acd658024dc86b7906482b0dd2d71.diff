[+++ b/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            name2ctx.put(newName, newCtx);, +++ b/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            name2ctx.put(newName, newCtx);, +++ b/src/main/java/io/netty/example/http/websocketx/autobahn/WebSocketServerHandler.java, +		this.handshaker = wsFactory.newHandshaker(ctx, req);, +			wsFactory.sendUnsupportedWebSocketVersionResponse(ctx);, +			this.handshaker.performOpeningHandshake(ctx, req);, +			this.handshaker.performClosingHandshake(ctx, (CloseWebSocketFrame) frame);, +++ b/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            name2ctx.put(newName, newCtx);, +++ b/src/main/java/io/netty/example/http/websocketx/autobahn/WebSocketServerHandler.java, +		this.handshaker = wsFactory.newHandshaker(ctx, req);, +			wsFactory.sendUnsupportedWebSocketVersionResponse(ctx);, +			this.handshaker.performOpeningHandshake(ctx, req);, +			this.handshaker.performClosingHandshake(ctx, (CloseWebSocketFrame) frame);, +++ b/src/main/java/io/netty/example/http/websocketx/server/WebSocketServerHandler.java, +		this.handshaker = wsFactory.newHandshaker(ctx, req);, +			wsFactory.sendUnsupportedWebSocketVersionResponse(ctx);, +			this.handshaker.performOpeningHandshake(ctx, req);, +			this.handshaker.performClosingHandshake(ctx, (CloseWebSocketFrame) frame);, +++ b/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            name2ctx.put(newName, newCtx);, +++ b/src/main/java/io/netty/example/http/websocketx/autobahn/WebSocketServerHandler.java, +		this.handshaker = wsFactory.newHandshaker(ctx, req);, +			wsFactory.sendUnsupportedWebSocketVersionResponse(ctx);, +			this.handshaker.performOpeningHandshake(ctx, req);, +			this.handshaker.performClosingHandshake(ctx, (CloseWebSocketFrame) frame);, +++ b/src/main/java/io/netty/example/http/websocketx/server/WebSocketServerHandler.java, +		this.handshaker = wsFactory.newHandshaker(ctx, req);, +			wsFactory.sendUnsupportedWebSocketVersionResponse(ctx);, +			this.handshaker.performOpeningHandshake(ctx, req);, +			this.handshaker.performClosingHandshake(ctx, (CloseWebSocketFrame) frame);, +++ b/src/main/java/io/netty/example/http/websocketx/sslserver/WebSocketSslServerHandler.java, +		this.handshaker = wsFactory.newHandshaker(ctx, req);, +			wsFactory.sendUnsupportedWebSocketVersionResponse(ctx);, +			this.handshaker.performOpeningHandshake(ctx, req);, +			this.handshaker.performClosingHandshake(ctx, (CloseWebSocketFrame) frame);, +++ b/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            name2ctx.put(newName, newCtx);, +++ b/src/main/java/io/netty/example/http/websocketx/autobahn/WebSocketServerHandler.java, +		this.handshaker = wsFactory.newHandshaker(ctx, req);, +			wsFactory.sendUnsupportedWebSocketVersionResponse(ctx);, +			this.handshaker.performOpeningHandshake(ctx, req);, +			this.handshaker.performClosingHandshake(ctx, (CloseWebSocketFrame) frame);, +++ b/src/main/java/io/netty/example/http/websocketx/server/WebSocketServerHandler.java, +		this.handshaker = wsFactory.newHandshaker(ctx, req);, +			wsFactory.sendUnsupportedWebSocketVersionResponse(ctx);, +			this.handshaker.performOpeningHandshake(ctx, req);, +			this.handshaker.performClosingHandshake(ctx, (CloseWebSocketFrame) frame);, +++ b/src/main/java/io/netty/example/http/websocketx/sslserver/WebSocketSslServerHandler.java, +		this.handshaker = wsFactory.newHandshaker(ctx, req);, +			wsFactory.sendUnsupportedWebSocketVersionResponse(ctx);, +			this.handshaker.performOpeningHandshake(ctx, req);, +			this.handshaker.performClosingHandshake(ctx, (CloseWebSocketFrame) frame);, +++ b/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.java, +import io.netty.channel.ChannelHandlerContext;, +     * @param ctx, +     *            Context, +    public abstract void performOpeningHandshake(ChannelHandlerContext ctx, HttpRequest req);, +     * @param ctx, +     *            Context, +    public abstract void performClosingHandshake(ChannelHandlerContext ctx, CloseWebSocketFrame frame);, +++ b/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            name2ctx.put(newName, newCtx);, +++ b/src/main/java/io/netty/example/http/websocketx/autobahn/WebSocketServerHandler.java, +		this.handshaker = wsFactory.newHandshaker(ctx, req);, +			wsFactory.sendUnsupportedWebSocketVersionResponse(ctx);, +			this.handshaker.performOpeningHandshake(ctx, req);, +			this.handshaker.performClosingHandshake(ctx, (CloseWebSocketFrame) frame);, +++ b/src/main/java/io/netty/example/http/websocketx/server/WebSocketServerHandler.java, +		this.handshaker = wsFactory.newHandshaker(ctx, req);, +			wsFactory.sendUnsupportedWebSocketVersionResponse(ctx);, +			this.handshaker.performOpeningHandshake(ctx, req);, +			this.handshaker.performClosingHandshake(ctx, (CloseWebSocketFrame) frame);, +++ b/src/main/java/io/netty/example/http/websocketx/sslserver/WebSocketSslServerHandler.java, +		this.handshaker = wsFactory.newHandshaker(ctx, req);, +			wsFactory.sendUnsupportedWebSocketVersionResponse(ctx);, +			this.handshaker.performOpeningHandshake(ctx, req);, +			this.handshaker.performClosingHandshake(ctx, (CloseWebSocketFrame) frame);, +++ b/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.java, +import io.netty.channel.ChannelHandlerContext;, +     * @param ctx, +     *            Context, +    public abstract void performOpeningHandshake(ChannelHandlerContext ctx, HttpRequest req);, +     * @param ctx, +     *            Context, +    public abstract void performClosingHandshake(ChannelHandlerContext ctx, CloseWebSocketFrame frame);, +++ b/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +import io.netty.channel.ChannelHandlerContext;, +     * @param ctx, +     *            Channel context, +    public void performOpeningHandshake(ChannelHandlerContext ctx, HttpRequest req) {, +            logger.debug(String.format("Channel %s web socket spec version 00 handshake", ctx.getChannel().getId()));, +        ChannelPipeline p = ctx.getChannel().getPipeline();, +        p.remove("aggregator");, +        p.replace("decoder", "wsdecoder", new WebSocket00FrameDecoder());, +        ctx.getChannel().write(res);, +        p.replace("encoder", "wsencoder", new WebSocket00FrameEncoder());, +     * @param ctx]