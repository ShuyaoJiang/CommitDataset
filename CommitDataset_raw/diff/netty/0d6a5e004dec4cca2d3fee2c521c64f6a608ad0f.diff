[+++ b/pom.xml, +++ b/pom.xml, +++ b/src/docbook/en-US/module/architecture.xml, +      to represent a sequence of bytes. This approach has significant advantages, +      &ChannelBuffer; has been designed from the ground up to address the problems, +            You can define your own buffer type if necessary., +            Transparent zero copy is achieved by a built-in composite buffer type., +++ b/pom.xml, +++ b/src/docbook/en-US/module/architecture.xml, +      to represent a sequence of bytes. This approach has significant advantages, +      &ChannelBuffer; has been designed from the ground up to address the problems, +            You can define your own buffer type if necessary., +            Transparent zero copy is achieved by a built-in composite buffer type., +++ /dev/null, +++ b/pom.xml, +++ b/src/docbook/en-US/module/architecture.xml, +      to represent a sequence of bytes. This approach has significant advantages, +      &ChannelBuffer; has been designed from the ground up to address the problems, +            You can define your own buffer type if necessary., +            Transparent zero copy is achieved by a built-in composite buffer type., +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ b/src/docbook/en-US/module/architecture.xml, +      to represent a sequence of bytes. This approach has significant advantages, +      &ChannelBuffer; has been designed from the ground up to address the problems, +            You can define your own buffer type if necessary., +            Transparent zero copy is achieved by a built-in composite buffer type., +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ b/src/docbook/en-US/module/architecture.xml, +      to represent a sequence of bytes. This approach has significant advantages, +      &ChannelBuffer; has been designed from the ground up to address the problems, +            You can define your own buffer type if necessary., +            Transparent zero copy is achieved by a built-in composite buffer type., +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ b/src/docbook/en-US/module/architecture.xml, +      to represent a sequence of bytes. This approach has significant advantages, +      &ChannelBuffer; has been designed from the ground up to address the problems, +            You can define your own buffer type if necessary., +            Transparent zero copy is achieved by a built-in composite buffer type., +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ b/src/docbook/en-US/module/architecture.xml, +      to represent a sequence of bytes. This approach has significant advantages, +      &ChannelBuffer; has been designed from the ground up to address the problems, +            You can define your own buffer type if necessary., +            Transparent zero copy is achieved by a built-in composite buffer type., +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ b/src/docbook/en-US/module/architecture.xml, +      to represent a sequence of bytes. This approach has significant advantages, +      &ChannelBuffer; has been designed from the ground up to address the problems, +            You can define your own buffer type if necessary., +            Transparent zero copy is achieved by a built-in composite buffer type., +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ b/src/docbook/en-US/module/architecture.xml, +      to represent a sequence of bytes. This approach has significant advantages, +      &ChannelBuffer; has been designed from the ground up to address the problems, +            You can define your own buffer type if necessary., +            Transparent zero copy is achieved by a built-in composite buffer type., +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +++ b/src/docbook/en-US/module/architecture.xml, +      to represent a sequence of bytes. This approach has significant advantages, +      &ChannelBuffer; has been designed from the ground up to address the problems, +            You can define your own buffer type if necessary., +            Transparent zero copy is achieved by a built-in composite buffer type., +++ /dev/null, +++ /dev/null, +++ /dev/null]