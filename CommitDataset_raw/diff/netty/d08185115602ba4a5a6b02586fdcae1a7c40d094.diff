[+++ b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttDecoder.java, +        String s = buffer.toString(buffer.readerIndex(), size, CharsetUtil.UTF_8);, +        buffer.skipBytes(size);, +        return new Result<String>(s, numberOfBytesConsumed);, +++ b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttDecoder.java, +        String s = buffer.toString(buffer.readerIndex(), size, CharsetUtil.UTF_8);, +        buffer.skipBytes(size);, +        return new Result<String>(s, numberOfBytesConsumed);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +                username = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +                password = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +++ b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttDecoder.java, +        String s = buffer.toString(buffer.readerIndex(), size, CharsetUtil.UTF_8);, +        buffer.skipBytes(size);, +        return new Result<String>(s, numberOfBytesConsumed);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +                username = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +                password = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequestDecoder.java, +                        host = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +                        byte[] bytes = new byte[16];, +                        byteBuf.readBytes(bytes);, +                        host = SocksCommonUtils.ipv6toStr(bytes);, +++ b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttDecoder.java, +        String s = buffer.toString(buffer.readerIndex(), size, CharsetUtil.UTF_8);, +        buffer.skipBytes(size);, +        return new Result<String>(s, numberOfBytesConsumed);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +                username = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +                password = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequestDecoder.java, +                        host = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +                        byte[] bytes = new byte[16];, +                        byteBuf.readBytes(bytes);, +                        host = SocksCommonUtils.ipv6toStr(bytes);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponseDecoder.java, +                        host = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +                        byte[] bytes = new byte[16];, +                        byteBuf.readBytes(bytes);, +                        host = SocksCommonUtils.ipv6toStr(bytes);, +++ b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttDecoder.java, +        String s = buffer.toString(buffer.readerIndex(), size, CharsetUtil.UTF_8);, +        buffer.skipBytes(size);, +        return new Result<String>(s, numberOfBytesConsumed);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +                username = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +                password = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequestDecoder.java, +                        host = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +                        byte[] bytes = new byte[16];, +                        byteBuf.readBytes(bytes);, +                        host = SocksCommonUtils.ipv6toStr(bytes);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponseDecoder.java, +                        host = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +                        byte[] bytes = new byte[16];, +                        byteBuf.readBytes(bytes);, +                        host = SocksCommonUtils.ipv6toStr(bytes);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCommonUtils.java, +import io.netty.buffer.ByteBuf;, +import io.netty.util.CharsetUtil;, +, +    static String readUsAscii(ByteBuf buffer, int length) {, +        String s = buffer.toString(buffer.readerIndex(), length, CharsetUtil.US_ASCII);, +        buffer.skipBytes(length);, +        return s;, +    }, +++ b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttDecoder.java, +        String s = buffer.toString(buffer.readerIndex(), size, CharsetUtil.UTF_8);, +        buffer.skipBytes(size);, +        return new Result<String>(s, numberOfBytesConsumed);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksAuthRequestDecoder.java, +                username = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +                password = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequestDecoder.java, +                        host = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +                        byte[] bytes = new byte[16];, +                        byteBuf.readBytes(bytes);, +                        host = SocksCommonUtils.ipv6toStr(bytes);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponseDecoder.java, +                        host = SocksCommonUtils.readUsAscii(byteBuf, fieldLength);, +                        byte[] bytes = new byte[16];, +                        byteBuf.readBytes(bytes);, +                        host = SocksCommonUtils.ipv6toStr(bytes);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCommonUtils.java, +import io.netty.buffer.ByteBuf;, +import io.netty.util.CharsetUtil;, +, +    static String readUsAscii(ByteBuf buffer, int length) {, +        String s = buffer.toString(buffer.readerIndex(), length, CharsetUtil.US_ASCII);, +        buffer.skipBytes(length);, +        return s;, +    }, +++ b/codec/src/main/java/io/netty/handler/codec/protobuf/ProtobufVarint32FrameDecoder.java, +            out.add(in.readSlice(length).retain());]