[+++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +        if (maxNumComponents < 1) {, +                    "maxNumComponents: " + maxNumComponents + " (expected: >= 1)");, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +        if (maxNumComponents < 1) {, +                    "maxNumComponents: " + maxNumComponents + " (expected: >= 1)");, +++ b/buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java, +    private static final ByteBufAllocator ALLOC = UnpooledByteBufAllocator.DEFAULT;, +, +    @Test, +    public void testComponentsLessThanLowerBound() {, +        try {, +            new CompositeByteBuf(ALLOC, true, 0);, +            fail();, +        } catch (IllegalArgumentException e) {, +            assertEquals("maxNumComponents: 0 (expected: >= 1)", e.getMessage());, +        }, +    }, +, +    @Test, +    public void testComponentsEqualToLowerBound() {, +        assertCompositeBufCreated(1);, +    }, +, +    @Test, +    public void testComponentsGreaterThanLowerBound() {, +        assertCompositeBufCreated(5);, +    }, +, +    /**, +     * Assert that a new {@linkplain CompositeByteBuf} was created successfully with the desired number of max, +     * components., +     */, +    private static void assertCompositeBufCreated(int expectedMaxComponents) {, +        CompositeByteBuf buf = new CompositeByteBuf(ALLOC, true, expectedMaxComponents);, +, +        assertEquals(expectedMaxComponents, buf.maxNumComponents());, +        assertTrue(buf.release());, +    }, +]