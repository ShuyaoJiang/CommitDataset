[+++ b/codec/src/main/java/io/netty/handler/codec/frame/FrameDecoder.java, +                factory.getDefaultOrder(), Math.max(minimumCapacity, 256), factory);, +++ b/codec/src/main/java/io/netty/handler/codec/frame/FrameDecoder.java, +                factory.getDefaultOrder(), Math.max(minimumCapacity, 256), factory);, +++ b/codec/src/main/java/io/netty/handler/codec/replay/ReplayingDecoder.java, +import io.netty.buffer.ChannelBufferFactory;, +    /**, +     * Create a new {@link ChannelBuffer} which is used for the cumulation., +     * Be aware that this MUST be a dynamic buffer. Sub-classes may override, +     * this to provide a dynamic {@link ChannelBuffer} which has some, +     * pre-allocated size that better fit their need., +     *, +     * @param ctx {@link ChannelHandlerContext} for this handler, +     * @return buffer the {@link ChannelBuffer} which is used for cumulation, +     */, +    protected ChannelBuffer newCumulationBuffer(, +        ChannelBufferFactory factory = ctx.getChannel().getConfig().getBufferFactory();, +        return ChannelBuffers.dynamicBuffer(, +                factory.getDefaultOrder(), Math.max(minimumCapacity, 256), factory);, +++ b/codec/src/main/java/io/netty/handler/codec/frame/FrameDecoder.java, +                factory.getDefaultOrder(), Math.max(minimumCapacity, 256), factory);, +++ b/codec/src/main/java/io/netty/handler/codec/replay/ReplayingDecoder.java, +import io.netty.buffer.ChannelBufferFactory;, +    /**, +     * Create a new {@link ChannelBuffer} which is used for the cumulation., +     * Be aware that this MUST be a dynamic buffer. Sub-classes may override, +     * this to provide a dynamic {@link ChannelBuffer} which has some, +     * pre-allocated size that better fit their need., +     *, +     * @param ctx {@link ChannelHandlerContext} for this handler, +     * @return buffer the {@link ChannelBuffer} which is used for cumulation, +     */, +    protected ChannelBuffer newCumulationBuffer(, +        ChannelBufferFactory factory = ctx.getChannel().getConfig().getBufferFactory();, +        return ChannelBuffers.dynamicBuffer(, +                factory.getDefaultOrder(), Math.max(minimumCapacity, 256), factory);, +++ /dev/null]