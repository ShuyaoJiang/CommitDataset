[+++ b/handler/src/main/java/io/netty/handler/timeout/IdleStateEvent.java, +    public static final IdleStateEvent FIRST_READER_IDLE_STATE_EVENT = new IdleStateEvent(IdleState.READER_IDLE, true);, +    public static final IdleStateEvent READER_IDLE_STATE_EVENT = new IdleStateEvent(IdleState.READER_IDLE, false);, +    public static final IdleStateEvent FIRST_WRITER_IDLE_STATE_EVENT = new IdleStateEvent(IdleState.WRITER_IDLE, true);, +    public static final IdleStateEvent WRITER_IDLE_STATE_EVENT = new IdleStateEvent(IdleState.WRITER_IDLE, false);, +    public static final IdleStateEvent FIRST_ALL_IDLE_STATE_EVENT = new IdleStateEvent(IdleState.ALL_IDLE, true);, +    public static final IdleStateEvent ALL_IDLE_STATE_EVENT = new IdleStateEvent(IdleState.ALL_IDLE, false);, +    private final boolean first;, +    private IdleStateEvent(IdleState state, boolean first) {, +        this.first = first;, +     * Returns the idle state., +     * Returns {@code true} if this was the first event for the {@link IdleState}, +    public boolean isFirst() {, +        return first;, +++ b/handler/src/main/java/io/netty/handler/timeout/IdleStateEvent.java, +    public static final IdleStateEvent FIRST_READER_IDLE_STATE_EVENT = new IdleStateEvent(IdleState.READER_IDLE, true);, +    public static final IdleStateEvent READER_IDLE_STATE_EVENT = new IdleStateEvent(IdleState.READER_IDLE, false);, +    public static final IdleStateEvent FIRST_WRITER_IDLE_STATE_EVENT = new IdleStateEvent(IdleState.WRITER_IDLE, true);, +    public static final IdleStateEvent WRITER_IDLE_STATE_EVENT = new IdleStateEvent(IdleState.WRITER_IDLE, false);, +    public static final IdleStateEvent FIRST_ALL_IDLE_STATE_EVENT = new IdleStateEvent(IdleState.ALL_IDLE, true);, +    public static final IdleStateEvent ALL_IDLE_STATE_EVENT = new IdleStateEvent(IdleState.ALL_IDLE, false);, +    private final boolean first;, +    private IdleStateEvent(IdleState state, boolean first) {, +        this.first = first;, +     * Returns the idle state., +     * Returns {@code true} if this was the first event for the {@link IdleState}, +    public boolean isFirst() {, +        return first;, +++ b/handler/src/main/java/io/netty/handler/timeout/IdleStateHandler.java, +    private boolean firstReaderIdleEvent = true;, +    private boolean firstWriterIdleEvent = true;, +    private boolean firstAllIdleEvent = true;, +     * Creates a new instance firing {@link IdleStateEvent}s., +     * Creates a new instance firing {@link IdleStateEvent}s., +        firstReaderIdleEvent = firstAllIdleEvent = true;, +                firstWriterIdleEvent = firstAllIdleEvent = true;, +                firstWriterIdleEvent = firstAllIdleEvent = true;, +                    IdleStateEvent event;, +                    if (firstReaderIdleEvent) {, +                        firstReaderIdleEvent = false;, +                        event = IdleStateEvent.FIRST_READER_IDLE_STATE_EVENT;, +                    } else {, +                        event = IdleStateEvent.READER_IDLE_STATE_EVENT;, +                    }, +                    channelIdle(ctx, event);, +                    IdleStateEvent event;, +                    if (firstWriterIdleEvent) {, +                        firstWriterIdleEvent = false;, +                        event = IdleStateEvent.FIRST_WRITER_IDLE_STATE_EVENT;, +                    } else {, +                        event = IdleStateEvent.WRITER_IDLE_STATE_EVENT;, +                    }, +                    channelIdle(ctx, event);, +                    IdleStateEvent event;, +                    if (firstAllIdleEvent) {, +                        firstAllIdleEvent = false;, +                        event = IdleStateEvent.FIRST_ALL_IDLE_STATE_EVENT;, +                    } else {, +                        event = IdleStateEvent.ALL_IDLE_STATE_EVENT;, +                    }, +                    channelIdle(ctx, event);]