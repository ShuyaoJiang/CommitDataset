[+++ b/codec/src/main/java/io/netty/handler/codec/LengthFieldBasedFrameDecoder.java, +import java.nio.ByteOrder;, +, +    private final ByteOrder byteOrder;, +            int maxFrameLength, int lengthFieldOffset, int lengthFieldLength,, +        this(, +                ByteOrder.BIG_ENDIAN, maxFrameLength, lengthFieldOffset, lengthFieldLength,, +                lengthAdjustment, initialBytesToStrip, failFast);, +    }, +, +    /**, +     * Creates a new instance., +     *, +     * @param byteOrder, +     *        the {@link ByteOrder} of the length field, +     * @param maxFrameLength, +     *        the maximum length of the frame.  If the length of the frame is, +     *        greater than this value, {@link TooLongFrameException} will be, +     *        thrown., +     * @param lengthFieldOffset, +     *        the offset of the length field, +     * @param lengthFieldLength, +     *        the length of the length field, +     * @param lengthAdjustment, +     *        the compensation value to add to the value of the length field, +     * @param initialBytesToStrip, +     *        the number of first bytes to strip out from the decoded frame, +     * @param failFast, +     *        If <tt>true</tt>, a {@link TooLongFrameException} is thrown as, +     *        soon as the decoder notices the length of the frame will exceed, +     *        <tt>maxFrameLength</tt> regardless of whether the entire frame, +     *        has been read.  If <tt>false</tt>, a {@link TooLongFrameException}, +     *        is thrown after the entire frame that exceeds <tt>maxFrameLength</tt>, +     *        has been read., +     */, +    public LengthFieldBasedFrameDecoder(, +            ByteOrder byteOrder, int maxFrameLength, int lengthFieldOffset, int lengthFieldLength,, +            int lengthAdjustment, int initialBytesToStrip, boolean failFast) {, +        if (byteOrder == null) {, +            throw new NullPointerException("byteOrder");, +        }, +, +        this.byteOrder = byteOrder;, +        long frameLength = getFrameLength(in, actualLengthFieldOffset);, +    private long getFrameLength(ByteBuf in, int actualLengthFieldOffset) {, +        in = in.order(byteOrder);, +        long frameLength;, +        switch (lengthFieldLength) {, +        case 1:, +            frameLength = in.getUnsignedByte(actualLengthFieldOffset);, +            break;, +        case 2:, +            frameLength = in.getUnsignedShort(actualLengthFieldOffset);, +            break;, +        case 3:, +            frameLength = in.getUnsignedMedium(actualLengthFieldOffset);, +            break;, +        case 4:, +            frameLength = in.getUnsignedInt(actualLengthFieldOffset);, +            break;, +        case 8:, +            frameLength = in.getLong(actualLengthFieldOffset);, +            break;, +        default:, +            throw new Error("should not reach here");, +        }, +        return frameLength;, +    }, +]