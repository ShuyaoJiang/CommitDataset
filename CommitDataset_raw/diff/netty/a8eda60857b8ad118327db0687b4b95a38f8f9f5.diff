[+++ b/src/main/java/org/jboss/netty/example/securechat/SecureChatServerPipelineFactory.java, +        //, +        // Read SecureChatSslContextFactory, +        // if you need client certificate authentication., +++ b/src/main/java/org/jboss/netty/example/securechat/SecureChatServerPipelineFactory.java, +        //, +        // Read SecureChatSslContextFactory, +        // if you need client certificate authentication., +++ b/src/main/java/org/jboss/netty/example/securechat/SecureChatSslContextFactory.java, +import javax.net.ssl.KeyManager;, +import javax.net.ssl.SSLEngine;, +import javax.net.ssl.TrustManager;, +, +import org.jboss.netty.handler.ssl.SslHandler;, + * <p>, + * <h3>Client Certificate Authentication</h3>, + *, + * To enable client certificate authentication:, + * <ul>, + * <li>Enable client authentication on the server side by calling, + *     {@link SSLEngine#setNeedClientAuth(boolean)} before creating, + *     {@link SslHandler}.</li>, + * <li>When initializing an {@link SSLContext} on the client side,, + *     specify the {@link KeyManager} that contains the client certificate as, + *     the first argument of {@link SSLContext#init(KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)}.</li>, + * <li>When initializing an {@link SSLContext} on the server side,, + *     specify the proper {@link TrustManager} as the second argument of, + *     {@link SSLContext#init(KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)}, + *     to validate the the client certificate.</li>, + * </ul>, + *]