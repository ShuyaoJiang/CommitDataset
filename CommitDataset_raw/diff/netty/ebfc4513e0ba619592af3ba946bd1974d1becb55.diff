[+++ b/.gitignore, +/target, +++ b/.gitignore, +/target, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return getByte(index) != 0;, +        return readByte() != 0;, +++ b/.gitignore, +/target, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return getByte(index) != 0;, +        return readByte() != 0;, +++ b/buffer/src/main/java/io/netty/buffer/BigEndianHeapChannelBuffer.java, +++ b/.gitignore, +/target, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return getByte(index) != 0;, +        return readByte() != 0;, +++ b/buffer/src/main/java/io/netty/buffer/BigEndianHeapChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufferBackedChannelBuffer.java, +++ b/.gitignore, +/target, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return getByte(index) != 0;, +        return readByte() != 0;, +++ b/buffer/src/main/java/io/netty/buffer/BigEndianHeapChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufferBackedChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuffer.java, + * for (int i = 0; i &lt; buffer.capacity(); i ++) {, +++ b/.gitignore, +/target, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return getByte(index) != 0;, +        return readByte() != 0;, +++ b/buffer/src/main/java/io/netty/buffer/BigEndianHeapChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufferBackedChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuffer.java, + * for (int i = 0; i &lt; buffer.capacity(); i ++) {, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuffers.java, +public final class ChannelBuffers {, +            return wrappedBuffer(, +                    buffer.order(),, +                    buffer.array(),, +                    buffer.arrayOffset() + buffer.position(),, +                    buffer.remaining());, +++ b/.gitignore, +/target, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return getByte(index) != 0;, +        return readByte() != 0;, +++ b/buffer/src/main/java/io/netty/buffer/BigEndianHeapChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufferBackedChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuffer.java, + * for (int i = 0; i &lt; buffer.capacity(); i ++) {, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuffers.java, +public final class ChannelBuffers {, +            return wrappedBuffer(, +                    buffer.order(),, +                    buffer.array(),, +                    buffer.arrayOffset() + buffer.position(),, +                    buffer.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/.gitignore, +/target, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return getByte(index) != 0;, +        return readByte() != 0;, +++ b/buffer/src/main/java/io/netty/buffer/BigEndianHeapChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufferBackedChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuffer.java, + * for (int i = 0; i &lt; buffer.capacity(); i ++) {, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuffers.java, +public final class ChannelBuffers {, +            return wrappedBuffer(, +                    buffer.order(),, +                    buffer.array(),, +                    buffer.arrayOffset() + buffer.position(),, +                    buffer.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DirectChannelBufferFactory.java, +    private ChannelBuffer preallocatedBigEndianBuffer;, +    private ChannelBuffer preallocatedLittleEndianBuffer;, +++ b/.gitignore, +/target, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return getByte(index) != 0;, +        return readByte() != 0;, +++ b/buffer/src/main/java/io/netty/buffer/BigEndianHeapChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufferBackedChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuffer.java, + * for (int i = 0; i &lt; buffer.capacity(); i ++) {, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuffers.java, +public final class ChannelBuffers {, +            return wrappedBuffer(, +                    buffer.order(),, +                    buffer.array(),, +                    buffer.arrayOffset() + buffer.position(),, +                    buffer.remaining());, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DirectChannelBufferFactory.java]