[+++ b/src/main/java/org/jboss/netty/channel/DefaultChannelPipeline.java, +            // Unlike an upstream event, a downstream event usually has an, +            // incomplete future which is supposed to be updated by ChannelSink., +            // However, if an exception is raised before the event reaches at, +            // ChannelSink, the future is not going to be updated, so we update, +            // here., +            e.getFuture().setFailure(t);, +++ b/src/main/java/org/jboss/netty/channel/DefaultChannelPipeline.java, +            // Unlike an upstream event, a downstream event usually has an, +            // incomplete future which is supposed to be updated by ChannelSink., +            // However, if an exception is raised before the event reaches at, +            // ChannelSink, the future is not going to be updated, so we update, +            // here., +            e.getFuture().setFailure(t);, +++ b/src/main/java/org/jboss/netty/channel/StaticChannelPipeline.java, +            // Unlike an upstream event, a downstream event usually has an, +            // incomplete future which is supposed to be updated by ChannelSink., +            // However, if an exception is raised before the event reaches at, +            // ChannelSink, the future is not going to be updated, so we update, +            // here., +            e.getFuture().setFailure(t);, +++ b/src/main/java/org/jboss/netty/channel/DefaultChannelPipeline.java, +            // Unlike an upstream event, a downstream event usually has an, +            // incomplete future which is supposed to be updated by ChannelSink., +            // However, if an exception is raised before the event reaches at, +            // ChannelSink, the future is not going to be updated, so we update, +            // here., +            e.getFuture().setFailure(t);, +++ b/src/main/java/org/jboss/netty/channel/StaticChannelPipeline.java, +            // Unlike an upstream event, a downstream event usually has an, +            // incomplete future which is supposed to be updated by ChannelSink., +            // However, if an exception is raised before the event reaches at, +            // ChannelSink, the future is not going to be updated, so we update, +            // here., +            e.getFuture().setFailure(t);, +++ /dev/null, +++ b/src/main/java/org/jboss/netty/channel/DefaultChannelPipeline.java, +            // Unlike an upstream event, a downstream event usually has an, +            // incomplete future which is supposed to be updated by ChannelSink., +            // However, if an exception is raised before the event reaches at, +            // ChannelSink, the future is not going to be updated, so we update, +            // here., +            e.getFuture().setFailure(t);, +++ b/src/main/java/org/jboss/netty/channel/StaticChannelPipeline.java, +            // Unlike an upstream event, a downstream event usually has an, +            // incomplete future which is supposed to be updated by ChannelSink., +            // However, if an exception is raised before the event reaches at, +            // ChannelSink, the future is not going to be updated, so we update, +            // here., +            e.getFuture().setFailure(t);, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jboss/netty/channel/DefaultChannelPipeline.java, +            // Unlike an upstream event, a downstream event usually has an, +            // incomplete future which is supposed to be updated by ChannelSink., +            // However, if an exception is raised before the event reaches at, +            // ChannelSink, the future is not going to be updated, so we update, +            // here., +            e.getFuture().setFailure(t);, +++ b/src/main/java/org/jboss/netty/channel/StaticChannelPipeline.java, +            // Unlike an upstream event, a downstream event usually has an, +            // incomplete future which is supposed to be updated by ChannelSink., +            // However, if an exception is raised before the event reaches at, +            // ChannelSink, the future is not going to be updated, so we update, +            // here., +            e.getFuture().setFailure(t);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jboss/netty/channel/DefaultChannelPipeline.java, +            // Unlike an upstream event, a downstream event usually has an, +            // incomplete future which is supposed to be updated by ChannelSink., +            // However, if an exception is raised before the event reaches at, +            // ChannelSink, the future is not going to be updated, so we update, +            // here., +            e.getFuture().setFailure(t);, +++ b/src/main/java/org/jboss/netty/channel/StaticChannelPipeline.java, +            // Unlike an upstream event, a downstream event usually has an, +            // incomplete future which is supposed to be updated by ChannelSink., +            // However, if an exception is raised before the event reaches at, +            // ChannelSink, the future is not going to be updated, so we update, +            // here., +            e.getFuture().setFailure(t);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/jboss/netty/channel/DefaultChannelPipeline.java, +            // Unlike an upstream event, a downstream event usually has an, +            // incomplete future which is supposed to be updated by ChannelSink., +            // However, if an exception is raised before the event reaches at, +            // ChannelSink, the future is not going to be updated, so we update, +            // here., +            e.getFuture().setFailure(t);, +++ b/src/main/java/org/jboss/netty/channel/StaticChannelPipeline.java, +            // Unlike an upstream event, a downstream event usually has an, +            // incomplete future which is supposed to be updated by ChannelSink., +            // However, if an exception is raised before the event reaches at, +            // ChannelSink, the future is not going to be updated, so we update, +            // here.]