[+++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +        private static final boolean USE_UNSAFE_DIRECTBUF = PlatformDependent.unsafeHasCopyMethods();, +            if (USE_UNSAFE_DIRECTBUF) {, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +        private static final boolean USE_UNSAFE_DIRECTBUF = PlatformDependent.unsafeHasCopyMethods();, +            if (USE_UNSAFE_DIRECTBUF) {, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +        private static final boolean USE_UNSAFE_DIRECTBUF = PlatformDependent.unsafeHasCopyMethods();, +            if (USE_UNSAFE_DIRECTBUF) {, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent0.java, +    /**, +     * {@code true} if and only if the platform supports unaligned access., +     *, +     * @see <a href="http://en.wikipedia.org/wiki/Segmentation_fault#Bus_error">Wikipedia on segfault</a>, +     */, +        if (UNALIGNED) {, +        } else {, +            return (short)(getByte(address) << 8 | getByte(address + 1) & 0xff);, +        }, +        if (UNALIGNED) {, +        } else {, +            return getByte(address) << 24 |, +                  (getByte(address + 1) & 0xff) << 16 |, +                  (getByte(address + 2) & 0xff) <<  8 |, +                   getByte(address + 3) & 0xff;, +        }, +        if (UNALIGNED) {, +        } else {, +            return (long) getByte(address) << 56 |, +                  ((long) getByte(address + 1) & 0xff) << 48 |, +                  ((long) getByte(address + 2) & 0xff) << 40 |, +                  ((long) getByte(address + 3) & 0xff) << 32 |, +                  ((long) getByte(address + 4) & 0xff) << 24 |, +                  ((long) getByte(address + 5) & 0xff) << 16 |, +                  ((long) getByte(address + 6) & 0xff) <<  8 |, +                   (long) getByte(address + 7) & 0xff;, +        }, +        if (UNALIGNED) {, +        } else {, +            putByte(address, (byte) (value >>> 8));, +            putByte(address + 1, (byte) value);, +        }, +        if (UNALIGNED) {, +        } else {, +            putByte(address, (byte) (value >>> 24));, +            putByte(address + 1, (byte) (value >>> 16));, +            putByte(address + 2, (byte) (value >>> 8));, +            putByte(address + 3, (byte) value);, +        }, +        if (UNALIGNED) {, +        } else {, +            putByte(address, (byte) (value >>> 56));, +            putByte(address + 1, (byte) (value >>> 48));, +            putByte(address + 2, (byte) (value >>> 40));, +            putByte(address + 3, (byte) (value >>> 32));, +            putByte(address + 4, (byte) (value >>> 24));, +            putByte(address + 5, (byte) (value >>> 16));, +            putByte(address + 6, (byte) (value >>> 8));, +            putByte(address + 7, (byte) value);, +        }]