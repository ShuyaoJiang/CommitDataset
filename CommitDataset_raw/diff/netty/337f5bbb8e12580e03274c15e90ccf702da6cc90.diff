[+++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.ResourceLeakDetector;, +, +    static final ResourceLeakDetector<ByteBuf> leakDetector = new ResourceLeakDetector<ByteBuf>(ByteBuf.class);, +, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.ResourceLeakDetector;, +, +    static final ResourceLeakDetector<ByteBuf> leakDetector = new ResourceLeakDetector<ByteBuf>(ByteBuf.class);, +, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +import io.netty.util.ResourceLeak;, +    private final ResourceLeak leak = leakDetector.open(this);, +, +        leak.close();, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.ResourceLeakDetector;, +, +    static final ResourceLeakDetector<ByteBuf> leakDetector = new ResourceLeakDetector<ByteBuf>(ByteBuf.class);, +, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +import io.netty.util.ResourceLeak;, +    private final ResourceLeak leak = leakDetector.open(this);, +, +        leak.close();, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +import io.netty.util.ResourceLeak;, +, +    private final ResourceLeak leak = leakDetector.open(this);, +, +            leak.close();, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.ResourceLeakDetector;, +, +    static final ResourceLeakDetector<ByteBuf> leakDetector = new ResourceLeakDetector<ByteBuf>(ByteBuf.class);, +, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +import io.netty.util.ResourceLeak;, +    private final ResourceLeak leak = leakDetector.open(this);, +, +        leak.close();, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +import io.netty.util.ResourceLeak;, +, +    private final ResourceLeak leak = leakDetector.open(this);, +, +            leak.close();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +import io.netty.util.ResourceLeak;, +    private final ResourceLeak leak = leakDetector.open(this);, +, +        if (!doNotFree) {, +        leak.close();, +    }, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.ResourceLeakDetector;, +, +    static final ResourceLeakDetector<ByteBuf> leakDetector = new ResourceLeakDetector<ByteBuf>(ByteBuf.class);, +, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +import io.netty.util.ResourceLeak;, +    private final ResourceLeak leak = leakDetector.open(this);, +, +        leak.close();, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +import io.netty.util.ResourceLeak;, +, +    private final ResourceLeak leak = leakDetector.open(this);, +, +            leak.close();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +import io.netty.util.ResourceLeak;, +    private final ResourceLeak leak = leakDetector.open(this);, +, +        if (!doNotFree) {, +        leak.close();, +    }, +++ b/common/src/main/java/io/netty/util/HashedWheelTimer.java, +    private static final ResourceLeakDetector<HashedWheelTimer> leakDetector =, +            new ResourceLeakDetector<HashedWheelTimer>(, +                    HashedWheelTimer.class, 1, Runtime.getRuntime().availableProcessors() * 4);, +    private final ResourceLeak leak = leakDetector.open(this);, +        leak.close();, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.ResourceLeakDetector;, +, +    static final ResourceLeakDetector<ByteBuf> leakDetector = new ResourceLeakDetector<ByteBuf>(ByteBuf.class);, +, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +import io.netty.util.ResourceLeak;, +    private final ResourceLeak leak = leakDetector.open(this);, +, +        leak.close();, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +import io.netty.util.ResourceLeak;, +, +    private final ResourceLeak leak = leakDetector.open(this);, +, +            leak.close();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java]