[+++ b/common/src/main/java/io/netty/util/AttributeKey.java, +@SuppressWarnings({"UnusedDeclaration", "deprecation"}) // 'T' is used only at compile time, +     * Creates a new {@link AttributeKey} with the specified {@code name}., +    @SuppressWarnings("deprecation"), +    public static <T> AttributeKey<T> valueOf(String name) {, +        return new AttributeKey<T>(name);, +    }, +, +    /**, +     * @deprecated Use {@link #valueOf(String)} instead., +     */, +    @Deprecated, +++ b/common/src/main/java/io/netty/util/AttributeKey.java, +@SuppressWarnings({"UnusedDeclaration", "deprecation"}) // 'T' is used only at compile time, +     * Creates a new {@link AttributeKey} with the specified {@code name}., +    @SuppressWarnings("deprecation"), +    public static <T> AttributeKey<T> valueOf(String name) {, +        return new AttributeKey<T>(name);, +    }, +, +    /**, +     * @deprecated Use {@link #valueOf(String)} instead., +     */, +    @Deprecated, +++ b/common/src/main/java/io/netty/util/Signal.java, +    @SuppressWarnings("deprecation"), +     * Creates a new {@link Signal} with the specified {@code name}., +    @SuppressWarnings("deprecation"), +    public static Signal valueOf(String name) {, +        return new Signal(name);, +    }, +, +    /**, +     * @deprecated Use {@link #valueOf(String)} instead., +     */, +    @Deprecated, +++ b/common/src/main/java/io/netty/util/AttributeKey.java, +@SuppressWarnings({"UnusedDeclaration", "deprecation"}) // 'T' is used only at compile time, +     * Creates a new {@link AttributeKey} with the specified {@code name}., +    @SuppressWarnings("deprecation"), +    public static <T> AttributeKey<T> valueOf(String name) {, +        return new AttributeKey<T>(name);, +    }, +, +    /**, +     * @deprecated Use {@link #valueOf(String)} instead., +     */, +    @Deprecated, +++ b/common/src/main/java/io/netty/util/Signal.java, +    @SuppressWarnings("deprecation"), +     * Creates a new {@link Signal} with the specified {@code name}., +    @SuppressWarnings("deprecation"), +    public static Signal valueOf(String name) {, +        return new Signal(name);, +    }, +, +    /**, +     * @deprecated Use {@link #valueOf(String)} instead., +     */, +    @Deprecated, +++ b/common/src/main/java/io/netty/util/UniqueName.java, + * @deprecated Known to have problems with class loaders., + *, +@Deprecated, +++ b/common/src/main/java/io/netty/util/AttributeKey.java, +@SuppressWarnings({"UnusedDeclaration", "deprecation"}) // 'T' is used only at compile time, +     * Creates a new {@link AttributeKey} with the specified {@code name}., +    @SuppressWarnings("deprecation"), +    public static <T> AttributeKey<T> valueOf(String name) {, +        return new AttributeKey<T>(name);, +    }, +, +    /**, +     * @deprecated Use {@link #valueOf(String)} instead., +     */, +    @Deprecated, +++ b/common/src/main/java/io/netty/util/Signal.java, +    @SuppressWarnings("deprecation"), +     * Creates a new {@link Signal} with the specified {@code name}., +    @SuppressWarnings("deprecation"), +    public static Signal valueOf(String name) {, +        return new Signal(name);, +    }, +, +    /**, +     * @deprecated Use {@link #valueOf(String)} instead., +     */, +    @Deprecated, +++ b/common/src/main/java/io/netty/util/UniqueName.java, + * @deprecated Known to have problems with class loaders., + *, +@Deprecated, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelOption.java, +    @SuppressWarnings("deprecation"), +++ b/common/src/main/java/io/netty/util/AttributeKey.java, +@SuppressWarnings({"UnusedDeclaration", "deprecation"}) // 'T' is used only at compile time, +     * Creates a new {@link AttributeKey} with the specified {@code name}., +    @SuppressWarnings("deprecation"), +    public static <T> AttributeKey<T> valueOf(String name) {, +        return new AttributeKey<T>(name);]