[+++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +    public String toString(int index, int length, Charset charset) {, +        if (length == 0) {, +            return "";, +        }, +, +        return ChannelBuffers.decodeString(, +                toByteBuffer(index, length), charset);, +    }, +, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +    public String toString(int index, int length, Charset charset) {, +        if (length == 0) {, +            return "";, +        }, +, +        return ChannelBuffers.decodeString(, +                toByteBuffer(index, length), charset);, +    }, +, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +    public String toString(int index, int length, Charset charset) {, +        if (length == 0) {, +            return "";, +        }, +, +        return ChannelBuffers.decodeString(, +                toByteBuffer(index, length), charset);, +    }, +, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/CompositeChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +    public String toString(int index, int length, Charset charset) {, +        if (length == 0) {, +            return "";, +        }, +, +        return ChannelBuffers.decodeString(, +                toByteBuffer(index, length), charset);, +    }, +, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/CompositeChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/DuplicatedChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +    public String toString(int index, int length, Charset charset) {, +        if (length == 0) {, +            return "";, +        }, +, +        return ChannelBuffers.decodeString(, +                toByteBuffer(index, length), charset);, +    }, +, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/CompositeChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/DuplicatedChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/DynamicChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +    public String toString(int index, int length, Charset charset) {, +        if (length == 0) {, +            return "";, +        }, +, +        return ChannelBuffers.decodeString(, +                toByteBuffer(index, length), charset);, +    }, +, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/CompositeChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/DuplicatedChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/DynamicChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/HeapChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +    public String toString(int index, int length, Charset charset) {, +        if (length == 0) {, +            return "";, +        }, +, +        return ChannelBuffers.decodeString(, +                toByteBuffer(index, length), charset);, +    }, +, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/CompositeChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/DuplicatedChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/DynamicChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/HeapChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/ReadOnlyChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +    public String toString(int index, int length, Charset charset) {, +        if (length == 0) {, +            return "";, +        }, +, +        return ChannelBuffers.decodeString(, +                toByteBuffer(index, length), charset);, +    }]