[+++ b/buffer/src/test/java/io/netty/buffer/AdvancedLeakAwareByteBufTest.java, +import io.netty.util.ResourceLeakTracker;, +, +    protected SimpleLeakAwareByteBuf wrap(ByteBuf buffer, ResourceLeakTracker<ByteBuf> tracker) {, +        return new AdvancedLeakAwareByteBuf(buffer, tracker);, +++ b/buffer/src/test/java/io/netty/buffer/AdvancedLeakAwareByteBufTest.java, +import io.netty.util.ResourceLeakTracker;, +, +    protected SimpleLeakAwareByteBuf wrap(ByteBuf buffer, ResourceLeakTracker<ByteBuf> tracker) {, +        return new AdvancedLeakAwareByteBuf(buffer, tracker);, +++ b/buffer/src/test/java/io/netty/buffer/AdvancedLeakAwareCompositeByteBufTest.java, +import io.netty.util.ResourceLeakTracker;, +, +    protected SimpleLeakAwareCompositeByteBuf wrap(CompositeByteBuf buffer, ResourceLeakTracker<ByteBuf> tracker) {, +        return new AdvancedLeakAwareCompositeByteBuf(buffer, tracker);, +++ b/buffer/src/test/java/io/netty/buffer/AdvancedLeakAwareByteBufTest.java, +import io.netty.util.ResourceLeakTracker;, +, +    protected SimpleLeakAwareByteBuf wrap(ByteBuf buffer, ResourceLeakTracker<ByteBuf> tracker) {, +        return new AdvancedLeakAwareByteBuf(buffer, tracker);, +++ b/buffer/src/test/java/io/netty/buffer/AdvancedLeakAwareCompositeByteBufTest.java, +import io.netty.util.ResourceLeakTracker;, +, +    protected SimpleLeakAwareCompositeByteBuf wrap(CompositeByteBuf buffer, ResourceLeakTracker<ByteBuf> tracker) {, +        return new AdvancedLeakAwareCompositeByteBuf(buffer, tracker);, +++ b/buffer/src/test/java/io/netty/buffer/SimpleLeakAwareByteBufTest.java, +import io.netty.util.ResourceLeakTracker;, +import org.junit.After;, +import org.junit.Before;, +import java.util.ArrayDeque;, +import java.util.Queue;, +, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertTrue;, +, +    private final Queue<NoopResourceLeakTracker<ByteBuf>> trackers = new ArrayDeque<NoopResourceLeakTracker<ByteBuf>>();, +    private ByteBuf wrap(ByteBuf buffer) {, +        NoopResourceLeakTracker<ByteBuf> tracker = new NoopResourceLeakTracker<ByteBuf>();, +        ByteBuf leakAwareBuf = wrap(buffer, tracker);, +        trackers.add(tracker);, +        return leakAwareBuf;, +    }, +, +    protected SimpleLeakAwareByteBuf wrap(ByteBuf buffer, ResourceLeakTracker<ByteBuf> tracker) {, +        return new SimpleLeakAwareByteBuf(buffer, tracker);, +    }, +, +    @Before, +    @Override, +    public void init() {, +        super.init();, +        trackers.clear();, +    }, +, +    @After, +    @Override, +    public void dispose() {, +        super.dispose();, +, +        for (;;) {, +            NoopResourceLeakTracker<ByteBuf> tracker = trackers.poll();, +, +            if (tracker == null) {, +                break;, +            }, +            assertTrue(tracker.get());, +        }, +        ByteBuf buffer = newBuffer(8);, +        assertWrapped(buffer.retainedSlice());, +        assertTrue(buffer.release());, +        ByteBuf buffer = newBuffer(8);, +        assertWrapped(buffer.retainedSlice(0, 1));, +        assertTrue(buffer.release());, +        ByteBuf buffer = newBuffer(8);, +        assertWrapped(buffer.readRetainedSlice(1));, +        assertTrue(buffer.release());, +        ByteBuf buffer = newBuffer(8);, +        assertWrapped(buffer.retainedDuplicate());, +        assertTrue(buffer.release());, +            assertSame(clazz, buf.getClass());, +++ b/buffer/src/test/java/io/netty/buffer/AdvancedLeakAwareByteBufTest.java, +import io.netty.util.ResourceLeakTracker;, +, +    protected SimpleLeakAwareByteBuf wrap(ByteBuf buffer, ResourceLeakTracker<ByteBuf> tracker) {, +        return new AdvancedLeakAwareByteBuf(buffer, tracker);, +++ b/buffer/src/test/java/io/netty/buffer/AdvancedLeakAwareCompositeByteBufTest.java, +import io.netty.util.ResourceLeakTracker;, +, +    protected SimpleLeakAwareCompositeByteBuf wrap(CompositeByteBuf buffer, ResourceLeakTracker<ByteBuf> tracker) {, +        return new AdvancedLeakAwareCompositeByteBuf(buffer, tracker);, +++ b/buffer/src/test/java/io/netty/buffer/SimpleLeakAwareByteBufTest.java, +import io.netty.util.ResourceLeakTracker;, +import org.junit.After;, +import org.junit.Before;, +import java.util.ArrayDeque;, +import java.util.Queue;, +, +import static org.junit.Assert.assertSame;, +import static org.junit.Assert.assertTrue;, +]