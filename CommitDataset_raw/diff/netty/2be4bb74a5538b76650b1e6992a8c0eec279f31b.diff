[+++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +    static boolean isInvalid(int index, int length, int capacity) {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +    static boolean isInvalid(int index, int length, int capacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst, dstIndex, length);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst, dstIndex, length);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, out, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src, srcIndex, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src, srcIndex, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src);, +        return UnsafeByteBufUtil.setBytes(this, addr(index), index, in, length);, +        return UnsafeByteBufUtil.copy(this, addr(index), index, length);, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +    static boolean isInvalid(int index, int length, int capacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst, dstIndex, length);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst, dstIndex, length);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, out, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src, srcIndex, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src, srcIndex, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src);, +        return UnsafeByteBufUtil.setBytes(this, addr(index), index, in, length);, +        return UnsafeByteBufUtil.copy(this, addr(index), index, length);, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +    static boolean isInvalid(int index, int length, int capacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst, dstIndex, length);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst, dstIndex, length);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, out, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src, srcIndex, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src, srcIndex, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src);, +        return UnsafeByteBufUtil.setBytes(this, addr(index), index, in, length);, +        return UnsafeByteBufUtil.copy(this, addr(index), index, length);, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledUnsafeDirectByteBuf.java, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst, dstIndex, length);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst, dstIndex, length);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src, srcIndex, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src, srcIndex, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, out, length);, +        return UnsafeByteBufUtil.setBytes(this, addr(index), index, in, length);, +        return UnsafeByteBufUtil.copy(this, addr(index), index, length);, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +    static boolean isInvalid(int index, int length, int capacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst, dstIndex, length);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst, dstIndex, length);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, out, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src, srcIndex, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src, srcIndex, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src);, +        return UnsafeByteBufUtil.setBytes(this, addr(index), index, in, length);, +        return UnsafeByteBufUtil.copy(this, addr(index), index, length);, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledUnsafeDirectByteBuf.java, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst, dstIndex, length);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst, dstIndex, length);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, dst);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src, srcIndex, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src, srcIndex, length);, +        UnsafeByteBufUtil.setBytes(this, addr(index), index, src);, +        UnsafeByteBufUtil.getBytes(this, addr(index), index, out, length);, +        return UnsafeByteBufUtil.setBytes(this, addr(index), index, in, length);, +        return UnsafeByteBufUtil.copy(this, addr(index), index, length);, +++ b/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.OutputStream;, +import java.nio.ByteBuffer;, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +, +    static ByteBuf copy(AbstractByteBuf buf, long addr, int index, int length) {, +        buf.checkIndex(index, length);, +        ByteBuf copy = buf.alloc().directBuffer(length, buf.maxCapacity());, +        if (length != 0) {, +            if (copy.hasMemoryAddress()) {, +                PlatformDependent.copyMemory(addr, copy.memoryAddress(), length);, +                copy.setIndex(0, length);, +            } else {, +                copy.writeBytes(buf, index, length);, +            }, +        }, +        return copy;, +    }, +, +    static int setBytes(AbstractByteBuf buf, long addr, int index, InputStream in, int length) throws IOException {, +        buf.checkIndex(index, length);, +        ByteBuf tmpBuf = buf.alloc().heapBuffer(length);, +        try {, +            byte[] tmp = tmpBuf.array();, +            int offset = tmpBuf.arrayOffset();]