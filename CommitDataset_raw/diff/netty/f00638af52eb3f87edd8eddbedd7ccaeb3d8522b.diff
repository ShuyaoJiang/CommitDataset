[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2ConnectionHandlerBuilder.java, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_HEADER_LIST_SIZE;, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY;, +import static io.netty.util.internal.ObjectUtil.checkPositive;, + *   <li>{@link #initialHuffmanDecodeCapacity(int)}</li>, +    private int initialHuffmanDecodeCapacity = DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY;, +     * Sets the initial size of an intermediate buffer used during HPACK huffman decoding., +     * @param initialHuffmanDecodeCapacity initial size of an intermediate buffer used during HPACK huffman decoding., +     * @return this., +     */, +    protected B initialHuffmanDecodeCapacity(int initialHuffmanDecodeCapacity) {, +        enforceNonCodecConstraints("initialHuffmanDecodeCapacity");, +        this.initialHuffmanDecodeCapacity = checkPositive(initialHuffmanDecodeCapacity, "initialHuffmanDecodeCapacity");, +        return self();, +    }, +, +    /**, +        Http2FrameReader reader = new DefaultHttp2FrameReader(new DefaultHttp2HeadersDecoder(isValidateHeaders(),, +                maxHeaderListSize == null ? DEFAULT_HEADER_LIST_SIZE : maxHeaderListSize,, +                initialHuffmanDecodeCapacity));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2ConnectionHandlerBuilder.java, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_HEADER_LIST_SIZE;, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY;, +import static io.netty.util.internal.ObjectUtil.checkPositive;, + *   <li>{@link #initialHuffmanDecodeCapacity(int)}</li>, +    private int initialHuffmanDecodeCapacity = DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY;, +     * Sets the initial size of an intermediate buffer used during HPACK huffman decoding., +     * @param initialHuffmanDecodeCapacity initial size of an intermediate buffer used during HPACK huffman decoding., +     * @return this., +     */, +    protected B initialHuffmanDecodeCapacity(int initialHuffmanDecodeCapacity) {, +        enforceNonCodecConstraints("initialHuffmanDecodeCapacity");, +        this.initialHuffmanDecodeCapacity = checkPositive(initialHuffmanDecodeCapacity, "initialHuffmanDecodeCapacity");, +        return self();, +    }, +, +    /**, +        Http2FrameReader reader = new DefaultHttp2FrameReader(new DefaultHttp2HeadersDecoder(isValidateHeaders(),, +                maxHeaderListSize == null ? DEFAULT_HEADER_LIST_SIZE : maxHeaderListSize,, +                initialHuffmanDecodeCapacity));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2HeadersDecoder.java, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY;, +, +        this(validateHeaders, maxHeaderListSize, DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY);, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2ConnectionHandlerBuilder.java, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_HEADER_LIST_SIZE;, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY;, +import static io.netty.util.internal.ObjectUtil.checkPositive;, + *   <li>{@link #initialHuffmanDecodeCapacity(int)}</li>, +    private int initialHuffmanDecodeCapacity = DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY;, +     * Sets the initial size of an intermediate buffer used during HPACK huffman decoding., +     * @param initialHuffmanDecodeCapacity initial size of an intermediate buffer used during HPACK huffman decoding., +     * @return this., +     */, +    protected B initialHuffmanDecodeCapacity(int initialHuffmanDecodeCapacity) {, +        enforceNonCodecConstraints("initialHuffmanDecodeCapacity");, +        this.initialHuffmanDecodeCapacity = checkPositive(initialHuffmanDecodeCapacity, "initialHuffmanDecodeCapacity");, +        return self();, +    }, +, +    /**, +        Http2FrameReader reader = new DefaultHttp2FrameReader(new DefaultHttp2HeadersDecoder(isValidateHeaders(),, +                maxHeaderListSize == null ? DEFAULT_HEADER_LIST_SIZE : maxHeaderListSize,, +                initialHuffmanDecodeCapacity));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2HeadersDecoder.java, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY;, +, +        this(validateHeaders, maxHeaderListSize, DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY);, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2CodecUtil.java, +    static final int DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY = 32;, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2ConnectionHandlerBuilder.java, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_HEADER_LIST_SIZE;, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY;, +import static io.netty.util.internal.ObjectUtil.checkPositive;, + *   <li>{@link #initialHuffmanDecodeCapacity(int)}</li>, +    private int initialHuffmanDecodeCapacity = DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY;, +     * Sets the initial size of an intermediate buffer used during HPACK huffman decoding., +     * @param initialHuffmanDecodeCapacity initial size of an intermediate buffer used during HPACK huffman decoding., +     * @return this., +     */, +    protected B initialHuffmanDecodeCapacity(int initialHuffmanDecodeCapacity) {, +        enforceNonCodecConstraints("initialHuffmanDecodeCapacity");, +        this.initialHuffmanDecodeCapacity = checkPositive(initialHuffmanDecodeCapacity, "initialHuffmanDecodeCapacity");, +        return self();, +    }, +, +    /**, +        Http2FrameReader reader = new DefaultHttp2FrameReader(new DefaultHttp2HeadersDecoder(isValidateHeaders(),, +                maxHeaderListSize == null ? DEFAULT_HEADER_LIST_SIZE : maxHeaderListSize,, +                initialHuffmanDecodeCapacity));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2HeadersDecoder.java, +import static io.netty.handler.codec.http2.Http2CodecUtil.DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY;, +, +        this(validateHeaders, maxHeaderListSize, DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY);, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2CodecUtil.java, +    static final int DEFAULT_INITIAL_HUFFMAN_DECODE_CAPACITY = 32;, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandlerBuilder.java, +    public Http2ConnectionHandlerBuilder initialHuffmanDecodeCapacity(int initialHuffmanDecodeCapacity) {, +        return super.initialHuffmanDecodeCapacity(initialHuffmanDecodeCapacity);, +    }]