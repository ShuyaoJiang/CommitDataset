[+++ b/handler/src/main/java/io/netty/handler/ssl/JdkSslClientContext.java, +                ByteBuf[] certs = PemReader.readCertificates(certChainFile);, +                try {, +                    for (ByteBuf buf: certs) {, +                } finally {, +                    for (ByteBuf buf: certs) {, +                        buf.release();, +                    }, +                }, +++ b/handler/src/main/java/io/netty/handler/ssl/JdkSslClientContext.java, +                ByteBuf[] certs = PemReader.readCertificates(certChainFile);, +                try {, +                    for (ByteBuf buf: certs) {, +                } finally {, +                    for (ByteBuf buf: certs) {, +                        buf.release();, +                    }, +                }, +++ b/handler/src/main/java/io/netty/handler/ssl/JdkSslServerContext.java, +            encodedKeyBuf.readBytes(encodedKey).release();, +            ByteBuf[] certs = PemReader.readCertificates(certChainFile);, +            try {, +                for (ByteBuf buf: certs) {, +            } finally {, +                for (ByteBuf buf: certs) {, +                    buf.release();, +                }, +            }, +++ b/handler/src/main/java/io/netty/handler/ssl/JdkSslClientContext.java, +                ByteBuf[] certs = PemReader.readCertificates(certChainFile);, +                try {, +                    for (ByteBuf buf: certs) {, +                } finally {, +                    for (ByteBuf buf: certs) {, +                        buf.release();, +                    }, +                }, +++ b/handler/src/main/java/io/netty/handler/ssl/JdkSslServerContext.java, +            encodedKeyBuf.readBytes(encodedKey).release();, +            ByteBuf[] certs = PemReader.readCertificates(certChainFile);, +            try {, +                for (ByteBuf buf: certs) {, +            } finally {, +                for (ByteBuf buf: certs) {, +                    buf.release();, +                }, +            }, +++ b/handler/src/main/java/io/netty/handler/ssl/PemReader.java, +            ByteBuf base64 = Unpooled.copiedBuffer(m.group(1), CharsetUtil.US_ASCII);, +            ByteBuf der = Base64.decode(base64);, +            base64.release();, +            certs.add(der);, +, +        ByteBuf base64 = Unpooled.copiedBuffer(m.group(1), CharsetUtil.US_ASCII);, +        ByteBuf der = Base64.decode(base64);, +        base64.release();, +        return der;]