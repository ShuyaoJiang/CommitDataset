[+++ b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java, +    public static void load(String originalName, ClassLoader loader) {, +        // Adjust expected name to support shading of native libraries., +        String name = SystemPropertyUtil.get("io.netty.packagePrefix", "").replace('.', '-') + originalName;, +, +++ b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java, +    public static void load(String originalName, ClassLoader loader) {, +        // Adjust expected name to support shading of native libraries., +        String name = SystemPropertyUtil.get("io.netty.packagePrefix", "").replace('.', '-') + originalName;, +, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/Native.java, +        NativeLibraryLoader.load("netty-transport-native-epoll", PlatformDependent.getClassLoader(Native.class));, +++ b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java, +    public static void load(String originalName, ClassLoader loader) {, +        // Adjust expected name to support shading of native libraries., +        String name = SystemPropertyUtil.get("io.netty.packagePrefix", "").replace('.', '-') + originalName;, +, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/Native.java, +        NativeLibraryLoader.load("netty-transport-native-epoll", PlatformDependent.getClassLoader(Native.class));, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/Native.java, +        NativeLibraryLoader.load("netty-transport-native-kqueue", PlatformDependent.getClassLoader(Native.class));]