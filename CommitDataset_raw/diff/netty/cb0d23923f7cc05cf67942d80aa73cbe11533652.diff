[+++ b/resolver-dns/src/main/java/io/netty/resolver/dns/DnsServerAddressStreamProviders.java, +import java.util.concurrent.TimeUnit;, +import java.util.concurrent.atomic.AtomicLong;, +, +    // We use 5 minutes which is the same as what OpenJDK is using in sun.net.dns.ResolverConfigurationImpl., +    private static final long REFRESH_INTERVAL = TimeUnit.MINUTES.toNanos(5);, +, +            new DnsServerAddressStreamProvider() {, +        private volatile DnsServerAddressStreamProvider currentProvider = provider();, +        private final AtomicLong lastRefresh = new AtomicLong(System.nanoTime());, +, +        @Override, +        public DnsServerAddressStream nameServerAddressStream(String hostname) {, +            long last = lastRefresh.get();, +            DnsServerAddressStreamProvider current = currentProvider;, +            if (System.nanoTime() - last > REFRESH_INTERVAL) {, +                // This is slightly racy which means it will be possible still use the old configuration for a small, +                // amount of time, but that's ok., +                if (lastRefresh.compareAndSet(last, System.nanoTime())) {, +                    current = currentProvider = provider();, +                }, +            }, +            return current.nameServerAddressStream(hostname);, +        }, +, +        private DnsServerAddressStreamProvider provider() {, +            return PlatformDependent.isWindows() ? DefaultDnsServerAddressStreamProvider.INSTANCE :, +        }, +    };]