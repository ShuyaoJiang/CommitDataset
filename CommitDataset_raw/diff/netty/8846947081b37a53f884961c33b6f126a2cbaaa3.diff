[+++ b/handler/src/main/java/io/netty/handler/traffic/package-info.java, + *, + *, + * <li> <tt>{@link TrafficCounter}</tt>: this class implements the counters needed by the handlers., + * <li> <tt>{@link AbstractTrafficShapingHandler}</tt>: this abstract class implements the kernel, + * implementations: see {@link ChannelTrafficShapingHandler} and see {@link GlobalTrafficShapingHandler}, + * <b>it must be placed before any <tt>{@link MemoryAwareThreadPoolExecutor}</tt>, + * in your pipeline</b>.</li><br>, + * <b><i>It is really recommended to have such a</i> <tt>{@link MemoryAwareThreadPoolExecutor}</tt>, + * <i>(either non ordered or </i> <tt>{@link OrderedMemoryAwareThreadPoolExecutor}</tt>, + * An {@link ObjectSizeEstimator} can be passed at construction to specify what, + * object. If not specified, it will used the {@link DefaultObjectSizeEstimator} implementation.<br><br>, + * You can either change those values with the method <tt>configure</tt> in {@link AbstractTrafficShapingHandler}.<br>, + * This interval can be changed either from the method <tt>configure</tt> in {@link AbstractTrafficShapingHandler}, + * or directly using the method <tt>configure</tt> of {@link TrafficCounter}.<br><br>, + * <tt>XXXXXTrafficShapingHandler myHandler = new XXXXXTrafficShapingHandler(timer);</tt><br><br>, + * timer could be created using <tt>HashedWheelTimer<tt> and XXXXX could be either, + * <P>Note that a new {@link ChannelTrafficShapingHandler} must be created for each new channel,, + * but only one {@link GlobalTrafficShapingHandler} must be created for all channels.</P>]