[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +            if (e.hash == h && equalsIgnoreCase(name, e.key)) {, +            if (next.hash == h && equalsIgnoreCase(name, next.key)) {, +            if (e.hash == h && equalsIgnoreCase(name, e.key)) {, +            if (e.hash == h && equalsIgnoreCase(name, e.key)) {, +            if (e.hash == h && equalsIgnoreCase(name, e.key)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +            if (e.hash == h && equalsIgnoreCase(name, e.key)) {, +            if (next.hash == h && equalsIgnoreCase(name, next.key)) {, +            if (e.hash == h && equalsIgnoreCase(name, e.key)) {, +            if (e.hash == h && equalsIgnoreCase(name, e.key)) {, +            if (e.hash == h && equalsIgnoreCase(name, e.key)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +        if (connection != null && equalsIgnoreCase(Values.CLOSE, connection)) {, +            return !equalsIgnoreCase(Values.CLOSE, connection);, +            return equalsIgnoreCase(Values.KEEP_ALIVE, connection);, +        if (equalsIgnoreCase(Values.CONTINUE, value)) {, +            if (equalsIgnoreCase(value, Values.CHUNKED)) {, +    /**, +     * Returns {@code true} if both {@link CharSequence}'s are equals when ignore the case., +     * This only supports US_ASCII., +     */, +    public static boolean equalsIgnoreCase(CharSequence name1, CharSequence name2) {, +        if (name1 == name2) {, +            return true;, +        }, +, +        int nameLen = name1.length();, +        if (nameLen != name2.length()) {, +            return false;, +        }, +, +        for (int i = nameLen - 1; i >= 0; i --) {, +            char c1 = name1.charAt(i);, +            char c2 = name2.charAt(i);, +            if (c1 != c2) {, +                if (c1 >= 'A' && c1 <= 'Z') {, +                    c1 += 32;, +                }, +                if (c2 >= 'A' && c2 <= 'Z') {, +                    c2 += 32;, +                }, +                if (c1 != c2) {, +                    return false;, +                }, +            }, +        }, +        return true;, +    }, +                if (equalsIgnoreCase(v, value)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +            if (e.hash == h && equalsIgnoreCase(name, e.key)) {, +            if (next.hash == h && equalsIgnoreCase(name, next.key)) {, +            if (e.hash == h && equalsIgnoreCase(name, e.key)) {, +            if (e.hash == h && equalsIgnoreCase(name, e.key)) {, +            if (e.hash == h && equalsIgnoreCase(name, e.key)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +        if (connection != null && equalsIgnoreCase(Values.CLOSE, connection)) {, +            return !equalsIgnoreCase(Values.CLOSE, connection);, +            return equalsIgnoreCase(Values.KEEP_ALIVE, connection);, +        if (equalsIgnoreCase(Values.CONTINUE, value)) {, +            if (equalsIgnoreCase(value, Values.CHUNKED)) {, +    /**, +     * Returns {@code true} if both {@link CharSequence}'s are equals when ignore the case., +     * This only supports US_ASCII., +     */, +    public static boolean equalsIgnoreCase(CharSequence name1, CharSequence name2) {, +        if (name1 == name2) {, +            return true;, +        }, +, +        int nameLen = name1.length();, +        if (nameLen != name2.length()) {, +            return false;, +        }, +, +        for (int i = nameLen - 1; i >= 0; i --) {, +            char c1 = name1.charAt(i);, +            char c2 = name2.charAt(i);, +            if (c1 != c2) {, +                if (c1 >= 'A' && c1 <= 'Z') {, +                    c1 += 32;, +                }, +                if (c2 >= 'A' && c2 <= 'Z') {, +                    c2 += 32;, +                }, +                if (c1 != c2) {, +                    return false;, +                }, +            }, +        }, +        return true;, +    }, +                if (equalsIgnoreCase(v, value)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java, +                    if (!HttpHeaders.equalsIgnoreCase(name, HttpHeaders.Names.CONTENT_LENGTH) &&, +                        !HttpHeaders.equalsIgnoreCase(name, HttpHeaders.Names.TRANSFER_ENCODING) &&, +                        !HttpHeaders.equalsIgnoreCase(name, HttpHeaders.Names.TRAILER)) {]