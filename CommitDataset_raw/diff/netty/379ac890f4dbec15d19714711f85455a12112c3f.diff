[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameCodec.java, +                        ctx, connection(), decoder().frameListener(), upgrade.upgradeRequest().retain());, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameCodec.java, +                        ctx, connection(), decoder().frameListener(), upgrade.upgradeRequest().retain());, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2FrameCodecTest.java, +import io.netty.handler.codec.http.DefaultFullHttpRequest;, +import io.netty.handler.codec.http.FullHttpRequest;, +import io.netty.handler.codec.http.HttpServerUpgradeHandler;, +import io.netty.handler.codec.http.HttpVersion;, +import org.mockito.invocation.InvocationOnMock;, +import org.mockito.stubbing.Answer;, +    @Test, +    public void upgradeEventNoRefCntError() throws Http2Exception {, +        frameListener.onHeadersRead(http2HandlerCtx, Http2CodecUtil.HTTP_UPGRADE_STREAM_ID, request, 31, false);, +, +        final FullHttpRequest request = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.GET, "/");, +        final HttpServerUpgradeHandler.UpgradeEvent upgradeEvent = mock(HttpServerUpgradeHandler.UpgradeEvent.class);, +        when(upgradeEvent.retain()).thenAnswer(new Answer<HttpServerUpgradeHandler.UpgradeEvent>() {, +            @Override, +            public HttpServerUpgradeHandler.UpgradeEvent answer(InvocationOnMock invocationOnMock) throws Throwable {, +                request.retain();, +                return upgradeEvent;, +            }, +        });, +        when(upgradeEvent.release()).thenAnswer(new Answer<Boolean>() {, +            @Override, +            public Boolean answer(InvocationOnMock invocationOnMock) throws Throwable {, +                return request.release();, +            }, +        });, +, +        when(upgradeEvent.upgradeRequest()).thenReturn(request);, +        channel.pipeline().fireUserEventTriggered(upgradeEvent);, +        assertEquals(1, request.refCnt());, +    }, +, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameCodec.java, +                        ctx, connection(), decoder().frameListener(), upgrade.upgradeRequest().retain());, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2FrameCodecTest.java, +import io.netty.handler.codec.http.DefaultFullHttpRequest;, +import io.netty.handler.codec.http.FullHttpRequest;, +import io.netty.handler.codec.http.HttpServerUpgradeHandler;, +import io.netty.handler.codec.http.HttpVersion;, +import org.mockito.invocation.InvocationOnMock;, +import org.mockito.stubbing.Answer;, +    @Test, +    public void upgradeEventNoRefCntError() throws Http2Exception {, +        frameListener.onHeadersRead(http2HandlerCtx, Http2CodecUtil.HTTP_UPGRADE_STREAM_ID, request, 31, false);, +, +        final FullHttpRequest request = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.GET, "/");, +        final HttpServerUpgradeHandler.UpgradeEvent upgradeEvent = mock(HttpServerUpgradeHandler.UpgradeEvent.class);, +        when(upgradeEvent.retain()).thenAnswer(new Answer<HttpServerUpgradeHandler.UpgradeEvent>() {, +            @Override, +            public HttpServerUpgradeHandler.UpgradeEvent answer(InvocationOnMock invocationOnMock) throws Throwable {, +                request.retain();, +                return upgradeEvent;, +            }, +        });, +        when(upgradeEvent.release()).thenAnswer(new Answer<Boolean>() {, +            @Override, +            public Boolean answer(InvocationOnMock invocationOnMock) throws Throwable {, +                return request.release();, +            }, +        });, +, +        when(upgradeEvent.upgradeRequest()).thenReturn(request);, +        channel.pipeline().fireUserEventTriggered(upgradeEvent);, +        assertEquals(1, request.refCnt());, +    }, +, +++ b/codec-http2/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker, +mock-maker-inline]