[+++ b/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2_HELLO;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V3;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_2;, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2_HELLO;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V3;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_2;, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2_HELLO;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V3;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_2;, +        enabled.add(PROTOCOL_SSL_V2_HELLO);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_TLSv1, PROTOCOL_TLS_V1)) {, +            enabled.add(PROTOCOL_TLS_V1);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_TLSv1_1, PROTOCOL_TLS_V1_1)) {, +            enabled.add(PROTOCOL_TLS_V1_1);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_TLSv1_2, PROTOCOL_TLS_V1_2)) {, +            enabled.add(PROTOCOL_TLS_V1_2);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_SSLv2, PROTOCOL_SSL_V2)) {, +            enabled.add(PROTOCOL_SSL_V2);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_SSLv3, PROTOCOL_SSL_V3)) {, +            enabled.add(PROTOCOL_SSL_V3);, +            if (p.equals(PROTOCOL_SSL_V2)) {, +            } else if (p.equals(PROTOCOL_SSL_V3)) {, +            } else if (p.equals(PROTOCOL_TLS_V1)) {, +            } else if (p.equals(PROTOCOL_TLS_V1_1)) {, +            } else if (p.equals(PROTOCOL_TLS_V1_2)) {, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2_HELLO;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V3;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_2;, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2_HELLO;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V3;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_2;, +        enabled.add(PROTOCOL_SSL_V2_HELLO);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_TLSv1, PROTOCOL_TLS_V1)) {, +            enabled.add(PROTOCOL_TLS_V1);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_TLSv1_1, PROTOCOL_TLS_V1_1)) {, +            enabled.add(PROTOCOL_TLS_V1_1);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_TLSv1_2, PROTOCOL_TLS_V1_2)) {, +            enabled.add(PROTOCOL_TLS_V1_2);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_SSLv2, PROTOCOL_SSL_V2)) {, +            enabled.add(PROTOCOL_SSL_V2);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_SSLv3, PROTOCOL_SSL_V3)) {, +            enabled.add(PROTOCOL_SSL_V3);, +            if (p.equals(PROTOCOL_SSL_V2)) {, +            } else if (p.equals(PROTOCOL_SSL_V3)) {, +            } else if (p.equals(PROTOCOL_TLS_V1)) {, +            } else if (p.equals(PROTOCOL_TLS_V1_1)) {, +            } else if (p.equals(PROTOCOL_TLS_V1_2)) {, +++ b/handler/src/main/java/io/netty/handler/ssl/SslUtils.java, +    // Protocols, +    static final String PROTOCOL_SSL_V2_HELLO = "SSLv2Hello";, +    static final String PROTOCOL_SSL_V2 = "SSLv2";, +    static final String PROTOCOL_SSL_V3 = "SSLv3";, +    static final String PROTOCOL_TLS_V1 = "TLSv1";, +    static final String PROTOCOL_TLS_V1_1 = "TLSv1.1";, +    static final String PROTOCOL_TLS_V1_2 = "TLSv1.2";, +, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2_HELLO;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V3;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_2;, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V2_HELLO;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_SSL_V3;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_1;, +import static io.netty.handler.ssl.SslUtils.PROTOCOL_TLS_V1_2;, +        enabled.add(PROTOCOL_SSL_V2_HELLO);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_TLSv1, PROTOCOL_TLS_V1)) {, +            enabled.add(PROTOCOL_TLS_V1);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_TLSv1_1, PROTOCOL_TLS_V1_1)) {, +            enabled.add(PROTOCOL_TLS_V1_1);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_TLSv1_2, PROTOCOL_TLS_V1_2)) {, +            enabled.add(PROTOCOL_TLS_V1_2);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_SSLv2, PROTOCOL_SSL_V2)) {, +            enabled.add(PROTOCOL_SSL_V2);, +        if (isProtocolEnabled(opts, SSL.SSL_OP_NO_SSLv3, PROTOCOL_SSL_V3)) {]