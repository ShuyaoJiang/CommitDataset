[+++ b/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverContext.java, +                        promise.tryFailure(new SearchDomainUnknownHostException(future.cause(), hostname));, +    private static final class SearchDomainUnknownHostException extends UnknownHostException {, +        SearchDomainUnknownHostException(Throwable cause, String originalHostname) {, +            super("Search domain query failed. Original hostname: '" + originalHostname + "' " + cause.getMessage());, +            setStackTrace(cause.getStackTrace());, +        }, +, +        @Override, +        public Throwable fillInStackTrace() {, +            return this;, +        }, +    }, +, +        buf.append("failed to resolve '").append(hostname).append('\'');, +++ b/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverContext.java, +                        promise.tryFailure(new SearchDomainUnknownHostException(future.cause(), hostname));, +    private static final class SearchDomainUnknownHostException extends UnknownHostException {, +        SearchDomainUnknownHostException(Throwable cause, String originalHostname) {, +            super("Search domain query failed. Original hostname: '" + originalHostname + "' " + cause.getMessage());, +            setStackTrace(cause.getStackTrace());, +        }, +, +        @Override, +        public Throwable fillInStackTrace() {, +            return this;, +        }, +    }, +, +        buf.append("failed to resolve '").append(hostname).append('\'');, +++ b/resolver-dns/src/test/java/io/netty/resolver/dns/SearchDomainTest.java, +import static org.hamcrest.Matchers.instanceOf;, +    public void testExceptionMsgContainsSearchDomain() throws Exception {, +        TestDnsServer.MapRecordStoreA store = new TestDnsServer.MapRecordStoreA(Collections.<String>emptySet());, +        assertThat(cause, instanceOf(UnknownHostException.class));, +        assertThat("search domain is included in UnknownHostException", cause.getMessage(),, +            containsString("foo.com"));, +    }, +, +    @Test, +    public void testExceptionMsgDoesNotContainSearchDomainIfNdotsNotHighEnough() throws Exception {, +        TestDnsServer.MapRecordStoreA store = new TestDnsServer.MapRecordStoreA(Collections.<String>emptySet());, +        dnsServer = new TestDnsServer(store);, +        dnsServer.start();, +, +        resolver = newResolver().searchDomains(Collections.singletonList("foo.com")).ndots(1).build();, +, +        Future<InetAddress> fut = resolver.resolve("unknown.hostname");, +        assertTrue(fut.await(10, TimeUnit.SECONDS));, +        assertFalse(fut.isSuccess());, +        final Throwable cause = fut.cause();, +        assertThat(cause, instanceOf(UnknownHostException.class));]