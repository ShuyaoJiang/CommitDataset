[+++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +    private static final String NORMALIZED_ARCH = normalizeArch(SystemPropertyUtil.get("os.arch", ""));, +    private static final String NORMALIZED_OS = normalizeOs(SystemPropertyUtil.get("os.name", ""));, +    public static String normalizedArch() {, +        return NORMALIZED_ARCH;, +    }, +, +    public static String normalizedOs() {, +        return NORMALIZED_OS;, +    }, +, +    private static String normalize(String value) {, +        return value.toLowerCase(Locale.US).replaceAll("[^a-z0-9]+", "");, +    }, +, +    private static String normalizeArch(String value) {, +        value = normalize(value);, +        if (value.matches("^(x8664|amd64|ia32e|em64t|x64)$")) {, +            return "x86_64";, +        }, +        if (value.matches("^(x8632|x86|i[3-6]86|ia32|x32)$")) {, +            return "x86_32";, +        }, +        if (value.matches("^(ia64|itanium64)$")) {, +            return "itanium_64";, +        }, +        if (value.matches("^(sparc|sparc32)$")) {, +            return "sparc_32";, +        }, +        if (value.matches("^(sparcv9|sparc64)$")) {, +            return "sparc_64";, +        }, +        if (value.matches("^(arm|arm32)$")) {, +            return "arm_32";, +        }, +        if ("aarch64".equals(value)) {, +            return "aarch_64";, +        }, +        if (value.matches("^(ppc|ppc32)$")) {, +            return "ppc_32";, +        }, +        if ("ppc64".equals(value)) {, +            return "ppc_64";, +        }, +        if ("ppc64le".equals(value)) {, +            return "ppcle_64";, +        }, +        if ("s390".equals(value)) {, +            return "s390_32";, +        }, +        if ("s390x".equals(value)) {, +            return "s390_64";, +        }, +, +        return "unknown";, +    }, +, +    private static String normalizeOs(String value) {, +        value = normalize(value);, +        if (value.startsWith("aix")) {, +            return "aix";, +        }, +        if (value.startsWith("hpux")) {, +            return "hpux";, +        }, +        if (value.startsWith("os400")) {, +            // Avoid the names such as os4000, +            if (value.length() <= 5 || !Character.isDigit(value.charAt(5))) {, +                return "os400";, +            }, +        }, +        if (value.startsWith("linux")) {, +            return "linux";, +        }, +        if (value.startsWith("macosx") || value.startsWith("osx")) {, +            return "osx";, +        }, +        if (value.startsWith("freebsd")) {, +            return "freebsd";, +        }, +        if (value.startsWith("openbsd")) {, +            return "openbsd";, +        }, +        if (value.startsWith("netbsd")) {, +            return "netbsd";, +        }, +        if (value.startsWith("solaris") || value.startsWith("sunos")) {, +            return "sunos";, +        }, +        if (value.startsWith("windows")) {, +            return "windows";, +        }, +, +        return "unknown";, +    }, +, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +    private static final String NORMALIZED_ARCH = normalizeArch(SystemPropertyUtil.get("os.arch", ""));, +    private static final String NORMALIZED_OS = normalizeOs(SystemPropertyUtil.get("os.name", ""));, +    public static String normalizedArch() {]