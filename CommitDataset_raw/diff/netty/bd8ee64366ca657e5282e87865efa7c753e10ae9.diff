[+++ b/codec/src/main/java/io/netty/handler/codec/CodecUtil.java, +        System.arraycopy(acceptedMsgTypes, 0, newAllowedMsgTypes, 0, numElem);, +++ b/codec/src/main/java/io/netty/handler/codec/CodecUtil.java, +        System.arraycopy(acceptedMsgTypes, 0, newAllowedMsgTypes, 0, numElem);, +++ b/example/src/main/java/io/netty/example/http/snoop/HttpSnoopServerHandler.java, +            buf.append("VERSION: ").append(request.getProtocolVersion()).append("\r\n");, +            buf.append("HOSTNAME: ").append(getHost(request, "unknown")).append("\r\n");, +            buf.append("REQUEST_URI: ").append(request.getUri()).append("\r\n\r\n");, +                String key = h.getKey();, +                String value = h.getValue();, +                buf.append("HEADER: ").append(key).append(" = ").append(value).append("\r\n");, +                        buf.append("PARAM: ").append(key).append(" = ").append(val).append("\r\n");, +                    buf.append("CONTENT: ");, +                    buf.append(content.toString(CharsetUtil.UTF_8));, +                    buf.append("\r\n");, +                            buf.append("TRAILING HEADER: ");, +                            buf.append(name).append(" = ").append(value).append("\r\n");, +                buf.append("CHUNK: ");, +                buf.append(chunk.getContent().toString(CharsetUtil.UTF_8)).append("\r\n");, +++ b/codec/src/main/java/io/netty/handler/codec/CodecUtil.java, +        System.arraycopy(acceptedMsgTypes, 0, newAllowedMsgTypes, 0, numElem);, +++ b/example/src/main/java/io/netty/example/http/snoop/HttpSnoopServerHandler.java, +            buf.append("VERSION: ").append(request.getProtocolVersion()).append("\r\n");, +            buf.append("HOSTNAME: ").append(getHost(request, "unknown")).append("\r\n");, +            buf.append("REQUEST_URI: ").append(request.getUri()).append("\r\n\r\n");, +                String key = h.getKey();, +                String value = h.getValue();, +                buf.append("HEADER: ").append(key).append(" = ").append(value).append("\r\n");, +                        buf.append("PARAM: ").append(key).append(" = ").append(val).append("\r\n");, +                    buf.append("CONTENT: ");, +                    buf.append(content.toString(CharsetUtil.UTF_8));, +                    buf.append("\r\n");, +                            buf.append("TRAILING HEADER: ");, +                            buf.append(name).append(" = ").append(value).append("\r\n");, +                buf.append("CHUNK: ");, +                buf.append(chunk.getContent().toString(CharsetUtil.UTF_8)).append("\r\n");, +++ b/transport/src/main/java/io/netty/channel/local/LocalChannel.java, +import java.util.Collections;, +                    Collections.addAll(buf, msgs);, +++ b/codec/src/main/java/io/netty/handler/codec/CodecUtil.java, +        System.arraycopy(acceptedMsgTypes, 0, newAllowedMsgTypes, 0, numElem);, +++ b/example/src/main/java/io/netty/example/http/snoop/HttpSnoopServerHandler.java, +            buf.append("VERSION: ").append(request.getProtocolVersion()).append("\r\n");, +            buf.append("HOSTNAME: ").append(getHost(request, "unknown")).append("\r\n");, +            buf.append("REQUEST_URI: ").append(request.getUri()).append("\r\n\r\n");, +                String key = h.getKey();, +                String value = h.getValue();, +                buf.append("HEADER: ").append(key).append(" = ").append(value).append("\r\n");, +                        buf.append("PARAM: ").append(key).append(" = ").append(val).append("\r\n");, +                    buf.append("CONTENT: ");, +                    buf.append(content.toString(CharsetUtil.UTF_8));, +                    buf.append("\r\n");, +                            buf.append("TRAILING HEADER: ");, +                            buf.append(name).append(" = ").append(value).append("\r\n");, +                buf.append("CHUNK: ");, +                buf.append(chunk.getContent().toString(CharsetUtil.UTF_8)).append("\r\n");, +++ b/transport/src/main/java/io/netty/channel/local/LocalChannel.java, +import java.util.Collections;, +                    Collections.addAll(buf, msgs);, +++ b/transport/src/main/java/io/netty/channel/socket/aio/AbstractAioChannel.java, +        if (eventLoop().parent() != group) {]