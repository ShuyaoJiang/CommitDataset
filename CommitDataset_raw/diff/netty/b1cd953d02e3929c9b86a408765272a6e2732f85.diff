[+++ b/example/src/main/java/io/netty/example/http/websocketx/html5/CustomTextFrameHandler.java, +/*, + * Copyright 2012 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.example.http.websocketx.html5;, +, +import io.netty.channel.ChannelHandlerContext;, +import io.netty.channel.ChannelInboundMessageHandlerAdapter;, +import io.netty.handler.codec.http.websocketx.TextWebSocketFrame;, +, +public class CustomTextFrameHandler extends ChannelInboundMessageHandlerAdapter<TextWebSocketFrame> {, +, +    @Override, +    public void messageReceived(ChannelHandlerContext ctx, TextWebSocketFrame frame) throws Exception {, +        String request = frame.getText();, +        ctx.channel().write(new TextWebSocketFrame(request.toUpperCase()));, +    }, +, +}, +++ b/example/src/main/java/io/netty/example/http/websocketx/html5/CustomTextFrameHandler.java, +/*, + * Copyright 2012 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.example.http.websocketx.html5;, +, +import io.netty.channel.ChannelHandlerContext;, +import io.netty.channel.ChannelInboundMessageHandlerAdapter;, +import io.netty.handler.codec.http.websocketx.TextWebSocketFrame;, +, +public class CustomTextFrameHandler extends ChannelInboundMessageHandlerAdapter<TextWebSocketFrame> {, +, +    @Override, +    public void messageReceived(ChannelHandlerContext ctx, TextWebSocketFrame frame) throws Exception {, +        String request = frame.getText();, +        ctx.channel().write(new TextWebSocketFrame(request.toUpperCase()));, +    }, +, +}, +++ b/example/src/main/java/io/netty/example/http/websocketx/html5/WebSocketServer.java, +/*, + * Copyright 2012 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License, version, + * 2.0 (the "License"); you may not use this file except in compliance with the, + * License. You may obtain a copy of the License at:, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations under, + * the License., + */, +package io.netty.example.http.websocketx.html5;, +, +import io.netty.bootstrap.ServerBootstrap;, +import io.netty.channel.Channel;, +import io.netty.channel.ChannelInitializer;, +import io.netty.channel.socket.SocketChannel;, +import io.netty.channel.socket.nio.NioEventLoopGroup;, +import io.netty.channel.socket.nio.NioServerSocketChannel;, +import io.netty.handler.codec.http.HttpChunkAggregator;, +import io.netty.handler.codec.http.HttpRequestDecoder;, +import io.netty.handler.codec.http.HttpResponseEncoder;, +import io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;, +, +import java.net.InetSocketAddress;, +, +/**, + * A WebSocket Server that respondes to requests at:, + *, + * <pre>, + * http://localhost:8080/websocket, + * </pre>, + *]