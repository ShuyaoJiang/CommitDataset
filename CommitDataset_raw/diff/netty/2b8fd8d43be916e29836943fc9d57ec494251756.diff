[+++ b/buffer/src/main/java/io/netty/buffer/PooledByteBufAllocator.java, +import io.netty.util.concurrent.FastThreadLocalThread;, +    private static final boolean DEFAULT_USE_CACHE_FOR_ALL_THREADS;, +        DEFAULT_USE_CACHE_FOR_ALL_THREADS = SystemPropertyUtil.getBoolean(, +                "io.netty.allocator.useCacheForAllThreads", true);, +, +            logger.debug("-Dio.netty.allocator.useCacheForAllThreads", DEFAULT_USE_CACHE_FOR_ALL_THREADS);, +    @SuppressWarnings("deprecation"), +    @SuppressWarnings("deprecation"), +    /**, +     * @deprecated use, +     * {@link PooledByteBufAllocator#PooledByteBufAllocator(boolean, int, int, int, int, int, int, int, boolean)}, +     */, +    @Deprecated, +    /**, +     * @deprecated use, +     * {@link PooledByteBufAllocator#PooledByteBufAllocator(boolean, int, int, int, int, int, int, int, boolean)}, +     */, +    @Deprecated, +        this(preferDirect, nHeapArena, nDirectArena, pageSize, maxOrder, tinyCacheSize, smallCacheSize,, +                normalCacheSize, DEFAULT_USE_CACHE_FOR_ALL_THREADS);, +    }, +, +    public PooledByteBufAllocator(boolean preferDirect, int nHeapArena, int nDirectArena, int pageSize, int maxOrder,, +                                  int tinyCacheSize, int smallCacheSize, int normalCacheSize,, +                                  boolean useCacheForAllThreads) {, +        threadCache = new PoolThreadLocalCache(useCacheForAllThreads);, +        private final boolean useCacheForAllThreads;, +, +        PoolThreadLocalCache(boolean useCacheForAllThreads) {, +            this.useCacheForAllThreads = useCacheForAllThreads;, +        }, +            if (useCacheForAllThreads || Thread.currentThread() instanceof FastThreadLocalThread) {, +            // No caching for non FastThreadLocalThreads., +            return new PoolThreadCache(heapArena, directArena, 0, 0, 0, 0, 0);, +        }]