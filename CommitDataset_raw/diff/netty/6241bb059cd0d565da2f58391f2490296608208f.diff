[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/HttpConversionUtil.java, +        StringBuilder pathBuilder = new StringBuilder(length(uri.getRawPath()) +, +                length(uri.getRawQuery()) + length(uri.getRawFragment()) + 2);, +        if (!isNullOrEmpty(uri.getRawPath())) {, +            pathBuilder.append(uri.getRawPath());, +        if (!isNullOrEmpty(uri.getRawQuery())) {, +            pathBuilder.append(uri.getRawQuery());, +        if (!isNullOrEmpty(uri.getRawFragment())) {, +            pathBuilder.append(uri.getRawFragment());, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/HttpConversionUtil.java, +        StringBuilder pathBuilder = new StringBuilder(length(uri.getRawPath()) +, +                length(uri.getRawQuery()) + length(uri.getRawFragment()) + 2);, +        if (!isNullOrEmpty(uri.getRawPath())) {, +            pathBuilder.append(uri.getRawPath());, +        if (!isNullOrEmpty(uri.getRawQuery())) {, +            pathBuilder.append(uri.getRawQuery());, +        if (!isNullOrEmpty(uri.getRawFragment())) {, +            pathBuilder.append(uri.getRawFragment());, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/HttpToHttp2ConnectionHandlerTest.java, +    public void testOriginFormRequestTargetHandledFromUrlencodedUri() throws Exception {, +        bootstrapEnv(2, 1, 0);, +        final FullHttpRequest request = new DefaultFullHttpRequest(, +                HTTP_1_1, GET, "/where%2B0?q=now%2B0&f=then%2B0#section1%2B0");, +        final HttpHeaders httpHeaders = request.headers();, +        httpHeaders.setInt(HttpConversionUtil.ExtensionHeaderNames.STREAM_ID.text(), 5);, +        httpHeaders.set(HttpConversionUtil.ExtensionHeaderNames.SCHEME.text(), "http");, +        final Http2Headers http2Headers =, +                new DefaultHttp2Headers().method(new AsciiString("GET")), +                                         .path(new AsciiString("/where%2B0?q=now%2B0&f=then%2B0#section1%2B0")), +                                         .scheme(new AsciiString("http"));, +, +        ChannelPromise writePromise = newPromise();, +        verifyHeadersOnly(http2Headers, writePromise, clientChannel.writeAndFlush(request, writePromise));, +    }, +, +    @Test]