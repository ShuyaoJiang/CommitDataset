[+++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +            return ChannelBuffers.EMPTY_BUFFER;, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +            return ChannelBuffers.EMPTY_BUFFER;, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +            return ChannelBuffers.EMPTY_BUFFER;, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffers.java, +    /**, +     * A buffer whose capacity is {@code 0}., +     */, +    public static ChannelBuffer EMPTY_BUFFER = new BigEndianHeapChannelBuffer(0);, +, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +            return ChannelBuffers.EMPTY_BUFFER;, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffers.java, +    /**, +     * A buffer whose capacity is {@code 0}., +     */, +    public static ChannelBuffer EMPTY_BUFFER = new BigEndianHeapChannelBuffer(0);, +, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +++ b/src/main/java/org/jboss/netty/buffer/DynamicChannelBuffer.java, +    private ChannelBuffer buffer = ChannelBuffers.EMPTY_BUFFER;, +            copiedBuffer.buffer = ChannelBuffers.EMPTY_BUFFER;, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +            return ChannelBuffers.EMPTY_BUFFER;, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffers.java, +    /**, +     * A buffer whose capacity is {@code 0}., +     */, +    public static ChannelBuffer EMPTY_BUFFER = new BigEndianHeapChannelBuffer(0);, +, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +++ b/src/main/java/org/jboss/netty/buffer/DynamicChannelBuffer.java, +    private ChannelBuffer buffer = ChannelBuffers.EMPTY_BUFFER;, +            copiedBuffer.buffer = ChannelBuffers.EMPTY_BUFFER;, +++ b/src/main/java/org/jboss/netty/example/echo/EchoHandler.java, +        firstMessage = ChannelBuffers.EMPTY_BUFFER;, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +            return ChannelBuffers.EMPTY_BUFFER;, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffers.java, +    /**, +     * A buffer whose capacity is {@code 0}., +     */, +    public static ChannelBuffer EMPTY_BUFFER = new BigEndianHeapChannelBuffer(0);, +, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;, +            return EMPTY_BUFFER;]