[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java, +                if (config.isCredentialsAllowed()) {, +                    echoRequestOrigin(response);, +                    setVaryHeader(response);, +                } else {, +                }, +                setOrigin(response, origin);, +                setVaryHeader(response);, +    private void echoRequestOrigin(final HttpResponse response) {, +        setOrigin(response, request.headers().get(ORIGIN));, +    }, +, +    private void setVaryHeader(final HttpResponse response) {, +        response.headers().set(VARY, ORIGIN);, +    }, +, +    private void setAnyOrigin(final HttpResponse response) {, +        setOrigin(response, "*");, +    }, +, +    private void setOrigin(final HttpResponse response, final String origin) {, +        response.headers().set(ACCESS_CONTROL_ALLOW_ORIGIN, origin);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java, +                if (config.isCredentialsAllowed()) {, +                    echoRequestOrigin(response);, +                    setVaryHeader(response);, +                } else {, +                }, +                setOrigin(response, origin);, +                setVaryHeader(response);, +    private void echoRequestOrigin(final HttpResponse response) {, +        setOrigin(response, request.headers().get(ORIGIN));, +    }, +, +    private void setVaryHeader(final HttpResponse response) {, +        response.headers().set(VARY, ORIGIN);, +    }, +, +    private void setAnyOrigin(final HttpResponse response) {, +        setOrigin(response, "*");, +    }, +, +    private void setOrigin(final HttpResponse response, final String origin) {, +        response.headers().set(ACCESS_CONTROL_ALLOW_ORIGIN, origin);, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/cors/CorsHandlerTest.java, +        assertThat(response.headers().get(VARY), equalTo(ORIGIN.toString()));, +        assertThat(response.headers().get(VARY), equalTo(ORIGIN.toString()));, +        assertThat(response.headers().get(VARY), equalTo(ORIGIN.toString()));, +        assertThat(response.headers().get(VARY), equalTo(ORIGIN.toString()));, +        assertThat(response.headers().get(VARY), equalTo(ORIGIN.toString()));, +        assertThat(response.headers().get(VARY), equalTo(ORIGIN.toString()));, +        assertThat(response.headers().get(VARY), equalTo(ORIGIN.toString()));, +    public void anyOriginAndAllowCredentialsShouldEchoRequestOrigin() {, +        final CorsConfig config = CorsConfig.withAnyOrigin().allowCredentials().build();, +        final HttpResponse response = simpleRequest(config, "http://localhost:7777", "");, +        assertThat(response.headers().get(ACCESS_CONTROL_ALLOW_CREDENTIALS), equalTo("true"));, +        assertThat(response.headers().get(ACCESS_CONTROL_ALLOW_ORIGIN), equalTo("http://localhost:7777"));, +        assertThat(response.headers().get(VARY), equalTo(ORIGIN.toString()));, +    }, +, +    @Test]