[+++ b/src/main/java/org/jboss/netty/channel/Channel.java, + * A nexus to a network socket or a component which is capable of I/O, + * operations such as read, write, connect, and bind., + * <li>the current state of the channel (e.g. open, bound, and connected),</li>, + * <li>the configuration parameters of the channel (e.g. receive buffer size),</li>, + * <li>the I/O operations that the channel supports (e.g. read, write, connect, and bind), and</li>, + *     associated with the channel.  This is the most important place, where, + *     your application logic kicks into an action.</li>, +++ b/src/main/java/org/jboss/netty/channel/Channel.java, + * A nexus to a network socket or a component which is capable of I/O, + * operations such as read, write, connect, and bind., + * <li>the current state of the channel (e.g. open, bound, and connected),</li>, + * <li>the configuration parameters of the channel (e.g. receive buffer size),</li>, + * <li>the I/O operations that the channel supports (e.g. read, write, connect, and bind), and</li>, + *     associated with the channel.  This is the most important place, where, + *     your application logic kicks into an action.</li>, +++ b/src/main/java/org/jboss/netty/channel/ChannelDownstreamHandler.java, + * The most common use case of this interface is to intercept an I/O request, + * received {@link ChannelEvent} object is interpreted as described in the, + * proper synchronization in the handler implementation.]