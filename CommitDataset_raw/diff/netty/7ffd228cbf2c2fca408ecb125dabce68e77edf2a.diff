[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketChannel.java, +    // Does not need to be volatile as it's accessed by only one thread., +    long connectDeadlineNanos;, +, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketChannel.java, +    // Does not need to be volatile as it's accessed by only one thread., +    long connectDeadlineNanos;, +, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketPipelineSink.java, +import java.net.ConnectException;, +        void register(NioClientSocketChannel channel) {, +            long lastConnectTimeoutCheckTimeNanos = System.nanoTime();, +                    // Handle connection timeout every 0.5 seconds approximately., +                    long currentTimeNanos = System.nanoTime();, +                    if (currentTimeNanos - lastConnectTimeoutCheckTimeNanos >= 500 * 1000000L) {, +                        lastConnectTimeoutCheckTimeNanos = currentTimeNanos;, +                        processConnectTimeout(selector.keys(), currentTimeNanos);, +                    }, +, +        private void processConnectTimeout(Set<SelectionKey> keys, long currentTimeNanos) {, +            ConnectException cause = null;, +            for (SelectionKey k: keys) {, +                if (!k.isValid()) {, +                    close(k);, +                    continue;, +                }, +, +                if (k.isConnectable()) {, +                    connect(k);, +                    continue;, +                }, +, +                NioClientSocketChannel ch = (NioClientSocketChannel) k.attachment();, +                if (ch.connectDeadlineNanos > 0 &&, +                        currentTimeNanos >= ch.connectDeadlineNanos) {, +, +                    if (cause == null) {, +                        cause = new ConnectException("connection timed out");, +                    }, +, +                    ch.connectFuture.setFailure(cause);, +                    fireExceptionCaught(ch, cause);, +                    close(k);, +                }, +            }, +        }, +, +        private final NioClientSocketChannel channel;, +        RegisterTask(Boss boss, NioClientSocketChannel channel) {, +, +            int connectTimeout = channel.getConfig().getConnectTimeoutMillis();, +            if (connectTimeout > 0) {, +                channel.connectDeadlineNanos = System.nanoTime() + connectTimeout * 1000000L;, +            }]