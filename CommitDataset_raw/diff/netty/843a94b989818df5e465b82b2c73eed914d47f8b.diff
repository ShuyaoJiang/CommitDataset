[+++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +++ b/transport/src/main/java/io/netty/channel/DefaultEventExecutor.java, +        this(nThreads, null);, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +++ b/transport/src/main/java/io/netty/channel/DefaultEventExecutor.java, +        this(nThreads, null);, +++ b/transport/src/main/java/io/netty/channel/MultithreadEventExecutor.java, +        if (nThreads < 0) {, +                    "nThreads: %d (expected: >= 0)", nThreads));, +        if (nThreads == 0) {, +            nThreads = DEFAULT_POOL_SIZE;, +        }, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +++ b/transport/src/main/java/io/netty/channel/DefaultEventExecutor.java, +        this(nThreads, null);, +++ b/transport/src/main/java/io/netty/channel/MultithreadEventExecutor.java, +        if (nThreads < 0) {, +                    "nThreads: %d (expected: >= 0)", nThreads));, +        if (nThreads == 0) {, +            nThreads = DEFAULT_POOL_SIZE;, +        }, +++ b/transport/src/main/java/io/netty/channel/MultithreadEventLoop.java, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +++ b/transport/src/main/java/io/netty/channel/DefaultEventExecutor.java, +        this(nThreads, null);, +++ b/transport/src/main/java/io/netty/channel/MultithreadEventExecutor.java, +        if (nThreads < 0) {, +                    "nThreads: %d (expected: >= 0)", nThreads));, +        if (nThreads == 0) {, +            nThreads = DEFAULT_POOL_SIZE;, +        }, +++ b/transport/src/main/java/io/netty/channel/MultithreadEventLoop.java, +++ b/transport/src/main/java/io/netty/channel/local/LocalEventLoop.java, +    public LocalEventLoop() {, +        this(0);, +    }, +        this(nThreads, null);, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +++ b/transport/src/main/java/io/netty/channel/DefaultEventExecutor.java, +        this(nThreads, null);, +++ b/transport/src/main/java/io/netty/channel/MultithreadEventExecutor.java, +        if (nThreads < 0) {, +                    "nThreads: %d (expected: >= 0)", nThreads));, +        if (nThreads == 0) {, +            nThreads = DEFAULT_POOL_SIZE;, +        }, +++ b/transport/src/main/java/io/netty/channel/MultithreadEventLoop.java, +++ b/transport/src/main/java/io/netty/channel/local/LocalEventLoop.java, +    public LocalEventLoop() {, +        this(0);, +    }, +        this(nThreads, null);, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioEventLoop.java, +    public NioEventLoop() {, +        this(0);, +    }, +        this(nThreads, null);]