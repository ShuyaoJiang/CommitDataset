[+++ b/buffer/src/main/java/io/netty/buffer/ChannelBuffers.java, +import io.netty.util.CharsetUtil;, +, +     * Creates a new 4-byte buffer that holds the specified 32-bit integer., +     */, +    public static ChannelBuffer wrapInt(int value) {, +        ChannelBuffer buf = buffer(4);, +        buf.writeInt(value);, +        return buf;, +    }, +, +    /**, +     * Creates a new 2-byte buffer that holds the specified 16-bit integer., +     */, +    public static ChannelBuffer wrapShort(int value) {, +        ChannelBuffer buf = buffer(2);, +        buf.writeShort(value);, +        return buf;, +    }, +, +    /**, +     * Create a new buffer that holds a sequence of the specified 16-bit integers., +     * Creates a new 3-byte buffer that holds the specified 24-bit integer., +     */, +    public static ChannelBuffer wrapMedium(int value) {, +        ChannelBuffer buf = buffer(3);, +        buf.writeMedium(value);, +        return buf;, +    }, +, +    /**, +     * Create a new buffer that holds a sequence of the specified 24-bit integers., +     * Creates a new 8-byte buffer that holds the specified 64-bit integer., +     */, +    public static ChannelBuffer wrapLong(long value) {, +        ChannelBuffer buf = buffer(8);, +        buf.writeLong(value);, +        return buf;, +    }, +, +    /**, +     * Create a new buffer that holds a sequence of the specified 64-bit integers., +     * Creates a new single-byte buffer that holds the specified boolean value., +     */, +    public static ChannelBuffer wrapBoolean(boolean value) {, +        ChannelBuffer buf = buffer(1);, +        buf.writeBoolean(value);, +        return buf;, +    }, +, +    /**, +     * Create a new buffer that holds a sequence of the specified boolean values., +     * Creates a new 4-byte buffer that holds the specified 32-bit floating point number., +     */, +    public static ChannelBuffer wrapFloat(float value) {, +        ChannelBuffer buf = buffer(4);, +        buf.writeFloat(value);, +        return buf;, +    }, +, +    /**, +     * Create a new buffer that holds a sequence of the specified 32-bit floating point numbers., +     */, +    public static ChannelBuffer wrapFloat(float... values) {, +        if (values == null || values.length == 0) {, +            return EMPTY_BUFFER;, +        }, +        ChannelBuffer buffer = buffer(values.length * 4);, +        for (float v: values) {, +            buffer.writeFloat(v);, +        }, +        return buffer;, +    }, +, +    /**, +     * Creates a new 8-byte buffer that holds the specified 64-bit floating point number., +     */, +    public static ChannelBuffer wrapDouble(double value) {, +        ChannelBuffer buf = buffer(8);, +        buf.writeDouble(value);, +        return buf;, +    }, +, +    /**, +     * Create a new buffer that holds a sequence of the specified 64-bit floating point numbers., +     */, +    public static ChannelBuffer wrapDouble(double... values) {, +        if (values == null || values.length == 0) {, +            return EMPTY_BUFFER;, +        }, +        ChannelBuffer buffer = buffer(values.length * 8);, +        for (double v: values) {, +            buffer.writeDouble(v);, +        }, +        return buffer;, +    }, +, +    /**]