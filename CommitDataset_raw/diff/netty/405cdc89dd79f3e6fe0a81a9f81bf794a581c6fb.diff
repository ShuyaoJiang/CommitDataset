[+++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslEngine.java, +    private static final String INVALID_CIPHER = "SSL_NULL_WITH_NULL_NULL";, +, +    private volatile String cipher;, +                    if (!handshakeFinished) {, +                        return INVALID_CIPHER;, +                    }, +                    if (cipher == null) {, +                        String c = toJavaCipherSuite(SSL.getCipherForSSL(ssl));, +                        if (c != null) {, +                            cipher = c;, +                        }, +                    }, +                        applicationProtocol = SSL.getNextProtoNegotiated(ssl);, +                        if (applicationProtocol == null) {, +                            applicationProtocol = fallbackApplicationProtocol;, +                        }, +                        if (applicationProtocol != null) {, +                            OpenSslEngine.this.applicationProtocol = applicationProtocol.replace(':', '_');, +                        } else {, +                            OpenSslEngine.this.applicationProtocol = "";, +                        }, +                    }, +                    String version = SSL.getVersion(ssl);, +                    if (applicationProtocol.isEmpty()) {, +     * Converts the specified OpenSSL cipher suite to the Java cipher suite., +     */, +    private String toJavaCipherSuite(String openSslCipherSuite) {, +        if (openSslCipherSuite == null) {, +            return null;, +        }, +, +        String prefix = toJavaCipherSuitePrefix(SSL.getVersion(ssl));, +        String converted = CipherSuiteConverter.toJava(openSslCipherSuite, prefix);, +        if (converted != null) {, +            openSslCipherSuite = converted;, +        } else {, +            openSslCipherSuite = prefix + '_' + openSslCipherSuite.replace('-', '_');, +        }, +        return openSslCipherSuite;, +    }, +, +    /**, +    private static String toJavaCipherSuitePrefix(String protocolVersion) {]