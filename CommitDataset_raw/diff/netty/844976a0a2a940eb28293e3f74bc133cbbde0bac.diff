[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +import io.netty.channel.ChannelHandlerContext;, +    private ChannelHandlerContext ctx;, +    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {, +        this.ctx = ctx;, +    }, +, +    @Override, +                new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),, +                        ctx.channel().config(), ZlibCodecFactory.newZlibEncoder(, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +import io.netty.channel.ChannelHandlerContext;, +    private ChannelHandlerContext ctx;, +    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {, +        this.ctx = ctx;, +    }, +, +    @Override, +                new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),, +                        ctx.channel().config(), ZlibCodecFactory.newZlibEncoder(, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +    protected ChannelHandlerContext ctx;, +    @Override, +    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {, +        this.ctx = ctx;, +        super.handlerAdded(ctx);, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +import io.netty.channel.ChannelHandlerContext;, +    private ChannelHandlerContext ctx;, +    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {, +        this.ctx = ctx;, +    }, +, +    @Override, +                new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),, +                        ctx.channel().config(), ZlibCodecFactory.newZlibEncoder(, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +    protected ChannelHandlerContext ctx;, +    @Override, +    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {, +        this.ctx = ctx;, +        super.handlerAdded(ctx);, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecompressor.java, +, +            return new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),, +                    ctx.channel().config(), ZlibCodecFactory.newZlibDecoder(ZlibWrapper.GZIP));, +            return new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),, +                    ctx.channel().config(), ZlibCodecFactory.newZlibDecoder(wrapper));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +import io.netty.channel.ChannelHandlerContext;, +    private ChannelHandlerContext ctx;, +    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {, +        this.ctx = ctx;, +    }, +, +    @Override, +                new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),, +                        ctx.channel().config(), ZlibCodecFactory.newZlibEncoder(, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +    protected ChannelHandlerContext ctx;, +    @Override, +    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {, +        this.ctx = ctx;, +        super.handlerAdded(ctx);, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecompressor.java, +, +            return new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),, +                    ctx.channel().config(), ZlibCodecFactory.newZlibDecoder(ZlibWrapper.GZIP));, +            return new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),, +                    ctx.channel().config(), ZlibCodecFactory.newZlibDecoder(wrapper));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/CompressorHttp2ConnectionEncoder.java, +            EmbeddedChannel compressor = newCompressor(ctx, headers, endStream);, +            EmbeddedChannel compressor = newCompressor(ctx, headers, endOfStream);, +     * @param ctx the context., +    protected EmbeddedChannel newContentCompressor(ChannelHandlerContext ctx, CharSequence contentEncoding), +            throws Http2Exception {, +            return newCompressionChannel(ctx, ZlibWrapper.GZIP);, +            return newCompressionChannel(ctx, ZlibWrapper.ZLIB);, +     * @param ctx the context., +    private EmbeddedChannel newCompressionChannel(final ChannelHandlerContext ctx, ZlibWrapper wrapper) {, +        return new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),, +                ctx.channel().config(), ZlibCodecFactory.newZlibEncoder(wrapper, compressionLevel, windowBits,, +     * @param ctx the context., +    private EmbeddedChannel newCompressor(ChannelHandlerContext ctx, Http2Headers headers, boolean endOfStream), +            throws Http2Exception {, +        final EmbeddedChannel compressor = newContentCompressor(ctx, encoding);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +import io.netty.channel.ChannelHandlerContext;, +    private ChannelHandlerContext ctx;, +    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {, +        this.ctx = ctx;, +    }, +, +    @Override]