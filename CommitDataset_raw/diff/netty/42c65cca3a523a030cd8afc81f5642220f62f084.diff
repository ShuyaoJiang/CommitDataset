[+++ b/NOTICE.txt, +, +This product contains a modified portion of 'ArrayDeque', written by Josh, +Bloch of Google, Inc:, +, +  * LICENSE:, +    * license/LICENSE.deque.txt (Public Domain), +++ b/NOTICE.txt, +, +This product contains a modified portion of 'ArrayDeque', written by Josh, +Bloch of Google, Inc:, +, +  * LICENSE:, +    * license/LICENSE.deque.txt (Public Domain), +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +    public boolean isReadable() {, +    @Deprecated, +    public final boolean readable() {, +        return isReadable();, +    }, +, +    @Override, +    public boolean isReadable(int numBytes) {, +        return writerIndex - readerIndex >= numBytes;, +    }, +, +    @Override, +    public boolean isWritable() {, +        return capacity() > writerIndex;, +    }, +, +    @Override, +    @Deprecated, +    public final boolean writable() {, +        return isWritable();, +    }, +, +    @Override, +    public boolean isWritable(int numBytes) {, +        return capacity() - writerIndex >= numBytes;, +    public ByteBuf ensureWritable(int minWritableBytes) {, +    @Deprecated, +    public final ByteBuf ensureWritableBytes(int minWritableBytes) {, +        return ensureWritable(minWritableBytes);, +    }, +, +    @Override, +    public int ensureWritable(int minWritableBytes, boolean force) {, +        ensureWritable(1);, +        ensureWritable(2);, +        ensureWritable(3);, +        ensureWritable(4);, +        ensureWritable(8);, +        ensureWritable(length);, +        ensureWritable(length);, +        ensureWritable(length);, +        ensureWritable(length);, +        ensureWritable(length);, +        if (maxCapacity != Integer.MAX_VALUE) {, +            buf.append('/');, +            buf.append(maxCapacity);, +        }, +++ b/NOTICE.txt, +, +This product contains a modified portion of 'ArrayDeque', written by Josh, +Bloch of Google, Inc:, +, +  * LICENSE:, +    * license/LICENSE.deque.txt (Public Domain), +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +    public boolean isReadable() {, +    @Deprecated, +    public final boolean readable() {, +        return isReadable();, +    }, +, +    @Override, +    public boolean isReadable(int numBytes) {, +        return writerIndex - readerIndex >= numBytes;, +    }, +, +    @Override, +    public boolean isWritable() {, +        return capacity() > writerIndex;, +    }, +, +    @Override, +    @Deprecated, +    public final boolean writable() {, +        return isWritable();, +    }, +, +    @Override, +    public boolean isWritable(int numBytes) {, +        return capacity() - writerIndex >= numBytes;, +    public ByteBuf ensureWritable(int minWritableBytes) {, +    @Deprecated, +    public final ByteBuf ensureWritableBytes(int minWritableBytes) {, +        return ensureWritable(minWritableBytes);, +    }]