[+++ b/handler/src/main/java/io/netty/handler/ssl/Java8SslParametersUtils.java, +import java.util.Collections;, +        if (names == null || names.isEmpty()) {, +            return Collections.emptyList();, +        }, +++ b/handler/src/main/java/io/netty/handler/ssl/Java8SslParametersUtils.java, +import java.util.Collections;, +        if (names == null || names.isEmpty()) {, +            return Collections.emptyList();, +        }, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java, +    private static final boolean SUPPORTS_HOSTNAME_VALIDATION;, +            boolean supportsHostNameValidation = false;, +                            SSL.setHostNameValidation(ssl, 0, "netty.io");, +                            supportsHostNameValidation = true;, +                        } catch (Throwable ignore) {, +                            logger.debug("Hostname Verification not supported.");, +                        }, +                        try {, +            SUPPORTS_HOSTNAME_VALIDATION = supportsHostNameValidation;, +            SUPPORTS_HOSTNAME_VALIDATION = false;, +    /**, +     * Returns {@code true} if <a href="https://wiki.openssl.org/index.php/Hostname_validation">Hostname Validation</a>, +     * is supported when using OpenSSL., +     */, +    public static boolean supportsHostnameValidation() {, +        return SUPPORTS_HOSTNAME_VALIDATION;, +    }, +, +++ b/handler/src/main/java/io/netty/handler/ssl/Java8SslParametersUtils.java, +import java.util.Collections;, +        if (names == null || names.isEmpty()) {, +            return Collections.emptyList();, +        }, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java, +    private static final boolean SUPPORTS_HOSTNAME_VALIDATION;, +            boolean supportsHostNameValidation = false;, +                            SSL.setHostNameValidation(ssl, 0, "netty.io");, +                            supportsHostNameValidation = true;, +                        } catch (Throwable ignore) {, +                            logger.debug("Hostname Verification not supported.");, +                        }, +                        try {, +            SUPPORTS_HOSTNAME_VALIDATION = supportsHostNameValidation;, +            SUPPORTS_HOSTNAME_VALIDATION = false;, +    /**, +     * Returns {@code true} if <a href="https://wiki.openssl.org/index.php/Hostname_validation">Hostname Validation</a>, +     * is supported when using OpenSSL., +     */, +    public static boolean supportsHostnameValidation() {, +        return SUPPORTS_HOSTNAME_VALIDATION;, +    }, +, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +    /**, +     * <a href="https://www.openssl.org/docs/man1.0.2/crypto/X509_check_host.html">The flags argument is usually 0</a>., +     */, +    private static final int DEFAULT_HOSTNAME_VALIDATION_FLAGS = 0;, +            final String endPointIdentificationAlgorithm = sslParameters.getEndpointIdentificationAlgorithm();, +            final boolean endPointVerificationEnabled = endPointIdentificationAlgorithm != null &&, +                    !endPointIdentificationAlgorithm.isEmpty();, +            SSL.setHostNameValidation(ssl, DEFAULT_HOSTNAME_VALIDATION_FLAGS,, +                    endPointVerificationEnabled ? getPeerHost() : null);, +            // If the user asks for hostname verification we must ensure we verify the peer., +            // If the user disables hostname verification we leave it up to the user to change the mode manually., +            if (clientMode && endPointVerificationEnabled) {, +                SSL.setVerify(ssl, SSL.SSL_CVERIFY_REQUIRED, -1);, +            }, +, +            this.endPointIdentificationAlgorithm = endPointIdentificationAlgorithm;, +                    final List<String> sniHostNames = Java8SslParametersUtils.getSniHostNames(sslParameters);, +                    this.sniHostNames = sniHostNames;, +++ b/handler/src/main/java/io/netty/handler/ssl/Java8SslParametersUtils.java, +import java.util.Collections;, +        if (names == null || names.isEmpty()) {, +            return Collections.emptyList();, +        }, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java, +    private static final boolean SUPPORTS_HOSTNAME_VALIDATION;, +            boolean supportsHostNameValidation = false;, +                            SSL.setHostNameValidation(ssl, 0, "netty.io");, +                            supportsHostNameValidation = true;, +                        } catch (Throwable ignore) {, +                            logger.debug("Hostname Verification not supported.");, +                        }, +                        try {, +            SUPPORTS_HOSTNAME_VALIDATION = supportsHostNameValidation;, +            SUPPORTS_HOSTNAME_VALIDATION = false;, +    /**, +     * Returns {@code true} if <a href="https://wiki.openssl.org/index.php/Hostname_validation">Hostname Validation</a>, +     * is supported when using OpenSSL., +     */, +    public static boolean supportsHostnameValidation() {, +        return SUPPORTS_HOSTNAME_VALIDATION;, +    }, +, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +    /**, +     * <a href="https://www.openssl.org/docs/man1.0.2/crypto/X509_check_host.html">The flags argument is usually 0</a>., +     */]