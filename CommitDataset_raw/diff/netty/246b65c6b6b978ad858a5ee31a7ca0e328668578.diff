[+++ b/transport/src/main/java/io/netty/bootstrap/AbstractBootstrap.java, +            // At this point we know that the registration was complete and succesful., +            ChannelPromise promise = channel.newPromise();, +            return promise;, +            final PendingRegistrationPromise promise = new PendingRegistrationPromise(channel);, +                    Throwable cause = future.cause();, +                    if (cause != null) {, +                        // Registration on the EventLoop failed so fail the ChannelPromise directly to not cause an, +                        // IllegalStateException once we try to access the EventLoop of the Channel., +                        promise.setFailure(cause);, +                    } else {, +                        // Registration was successful, so set the correct executor to use., +                        // See https://github.com/netty/netty/issues/2586, +                        promise.executor = channel.eventLoop();, +                    }, +    }, +        // Is set to the correct EventExecutor once the registration was successful. Otherwise it will, +        // stay null and so the GlobalEventExecutor.INSTANCE will be used for notifications., +        private volatile EventExecutor executor;, +, +            EventExecutor executor = this.executor;, +            if (executor != null) {, +                // If the registration was a success executor is set., +                return executor;, +++ b/transport/src/main/java/io/netty/bootstrap/AbstractBootstrap.java, +            // At this point we know that the registration was complete and succesful., +            ChannelPromise promise = channel.newPromise();, +            return promise;, +            final PendingRegistrationPromise promise = new PendingRegistrationPromise(channel);, +                    Throwable cause = future.cause();, +                    if (cause != null) {, +                        // Registration on the EventLoop failed so fail the ChannelPromise directly to not cause an, +                        // IllegalStateException once we try to access the EventLoop of the Channel., +                        promise.setFailure(cause);, +                    } else {, +                        // Registration was successful, so set the correct executor to use., +                        // See https://github.com/netty/netty/issues/2586, +                        promise.executor = channel.eventLoop();, +                    }, +    }, +        // Is set to the correct EventExecutor once the registration was successful. Otherwise it will, +        // stay null and so the GlobalEventExecutor.INSTANCE will be used for notifications., +        private volatile EventExecutor executor;, +, +            EventExecutor executor = this.executor;, +            if (executor != null) {, +                // If the registration was a success executor is set., +                return executor;, +++ b/transport/src/test/java/io/netty/bootstrap/BootstrapTest.java, +                            // Close the Channel to emulate what NIO and others impl do on bind failure, +                            // See https://github.com/netty/netty/issues/2586, +                            close();, +                            // Close the Channel to emulate what NIO and others impl do on bind failure, +                            // See https://github.com/netty/netty/issues/2586, +                            close();]