[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +            cleanup();, +    @Override, +    public void afterRemove(ChannelHandlerContext ctx) throws Exception {, +        cleanup();, +        super.afterRemove(ctx);, +    }, +, +    @Override, +    public void channelInactive(ChannelHandlerContext ctx) throws Exception {, +        cleanup();, +        super.channelInactive(ctx);, +    }, +, +    private void cleanup() {, +        if (decoder != null) {, +            // Clean-up the previous decoder if not cleaned up correctly., +            finishDecode(Unpooled.buffer());, +        }, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +            cleanup();, +    @Override, +    public void afterRemove(ChannelHandlerContext ctx) throws Exception {, +        cleanup();, +        super.afterRemove(ctx);, +    }, +, +    @Override, +    public void channelInactive(ChannelHandlerContext ctx) throws Exception {, +        cleanup();, +        super.channelInactive(ctx);, +    }, +, +    private void cleanup() {, +        if (decoder != null) {, +            // Clean-up the previous decoder if not cleaned up correctly., +            finishDecode(Unpooled.buffer());, +        }, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +            cleanup();, +, +    @Override, +    public void afterRemove(ChannelHandlerContext ctx) throws Exception {, +        cleanup();, +        super.afterRemove(ctx);, +    }, +, +    @Override, +    public void channelInactive(ChannelHandlerContext ctx) throws Exception {, +        cleanup();, +        super.channelInactive(ctx);, +    }, +, +    private void cleanup() {, +        if (encoder != null) {, +            // Clean-up the previous encoder if not cleaned up correctly., +            finishEncode(Unpooled.buffer());, +        }, +    }, +]