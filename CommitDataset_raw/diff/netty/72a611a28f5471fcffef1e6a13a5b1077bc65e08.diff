[+++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpContentCompressorTest.java, +        HttpContent chunk = (HttpContent) ch.readOutbound();, +        assertThat(ByteBufUtil.hexDump(chunk.content()), is("1f8b080000000000000003000000000000000000"));, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpContentCompressorTest.java, +        HttpContent chunk = (HttpContent) ch.readOutbound();, +        assertThat(ByteBufUtil.hexDump(chunk.content()), is("1f8b080000000000000003000000000000000000"));, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JZlibEncoder.java, +            out.writeBytes(in);, +            return;, +        }, +, +        int inputLength = in.readableBytes();, +        if (inputLength == 0) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpContentCompressorTest.java, +        HttpContent chunk = (HttpContent) ch.readOutbound();, +        assertThat(ByteBufUtil.hexDump(chunk.content()), is("1f8b080000000000000003000000000000000000"));, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JZlibEncoder.java, +            out.writeBytes(in);, +            return;, +        }, +, +        int inputLength = in.readableBytes();, +        if (inputLength == 0) {, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JdkZlibEncoder.java, +        if (len == 0) {, +            return;, +        }, +]