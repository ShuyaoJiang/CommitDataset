[+++ b/transport/src/main/java/io/netty/channel/ChannelFlushPromiseNotifier.java, +     * @deprecated use {@link #add(ChannelPromise, long)}, +    @Deprecated, +        return add(promise, (long) pendingDataSize);, +    }, +, +    /**, +     * Add a {@link ChannelPromise} to this {@link ChannelFlushPromiseNotifier} which will be notified after the given, +     * {@code pendingDataSize} was reached., +     */, +    public ChannelFlushPromiseNotifier add(ChannelPromise promise, long pendingDataSize) {, +    public ChannelFlushPromiseNotifier notifyPromises() {, +        notifyPromises0(null);, +     * @deprecated use {@link #notifyPromises()}, +     */, +    @Deprecated, +    public ChannelFlushPromiseNotifier notifyFlushFutures() {, +        return notifyPromises();, +    }, +, +    /**, +    public ChannelFlushPromiseNotifier notifyPromises(Throwable cause) {, +        notifyPromises();, +     * @deprecated use {@link #notifyPromises(Throwable)}, +     */, +    @Deprecated, +    public ChannelFlushPromiseNotifier notifyFlushFutures(Throwable cause) {, +        return notifyPromises(cause);, +    }, +, +    /**, +    public ChannelFlushPromiseNotifier notifyPromises(Throwable cause1, Throwable cause2) {, +        notifyPromises0(cause1);, +    /**, +     * @deprecated use {@link #notifyPromises(Throwable, Throwable)}, +     */, +    @Deprecated, +    public ChannelFlushPromiseNotifier notifyFlushFutures(Throwable cause1, Throwable cause2) {, +        return notifyPromises(cause1, cause2);, +    }, +, +    private void notifyPromises0(Throwable cause) {, +            ChannelPromise promise = cp.promise();, +                    promise.trySuccess();, +                    promise.setSuccess();, +                    promise.tryFailure(cause);, +                    promise.setFailure(cause);]