[+++ b/buffer/src/main/java/io/netty/buffer/ChannelBuf.java, +     * Return {@code true} if the ChannelBuf is pooled., +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuf.java, +     * Return {@code true} if the ChannelBuf is pooled., +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +, +            // We're not using foreach to avoid creating an iterator., +            // noinspection ForLoopReplaceableByForEach, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuf.java, +     * Return {@code true} if the ChannelBuf is pooled., +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +, +            // We're not using foreach to avoid creating an iterator., +            // noinspection ForLoopReplaceableByForEach, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +     *   {@link URLDecoder#decode(String, String) URLDecoder.decode(s, charset.name())}, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuf.java, +     * Return {@code true} if the ChannelBuf is pooled., +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +, +            // We're not using foreach to avoid creating an iterator., +            // noinspection ForLoopReplaceableByForEach, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +     *   {@link URLDecoder#decode(String, String) URLDecoder.decode(s, charset.name())}, +++ b/codec/src/main/java/io/netty/handler/codec/FixedLengthFrameDecoder.java, +     * Calls {@link #FixedLengthFrameDecoder(int, boolean)} with {@code false}, +     *        {@code true} if the cumulative {@link ByteBuf} should use the, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuf.java, +     * Return {@code true} if the ChannelBuf is pooled., +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +, +            // We're not using foreach to avoid creating an iterator., +            // noinspection ForLoopReplaceableByForEach, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +     *   {@link URLDecoder#decode(String, String) URLDecoder.decode(s, charset.name())}, +++ b/codec/src/main/java/io/netty/handler/codec/FixedLengthFrameDecoder.java, +     * Calls {@link #FixedLengthFrameDecoder(int, boolean)} with {@code false}, +     *        {@code true} if the cumulative {@link ByteBuf} should use the, +++ b/common/src/main/java/io/netty/util/internal/DetectionUtil.java, +     * Return {@code true} if the JVM is running on Windows, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuf.java, +     * Return {@code true} if the ChannelBuf is pooled., +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +, +            // We're not using foreach to avoid creating an iterator., +            // noinspection ForLoopReplaceableByForEach, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +     *   {@link URLDecoder#decode(String, String) URLDecoder.decode(s, charset.name())}, +++ b/codec/src/main/java/io/netty/handler/codec/FixedLengthFrameDecoder.java, +     * Calls {@link #FixedLengthFrameDecoder(int, boolean)} with {@code false}, +     *        {@code true} if the cumulative {@link ByteBuf} should use the, +++ b/common/src/main/java/io/netty/util/internal/DetectionUtil.java, +     * Return {@code true} if the JVM is running on Windows, +++ b/example/src/main/java/io/netty/example/http/file/HttpStaticFileServerHandler.java, + * <li>Request #1 returns the content of {@code /file1.txt}.</li>, + * <li>Contents of {@code /file1.txt} is cached by the browser.</li>, + * <li>Request #2 for {@code /file1.txt} does return the contents of the, + *     {@code If-Modified-Since} date is the same as the file's last, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuf.java, +     * Return {@code true} if the ChannelBuf is pooled., +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +, +            // We're not using foreach to avoid creating an iterator., +            // noinspection ForLoopReplaceableByForEach, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +     *   {@link URLDecoder#decode(String, String) URLDecoder.decode(s, charset.name())}, +++ b/codec/src/main/java/io/netty/handler/codec/FixedLengthFrameDecoder.java, +     * Calls {@link #FixedLengthFrameDecoder(int, boolean)} with {@code false}, +     *        {@code true} if the cumulative {@link ByteBuf} should use the, +++ b/common/src/main/java/io/netty/util/internal/DetectionUtil.java, +     * Return {@code true} if the JVM is running on Windows, +++ b/example/src/main/java/io/netty/example/http/file/HttpStaticFileServerHandler.java, + * <li>Request #1 returns the content of {@code /file1.txt}.</li>, + * <li>Contents of {@code /file1.txt} is cached by the browser.</li>, + * <li>Request #2 for {@code /file1.txt} does return the contents of the, + *     {@code If-Modified-Since} date is the same as the file's last, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/package-info.java, + * {@code, + * }, +++ b/buffer/src/main/java/io/netty/buffer/ChannelBuf.java, +     * Return {@code true} if the ChannelBuf is pooled., +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +, +            // We're not using foreach to avoid creating an iterator., +            // noinspection ForLoopReplaceableByForEach, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +     *   {@link URLDecoder#decode(String, String) URLDecoder.decode(s, charset.name())}, +++ b/codec/src/main/java/io/netty/handler/codec/FixedLengthFrameDecoder.java, +     * Calls {@link #FixedLengthFrameDecoder(int, boolean)} with {@code false}, +     *        {@code true} if the cumulative {@link ByteBuf} should use the, +++ b/common/src/main/java/io/netty/util/internal/DetectionUtil.java, +     * Return {@code true} if the JVM is running on Windows, +++ b/example/src/main/java/io/netty/example/http/file/HttpStaticFileServerHandler.java, + * <li>Request #1 returns the content of {@code /file1.txt}.</li>, + * <li>Contents of {@code /file1.txt} is cached by the browser.</li>, + * <li>Request #2 for {@code /file1.txt} does return the contents of the, + *     {@code If-Modified-Since} date is the same as the file's last, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/package-info.java, + * {@code, + * }]