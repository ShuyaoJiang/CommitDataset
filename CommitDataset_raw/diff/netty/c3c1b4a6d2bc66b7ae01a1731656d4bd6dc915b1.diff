[+++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/AbstractDnsRecord.java, +import java.net.IDN;, +, +        // Convert to ASCII which will also check that the length is not too big., +        // See:, +        //   - https://github.com/netty/netty/issues/4937, +        //   - https://github.com/netty/netty/issues/4935, +        this.name = IDN.toASCII(checkNotNull(name, "name"));, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/AbstractDnsRecord.java, +import java.net.IDN;, +, +        // Convert to ASCII which will also check that the length is not too big., +        // See:, +        //   - https://github.com/netty/netty/issues/4937, +        //   - https://github.com/netty/netty/issues/4935, +        this.name = IDN.toASCII(checkNotNull(name, "name"));, +++ b/codec-dns/src/test/java/io/netty/handler/codec/dns/AbstractDnsRecordTest.java, +/*, + * Copyright 2016 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.handler.codec.dns;, +, +import org.junit.Assert;, +import org.junit.Test;, +, +public class AbstractDnsRecordTest {, +, +    @Test, +    public void testValidDomainName() {, +        String name = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";, +        AbstractDnsRecord record = new AbstractDnsRecord(name, DnsRecordType.A, 0) { };, +        Assert.assertEquals(name, record.name());, +    }, +, +    @Test, +    public void testValidDomainNameUmlaut() {, +        String name = "ä";, +        AbstractDnsRecord record = new AbstractDnsRecord(name, DnsRecordType.A, 0) { };, +        Assert.assertEquals("xn--4ca", record.name());, +    }, +, +    @Test(expected = IllegalArgumentException.class), +    public void testValidDomainNameLength() {, +        String name = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";, +        new AbstractDnsRecord(name, DnsRecordType.A, 0) { };, +    }, +, +    @Test(expected = IllegalArgumentException.class), +    public void testValidDomainNameUmlautLength() {, +        String name = "äaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";, +        new AbstractDnsRecord(name, DnsRecordType.A, 0) { };, +    }, +}]