[+++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslEngine.java, +    private SSLEngineResult readPendingBytesFromBIO(, +            ByteBuffer dst, int bytesConsumed, int bytesProduced, HandshakeStatus status) throws SSLException {, +                return new SSLEngineResult(BUFFER_OVERFLOW,, +                        mayFinishHandshake(status != FINISHED ? getHandshakeStatus(pendingNet) : status),, +            return new SSLEngineResult(getEngineStatus(),, +                                       mayFinishHandshake(status != FINISHED ? getHandshakeStatus(pendingNet) : status),, +        HandshakeStatus status = NOT_HANDSHAKING;, +            status = handshake();, +                SSLEngineResult pendingNetResult = readPendingBytesFromBIO(dst, bytesConsumed, bytesProduced, status);, +            SSLEngineResult pendingNetResult = readPendingBytesFromBIO(dst, 0, bytesProduced, status);, +        return newResult(bytesConsumed, bytesProduced, status);, +        HandshakeStatus status = NOT_HANDSHAKING;, +            status = handshake();, +                        return newResult(bytesConsumed, bytesProduced, status);, +                        return newResult(bytesConsumed, bytesProduced, status);, +                    BUFFER_OVERFLOW, mayFinishHandshake(status != FINISHED ? getHandshakeStatus(): status),, +                    bytesConsumed, bytesProduced);, +        return newResult(bytesConsumed, bytesProduced, status);, +    private SSLEngineResult newResult(, +            int bytesConsumed, int bytesProduced, HandshakeStatus status) throws SSLException {, +               getEngineStatus(), mayFinishHandshake(status != FINISHED ? getHandshakeStatus() : status), +               , bytesConsumed, bytesProduced);]