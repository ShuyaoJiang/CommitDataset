[+++ b/codec-memcache/src/main/java/io/netty/handler/codec/memcache/binary/BinaryMemcacheObjectAggregator.java, +        ByteBuf extras = request.extras() == null ? null : request.extras().retain();, +                new DefaultFullBinaryMemcacheRequest(request.key(), extras, content);, +        ByteBuf extras = response.extras() == null ? null : response.extras().retain();, +                new DefaultFullBinaryMemcacheResponse(response.key(), extras, content);, +++ b/codec-memcache/src/main/java/io/netty/handler/codec/memcache/binary/BinaryMemcacheObjectAggregator.java, +        ByteBuf extras = request.extras() == null ? null : request.extras().retain();, +                new DefaultFullBinaryMemcacheRequest(request.key(), extras, content);, +        ByteBuf extras = response.extras() == null ? null : response.extras().retain();, +                new DefaultFullBinaryMemcacheResponse(response.key(), extras, content);, +++ b/codec-memcache/src/test/java/io/netty/handler/codec/memcache/binary/BinaryMemcacheObjectAggregatorTest.java, +import io.netty.handler.codec.memcache.DefaultLastMemcacheContent;, +import io.netty.handler.codec.memcache.DefaultMemcacheContent;, +import io.netty.util.CharsetUtil;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +, +    @Test, +    public void shouldRetainByteBufWhenAggregating() {, +        channel = new EmbeddedChannel(, +                new BinaryMemcacheRequestEncoder(),, +                new BinaryMemcacheRequestDecoder(),, +                new BinaryMemcacheObjectAggregator(MAX_CONTENT_SIZE));, +, +        String key = "Netty";, +        ByteBuf extras = Unpooled.copiedBuffer("extras", CharsetUtil.UTF_8);, +        BinaryMemcacheRequest request = new DefaultBinaryMemcacheRequest(key, extras);, +        request.setKeyLength((short) key.length());, +        request.setExtrasLength((byte) extras.readableBytes());, +, +        DefaultMemcacheContent content1 =, +                new DefaultMemcacheContent(Unpooled.copiedBuffer("Netty", CharsetUtil.UTF_8));, +        DefaultLastMemcacheContent content2 =, +                new DefaultLastMemcacheContent(Unpooled.copiedBuffer(" Rocks!", CharsetUtil.UTF_8));, +        int totalBodyLength = key.length() + extras.readableBytes() +, +                content1.content().readableBytes() + content2.content().readableBytes();, +        request.setTotalBodyLength(totalBodyLength);, +, +        assertTrue(channel.writeOutbound(request, content1, content2));, +, +        assertThat(channel.outboundMessages().size(), is(3));, +        assertTrue(channel.writeInbound(channel.readOutbound(), channel.readOutbound(), channel.readOutbound()));, +, +        FullBinaryMemcacheRequest read = channel.readInbound();, +        assertThat(read, notNullValue());, +        assertThat(read.key(), is("Netty"));, +        assertThat(read.extras().toString(CharsetUtil.UTF_8), is("extras"));, +        assertThat(read.content().toString(CharsetUtil.UTF_8), is("Netty Rocks!"));, +, +        read.release();, +        assertFalse(channel.finish());, +    }]