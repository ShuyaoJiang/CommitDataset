[+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +         * Create a new {@link EpollRecvByteAllocatorHandle} instance., +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +         * Create a new {@link EpollRecvByteAllocatorHandle} instance., +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollServerChannel.java, +    @Deprecated, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +         * Create a new {@link EpollRecvByteAllocatorHandle} instance., +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollServerChannel.java, +    @Deprecated, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java, +    private static void safeClosePipe(FileDescriptor fd) {, +        abstract boolean spliceIn(RecvByteBufAllocator.Handle handle);, +        public boolean spliceIn(RecvByteBufAllocator.Handle handle) {, +        private final int offset;, +        public boolean spliceIn(RecvByteBufAllocator.Handle handle) {, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +         * Create a new {@link EpollRecvByteAllocatorHandle} instance., +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollServerChannel.java, +    @Deprecated, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java, +    private static void safeClosePipe(FileDescriptor fd) {, +        abstract boolean spliceIn(RecvByteBufAllocator.Handle handle);, +        public boolean spliceIn(RecvByteBufAllocator.Handle handle) {, +        private final int offset;, +        public boolean spliceIn(RecvByteBufAllocator.Handle handle) {, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +         * Create a new {@link EpollRecvByteAllocatorHandle} instance., +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollServerChannel.java, +    @Deprecated, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java, +    private static void safeClosePipe(FileDescriptor fd) {, +        abstract boolean spliceIn(RecvByteBufAllocator.Handle handle);, +        public boolean spliceIn(RecvByteBufAllocator.Handle handle) {, +        private final int offset;, +        public boolean spliceIn(RecvByteBufAllocator.Handle handle) {, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollRecvByteAllocatorHandle.java, +         * continue to avoid a {@link StackOverflowError} between channelReadComplete and reading from the, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +         * Create a new {@link EpollRecvByteAllocatorHandle} instance., +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollServerChannel.java, +    @Deprecated, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java, +    private static void safeClosePipe(FileDescriptor fd) {, +        abstract boolean spliceIn(RecvByteBufAllocator.Handle handle);, +        public boolean spliceIn(RecvByteBufAllocator.Handle handle) {, +        private final int offset;, +        public boolean spliceIn(RecvByteBufAllocator.Handle handle) {, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollRecvByteAllocatorHandle.java, +         * continue to avoid a {@link StackOverflowError} between channelReadComplete and reading from the, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java, +        tcpMd5SigAddresses = TcpMd5Util.newTcpMd5Sigs(this, tcpMd5SigAddresses, keys);]