[+++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyTLV.java, +         * Returns the {@link Type} for a specific byte value as defined in the PROXY protocol 1.5 spec, +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyTLV.java, +         * Returns the {@link Type} for a specific byte value as defined in the PROXY protocol 1.5 spec, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                    // Pass through the full response with empty content and continue waiting for the next resp., +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyTLV.java, +         * Returns the {@link Type} for a specific byte value as defined in the PROXY protocol 1.5 spec, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                    // Pass through the full response with empty content and continue waiting for the next resp., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfigBuilder.java, +     * with a {@code "null"} value for the CORS response header 'Access-Control-Allow-Origin'., +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyTLV.java, +         * Returns the {@link Type} for a specific byte value as defined in the PROXY protocol 1.5 spec, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                    // Pass through the full response with empty content and continue waiting for the next resp., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfigBuilder.java, +     * with a {@code "null"} value for the CORS response header 'Access-Control-Allow-Origin'., +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2HeadersDecoder.java, +            // the Header builder throws IllegalArgumentException if the key or value was invalid, +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyTLV.java, +         * Returns the {@link Type} for a specific byte value as defined in the PROXY protocol 1.5 spec, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                    // Pass through the full response with empty content and continue waiting for the next resp., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfigBuilder.java, +     * with a {@code "null"} value for the CORS response header 'Access-Control-Allow-Origin'., +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2HeadersDecoder.java, +            // the Header builder throws IllegalArgumentException if the key or value was invalid, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.java, +         * Returns the head of the pending queue, or {@code null} if empty., +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyTLV.java, +         * Returns the {@link Type} for a specific byte value as defined in the PROXY protocol 1.5 spec, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                    // Pass through the full response with empty content and continue waiting for the next resp., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfigBuilder.java, +     * with a {@code "null"} value for the CORS response header 'Access-Control-Allow-Origin'., +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2HeadersDecoder.java, +            // the Header builder throws IllegalArgumentException if the key or value was invalid, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.java, +         * Returns the head of the pending queue, or {@code null} if empty., +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/HpackHuffmanDecoder.java, +         * symbolBits is the number of bits of the symbol being decoded, *including* all those of, +         * the parent nodes. symbolBits tells how far down the tree we are. For example, when, +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyTLV.java, +         * Returns the {@link Type} for a specific byte value as defined in the PROXY protocol 1.5 spec, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                    // Pass through the full response with empty content and continue waiting for the next resp., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfigBuilder.java, +     * with a {@code "null"} value for the CORS response header 'Access-Control-Allow-Origin'., +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2HeadersDecoder.java, +            // the Header builder throws IllegalArgumentException if the key or value was invalid, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.java, +         * Returns the head of the pending queue, or {@code null} if empty., +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/HpackHuffmanDecoder.java, +         * symbolBits is the number of bits of the symbol being decoded, *including* all those of, +         * the parent nodes. symbolBits tells how far down the tree we are. For example, when, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2CodecUtil.java, +     * Returns a buffer containing the {@link #CONNECTION_PREFACE}., +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyTLV.java, +         * Returns the {@link Type} for a specific byte value as defined in the PROXY protocol 1.5 spec, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                    // Pass through the full response with empty content and continue waiting for the next resp., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfigBuilder.java, +     * with a {@code "null"} value for the CORS response header 'Access-Control-Allow-Origin'., +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2HeadersDecoder.java, +            // the Header builder throws IllegalArgumentException if the key or value was invalid, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.java, +         * Returns the head of the pending queue, or {@code null} if empty., +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/HpackHuffmanDecoder.java, +         * symbolBits is the number of bits of the symbol being decoded, *including* all those of, +         * the parent nodes. symbolBits tells how far down the tree we are. For example, when, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2CodecUtil.java, +     * Returns a buffer containing the {@link #CONNECTION_PREFACE}., +++ b/codec/src/main/java/io/netty/handler/codec/marshalling/CompatibleMarshallingDecoder.java, +     *        exceeded the {@link Channel} will get closed. Use a maxObjectSize of, +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyTLV.java, +         * Returns the {@link Type} for a specific byte value as defined in the PROXY protocol 1.5 spec, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                    // Pass through the full response with empty content and continue waiting for the next resp., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfigBuilder.java, +     * with a {@code "null"} value for the CORS response header 'Access-Control-Allow-Origin'., +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2HeadersDecoder.java, +            // the Header builder throws IllegalArgumentException if the key or value was invalid, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.java, +         * Returns the head of the pending queue, or {@code null} if empty., +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/HpackHuffmanDecoder.java, +         * symbolBits is the number of bits of the symbol being decoded, *including* all those of, +         * the parent nodes. symbolBits tells how far down the tree we are. For example, when, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2CodecUtil.java, +     * Returns a buffer containing the {@link #CONNECTION_PREFACE}., +++ b/codec/src/main/java/io/netty/handler/codec/marshalling/CompatibleMarshallingDecoder.java, +     *        exceeded the {@link Channel} will get closed. Use a maxObjectSize of, +++ b/codec/src/main/java/io/netty/handler/codec/protobuf/ProtobufVarint32LengthFieldPrepender.java, + * An encoder that prepends the Google Protocol Buffers, +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyTLV.java, +         * Returns the {@link Type} for a specific byte value as defined in the PROXY protocol 1.5 spec, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                    // Pass through the full response with empty content and continue waiting for the next resp., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfigBuilder.java, +     * with a {@code "null"} value for the CORS response header 'Access-Control-Allow-Origin'.]