[+++ b/handler/src/main/java/io/netty/handler/execution/OrderedDownstreamThreadPoolExecutor.java, +import io.netty.channel.ChannelFuture;, +import io.netty.channel.ChannelFutureListener;, +    @Override, +    protected Executor getChildExecutor(ChannelEvent e) {, +        final Object key = getChildExecutorKey(e);, +        Executor executor = childExecutors.get(key);, +        if (executor == null) {, +            executor = new ChildExecutor();, +            Executor oldExecutor = childExecutors.putIfAbsent(key, executor);, +            if (oldExecutor != null) {, +                executor = oldExecutor;, +            } else {, +                , +                // register a listener so that the ChildExecutor will get removed once the channel was closed, +                e.getChannel().getCloseFuture().addListener(new ChannelFutureListener() {, +                    , +                    public void operationComplete(ChannelFuture future) throws Exception {, +                        removeChildExecutor(key);, +                    }, +                });, +            }, +        }, +, +        return executor;, +    }, +, +++ b/handler/src/main/java/io/netty/handler/execution/OrderedDownstreamThreadPoolExecutor.java, +import io.netty.channel.ChannelFuture;, +import io.netty.channel.ChannelFutureListener;, +    @Override, +    protected Executor getChildExecutor(ChannelEvent e) {, +        final Object key = getChildExecutorKey(e);, +        Executor executor = childExecutors.get(key);, +        if (executor == null) {, +            executor = new ChildExecutor();, +            Executor oldExecutor = childExecutors.putIfAbsent(key, executor);, +            if (oldExecutor != null) {, +                executor = oldExecutor;, +            } else {, +                , +                // register a listener so that the ChildExecutor will get removed once the channel was closed, +                e.getChannel().getCloseFuture().addListener(new ChannelFutureListener() {, +                    , +                    public void operationComplete(ChannelFuture future) throws Exception {, +                        removeChildExecutor(key);, +                    }, +                });, +            }, +        }, +, +        return executor;, +    }, +, +++ b/handler/src/main/java/io/netty/handler/execution/OrderedMemoryAwareThreadPoolExecutor.java, +    protected final ConcurrentMap<Object, Executor> childExecutors = newChildExecutorMap();, +    protected Executor getChildExecutor(ChannelEvent e) {, +    protected final class ChildExecutor implements Executor, Runnable {]