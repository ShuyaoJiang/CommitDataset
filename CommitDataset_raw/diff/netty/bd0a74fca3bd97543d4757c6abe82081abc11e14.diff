[+++ b/common/src/main/java/io/netty/util/HashedWheelTimer.java, +        this(threadFactory, tickDuration, unit, ticksPerWheel, true);, +    }, +, +    /**, +     * Creates a new timer., +     *, +     * @param threadFactory  a {@link ThreadFactory} that creates a, +     *                       background {@link Thread} which is dedicated to, +     *                       {@link TimerTask} execution., +     * @param tickDuration   the duration between tick, +     * @param unit           the time unit of the {@code tickDuration}, +     * @param ticksPerWheel  the size of the wheel, +     * @param leakDetection  {@code true} if leak detection should be enabled always, if false it will only be enabled, +     *                       if the worker thread is not a daemon thread., +     * @throws NullPointerException     if either of {@code threadFactory} and {@code unit} is {@code null}, +     * @throws IllegalArgumentException if either of {@code tickDuration} and {@code ticksPerWheel} is &lt;= 0, +     */, +    public HashedWheelTimer(, +            ThreadFactory threadFactory,, +            long tickDuration, TimeUnit unit, int ticksPerWheel, boolean leakDetection) {, +        leak = leakDetection || !workerThread.isDaemon() ? leakDetector.open(this) : null;]