[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ClientUpgradeCodec.java, +import static io.netty.handler.codec.base64.Base64Dialect.URL_SAFE;, +import static io.netty.handler.codec.http2.Http2CodecUtil.HTTP_UPGRADE_PROTOCOL_NAME;, +import static io.netty.handler.codec.http2.Http2CodecUtil.HTTP_UPGRADE_SETTINGS_HEADER;, +import static io.netty.handler.codec.http2.Http2CodecUtil.SETTING_ENTRY_LENGTH;, +import static io.netty.handler.codec.http2.Http2CodecUtil.writeUnsignedInt;, +import static io.netty.handler.codec.http2.Http2CodecUtil.writeUnsignedShort;, +import static io.netty.util.CharsetUtil.UTF_8;, +import static io.netty.util.ReferenceCountUtil.release;, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +, +     * @param connectionHandler the HTTP/2 connection handler, +        this(null, connectionHandler);, +     * @param handlerName the name of the HTTP/2 connection handler to be used in the pipeline,, +     *                    or {@code null} to auto-generate the name, +     * @param connectionHandler the HTTP/2 connection handler, +    public Http2ClientUpgradeCodec(String handlerName, Http2ConnectionHandler connectionHandler) {, +        this.handlerName = handlerName;, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ClientUpgradeCodec.java, +import static io.netty.handler.codec.base64.Base64Dialect.URL_SAFE;, +import static io.netty.handler.codec.http2.Http2CodecUtil.HTTP_UPGRADE_PROTOCOL_NAME;, +import static io.netty.handler.codec.http2.Http2CodecUtil.HTTP_UPGRADE_SETTINGS_HEADER;, +import static io.netty.handler.codec.http2.Http2CodecUtil.SETTING_ENTRY_LENGTH;, +import static io.netty.handler.codec.http2.Http2CodecUtil.writeUnsignedInt;, +import static io.netty.handler.codec.http2.Http2CodecUtil.writeUnsignedShort;, +import static io.netty.util.CharsetUtil.UTF_8;, +import static io.netty.util.ReferenceCountUtil.release;, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +, +     * @param connectionHandler the HTTP/2 connection handler, +        this(null, connectionHandler);, +     * @param handlerName the name of the HTTP/2 connection handler to be used in the pipeline,, +     *                    or {@code null} to auto-generate the name, +     * @param connectionHandler the HTTP/2 connection handler, +    public Http2ClientUpgradeCodec(String handlerName, Http2ConnectionHandler connectionHandler) {, +        this.handlerName = handlerName;, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ServerUpgradeCodec.java, +import static io.netty.handler.codec.base64.Base64Dialect.URL_SAFE;, +import static io.netty.handler.codec.http.HttpResponseStatus.BAD_REQUEST;, +import static io.netty.handler.codec.http2.Http2CodecUtil.FRAME_HEADER_LENGTH;, +import static io.netty.handler.codec.http2.Http2CodecUtil.HTTP_UPGRADE_PROTOCOL_NAME;, +import static io.netty.handler.codec.http2.Http2CodecUtil.HTTP_UPGRADE_SETTINGS_HEADER;, +import static io.netty.handler.codec.http2.Http2CodecUtil.writeFrameHeader;, +import static io.netty.handler.codec.http2.Http2FrameTypes.SETTINGS;, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +, +     * @param connectionHandler the HTTP/2 connection handler, +        this(null, connectionHandler);, +     * @param handlerName the name of the HTTP/2 connection handler to be used in the pipeline,, +     *                    or {@code null} to auto-generate the name, +     * @param connectionHandler the HTTP/2 connection handler, +        this.handlerName = handlerName;, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ClientUpgradeCodec.java, +import static io.netty.handler.codec.base64.Base64Dialect.URL_SAFE;, +import static io.netty.handler.codec.http2.Http2CodecUtil.HTTP_UPGRADE_PROTOCOL_NAME;, +import static io.netty.handler.codec.http2.Http2CodecUtil.HTTP_UPGRADE_SETTINGS_HEADER;, +import static io.netty.handler.codec.http2.Http2CodecUtil.SETTING_ENTRY_LENGTH;, +import static io.netty.handler.codec.http2.Http2CodecUtil.writeUnsignedInt;, +import static io.netty.handler.codec.http2.Http2CodecUtil.writeUnsignedShort;, +import static io.netty.util.CharsetUtil.UTF_8;, +import static io.netty.util.ReferenceCountUtil.release;, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +, +     * @param connectionHandler the HTTP/2 connection handler, +        this(null, connectionHandler);, +     * @param handlerName the name of the HTTP/2 connection handler to be used in the pipeline,, +     *                    or {@code null} to auto-generate the name, +     * @param connectionHandler the HTTP/2 connection handler, +    public Http2ClientUpgradeCodec(String handlerName, Http2ConnectionHandler connectionHandler) {, +        this.handlerName = handlerName;, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ServerUpgradeCodec.java, +import static io.netty.handler.codec.base64.Base64Dialect.URL_SAFE;, +import static io.netty.handler.codec.http.HttpResponseStatus.BAD_REQUEST;, +import static io.netty.handler.codec.http2.Http2CodecUtil.FRAME_HEADER_LENGTH;, +import static io.netty.handler.codec.http2.Http2CodecUtil.HTTP_UPGRADE_PROTOCOL_NAME;, +import static io.netty.handler.codec.http2.Http2CodecUtil.HTTP_UPGRADE_SETTINGS_HEADER;, +import static io.netty.handler.codec.http2.Http2CodecUtil.writeFrameHeader;, +import static io.netty.handler.codec.http2.Http2FrameTypes.SETTINGS;, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +, +     * @param connectionHandler the HTTP/2 connection handler, +        this(null, connectionHandler);, +     * @param handlerName the name of the HTTP/2 connection handler to be used in the pipeline,, +     *                    or {@code null} to auto-generate the name, +     * @param connectionHandler the HTTP/2 connection handler, +        this.handlerName = handlerName;, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2FrameRoundtripTest.java, +import org.junit.After;, +import org.junit.Before;, +import org.junit.Test;, +import org.mockito.Mock;, +import org.mockito.MockitoAnnotations;, +import org.mockito.invocation.InvocationOnMock;, +import org.mockito.stubbing.Answer;, +import static io.netty.handler.codec.http2.Http2TestUtil.as;, +import static io.netty.handler.codec.http2.Http2TestUtil.randomString;, +import static io.netty.handler.codec.http2.Http2TestUtil.runInChannel;, +import static io.netty.util.CharsetUtil.UTF_8;, +import static java.util.concurrent.TimeUnit.SECONDS;, +import static org.junit.Assert.assertEquals;]