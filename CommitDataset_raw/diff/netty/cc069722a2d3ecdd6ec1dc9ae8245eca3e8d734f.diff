[+++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +        ByteBuf dst = allocBuffer(length);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +        ByteBuf dst = allocBuffer(length);, +++ b/buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java, +    @Test, +    public void testAllocatorIsSameWhenCopy() {, +        testAllocatorIsSameWhenCopy(false);, +    }, +, +    @Test, +    public void testAllocatorIsSameWhenCopyUsingIndexAndLength() {, +        testAllocatorIsSameWhenCopy(true);, +    }, +, +    private void testAllocatorIsSameWhenCopy(boolean withIndexAndLength) {, +        ByteBuf buffer = newBuffer(8);, +        buffer.writeZero(4);, +        ByteBuf copy = withIndexAndLength ? buffer.copy(0, 4) : buffer.copy();, +        assertEquals(buffer, copy);, +        assertEquals(buffer.isDirect(), copy.isDirect());, +        assertSame(buffer.alloc(), copy.alloc());, +        buffer.release();, +        copy.release();, +    }, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +        ByteBuf dst = allocBuffer(length);, +++ b/buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java, +    @Test, +    public void testAllocatorIsSameWhenCopy() {, +        testAllocatorIsSameWhenCopy(false);, +    }, +, +    @Test, +    public void testAllocatorIsSameWhenCopyUsingIndexAndLength() {, +        testAllocatorIsSameWhenCopy(true);, +    }, +, +    private void testAllocatorIsSameWhenCopy(boolean withIndexAndLength) {, +        ByteBuf buffer = newBuffer(8);, +        buffer.writeZero(4);, +        ByteBuf copy = withIndexAndLength ? buffer.copy(0, 4) : buffer.copy();, +        assertEquals(buffer, copy);, +        assertEquals(buffer.isDirect(), copy.isDirect());, +        assertSame(buffer.alloc(), copy.alloc());, +        buffer.release();, +        copy.release();, +    }, +++ b/buffer/src/test/java/io/netty/buffer/ConsolidationTest.java, +import io.netty.util.CharsetUtil;, +        ByteBuf currentBuffer = wrappedBuffer(wrappedBuffer("a".getBytes(CharsetUtil.US_ASCII)),, +                wrappedBuffer("=".getBytes(CharsetUtil.US_ASCII)));, +        currentBuffer = wrappedBuffer(currentBuffer, wrappedBuffer("1".getBytes(CharsetUtil.US_ASCII)),, +                wrappedBuffer("&".getBytes(CharsetUtil.US_ASCII)));, +        String s = copy.toString(CharsetUtil.US_ASCII);, +        ByteBuf currentBuffer = wrappedBuffer(wrappedBuffer("a".getBytes(CharsetUtil.US_ASCII)),, +                wrappedBuffer("=".getBytes(CharsetUtil.US_ASCII)));, +        currentBuffer = wrappedBuffer(currentBuffer, wrappedBuffer("1".getBytes(CharsetUtil.US_ASCII)),, +                wrappedBuffer("&".getBytes(CharsetUtil.US_ASCII)));, +        currentBuffer = wrappedBuffer(currentBuffer, wrappedBuffer("b".getBytes(CharsetUtil.US_ASCII)),, +                wrappedBuffer("=".getBytes(CharsetUtil.US_ASCII)));, +        currentBuffer = wrappedBuffer(currentBuffer, wrappedBuffer("2".getBytes(CharsetUtil.US_ASCII)),, +                wrappedBuffer("&".getBytes(CharsetUtil.US_ASCII)));, +        currentBuffer = wrappedBuffer(currentBuffer, wrappedBuffer("c".getBytes(CharsetUtil.US_ASCII)),, +                wrappedBuffer("=".getBytes(CharsetUtil.US_ASCII)));, +        currentBuffer = wrappedBuffer(currentBuffer, wrappedBuffer("3".getBytes(CharsetUtil.US_ASCII)),, +                wrappedBuffer("&".getBytes(CharsetUtil.US_ASCII)));, +        currentBuffer = wrappedBuffer(currentBuffer, wrappedBuffer("d".getBytes(CharsetUtil.US_ASCII)),, +                wrappedBuffer("=".getBytes(CharsetUtil.US_ASCII)));, +        currentBuffer = wrappedBuffer(currentBuffer, wrappedBuffer("4".getBytes(CharsetUtil.US_ASCII)),, +                wrappedBuffer("&".getBytes(CharsetUtil.US_ASCII)));, +        currentBuffer = wrappedBuffer(currentBuffer, wrappedBuffer("e".getBytes(CharsetUtil.US_ASCII)),, +                wrappedBuffer("=".getBytes(CharsetUtil.US_ASCII)));, +        currentBuffer = wrappedBuffer(currentBuffer, wrappedBuffer("5".getBytes(CharsetUtil.US_ASCII)),, +                wrappedBuffer("&".getBytes(CharsetUtil.US_ASCII)));, +        String s = copy.toString(CharsetUtil.US_ASCII);]