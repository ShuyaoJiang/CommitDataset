[+++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, + * A helper class which initializes a {@link Channel}.  This class provides, + * the common data structure for its subclasses which implement an actual, + * channel initialization from the common data structure.  Please refer to, + * {@link ClientBootstrap} and {@link ServerBootstrap} for client side and, +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, + * A helper class which initializes a {@link Channel}.  This class provides, + * the common data structure for its subclasses which implement an actual, + * channel initialization from the common data structure.  Please refer to, + * {@link ClientBootstrap} and {@link ServerBootstrap} for client side and, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, + * A helper class which creates a new client-side {@link Channel} and make a, + * connection attempt., +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, + * A helper class which initializes a {@link Channel}.  This class provides, + * the common data structure for its subclasses which implement an actual, + * channel initialization from the common data structure.  Please refer to, + * {@link ClientBootstrap} and {@link ServerBootstrap} for client side and, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, + * A helper class which creates a new client-side {@link Channel} and make a, + * connection attempt., +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, + * A helper class which creates a new server-side {@link Channel} and accept, + * incoming connections., +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, + * A helper class which initializes a {@link Channel}.  This class provides, + * the common data structure for its subclasses which implement an actual, + * channel initialization from the common data structure.  Please refer to, + * {@link ClientBootstrap} and {@link ServerBootstrap} for client side and, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, + * A helper class which creates a new client-side {@link Channel} and make a, + * connection attempt., +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, + * A helper class which creates a new server-side {@link Channel} and accept, + * incoming connections., +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, + * A skeletal implementation of a buffer., +    /**, +     * Throws an {@link IndexOutOfBoundsException} is the current, +     * {@linkplain #readableBytes() readable bytes} of this buffer is less, +     * than the specified value., +     */, +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, + * A helper class which initializes a {@link Channel}.  This class provides, + * the common data structure for its subclasses which implement an actual, + * channel initialization from the common data structure.  Please refer to, + * {@link ClientBootstrap} and {@link ServerBootstrap} for client side and, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, + * A helper class which creates a new client-side {@link Channel} and make a, + * connection attempt., +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, + * A helper class which creates a new server-side {@link Channel} and accept, + * incoming connections., +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, + * A skeletal implementation of a buffer., +    /**, +     * Throws an {@link IndexOutOfBoundsException} is the current, +     * {@linkplain #readableBytes() readable bytes} of this buffer is less, +     * than the specified value., +     */, +++ b/src/main/java/org/jboss/netty/buffer/BigEndianHeapChannelBuffer.java, + * A big-endian Java heap buffer.  It is recommended to use {@link ChannelBuffers#buffer(int)}, + * and {@link ChannelBuffers#wrappedBuffer(byte[])} instead of calling the, + * constructor explicitly., +    /**, +     * Creates a new big-endian heap buffer with a newly allocated byte array., +     *, +     * @param length the length of the new byte array, +     */, +    /**, +     * Creates a new big-endian heap buffer with an existing byte array., +     *, +     * @param array the byte array to wrap, +     */, +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, + * A helper class which initializes a {@link Channel}.  This class provides, + * the common data structure for its subclasses which implement an actual, + * channel initialization from the common data structure.  Please refer to, + * {@link ClientBootstrap} and {@link ServerBootstrap} for client side and, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, + * A helper class which creates a new client-side {@link Channel} and make a, + * connection attempt., +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, + * A helper class which creates a new server-side {@link Channel} and accept, + * incoming connections., +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, + * A skeletal implementation of a buffer., +    /**, +     * Throws an {@link IndexOutOfBoundsException} is the current, +     * {@linkplain #readableBytes() readable bytes} of this buffer is less, +     * than the specified value., +     */, +++ b/src/main/java/org/jboss/netty/buffer/BigEndianHeapChannelBuffer.java, + * A big-endian Java heap buffer.  It is recommended to use {@link ChannelBuffers#buffer(int)}, + * and {@link ChannelBuffers#wrappedBuffer(byte[])} instead of calling the, + * constructor explicitly., +    /**, +     * Creates a new big-endian heap buffer with a newly allocated byte array., +     *, +     * @param length the length of the new byte array]