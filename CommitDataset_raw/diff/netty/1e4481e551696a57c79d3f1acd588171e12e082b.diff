[+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannelConfig.java, +                EpollChannelOption.SO_REUSEPORT, EpollChannelOption.IP_FREEBIND, EpollChannelOption.IP_TRANSPARENT,, +        if (option == EpollChannelOption.IP_FREEBIND) {, +            return (T) Boolean.valueOf(isFreeBind());, +        }, +        } else if (option == EpollChannelOption.IP_FREEBIND) {, +            setFreeBind((Boolean) value);, +     * Returns {@code true} if <a href="http://man7.org/linux/man-pages/man7/ip.7.html">IP_FREEBIND</a> is enabled,, +     * {@code false} otherwise., +     */, +    public boolean isFreeBind() {, +        try {, +            return ((EpollDatagramChannel) channel).socket.isIpFreeBind();, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +    /**, +     * If {@code true} is used <a href="http://man7.org/linux/man-pages/man7/ip.7.html">IP_FREEBIND</a> is enabled,, +     * {@code false} for disable it. Default is disabled., +     */, +    public EpollDatagramChannelConfig setFreeBind(boolean freeBind) {, +        try {, +            ((EpollDatagramChannel) channel).socket.setIpFreeBind(freeBind);, +            return this;, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +    /**, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannelConfig.java, +                EpollChannelOption.SO_REUSEPORT, EpollChannelOption.IP_FREEBIND, EpollChannelOption.IP_TRANSPARENT,, +        if (option == EpollChannelOption.IP_FREEBIND) {, +            return (T) Boolean.valueOf(isFreeBind());, +        }, +        } else if (option == EpollChannelOption.IP_FREEBIND) {, +            setFreeBind((Boolean) value);, +     * Returns {@code true} if <a href="http://man7.org/linux/man-pages/man7/ip.7.html">IP_FREEBIND</a> is enabled,, +     * {@code false} otherwise., +     */, +    public boolean isFreeBind() {, +        try {, +            return ((EpollDatagramChannel) channel).socket.isIpFreeBind();, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +    /**, +     * If {@code true} is used <a href="http://man7.org/linux/man-pages/man7/ip.7.html">IP_FREEBIND</a> is enabled,, +     * {@code false} for disable it. Default is disabled., +     */, +    public EpollDatagramChannelConfig setFreeBind(boolean freeBind) {, +        try {, +            ((EpollDatagramChannel) channel).socket.setIpFreeBind(freeBind);, +            return this;, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +    /**, +++ b/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramChannelConfigTest.java, +/*, + * Copyright 2019 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.channel.epoll;, +, +import org.junit.Test;, +, +import static org.junit.Assert.assertTrue;, +, +public class EpollDatagramChannelConfigTest {, +, +    @Test, +    public void testIpFreeBind() throws Exception {, +        Epoll.ensureAvailability();, +        EpollDatagramChannel channel = new EpollDatagramChannel();, +        assertTrue(channel.config().setOption(EpollChannelOption.IP_FREEBIND, true));, +        assertTrue(channel.config().getOption(EpollChannelOption.IP_FREEBIND));, +        channel.fd().close();, +    }, +}]