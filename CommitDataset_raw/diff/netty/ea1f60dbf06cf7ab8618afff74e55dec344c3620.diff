[+++ b/common/src/main/java/io/netty/util/DomainMappingBuilder.java, +        map = new LinkedHashMap<String, V>(initialCapacity);, +        return new ImmutableDomainNameMapping<V>(defaultValue, map);, +        private final Map<String, V> map;, +            final Map<String, V> mapCopy = new LinkedHashMap<String, V>(map.size());, +                final String hostname = normalizeHostname(mapping.getKey());, +                final V value = mapping.getValue();, +                domainNamePatterns[index] = hostname;, +                values[index] = value;, +                mapCopy.put(hostname, value);, +, +            this.map = Collections.unmodifiableMap(mapCopy);, +        public Map<String, V> asMap() {, +            return map;, +++ b/common/src/main/java/io/netty/util/DomainMappingBuilder.java, +        map = new LinkedHashMap<String, V>(initialCapacity);, +        return new ImmutableDomainNameMapping<V>(defaultValue, map);, +        private final Map<String, V> map;, +            final Map<String, V> mapCopy = new LinkedHashMap<String, V>(map.size());, +                final String hostname = normalizeHostname(mapping.getKey());, +                final V value = mapping.getValue();, +                domainNamePatterns[index] = hostname;, +                values[index] = value;, +                mapCopy.put(hostname, value);, +, +            this.map = Collections.unmodifiableMap(mapCopy);, +        public Map<String, V> asMap() {, +            return map;, +++ b/common/src/main/java/io/netty/util/DomainNameMapping.java, +    public Map<String, V> asMap() {, +        return Collections.unmodifiableMap(map);, +++ b/common/src/main/java/io/netty/util/DomainMappingBuilder.java, +        map = new LinkedHashMap<String, V>(initialCapacity);, +        return new ImmutableDomainNameMapping<V>(defaultValue, map);, +        private final Map<String, V> map;, +            final Map<String, V> mapCopy = new LinkedHashMap<String, V>(map.size());, +                final String hostname = normalizeHostname(mapping.getKey());, +                final V value = mapping.getValue();, +                domainNamePatterns[index] = hostname;, +                values[index] = value;, +                mapCopy.put(hostname, value);, +, +            this.map = Collections.unmodifiableMap(mapCopy);, +        public Map<String, V> asMap() {, +            return map;, +++ b/common/src/main/java/io/netty/util/DomainNameMapping.java, +    public Map<String, V> asMap() {, +        return Collections.unmodifiableMap(map);, +++ b/common/src/test/java/io/netty/util/DomainNameMappingTest.java, +import java.util.Map;, +, +    public void testAsMap() {, +        Map<String, String> entries = mapping.asMap();, +    public void testAsMapWithImmutableDomainNameMapping() {, +        Map<String, String> entries = mapping.asMap();]