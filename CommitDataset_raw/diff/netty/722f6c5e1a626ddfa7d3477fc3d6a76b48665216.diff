[+++ b/common/src/main/java/io/netty/util/concurrent/MultithreadEventExecutorGroup.java, +    private final EventExecutorChooser chooser;, +        if (isPowerOfTwo(children.length)) {, +            chooser = new PowerOfTwoEventExecutorChooser();, +        } else {, +            chooser = new GenericEventExecutorChooser();, +        }, +, +        return chooser.next();, +, +    private static boolean isPowerOfTwo(int val) {, +        return (val & -val) == val;, +    }, +, +    private interface EventExecutorChooser {, +        EventExecutor next();, +    }, +, +    private final class PowerOfTwoEventExecutorChooser implements EventExecutorChooser {, +        @Override, +        public EventExecutor next() {, +            return children[childIndex.getAndIncrement() & children.length - 1];, +        }, +    }, +, +    private final class GenericEventExecutorChooser implements EventExecutorChooser {, +        @Override, +        public EventExecutor next() {, +            return children[Math.abs(childIndex.getAndIncrement() % children.length)];, +        }, +    }]