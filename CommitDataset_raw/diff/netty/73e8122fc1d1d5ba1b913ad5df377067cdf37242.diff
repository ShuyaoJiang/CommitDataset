[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2MultiplexCodecBuilder.java, +        if ((handler instanceof ChannelHandlerAdapter && !((ChannelHandlerAdapter) handler).isSharable()) &&, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2MultiplexCodecBuilder.java, +        if ((handler instanceof ChannelHandlerAdapter && !((ChannelHandlerAdapter) handler).isSharable()) &&, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2MultiplexCodecBuilderTest.java, +import io.netty.channel.ChannelHandlerAdapter;, +, +    private static class SharableChannelHandler1 extends ChannelHandlerAdapter {, +        @Override, +        public boolean isSharable() {, +            return true;, +        }, +    }, +, +    @Sharable, +    private static class SharableChannelHandler2 extends ChannelHandlerAdapter {, +    }, +, +    private static class UnsharableChannelHandler extends ChannelHandlerAdapter {, +        @Override, +        public boolean isSharable() {, +            return false;, +        }, +    }, +, +    @Test, +    public void testSharableCheck() {, +        assertNotNull(Http2MultiplexCodecBuilder.forServer(new SharableChannelHandler1()));, +        assertNotNull(Http2MultiplexCodecBuilder.forServer(new SharableChannelHandler2()));, +    }, +, +    @Test(expected = IllegalArgumentException.class), +    public void testUnsharableHandler() {, +        Http2MultiplexCodecBuilder.forServer(new UnsharableChannelHandler());, +    }]