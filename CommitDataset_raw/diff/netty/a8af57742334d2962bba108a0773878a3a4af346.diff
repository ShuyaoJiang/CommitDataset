[+++ b/codec/src/main/java/io/netty/handler/codec/DelimiterBasedFrameDecoder.java, +    protected final void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +    /**, +     * Create a frame out of the {@link ByteBuf} and return it., +     *, +     * @param   ctx             the {@link ChannelHandlerContext} which this {@link ByteToMessageDecoder} belongs to, +     * @param   buffer          the {@link ByteBuf} from which to read data, +     * @return  frame           the {@link ByteBuf} which represent the frame or {@code null} if no frame could, +     *                          be created., +     */, +++ b/codec/src/main/java/io/netty/handler/codec/DelimiterBasedFrameDecoder.java, +    protected final void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +    /**, +     * Create a frame out of the {@link ByteBuf} and return it., +     *, +     * @param   ctx             the {@link ChannelHandlerContext} which this {@link ByteToMessageDecoder} belongs to, +     * @param   buffer          the {@link ByteBuf} from which to read data, +     * @return  frame           the {@link ByteBuf} which represent the frame or {@code null} if no frame could, +     *                          be created., +     */, +++ b/codec/src/main/java/io/netty/handler/codec/FixedLengthFrameDecoder.java, +    protected final void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +    /**, +     * Create a frame out of the {@link ByteBuf} and return it., +     *, +     * @param   ctx             the {@link ChannelHandlerContext} which this {@link ByteToMessageDecoder} belongs to, +     * @param   in              the {@link ByteBuf} from which to read data, +     * @return  frame           the {@link ByteBuf} which represent the frame or {@code null} if no frame could, +     *                          be created., +     */, +++ b/codec/src/main/java/io/netty/handler/codec/DelimiterBasedFrameDecoder.java, +    protected final void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +    /**, +     * Create a frame out of the {@link ByteBuf} and return it., +     *, +     * @param   ctx             the {@link ChannelHandlerContext} which this {@link ByteToMessageDecoder} belongs to, +     * @param   buffer          the {@link ByteBuf} from which to read data, +     * @return  frame           the {@link ByteBuf} which represent the frame or {@code null} if no frame could, +     *                          be created., +     */, +++ b/codec/src/main/java/io/netty/handler/codec/FixedLengthFrameDecoder.java, +    protected final void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +    /**, +     * Create a frame out of the {@link ByteBuf} and return it., +     *, +     * @param   ctx             the {@link ChannelHandlerContext} which this {@link ByteToMessageDecoder} belongs to, +     * @param   in              the {@link ByteBuf} from which to read data, +     * @return  frame           the {@link ByteBuf} which represent the frame or {@code null} if no frame could, +     *                          be created., +     */, +++ b/codec/src/main/java/io/netty/handler/codec/LengthFieldBasedFrameDecoder.java, +    protected final void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +    /**, +     * Create a frame out of the {@link ByteBuf} and return it., +     *, +     * @param   ctx             the {@link ChannelHandlerContext} which this {@link ByteToMessageDecoder} belongs to, +     * @param   in              the {@link ByteBuf} from which to read data, +     * @return  frame           the {@link ByteBuf} which represent the frame or {@code null} if no frame could, +     *                          be created., +     */, +++ b/codec/src/main/java/io/netty/handler/codec/DelimiterBasedFrameDecoder.java, +    protected final void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +    /**, +     * Create a frame out of the {@link ByteBuf} and return it., +     *, +     * @param   ctx             the {@link ChannelHandlerContext} which this {@link ByteToMessageDecoder} belongs to, +     * @param   buffer          the {@link ByteBuf} from which to read data, +     * @return  frame           the {@link ByteBuf} which represent the frame or {@code null} if no frame could, +     *                          be created., +     */, +++ b/codec/src/main/java/io/netty/handler/codec/FixedLengthFrameDecoder.java, +    protected final void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +    /**, +     * Create a frame out of the {@link ByteBuf} and return it., +     *, +     * @param   ctx             the {@link ChannelHandlerContext} which this {@link ByteToMessageDecoder} belongs to, +     * @param   in              the {@link ByteBuf} from which to read data, +     * @return  frame           the {@link ByteBuf} which represent the frame or {@code null} if no frame could, +     *                          be created., +     */, +++ b/codec/src/main/java/io/netty/handler/codec/LengthFieldBasedFrameDecoder.java, +    protected final void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +    /**, +     * Create a frame out of the {@link ByteBuf} and return it., +     *, +     * @param   ctx             the {@link ChannelHandlerContext} which this {@link ByteToMessageDecoder} belongs to, +     * @param   in              the {@link ByteBuf} from which to read data, +     * @return  frame           the {@link ByteBuf} which represent the frame or {@code null} if no frame could, +     *                          be created., +     */, +++ b/codec/src/main/java/io/netty/handler/codec/LineBasedFrameDecoder.java, +    protected final void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +    /**, +     * Create a frame out of the {@link ByteBuf} and return it., +     *, +     * @param   ctx             the {@link ChannelHandlerContext} which this {@link ByteToMessageDecoder} belongs to, +     * @param   buffer          the {@link ByteBuf} from which to read data, +     * @return  frame           the {@link ByteBuf} which represent the frame or {@code null} if no frame could, +     *                          be created., +     */]