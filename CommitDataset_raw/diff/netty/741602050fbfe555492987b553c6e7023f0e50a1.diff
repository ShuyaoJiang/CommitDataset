[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientUpgradeHandler.java, +        request.headers().add(HttpHeaderNames.CONNECTION, builder.toString());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientUpgradeHandler.java, +        request.headers().add(HttpHeaderNames.CONNECTION, builder.toString());, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpClientUpgradeHandlerTest.java, +import java.util.List;, +, +    @Test, +    public void dontStripConnectionHeaders() {, +        HttpClientUpgradeHandler.SourceCodec sourceCodec = new FakeSourceCodec();, +        HttpClientUpgradeHandler.UpgradeCodec upgradeCodec = new FakeUpgradeCodec();, +        HttpClientUpgradeHandler handler = new HttpClientUpgradeHandler(sourceCodec, upgradeCodec, 1024);, +        UserEventCatcher catcher = new UserEventCatcher();, +        EmbeddedChannel channel = new EmbeddedChannel(catcher);, +        channel.pipeline().addFirst("upgrade", handler);, +, +        DefaultFullHttpRequest request = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.GET, "netty.io");, +        request.headers().add("connection", "extra");, +        request.headers().add("extra", "value");, +        assertTrue(channel.writeOutbound(request));, +        FullHttpRequest readRequest = channel.readOutbound();, +, +        List<String> connectionHeaders = readRequest.headers().getAll("connection");, +        assertTrue(connectionHeaders.contains("extra"));, +        assertTrue(readRequest.release());, +        assertFalse(channel.finish());, +    }]