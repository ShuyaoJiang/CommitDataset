[+++ /dev/null, +++ /dev/null, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/SctpNotificationHandler.java, + * {@link Notification} user event in the {@link ChannelPipeline} of a {@link SctpChannel}., +        fireEvent(notification);, +        fireEvent(notification);, +        fireEvent(notification);, +        fireEvent(notification);, +    private void fireEvent(Notification notification) {, +        sctpChannel.pipeline().fireUserEventTriggered(notification);, +++ /dev/null, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/SctpNotificationHandler.java, + * {@link Notification} user event in the {@link ChannelPipeline} of a {@link SctpChannel}., +        fireEvent(notification);, +        fireEvent(notification);, +        fireEvent(notification);, +        fireEvent(notification);, +    private void fireEvent(Notification notification) {, +        sctpChannel.pipeline().fireUserEventTriggered(notification);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpChannel.java, +import io.netty.channel.RecvByteBufAllocator;, +    private RecvByteBufAllocator.Handle allocHandle;, +, +, +        RecvByteBufAllocator.Handle allocHandle = this.allocHandle;, +        if (allocHandle == null) {, +            this.allocHandle = allocHandle = config().getRecvByteBufAllocator().newHandle();, +        }, +        ByteBuf buffer = allocHandle.allocate(config().getAllocator());, +            int bytesRead = buffer.readableBytes();, +            allocHandle.record(bytesRead);, +++ /dev/null, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/SctpNotificationHandler.java, + * {@link Notification} user event in the {@link ChannelPipeline} of a {@link SctpChannel}., +        fireEvent(notification);, +        fireEvent(notification);, +        fireEvent(notification);, +        fireEvent(notification);, +    private void fireEvent(Notification notification) {, +        sctpChannel.pipeline().fireUserEventTriggered(notification);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpChannel.java, +import io.netty.channel.RecvByteBufAllocator;, +    private RecvByteBufAllocator.Handle allocHandle;, +, +, +        RecvByteBufAllocator.Handle allocHandle = this.allocHandle;, +        if (allocHandle == null) {, +            this.allocHandle = allocHandle = config().getRecvByteBufAllocator().newHandle();, +        }, +        ByteBuf buffer = allocHandle.allocate(config().getAllocator());, +            int bytesRead = buffer.readableBytes();, +            allocHandle.record(bytesRead);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/oio/OioSctpChannel.java, +import io.netty.channel.RecvByteBufAllocator;, +    private RecvByteBufAllocator.Handle allocHandle;, +, +                RecvByteBufAllocator.Handle allocHandle = this.allocHandle;, +                if (allocHandle == null) {, +                    this.allocHandle = allocHandle = config().getRecvByteBufAllocator().newHandle();, +                }, +                ByteBuf buffer = allocHandle.allocate(config().getAllocator());, +                    int bytesRead = buffer.readableBytes();, +                    allocHandle.record(bytesRead);, +++ /dev/null, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/SctpNotificationHandler.java, + * {@link Notification} user event in the {@link ChannelPipeline} of a {@link SctpChannel}., +        fireEvent(notification);, +        fireEvent(notification);, +        fireEvent(notification);, +        fireEvent(notification);, +    private void fireEvent(Notification notification) {, +        sctpChannel.pipeline().fireUserEventTriggered(notification);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpChannel.java, +import io.netty.channel.RecvByteBufAllocator;, +    private RecvByteBufAllocator.Handle allocHandle;, +, +, +        RecvByteBufAllocator.Handle allocHandle = this.allocHandle;, +        if (allocHandle == null) {, +            this.allocHandle = allocHandle = config().getRecvByteBufAllocator().newHandle();, +        }, +        ByteBuf buffer = allocHandle.allocate(config().getAllocator());, +            int bytesRead = buffer.readableBytes();, +            allocHandle.record(bytesRead);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/oio/OioSctpChannel.java, +import io.netty.channel.RecvByteBufAllocator;, +    private RecvByteBufAllocator.Handle allocHandle;, +, +                RecvByteBufAllocator.Handle allocHandle = this.allocHandle;, +                if (allocHandle == null) {, +                    this.allocHandle = allocHandle = config().getRecvByteBufAllocator().newHandle();, +                }, +                ByteBuf buffer = allocHandle.allocate(config().getAllocator());, +                    int bytesRead = buffer.readableBytes();, +                    allocHandle.record(bytesRead);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/oio/OioSctpServerChannel.java, +import io.netty.util.ReferenceCountUtil;, +            ReferenceCountUtil.release(msgs.get(i));]