[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java, +        if (connection.goAwayReceived() && connection.local().lastStreamKnownByPeer() < lastStreamId) {, +            throw connectionError(PROTOCOL_ERROR, "lastStreamId MUST NOT increase. Current value: %d new value: %d",, +                    connection.local().lastStreamKnownByPeer(), lastStreamId);, +        }, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java, +        if (connection.goAwayReceived() && connection.local().lastStreamKnownByPeer() < lastStreamId) {, +            throw connectionError(PROTOCOL_ERROR, "lastStreamId MUST NOT increase. Current value: %d new value: %d",, +                    connection.local().lastStreamKnownByPeer(), lastStreamId);, +        }, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoderTest.java, +    public void goawayIncreasedLastStreamIdShouldThrow() throws Exception {, +        when(local.lastStreamKnownByPeer()).thenReturn(1);, +        when(connection.goAwayReceived()).thenReturn(true);, +        decode().onGoAwayRead(ctx, 3, 2L, EMPTY_BUFFER);, +    }, +, +    @Test(expected = Http2Exception.class)]