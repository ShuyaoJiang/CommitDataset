[+++ b/codec/src/main/java/io/netty/handler/codec/LengthFieldBasedFrameDecoder.java, +        long frameLength = getUnadjustedFrameLength(in, actualLengthFieldOffset, lengthFieldLength, byteOrder);, +    /**, +     * Decodes the specified region of the buffer into an unadjusted frame length.  The default implementation is, +     * capable of decoding the specified region into an unsigned 8/16/24/32/64 bit integer.  Override this method to, +     * decode the length field encoded differently.  Note that this method must not modify the state of the specified, +     * buffer (e.g. {@code readerIndex}, {@code writerIndex}, and the content of the buffer.), +     *, +     * @throws DecoderException if failed to decode the specified region, +     */, +    protected long getUnadjustedFrameLength(ByteBuf buf, int offset, int length, ByteOrder order) {, +        buf = buf.order(order);, +        switch (length) {, +            frameLength = buf.getUnsignedByte(offset);, +            frameLength = buf.getUnsignedShort(offset);, +            frameLength = buf.getUnsignedMedium(offset);, +            frameLength = buf.getUnsignedInt(offset);, +            frameLength = buf.getLong(offset);, +            throw new DecoderException(, +                    "unsupported lengthFieldLength: " + lengthFieldLength + " (expected: 1, 2, 3, 4, or 8)");]