[+++ b/transport/src/test/java/io/netty/channel/nio/NioEventLoopTest.java, +import java.util.concurrent.CountDownLatch;, +    public void testRebuildSelector() {, +, +    @Test, +    public void testInterruptEventLoopThread() throws Exception {, +        EventLoopGroup group = new NioEventLoopGroup(1);, +        final NioEventLoop loop = (NioEventLoop) group.next();, +        try {, +            Selector selector = loop.unwrappedSelector();, +            assertTrue(selector.isOpen());, +, +            loop.submit(new Runnable() {, +                @Override, +                public void run() {, +                    // Interrupt the thread which should not end-up in a busy spin and, +                    // so the selector should not have been rebuild., +                    Thread.currentThread().interrupt();, +                }, +            }).syncUninterruptibly();, +, +            assertTrue(selector.isOpen());, +, +            final CountDownLatch latch = new CountDownLatch(2);, +            loop.submit(new Runnable() {, +                @Override, +                public void run() {, +                    latch.countDown();, +                }, +            }).syncUninterruptibly();, +, +            loop.schedule(new Runnable() {, +                @Override, +                public void run() {, +                    latch.countDown();, +                }, +            }, 2, TimeUnit.SECONDS).syncUninterruptibly();, +, +            latch.await();, +, +            assertSame(selector, loop.unwrappedSelector());, +            assertTrue(selector.isOpen());, +        } finally {, +            group.shutdownGracefully();, +        }, +    }]