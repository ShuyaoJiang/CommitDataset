[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/DirectBufferPool.java, +    private static final int preallocatedBufferCapacity = 128 * 1024;, +    private ByteBuffer preallocatedBuffer;, +        dst.mark();, +        dst.reset();, +        ByteBuffer preallocatedBuffer = this.preallocatedBuffer;, +        if (preallocatedBuffer == null) {, +            if (size < preallocatedBufferCapacity) {, +                return preallocateAndAcquire(size);, +            } else {, +                return ByteBuffer.allocateDirect(size);, +        if (preallocatedBuffer.remaining() < size) {, +            if (size > preallocatedBufferCapacity) {, +                return ByteBuffer.allocateDirect(size);, +            } else {, +                return preallocateAndAcquire(size);, +        } else {, +            int nextPos = preallocatedBuffer.position() + size;, +            ByteBuffer x = preallocatedBuffer.duplicate();, +            preallocatedBuffer.position(nextPos);, +            x.limit(nextPos);, +            return x;, +    private final ByteBuffer preallocateAndAcquire(int size) {, +        ByteBuffer preallocatedBuffer = this.preallocatedBuffer =, +            ByteBuffer.allocateDirect(preallocatedBufferCapacity);, +        ByteBuffer x = preallocatedBuffer.duplicate();, +        x.limit(size);, +        preallocatedBuffer.position(size);, +        return x;, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/DirectBufferPool.java, +    private static final int preallocatedBufferCapacity = 128 * 1024;, +    private ByteBuffer preallocatedBuffer;, +        dst.mark();, +        dst.reset();, +        ByteBuffer preallocatedBuffer = this.preallocatedBuffer;, +        if (preallocatedBuffer == null) {, +            if (size < preallocatedBufferCapacity) {, +                return preallocateAndAcquire(size);, +            } else {, +                return ByteBuffer.allocateDirect(size);, +        if (preallocatedBuffer.remaining() < size) {, +            if (size > preallocatedBufferCapacity) {, +                return ByteBuffer.allocateDirect(size);, +            } else {, +                return preallocateAndAcquire(size);, +        } else {, +            int nextPos = preallocatedBuffer.position() + size;, +            ByteBuffer x = preallocatedBuffer.duplicate();, +            preallocatedBuffer.position(nextPos);, +            x.limit(nextPos);, +            return x;, +    private final ByteBuffer preallocateAndAcquire(int size) {, +        ByteBuffer preallocatedBuffer = this.preallocatedBuffer =, +            ByteBuffer.allocateDirect(preallocatedBufferCapacity);, +        ByteBuffer x = preallocatedBuffer.duplicate();, +        x.limit(size);, +        preallocatedBuffer.position(size);, +        return x;, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramChannel.java, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/DirectBufferPool.java, +    private static final int preallocatedBufferCapacity = 128 * 1024;, +    private ByteBuffer preallocatedBuffer;, +        dst.mark();, +        dst.reset();, +        ByteBuffer preallocatedBuffer = this.preallocatedBuffer;, +        if (preallocatedBuffer == null) {, +            if (size < preallocatedBufferCapacity) {, +                return preallocateAndAcquire(size);, +            } else {, +                return ByteBuffer.allocateDirect(size);, +        if (preallocatedBuffer.remaining() < size) {, +            if (size > preallocatedBufferCapacity) {, +                return ByteBuffer.allocateDirect(size);, +            } else {, +                return preallocateAndAcquire(size);, +        } else {, +            int nextPos = preallocatedBuffer.position() + size;, +            ByteBuffer x = preallocatedBuffer.duplicate();, +            preallocatedBuffer.position(nextPos);, +            x.limit(nextPos);, +            return x;, +    private final ByteBuffer preallocateAndAcquire(int size) {, +        ByteBuffer preallocatedBuffer = this.preallocatedBuffer =, +            ByteBuffer.allocateDirect(preallocatedBufferCapacity);, +        ByteBuffer x = preallocatedBuffer.duplicate();, +        x.limit(size);, +        preallocatedBuffer.position(size);, +        return x;, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramChannel.java, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramWorker.java, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/DirectBufferPool.java, +    private static final int preallocatedBufferCapacity = 128 * 1024;, +    private ByteBuffer preallocatedBuffer;, +        dst.mark();, +        dst.reset();, +        ByteBuffer preallocatedBuffer = this.preallocatedBuffer;, +        if (preallocatedBuffer == null) {, +            if (size < preallocatedBufferCapacity) {, +                return preallocateAndAcquire(size);, +            } else {]