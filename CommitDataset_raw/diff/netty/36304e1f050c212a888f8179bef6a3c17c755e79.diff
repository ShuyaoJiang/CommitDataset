[+++ b/transport/src/main/java/io/netty/channel/VoidChannelPromise.java, +    // Will be null if we should not propagate exceptions through the pipeline on failure case., +    private final ChannelFutureListener fireExceptionListener;, +    public VoidChannelPromise(final Channel channel, boolean fireException) {, +        if (fireException) {, +            fireExceptionListener = new ChannelFutureListener() {, +                @Override, +                public void operationComplete(ChannelFuture future) throws Exception {, +                    Throwable cause = future.cause();, +                    if (cause != null) {, +                        fireException0(cause);, +                    }, +                }, +            };, +        } else {, +            fireExceptionListener = null;, +        }, +        fireException0(cause);, +        fireException0(cause);, +        if (fireExceptionListener != null) {, +            promise.addListener(fireExceptionListener);, +    private void fireException0(Throwable cause) {, +        if (fireExceptionListener != null && channel.isRegistered()) {]