[+++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutor.java, +    public Future<?> shutdownGracefully() {, +        return shutdownGracefully(2, 15, TimeUnit.SECONDS);, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutor.java, +    public Future<?> shutdownGracefully() {, +        return shutdownGracefully(2, 15, TimeUnit.SECONDS);, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutorGroup.java, +    public Future<?> shutdownGracefully() {, +        return shutdownGracefully(2, 15, TimeUnit.SECONDS);, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutor.java, +    public Future<?> shutdownGracefully() {, +        return shutdownGracefully(2, 15, TimeUnit.SECONDS);, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutorGroup.java, +    public Future<?> shutdownGracefully() {, +        return shutdownGracefully(2, 15, TimeUnit.SECONDS);, +++ b/common/src/main/java/io/netty/util/concurrent/CompleteFuture.java, +    public Future<V> addListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Future<V> addListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +        for (GenericFutureListener<? extends Future<? super V>> l: listeners) {, +    public Future<V> removeListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Future<V> removeListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutor.java, +    public Future<?> shutdownGracefully() {, +        return shutdownGracefully(2, 15, TimeUnit.SECONDS);, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutorGroup.java, +    public Future<?> shutdownGracefully() {, +        return shutdownGracefully(2, 15, TimeUnit.SECONDS);, +++ b/common/src/main/java/io/netty/util/concurrent/CompleteFuture.java, +    public Future<V> addListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Future<V> addListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +        for (GenericFutureListener<? extends Future<? super V>> l: listeners) {, +    public Future<V> removeListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Future<V> removeListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +++ b/common/src/main/java/io/netty/util/concurrent/CompletePromise.java, +    public Promise<V> addListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Promise<V> addListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +    public Promise<V> removeListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Promise<V> removeListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutor.java, +    public Future<?> shutdownGracefully() {, +        return shutdownGracefully(2, 15, TimeUnit.SECONDS);, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutorGroup.java, +    public Future<?> shutdownGracefully() {, +        return shutdownGracefully(2, 15, TimeUnit.SECONDS);, +++ b/common/src/main/java/io/netty/util/concurrent/CompleteFuture.java, +    public Future<V> addListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Future<V> addListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +        for (GenericFutureListener<? extends Future<? super V>> l: listeners) {, +    public Future<V> removeListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Future<V> removeListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +++ b/common/src/main/java/io/netty/util/concurrent/CompletePromise.java, +    public Promise<V> addListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Promise<V> addListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +    public Promise<V> removeListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Promise<V> removeListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +++ b/common/src/main/java/io/netty/util/concurrent/DefaultProgressivePromise.java, +    public ProgressivePromise<V> addListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public ProgressivePromise<V> addListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +    public ProgressivePromise<V> removeListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public ProgressivePromise<V> removeListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutor.java, +    public Future<?> shutdownGracefully() {, +        return shutdownGracefully(2, 15, TimeUnit.SECONDS);, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutorGroup.java, +    public Future<?> shutdownGracefully() {, +        return shutdownGracefully(2, 15, TimeUnit.SECONDS);, +++ b/common/src/main/java/io/netty/util/concurrent/CompleteFuture.java, +    public Future<V> addListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Future<V> addListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +        for (GenericFutureListener<? extends Future<? super V>> l: listeners) {, +    public Future<V> removeListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Future<V> removeListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +++ b/common/src/main/java/io/netty/util/concurrent/CompletePromise.java, +    public Promise<V> addListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Promise<V> addListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +    public Promise<V> removeListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Promise<V> removeListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +++ b/common/src/main/java/io/netty/util/concurrent/DefaultProgressivePromise.java, +    public ProgressivePromise<V> addListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public ProgressivePromise<V> addListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +    public ProgressivePromise<V> removeListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public ProgressivePromise<V> removeListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +++ b/common/src/main/java/io/netty/util/concurrent/DefaultPromise.java, +    public Promise<V> addListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Promise<V> addListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +        for (GenericFutureListener<? extends Future<? super V>> l: listeners) {, +    public Promise<V> removeListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Promise<V> removeListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +        for (GenericFutureListener<? extends Future<? super V>> l: listeners) {, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutor.java, +    public Future<?> shutdownGracefully() {, +        return shutdownGracefully(2, 15, TimeUnit.SECONDS);, +++ b/common/src/main/java/io/netty/util/concurrent/AbstractEventExecutorGroup.java, +    public Future<?> shutdownGracefully() {, +        return shutdownGracefully(2, 15, TimeUnit.SECONDS);, +++ b/common/src/main/java/io/netty/util/concurrent/CompleteFuture.java, +    public Future<V> addListener(GenericFutureListener<? extends Future<? super V>> listener) {, +    public Future<V> addListeners(GenericFutureListener<? extends Future<? super V>>... listeners) {, +        for (GenericFutureListener<? extends Future<? super V>> l: listeners) {, +    public Future<V> removeListener(GenericFutureListener<? extends Future<? super V>> listener) {]