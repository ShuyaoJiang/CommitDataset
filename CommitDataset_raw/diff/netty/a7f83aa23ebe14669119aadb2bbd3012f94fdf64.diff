[+++ b/example/src/main/java/io/netty/example/http2/helloworld/server/HelloWorldHttp1Handler.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +, +import io.netty.buffer.ByteBuf;, +import io.netty.buffer.ByteBufUtil;, +import io.netty.channel.ChannelFutureListener;, +import io.netty.channel.ChannelHandlerContext;, +import io.netty.channel.SimpleChannelInboundHandler;, +import io.netty.handler.codec.http.DefaultFullHttpResponse;, +import io.netty.handler.codec.http.FullHttpRequest;, +import io.netty.handler.codec.http.FullHttpResponse;, +import io.netty.handler.codec.http.HttpHeaderUtil;, +import io.netty.handler.codec.http.HttpHeaderValues;, +, +public class HelloWorldHttp1Handler extends SimpleChannelInboundHandler<FullHttpRequest> {, +    public void channelRead0(ChannelHandlerContext ctx, FullHttpRequest req) throws Exception {, +++ b/example/src/main/java/io/netty/example/http2/helloworld/server/HelloWorldHttp1Handler.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +, +import io.netty.buffer.ByteBuf;, +import io.netty.buffer.ByteBufUtil;, +import io.netty.channel.ChannelFutureListener;, +import io.netty.channel.ChannelHandlerContext;, +import io.netty.channel.SimpleChannelInboundHandler;, +import io.netty.handler.codec.http.DefaultFullHttpResponse;, +import io.netty.handler.codec.http.FullHttpRequest;, +import io.netty.handler.codec.http.FullHttpResponse;, +import io.netty.handler.codec.http.HttpHeaderUtil;, +import io.netty.handler.codec.http.HttpHeaderValues;, +, +public class HelloWorldHttp1Handler extends SimpleChannelInboundHandler<FullHttpRequest> {, +    public void channelRead0(ChannelHandlerContext ctx, FullHttpRequest req) throws Exception {, +++ b/example/src/main/java/io/netty/example/http2/helloworld/server/Http2ServerInitializer.java, +import io.netty.handler.codec.http.HttpObjectAggregator;, +    private final int maxHttpContentLength;, +        this(sslCtx, 16 * 1024);, +    }, +, +    public Http2ServerInitializer(SslContext sslCtx, int maxHttpContentLength) {, +        if (maxHttpContentLength < 0) {, +            throw new IllegalArgumentException("maxHttpContentLength (expected >= 0): " + maxHttpContentLength);, +        }, +        this.maxHttpContentLength = maxHttpContentLength;, +     * Configure the pipeline for a cleartext upgrade from HTTP to HTTP/2.0, +    private void configureClearText(SocketChannel ch) {, +                ChannelPipeline pipeline = ctx.pipeline();, +                ChannelHandlerContext thisCtx = pipeline.context(this);, +                pipeline.addAfter(thisCtx.name(), null, new HelloWorldHttp1Handler("Direct. No Upgrade Attempted."));, +                pipeline.replace(this, null, new HttpObjectAggregator(maxHttpContentLength));]