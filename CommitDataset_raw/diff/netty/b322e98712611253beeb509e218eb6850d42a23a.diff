[+++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +                ((ChannelInboundHandler<Object>) ctx.handler).channelRegistered(ctx);, +                ((ChannelInboundHandler<Object>) ctx.handler).channelUnregistered(ctx);, +                ((ChannelInboundHandler<Object>) ctx.handler).channelActive(ctx);, +                ((ChannelInboundHandler<Object>) ctx.handler).channelInactive(ctx);, +                ((ChannelInboundHandler<Object>) ctx.handler).inboundBufferUpdated(ctx);, +                if (inByteBridge != null) {, +                    ChannelBuffer buf = ctx.in.byteBuffer();, +                    if (!buf.readable()) {, +                        buf.discardReadBytes();, +                    }, +        boolean canHandleInbound = handler instanceof ChannelInboundHandler;, +        boolean canHandleOutbound = handler instanceof ChannelOutboundHandler;, +        return in != null;, +        return out != null;, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +                ((ChannelInboundHandler<Object>) ctx.handler).channelRegistered(ctx);, +                ((ChannelInboundHandler<Object>) ctx.handler).channelUnregistered(ctx);, +                ((ChannelInboundHandler<Object>) ctx.handler).channelActive(ctx);, +                ((ChannelInboundHandler<Object>) ctx.handler).channelInactive(ctx);, +                ((ChannelInboundHandler<Object>) ctx.handler).inboundBufferUpdated(ctx);, +                if (inByteBridge != null) {, +                    ChannelBuffer buf = ctx.in.byteBuffer();, +                    if (!buf.readable()) {, +                        buf.discardReadBytes();, +                    }, +        boolean canHandleInbound = handler instanceof ChannelInboundHandler;, +        boolean canHandleOutbound = handler instanceof ChannelOutboundHandler;, +        return in != null;, +        return out != null;, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            addFirst0(name, nextCtx, newCtx);, +                        addFirst0(name, nextCtx, newCtx);, +    private void addFirst0(final String name, DefaultChannelHandlerContext nextCtx, DefaultChannelHandlerContext newCtx) {, +            addLast0(name, oldTail, newTail);, +                        addLast0(name, oldTail, newTail);, +    private void addLast0(final String name, DefaultChannelHandlerContext oldTail, DefaultChannelHandlerContext newTail) {, +            addBefore0(name, ctx, newCtx);, +                        addBefore0(name, ctx, newCtx);, +    private void addBefore0(final String name, DefaultChannelHandlerContext ctx, DefaultChannelHandlerContext newCtx) {, +, +                addAfter0(name, ctx, newCtx);, +                            addAfter0(name, ctx, newCtx);, +    private void addAfter0(final String name, DefaultChannelHandlerContext ctx, DefaultChannelHandlerContext newCtx) {, +                replace0(ctx, newName, newCtx);, +                            replace0(ctx, newName, newCtx);, +    private void replace0(DefaultChannelHandlerContext ctx, String newName, DefaultChannelHandlerContext newCtx) {, +, +            if (ctx.inByteBridge != null) {, +                return ctx.in.byteBuffer();, +            if (ctx.outByteBridge != null) {, +                ChannelBuffer buf = ctx.out.byteBuffer();, +                if (!buf.readable()) {, +                    buf.discardReadBytes();, +                }]