[+++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +    public final ByteBuf touch(Object hint) {, +        unwrap().touch(hint);, +        return this;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +    public final ByteBuf touch(Object hint) {, +        unwrap().touch(hint);, +        return this;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractReferenceCountedByteBuf.java, +    public ByteBuf touch() {, +        return this;, +    }, +, +    @Override, +    public ByteBuf touch(Object hint) {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +    public final ByteBuf touch(Object hint) {, +        unwrap().touch(hint);, +        return this;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractReferenceCountedByteBuf.java, +    public ByteBuf touch() {, +        return this;, +    }, +, +    @Override, +    public ByteBuf touch(Object hint) {, +++ b/buffer/src/main/java/io/netty/buffer/AdvancedLeakAwareByteBuf.java, +    public ByteBuf touch(Object hint) {, +        leak.record(hint);, +        return this;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +    public final ByteBuf touch(Object hint) {, +        unwrap().touch(hint);, +        return this;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractReferenceCountedByteBuf.java, +    public ByteBuf touch() {, +        return this;, +    }, +, +    @Override, +    public ByteBuf touch(Object hint) {, +++ b/buffer/src/main/java/io/netty/buffer/AdvancedLeakAwareByteBuf.java, +    public ByteBuf touch(Object hint) {, +        leak.record(hint);, +        return this;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +, +    @Override, +    public abstract ByteBuf touch(Object hint);, +++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +    public final ByteBuf touch(Object hint) {, +        unwrap().touch(hint);, +        return this;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractReferenceCountedByteBuf.java, +    public ByteBuf touch() {, +        return this;, +    }, +, +    @Override, +    public ByteBuf touch(Object hint) {, +++ b/buffer/src/main/java/io/netty/buffer/AdvancedLeakAwareByteBuf.java, +    public ByteBuf touch(Object hint) {, +        leak.record(hint);, +        return this;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +, +    @Override, +    public abstract ByteBuf touch(Object hint);, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufHolder.java, +, +    @Override, +    ByteBufHolder touch(Object hint);, +++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +    public final ByteBuf touch(Object hint) {, +        unwrap().touch(hint);, +        return this;]