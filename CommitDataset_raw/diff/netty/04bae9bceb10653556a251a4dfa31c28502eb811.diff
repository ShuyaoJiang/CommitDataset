[+++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            if (PlatformDependent.isUnaligned()) {, +            if (PlatformDependent.isUnaligned()) {, +                PlatformDependent.copyMemory(, +                        PlatformDependent.directBufferAddress(src) + srcOffset,, +                        PlatformDependent.directBufferAddress(dst) + dstOffset, length);, +            } else {, +}, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            if (PlatformDependent.isUnaligned()) {, +            if (PlatformDependent.isUnaligned()) {, +                PlatformDependent.copyMemory(, +                        PlatformDependent.directBufferAddress(src) + srcOffset,, +                        PlatformDependent.directBufferAddress(dst) + dstOffset, length);, +            } else {, +}, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, + * Copyright 2013 The Netty Project, +        initMemoryAddress();, +        initMemoryAddress();, +    private void initMemoryAddress() {, +        memoryAddress = PlatformDependent.directBufferAddress(memory) + offset;, +        return PlatformDependent.getByte(addr(index));, +        short v = PlatformDependent.getShort(addr(index));, +        return NATIVE_ORDER? v : Short.reverseBytes(v);, +        return (PlatformDependent.getByte(addr) & 0xff) << 16 |, +                (PlatformDependent.getByte(addr + 1) & 0xff) << 8 |, +                PlatformDependent.getByte(addr + 2) & 0xff;, +        int v = PlatformDependent.getInt(addr(index));, +        return NATIVE_ORDER? v : Integer.reverseBytes(v);, +        long v = PlatformDependent.getLong(addr(index));, +        return NATIVE_ORDER? v : Long.reverseBytes(v);, +            PlatformDependent.copyMemory(addr(index), bbdst.addr(dstIndex), length);, +        PlatformDependent.putByte(addr(index), (byte) value);, +        PlatformDependent.putShort(addr(index), NATIVE_ORDER? (short) value : Short.reverseBytes((short) value));, +        PlatformDependent.putByte(addr, (byte) (value >>> 16));, +        PlatformDependent.putByte(addr + 1, (byte) (value >>> 8));, +        PlatformDependent.putByte(addr + 2, (byte) value);, +        PlatformDependent.putInt(addr(index), NATIVE_ORDER? value : Integer.reverseBytes(value));, +        PlatformDependent.putLong(addr(index), NATIVE_ORDER? value : Long.reverseBytes(value));, +            PlatformDependent.copyMemory(bbsrc.addr(srcIndex), addr(index), length);, +        PlatformDependent.copyMemory(addr(index), copy.addr(index), length);, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            if (PlatformDependent.isUnaligned()) {, +            if (PlatformDependent.isUnaligned()) {, +                PlatformDependent.copyMemory(, +                        PlatformDependent.directBufferAddress(src) + srcOffset,, +                        PlatformDependent.directBufferAddress(dst) + dstOffset, length);, +            } else {, +}, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, + * Copyright 2013 The Netty Project, +        initMemoryAddress();, +        initMemoryAddress();, +    private void initMemoryAddress() {, +        memoryAddress = PlatformDependent.directBufferAddress(memory) + offset;, +        return PlatformDependent.getByte(addr(index));, +        short v = PlatformDependent.getShort(addr(index));, +        return NATIVE_ORDER? v : Short.reverseBytes(v);, +        return (PlatformDependent.getByte(addr) & 0xff) << 16 |, +                (PlatformDependent.getByte(addr + 1) & 0xff) << 8 |, +                PlatformDependent.getByte(addr + 2) & 0xff;, +        int v = PlatformDependent.getInt(addr(index));, +        return NATIVE_ORDER? v : Integer.reverseBytes(v);, +        long v = PlatformDependent.getLong(addr(index));, +        return NATIVE_ORDER? v : Long.reverseBytes(v);, +            PlatformDependent.copyMemory(addr(index), bbdst.addr(dstIndex), length);, +        PlatformDependent.putByte(addr(index), (byte) value);, +        PlatformDependent.putShort(addr(index), NATIVE_ORDER? (short) value : Short.reverseBytes((short) value));, +        PlatformDependent.putByte(addr, (byte) (value >>> 16));, +        PlatformDependent.putByte(addr + 1, (byte) (value >>> 8));, +        PlatformDependent.putByte(addr + 2, (byte) value);, +        PlatformDependent.putInt(addr(index), NATIVE_ORDER? value : Integer.reverseBytes(value));, +        PlatformDependent.putLong(addr(index), NATIVE_ORDER? value : Long.reverseBytes(value));, +            PlatformDependent.copyMemory(bbsrc.addr(srcIndex), addr(index), length);, +        PlatformDependent.copyMemory(addr(index), copy.addr(index), length);, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +    public static long directBufferAddress(ByteBuffer buffer) {, +        return PlatformDependent0.directBufferAddress(buffer);, +    }, +, +    public static byte getByte(long address) {, +        return PlatformDependent0.getByte(address);, +    }, +, +    public static short getShort(long address) {, +        return PlatformDependent0.getShort(address);, +    }, +, +    public static int getInt(long address) {, +        return PlatformDependent0.getInt(address);, +    }, +, +    public static long getLong(long address) {, +        return PlatformDependent0.getLong(address);, +    }, +, +    public static void putByte(long address, byte value) {, +        PlatformDependent0.putByte(address, value);, +    }]