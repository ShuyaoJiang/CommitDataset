[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +            AttributeKey.valueOf(WebSocketServerHandshaker.class.getName() + ".HANDSHAKER");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +            AttributeKey.valueOf(WebSocketServerHandshaker.class.getName() + ".HANDSHAKER");, +++ b/codec/src/main/java/io/netty/handler/codec/DecoderResult.java, +    protected static final Signal SIGNAL_UNFINISHED = Signal.valueOf(DecoderResult.class.getName() + ".UNFINISHED");, +    protected static final Signal SIGNAL_SUCCESS = Signal.valueOf(DecoderResult.class.getName() + ".SUCCESS");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +            AttributeKey.valueOf(WebSocketServerHandshaker.class.getName() + ".HANDSHAKER");, +++ b/codec/src/main/java/io/netty/handler/codec/DecoderResult.java, +    protected static final Signal SIGNAL_UNFINISHED = Signal.valueOf(DecoderResult.class.getName() + ".UNFINISHED");, +    protected static final Signal SIGNAL_SUCCESS = Signal.valueOf(DecoderResult.class.getName() + ".SUCCESS");, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +    static final Signal REPLAY = Signal.valueOf(ReplayingDecoder.class.getName() + ".REPLAY");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +            AttributeKey.valueOf(WebSocketServerHandshaker.class.getName() + ".HANDSHAKER");, +++ b/codec/src/main/java/io/netty/handler/codec/DecoderResult.java, +    protected static final Signal SIGNAL_UNFINISHED = Signal.valueOf(DecoderResult.class.getName() + ".UNFINISHED");, +    protected static final Signal SIGNAL_SUCCESS = Signal.valueOf(DecoderResult.class.getName() + ".SUCCESS");, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +    static final Signal REPLAY = Signal.valueOf(ReplayingDecoder.class.getName() + ".REPLAY");, +++ b/codec/src/main/java/io/netty/handler/codec/marshalling/ContextBoundUnmarshallerProvider.java, +    private static final AttributeKey<Unmarshaller> UNMARSHALLER = AttributeKey.valueOf(, +            ContextBoundUnmarshallerProvider.class.getName() + ".UNMARSHALLER");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +            AttributeKey.valueOf(WebSocketServerHandshaker.class.getName() + ".HANDSHAKER");, +++ b/codec/src/main/java/io/netty/handler/codec/DecoderResult.java, +    protected static final Signal SIGNAL_UNFINISHED = Signal.valueOf(DecoderResult.class.getName() + ".UNFINISHED");, +    protected static final Signal SIGNAL_SUCCESS = Signal.valueOf(DecoderResult.class.getName() + ".SUCCESS");, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +    static final Signal REPLAY = Signal.valueOf(ReplayingDecoder.class.getName() + ".REPLAY");, +++ b/codec/src/main/java/io/netty/handler/codec/marshalling/ContextBoundUnmarshallerProvider.java, +    private static final AttributeKey<Unmarshaller> UNMARSHALLER = AttributeKey.valueOf(, +            ContextBoundUnmarshallerProvider.class.getName() + ".UNMARSHALLER");, +++ b/codec/src/main/java/io/netty/handler/codec/serialization/CompatibleObjectEncoder.java, +            AttributeKey.valueOf(CompatibleObjectEncoder.class.getName() + ".OOS");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +            AttributeKey.valueOf(WebSocketServerHandshaker.class.getName() + ".HANDSHAKER");, +++ b/codec/src/main/java/io/netty/handler/codec/DecoderResult.java, +    protected static final Signal SIGNAL_UNFINISHED = Signal.valueOf(DecoderResult.class.getName() + ".UNFINISHED");, +    protected static final Signal SIGNAL_SUCCESS = Signal.valueOf(DecoderResult.class.getName() + ".SUCCESS");, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +    static final Signal REPLAY = Signal.valueOf(ReplayingDecoder.class.getName() + ".REPLAY");, +++ b/codec/src/main/java/io/netty/handler/codec/marshalling/ContextBoundUnmarshallerProvider.java, +    private static final AttributeKey<Unmarshaller> UNMARSHALLER = AttributeKey.valueOf(, +            ContextBoundUnmarshallerProvider.class.getName() + ".UNMARSHALLER");, +++ b/codec/src/main/java/io/netty/handler/codec/serialization/CompatibleObjectEncoder.java, +            AttributeKey.valueOf(CompatibleObjectEncoder.class.getName() + ".OOS");, +++ b/common/src/main/java/io/netty/util/concurrent/DefaultPromise.java, +    private static final Signal SUCCESS = Signal.valueOf(DefaultPromise.class.getName() + ".SUCCESS");, +    private static final Signal UNCANCELLABLE = Signal.valueOf(DefaultPromise.class.getName() + ".UNCANCELLABLE");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +            AttributeKey.valueOf(WebSocketServerHandshaker.class.getName() + ".HANDSHAKER");, +++ b/codec/src/main/java/io/netty/handler/codec/DecoderResult.java, +    protected static final Signal SIGNAL_UNFINISHED = Signal.valueOf(DecoderResult.class.getName() + ".UNFINISHED");, +    protected static final Signal SIGNAL_SUCCESS = Signal.valueOf(DecoderResult.class.getName() + ".SUCCESS");, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +    static final Signal REPLAY = Signal.valueOf(ReplayingDecoder.class.getName() + ".REPLAY");, +++ b/codec/src/main/java/io/netty/handler/codec/marshalling/ContextBoundUnmarshallerProvider.java, +    private static final AttributeKey<Unmarshaller> UNMARSHALLER = AttributeKey.valueOf(, +            ContextBoundUnmarshallerProvider.class.getName() + ".UNMARSHALLER");, +++ b/codec/src/main/java/io/netty/handler/codec/serialization/CompatibleObjectEncoder.java, +            AttributeKey.valueOf(CompatibleObjectEncoder.class.getName() + ".OOS");, +++ b/common/src/main/java/io/netty/util/concurrent/DefaultPromise.java, +    private static final Signal SUCCESS = Signal.valueOf(DefaultPromise.class.getName() + ".SUCCESS");, +    private static final Signal UNCANCELLABLE = Signal.valueOf(DefaultPromise.class.getName() + ".UNCANCELLABLE");, +++ b/common/src/test/java/io/netty/util/DefaultAttributeMapTest.java, +import static org.junit.Assert.*;, +, +        AttributeKey<String> key = AttributeKey.valueOf("Nothing");, +        AttributeKey<Integer> key = AttributeKey.valueOf("Nada");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +            AttributeKey.valueOf(WebSocketServerHandshaker.class.getName() + ".HANDSHAKER");, +++ b/codec/src/main/java/io/netty/handler/codec/DecoderResult.java, +    protected static final Signal SIGNAL_UNFINISHED = Signal.valueOf(DecoderResult.class.getName() + ".UNFINISHED");, +    protected static final Signal SIGNAL_SUCCESS = Signal.valueOf(DecoderResult.class.getName() + ".SUCCESS");, +++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java, +    static final Signal REPLAY = Signal.valueOf(ReplayingDecoder.class.getName() + ".REPLAY");, +++ b/codec/src/main/java/io/netty/handler/codec/marshalling/ContextBoundUnmarshallerProvider.java, +    private static final AttributeKey<Unmarshaller> UNMARSHALLER = AttributeKey.valueOf(, +            ContextBoundUnmarshallerProvider.class.getName() + ".UNMARSHALLER");, +++ b/codec/src/main/java/io/netty/handler/codec/serialization/CompatibleObjectEncoder.java, +            AttributeKey.valueOf(CompatibleObjectEncoder.class.getName() + ".OOS");, +++ b/common/src/main/java/io/netty/util/concurrent/DefaultPromise.java, +    private static final Signal SUCCESS = Signal.valueOf(DefaultPromise.class.getName() + ".SUCCESS");, +    private static final Signal UNCANCELLABLE = Signal.valueOf(DefaultPromise.class.getName() + ".UNCANCELLABLE");, +++ b/common/src/test/java/io/netty/util/DefaultAttributeMapTest.java, +import static org.junit.Assert.*;, +, +        AttributeKey<String> key = AttributeKey.valueOf("Nothing");, +        AttributeKey<Integer> key = AttributeKey.valueOf("Nada");, +++ b/handler/src/main/java/io/netty/handler/traffic/AbstractTrafficShapingHandler.java, +    private static final AttributeKey<Boolean> READ_SUSPENDED = AttributeKey.valueOf(, +            AbstractTrafficShapingHandler.class.getName() + ".READ_SUSPENDED");, +    private static final AttributeKey<Runnable> REOPEN_TASK = AttributeKey.valueOf(, +            AbstractTrafficShapingHandler.class.getName() + ".REOPEN_TASK");]