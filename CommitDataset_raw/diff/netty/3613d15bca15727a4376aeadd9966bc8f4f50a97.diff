[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2StreamFrame.java, +import io.netty.util.internal.ObjectUtil;, +, +    private int streamId = -1;, +    public AbstractHttp2StreamFrame setStreamId(int streamId) {, +        if (this.streamId != -1) {, +            throw new IllegalStateException("Stream identifier may only be set once.");, +        }, +        this.streamId = ObjectUtil.checkPositiveOrZero(streamId, "streamId");, +    public int streamId() {, +        return streamId;, +        return streamId == other.streamId();, +        return streamId;, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2StreamFrame.java, +import io.netty.util.internal.ObjectUtil;, +, +    private int streamId = -1;, +    public AbstractHttp2StreamFrame setStreamId(int streamId) {, +        if (this.streamId != -1) {, +            throw new IllegalStateException("Stream identifier may only be set once.");, +        }, +        this.streamId = ObjectUtil.checkPositiveOrZero(streamId, "streamId");, +    public int streamId() {, +        return streamId;, +        return streamId == other.streamId();, +        return streamId;, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2StreamStateEvent.java, +/*, + * Copyright 2016 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.handler.codec.http2;, +, +import io.netty.util.internal.ObjectUtil;, +import io.netty.util.internal.UnstableApi;, +, +@UnstableApi, +public abstract class AbstractHttp2StreamStateEvent implements Http2StreamStateEvent {, +, +    private final int streamId;, +, +    protected AbstractHttp2StreamStateEvent(int streamId) {, +        this.streamId = ObjectUtil.checkPositiveOrZero(streamId, "streamId");, +    }, +, +    @Override, +    public int streamId() {, +        return streamId;, +    }, +}, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2StreamFrame.java, +import io.netty.util.internal.ObjectUtil;, +, +    private int streamId = -1;, +    public AbstractHttp2StreamFrame setStreamId(int streamId) {, +        if (this.streamId != -1) {, +            throw new IllegalStateException("Stream identifier may only be set once.");, +        }, +        this.streamId = ObjectUtil.checkPositiveOrZero(streamId, "streamId");, +    public int streamId() {, +        return streamId;, +        return streamId == other.streamId();, +        return streamId;, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2StreamStateEvent.java, +/*, + * Copyright 2016 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.handler.codec.http2;, +, +import io.netty.util.internal.ObjectUtil;, +import io.netty.util.internal.UnstableApi;, +, +@UnstableApi, +public abstract class AbstractHttp2StreamStateEvent implements Http2StreamStateEvent {, +, +    private final int streamId;, +]