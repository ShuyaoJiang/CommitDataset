[+++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            return new PooledHeapByteBuf(maxCapacity);, +                return new PooledUnsafeDirectByteBuf(maxCapacity);, +                return new PooledDirectByteBuf(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            return new PooledHeapByteBuf(maxCapacity);, +                return new PooledUnsafeDirectByteBuf(maxCapacity);, +                return new PooledDirectByteBuf(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +    protected PooledByteBuf(int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            return new PooledHeapByteBuf(maxCapacity);, +                return new PooledUnsafeDirectByteBuf(maxCapacity);, +                return new PooledDirectByteBuf(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +    protected PooledByteBuf(int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +    PooledDirectByteBuf(int maxCapacity) {, +        super(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            return new PooledHeapByteBuf(maxCapacity);, +                return new PooledUnsafeDirectByteBuf(maxCapacity);, +                return new PooledDirectByteBuf(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +    protected PooledByteBuf(int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +    PooledDirectByteBuf(int maxCapacity) {, +        super(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +    PooledHeapByteBuf(int maxCapacity) {, +        super(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            return new PooledHeapByteBuf(maxCapacity);, +                return new PooledUnsafeDirectByteBuf(maxCapacity);, +                return new PooledDirectByteBuf(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +    protected PooledByteBuf(int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +    PooledDirectByteBuf(int maxCapacity) {, +        super(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +    PooledHeapByteBuf(int maxCapacity) {, +        super(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +    PooledUnsafeDirectByteBuf(int maxCapacity) {, +        super(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            return new PooledHeapByteBuf(maxCapacity);, +                return new PooledUnsafeDirectByteBuf(maxCapacity);, +                return new PooledDirectByteBuf(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +    protected PooledByteBuf(int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +    PooledDirectByteBuf(int maxCapacity) {, +        super(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +    PooledHeapByteBuf(int maxCapacity) {, +        super(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +    PooledUnsafeDirectByteBuf(int maxCapacity) {, +        super(maxCapacity);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler.java, +import io.netty.channel.SimpleChannelInboundHandler;, +class WebSocketClientProtocolHandshakeHandler extends SimpleChannelInboundHandler<FullHttpResponse> {, +    protected void messageReceived(ChannelHandlerContext ctx, FullHttpResponse msg) throws Exception {, +            handshaker.finishHandshake(ctx.channel(), msg);, +            msg.release();, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            return new PooledHeapByteBuf(maxCapacity);, +                return new PooledUnsafeDirectByteBuf(maxCapacity);, +                return new PooledDirectByteBuf(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +    protected PooledByteBuf(int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +    PooledDirectByteBuf(int maxCapacity) {, +        super(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +    PooledHeapByteBuf(int maxCapacity) {, +        super(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +    PooledUnsafeDirectByteBuf(int maxCapacity) {, +        super(maxCapacity);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler.java, +import io.netty.channel.SimpleChannelInboundHandler;, +class WebSocketClientProtocolHandshakeHandler extends SimpleChannelInboundHandler<FullHttpResponse> {, +    protected void messageReceived(ChannelHandlerContext ctx, FullHttpResponse msg) throws Exception {, +            handshaker.finishHandshake(ctx.channel(), msg);, +            msg.release();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandler.java, +import io.netty.channel.SimpleChannelInboundHandler;, +        return new SimpleChannelInboundHandler<FullHttpRequest>() {, +            protected void messageReceived(ChannelHandlerContext ctx, FullHttpRequest msg) throws Exception {, +                msg.release();, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            return new PooledHeapByteBuf(maxCapacity);, +                return new PooledUnsafeDirectByteBuf(maxCapacity);, +                return new PooledDirectByteBuf(maxCapacity);, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +    protected PooledByteBuf(int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java]