[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +    private static final int DEFAULT_MAX_CONCURRENT_STREAMS = Integer.MAX_VALUE;, +    private int remoteConcurrentStreams = DEFAULT_MAX_CONCURRENT_STREAMS;, +    private int localConcurrentStreams  = DEFAULT_MAX_CONCURRENT_STREAMS;, +    private int maxConcurrentStreams    = DEFAULT_MAX_CONCURRENT_STREAMS;, +        maxConcurrentStreams = Math.min(localConcurrentStreams, remoteConcurrentStreams);, +        if (spdySession.numActiveStreams() >= maxConcurrentStreams) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +    private static final int DEFAULT_MAX_CONCURRENT_STREAMS = Integer.MAX_VALUE;, +    private int remoteConcurrentStreams = DEFAULT_MAX_CONCURRENT_STREAMS;, +    private int localConcurrentStreams  = DEFAULT_MAX_CONCURRENT_STREAMS;, +    private int maxConcurrentStreams    = DEFAULT_MAX_CONCURRENT_STREAMS;, +        maxConcurrentStreams = Math.min(localConcurrentStreams, remoteConcurrentStreams);, +        if (spdySession.numActiveStreams() >= maxConcurrentStreams) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdySessionHandlerTest.java, +        // Check if session handler correctly limits the number of, +        // concurrent streams in the SETTINGS frame, +        SpdySettingsFrame spdySettingsFrame = new DefaultSpdySettingsFrame();, +        spdySettingsFrame.setValue(SpdySettingsFrame.SETTINGS_MAX_CONCURRENT_STREAMS, 0);, +        sessionHandler.writeInbound(spdySettingsFrame);, +        assertNull(sessionHandler.readOutbound());, +        sessionHandler.writeInbound(spdySynStreamFrame);, +        assertRstStream(sessionHandler.readOutbound(), localStreamId, SpdyStreamStatus.REFUSED_STREAM);, +        assertNull(sessionHandler.readOutbound());, +        spdySettingsFrame.setValue(SpdySettingsFrame.SETTINGS_MAX_CONCURRENT_STREAMS, 100);, +        sessionHandler.writeInbound(spdySettingsFrame);, +        assertNull(sessionHandler.readOutbound());, +, +        // Check if session handler returns PROTOCOL_ERROR if it receives, +        // multiple SYN_REPLY frames for the same active Stream-ID, +        // Check if session handler correctly handles updates to the max]