[+++ b/src/main/java/org/jboss/netty/handler/codec/frame/LengthFieldBasedFrameDecoder.java, +    private volatile boolean discardingTooLongFrame;, +    private volatile long tooLongFrameLength;, +    private volatile long bytesToDiscard;, +, +        if (discardingTooLongFrame) {, +            long bytesToDiscard = this.bytesToDiscard;, +            int localBytesToDiscard = (int) Math.min(bytesToDiscard, buffer.readableBytes());, +            buffer.skipBytes(localBytesToDiscard);, +            bytesToDiscard -= localBytesToDiscard;, +            this.bytesToDiscard = bytesToDiscard;, +            if (bytesToDiscard == 0) {, +                // Reset to the initial state and tell the handlers that, +                // the frame was too large., +                discardingTooLongFrame = false;, +                long tooLongFrameLength = this.tooLongFrameLength;, +                this.tooLongFrameLength = 0;, +                throw new TooLongFrameException(, +                        "Adjusted frame length exceeds " + maxFrameLength +, +                        ": " + tooLongFrameLength);, +            } else {, +                // Keep discarding., +                return null;, +            }, +        }, +, +            buffer.skipBytes(lengthFieldEndOffset);, +            buffer.skipBytes(lengthFieldEndOffset);, +            // Enter the discard mode and discard everything received so far., +            discardingTooLongFrame = true;, +            tooLongFrameLength = frameLength;, +            bytesToDiscard = frameLength - buffer.readableBytes();, +            buffer.skipBytes(buffer.readableBytes());, +            return null;]