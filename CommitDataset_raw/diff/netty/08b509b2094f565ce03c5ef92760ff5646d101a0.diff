[+++ b/src/main/java/org/jboss/netty/channel/socket/sctp/DefaultSctpChannelConfig.java, +import static com.sun.nio.sctp.SctpStandardSocketOptions.*;, +            setInitMaxStreams((InitMaxStreams) value);, +            return channel.getOption(SCTP_NODELAY);, +            channel.setOption(SCTP_NODELAY, tcpNoDelay);, +            return channel.getOption(SO_LINGER);, +            channel.setOption(SO_LINGER, soLinger);, +            return channel.getOption(SO_SNDBUF);, +            channel.setOption(SO_SNDBUF, sendBufferSize);, +            return channel.getOption(SO_RCVBUF);, +            channel.setOption(SO_RCVBUF, receiveBufferSize);, +    public InitMaxStreams getInitMaxStreams() {, +            return channel.getOption(SCTP_INIT_MAXSTREAMS);, +    public void setInitMaxStreams(InitMaxStreams initMaxStreams) {, +            channel.setOption(SCTP_INIT_MAXSTREAMS, initMaxStreams);, +++ b/src/main/java/org/jboss/netty/channel/socket/sctp/DefaultSctpChannelConfig.java, +import static com.sun.nio.sctp.SctpStandardSocketOptions.*;, +            setInitMaxStreams((InitMaxStreams) value);, +            return channel.getOption(SCTP_NODELAY);, +            channel.setOption(SCTP_NODELAY, tcpNoDelay);, +            return channel.getOption(SO_LINGER);, +            channel.setOption(SO_LINGER, soLinger);, +            return channel.getOption(SO_SNDBUF);, +            channel.setOption(SO_SNDBUF, sendBufferSize);, +            return channel.getOption(SO_RCVBUF);, +            channel.setOption(SO_RCVBUF, receiveBufferSize);, +    public InitMaxStreams getInitMaxStreams() {, +            return channel.getOption(SCTP_INIT_MAXSTREAMS);, +    public void setInitMaxStreams(InitMaxStreams initMaxStreams) {, +            channel.setOption(SCTP_INIT_MAXSTREAMS, initMaxStreams);, +++ b/src/main/java/org/jboss/netty/channel/socket/sctp/SctpChannelConfig.java, +import static com.sun.nio.sctp.SctpStandardSocketOptions.*;, + * <td>{@code "sctpInitMaxStreams"}</td><td>{@link #setInitMaxStreams(InitMaxStreams)}</td>, +    InitMaxStreams getInitMaxStreams();, +    void setInitMaxStreams(InitMaxStreams initMaxStreams);, +++ b/src/main/java/org/jboss/netty/channel/socket/sctp/DefaultSctpChannelConfig.java, +import static com.sun.nio.sctp.SctpStandardSocketOptions.*;, +            setInitMaxStreams((InitMaxStreams) value);, +            return channel.getOption(SCTP_NODELAY);, +            channel.setOption(SCTP_NODELAY, tcpNoDelay);, +            return channel.getOption(SO_LINGER);, +            channel.setOption(SO_LINGER, soLinger);, +            return channel.getOption(SO_SNDBUF);, +            channel.setOption(SO_SNDBUF, sendBufferSize);, +            return channel.getOption(SO_RCVBUF);, +            channel.setOption(SO_RCVBUF, receiveBufferSize);, +    public InitMaxStreams getInitMaxStreams() {, +            return channel.getOption(SCTP_INIT_MAXSTREAMS);, +    public void setInitMaxStreams(InitMaxStreams initMaxStreams) {, +            channel.setOption(SCTP_INIT_MAXSTREAMS, initMaxStreams);, +++ b/src/main/java/org/jboss/netty/channel/socket/sctp/SctpChannelConfig.java, +import static com.sun.nio.sctp.SctpStandardSocketOptions.*;, + * <td>{@code "sctpInitMaxStreams"}</td><td>{@link #setInitMaxStreams(InitMaxStreams)}</td>, +    InitMaxStreams getInitMaxStreams();, +    void setInitMaxStreams(InitMaxStreams initMaxStreams);, +++ b/src/main/java/org/jboss/netty/channel/socket/sctp/SctpServerChannelConfig.java, +import static com.sun.nio.sctp.SctpStandardSocketOptions.*;, +            setInitMaxStreams((InitMaxStreams) value);, +    public InitMaxStreams getInitMaxStreams() {, +            return serverChannel.getOption(SCTP_INIT_MAXSTREAMS);, +    public void setInitMaxStreams(InitMaxStreams initMaxStreams) {, +            serverChannel.setOption(SCTP_INIT_MAXSTREAMS, initMaxStreams);, +++ b/src/main/java/org/jboss/netty/channel/socket/sctp/DefaultSctpChannelConfig.java, +import static com.sun.nio.sctp.SctpStandardSocketOptions.*;, +            setInitMaxStreams((InitMaxStreams) value);, +            return channel.getOption(SCTP_NODELAY);, +            channel.setOption(SCTP_NODELAY, tcpNoDelay);, +            return channel.getOption(SO_LINGER);, +            channel.setOption(SO_LINGER, soLinger);, +            return channel.getOption(SO_SNDBUF);, +            channel.setOption(SO_SNDBUF, sendBufferSize);, +            return channel.getOption(SO_RCVBUF);, +            channel.setOption(SO_RCVBUF, receiveBufferSize);, +    public InitMaxStreams getInitMaxStreams() {, +            return channel.getOption(SCTP_INIT_MAXSTREAMS);, +    public void setInitMaxStreams(InitMaxStreams initMaxStreams) {, +            channel.setOption(SCTP_INIT_MAXSTREAMS, initMaxStreams);, +++ b/src/main/java/org/jboss/netty/channel/socket/sctp/SctpChannelConfig.java, +import static com.sun.nio.sctp.SctpStandardSocketOptions.*;, + * <td>{@code "sctpInitMaxStreams"}</td><td>{@link #setInitMaxStreams(InitMaxStreams)}</td>, +    InitMaxStreams getInitMaxStreams();, +    void setInitMaxStreams(InitMaxStreams initMaxStreams);, +++ b/src/main/java/org/jboss/netty/channel/socket/sctp/SctpServerChannelConfig.java, +import static com.sun.nio.sctp.SctpStandardSocketOptions.*;, +            setInitMaxStreams((InitMaxStreams) value);, +    public InitMaxStreams getInitMaxStreams() {, +            return serverChannel.getOption(SCTP_INIT_MAXSTREAMS);, +    public void setInitMaxStreams(InitMaxStreams initMaxStreams) {, +            serverChannel.setOption(SCTP_INIT_MAXSTREAMS, initMaxStreams);, +++ b/src/main/java/org/jboss/netty/channel/socket/sctp/ServerSctpChannelConfig.java, +import static com.sun.nio.sctp.SctpStandardSocketOptions.*;, + * <td>{@code "sctpInitMaxStreams"}</td><td>{@link #setInitMaxStreams(InitMaxStreams)} (int)}}</td>, +    InitMaxStreams getInitMaxStreams();, +    void setInitMaxStreams(InitMaxStreams initMaxStreams);, +++ b/src/main/java/org/jboss/netty/channel/socket/sctp/DefaultSctpChannelConfig.java, +import static com.sun.nio.sctp.SctpStandardSocketOptions.*;, +            setInitMaxStreams((InitMaxStreams) value);, +            return channel.getOption(SCTP_NODELAY);, +            channel.setOption(SCTP_NODELAY, tcpNoDelay);, +            return channel.getOption(SO_LINGER);]