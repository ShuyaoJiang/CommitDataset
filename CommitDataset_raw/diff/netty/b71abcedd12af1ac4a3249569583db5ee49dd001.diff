[+++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +import io.netty.util.internal.EmptyArrays;, +     * Decodes a string generated by {@link #hexDump(byte[])}, +     */, +    public static byte[] decodeHexDump(CharSequence hexDump) {, +        return HexUtil.decodeHexDump(hexDump, 0, hexDump.length());, +    }, +, +    /**, +        private static byte[] decodeHexDump(CharSequence hexDump, int fromIndex, int length) {, +            if (length < 0) {, +                throw new IllegalArgumentException("length: " + length);, +            }, +            if (length == 0) {, +                return EmptyArrays.EMPTY_BYTES;, +            }, +, +            int endIndex = fromIndex + length - 1;, +            byte[] bytes = new byte[length >>> 1];, +, +            for (; fromIndex < endIndex; fromIndex += 2) {, +                bytes[fromIndex >>> 1] = (byte) ((Character.digit(hexDump.charAt(fromIndex), 16) << 4) +, +                                                  Character.digit(hexDump.charAt(fromIndex + 1), 16));, +            }, +, +            return bytes;, +        }, +, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +import io.netty.util.internal.EmptyArrays;, +     * Decodes a string generated by {@link #hexDump(byte[])}, +     */, +    public static byte[] decodeHexDump(CharSequence hexDump) {, +        return HexUtil.decodeHexDump(hexDump, 0, hexDump.length());, +    }, +, +    /**, +        private static byte[] decodeHexDump(CharSequence hexDump, int fromIndex, int length) {, +            if (length < 0) {, +                throw new IllegalArgumentException("length: " + length);, +            }, +            if (length == 0) {, +                return EmptyArrays.EMPTY_BYTES;, +            }, +, +            int endIndex = fromIndex + length - 1;, +            byte[] bytes = new byte[length >>> 1];, +, +            for (; fromIndex < endIndex; fromIndex += 2) {, +                bytes[fromIndex >>> 1] = (byte) ((Character.digit(hexDump.charAt(fromIndex), 16) << 4) +, +                                                  Character.digit(hexDump.charAt(fromIndex + 1), 16));, +            }, +, +            return bytes;, +        }, +, +++ b/buffer/src/test/java/io/netty/buffer/ByteBufUtilTest.java, +import static org.junit.Assert.assertArrayEquals;, +    public void decodeHexEvenLength() {, +        decodeHex(256);, +    }, +, +    @Test, +    public void decodeHexOddLength() {, +        decodeHex(257);, +    }, +, +    private static void decodeHex(int len) {, +        byte[] b = new byte[len];, +        Random rand = new Random();, +        rand.nextBytes(b);, +        String hexDump = ByteBufUtil.hexDump(b);, +        byte[] decodedBytes = ByteBufUtil.decodeHexDump(hexDump);, +        assertArrayEquals(b, decodedBytes);, +    }, +, +    @Test]