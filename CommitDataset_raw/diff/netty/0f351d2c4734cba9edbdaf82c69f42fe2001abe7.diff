[+++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +        unwrap().retain();, +        unwrap().retain(increment);, +        return unwrap().release();, +        return unwrap().release(decrement);, +++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +        unwrap().retain();, +        unwrap().retain(increment);, +        return unwrap().release();, +        return unwrap().release(decrement);, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +                array[i] = list.get(i).buf.retain();, +            compositeBuf.release();, +            return addComponents0(cIndex, array);, +        }, +, +        if (buffers instanceof CompositeByteBuf) {, +            CompositeByteBuf compositeBuf = (CompositeByteBuf) buffers;, +            final int nComponents = compositeBuf.numComponents();, +            ByteBuf[] array = new ByteBuf[nComponents];, +            for (int i = 0; i < nComponents; i ++) {, +                array[i] = compositeBuf.component(i).retain();, +++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +        unwrap().retain();, +        unwrap().retain(increment);, +        return unwrap().release();, +        return unwrap().release(decrement);, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +                array[i] = list.get(i).buf.retain();, +            compositeBuf.release();, +            return addComponents0(cIndex, array);, +        }, +, +        if (buffers instanceof CompositeByteBuf) {, +            CompositeByteBuf compositeBuf = (CompositeByteBuf) buffers;, +            final int nComponents = compositeBuf.numComponents();, +            ByteBuf[] array = new ByteBuf[nComponents];, +            for (int i = 0; i < nComponents; i ++) {, +                array[i] = compositeBuf.component(i).retain();, +++ b/buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java, +++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +        unwrap().retain();, +        unwrap().retain(increment);, +        return unwrap().release();, +        return unwrap().release(decrement);, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +                array[i] = list.get(i).buf.retain();, +            compositeBuf.release();, +            return addComponents0(cIndex, array);, +        }, +, +        if (buffers instanceof CompositeByteBuf) {, +            CompositeByteBuf compositeBuf = (CompositeByteBuf) buffers;, +            final int nComponents = compositeBuf.numComponents();, +            ByteBuf[] array = new ByteBuf[nComponents];, +            for (int i = 0; i < nComponents; i ++) {, +                array[i] = compositeBuf.component(i).retain();, +++ b/buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java, +++ b/buffer/src/test/java/io/netty/buffer/UnpooledTest.java, +import org.junit.After;, +import java.util.ArrayDeque;, +import java.util.Queue;, +    private static final Queue<ByteBuf> freeLaterQueue = new ArrayDeque<ByteBuf>();, +, +    protected ByteBuf freeLater(ByteBuf buf) {, +        freeLaterQueue.add(buf);, +        return buf;, +    }, +, +    @After, +    public void tearDown() {, +        for (;;) {, +            ByteBuf buf = freeLaterQueue.poll();, +            if (buf == null) {, +                break;, +            }, +, +            if (buf.refCnt() > 0) {, +                buf.release(buf.refCnt());, +            }, +        }, +    }, +, +        assertEquals(16, freeLater(wrappedBuffer(ByteBuffer.allocateDirect(16))).capacity());, +                freeLater(wrappedBuffer(, +                        new byte[] { 3 })));, +                freeLater(wrappedBuffer(, +                        wrappedBuffer(new byte[] { 3 }))));, +                freeLater(wrappedBuffer(, +                        ByteBuffer.wrap(new byte[] { 3 }))));]