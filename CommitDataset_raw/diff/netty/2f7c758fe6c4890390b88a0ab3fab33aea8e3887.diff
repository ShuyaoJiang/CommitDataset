[+++ b/src/docbook/en-US/module/start.xml, +public class DiscardServerHandler extends &SimpleChannelHandler; {<co id="example.discard.co1"/>, +    public void messageReceived(&ChannelHandlerContext; ctx, &MessageEvent; e) {<co id="example.discard.co2"/>, +    public void exceptionCaught(&ChannelHandlerContext; ctx, &ExceptionEvent; e) {<co id="example.discard.co3"/>, +      <callout arearefs="example.discard.co2">, +      <callout arearefs="example.discard.co3">, +                return &Channels;.pipeline(new DiscardServerHandler());, +        bootstrap.setOption("child.tcpNoDelay", true);<co id="example.discard2.co4" />, +        bootstrap.bind(new InetSocketAddress(8080));<co id="example.discard2.co5" />, +      <callout arearefs="example.discard2.co5">, +        System.out.flush();, +          also might not close the connection immediately, and it returns a, +    private final &ChannelBuffer; buf = dynamicBuffer();<co id="example.time3.co1"/>, +        buf.writeBytes(m);<co id="example.time3.co2"/>, +        if (buf.readableBytes() &gt;= 4) {<co id="example.time3.co3"/>, +        <callout arearefs="example.time3.co2">, +        <callout arearefs="example.time3.co3">, +            &ChannelHandlerContext; ctx, &Channel; channel, &ChannelBuffer; buffer)<co id="example.time4.co1"/> {, +            return null; <co id="example.time4.co2"/>, +        return buffer.readBytes(4);<co id="example.time4.co3"/>, +        <callout arearefs="example.time4.co2">, +    public void writeRequested(&ChannelHandlerContext; ctx, &MessageEvent;<co id="example.time6.co1"/> e) {, +        &Channels;.write(ctx, e.getFuture(), buf);<co id="example.time6.co2"/>, +      <callout arearefs="example.time6.co2">]