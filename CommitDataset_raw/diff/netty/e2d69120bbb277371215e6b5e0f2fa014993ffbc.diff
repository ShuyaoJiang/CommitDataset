[+++ b/buffer/src/main/java/io/netty/buffer/ByteBufferBackedChannelBuffer.java, +            return in.read(buffer.array(), buffer.arrayOffset() + index, length);, +            int readBytes = in.read(tmp);, +    }, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufferBackedChannelBuffer.java, +            return in.read(buffer.array(), buffer.arrayOffset() + index, length);, +            int readBytes = in.read(tmp);, +    }, +++ b/buffer/src/main/java/io/netty/buffer/HeapChannelBuffer.java, +        return in.read(array, index, length);, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufferBackedChannelBuffer.java, +            return in.read(buffer.array(), buffer.arrayOffset() + index, length);, +            int readBytes = in.read(tmp);, +    }, +++ b/buffer/src/main/java/io/netty/buffer/HeapChannelBuffer.java, +        return in.read(array, index, length);, +++ b/transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java, +    public static SingleThreadEventLoop currentEventLoop() {, +        return CURRENT_EVENT_LOOP.get();, +    }, +, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufferBackedChannelBuffer.java, +            return in.read(buffer.array(), buffer.arrayOffset() + index, length);, +            int readBytes = in.read(tmp);, +    }, +++ b/buffer/src/main/java/io/netty/buffer/HeapChannelBuffer.java, +        return in.read(array, index, length);, +++ b/transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java, +    public static SingleThreadEventLoop currentEventLoop() {, +        return CURRENT_EVENT_LOOP.get();, +    }, +, +++ /dev/null, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufferBackedChannelBuffer.java, +            return in.read(buffer.array(), buffer.arrayOffset() + index, length);, +            int readBytes = in.read(tmp);, +    }, +++ b/buffer/src/main/java/io/netty/buffer/HeapChannelBuffer.java, +        return in.read(array, index, length);, +++ b/transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java, +    public static SingleThreadEventLoop currentEventLoop() {, +        return CURRENT_EVENT_LOOP.get();, +    }, +, +++ /dev/null, +++ /dev/null, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufferBackedChannelBuffer.java, +            return in.read(buffer.array(), buffer.arrayOffset() + index, length);, +            int readBytes = in.read(tmp);, +    }, +++ b/buffer/src/main/java/io/netty/buffer/HeapChannelBuffer.java, +        return in.read(array, index, length);, +++ b/transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java, +    public static SingleThreadEventLoop currentEventLoop() {, +        return CURRENT_EVENT_LOOP.get();, +    }, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufferBackedChannelBuffer.java, +            return in.read(buffer.array(), buffer.arrayOffset() + index, length);, +            int readBytes = in.read(tmp);, +    }, +++ b/buffer/src/main/java/io/netty/buffer/HeapChannelBuffer.java, +        return in.read(array, index, length);, +++ b/transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java, +    public static SingleThreadEventLoop currentEventLoop() {, +        return CURRENT_EVENT_LOOP.get();, +    }, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/transport/src/main/java/io/netty/channel/socket/oio/BlockingChannelEventLoop.java, +package io.netty.channel.socket.oio;, +, +, +import io.netty.channel.Channel;, +import io.netty.channel.ChannelException;, +import io.netty.channel.ChannelFuture;, +import io.netty.channel.EventLoop;, +import io.netty.channel.SingleThreadEventLoop;, +import io.netty.util.internal.QueueFactory;, +, +import java.util.Collection;, +import java.util.Collections;, +import java.util.List;, +import java.util.Queue;, +import java.util.Set;, +import java.util.concurrent.Callable;, +import java.util.concurrent.ConcurrentHashMap;, +import java.util.concurrent.ExecutionException;, +import java.util.concurrent.Executors;, +import java.util.concurrent.Future;, +import java.util.concurrent.ScheduledFuture;, +import java.util.concurrent.ThreadFactory;, +import java.util.concurrent.TimeUnit;, +import java.util.concurrent.TimeoutException;, +]