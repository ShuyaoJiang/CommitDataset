[+++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdyFrameDecoderTest.java, +        decoder = new SpdyFrameDecoder(SpdyVersion.SPDY_3_1, new SpdyFrameDecoderDelegate() {, +            @Override, +            public void readDataFrame(int streamId, boolean last, ByteBuf data) {, +                try {, +                    delegate.readDataFrame(streamId, last, data);, +                } finally {, +                    // release the data after we delegate it and so checked it., +                    data.release();, +                }, +            @Override, +            public void readSynStreamFrame(int streamId, int associatedToStreamId,, +                                           byte priority, boolean last, boolean unidirectional) {, +                delegate.readSynStreamFrame(streamId, associatedToStreamId, priority, last, unidirectional);, +            }, +, +            @Override, +            public void readSynReplyFrame(int streamId, boolean last) {, +                delegate.readSynReplyFrame(streamId, last);, +            }, +, +            @Override, +            public void readRstStreamFrame(int streamId, int statusCode) {, +                delegate.readRstStreamFrame(streamId, statusCode);, +            }, +, +            @Override, +            public void readSettingsFrame(boolean clearPersisted) {, +                delegate.readSettingsFrame(clearPersisted);, +            }, +, +            @Override, +            public void readSetting(int id, int value, boolean persistValue, boolean persisted) {, +                delegate.readSetting(id, value, persistValue, persisted);, +            }, +, +            @Override, +            public void readSettingsEnd() {, +                delegate.readSettingsEnd();, +            }, +, +            @Override, +            public void readPingFrame(int id) {, +                delegate.readPingFrame(id);, +            }, +, +            @Override, +            public void readGoAwayFrame(int lastGoodStreamId, int statusCode) {, +                delegate.readGoAwayFrame(lastGoodStreamId, statusCode);, +            }, +, +            @Override, +            public void readHeadersFrame(int streamId, boolean last) {, +                delegate.readHeadersFrame(streamId, last);, +            }, +, +            @Override, +            public void readWindowUpdateFrame(int streamId, int deltaWindowSize) {, +                delegate.readWindowUpdateFrame(streamId, deltaWindowSize);, +            }, +, +            @Override, +            public void readHeaderBlock(ByteBuf headerBlock) {, +                delegate.readHeaderBlock(headerBlock);, +            }, +, +            @Override, +            public void readHeaderBlockEnd() {, +                delegate.readHeaderBlockEnd();, +            }, +, +            @Override, +            public void readFrameError(String message) {, +                delegate.readFrameError(message);, +            }, +        });, +    }, +, +    private static void encodeDataFrameHeader(ByteBuf buffer, int streamId, byte flags, int length) {, +    private static void encodeControlFrameHeader(ByteBuf buffer, short type, byte flags, int length) {]