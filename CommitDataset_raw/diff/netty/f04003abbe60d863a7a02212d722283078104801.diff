[+++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, +    String getCommentUrl();, +    void setCommentUrl(String commentUrl);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, +    String getCommentUrl();, +    void setCommentUrl(String commentUrl);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieDecoder.java, +                            comment = value;, +                            commentURL = value;, +                            domain = value;, +                            path = value;, +                    theCookie.setCommentUrl(commentURL);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, +    String getCommentUrl();, +    void setCommentUrl(String commentUrl);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieDecoder.java, +                            comment = value;, +                            commentURL = value;, +                            domain = value;, +                            path = value;, +                    theCookie.setCommentUrl(commentURL);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieEncoder.java, +                add(sb, CookieHeaderNames.PATH, cookie.getPath());, +                add(sb, CookieHeaderNames.DOMAIN, cookie.getDomain());, +                    add(sb, CookieHeaderNames.COMMENT, cookie.getComment());, +                if (cookie.getCommentUrl() != null) {, +                    addQuoted(sb, CookieHeaderNames.COMMENTURL, cookie.getCommentUrl());, +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, +    String getCommentUrl();, +    void setCommentUrl(String commentUrl);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieDecoder.java, +                            comment = value;, +                            commentURL = value;, +                            domain = value;, +                            path = value;, +                    theCookie.setCommentUrl(commentURL);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieEncoder.java, +                add(sb, CookieHeaderNames.PATH, cookie.getPath());, +                add(sb, CookieHeaderNames.DOMAIN, cookie.getDomain());, +                    add(sb, CookieHeaderNames.COMMENT, cookie.getComment());, +                if (cookie.getCommentUrl() != null) {, +                    addQuoted(sb, CookieHeaderNames.COMMENTURL, cookie.getCommentUrl());, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultCookie.java, +    private String commentUrl;, +        this.domain = validateValue("domain", domain);, +        this.path = validateValue("path", path);, +        this.comment = validateValue("comment", comment);, +    public String getCommentUrl() {, +        return commentUrl;, +    public void setCommentUrl(String commentUrl) {, +        this.commentUrl = validateValue("commentUrl", commentUrl);, +, +    private static String validateValue(String name, String value) {, +        if (value == null) {, +            return null;, +        }, +        value = value.trim();, +        if (value.length() == 0) {, +            return null;, +        }, +        for (int i = 0; i < value.length(); i ++) {, +            char c = value.charAt(i);, +            switch (c) {, +            case '\r': case '\n': case '\f': case 0x0b: case ';':, +                throw new IllegalArgumentException(, +                        value + " contains one of the following prohibited characters: " +, +                        ";\\r\\n\\f\\v (" + value + ')');, +            }, +        }, +        return value;, +    }, +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, +    String getCommentUrl();, +    void setCommentUrl(String commentUrl);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieDecoder.java, +                            comment = value;, +                            commentURL = value;, +                            domain = value;, +                            path = value;, +                    theCookie.setCommentUrl(commentURL);, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieEncoder.java, +                add(sb, CookieHeaderNames.PATH, cookie.getPath());, +                add(sb, CookieHeaderNames.DOMAIN, cookie.getDomain());, +                    add(sb, CookieHeaderNames.COMMENT, cookie.getComment());, +                if (cookie.getCommentUrl() != null) {, +                    addQuoted(sb, CookieHeaderNames.COMMENTURL, cookie.getCommentUrl());, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultCookie.java, +    private String commentUrl;, +        this.domain = validateValue("domain", domain);, +        this.path = validateValue("path", path);, +        this.comment = validateValue("comment", comment);, +    public String getCommentUrl() {, +        return commentUrl;, +    public void setCommentUrl(String commentUrl) {, +        this.commentUrl = validateValue("commentUrl", commentUrl);, +, +    private static String validateValue(String name, String value) {, +        if (value == null) {, +            return null;, +        }]