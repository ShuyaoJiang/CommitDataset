[+++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, +    /**, +     * This method will not call, +     * {@link #setHandshakeFailure(io.netty.channel.ChannelHandlerContext, Throwable, boolean)} or, +     * {@link #setHandshakeFailure(io.netty.channel.ChannelHandlerContext, Throwable)}., +     * @return {@code true} if this method ends on {@link SSLEngineResult.HandshakeStatus#NOT_HANDSHAKING}., +     */, +    private boolean wrapNonAppData(ChannelHandlerContext ctx, boolean inUnwrap) throws SSLException {, +                        return false;, +                        return true;, +        return false;, +            unwrapLoop: while (!ctx.isRemoved()) {, +                        // If the wrap operation transitions the status to NOT_HANDSHAKING and there is no more data to, +                        // unwrap then the next call to unwrap will not produce any data. We can avoid the potentially, +                        // costly unwrap operation and break out of the loop., +                        if (wrapNonAppData(ctx, true) && length == 0) {, +                            break unwrapLoop;, +                        }, +                        // If we are not handshaking and there is no more data to unwrap then the next call to unwrap, +                        // will not produce any data. We can avoid the potentially costly unwrap operation and break, +                        // out of the loop., +                        if (length == 0) {, +                            break unwrapLoop;, +                        }]