[+++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        checkIndex(index);, +        int bytesToCopy = Math.min(capacity() - index, dst.remaining());, +        if (bytesToCopy == 0) {, +        if (dst.isDirect()) {, +            // Copy to direct memory, +            long dstAddress = PlatformDependent.directBufferAddress(dst);, +            PlatformDependent.copyMemory(addr(index), dstAddress + dst.position(), bytesToCopy);, +            // Copy to array, +            PlatformDependent.copyMemory(addr(index), dst.array(), dst.arrayOffset() + dst.position(), bytesToCopy);, +, +        dst.position(dst.position() + bytesToCopy);, +        return this;, +        getBytes(readerIndex, dst);, +, +        int length = src.remaining();, +        if (length == 0) {, +            return this;, +        if (src.isDirect()) {, +            // Copy from direct memory, +            long srcAddress = PlatformDependent.directBufferAddress(src);, +            PlatformDependent.copyMemory(srcAddress + src.position(), addr(index), src.remaining());, +        } else {, +            // Copy from array, +            PlatformDependent.copyMemory(src.array(), src.arrayOffset() + src.position(), addr(index), length);, +        }, +        src.position(src.position() + length);, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        checkIndex(index);, +        int bytesToCopy = Math.min(capacity() - index, dst.remaining());, +        if (bytesToCopy == 0) {, +        if (dst.isDirect()) {, +            // Copy to direct memory, +            long dstAddress = PlatformDependent.directBufferAddress(dst);, +            PlatformDependent.copyMemory(addr(index), dstAddress + dst.position(), bytesToCopy);, +            // Copy to array, +            PlatformDependent.copyMemory(addr(index), dst.array(), dst.arrayOffset() + dst.position(), bytesToCopy);, +, +        dst.position(dst.position() + bytesToCopy);, +        return this;, +        getBytes(readerIndex, dst);, +, +        int length = src.remaining();, +        if (length == 0) {, +            return this;, +        if (src.isDirect()) {, +            // Copy from direct memory, +            long srcAddress = PlatformDependent.directBufferAddress(src);, +            PlatformDependent.copyMemory(srcAddress + src.position(), addr(index), src.remaining());, +        } else {, +            // Copy from array, +            PlatformDependent.copyMemory(src.array(), src.arrayOffset() + src.position(), addr(index), length);, +        }, +        src.position(src.position() + length);, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledUnsafeDirectByteBuf.java, +        if (bytesToCopy == 0) {, +            return this;, +, +        if (dst.isDirect()) {, +            // Copy to direct memory, +            long dstAddress = PlatformDependent.directBufferAddress(dst);, +            PlatformDependent.copyMemory(addr(index), dstAddress + dst.position(), bytesToCopy);, +        } else {, +            // Copy to array, +            PlatformDependent.copyMemory(addr(index), dst.array(), dst.arrayOffset() + dst.position(), bytesToCopy);, +        }, +, +        dst.position(dst.position() + bytesToCopy);, +        return this;, +        getBytes(readerIndex, dst);, +        int length = src.remaining();, +        if (length == 0) {, +            return this;, +        if (src.isDirect()) {, +            // Copy from direct memory, +            long srcAddress = PlatformDependent.directBufferAddress(src);, +            PlatformDependent.copyMemory(srcAddress + src.position(), addr(index), src.remaining());, +        } else {, +            // Copy from array, +            PlatformDependent.copyMemory(src.array(), src.arrayOffset() + src.position(), addr(index), length);, +        }, +        src.position(src.position() + length);]