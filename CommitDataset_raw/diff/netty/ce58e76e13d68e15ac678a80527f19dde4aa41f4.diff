[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequestEncoder.java, +, +        if (uri.length() == 0) {, +            uri += SLASH;, +        } else {, +            if (start != -1 && uri.charAt(0) != SLASH) {, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequestEncoder.java, +, +        if (uri.length() == 0) {, +            uri += SLASH;, +        } else {, +            if (start != -1 && uri.charAt(0) != SLASH) {, +        }, +, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpRequestEncoderTest.java, +, +    @Test, +    public void testAbsPath() throws Exception {, +        HttpRequestEncoder encoder = new HttpRequestEncoder();, +        ByteBuf buffer = Unpooled.buffer(64);, +        encoder.encodeInitialLine(buffer, new DefaultHttpRequest(HttpVersion.HTTP_1_1,, +                HttpMethod.GET, "/"));, +        String req = buffer.toString(Charset.forName("US-ASCII"));, +        assertEquals("GET / HTTP/1.1\r\n", req);, +    }, +, +    @Test, +    public void testEmptyAbsPath() throws Exception {, +        HttpRequestEncoder encoder = new HttpRequestEncoder();, +        ByteBuf buffer = Unpooled.buffer(64);, +        encoder.encodeInitialLine(buffer, new DefaultHttpRequest(HttpVersion.HTTP_1_1,, +                HttpMethod.GET, ""));, +        String req = buffer.toString(Charset.forName("US-ASCII"));, +        assertEquals("GET / HTTP/1.1\r\n", req);, +    }, +, +    @Test, +    public void testQueryStringPath() throws Exception {, +        HttpRequestEncoder encoder = new HttpRequestEncoder();, +        ByteBuf buffer = Unpooled.buffer(64);, +        encoder.encodeInitialLine(buffer, new DefaultHttpRequest(HttpVersion.HTTP_1_1,, +                HttpMethod.GET, "/?url=http://example.com"));, +        String req = buffer.toString(Charset.forName("US-ASCII"));, +        assertEquals("GET /?url=http://example.com HTTP/1.1\r\n", req);, +    }]