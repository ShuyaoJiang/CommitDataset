[+++ b/transport/src/main/java/io/netty/channel/ChannelFuture.java, +     * Adds the specified listeners to this future.  The, +     * specified listeners are notified when this future is, +     * {@linkplain #isDone() done}.  If this future is already, +     * completed, the specified listeners are notified immediately., +     */, +    ChannelFuture addListeners(ChannelFutureListener... listeners);, +, +    /**, +     * Removes the specified listeners from this future., +     * The specified listeners are no longer notified when this, +     * future is {@linkplain #isDone() done}.  If the specified, +     * listeners are not associated with this future, this method, +     * does nothing and returns silently., +     */, +    ChannelFuture removeListeners(ChannelFutureListener... listeners);, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelFuture.java, +     * Adds the specified listeners to this future.  The, +     * specified listeners are notified when this future is, +     * {@linkplain #isDone() done}.  If this future is already, +     * completed, the specified listeners are notified immediately., +     */, +    ChannelFuture addListeners(ChannelFutureListener... listeners);, +, +    /**, +     * Removes the specified listeners from this future., +     * The specified listeners are no longer notified when this, +     * future is {@linkplain #isDone() done}.  If the specified, +     * listeners are not associated with this future, this method, +     * does nothing and returns silently., +     */, +    ChannelFuture removeListeners(ChannelFutureListener... listeners);, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/CompleteChannelFuture.java, +    public ChannelFuture addListeners(ChannelFutureListener... listeners) {, +        if (listeners == null) {, +            throw new NullPointerException("listeners");, +        }, +        for (ChannelFutureListener l: listeners) {, +            if (l == null) {, +                break;, +            }, +            DefaultChannelFuture.notifyListener(this, l);, +        }, +        return this;, +    }, +, +    @Override, +    public ChannelFuture removeListeners(ChannelFutureListener... listeners) {, +        // NOOP, +        return this;, +    }, +, +    @Override, +++ b/transport/src/main/java/io/netty/channel/ChannelFuture.java, +     * Adds the specified listeners to this future.  The, +     * specified listeners are notified when this future is, +     * {@linkplain #isDone() done}.  If this future is already, +     * completed, the specified listeners are notified immediately., +     */, +    ChannelFuture addListeners(ChannelFutureListener... listeners);, +, +    /**, +     * Removes the specified listeners from this future., +     * The specified listeners are no longer notified when this, +     * future is {@linkplain #isDone() done}.  If the specified, +     * listeners are not associated with this future, this method, +     * does nothing and returns silently., +     */, +    ChannelFuture removeListeners(ChannelFutureListener... listeners);, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/CompleteChannelFuture.java, +    public ChannelFuture addListeners(ChannelFutureListener... listeners) {, +        if (listeners == null) {, +            throw new NullPointerException("listeners");, +        }, +        for (ChannelFutureListener l: listeners) {, +            if (l == null) {, +                break;, +            }, +            DefaultChannelFuture.notifyListener(this, l);, +        }, +        return this;, +    }, +, +    @Override, +    public ChannelFuture removeListeners(ChannelFutureListener... listeners) {, +        // NOOP, +        return this;, +    }, +, +    @Override, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelFuture.java, +    public ChannelFuture addListeners(ChannelFutureListener... listeners) {, +        if (listeners == null) {, +            throw new NullPointerException("listeners");]