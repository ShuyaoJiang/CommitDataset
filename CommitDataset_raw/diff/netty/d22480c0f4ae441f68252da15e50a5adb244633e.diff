[+++ b/transport/src/main/java/io/netty/bootstrap/ClientBootstrap.java, +import io.netty.channel.ChannelHandler;, +/**, + * A {@link Bootstrap} that makes it easy to bootstrap a {@link Channel} to use, + * for clients., + *, + */, +    /**, +     * The {@link SocketAddress} to connect to once the {@link #connect()} method, +     * is called., +     */, +    /**, +     * See {@link #remoteAddress(SocketAddress)}, +     */, +    /**, +     * See {@link #remoteAddress(SocketAddress)}, +     */, +    /**, +     * Connect a {@link Channel} to the remote peer., +     */, +    /**, +     * See {@link #connect()}, +     */, +    /**, +     * Create a new {@link ClientBootstrap} using this "full-setup" {@link ClientBootstrap} as template. , +     * Only the given parameters are replaced, the rest is configured exactly the same way as the template., +     */, +    public ClientBootstrap newBootstrap(SocketAddress localAddress, SocketAddress remoteAddress, ChannelHandler handler) {, +        validate();, +        ClientBootstrap cb = new ClientBootstrap().handler(handler).channelFactory(factory()).group(group()).localAddress(localAddress).remoteAddress(remoteAddress);, +        cb.options().putAll(options());, +        , +        return cb;, +    }, +, +    /**, +     * Create a new {@link ClientBootstrap} using this "full-setup" {@link ClientBootstrap} as template. , +     * Only the given parameters are replaced, the rest is configured exactly the same way as the template., +     */, +    public ClientBootstrap newBootstrap(SocketAddress localAddress, SocketAddress remoteAddress) {, +        return newBootstrap(localAddress, remoteAddress, handler());, +    }]