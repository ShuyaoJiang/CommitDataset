[+++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, + * To close the SSL session, the {@link #closeOutbound()} method should be, +     * Use {@link #closeOutbound()}, +        return closeOutbound();, +     * Use {@link #closeOutbound(ChannelPromise)}, +    public ChannelFuture close(ChannelPromise promise) {, +        return closeOutbound(promise);, +    }, +, +    /**, +     * Sends an SSL {@code close_notify} message to the specified channel and, +     * destroys the underlying {@link SSLEngine}. This will <strong>not</strong> close the underlying, +     * {@link Channel}. If you want to also close the {@link Channel} use {@link Channel#close()} or, +     * {@link ChannelHandlerContext#close()}, +     */, +    public ChannelFuture closeOutbound() {, +        return closeOutbound(ctx.newPromise());, +    }, +, +    /**, +     * Sends an SSL {@code close_notify} message to the specified channel and, +     * destroys the underlying {@link SSLEngine}. This will <strong>not</strong> close the underlying, +     * {@link Channel}. If you want to also close the {@link Channel} use {@link Channel#close()} or, +     * {@link ChannelHandlerContext#close()}, +     */, +    public ChannelFuture closeOutbound(final ChannelPromise promise) {, +        if (ctx.executor().inEventLoop()) {, +            closeOutbound0(promise);, +        } else {, +                    closeOutbound0(promise);, +                }, +            });, +        }, +        return promise;, +    }, +, +    private void closeOutbound0(ChannelPromise promise) {]