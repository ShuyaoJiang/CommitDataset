[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DecoratingHttp2FrameWriter.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DecoratingHttp2FrameWriter.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java, +        public void onPingRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +            encoder.writePing(ctx, true, data, ctx.newPromise());, +        public void onPingAckRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +        public void onPingRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +        public void onPingAckRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DecoratingHttp2FrameWriter.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java, +        public void onPingRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +            encoder.writePing(ctx, true, data, ctx.newPromise());, +        public void onPingAckRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +        public void onPingRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +        public void onPingAckRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DecoratingHttp2FrameWriter.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java, +        public void onPingRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +            encoder.writePing(ctx, true, data, ctx.newPromise());, +        public void onPingAckRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +        public void onPingRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +        public void onPingAckRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +                readPingFrame(ctx, payload.readLong(), listener);, +    private void readPingFrame(ChannelHandlerContext ctx, long data,, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DecoratingHttp2FrameWriter.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java, +        public void onPingRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +            encoder.writePing(ctx, true, data, ctx.newPromise());, +        public void onPingAckRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +        public void onPingRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +        public void onPingAckRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +                readPingFrame(ctx, payload.readLong(), listener);, +    private void readPingFrame(ChannelHandlerContext ctx, long data,, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameWriter.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +        ByteBuf buf = ctx.alloc().buffer(FRAME_HEADER_LENGTH + PING_FRAME_PAYLOAD_LENGTH);, +        writeFrameHeaderInternal(buf, PING_FRAME_PAYLOAD_LENGTH, PING, flags, 0);, +        buf.writeLong(data);, +        return ctx.write(buf, promise);, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DecoratingHttp2FrameWriter.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java, +        public void onPingRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +            encoder.writePing(ctx, true, data, ctx.newPromise());, +        public void onPingAckRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +        public void onPingRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +        public void onPingAckRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +                readPingFrame(ctx, payload.readLong(), listener);, +    private void readPingFrame(ChannelHandlerContext ctx, long data,, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameWriter.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +        ByteBuf buf = ctx.alloc().buffer(FRAME_HEADER_LENGTH + PING_FRAME_PAYLOAD_LENGTH);, +        writeFrameHeaderInternal(buf, PING_FRAME_PAYLOAD_LENGTH, PING, flags, 0);, +        buf.writeLong(data);, +        return ctx.write(buf, promise);, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2PingFrame.java, +public class DefaultHttp2PingFrame implements Http2PingFrame {, +    private final long content;, +    public DefaultHttp2PingFrame(long content) {, +    DefaultHttp2PingFrame(long content, boolean ack) {, +        this.content = content;, +    public long content() {, +        return content;, +        return ack == other.ack() &&  content == other.content();, +        return StringUtil.simpleClassName(this) + "(content=" + content + ", ack=" + ack + ')';, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DecoratingHttp2FrameWriter.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java, +        public void onPingRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +            encoder.writePing(ctx, true, data, ctx.newPromise());, +        public void onPingAckRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +        public void onPingRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +        public void onPingAckRead(ChannelHandlerContext ctx, long data) throws Http2Exception {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +                readPingFrame(ctx, payload.readLong(), listener);, +    private void readPingFrame(ChannelHandlerContext ctx, long data,, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameWriter.java, +    public ChannelFuture writePing(ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {, +        ByteBuf buf = ctx.alloc().buffer(FRAME_HEADER_LENGTH + PING_FRAME_PAYLOAD_LENGTH);, +        writeFrameHeaderInternal(buf, PING_FRAME_PAYLOAD_LENGTH, PING, flags, 0);, +        buf.writeLong(data);, +        return ctx.write(buf, promise);]