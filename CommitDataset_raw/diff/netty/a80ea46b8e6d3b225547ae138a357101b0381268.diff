[+++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DefaultDnsRecordEncoder.java, +        final String[] labels = name.split("\\.");, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DefaultDnsRecordEncoder.java, +        final String[] labels = name.split("\\.");, +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyMessage.java, +        String[] parts = header.split(" ");, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DefaultDnsRecordEncoder.java, +        final String[] labels = name.split("\\.");, +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyMessage.java, +        String[] parts = header.split(" ");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieDecoder.java, +                    String[] portList = value.split(",");, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DefaultDnsRecordEncoder.java, +        final String[] labels = name.split("\\.");, +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyMessage.java, +        String[] parts = header.split(" ");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieDecoder.java, +                    String[] portList = value.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +        for (String encoding : acceptEncoding.split(",")) {, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DefaultDnsRecordEncoder.java, +        final String[] labels = name.split("\\.");, +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyMessage.java, +        String[] parts = header.split(" ");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieDecoder.java, +                    String[] portList = value.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +        for (String encoding : acceptEncoding.split(",")) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +        String[] parts = value.split(",");, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DefaultDnsRecordEncoder.java, +        final String[] labels = name.split("\\.");, +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyMessage.java, +        String[] parts = header.split(" ");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieDecoder.java, +                    String[] portList = value.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +        for (String encoding : acceptEncoding.split(",")) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +        String[] parts = value.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java, +                        String[] values = contents[i].split("=", 2);, +            values = svalue.split(",");, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DefaultDnsRecordEncoder.java, +        final String[] labels = name.split("\\.");, +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyMessage.java, +        String[] parts = header.split(" ");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieDecoder.java, +                    String[] portList = value.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +        for (String encoding : acceptEncoding.split(",")) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +        String[] parts = value.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java, +                        String[] values = contents[i].split("=", 2);, +            values = svalue.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +            for (String protocol : expectedProtocol.split(",")) {, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DefaultDnsRecordEncoder.java, +        final String[] labels = name.split("\\.");, +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyMessage.java, +        String[] parts = header.split(" ");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieDecoder.java, +                    String[] portList = value.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +        for (String encoding : acceptEncoding.split(",")) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +        String[] parts = value.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java, +                        String[] values = contents[i].split("=", 2);, +            values = svalue.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +            for (String protocol : expectedProtocol.split(",")) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.java, +            String[] subprotocolArray = subprotocols.split(",");, +        String[] requestedSubprotocolArray = requestedSubprotocols.split(",");, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DefaultDnsRecordEncoder.java, +        final String[] labels = name.split("\\.");, +++ b/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyMessage.java, +        String[] parts = header.split(" ");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieDecoder.java, +                    String[] portList = value.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +        for (String encoding : acceptEncoding.split(",")) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +        String[] parts = value.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java, +                        String[] values = contents[i].split("=", 2);, +            values = svalue.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +            for (String protocol : expectedProtocol.split(",")) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.java, +            String[] subprotocolArray = subprotocols.split(",");, +        String[] requestedSubprotocolArray = requestedSubprotocols.split(",");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionUtil.java, +    private static final String EXTENSION_SEPARATOR = ",";, +    private static final String PARAMETER_SEPARATOR = ";";, +        String[] rawExtensions = extensionHeader.split(EXTENSION_SEPARATOR);, +                String[] extensionParameters = rawExtension.split(PARAMETER_SEPARATOR);, +                    parameters = Collections.emptyMap();]