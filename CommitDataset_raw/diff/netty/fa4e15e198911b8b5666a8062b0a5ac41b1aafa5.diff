[+++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, +import io.netty.util.Recycler;, +            write.failAndRecycle(new ChannelException("Pending write on removal of SslHandler"));, +        pendingUnencryptedWrites.add(PendingWrite.newInstance((ByteBuf) msg, promise));, +                pendingWrite.recycle();, +            pendingUnencryptedWrites.add(PendingWrite.newInstance(Unpooled.EMPTY_BUFFER, null));, +                    pending.recycle();, +                        w.failAndRecycle(SSLENGINE_CLOSED);, +            write.failAndRecycle(cause);, +        private static final Recycler<PendingWrite> RECYCLER = new Recycler<PendingWrite>() {, +            @Override, +            protected PendingWrite newObject(Handle handle) {, +                return new PendingWrite(handle);, +            }, +        };, +        /**, +         * Create a new empty {@link RecyclableArrayList} instance, +         */, +        public static PendingWrite newInstance(ByteBuf buf, ChannelPromise promise) {, +            PendingWrite pending = RECYCLER.get();, +            pending.buf = buf;, +            pending.promise = promise;, +            return pending;, +        private final Recycler.Handle handle;, +        private ByteBuf buf;, +        private ChannelPromise promise;, +, +        private PendingWrite(Recycler.Handle handle) {, +            this.handle = handle;, +        /**, +         * Clear and recycle this instance., +         */, +        boolean recycle() {, +            buf = null;, +            promise = null;, +            return RECYCLER.recycle(this, handle);, +        }, +, +        boolean failAndRecycle(Throwable cause) {, +            return recycle();]