[+++ b/transport/src/main/java/io/netty/channel/ChannelHandler.java, + *  (using {@link AttributeKey}s) which is specific to the handler., + *     public void channelRead0({@link ChannelHandlerContext} ctx, Message message) {, + * <h4>Using {@link AttributeKey}</h4>, + * In such a case, you can use {@link AttributeKey}s which is provided by, + *         {@link Attribute}&lt{@link Boolean}&gt attr = ctx.attr(auth);, + * Now that the state of the handler isattached to the {@link ChannelHandlerContext}, you can add the, + * In the example above which used an {@link AttributeKey},, +++ b/transport/src/main/java/io/netty/channel/ChannelHandler.java, + *  (using {@link AttributeKey}s) which is specific to the handler., + *     public void channelRead0({@link ChannelHandlerContext} ctx, Message message) {, + * <h4>Using {@link AttributeKey}</h4>, + * In such a case, you can use {@link AttributeKey}s which is provided by, + *         {@link Attribute}&lt{@link Boolean}&gt attr = ctx.attr(auth);, + * Now that the state of the handler isattached to the {@link ChannelHandlerContext}, you can add the, + * In the example above which used an {@link AttributeKey},, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerContext.java, + * replace handlers in the pipeline dynamically at runtime., + * For example, the following handler will have as many independent {@link AttributeKey}s, + * // stores its state in a context object (as an (using an {@link AttributeKey}), the factorial is, +++ b/transport/src/main/java/io/netty/channel/ChannelHandler.java, + *  (using {@link AttributeKey}s) which is specific to the handler., + *     public void channelRead0({@link ChannelHandlerContext} ctx, Message message) {, + * <h4>Using {@link AttributeKey}</h4>, + * In such a case, you can use {@link AttributeKey}s which is provided by, + *         {@link Attribute}&lt{@link Boolean}&gt attr = ctx.attr(auth);, + * Now that the state of the handler isattached to the {@link ChannelHandlerContext}, you can add the, + * In the example above which used an {@link AttributeKey},, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerContext.java, + * replace handlers in the pipeline dynamically at runtime., + * For example, the following handler will have as many independent {@link AttributeKey}s, + * // stores its state in a context object (as an (using an {@link AttributeKey}), the factorial is, +++ b/transport/src/main/java/io/netty/channel/SimpleChannelInboundHandler.java, + * Please keep in mind that {@link #channelRead0(ChannelHandlerContext, I)} will be renamed to]