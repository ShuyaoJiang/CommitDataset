[+++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    private final ComponentList components;, +    private static ComponentList newList(int maxNumComponents) {, +        return new ComponentList(Math.min(AbstractByteBufAllocator.DEFAULT_MAX_COMPONENTS, maxNumComponents));, +        components = null;, +        int endIndex = cIndex + numComponents;, +        for (int i = cIndex; i < endIndex; ++i) {, +            Component c = components.get(i);, +        components.removeRange(cIndex, endIndex);, +        components.removeRange(cIndex + 1, endCIndex);, +            int size = components.size();, +            for (int i = 0; i < size; i++) {, +                components.get(i).freeIfNecessary();, +        components.removeRange(0, firstComponentId);, +            int size = components.size();, +            for (int i = 0; i < size; i++) {, +                components.get(i).freeIfNecessary();, +        Component c = components.get(firstComponentId);, +            firstComponentId++;, +            components.set(firstComponentId, newC);, +        components.removeRange(0, firstComponentId);, +, +, +    private static final class ComponentList extends ArrayList<Component> {, +, +        ComponentList(int initialCapacity) {, +            super(initialCapacity);, +        }, +, +        // Expose this methods so we not need to create a new subList just to remove a range of elements., +        @Override, +        public void removeRange(int fromIndex, int toIndex) {, +            super.removeRange(fromIndex, toIndex);, +        }, +    }]