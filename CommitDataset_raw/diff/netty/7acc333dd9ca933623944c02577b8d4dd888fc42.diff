[+++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +    public String toString(String charsetName) {, +        return toString(readerIndex, readableBytes(), charsetName);, +    }, +, +        return ChannelBuffers.hashCode(this);, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +    public String toString(String charsetName) {, +        return toString(readerIndex, readableBytes(), charsetName);, +    }, +, +        return ChannelBuffers.hashCode(this);, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +import java.io.UnsupportedEncodingException;, +import java.nio.charset.UnsupportedCharsetException;, +    public String toString(int index, int length, String charsetName) {, +        if (!buffer.isReadOnly() && buffer.hasArray()) {, +            try {, +                return new String(, +                        buffer.array(), index + buffer.arrayOffset(), length,, +                        charsetName);, +            } catch (UnsupportedEncodingException e) {, +                throw new UnsupportedCharsetException(charsetName);, +            }, +        } else {, +            byte[] tmp = new byte[length];, +            ((ByteBuffer) buffer.duplicate().position(index)).get(tmp);, +            try {, +                return new String(tmp, charsetName);, +            } catch (UnsupportedEncodingException e) {, +                throw new UnsupportedCharsetException(charsetName);, +            }, +        }, +    }, +, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +    public String toString(String charsetName) {, +        return toString(readerIndex, readableBytes(), charsetName);, +    }, +, +        return ChannelBuffers.hashCode(this);, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +import java.io.UnsupportedEncodingException;, +import java.nio.charset.UnsupportedCharsetException;, +    public String toString(int index, int length, String charsetName) {, +        if (!buffer.isReadOnly() && buffer.hasArray()) {, +            try {, +                return new String(, +                        buffer.array(), index + buffer.arrayOffset(), length,, +                        charsetName);, +            } catch (UnsupportedEncodingException e) {, +                throw new UnsupportedCharsetException(charsetName);, +            }, +        } else {, +            byte[] tmp = new byte[length];, +            ((ByteBuffer) buffer.duplicate().position(index)).get(tmp);, +            try {, +                return new String(tmp, charsetName);, +            } catch (UnsupportedEncodingException e) {, +                throw new UnsupportedCharsetException(charsetName);, +            }, +        }, +    }, +, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, +    String toString(String charsetName);, +    String toString(int index, int length, String charsetName);, +, +++ b/src/main/java/org/jboss/netty/buffer/AbstractChannelBuffer.java, +    public String toString(String charsetName) {, +        return toString(readerIndex, readableBytes(), charsetName);, +    }, +, +        return ChannelBuffers.hashCode(this);, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +import java.io.UnsupportedEncodingException;, +import java.nio.charset.UnsupportedCharsetException;, +    public String toString(int index, int length, String charsetName) {, +        if (!buffer.isReadOnly() && buffer.hasArray()) {, +            try {, +                return new String(, +                        buffer.array(), index + buffer.arrayOffset(), length,, +                        charsetName);, +            } catch (UnsupportedEncodingException e) {, +                throw new UnsupportedCharsetException(charsetName);, +            }, +        } else {, +            byte[] tmp = new byte[length];, +            ((ByteBuffer) buffer.duplicate().position(index)).get(tmp);, +            try {, +                return new String(tmp, charsetName);, +            } catch (UnsupportedEncodingException e) {, +                throw new UnsupportedCharsetException(charsetName);, +            }, +        }, +    }, +, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, +    String toString(String charsetName);, +    String toString(int index, int length, String charsetName);]