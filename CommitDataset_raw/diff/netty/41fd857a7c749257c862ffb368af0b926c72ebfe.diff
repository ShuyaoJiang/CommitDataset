[+++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +            if (readableBytes != 0) {, +        }, +        Component comp = components.remove(cIndex);, +        comp.freeIfNecessary();, +        if (comp.length > 0) {, +            // Only need to call updateComponentOffsets if the length was > 0, +        }, +        if (numComponents == 0) {, +            return this;, +        }, +        boolean needsUpdate = false;, +            if (c.length > 0) {, +                needsUpdate = true;, +            }, +        if (needsUpdate) {, +            // Only need to call updateComponentOffsets if the length was > 0, +        }, +                assert c.length != 0;, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +            if (readableBytes != 0) {, +        }, +        Component comp = components.remove(cIndex);, +        comp.freeIfNecessary();, +        if (comp.length > 0) {, +            // Only need to call updateComponentOffsets if the length was > 0, +        }, +        if (numComponents == 0) {, +            return this;, +        }, +        boolean needsUpdate = false;, +            if (c.length > 0) {, +                needsUpdate = true;, +            }, +        if (needsUpdate) {, +            // Only need to call updateComponentOffsets if the length was > 0, +        }, +                assert c.length != 0;, +++ b/buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java, +, +    @Test, +    public void testAddEmptyBufferRelease() {, +        CompositeByteBuf cbuf = compositeBuffer();, +        ByteBuf buf = buffer();, +        assertEquals(1, buf.refCnt());, +        cbuf.addComponent(buf);, +        assertEquals(1, buf.refCnt());, +, +        cbuf.release();, +        assertEquals(0, buf.refCnt());, +    }, +, +    @Test, +    public void testAddEmptyBuffersRelease() {, +        CompositeByteBuf cbuf = compositeBuffer();, +        ByteBuf buf = buffer();, +        ByteBuf buf2 = buffer().writeInt(1);, +        ByteBuf buf3 = buffer();, +, +        assertEquals(1, buf.refCnt());, +        assertEquals(1, buf2.refCnt());, +        assertEquals(1, buf3.refCnt());, +, +        cbuf.addComponents(buf, buf2, buf3);, +        assertEquals(1, buf.refCnt());, +        assertEquals(1, buf2.refCnt());, +        assertEquals(1, buf3.refCnt());, +, +        cbuf.release();, +        assertEquals(0, buf.refCnt());, +        assertEquals(0, buf2.refCnt());, +        assertEquals(0, buf3.refCnt());, +    }, +, +    @Test, +    public void testAddEmptyBufferInMiddle() {, +        CompositeByteBuf cbuf = compositeBuffer();, +        ByteBuf buf1 = buffer().writeByte((byte) 1);, +        cbuf.addComponent(buf1).writerIndex(cbuf.writerIndex() + buf1.readableBytes());, +        ByteBuf buf2 = EMPTY_BUFFER;, +        cbuf.addComponent(buf2).writerIndex(cbuf.writerIndex() + buf2.readableBytes());, +        ByteBuf buf3 = buffer().writeByte((byte) 2);, +        cbuf.addComponent(buf3).writerIndex(cbuf.writerIndex() + buf3.readableBytes());, +, +        assertEquals(2, cbuf.readableBytes());, +        assertEquals((byte) 1, cbuf.readByte());, +        assertEquals((byte) 2, cbuf.readByte());, +, +        assertSame(EMPTY_BUFFER, cbuf.internalComponent(1));, +        assertNotSame(EMPTY_BUFFER, cbuf.internalComponentAtOffset(1));, +        cbuf.release();, +    }]