[+++ b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java, +                logger.debug("Successfully loaded the library: {}", name);, +                logger.debug("Unable to load the library '{}', trying next name...", name, t);, +            return;, +        } catch (UnsatisfiedLinkError e) { // Should by pass the UnsatisfiedLinkError here!, +            logger.debug("Unable to load the library '{}', trying other loading mechanism.", name, e);, +        } catch (Exception e) {, +            logger.debug("Unable to load the library '{}', trying other loading mechanism.", name, e);, +        }, +    private static void loadLibraryByHelper(final Class<?> helper, final String name, final boolean absolute), +            throws UnsatisfiedLinkError {, +        Object ret = AccessController.doPrivileged(new PrivilegedAction<Object>() {, +                    return e;, +        if (ret instanceof Throwable) {, +            Throwable error = (Throwable) ret;, +            Throwable cause = error.getCause();, +            if (cause != null) {, +                if (cause instanceof UnsatisfiedLinkError) {, +                    throw (UnsatisfiedLinkError) cause;, +                } else {, +                    throw new UnsatisfiedLinkError(cause.getMessage());, +                }, +            }, +            throw new UnsatisfiedLinkError(error.getMessage());, +        }]