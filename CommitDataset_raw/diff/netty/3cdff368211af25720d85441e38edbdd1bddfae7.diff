[+++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/AbstractSctpTest.java, +        serverBootstrap.localAddress(new InetSocketAddress(NetUtil.LOCALHOST, 0));, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/AbstractSctpTest.java, +        serverBootstrap.localAddress(new InetSocketAddress(NetUtil.LOCALHOST, 0));, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/SctpEchoTest.java, +        Channel cc = cb.connect(sc.localAddress()).sync().channel();, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/AbstractSctpTest.java, +        serverBootstrap.localAddress(new InetSocketAddress(NetUtil.LOCALHOST, 0));, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/SctpEchoTest.java, +        Channel cc = cb.connect(sc.localAddress()).sync().channel();, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractClientSocketTest.java, +        return new InetSocketAddress(NetUtil.LOCALHOST, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/AbstractSctpTest.java, +        serverBootstrap.localAddress(new InetSocketAddress(NetUtil.LOCALHOST, 0));, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/SctpEchoTest.java, +        Channel cc = cb.connect(sc.localAddress()).sync().channel();, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractClientSocketTest.java, +        return new InetSocketAddress(NetUtil.LOCALHOST, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractDatagramTest.java, +import java.net.SocketAddress;, +    protected SocketAddress newSocketAddress() {, +        // We use LOCALHOST4 as we use InternetProtocolFamily.IPv4 when creating the DatagramChannel and its, +        // not supported to bind to and IPV6 address in this case., +        //, +        // See also http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/file/e74259b3eadc/, +        // src/share/classes/sun/nio/ch/DatagramChannelImpl.java#l684, +        return new InetSocketAddress(NetUtil.LOCALHOST4, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/AbstractSctpTest.java, +        serverBootstrap.localAddress(new InetSocketAddress(NetUtil.LOCALHOST, 0));, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/SctpEchoTest.java, +        Channel cc = cb.connect(sc.localAddress()).sync().channel();, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractClientSocketTest.java, +        return new InetSocketAddress(NetUtil.LOCALHOST, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractDatagramTest.java, +import java.net.SocketAddress;, +    protected SocketAddress newSocketAddress() {, +        // We use LOCALHOST4 as we use InternetProtocolFamily.IPv4 when creating the DatagramChannel and its, +        // not supported to bind to and IPV6 address in this case., +        //, +        // See also http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/file/e74259b3eadc/, +        // src/share/classes/sun/nio/ch/DatagramChannelImpl.java#l684, +        return new InetSocketAddress(NetUtil.LOCALHOST4, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractServerSocketTest.java, +        bootstrap.localAddress(newSocketAddress());, +                NetUtil.LOCALHOST, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/AbstractSctpTest.java, +        serverBootstrap.localAddress(new InetSocketAddress(NetUtil.LOCALHOST, 0));, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/SctpEchoTest.java, +        Channel cc = cb.connect(sc.localAddress()).sync().channel();, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractClientSocketTest.java, +        return new InetSocketAddress(NetUtil.LOCALHOST, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractDatagramTest.java, +import java.net.SocketAddress;, +    protected SocketAddress newSocketAddress() {, +        // We use LOCALHOST4 as we use InternetProtocolFamily.IPv4 when creating the DatagramChannel and its, +        // not supported to bind to and IPV6 address in this case., +        //, +        // See also http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/file/e74259b3eadc/, +        // src/share/classes/sun/nio/ch/DatagramChannelImpl.java#l684, +        return new InetSocketAddress(NetUtil.LOCALHOST4, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractServerSocketTest.java, +        bootstrap.localAddress(newSocketAddress());, +                NetUtil.LOCALHOST, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractSocketTest.java, +        bootstrap.localAddress(newSocketAddress());, +        return new InetSocketAddress(NetUtil.LOCALHOST, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/AbstractSctpTest.java, +        serverBootstrap.localAddress(new InetSocketAddress(NetUtil.LOCALHOST, 0));, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/SctpEchoTest.java, +        Channel cc = cb.connect(sc.localAddress()).sync().channel();, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractClientSocketTest.java, +        return new InetSocketAddress(NetUtil.LOCALHOST, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractDatagramTest.java, +import java.net.SocketAddress;, +    protected SocketAddress newSocketAddress() {, +        // We use LOCALHOST4 as we use InternetProtocolFamily.IPv4 when creating the DatagramChannel and its, +        // not supported to bind to and IPV6 address in this case., +        //, +        // See also http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/file/e74259b3eadc/, +        // src/share/classes/sun/nio/ch/DatagramChannelImpl.java#l684, +        return new InetSocketAddress(NetUtil.LOCALHOST4, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractServerSocketTest.java, +        bootstrap.localAddress(newSocketAddress());, +                NetUtil.LOCALHOST, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractSocketTest.java, +        bootstrap.localAddress(newSocketAddress());, +        return new InetSocketAddress(NetUtil.LOCALHOST, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/DatagramMulticastTest.java, +, +        Channel sc = sb.bind(newSocketAddress()).sync().channel();, +, +        InetSocketAddress addr = (InetSocketAddress) sc.localAddress();, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/AbstractSctpTest.java, +        serverBootstrap.localAddress(new InetSocketAddress(NetUtil.LOCALHOST, 0));, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/sctp/SctpEchoTest.java, +        Channel cc = cb.connect(sc.localAddress()).sync().channel();, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractClientSocketTest.java, +        return new InetSocketAddress(NetUtil.LOCALHOST, 0);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/AbstractDatagramTest.java, +import java.net.SocketAddress;]