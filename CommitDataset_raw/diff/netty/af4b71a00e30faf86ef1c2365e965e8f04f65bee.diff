[+++ b/buffer/src/main/java/io/netty/buffer/AbstractMessageBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/AbstractMessageBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/FilteredMessageBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/AbstractMessageBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/FilteredMessageBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/MessageBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/AbstractMessageBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/FilteredMessageBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/MessageBuf.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +import io.netty.buffer.FilteredMessageBuf;, +, +        protected void decode(, +                ChannelHandlerContext ctx, ByteBuf buffer, MessageBuf<Object> out) throws Exception {, +                    return;, +                out.add(buffer.readBytes(readable));, +                    out = new FilteredMessageBuf(out) {, +                        @Override, +                        protected Object filter(Object msg) {, +                    };, +                }, +                super.decode(ctx, buffer, out);, +            }, +++ b/buffer/src/main/java/io/netty/buffer/AbstractMessageBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/FilteredMessageBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/MessageBuf.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +import io.netty.buffer.FilteredMessageBuf;, +, +        protected void decode(, +                ChannelHandlerContext ctx, ByteBuf buffer, MessageBuf<Object> out) throws Exception {, +                    return;, +                out.add(buffer.readBytes(readable));, +                    out = new FilteredMessageBuf(out) {, +                        @Override, +                        protected Object filter(Object msg) {, +                    };, +                }, +                super.decode(ctx, buffer, out);, +            }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +import io.netty.buffer.MessageBuf;, +    protected void decode(ChannelHandlerContext ctx, HttpObject msg, MessageBuf<Object> out) throws Exception {, +, +            // 100-continue response must be passed through., +            out.add(BufUtil.retain(msg));, +            return;, +            out.add(BufUtil.retain(msg));, +            return;, +, +                    for (Object obj: decoded) {, +                        out.add(obj);, +                    }, +                    return;, +                out.add(message);, +                out.add(c.retain());, +                return;, +                Object[] decoded = decodeContent(null, c);, +, +                for (Object obj: decoded) {, +                    out.add(obj);, +                }, +                out.add(c.retain());, +++ b/buffer/src/main/java/io/netty/buffer/AbstractMessageBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/FilteredMessageBuf.java, +++ b/buffer/src/main/java/io/netty/buffer/MessageBuf.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +import io.netty.buffer.FilteredMessageBuf;, +, +        protected void decode(, +                ChannelHandlerContext ctx, ByteBuf buffer, MessageBuf<Object> out) throws Exception {, +                    return;, +                out.add(buffer.readBytes(readable));, +                    out = new FilteredMessageBuf(out) {, +                        @Override, +                        protected Object filter(Object msg) {, +                    };, +                }, +                super.decode(ctx, buffer, out);, +            }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +import io.netty.buffer.MessageBuf;, +    protected void decode(ChannelHandlerContext ctx, HttpObject msg, MessageBuf<Object> out) throws Exception {, +, +            // 100-continue response must be passed through., +            out.add(BufUtil.retain(msg));, +            return;, +            out.add(BufUtil.retain(msg));, +            return;, +, +                    for (Object obj: decoded) {, +                        out.add(obj);, +                    }, +                    return;, +                out.add(message);, +                out.add(c.retain());, +                return;, +                Object[] decoded = decodeContent(null, c);, +, +                for (Object obj: decoded) {]