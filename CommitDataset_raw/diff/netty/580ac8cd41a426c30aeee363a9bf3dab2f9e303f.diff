[+++ b/example/src/main/java/io/netty/example/http2/helloworld/frame/server/HelloWorldHttp2Handler.java, +    @Override, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        ctx.flush();, +    }, +, +    private static void onDataRead(ChannelHandlerContext ctx, Http2DataFrame data) throws Exception {, +    private static void onHeadersRead(ChannelHandlerContext ctx, Http2HeadersFrame headers), +        ctx.write(new DefaultHttp2DataFrame(payload, true).streamId(streamId));, +++ b/example/src/main/java/io/netty/example/http2/helloworld/frame/server/HelloWorldHttp2Handler.java, +    @Override, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        ctx.flush();, +    }, +, +    private static void onDataRead(ChannelHandlerContext ctx, Http2DataFrame data) throws Exception {, +    private static void onHeadersRead(ChannelHandlerContext ctx, Http2HeadersFrame headers), +        ctx.write(new DefaultHttp2DataFrame(payload, true).streamId(streamId));, +++ b/example/src/main/java/io/netty/example/http2/helloworld/multiplex/server/HelloWorldHttp2Handler.java, +    @Override, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        ctx.flush();, +    }, +, +    private static void onDataRead(ChannelHandlerContext ctx, Http2DataFrame data) throws Exception {, +    private static void onHeadersRead(ChannelHandlerContext ctx, Http2HeadersFrame headers), +        ctx.write(new DefaultHttp2DataFrame(payload, true));, +++ b/example/src/main/java/io/netty/example/http2/helloworld/frame/server/HelloWorldHttp2Handler.java, +    @Override, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        ctx.flush();, +    }, +, +    private static void onDataRead(ChannelHandlerContext ctx, Http2DataFrame data) throws Exception {, +    private static void onHeadersRead(ChannelHandlerContext ctx, Http2HeadersFrame headers), +        ctx.write(new DefaultHttp2DataFrame(payload, true).streamId(streamId));, +++ b/example/src/main/java/io/netty/example/http2/helloworld/multiplex/server/HelloWorldHttp2Handler.java, +    @Override, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        ctx.flush();, +    }, +, +    private static void onDataRead(ChannelHandlerContext ctx, Http2DataFrame data) throws Exception {, +    private static void onHeadersRead(ChannelHandlerContext ctx, Http2HeadersFrame headers), +        ctx.write(new DefaultHttp2DataFrame(payload, true));, +++ b/example/src/main/java/io/netty/example/http2/helloworld/server/HelloWorldHttp1Handler.java, +            ctx.write(response).addListener(ChannelFutureListener.CLOSE);, +            ctx.write(response);, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        ctx.flush();, +    }, +, +    @Override, +++ b/example/src/main/java/io/netty/example/http2/helloworld/frame/server/HelloWorldHttp2Handler.java, +    @Override, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        ctx.flush();, +    }, +, +    private static void onDataRead(ChannelHandlerContext ctx, Http2DataFrame data) throws Exception {, +    private static void onHeadersRead(ChannelHandlerContext ctx, Http2HeadersFrame headers), +        ctx.write(new DefaultHttp2DataFrame(payload, true).streamId(streamId));, +++ b/example/src/main/java/io/netty/example/http2/helloworld/multiplex/server/HelloWorldHttp2Handler.java, +    @Override, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        ctx.flush();, +    }, +, +    private static void onDataRead(ChannelHandlerContext ctx, Http2DataFrame data) throws Exception {, +    private static void onHeadersRead(ChannelHandlerContext ctx, Http2HeadersFrame headers), +        ctx.write(new DefaultHttp2DataFrame(payload, true));, +++ b/example/src/main/java/io/netty/example/http2/helloworld/server/HelloWorldHttp1Handler.java, +            ctx.write(response).addListener(ChannelFutureListener.CLOSE);, +            ctx.write(response);, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        ctx.flush();, +    }, +, +    @Override, +++ b/example/src/main/java/io/netty/example/http2/helloworld/server/HelloWorldHttp2Handler.java, +, +        // no need to call flush as channelReadComplete(...) will take care of it.]