[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketChannelFactory.java, +     *        the maximum number of I/O worker threads, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketChannelFactory.java, +     *        the maximum number of I/O worker threads, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioServerSocketChannelFactory.java, +    /**, +     * Creates a new instance.  Calling this constructor is same with calling, +     * {@link #NioServerSocketChannelFactory(Executor, Executor, int)} with, +     * the number of available processors in the machine.  The number of, +     * available processors is calculated by {@link Runtime#availableProcessors()}., +     *, +     * @param bossExecutor, +     *        the {@link Executor} which will execute the boss threads, +     * @param workerExecutor, +     *        the {@link Executor} which will execute the I/O worker threads, +     */, +    /**, +     * Creates a new instance., +     *, +     * @param bossExecutor, +     *        the {@link Executor} which will execute the boss threads, +     * @param workerExecutor, +     *        the {@link Executor} which will execute the I/O worker threads, +     * @param workerCount, +     *        the maximum number of I/O worker threads, +     */, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketChannelFactory.java, +     *        the maximum number of I/O worker threads, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioServerSocketChannelFactory.java, +    /**, +     * Creates a new instance.  Calling this constructor is same with calling, +     * {@link #NioServerSocketChannelFactory(Executor, Executor, int)} with, +     * the number of available processors in the machine.  The number of, +     * available processors is calculated by {@link Runtime#availableProcessors()}., +     *, +     * @param bossExecutor, +     *        the {@link Executor} which will execute the boss threads, +     * @param workerExecutor, +     *        the {@link Executor} which will execute the I/O worker threads, +     */, +    /**, +     * Creates a new instance., +     *, +     * @param bossExecutor, +     *        the {@link Executor} which will execute the boss threads, +     * @param workerExecutor, +     *        the {@link Executor} which will execute the I/O worker threads, +     * @param workerCount, +     *        the maximum number of I/O worker threads, +     */, +++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioClientSocketChannelFactory.java, +    /**, +     * Creates a new instance., +     *, +     * @param workerExecutor, +     *        the {@link Executor} which will execute the I/O worker threads, +     */, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketChannelFactory.java, +     *        the maximum number of I/O worker threads, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioServerSocketChannelFactory.java, +    /**, +     * Creates a new instance.  Calling this constructor is same with calling, +     * {@link #NioServerSocketChannelFactory(Executor, Executor, int)} with, +     * the number of available processors in the machine.  The number of, +     * available processors is calculated by {@link Runtime#availableProcessors()}., +     *, +     * @param bossExecutor, +     *        the {@link Executor} which will execute the boss threads, +     * @param workerExecutor, +     *        the {@link Executor} which will execute the I/O worker threads, +     */, +    /**, +     * Creates a new instance., +     *, +     * @param bossExecutor, +     *        the {@link Executor} which will execute the boss threads, +     * @param workerExecutor, +     *        the {@link Executor} which will execute the I/O worker threads, +     * @param workerCount, +     *        the maximum number of I/O worker threads, +     */, +++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioClientSocketChannelFactory.java, +    /**, +     * Creates a new instance., +     *, +     * @param workerExecutor, +     *        the {@link Executor} which will execute the I/O worker threads, +     */, +++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioServerSocketChannelFactory.java, +    /**, +     * Creates a new instance., +     *, +     * @param bossExecutor, +     *        the {@link Executor} which will execute the boss threads, +     * @param workerExecutor, +     *        the {@link Executor} which will execute the I/O worker threads, +     */]