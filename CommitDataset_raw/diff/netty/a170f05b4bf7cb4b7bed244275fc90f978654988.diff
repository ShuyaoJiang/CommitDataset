[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java, +import io.netty.handler.codec.DecoderResult;, +import io.netty.handler.codec.http.DefaultFullHttpRequest;, +import io.netty.handler.codec.http.HttpRequest;, +import io.netty.handler.codec.http.HttpVersion;, +import io.netty.handler.codec.http.LastHttpContent;, +    private final HttpRequest request;, +    public HttpPostRequestEncoder(HttpRequest request, boolean multipart) throws ErrorDataEncoderException {, +    public HttpPostRequestEncoder(HttpDataFactory factory, HttpRequest request, boolean multipart), +            HttpDataFactory factory, HttpRequest request, boolean multipart, Charset charset,, +    public HttpRequest finalizeRequest() throws ErrorDataEncoderException {, +, +            // wrap to hide the possible content, +            return new WrappedHttpRequest(request);, +            if (request instanceof FullHttpRequest) {, +                FullHttpRequest fullRequest = (FullHttpRequest) request;, +                if (!fullRequest.content().equals(chunk.content())) {, +                    fullRequest.content().clear().writeBytes(chunk.content());, +                return fullRequest;, +            } else {, +                return new WrappedFullHttpRequest(request, chunk);, +            }, +        }, +, +    private static class WrappedHttpRequest implements HttpRequest {, +        private final HttpRequest request;, +        WrappedHttpRequest(HttpRequest request) {, +            this.request = request;, +        }, +, +        @Override, +        public HttpRequest setProtocolVersion(HttpVersion version) {, +            request.setProtocolVersion(version);, +            return this;, +        }, +, +        @Override, +        public HttpRequest setMethod(HttpMethod method) {, +            request.setMethod(method);, +            return this;, +        }, +, +        @Override, +        public HttpRequest setUri(String uri) {, +            request.setUri(uri);, +            return this;, +        }, +, +        @Override, +        public HttpMethod getMethod() {, +            return request.getMethod();, +        }, +, +        @Override, +        public String getUri() {, +            return request.getUri();, +        }, +, +        @Override, +        public HttpVersion getProtocolVersion() {, +            return request.getProtocolVersion();, +        }, +, +        @Override, +        public HttpHeaders headers() {, +            return request.headers();, +        }, +, +        @Override, +        public DecoderResult getDecoderResult() {, +            return request.getDecoderResult();, +        }, +, +        @Override, +        public void setDecoderResult(DecoderResult result) {, +            request.setDecoderResult(result);, +        }, +    }, +, +    private static final class WrappedFullHttpRequest extends WrappedHttpRequest implements FullHttpRequest {, +        private final HttpContent content;, +        private WrappedFullHttpRequest(HttpRequest request, HttpContent content) {, +            super(request);, +            this.content = content;, +        }, +, +        @Override, +        public FullHttpRequest setProtocolVersion(HttpVersion version) {, +            super.setProtocolVersion(version);, +            return this;, +        }, +, +        @Override, +        public FullHttpRequest setMethod(HttpMethod method) {, +            super.setMethod(method);, +            return this;, +        }, +, +        @Override, +        public FullHttpRequest setUri(String uri) {]