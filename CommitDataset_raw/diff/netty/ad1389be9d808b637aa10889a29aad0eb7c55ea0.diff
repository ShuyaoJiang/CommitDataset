[+++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    private static final class Component {, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    private static final class Component {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseDecoder.java, +                new HttpResponseStatus(Integer.parseInt(initialLine[1]), initialLine[2]), validateHeaders);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    private static final class Component {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseDecoder.java, +                new HttpResponseStatus(Integer.parseInt(initialLine[1]), initialLine[2]), validateHeaders);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/DiskAttribute.java, +        final long newDefinedSize = size + buffer.readableBytes();, +        checkSize(newDefinedSize);, +        if (definedSize > 0 && definedSize < newDefinedSize) {, +            definedSize = newDefinedSize;, +, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    private static final class Component {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseDecoder.java, +                new HttpResponseStatus(Integer.parseInt(initialLine[1]), initialLine[2]), validateHeaders);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/DiskAttribute.java, +        final long newDefinedSize = size + buffer.readableBytes();, +        checkSize(newDefinedSize);, +        if (definedSize > 0 && definedSize < newDefinedSize) {, +            definedSize = newDefinedSize;, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/rtsp/RtspResponseDecoder.java, +                new HttpResponseStatus(Integer.parseInt(initialLine[1]), initialLine[2]), validateHeaders);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    private static final class Component {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseDecoder.java, +                new HttpResponseStatus(Integer.parseInt(initialLine[1]), initialLine[2]), validateHeaders);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/DiskAttribute.java, +        final long newDefinedSize = size + buffer.readableBytes();, +        checkSize(newDefinedSize);, +        if (definedSize > 0 && definedSize < newDefinedSize) {, +            definedSize = newDefinedSize;, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/rtsp/RtspResponseDecoder.java, +                new HttpResponseStatus(Integer.parseInt(initialLine[1]), initialLine[2]), validateHeaders);, +++ b/codec-stomp/src/main/java/io/netty/handler/codec/stomp/StompSubframeAggregator.java, +        String value = start.headers().get(StompHeaders.CONTENT_LENGTH);, +        return Long.parseLong(value);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    private static final class Component {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseDecoder.java, +                new HttpResponseStatus(Integer.parseInt(initialLine[1]), initialLine[2]), validateHeaders);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/DiskAttribute.java, +        final long newDefinedSize = size + buffer.readableBytes();, +        checkSize(newDefinedSize);, +        if (definedSize > 0 && definedSize < newDefinedSize) {, +            definedSize = newDefinedSize;, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/rtsp/RtspResponseDecoder.java, +                new HttpResponseStatus(Integer.parseInt(initialLine[1]), initialLine[2]), validateHeaders);, +++ b/codec-stomp/src/main/java/io/netty/handler/codec/stomp/StompSubframeAggregator.java, +        String value = start.headers().get(StompHeaders.CONTENT_LENGTH);, +        return Long.parseLong(value);, +++ b/codec-stomp/src/main/java/io/netty/handler/codec/stomp/StompSubframeDecoder.java, +        String contentLength = headers.get(StompHeaders.CONTENT_LENGTH);, +                return Long.parseLong(contentLength);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    private static final class Component {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseDecoder.java, +                new HttpResponseStatus(Integer.parseInt(initialLine[1]), initialLine[2]), validateHeaders);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/DiskAttribute.java, +        final long newDefinedSize = size + buffer.readableBytes();, +        checkSize(newDefinedSize);, +        if (definedSize > 0 && definedSize < newDefinedSize) {, +            definedSize = newDefinedSize;, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/rtsp/RtspResponseDecoder.java, +                new HttpResponseStatus(Integer.parseInt(initialLine[1]), initialLine[2]), validateHeaders);, +++ b/codec-stomp/src/main/java/io/netty/handler/codec/stomp/StompSubframeAggregator.java, +        String value = start.headers().get(StompHeaders.CONTENT_LENGTH);, +        return Long.parseLong(value);, +++ b/codec-stomp/src/main/java/io/netty/handler/codec/stomp/StompSubframeDecoder.java, +        String contentLength = headers.get(StompHeaders.CONTENT_LENGTH);, +                return Long.parseLong(contentLength);, +++ b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    private static final class Component {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseDecoder.java, +                new HttpResponseStatus(Integer.parseInt(initialLine[1]), initialLine[2]), validateHeaders);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/DiskAttribute.java, +        final long newDefinedSize = size + buffer.readableBytes();, +        checkSize(newDefinedSize);, +        if (definedSize > 0 && definedSize < newDefinedSize) {, +            definedSize = newDefinedSize;, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/rtsp/RtspResponseDecoder.java, +                new HttpResponseStatus(Integer.parseInt(initialLine[1]), initialLine[2]), validateHeaders);, +++ b/codec-stomp/src/main/java/io/netty/handler/codec/stomp/StompSubframeAggregator.java, +        String value = start.headers().get(StompHeaders.CONTENT_LENGTH);, +        return Long.parseLong(value);, +++ b/codec-stomp/src/main/java/io/netty/handler/codec/stomp/StompSubframeDecoder.java, +        String contentLength = headers.get(StompHeaders.CONTENT_LENGTH);, +                return Long.parseLong(contentLength);, +++ b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java]