[+++ b/transport/src/main/java/io/netty/channel/ChannelFuture.java, +, +    /**, +     * A {@link ChannelFuture} which is not allowed to be sent to {@link ChannelPipeline} due to, +     * implementation details., +     */, +    interface Unsafe extends ChannelFuture {, +        // Tag interface, +    }, +++ b/transport/src/main/java/io/netty/channel/ChannelFuture.java, +, +    /**, +     * A {@link ChannelFuture} which is not allowed to be sent to {@link ChannelPipeline} due to, +     * implementation details., +     */, +    interface Unsafe extends ChannelFuture {, +        // Tag interface, +    }, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +        if (future.isDone()) {, +            throw new IllegalArgumentException("future already done");, +        }, +        if (future instanceof ChannelFuture.Unsafe) {, +            throw new IllegalArgumentException("internal use only future not allowed");, +        }, +++ b/transport/src/main/java/io/netty/channel/ChannelFuture.java, +, +    /**, +     * A {@link ChannelFuture} which is not allowed to be sent to {@link ChannelPipeline} due to, +     * implementation details., +     */, +    interface Unsafe extends ChannelFuture {, +        // Tag interface, +    }, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +        if (future.isDone()) {, +            throw new IllegalArgumentException("future already done");, +        }, +        if (future instanceof ChannelFuture.Unsafe) {, +            throw new IllegalArgumentException("internal use only future not allowed");, +        }, +++ b/transport/src/main/java/io/netty/channel/VoidChannelFuture.java, +public class VoidChannelFuture implements ChannelFuture.Unsafe {]