[+++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResponseDecoder.java, +        boolean release = true;, +        try {, +            release = false;, +        } finally {, +            if (release) {, +                // We need to release te DnsResources in case of an Exception as we called retain() on the buffer., +                releaseDnsResources(response.answers());, +                releaseDnsResources(response.authorityResources());, +                releaseDnsResources(response.additionalResources());, +            }, +        }, +    }, +, +    private static void releaseDnsResources(List<DnsResource> resources) {, +        int size = resources.size();, +        for (int i = 0; i < size; i++) {, +            DnsResource resource = resources.get(i);, +            resource.release();, +        }, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResponseDecoder.java, +        boolean release = true;, +        try {, +            release = false;, +        } finally {, +            if (release) {, +                // We need to release te DnsResources in case of an Exception as we called retain() on the buffer., +                releaseDnsResources(response.answers());, +                releaseDnsResources(response.authorityResources());, +                releaseDnsResources(response.additionalResources());, +            }, +        }, +    }, +, +    private static void releaseDnsResources(List<DnsResource> resources) {, +        int size = resources.size();, +        for (int i = 0; i < size; i++) {, +            DnsResource resource = resources.get(i);, +            resource.release();, +        }, +++ b/codec-dns/src/test/java/io/netty/handler/codec/dns/DnsResponseTest.java]