[+++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBufAllocator.java, +import io.netty.util.ResourceLeak;, +import io.netty.util.ResourceLeakDetector;, +    protected static ByteBuf toLeakAwareBuffer(ByteBuf buf) {, +        ResourceLeak leak;, +        switch (ResourceLeakDetector.getLevel()) {, +            case SIMPLE:, +                leak = AbstractByteBuf.leakDetector.open(buf);, +                if (leak != null) {, +                    buf = new SimpleLeakAwareByteBuf(buf, leak);, +                }, +                break;, +            case ADVANCED:, +            case PARANOID:, +                leak = AbstractByteBuf.leakDetector.open(buf);, +                if (leak != null) {, +                    buf = new AdvancedLeakAwareByteBuf(buf, leak);, +                }, +                break;, +        }, +        return buf;, +    }, +, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBufAllocator.java, +import io.netty.util.ResourceLeak;, +import io.netty.util.ResourceLeakDetector;, +    protected static ByteBuf toLeakAwareBuffer(ByteBuf buf) {, +        ResourceLeak leak;, +        switch (ResourceLeakDetector.getLevel()) {, +            case SIMPLE:, +                leak = AbstractByteBuf.leakDetector.open(buf);, +                if (leak != null) {, +                    buf = new SimpleLeakAwareByteBuf(buf, leak);, +                }, +                break;, +            case ADVANCED:, +            case PARANOID:, +                leak = AbstractByteBuf.leakDetector.open(buf);, +                if (leak != null) {, +                    buf = new AdvancedLeakAwareByteBuf(buf, leak);, +                }, +                break;, +        }, +        return buf;, +    }, +, +++ b/buffer/src/main/java/io/netty/buffer/AdvancedLeakAwareByteBuf.java, +/*, + * Copyright 2013 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +, +package io.netty.buffer;, +, +import io.netty.util.ResourceLeak;, +, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.OutputStream;, +import java.nio.ByteBuffer;, +import java.nio.channels.GatheringByteChannel;, +import java.nio.channels.ScatteringByteChannel;, +import java.nio.charset.Charset;, +, +final class AdvancedLeakAwareByteBuf extends WrappedByteBuf {, +, +    private final ResourceLeak leak;, +, +    AdvancedLeakAwareByteBuf(ByteBuf buf, ResourceLeak leak) {, +        super(buf);, +        this.leak = leak;, +    }, +, +    @Override, +    public ByteBuf discardReadBytes() {, +        leak.record();, +        return super.discardReadBytes();, +    }, +, +    @Override, +    public ByteBuf discardSomeReadBytes() {, +        leak.record();, +        return super.discardSomeReadBytes();, +    }, +, +    @Override, +    public ByteBuf ensureWritable(int minWritableBytes) {, +        leak.record();, +        return super.ensureWritable(minWritableBytes);]