[+++ b/src/main/java/org/jboss/netty/example/http/snoop/HttpRequestHandler.java, +import org.jboss.netty.handler.codec.http.HttpChunkTrailer;, +, +                HttpChunkTrailer trailer = (HttpChunkTrailer) chunk;, +                if (!trailer.getHeaderNames().isEmpty()) {, +                    responseContent.append("\r\n");, +                    for (String name: trailer.getHeaderNames()) {, +                        for (String value: trailer.getHeaders(name)) {, +                            responseContent.append("TRAILING HEADER: " + name + " = " + value + "\r\n");, +                        }, +                    }, +                    responseContent.append("\r\n");, +                }, +, +++ b/src/main/java/org/jboss/netty/example/http/snoop/HttpRequestHandler.java, +import org.jboss.netty.handler.codec.http.HttpChunkTrailer;, +, +                HttpChunkTrailer trailer = (HttpChunkTrailer) chunk;, +                if (!trailer.getHeaderNames().isEmpty()) {, +                    responseContent.append("\r\n");, +                    for (String name: trailer.getHeaderNames()) {, +                        for (String value: trailer.getHeaders(name)) {, +                            responseContent.append("TRAILING HEADER: " + name + " = " + value + "\r\n");, +                        }, +                    }, +                    responseContent.append("\r\n");, +                }, +, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMessageDecoder.java, +            HttpChunkTrailer trailer = readTrailingHeaders(buffer);, +                return trailer;, +    private HttpChunkTrailer readTrailingHeaders(ChannelBuffer buffer) throws TooLongFrameException {, +            HttpChunkTrailer trailer = new DefaultHttpChunkTrailer();, +                    List<String> current = trailer.getHeaders(lastHeader);, +                    if (current.size() != 0) {, +                        int lastPos = current.size() - 1;, +                        String newString = current.get(lastPos) + line.trim();, +                        current.set(lastPos, newString);, +                    } else {, +                        // Content-Length, Transfer-Encoding, or Trailer, +                    }, +                    String name = header[0];, +                    if (!name.equalsIgnoreCase(HttpHeaders.Names.CONTENT_LENGTH) &&, +                        !name.equalsIgnoreCase(HttpHeaders.Names.TRANSFER_ENCODING) &&, +                        !name.equalsIgnoreCase(HttpHeaders.Names.TRAILER)) {, +                        trailer.addHeader(name, header[1]);, +                    }, +                    lastHeader = name;, +            return trailer;, +        return HttpChunk.LAST_CHUNK;]