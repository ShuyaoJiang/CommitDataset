[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +        String newpostfix;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +        String newpostfix;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractMemoryHttpData.java, +import static io.netty.buffer.Unpooled.*;, +, +            encoding = HttpConstants.DEFAULT_CHARSET;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +        String newpostfix;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractMemoryHttpData.java, +import static io.netty.buffer.Unpooled.*;, +, +            encoding = HttpConstants.DEFAULT_CHARSET;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +        int equalpos;, +        int ampersandpos;, +        SeekAheadOptimize sao;, +        int equalpos;, +        int ampersandpos;, +        SeekAheadOptimize sao;, +                boolean checkSecondArg;, +        SeekAheadOptimize sao;, +        SeekAheadOptimize sao;, +        SeekAheadOptimize sao;, +        int lastPosition;, +        SeekAheadOptimize sao;, +            int lastPosition;, +        for (int i = 0; i < field.length(); i++) {, +        String[] values;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +        String newpostfix;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractMemoryHttpData.java, +import static io.netty.buffer.Unpooled.*;, +, +            encoding = HttpConstants.DEFAULT_CHARSET;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +        int equalpos;, +        int ampersandpos;, +        SeekAheadOptimize sao;, +        int equalpos;, +        int ampersandpos;, +        SeekAheadOptimize sao;, +                boolean checkSecondArg;, +        SeekAheadOptimize sao;, +        SeekAheadOptimize sao;, +        SeekAheadOptimize sao;, +        int lastPosition;, +        SeekAheadOptimize sao;, +            int lastPosition;, +        for (int i = 0; i < field.length(); i++) {, +        String[] values;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java, +            boolean localMixed;, +        ByteBuf buffer;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +        String newpostfix;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractMemoryHttpData.java, +import static io.netty.buffer.Unpooled.*;, +, +            encoding = HttpConstants.DEFAULT_CHARSET;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +        int equalpos;, +        int ampersandpos;, +        SeekAheadOptimize sao;, +        int equalpos;, +        int ampersandpos;, +        SeekAheadOptimize sao;, +                boolean checkSecondArg;, +        SeekAheadOptimize sao;, +        SeekAheadOptimize sao;, +        SeekAheadOptimize sao;, +        int lastPosition;, +        SeekAheadOptimize sao;, +            int lastPosition;, +        for (int i = 0; i < field.length(); i++) {, +        String[] values;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java, +            boolean localMixed;, +        ByteBuf buffer;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket08FrameEncoder.java, +                out.writeByte(byteData ^ mask[counter++ % 4]);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +        String newpostfix;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractMemoryHttpData.java, +import static io.netty.buffer.Unpooled.*;, +, +            encoding = HttpConstants.DEFAULT_CHARSET;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +        int equalpos;, +        int ampersandpos;, +        SeekAheadOptimize sao;, +        int equalpos;, +        int ampersandpos;, +        SeekAheadOptimize sao;, +                boolean checkSecondArg;, +        SeekAheadOptimize sao;, +        SeekAheadOptimize sao;, +        SeekAheadOptimize sao;, +        int lastPosition;]