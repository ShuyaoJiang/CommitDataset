[+++ b/microbench/pom.xml, +      <version>1.7.1</version>, +      <version>1.7.1</version>, +++ b/microbench/pom.xml, +      <version>1.7.1</version>, +      <version>1.7.1</version>, +++ b/microbench/src/test/java/io/netty/microbench/http2/Http2FrameWriterBenchmark.java, +import org.openjdk.jmh.annotations.TearDown;, +        EMBEDDED_POOLED(NIO_POOLED_PARAMS), EMBEDDED_UNPOOLED(NIO_UNPOOLED_PARAMS),, +        NIO_POOLED(NIO_POOLED_PARAMS), NIO_UNPOOLED(NIO_UNPOOLED_PARAMS),, +        EPOLL_POOLED(EPOLL_POOLED_PARAMS), EPOLL_UNPOOLED(EPOLL_UNPOOLED_PARAMS),, +        OIO_POOLED(OIO_POOLED_PARAMS), OIO_UNPOOLED(OIO_UNPOOLED_PARAMS);, +, +        private final EnvironmentParameters params;, +, +        private EnvironmentType(EnvironmentParameters params) {, +            this.params = params;, +        }, +, +        public EnvironmentParameters params() {, +            return params;, +        }, +        switch (environmentType) {, +        case EMBEDDED_POOLED:, +        case EMBEDDED_UNPOOLED:, +            environment = boostrapEmbeddedEnv(environmentType);, +            break;, +        default:, +            environment = boostrapEnvWithTransport(environmentType);, +            break;, +        }, +        payload = createPayload(dataType);, +    }, +, +    @TearDown(Level.Trial), +    public void teardown() throws Exception {, +        try {, +            environment.teardown();, +        } finally {, +            payload.release();, +        }, +    private static Environment boostrapEnvWithTransport(final EnvironmentType environmentType) {, +        final EnvironmentParameters params = environmentType.params();, +    private static Environment boostrapEmbeddedEnv(final EnvironmentType environmentType) {, +        final ByteBufAllocator alloc = environmentType.params().clientAllocator();, +++ b/microbench/pom.xml, +      <version>1.7.1</version>, +      <version>1.7.1</version>, +++ b/microbench/src/test/java/io/netty/microbench/http2/Http2FrameWriterBenchmark.java, +import org.openjdk.jmh.annotations.TearDown;, +        EMBEDDED_POOLED(NIO_POOLED_PARAMS), EMBEDDED_UNPOOLED(NIO_UNPOOLED_PARAMS),, +        NIO_POOLED(NIO_POOLED_PARAMS), NIO_UNPOOLED(NIO_UNPOOLED_PARAMS),, +        EPOLL_POOLED(EPOLL_POOLED_PARAMS), EPOLL_UNPOOLED(EPOLL_UNPOOLED_PARAMS),, +        OIO_POOLED(OIO_POOLED_PARAMS), OIO_UNPOOLED(OIO_UNPOOLED_PARAMS);, +, +        private final EnvironmentParameters params;, +, +        private EnvironmentType(EnvironmentParameters params) {, +            this.params = params;, +        }, +, +        public EnvironmentParameters params() {, +            return params;, +        }, +        switch (environmentType) {, +        case EMBEDDED_POOLED:, +        case EMBEDDED_UNPOOLED:, +            environment = boostrapEmbeddedEnv(environmentType);, +            break;, +        default:, +            environment = boostrapEnvWithTransport(environmentType);, +            break;, +        }, +        payload = createPayload(dataType);, +    }, +, +    @TearDown(Level.Trial), +    public void teardown() throws Exception {, +        try {, +            environment.teardown();, +        } finally {, +            payload.release();, +        }, +    private static Environment boostrapEnvWithTransport(final EnvironmentType environmentType) {, +        final EnvironmentParameters params = environmentType.params();, +    private static Environment boostrapEmbeddedEnv(final EnvironmentType environmentType) {, +        final ByteBufAllocator alloc = environmentType.params().clientAllocator();, +++ b/microbench/src/test/java/io/netty/microbench/util/AbstractMicrobenchmarkBase.java, +        "-XX:+UseFastAccessorMethods", "-XX:+OptimizeStringConcat",, +++ b/microbench/pom.xml, +      <version>1.7.1</version>, +      <version>1.7.1</version>, +++ b/microbench/src/test/java/io/netty/microbench/http2/Http2FrameWriterBenchmark.java, +import org.openjdk.jmh.annotations.TearDown;, +        EMBEDDED_POOLED(NIO_POOLED_PARAMS), EMBEDDED_UNPOOLED(NIO_UNPOOLED_PARAMS),, +        NIO_POOLED(NIO_POOLED_PARAMS), NIO_UNPOOLED(NIO_UNPOOLED_PARAMS),, +        EPOLL_POOLED(EPOLL_POOLED_PARAMS), EPOLL_UNPOOLED(EPOLL_UNPOOLED_PARAMS),, +        OIO_POOLED(OIO_POOLED_PARAMS), OIO_UNPOOLED(OIO_UNPOOLED_PARAMS);, +, +        private final EnvironmentParameters params;]