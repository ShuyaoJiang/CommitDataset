[+++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdySessionHandlerTest.java, +        while (sessionHandler.readOutbound() != null) {, +        assertRstStream(sessionHandler.readOutbound(), localStreamID, SpdyStreamStatus.INVALID_STREAM);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), remoteStreamID, SpdyStreamStatus.PROTOCOL_ERROR);, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), remoteStreamID, SpdyStreamStatus.STREAM_IN_USE);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertSynReply(sessionHandler.readOutbound(), localStreamID, false, spdySynStreamFrame);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertHeaders(sessionHandler.readOutbound(), localStreamID, spdyHeadersFrame);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), localStreamID, SpdyStreamStatus.REFUSED_STREAM);, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), localStreamID, SpdyStreamStatus.PROTOCOL_ERROR);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), localStreamID - 1, SpdyStreamStatus.PROTOCOL_ERROR);, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), localStreamID, SpdyStreamStatus.REFUSED_STREAM);, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertSynReply(sessionHandler.readOutbound(), localStreamID, false, spdySynStreamFrame);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertDataFrame(sessionHandler.readOutbound(), testStreamID, spdyDataFrame.isLast());, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), testStreamID, SpdyStreamStatus.INVALID_STREAM);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), localStreamID, SpdyStreamStatus.PROTOCOL_ERROR);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertPing(sessionHandler.readOutbound(), localPingFrame.getID());, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertGoAway(sessionHandler.readOutbound(), localStreamID);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), localStreamID, SpdyStreamStatus.REFUSED_STREAM);, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdySessionHandlerTest.java, +        while (sessionHandler.readOutbound() != null) {, +        assertRstStream(sessionHandler.readOutbound(), localStreamID, SpdyStreamStatus.INVALID_STREAM);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), remoteStreamID, SpdyStreamStatus.PROTOCOL_ERROR);, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), remoteStreamID, SpdyStreamStatus.STREAM_IN_USE);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertSynReply(sessionHandler.readOutbound(), localStreamID, false, spdySynStreamFrame);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertHeaders(sessionHandler.readOutbound(), localStreamID, spdyHeadersFrame);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), localStreamID, SpdyStreamStatus.REFUSED_STREAM);, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), localStreamID, SpdyStreamStatus.PROTOCOL_ERROR);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), localStreamID - 1, SpdyStreamStatus.PROTOCOL_ERROR);, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), localStreamID, SpdyStreamStatus.REFUSED_STREAM);, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertSynReply(sessionHandler.readOutbound(), localStreamID, false, spdySynStreamFrame);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertDataFrame(sessionHandler.readOutbound(), testStreamID, spdyDataFrame.isLast());, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), testStreamID, SpdyStreamStatus.INVALID_STREAM);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), localStreamID, SpdyStreamStatus.PROTOCOL_ERROR);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertPing(sessionHandler.readOutbound(), localPingFrame.getID());, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertGoAway(sessionHandler.readOutbound(), localStreamID);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), localStreamID, SpdyStreamStatus.REFUSED_STREAM);, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +++ b/transport/src/main/java/io/netty/channel/embedded/AbstractEmbeddedChannel.java, +    protected final Object lastOutboundBuffer;, +    AbstractEmbeddedChannel(Object lastOutboundBuffer, ChannelHandler... handlers) {, +        this.lastOutboundBuffer = lastOutboundBuffer;, +, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdySessionHandlerTest.java, +        while (sessionHandler.readOutbound() != null) {, +        assertRstStream(sessionHandler.readOutbound(), localStreamID, SpdyStreamStatus.INVALID_STREAM);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), remoteStreamID, SpdyStreamStatus.PROTOCOL_ERROR);, +        Assert.assertNull(sessionHandler.readOutbound());, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertRstStream(sessionHandler.readOutbound(), remoteStreamID, SpdyStreamStatus.STREAM_IN_USE);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertSynReply(sessionHandler.readOutbound(), localStreamID, false, spdySynStreamFrame);, +        Assert.assertNull(sessionHandler.readOutbound());, +        assertHeaders(sessionHandler.readOutbound(), localStreamID, spdyHeadersFrame);, +        Assert.assertNull(sessionHandler.readOutbound());]