[+++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, + * control over how a new pipeline is created.  This approach is more complex, + * than the first approach while it is much more flexible:, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, + * control over how a new pipeline is created.  This approach is more complex, + * than the first approach while it is much more flexible:, +++ b/src/main/java/org/jboss/netty/bootstrap/ConnectionlessBootstrap.java, + * This bootstrap is for connectionless transports only such as UDP/IP., + * control over how a new pipeline is created.  This approach is more complex, + * than the first approach while it is much more flexible:, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, + * control over how a new pipeline is created.  This approach is more complex, + * than the first approach while it is much more flexible:, +++ b/src/main/java/org/jboss/netty/bootstrap/ConnectionlessBootstrap.java, + * This bootstrap is for connectionless transports only such as UDP/IP., + * control over how a new pipeline is created.  This approach is more complex, + * than the first approach while it is much more flexible:, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, + * This bootstrap is for connection oriented transports only such as TCP/IP, + * and local transport.  Use {@link ConnectionlessBootstrap} instead for, + * connectionless transports.  Do not use this helper if you are using a, + * connectionless transport such as UDP/IP which does not accept an incoming, + * connection but receives messages by itself without creating a child channel., + * It is rare to customize the pipeline of a parent channel because what it is, + * control over how a new pipeline is created.  This approach is more complex, + * than the first approach while it is much more flexible:]