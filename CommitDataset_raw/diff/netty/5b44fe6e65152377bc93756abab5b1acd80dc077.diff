[+++ b/codec/src/main/java/io/netty/handler/codec/bytes/ByteArrayDecoder.java, + * void messageReceived({@link ChannelHandlerContext} ctx, byte[] bytes) {, +++ b/codec/src/main/java/io/netty/handler/codec/bytes/ByteArrayDecoder.java, + * void messageReceived({@link ChannelHandlerContext} ctx, byte[] bytes) {, +++ b/codec/src/main/java/io/netty/handler/codec/bytes/ByteArrayEncoder.java, + * void messageReceived({@link ChannelHandlerContext} ctx, byte[] bytes) {, +++ b/codec/src/main/java/io/netty/handler/codec/bytes/ByteArrayDecoder.java, + * void messageReceived({@link ChannelHandlerContext} ctx, byte[] bytes) {, +++ b/codec/src/main/java/io/netty/handler/codec/bytes/ByteArrayEncoder.java, + * void messageReceived({@link ChannelHandlerContext} ctx, byte[] bytes) {, +++ b/codec/src/main/java/io/netty/handler/codec/compression/ZlibEncoder.java, +    /**, +     * Close this {@link ZlibEncoder} and so finish the encoding., +     *, +     * The returned {@link ChannelFuture} will be notified once the, +     * operation completes., +     */, +    /**, +     * Close this {@link ZlibEncoder} and so finish the encoding., +     * The given {@link ChannelFuture} will be notified once the operation, +     * completes and will also be returned., +     */, +++ b/codec/src/main/java/io/netty/handler/codec/bytes/ByteArrayDecoder.java, + * void messageReceived({@link ChannelHandlerContext} ctx, byte[] bytes) {, +++ b/codec/src/main/java/io/netty/handler/codec/bytes/ByteArrayEncoder.java, + * void messageReceived({@link ChannelHandlerContext} ctx, byte[] bytes) {, +++ b/codec/src/main/java/io/netty/handler/codec/compression/ZlibEncoder.java, +    /**, +     * Close this {@link ZlibEncoder} and so finish the encoding., +     *, +     * The returned {@link ChannelFuture} will be notified once the, +     * operation completes., +     */, +    /**, +     * Close this {@link ZlibEncoder} and so finish the encoding., +     * The given {@link ChannelFuture} will be notified once the operation, +     * completes and will also be returned., +     */, +++ b/codec/src/main/java/io/netty/handler/codec/string/StringDecoder.java, +import io.netty.handler.codec.ByteToMessageDecoder;, +import io.netty.handler.codec.LineBasedFrameDecoder;, + * note that this decoder must be used with a proper {@link ByteToMessageDecoder}, + * such as {@link DelimiterBasedFrameDecoder} or {@link LineBasedFrameDecoder}, + * if you are using a stream-based transport such as TCP/IP.  A typical setup for a, + * text-based line protocol in a TCP/IP socket would be:, + * pipeline.addLast("frameDecoder", new {@link LineBasedFrameDecoder}(80));, + * void messageReceived({@link ChannelHandlerContext} ctx, {@link String} msg) {, +++ b/codec/src/main/java/io/netty/handler/codec/bytes/ByteArrayDecoder.java, + * void messageReceived({@link ChannelHandlerContext} ctx, byte[] bytes) {, +++ b/codec/src/main/java/io/netty/handler/codec/bytes/ByteArrayEncoder.java, + * void messageReceived({@link ChannelHandlerContext} ctx, byte[] bytes) {, +++ b/codec/src/main/java/io/netty/handler/codec/compression/ZlibEncoder.java, +    /**, +     * Close this {@link ZlibEncoder} and so finish the encoding., +     *, +     * The returned {@link ChannelFuture} will be notified once the, +     * operation completes., +     */, +    /**, +     * Close this {@link ZlibEncoder} and so finish the encoding., +     * The given {@link ChannelFuture} will be notified once the operation, +     * completes and will also be returned., +     */, +++ b/codec/src/main/java/io/netty/handler/codec/string/StringDecoder.java, +import io.netty.handler.codec.ByteToMessageDecoder;, +import io.netty.handler.codec.LineBasedFrameDecoder;, + * note that this decoder must be used with a proper {@link ByteToMessageDecoder}, + * such as {@link DelimiterBasedFrameDecoder} or {@link LineBasedFrameDecoder}, + * if you are using a stream-based transport such as TCP/IP.  A typical setup for a, + * text-based line protocol in a TCP/IP socket would be:, + * pipeline.addLast("frameDecoder", new {@link LineBasedFrameDecoder}(80));, + * void messageReceived({@link ChannelHandlerContext} ctx, {@link String} msg) {, +++ b/codec/src/main/java/io/netty/handler/codec/string/StringEncoder.java, +import io.netty.handler.codec.LineBasedFrameDecoder;, + * pipeline.addLast("frameDecoder", new {@link LineBasedFrameDecoder}(80));, + * void messageReceived({@link ChannelHandlerContext} ctx, {@link String} msg) {]