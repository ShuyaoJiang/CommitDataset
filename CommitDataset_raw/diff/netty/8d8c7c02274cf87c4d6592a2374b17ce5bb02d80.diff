[+++ b/src/docbook/custom.dtd, +<!-- Types in the buffer package -->, +, +<!ENTITY ChannelBuffer            "<ulink url='&API;buffer/ChannelBuffer.html'><interfacename>ChannelBuffer</interfacename></ulink>">, +<!ENTITY ChannelBuffers           "<ulink url='&API;buffer/ChannelBuffers.html'><classname>ChannelBuffers</classname></ulink>">, +, +<!ENTITY ChannelFuture            "<ulink url='&API;channel/ChannelFuture.html'><interfacename>ChannelFuture</interfacename></ulink>">, +<!ENTITY ChannelFutureListener    "<ulink url='&API;channel/ChannelFutureListener.html'><interfacename>ChannelFutureListener</interfacename></ulink>">, +<!ENTITY Channels                 "<ulink url='&API;channel/Channels.html'><classname>Channels</classname></ulink>">, +<!ENTITY ChannelStateEvent        "<ulink url='&API;channel/ChannelStateEvent.html'><interfacename>ChannelStateEvent</interfacename></ulink>">, +++ b/src/docbook/custom.dtd, +<!-- Types in the buffer package -->, +, +<!ENTITY ChannelBuffer            "<ulink url='&API;buffer/ChannelBuffer.html'><interfacename>ChannelBuffer</interfacename></ulink>">, +<!ENTITY ChannelBuffers           "<ulink url='&API;buffer/ChannelBuffers.html'><classname>ChannelBuffers</classname></ulink>">, +, +<!ENTITY ChannelFuture            "<ulink url='&API;channel/ChannelFuture.html'><interfacename>ChannelFuture</interfacename></ulink>">, +<!ENTITY ChannelFutureListener    "<ulink url='&API;channel/ChannelFutureListener.html'><interfacename>ChannelFutureListener</interfacename></ulink>">, +<!ENTITY Channels                 "<ulink url='&API;channel/Channels.html'><classname>Channels</classname></ulink>">, +<!ENTITY ChannelStateEvent        "<ulink url='&API;channel/ChannelStateEvent.html'><interfacename>ChannelStateEvent</interfacename></ulink>">, +++ b/src/docbook/master.xml, +    <subtitle>The Proven Approach to Rapid Network Application Development</subtitle>, +++ b/src/docbook/custom.dtd, +<!-- Types in the buffer package -->, +, +<!ENTITY ChannelBuffer            "<ulink url='&API;buffer/ChannelBuffer.html'><interfacename>ChannelBuffer</interfacename></ulink>">, +<!ENTITY ChannelBuffers           "<ulink url='&API;buffer/ChannelBuffers.html'><classname>ChannelBuffers</classname></ulink>">, +, +<!ENTITY ChannelFuture            "<ulink url='&API;channel/ChannelFuture.html'><interfacename>ChannelFuture</interfacename></ulink>">, +<!ENTITY ChannelFutureListener    "<ulink url='&API;channel/ChannelFutureListener.html'><interfacename>ChannelFutureListener</interfacename></ulink>">, +<!ENTITY Channels                 "<ulink url='&API;channel/Channels.html'><classname>Channels</classname></ulink>">, +<!ENTITY ChannelStateEvent        "<ulink url='&API;channel/ChannelStateEvent.html'><interfacename>ChannelStateEvent</interfacename></ulink>">, +++ b/src/docbook/master.xml, +    <subtitle>The Proven Approach to Rapid Network Application Development</subtitle>, +++ b/src/docbook/module/start.xml, +    <title>Minimum Requirements</title>, +          of the options of the &ServerSocketChannel;.  You could do like the following:, +          to set the options of the &ServerSocketChannel;. , +          We are ready to go now.  What's left is to bind to the port and to, +          start the server.  Here, we bind to the port <literal>8080</literal>, +          of all NICs (network interface cards) in the machine.  You are fine, +          to call the <methodname>bind</methodname> method as many times as, +          you want, with different bind addresses. , +        </para>, +      </callout>, +    </calloutlist>, +    <para>, +      Congratulations!  You've just finished your first server on top of Netty., +    </para>, +  </section>, +  , +  <section>, +    <title>Looking into the Received Data</title>, +    <para>, +      Now that we wrote our first server.  We need to test if it really works., +      The easiest way to test it is to use the <command>telnet</command>, +      command.  For example, you could enter "<command>telnet localhost, +      8080</command>" in the command line and type something., +    </para>, +    <para>, +      However, can we say that the server is working fine?  We can't really, +      know that because it's a discard server.  You will not going to get any, +      response at all.  To prove it's really working, let's modify the server, +      to print what it has received., +    </para>, +    <para>, +      We already know that &MessageEvent; is generated whenever data is, +      received and the <methodname>messageReceived</methodname> handler method, +      will be invoked.  Let's put some code into the, +      <methodname>messageReceived</methodname> method of the, +      <classname>DiscardServerHandler</classname>: , +    </para>, +    <programlisting>@Override, +public void messageReceived(&ChannelHandlerContext; ctx, &MessageEvent; e) {, +    &ChannelBuffer;<co id="example.discard3.co1"/> buf = (ChannelBuffer) e.getMessage();, +    while(buf.readable()) {, +        System.out.println((char) buf.readByte(i));, +    }, +}</programlisting>, +    <calloutlist>, +      <callout arearefs="example.discard3.co1">, +        <para>, +          It is safe to assume the message type in socket transports is always, +          &ChannelBuffer;.  &ChannelBuffer; is a fundamental data structure, +          which stores a sequence of bytes in Netty.  It's similar to NIO, +          <classname>ByteBuffer</classname>, but it's easier to use and more, +          flexible.  For example, Netty allows you to create a composite, +          &ChannelBuffer; which combines multiple &ChannelBuffer;s reducing, +          the number of unnecessary memory copy., +        </para>, +        <para>, +          Although it resembles to NIO <classname>ByteBuffer</classname> a lot,, +          it is highly recommended to refer to the API reference documentation., +          Learning how to use &ChannelBuffer; correctly is a critical step in, +          using Netty without difficulty.  , +        </para>, +      </callout>, +    </calloutlist>, +    <para>, +      If you run the <command>telnet</command> command again, you will see the]