[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameLogger.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +, +        logger.log(level, "{} {} PRIORITY: streamId={} padding={} endStream={} length={} bytes={}", ctx.channel(),, +                direction.name(), streamId, padding, endStream, data.readableBytes(), toString(data));, +        logger.log(level, "{} {} PRIORITY: streamId={} headers={} padding={} endStream={}", ctx.channel(),, +                direction.name(), streamId, headers, padding, endStream);, +        logger.log(level, "{} {} PRIORITY: streamId={} headers={} streamDependency={} weight={} exclusive={} " +, +                        "padding={} endStream={}", ctx.channel(),, +                direction.name(), streamId, headers, streamDependency, weight, exclusive, padding, endStream);, +        logger.log(level, "{} {} PRIORITY: streamId={} streamDependency={} weight={} exclusive={}", ctx.channel(),, +                direction.name(), streamId, streamDependency, weight, exclusive);, +        logger.log(level, "{} {} RST_STREAM: streamId={} errorCode={}", ctx.channel(),, +                direction.name(), streamId, errorCode);, +        logger.log(level, "{} {} SETTINGS: ack=true", ctx.channel(), direction.name());, +        logger.log(level, "{} {} SETTINGS: ack=false settings={}", ctx.channel(), direction.name(), settings);, +        logger.log(level, "{} {} PING: ack=false length={} bytes={}", ctx.channel(),, +                direction.name(), data.readableBytes(), toString(data));, +        logger.log(level, "{} {} PING: ack=true length={} bytes={}", ctx.channel(),, +                direction.name(), data.readableBytes(), toString(data));, +        logger.log(level, "{} {} PUSH_PROMISE: streamId={} promisedStreamId={} headers={} padding={}", ctx.channel(),, +                direction.name(), streamId, promisedStreamId, headers, padding);, +        logger.log(level, "{} {} GO_AWAY: lastStreamId={} errorCode={} length={} bytes={}", ctx.channel(),, +                direction.name(), lastStreamId, errorCode, debugData.readableBytes(), toString(debugData));, +        logger.log(level, "{} {} WINDOW_UPDATE: streamId={} windowSizeIncrement={}", ctx.channel(),, +                direction.name(), streamId, windowSizeIncrement);, +        logger.log(level, "{} {} UNKNOWN: frameType={} streamId={} flags={} length={} bytes={}", ctx.channel(),, +                direction.name(), frameType & 0xFF, streamId, flags.value(), data.readableBytes(), toString(data));]