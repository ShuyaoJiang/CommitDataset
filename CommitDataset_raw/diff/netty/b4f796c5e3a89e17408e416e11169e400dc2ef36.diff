[+++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +        return result + ", components=" + components.size() + ')';, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +        return result + ", components=" + components.size() + ')';, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +            return key + '=' + value;, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +        return result + ", components=" + components.size() + ')';, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +            return key + '=' + value;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +        String newUri = rawPath + '?' + uri.getRawQuery();, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +        return result + ", components=" + components.size() + ')';, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +            return key + '=' + value;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +        String newUri = rawPath + '?' + uri.getRawQuery();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringEncoder.java, +            StringBuilder sb = new StringBuilder(uri).append('?');, +                sb.append('=');, +                    sb.append('&');, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +        return result + ", components=" + components.size() + ')';, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +            return key + '=' + value;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +        String newUri = rawPath + '?' + uri.getRawQuery();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringEncoder.java, +            StringBuilder sb = new StringBuilder(uri).append('?');, +                sb.append('=');, +                    sb.append('&');, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +import static io.netty.buffer.Unpooled.*;, +, +            newpostfix = '_' + diskFilename;, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +        return result + ", components=" + components.size() + ')';, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +            return key + '=' + value;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +        String newUri = rawPath + '?' + uri.getRawQuery();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringEncoder.java, +            StringBuilder sb = new StringBuilder(uri).append('?');, +                sb.append('=');, +                    sb.append('&');, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +import static io.netty.buffer.Unpooled.*;, +, +            newpostfix = '_' + diskFilename;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/DiskAttribute.java, +, +import java.io.IOException;, +, +            return getName() + '=' + getValue();, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +        return result + ", components=" + components.size() + ')';, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +            return key + '=' + value;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +        String newUri = rawPath + '?' + uri.getRawQuery();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringEncoder.java, +            StringBuilder sb = new StringBuilder(uri).append('?');, +                sb.append('=');, +                    sb.append('&');, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +import static io.netty.buffer.Unpooled.*;, +, +            newpostfix = '_' + diskFilename;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/DiskAttribute.java, +, +import java.io.IOException;, +, +            return getName() + '=' + getValue();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/DiskFileUpload.java, +import io.netty.handler.codec.http.HttpHeaders;, +, +                (charset != null? "; " + HttpHeaders.Values.CHARSET + '=' + charset + "\r\n" : "\r\n") +, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +        return result + ", components=" + components.size() + ')';, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +            return key + '=' + value;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +        String newUri = rawPath + '?' + uri.getRawQuery();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringEncoder.java, +            StringBuilder sb = new StringBuilder(uri).append('?');, +                sb.append('=');, +                    sb.append('&');, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java, +import static io.netty.buffer.Unpooled.*;, +, +            newpostfix = '_' + diskFilename;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/DiskAttribute.java, +, +import java.io.IOException;, +, +            return getName() + '=' + getValue();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/DiskFileUpload.java, +import io.netty.handler.codec.http.HttpHeaders;, +]