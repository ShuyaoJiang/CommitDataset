[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +import io.netty.channel.ChannelFutureListener;, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +import io.netty.channel.ChannelFutureListener;, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08.java, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +import io.netty.channel.ChannelFutureListener;, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08.java, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker13.java, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +import io.netty.channel.ChannelFutureListener;, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08.java, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker13.java, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ /dev/null, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +import io.netty.channel.ChannelFutureListener;, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08.java, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker13.java, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ /dev/null, +++ /dev/null, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +import io.netty.channel.ChannelFutureListener;, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08.java, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker13.java, +        future.addListener(new ChannelFutureListener() {, +            public void operationComplete(ChannelFuture future) {, +                ChannelPipeline p = future.channel().pipeline();, +            }, +        });, +++ /dev/null]