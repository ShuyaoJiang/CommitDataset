[+++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageCodec.java, +import io.netty.channel.ChannelHandlerUtil;, +    private final Class<?>[] encodableMessageTypes;, +        this.encodableMessageTypes = encodableMessageTypes;, +        encoder = new MessageToByteEncoder<OUTBOUND_IN>() {, +            @Override, +            public boolean isEncodable(Object msg) throws Exception {, +                return ByteToMessageCodec.this.isEncodable(msg);, +            }, +, +            public INBOUND_OUT decode(ChannelHandlerContext ctx, ByteBuf in) throws Exception {, +, +            }, +, +            @Override, +            protected INBOUND_OUT decodeLast(ChannelHandlerContext ctx, ByteBuf in) throws Exception {, +                return ByteToMessageCodec.this.decodeLast(ctx, in);, +            }, +, +            @Override, +            public void discardInboundReadBytes(ChannelHandlerContext ctx) throws Exception {, +                ByteToMessageCodec.this.discardInboundReadBytes(ctx);, +    public void beforeAdd(ChannelHandlerContext ctx) throws Exception {, +        decoder.beforeAdd(ctx);, +    }, +, +    @Override, +    public ByteBuf newInboundBuffer(ChannelHandlerContext ctx) throws Exception {, +    public MessageBuf<OUTBOUND_IN> newOutboundBuffer(ChannelHandlerContext ctx) throws Exception {, +    public void flush(ChannelHandlerContext ctx, ChannelPromise promise) throws Exception {, +        return ChannelHandlerUtil.acceptMessage(encodableMessageTypes, msg);, +    protected INBOUND_OUT decodeLast(ChannelHandlerContext ctx, ByteBuf in) throws Exception {, +        return decode(ctx, in);, +    }]