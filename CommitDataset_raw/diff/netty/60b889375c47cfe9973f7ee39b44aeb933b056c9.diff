[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +                ChannelHandlerContext ctx, Object msg, List<Object> out) throws Exception {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +                ChannelHandlerContext ctx, Object msg, List<Object> out) throws Exception {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java, +import io.netty.channel.FileRegion;, +import io.netty.util.ReferenceCountUtil;, +public abstract class HttpObjectEncoder<H extends HttpMessage> extends MessageToMessageEncoder<Object> {, +    protected void encode(ChannelHandlerContext ctx, Object msg, List<Object> out) throws Exception {, +        if (msg instanceof HttpContent || msg instanceof ByteBuf || msg instanceof FileRegion) {, +            int contentLength = contentLength(msg);, +                    out.add(encodeAndRetain(msg));, +                if (msg instanceof LastHttpContent) {, +                    out.add(encodeAndRetain(msg));, +                if (msg instanceof LastHttpContent) {, +                    HttpHeaders headers = ((LastHttpContent) msg).trailingHeaders();, +    @Override, +    public boolean acceptOutboundMessage(Object msg) throws Exception {, +        return msg instanceof HttpObject || msg instanceof ByteBuf || msg instanceof FileRegion;, +    }, +, +    private static Object encodeAndRetain(Object msg) {, +        if (msg instanceof ByteBuf) {, +            return ((ByteBuf) msg).retain();, +        }, +        if (msg instanceof HttpContent) {, +            return ((HttpContent) msg).content().retain();, +        }, +        if (msg instanceof FileRegion) {, +            return ((FileRegion) msg).retain();, +        }, +        throw new IllegalStateException("unexpected message type: " + msg.getClass().getSimpleName());, +    }, +, +    private static int contentLength(Object msg) {, +        if (msg instanceof HttpContent) {, +            return ((HttpContent) msg).content().readableBytes();, +        }, +        if (msg instanceof ByteBuf) {, +            return ((ByteBuf) msg).readableBytes();, +        }, +        if (msg instanceof FileRegion) {, +            return (int) ((FileRegion) msg).count();, +        }, +        throw new IllegalStateException("unexpected message type: " + msg.getClass().getSimpleName());, +    }, +]