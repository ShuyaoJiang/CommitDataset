[+++ b/transport/src/main/java/io/netty/channel/Channel.java, +         * automaticly closed via {@link FileRegion#close()}., +++ b/transport/src/main/java/io/netty/channel/Channel.java, +         * automaticly closed via {@link FileRegion#close()}., +++ b/transport/src/main/java/io/netty/channel/ChannelOperationHandlerAdapter.java, +    /**, +     * Do nothing by default, sub-classes may override this method., +     */, +    /**, +     * Do nothing by default, sub-classes may override this method., +     */, +    /**, +     * Do nothing by default, sub-classes may override this method., +     */, +    /**, +     * Do nothing by default, sub-classes may override this method., +     */, +    /**, +     * Calls {@link ChannelHandlerContext#fireExceptionCaught(Throwable)} to forward, +     * to the next {@link ChannelHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +    /**, +     * Calls {@link ChannelHandlerContext#fireUserEventTriggered(Object)} to forward, +     * to the next {@link ChannelHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +    /**, +     * Calls {@link ChannelHandlerContext#bind(SocketAddress, ChannelFuture)} to forward, +     * to the next {@link ChannelOperationHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +    /**, +     * Calls {@link ChannelHandlerContext#connect(SocketAddress, SocketAddress, ChannelFuture)} to forward, +     * to the next {@link ChannelOperationHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +    /**, +     * Calls {@link ChannelHandlerContext#disconnect(ChannelFuture)} to forward, +     * to the next {@link ChannelOperationHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +    /**, +     * Calls {@link ChannelHandlerContext#close(ChannelFuture)} to forward, +     * to the next {@link ChannelOperationHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +    /**, +     * Calls {@link ChannelHandlerContext#close(ChannelFuture)} to forward, +     * to the next {@link ChannelOperationHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +    /**, +     * Calls {@link ChannelHandlerContext#flush(ChannelFuture)} to forward, +     * to the next {@link ChannelOperationHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     *, +     * Be aware that if your class also implement {@link ChannelOutboundHandler} it need to {@code override} this, +     * method!, +     */, +    /**, +     * Calls {@link ChannelHandlerContext#sendFile(FileRegion, ChannelFuture)} to forward, +     * to the next {@link ChannelOperationHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +         * automaticly closed via {@link FileRegion#close()}., +++ b/transport/src/main/java/io/netty/channel/ChannelOperationHandlerAdapter.java, +    /**, +     * Do nothing by default, sub-classes may override this method., +     */, +    /**, +     * Do nothing by default, sub-classes may override this method., +     */, +    /**, +     * Do nothing by default, sub-classes may override this method., +     */, +    /**, +     * Do nothing by default, sub-classes may override this method., +     */, +    /**, +     * Calls {@link ChannelHandlerContext#fireExceptionCaught(Throwable)} to forward, +     * to the next {@link ChannelHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +    /**, +     * Calls {@link ChannelHandlerContext#fireUserEventTriggered(Object)} to forward, +     * to the next {@link ChannelHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior.]