[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyDataFrame.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyDataFrame.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +        return (buf.getByte(offset)     & 0xFF) << 8 |, +                buf.getByte(offset + 1) & 0xFF;, +        return (buf.getByte(offset)     & 0xFF) << 16 |, +                buf.getByte(offset + 2) & 0xFF;, +        return (buf.getByte(offset)     & 0x7F) << 24 |, +                buf.getByte(offset + 3) & 0xFF;, +        return (buf.getByte(offset)     & 0xFF) << 24 |, +                buf.getByte(offset + 3) & 0xFF;, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyDataFrame.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +        return (buf.getByte(offset)     & 0xFF) << 8 |, +                buf.getByte(offset + 1) & 0xFF;, +        return (buf.getByte(offset)     & 0xFF) << 16 |, +                buf.getByte(offset + 2) & 0xFF;, +        return (buf.getByte(offset)     & 0x7F) << 24 |, +                buf.getByte(offset + 3) & 0xFF;, +        return (buf.getByte(offset)     & 0xFF) << 24 |, +                buf.getByte(offset + 3) & 0xFF;, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyDataFrame.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyDataFrame.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +        return (buf.getByte(offset)     & 0xFF) << 8 |, +                buf.getByte(offset + 1) & 0xFF;, +        return (buf.getByte(offset)     & 0xFF) << 16 |, +                buf.getByte(offset + 2) & 0xFF;, +        return (buf.getByte(offset)     & 0x7F) << 24 |, +                buf.getByte(offset + 3) & 0xFF;, +        return (buf.getByte(offset)     & 0xFF) << 24 |, +                buf.getByte(offset + 3) & 0xFF;, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyDataFrame.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameCodec.java, +     * ({@code maxChunkSize (8192)}, {@code maxHeaderSize (16384)},, +     * {@code compressionLevel (6)}, {@code windowBits (15)}, and, +     * {@code memLevel (8)})., +        this(8192, 16384, 6, 15, 8);, +            int maxChunkSize, int maxHeaderSize,, +        decoder = new SpdyFrameDecoder(maxChunkSize, maxHeaderSize);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyDataFrame.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +        return (buf.getByte(offset)     & 0xFF) << 8 |, +                buf.getByte(offset + 1) & 0xFF;, +        return (buf.getByte(offset)     & 0xFF) << 16 |, +                buf.getByte(offset + 2) & 0xFF;, +        return (buf.getByte(offset)     & 0x7F) << 24 |, +                buf.getByte(offset + 3) & 0xFF;, +        return (buf.getByte(offset)     & 0xFF) << 24 |, +                buf.getByte(offset + 3) & 0xFF;, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyDataFrame.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameCodec.java, +     * ({@code maxChunkSize (8192)}, {@code maxHeaderSize (16384)},, +     * {@code compressionLevel (6)}, {@code windowBits (15)}, and, +     * {@code memLevel (8)})., +        this(8192, 16384, 6, 15, 8);, +            int maxChunkSize, int maxHeaderSize,, +        decoder = new SpdyFrameDecoder(maxChunkSize, maxHeaderSize);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameDecoder.java, +import static io.netty.handler.codec.spdy.SpdyCodecUtil.*;, +, +import io.netty.channel.Channels;, +import io.netty.handler.codec.frame.TooLongFrameException;, +    private State state;, +    private SpdySettingsFrame spdySettingsFrame;, +    private SpdyHeaderBlock spdyHeaderBlock;, +, +    // SPDY common header fields, +    private byte flags;, +    private int length;, +    private int version;, +    private int type;, +    private int streamID;, +, +    // Header block decoding fields, +    private int headerSize;, +    private int numHeaders;, +    private ChannelBuffer decompressed;, +, +    private static enum State {, +        READ_COMMON_HEADER,, +        READ_CONTROL_FRAME,, +        READ_SETTINGS_FRAME,, +        READ_HEADER_BLOCK_FRAME,, +        READ_HEADER_BLOCK,, +        READ_DATA_FRAME,, +        DISCARD_FRAME,, +        FRAME_ERROR, +    }, +, +     * Creates a new instance with the default {@code maxChunkSize (8192)}, +     * and {@code maxHeaderSize (16384)}., +        this(8192, 16384);, +    public SpdyFrameDecoder(int maxChunkSize, int maxHeaderSize) {, +        super(false);, +        state = State.READ_COMMON_HEADER;, +        switch(state) {, +        case READ_COMMON_HEADER:, +            state = readCommonHeader(buffer);, +            if (state == State.FRAME_ERROR) {]