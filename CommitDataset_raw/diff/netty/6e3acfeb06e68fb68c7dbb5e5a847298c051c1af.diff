[+++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslEngine.java, +                if (peerCerts == null || peerCerts.length == 0) {, +                if (x509PeerCerts == null || x509PeerCerts.length == 0) {, +            // No need for null or length > 0 is needed as this is done in getPeerCertificates(), +            // already., +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslEngine.java, +                if (peerCerts == null || peerCerts.length == 0) {, +                if (x509PeerCerts == null || x509PeerCerts.length == 0) {, +            // No need for null or length > 0 is needed as this is done in getPeerCertificates(), +            // already., +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketSslGreetingTest.java, +import io.netty.handler.ssl.SslHandler;, +import io.netty.handler.ssl.SslHandshakeCompletionEvent;, +import javax.net.ssl.SSLPeerUnverifiedException;, +import javax.net.ssl.SSLSession;, +, +        @Override, +        public void userEventTriggered(final ChannelHandlerContext ctx, final Object evt) throws Exception {, +            if (evt instanceof SslHandshakeCompletionEvent) {, +                final SslHandshakeCompletionEvent event = (SslHandshakeCompletionEvent) evt;, +                if (event.isSuccess()) {, +                    SSLSession session = ctx.pipeline().get(SslHandler.class).engine().getSession();, +                    try {, +                        session.getPeerCertificates();, +                        fail();, +                    } catch (SSLPeerUnverifiedException e) {, +                        // expected, +                    }, +                    try {, +                        session.getPeerCertificateChain();, +                        fail();, +                    } catch (SSLPeerUnverifiedException e) {, +                        // expected, +                    }, +                    try {, +                        session.getPeerPrincipal();, +                        fail();, +                    } catch (SSLPeerUnverifiedException e) {, +                        // expected, +                    }, +                }, +            }, +            ctx.fireUserEventTriggered(evt);, +        }]