[+++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +     *         if {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}, +     *        When {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}:, +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +     *         if {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}, +     *        When {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}:, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequest.java, + * and {@link io.netty.handler.codec.http.cookie.ClientCookieEncoder}., +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +     *         if {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}, +     *        When {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}:, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequest.java, + * and {@link io.netty.handler.codec.http.cookie.ClientCookieEncoder}., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponse.java, + * and {@link io.netty.handler.codec.http.cookie.ClientCookieEncoder}., +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +     *         if {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}, +     *        When {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}:, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequest.java, + * and {@link io.netty.handler.codec.http.cookie.ClientCookieEncoder}., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponse.java, + * and {@link io.netty.handler.codec.http.cookie.ClientCookieEncoder}., +++ b/codec-http/src/main/java/io/netty/handler/codec/rtsp/RtspDecoder.java, + * Decodes {@link io.netty.buffer.ByteBuf}s into RTSP messages represented in, + *     {@link io.netty.handler.codec.TooLongFrameException} will be raised.</td>, + *     header exceeds this value, a {@link io.netty.handler.codec.TooLongFrameException} will be, + *     value, a {@link io.netty.handler.codec.TooLongFrameException} will be raised.</td>, +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +     *         if {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}, +     *        When {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}:, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequest.java, + * and {@link io.netty.handler.codec.http.cookie.ClientCookieEncoder}., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponse.java, + * and {@link io.netty.handler.codec.http.cookie.ClientCookieEncoder}., +++ b/codec-http/src/main/java/io/netty/handler/codec/rtsp/RtspDecoder.java, + * Decodes {@link io.netty.buffer.ByteBuf}s into RTSP messages represented in, + *     {@link io.netty.handler.codec.TooLongFrameException} will be raised.</td>, + *     header exceeds this value, a {@link io.netty.handler.codec.TooLongFrameException} will be, + *     value, a {@link io.netty.handler.codec.TooLongFrameException} will be raised.</td>, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameListener.java, +     * {@link Http2LocalFlowController#consumeBytes(Http2Stream, int)}. The returned value must, +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +     *         if {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}, +     *        When {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}:, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequest.java, + * and {@link io.netty.handler.codec.http.cookie.ClientCookieEncoder}., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponse.java, + * and {@link io.netty.handler.codec.http.cookie.ClientCookieEncoder}., +++ b/codec-http/src/main/java/io/netty/handler/codec/rtsp/RtspDecoder.java, + * Decodes {@link io.netty.buffer.ByteBuf}s into RTSP messages represented in, + *     {@link io.netty.handler.codec.TooLongFrameException} will be raised.</td>, + *     header exceeds this value, a {@link io.netty.handler.codec.TooLongFrameException} will be, + *     value, a {@link io.netty.handler.codec.TooLongFrameException} will be raised.</td>, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameListener.java, +     * {@link Http2LocalFlowController#consumeBytes(Http2Stream, int)}. The returned value must, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/WeightedFairQueueByteDistributor.java, +     * @param allocationQuantum the amount of bytes that will be allocated to each stream. Must be &gt; 0., +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +     *         if {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}, +     *        When {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}:, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequest.java, + * and {@link io.netty.handler.codec.http.cookie.ClientCookieEncoder}., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponse.java, + * and {@link io.netty.handler.codec.http.cookie.ClientCookieEncoder}., +++ b/codec-http/src/main/java/io/netty/handler/codec/rtsp/RtspDecoder.java, + * Decodes {@link io.netty.buffer.ByteBuf}s into RTSP messages represented in, + *     {@link io.netty.handler.codec.TooLongFrameException} will be raised.</td>, + *     header exceeds this value, a {@link io.netty.handler.codec.TooLongFrameException} will be, + *     value, a {@link io.netty.handler.codec.TooLongFrameException} will be raised.</td>, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameListener.java, +     * {@link Http2LocalFlowController#consumeBytes(Http2Stream, int)}. The returned value must, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/WeightedFairQueueByteDistributor.java, +     * @param allocationQuantum the amount of bytes that will be allocated to each stream. Must be &gt; 0., +++ b/common/src/main/java/io/netty/util/AttributeKey.java, +     * Creates a new {@link AttributeKey} for the given {@code name} or fail with an, +     * {@link IllegalArgumentException} if a {@link AttributeKey} for the given {@code name} exists., +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +     *         if {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}, +     *        When {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}:, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpRequest.java, + * and {@link io.netty.handler.codec.http.cookie.ClientCookieEncoder}., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponse.java, + * and {@link io.netty.handler.codec.http.cookie.ClientCookieEncoder}., +++ b/codec-http/src/main/java/io/netty/handler/codec/rtsp/RtspDecoder.java, + * Decodes {@link io.netty.buffer.ByteBuf}s into RTSP messages represented in, + *     {@link io.netty.handler.codec.TooLongFrameException} will be raised.</td>, + *     header exceeds this value, a {@link io.netty.handler.codec.TooLongFrameException} will be, + *     value, a {@link io.netty.handler.codec.TooLongFrameException} will be raised.</td>, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameListener.java, +     * {@link Http2LocalFlowController#consumeBytes(Http2Stream, int)}. The returned value must, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/WeightedFairQueueByteDistributor.java, +     * @param allocationQuantum the amount of bytes that will be allocated to each stream. Must be &gt; 0., +++ b/common/src/main/java/io/netty/util/AttributeKey.java, +     * Creates a new {@link AttributeKey} for the given {@code name} or fail with an, +     * {@link IllegalArgumentException} if a {@link AttributeKey} for the given {@code name} exists., +++ b/common/src/main/java/io/netty/util/ConstantPool.java, +     * Creates a new {@link Constant} for the given {@code name} or fail with an, +     * {@link IllegalArgumentException} if a {@link Constant} for the given {@code name} exists., +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +     *         if {@link #writerIndex()} + {@code minWritableBytes} &gt; {@link #maxCapacity()}]