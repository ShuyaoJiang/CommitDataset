[+++ b/transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java, +    protected void runAllTasks() {, +        for (;;) {, +            final Runnable task = pollTask();, +            if (task == null) {, +                break;, +            }, +, +            task.run();, +        }, +    }, +, +++ b/transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java, +    protected void runAllTasks() {, +        for (;;) {, +            final Runnable task = pollTask();, +            if (task == null) {, +                break;, +            }, +, +            task.run();, +        }, +    }, +, +++ b/transport/src/main/java/io/netty/channel/socket/nio/AbstractNioChannel.java, +        ((NioChildEventLoop) eventLoop()).cancel(selectionKey());, +++ b/transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java, +    protected void runAllTasks() {, +        for (;;) {, +            final Runnable task = pollTask();, +            if (task == null) {, +                break;, +            }, +, +            task.run();, +        }, +    }, +, +++ b/transport/src/main/java/io/netty/channel/socket/nio/AbstractNioChannel.java, +        ((NioChildEventLoop) eventLoop()).cancel(selectionKey());, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioChildEventLoop.java, +    private int cancelledKeys;, +    private boolean cleanedCancelledKeys;, +                runAllTasks();, +    void cancel(SelectionKey key) {, +        key.cancel();, +        cancelledKeys ++;, +        if (cancelledKeys >= CLEANUP_INTERVAL) {, +            cancelledKeys = 0;, +            cleanedCancelledKeys = true;, +            SelectorUtil.cleanupKeys(selector);, +        cleanedCancelledKeys = false;, +            if (cleanedCancelledKeys) {, +++ b/transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java, +    protected void runAllTasks() {, +        for (;;) {, +            final Runnable task = pollTask();, +            if (task == null) {, +                break;, +            }, +, +            task.run();, +        }, +    }, +, +++ b/transport/src/main/java/io/netty/channel/socket/nio/AbstractNioChannel.java, +        ((NioChildEventLoop) eventLoop()).cancel(selectionKey());, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioChildEventLoop.java, +    private int cancelledKeys;, +    private boolean cleanedCancelledKeys;, +                runAllTasks();, +    void cancel(SelectionKey key) {, +        key.cancel();, +        cancelledKeys ++;, +        if (cancelledKeys >= CLEANUP_INTERVAL) {, +            cancelledKeys = 0;, +            cleanedCancelledKeys = true;, +            SelectorUtil.cleanupKeys(selector);, +        cleanedCancelledKeys = false;, +            if (cleanedCancelledKeys) {, +++ b/transport/src/main/java/io/netty/channel/socket/oio/OioChildEventLoop.java, +                runAllTasks();, +                    runAllTasks();]