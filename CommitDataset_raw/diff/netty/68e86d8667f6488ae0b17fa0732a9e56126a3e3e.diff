[+++ b/common/src/main/java/io/netty/util/internal/DetectionUtil.java, +import java.net.InetSocketAddress;, +import java.net.ServerSocket;, +    private static final boolean IS_ROOT;, +, +        boolean root = false;, +        if (!IS_WINDOWS) {, +            for (int i = 1023; i > 0; i --) {, +                ServerSocket ss = null;, +                try {, +                    ss = new ServerSocket();, +                    ss.setReuseAddress(true);, +                    ss.bind(new InetSocketAddress(i));, +                    root = true;, +                    break;, +                } catch (Exception e) {, +                    // Failed to bind., +                    // Check the error message so that we don't always need to bind 1023 times., +                    String message = e.getMessage();, +                    if (message == null) {, +                        message = "";, +                    }, +                    message = message.toLowerCase();, +                    if (message.matches(".*permission.*denied.*")) {, +                        break;, +                    }, +                } finally {, +                    if (ss != null) {, +                        try {, +                            ss.close();, +                        } catch (Exception e) {, +                            // Ignore., +                        }, +                    }, +                }, +            }, +        }, +, +        IS_ROOT = root;, +    /**, +     * Return {@code true} if the current user is root.  Note that this method returns, +     * {@code false} if on Windows., +     */, +    public static boolean isRoot() {, +        return IS_ROOT;, +    }, +, +++ b/common/src/main/java/io/netty/util/internal/DetectionUtil.java, +import java.net.InetSocketAddress;, +import java.net.ServerSocket;, +    private static final boolean IS_ROOT;, +, +        boolean root = false;, +        if (!IS_WINDOWS) {, +            for (int i = 1023; i > 0; i --) {, +                ServerSocket ss = null;, +                try {, +                    ss = new ServerSocket();, +                    ss.setReuseAddress(true);, +                    ss.bind(new InetSocketAddress(i));, +                    root = true;, +                    break;, +                } catch (Exception e) {, +                    // Failed to bind., +                    // Check the error message so that we don't always need to bind 1023 times., +                    String message = e.getMessage();, +                    if (message == null) {, +                        message = "";, +                    }, +                    message = message.toLowerCase();, +                    if (message.matches(".*permission.*denied.*")) {, +                        break;, +                    }, +                } finally {, +                    if (ss != null) {, +                        try {, +                            ss.close();, +                        } catch (Exception e) {, +                            // Ignore., +                        }, +                    }, +                }, +            }, +        }, +, +        IS_ROOT = root;, +    /**, +     * Return {@code true} if the current user is root.  Note that this method returns, +     * {@code false} if on Windows., +     */, +    public static boolean isRoot() {, +        return IS_ROOT;, +    }, +, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +import io.netty.util.internal.DetectionUtil;, +import java.net.InetSocketAddress;, +        return id;, +, +                    // See: https://github.com/netty/netty/issues/576]