[+++ b/common/src/main/java/io/netty/util/ThreadDeathWatcher.java, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +            final Thread watcherThread = threadFactory.newThread(watcher);, +            AccessController.doPrivileged(new PrivilegedAction<Void>() {, +                @Override, +                public Void run() {, +                    return null;, +                }, +            });, +++ b/common/src/main/java/io/netty/util/ThreadDeathWatcher.java, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +            final Thread watcherThread = threadFactory.newThread(watcher);, +            AccessController.doPrivileged(new PrivilegedAction<Void>() {, +                @Override, +                public Void run() {, +                    return null;, +                }, +            });, +++ b/common/src/main/java/io/netty/util/concurrent/GlobalEventExecutor.java, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +            final Thread t = threadFactory.newThread(taskRunner);, +            AccessController.doPrivileged(new PrivilegedAction<Void>() {, +                @Override, +                public Void run() {, +                    return null;, +                }, +            });, +++ b/common/src/main/java/io/netty/util/ThreadDeathWatcher.java, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +            final Thread watcherThread = threadFactory.newThread(watcher);, +            AccessController.doPrivileged(new PrivilegedAction<Void>() {, +                @Override, +                public Void run() {, +                    return null;, +                }, +            });, +++ b/common/src/main/java/io/netty/util/concurrent/GlobalEventExecutor.java, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +            final Thread t = threadFactory.newThread(taskRunner);, +            AccessController.doPrivileged(new PrivilegedAction<Void>() {, +                @Override, +                public Void run() {, +                    return null;, +                }, +            });, +++ b/common/src/main/java/io/netty/util/internal/ObjectCleaner.java, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +            final Thread cleanupThread = new FastThreadLocalThread(CLEANER_TASK);, +            AccessController.doPrivileged(new PrivilegedAction<Void>() {, +                @Override, +                public Void run() {, +                    return null;, +                }, +            });]