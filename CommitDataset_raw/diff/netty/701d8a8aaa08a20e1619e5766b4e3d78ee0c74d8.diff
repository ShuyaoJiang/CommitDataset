[+++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieEncoder.java, +            add(sb, cookie.getName(), cookie.getValue());, +                    addUnquoted(sb, CookieHeaderNames.EXPIRES,, +                if (cookie.getVersion() > 0) {, +                } else {, +                    addUnquoted(sb, CookieHeaderNames.PATH, cookie.getPath());, +                }, +                if (cookie.getVersion() > 0) {, +                } else {, +                    addUnquoted(sb, CookieHeaderNames.DOMAIN, cookie.getDomain());, +                }, +            add(sb, cookie.getName(), cookie.getValue());, +        if (val == null) {, +            addQuoted(sb, name, "");, +            return;, +        }, +, +        for (int i = 0; i < val.length(); i ++) {, +            char c = val.charAt(i);, +            switch (c) {, +            case '(': case ')': case '<': case '>': case '@': case ',':, +            case ';': case ':': case '"': case '/': case '[': case ']':, +            case '?': case '=': case '{': case '}': case ' ':, +            case '\t': case '\\':, +                addQuoted(sb, name, val);, +                return;, +            }, +        }, +, +        addUnquoted(sb, name, val);, +    }, +, +    private static void addUnquoted(StringBuilder sb, String name, String val) {, +        if (val == null) {, +            val = "";, +        }, +, +        sb.append(val.replace("\\", "\\\\").replace("\"", "\\\""));, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieEncoder.java, +            add(sb, cookie.getName(), cookie.getValue());, +                    addUnquoted(sb, CookieHeaderNames.EXPIRES,, +                if (cookie.getVersion() > 0) {, +                } else {, +                    addUnquoted(sb, CookieHeaderNames.PATH, cookie.getPath());, +                }, +                if (cookie.getVersion() > 0) {, +                } else {, +                    addUnquoted(sb, CookieHeaderNames.DOMAIN, cookie.getDomain());, +                }, +            add(sb, cookie.getName(), cookie.getValue());, +        if (val == null) {, +            addQuoted(sb, name, "");, +            return;, +        }, +, +        for (int i = 0; i < val.length(); i ++) {, +            char c = val.charAt(i);, +            switch (c) {, +            case '(': case ')': case '<': case '>': case '@': case ',':, +            case ';': case ':': case '"': case '/': case '[': case ']':, +            case '?': case '=': case '{': case '}': case ' ':, +            case '\t': case '\\':, +                addQuoted(sb, name, val);, +                return;, +            }, +        }, +, +        addUnquoted(sb, name, val);, +    }, +, +    private static void addUnquoted(StringBuilder sb, String name, String val) {, +        if (val == null) {, +            val = "";, +        }, +, +        sb.append(val.replace("\\", "\\\\").replace("\"", "\\\""));, +++ b/src/main/java/org/jboss/netty/handler/codec/http/QueryStringDecoder.java, +    private static String decodeComponent(String s, String charset) {, +++ b/src/main/java/org/jboss/netty/handler/codec/http/CookieEncoder.java, +            add(sb, cookie.getName(), cookie.getValue());, +                    addUnquoted(sb, CookieHeaderNames.EXPIRES,, +                if (cookie.getVersion() > 0) {, +                } else {, +                    addUnquoted(sb, CookieHeaderNames.PATH, cookie.getPath());, +                }, +                if (cookie.getVersion() > 0) {, +                } else {, +                    addUnquoted(sb, CookieHeaderNames.DOMAIN, cookie.getDomain());, +                }, +            add(sb, cookie.getName(), cookie.getValue());, +        if (val == null) {, +            addQuoted(sb, name, "");, +            return;, +        }, +, +        for (int i = 0; i < val.length(); i ++) {, +            char c = val.charAt(i);, +            switch (c) {, +            case '(': case ')': case '<': case '>': case '@': case ',':, +            case ';': case ':': case '"': case '/': case '[': case ']':]