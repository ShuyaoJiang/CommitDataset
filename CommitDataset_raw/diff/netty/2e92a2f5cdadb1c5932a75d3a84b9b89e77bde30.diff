[+++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, +    private boolean closeNotify;, +            if (!closeNotify) {, +                closeNotify = true;, +                // to fail the promise because of this. This will then fail as it was already completed by, +                // safeClose(...). We create a new ChannelPromise and try to notify the original ChannelPromise, +            } else {, +                /// We already handling the close_notify so just attach the promise to the sslClosePromise., +                sslClosePromise.addListener(new FutureListener<Channel>() {, +                    @Override, +                    public void operationComplete(Future<Channel> future) {, +                        promise.setSuccess();, +                    }, +                });, +            }]