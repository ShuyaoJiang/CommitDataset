[+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +import io.netty.channel.ChannelException;, +    static boolean isSoErrorZero(Socket fd) {, +        try {, +            return fd.getSoError() == 0;, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +import io.netty.channel.ChannelException;, +    static boolean isSoErrorZero(Socket fd) {, +        try {, +            return fd.getSoError() == 0;, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollServerChannel.java, +        this(fd, isSoErrorZero(fd));, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +import io.netty.channel.ChannelException;, +    static boolean isSoErrorZero(Socket fd) {, +        try {, +            return fd.getSoError() == 0;, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollServerChannel.java, +        this(fd, isSoErrorZero(fd));, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java, +        this(fd, isSoErrorZero(fd));, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +import io.netty.channel.ChannelException;, +    static boolean isSoErrorZero(Socket fd) {, +        try {, +            return fd.getSoError() == 0;, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollServerChannel.java, +        this(fd, isSoErrorZero(fd));, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java, +        this(fd, isSoErrorZero(fd));, +++ b/transport-native-epoll/src/main/java/io/netty/channel/unix/Socket.java, +    public int getSoError() throws IOException {, +    private static native int getReceiveBufferSize(int fd) throws IOException;, +    private static native int getSendBufferSize(int fd) throws IOException;, +    private static native int isKeepAlive(int fd) throws IOException;, +    private static native int isTcpNoDelay(int fd) throws IOException;, +    private static native int isTcpCork(int fd) throws IOException;, +    private static native int getSoLinger(int fd) throws IOException;, +    private static native int getSoError(int fd) throws IOException;, +    private static native int getTcpDeferAccept(int fd) throws IOException;, +    private static native int isTcpQuickAck(int fd) throws IOException;, +    private static native void setKeepAlive(int fd, int keepAlive) throws IOException;, +    private static native void setReceiveBufferSize(int fd, int receiveBufferSize) throws IOException;, +    private static native void setSendBufferSize(int fd, int sendBufferSize) throws IOException;, +    private static native void setTcpNoDelay(int fd, int tcpNoDelay) throws IOException;, +    private static native void setTcpCork(int fd, int tcpCork) throws IOException;, +    private static native void setSoLinger(int fd, int soLinger) throws IOException;, +    private static native void setTcpDeferAccept(int fd, int deferAccept) throws IOException;, +    private static native void setTcpQuickAck(int fd, int quickAck) throws IOException;]