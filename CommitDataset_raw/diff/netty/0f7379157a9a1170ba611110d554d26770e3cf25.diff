[+++ b/codec/src/main/java/io/netty/handler/codec/compression/JdkZlibEncoder.java, +        int len = uncompressed.readableBytes();, +        int offset;, +        byte[] inAry;, +        if (uncompressed.hasArray()) {, +            // if it is backed by an array we not need to to do a copy at all, +            inAry = uncompressed.array();, +            offset = uncompressed.arrayOffset() + uncompressed.readerIndex();, +            // skip all bytes as we will consume all of them, +            uncompressed.skipBytes(len);, +        } else {, +            inAry = new byte[len];, +            offset = 0;, +        }, +        deflater.setInput(inAry, offset, len);, +++ b/codec/src/main/java/io/netty/handler/codec/compression/JdkZlibEncoder.java, +        int len = uncompressed.readableBytes();, +        int offset;, +        byte[] inAry;, +        if (uncompressed.hasArray()) {, +            // if it is backed by an array we not need to to do a copy at all, +            inAry = uncompressed.array();, +            offset = uncompressed.arrayOffset() + uncompressed.readerIndex();, +            // skip all bytes as we will consume all of them, +            uncompressed.skipBytes(len);, +        } else {, +            inAry = new byte[len];, +            offset = 0;, +        }, +        deflater.setInput(inAry, offset, len);, +++ b/codec/src/test/java/io/netty/handler/codec/compression/ZlibTest.java, +    private void testCompress0(ZlibWrapper encoderWrapper, ZlibWrapper decoderWrapper, ByteBuf data) throws Exception {, +        byte[] decompressed = new byte[data.readableBytes()];, +        assertEquals(data, Unpooled.wrappedBuffer(decompressed));, +        testCompress0(encoderWrapper, decoderWrapper, Unpooled.wrappedBuffer(BYTES_SMALL));, +        testCompress0(encoderWrapper, decoderWrapper,, +                Unpooled.directBuffer(BYTES_SMALL.length).writeBytes(BYTES_SMALL));, +        testCompress0(encoderWrapper, decoderWrapper, Unpooled.wrappedBuffer(BYTES_LARGE));, +        testCompress0(encoderWrapper, decoderWrapper,, +                Unpooled.directBuffer(BYTES_LARGE.length).writeBytes(BYTES_LARGE));]