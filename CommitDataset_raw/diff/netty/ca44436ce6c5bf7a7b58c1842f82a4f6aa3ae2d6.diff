[+++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpHeadersTest.java, +, +    @Test(expected = IllegalArgumentException.class), +    public void testAddSelf() {, +        HttpHeaders headers = new DefaultHttpHeaders(false);, +        headers.add(headers);, +    }, +, +    @Test(expected = IllegalArgumentException.class), +    public void testSetSelf() {, +        HttpHeaders headers = new DefaultHttpHeaders(false);, +        headers.set(headers);, +    }, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpHeadersTest.java, +, +    @Test(expected = IllegalArgumentException.class), +    public void testAddSelf() {, +        HttpHeaders headers = new DefaultHttpHeaders(false);, +        headers.add(headers);, +    }, +, +    @Test(expected = IllegalArgumentException.class), +    public void testSetSelf() {, +        HttpHeaders headers = new DefaultHttpHeaders(false);, +        headers.set(headers);, +    }, +++ b/codec/src/main/java/io/netty/handler/codec/DefaultHeaders.java, +            throw new IllegalArgumentException("can't add to itself.");, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpHeadersTest.java, +, +    @Test(expected = IllegalArgumentException.class), +    public void testAddSelf() {, +        HttpHeaders headers = new DefaultHttpHeaders(false);, +        headers.add(headers);, +    }, +, +    @Test(expected = IllegalArgumentException.class), +    public void testSetSelf() {, +        HttpHeaders headers = new DefaultHttpHeaders(false);, +        headers.set(headers);, +    }, +++ b/codec/src/main/java/io/netty/handler/codec/DefaultHeaders.java, +            throw new IllegalArgumentException("can't add to itself.");, +++ b/codec/src/test/java/io/netty/handler/codec/DefaultHeadersTest.java, +    @Test(expected = IllegalArgumentException.class), +    public void testAddSelf() {, +        Headers<ByteString> headers = newInstance();, +        headers.add(headers);, +    }, +, +    @Test(expected = IllegalArgumentException.class), +    public void testSetSelf() {, +        Headers<ByteString> headers = newInstance();, +        headers.set(headers);, +    }, +]