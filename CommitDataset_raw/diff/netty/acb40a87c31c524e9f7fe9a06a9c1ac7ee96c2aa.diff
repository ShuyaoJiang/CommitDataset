[+++ b/handler/src/main/java/io/netty/handler/ssl/SniHandler.java, +import io.netty.util.ReferenceCountUtil;, +import javax.net.ssl.SSLEngine;, +, +        SSLEngine sslEngine = null;, +        try {, +            sslEngine = selection.context.newEngine(ctx.alloc());, +            ctx.pipeline().replace(this, SslHandler.class.getName(), selection.context.newHandler(sslEngine));, +        } catch (Throwable cause) {, +            this.selection = EMPTY_SELECTION;, +            // Since the SslHandler was not inserted into the pipeline the ownership of the SSLEngine was not, +            // transferred to the SslHandler., +            // See https://github.com/netty/netty/issues/5678, +            ReferenceCountUtil.safeRelease(sslEngine);, +            ctx.fireExceptionCaught(cause);, +        }, +++ b/handler/src/main/java/io/netty/handler/ssl/SniHandler.java, +import io.netty.util.ReferenceCountUtil;, +import javax.net.ssl.SSLEngine;, +, +        SSLEngine sslEngine = null;, +        try {, +            sslEngine = selection.context.newEngine(ctx.alloc());, +            ctx.pipeline().replace(this, SslHandler.class.getName(), selection.context.newHandler(sslEngine));, +        } catch (Throwable cause) {, +            this.selection = EMPTY_SELECTION;, +            // Since the SslHandler was not inserted into the pipeline the ownership of the SSLEngine was not, +            // transferred to the SslHandler., +            // See https://github.com/netty/netty/issues/5678, +            ReferenceCountUtil.safeRelease(sslEngine);, +            ctx.fireExceptionCaught(cause);, +        }, +++ b/handler/src/main/java/io/netty/handler/ssl/SslContext.java, +    static SslHandler newHandler(SSLEngine engine) {]