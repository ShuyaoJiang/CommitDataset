[+++ b/testsuite/src/test/java/io/netty/testsuite/util/TestUtils.java, +import java.net.DatagramSocket;, +            final int port = nextCandidatePort();, +            final InetSocketAddress wildcardAddr = new InetSocketAddress(port);, +            final InetSocketAddress loopbackAddr = new InetSocketAddress(NetUtil.LOCALHOST4, port);, +            // Ensure it is possible to bind on wildcard/loopback and tcp/udp., +            if (isTcpPortAvailable(wildcardAddr) &&, +                isTcpPortAvailable(loopbackAddr) &&, +                isUdpPortAvailable(wildcardAddr) &&, +                isUdpPortAvailable(loopbackAddr)) {, +    private static boolean isTcpPortAvailable(InetSocketAddress localAddress) {, +        ServerSocket ss = null;, +        try {, +            ss = new ServerSocket();, +            ss.setReuseAddress(false);, +            ss.bind(localAddress);, +            ss.close();, +            ss = null;, +            return true;, +        } catch (Exception ignore) {, +            // Unavailable, +        } finally {, +            if (ss != null) {, +                try {, +                    ss.close();, +                } catch (IOException ignore) {, +                    // Ignore, +                }, +            }, +        }, +, +        return false;, +    }, +, +    private static boolean isUdpPortAvailable(InetSocketAddress localAddress) {, +        DatagramSocket ds = null;, +        try {, +            ds = new DatagramSocket(null);, +            ds.setReuseAddress(false);, +            ds.bind(localAddress);, +            ds.close();, +            ds = null;, +            return true;, +        } catch (Exception ignore) {, +            // Unavailable, +        } finally {, +            if (ds != null) {, +                ds.close();, +            }, +        }, +, +        return false;, +    }, +]