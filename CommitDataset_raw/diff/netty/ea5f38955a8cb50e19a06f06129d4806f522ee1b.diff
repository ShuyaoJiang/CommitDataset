[+++ b/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java, +import java.util.LinkedHashSet;, +import java.util.Set;, +    private static final Set<String> AVAILABLE_CIPHER_SUITES;, +            final Set<String> availableCipherSuites = new LinkedHashSet<String>(128);, +            AVAILABLE_CIPHER_SUITES = Collections.unmodifiableSet(availableCipherSuites);, +            AVAILABLE_CIPHER_SUITES = Collections.emptySet();, +    public static Set<String> availableCipherSuites() {, +        return AVAILABLE_CIPHER_SUITES;, +    }, +, +    /**, +     * Returns {@code true} if and only if the specified cipher suite is available in OpenSSL., +     * Both Java-style cipher suite and OpenSSL-style cipher suite are accepted., +     */, +    public static boolean isCipherSuiteAvailable(String cipherSuite) {, +        String converted = CipherSuiteConverter.toOpenSsl(cipherSuite);, +        if (converted != null) {, +            cipherSuite = converted;, +        }, +        return AVAILABLE_CIPHER_SUITES.contains(cipherSuite);, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java, +import java.util.LinkedHashSet;, +import java.util.Set;, +    private static final Set<String> AVAILABLE_CIPHER_SUITES;, +            final Set<String> availableCipherSuites = new LinkedHashSet<String>(128);, +            AVAILABLE_CIPHER_SUITES = Collections.unmodifiableSet(availableCipherSuites);, +            AVAILABLE_CIPHER_SUITES = Collections.emptySet();, +    public static Set<String> availableCipherSuites() {, +        return AVAILABLE_CIPHER_SUITES;, +    }, +, +    /**, +     * Returns {@code true} if and only if the specified cipher suite is available in OpenSSL., +     * Both Java-style cipher suite and OpenSSL-style cipher suite are accepted., +     */, +    public static boolean isCipherSuiteAvailable(String cipherSuite) {, +        String converted = CipherSuiteConverter.toOpenSsl(cipherSuite);, +        if (converted != null) {, +            cipherSuite = converted;, +        }, +        return AVAILABLE_CIPHER_SUITES.contains(cipherSuite);, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslEngine.java, +        Set<String> availableCipherSuites = OpenSsl.availableCipherSuites();, +        return availableCipherSuites.toArray(new String[availableCipherSuites.size()]);, +        final StringBuilder buf = new StringBuilder();, +        for (String c: cipherSuites) {, +            if (c == null) {, +                break;, +            }, +, +            String converted = CipherSuiteConverter.toOpenSsl(c);, +            if (converted == null) {, +                converted = c;, +            }, +, +            if (!OpenSsl.isCipherSuiteAvailable(converted)) {, +                throw new IllegalArgumentException("unsupported cipher suite: " + c + '(' + converted + ')');, +            }, +, +            buf.append(converted);, +            buf.append(':');, +        }, +, +        if (buf.length() == 0) {, +            throw new IllegalArgumentException("empty cipher suites");, +        }, +        buf.setLength(buf.length() - 1);, +, +        final String cipherSuiteSpec = buf.toString();, +            SSL.setCipherSuites(ssl, cipherSuiteSpec);, +            throw new IllegalStateException("failed to enable cipher suites: " + cipherSuiteSpec, e);]