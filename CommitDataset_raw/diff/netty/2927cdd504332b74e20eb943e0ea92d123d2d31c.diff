[+++ b/example/src/main/java/io/netty/example/http2/client/Http2Client.java, +import io.netty.handler.ssl.SslContextBuilder;, +            sslCtx = SslContextBuilder.forClient(), +                .sslProvider(provider), +                /* NOTE: the cipher filter may not include all ciphers required by the HTTP/2 specification., +                .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE), +                .trustManager(InsecureTrustManagerFactory.INSTANCE), +                .applicationProtocolConfig(new ApplicationProtocolConfig(, +                    SelectedProtocol.HTTP_1_1.protocolName())), +                .build();, +++ b/example/src/main/java/io/netty/example/http2/client/Http2Client.java, +import io.netty.handler.ssl.SslContextBuilder;, +            sslCtx = SslContextBuilder.forClient(), +                .sslProvider(provider), +                /* NOTE: the cipher filter may not include all ciphers required by the HTTP/2 specification., +                .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE), +                .trustManager(InsecureTrustManagerFactory.INSTANCE), +                .applicationProtocolConfig(new ApplicationProtocolConfig(, +                    SelectedProtocol.HTTP_1_1.protocolName())), +                .build();, +++ b/example/src/main/java/io/netty/example/http2/server/Http2Server.java, +import io.netty.handler.ssl.SslContextBuilder;, +            sslCtx = SslContextBuilder.forServer(ssc.certificate(), ssc.privateKey()), +                .sslProvider(provider), +                /* NOTE: the cipher filter may not include all ciphers required by the HTTP/2 specification., +                .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE), +                .applicationProtocolConfig(new ApplicationProtocolConfig(, +                    SelectedProtocol.HTTP_1_1.protocolName())), +                .build();, +++ b/example/src/main/java/io/netty/example/http2/client/Http2Client.java, +import io.netty.handler.ssl.SslContextBuilder;, +            sslCtx = SslContextBuilder.forClient(), +                .sslProvider(provider), +                /* NOTE: the cipher filter may not include all ciphers required by the HTTP/2 specification., +                .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE), +                .trustManager(InsecureTrustManagerFactory.INSTANCE), +                .applicationProtocolConfig(new ApplicationProtocolConfig(, +                    SelectedProtocol.HTTP_1_1.protocolName())), +                .build();, +++ b/example/src/main/java/io/netty/example/http2/server/Http2Server.java, +import io.netty.handler.ssl.SslContextBuilder;, +            sslCtx = SslContextBuilder.forServer(ssc.certificate(), ssc.privateKey()), +                .sslProvider(provider), +                /* NOTE: the cipher filter may not include all ciphers required by the HTTP/2 specification., +                .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE), +                .applicationProtocolConfig(new ApplicationProtocolConfig(, +                    SelectedProtocol.HTTP_1_1.protocolName())), +                .build();, +++ b/example/src/main/java/io/netty/example/memcache/binary/MemcacheClient.java, +import io.netty.handler.ssl.SslContextBuilder;, +            sslCtx = SslContextBuilder.forClient(), +                .trustManager(InsecureTrustManagerFactory.INSTANCE).build();]