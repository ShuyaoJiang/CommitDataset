[+++ b/testsuite/src/test/java/io/netty/testsuite/util/TestUtils.java, +import io.netty.util.NetworkConstants;, +, +import java.net.InetSocketAddress;, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.Iterator;, +import java.util.List;, +    private static final int START_PORT = 32768;, +    private static final int END_PORT = 65536;, +    private static final int NUM_CANDIDATES = END_PORT - START_PORT;, +, +    private static final List<Integer> PORTS = new ArrayList<Integer>();, +    private static Iterator<Integer> PORTS_ITERATOR;, +, +    static {, +        for (int i = START_PORT; i < END_PORT; i ++) {, +            PORTS.add(i);, +        }, +        Collections.shuffle(PORTS);, +    }, +, +    private static int nextCandidatePort() {, +        if (PORTS_ITERATOR == null || !PORTS_ITERATOR.hasNext()) {, +            PORTS_ITERATOR = PORTS.iterator();, +        }, +        return PORTS_ITERATOR.next();, +    }, +        for (int i = 0; i < NUM_CANDIDATES; i ++) {, +            int port = nextCandidatePort();, +                // Ensure it is possible to bind on both wildcard and loopback., +                ServerSocket ss;, +                ss = new ServerSocket();, +                ss.setReuseAddress(false);, +                ss.bind(new InetSocketAddress(port));, +                ss.close();, +, +                ss = new ServerSocket();, +                ss.setReuseAddress(false);, +                ss.bind(new InetSocketAddress(NetworkConstants.LOCALHOST, port));, +                ss.close();, +, +                return port;, +, +        throw new RuntimeException("unable to find a free port");]