[+++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +import io.netty.util.Recycler.Handle;, +    private final Recycler.Handle<PooledByteBuf<T>> recyclerHandle;, +    @SuppressWarnings("unchecked"), +    protected PooledByteBuf(Recycler.Handle<? extends PooledByteBuf<T>> recyclerHandle, int maxCapacity) {, +        this.recyclerHandle = (Handle<PooledByteBuf<T>>) recyclerHandle;, +        recyclerHandle.recycle(this);, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +import io.netty.util.Recycler.Handle;, +    private final Recycler.Handle<PooledByteBuf<T>> recyclerHandle;, +    @SuppressWarnings("unchecked"), +    protected PooledByteBuf(Recycler.Handle<? extends PooledByteBuf<T>> recyclerHandle, int maxCapacity) {, +        this.recyclerHandle = (Handle<PooledByteBuf<T>>) recyclerHandle;, +        recyclerHandle.recycle(this);, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        protected PooledDirectByteBuf newObject(Handle<PooledDirectByteBuf> handle) {, +    private PooledDirectByteBuf(Recycler.Handle<PooledDirectByteBuf> recyclerHandle, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +import io.netty.util.Recycler.Handle;, +    private final Recycler.Handle<PooledByteBuf<T>> recyclerHandle;, +    @SuppressWarnings("unchecked"), +    protected PooledByteBuf(Recycler.Handle<? extends PooledByteBuf<T>> recyclerHandle, int maxCapacity) {, +        this.recyclerHandle = (Handle<PooledByteBuf<T>>) recyclerHandle;, +        recyclerHandle.recycle(this);, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        protected PooledDirectByteBuf newObject(Handle<PooledDirectByteBuf> handle) {, +    private PooledDirectByteBuf(Recycler.Handle<PooledDirectByteBuf> recyclerHandle, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        protected PooledHeapByteBuf newObject(Handle<PooledHeapByteBuf> handle) {, +    private PooledHeapByteBuf(Recycler.Handle<PooledHeapByteBuf> recyclerHandle, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +import io.netty.util.Recycler.Handle;, +    private final Recycler.Handle<PooledByteBuf<T>> recyclerHandle;, +    @SuppressWarnings("unchecked"), +    protected PooledByteBuf(Recycler.Handle<? extends PooledByteBuf<T>> recyclerHandle, int maxCapacity) {, +        this.recyclerHandle = (Handle<PooledByteBuf<T>>) recyclerHandle;, +        recyclerHandle.recycle(this);, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        protected PooledDirectByteBuf newObject(Handle<PooledDirectByteBuf> handle) {, +    private PooledDirectByteBuf(Recycler.Handle<PooledDirectByteBuf> recyclerHandle, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        protected PooledHeapByteBuf newObject(Handle<PooledHeapByteBuf> handle) {, +    private PooledHeapByteBuf(Recycler.Handle<PooledHeapByteBuf> recyclerHandle, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        protected PooledUnsafeDirectByteBuf newObject(Handle<PooledUnsafeDirectByteBuf> handle) {, +    private PooledUnsafeDirectByteBuf(Recycler.Handle<PooledUnsafeDirectByteBuf> recyclerHandle, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +import io.netty.util.Recycler.Handle;, +    private final Recycler.Handle<PooledByteBuf<T>> recyclerHandle;, +    @SuppressWarnings("unchecked"), +    protected PooledByteBuf(Recycler.Handle<? extends PooledByteBuf<T>> recyclerHandle, int maxCapacity) {, +        this.recyclerHandle = (Handle<PooledByteBuf<T>>) recyclerHandle;, +        recyclerHandle.recycle(this);, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        protected PooledDirectByteBuf newObject(Handle<PooledDirectByteBuf> handle) {, +    private PooledDirectByteBuf(Recycler.Handle<PooledDirectByteBuf> recyclerHandle, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        protected PooledHeapByteBuf newObject(Handle<PooledHeapByteBuf> handle) {, +    private PooledHeapByteBuf(Recycler.Handle<PooledHeapByteBuf> recyclerHandle, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        protected PooledUnsafeDirectByteBuf newObject(Handle<PooledUnsafeDirectByteBuf> handle) {, +    private PooledUnsafeDirectByteBuf(Recycler.Handle<PooledUnsafeDirectByteBuf> recyclerHandle, int maxCapacity) {, +++ b/common/src/main/java/io/netty/util/Recycler.java, +    public final boolean recycle(T o, Handle<T> handle) {, +    protected abstract T newObject(Handle<T> handle);, +    public interface Handle<T> {, +        void recycle(T object);, +    }, +    static final class Stack<T> implements Handle<T> {, +        @Override, +        public void recycle(T object) {, +            parent.recycle(object, this);, +        }, +, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBuf.java, +import io.netty.util.Recycler.Handle;, +    private final Recycler.Handle<PooledByteBuf<T>> recyclerHandle;, +    @SuppressWarnings("unchecked"), +    protected PooledByteBuf(Recycler.Handle<? extends PooledByteBuf<T>> recyclerHandle, int maxCapacity) {, +        this.recyclerHandle = (Handle<PooledByteBuf<T>>) recyclerHandle;, +        recyclerHandle.recycle(this);, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        protected PooledDirectByteBuf newObject(Handle<PooledDirectByteBuf> handle) {, +    private PooledDirectByteBuf(Recycler.Handle<PooledDirectByteBuf> recyclerHandle, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        protected PooledHeapByteBuf newObject(Handle<PooledHeapByteBuf> handle) {, +    private PooledHeapByteBuf(Recycler.Handle<PooledHeapByteBuf> recyclerHandle, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        protected PooledUnsafeDirectByteBuf newObject(Handle<PooledUnsafeDirectByteBuf> handle) {, +    private PooledUnsafeDirectByteBuf(Recycler.Handle<PooledUnsafeDirectByteBuf> recyclerHandle, int maxCapacity) {, +++ b/common/src/main/java/io/netty/util/Recycler.java, +    public final boolean recycle(T o, Handle<T> handle) {, +    protected abstract T newObject(Handle<T> handle);, +    public interface Handle<T> {, +        void recycle(T object);, +    }, +    static final class Stack<T> implements Handle<T> {, +        @Override, +        public void recycle(T object) {, +            parent.recycle(object, this);]