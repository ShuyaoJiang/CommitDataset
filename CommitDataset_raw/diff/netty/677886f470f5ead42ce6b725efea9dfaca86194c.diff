[+++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +        if (next != null && !next.isInboundBufferFreed()) {, +            if (handler instanceof ChannelInboundByteHandler && !isInboundBufferFreed()) {, +        if (prev.isOutboundBufferFreed()) {, +            promise.setFailure(new ChannelPipelineException(, +                    "Unable to flush as outbound buffer of next handler was freed already"));, +            return;, +        }, +        if (isOutboundBufferFreed()) {, +            promise.setFailure(new ChannelPipelineException(, +                    "Unable to write as outbound buffer of next handler was freed already"));, +            return;, +        }, +    private boolean isInboundBufferFreed() {, +        if (hasInboundByteBuffer()) {, +            return inboundByteBuffer().isFreed();, +        }, +        if (hasInboundMessageBuffer()) {, +            return inboundMessageBuffer().isFreed();, +        }, +        return false;, +    }, +, +    private boolean isOutboundBufferFreed() {, +        if (hasOutboundByteBuffer()) {, +            return outboundByteBuffer().isFreed();, +        }, +        if (hasOutboundMessageBuffer()) {, +            return outboundMessageBuffer().isFreed();, +        }, +        return false;, +    }, +]