[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java, +            for (DefaultStream stream : children.values()) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java, +            for (DefaultStream stream : children.values()) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +                    settings.put(id, Long.valueOf(value));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java, +            for (DefaultStream stream : children.values()) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +                    settings.put(id, Long.valueOf(value));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameWriter.java, +            for (CharObjectMap.PrimitiveEntry<Long> entry : settings.entries()) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java, +            for (DefaultStream stream : children.values()) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +                    settings.put(id, Long.valueOf(value));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameWriter.java, +            for (CharObjectMap.PrimitiveEntry<Long> entry : settings.entries()) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ClientUpgradeCodec.java, +import io.netty.buffer.ByteBuf;, +import io.netty.channel.ChannelHandlerContext;, +import io.netty.handler.codec.base64.Base64;, +import io.netty.handler.codec.http.FullHttpResponse;, +import io.netty.handler.codec.http.HttpClientUpgradeHandler;, +import io.netty.handler.codec.http.HttpRequest;, +import io.netty.util.collection.CharObjectMap;, +, +import java.util.Collection;, +import java.util.Collections;, +import java.util.List;, +, +            for (CharObjectMap.PrimitiveEntry<Long> entry : settings.entries()) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java, +            for (DefaultStream stream : children.values()) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +                    settings.put(id, Long.valueOf(value));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameWriter.java, +            for (CharObjectMap.PrimitiveEntry<Long> entry : settings.entries()) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ClientUpgradeCodec.java, +import io.netty.buffer.ByteBuf;, +import io.netty.channel.ChannelHandlerContext;, +import io.netty.handler.codec.base64.Base64;, +import io.netty.handler.codec.http.FullHttpResponse;, +import io.netty.handler.codec.http.HttpClientUpgradeHandler;, +import io.netty.handler.codec.http.HttpRequest;, +import io.netty.util.collection.CharObjectMap;, +, +import java.util.Collection;, +import java.util.Collections;, +import java.util.List;, +, +            for (CharObjectMap.PrimitiveEntry<Long> entry : settings.entries()) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2Settings.java, +    private static final Long FALSE = 0L;, +    private static final Long TRUE = 1L;, +        put(SETTINGS_HEADER_TABLE_SIZE, Long.valueOf(value));, +        return TRUE.equals(value);, +        put(SETTINGS_ENABLE_PUSH, enabled ? TRUE : FALSE);, +        put(SETTINGS_MAX_CONCURRENT_STREAMS, Long.valueOf(value));, +        put(SETTINGS_INITIAL_WINDOW_SIZE, Long.valueOf(value));, +        put(SETTINGS_MAX_FRAME_SIZE, Long.valueOf(value));, +        put(SETTINGS_MAX_HEADER_LIST_SIZE, Long.valueOf(value));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java, +            for (DefaultStream stream : children.values()) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +                    settings.put(id, Long.valueOf(value));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameWriter.java, +            for (CharObjectMap.PrimitiveEntry<Long> entry : settings.entries()) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ClientUpgradeCodec.java, +import io.netty.buffer.ByteBuf;, +import io.netty.channel.ChannelHandlerContext;, +import io.netty.handler.codec.base64.Base64;, +import io.netty.handler.codec.http.FullHttpResponse;, +import io.netty.handler.codec.http.HttpClientUpgradeHandler;, +import io.netty.handler.codec.http.HttpRequest;, +import io.netty.util.collection.CharObjectMap;, +, +import java.util.Collection;, +import java.util.Collections;, +import java.util.List;, +, +            for (CharObjectMap.PrimitiveEntry<Long> entry : settings.entries()) {, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2Settings.java, +    private static final Long FALSE = 0L;, +    private static final Long TRUE = 1L;, +        put(SETTINGS_HEADER_TABLE_SIZE, Long.valueOf(value));, +        return TRUE.equals(value);, +        put(SETTINGS_ENABLE_PUSH, enabled ? TRUE : FALSE);, +        put(SETTINGS_MAX_CONCURRENT_STREAMS, Long.valueOf(value));, +        put(SETTINGS_INITIAL_WINDOW_SIZE, Long.valueOf(value));, +        put(SETTINGS_MAX_FRAME_SIZE, Long.valueOf(value));, +        put(SETTINGS_MAX_HEADER_LIST_SIZE, Long.valueOf(value));, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2RemoteFlowControllerTest.java, +import java.util.Collections;, +        streamSizes.put(STREAM_A, (Integer) 400);, +        streamSizes.put(STREAM_B, (Integer) 500);, +        streamSizes.put(STREAM_C, (Integer) 600);, +        streamSizes.put(STREAM_D, (Integer) 700);, +        assertEquals(calculateStreamSizeSum(streamSizes, Collections.singletonList(STREAM_B)),, +        assertEquals(calculateStreamSizeSum(streamSizes, Collections.singletonList(STREAM_C)),]