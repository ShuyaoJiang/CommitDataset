[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioServerSocketChannel.java, +import java.util.concurrent.locks.Lock;, +import java.util.concurrent.locks.ReentrantLock;, +    final Lock shutdownLock = new ReentrantLock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioServerSocketChannel.java, +import java.util.concurrent.locks.Lock;, +import java.util.concurrent.locks.ReentrantLock;, +    final Lock shutdownLock = new ReentrantLock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioServerSocketPipelineSink.java, +, +            // Make sure the boss thread is not running so that that the future, +            // is notified after a new connection cannot be accepted anymore., +            // See NETTY-256 for more information., +            channel.shutdownLock.lock();, +            try {, +            } finally {, +                channel.shutdownLock.unlock();, +            }, +            channel.shutdownLock.lock();, +            channel.shutdownLock.unlock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioServerSocketChannel.java, +import java.util.concurrent.locks.Lock;, +import java.util.concurrent.locks.ReentrantLock;, +    final Lock shutdownLock = new ReentrantLock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioServerSocketPipelineSink.java, +, +            // Make sure the boss thread is not running so that that the future, +            // is notified after a new connection cannot be accepted anymore., +            // See NETTY-256 for more information., +            channel.shutdownLock.lock();, +            try {, +            } finally {, +                channel.shutdownLock.unlock();, +            }, +            channel.shutdownLock.lock();, +            channel.shutdownLock.unlock();, +++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioServerSocketChannel.java, +import java.util.concurrent.locks.Lock;, +import java.util.concurrent.locks.ReentrantLock;, +    final Lock shutdownLock = new ReentrantLock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioServerSocketChannel.java, +import java.util.concurrent.locks.Lock;, +import java.util.concurrent.locks.ReentrantLock;, +    final Lock shutdownLock = new ReentrantLock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioServerSocketPipelineSink.java, +, +            // Make sure the boss thread is not running so that that the future, +            // is notified after a new connection cannot be accepted anymore., +            // See NETTY-256 for more information., +            channel.shutdownLock.lock();, +            try {, +            } finally {, +                channel.shutdownLock.unlock();, +            }, +            channel.shutdownLock.lock();, +            channel.shutdownLock.unlock();, +++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioServerSocketChannel.java, +import java.util.concurrent.locks.Lock;, +import java.util.concurrent.locks.ReentrantLock;, +    final Lock shutdownLock = new ReentrantLock();, +++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioServerSocketPipelineSink.java, +, +            // Make sure the boss thread is not running so that that the future, +            // is notified after a new connection cannot be accepted anymore., +            // See NETTY-256 for more information., +            channel.shutdownLock.lock();, +            try {, +            } finally {, +                channel.shutdownLock.unlock();, +            }, +            channel.shutdownLock.lock();, +            channel.shutdownLock.unlock();]