[+++ b/transport/src/main/java/io/netty/bootstrap/AbstractBootstrap.java, +import java.util.LinkedHashMap;, +    private volatile EventLoopGroup group;, +    private volatile ChannelFactory<? extends C> channelFactory;, +    private volatile SocketAddress localAddress;, +    private final Map<ChannelOption<?>, Object> options = new LinkedHashMap<ChannelOption<?>, Object>();, +    private final Map<AttributeKey<?>, Object> attrs = new LinkedHashMap<AttributeKey<?>, Object>();, +    private volatile ChannelHandler handler;, +        synchronized (bootstrap.options) {, +        }, +        synchronized (bootstrap.attrs) {, +    }, +            synchronized (options) {, +            }, +            synchronized (options) {, +        }, +            synchronized (attrs) {, +            }, +            synchronized (attrs) {, +        }, +        synchronized (options) {, +            if (!options.isEmpty()) {, +        }, +        synchronized (attrs) {, +            if (!attrs.isEmpty()) {, +        }, +++ b/transport/src/main/java/io/netty/bootstrap/AbstractBootstrap.java, +import java.util.LinkedHashMap;, +    private volatile EventLoopGroup group;, +    private volatile ChannelFactory<? extends C> channelFactory;, +    private volatile SocketAddress localAddress;, +    private final Map<ChannelOption<?>, Object> options = new LinkedHashMap<ChannelOption<?>, Object>();, +    private final Map<AttributeKey<?>, Object> attrs = new LinkedHashMap<AttributeKey<?>, Object>();, +    private volatile ChannelHandler handler;, +        synchronized (bootstrap.options) {, +        }, +        synchronized (bootstrap.attrs) {, +    }, +            synchronized (options) {, +            }, +            synchronized (options) {, +        }, +            synchronized (attrs) {, +            }, +            synchronized (attrs) {, +        }, +        synchronized (options) {, +            if (!options.isEmpty()) {, +        }, +        synchronized (attrs) {, +            if (!attrs.isEmpty()) {, +        }, +++ b/transport/src/main/java/io/netty/bootstrap/Bootstrap.java, +import java.util.Map;, +    private volatile SocketAddress remoteAddress;, +        final Map<ChannelOption<?>, Object> options = options();, +        synchronized (options) {, +            for (Entry<ChannelOption<?>, Object> e: options.entrySet()) {, +        }, +        final Map<AttributeKey<?>, Object> attrs = attrs();, +        synchronized (attrs) {, +            for (Entry<AttributeKey<?>, Object> e: attrs.entrySet()) {, +        }, +++ b/transport/src/main/java/io/netty/bootstrap/AbstractBootstrap.java, +import java.util.LinkedHashMap;, +    private volatile EventLoopGroup group;, +    private volatile ChannelFactory<? extends C> channelFactory;, +    private volatile SocketAddress localAddress;, +    private final Map<ChannelOption<?>, Object> options = new LinkedHashMap<ChannelOption<?>, Object>();, +    private final Map<AttributeKey<?>, Object> attrs = new LinkedHashMap<AttributeKey<?>, Object>();, +    private volatile ChannelHandler handler;, +        synchronized (bootstrap.options) {, +        }, +        synchronized (bootstrap.attrs) {, +    }, +            synchronized (options) {, +            }, +            synchronized (options) {, +        }, +            synchronized (attrs) {, +            }, +            synchronized (attrs) {, +        }, +        synchronized (options) {, +            if (!options.isEmpty()) {, +        }, +        synchronized (attrs) {, +            if (!attrs.isEmpty()) {, +        }, +++ b/transport/src/main/java/io/netty/bootstrap/Bootstrap.java, +import java.util.Map;, +    private volatile SocketAddress remoteAddress;, +        final Map<ChannelOption<?>, Object> options = options();, +        synchronized (options) {, +            for (Entry<ChannelOption<?>, Object> e: options.entrySet()) {, +        }, +        final Map<AttributeKey<?>, Object> attrs = attrs();, +        synchronized (attrs) {, +            for (Entry<AttributeKey<?>, Object> e: attrs.entrySet()) {, +        }]