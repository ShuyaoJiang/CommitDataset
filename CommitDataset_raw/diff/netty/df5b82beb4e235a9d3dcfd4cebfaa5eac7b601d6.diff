[+++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffers.java, +    /**, +     * Creates a new big-endian buffer whose content is a copy of the, +     * specified {@code array}.  The new buffer's {@code readerIndex} and, +     * {@code writerIndex} are {@code 0} and {@code array.length} respectively., +     */, +    /**, +     * Creates a new buffer with the specified {@code endianness} whose, +     * content is a copy of the specified {@code array}.  The new buffer's, +     * {@code readerIndex} and {@code writerIndex} are {@code 0} and, +     * {@code array.length} respectively., +     */, +    /**, +     * Creates a new big-endian buffer whose content is a copy of the, +     * specified {@code array}'s sub-region.  The new buffer's, +     * {@code readerIndex} and {@code writerIndex} are {@code 0} and, +     * the specified {@code length} respectively., +     */, +    /**, +     * Creates a new buffer with the specified {@code endianness} whose, +     * content is a copy of the specified {@code array}'s sub-region.  The new, +     * buffer's {@code readerIndex} and {@code writerIndex} are {@code 0} and, +     * the specified {@code length} respectively., +     */, +    /**, +     * Creates a new buffer whose content is a copy of the specified, +     * {@code buffer}'s current slice.  The new buffer's {@code readerIndex}, +     * and {@code writerIndex} are {@code 0} and {@code buffer.remaining}, +     * respectively., +     */, +    /**, +     * Creates a new buffer whose content is a copy of the specified, +     * {@code buffer}'s readable bytes.  The new buffer's {@code readerIndex}, +     * and {@code writerIndex} are {@code 0} and {@code buffer.readableBytes}, +     * respectively., +     */, +    /**, +     * Creates a new big-endian buffer whose content is a merged copy of, +     * the specified {@code arrays}.  The new buffer's {@code readerIndex}, +     * and {@code writerIndex} are {@code 0} and the sum of all arrays', +     * {@code length} respectively., +     */, +    /**, +     * Creates a new buffer with the specified {@code endianness} whose, +     * content is a merged copy of the specified {@code arrays}.  The new, +     * buffer's {@code readerIndex} and {@code writerIndex} are {@code 0}, +     * and the sum of all arrays' {@code length} respectively., +     */, +    /**, +     * Creates a new buffer whose content is a merged copy of the specified, +     * {@code buffers}' readable bytes.  The new buffer's {@code readerIndex}, +     * and {@code writerIndex} are {@code 0} and the sum of all buffers', +     * {@code readableBytes} respectively., +     *, +     * @throws IllegalArgumentException, +     *         if the specified buffers' endianness are different from each, +     *         other, +     */, +    /**, +     * Creates a new buffer whose content is a merged copy of the specified, +     * {@code buffers}' slices.  The new buffer's {@code readerIndex} and, +     * {@code writerIndex} are {@code 0} and the sum of all buffers', +     * {@code remaining} respectively., +     *, +     * @throws IllegalArgumentException, +     *         if the specified buffers' endianness are different from each, +     *         other, +     */, +    /**, +     * Creates a new big-endian buffer whose content is the specified, +     * {@code string} encoded by the specified {@code charsetName}., +     * The new buffer's {@code readerIndex} and {@code writerIndex} are, +     * {@code 0} and the length of the encoded string respectively., +     */, +        return copiedBuffer(BIG_ENDIAN, string, charsetName);, +    }, +, +    /**, +     * Creates a new buffer with the specified {@code endianness} whose, +     * content is the specified {@code string} encoded by the specified, +     * {@code charsetName}.  The new buffer's {@code readerIndex} and, +     * {@code writerIndex} are {@code 0} and the length of the encoded string, +     * respectively., +     */, +    public static ChannelBuffer copiedBuffer(ByteOrder endianness, String string, String charsetName) {, +            return wrappedBuffer(endianness, string.getBytes(charsetName));]