[+++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpChunkTrailer.java, +    private final HttpHeaders headers = new HttpHeaders() {, +        @Override, +        void validateHeaderName(String name) {, +            super.validateHeaderName(name);, +    };, +, +    public boolean isLast() {, +        return true;, +    }, +, +    public void addHeader(final String name, final String value) {, +        headers.addHeader(name, value);, +    }, +, +    public void setHeader(final String name, final String value) {, +        headers.setHeader(name, value);, +    }, +, +    public void setHeader(final String name, final Iterable<String> values) {, +        headers.setHeader(name, values);, +    }, +        headers.removeHeader(name);, +        headers.clearHeaders();, +        return headers.getHeader(name);, +        return headers.getHeaders(name);, +, +    public List<Map.Entry<String, String>> getHeaders() {, +        return headers.getHeaders();, +        return headers.containsHeader(name);, +        return headers.getHeaderNames();, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpChunkTrailer.java, +    private final HttpHeaders headers = new HttpHeaders() {, +        @Override, +        void validateHeaderName(String name) {, +            super.validateHeaderName(name);, +    };, +, +    public boolean isLast() {, +        return true;, +    }, +, +    public void addHeader(final String name, final String value) {, +        headers.addHeader(name, value);, +    }, +, +    public void setHeader(final String name, final String value) {, +        headers.setHeader(name, value);, +    }, +, +    public void setHeader(final String name, final Iterable<String> values) {, +        headers.setHeader(name, values);, +    }, +        headers.removeHeader(name);, +        headers.clearHeaders();, +        return headers.getHeader(name);, +        return headers.getHeaders(name);, +, +    public List<Map.Entry<String, String>> getHeaders() {, +        return headers.getHeaders();, +        return headers.containsHeader(name);, +        return headers.getHeaderNames();, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpMessage.java, +    private final HttpHeaders headers = new HttpHeaders();, +        headers.addHeader(name, value);, +        headers.setHeader(name, value);, +        headers.setHeader(name, values);, +        headers.removeHeader(name);, +        List<String> contentLength = getHeaders(HttpHeaders.Names.CONTENT_LENGTH);, +        headers.clearHeaders();, +        List<String> values = getHeaders(name);, +        return values.size() > 0 ? values.get(0) : null;, +        return headers.getHeaders(name);, +, +    public List<Map.Entry<String, String>> getHeaders() {, +        return headers.getHeaders();, +        return headers.containsHeader(name);, +        return headers.getHeaderNames();, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpChunkTrailer.java, +    private final HttpHeaders headers = new HttpHeaders() {, +        @Override, +        void validateHeaderName(String name) {, +            super.validateHeaderName(name);, +    };, +, +    public boolean isLast() {, +        return true;, +    }, +, +    public void addHeader(final String name, final String value) {, +        headers.addHeader(name, value);, +    }, +, +    public void setHeader(final String name, final String value) {, +        headers.setHeader(name, value);, +    }, +, +    public void setHeader(final String name, final Iterable<String> values) {, +        headers.setHeader(name, values);, +    }]