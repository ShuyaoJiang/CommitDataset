[+++ /dev/null, +++ /dev/null, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2StreamFrame.java, +    private Http2FrameStream stream;, +    public AbstractHttp2StreamFrame stream(Http2FrameStream stream) {, +    public Http2FrameStream stream() {, +        Http2FrameStream stream = this.stream;, +        if (stream == null) {, +            return super.hashCode();, +        }, +++ /dev/null, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2StreamFrame.java, +    private Http2FrameStream stream;, +    public AbstractHttp2StreamFrame stream(Http2FrameStream stream) {, +    public Http2FrameStream stream() {, +        Http2FrameStream stream = this.stream;, +        if (stream == null) {, +            return super.hashCode();, +        }, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2DataFrame.java, +import io.netty.util.internal.StringUtil;, +    private final int initialFlowControlledBytes;, +        if (content().readableBytes() + (long) padding > Integer.MAX_VALUE) {, +            throw new IllegalArgumentException("content + padding must be <= Integer.MAX_VALUE");, +        }, +        initialFlowControlledBytes = content().readableBytes() + padding;, +    public DefaultHttp2DataFrame stream(Http2FrameStream stream) {, +    public boolean isEndStream() {, +    public int initialFlowControlledBytes() {, +        return initialFlowControlledBytes;, +    }, +, +    @Override, +        return StringUtil.simpleClassName(this) + "(stream=" + stream() + ", content=" + content, +               + ", endStream=" + endStream + ", padding=" + padding + ')';, +++ /dev/null, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2StreamFrame.java, +    private Http2FrameStream stream;, +    public AbstractHttp2StreamFrame stream(Http2FrameStream stream) {, +    public Http2FrameStream stream() {, +        Http2FrameStream stream = this.stream;, +        if (stream == null) {, +            return super.hashCode();, +        }, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2DataFrame.java, +import io.netty.util.internal.StringUtil;, +    private final int initialFlowControlledBytes;, +        if (content().readableBytes() + (long) padding > Integer.MAX_VALUE) {, +            throw new IllegalArgumentException("content + padding must be <= Integer.MAX_VALUE");, +        }, +        initialFlowControlledBytes = content().readableBytes() + padding;, +    public DefaultHttp2DataFrame stream(Http2FrameStream stream) {, +    public boolean isEndStream() {, +    public int initialFlowControlledBytes() {, +        return initialFlowControlledBytes;, +    }, +, +    @Override, +        return StringUtil.simpleClassName(this) + "(stream=" + stream() + ", content=" + content, +               + ", endStream=" + endStream + ", padding=" + padding + ')';, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2GoAwayFrame.java, +import io.netty.util.internal.StringUtil;, +        return StringUtil.simpleClassName(this) + "(errorCode=" + errorCode + ", content=" + content(), +               + ", extraStreamIds=" + extraStreamIds + ", lastStreamId=" + lastStreamId + ')';, +++ /dev/null, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2StreamFrame.java, +    private Http2FrameStream stream;, +    public AbstractHttp2StreamFrame stream(Http2FrameStream stream) {, +    public Http2FrameStream stream() {, +        Http2FrameStream stream = this.stream;, +        if (stream == null) {, +            return super.hashCode();, +        }, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2DataFrame.java, +import io.netty.util.internal.StringUtil;, +    private final int initialFlowControlledBytes;, +        if (content().readableBytes() + (long) padding > Integer.MAX_VALUE) {, +            throw new IllegalArgumentException("content + padding must be <= Integer.MAX_VALUE");, +        }, +        initialFlowControlledBytes = content().readableBytes() + padding;, +    public DefaultHttp2DataFrame stream(Http2FrameStream stream) {, +    public boolean isEndStream() {, +    public int initialFlowControlledBytes() {, +        return initialFlowControlledBytes;, +    }, +, +    @Override, +        return StringUtil.simpleClassName(this) + "(stream=" + stream() + ", content=" + content, +               + ", endStream=" + endStream + ", padding=" + padding + ')';, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2GoAwayFrame.java, +import io.netty.util.internal.StringUtil;, +        return StringUtil.simpleClassName(this) + "(errorCode=" + errorCode + ", content=" + content(), +               + ", extraStreamIds=" + extraStreamIds + ", lastStreamId=" + lastStreamId + ')';, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2HeadersFrame.java, +import io.netty.util.internal.StringUtil;, +    public DefaultHttp2HeadersFrame stream(Http2FrameStream stream) {, +    @Override, +    public boolean isEndStream() {, +        return StringUtil.simpleClassName(this) + "(stream=" + stream() + ", headers=" + headers, +               + ", endStream=" + endStream + ", padding=" + padding + ')';]