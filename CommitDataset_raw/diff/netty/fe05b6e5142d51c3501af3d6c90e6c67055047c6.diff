[+++ b/transport/src/main/java/io/netty/channel/ChannelPipeline.java, +     * @param name     the name of the handler to insert first. {@code null} to let the name auto-generated., +     *         if the specified handler is {@code null}, +     * @param name     the name of the handler to insert first. {@code null} to let the name auto-generated., +     *         if the specified handler is {@code null}, +     * @param name     the name of the handler to insert first. {@code null} to let the name auto-generated., +     *         if the specified handler is {@code null}, +     * @param name     the name of the handler to append. {@code null} to let the name auto-generated., +     *         if the specified handler is {@code null}, +     * @param name     the name of the handler to append. {@code null} to let the name auto-generated., +     *         if the specified handler is {@code null}, +     * @param name     the name of the handler to append. {@code null} to let the name auto-generated., +     *         if the specified handler is {@code null}, +     * @param name      the name of the handler to insert before. {@code null} to let the name auto-generated., +     *         if the specified baseName or handler is {@code null}, +     * @param name      the name of the handler to insert before. {@code null} to let the name auto-generated., +     *         if the specified baseName or handler is {@code null}, +     * @param name      the name of the handler to insert before. {@code null} to let the name auto-generated., +     *         if the specified baseName or handler is {@code null}, +     * @param name      the name of the handler to insert after. {@code null} to let the name auto-generated., +     *         if the specified baseName or handler is {@code null}, +     * @param name      the name of the handler to insert after. {@code null} to let the name auto-generated., +     *         if the specified baseName or handler is {@code null}, +     * @param name      the name of the handler to insert after. {@code null} to let the name auto-generated., +     *         if the specified baseName or handler is {@code null}, +     * @param  newName       the name under which the replacement should be added., +     *                       {@code null} to use the same name with the handler being replaced., +     *         if the specified old handler or new handler is {@code null}, +     * @param  newName       the name under which the replacement should be added., +     *                       {@code null} to use the same name with the handler being replaced., +     *         if the specified old handler or new handler is {@code null}, +     * @param  newName          the name under which the replacement should be added., +     *                          {@code null} to use the same name with the handler being replaced., +     *         if the specified old handler or new handler is {@code null}, +++ b/transport/src/main/java/io/netty/channel/ChannelPipeline.java, +     * @param name     the name of the handler to insert first. {@code null} to let the name auto-generated., +     *         if the specified handler is {@code null}, +     * @param name     the name of the handler to insert first. {@code null} to let the name auto-generated., +     *         if the specified handler is {@code null}, +     * @param name     the name of the handler to insert first. {@code null} to let the name auto-generated., +     *         if the specified handler is {@code null}, +     * @param name     the name of the handler to append. {@code null} to let the name auto-generated., +     *         if the specified handler is {@code null}, +     * @param name     the name of the handler to append. {@code null} to let the name auto-generated., +     *         if the specified handler is {@code null}, +     * @param name     the name of the handler to append. {@code null} to let the name auto-generated., +     *         if the specified handler is {@code null}, +     * @param name      the name of the handler to insert before. {@code null} to let the name auto-generated., +     *         if the specified baseName or handler is {@code null}, +     * @param name      the name of the handler to insert before. {@code null} to let the name auto-generated., +     *         if the specified baseName or handler is {@code null}, +     * @param name      the name of the handler to insert before. {@code null} to let the name auto-generated., +     *         if the specified baseName or handler is {@code null}, +     * @param name      the name of the handler to insert after. {@code null} to let the name auto-generated., +     *         if the specified baseName or handler is {@code null}, +     * @param name      the name of the handler to insert after. {@code null} to let the name auto-generated., +     *         if the specified baseName or handler is {@code null}, +     * @param name      the name of the handler to insert after. {@code null} to let the name auto-generated., +     *         if the specified baseName or handler is {@code null}, +     * @param  newName       the name under which the replacement should be added., +     *                       {@code null} to use the same name with the handler being replaced., +     *         if the specified old handler or new handler is {@code null}, +     * @param  newName       the name under which the replacement should be added., +     *                       {@code null} to use the same name with the handler being replaced., +     *         if the specified old handler or new handler is {@code null}, +     * @param  newName          the name under which the replacement should be added., +     *                          {@code null} to use the same name with the handler being replaced., +     *         if the specified old handler or new handler is {@code null}, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            name = filterName(name, handler);, +    public ChannelPipeline addFirst(ChannelHandlerInvoker invoker, String name, ChannelHandler handler) {, +            name = filterName(name, handler);, +            name = filterName(name, handler);, +    public ChannelPipeline addLast(ChannelHandlerInvoker invoker, String name, ChannelHandler handler) {, +            name = filterName(name, handler);, +            name = filterName(name, handler);, +            ChannelHandlerInvoker invoker, String baseName, String name, ChannelHandler handler) {, +            name = filterName(name, handler);, +            name = filterName(name, handler);, +            ChannelHandlerInvoker invoker, String baseName, String name, ChannelHandler handler) {, +, +            name = filterName(name, handler);, +    private void addAfter0(String name, AbstractChannelHandlerContext ctx, AbstractChannelHandlerContext newCtx) {, +            addFirst(invoker, null, h);, +            addLast(invoker, null, h);, +            final AbstractChannelHandlerContext ctx, String newName, ChannelHandler newHandler) {, +            if (newName == null) {, +                newName = ctx.name();, +            } else if (!ctx.name().equals(newName)) {, +                newName = filterName(newName, newHandler);, +                final String finalNewName = newName;, +                            replace0(ctx, finalNewName, newCtx);, +    private String filterName(String name, ChannelHandler handler) {, +        if (name == null) {, +            return generateName(handler);, +, +        if (!name2ctx.containsKey(name)) {, +            return name;, +        }, +]