[+++ b/codec/pom.xml, +    <dependency>, +      <groupId>org.jboss.marshalling</groupId>, +      <artifactId>jboss-marshalling</artifactId>, +      <optional>true</optional>, +    </dependency>, +    , +    <!-- Test dependencies for jboss marshalling encoder/decoder -->, +    <dependency>, +      <groupId>org.jboss.marshalling</groupId>, +      <artifactId>jboss-marshalling-serial</artifactId>, +      <scope>test</scope>, +    </dependency>, +    <dependency>, +      <groupId>org.jboss.marshalling</groupId>, +      <artifactId>jboss-marshalling-river</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/codec/pom.xml, +    <dependency>, +      <groupId>org.jboss.marshalling</groupId>, +      <artifactId>jboss-marshalling</artifactId>, +      <optional>true</optional>, +    </dependency>, +    , +    <!-- Test dependencies for jboss marshalling encoder/decoder -->, +    <dependency>, +      <groupId>org.jboss.marshalling</groupId>, +      <artifactId>jboss-marshalling-serial</artifactId>, +      <scope>test</scope>, +    </dependency>, +    <dependency>, +      <groupId>org.jboss.marshalling</groupId>, +      <artifactId>jboss-marshalling-river</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/codec/src/main/java/io/netty/handler/codec/marshalling/ChannelBufferByteInput.java, +/*, + * Copyright 2012 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.handler.codec.marshalling;, +, +import java.io.IOException;, +, +import org.jboss.marshalling.ByteInput;, +import io.netty.buffer.ChannelBuffer;, +, +/**, + * {@link ByteInput} implementation which reads its data from a {@link ChannelBuffer}, + * , + *, + */, +class ChannelBufferByteInput implements ByteInput {, +, +    private final ChannelBuffer buffer;, +, +    public ChannelBufferByteInput(ChannelBuffer buffer) {, +        this.buffer = buffer;, +    }, +    , +    public void close() throws IOException {, +        // nothing to do, +    }, +, +    public int available() throws IOException {, +        return buffer.readableBytes();, +    }, +, +    public int read() throws IOException {, +        if (buffer.readable()) {, +            return buffer.readByte() & 0xff;, +        }, +        return -1;, +    }, +, +    public int read(byte[] array) throws IOException {, +        return read(array, 0, array.length);, +    }, +, +    public int read(byte[] dst, int dstIndex, int length) throws IOException {, +        int available = available();, +        if (available == 0) {, +            return -1;, +        }, +, +        length = Math.min(available, length);, +        buffer.readBytes(dst, dstIndex, length);, +        return length;]