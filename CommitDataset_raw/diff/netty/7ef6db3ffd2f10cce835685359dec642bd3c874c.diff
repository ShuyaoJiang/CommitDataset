[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +import io.netty.util.internal.StringUtil;, +     * Returns {@code true} if a header with the {@code name} and {@code value} exists, {@code false} otherwise., +     * This also handles multiple values that are seperated with a {@code ,}., +     * <p>, +     * If {@code ignoreCase} is {@code true} then a case insensitive compare is done on the value., +     * @param name the name of the header to find, +     * @param value the value of the header to find, +     * @param ignoreCase {@code true} then a case insensitive compare is run to compare values., +     * otherwise a case sensitive compare is run to compare values., +     */, +    public boolean containsValue(CharSequence name, CharSequence value, boolean ignoreCase) {, +        List<String> values = getAll(name);, +        if (values.isEmpty()) {, +            return false;, +        }, +, +        for (String v: values) {, +            if (contains(v, value, ignoreCase)) {, +                return true;, +            }, +        }, +        return false;, +    }, +, +    private static boolean contains(String value, CharSequence expected, boolean ignoreCase) {, +        String[] parts = StringUtil.split(value, ',');, +        if (ignoreCase) {, +            for (String s: parts) {, +                if (AsciiString.contentEqualsIgnoreCase(expected, s.trim())) {, +                    return true;, +                }, +            }, +        } else {, +            for (String s: parts) {, +                if (AsciiString.contentEquals(expected, s.trim())) {, +                    return true;, +                }, +            }, +        }, +        return false;, +    }, +, +    /**, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +import io.netty.util.internal.StringUtil;, +     * Returns {@code true} if a header with the {@code name} and {@code value} exists, {@code false} otherwise., +     * This also handles multiple values that are seperated with a {@code ,}., +     * <p>, +     * If {@code ignoreCase} is {@code true} then a case insensitive compare is done on the value., +     * @param name the name of the header to find, +     * @param value the value of the header to find, +     * @param ignoreCase {@code true} then a case insensitive compare is run to compare values., +     * otherwise a case sensitive compare is run to compare values., +     */, +    public boolean containsValue(CharSequence name, CharSequence value, boolean ignoreCase) {, +        List<String> values = getAll(name);, +        if (values.isEmpty()) {, +            return false;, +        }, +, +        for (String v: values) {, +            if (contains(v, value, ignoreCase)) {, +                return true;, +            }, +        }, +        return false;, +    }, +, +    private static boolean contains(String value, CharSequence expected, boolean ignoreCase) {, +        String[] parts = StringUtil.split(value, ',');, +        if (ignoreCase) {, +            for (String s: parts) {, +                if (AsciiString.contentEqualsIgnoreCase(expected, s.trim())) {, +                    return true;, +                }, +            }, +        } else {, +            for (String s: parts) {, +                if (AsciiString.contentEquals(expected, s.trim())) {, +                    return true;, +                }, +            }, +        }, +        return false;, +    }, +, +    /**, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java, +        if (!headers.containsValue(HttpHeaderNames.CONNECTION, HttpHeaderValues.UPGRADE, true)) {, +                    + headers.get(HttpHeaderNames.CONNECTION));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +import io.netty.util.internal.StringUtil;, +     * Returns {@code true} if a header with the {@code name} and {@code value} exists, {@code false} otherwise., +     * This also handles multiple values that are seperated with a {@code ,}., +     * <p>, +     * If {@code ignoreCase} is {@code true} then a case insensitive compare is done on the value., +     * @param name the name of the header to find, +     * @param value the value of the header to find, +     * @param ignoreCase {@code true} then a case insensitive compare is run to compare values.]