[+++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +        directMemoryCacheAlignment = cacheAlignment;, +        directMemoryCacheAlignmentMask = cacheAlignment - 1;, +        q100 = new PoolChunkList<T>(this, null, 100, Integer.MAX_VALUE, chunkSize);, +        q075 = new PoolChunkList<T>(this, q100, 75, 100, chunkSize);, +        q050 = new PoolChunkList<T>(this, q075, 50, 100, chunkSize);, +        q025 = new PoolChunkList<T>(this, q050, 25, 75, chunkSize);, +        q000 = new PoolChunkList<T>(this, q025, 1, 50, chunkSize);, +        qInit = new PoolChunkList<T>(this, q000, Integer.MIN_VALUE, 25, chunkSize);, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +        directMemoryCacheAlignment = cacheAlignment;, +        directMemoryCacheAlignmentMask = cacheAlignment - 1;, +        q100 = new PoolChunkList<T>(this, null, 100, Integer.MAX_VALUE, chunkSize);, +        q075 = new PoolChunkList<T>(this, q100, 75, 100, chunkSize);, +        q050 = new PoolChunkList<T>(this, q075, 50, 100, chunkSize);, +        q025 = new PoolChunkList<T>(this, q050, 25, 75, chunkSize);, +        q000 = new PoolChunkList<T>(this, q025, 1, 50, chunkSize);, +        qInit = new PoolChunkList<T>(this, q000, Integer.MIN_VALUE, 25, chunkSize);, +++ b/buffer/src/main/java/io/netty/buffer/PoolChunk.java, +        final int freeBytes;, +        synchronized (arena) {, +            freeBytes = this.freeBytes;, +        }, +        return usage(freeBytes);, +    }, +, +    private int usage(int freeBytes) {, +        synchronized (arena) {, +    }, +        final int freeBytes;, +        synchronized (arena) {, +            freeBytes = this.freeBytes;, +        }, +, +                .append(usage(freeBytes)), +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +        directMemoryCacheAlignment = cacheAlignment;, +        directMemoryCacheAlignmentMask = cacheAlignment - 1;, +        q100 = new PoolChunkList<T>(this, null, 100, Integer.MAX_VALUE, chunkSize);, +        q075 = new PoolChunkList<T>(this, q100, 75, 100, chunkSize);, +        q050 = new PoolChunkList<T>(this, q075, 50, 100, chunkSize);, +        q025 = new PoolChunkList<T>(this, q050, 25, 75, chunkSize);, +        q000 = new PoolChunkList<T>(this, q025, 1, 50, chunkSize);, +        qInit = new PoolChunkList<T>(this, q000, Integer.MIN_VALUE, 25, chunkSize);, +++ b/buffer/src/main/java/io/netty/buffer/PoolChunk.java, +        final int freeBytes;, +        synchronized (arena) {, +            freeBytes = this.freeBytes;, +        }, +        return usage(freeBytes);, +    }, +, +    private int usage(int freeBytes) {, +        synchronized (arena) {, +    }, +        final int freeBytes;, +        synchronized (arena) {, +            freeBytes = this.freeBytes;, +        }, +, +                .append(usage(freeBytes)), +++ b/buffer/src/main/java/io/netty/buffer/PoolChunkList.java, +    private final PoolArena<T> arena;, +    PoolChunkList(PoolArena<T> arena, PoolChunkList<T> nextList, int minUsage, int maxUsage, int chunkSize) {, +        this.arena = arena;, +        synchronized (arena) {, +    }, +        StringBuilder buf = new StringBuilder();, +        synchronized (arena) {, +        }, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +        directMemoryCacheAlignment = cacheAlignment;, +        directMemoryCacheAlignmentMask = cacheAlignment - 1;, +        q100 = new PoolChunkList<T>(this, null, 100, Integer.MAX_VALUE, chunkSize);, +        q075 = new PoolChunkList<T>(this, q100, 75, 100, chunkSize);, +        q050 = new PoolChunkList<T>(this, q075, 50, 100, chunkSize);, +        q025 = new PoolChunkList<T>(this, q050, 25, 75, chunkSize);, +        q000 = new PoolChunkList<T>(this, q025, 1, 50, chunkSize);, +        qInit = new PoolChunkList<T>(this, q000, Integer.MIN_VALUE, 25, chunkSize);, +++ b/buffer/src/main/java/io/netty/buffer/PoolChunk.java, +        final int freeBytes;, +        synchronized (arena) {, +            freeBytes = this.freeBytes;, +        }, +        return usage(freeBytes);, +    }, +, +    private int usage(int freeBytes) {, +        synchronized (arena) {, +    }, +        final int freeBytes;, +        synchronized (arena) {, +            freeBytes = this.freeBytes;, +        }, +, +                .append(usage(freeBytes)), +++ b/buffer/src/main/java/io/netty/buffer/PoolChunkList.java, +    private final PoolArena<T> arena;, +    PoolChunkList(PoolArena<T> arena, PoolChunkList<T> nextList, int minUsage, int maxUsage, int chunkSize) {, +        this.arena = arena;]