[+++ b/NOTICE.txt, +This product optionally depends on 'lzma-java', a LZMA Java compression, +and decompression library, which can be obtained at:, +, +  * LICENSE:, +    * license/LICENSE.lzma-java.txt (Apache License 2.0), +  * HOMEPAGE:, +    * https://github.com/jponge/lzma-java, +, +++ b/NOTICE.txt, +This product optionally depends on 'lzma-java', a LZMA Java compression, +and decompression library, which can be obtained at:, +, +  * LICENSE:, +    * license/LICENSE.lzma-java.txt (Apache License 2.0), +  * HOMEPAGE:, +    * https://github.com/jponge/lzma-java, +, +++ b/codec/pom.xml, +    <dependency>, +      <groupId>com.github.jponge</groupId>, +      <artifactId>lzma-java</artifactId>, +      <optional>true</optional>, +    </dependency>, +++ b/NOTICE.txt, +This product optionally depends on 'lzma-java', a LZMA Java compression, +and decompression library, which can be obtained at:, +, +  * LICENSE:, +    * license/LICENSE.lzma-java.txt (Apache License 2.0), +  * HOMEPAGE:, +    * https://github.com/jponge/lzma-java, +, +++ b/codec/pom.xml, +    <dependency>, +      <groupId>com.github.jponge</groupId>, +      <artifactId>lzma-java</artifactId>, +      <optional>true</optional>, +    </dependency>, +++ b/codec/src/main/java/io/netty/handler/codec/compression/LzmaFrameEncoder.java, +/*, + * Copyright 2014 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.handler.codec.compression;, +, +import io.netty.buffer.ByteBuf;, +import io.netty.buffer.ByteBufInputStream;, +import io.netty.buffer.ByteBufOutputStream;, +import io.netty.channel.ChannelHandlerContext;, +import io.netty.handler.codec.MessageToByteEncoder;, +import io.netty.util.internal.logging.InternalLogger;, +import io.netty.util.internal.logging.InternalLoggerFactory;, +import lzma.sdk.lzma.Base;, +import lzma.sdk.lzma.Encoder;, +, +import java.io.InputStream;, +, +import static lzma.sdk.lzma.Encoder.*;, +, +/**, + * Compresses a {@link ByteBuf} using the LZMA algorithm., + *, + * See <a href="http://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Markov_chain_algorithm">LZMA</a>, + * and <a href="http://svn.python.org/projects/external/xz-5.0.5/doc/lzma-file-format.txt">LZMA format</a>, + * or documents in <a href="http://www.7-zip.org/sdk.html">LZMA SDK</a> archive., + */, +public class LzmaFrameEncoder extends MessageToByteEncoder<ByteBuf> {, +, +    private static final InternalLogger logger = InternalLoggerFactory.getInstance(LzmaFrameEncoder.class);, +, +    private static final int MEDIUM_DICTIONARY_SIZE = 1 << 16;, +, +    private static final int MIN_FAST_BYTES = 5;, +    private static final int MEDIUM_FAST_BYTES = 0x20;, +    private static final int MAX_FAST_BYTES = Base.kMatchMaxLen;, +, +    private static final int DEFAULT_MATCH_FINDER = EMatchFinderTypeBT4;, +, +    private static final int DEFAULT_LC = 3;, +    private static final int DEFAULT_LP = 0;, +    private static final int DEFAULT_PB = 2;, +, +    /**, +     * Underlying LZMA encoder in use., +     */, +    private final Encoder encoder;, +, +    /**]