[+++ b/buffer/src/main/java/io/netty/buffer/AbstractReferenceCountedByteBuf.java, +            throw new IllegalReferenceCountException(oldRef, -decrement);, +++ b/buffer/src/main/java/io/netty/buffer/AbstractReferenceCountedByteBuf.java, +            throw new IllegalReferenceCountException(oldRef, -decrement);, +++ b/buffer/src/test/java/io/netty/buffer/AbstractReferenceCountedByteBufTest.java, +import static org.junit.Assert.fail;, +    @Test, +    public void testReleaseErrorMessage() {, +        AbstractReferenceCountedByteBuf referenceCounted = newReferenceCounted();, +        assertTrue(referenceCounted.release());, +        try {, +            referenceCounted.release(1);, +            fail("IllegalReferenceCountException didn't occur");, +        } catch (IllegalReferenceCountException e) {, +            assertEquals("refCnt: 0, decrement: 1", e.getMessage());, +        }, +    }, +, +++ b/buffer/src/main/java/io/netty/buffer/AbstractReferenceCountedByteBuf.java, +            throw new IllegalReferenceCountException(oldRef, -decrement);, +++ b/buffer/src/test/java/io/netty/buffer/AbstractReferenceCountedByteBufTest.java, +import static org.junit.Assert.fail;, +    @Test, +    public void testReleaseErrorMessage() {, +        AbstractReferenceCountedByteBuf referenceCounted = newReferenceCounted();, +        assertTrue(referenceCounted.release());, +        try {, +            referenceCounted.release(1);, +            fail("IllegalReferenceCountException didn't occur");, +        } catch (IllegalReferenceCountException e) {, +            assertEquals("refCnt: 0, decrement: 1", e.getMessage());, +        }, +    }, +, +++ b/common/src/main/java/io/netty/util/AbstractReferenceCounted.java, +            throw new IllegalReferenceCountException(oldRef, -decrement);, +++ b/buffer/src/main/java/io/netty/buffer/AbstractReferenceCountedByteBuf.java, +            throw new IllegalReferenceCountException(oldRef, -decrement);, +++ b/buffer/src/test/java/io/netty/buffer/AbstractReferenceCountedByteBufTest.java, +import static org.junit.Assert.fail;, +    @Test, +    public void testReleaseErrorMessage() {, +        AbstractReferenceCountedByteBuf referenceCounted = newReferenceCounted();, +        assertTrue(referenceCounted.release());, +        try {, +            referenceCounted.release(1);, +            fail("IllegalReferenceCountException didn't occur");, +        } catch (IllegalReferenceCountException e) {, +            assertEquals("refCnt: 0, decrement: 1", e.getMessage());, +        }, +    }, +, +++ b/common/src/main/java/io/netty/util/AbstractReferenceCounted.java, +            throw new IllegalReferenceCountException(oldRef, -decrement);, +++ b/common/src/test/java/io/netty/util/AbstractReferenceCountedTest.java, +import static org.junit.Assert.fail;, +    @Test, +    public void testReleaseErrorMessage() {, +        AbstractReferenceCounted referenceCounted = newReferenceCounted();, +        assertTrue(referenceCounted.release());, +        try {, +            referenceCounted.release(1);, +            fail("IllegalReferenceCountException didn't occur");, +        } catch (IllegalReferenceCountException e) {, +            assertEquals("refCnt: 0, decrement: 1", e.getMessage());, +        }, +    }, +]