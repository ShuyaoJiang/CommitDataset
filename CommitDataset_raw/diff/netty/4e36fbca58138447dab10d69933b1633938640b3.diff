[+++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +    public boolean isWritable() {, +        return pipeline.isWritable();, +    }, +, +    @Override, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +    public boolean isWritable() {, +        return pipeline.isWritable();, +    }, +, +    @Override, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +     * Return {@code true} if the outbound buffer of the {@link Channel} is writable., +     */, +    boolean isWritable();, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +    public boolean isWritable() {, +        return pipeline.isWritable();, +    }, +, +    @Override, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +     * Return {@code true} if the outbound buffer of the {@link Channel} is writable., +     */, +    boolean isWritable();, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerContext.java, +     * Return {@link true} if the {@link ChannelHandlerContext} is writable, which means if the outbound buffer of, +     * the next in the {@link ChannelPipeline} is writable., +     */, +    boolean isWritable();, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +    public boolean isWritable() {, +        return pipeline.isWritable();, +    }, +, +    @Override, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +     * Return {@code true} if the outbound buffer of the {@link Channel} is writable., +     */, +    boolean isWritable();, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerContext.java, +     * Return {@link true} if the {@link ChannelHandlerContext} is writable, which means if the outbound buffer of, +     * the next in the {@link ChannelPipeline} is writable., +     */, +    boolean isWritable();, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelPipeline.java, +    /**, +     * Return {@code true} if the outbound buffer is writable., +     */, +    boolean isWritable();, +, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +    public boolean isWritable() {, +        return pipeline.isWritable();, +    }, +, +    @Override, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +     * Return {@code true} if the outbound buffer of the {@link Channel} is writable., +     */, +    boolean isWritable();, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerContext.java, +     * Return {@link true} if the {@link ChannelHandlerContext} is writable, which means if the outbound buffer of, +     * the next in the {@link ChannelPipeline} is writable., +     */, +    boolean isWritable();, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/ChannelPipeline.java, +    /**, +     * Return {@code true} if the outbound buffer is writable., +     */, +    boolean isWritable();, +, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +    @Override, +    public boolean isWritable() {, +        DefaultChannelHandlerContext ctx = prev;, +        for (;;) {, +            if (ctx.hasOutboundByteBuffer()) {, +                return ctx.isWritable();, +            }, +, +            if (ctx.hasOutboundMessageBuffer()) {, +                return ctx.isWritable();, +            }, +            ctx = ctx.prev;]