[+++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequest.java, +                if (!NetUtil.isValidIpV6Address(host)) {, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequest.java, +                if (!NetUtil.isValidIpV6Address(host)) {, +++ b/common/src/main/java/io/netty/util/NetUtil.java, + * <p/>, +     * <p/>, +        if (isValidIpV6Address(ipAddressString)) {, +        return null;, +    }, +    /**, +     * Converts a 4 character hex word into a 2 byte word equivalent, +     */, +    public static boolean isValidIpV6Address(String ipAddress) {, +            // There is a test case with 7 colons and valid ipv4 this should resolve it, +            if (numberOfPeriods != 3 || !(isValidIp4Word(word.toString()) && numberOfColons < 7)) {, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequest.java, +                if (!NetUtil.isValidIpV6Address(host)) {, +++ b/common/src/main/java/io/netty/util/NetUtil.java, + * <p/>, +     * <p/>, +        if (isValidIpV6Address(ipAddressString)) {, +        return null;, +    }, +    /**, +     * Converts a 4 character hex word into a 2 byte word equivalent, +     */, +    public static boolean isValidIpV6Address(String ipAddress) {, +            // There is a test case with 7 colons and valid ipv4 this should resolve it, +            if (numberOfPeriods != 3 || !(isValidIp4Word(word.toString()) && numberOfColons < 7)) {, +++ b/common/src/test/java/io/netty/util/NetUtilTest.java, +import org.junit.Before;, +import java.util.Arrays;, +import java.util.HashMap;, +import java.util.Map;, +, +    private final static Map<String, byte[]> validIpV4Hosts = new HashMap<String, byte[]>() {, +        {, +            put("192.168.1.0", new byte[]{, +                    (byte) 0xc0, (byte) 0xa8, 0x01, 0x00}, +            );, +            put("10.255.255.254", new byte[]{, +                    0x0a, (byte) 0xff, (byte) 0xff, (byte) 0xfe, +            });, +            put("172.18.5.4", new byte[]{, +                    (byte) 0xac, 0x12, 0x05, 0x04, +            });, +            put("0.0.0.0", new byte[]{, +                    0x00, 0x00, 0x00, 0x00, +            });, +            put("127.0.0.1", new byte[]{, +                    0x7f, 0x00, 0x00, 0x01, +            });, +, +        }, +    };, +    private final static Map<String, byte[]> invalidIpV4Hosts = new HashMap<String, byte[]>() {, +        {, +            put("1.256.3.4", null);, +            put("256.0.0.1", null);, +            put("1.1.1.1.1", null);, +        }, +    };, +    private final static Map<String, byte[]> validIpV6Hosts = new HashMap<String, byte[]>() {, +        {, +            put("::ffff:5.6.7.8", new byte[]{, +                    0x00, 0x00, 0x00, 0x00,, +                    0x00, 0x00, 0x00, 0x00,, +                    0x00, 0x00, (byte) 0xff, (byte) 0xff,, +                    0x05, 0x06, 0x07, 0x08}, +            );, +            put("fdf8:f53b:82e4::53", new byte[]{, +                    (byte) 0xfd, (byte) 0xf8, (byte) 0xf5, 0x3b,, +                    (byte) 0x82, (byte) 0xe4, 0x00, 0x00,, +                    0x00, 0x00, 0x00, 0x00,, +                    0x00, 0x00, 0x00, 0x53}, +            );, +            put("fe80::200:5aee:feaa:20a2", new byte[]{, +                    (byte) 0xfe, (byte) 0x80, 0x00, 0x00,, +                    0x00, 0x00, 0x00, 0x00,, +                    0x02, 0x00, 0x5a, (byte) 0xee,, +                    (byte) 0xfe, (byte) 0xaa, 0x20, (byte) 0xa2}, +            );, +            put("2001::1", new byte[]{, +                    0x20, 0x01, 0x00, 0x00,, +                    0x00, 0x00, 0x00, 0x00,, +                    0x00, 0x00, 0x00, 0x00,, +                    0x00, 0x00, 0x00, 0x01}, +            );, +            put("2001:0000:4136:e378:8000:63bf:3fff:fdd2", new byte[]{, +                    0x20, 0x01, 0x00, 0x00,, +                    0x41, 0x36, (byte) 0xe3, 0x78,, +                    (byte) 0x80, 0x00, 0x63, (byte) 0xbf,, +                    0x3f, (byte) 0xff, (byte) 0xfd, (byte) 0xd2}, +            );, +            put("2001:0002:6c::430", new byte[]{, +                    0x20, 0x01, 0x00, 0x02,, +                    0x00, 0x6c, 0x00, 0x00,, +                    0x00, 0x00, 0x00, 0x00,, +                    0x00, 0x00, 0x04, 0x30}]