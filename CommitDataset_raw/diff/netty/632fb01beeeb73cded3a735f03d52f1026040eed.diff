[+++ b/src/main/java/org/jboss/netty/channel/local/LocalAddress.java, +import java.util.concurrent.ConcurrentMap;, +import java.util.concurrent.atomic.AtomicLong;, +, +import org.jboss.netty.util.ConcurrentWeakHashMap;, +    private static final ConcurrentMap<String, LocalAddress> addresses =, +        new ConcurrentWeakHashMap<String, LocalAddress>();, +    private static final AtomicLong nextEphemeralPort = new AtomicLong();, +, +    public static LocalAddress getInstance(String id) {, +        if (id == null) {, +            throw new NullPointerException("id");, +        }, +        LocalAddress a = addresses.get(id);, +        if (a == null) {, +            a = new LocalAddress(id);, +            LocalAddress oldA = addresses.putIfAbsent(id, a);, +            if (oldA != null) {, +                a = oldA;, +            }, +        }, +, +        return a;, +    }, +, +    public static LocalAddress newEphemeralInstance() {, +        return getInstance("ephemeral-" + nextEphemeralPort.incrementAndGet());, +    }, +, +    private final String id;, +    private final boolean ephemeral;, +, +    private LocalAddress(String id) {, +, +        ephemeral = id.startsWith("ephemeral-");, +    public boolean isEphemeral() {, +        return ephemeral;, +    }, +, +++ b/src/main/java/org/jboss/netty/channel/local/LocalAddress.java, +import java.util.concurrent.ConcurrentMap;, +import java.util.concurrent.atomic.AtomicLong;, +, +import org.jboss.netty.util.ConcurrentWeakHashMap;, +    private static final ConcurrentMap<String, LocalAddress> addresses =, +        new ConcurrentWeakHashMap<String, LocalAddress>();, +    private static final AtomicLong nextEphemeralPort = new AtomicLong();, +, +    public static LocalAddress getInstance(String id) {, +        if (id == null) {, +            throw new NullPointerException("id");, +        }, +        LocalAddress a = addresses.get(id);, +        if (a == null) {, +            a = new LocalAddress(id);, +            LocalAddress oldA = addresses.putIfAbsent(id, a);, +            if (oldA != null) {, +                a = oldA;, +            }, +        }, +, +        return a;, +    }, +, +    public static LocalAddress newEphemeralInstance() {, +        return getInstance("ephemeral-" + nextEphemeralPort.incrementAndGet());, +    }, +, +    private final String id;, +    private final boolean ephemeral;, +, +    private LocalAddress(String id) {, +, +        ephemeral = id.startsWith("ephemeral-");, +    public boolean isEphemeral() {, +        return ephemeral;, +    }, +, +++ b/src/main/java/org/jboss/netty/example/local/LocalExample.java, +        LocalAddress socketAddress = LocalAddress.getInstance("1");, +++ b/src/main/java/org/jboss/netty/channel/local/LocalAddress.java, +import java.util.concurrent.ConcurrentMap;, +import java.util.concurrent.atomic.AtomicLong;, +, +import org.jboss.netty.util.ConcurrentWeakHashMap;, +    private static final ConcurrentMap<String, LocalAddress> addresses =, +        new ConcurrentWeakHashMap<String, LocalAddress>();, +    private static final AtomicLong nextEphemeralPort = new AtomicLong();, +, +    public static LocalAddress getInstance(String id) {, +        if (id == null) {, +            throw new NullPointerException("id");, +        }, +        LocalAddress a = addresses.get(id);, +        if (a == null) {, +            a = new LocalAddress(id);, +            LocalAddress oldA = addresses.putIfAbsent(id, a);, +            if (oldA != null) {, +                a = oldA;, +            }]