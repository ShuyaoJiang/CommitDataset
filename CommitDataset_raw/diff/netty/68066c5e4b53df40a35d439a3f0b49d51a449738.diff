[+++ b/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java, +            flush(ctx, false);, +            flush(ctx, false);, +            discard(ctx, false);, +                flush(ctx, true);, +                    discard(ctx, true);, +    private void discard(ChannelHandlerContext ctx, boolean fireNow) {, +            if (fireNow) {, +                fireExceptionCaught(ctx.getChannel(), cause);, +            } else {, +                fireExceptionCaughtLater(ctx.getChannel(), cause);, +            }, +    private synchronized void flush(ChannelHandlerContext ctx, boolean fireNow) throws Exception {, +            discard(ctx, fireNow);, +                        if (fireNow) {  , +                        } else {, +                            fireExceptionCaughtLater(ctx.getChannel(), t);, +                        }, +                discard(ctx, fireNow);, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java, +            flush(ctx, false);, +            flush(ctx, false);, +            discard(ctx, false);, +                flush(ctx, true);, +                    discard(ctx, true);, +    private void discard(ChannelHandlerContext ctx, boolean fireNow) {, +            if (fireNow) {, +                fireExceptionCaught(ctx.getChannel(), cause);, +            } else {, +                fireExceptionCaughtLater(ctx.getChannel(), cause);, +            }, +    private synchronized void flush(ChannelHandlerContext ctx, boolean fireNow) throws Exception {, +            discard(ctx, fireNow);, +                        if (fireNow) {  , +                        } else {, +                            fireExceptionCaughtLater(ctx.getChannel(), t);, +                        }, +                discard(ctx, fireNow);, +++ b/handler/src/main/java/io/netty/handler/timeout/WriteTimeoutHandler.java, +        Channels.fireExceptionCaughtLater(ctx.getChannel(), EXCEPTION);]