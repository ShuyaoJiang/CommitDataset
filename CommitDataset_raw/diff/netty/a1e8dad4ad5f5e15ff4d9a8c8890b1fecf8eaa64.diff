[+++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/SocketShutdownOutputBySelfTest.java, +            ch.shutdownOutput().sync();, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/SocketShutdownOutputBySelfTest.java, +            ch.shutdownOutput().sync();, +++ b/transport/src/main/java/io/netty/channel/socket/aio/AioSocketChannel.java, +        final ChannelFuture future = newFuture();, +            shutdownOutput(future);, +        } else {, +            loop.execute(new Runnable() {, +                @Override, +                public void run() {, +                    shutdownOutput(future);, +                }, +            });, +        }, +        return future;, +    }, +, +    private void shutdownOutput(ChannelFuture future) {, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/SocketShutdownOutputBySelfTest.java, +            ch.shutdownOutput().sync();, +++ b/transport/src/main/java/io/netty/channel/socket/aio/AioSocketChannel.java, +        final ChannelFuture future = newFuture();, +            shutdownOutput(future);, +        } else {, +            loop.execute(new Runnable() {, +                @Override, +                public void run() {, +                    shutdownOutput(future);, +                }, +            });, +        }, +        return future;, +    }, +, +    private void shutdownOutput(ChannelFuture future) {, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannel.java, +        final ChannelFuture future = newFuture();, +            shutdownOutput(future);, +        } else {, +            loop.execute(new Runnable() {, +                @Override, +                public void run() {, +                    shutdownOutput(future);, +                }, +            });, +        }, +        return future;, +    }, +, +    private void shutdownOutput(ChannelFuture future) {, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/socket/SocketShutdownOutputBySelfTest.java, +            ch.shutdownOutput().sync();, +++ b/transport/src/main/java/io/netty/channel/socket/aio/AioSocketChannel.java, +        final ChannelFuture future = newFuture();, +            shutdownOutput(future);, +        } else {, +            loop.execute(new Runnable() {, +                @Override, +                public void run() {, +                    shutdownOutput(future);, +                }, +            });, +        }, +        return future;, +    }, +, +    private void shutdownOutput(ChannelFuture future) {, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannel.java, +        final ChannelFuture future = newFuture();, +            shutdownOutput(future);, +        } else {, +            loop.execute(new Runnable() {, +                @Override, +                public void run() {, +                    shutdownOutput(future);, +                }, +            });, +        }, +        return future;, +    }, +, +    private void shutdownOutput(ChannelFuture future) {, +++ b/transport/src/main/java/io/netty/channel/socket/oio/OioSocketChannel.java, +        final ChannelFuture future = newFuture();, +            shutdownOutput(future);, +        } else {, +            loop.execute(new Runnable() {, +                @Override, +                public void run() {, +                    shutdownOutput(future);, +                }, +            });, +        }, +        return future;, +    }, +, +    private void shutdownOutput(ChannelFuture future) {]