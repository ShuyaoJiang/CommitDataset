[+++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, +                engine.initHandshakeException(cause);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, +                engine.initHandshakeException(cause);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java, +                engine.initHandshakeException(cause);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, +                engine.initHandshakeException(cause);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java, +                engine.initHandshakeException(cause);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +    private Throwable handshakeException;, +        Throwable exception = handshakeException;, +        if (exception instanceof SSLHandshakeException) {, +            throw (SSLHandshakeException) exception;, +        }, +        SSLHandshakeException e = new SSLHandshakeException("General OpenSslEngine problem");, +        e.initCause(exception);, +        throw e;, +    }, +, +    /**, +     * Should be called if the handshake will be failed due a callback that throws an exception., +     * This cause will then be used to give more details as part of the {@link SSLHandshakeException}., +     */, +    final void initHandshakeException(Throwable cause) {, +        assert handshakeException == null;, +        handshakeException = cause;, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, +                engine.initHandshakeException(cause);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java, +                engine.initHandshakeException(cause);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +    private Throwable handshakeException;, +        Throwable exception = handshakeException;, +        if (exception instanceof SSLHandshakeException) {, +            throw (SSLHandshakeException) exception;, +        }, +        SSLHandshakeException e = new SSLHandshakeException("General OpenSslEngine problem");, +        e.initCause(exception);, +        throw e;, +    }, +, +    /**, +     * Should be called if the handshake will be failed due a callback that throws an exception., +     * This cause will then be used to give more details as part of the {@link SSLHandshakeException}., +     */, +    final void initHandshakeException(Throwable cause) {, +        assert handshakeException == null;, +        handshakeException = cause;, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslServerContext.java, +                engine.initHandshakeException(cause);]