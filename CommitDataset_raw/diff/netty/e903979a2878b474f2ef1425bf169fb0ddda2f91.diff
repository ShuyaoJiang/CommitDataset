[+++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c, +#include <limits.h>, +, +JNIEXPORT jlong JNICALL Java_io_netty_channel_epoll_Native_ssizeMax(JNIEnv* env, jclass clazz) {, +    return SSIZE_MAX;, +}, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c, +#include <limits.h>, +, +JNIEXPORT jlong JNICALL Java_io_netty_channel_epoll_Native_ssizeMax(JNIEnv* env, jclass clazz) {, +    return SSIZE_MAX;, +}, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.h, +jlong Java_io_netty_channel_epoll_Native_ssizeMax(JNIEnv* env, jclass clazz);, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c, +#include <limits.h>, +, +JNIEXPORT jlong JNICALL Java_io_netty_channel_epoll_Native_ssizeMax(JNIEnv* env, jclass clazz) {, +    return SSIZE_MAX;, +}, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.h, +jlong Java_io_netty_channel_epoll_Native_ssizeMax(JNIEnv* env, jclass clazz);, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/IovArray.java, +        return add(addr, offset, len);, +    private boolean add(long addr, int offset, int len) {, +            return true;, +        if (Native.SSIZE_MAX - len < size) {, +            // If the size + len will overflow an SSIZE_MAX we stop populate the IovArray. This is done as linux, +            //  not allow to write more bytes then SSIZE_MAX with one writev(...) call and so will, +            // return 'EINVAL', which will raise an IOException., +            //, +            // See also:, +            // - http://linux.die.net/man/2/writev, +            return false;, +        }, +        size += len;, +, +        return true;, +            if (!add(addr, offset, len)) {, +                return false;, +            }, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c, +#include <limits.h>, +, +JNIEXPORT jlong JNICALL Java_io_netty_channel_epoll_Native_ssizeMax(JNIEnv* env, jclass clazz) {, +    return SSIZE_MAX;, +}, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.h, +jlong Java_io_netty_channel_epoll_Native_ssizeMax(JNIEnv* env, jclass clazz);, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/IovArray.java, +        return add(addr, offset, len);, +    private boolean add(long addr, int offset, int len) {, +            return true;, +        if (Native.SSIZE_MAX - len < size) {, +            // If the size + len will overflow an SSIZE_MAX we stop populate the IovArray. This is done as linux, +            //  not allow to write more bytes then SSIZE_MAX with one writev(...) call and so will, +            // return 'EINVAL', which will raise an IOException., +            //, +            // See also:, +            // - http://linux.die.net/man/2/writev, +            return false;, +        }, +        size += len;, +, +        return true;, +            if (!add(addr, offset, len)) {, +                return false;, +            }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/Native.java, +    public static final long SSIZE_MAX = ssizeMax();, +    private static native long ssizeMax();, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c, +#include <limits.h>, +, +JNIEXPORT jlong JNICALL Java_io_netty_channel_epoll_Native_ssizeMax(JNIEnv* env, jclass clazz) {, +    return SSIZE_MAX;, +}, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.h, +jlong Java_io_netty_channel_epoll_Native_ssizeMax(JNIEnv* env, jclass clazz);, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/IovArray.java, +        return add(addr, offset, len);, +    private boolean add(long addr, int offset, int len) {, +            return true;, +        if (Native.SSIZE_MAX - len < size) {, +            // If the size + len will overflow an SSIZE_MAX we stop populate the IovArray. This is done as linux, +            //  not allow to write more bytes then SSIZE_MAX with one writev(...) call and so will, +            // return 'EINVAL', which will raise an IOException., +            //, +            // See also:, +            // - http://linux.die.net/man/2/writev, +            return false;, +        }, +        size += len;, +, +        return true;, +            if (!add(addr, offset, len)) {, +                return false;, +            }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/Native.java, +    public static final long SSIZE_MAX = ssizeMax();]