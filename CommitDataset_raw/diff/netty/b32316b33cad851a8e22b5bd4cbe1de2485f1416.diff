[+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +        protected boolean readPending;, +        public void beginRead() {, +            // Channel.read() or ChannelHandlerContext.read() was called, +            readPending = true;, +            super.beginRead();, +        }, +, +        @Override, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +        protected boolean readPending;, +        public void beginRead() {, +            // Channel.read() or ChannelHandlerContext.read() was called, +            readPending = true;, +            super.beginRead();, +        }, +, +        @Override, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java, +, +                try {, +                            readPending = false;, +            } finally {, +                // Check if there is a readPending which was not processed yet., +                // This could be for two reasons:, +                // * The user called Channel.read() or ChannelHandlerContext.read() in channelRead(...) method, +                // * The user called Channel.read() or ChannelHandlerContext.read() in channelReadComplete(...) method, +                //, +                // See https://github.com/netty/netty/issues/2254, +                if (config.isAutoRead() && !readPending) {, +                    clearEpollIn();, +                }, +            }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +        protected boolean readPending;, +        public void beginRead() {, +            // Channel.read() or ChannelHandlerContext.read() was called, +            readPending = true;, +            super.beginRead();, +        }, +, +        @Override, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java, +, +                try {, +                            readPending = false;, +            } finally {, +                // Check if there is a readPending which was not processed yet., +                // This could be for two reasons:, +                // * The user called Channel.read() or ChannelHandlerContext.read() in channelRead(...) method, +                // * The user called Channel.read() or ChannelHandlerContext.read() in channelReadComplete(...) method, +                //, +                // See https://github.com/netty/netty/issues/2254, +                if (config.isAutoRead() && !readPending) {, +                    clearEpollIn();, +                }, +            }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannel.java, +                    readPending = false;, +                    readPending = false;, +            } finally {, +                // Check if there is a readPending which was not processed yet., +                // This could be for two reasons:, +                // * The user called Channel.read() or ChannelHandlerContext.read() in channelRead(...) method, +                // * The user called Channel.read() or ChannelHandlerContext.read() in channelReadComplete(...) method, +                //, +                // See https://github.com/netty/netty/issues/2254, +                if (config.isAutoRead() && !readPending) {, +                    clearEpollIn();, +                }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +        protected boolean readPending;, +        public void beginRead() {, +            // Channel.read() or ChannelHandlerContext.read() was called, +            readPending = true;, +            super.beginRead();, +        }, +, +        @Override, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java, +, +                try {, +                            readPending = false;, +            } finally {, +                // Check if there is a readPending which was not processed yet., +                // This could be for two reasons:, +                // * The user called Channel.read() or ChannelHandlerContext.read() in channelRead(...) method, +                // * The user called Channel.read() or ChannelHandlerContext.read() in channelReadComplete(...) method, +                //, +                // See https://github.com/netty/netty/issues/2254, +                if (config.isAutoRead() && !readPending) {, +                    clearEpollIn();, +                }, +            }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannel.java, +                    readPending = false;, +                    readPending = false;, +            } finally {, +                // Check if there is a readPending which was not processed yet., +                // This could be for two reasons:]