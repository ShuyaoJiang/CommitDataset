[+++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageCodec.java, +    @Override, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        decoder.channelReadComplete(ctx);, +    }, +, +    @Override, +    public void channelInactive(ChannelHandlerContext ctx) throws Exception {, +        decoder.channelInactive(ctx);, +    }, +, +    @Override, +    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {, +        try {, +            decoder.handlerAdded(ctx);, +        } finally {, +            encoder.handlerAdded(ctx);, +        }, +    }, +, +    @Override, +    public void handlerRemoved(ChannelHandlerContext ctx) throws Exception {, +        try {, +            decoder.handlerRemoved(ctx);, +        } finally {, +            encoder.handlerRemoved(ctx);, +        }, +    }, +, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageCodec.java, +    @Override, +    public void channelReadComplete(ChannelHandlerContext ctx) throws Exception {, +        decoder.channelReadComplete(ctx);, +    }, +, +    @Override, +    public void channelInactive(ChannelHandlerContext ctx) throws Exception {, +        decoder.channelInactive(ctx);, +    }, +, +    @Override, +    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {, +        try {, +            decoder.handlerAdded(ctx);, +        } finally {, +            encoder.handlerAdded(ctx);, +        }, +    }, +, +    @Override, +    public void handlerRemoved(ChannelHandlerContext ctx) throws Exception {, +        try {, +            decoder.handlerRemoved(ctx);, +        } finally {, +            encoder.handlerRemoved(ctx);, +        }, +    }, +, +++ b/codec/src/test/java/io/netty/handler/codec/ByteToMessageCodecTest.java, +import io.netty.buffer.Unpooled;, +import io.netty.channel.embedded.EmbeddedChannel;, +import static org.junit.Assert.*;, +, +    @Test, +    public void testForwardPendingData() {, +        ByteToMessageCodec<Integer> codec = new ByteToMessageCodec<Integer>() {, +            @Override, +            protected void encode(ChannelHandlerContext ctx, Integer msg, ByteBuf out) throws Exception {, +                out.writeInt(msg);, +            }, +, +            @Override, +            protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +                if (in.readableBytes() >= 4) {, +                    out.add(in.readInt());, +                }, +            }, +        };, +, +        ByteBuf buffer = Unpooled.buffer();, +        buffer.writeInt(1);, +        buffer.writeByte('0');, +, +        EmbeddedChannel ch = new EmbeddedChannel(codec);, +        assertTrue(ch.writeInbound(buffer));, +        ch.pipeline().remove(codec);, +        assertTrue(ch.finish());, +        assertEquals(1, ch.readInbound());, +, +        ByteBuf buf = (ByteBuf) ch.readInbound();, +        assertEquals(Unpooled.wrappedBuffer(new byte[]{'0'}), buf);, +        buf.release();, +        assertNull(ch.readInbound());, +        assertNull(ch.readOutbound());, +    }, +]