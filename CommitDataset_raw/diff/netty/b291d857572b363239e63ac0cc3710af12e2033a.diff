[+++ b/common/src/main/java/io/netty/util/HashedWheelTimer.java, +    final AtomicInteger workerState = new AtomicInteger(); // 0 - init, 1 - started, 2 - shut down, +    public void start() {, +        switch (workerState.get()) {, +        case 0:, +            if (workerState.compareAndSet(0, 1)) {, +            break;, +        case 1:, +            break;, +        case 2:, +            throw new IllegalStateException("cannot be started once stopped");, +        default:, +            throw new Error();, +        }, +    public Set<Timeout> stop() {, +        if (!workerState.compareAndSet(1, 2)) {, +            // workerState can be 0 or 2 at this moment - let it always be 2., +            workerState.set(2);, +            while (workerState.get() == 1) {, +                    if (workerState.get() != 1) {]