[+++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, +import io.netty.channel.DefaultChannelFuture;, +    private final SSLEngineInboundCloseFuture sslEngineCloseFuture = new SSLEngineInboundCloseFuture();, +    , +    /**, +     * Return the {@link ChannelFuture} that will get notified if the inbound of the {@link SSLEngine} will get closed., +     * , +     * This method will return the same {@link ChannelFuture} all the time., +     * , +     * For more informations see the apidocs of {@link SSLEngine}, +     * , +     */, +    public ChannelFuture getSSLEngineInboundCloseFuture() {, +        return sslEngineCloseFuture;, +    }, +, +                // notify about the CLOSED state of the SSLEngine. See #137, +                if (result.getStatus() == Status.CLOSED) {, +                    sslEngineCloseFuture.setClosed();, +                }, +                , +    , +    private final class SSLEngineInboundCloseFuture extends DefaultChannelFuture {, +        public SSLEngineInboundCloseFuture() {, +            super(null, true);, +        }, +        , +        void setClosed() {, +            super.setSuccess();            , +        }, +        , +        @Override, +        public Channel getChannel() {, +            if (ctx == null) {, +                // Maybe we should better throw an IllegalStateException() ?, +                return null;, +            } else {, +                return ctx.getChannel();, +            }, +        }, +        , +        @Override, +        public boolean setSuccess() {, +            return false;, +        }, +        , +        @Override, +        public boolean setFailure(Throwable cause) {, +            return false;, +        }, +    }]