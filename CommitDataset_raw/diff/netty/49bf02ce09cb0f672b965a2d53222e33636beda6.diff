[+++ b/transport-sctp/src/main/java/io/netty/channel/socket/sctp/SctpChannel.java, + * A SCTP/IP  {@link Channel} interface for single SCTP association., + *, + * <p>, + * The SctpChannel is a message-oriented, connected transport which supports multi-streaming and multi-homing., + * </p>, +     * Will notify the given {@link ChannelPromise} and return a {@link ChannelFuture}, +    ChannelFuture bindAddress(InetAddress localAddress, ChannelPromise promise);, +     * Will notify the given {@link ChannelPromise} and return a {@link ChannelFuture}, +    ChannelFuture unbindAddress(InetAddress localAddress, ChannelPromise promise);, +++ b/transport-sctp/src/main/java/io/netty/channel/socket/sctp/SctpChannel.java, + * A SCTP/IP  {@link Channel} interface for single SCTP association., + *, + * <p>, + * The SctpChannel is a message-oriented, connected transport which supports multi-streaming and multi-homing., + * </p>, +     * Will notify the given {@link ChannelPromise} and return a {@link ChannelFuture}, +    ChannelFuture bindAddress(InetAddress localAddress, ChannelPromise promise);, +     * Will notify the given {@link ChannelPromise} and return a {@link ChannelFuture}, +    ChannelFuture unbindAddress(InetAddress localAddress, ChannelPromise promise);, +++ b/transport-sctp/src/main/java/io/netty/channel/socket/sctp/SctpNotificationEvent.java, + * A Notification event which carries a {@link Notification} from the SCTP stack to a SCTP {@link ChannelPipeline}., + * <p>, + * Following notifications may be supported by a {@link SctpChannel};, + * AssociationChangeNotification, PeerAddressChangeNotification, SendFailedNotification, ShutdownNotification and, + * additional implementation specific notifications., + *</p>, + *, + * <p>, + * User can handle the notification events of a {@link SctpChannel} by override the following method, + * {@link ChannelHandler#userEventTriggered(ChannelHandlerContext, Object)}., + * </p>, +++ b/transport-sctp/src/main/java/io/netty/channel/socket/sctp/SctpChannel.java, + * A SCTP/IP  {@link Channel} interface for single SCTP association., + *, + * <p>, + * The SctpChannel is a message-oriented, connected transport which supports multi-streaming and multi-homing., + * </p>, +     * Will notify the given {@link ChannelPromise} and return a {@link ChannelFuture}, +    ChannelFuture bindAddress(InetAddress localAddress, ChannelPromise promise);, +     * Will notify the given {@link ChannelPromise} and return a {@link ChannelFuture}, +    ChannelFuture unbindAddress(InetAddress localAddress, ChannelPromise promise);, +++ b/transport-sctp/src/main/java/io/netty/channel/socket/sctp/SctpNotificationEvent.java, + * A Notification event which carries a {@link Notification} from the SCTP stack to a SCTP {@link ChannelPipeline}., + * <p>, + * Following notifications may be supported by a {@link SctpChannel};, + * AssociationChangeNotification, PeerAddressChangeNotification, SendFailedNotification, ShutdownNotification and, + * additional implementation specific notifications., + *</p>, + *, + * <p>, + * User can handle the notification events of a {@link SctpChannel} by override the following method, + * {@link ChannelHandler#userEventTriggered(ChannelHandlerContext, Object)}., + * </p>, +++ b/transport-sctp/src/main/java/io/netty/channel/socket/sctp/SctpServerChannel.java, +import io.netty.channel.ChannelFuture;, +import io.netty.channel.ChannelPromise;, +import java.net.InetAddress;, + * A SCTP/IP {@link ServerChannel} which accepts incoming SCTP/IP associations., + * <p>, + * Multi-homing address binding/unbinding can done through bindAddress/unbindAddress methods., + * </p>, +, +    /**, +     * Bind a address to the already bound channel to enable multi-homing., +     * The Channel must be bound and yet to be connected., +     */, +    ChannelFuture bindAddress(InetAddress localAddress);, +, +    /**, +     * Bind a address to the already bound channel to enable multi-homing., +     * The Channel must be bound and yet to be connected., +     *, +     * Will notify the given {@link ChannelPromise} and return a {@link ChannelFuture}, +     */, +    ChannelFuture bindAddress(InetAddress localAddress, ChannelPromise promise);, +, +    /**, +     *  Unbind the address from channel's multi-homing address list., +     *  The address should be added already in multi-homing address list., +     */, +    ChannelFuture unbindAddress(InetAddress localAddress);, +, +    /**, +     *  Unbind the address from channel's multi-homing address list., +     *  The address should be added already in multi-homing address list., +     *, +     * Will notify the given {@link ChannelPromise} and return a {@link ChannelFuture}, +     */, +    ChannelFuture unbindAddress(InetAddress localAddress, ChannelPromise promise);, +++ b/transport-sctp/src/main/java/io/netty/channel/socket/sctp/SctpChannel.java, + * A SCTP/IP  {@link Channel} interface for single SCTP association., + *, + * <p>, + * The SctpChannel is a message-oriented, connected transport which supports multi-streaming and multi-homing., + * </p>, +     * Will notify the given {@link ChannelPromise} and return a {@link ChannelFuture}, +    ChannelFuture bindAddress(InetAddress localAddress, ChannelPromise promise);, +     * Will notify the given {@link ChannelPromise} and return a {@link ChannelFuture}, +    ChannelFuture unbindAddress(InetAddress localAddress, ChannelPromise promise);]