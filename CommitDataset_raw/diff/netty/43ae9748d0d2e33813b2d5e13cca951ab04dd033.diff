[+++ b/handler/src/main/java/io/netty/handler/ssl/JdkSslContext.java, +import javax.crypto.NoSuchPaddingException;, +import javax.net.ssl.KeyManagerFactory;, +import javax.net.ssl.SSLContext;, +import javax.net.ssl.SSLEngine;, +import javax.net.ssl.SSLSessionContext;, +, +import static io.netty.handler.ssl.SslUtils.DEFAULT_CIPHER_SUITES;, +import static io.netty.handler.ssl.SslUtils.addIfSupported;, +import static io.netty.handler.ssl.SslUtils.useFallbackCiphersIfDefaultIsEmpty;, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +    private static final String[] DEFAULT_PROTOCOLS;, +    private static final List<String> DEFAULT_CIPHERS;, +    private static final Set<String> SUPPORTED_CIPHERS;, +        addIfSupported(SUPPORTED_CIPHERS, ciphers, DEFAULT_CIPHER_SUITES);, +        useFallbackCiphersIfDefaultIsEmpty(ciphers, engine.getEnabledCipherSuites());, +++ b/handler/src/main/java/io/netty/handler/ssl/JdkSslContext.java, +import javax.crypto.NoSuchPaddingException;, +import javax.net.ssl.KeyManagerFactory;, +import javax.net.ssl.SSLContext;, +import javax.net.ssl.SSLEngine;, +import javax.net.ssl.SSLSessionContext;, +, +import static io.netty.handler.ssl.SslUtils.DEFAULT_CIPHER_SUITES;, +import static io.netty.handler.ssl.SslUtils.addIfSupported;, +import static io.netty.handler.ssl.SslUtils.useFallbackCiphersIfDefaultIsEmpty;, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +    private static final String[] DEFAULT_PROTOCOLS;, +    private static final List<String> DEFAULT_CIPHERS;, +    private static final Set<String> SUPPORTED_CIPHERS;, +        addIfSupported(SUPPORTED_CIPHERS, ciphers, DEFAULT_CIPHER_SUITES);, +        useFallbackCiphersIfDefaultIsEmpty(ciphers, engine.getEnabledCipherSuites());, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java, +import io.netty.internal.tcnative.Buffer;, +import io.netty.internal.tcnative.Library;, +import io.netty.internal.tcnative.SSL;, +import io.netty.internal.tcnative.SSLContext;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +import static io.netty.handler.ssl.SslUtils.DEFAULT_CIPHER_SUITES;, +import static io.netty.handler.ssl.SslUtils.addIfSupported;, +import static io.netty.handler.ssl.SslUtils.useFallbackCiphersIfDefaultIsEmpty;, +, +    static final List<String> DEFAULT_CIPHERS;, +            final List<String> defaultCiphers = new ArrayList<String>();, +, +, +            useFallbackCiphersIfDefaultIsEmpty(defaultCiphers, availableJavaCipherSuites);, +            DEFAULT_CIPHERS = Collections.unmodifiableList(defaultCiphers);, +            addIfSupported(availableJavaCipherSuites, defaultCiphers, DEFAULT_CIPHER_SUITES);, +, +, +            if (logger.isDebugEnabled()) {, +                logger.debug("Supported protocols (OpenSSL): {} ", Arrays.asList(SUPPORTED_PROTOCOLS_SET));, +                logger.debug("Default cipher suites (OpenSSL): {}", DEFAULT_CIPHERS);, +            }, +            DEFAULT_CIPHERS = Collections.emptyList();, +++ b/handler/src/main/java/io/netty/handler/ssl/JdkSslContext.java, +import javax.crypto.NoSuchPaddingException;, +import javax.net.ssl.KeyManagerFactory;, +import javax.net.ssl.SSLContext;, +import javax.net.ssl.SSLEngine;, +import javax.net.ssl.SSLSessionContext;, +, +import static io.netty.handler.ssl.SslUtils.DEFAULT_CIPHER_SUITES;, +import static io.netty.handler.ssl.SslUtils.addIfSupported;, +import static io.netty.handler.ssl.SslUtils.useFallbackCiphersIfDefaultIsEmpty;, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +    private static final String[] DEFAULT_PROTOCOLS;, +    private static final List<String> DEFAULT_CIPHERS;, +    private static final Set<String> SUPPORTED_CIPHERS;, +        addIfSupported(SUPPORTED_CIPHERS, ciphers, DEFAULT_CIPHER_SUITES);, +        useFallbackCiphersIfDefaultIsEmpty(ciphers, engine.getEnabledCipherSuites());, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSsl.java, +import io.netty.internal.tcnative.Buffer;, +import io.netty.internal.tcnative.Library;, +import io.netty.internal.tcnative.SSL;, +import io.netty.internal.tcnative.SSLContext;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, +import static io.netty.handler.ssl.SslUtils.DEFAULT_CIPHER_SUITES;, +import static io.netty.handler.ssl.SslUtils.addIfSupported;, +import static io.netty.handler.ssl.SslUtils.useFallbackCiphersIfDefaultIsEmpty;, +, +    static final List<String> DEFAULT_CIPHERS;, +            final List<String> defaultCiphers = new ArrayList<String>();, +, +, +            useFallbackCiphersIfDefaultIsEmpty(defaultCiphers, availableJavaCipherSuites);, +            DEFAULT_CIPHERS = Collections.unmodifiableList(defaultCiphers);, +            addIfSupported(availableJavaCipherSuites, defaultCiphers, DEFAULT_CIPHER_SUITES);, +, +, +            if (logger.isDebugEnabled()) {, +                logger.debug("Supported protocols (OpenSSL): {} ", Arrays.asList(SUPPORTED_PROTOCOLS_SET));, +                logger.debug("Default cipher suites (OpenSSL): {}", DEFAULT_CIPHERS);, +            }, +            DEFAULT_CIPHERS = Collections.emptyList();]