[+++ b/example/src/main/java/io/netty/example/http2/server/HelloWorldHttp1Handler.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +import io.netty.buffer.ByteBufUtil;, +    private final String establishApproach;, +, +    public HelloWorldHttp1Handler(String establishApproach) {, +        this.establishApproach = checkNotNull(establishApproach, "establishApproach");, +    }, +        ByteBufUtil.writeAscii(content, " - via " + req.protocolVersion() + " (" + establishApproach + ")");, +++ b/example/src/main/java/io/netty/example/http2/server/HelloWorldHttp1Handler.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +import io.netty.buffer.ByteBufUtil;, +    private final String establishApproach;, +, +    public HelloWorldHttp1Handler(String establishApproach) {, +        this.establishApproach = checkNotNull(establishApproach, "establishApproach");, +    }, +        ByteBufUtil.writeAscii(content, " - via " + req.protocolVersion() + " (" + establishApproach + ")");, +++ b/example/src/main/java/io/netty/example/http2/server/HelloWorldHttp2Handler.java, +import io.netty.buffer.ByteBufUtil;, +                ByteBuf content = ctx.alloc().buffer();, +                content.writeBytes(HelloWorldHttp2Handler.RESPONSE_BYTES.duplicate());, +                ByteBufUtil.writeAscii(content, " - via HTTP/2");, +                sendResponse(ctx, streamId, content);, +++ b/example/src/main/java/io/netty/example/http2/server/HelloWorldHttp1Handler.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +import io.netty.buffer.ByteBufUtil;, +    private final String establishApproach;, +, +    public HelloWorldHttp1Handler(String establishApproach) {, +        this.establishApproach = checkNotNull(establishApproach, "establishApproach");, +    }, +        ByteBufUtil.writeAscii(content, " - via " + req.protocolVersion() + " (" + establishApproach + ")");, +++ b/example/src/main/java/io/netty/example/http2/server/HelloWorldHttp2Handler.java, +import io.netty.buffer.ByteBufUtil;, +                ByteBuf content = ctx.alloc().buffer();, +                content.writeBytes(HelloWorldHttp2Handler.RESPONSE_BYTES.duplicate());, +                ByteBufUtil.writeAscii(content, " - via HTTP/2");, +                sendResponse(ctx, streamId, content);, +++ b/example/src/main/java/io/netty/example/http2/server/Http2OrHttpHandler.java, +        return new HelloWorldHttp1Handler("ALPN Negotiation");, +++ b/example/src/main/java/io/netty/example/http2/server/HelloWorldHttp1Handler.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +import io.netty.buffer.ByteBufUtil;, +    private final String establishApproach;, +, +    public HelloWorldHttp1Handler(String establishApproach) {, +        this.establishApproach = checkNotNull(establishApproach, "establishApproach");, +    }, +        ByteBufUtil.writeAscii(content, " - via " + req.protocolVersion() + " (" + establishApproach + ")");, +++ b/example/src/main/java/io/netty/example/http2/server/HelloWorldHttp2Handler.java, +import io.netty.buffer.ByteBufUtil;, +                ByteBuf content = ctx.alloc().buffer();, +                content.writeBytes(HelloWorldHttp2Handler.RESPONSE_BYTES.duplicate());, +                ByteBufUtil.writeAscii(content, " - via HTTP/2");, +                sendResponse(ctx, streamId, content);, +++ b/example/src/main/java/io/netty/example/http2/server/Http2OrHttpHandler.java, +        return new HelloWorldHttp1Handler("ALPN Negotiation");, +++ b/example/src/main/java/io/netty/example/http2/server/Http2ServerInitializer.java, +import io.netty.channel.SimpleChannelInboundHandler;, +import io.netty.handler.codec.http.HttpMessage;, +        ch.pipeline().addLast(new SimpleChannelInboundHandler<HttpMessage>() {, +            @Override, +            protected void messageReceived(ChannelHandlerContext ctx, HttpMessage msg) throws Exception {, +                // If this handler is hit then no upgrade has been attempted and the client is just talking HTTP., +                System.err.println("Directly talking: " + msg.protocolVersion() + " (no upgrade was attempted)");, +                ctx.pipeline().replace(this, "http-hello-world",, +                        new HelloWorldHttp1Handler("Direct. No Upgrade Attempted."));, +                ctx.fireChannelRead(msg);, +            }, +        });]