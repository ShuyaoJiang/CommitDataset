[+++ b/codec-redis/src/main/java/io/netty/handler/codec/redis/RedisDecoder.java, +        if (readableBytes == 0 || remainingBulkLength == 0 && readableBytes < RedisConstants.EOL_LENGTH) {, +++ b/codec-redis/src/main/java/io/netty/handler/codec/redis/RedisDecoder.java, +        if (readableBytes == 0 || remainingBulkLength == 0 && readableBytes < RedisConstants.EOL_LENGTH) {, +++ b/codec-redis/src/test/java/io/netty/handler/codec/redis/RedisDecoderTest.java, +import static io.netty.handler.codec.redis.RedisCodecTestUtil.byteBufOf;, +import static io.netty.handler.codec.redis.RedisCodecTestUtil.bytesOf;, +import static org.hamcrest.CoreMatchers.equalTo;, +import static org.hamcrest.CoreMatchers.instanceOf;, +import static org.hamcrest.CoreMatchers.is;, +import static org.hamcrest.CoreMatchers.nullValue;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertThat;, +import static org.junit.Assert.assertTrue;, +    public void splitEOLDoesNotInfiniteLoop() throws Exception {, +        assertFalse(channel.writeInbound(byteBufOf("$6\r\nfoobar\r")));, +        assertTrue(channel.writeInbound(byteBufOf("\n")));, +, +        RedisMessage msg = channel.readInbound();, +        assertTrue(msg instanceof FullBulkStringRedisMessage);, +        ReferenceCountUtil.release(msg);, +    }, +, +    @Test]