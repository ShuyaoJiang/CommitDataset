[+++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +            if (index >= 0 && length == 0) {, +                return ChannelBuffers.EMPTY_BUFFER;, +            }, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +            if (index >= 0 && length == 0) {, +                return ChannelBuffers.EMPTY_BUFFER;, +            }, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffers.java, +        if (buffer.order() == BIG_ENDIAN) {, +        } else {, +            for (int i = intCount; i > 0; i --) {, +                hashCode = 31 * hashCode + swapInt(buffer.getInt(arrayIndex));, +                arrayIndex += 4;, +            }, +        }, +, +, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +            if (index >= 0 && length == 0) {, +                return ChannelBuffers.EMPTY_BUFFER;, +            }, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffers.java, +        if (buffer.order() == BIG_ENDIAN) {, +        } else {, +            for (int i = intCount; i > 0; i --) {, +                hashCode = 31 * hashCode + swapInt(buffer.getInt(arrayIndex));, +                arrayIndex += 4;, +            }, +        }, +, +, +++ b/src/main/java/org/jboss/netty/buffer/CompositeChannelBuffer.java, +        ChannelBuffer dst = ChannelBuffers.buffer(order(), length);, +        if (length == 0) {, +            return ChannelBuffers.EMPTY_BUFFER;, +        }, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +            if (index >= 0 && length == 0) {, +                return ChannelBuffers.EMPTY_BUFFER;, +            }, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffers.java, +        if (buffer.order() == BIG_ENDIAN) {, +        } else {, +            for (int i = intCount; i > 0; i --) {, +                hashCode = 31 * hashCode + swapInt(buffer.getInt(arrayIndex));, +                arrayIndex += 4;, +            }, +        }, +, +, +++ b/src/main/java/org/jboss/netty/buffer/CompositeChannelBuffer.java, +        ChannelBuffer dst = ChannelBuffers.buffer(order(), length);, +        if (length == 0) {, +            return ChannelBuffers.EMPTY_BUFFER;, +        }, +++ b/src/main/java/org/jboss/netty/buffer/DynamicChannelBuffer.java, +        if (readable()) {, +            copiedBuffer.buffer = buffer.copy(readerIndex(), readableBytes());, +            copiedBuffer.setIndex(0, readableBytes());, +        } else {, +            if (length == 0) {, +                return ChannelBuffers.EMPTY_BUFFER;, +            }, +            if (length == 0) {, +                return ChannelBuffers.EMPTY_BUFFER;, +            }, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +            if (index >= 0 && length == 0) {, +                return ChannelBuffers.EMPTY_BUFFER;, +            }, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffers.java, +        if (buffer.order() == BIG_ENDIAN) {, +        } else {, +            for (int i = intCount; i > 0; i --) {, +                hashCode = 31 * hashCode + swapInt(buffer.getInt(arrayIndex));, +                arrayIndex += 4;, +            }, +        }, +, +, +++ b/src/main/java/org/jboss/netty/buffer/CompositeChannelBuffer.java, +        ChannelBuffer dst = ChannelBuffers.buffer(order(), length);, +        if (length == 0) {, +            return ChannelBuffers.EMPTY_BUFFER;, +        }, +++ b/src/main/java/org/jboss/netty/buffer/DynamicChannelBuffer.java, +        if (readable()) {, +            copiedBuffer.buffer = buffer.copy(readerIndex(), readableBytes());, +            copiedBuffer.setIndex(0, readableBytes());, +        } else {, +            if (length == 0) {, +                return ChannelBuffers.EMPTY_BUFFER;, +            }, +            if (length == 0) {, +                return ChannelBuffers.EMPTY_BUFFER;, +            }, +++ b/src/main/java/org/jboss/netty/buffer/HeapChannelBuffer.java, +            if (length == 0) {, +                return ChannelBuffers.EMPTY_BUFFER;]