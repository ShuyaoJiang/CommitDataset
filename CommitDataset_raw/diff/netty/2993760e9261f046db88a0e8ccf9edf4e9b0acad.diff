[+++ b/buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java, +        cbuf.addComponent(true, EMPTY_BUFFER);, +        assertEquals(1, composite.refCnt());, +        assertEquals(5, buffer.refCnt());, +        assertEquals(0, composite.refCnt());, +        assertEquals(1, buffer.refCnt());, +        assertEquals(0, buffer.refCnt());, +++ b/buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java, +        cbuf.addComponent(true, EMPTY_BUFFER);, +        assertEquals(1, composite.refCnt());, +        assertEquals(5, buffer.refCnt());, +        assertEquals(0, composite.refCnt());, +        assertEquals(1, buffer.refCnt());, +        assertEquals(0, buffer.refCnt());, +++ b/buffer/src/test/java/io/netty/buffer/UnsafeByteBufUtilTest.java, +        byte[] testData = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};, +        byte[] testData = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};, +            assertEquals(pageSize, b1.array().length);, +            assertArrayEquals(b1.array(), b2.array());, +++ b/buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java, +        cbuf.addComponent(true, EMPTY_BUFFER);, +        assertEquals(1, composite.refCnt());, +        assertEquals(5, buffer.refCnt());, +        assertEquals(0, composite.refCnt());, +        assertEquals(1, buffer.refCnt());, +        assertEquals(0, buffer.refCnt());, +++ b/buffer/src/test/java/io/netty/buffer/UnsafeByteBufUtilTest.java, +        byte[] testData = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};, +        byte[] testData = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};, +            assertEquals(pageSize, b1.array().length);, +            assertArrayEquals(b1.array(), b2.array());, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpClientUpgradeHandlerTest.java, +        assertEquals(2, request.headers().size());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_ISSUED, catcher.getUserEvent());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_SUCCESSFUL, catcher.getUserEvent());, +        assertEquals(HttpResponseStatus.OK, response.status());, +        assertEquals(2, request.headers().size());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_ISSUED, catcher.getUserEvent());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_REJECTED, catcher.getUserEvent());, +        assertEquals(HttpResponseStatus.OK, response.status());, +        assertEquals(LastHttpContent.EMPTY_LAST_CONTENT, last);, +        assertEquals(2, request.headers().size());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_ISSUED, catcher.getUserEvent());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_REJECTED, catcher.getUserEvent());, +        assertEquals(HttpResponseStatus.OK, response.status());, +++ b/buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java, +        cbuf.addComponent(true, EMPTY_BUFFER);, +        assertEquals(1, composite.refCnt());, +        assertEquals(5, buffer.refCnt());, +        assertEquals(0, composite.refCnt());, +        assertEquals(1, buffer.refCnt());, +        assertEquals(0, buffer.refCnt());, +++ b/buffer/src/test/java/io/netty/buffer/UnsafeByteBufUtilTest.java, +        byte[] testData = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};, +        byte[] testData = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};, +            assertEquals(pageSize, b1.array().length);, +            assertArrayEquals(b1.array(), b2.array());, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpClientUpgradeHandlerTest.java, +        assertEquals(2, request.headers().size());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_ISSUED, catcher.getUserEvent());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_SUCCESSFUL, catcher.getUserEvent());, +        assertEquals(HttpResponseStatus.OK, response.status());, +        assertEquals(2, request.headers().size());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_ISSUED, catcher.getUserEvent());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_REJECTED, catcher.getUserEvent());, +        assertEquals(HttpResponseStatus.OK, response.status());, +        assertEquals(LastHttpContent.EMPTY_LAST_CONTENT, last);, +        assertEquals(2, request.headers().size());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_ISSUED, catcher.getUserEvent());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_REJECTED, catcher.getUserEvent());, +        assertEquals(HttpResponseStatus.OK, response.status());, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpObjectAggregatorTest.java, +        assertEquals(Boolean.TRUE.toString(), aggratedMessage.headers().get(of("X-Test")));, +        assertEquals(Boolean.TRUE.toString(), aggratedMessage.headers().get(of("X-Test")));, +        assertEquals(Boolean.TRUE.toString(), aggratedMessage.trailingHeaders().get(of("X-Trailer")));, +        assertEquals(Boolean.TRUE.toString(), aggratedMessage.headers().get(of("X-Test")));, +        FullHttpRequest fullMsg = embedder.readInbound();, +    private static void runUnsupportedExceptHeaderExceptionTest(final boolean close) {, +        final FullHttpResponse response = embedder.readOutbound();, +            final FullHttpRequest request = embedder.readInbound();, +        FullHttpResponse response = embedder.readOutbound();, +        FullHttpRequest request = embedder.readInbound();, +        FullHttpResponse response = embedder.readOutbound();, +        FullHttpRequest fullMsg = embedder.readInbound();, +++ b/buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java, +        cbuf.addComponent(true, EMPTY_BUFFER);, +        assertEquals(1, composite.refCnt());, +        assertEquals(5, buffer.refCnt());, +        assertEquals(0, composite.refCnt());, +        assertEquals(1, buffer.refCnt());, +        assertEquals(0, buffer.refCnt());, +++ b/buffer/src/test/java/io/netty/buffer/UnsafeByteBufUtilTest.java, +        byte[] testData = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};, +        byte[] testData = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};, +            assertEquals(pageSize, b1.array().length);, +            assertArrayEquals(b1.array(), b2.array());, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpClientUpgradeHandlerTest.java, +        assertEquals(2, request.headers().size());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_ISSUED, catcher.getUserEvent());, +        assertEquals(HttpClientUpgradeHandler.UpgradeEvent.UPGRADE_SUCCESSFUL, catcher.getUserEvent());]