[+++ b/transport/src/main/java/io/netty/channel/socket/nio2/AsyncServerSocketChannel.java, +            channel.pipeline().inboundMessageBuffer().add(new AsyncSocketChannel(channel, null, ch));, +++ b/transport/src/main/java/io/netty/channel/socket/nio2/AsyncServerSocketChannel.java, +            channel.pipeline().inboundMessageBuffer().add(new AsyncSocketChannel(channel, null, ch));, +++ b/transport/src/main/java/io/netty/channel/socket/nio2/AsyncSocketchannel.java, +public class AsyncSocketChannel extends AbstractAsyncChannel {, +    private static final CompletionHandler<Void, AsyncSocketChannel> CONNECT_HANDLER  = new ConnectHandler();, +    private static final CompletionHandler<Integer, AsyncSocketChannel> READ_HANDLER = new ReadHandler();, +    private static final CompletionHandler<Integer, AsyncSocketChannel> WRITE_HANDLER = new WriteHandler();, +                AsyncSocketChannel.read((AsyncSocketChannel)ctx.channel());, +    public AsyncSocketChannel() {, +    public AsyncSocketChannel(AsyncServerSocketChannel parent, Integer id, AsynchronousSocketChannel channel) {, +     * Trigger a read from the {@link AsyncSocketChannel}, +    private static void read(AsyncSocketChannel channel) {, +    private static final class WriteHandler implements CompletionHandler<Integer, AsyncSocketChannel> {, +        public void completed(Integer result, AsyncSocketChannel channel) {, +        public void failed(Throwable cause, AsyncSocketChannel channel) {, +    private static final class ReadHandler implements CompletionHandler<Integer, AsyncSocketChannel> {, +        public void completed(Integer result, AsyncSocketChannel channel) {, +                    AsyncSocketChannel.read(channel);, +        public void failed(Throwable t, AsyncSocketChannel channel) {, +                AsyncSocketChannel.read(channel);, +    private static final class ConnectHandler implements CompletionHandler<Void, AsyncSocketChannel> {, +        public void completed(Void result, AsyncSocketChannel channel) {, +            AsyncSocketChannel.read(channel);, +        public void failed(Throwable exc, AsyncSocketChannel channel) {, +++ b/transport/src/main/java/io/netty/channel/socket/nio2/AsyncServerSocketChannel.java, +            channel.pipeline().inboundMessageBuffer().add(new AsyncSocketChannel(channel, null, ch));, +++ b/transport/src/main/java/io/netty/channel/socket/nio2/AsyncSocketchannel.java, +public class AsyncSocketChannel extends AbstractAsyncChannel {, +    private static final CompletionHandler<Void, AsyncSocketChannel> CONNECT_HANDLER  = new ConnectHandler();, +    private static final CompletionHandler<Integer, AsyncSocketChannel> READ_HANDLER = new ReadHandler();, +    private static final CompletionHandler<Integer, AsyncSocketChannel> WRITE_HANDLER = new WriteHandler();, +                AsyncSocketChannel.read((AsyncSocketChannel)ctx.channel());, +    public AsyncSocketChannel() {, +    public AsyncSocketChannel(AsyncServerSocketChannel parent, Integer id, AsynchronousSocketChannel channel) {, +     * Trigger a read from the {@link AsyncSocketChannel}, +    private static void read(AsyncSocketChannel channel) {, +    private static final class WriteHandler implements CompletionHandler<Integer, AsyncSocketChannel> {, +        public void completed(Integer result, AsyncSocketChannel channel) {, +        public void failed(Throwable cause, AsyncSocketChannel channel) {, +    private static final class ReadHandler implements CompletionHandler<Integer, AsyncSocketChannel> {, +        public void completed(Integer result, AsyncSocketChannel channel) {, +                    AsyncSocketChannel.read(channel);, +        public void failed(Throwable t, AsyncSocketChannel channel) {, +                AsyncSocketChannel.read(channel);, +    private static final class ConnectHandler implements CompletionHandler<Void, AsyncSocketChannel> {, +        public void completed(Void result, AsyncSocketChannel channel) {, +            AsyncSocketChannel.read(channel);, +        public void failed(Throwable exc, AsyncSocketChannel channel) {, +++ b/transport/src/test/java/io/netty/channel/AsyncTransportTest.java, +import io.netty.channel.socket.nio2.AsyncSocketChannel;, +        AsyncEventLoop loop = new AsyncEventLoop();, +        sb.eventLoop(loop, loop), +          .localAddress(new InetSocketAddress(9191)), +          .childHandler(new ChannelInitializer<AsyncSocketChannel>() {, +              public void initChannel(AsyncSocketChannel ch) throws Exception {, +                        ctx.write(in.slice());]