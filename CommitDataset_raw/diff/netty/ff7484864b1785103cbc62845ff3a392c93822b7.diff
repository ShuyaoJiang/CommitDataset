[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +        HttpMethod method = msg.method();, +        if (HttpMethod.HEAD.equals(method)) {, +        } else if (HttpMethod.CONNECT.equals(method)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +        HttpMethod method = msg.method();, +        if (HttpMethod.HEAD.equals(method)) {, +        } else if (HttpMethod.CONNECT.equals(method)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMethod.java, +        if (this == o) {, +            return true;, +        }, +        if (o == this) {, +            return 0;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +        HttpMethod method = msg.method();, +        if (HttpMethod.HEAD.equals(method)) {, +        } else if (HttpMethod.CONNECT.equals(method)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMethod.java, +        if (this == o) {, +            return true;, +        }, +        if (o == this) {, +            return 0;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpServerCodec.java, +            if (!isAlwaysEmpty && HttpMethod.CONNECT.equals(method), +                    && msg.status().codeClass() == HttpStatusClass.SUCCESS) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +        HttpMethod method = msg.method();, +        if (HttpMethod.HEAD.equals(method)) {, +        } else if (HttpMethod.CONNECT.equals(method)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMethod.java, +        if (this == o) {, +            return true;, +        }, +        if (o == this) {, +            return 0;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpServerCodec.java, +            if (!isAlwaysEmpty && HttpMethod.CONNECT.equals(method), +                    && msg.status().codeClass() == HttpStatusClass.SUCCESS) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java, +        return OPTIONS.equals(request.method()) &&, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +        HttpMethod method = msg.method();, +        if (HttpMethod.HEAD.equals(method)) {, +        } else if (HttpMethod.CONNECT.equals(method)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMethod.java, +        if (this == o) {, +            return true;, +        }, +        if (o == this) {, +            return 0;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpServerCodec.java, +            if (!isAlwaysEmpty && HttpMethod.CONNECT.equals(method), +                    && msg.status().codeClass() == HttpStatusClass.SUCCESS) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java, +        return OPTIONS.equals(request.method()) &&, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +            if (!GET.equals(req.method())) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +        HttpMethod method = msg.method();, +        if (HttpMethod.HEAD.equals(method)) {, +        } else if (HttpMethod.CONNECT.equals(method)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMethod.java, +        if (this == o) {, +            return true;, +        }, +        if (o == this) {, +            return 0;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpServerCodec.java, +            if (!isAlwaysEmpty && HttpMethod.CONNECT.equals(method), +                    && msg.status().codeClass() == HttpStatusClass.SUCCESS) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java, +        return OPTIONS.equals(request.method()) &&, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +            if (!GET.equals(req.method())) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/rtsp/RtspMethods.java, +    public static final HttpMethod DESCRIBE = HttpMethod.valueOf("DESCRIBE");, +    public static final HttpMethod ANNOUNCE = HttpMethod.valueOf("ANNOUNCE");, +    public static final HttpMethod SETUP = HttpMethod.valueOf("SETUP");, +    public static final HttpMethod PLAY = HttpMethod.valueOf("PLAY");, +    public static final HttpMethod PAUSE = HttpMethod.valueOf("PAUSE");, +    public static final HttpMethod TEARDOWN = HttpMethod.valueOf("TEARDOWN");, +    public static final HttpMethod GET_PARAMETER = HttpMethod.valueOf("GET_PARAMETER");, +    public static final HttpMethod SET_PARAMETER = HttpMethod.valueOf("SET_PARAMETER");, +    public static final HttpMethod REDIRECT = HttpMethod.valueOf("REDIRECT");, +    public static final HttpMethod RECORD = HttpMethod.valueOf("RECORD");, +            return HttpMethod.valueOf(name);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +        HttpMethod method = msg.method();, +        if (HttpMethod.HEAD.equals(method)) {, +        } else if (HttpMethod.CONNECT.equals(method)) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMethod.java, +        if (this == o) {, +            return true;]