[+++ b/common/src/main/java/io/netty/util/internal/logging/LocationAwareSlf4JLogger.java, +            log(TRACE_INT, org.slf4j.helpers.MessageFormatter.arrayFormat(format, argArray));, +            log(DEBUG_INT, org.slf4j.helpers.MessageFormatter.arrayFormat(format, argArray));, +            log(INFO_INT, org.slf4j.helpers.MessageFormatter.arrayFormat(format, argArray));, +            log(WARN_INT, org.slf4j.helpers.MessageFormatter.arrayFormat(format, argArray));, +            log(ERROR_INT, org.slf4j.helpers.MessageFormatter.arrayFormat(format, argArray));, +++ b/common/src/main/java/io/netty/util/internal/logging/LocationAwareSlf4JLogger.java, +            log(TRACE_INT, org.slf4j.helpers.MessageFormatter.arrayFormat(format, argArray));, +            log(DEBUG_INT, org.slf4j.helpers.MessageFormatter.arrayFormat(format, argArray));, +            log(INFO_INT, org.slf4j.helpers.MessageFormatter.arrayFormat(format, argArray));, +            log(WARN_INT, org.slf4j.helpers.MessageFormatter.arrayFormat(format, argArray));, +            log(ERROR_INT, org.slf4j.helpers.MessageFormatter.arrayFormat(format, argArray));, +++ b/common/src/test/java/io/netty/util/internal/logging/Slf4JLoggerFactoryTest.java, +        internalLogger.debug("{} {} {}", "debug1", "debug2", "debug3");, +        internalLogger.error("{} {} {}", "error1", "error2", "error3");, +        internalLogger.info("{} {} {}", "info1", "info2", "info3");, +        internalLogger.trace("{} {} {}", "trace1", "trace2", "trace3");, +        internalLogger.warn("{} {} {}", "warn1", "warn2", "warn3");, +        verify(logger, times(3)).log(ArgumentMatchers.<Marker>isNull(), eq(LocationAwareSlf4JLogger.FQCN),, +        verify(logger, times(3)).log(ArgumentMatchers.<Marker>isNull(), eq(LocationAwareSlf4JLogger.FQCN),, +        verify(logger, times(3)).log(ArgumentMatchers.<Marker>isNull(), eq(LocationAwareSlf4JLogger.FQCN),, +        verify(logger, times(3)).log(ArgumentMatchers.<Marker>isNull(), eq(LocationAwareSlf4JLogger.FQCN),, +        verify(logger, times(3)).log(ArgumentMatchers.<Marker>isNull(), eq(LocationAwareSlf4JLogger.FQCN),, +        assertEquals("debug1 debug2 debug3", logMessages.next());, +        assertEquals("error1 error2 error3", logMessages.next());, +        assertEquals("info1 info2 info3", logMessages.next());, +        assertEquals("trace1 trace2 trace3", logMessages.next());, +        assertEquals("warn1 warn2 warn3", logMessages.next());]