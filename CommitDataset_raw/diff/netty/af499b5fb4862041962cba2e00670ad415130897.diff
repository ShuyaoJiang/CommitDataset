[+++ b/transport/src/main/java/io/netty/channel/ChannelHandler.java, +     *, +     * @deprecated  Will be removed in the future and only {@link ChannelInboundHandler} will receive, +     *              exceptionCaught events. For {@link ChannelOutboundHandler} the {@link ChannelPromise}, +     *              must be failed., +    @Deprecated, +++ b/transport/src/main/java/io/netty/channel/ChannelHandler.java, +     *, +     * @deprecated  Will be removed in the future and only {@link ChannelInboundHandler} will receive, +     *              exceptionCaught events. For {@link ChannelOutboundHandler} the {@link ChannelPromise}, +     *              must be failed., +    @Deprecated, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerAdapter.java, +    @Deprecated, +++ b/transport/src/main/java/io/netty/channel/ChannelHandler.java, +     *, +     * @deprecated  Will be removed in the future and only {@link ChannelInboundHandler} will receive, +     *              exceptionCaught events. For {@link ChannelOutboundHandler} the {@link ChannelPromise}, +     *              must be failed., +    @Deprecated, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerAdapter.java, +    @Deprecated, +++ b/transport/src/main/java/io/netty/channel/ChannelInboundHandler.java, +, +    /**, +     * Gets called if a {@link Throwable} was thrown., +     */, +    @Override, +    void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception;, +++ b/transport/src/main/java/io/netty/channel/ChannelHandler.java, +     *, +     * @deprecated  Will be removed in the future and only {@link ChannelInboundHandler} will receive, +     *              exceptionCaught events. For {@link ChannelOutboundHandler} the {@link ChannelPromise}, +     *              must be failed., +    @Deprecated, +++ b/transport/src/main/java/io/netty/channel/ChannelHandlerAdapter.java, +    @Deprecated, +++ b/transport/src/main/java/io/netty/channel/ChannelInboundHandler.java, +, +    /**, +     * Gets called if a {@link Throwable} was thrown., +     */, +    @Override, +    void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception;, +++ b/transport/src/main/java/io/netty/channel/ChannelInboundHandlerAdapter.java, +, +    /**, +     * Calls {@link ChannelHandlerContext#fireExceptionCaught(Throwable)} to forward, +     * to the next {@link ChannelHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +    @Override, +    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause), +            throws Exception {, +        ctx.fireExceptionCaught(cause);, +    }]