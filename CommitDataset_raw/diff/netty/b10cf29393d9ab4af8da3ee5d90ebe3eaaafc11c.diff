[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +    @Override, +    public boolean isDecodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +    @Override, +    public boolean isDecodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +    public boolean isDecodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;, +    }, +, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +    @Override, +    public boolean isDecodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +    public boolean isDecodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;, +    }, +, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +public abstract class HttpContentEncoder extends MessageToMessageCodec<HttpMessage, HttpMessage, Object, Object> {, +    public boolean isDecodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage;, +    @Override, +    public HttpMessage decode(ChannelInboundHandlerContext<HttpMessage> ctx, HttpMessage msg), +            throws Exception {, +        String acceptedEncoding = msg.getHeader(HttpHeaders.Names.ACCEPT_ENCODING);, +        return msg;, +    }, +, +    @Override, +    public boolean isEncodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +    @Override, +    public boolean isDecodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +    public boolean isDecodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;, +    }, +, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +public abstract class HttpContentEncoder extends MessageToMessageCodec<HttpMessage, HttpMessage, Object, Object> {, +    public boolean isDecodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage;, +    @Override, +    public HttpMessage decode(ChannelInboundHandlerContext<HttpMessage> ctx, HttpMessage msg), +            throws Exception {, +        String acceptedEncoding = msg.getHeader(HttpHeaders.Names.ACCEPT_ENCODING);, +        return msg;, +    }, +, +    @Override, +    public boolean isEncodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMessageEncoder.java, +    public boolean isEncodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;, +    }, +, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +    @Override, +    public boolean isDecodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +    public boolean isDecodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;, +    }, +, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +public abstract class HttpContentEncoder extends MessageToMessageCodec<HttpMessage, HttpMessage, Object, Object> {, +    public boolean isDecodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage;, +    @Override, +    public HttpMessage decode(ChannelInboundHandlerContext<HttpMessage> ctx, HttpMessage msg), +            throws Exception {, +        String acceptedEncoding = msg.getHeader(HttpHeaders.Names.ACCEPT_ENCODING);, +        return msg;, +    }, +, +    @Override, +    public boolean isEncodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMessageEncoder.java, +    public boolean isEncodable(Object msg) throws Exception {, +        return msg instanceof HttpMessage || msg instanceof HttpChunk;]