[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpTransferEncoding.java, +    HttpTransferEncoding(boolean single) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpTransferEncoding.java, +    HttpTransferEncoding(boolean single) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/CaseIgnoringComparator.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpTransferEncoding.java, +    HttpTransferEncoding(boolean single) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/CaseIgnoringComparator.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +    public enum SelectedProtocol {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpTransferEncoding.java, +    HttpTransferEncoding(boolean single) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/CaseIgnoringComparator.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +    public enum SelectedProtocol {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketRequestBuilder.java, +        version = WebSocketVersion.V13;, +        version = WebSocketVersion.V08;, +        version = null;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpTransferEncoding.java, +    HttpTransferEncoding(boolean single) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/CaseIgnoringComparator.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +    public enum SelectedProtocol {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketRequestBuilder.java, +        version = WebSocketVersion.V13;, +        version = WebSocketVersion.V08;, +        version = null;, +++ b/common/src/main/java/io/netty/monitor/MonitorName.java, +        return new MonitorName(group, type, name, instance);, +        return instance != null ? "Monitor(" + group + "/" + type + "/" + name + "/" + instance + ")" : "Monitor(", +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpTransferEncoding.java, +    HttpTransferEncoding(boolean single) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/CaseIgnoringComparator.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +    public enum SelectedProtocol {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketRequestBuilder.java, +        version = WebSocketVersion.V13;, +        version = WebSocketVersion.V08;, +        version = null;, +++ b/common/src/main/java/io/netty/monitor/MonitorName.java, +        return new MonitorName(group, type, name, instance);, +        return instance != null ? "Monitor(" + group + "/" + type + "/" + name + "/" + instance + ")" : "Monitor(", +++ b/common/src/main/java/io/netty/monitor/MonitorRegistries.java, +            return factories.hasNext();, +            return factories.next().newMonitorRegistry();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpTransferEncoding.java, +    HttpTransferEncoding(boolean single) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/CaseIgnoringComparator.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +    public enum SelectedProtocol {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketRequestBuilder.java, +        version = WebSocketVersion.V13;, +        version = WebSocketVersion.V08;, +        version = null;, +++ b/common/src/main/java/io/netty/monitor/MonitorName.java, +        return new MonitorName(group, type, name, instance);, +        return instance != null ? "Monitor(" + group + "/" + type + "/" + name + "/" + instance + ")" : "Monitor(", +++ b/common/src/main/java/io/netty/monitor/MonitorRegistries.java, +            return factories.hasNext();, +            return factories.next().newMonitorRegistry();, +++ b/common/src/main/java/io/netty/monitor/spi/MonitorProvider.java, +        return name.compareTo(o.name);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpTransferEncoding.java, +    HttpTransferEncoding(boolean single) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/CaseIgnoringComparator.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +    public enum SelectedProtocol {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketRequestBuilder.java, +        version = WebSocketVersion.V13;, +        version = WebSocketVersion.V08;, +        version = null;, +++ b/common/src/main/java/io/netty/monitor/MonitorName.java, +        return new MonitorName(group, type, name, instance);, +        return instance != null ? "Monitor(" + group + "/" + type + "/" + name + "/" + instance + ")" : "Monitor(", +++ b/common/src/main/java/io/netty/monitor/MonitorRegistries.java, +            return factories.hasNext();, +            return factories.next().newMonitorRegistry();, +++ b/common/src/main/java/io/netty/monitor/spi/MonitorProvider.java, +        return name.compareTo(o.name);, +++ b/common/src/test/java/io/netty/util/HashedWheelTimerMonitorTest.java, +            return eventDistributionMonitor;, +            return eventRateMonitor;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpTransferEncoding.java, +    HttpTransferEncoding(boolean single) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/CaseIgnoringComparator.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +    public enum SelectedProtocol {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketRequestBuilder.java, +        version = WebSocketVersion.V13;, +        version = WebSocketVersion.V08;, +        version = null;, +++ b/common/src/main/java/io/netty/monitor/MonitorName.java, +        return new MonitorName(group, type, name, instance);, +        return instance != null ? "Monitor(" + group + "/" + type + "/" + name + "/" + instance + ")" : "Monitor(", +++ b/common/src/main/java/io/netty/monitor/MonitorRegistries.java, +            return factories.hasNext();, +            return factories.next().newMonitorRegistry();, +++ b/common/src/main/java/io/netty/monitor/spi/MonitorProvider.java, +        return name.compareTo(o.name);]