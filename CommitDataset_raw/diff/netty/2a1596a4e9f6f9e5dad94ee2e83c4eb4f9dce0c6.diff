[+++ b/transport-native-epoll/src/main/c/netty_epoll_linuxsocket.c, +// SO_BUSY_POLL is defined in linux 3.11. We define this here so older kernels can compile., +#ifndef SO_BUSY_POLL, +#define SO_BUSY_POLL 46, +#endif, +, +static void netty_epoll_linuxsocket_setSoBusyPoll(JNIEnv* env, jclass clazz, jint fd, jint optval) {, +    netty_unix_socket_setOption(env, fd, SOL_SOCKET, SO_BUSY_POLL, &optval, sizeof(optval));, +}, +, +static jint netty_epoll_linuxsocket_getSoBusyPoll(JNIEnv* env, jclass clazz, jint fd) {, +    int optval;, +    if (netty_unix_socket_getOption(env, fd, SOL_SOCKET, SO_BUSY_POLL, &optval, sizeof(optval)) == -1) {, +        return -1;, +    }, +    return optval;, +}, +, +  { "setSoBusyPoll", "(II)V", (void *) netty_epoll_linuxsocket_setSoBusyPoll },, +  { "getSoBusyPoll", "(I)I", (void *) netty_epoll_linuxsocket_getSoBusyPoll },, +++ b/transport-native-epoll/src/main/c/netty_epoll_linuxsocket.c, +// SO_BUSY_POLL is defined in linux 3.11. We define this here so older kernels can compile., +#ifndef SO_BUSY_POLL, +#define SO_BUSY_POLL 46, +#endif, +, +static void netty_epoll_linuxsocket_setSoBusyPoll(JNIEnv* env, jclass clazz, jint fd, jint optval) {, +    netty_unix_socket_setOption(env, fd, SOL_SOCKET, SO_BUSY_POLL, &optval, sizeof(optval));, +}, +, +static jint netty_epoll_linuxsocket_getSoBusyPoll(JNIEnv* env, jclass clazz, jint fd) {, +    int optval;, +    if (netty_unix_socket_getOption(env, fd, SOL_SOCKET, SO_BUSY_POLL, &optval, sizeof(optval)) == -1) {, +        return -1;, +    }, +    return optval;, +}, +, +  { "setSoBusyPoll", "(II)V", (void *) netty_epoll_linuxsocket_setSoBusyPoll },, +  { "getSoBusyPoll", "(I)I", (void *) netty_epoll_linuxsocket_getSoBusyPoll },, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollChannelOption.java, +    public static final ChannelOption<Integer> SO_BUSY_POLL = valueOf(EpollChannelOption.class, "SO_BUSY_POLL");, +++ b/transport-native-epoll/src/main/c/netty_epoll_linuxsocket.c, +// SO_BUSY_POLL is defined in linux 3.11. We define this here so older kernels can compile., +#ifndef SO_BUSY_POLL, +#define SO_BUSY_POLL 46, +#endif, +, +static void netty_epoll_linuxsocket_setSoBusyPoll(JNIEnv* env, jclass clazz, jint fd, jint optval) {, +    netty_unix_socket_setOption(env, fd, SOL_SOCKET, SO_BUSY_POLL, &optval, sizeof(optval));, +}, +, +static jint netty_epoll_linuxsocket_getSoBusyPoll(JNIEnv* env, jclass clazz, jint fd) {, +    int optval;, +    if (netty_unix_socket_getOption(env, fd, SOL_SOCKET, SO_BUSY_POLL, &optval, sizeof(optval)) == -1) {, +        return -1;, +    }, +    return optval;, +}, +, +  { "setSoBusyPoll", "(II)V", (void *) netty_epoll_linuxsocket_setSoBusyPoll },, +  { "getSoBusyPoll", "(I)I", (void *) netty_epoll_linuxsocket_getSoBusyPoll },, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollChannelOption.java, +    public static final ChannelOption<Integer> SO_BUSY_POLL = valueOf(EpollChannelOption.class, "SO_BUSY_POLL");, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannelConfig.java, +                EpollChannelOption.TCP_FASTOPEN_CONNECT, EpollChannelOption.SO_BUSY_POLL);, +        if (option == EpollChannelOption.SO_BUSY_POLL) {, +            return (T) Integer.valueOf(getSoBusyPoll());, +        }, +        } else if (option == EpollChannelOption.SO_BUSY_POLL) {, +            setSoBusyPoll((Integer) value);, +     * Get the {@code SO_BUSY_POLL} option on the socket. See {@code man 7 tcp} for more details., +     */, +    public int getSoBusyPoll() {, +        try {, +            return channel.socket.getSoBusyPoll();, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +    /**, +     * Set the {@code SO_BUSY_POLL} option on the socket. See {@code man 7 tcp} for more details., +     */, +    public EpollSocketChannelConfig setSoBusyPoll(int loopMicros) {, +        try {, +            channel.socket.setSoBusyPoll(loopMicros);, +            return this;, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +    /**, +++ b/transport-native-epoll/src/main/c/netty_epoll_linuxsocket.c, +// SO_BUSY_POLL is defined in linux 3.11. We define this here so older kernels can compile., +#ifndef SO_BUSY_POLL, +#define SO_BUSY_POLL 46, +#endif, +]