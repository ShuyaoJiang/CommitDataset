[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyDataFrame.java, + * Copyright 2013 The Netty Project, +import io.netty.buffer.IllegalBufferAccessException;, +public class DefaultSpdyDataFrame extends DefaultSpdyStreamFrame implements SpdyDataFrame {, +    private final ByteBuf data;, +        super(streamId);, +        if (data == null) {, +            throw new NullPointerException("data");, +        }, +        this.data = validate(data);, +        super.setStreamId(streamId);, +        super.setLast(last);, +    public ByteBuf content() {, +        if (data.refCnt() <= 0) {, +            throw new IllegalBufferAccessException();, +        }, +        return data;, +    }, +, +    @Override, +    public SpdyDataFrame copy() {, +        SpdyDataFrame frame = new DefaultSpdyDataFrame(getStreamId(), content().copy());, +    public int refCnt() {, +        return data.refCnt();, +    }, +, +    @Override, +        data.retain();, +        data.retain(increment);, +    public boolean release() {, +        return data.release();, +    }, +, +    @Override, +    public boolean release(int decrement) {, +        return data.release(decrement);, +    }, +, +    @Override, +        buf.append(getStreamId());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyDataFrame.java, + * Copyright 2013 The Netty Project, +import io.netty.buffer.IllegalBufferAccessException;, +public class DefaultSpdyDataFrame extends DefaultSpdyStreamFrame implements SpdyDataFrame {, +    private final ByteBuf data;, +        super(streamId);, +        if (data == null) {, +            throw new NullPointerException("data");, +        }, +        this.data = validate(data);, +        super.setStreamId(streamId);, +        super.setLast(last);, +    public ByteBuf content() {, +        if (data.refCnt() <= 0) {, +            throw new IllegalBufferAccessException();, +        }, +        return data;, +    }, +, +    @Override, +    public SpdyDataFrame copy() {, +        SpdyDataFrame frame = new DefaultSpdyDataFrame(getStreamId(), content().copy());, +    public int refCnt() {, +        return data.refCnt();, +    }, +, +    @Override, +        data.retain();, +        data.retain(increment);, +    public boolean release() {, +        return data.release();, +    }, +, +    @Override, +    public boolean release(int decrement) {, +        return data.release(decrement);, +    }, +, +    @Override, +        buf.append(getStreamId());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyGoAwayFrame.java, + * Copyright 2013 The Netty Project, +     * @param status           the status of this frame, +        buf.append(getLastGoodStreamId());, +        buf.append(getStatus().toString());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyDataFrame.java, + * Copyright 2013 The Netty Project, +import io.netty.buffer.IllegalBufferAccessException;, +public class DefaultSpdyDataFrame extends DefaultSpdyStreamFrame implements SpdyDataFrame {, +    private final ByteBuf data;, +        super(streamId);, +        if (data == null) {, +            throw new NullPointerException("data");, +        }, +        this.data = validate(data);, +        super.setStreamId(streamId);, +        super.setLast(last);, +    public ByteBuf content() {, +        if (data.refCnt() <= 0) {, +            throw new IllegalBufferAccessException();]