[+++ b/common/src/main/java/io/netty/util/internal/PlatformDependent0.java, +        if (length == 0) {, +            return true;, +        }, +        int remainingBytes = length & 7;, +, +        if (remainingBytes >= 4) {, +            remainingBytes -= 4;, +            if (UNSAFE.getInt(bytes1, baseOffset1 + remainingBytes) !=, +                UNSAFE.getInt(bytes2, baseOffset2 + remainingBytes)) {, +                return false;, +        if (remainingBytes >= 2) {, +            return UNSAFE.getChar(bytes1, baseOffset1) == UNSAFE.getChar(bytes2, baseOffset2) &&, +                   (remainingBytes == 2 || bytes1[startPos1 + 2] == bytes2[startPos2 + 2]);, +        }, +        return bytes1[startPos1] == bytes2[startPos2];, +    }, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent0.java, +        if (length == 0) {, +            return true;, +        }, +        int remainingBytes = length & 7;, +, +        if (remainingBytes >= 4) {, +            remainingBytes -= 4;, +            if (UNSAFE.getInt(bytes1, baseOffset1 + remainingBytes) !=, +                UNSAFE.getInt(bytes2, baseOffset2 + remainingBytes)) {, +                return false;, +        if (remainingBytes >= 2) {, +            return UNSAFE.getChar(bytes1, baseOffset1) == UNSAFE.getChar(bytes2, baseOffset2) &&, +                   (remainingBytes == 2 || bytes1[startPos1 + 2] == bytes2[startPos2 + 2]);, +        }, +        return bytes1[startPos1] == bytes2[startPos2];, +    }, +++ b/microbench/src/main/java/io/netty/microbench/internal/PlatformDependentBenchmark.java, +import java.util.concurrent.TimeUnit;, +import org.openjdk.jmh.annotations.OutputTimeUnit;, +    @BenchmarkMode(Mode.AverageTime), +    @OutputTimeUnit(TimeUnit.NANOSECONDS), +    @BenchmarkMode(Mode.AverageTime), +    @OutputTimeUnit(TimeUnit.NANOSECONDS)]