[+++ b/common/src/main/java/io/netty/util/concurrent/ImmediateEventExecutor.java, +++ b/common/src/main/java/io/netty/util/concurrent/ImmediateEventExecutor.java, +++ b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java, +import io.netty.util.concurrent.GlobalEventExecutor;, +    static final ChannelGroup channels = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);, +++ b/common/src/main/java/io/netty/util/concurrent/ImmediateEventExecutor.java, +++ b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java, +import io.netty.util.concurrent.GlobalEventExecutor;, +    static final ChannelGroup channels = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/udt/UDTClientServerConnectionTest.java, +import io.netty.util.concurrent.DefaultThreadFactory;, +import io.netty.util.concurrent.GlobalEventExecutor;, +import java.util.concurrent.ThreadFactory;, +            final ThreadFactory clientFactory = new DefaultThreadFactory("client");, +        final ChannelGroup group = new DefaultChannelGroup("server group", GlobalEventExecutor.INSTANCE);, +            final ThreadFactory acceptFactory = new DefaultThreadFactory("accept");, +            final ThreadFactory serverFactory = new DefaultThreadFactory("server");, +                    if (group.isEmpty()) {, +     * wait-time = {@code WAIT_COUNT} * {@value #WAIT_SLEEP}, +++ b/common/src/main/java/io/netty/util/concurrent/ImmediateEventExecutor.java, +++ b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java, +import io.netty.util.concurrent.GlobalEventExecutor;, +    static final ChannelGroup channels = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/udt/UDTClientServerConnectionTest.java, +import io.netty.util.concurrent.DefaultThreadFactory;, +import io.netty.util.concurrent.GlobalEventExecutor;, +import java.util.concurrent.ThreadFactory;, +            final ThreadFactory clientFactory = new DefaultThreadFactory("client");, +        final ChannelGroup group = new DefaultChannelGroup("server group", GlobalEventExecutor.INSTANCE);, +            final ThreadFactory acceptFactory = new DefaultThreadFactory("accept");, +            final ThreadFactory serverFactory = new DefaultThreadFactory("server");, +                    if (group.isEmpty()) {, +     * wait-time = {@code WAIT_COUNT} * {@value #WAIT_SLEEP}, +++ b/transport/src/main/java/io/netty/channel/group/DefaultChannelGroup.java, +++ b/common/src/main/java/io/netty/util/concurrent/ImmediateEventExecutor.java, +++ b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java, +import io.netty.util.concurrent.GlobalEventExecutor;, +    static final ChannelGroup channels = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/udt/UDTClientServerConnectionTest.java, +import io.netty.util.concurrent.DefaultThreadFactory;, +import io.netty.util.concurrent.GlobalEventExecutor;, +import java.util.concurrent.ThreadFactory;, +            final ThreadFactory clientFactory = new DefaultThreadFactory("client");, +        final ChannelGroup group = new DefaultChannelGroup("server group", GlobalEventExecutor.INSTANCE);, +            final ThreadFactory acceptFactory = new DefaultThreadFactory("accept");, +            final ThreadFactory serverFactory = new DefaultThreadFactory("server");, +                    if (group.isEmpty()) {, +     * wait-time = {@code WAIT_COUNT} * {@value #WAIT_SLEEP}, +++ b/transport/src/main/java/io/netty/channel/group/DefaultChannelGroup.java, +++ b/transport/src/main/java/io/netty/channel/group/DefaultChannelGroupFuture.java, +        if (e != null && e != ImmediateEventExecutor.INSTANCE && e.inEventLoop()) {, +++ b/common/src/main/java/io/netty/util/concurrent/ImmediateEventExecutor.java, +++ b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java, +import io.netty.util.concurrent.GlobalEventExecutor;, +    static final ChannelGroup channels = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/udt/UDTClientServerConnectionTest.java, +import io.netty.util.concurrent.DefaultThreadFactory;, +import io.netty.util.concurrent.GlobalEventExecutor;, +import java.util.concurrent.ThreadFactory;, +            final ThreadFactory clientFactory = new DefaultThreadFactory("client");, +        final ChannelGroup group = new DefaultChannelGroup("server group", GlobalEventExecutor.INSTANCE);, +            final ThreadFactory acceptFactory = new DefaultThreadFactory("accept");, +            final ThreadFactory serverFactory = new DefaultThreadFactory("server");, +                    if (group.isEmpty()) {, +     * wait-time = {@code WAIT_COUNT} * {@value #WAIT_SLEEP}, +++ b/transport/src/main/java/io/netty/channel/group/DefaultChannelGroup.java, +++ b/transport/src/main/java/io/netty/channel/group/DefaultChannelGroupFuture.java, +        if (e != null && e != ImmediateEventExecutor.INSTANCE && e.inEventLoop()) {, +++ b/transport/src/test/java/io/netty/channel/group/DefaultChannnelGroupTest.java, +import io.netty.util.concurrent.GlobalEventExecutor;, +        final ChannelGroup allChannels = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);, +++ b/common/src/main/java/io/netty/util/concurrent/ImmediateEventExecutor.java, +++ b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java, +import io.netty.util.concurrent.GlobalEventExecutor;, +    static final ChannelGroup channels = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);, +++ b/testsuite/src/test/java/io/netty/testsuite/transport/udt/UDTClientServerConnectionTest.java, +import io.netty.util.concurrent.DefaultThreadFactory;, +import io.netty.util.concurrent.GlobalEventExecutor;, +import java.util.concurrent.ThreadFactory;, +            final ThreadFactory clientFactory = new DefaultThreadFactory("client");, +        final ChannelGroup group = new DefaultChannelGroup("server group", GlobalEventExecutor.INSTANCE);, +            final ThreadFactory acceptFactory = new DefaultThreadFactory("accept");, +            final ThreadFactory serverFactory = new DefaultThreadFactory("server");, +                    if (group.isEmpty()) {, +     * wait-time = {@code WAIT_COUNT} * {@value #WAIT_SLEEP}, +++ b/transport/src/main/java/io/netty/channel/group/DefaultChannelGroup.java, +++ b/transport/src/main/java/io/netty/channel/group/DefaultChannelGroupFuture.java, +        if (e != null && e != ImmediateEventExecutor.INSTANCE && e.inEventLoop()) {, +++ b/transport/src/test/java/io/netty/channel/group/DefaultChannnelGroupTest.java, +import io.netty.util.concurrent.GlobalEventExecutor;, +        final ChannelGroup allChannels = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);, +++ b/transport/src/test/java/io/netty/channel/nio/NioDatagramChannelTest.java, +import io.netty.util.concurrent.GlobalEventExecutor;, +        DefaultChannelGroup channelGroup = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);]