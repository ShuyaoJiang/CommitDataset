[+++ b/src/main/java/org/jboss/netty/handler/execution/MemoryAwareThreadPoolExecutor.java, +    private final Limiter totalLimiter;, +                objectSizeEstimator, maxChannelMemorySize);, +, +        if (maxTotalMemorySize == 0) {, +            totalLimiter = null;, +        } else {, +            totalLimiter = new Limiter(maxTotalMemorySize);, +        }, +                settings.maxChannelMemorySize);, +                maxChannelMemorySize);, +        return totalLimiter.limit;, +     * @deprecated <tt>maxTotalMemorySize</tt> is not modifiable anymore., +    @Deprecated, +        increaseCounter(command);, +    protected void increaseCounter(Runnable task) {, +            return;, +        if (totalLimiter != null) {, +            totalLimiter.increase(increment);, +        }, +        if (totalLimiter != null) {, +            totalLimiter.decrease(increment);, +                 long maxChannelMemorySize) {, +, +, +    private static class Limiter {, +, +        final long limit;, +        private long counter;, +        private int waiters;, +, +        Limiter(long limit) {, +            super();, +            this.limit = limit;, +        }, +, +        synchronized void increase(long amount) {, +            while (counter >= limit) {, +                waiters ++;, +                try {, +                    wait();, +                } catch (InterruptedException e) {, +                    // Ignore, +                } finally {, +                    waiters --;, +                }, +            }, +            counter += amount;, +        }, +, +        synchronized void decrease(long amount) {, +            counter -= amount;, +            if (counter < limit && waiters > 0) {, +                notifyAll();, +            }, +        }, +    }]