[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramChannel.java, + * @author The Netty Project (netty-dev@lists.jboss.org), + * @author Daniel Bevenius (dbevenius@jboss.com), + * @version $Rev$, $Date$, +    private static final InternalLogger logger = InternalLoggerFactory, +            .getInstance(NioDatagramChannel.class);, +     * Monitor object to synchronize access to InterestedOps., +     * Monitor object for synchronizing access to the {@link WriteBufferQueue}., +     * WriteTask that performs write operations., +     * Queue of write {@link MessageEvent}s., +     * Keeps track of the highWaterMark., +     * The current write {@link MessageEvent}, +     * The current write index., +     * Boolean that indicates that write operation is in progress. , +            final int messageSize = ((ChannelBuffer) e.getMessage()), +                    .readableBytes();, +            final int newWriteBufferSize = writeBufferSize, +                    .addAndGet(messageSize);, +                final int messageSize = ((ChannelBuffer) e.getMessage()), +                        .readableBytes();, +                final int newWriteBufferSize = writeBufferSize, +                        .addAndGet(-messageSize);, +                final int lowWaterMark = getConfig(), +                        .getWriteBufferLowWaterMark();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramChannel.java, + * @author The Netty Project (netty-dev@lists.jboss.org), + * @author Daniel Bevenius (dbevenius@jboss.com), + * @version $Rev$, $Date$, +    private static final InternalLogger logger = InternalLoggerFactory, +            .getInstance(NioDatagramChannel.class);, +     * Monitor object to synchronize access to InterestedOps., +     * Monitor object for synchronizing access to the {@link WriteBufferQueue}., +     * WriteTask that performs write operations., +     * Queue of write {@link MessageEvent}s., +     * Keeps track of the highWaterMark., +     * The current write {@link MessageEvent}, +     * The current write index., +     * Boolean that indicates that write operation is in progress. , +            final int messageSize = ((ChannelBuffer) e.getMessage()), +                    .readableBytes();, +            final int newWriteBufferSize = writeBufferSize, +                    .addAndGet(messageSize);, +                final int messageSize = ((ChannelBuffer) e.getMessage()), +                        .readableBytes();, +                final int newWriteBufferSize = writeBufferSize, +                        .addAndGet(-messageSize);, +                final int lowWaterMark = getConfig(), +                        .getWriteBufferLowWaterMark();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramChannelFactory.java, + * @author The Netty Project (netty-dev@lists.jboss.org), + * @author Daniel Bevenius (dbevenius@jboss.com), + * @version $Rev$, $Date$, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramChannel.java, + * @author The Netty Project (netty-dev@lists.jboss.org), + * @author Daniel Bevenius (dbevenius@jboss.com), + * @version $Rev$, $Date$, +    private static final InternalLogger logger = InternalLoggerFactory, +            .getInstance(NioDatagramChannel.class);, +     * Monitor object to synchronize access to InterestedOps., +     * Monitor object for synchronizing access to the {@link WriteBufferQueue}., +     * WriteTask that performs write operations., +     * Queue of write {@link MessageEvent}s., +     * Keeps track of the highWaterMark., +     * The current write {@link MessageEvent}, +     * The current write index., +     * Boolean that indicates that write operation is in progress. , +            final int messageSize = ((ChannelBuffer) e.getMessage()), +                    .readableBytes();, +            final int newWriteBufferSize = writeBufferSize, +                    .addAndGet(messageSize);, +                final int messageSize = ((ChannelBuffer) e.getMessage()), +                        .readableBytes();, +                final int newWriteBufferSize = writeBufferSize, +                        .addAndGet(-messageSize);, +                final int lowWaterMark = getConfig(), +                        .getWriteBufferLowWaterMark();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramChannelFactory.java, + * @author The Netty Project (netty-dev@lists.jboss.org), + * @author Daniel Bevenius (dbevenius@jboss.com), + * @version $Rev$, $Date$, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramPipelineSink.java, +import static org.jboss.netty.channel.Channels.fireChannelBound;, +import static org.jboss.netty.channel.Channels.fireChannelClosed;, +import static org.jboss.netty.channel.Channels.fireChannelUnbound;, +import static org.jboss.netty.channel.Channels.fireExceptionCaught;, + * @author The Netty Project (netty-dev@lists.jboss.org), + * @author Daniel Bevenius (dbevenius@jboss.com), + * @version $Rev$, $Date$, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramChannel.java, + * @author The Netty Project (netty-dev@lists.jboss.org), + * @author Daniel Bevenius (dbevenius@jboss.com), + * @version $Rev$, $Date$, +    private static final InternalLogger logger = InternalLoggerFactory, +            .getInstance(NioDatagramChannel.class);, +     * Monitor object to synchronize access to InterestedOps., +     * Monitor object for synchronizing access to the {@link WriteBufferQueue}., +     * WriteTask that performs write operations., +     * Queue of write {@link MessageEvent}s., +     * Keeps track of the highWaterMark., +     * The current write {@link MessageEvent}]