[+++ b/common/src/main/java/io/netty/util/Mapping.java, +/*, + * Copyright 2014 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.util;, +, +/**, + * An mapping which maintains a relationship from type of IN to type of OUT., + */, +public interface Mapping<IN, OUT> {, +, +    /**, +     * Returns mapped value of input., +     */, +    OUT map(IN input);, +}, +++ b/common/src/main/java/io/netty/util/Mapping.java, +/*, + * Copyright 2014 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.util;, +, +/**, + * An mapping which maintains a relationship from type of IN to type of OUT., + */, +public interface Mapping<IN, OUT> {, +, +    /**, +     * Returns mapped value of input., +     */, +    OUT map(IN input);, +}, +++ b/handler/src/main/java/io/netty/handler/ssl/DomainNameMapping.java, +/*, + * Copyright 2014 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.handler.ssl;, +, +import io.netty.util.Mapping;, +import io.netty.util.internal.logging.InternalLogger;, +import io.netty.util.internal.logging.InternalLoggerFactory;, +, +import java.net.IDN;, +import java.util.LinkedHashMap;, +import java.util.Map;, +import java.util.regex.Pattern;, +, +/**, + * <p>This class maps a domain name to a configured {@link SslContext}.</p>, + *, + * <p>DNS wildcard is supported as hostname, so you can use {@code *.netty.io} to match both {@code netty.io}, + * and {@code downloads.netty.io}.</p>, + */, +public class DomainNameMapping implements Mapping<String, SslContext> {, +, +    private static final InternalLogger logger =, +            InternalLoggerFactory.getInstance(DomainNameMapping.class);, +, +    private static final Pattern DNS_WILDCARD_PATTERN = Pattern.compile("^\\*\\..*");, +, +    private final Map<String, SslContext> userProvidedContexts;, +, +    private final SslContext defaultContext;, +]