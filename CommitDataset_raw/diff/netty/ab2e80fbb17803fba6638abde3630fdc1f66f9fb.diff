[+++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DnsQueryEncoder.java, +            encodeQuestion(question, CharsetUtil.US_ASCII, buf);, +        }, +        for (DnsResource resource: query.additionalResources()) {, +            encodeResource(resource, CharsetUtil.US_ASCII, buf);, +        buf.writeShort(0); // answerCount, +        buf.writeShort(0); // authorityResourceCount, +        buf.writeShort(header.additionalResourceCount());, +        encodeName(question.name(), charset, buf);, +        buf.writeShort(question.type().intValue());, +        buf.writeShort(question.dnsClass().intValue());, +    }, +, +    private static void encodeResource(DnsResource resource, Charset charset, ByteBuf buf) {, +        encodeName(resource.name(), charset, buf);, +, +        buf.writeShort(resource.type().intValue());, +        buf.writeShort(resource.dnsClass().intValue());, +        buf.writeInt((int) resource.timeToLive());, +, +        ByteBuf content = resource.content();, +        int contentLen = content.readableBytes();, +, +        buf.writeShort(contentLen);, +        buf.writeBytes(content, content.readerIndex(), contentLen);, +    }, +, +    private static void encodeName(String name, Charset charset, ByteBuf buf) {, +        String[] parts = StringUtil.split(name, '.');, +            final int partLen = part.length();, +            if (partLen == 0) {, +                continue;, +            }, +            buf.writeByte(partLen);]