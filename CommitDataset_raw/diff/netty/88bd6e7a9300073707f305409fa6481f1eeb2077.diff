[+++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +    private static final int ADDRESS_SIZE = addressSize0();, +, +     * Return the address size of the OS., +     * 4 (for 32 bits systems ) and 8 (for 64 bits systems)., +     */, +    public static int addressSize() {, +        return ADDRESS_SIZE;, +    }, +, +    public static long allocateMemory(long size) {, +        return PlatformDependent0.allocateMemory(size);, +    }, +, +    public static void freeMemory(long address) {, +        PlatformDependent0.freeMemory(address);, +    }, +, +    /**, +    private static int addressSize0() {, +        if (!hasUnsafe()) {, +            return -1;, +        }, +        return PlatformDependent0.addressSize();, +    }, +, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +    private static final int ADDRESS_SIZE = addressSize0();, +, +     * Return the address size of the OS., +     * 4 (for 32 bits systems ) and 8 (for 64 bits systems)., +     */, +    public static int addressSize() {, +        return ADDRESS_SIZE;, +    }, +, +    public static long allocateMemory(long size) {, +        return PlatformDependent0.allocateMemory(size);, +    }, +, +    public static void freeMemory(long address) {, +        PlatformDependent0.freeMemory(address);, +    }, +, +    /**, +    private static int addressSize0() {, +        if (!hasUnsafe()) {, +            return -1;, +        }, +        return PlatformDependent0.addressSize();, +    }, +, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent0.java, +    static int addressSize() {, +        return UNSAFE.addressSize();, +    }, +, +    static long allocateMemory(long size) {, +        return UNSAFE.allocateMemory(size);, +    }, +, +    static void freeMemory(long address) {, +        UNSAFE.freeMemory(address);, +    }, +, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +    private static final int ADDRESS_SIZE = addressSize0();, +, +     * Return the address size of the OS., +     * 4 (for 32 bits systems ) and 8 (for 64 bits systems)., +     */, +    public static int addressSize() {, +        return ADDRESS_SIZE;, +    }, +, +    public static long allocateMemory(long size) {, +        return PlatformDependent0.allocateMemory(size);, +    }, +, +    public static void freeMemory(long address) {, +        PlatformDependent0.freeMemory(address);, +    }, +, +    /**, +    private static int addressSize0() {, +        if (!hasUnsafe()) {, +            return -1;, +        }, +        return PlatformDependent0.addressSize();, +    }, +, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent0.java, +    static int addressSize() {, +        return UNSAFE.addressSize();, +    }, +, +    static long allocateMemory(long size) {, +        return UNSAFE.allocateMemory(size);, +    }, +]