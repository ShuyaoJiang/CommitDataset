[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseStatus.java, +        return new HttpResponseStatus(code);, +    private HttpStatusClass codeClass;, +     * Creates a new instance with the specified {@code code} and the auto-generated default reason phrase., +     */, +    private HttpResponseStatus(int code) {, +        this(code, HttpStatusClass.valueOf(code).defaultReasonPhrase() + " (" + code + ')', false);, +    }, +, +    /**, +     * Creates a new instance with the specified {@code code} and its {@code reasonPhrase}., +    /**, +     * Returns the class of this {@link HttpResponseStatus}, +     */, +    public HttpStatusClass codeClass() {, +        HttpStatusClass type = this.codeClass;, +        if (type == null) {, +            this.codeClass = type = HttpStatusClass.valueOf(code);, +        }, +        return type;, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseStatus.java, +        return new HttpResponseStatus(code);, +    private HttpStatusClass codeClass;, +     * Creates a new instance with the specified {@code code} and the auto-generated default reason phrase., +     */, +    private HttpResponseStatus(int code) {, +        this(code, HttpStatusClass.valueOf(code).defaultReasonPhrase() + " (" + code + ')', false);, +    }, +, +    /**, +     * Creates a new instance with the specified {@code code} and its {@code reasonPhrase}., +    /**, +     * Returns the class of this {@link HttpResponseStatus}, +     */, +    public HttpStatusClass codeClass() {, +        HttpStatusClass type = this.codeClass;, +        if (type == null) {, +            this.codeClass = type = HttpStatusClass.valueOf(code);, +        }, +        return type;, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpStatusClass.java, +/*, + * Copyright 2014 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +, +package io.netty.handler.codec.http;, +, +import io.netty.handler.codec.AsciiString;, +, +/**, + * The class of HTTP status., + */, +public enum HttpStatusClass {, +    /**, +     * The informational class (1xx), +     */, +    INFORMATIONAL(100, 200, "Informational"),, +    /**, +     * The success class (2xx), +     */, +    SUCCESS(200, 300, "Success"),, +    /**, +     * The redirection class (3xx), +     */, +    REDIRECTION(300, 400, "Redirection"),, +    /**, +     * The client error class (4xx), +     */, +    CLIENT_ERROR(400, 500, "Client Error"),, +    /**, +     * The server error class (5xx), +     */, +    SERVER_ERROR(500, 600, "Server Error"),, +    /**, +     * The unknown class, +     */, +    UNKNOWN(0, 0, "Unknown Status") {, +        @Override, +        public boolean contains(int code) {, +            return code < 100 || code >= 600;, +        }, +    };, +, +    /**]