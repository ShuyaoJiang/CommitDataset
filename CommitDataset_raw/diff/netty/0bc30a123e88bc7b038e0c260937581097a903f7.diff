[+++ b/buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java, +        ByteBuf value = directBuffer(BLOCK_SIZE * 2);, +        ByteBuf expectedValue = directBuffer(BLOCK_SIZE * 2);, +        value.release();, +        expectedValue.release();, +        ByteBuf value = directBuffer(BLOCK_SIZE * 2);, +        ByteBuf expectedValue = wrappedBuffer(expectedValueContent);, +        value.release();, +        expectedValue.release();, +        ByteBuf value = directBuffer(BLOCK_SIZE * 2);, +        ByteBuf expectedValue = wrappedBuffer(expectedValueContent);, +        value.release();, +        expectedValue.release();, +        ByteBuf copy = copiedBuffer(buffer);, +        copy.release();, +        ByteBuf copy = copiedBuffer(buffer);, +        copy.release();, +        ByteBuf copy = buffer.copy();, +        copy.release();, +        ByteBuf copied = copiedBuffer("Hello, World!", CharsetUtil.ISO_8859_1);, +        buffer.writeBytes(copied);, +        copied.release();, +        ByteBuf elemA = buffer(15);, +        ByteBuf elemB = directBuffer(15);, +        ByteBuf elemACopy = elemA.copy();, +        assertTrue(set.contains(elemACopy));, +        ByteBuf elemBCopy = elemB.copy();, +        elemA.release();, +        elemB.release();, +        elemACopy.release();, +        elemBCopy.release();, +        ByteBuf buffer = newBuffer(2);, +        buffer.release();, +        final ByteBuf buffer = newBuffer(8);, +        buffer.release();, +        final ByteBuf buffer = newBuffer(8);, +        buffer.release();, +        final ByteBuf buffer = newBuffer(8);, +        buffer.release();, +        final ByteBuf buffer = newBuffer(8);, +        try {, +        } finally {, +            buffer.release();, +        }, +        final ByteBuf buffer = newBuffer(8);, +        buffer.release();, +        ByteBuf buffer = newBuffer(0).order(LITTLE_ENDIAN);, +        buffer.release();, +        ByteBuf buffer = buffer(8);, +        try {, +            releasedBuffer().getBytes(0, buffer);, +        } finally {, +            buffer.release();, +        }, +        ByteBuf buffer = buffer();, +        try {, +            releasedBuffer().getBytes(0, buffer, 1);, +        } finally {, +            buffer.release();, +        }, +        ByteBuf buffer = buffer();, +        try {, +            releasedBuffer().getBytes(0, buffer, 0, 1);, +        } finally {, +            buffer.release();, +        }, +        ByteBuf buffer = buffer();, +        try {, +            releasedBuffer().setBytes(0, buffer);, +        } finally {, +            buffer.release();, +        }, +        ByteBuf buffer = buffer();, +        try {, +            releasedBuffer().setBytes(0, buffer, 1);, +        } finally {, +            buffer.release();, +        }, +        ByteBuf buffer = buffer();, +        try {, +            releasedBuffer().setBytes(0, buffer, 0, 1);, +        } finally {, +            buffer.release();, +        }, +        ByteBuf buffer = buffer(8);, +        try {, +            releasedBuffer().readBytes(buffer);, +        } finally {, +            buffer.release();, +        }, +        ByteBuf buffer = buffer(8);, +        try {, +            releasedBuffer().readBytes(buffer);, +        } finally {, +            buffer.release();, +        }, +        ByteBuf buffer = buffer(8);, +        try {, +            releasedBuffer().readBytes(buffer, 0, 1);, +        } finally {]