[+++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            // We can only calculate the offset if Unsafe is present as otherwise directBufferAddress(...) will, +            // throw an NPE., +            return HAS_UNSAFE ?, +                    (int) (PlatformDependent.directBufferAddress(memory) & directMemoryCacheAlignmentMask) : 0;, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            // We can only calculate the offset if Unsafe is present as otherwise directBufferAddress(...) will, +            // throw an NPE., +            return HAS_UNSAFE ?, +                    (int) (PlatformDependent.directBufferAddress(memory) & directMemoryCacheAlignmentMask) : 0;, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBufAllocator.java, +        if (directMemoryCacheAlignment > 0 && !isDirectMemoryCacheAlignmentSupported()) {, +            throw new IllegalArgumentException("directMemoryCacheAlignment is not supported");, +        }, +    /**, +     * Return {@code true} if direct memory cache aligment is supported, {@code false} otherwise., +     */, +    public static boolean isDirectMemoryCacheAlignmentSupported() {, +        return PlatformDependent.hasUnsafe();, +    }, +, +++ b/buffer/src/main/java/io/netty/buffer/PoolArena.java, +            // We can only calculate the offset if Unsafe is present as otherwise directBufferAddress(...) will, +            // throw an NPE., +            return HAS_UNSAFE ?, +                    (int) (PlatformDependent.directBufferAddress(memory) & directMemoryCacheAlignmentMask) : 0;, +++ b/buffer/src/main/java/io/netty/buffer/PooledByteBufAllocator.java, +        if (directMemoryCacheAlignment > 0 && !isDirectMemoryCacheAlignmentSupported()) {, +            throw new IllegalArgumentException("directMemoryCacheAlignment is not supported");, +        }, +    /**, +     * Return {@code true} if direct memory cache aligment is supported, {@code false} otherwise., +     */, +    public static boolean isDirectMemoryCacheAlignmentSupported() {, +        return PlatformDependent.hasUnsafe();, +    }, +, +++ b/buffer/src/test/java/io/netty/buffer/PooledByteBufAllocatorTest.java, +import org.junit.Assume;, +        Assume.assumeTrue(PooledByteBufAllocator.isDirectMemoryCacheAlignmentSupported());]