[+++ b/common/src/main/java/io/netty/util/internal/MpscLinkedQueue.java, +import java.util.ArrayList;, +import java.util.List;, +            // If value == null it means that clearMaybe() was called on the MpscLinkedQueueNode., +            if (n == null || n.value() == null) {, +            MpscLinkedQueueNode<E> next = n.next();, +            if (n == next) {, +                break;, +            }, +            n = next;, +            if (++ count == Integer.MAX_VALUE) {, +                // Guard against overflow of integer., +                break;, +            }, +            E value = n.value();, +            // If value == null it means that clearMaybe() was called on the MpscLinkedQueueNode., +            if (value == null) {, +                return false;, +            }, +            if (value == o) {, +            MpscLinkedQueueNode<E> next = n.next();, +            if (n == next) {, +                break;, +            }, +            n = next;, +        return new ReadOnlyIterator<E>(toList().iterator());, +    private List<E> toList(int initialCapacity) {, +        return toList(new ArrayList<E>(initialCapacity));, +    }, +, +    private List<E> toList() {, +        return toList(new ArrayList<E>());, +    }, +, +    private List<E> toList(List<E> elements) {, +        MpscLinkedQueueNode<E> n = peekNode();, +        for (;;) {, +            if (n == null) {, +                break;, +            }, +            E value = n.value();, +            if (value == null) {, +                break;, +            }, +            if (!elements.add(value)) {, +                // Seems like there is no space left, break here., +                break;, +            }, +            MpscLinkedQueueNode<E> next = n.next();, +            if (n == next) {, +                break;, +            }, +            n = next;, +        }, +        return elements;, +    }, +, +        return toList().toArray();, +        return toList(a.length).toArray(a);]