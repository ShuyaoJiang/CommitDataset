[+++ b/testsuite/src/main/java/io/netty/testsuite/websockets/autobahn/AutobahnServer.java, + * A Web Socket echo server for running the, + * <a href="http://autobahn.ws/testsuite/">autobahn test suite</a>, +++ b/testsuite/src/main/java/io/netty/testsuite/websockets/autobahn/AutobahnServer.java, + * A Web Socket echo server for running the, + * <a href="http://autobahn.ws/testsuite/">autobahn test suite</a>, +++ b/transport/src/main/java/io/netty/channel/ChannelFuture.java, + *                                 +---->      isDone() = true      |, + * +--------------------------+    |    |   isSuccess() = true      |, + * |      isDone() = false    |    |    +---------------------------+, + * |   isSuccess() = false    |----+---->      isDone() = true      |, + * | isCancelled() = false    |    |    |       cause() = non-null  |, + *                                 +---->      isDone() = true      |, + *                                      | isCancelled() = true      |, + * The event handler methods in {@link ChannelHandler} are usually called by, + * for might never complete because {@link #await()} can block the I/O, + * public void channelRead({@link ChannelHandlerContext} ctx, Object msg) {, + * public void channelRead({@link ChannelHandlerContext} ctx, Object msg) {, +++ b/testsuite/src/main/java/io/netty/testsuite/websockets/autobahn/AutobahnServer.java, + * A Web Socket echo server for running the, + * <a href="http://autobahn.ws/testsuite/">autobahn test suite</a>, +++ b/transport/src/main/java/io/netty/channel/ChannelFuture.java, + *                                 +---->      isDone() = true      |, + * +--------------------------+    |    |   isSuccess() = true      |, + * |      isDone() = false    |    |    +---------------------------+, + * |   isSuccess() = false    |----+---->      isDone() = true      |, + * | isCancelled() = false    |    |    |       cause() = non-null  |, + *                                 +---->      isDone() = true      |, + *                                      | isCancelled() = true      |, + * The event handler methods in {@link ChannelHandler} are usually called by, + * for might never complete because {@link #await()} can block the I/O, + * public void channelRead({@link ChannelHandlerContext} ctx, Object msg) {, + * public void channelRead({@link ChannelHandlerContext} ctx, Object msg) {, +++ b/transport/src/main/java/io/netty/channel/ChannelPipeline.java, +     * Inserts {@link ChannelHandler}s at the first position of this pipeline., +     * Inserts {@link ChannelHandler}s at the first position of this pipeline., +     * Inserts {@link ChannelHandler}s at the first position of this pipeline., +     * Inserts {@link ChannelHandler}s at the last position of this pipeline., +     * Inserts {@link ChannelHandler}s at the last position of this pipeline., +     * Inserts {@link ChannelHandler}s at the last position of this pipeline., +++ b/testsuite/src/main/java/io/netty/testsuite/websockets/autobahn/AutobahnServer.java, + * A Web Socket echo server for running the, + * <a href="http://autobahn.ws/testsuite/">autobahn test suite</a>, +++ b/transport/src/main/java/io/netty/channel/ChannelFuture.java, + *                                 +---->      isDone() = true      |, + * +--------------------------+    |    |   isSuccess() = true      |, + * |      isDone() = false    |    |    +---------------------------+, + * |   isSuccess() = false    |----+---->      isDone() = true      |, + * | isCancelled() = false    |    |    |       cause() = non-null  |, + *                                 +---->      isDone() = true      |, + *                                      | isCancelled() = true      |, + * The event handler methods in {@link ChannelHandler} are usually called by, + * for might never complete because {@link #await()} can block the I/O, + * public void channelRead({@link ChannelHandlerContext} ctx, Object msg) {, + * public void channelRead({@link ChannelHandlerContext} ctx, Object msg) {, +++ b/transport/src/main/java/io/netty/channel/ChannelPipeline.java, +     * Inserts {@link ChannelHandler}s at the first position of this pipeline., +     * Inserts {@link ChannelHandler}s at the first position of this pipeline., +     * Inserts {@link ChannelHandler}s at the first position of this pipeline., +     * Inserts {@link ChannelHandler}s at the last position of this pipeline., +     * Inserts {@link ChannelHandler}s at the last position of this pipeline., +     * Inserts {@link ChannelHandler}s at the last position of this pipeline., +++ b/transport/src/main/java/io/netty/channel/SimpleChannelInboundHandler.java, + * Be aware that depending of the constructor parameters it will release all handled messages by passing them to, +     * @param autoRelease   {@code true} if handled messages should be released automatically by passing them to, +     * @param autoRelease           {@code true} if handled messages should be released automatically by passing them to]