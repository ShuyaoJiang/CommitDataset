[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHttpEncoder.java, +        int streamId = httpHeaders.getInt(SpdyHttpHeaders.Names.STREAM_ID);, +        int associatedToStreamId = httpHeaders.getInt(SpdyHttpHeaders.Names.ASSOCIATED_TO_STREAM_ID, 0);, +        byte priority = (byte) httpHeaders.getInt(SpdyHttpHeaders.Names.PRIORITY, 0);, +        CharSequence scheme = httpHeaders.get(SpdyHttpHeaders.Names.SCHEME);, +        httpHeaders.remove(SpdyHttpHeaders.Names.STREAM_ID);, +        httpHeaders.remove(SpdyHttpHeaders.Names.ASSOCIATED_TO_STREAM_ID);, +        httpHeaders.remove(SpdyHttpHeaders.Names.PRIORITY);, +        httpHeaders.remove(SpdyHttpHeaders.Names.SCHEME);, +        frameHeaders.setObject(SpdyHeaders.HttpNames.METHOD, httpRequest.method());, +        frameHeaders.set(SpdyHeaders.HttpNames.PATH, httpRequest.uri());, +        frameHeaders.setObject(SpdyHeaders.HttpNames.VERSION, httpRequest.protocolVersion());, +        frameHeaders.set(SpdyHeaders.HttpNames.HOST, host);, +        frameHeaders.set(SpdyHeaders.HttpNames.SCHEME, scheme);, +        int streamId = httpHeaders.getInt(SpdyHttpHeaders.Names.STREAM_ID);, +        httpHeaders.remove(SpdyHttpHeaders.Names.STREAM_ID);, +        frameHeaders.setInt(SpdyHeaders.HttpNames.STATUS, httpResponse.status().code());, +        frameHeaders.setObject(SpdyHeaders.HttpNames.VERSION, httpResponse.protocolVersion());]