[+++ b/common/src/main/java/io/netty/util/ResourceLeakDetector.java, +    private final ConcurrentMap<DefaultResourceLeak, LeakEntry> allLeaks = PlatformDependent.newConcurrentHashMap();, +            super(referent, refQueue);, +            assert referent != null;, +, +            allLeaks.put(this, LeakEntry.INSTANCE);, +            return allLeaks.remove(this, LeakEntry.INSTANCE);, +, +    private static final class LeakEntry {, +        static final LeakEntry INSTANCE = new LeakEntry();, +        private static final int HASH = System.identityHashCode(INSTANCE);, +, +        private LeakEntry() { }, +, +        @Override, +        public int hashCode() {, +            return HASH;, +        }, +, +        @Override, +        public boolean equals(Object obj) {, +            return obj == this;, +        }, +    }]