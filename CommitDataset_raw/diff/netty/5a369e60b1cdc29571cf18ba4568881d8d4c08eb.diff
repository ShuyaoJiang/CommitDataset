[+++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c, +jmethodID updatePosId = NULL;, +        updatePosId = (*env)->GetMethodID(env, cls, "position", "(I)Ljava/nio/Buffer;");, +        if (updatePosId == NULL) {, +            // position method was not found.. something is wrong so bail out, +            throwRuntimeException(env, "Unable to find method ByteBuffer.position(int)");, +            return JNI_ERR;, +        }, +    if (posFieldId == NULL) {, +        (*env)->CallObjectMethod(env, jbuffer, updatePosId, pos + res);, +    } else {, +        (*env)->SetIntField(env, jbuffer, posFieldId, pos + res);, +    }, +void incrementPosition(JNIEnv * env, jobject bufObj, int written) {, +    // Get the current position using the (*env)->GetIntField if possible and fallback, +    // to slower (*env)->CallIntMethod(...) if needed, +    if (posFieldId == NULL) {, +        jint pos = (*env)->CallIntMethod(env, bufObj, posId, NULL);, +        (*env)->CallObjectMethod(env, bufObj, updatePosId, pos + written);, +    } else {, +        jint pos = (*env)->GetIntField(env, bufObj, posFieldId);, +        (*env)->SetIntField(env, bufObj, posFieldId, pos + written);, +    }, +}, +, +        throwIOException(env, exceptionMessage("Error while writev(...): ", err));, +, +    // update the position of the written buffers, +    int written = res;, +    int a;, +    for (a = 0; a < length; a++) {, +        int pos;, +        int len = iov[a].iov_len;, +        jobject bufObj = (*env)->GetObjectArrayElement(env, buffers, a + offset);, +        if (len >= written) {, +            incrementPosition(env, bufObj, written);, +            break;, +        } else {, +            incrementPosition(env, bufObj, len);, +            written -= len;, +        }, +    }, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c, +jmethodID updatePosId = NULL;, +        updatePosId = (*env)->GetMethodID(env, cls, "position", "(I)Ljava/nio/Buffer;");, +        if (updatePosId == NULL) {, +            // position method was not found.. something is wrong so bail out, +            throwRuntimeException(env, "Unable to find method ByteBuffer.position(int)");, +            return JNI_ERR;, +        }, +    if (posFieldId == NULL) {, +        (*env)->CallObjectMethod(env, jbuffer, updatePosId, pos + res);, +    } else {, +        (*env)->SetIntField(env, jbuffer, posFieldId, pos + res);, +    }, +void incrementPosition(JNIEnv * env, jobject bufObj, int written) {, +    // Get the current position using the (*env)->GetIntField if possible and fallback, +    // to slower (*env)->CallIntMethod(...) if needed, +    if (posFieldId == NULL) {, +        jint pos = (*env)->CallIntMethod(env, bufObj, posId, NULL);, +        (*env)->CallObjectMethod(env, bufObj, updatePosId, pos + written);, +    } else {, +        jint pos = (*env)->GetIntField(env, bufObj, posFieldId);, +        (*env)->SetIntField(env, bufObj, posFieldId, pos + written);, +    }, +}, +, +        throwIOException(env, exceptionMessage("Error while writev(...): ", err));, +, +    // update the position of the written buffers, +    int written = res;, +    int a;, +    for (a = 0; a < length; a++) {, +        int pos;, +        int len = iov[a].iov_len;, +        jobject bufObj = (*env)->GetObjectArrayElement(env, buffers, a + offset);, +        if (len >= written) {, +            incrementPosition(env, bufObj, written);, +            break;, +        } else {, +            incrementPosition(env, bufObj, len);, +            written -= len;, +        }, +    }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannel.java]