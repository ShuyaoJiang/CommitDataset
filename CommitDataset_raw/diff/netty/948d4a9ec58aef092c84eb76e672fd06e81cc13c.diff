[+++ b/transport/src/main/java/io/netty/channel/AbstractChannelHandlerContext.java, +    private Tasks invokeTasks;, +            Tasks tasks = next.invokeTasks;, +            if (tasks == null) {, +                next.invokeTasks = tasks = new Tasks(next);, +            executor.execute(tasks.invokeChannelReadCompleteTask);, +            Tasks tasks = next.invokeTasks;, +            if (tasks == null) {, +                next.invokeTasks = tasks = new Tasks(next);, +            executor.execute(tasks.invokeChannelWritableStateChangedTask);, +            Tasks tasks = next.invokeTasks;, +            if (tasks == null) {, +                next.invokeTasks = tasks = new Tasks(next);, +            executor.execute(tasks.invokeReadTask);, +            Tasks tasks = next.invokeTasks;, +            if (tasks == null) {, +                next.invokeTasks = tasks = new Tasks(next);, +            safeExecute(executor, tasks.invokeFlushTask, channel().voidPromise(), null);, +, +    private static final class Tasks {, +        private final AbstractChannelHandlerContext next;, +        private final Runnable invokeChannelReadCompleteTask = new Runnable() {, +            @Override, +            public void run() {, +                next.invokeChannelReadComplete();, +            }, +        };, +        private final Runnable invokeReadTask = new Runnable() {, +            @Override, +            public void run() {, +                next.invokeRead();, +            }, +        };, +        private final Runnable invokeChannelWritableStateChangedTask = new Runnable() {, +            @Override, +            public void run() {, +                next.invokeChannelWritabilityChanged();, +            }, +        };, +        private final Runnable invokeFlushTask = new Runnable() {, +            @Override, +            public void run() {, +                next.invokeFlush();, +            }, +        };, +, +        Tasks(AbstractChannelHandlerContext next) {, +            this.next = next;, +        }, +    }]