[+++ b/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java, +import java.nio.channels.ClosedChannelException;, +, +        // Make sure the handshake future is notified when a connection has, +        // been closed during handshake., +        synchronized (handshakeLock) {, +            if (handshaking) {, +                handshakeFuture.setFailure(new ClosedChannelException());, +            }, +        }, +, +++ b/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java, +import java.nio.channels.ClosedChannelException;, +, +        // Make sure the handshake future is notified when a connection has, +        // been closed during handshake., +        synchronized (handshakeLock) {, +            if (handshaking) {, +                handshakeFuture.setFailure(new ClosedChannelException());, +            }, +        }, +, +++ b/src/test/java/org/jboss/netty/handler/ssl/AbstractSocketSslEchoTest.java, +        ChannelFuture hf = cc.getPipeline().get(SslHandler.class).handshake(cc);, +        hf.awaitUninterruptibly();, +        if (!hf.isSuccess() && ch.exception.get() != null) {, +            ch.exception.get().printStackTrace();, +        }, +, +        assertTrue(hf.isSuccess());]