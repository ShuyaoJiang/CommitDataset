[+++ b/handler/src/main/java/io/netty/handler/timeout/IdleStateHandler.java, +import io.netty.channel.ChannelInitializer;, +import io.netty.channel.ChannelOperationHandler;, +import io.netty.channel.ChannelStateHandlerAdapter;, +import io.netty.channel.FileRegion;, +import java.net.SocketAddress;, + * public class MyChannelInitializer extends {@link ChannelInitializer} {, + *     public void initChannel({@link Channel} channel) {, + *         {@link Channel}.pipeline().addLast("idleStateHandler", new {@link IdleStateHandler}(60, 30, 0);, + *         {@link Channel}.pipeline().addLast("myHandler", new MyHandler());, + * public class MyHandler extends {@link ChannelHandlerAdapter} {, + *     public void userEventTriggered({@link ChannelHandlerContext} ctx, {@link Object} evt) throws {@link Exception} {, + *         if (evt instanceof {@link IdleState}} {, + *             {@link IdleState} e = ({@link IdleState}) evt;, + *                 ctx.channel().close();, + *                 ctx.channel().write(new PingMessage());, + *             }, + * bootstrap.childHandler(new MyChannelInitializer());, +public class IdleStateHandler extends ChannelStateHandlerAdapter implements ChannelOperationHandler {, +        ctx.flush(future);, +    }, +, +    @Override, +    public void bind(ChannelHandlerContext ctx, SocketAddress localAddress, ChannelFuture future) throws Exception {, +        ctx.bind(localAddress, future);, +    }, +, +    @Override, +    public void connect(ChannelHandlerContext ctx, SocketAddress remoteAddress, SocketAddress localAddress,, +                        ChannelFuture future) throws Exception {, +        ctx.connect(remoteAddress, localAddress);, +    }, +, +    @Override, +    public void disconnect(ChannelHandlerContext ctx, ChannelFuture future) throws Exception {, +        ctx.disconnect(future);, +    }, +, +    @Override, +    public void close(ChannelHandlerContext ctx, ChannelFuture future) throws Exception {, +        ctx.close(future);, +    }, +, +    @Override, +    public void deregister(ChannelHandlerContext ctx, ChannelFuture future) throws Exception {, +        ctx.deregister(future);, +    }, +, +    @Override, +    public void sendFile(ChannelHandlerContext ctx, FileRegion region, ChannelFuture future) throws Exception {, +        future.addListener(new ChannelFutureListener() {, +            @Override, +            public void operationComplete(ChannelFuture future) throws Exception {, +                lastWriteTime = System.currentTimeMillis();, +                writerIdleCount = allIdleCount = 0;, +            }, +        });, +        ctx.sendFile(region);]