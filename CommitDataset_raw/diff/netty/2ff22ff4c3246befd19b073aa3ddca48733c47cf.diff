[+++ b/transport/src/main/java/io/netty/channel/socket/nio2/AbstractAsyncChannel.java, +        // NOOP, +++ b/transport/src/main/java/io/netty/channel/socket/nio2/AbstractAsyncChannel.java, +        // NOOP, +++ b/transport/src/main/java/io/netty/channel/socket/nio2/AsyncSocketchannel.java, +        return false;, +    @Override, +        // Only one pending write can be scheduled at one time. Otherwise, +        // a PendingWriteException will be thrown. So use CAS to not run, +        // into this, +            ByteBuffer buffer = (ByteBuffer)buf.nioBuffer();, +            javaChannel().write(buffer, this, WRITE_HANDLER);, +                if (result < buf.readableBytes()) {, +                    // Update the readerIndex with the amount of read bytes, +                    buf.readerIndex(buf.readerIndex() + result);, +                } else {, +                    // not enough space in the buffer anymore so discard everything that, +                    // was read already, +                    buf.discardReadBytes();, +                    , +                }, +            , +            // Allow to have the next write pending, +            // Allow to have the next write pending]