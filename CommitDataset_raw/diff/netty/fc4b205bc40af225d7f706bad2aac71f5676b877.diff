[+++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +import io.netty.channel.ChannelOutboundMessageHandler;, +import io.netty.channel.ChannelPipeline;, +    /**, +     * The types which will be accepted by the encoder. If a received message is an other type it will be just forwared, +     * to the next {@link ChannelOutboundMessageHandler} in the {@link ChannelPipeline}, +     */, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +import io.netty.channel.ChannelOutboundMessageHandler;, +import io.netty.channel.ChannelPipeline;, +    /**, +     * The types which will be accepted by the encoder. If a received message is an other type it will be just forwared, +     * to the next {@link ChannelOutboundMessageHandler} in the {@link ChannelPipeline}, +     */, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageCodec.java, + *, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +import io.netty.channel.ChannelOutboundMessageHandler;, +import io.netty.channel.ChannelPipeline;, +    /**, +     * The types which will be accepted by the encoder. If a received message is an other type it will be just forwared, +     * to the next {@link ChannelOutboundMessageHandler} in the {@link ChannelPipeline}, +     */, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageCodec.java, + *, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +     * The types which will be accepted by the decoder. If a received message is an other type it will be just forwarded, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +import io.netty.channel.ChannelOutboundMessageHandler;, +import io.netty.channel.ChannelPipeline;, +    /**, +     * The types which will be accepted by the encoder. If a received message is an other type it will be just forwared, +     * to the next {@link ChannelOutboundMessageHandler} in the {@link ChannelPipeline}, +     */, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageCodec.java, + *, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +     * The types which will be accepted by the decoder. If a received message is an other type it will be just forwarded, +++ b/codec/src/main/java/io/netty/handler/codec/sctp/SctpInboundByteStreamHandler.java, + * A ChannelHandler which receives {@link SctpMessage}s which belong to a application protocol form a specific, + * SCTP Stream  and decode it as {@link ByteBuf}., +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +import io.netty.channel.ChannelOutboundMessageHandler;, +import io.netty.channel.ChannelPipeline;, +    /**, +     * The types which will be accepted by the encoder. If a received message is an other type it will be just forwared, +     * to the next {@link ChannelOutboundMessageHandler} in the {@link ChannelPipeline}, +     */, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageCodec.java, + *, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +     * The types which will be accepted by the decoder. If a received message is an other type it will be just forwarded, +++ b/codec/src/main/java/io/netty/handler/codec/sctp/SctpInboundByteStreamHandler.java, + * A ChannelHandler which receives {@link SctpMessage}s which belong to a application protocol form a specific, + * SCTP Stream  and decode it as {@link ByteBuf}., +++ b/codec/src/main/java/io/netty/handler/codec/sctp/SctpOutboundByteStreamHandler.java, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +import io.netty.channel.ChannelOutboundMessageHandler;, +import io.netty.channel.ChannelPipeline;, +    /**, +     * The types which will be accepted by the encoder. If a received message is an other type it will be just forwared, +     * to the next {@link ChannelOutboundMessageHandler} in the {@link ChannelPipeline}, +     */, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageCodec.java, + *, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +     * The types which will be accepted by the decoder. If a received message is an other type it will be just forwarded, +++ b/codec/src/main/java/io/netty/handler/codec/sctp/SctpInboundByteStreamHandler.java, + * A ChannelHandler which receives {@link SctpMessage}s which belong to a application protocol form a specific, + * SCTP Stream  and decode it as {@link ByteBuf}., +++ b/codec/src/main/java/io/netty/handler/codec/sctp/SctpOutboundByteStreamHandler.java, +++ b/transport/src/main/java/io/netty/channel/ChannelConfig.java, +     * public boolean setOption(ChannelOption&lt;T&gt; option, T value) {, +     *     if (super.setOption(option, value)) {, +     *     if (option.equals(additionalOption)) {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +import io.netty.channel.ChannelOutboundMessageHandler;, +import io.netty.channel.ChannelPipeline;, +    /**, +     * The types which will be accepted by the encoder. If a received message is an other type it will be just forwared, +     * to the next {@link ChannelOutboundMessageHandler} in the {@link ChannelPipeline}, +     */, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageCodec.java, + *, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +     * The types which will be accepted by the decoder. If a received message is an other type it will be just forwarded, +++ b/codec/src/main/java/io/netty/handler/codec/sctp/SctpInboundByteStreamHandler.java, + * A ChannelHandler which receives {@link SctpMessage}s which belong to a application protocol form a specific, + * SCTP Stream  and decode it as {@link ByteBuf}., +++ b/codec/src/main/java/io/netty/handler/codec/sctp/SctpOutboundByteStreamHandler.java, +++ b/transport/src/main/java/io/netty/channel/ChannelConfig.java, +     * public boolean setOption(ChannelOption&lt;T&gt; option, T value) {, +     *     if (super.setOption(option, value)) {, +     *     if (option.equals(additionalOption)) {, +++ b/transport/src/main/java/io/netty/channel/ChannelInboundMessageHandlerAdapter.java, +/**, + * {@link ChannelHandler} which handles inbound messages of a specific type., + *, + * <pre>, + *     public class StringHandler extends]