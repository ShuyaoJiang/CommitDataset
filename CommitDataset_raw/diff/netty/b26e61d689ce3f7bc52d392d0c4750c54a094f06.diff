[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                if (out.last()  instanceof LastHttpContent) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                if (out.last()  instanceof LastHttpContent) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpContentCompressorTest.java, +        assertThat(chunk, is(instanceOf(HttpContent.class)));, +        chunk = (HttpContent) ch.readOutbound();, +        assertThat(chunk, is(instanceOf(LastHttpContent.class)));, +        assertThat(chunk.content().isReadable(), is(false));, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                if (out.last()  instanceof LastHttpContent) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpContentCompressorTest.java, +        assertThat(chunk, is(instanceOf(HttpContent.class)));, +        chunk = (HttpContent) ch.readOutbound();, +        assertThat(chunk, is(instanceOf(LastHttpContent.class)));, +        assertThat(chunk.content().isReadable(), is(false));, +, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpContentEncoderTest.java, +        chunk = (HttpContent) ch.readOutbound();, +        assertThat(chunk.content().isReadable(), is(false));, +        assertThat(chunk, is(instanceOf(HttpContent.class)));, +        chunk = (HttpContent) ch.readOutbound();, +        assertThat(chunk.content().isReadable(), is(false));, +, +        HttpContent c = (HttpContent) ch.readOutbound();, +        LastHttpContent last = (LastHttpContent) ch.readOutbound();, +        assertThat(last.content().readableBytes(), is(0));, +        assertThat(chunk, is(instanceOf(HttpContent.class)));, +, +        chunk = (HttpContent) ch.readOutbound();, +        assertThat(chunk.content().isReadable(), is(false));]