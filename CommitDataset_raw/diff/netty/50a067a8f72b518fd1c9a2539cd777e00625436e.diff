[+++ b/buffer/src/test/java/io/netty/buffer/ReadOnlyByteBufTest.java, +    private static void ensureWritableIntStatusShouldFailButNotThrow(boolean force) {, +++ b/buffer/src/test/java/io/netty/buffer/ReadOnlyByteBufTest.java, +    private static void ensureWritableIntStatusShouldFailButNotThrow(boolean force) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +    private static Object continueResponse(HttpMessage start, int maxContentLength, ChannelPipeline pipeline) {, +++ b/buffer/src/test/java/io/netty/buffer/ReadOnlyByteBufTest.java, +    private static void ensureWritableIntStatusShouldFailButNotThrow(boolean force) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +    private static Object continueResponse(HttpMessage start, int maxContentLength, ChannelPipeline pipeline) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpUtilTest.java, +    private static void run100ContinueTest(final HttpVersion version, final String expectations, boolean expect) {, +    private static void run100ContinueTest(final HttpMessage message, final boolean expected) {, +    private static void runUnsupportedExpectationTest(final HttpVersion version,, +                                                      final String expectations, boolean expect) {, +    private static void runUnsupportedExpectationTest(final HttpMessage message, final boolean expected) {, +++ b/buffer/src/test/java/io/netty/buffer/ReadOnlyByteBufTest.java, +    private static void ensureWritableIntStatusShouldFailButNotThrow(boolean force) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +    private static Object continueResponse(HttpMessage start, int maxContentLength, ChannelPipeline pipeline) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpUtilTest.java, +    private static void run100ContinueTest(final HttpVersion version, final String expectations, boolean expect) {, +    private static void run100ContinueTest(final HttpMessage message, final boolean expected) {, +    private static void runUnsupportedExpectationTest(final HttpVersion version,, +                                                      final String expectations, boolean expect) {, +    private static void runUnsupportedExpectationTest(final HttpMessage message, final boolean expected) {, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2FrameReaderTest.java, +    private static void writePriorityFrame(, +++ b/buffer/src/test/java/io/netty/buffer/ReadOnlyByteBufTest.java, +    private static void ensureWritableIntStatusShouldFailButNotThrow(boolean force) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +    private static Object continueResponse(HttpMessage start, int maxContentLength, ChannelPipeline pipeline) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpUtilTest.java, +    private static void run100ContinueTest(final HttpVersion version, final String expectations, boolean expect) {, +    private static void run100ContinueTest(final HttpMessage message, final boolean expected) {, +    private static void runUnsupportedExpectationTest(final HttpVersion version,, +                                                      final String expectations, boolean expect) {, +    private static void runUnsupportedExpectationTest(final HttpMessage message, final boolean expected) {, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2FrameReaderTest.java, +    private static void writePriorityFrame(, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2FrameWriterTest.java, +    private static Http2Headers dummyHeaders(Http2Headers headers, int times) {, +    private static String repeat(String str, int count) {, +++ b/buffer/src/test/java/io/netty/buffer/ReadOnlyByteBufTest.java, +    private static void ensureWritableIntStatusShouldFailButNotThrow(boolean force) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +    private static Object continueResponse(HttpMessage start, int maxContentLength, ChannelPipeline pipeline) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpUtilTest.java, +    private static void run100ContinueTest(final HttpVersion version, final String expectations, boolean expect) {, +    private static void run100ContinueTest(final HttpMessage message, final boolean expected) {, +    private static void runUnsupportedExpectationTest(final HttpVersion version,, +                                                      final String expectations, boolean expect) {, +    private static void runUnsupportedExpectationTest(final HttpMessage message, final boolean expected) {, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2FrameReaderTest.java, +    private static void writePriorityFrame(, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2FrameWriterTest.java, +    private static Http2Headers dummyHeaders(Http2Headers headers, int times) {, +    private static String repeat(String str, int count) {, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/ReadOnlyHttp2HeadersTest.java, +    private static void testValueIteratorSingleValue(Http2Headers headers, CharSequence name, CharSequence value) {, +    private static void testIteratorReadOnly(Http2Headers headers) {, +    private static void testIteratorEntryReadOnly(Http2Headers headers) {, +    private static ReadOnlyHttp2Headers newServerHeaders() {, +    private static ReadOnlyHttp2Headers newClientHeaders() {, +    private static ReadOnlyHttp2Headers newTrailers() {, +    private static AsciiString[] otherHeaders() {, +++ b/buffer/src/test/java/io/netty/buffer/ReadOnlyByteBufTest.java, +    private static void ensureWritableIntStatusShouldFailButNotThrow(boolean force) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +    private static Object continueResponse(HttpMessage start, int maxContentLength, ChannelPipeline pipeline) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpUtilTest.java, +    private static void run100ContinueTest(final HttpVersion version, final String expectations, boolean expect) {, +    private static void run100ContinueTest(final HttpMessage message, final boolean expected) {, +    private static void runUnsupportedExpectationTest(final HttpVersion version,, +                                                      final String expectations, boolean expect) {, +    private static void runUnsupportedExpectationTest(final HttpMessage message, final boolean expected) {, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2FrameReaderTest.java, +    private static void writePriorityFrame(, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2FrameWriterTest.java, +    private static Http2Headers dummyHeaders(Http2Headers headers, int times) {, +    private static String repeat(String str, int count) {, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/ReadOnlyHttp2HeadersTest.java, +    private static void testValueIteratorSingleValue(Http2Headers headers, CharSequence name, CharSequence value) {, +    private static void testIteratorReadOnly(Http2Headers headers) {, +    private static void testIteratorEntryReadOnly(Http2Headers headers) {, +    private static ReadOnlyHttp2Headers newServerHeaders() {, +    private static ReadOnlyHttp2Headers newClientHeaders() {, +    private static ReadOnlyHttp2Headers newTrailers() {, +    private static AsciiString[] otherHeaders() {, +++ b/codec/src/test/java/io/netty/handler/codec/DefaultHeadersTest.java, +    private static TestDefaultHeaders newInstance() {, +++ b/buffer/src/test/java/io/netty/buffer/ReadOnlyByteBufTest.java, +    private static void ensureWritableIntStatusShouldFailButNotThrow(boolean force) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +    private static Object continueResponse(HttpMessage start, int maxContentLength, ChannelPipeline pipeline) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpUtilTest.java, +    private static void run100ContinueTest(final HttpVersion version, final String expectations, boolean expect) {, +    private static void run100ContinueTest(final HttpMessage message, final boolean expected) {, +    private static void runUnsupportedExpectationTest(final HttpVersion version,, +                                                      final String expectations, boolean expect) {]