[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +    public Long getTimeMillis(CharSequence name) {, +        return headers.getTimeMillis(name);, +    public long getTimeMillis(CharSequence name, long defaultValue) {, +        return headers.getTimeMillis(name, defaultValue);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +    public Long getTimeMillis(CharSequence name) {, +        return headers.getTimeMillis(name);, +    public long getTimeMillis(CharSequence name, long defaultValue) {, +        return headers.getTimeMillis(name, defaultValue);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +        public Long getTimeMillis(CharSequence name) {, +        public long getTimeMillis(CharSequence name, long defaultValue) {, +     * @deprecated Use {@link #getTimeMillis(CharSequence)} instead., +     * @deprecated Use {@link #getTimeMillis(CharSequence)} instead., +     * @deprecated Use {@link #getTimeMillis(CharSequence, long)} instead., +        return getDateHeader(message, (CharSequence) name, defaultValue);, +     * @deprecated Use {@link #getTimeMillis(CharSequence, long)} instead., +        final String value = getHeader(message, name);, +        if (value == null) {, +            return defaultValue;, +        }, +, +        try {, +            return HttpHeaderDateFormat.get().parse(value);, +        } catch (ParseException ignored) {, +            return defaultValue;, +        }, +     * @deprecated Use {@link #getTimeMillis(CharSequence)} instead., +     * @deprecated Use {@link #getTimeMillis(CharSequence, long)} instead., +        return getDateHeader(message, HttpHeaderNames.DATE, defaultValue);, +    public abstract Long getTimeMillis(CharSequence name);, +    public abstract long getTimeMillis(CharSequence name, long defaultValue);]