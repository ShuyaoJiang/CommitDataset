[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +        aEnd =  sb.indexOf(';');, +        if (aEnd == -1) {, +        if (sb.charAt(aEnd - 1) == ' ') {, +        bStart = HttpPostBodyUtil.findNonWhitespace(sb, aEnd + 1);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +        aEnd =  sb.indexOf(';');, +        if (aEnd == -1) {, +        if (sb.charAt(aEnd - 1) == ' ') {, +        bStart = HttpPostBodyUtil.findNonWhitespace(sb, aEnd + 1);, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java, +    @Test, +    public void testBinaryStreamUploadWithSpace() throws Exception {, +        testBinaryStreamUpload(true);, +    }, +, +    // https://github.com/netty/netty/issues/1575, +    @Test, +    public void testBinaryStreamUploadWithoutSpace() throws Exception {, +        testBinaryStreamUpload(false);, +    }, +, +    private static void testBinaryStreamUpload(boolean withSpace) throws Exception {, +        final String boundary = "dLV9Wyq26L_-JQxk6ferf-RT153LhOO";, +        final String contentTypeValue;, +        if (withSpace) {, +            contentTypeValue = "multipart/form-data; boundary=" + boundary;, +        } else {, +            contentTypeValue = "multipart/form-data;boundary=" + boundary;, +        }, +        req.headers().add(HttpHeaders.Names.CONTENT_TYPE, contentTypeValue);]