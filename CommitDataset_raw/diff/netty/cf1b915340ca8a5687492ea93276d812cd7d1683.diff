[+++ b/src/main/java/org/jboss/netty/example/http/HttpRequestHandler.java, +import org.jboss.netty.handler.codec.http.HttpChunk;, +@ChannelPipelineCoverage("one"), +, +    private volatile boolean readingChunks;, +    private final StringBuilder responseContent = new StringBuilder();, +, +        if (!readingChunks) {, +, +            responseContent.append("HOST: " + request.getHeader(HttpHeaders.Names.HOST) + "\r\n");, +            responseContent.append("REQUEST_URI: " + request.getUri() + "\r\n");, +, +            for (String name: request.getHeaderNames()) {, +                for (String value: request.getHeaders(name)) {, +                    responseContent.append("HEADER: " + name + " = " + value + "\r\n");, +                }, +            }, +, +                    responseContent.append("PARAM: " + key + " = " + val + "\r\n");, +, +            if (request.isChunked()) {, +                readingChunks = true;, +                return;, +            } else {, +                responseContent.append("CONTENT: " + request.getContent().toString("UTF-8") + "\r\n");, +                writeResponse(e);, +            }, +        } else {, +            HttpChunk chunk = (HttpChunk) e.getMessage();, +            if (chunk.isLast()) {, +                readingChunks = false;, +                responseContent.append("END OF CHUNK\r\n");, +                writeResponse(e);, +                return;, +            } else {, +                responseContent.append("CHUNK: " + chunk.getContent().toString("UTF-8") + "\r\n");, +            }, +        }, +    }, +, +    private void writeResponse(MessageEvent e) {, +        ChannelBuffer buf = ChannelBuffers.copiedBuffer(responseContent.toString(), "UTF-8");, +        response.setHeader(HttpHeaders.Names.CONTENT_TYPE, "text/plain; charset=UTF-8");, +        responseContent.setLength(0);, +++ b/src/main/java/org/jboss/netty/example/http/HttpRequestHandler.java, +import org.jboss.netty.handler.codec.http.HttpChunk;, +@ChannelPipelineCoverage("one"), +, +    private volatile boolean readingChunks;, +    private final StringBuilder responseContent = new StringBuilder();, +, +        if (!readingChunks) {, +, +            responseContent.append("HOST: " + request.getHeader(HttpHeaders.Names.HOST) + "\r\n");, +            responseContent.append("REQUEST_URI: " + request.getUri() + "\r\n");, +, +            for (String name: request.getHeaderNames()) {, +                for (String value: request.getHeaders(name)) {, +                    responseContent.append("HEADER: " + name + " = " + value + "\r\n");, +                }, +            }, +, +                    responseContent.append("PARAM: " + key + " = " + val + "\r\n");, +, +            if (request.isChunked()) {, +                readingChunks = true;, +                return;, +            } else {, +                responseContent.append("CONTENT: " + request.getContent().toString("UTF-8") + "\r\n");, +                writeResponse(e);, +            }, +        } else {, +            HttpChunk chunk = (HttpChunk) e.getMessage();, +            if (chunk.isLast()) {, +                readingChunks = false;, +                responseContent.append("END OF CHUNK\r\n");, +                writeResponse(e);, +                return;, +            } else {, +                responseContent.append("CHUNK: " + chunk.getContent().toString("UTF-8") + "\r\n");, +            }, +        }, +    }, +, +    private void writeResponse(MessageEvent e) {, +        ChannelBuffer buf = ChannelBuffers.copiedBuffer(responseContent.toString(), "UTF-8");, +        response.setHeader(HttpHeaders.Names.CONTENT_TYPE, "text/plain; charset=UTF-8");, +        responseContent.setLength(0);, +++ b/src/main/java/org/jboss/netty/example/http/HttpServerPipelineFactory.java, +, +        pipeline.addLast("decoder", new HttpRequestDecoder(false));]