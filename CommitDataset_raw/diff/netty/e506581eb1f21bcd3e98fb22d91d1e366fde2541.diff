[+++ b/buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java, +import static io.netty.util.ReferenceCountUtil.*;, +        ByteBuf value = releaseLater(directBuffer(BLOCK_SIZE * 2));, +        ByteBuf expectedValue = releaseLater(directBuffer(BLOCK_SIZE * 2));, +        ByteBuf value = releaseLater(directBuffer(BLOCK_SIZE * 2));, +        ByteBuf expectedValue = releaseLater(wrappedBuffer(expectedValueContent));, +        ByteBuf value = releaseLater(directBuffer(BLOCK_SIZE * 2));, +        ByteBuf expectedValue = releaseLater(wrappedBuffer(expectedValueContent));, +        ByteBuf copy = releaseLater(copiedBuffer(buffer));, +        ByteBuf copy = releaseLater(copiedBuffer(buffer));, +        ByteBuf copy = releaseLater(buffer.copy());, +        ByteBuf elemA = releaseLater(buffer(15));, +        ByteBuf elemB = releaseLater(directBuffer(15));, +        assertTrue(set.contains(releaseLater(elemA.copy())));, +        ByteBuf elemBCopy = releaseLater(elemB.copy());, +        ByteBuf buffer = releaseLater(newBuffer(2));, +        final ByteBuf buffer = releaseLater(newBuffer(8));, +        final ByteBuf buffer = releaseLater(newBuffer(8));, +        final ByteBuf buffer = releaseLater(newBuffer(8));, +        final ByteBuf buffer = releaseLater(newBuffer(8));, +        final ByteBuf buffer = releaseLater(newBuffer(8));, +++ b/buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java, +import static io.netty.util.ReferenceCountUtil.*;, +        ByteBuf value = releaseLater(directBuffer(BLOCK_SIZE * 2));, +        ByteBuf expectedValue = releaseLater(directBuffer(BLOCK_SIZE * 2));, +        ByteBuf value = releaseLater(directBuffer(BLOCK_SIZE * 2));, +        ByteBuf expectedValue = releaseLater(wrappedBuffer(expectedValueContent));, +        ByteBuf value = releaseLater(directBuffer(BLOCK_SIZE * 2));, +        ByteBuf expectedValue = releaseLater(wrappedBuffer(expectedValueContent));, +        ByteBuf copy = releaseLater(copiedBuffer(buffer));, +        ByteBuf copy = releaseLater(copiedBuffer(buffer));, +        ByteBuf copy = releaseLater(buffer.copy());, +        ByteBuf elemA = releaseLater(buffer(15));, +        ByteBuf elemB = releaseLater(directBuffer(15));, +        assertTrue(set.contains(releaseLater(elemA.copy())));, +        ByteBuf elemBCopy = releaseLater(elemB.copy());, +        ByteBuf buffer = releaseLater(newBuffer(2));, +        final ByteBuf buffer = releaseLater(newBuffer(8));, +        final ByteBuf buffer = releaseLater(newBuffer(8));, +        final ByteBuf buffer = releaseLater(newBuffer(8));, +        final ByteBuf buffer = releaseLater(newBuffer(8));, +        final ByteBuf buffer = releaseLater(newBuffer(8));, +++ b/buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java, +import static io.netty.util.ReferenceCountUtil.*;, +        b = releaseLater(wrappedBuffer(, +        CompositeByteBuf buf = releaseLater(compositeBuffer(Integer.MAX_VALUE));, +        CompositeByteBuf buf = releaseLater(compositeBuffer(Integer.MAX_VALUE));, +        a = releaseLater(wrappedBuffer(new byte[] { 1 }).order(order));, +        b = releaseLater(wrappedBuffer(, +        a = releaseLater(wrappedBuffer(new byte[] { 1, 2, 3 }).order(order));, +        b = releaseLater(wrappedBuffer(, +        a = releaseLater(wrappedBuffer(new byte[] { 1, 2, 3 }).order(order));, +        b = releaseLater(wrappedBuffer(, +        a = releaseLater(wrappedBuffer(new byte[] { 1, 2, 3 }).order(order));, +        b = releaseLater(wrappedBuffer(, +        a = releaseLater(wrappedBuffer(new byte[] { 1, 2, 3 }).order(order));, +        b = releaseLater(wrappedBuffer(, +        a = releaseLater(wrappedBuffer(new byte[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }).order(order));, +        b = releaseLater(wrappedBuffer(, +        a = releaseLater(wrappedBuffer(new byte[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }).order(order));, +        b = releaseLater(wrappedBuffer(, +        a = releaseLater(wrappedBuffer(new byte[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }).order(order));, +        b = releaseLater(wrappedBuffer(, +        a = releaseLater(wrappedBuffer(new byte[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }).order(order));, +        b = releaseLater(wrappedBuffer(, +                releaseLater(wrappedBuffer(wrappedBuffer(, +                releaseLater(wrappedBuffer(, +                releaseLater(wrappedBuffer(wrappedBuffer(, +        b = releaseLater(wrappedBuffer(wrappedBuffer(new byte[] { 1, 2 }, new byte[1]).order(order)));, +        b = releaseLater(wrappedBuffer(wrappedBuffer(new byte[] { 1, 2, 3 }, new byte[7])).order(order));, +        b = releaseLater(wrappedBuffer(wrappedBuffer(new byte[] { 1, 2, 3, 4, 6 }, new byte[5])).order(order));, +        ByteBuf b = releaseLater(wrappedBuffer(new byte[]{1, 2}, new byte[]{3, 4}));, +        ByteBuf buf = releaseLater(compositeBuffer());, +        CompositeByteBuf buf = releaseLater(compositeBuffer());, +        CompositeByteBuf buf = releaseLater(compositeBuffer());, +        CompositeByteBuf buf = releaseLater(compositeBuffer());, +        CompositeByteBuf buf = releaseLater(compositeBuffer());, +        CompositeByteBuf buf = releaseLater(compositeBuffer());, +        CompositeByteBuf buf = releaseLater(compositeBuffer());, +        assertEquals(0, releaseLater(buf.copy()).readableBytes());, +        CompositeByteBuf buf = releaseLater(compositeBuffer());, +        assertEquals(0, releaseLater(buf.duplicate()).readableBytes());, +        CompositeByteBuf buf = releaseLater(compositeBuffer());, +        CompositeByteBuf buf = releaseLater(compositeBuffer());, +        CompositeByteBuf buf = releaseLater(compositeBuffer());, +        CompositeByteBuf buf = releaseLater(compositeBuffer());, +        CompositeByteBuf buf = releaseLater(compositeBuffer());, +        CompositeByteBuf cbuf = releaseLater(compositeBuffer());, +++ b/buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java, +import static io.netty.util.ReferenceCountUtil.*;, +        ByteBuf value = releaseLater(directBuffer(BLOCK_SIZE * 2));, +        ByteBuf expectedValue = releaseLater(directBuffer(BLOCK_SIZE * 2));, +        ByteBuf value = releaseLater(directBuffer(BLOCK_SIZE * 2));, +        ByteBuf expectedValue = releaseLater(wrappedBuffer(expectedValueContent));, +        ByteBuf value = releaseLater(directBuffer(BLOCK_SIZE * 2));, +        ByteBuf expectedValue = releaseLater(wrappedBuffer(expectedValueContent));, +        ByteBuf copy = releaseLater(copiedBuffer(buffer));, +        ByteBuf copy = releaseLater(copiedBuffer(buffer));, +        ByteBuf copy = releaseLater(buffer.copy());, +        ByteBuf elemA = releaseLater(buffer(15));]