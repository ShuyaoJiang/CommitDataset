[+++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketChannel.java, +    final WorkerPool<NioWorker> workers;, +            ChannelPipeline pipeline, ChannelSink sink, NioWorker worker, WorkerPool<NioWorker> workers) {, +                new NioServerSocketChannel(factory, pipeline, sink, worker, workers);, +            ChannelSink sink, NioWorker worker, WorkerPool<NioWorker> workers) {, +        this.workers = workers;, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketChannel.java, +    final WorkerPool<NioWorker> workers;, +            ChannelPipeline pipeline, ChannelSink sink, NioWorker worker, WorkerPool<NioWorker> workers) {, +                new NioServerSocketChannel(factory, pipeline, sink, worker, workers);, +            ChannelSink sink, NioWorker worker, WorkerPool<NioWorker> workers) {, +        this.workers = workers;, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketChannelFactory.java, +        sink = new NioServerSocketPipelineSink();, +        return NioServerSocketChannel.create(this, pipeline, sink, workerPool.nextWorker(), workerPool);, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketChannel.java, +    final WorkerPool<NioWorker> workers;, +            ChannelPipeline pipeline, ChannelSink sink, NioWorker worker, WorkerPool<NioWorker> workers) {, +                new NioServerSocketChannel(factory, pipeline, sink, worker, workers);, +            ChannelSink sink, NioWorker worker, WorkerPool<NioWorker> workers) {, +        this.workers = workers;, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketChannelFactory.java, +        sink = new NioServerSocketPipelineSink();, +        return NioServerSocketChannel.create(this, pipeline, sink, workerPool.nextWorker(), workerPool);, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketPipelineSink.java, +            channel.getWorker().registerWithWorker(channel, future);, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketChannel.java, +    final WorkerPool<NioWorker> workers;, +            ChannelPipeline pipeline, ChannelSink sink, NioWorker worker, WorkerPool<NioWorker> workers) {, +                new NioServerSocketChannel(factory, pipeline, sink, worker, workers);, +            ChannelSink sink, NioWorker worker, WorkerPool<NioWorker> workers) {, +        this.workers = workers;, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketChannelFactory.java, +        sink = new NioServerSocketPipelineSink();, +        return NioServerSocketChannel.create(this, pipeline, sink, workerPool.nextWorker(), workerPool);, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketPipelineSink.java, +            channel.getWorker().registerWithWorker(channel, future);, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioWorker.java, +                    channel.getJdkChannel().register(selector, channel.getRawInterestOps(), channel);, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketChannel.java, +    final WorkerPool<NioWorker> workers;, +            ChannelPipeline pipeline, ChannelSink sink, NioWorker worker, WorkerPool<NioWorker> workers) {, +                new NioServerSocketChannel(factory, pipeline, sink, worker, workers);, +            ChannelSink sink, NioWorker worker, WorkerPool<NioWorker> workers) {, +        this.workers = workers;, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketChannelFactory.java, +        sink = new NioServerSocketPipelineSink();, +        return NioServerSocketChannel.create(this, pipeline, sink, workerPool.nextWorker(), workerPool);, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketPipelineSink.java, +            channel.getWorker().registerWithWorker(channel, future);, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioWorker.java, +                    channel.getJdkChannel().register(selector, channel.getRawInterestOps(), channel);, +++ b/transport/src/main/java/io/netty/channel/socket/nio/SelectorEventLoop.java, +                NioWorker worker = channel.workers.nextWorker();, +                , +                worker.registerWithWorker(NioAcceptedSocketChannel.create(channel.getFactory(), pipeline, channel,, +                        channel.getPipeline().getSink(), acceptedSocket, worker), null);]