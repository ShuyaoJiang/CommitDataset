[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockCompressor.java, +import io.netty.util.internal.DetectionUtil;, +        if (DetectionUtil.javaVersion() >= 7) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockCompressor.java, +import io.netty.util.internal.DetectionUtil;, +        if (DetectionUtil.javaVersion() >= 7) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockJZlibDecompressor.java, +        loop: for (;;) {, +            // Decompress 'in' into 'out', +            if (z.next_out_index > 0) {, +                decompressed.writeBytes(out, 0, z.next_out_index);, +                z.avail_out = out.length;, +            }, +            z.next_out_index = 0;, +            switch (resultCode) {, +            case JZlib.Z_NEED_DICT:, +                    throw new CompressionException("failed to set the dictionary: " + resultCode);, +                break;, +            case JZlib.Z_STREAM_END:, +                // Do not decode anymore., +                z.inflateEnd();, +                break loop;, +            case JZlib.Z_OK:, +                break;, +            case JZlib.Z_BUF_ERROR:, +                if (z.avail_in <= 0) {, +                    break loop;, +                }, +                break;, +            default:, +                throw new CompressionException("decompression failure: " + resultCode);, +            }, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockCompressor.java, +import io.netty.util.internal.DetectionUtil;, +        if (DetectionUtil.javaVersion() >= 7) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockJZlibDecompressor.java, +        loop: for (;;) {, +            // Decompress 'in' into 'out', +            if (z.next_out_index > 0) {, +                decompressed.writeBytes(out, 0, z.next_out_index);, +                z.avail_out = out.length;, +            }, +            z.next_out_index = 0;, +            switch (resultCode) {, +            case JZlib.Z_NEED_DICT:, +                    throw new CompressionException("failed to set the dictionary: " + resultCode);, +                break;, +            case JZlib.Z_STREAM_END:, +                // Do not decode anymore., +                z.inflateEnd();, +                break loop;, +            case JZlib.Z_OK:, +                break;, +            case JZlib.Z_BUF_ERROR:, +                if (z.avail_in <= 0) {, +                    break loop;, +                }, +                break;, +            default:, +                throw new CompressionException("decompression failure: " + resultCode);, +            }, +++ /dev/null, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockCompressor.java, +import io.netty.util.internal.DetectionUtil;, +        if (DetectionUtil.javaVersion() >= 7) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockJZlibDecompressor.java, +        loop: for (;;) {, +            // Decompress 'in' into 'out', +            if (z.next_out_index > 0) {, +                decompressed.writeBytes(out, 0, z.next_out_index);, +                z.avail_out = out.length;, +            }, +            z.next_out_index = 0;, +            switch (resultCode) {, +            case JZlib.Z_NEED_DICT:, +                    throw new CompressionException("failed to set the dictionary: " + resultCode);, +                break;, +            case JZlib.Z_STREAM_END:, +                // Do not decode anymore., +                z.inflateEnd();, +                break loop;, +            case JZlib.Z_OK:, +                break;, +            case JZlib.Z_BUF_ERROR:, +                if (z.avail_in <= 0) {, +                    break loop;, +                }, +                break;, +            default:, +                throw new CompressionException("decompression failure: " + resultCode);, +            }, +++ /dev/null, +++ b/common/src/main/java/io/netty/util/internal/DetectionUtil.java, +/*, + * Copyright 2011 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *]