[+++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java, +        return new SslHandler(newEngine0(alloc, null, -1, false), startTls);, +        return new SslHandler(newEngine0(alloc, peerHost, peerPort, false), startTls);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java, +        return new SslHandler(newEngine0(alloc, null, -1, false), startTls);, +        return new SslHandler(newEngine0(alloc, peerHost, peerPort, false), startTls);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +    final boolean jdkCompatibilityMode;, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java, +        return new SslHandler(newEngine0(alloc, null, -1, false), startTls);, +        return new SslHandler(newEngine0(alloc, peerHost, peerPort, false), startTls);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +    final boolean jdkCompatibilityMode;, +++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, +, +            @Override, +            boolean jdkCompatibilityMode(SSLEngine engine) {, +                return ((ReferenceCountedOpenSslEngine) engine).jdkCompatibilityMode;, +            }, +, +            @Override, +            boolean jdkCompatibilityMode(SSLEngine engine) {, +                return true;, +            }, +, +            @Override, +            boolean jdkCompatibilityMode(SSLEngine engine) {, +                return true;, +            }, +        abstract boolean jdkCompatibilityMode(SSLEngine engine);, +, +        this.jdkCompatibilityMode = engineType.jdkCompatibilityMode(engine);]