[+++ b/common/src/main/java/io/netty/util/DefaultAttributeMap.java, +            // use compare and set. At worst we need to fallback to synchronization and waste two allocations., +            head = new DefaultAttribute();, +            DefaultAttribute<T> attr = new DefaultAttribute<T>(head, key);, +            head.next = attr;, +            attr.prev = head;, +                // we were able to add it so return the attr right away, +                return attr;, +, +                if (next.key == key && !next.removed) {, +                    return (Attribute<T>) next;, +                }, +                curr = next;, +        // We need to synchronize on the head., +            // Start with head.next as the head itself does not store an attribute., +                if (curr.key == key && !curr.removed) {, +        // The head of the linked-list this attribute belongs to, +        // Special constructor for the head of the linked-list., +        DefaultAttribute() {, +            key = null;, +                assert head != null;, +                if (prev == null) {, +                    // Removed before., +                    return;, +                }, +]