[+++ b/transport/src/main/java/io/netty/channel/ReflectiveChannelFactory.java, +import io.netty.util.internal.ObjectUtil;, +import java.lang.reflect.Constructor;, +, +    private final Constructor<? extends T> constructor;, +        ObjectUtil.checkNotNull(clazz, "clazz");, +        try {, +            this.constructor = clazz.getConstructor();, +        } catch (NoSuchMethodException e) {, +            throw new IllegalArgumentException("Class " + StringUtil.simpleClassName(clazz) +, +                    " does not have a public non-arg constructor", e);, +            return constructor.newInstance();, +            throw new ChannelException("Unable to create Channel from class " + constructor.getDeclaringClass(), t);, +        return StringUtil.simpleClassName(ReflectiveChannelFactory.class) +, +                '(' + StringUtil.simpleClassName(constructor.getDeclaringClass()) + ".class)";]