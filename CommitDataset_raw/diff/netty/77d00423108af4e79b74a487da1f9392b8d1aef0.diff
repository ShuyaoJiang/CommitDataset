[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java, +import static io.netty.util.CharsetUtil.UTF_8;, +import io.netty.util.CharsetUtil;, +        if (isGracefulShutdownComplete()) {, +                // If this connection is closing and the graceful shutdown has completed, close the connection, +                // once this operation completes., +                if (closeListener != null && isGracefulShutdownComplete()) {, +     * Called by the graceful shutdown logic to determine when it is safe to close the connection. Returns {@code true}, +     * if the graceful shutdown has completed and the connection can be safely closed. This implementation just, +     * guarantees that there are no active streams. Subclasses may override to provide additional checks., +     */, +    protected boolean isGracefulShutdownComplete() {, +        return connection().numActiveStreams() == 0;, +    }, +, +    /**, +            final String debugString = debugData.toString(UTF_8);, +                            if (logger.isWarnEnabled()) {, +                                logger.warn(, +                                        format("Sent GOAWAY: lastStreamId '%d', errorCode '%d', " +, +                                                        "debugData '%s'. Forcing shutdown of the connection.",, +                                                lastStreamId, errorCode, debugString), future.cause());, +                            }, +                                    format("Sending GOAWAY failed: lastStreamId '%d', errorCode '%d', " +, +                                                    "debugData '%s'. Forcing shutdown of the connection.",, +                                            lastStreamId, errorCode, debugString), future.cause());]