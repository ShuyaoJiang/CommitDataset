[+++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +, +    void addComponents(ByteBuf... buffers);, +    void addComponents(Iterable<ByteBuf> buffers);, +    void addComponents(int cIndex, ByteBuf... buffers);, +    void addComponents(int cIndex, Iterable<ByteBuf> buffers);, +, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +, +    void addComponents(ByteBuf... buffers);, +    void addComponents(Iterable<ByteBuf> buffers);, +    void addComponents(int cIndex, ByteBuf... buffers);, +    void addComponents(int cIndex, Iterable<ByteBuf> buffers);, +, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +import java.util.Collection;, +        addComponents(0, buffers);, +        addComponents(0, buffers);, +    public void addComponents(ByteBuf... buffers) {, +        addComponents(components.size(), buffers);, +    }, +, +    @Override, +    public void addComponents(Iterable<ByteBuf> buffers) {, +        addComponents(components.size(), buffers);, +    }, +, +    @Override, +        if (buffer instanceof Iterable) {, +            @SuppressWarnings("unchecked"), +            Iterable<ByteBuf> composite = (Iterable<ByteBuf>) buffer;, +            addComponents(cIndex, composite);, +            return;, +        }, +, +                ByteBuf b = components.get(i).buf;, +                consolidated.writeBytes(b);, +                b.unsafe().release();, +    @Override, +    public void addComponents(int cIndex, ByteBuf... buffers) {, +        checkComponentIndex(cIndex);, +, +        if (buffers == null) {, +            throw new NullPointerException("buffers");, +        }, +, +        ByteBuf lastBuf = null;, +        int cnt = 0;, +        int readableBytes = 0;, +        for (ByteBuf b: buffers) {, +            if (b == null) {, +                break;, +            }, +            lastBuf = b;, +            cnt ++;, +            readableBytes += b.readableBytes();, +        }, +, +        if (readableBytes == 0) {, +            return;, +        }, +, +        // Consolidate if the number of components will exceed the maximum by this operation., +        final int numComponents = components.size();, +        if (numComponents + cnt > maxNumComponents) {, +            final ByteBuf consolidated;, +            if (numComponents != 0) {, +                final int capacity = components.get(numComponents - 1).endOffset + readableBytes;, +                consolidated = lastBuf.unsafe().newBuffer(capacity);, +                for (int i = 0; i < cIndex; i ++) {, +                    ByteBuf b = components.get(i).buf;, +                    consolidated.writeBytes(b);, +                    b.unsafe().release();, +                }, +, +                for (ByteBuf b: buffers) {, +                    if (b == null) {, +                        break;, +                    }, +                    consolidated.writeBytes(b, b.readerIndex(), b.readableBytes());, +                }, +, +                for (int i = cIndex; i < numComponents; i ++) {, +                    ByteBuf b = components.get(i).buf;, +                    consolidated.writeBytes(b);, +                    b.unsafe().release();, +                }, +            } else {, +                consolidated = lastBuf.unsafe().newBuffer(readableBytes);, +                for (ByteBuf b: buffers) {, +                    if (b == null) {, +                        break;, +                    }, +                    consolidated.writeBytes(b, b.readerIndex(), b.readableBytes());, +                }, +            }, +, +            Component c = new Component(consolidated);, +            c.endOffset = c.length;, +            components.clear();]