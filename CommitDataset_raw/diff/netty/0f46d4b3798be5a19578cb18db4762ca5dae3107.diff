[+++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +        if (prev != null && executor.inEventLoop()) {, +                        if (prev == null) {, +, +                        }, +        if (prev != null && executor.inEventLoop()) {, +        if (prev != null && executor.inEventLoop()) {, +        if (!pipeline.isInboundShutdown()) {, +                            if (!pipeline.isInboundShutdown()) {, +                    if (handler instanceof ChannelInboundByteHandler && !pipeline.isInboundShutdown()) {, +        if (pipeline.isOutboundShutdown()) {, +            if (handler instanceof ChannelOutboundByteHandler && !pipeline.isOutboundShutdown()) {, +        if (pipeline.isOutboundShutdown()) {, +        if (prev != null && executor.inEventLoop()) {, +                        pipeline.shutdownInbound();, +        if (next == null) {, +            if (executor.inEventLoop()) {, +                pipeline.shutdownOutbound();, +                invokeFreeOutboundBuffer0();, +            } else {, +                Runnable task = invokeFreeOutboundBuffer0Task;, +                if (task == null) {, +                    invokeFreeOutboundBuffer0Task = task = new Runnable() {, +                        @Override, +                        public void run() {, +                            pipeline.shutdownOutbound();, +                            invokeFreeOutboundBuffer0();, +                        }, +                    };, +                }, +                executor.execute(task);, +            }, +        } else {, +    }, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +        if (prev != null && executor.inEventLoop()) {, +                        if (prev == null) {, +, +                        }, +        if (prev != null && executor.inEventLoop()) {, +        if (prev != null && executor.inEventLoop()) {, +        if (!pipeline.isInboundShutdown()) {, +                            if (!pipeline.isInboundShutdown()) {, +                    if (handler instanceof ChannelInboundByteHandler && !pipeline.isInboundShutdown()) {, +        if (pipeline.isOutboundShutdown()) {, +            if (handler instanceof ChannelOutboundByteHandler && !pipeline.isOutboundShutdown()) {, +        if (pipeline.isOutboundShutdown()) {, +        if (prev != null && executor.inEventLoop()) {, +                        pipeline.shutdownInbound();, +        if (next == null) {, +            if (executor.inEventLoop()) {, +                pipeline.shutdownOutbound();, +                invokeFreeOutboundBuffer0();, +            } else {, +                Runnable task = invokeFreeOutboundBuffer0Task;, +                if (task == null) {, +                    invokeFreeOutboundBuffer0Task = task = new Runnable() {, +                        @Override, +                        public void run() {, +                            pipeline.shutdownOutbound();, +                            invokeFreeOutboundBuffer0();, +                        }, +                    };, +                }, +                executor.execute(task);, +            }, +        } else {, +    }, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +    private boolean inboundShutdown;, +    private boolean outboundShutdown;, +    boolean isInboundShutdown() {, +        return inboundShutdown;, +    }, +, +    boolean isOutboundShutdown() {, +        return outboundShutdown;, +    }, +, +    void shutdownInbound() {, +        inboundShutdown = true;, +    }, +, +    void shutdownOutbound() {, +        outboundShutdown = true;, +    }, +]