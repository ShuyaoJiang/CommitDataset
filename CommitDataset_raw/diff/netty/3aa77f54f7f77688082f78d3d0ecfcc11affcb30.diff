[+++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +            if (hasUnsafe()) {, +                PlatformDependent0.freeDirectBufferUnsafe(buffer);, +            } else {, +    }, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +            if (hasUnsafe()) {, +                PlatformDependent0.freeDirectBufferUnsafe(buffer);, +            } else {, +    }, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent0.java, +    private static final Field CLEANER_FIELD;, +        CLEANER_FIELD = cleanerField;, +    static void freeDirectBufferUnsafe(ByteBuffer buffer) {, +    static void freeDirectBuffer(ByteBuffer buffer) {, +        if (CLEANER_FIELD == null) {, +            return;, +        }, +        try {, +            Cleaner cleaner = (Cleaner) CLEANER_FIELD.get(buffer);, +            if (cleaner == null) {, +                throw new IllegalArgumentException(, +                        "attempted to deallocate the buffer which was allocated via JNIEnv->NewDirectByteBuffer()");, +            }, +            cleaner.clean();, +        } catch (Throwable t) {, +            // Nothing we can do here., +        }, +    }, +]