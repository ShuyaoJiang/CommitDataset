[+++ b/transport/src/main/java/io/netty/channel/socket/nio/DefaultNioDatagramChannelConfig.java, +import java.net.InetAddress;, +import java.net.MulticastSocket;, +import java.net.SocketException;, +import java.util.Enumeration;, +import java.util.Set;, +    @Override, +    public int getTimeToLive() {, +        if (DetectionUtil.javaVersion() < 7) {, +            throw new UnsupportedOperationException();, +        } else {, +            try {, +                return (int) channel.getOption(StandardSocketOptions.IP_MULTICAST_TTL);, +            } catch (IOException e) {, +                throw new ChannelException(e);, +            }, +        }, +    }, +, +    @Override, +    public void setTimeToLive(int ttl) {, +        if (DetectionUtil.javaVersion() < 7) {, +            throw new UnsupportedOperationException();, +        } else {, +            try {, +                channel.setOption(StandardSocketOptions.IP_MULTICAST_TTL, ttl);, +            } catch (IOException e) {, +                throw new ChannelException(e);, +            }, +        }, +       , +    }, +    , +    @Override, +    public InetAddress getInterface() {, +        NetworkInterface inf = getNetworkInterface();, +        if (inf == null) {, +            return null;, +        } else {, +            Enumeration<InetAddress> addresses = inf.getInetAddresses();, +            if (addresses.hasMoreElements()) {, +                return addresses.nextElement();, +            }, +            return null;, +        }, +    }, +, +    @Override, +    public void setInterface(InetAddress interfaceAddress) {, +        try {, +            setNetworkInterface(NetworkInterface.getByInetAddress(interfaceAddress));, +        } catch (SocketException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +    @Override, +    public boolean isLoopbackModeDisabled() {, +        if (DetectionUtil.javaVersion() < 7) {, +            throw new UnsupportedOperationException();, +        } else {, +            try {, +                return (Boolean) channel.getOption(StandardSocketOptions.IP_MULTICAST_LOOP);, +            } catch (IOException e) {, +                throw new ChannelException(e);, +            }, +        }, +    }, +, +    @Override, +    public void setLoopbackModeDisabled(boolean loopbackModeDisabled) {, +        if (DetectionUtil.javaVersion() < 7) {, +            throw new UnsupportedOperationException();, +        } else {, +            try {, +                channel.setOption(StandardSocketOptions.IP_MULTICAST_LOOP, loopbackModeDisabled);, +            } catch (IOException e) {, +                throw new ChannelException(e);, +            }, +        }, +    }, +, +++ b/transport/src/main/java/io/netty/channel/socket/nio/DefaultNioDatagramChannelConfig.java, +import java.net.InetAddress;, +import java.net.MulticastSocket;, +import java.net.SocketException;, +import java.util.Enumeration;, +import java.util.Set;, +    @Override, +    public int getTimeToLive() {, +        if (DetectionUtil.javaVersion() < 7) {, +            throw new UnsupportedOperationException();, +        } else {, +            try {, +                return (int) channel.getOption(StandardSocketOptions.IP_MULTICAST_TTL);, +            } catch (IOException e) {, +                throw new ChannelException(e);, +            }, +        }, +    }]