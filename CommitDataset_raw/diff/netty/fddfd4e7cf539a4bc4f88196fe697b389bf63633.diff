[+++ b/src/main/java/org/jboss/netty/example/http/file/HttpStaticFileServerHandler.java, +import static org.jboss.netty.handler.codec.http.HttpHeaders.*;, +import static org.jboss.netty.handler.codec.http.HttpHeaders.Names.*;, +import static org.jboss.netty.handler.codec.http.HttpMethod.*;, +import static org.jboss.netty.handler.codec.http.HttpResponseStatus.*;, +import static org.jboss.netty.handler.codec.http.HttpVersion.*;, +, +        if (request.getMethod() != GET) {, +            sendError(ctx, METHOD_NOT_ALLOWED);, +            sendError(ctx, FORBIDDEN);, +            sendError(ctx, NOT_FOUND);, +            sendError(ctx, FORBIDDEN);, +            sendError(ctx, NOT_FOUND);, +        HttpResponse response = new DefaultHttpResponse(HTTP_1_1, OK);, +        setContentLength(response, fileLength);, +        if (!request.isKeepAlive()) {, +            sendError(ctx, BAD_REQUEST);, +            sendError(ctx, INTERNAL_SERVER_ERROR);, +        HttpResponse response = new DefaultHttpResponse(HTTP_1_1, status);, +        response.setHeader(CONTENT_TYPE, "text/plain; charset=UTF-8");, +++ b/src/main/java/org/jboss/netty/example/http/file/HttpStaticFileServerHandler.java, +import static org.jboss.netty.handler.codec.http.HttpHeaders.*;, +import static org.jboss.netty.handler.codec.http.HttpHeaders.Names.*;, +import static org.jboss.netty.handler.codec.http.HttpMethod.*;, +import static org.jboss.netty.handler.codec.http.HttpResponseStatus.*;, +import static org.jboss.netty.handler.codec.http.HttpVersion.*;, +, +        if (request.getMethod() != GET) {, +            sendError(ctx, METHOD_NOT_ALLOWED);, +            sendError(ctx, FORBIDDEN);, +            sendError(ctx, NOT_FOUND);, +            sendError(ctx, FORBIDDEN);, +            sendError(ctx, NOT_FOUND);, +        HttpResponse response = new DefaultHttpResponse(HTTP_1_1, OK);, +        setContentLength(response, fileLength);, +        if (!request.isKeepAlive()) {, +            sendError(ctx, BAD_REQUEST);, +            sendError(ctx, INTERNAL_SERVER_ERROR);, +        HttpResponse response = new DefaultHttpResponse(HTTP_1_1, status);, +        response.setHeader(CONTENT_TYPE, "text/plain; charset=UTF-8");, +++ b/src/main/java/org/jboss/netty/example/http/snoop/HttpRequestHandler.java, +import static org.jboss.netty.handler.codec.http.HttpResponseStatus.*;, +import static org.jboss.netty.handler.codec.http.HttpVersion.*;, +    /** Buffer that stores the response content */, +    private final StringBuilder buf = new StringBuilder();, +            buf.setLength(0);, +            buf.append("WELCOME TO THE WILD WILD WEB SERVER\r\n");, +            buf.append("===================================\r\n");, +            buf.append("VERSION: " + request.getProtocolVersion() + "\r\n");, +            buf.append("HOSTNAME: " + getHost(request, "unknown") + "\r\n");, +            buf.append("REQUEST_URI: " + request.getUri() + "\r\n\r\n");, +                buf.append("HEADER: " + h.getKey() + " = " + h.getValue() + "\r\n");, +            buf.append("\r\n");, +                        buf.append("PARAM: " + key + " = " + val + "\r\n");, +                buf.append("\r\n");, +                    buf.append("CONTENT: " + content.toString(CharsetUtil.UTF_8) + "\r\n");, +                buf.append("END OF CONTENT\r\n");, +                    buf.append("\r\n");, +                            buf.append("TRAILING HEADER: " + name + " = " + value + "\r\n");, +                    buf.append("\r\n");, +                buf.append("CHUNK: " + chunk.getContent().toString(CharsetUtil.UTF_8) + "\r\n");, +        HttpResponse response = new DefaultHttpResponse(HTTP_1_1, OK);, +        response.setContent(ChannelBuffers.copiedBuffer(buf.toString(), CharsetUtil.UTF_8));, +        String cookieString = request.getHeader(COOKIE);, +++ b/src/main/java/org/jboss/netty/example/http/file/HttpStaticFileServerHandler.java, +import static org.jboss.netty.handler.codec.http.HttpHeaders.*;, +import static org.jboss.netty.handler.codec.http.HttpHeaders.Names.*;, +import static org.jboss.netty.handler.codec.http.HttpMethod.*;, +import static org.jboss.netty.handler.codec.http.HttpResponseStatus.*;, +import static org.jboss.netty.handler.codec.http.HttpVersion.*;, +, +        if (request.getMethod() != GET) {, +            sendError(ctx, METHOD_NOT_ALLOWED);, +            sendError(ctx, FORBIDDEN);, +            sendError(ctx, NOT_FOUND);, +            sendError(ctx, FORBIDDEN);, +            sendError(ctx, NOT_FOUND);, +        HttpResponse response = new DefaultHttpResponse(HTTP_1_1, OK);, +        setContentLength(response, fileLength);, +        if (!request.isKeepAlive()) {, +            sendError(ctx, BAD_REQUEST);, +            sendError(ctx, INTERNAL_SERVER_ERROR);, +        HttpResponse response = new DefaultHttpResponse(HTTP_1_1, status);, +        response.setHeader(CONTENT_TYPE, "text/plain; charset=UTF-8");, +++ b/src/main/java/org/jboss/netty/example/http/snoop/HttpRequestHandler.java, +import static org.jboss.netty.handler.codec.http.HttpResponseStatus.*;, +import static org.jboss.netty.handler.codec.http.HttpVersion.*;, +    /** Buffer that stores the response content */, +    private final StringBuilder buf = new StringBuilder();, +            buf.setLength(0);, +            buf.append("WELCOME TO THE WILD WILD WEB SERVER\r\n");, +            buf.append("===================================\r\n");, +            buf.append("VERSION: " + request.getProtocolVersion() + "\r\n");, +            buf.append("HOSTNAME: " + getHost(request, "unknown") + "\r\n");, +            buf.append("REQUEST_URI: " + request.getUri() + "\r\n\r\n");, +                buf.append("HEADER: " + h.getKey() + " = " + h.getValue() + "\r\n");, +            buf.append("\r\n");, +                        buf.append("PARAM: " + key + " = " + val + "\r\n");, +                buf.append("\r\n");, +                    buf.append("CONTENT: " + content.toString(CharsetUtil.UTF_8) + "\r\n");]