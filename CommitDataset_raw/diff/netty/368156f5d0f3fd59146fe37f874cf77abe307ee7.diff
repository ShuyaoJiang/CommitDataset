[+++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractDiskHttpData.java, +            localfileChannel.force(false);, +                fileChannel.force(false);, +            localfileChannel.force(false);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractDiskHttpData.java, +            localfileChannel.force(false);, +                fileChannel.force(false);, +            localfileChannel.force(false);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractMemoryHttpData.java, +        }, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractDiskHttpData.java, +            localfileChannel.force(false);, +                fileChannel.force(false);, +            localfileChannel.force(false);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractMemoryHttpData.java, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractDiskHttpData.java, +            localfileChannel.force(false);, +                fileChannel.force(false);, +            localfileChannel.force(false);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractMemoryHttpData.java, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +                write(ctx, succeededFuture(ctx.channel()), CONTINUE.duplicate());, +                m.setContent(ChannelBuffers.dynamicBuffer(e.channel().getConfig().getBufferFactory()));, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractDiskHttpData.java, +            localfileChannel.force(false);, +                fileChannel.force(false);, +            localfileChannel.force(false);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractMemoryHttpData.java, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +                write(ctx, succeededFuture(ctx.channel()), CONTINUE.duplicate());, +                m.setContent(ChannelBuffers.dynamicBuffer(e.channel().getConfig().getBufferFactory()));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractDiskHttpData.java, +            localfileChannel.force(false);, +                fileChannel.force(false);, +            localfileChannel.force(false);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractMemoryHttpData.java, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +                write(ctx, succeededFuture(ctx.channel()), CONTINUE.duplicate());, +                m.setContent(ChannelBuffers.dynamicBuffer(e.channel().getConfig().getBufferFactory()));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                                ctx, Channels.succeededFuture(e.channel()), new DefaultHttpChunk(lastProduct), e.getRemoteAddress());, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractDiskHttpData.java, +            localfileChannel.force(false);, +                fileChannel.force(false);, +            localfileChannel.force(false);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractMemoryHttpData.java, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +                write(ctx, succeededFuture(ctx.channel()), CONTINUE.duplicate());, +                m.setContent(ChannelBuffers.dynamicBuffer(e.channel().getConfig().getBufferFactory()));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                                ctx, Channels.succeededFuture(e.channel()), new DefaultHttpChunk(lastProduct), e.getRemoteAddress());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpPostBodyUtil.java, +    //Some commons methods between HttpPostRequestDecoder and HttpMessageDecoder, +     * Skip control Characters, +    static void skipControlCharacters(ChannelBuffer buffer) {, +        for (;;) {, +            char c = (char) buffer.readUnsignedByte();, +            if (!Character.isISOControl(c) && !Character.isWhitespace(c)) {, +                buffer.readerIndex(buffer.readerIndex() - 1);, +                break;, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java]