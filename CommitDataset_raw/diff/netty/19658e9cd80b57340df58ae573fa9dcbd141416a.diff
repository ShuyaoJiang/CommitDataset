[+++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import static io.netty.util.internal.MathUtil.isOutOfBounds;, +        if (isOutOfBounds(index, fieldLength, capacity())) {, +        if (isOutOfBounds(srcIndex, length, srcCapacity)) {, +        if (isOutOfBounds(dstIndex, length, dstCapacity)) {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import static io.netty.util.internal.MathUtil.isOutOfBounds;, +        if (isOutOfBounds(index, fieldLength, capacity())) {, +        if (isOutOfBounds(srcIndex, length, srcCapacity)) {, +        if (isOutOfBounds(dstIndex, length, dstCapacity)) {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractUnsafeSwappedByteBuf.java, +import static io.netty.util.internal.PlatformDependent.BIG_ENDIAN_NATIVE_ORDER;, +, +        nativeByteOrder = BIG_ENDIAN_NATIVE_ORDER == (order() == ByteOrder.BIG_ENDIAN);, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import static io.netty.util.internal.MathUtil.isOutOfBounds;, +        if (isOutOfBounds(index, fieldLength, capacity())) {, +        if (isOutOfBounds(srcIndex, length, srcCapacity)) {, +        if (isOutOfBounds(dstIndex, length, dstCapacity)) {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractUnsafeSwappedByteBuf.java, +import static io.netty.util.internal.PlatformDependent.BIG_ENDIAN_NATIVE_ORDER;, +, +        nativeByteOrder = BIG_ENDIAN_NATIVE_ORDER == (order() == ByteOrder.BIG_ENDIAN);, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +import static io.netty.util.internal.MathUtil.isOutOfBounds;, +, +        return getBytes(buf,  buf.readerIndex(), buf.readableBytes());, +        if (isOutOfBounds(start, length, buf.capacity())) {, +    public static void copy(AsciiString src, int srcIdx, ByteBuf dst, int dstIdx, int length) {, +        if (isOutOfBounds(srcIdx, length, src.length())) {, +                            + length + ") <= srcLen(" + src.length() + ')');, +    public static void copy(AsciiString src, int srcIdx, ByteBuf dst, int length) {, +        if (isOutOfBounds(srcIdx, length, src.length())) {, +                            + length + ") <= srcLen(" + src.length() + ')');, +        if (isOutOfBounds(offset, length, buf.capacity())) {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import static io.netty.util.internal.MathUtil.isOutOfBounds;, +        if (isOutOfBounds(index, fieldLength, capacity())) {, +        if (isOutOfBounds(srcIndex, length, srcCapacity)) {, +        if (isOutOfBounds(dstIndex, length, dstCapacity)) {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractUnsafeSwappedByteBuf.java, +import static io.netty.util.internal.PlatformDependent.BIG_ENDIAN_NATIVE_ORDER;, +, +        nativeByteOrder = BIG_ENDIAN_NATIVE_ORDER == (order() == ByteOrder.BIG_ENDIAN);, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +import static io.netty.util.internal.MathUtil.isOutOfBounds;, +, +        return getBytes(buf,  buf.readerIndex(), buf.readableBytes());, +        if (isOutOfBounds(start, length, buf.capacity())) {, +    public static void copy(AsciiString src, int srcIdx, ByteBuf dst, int dstIdx, int length) {, +        if (isOutOfBounds(srcIdx, length, src.length())) {, +                            + length + ") <= srcLen(" + src.length() + ')');, +    public static void copy(AsciiString src, int srcIdx, ByteBuf dst, int length) {, +        if (isOutOfBounds(srcIdx, length, src.length())) {, +                            + length + ") <= srcLen(" + src.length() + ')');, +        if (isOutOfBounds(offset, length, buf.capacity())) {, +++ b/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java, +import static io.netty.util.internal.MathUtil.isOutOfBounds;, +import static io.netty.util.internal.PlatformDependent.BIG_ENDIAN_NATIVE_ORDER;, +        if (isOutOfBounds(dstIndex, length, dst.capacity())) {, +        if (isOutOfBounds(dstIndex, length, dst.length)) {, +        if (isOutOfBounds(srcIndex, length, src.capacity())) {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import static io.netty.util.internal.MathUtil.isOutOfBounds;, +        if (isOutOfBounds(index, fieldLength, capacity())) {, +        if (isOutOfBounds(srcIndex, length, srcCapacity)) {, +        if (isOutOfBounds(dstIndex, length, dstCapacity)) {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractUnsafeSwappedByteBuf.java, +import static io.netty.util.internal.PlatformDependent.BIG_ENDIAN_NATIVE_ORDER;, +, +        nativeByteOrder = BIG_ENDIAN_NATIVE_ORDER == (order() == ByteOrder.BIG_ENDIAN);, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +import static io.netty.util.internal.ObjectUtil.checkNotNull;, +import static io.netty.util.internal.MathUtil.isOutOfBounds;, +, +        return getBytes(buf,  buf.readerIndex(), buf.readableBytes());, +        if (isOutOfBounds(start, length, buf.capacity())) {, +    public static void copy(AsciiString src, int srcIdx, ByteBuf dst, int dstIdx, int length) {, +        if (isOutOfBounds(srcIdx, length, src.length())) {, +                            + length + ") <= srcLen(" + src.length() + ')');, +    public static void copy(AsciiString src, int srcIdx, ByteBuf dst, int length) {, +        if (isOutOfBounds(srcIdx, length, src.length())) {, +                            + length + ") <= srcLen(" + src.length() + ')');, +        if (isOutOfBounds(offset, length, buf.capacity())) {, +++ b/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java, +import static io.netty.util.internal.MathUtil.isOutOfBounds;, +import static io.netty.util.internal.PlatformDependent.BIG_ENDIAN_NATIVE_ORDER;, +        if (isOutOfBounds(dstIndex, length, dst.capacity())) {, +        if (isOutOfBounds(dstIndex, length, dst.length)) {, +        if (isOutOfBounds(srcIndex, length, src.capacity())) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CombinedHttpHeaders.java, +    private static final class CombinedHttpHeadersImpl, +            extends DefaultHeaders<CharSequence, CharSequence, CombinedHttpHeadersImpl> {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import static io.netty.util.internal.MathUtil.isOutOfBounds;, +        if (isOutOfBounds(index, fieldLength, capacity())) {, +        if (isOutOfBounds(srcIndex, length, srcCapacity)) {, +        if (isOutOfBounds(dstIndex, length, dstCapacity)) {]