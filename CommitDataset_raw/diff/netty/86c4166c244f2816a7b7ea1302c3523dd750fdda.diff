[+++ b/buffer/src/test/java/io/netty/buffer/FixedCompositeByteBufTest.java, +import static io.netty.buffer.Unpooled.*;, +import static io.netty.util.ReferenceCountUtil.*;, +import static org.junit.Assert.*;, +    private static ByteBuf newBuffer(ByteBuf... buffers) {, +        return releaseLater(new FixedCompositeByteBuf(UnpooledByteBufAllocator.DEFAULT, buffers));, +        ByteBuf buf = newBuffer(wrappedBuffer(new byte[8]));, +        ByteBuf buf = newBuffer(wrappedBuffer(new byte[8]));, +        ByteBuf buf = newBuffer(wrappedBuffer(new byte[8]));, +        buf.setBytes(0, wrappedBuffer(new byte[4]));, +        ByteBuf buf = newBuffer(wrappedBuffer(new byte[8]));, +        ByteBuf buf = newBuffer(wrappedBuffer(new byte[8]));, +        ByteBuf buf = newBuffer(wrappedBuffer(new byte[8]));, +            public long read(ByteBuffer[] dsts, int offset, int length) {, +            public long read(ByteBuffer[] dsts) {, +            public int read(ByteBuffer dst) {, +            public void close() {, +        ByteBuf buf = newBuffer(wrappedBuffer(new byte[8]));, +        ByteBuf buf = newBuffer(wrappedBuffer(new byte[8]));, +        ByteBuf buf = newBuffer(wrappedBuffer(new byte[8]));, +        ByteBuf buf = newBuffer(wrappedBuffer(new byte[8]));, +        ByteBuf buf = newBuffer(wrappedBuffer(new byte[8]));, +        ByteBuf buf = newBuffer(wrappedBuffer(new byte[8]));, +        CompositeByteBuf buf = compositeBuffer();, +        buf.release();, +, +    private static void testGatheringWritesPartial(ByteBuf buf1, ByteBuf buf2) throws Exception {, +        buf.release();, +    private static void testGatheringWritesSingleBuf(ByteBuf buf1) throws Exception {, +        buf.release();, +    }]