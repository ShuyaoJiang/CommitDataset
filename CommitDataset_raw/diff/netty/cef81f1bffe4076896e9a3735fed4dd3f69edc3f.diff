[+++ b/common/src/main/java/io/netty/util/HashedWheelTimer.java, +    private final long roundDuration;, +        roundDuration = tickDuration * wheel.length;, +, +        // delay must be equal to or greater than tickDuration so that the, +        // worker thread never misses the timeout., +        if (delay < tickDuration) {, +            delay = tickDuration;, +        // Prepare the required parameters to schedule the timeout object., +        final long lastRoundDelay = delay % roundDuration;, +        final long lastTickDelay = delay % tickDuration;, +        final long relativeIndex =, +                lastRoundDelay / tickDuration + (lastTickDelay != 0? 1 : 0);, +, +        final long remainingRounds =, +                delay / roundDuration - (delay % roundDuration == 0? 1 : 0);, +, +                if (deadline > 0) {, +                    if (timeout.deadline <= deadline) {, +            long deadline = startTime + tickDuration * tick;, +                final long currentTime = System.currentTimeMillis();, +                long sleepTime = tickDuration * tick - (currentTime - startTime);, +                    sleepTime = sleepTime / 10 * 10;, +                }, +, +                if (sleepTime <= 0) {, +                    break;, +                    Thread.sleep(sleepTime);, +                        return -1;, +, +            // Increase the tick., +            tick ++;, +            return deadline;, +                    logger.warn("An exception was thrown by " + TimerTask.class.getSimpleName() + '.', t);]