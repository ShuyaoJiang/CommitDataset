[+++ b/src/main/java/org/jboss/netty/handler/execution/ExecutionHandler.java, +import org.jboss.netty.channel.Channel;, +import org.jboss.netty.channel.ChannelDownstreamHandler;, +import org.jboss.netty.channel.ChannelState;, +import org.jboss.netty.channel.ChannelStateEvent;, +public class ExecutionHandler implements ChannelUpstreamHandler, ChannelDownstreamHandler, ExternalResourceReleasable {, +, +    public void handleDownstream(, +            ChannelHandlerContext ctx, ChannelEvent e) throws Exception {, +        if (e instanceof ChannelStateEvent) {, +            ChannelStateEvent cse = (ChannelStateEvent) e;, +            if (cse.getState() == ChannelState.INTEREST_OPS &&, +                (((Integer) cse.getValue()).intValue() & Channel.OP_READ) != 0) {, +, +                // setReadable(true) requested, +                boolean readSuspended = ctx.getAttachment() != null;, +                if (readSuspended) {, +                    // Drop the request silently if MemoryAwareThreadPool has, +                    // set the flag., +                    e.getFuture().setSuccess();, +                    return;, +                }, +            }, +        }, +, +        ctx.sendDownstream(e);, +    }, +++ b/src/main/java/org/jboss/netty/handler/execution/ExecutionHandler.java, +import org.jboss.netty.channel.Channel;, +import org.jboss.netty.channel.ChannelDownstreamHandler;, +import org.jboss.netty.channel.ChannelState;, +import org.jboss.netty.channel.ChannelStateEvent;, +public class ExecutionHandler implements ChannelUpstreamHandler, ChannelDownstreamHandler, ExternalResourceReleasable {, +, +    public void handleDownstream(, +            ChannelHandlerContext ctx, ChannelEvent e) throws Exception {, +        if (e instanceof ChannelStateEvent) {, +            ChannelStateEvent cse = (ChannelStateEvent) e;, +            if (cse.getState() == ChannelState.INTEREST_OPS &&, +                (((Integer) cse.getValue()).intValue() & Channel.OP_READ) != 0) {, +, +                // setReadable(true) requested, +                boolean readSuspended = ctx.getAttachment() != null;, +                if (readSuspended) {, +                    // Drop the request silently if MemoryAwareThreadPool has, +                    // set the flag., +                    e.getFuture().setSuccess();, +                    return;, +                }, +            }, +        }, +, +        ctx.sendDownstream(e);, +    }, +++ b/src/main/java/org/jboss/netty/handler/execution/MemoryAwareThreadPoolExecutor.java, +import org.jboss.netty.channel.ChannelHandlerContext;, +                    ChannelHandlerContext ctx = eventTask.getContext();, +                    if (ctx.getHandler() instanceof ExecutionHandler) {, +                        // readSuspended = true;, +                        ctx.setAttachment(Boolean.TRUE);, +                    }, +            ChannelEventRunnable eventTask = (ChannelEventRunnable) task;, +            Channel channel = eventTask.getEvent().getChannel();, +                    ChannelHandlerContext ctx = eventTask.getContext();, +                    if (ctx.getHandler() instanceof ExecutionHandler) {, +                        // readSuspended = false;, +                        ctx.setAttachment(null);, +                    }]