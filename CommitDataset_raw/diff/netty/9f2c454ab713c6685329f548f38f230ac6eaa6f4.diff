[+++ b/common/src/main/java/io/netty/util/internal/DetectionUtil.java, +            // Check if its android, if so handle it the same way as java6., +            //, +            // See https://github.com/netty/netty/issues/282, +            Class.forName("android.app.Application");, +            return 6;, +        } catch (ClassNotFoundException e) {, +            //Ignore, +        }, +        try {, +++ b/common/src/main/java/io/netty/util/internal/DetectionUtil.java, +            // Check if its android, if so handle it the same way as java6., +            //, +            // See https://github.com/netty/netty/issues/282, +            Class.forName("android.app.Application");, +            return 6;, +        } catch (ClassNotFoundException e) {, +            //Ignore, +        }, +        try {, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioDatagramWorker.java, +import java.io.IOException;, +        } catch (final IOException e) {, +            if (!(e instanceof ClosedChannelException)) {, +    }, +++ b/common/src/main/java/io/netty/util/internal/DetectionUtil.java, +            // Check if its android, if so handle it the same way as java6., +            //, +            // See https://github.com/netty/netty/issues/282, +            Class.forName("android.app.Application");, +            return 6;, +        } catch (ClassNotFoundException e) {, +            //Ignore, +        }, +        try {, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioDatagramWorker.java, +import java.io.IOException;, +        } catch (final IOException e) {, +            if (!(e instanceof ClosedChannelException)) {, +    }, +++ b/transport/src/main/java/io/netty/channel/socket/oio/AbstractOioWorker.java, +    private volatile boolean done;, +    , +            boolean cont = false;, +                cont = process();, +            } catch (Throwable t) {, +                if (!channel.isSocketClosed()) {, +                    fireExceptionCaught(channel, t);, +                }, +            } finally {, +        , +        // Mark the worker event loop as done so we know that we need to run tasks directly and not queue them, +        // See #287, +        done = true; , +        , +        // just to make we don't have something left, +        processEventQueue(); , +        , +        // check if the current thread is the worker thread, +        //, +        // Also check if the event loop of the worker is complete. If so we need to run the task now. , +        // See #287, +        if (Thread.currentThread() == thread || done) { , +    private void processEventQueue() {, +++ b/common/src/main/java/io/netty/util/internal/DetectionUtil.java, +            // Check if its android, if so handle it the same way as java6., +            //, +            // See https://github.com/netty/netty/issues/282, +            Class.forName("android.app.Application");, +            return 6;, +        } catch (ClassNotFoundException e) {, +            //Ignore, +        }, +        try {, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioDatagramWorker.java, +import java.io.IOException;, +        } catch (final IOException e) {, +            if (!(e instanceof ClosedChannelException)) {, +    }, +++ b/transport/src/main/java/io/netty/channel/socket/oio/AbstractOioWorker.java, +    private volatile boolean done;, +    , +            boolean cont = false;, +                cont = process();, +            } catch (Throwable t) {, +                if (!channel.isSocketClosed()) {, +                    fireExceptionCaught(channel, t);, +                }, +            } finally {, +        , +        // Mark the worker event loop as done so we know that we need to run tasks directly and not queue them, +        // See #287, +        done = true; , +        , +        // just to make we don't have something left, +        processEventQueue(); , +        , +        // check if the current thread is the worker thread, +        //, +        // Also check if the event loop of the worker is complete. If so we need to run the task now. ]