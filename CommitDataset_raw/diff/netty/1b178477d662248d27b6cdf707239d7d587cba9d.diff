[+++ b/src/main/java/org/jboss/netty/handler/codec/compression/ZlibEncoder.java, +            int resultCode = z.deflateInit(compressionLevel, JZlib.W_ZLIB); // Default: ZLIB format, +            resultCode = z.deflateInit(compressionLevel, JZlib.W_ZLIB); // Default: ZLIB format, +++ b/src/main/java/org/jboss/netty/handler/codec/compression/ZlibEncoder.java, +            int resultCode = z.deflateInit(compressionLevel, JZlib.W_ZLIB); // Default: ZLIB format, +            resultCode = z.deflateInit(compressionLevel, JZlib.W_ZLIB); // Default: ZLIB format, +++ b/src/main/java/org/jboss/netty/util/internal/jzlib/Deflate.java, +import org.jboss.netty.util.internal.jzlib.JZlib.WrapperType;, +, +    WrapperType wrapperType;, +    private boolean wroteTrailer;, +    int deflateInit(ZStream strm, int level, int bits, WrapperType wrapperType) {, +                JZlib.DEF_MEM_LEVEL, JZlib.Z_DEFAULT_STRATEGY, wrapperType);, +            int memLevel, int strategy, WrapperType wrapperType) {, +            throw new IllegalArgumentException("windowBits: " + windowBits);, +        this.wrapperType = wrapperType;, +        wroteTrailer = false;, +        status = wrapperType == WrapperType.NONE? BUSY_STATE : INIT_STATE;, +, +        if (wrapperType == WrapperType.NONE || wroteTrailer) {, +        wroteTrailer = true; // write the trailer only once!, +++ b/src/main/java/org/jboss/netty/handler/codec/compression/ZlibEncoder.java, +            int resultCode = z.deflateInit(compressionLevel, JZlib.W_ZLIB); // Default: ZLIB format, +            resultCode = z.deflateInit(compressionLevel, JZlib.W_ZLIB); // Default: ZLIB format, +++ b/src/main/java/org/jboss/netty/util/internal/jzlib/Deflate.java, +import org.jboss.netty.util.internal.jzlib.JZlib.WrapperType;, +, +    WrapperType wrapperType;, +    private boolean wroteTrailer;, +    int deflateInit(ZStream strm, int level, int bits, WrapperType wrapperType) {, +                JZlib.DEF_MEM_LEVEL, JZlib.Z_DEFAULT_STRATEGY, wrapperType);, +            int memLevel, int strategy, WrapperType wrapperType) {, +            throw new IllegalArgumentException("windowBits: " + windowBits);, +        this.wrapperType = wrapperType;, +        wroteTrailer = false;, +        status = wrapperType == WrapperType.NONE? BUSY_STATE : INIT_STATE;, +, +        if (wrapperType == WrapperType.NONE || wroteTrailer) {, +        wroteTrailer = true; // write the trailer only once!, +++ b/src/main/java/org/jboss/netty/util/internal/jzlib/Inflate.java, +import org.jboss.netty.util.internal.jzlib.JZlib.WrapperType;, +, +    private WrapperType wrapperType;, +        z.istate.mode = z.istate.wrapperType == WrapperType.NONE? BLOCKS : METHOD;, +    int inflateInit(ZStream z, int w, WrapperType wrapperType) {, +        this.wrapperType = wrapperType;, +, +            throw new IllegalArgumentException("w: " + w);, +        z.istate.blocks = new InfBlocks(, +                z, z.istate.wrapperType == WrapperType.NONE? null : this,, +                if (z.istate.wrapperType == WrapperType.NONE) {, +++ b/src/main/java/org/jboss/netty/handler/codec/compression/ZlibEncoder.java, +            int resultCode = z.deflateInit(compressionLevel, JZlib.W_ZLIB); // Default: ZLIB format, +            resultCode = z.deflateInit(compressionLevel, JZlib.W_ZLIB); // Default: ZLIB format, +++ b/src/main/java/org/jboss/netty/util/internal/jzlib/Deflate.java, +import org.jboss.netty.util.internal.jzlib.JZlib.WrapperType;, +, +    WrapperType wrapperType;, +    private boolean wroteTrailer;, +    int deflateInit(ZStream strm, int level, int bits, WrapperType wrapperType) {, +                JZlib.DEF_MEM_LEVEL, JZlib.Z_DEFAULT_STRATEGY, wrapperType);, +            int memLevel, int strategy, WrapperType wrapperType) {, +            throw new IllegalArgumentException("windowBits: " + windowBits);, +        this.wrapperType = wrapperType;, +        wroteTrailer = false;, +        status = wrapperType == WrapperType.NONE? BUSY_STATE : INIT_STATE;, +, +        if (wrapperType == WrapperType.NONE || wroteTrailer) {, +        wroteTrailer = true; // write the trailer only once!, +++ b/src/main/java/org/jboss/netty/util/internal/jzlib/Inflate.java, +import org.jboss.netty.util.internal.jzlib.JZlib.WrapperType;, +, +    private WrapperType wrapperType;, +        z.istate.mode = z.istate.wrapperType == WrapperType.NONE? BLOCKS : METHOD;, +    int inflateInit(ZStream z, int w, WrapperType wrapperType) {, +        this.wrapperType = wrapperType;, +, +            throw new IllegalArgumentException("w: " + w);, +        z.istate.blocks = new InfBlocks(, +                z, z.istate.wrapperType == WrapperType.NONE? null : this,, +                if (z.istate.wrapperType == WrapperType.NONE) {, +++ b/src/main/java/org/jboss/netty/util/internal/jzlib/JZlib.java, +    // wrapper types, +    public static final Enum<?> W_NONE = WrapperType.NONE;, +    public static final Enum<?> W_ZLIB = WrapperType.ZLIB;, +    public static final Enum<?> W_GZIP = WrapperType.GZIP;, +    static enum WrapperType {, +        NONE, ZLIB, GZIP;, +    }, +++ b/src/main/java/org/jboss/netty/handler/codec/compression/ZlibEncoder.java, +            int resultCode = z.deflateInit(compressionLevel, JZlib.W_ZLIB); // Default: ZLIB format, +            resultCode = z.deflateInit(compressionLevel, JZlib.W_ZLIB); // Default: ZLIB format, +++ b/src/main/java/org/jboss/netty/util/internal/jzlib/Deflate.java, +import org.jboss.netty.util.internal.jzlib.JZlib.WrapperType;, +, +    WrapperType wrapperType;, +    private boolean wroteTrailer;, +    int deflateInit(ZStream strm, int level, int bits, WrapperType wrapperType) {, +                JZlib.DEF_MEM_LEVEL, JZlib.Z_DEFAULT_STRATEGY, wrapperType);, +            int memLevel, int strategy, WrapperType wrapperType) {]