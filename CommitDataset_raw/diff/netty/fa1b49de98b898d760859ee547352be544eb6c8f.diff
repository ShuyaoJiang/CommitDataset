[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +public abstract class HttpContentDecoder extends MessageToMessageDecoder<HttpObject> {, +    protected Object decode(ChannelHandlerContext ctx, HttpObject msg) throws Exception {, +    protected void freeInboundMessage(HttpObject msg) throws Exception {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +public abstract class HttpContentDecoder extends MessageToMessageDecoder<HttpObject> {, +    protected Object decode(ChannelHandlerContext ctx, HttpObject msg) throws Exception {, +    protected void freeInboundMessage(HttpObject msg) throws Exception {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +public abstract class HttpContentDecoder extends MessageToMessageDecoder<HttpObject> {, +    protected Object decode(ChannelHandlerContext ctx, HttpObject msg) throws Exception {, +    protected void freeInboundMessage(HttpObject msg) throws Exception {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHttpDecoder.java, +    public boolean acceptInboundMessage(Object msg) throws Exception {, +        return msg instanceof SpdyDataFrame || msg instanceof SpdyControlFrame;, +    }, +, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +public abstract class HttpContentDecoder extends MessageToMessageDecoder<HttpObject> {, +    protected Object decode(ChannelHandlerContext ctx, HttpObject msg) throws Exception {, +    protected void freeInboundMessage(HttpObject msg) throws Exception {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHttpDecoder.java, +    public boolean acceptInboundMessage(Object msg) throws Exception {, +        return msg instanceof SpdyDataFrame || msg instanceof SpdyControlFrame;, +    }, +, +    @Override, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageCodec.java, +, +        public boolean acceptInboundMessage(Object msg) throws Exception {, +            return isDecodable(msg);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +public abstract class HttpContentDecoder extends MessageToMessageDecoder<HttpObject> {, +    protected Object decode(ChannelHandlerContext ctx, HttpObject msg) throws Exception {, +    protected void freeInboundMessage(HttpObject msg) throws Exception {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHttpDecoder.java, +    public boolean acceptInboundMessage(Object msg) throws Exception {, +        return msg instanceof SpdyDataFrame || msg instanceof SpdyControlFrame;, +    }, +, +    @Override, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageCodec.java, +, +        public boolean acceptInboundMessage(Object msg) throws Exception {, +            return isDecodable(msg);, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +import io.netty.channel.ChannelInboundMessageHandlerAdapter;, +public abstract class MessageToMessageDecoder<I> extends ChannelInboundMessageHandlerAdapter<I> {, +    protected MessageToMessageDecoder() {, +        super(MessageToMessageDecoder.class, 0);, +    }, +    protected MessageToMessageDecoder(, +            @SuppressWarnings("rawtypes"), +            Class<? extends ChannelInboundMessageHandlerAdapter> parameterizedHandlerType,, +            int messageTypeParamIndex) {, +        super(parameterizedHandlerType, messageTypeParamIndex);, +    protected final void messageReceived(ChannelHandlerContext ctx, I msg) throws Exception {, +        Object decoded = decode(ctx, msg);, +        if (decoded != null) {, +            ctx.nextInboundMessageBuffer().add(decoded);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +public abstract class HttpContentDecoder extends MessageToMessageDecoder<HttpObject> {, +    protected Object decode(ChannelHandlerContext ctx, HttpObject msg) throws Exception {, +    protected void freeInboundMessage(HttpObject msg) throws Exception {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectAggregator.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHttpDecoder.java, +    public boolean acceptInboundMessage(Object msg) throws Exception {, +        return msg instanceof SpdyDataFrame || msg instanceof SpdyControlFrame;, +    }, +, +    @Override, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageCodec.java, +, +        public boolean acceptInboundMessage(Object msg) throws Exception {, +            return isDecodable(msg);, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +import io.netty.channel.ChannelInboundMessageHandlerAdapter;, +public abstract class MessageToMessageDecoder<I> extends ChannelInboundMessageHandlerAdapter<I> {, +    protected MessageToMessageDecoder() {, +        super(MessageToMessageDecoder.class, 0);, +    }, +    protected MessageToMessageDecoder(, +            @SuppressWarnings("rawtypes"), +            Class<? extends ChannelInboundMessageHandlerAdapter> parameterizedHandlerType,, +            int messageTypeParamIndex) {, +        super(parameterizedHandlerType, messageTypeParamIndex);, +    protected final void messageReceived(ChannelHandlerContext ctx, I msg) throws Exception {, +        Object decoded = decode(ctx, msg);, +        if (decoded != null) {, +            ctx.nextInboundMessageBuffer().add(decoded);, +++ b/codec/src/main/java/io/netty/handler/codec/base64/Base64Decoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +public abstract class HttpContentDecoder extends MessageToMessageDecoder<HttpObject> {, +    protected Object decode(ChannelHandlerContext ctx, HttpObject msg) throws Exception {, +    protected void freeInboundMessage(HttpObject msg) throws Exception {]