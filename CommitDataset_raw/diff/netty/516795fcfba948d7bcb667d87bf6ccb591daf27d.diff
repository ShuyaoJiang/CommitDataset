[+++ b/common/src/main/java/io/netty/util/internal/logging/AbstractInternalLogger.java, +    private static final String EXCEPTION_MESSAGE = "Unexpected exception:";, +, +    public void trace(Throwable t) {, +        trace(EXCEPTION_MESSAGE, t);, +    }, +, +    @Override, +    public void debug(Throwable t) {, +        debug(EXCEPTION_MESSAGE, t);, +    }, +, +    @Override, +    public void info(Throwable t) {, +        info(EXCEPTION_MESSAGE, t);, +, +    }, +, +    @Override, +    public void warn(Throwable t) {, +        warn(EXCEPTION_MESSAGE, t);, +    }, +, +    @Override, +    public void error(Throwable t) {, +        error(EXCEPTION_MESSAGE, t);, +    }, +, +    @Override, +    public void log(InternalLogLevel level, Throwable cause) {, +        switch (level) {, +            case TRACE:, +                trace(cause);, +                break;, +            case DEBUG:, +                debug(cause);, +                break;, +            case INFO:, +                info(cause);, +                break;, +            case WARN:, +                warn(cause);, +                break;, +            case ERROR:, +                error(cause);, +                break;, +            default:, +                throw new Error();, +        }, +    }, +, +    @Override, +++ b/common/src/main/java/io/netty/util/internal/logging/AbstractInternalLogger.java, +    private static final String EXCEPTION_MESSAGE = "Unexpected exception:";, +, +    public void trace(Throwable t) {, +        trace(EXCEPTION_MESSAGE, t);, +    }, +, +    @Override, +    public void debug(Throwable t) {, +        debug(EXCEPTION_MESSAGE, t);, +    }, +, +    @Override, +    public void info(Throwable t) {, +        info(EXCEPTION_MESSAGE, t);, +, +    }, +, +    @Override, +    public void warn(Throwable t) {, +        warn(EXCEPTION_MESSAGE, t);, +    }, +, +    @Override, +    public void error(Throwable t) {, +        error(EXCEPTION_MESSAGE, t);, +    }, +, +    @Override, +    public void log(InternalLogLevel level, Throwable cause) {, +        switch (level) {, +            case TRACE:, +                trace(cause);, +                break;, +            case DEBUG:, +                debug(cause);, +                break;, +            case INFO:, +                info(cause);, +                break;, +            case WARN:, +                warn(cause);, +                break;, +            case ERROR:, +                error(cause);, +                break;, +            default:, +                throw new Error();]