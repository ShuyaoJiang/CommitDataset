[+++ b/src/main/java/org/jboss/netty/channel/local/LocalAddress.java, +                int b = System.identityHashCode(this);, +++ b/src/main/java/org/jboss/netty/channel/local/LocalAddress.java, +                int b = System.identityHashCode(this);, +++ b/src/main/java/org/jboss/netty/handler/codec/frame/LengthFieldBasedFrameDecoder.java, +    private final boolean lengthFieldIncludedInFrameLength;, +        this(maxFrameLength, lengthFieldOffset, lengthFieldLength, 0, 0, false);, +        this(maxFrameLength, lengthFieldOffset, lengthFieldLength, lengthAdjustment,, +                initialBytesToStrip, false);, +    }, +, +    /**, +     * Creates a new instance., +     *, +     * @param maxFrameLength, +     *        the maximum length of the frame.  If the length of the frame is, +     *        greater than this value, {@link TooLongFrameException} will be, +     *        thrown., +     * @param lengthFieldOffset, +     *        the offset of the length field, +     * @param lengthFieldLength, +     *        the length of the length field, +     * @param lengthAdjustment, +     *        the compensation value to add to the value of the length field, +     * @param initialBytesToStrip, +     *        the number of first bytes to strip out from the decoded frame, +     * @param lengthFieldIncludedInFrameLength, +     *        whether to count length field into frame length, +     */, +    public LengthFieldBasedFrameDecoder(, +            int maxFrameLength,, +            int lengthFieldOffset, int lengthFieldLength,, +            int lengthAdjustment, int initialBytesToStrip, boolean lengthFieldIncludedInFrameLength) {, +        this.lengthFieldIncludedInFrameLength = lengthFieldIncludedInFrameLength;, +        if (!lengthFieldIncludedInFrameLength) {, +        }, +++ b/src/main/java/org/jboss/netty/channel/local/LocalAddress.java, +                int b = System.identityHashCode(this);, +++ b/src/main/java/org/jboss/netty/handler/codec/frame/LengthFieldBasedFrameDecoder.java, +    private final boolean lengthFieldIncludedInFrameLength;, +        this(maxFrameLength, lengthFieldOffset, lengthFieldLength, 0, 0, false);, +        this(maxFrameLength, lengthFieldOffset, lengthFieldLength, lengthAdjustment,, +                initialBytesToStrip, false);, +    }, +, +    /**, +     * Creates a new instance., +     *, +     * @param maxFrameLength, +     *        the maximum length of the frame.  If the length of the frame is, +     *        greater than this value, {@link TooLongFrameException} will be, +     *        thrown., +     * @param lengthFieldOffset, +     *        the offset of the length field, +     * @param lengthFieldLength, +     *        the length of the length field, +     * @param lengthAdjustment, +     *        the compensation value to add to the value of the length field, +     * @param initialBytesToStrip, +     *        the number of first bytes to strip out from the decoded frame, +     * @param lengthFieldIncludedInFrameLength, +     *        whether to count length field into frame length, +     */, +    public LengthFieldBasedFrameDecoder(, +            int maxFrameLength,, +            int lengthFieldOffset, int lengthFieldLength,, +            int lengthAdjustment, int initialBytesToStrip, boolean lengthFieldIncludedInFrameLength) {, +        this.lengthFieldIncludedInFrameLength = lengthFieldIncludedInFrameLength;, +        if (!lengthFieldIncludedInFrameLength) {, +        }, +++ b/src/main/java/org/jboss/netty/handler/codec/replay/ReplayingDecoder.java, +++ b/src/main/java/org/jboss/netty/channel/local/LocalAddress.java, +                int b = System.identityHashCode(this);, +++ b/src/main/java/org/jboss/netty/handler/codec/frame/LengthFieldBasedFrameDecoder.java, +    private final boolean lengthFieldIncludedInFrameLength;, +        this(maxFrameLength, lengthFieldOffset, lengthFieldLength, 0, 0, false);, +        this(maxFrameLength, lengthFieldOffset, lengthFieldLength, lengthAdjustment,, +                initialBytesToStrip, false);, +    }, +, +    /**, +     * Creates a new instance., +     *, +     * @param maxFrameLength, +     *        the maximum length of the frame.  If the length of the frame is, +     *        greater than this value, {@link TooLongFrameException} will be, +     *        thrown., +     * @param lengthFieldOffset, +     *        the offset of the length field, +     * @param lengthFieldLength, +     *        the length of the length field, +     * @param lengthAdjustment, +     *        the compensation value to add to the value of the length field, +     * @param initialBytesToStrip, +     *        the number of first bytes to strip out from the decoded frame, +     * @param lengthFieldIncludedInFrameLength, +     *        whether to count length field into frame length, +     */, +    public LengthFieldBasedFrameDecoder(, +            int maxFrameLength,]