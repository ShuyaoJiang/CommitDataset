[+++ b/all/pom.xml, +  <groupId>io.netty</groupId>, +++ b/all/pom.xml, +  <groupId>io.netty</groupId>, +++ /dev/null, +++ b/all/pom.xml, +  <groupId>io.netty</groupId>, +++ /dev/null, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return readableBytes() > 0;, +++ b/all/pom.xml, +  <groupId>io.netty</groupId>, +++ /dev/null, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return readableBytes() > 0;, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +import io.netty.util.internal.DetectionUtil;, +, +        if (DetectionUtil.javaVersion() >= 7) {, +            return (int) out.write(toByteBuffers(index, length));, +        }, +, +        // If the list is empty we need to assign a new one because, +        // we get a List that is immutable. , +        //, +        // See https://github.com/netty/netty/issues/325, +        if (list.isEmpty()) {, +            list = new ArrayList<ChannelBuffer>(1);, +        }, +        , +++ b/all/pom.xml, +  <groupId>io.netty</groupId>, +++ /dev/null, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return readableBytes() > 0;, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +import io.netty.util.internal.DetectionUtil;, +, +        if (DetectionUtil.javaVersion() >= 7) {, +            return (int) out.write(toByteBuffers(index, length));, +        }, +, +        // If the list is empty we need to assign a new one because, +        // we get a List that is immutable. , +        //, +        // See https://github.com/netty/netty/issues/325, +        if (list.isEmpty()) {, +            list = new ArrayList<ChannelBuffer>(1);, +        }, +        , +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +            , +            , +            // Check if we exceeded the maximum size of 2gb if this is the case then , +            // newCapacity == 0, +            //, +            // https://github.com/netty/netty/issues/258, +            if (newCapacity == 0) {, +                throw new IllegalStateException("Maximum size of 2gb exceeded");, +            }, +++ b/all/pom.xml, +  <groupId>io.netty</groupId>, +++ /dev/null, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return readableBytes() > 0;, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +import io.netty.util.internal.DetectionUtil;, +, +        if (DetectionUtil.javaVersion() >= 7) {, +            return (int) out.write(toByteBuffers(index, length));, +        }, +, +        // If the list is empty we need to assign a new one because, +        // we get a List that is immutable. , +        //, +        // See https://github.com/netty/netty/issues/325, +        if (list.isEmpty()) {, +            list = new ArrayList<ChannelBuffer>(1);, +        }, +        , +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +            , +            , +            // Check if we exceeded the maximum size of 2gb if this is the case then , +            // newCapacity == 0, +            //, +            // https://github.com/netty/netty/issues/258, +            if (newCapacity == 0) {, +                throw new IllegalStateException("Maximum size of 2gb exceeded");, +            }, +++ b/buffer/src/test/java/io/netty/buffer/AbstractChannelBufferTest.java, +    , +    // Test case for https://github.com/netty/netty/issues/325, +    @Test, +    public void testDiscardAllReadBytes() {, +        buffer.writerIndex(buffer.capacity());, +        buffer.readerIndex(buffer.writerIndex());, +        buffer.discardReadBytes();, +    }, +++ b/all/pom.xml]