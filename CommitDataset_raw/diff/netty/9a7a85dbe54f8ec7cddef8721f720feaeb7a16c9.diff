[+++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.ByteProcessor;, +    public int forEachByte(ByteProcessor processor) {, +    public int forEachByte(int index, int length, ByteProcessor processor) {, +    private int forEachByteAsc0(int index, int length, ByteProcessor processor) {, +    public int forEachByteDesc(ByteProcessor processor) {, +    public int forEachByteDesc(int index, int length, ByteProcessor processor) {, +    private int forEachByteDesc0(int index, int length, ByteProcessor processor) {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.ByteProcessor;, +    public int forEachByte(ByteProcessor processor) {, +    public int forEachByte(int index, int length, ByteProcessor processor) {, +    private int forEachByteAsc0(int index, int length, ByteProcessor processor) {, +    public int forEachByteDesc(ByteProcessor processor) {, +    public int forEachByteDesc(int index, int length, ByteProcessor processor) {, +    private int forEachByteDesc0(int index, int length, ByteProcessor processor) {, +++ b/buffer/src/main/java/io/netty/buffer/AdvancedLeakAwareByteBuf.java, +import io.netty.util.ByteProcessor;, +    public int forEachByte(ByteProcessor processor) {, +    public int forEachByte(int index, int length, ByteProcessor processor) {, +    public int forEachByteDesc(ByteProcessor processor) {, +    public int forEachByteDesc(int index, int length, ByteProcessor processor) {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.ByteProcessor;, +    public int forEachByte(ByteProcessor processor) {, +    public int forEachByte(int index, int length, ByteProcessor processor) {, +    private int forEachByteAsc0(int index, int length, ByteProcessor processor) {, +    public int forEachByteDesc(ByteProcessor processor) {, +    public int forEachByteDesc(int index, int length, ByteProcessor processor) {, +    private int forEachByteDesc0(int index, int length, ByteProcessor processor) {, +++ b/buffer/src/main/java/io/netty/buffer/AdvancedLeakAwareByteBuf.java, +import io.netty.util.ByteProcessor;, +    public int forEachByte(ByteProcessor processor) {, +    public int forEachByte(int index, int length, ByteProcessor processor) {, +    public int forEachByteDesc(ByteProcessor processor) {, +    public int forEachByteDesc(int index, int length, ByteProcessor processor) {, +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +import io.netty.util.ByteProcessor;, + * For complicated searches, use {@link #forEachByte(int, int, ByteProcessor)} with a {@link ByteProcessor}, +     *         The last-visited index If the {@link ByteProcessor#process(byte)} returned {@code false}., +    public abstract int forEachByte(ByteProcessor processor);, +     *         The last-visited index If the {@link ByteProcessor#process(byte)} returned {@code false}., +    public abstract int forEachByte(int index, int length, ByteProcessor processor);, +     *         The last-visited index If the {@link ByteProcessor#process(byte)} returned {@code false}., +    public abstract int forEachByteDesc(ByteProcessor processor);, +     *         The last-visited index If the {@link ByteProcessor#process(byte)} returned {@code false}., +    public abstract int forEachByteDesc(int index, int length, ByteProcessor processor);, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.ByteProcessor;, +    public int forEachByte(ByteProcessor processor) {, +    public int forEachByte(int index, int length, ByteProcessor processor) {, +    private int forEachByteAsc0(int index, int length, ByteProcessor processor) {, +    public int forEachByteDesc(ByteProcessor processor) {, +    public int forEachByteDesc(int index, int length, ByteProcessor processor) {, +    private int forEachByteDesc0(int index, int length, ByteProcessor processor) {, +++ b/buffer/src/main/java/io/netty/buffer/AdvancedLeakAwareByteBuf.java, +import io.netty.util.ByteProcessor;, +    public int forEachByte(ByteProcessor processor) {, +    public int forEachByte(int index, int length, ByteProcessor processor) {, +    public int forEachByteDesc(ByteProcessor processor) {, +    public int forEachByteDesc(int index, int length, ByteProcessor processor) {, +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +import io.netty.util.ByteProcessor;, + * For complicated searches, use {@link #forEachByte(int, int, ByteProcessor)} with a {@link ByteProcessor}, +     *         The last-visited index If the {@link ByteProcessor#process(byte)} returned {@code false}., +    public abstract int forEachByte(ByteProcessor processor);, +     *         The last-visited index If the {@link ByteProcessor#process(byte)} returned {@code false}., +    public abstract int forEachByte(int index, int length, ByteProcessor processor);, +     *         The last-visited index If the {@link ByteProcessor#process(byte)} returned {@code false}., +    public abstract int forEachByteDesc(ByteProcessor processor);, +     *         The last-visited index If the {@link ByteProcessor#process(byte)} returned {@code false}., +    public abstract int forEachByteDesc(int index, int length, ByteProcessor processor);, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufProcessor.java, +import io.netty.util.ByteProcessor;, + * @deprecated Use {@link ByteProcessor}., + */, +public interface ByteBufProcessor extends ByteProcessor {, +, +    /**, +     * @deprecated Use {@link ByteProcessor#FIND_NULL}., +     * @deprecated Use {@link ByteProcessor#FIND_NON_NUL}., +     * @deprecated Use {@link ByteProcessor#FIND_CR}., +     * @deprecated Use {@link ByteProcessor#FIND_NON_CR}., +     * @deprecated Use {@link ByteProcessor#FIND_LF}., +     * @deprecated Use {@link ByteProcessor#FIND_NON_LF}., +     * @deprecated Use {@link ByteProcessor#FIND_CRLF}., +     * @deprecated Use {@link ByteProcessor#FIND_NON_CRLF}., +     * @deprecated Use {@link ByteProcessor#FIND_LINEAR_WHITESPACE}., +     * @deprecated Use {@link ByteProcessor#FIND_NON_LINEAR_WHITESPACE}., +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +import io.netty.util.ByteProcessor;, +    public int forEachByte(ByteProcessor processor) {, +    public int forEachByte(int index, int length, ByteProcessor processor) {, +    private int forEachByteAsc0(int index, int length, ByteProcessor processor) {, +    public int forEachByteDesc(ByteProcessor processor) {, +    public int forEachByteDesc(int index, int length, ByteProcessor processor) {, +    private int forEachByteDesc0(int index, int length, ByteProcessor processor) {, +++ b/buffer/src/main/java/io/netty/buffer/AdvancedLeakAwareByteBuf.java, +import io.netty.util.ByteProcessor;, +    public int forEachByte(ByteProcessor processor) {]