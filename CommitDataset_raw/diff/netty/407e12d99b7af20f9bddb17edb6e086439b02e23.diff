[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +                    if (logger.isDebugEnabled()) {, +                        logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +                    if (logger.isDebugEnabled()) {, +                        logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker07.java, +                if (logger.isDebugEnabled()) {, +                    logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +                    if (logger.isDebugEnabled()) {, +                        logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker07.java, +                if (logger.isDebugEnabled()) {, +                    logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08.java, +                if (logger.isDebugEnabled()) {, +                    logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +                    if (logger.isDebugEnabled()) {, +                        logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker07.java, +                if (logger.isDebugEnabled()) {, +                    logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08.java, +                if (logger.isDebugEnabled()) {, +                    logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker13.java, +                if (logger.isDebugEnabled()) {, +                    logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +                    if (logger.isDebugEnabled()) {, +                        logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker07.java, +                if (logger.isDebugEnabled()) {, +                    logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08.java, +                if (logger.isDebugEnabled()) {, +                    logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker13.java, +                if (logger.isDebugEnabled()) {, +                    logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                }, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00Test.java, +        testPerformOpeningHandshake0(true);, +    }, +, +    @Test, +    public void testPerformOpeningHandshakeSubProtocolNotSupported() {, +        testPerformOpeningHandshake0(false);, +    }, +, +    private static void testPerformOpeningHandshake0(boolean subProtocol) {, +        if (subProtocol) {, +        } else {, +            new WebSocketServerHandshaker00(, +                    "ws://example.com/chat", null, Integer.MAX_VALUE).handshake(ch, req);, +        }, +        if (subProtocol) {, +        } else {, +            Assert.assertNull(res.headers().get(Names.SEC_WEBSOCKET_PROTOCOL));, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +                    if (logger.isDebugEnabled()) {, +                        logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker07.java, +                if (logger.isDebugEnabled()) {, +                    logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08.java, +                if (logger.isDebugEnabled()) {, +                    logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker13.java, +                if (logger.isDebugEnabled()) {, +                    logger.debug(String.format("Requested subprotocol(s) not supported: %s.", subprotocols));, +                }, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00Test.java, +        testPerformOpeningHandshake0(true);, +    }, +, +    @Test, +    public void testPerformOpeningHandshakeSubProtocolNotSupported() {, +        testPerformOpeningHandshake0(false);, +    }, +]