[+++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +     * Writes a big-endian 16-bit short integer to the buffer., +     */, +    @SuppressWarnings("deprecation"), +    public static ByteBuf writeShortBE(ByteBuf buf, int shortValue) {, +        return buf.order() == ByteOrder.BIG_ENDIAN? buf.writeShort(shortValue) : buf.writeShortLE(shortValue);, +    }, +, +    /**, +     * Sets a big-endian 16-bit short integer to the buffer., +     */, +    @SuppressWarnings("deprecation"), +    public static ByteBuf setShortBE(ByteBuf buf, int index, int shortValue) {, +        return buf.order() == ByteOrder.BIG_ENDIAN? buf.setShort(index, shortValue) : buf.setShortLE(index, shortValue);, +    }, +, +    /**, +     * Writes a big-endian 24-bit medium integer to the buffer., +     */, +    @SuppressWarnings("deprecation"), +    public static ByteBuf writeMediumBE(ByteBuf buf, int mediumValue) {, +        return buf.order() == ByteOrder.BIG_ENDIAN? buf.writeMedium(mediumValue) : buf.writeMediumLE(mediumValue);, +    }, +, +    /**, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +     * Writes a big-endian 16-bit short integer to the buffer., +     */, +    @SuppressWarnings("deprecation"), +    public static ByteBuf writeShortBE(ByteBuf buf, int shortValue) {, +        return buf.order() == ByteOrder.BIG_ENDIAN? buf.writeShort(shortValue) : buf.writeShortLE(shortValue);, +    }, +, +    /**, +     * Sets a big-endian 16-bit short integer to the buffer., +     */, +    @SuppressWarnings("deprecation"), +    public static ByteBuf setShortBE(ByteBuf buf, int index, int shortValue) {, +        return buf.order() == ByteOrder.BIG_ENDIAN? buf.setShort(index, shortValue) : buf.setShortLE(index, shortValue);, +    }, +, +    /**, +     * Writes a big-endian 24-bit medium integer to the buffer., +     */, +    @SuppressWarnings("deprecation"), +    public static ByteBuf writeMediumBE(ByteBuf buf, int mediumValue) {, +        return buf.order() == ByteOrder.BIG_ENDIAN? buf.writeMedium(mediumValue) : buf.writeMediumLE(mediumValue);, +    }, +, +    /**, +++ b/buffer/src/test/java/io/netty/buffer/ByteBufUtilTest.java, +import java.nio.ByteOrder;, +    @SuppressWarnings("deprecation"), +    @Test, +    public void writeShortBE() {, +        int expected = 0x1234;, +, +        ByteBuf buf = Unpooled.buffer(2).order(ByteOrder.BIG_ENDIAN);, +        ByteBufUtil.writeShortBE(buf, expected);, +        assertEquals(expected, buf.readShort());, +        buf.resetReaderIndex();, +        assertEquals(ByteBufUtil.swapShort((short) expected), buf.readShortLE());, +        buf.release();, +, +        buf = Unpooled.buffer(2).order(ByteOrder.LITTLE_ENDIAN);, +        ByteBufUtil.writeShortBE(buf, expected);, +        assertEquals((short) expected, buf.readShortLE());, +        buf.resetReaderIndex();, +        assertEquals(ByteBufUtil.swapShort((short) expected), buf.readShort());, +        buf.release();, +    }, +, +    @SuppressWarnings("deprecation"), +    @Test, +    public void setShortBE() {, +        int shortValue = 0x1234;, +, +        ByteBuf buf = Unpooled.wrappedBuffer(new byte[2]).order(ByteOrder.BIG_ENDIAN);, +        ByteBufUtil.setShortBE(buf, 0, shortValue);, +        assertEquals(shortValue, buf.readShort());, +        buf.resetReaderIndex();, +        assertEquals(ByteBufUtil.swapShort((short) shortValue), buf.readShortLE());, +        buf.release();, +, +        buf = Unpooled.wrappedBuffer(new byte[2]).order(ByteOrder.LITTLE_ENDIAN);, +        ByteBufUtil.setShortBE(buf, 0, shortValue);, +        assertEquals((short) shortValue, buf.readShortLE());, +        buf.resetReaderIndex();, +        assertEquals(ByteBufUtil.swapShort((short) shortValue), buf.readShort());, +        buf.release();, +    }, +, +    @SuppressWarnings("deprecation"), +    @Test, +    public void writeMediumBE() {, +        int mediumValue = 0x123456;, +, +        ByteBuf buf = Unpooled.buffer(4).order(ByteOrder.BIG_ENDIAN);, +        ByteBufUtil.writeMediumBE(buf, mediumValue);, +        assertEquals(mediumValue, buf.readMedium());]