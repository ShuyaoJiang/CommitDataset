[+++ b/src/main/java/org/jboss/netty/example/http/HttpClientPipelineFactory.java, +        pipeline.addLast("decoder", new HttpResponseDecoder(8192, 8192, 8192));, +++ b/src/main/java/org/jboss/netty/example/http/HttpClientPipelineFactory.java, +        pipeline.addLast("decoder", new HttpResponseDecoder(8192, 8192, 8192));, +++ b/src/main/java/org/jboss/netty/example/http/HttpRequestHandler.java, +++ b/src/main/java/org/jboss/netty/example/http/HttpClientPipelineFactory.java, +        pipeline.addLast("decoder", new HttpResponseDecoder(8192, 8192, 8192));, +++ b/src/main/java/org/jboss/netty/example/http/HttpRequestHandler.java, +++ b/src/main/java/org/jboss/netty/example/http/HttpResponseHandler.java, +import org.jboss.netty.buffer.ChannelBuffer;, +import org.jboss.netty.handler.codec.http.HttpChunk;, + * @author Trustin Lee (tlee@redhat.com), +@ChannelPipelineCoverage("one"), +, +    private volatile boolean readingChunks;, +, +        if (!readingChunks) {, +, +            System.out.println("STATUS: " + response.getStatus());, +            System.out.println("VERSION: " + response.getProtocolVersion());, +            System.out.println();, +, +            if (!response.getHeaderNames().isEmpty()) {, +                for (String name: response.getHeaderNames()) {, +                    for (String value: response.getHeaders(name)) {, +                        System.out.println("HEADER: " + name + " = " + value);, +                    }, +                }, +                System.out.println();, +            }, +, +            if (response.getStatus().getCode() == 200 && response.isChunked()) {, +                readingChunks = true;, +                System.out.println("CHUNKED CONTENT:");, +            } else {, +                ChannelBuffer content = response.getContent();, +                if (content.readable()) {, +                    System.out.println("CONTENT:");, +                    System.out.println(content.toString("UTF-8"));, +                }, +            }, +        } else {, +            HttpChunk chunk = (HttpChunk) e.getMessage();, +            if (chunk.isLast()) {, +                readingChunks = false;, +            } else {, +                System.out.println(chunk.getContent().toString("UTF-8"));, +            }, +        }, +++ b/src/main/java/org/jboss/netty/example/http/HttpClientPipelineFactory.java, +        pipeline.addLast("decoder", new HttpResponseDecoder(8192, 8192, 8192));, +++ b/src/main/java/org/jboss/netty/example/http/HttpRequestHandler.java, +++ b/src/main/java/org/jboss/netty/example/http/HttpResponseHandler.java, +import org.jboss.netty.buffer.ChannelBuffer;, +import org.jboss.netty.handler.codec.http.HttpChunk;, + * @author Trustin Lee (tlee@redhat.com), +@ChannelPipelineCoverage("one"), +, +    private volatile boolean readingChunks;, +, +        if (!readingChunks) {, +, +            System.out.println("STATUS: " + response.getStatus());, +            System.out.println("VERSION: " + response.getProtocolVersion());, +            System.out.println();, +, +            if (!response.getHeaderNames().isEmpty()) {, +                for (String name: response.getHeaderNames()) {, +                    for (String value: response.getHeaders(name)) {, +                        System.out.println("HEADER: " + name + " = " + value);, +                    }, +                }, +                System.out.println();, +            }, +, +            if (response.getStatus().getCode() == 200 && response.isChunked()) {, +                readingChunks = true;, +                System.out.println("CHUNKED CONTENT:");, +            } else {, +                ChannelBuffer content = response.getContent();, +                if (content.readable()) {, +                    System.out.println("CONTENT:");, +                    System.out.println(content.toString("UTF-8"));, +                }, +            }, +        } else {, +            HttpChunk chunk = (HttpChunk) e.getMessage();, +            if (chunk.isLast()) {, +                readingChunks = false;, +            } else {, +                System.out.println(chunk.getContent().toString("UTF-8"));, +            }, +        }, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMessageDecoder.java, +                    "maxChunkSize must be a positive integer: " +, +                switch (nextState) {, +                case READ_FIXED_LENGTH_CONTENT:, +                    if (contentLength > maxChunkSize) {, +                    }, +                    break;]