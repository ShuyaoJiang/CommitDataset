[+++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslKeyMaterialManager.java, +import io.netty.buffer.ByteBufAllocator;, +import static io.netty.handler.ssl.ReferenceCountedOpenSslContext.freeBio;, +import static io.netty.handler.ssl.ReferenceCountedOpenSslContext.newBIO;, +import static io.netty.handler.ssl.ReferenceCountedOpenSslContext.toBIO;, +, +        long keyCertChainBio2 = 0;, +, +                // Only encode one time, +                PemEncoded encoded = PemX509Certificate.toPEM(ByteBufAllocator.DEFAULT, true, certificates);, +                try {, +                    keyCertChainBio = newBIO(encoded.content().retainedSlice());, +                    keyCertChainBio2 = newBIO(encoded.content().retainedSlice());, +, +                        keyBio = toBIO(key);, +                    SSL.setCertificateChainBio(ssl, keyCertChainBio2, false);, +                } finally {, +                    encoded.release();, +                }, +            freeBio(keyBio);, +            freeBio(keyCertChainBio);, +            freeBio(keyCertChainBio2);, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslKeyMaterialManager.java, +import io.netty.buffer.ByteBufAllocator;, +import static io.netty.handler.ssl.ReferenceCountedOpenSslContext.freeBio;, +import static io.netty.handler.ssl.ReferenceCountedOpenSslContext.newBIO;, +import static io.netty.handler.ssl.ReferenceCountedOpenSslContext.toBIO;, +, +        long keyCertChainBio2 = 0;, +, +                // Only encode one time, +                PemEncoded encoded = PemX509Certificate.toPEM(ByteBufAllocator.DEFAULT, true, certificates);, +                try {, +                    keyCertChainBio = newBIO(encoded.content().retainedSlice());, +                    keyCertChainBio2 = newBIO(encoded.content().retainedSlice());, +, +                        keyBio = toBIO(key);, +                    SSL.setCertificateChainBio(ssl, keyCertChainBio2, false);, +                } finally {, +                    encoded.release();, +                }, +            freeBio(keyBio);, +            freeBio(keyCertChainBio);, +            freeBio(keyCertChainBio2);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java, +        long keyCertChainBio2 = 0;, +        PemEncoded encoded = null;, +            // Only encode one time, +            encoded = PemX509Certificate.toPEM(ByteBufAllocator.DEFAULT, true, keyCertChain);, +            keyCertChainBio = newBIO(encoded.content().retainedSlice());, +            keyCertChainBio2 = newBIO(encoded.content().retainedSlice());, +, +            if (key != null) {, +            }, +            SSLContext.setCertificateChainBio(ctx, keyCertChainBio2, false);, +            freeBio(keyBio);, +            freeBio(keyCertChainBio);, +            freeBio(keyCertChainBio2);, +            if (encoded != null) {, +                encoded.release();, +, +    static void freeBio(long bio) {, +        if (bio != 0) {, +            SSL.freeBIO(bio);, +        }, +    }, +, +    static long newBIO(ByteBuf buffer) throws Exception {]