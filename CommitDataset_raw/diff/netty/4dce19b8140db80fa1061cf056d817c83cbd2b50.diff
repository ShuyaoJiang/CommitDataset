[+++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +            return threshold;, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +            return threshold;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +                    sb.append('-');, +                        sb.append('-');, +                    sb.append('-');, +                            sb.append('-');, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +            return threshold;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +                    sb.append('-');, +                        sb.append('-');, +                    sb.append('-');, +                            sb.append('-');, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakerFactory.java, +import static io.netty.handler.codec.http.websocketx.WebSocketVersion.*;, +, +        if (version == V13) {, +                    webSocketURL, V13, subprotocol, allowExtensions, customHeaders, maxFramePayloadLength);, +        if (version == V08) {, +                    webSocketURL, V08, subprotocol, allowExtensions, customHeaders, maxFramePayloadLength);, +        if (version == V00) {, +                    webSocketURL, V00, subprotocol, customHeaders, maxFramePayloadLength);, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +            return threshold;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +                    sb.append('-');, +                        sb.append('-');, +                    sb.append('-');, +                            sb.append('-');, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakerFactory.java, +import static io.netty.handler.codec.http.websocketx.WebSocketVersion.*;, +, +        if (version == V13) {, +                    webSocketURL, V13, subprotocol, allowExtensions, customHeaders, maxFramePayloadLength);, +        if (version == V08) {, +                    webSocketURL, V08, subprotocol, allowExtensions, customHeaders, maxFramePayloadLength);, +        if (version == V00) {, +                    webSocketURL, V00, subprotocol, customHeaders, maxFramePayloadLength);, +++ b/common/src/main/java/io/netty/util/internal/jzlib/InfBlocks.java, +                    z.avail_in = 0;, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +            return threshold;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +                    sb.append('-');, +                        sb.append('-');, +                    sb.append('-');, +                            sb.append('-');, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakerFactory.java, +import static io.netty.handler.codec.http.websocketx.WebSocketVersion.*;, +, +        if (version == V13) {, +                    webSocketURL, V13, subprotocol, allowExtensions, customHeaders, maxFramePayloadLength);, +        if (version == V08) {, +                    webSocketURL, V08, subprotocol, allowExtensions, customHeaders, maxFramePayloadLength);, +        if (version == V00) {, +                    webSocketURL, V00, subprotocol, customHeaders, maxFramePayloadLength);, +++ b/common/src/main/java/io/netty/util/internal/jzlib/InfBlocks.java, +                    z.avail_in = 0;, +++ b/transport/src/main/java/io/netty/channel/ChannelTaskScheduler.java, +                throw new IllegalArgumentException("period: 0 (expected: != 0)");]