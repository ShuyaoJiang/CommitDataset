[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameDecoder.java, + * Copyright 2013 The Netty Project, +                byte ID_flags = buffer.getByte(buffer.readerIndex());, +                int ID = getUnsignedMedium(buffer, buffer.readerIndex() + 1);, +                int value = getSignedInt(buffer, buffer.readerIndex() + 4);, +                buffer.skipBytes(8);, +            if (buffer.readableBytes() < 8) {, +            statusCode = getSignedInt(buffer, buffer.readerIndex() + 4);, +            buffer.skipBytes(8);, +            if (buffer.readableBytes() < 10) {, +            if (buffer.readableBytes() < 4) {, +            return length >= 10;, +            return length >= 4;, +            return length == 8;, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameDecoder.java, + * Copyright 2013 The Netty Project, +                byte ID_flags = buffer.getByte(buffer.readerIndex());, +                int ID = getUnsignedMedium(buffer, buffer.readerIndex() + 1);, +                int value = getSignedInt(buffer, buffer.readerIndex() + 4);, +                buffer.skipBytes(8);, +            if (buffer.readableBytes() < 8) {, +            statusCode = getSignedInt(buffer, buffer.readerIndex() + 4);, +            buffer.skipBytes(8);, +            if (buffer.readableBytes() < 10) {, +            if (buffer.readableBytes() < 4) {, +            return length >= 10;, +            return length >= 4;, +            return length == 8;, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +                int length = 10 + headerBlockLength;, +                int length = 4 + headerBlockLength;, +            for (Integer id: IDs) {, +            out.ensureWritable(SPDY_HEADER_SIZE + 8);, +            out.writeInt(8);, +                int length = 4 + headerBlockLength;, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameDecoder.java, + * Copyright 2013 The Netty Project, +                byte ID_flags = buffer.getByte(buffer.readerIndex());, +                int ID = getUnsignedMedium(buffer, buffer.readerIndex() + 1);, +                int value = getSignedInt(buffer, buffer.readerIndex() + 4);, +                buffer.skipBytes(8);, +            if (buffer.readableBytes() < 8) {, +            statusCode = getSignedInt(buffer, buffer.readerIndex() + 4);, +            buffer.skipBytes(8);, +            if (buffer.readableBytes() < 10) {, +            if (buffer.readableBytes() < 4) {, +            return length >= 10;, +            return length >= 4;, +            return length == 8;, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +                int length = 10 + headerBlockLength;, +                int length = 4 + headerBlockLength;, +            for (Integer id: IDs) {, +            out.ensureWritable(SPDY_HEADER_SIZE + 8);, +            out.writeInt(8);, +                int length = 4 + headerBlockLength;, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +     * when the {@link SelectedProtocol} was {@link SelectedProtocol#SPDY_3} or, +     * {@link SelectedProtocol#SPDY_3_1}., +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameDecoder.java, + * Copyright 2013 The Netty Project, +                byte ID_flags = buffer.getByte(buffer.readerIndex());, +                int ID = getUnsignedMedium(buffer, buffer.readerIndex() + 1);, +                int value = getSignedInt(buffer, buffer.readerIndex() + 4);, +                buffer.skipBytes(8);, +            if (buffer.readableBytes() < 8) {, +            statusCode = getSignedInt(buffer, buffer.readerIndex() + 4);, +            buffer.skipBytes(8);, +            if (buffer.readableBytes() < 10) {, +            if (buffer.readableBytes() < 4) {, +            return length >= 10;, +            return length >= 4;, +            return length == 8;, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +                int length = 10 + headerBlockLength;, +                int length = 4 + headerBlockLength;, +            for (Integer id: IDs) {, +            out.ensureWritable(SPDY_HEADER_SIZE + 8);, +            out.writeInt(8);, +                int length = 4 + headerBlockLength;, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +     * when the {@link SelectedProtocol} was {@link SelectedProtocol#SPDY_3} or, +     * {@link SelectedProtocol#SPDY_3_1}., +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameDecoder.java, + * Copyright 2013 The Netty Project, +                byte ID_flags = buffer.getByte(buffer.readerIndex());, +                int ID = getUnsignedMedium(buffer, buffer.readerIndex() + 1);, +                int value = getSignedInt(buffer, buffer.readerIndex() + 4);, +                buffer.skipBytes(8);, +            if (buffer.readableBytes() < 8) {, +            statusCode = getSignedInt(buffer, buffer.readerIndex() + 4);, +            buffer.skipBytes(8);, +            if (buffer.readableBytes() < 10) {, +            if (buffer.readableBytes() < 4) {, +            return length >= 10;, +            return length >= 4;, +            return length == 8;, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +                int length = 10 + headerBlockLength;]