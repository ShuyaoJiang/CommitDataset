[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramChannel.java, +import static org.jboss.netty.channel.Channels.fireChannelInterestChanged;, +import static org.jboss.netty.channel.Channels.fireChannelOpen;, +    final ReentrantLock writeLock = new ReentrantLock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramChannel.java, +import static org.jboss.netty.channel.Channels.fireChannelInterestChanged;, +import static org.jboss.netty.channel.Channels.fireChannelOpen;, +    final ReentrantLock writeLock = new ReentrantLock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramWorker.java, +import java.util.concurrent.locks.ReentrantLock;, +        final ReentrantLock writeLock = channel.writeLock;, +        if (writeLock.isHeldByCurrentThread() || !writeLock.tryLock()) {, +        try {, +        } finally {, +        	writeLock.unlock();, +        channel.writeLock.lock();, +        try {, +        } finally {, +        	channel.writeLock.unlock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramChannel.java, +import static org.jboss.netty.channel.Channels.fireChannelInterestChanged;, +import static org.jboss.netty.channel.Channels.fireChannelOpen;, +    final ReentrantLock writeLock = new ReentrantLock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramWorker.java, +import java.util.concurrent.locks.ReentrantLock;, +        final ReentrantLock writeLock = channel.writeLock;, +        if (writeLock.isHeldByCurrentThread() || !writeLock.tryLock()) {, +        try {, +        } finally {, +        	writeLock.unlock();, +        channel.writeLock.lock();, +        try {, +        } finally {, +        	channel.writeLock.unlock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioSocketChannel.java, +    final ReentrantLock writeLock = new ReentrantLock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramChannel.java, +import static org.jboss.netty.channel.Channels.fireChannelInterestChanged;, +import static org.jboss.netty.channel.Channels.fireChannelOpen;, +    final ReentrantLock writeLock = new ReentrantLock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramWorker.java, +import java.util.concurrent.locks.ReentrantLock;, +        final ReentrantLock writeLock = channel.writeLock;, +        if (writeLock.isHeldByCurrentThread() || !writeLock.tryLock()) {, +        try {, +        } finally {, +        	writeLock.unlock();, +        channel.writeLock.lock();, +        try {, +        } finally {, +        	channel.writeLock.unlock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioSocketChannel.java, +    final ReentrantLock writeLock = new ReentrantLock();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioWorker.java, +import java.util.concurrent.locks.ReentrantLock;, +        final ReentrantLock writeLock = channel.writeLock;, +        if (writeLock.isHeldByCurrentThread() || !writeLock.tryLock()) {, +            writeLock.unlock();]