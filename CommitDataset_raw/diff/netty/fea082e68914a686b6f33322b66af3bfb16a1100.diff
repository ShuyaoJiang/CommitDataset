[+++ b/src/main/java/org/jboss/netty/example/http/HttpClient.java, +import org.jboss.netty.handler.codec.http.HttpCookieEncoder;, +        HttpCookieEncoder httpCookieEncoder = new HttpCookieEncoder();, +        httpCookieEncoder.addCookie("my-cookie", "foo");, +        httpCookieEncoder.addCookie("another-cookie", "bar");, +        request.addHeader(HttpHeaders.Names.COOKIE, httpCookieEncoder.encode());, +++ b/src/main/java/org/jboss/netty/example/http/HttpClient.java, +import org.jboss.netty.handler.codec.http.HttpCookieEncoder;, +        HttpCookieEncoder httpCookieEncoder = new HttpCookieEncoder();, +        httpCookieEncoder.addCookie("my-cookie", "foo");, +        httpCookieEncoder.addCookie("another-cookie", "bar");, +        request.addHeader(HttpHeaders.Names.COOKIE, httpCookieEncoder.encode());, +++ b/src/main/java/org/jboss/netty/example/http/HttpRequestHandler.java, +import java.util.Set;, +import org.jboss.netty.handler.codec.http.HttpCookieDecoder;, +import org.jboss.netty.handler.codec.http.HttpCookie;, +import org.jboss.netty.handler.codec.http.HttpCookieEncoder;, +        HttpCookieDecoder cookieDecoder = new HttpCookieDecoder();, +        Set<HttpCookie> cookieSet = cookieDecoder.decode(request.getHeader(HttpHeaders.Names.COOKIE));, +        if(cookieSet != null) {, +            //lets reset the cookies, +            HttpCookieEncoder cookieEncoder = new HttpCookieEncoder();, +            for (HttpCookie cookie : cookieSet) {, +                cookieEncoder.addCookie(cookie);, +            }, +            response.addHeader(HttpHeaders.Names.SET_COOKIE, cookieEncoder.encode());, +        }, +++ b/src/main/java/org/jboss/netty/example/http/HttpClient.java, +import org.jboss.netty.handler.codec.http.HttpCookieEncoder;, +        HttpCookieEncoder httpCookieEncoder = new HttpCookieEncoder();, +        httpCookieEncoder.addCookie("my-cookie", "foo");, +        httpCookieEncoder.addCookie("another-cookie", "bar");, +        request.addHeader(HttpHeaders.Names.COOKIE, httpCookieEncoder.encode());, +++ b/src/main/java/org/jboss/netty/example/http/HttpRequestHandler.java, +import java.util.Set;, +import org.jboss.netty.handler.codec.http.HttpCookieDecoder;, +import org.jboss.netty.handler.codec.http.HttpCookie;, +import org.jboss.netty.handler.codec.http.HttpCookieEncoder;, +        HttpCookieDecoder cookieDecoder = new HttpCookieDecoder();, +        Set<HttpCookie> cookieSet = cookieDecoder.decode(request.getHeader(HttpHeaders.Names.COOKIE));, +        if(cookieSet != null) {, +            //lets reset the cookies, +            HttpCookieEncoder cookieEncoder = new HttpCookieEncoder();, +            for (HttpCookie cookie : cookieSet) {, +                cookieEncoder.addCookie(cookie);, +            }, +            response.addHeader(HttpHeaders.Names.SET_COOKIE, cookieEncoder.encode());, +        }, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpMessage.java, +import org.jboss.netty.util.CaseIgnoringComparator;, +++ b/src/main/java/org/jboss/netty/example/http/HttpClient.java, +import org.jboss.netty.handler.codec.http.HttpCookieEncoder;, +        HttpCookieEncoder httpCookieEncoder = new HttpCookieEncoder();, +        httpCookieEncoder.addCookie("my-cookie", "foo");, +        httpCookieEncoder.addCookie("another-cookie", "bar");, +        request.addHeader(HttpHeaders.Names.COOKIE, httpCookieEncoder.encode());, +++ b/src/main/java/org/jboss/netty/example/http/HttpRequestHandler.java, +import java.util.Set;, +import org.jboss.netty.handler.codec.http.HttpCookieDecoder;, +import org.jboss.netty.handler.codec.http.HttpCookie;, +import org.jboss.netty.handler.codec.http.HttpCookieEncoder;, +        HttpCookieDecoder cookieDecoder = new HttpCookieDecoder();, +        Set<HttpCookie> cookieSet = cookieDecoder.decode(request.getHeader(HttpHeaders.Names.COOKIE));, +        if(cookieSet != null) {, +            //lets reset the cookies, +            HttpCookieEncoder cookieEncoder = new HttpCookieEncoder();, +            for (HttpCookie cookie : cookieSet) {, +                cookieEncoder.addCookie(cookie);, +            }, +            response.addHeader(HttpHeaders.Names.SET_COOKIE, cookieEncoder.encode());, +        }, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpMessage.java, +import org.jboss.netty.util.CaseIgnoringComparator;, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpCookieDecoder.java, +/*, + * JBoss, Home of Professional Open Source, + * Copyright 2005-2008, Red Hat Middleware LLC, and individual contributors, + * by the @authors tag. See the copyright.txt in the distribution for a, + * full listing of individual contributors., + *, + * This is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as, + * published by the Free Software Foundation; either version 2.1 of, + * the License, or (at your option) any later version., + *, + * This software is distributed in the hope that it will be useful,, + * but WITHOUT ANY WARRANTY; without even the implied warranty of, + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU, + * Lesser General Public License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this software; if not, write to the Free, + * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA, + * 02110-1301 USA, or see the FSF site: http://www.fsf.org., + */, +package org.jboss.netty.handler.codec.http;, +, +import java.util.Set;, +import java.util.HashSet;, +]