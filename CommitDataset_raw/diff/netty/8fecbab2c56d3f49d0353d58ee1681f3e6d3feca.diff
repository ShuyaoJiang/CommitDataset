[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +            String origin = req.headers().get(HttpHeaderNames.ORIGIN);, +            if (origin == null) {, +                throw new WebSocketHandshakeException("Missing origin header, got only " + req.headers().names());, +            }, +            res.headers().add(HttpHeaderNames.WEBSOCKET_ORIGIN, origin);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +            String origin = req.headers().get(HttpHeaderNames.ORIGIN);, +            if (origin == null) {, +                throw new WebSocketHandshakeException("Missing origin header, got only " + req.headers().names());, +            }, +            res.headers().add(HttpHeaderNames.WEBSOCKET_ORIGIN, origin);, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00Test.java, +import static io.netty.handler.codec.http.HttpVersion.HTTP_1_1;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.fail;, +    @Test, +    public void testPerformHandshakeWithoutOriginHeader() {, +        EmbeddedChannel ch = new EmbeddedChannel(, +            new HttpObjectAggregator(42), new HttpRequestDecoder(), new HttpResponseEncoder());, +, +        FullHttpRequest req = new DefaultFullHttpRequest(, +            HTTP_1_1, HttpMethod.GET, "/chat", Unpooled.copiedBuffer("^n:ds[4U", CharsetUtil.US_ASCII));, +, +        req.headers().set(HttpHeaderNames.HOST, "server.example.com");, +        req.headers().set(HttpHeaderNames.UPGRADE, HttpHeaderValues.WEBSOCKET);, +        req.headers().set(HttpHeaderNames.CONNECTION, "Upgrade");, +        req.headers().set(HttpHeaderNames.SEC_WEBSOCKET_KEY1, "4 @1  46546xW%0l 1 5");, +        req.headers().set(HttpHeaderNames.SEC_WEBSOCKET_PROTOCOL, "chat, superchat");, +, +        WebSocketServerHandshaker00 handshaker00 = new WebSocketServerHandshaker00(, +            "ws://example.com/chat", "chat", Integer.MAX_VALUE);, +        try {, +            handshaker00.handshake(ch, req);, +            fail("Expecting WebSocketHandshakeException");, +        } catch (WebSocketHandshakeException e) {, +            assertEquals("Missing origin header, got only ", +                    + "[host, upgrade, connection, sec-websocket-key1, sec-websocket-protocol]",, +                e.getMessage());, +        } finally {, +            req.release();, +        }, +    }, +]