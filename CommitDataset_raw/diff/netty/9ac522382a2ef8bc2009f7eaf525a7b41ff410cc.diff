[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHttpDecoder.java, +                        messageMap.put(Integer.valueOf(streamID), httpResponse);, +                        messageMap.put(Integer.valueOf(streamID), httpRequest);, +                    messageMap.put(Integer.valueOf(streamID), httpResponse);, +            Integer streamID = Integer.valueOf(spdyHeadersFrame.getStreamId());, +            Integer streamID = Integer.valueOf(spdyDataFrame.getStreamId());, +            Integer streamID = Integer.valueOf(spdyRstStreamFrame.getStreamId());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHttpDecoder.java, +                        messageMap.put(Integer.valueOf(streamID), httpResponse);, +                        messageMap.put(Integer.valueOf(streamID), httpRequest);, +                    messageMap.put(Integer.valueOf(streamID), httpResponse);, +            Integer streamID = Integer.valueOf(spdyHeadersFrame.getStreamId());, +            Integer streamID = Integer.valueOf(spdyDataFrame.getStreamId());, +            Integer streamID = Integer.valueOf(spdyRstStreamFrame.getStreamId());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySession.java, +        return activeStreams.containsKey(Integer.valueOf(streamID));, +                    Integer.valueOf(streamID),, +        Integer StreamID = Integer.valueOf(streamID);, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        Integer StreamID = Integer.valueOf(streamID);, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        Integer StreamID = Integer.valueOf(streamID);, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHttpDecoder.java, +                        messageMap.put(Integer.valueOf(streamID), httpResponse);, +                        messageMap.put(Integer.valueOf(streamID), httpRequest);, +                    messageMap.put(Integer.valueOf(streamID), httpResponse);, +            Integer streamID = Integer.valueOf(spdyHeadersFrame.getStreamId());, +            Integer streamID = Integer.valueOf(spdyDataFrame.getStreamId());, +            Integer streamID = Integer.valueOf(spdyRstStreamFrame.getStreamId());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySession.java, +        return activeStreams.containsKey(Integer.valueOf(streamID));, +                    Integer.valueOf(streamID),, +        Integer StreamID = Integer.valueOf(streamID);, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        Integer StreamID = Integer.valueOf(streamID);, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        Integer StreamID = Integer.valueOf(streamID);, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +        StreamState state = activeStreams.get(Integer.valueOf(streamID));, +++ b/codec/src/test/java/io/netty/handler/codec/marshalling/AbstractCompatibleMarshallingDecoderTest.java]