[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +import java.util.List;, +     * when the {@link SelectedProtocol} was {@link SelectedProtocol#SPDY_3_1}., +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +import java.util.List;, +     * when the {@link SelectedProtocol} was {@link SelectedProtocol#SPDY_3_1}., +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +                int sessionDeltaWindowSize = initialReceiveWindowSize - newSessionWindowSize;, +                spdySession.updateReceiveWindowSize(SPDY_SESSION_STREAM_ID, sessionDeltaWindowSize);, +                    new DefaultSpdyWindowUpdateFrame(SPDY_SESSION_STREAM_ID, sessionDeltaWindowSize);, +                int streamDeltaWindowSize = initialReceiveWindowSize - newWindowSize;, +                spdySession.updateReceiveWindowSize(streamId, streamDeltaWindowSize);, +                        new DefaultSpdyWindowUpdateFrame(streamId, streamDeltaWindowSize);, +            if (streamId != SPDY_SESSION_STREAM_ID) {, +                if (streamId == SPDY_SESSION_STREAM_ID) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +import java.util.List;, +     * when the {@link SelectedProtocol} was {@link SelectedProtocol#SPDY_3_1}., +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +                int sessionDeltaWindowSize = initialReceiveWindowSize - newSessionWindowSize;, +                spdySession.updateReceiveWindowSize(SPDY_SESSION_STREAM_ID, sessionDeltaWindowSize);, +                    new DefaultSpdyWindowUpdateFrame(SPDY_SESSION_STREAM_ID, sessionDeltaWindowSize);, +                int streamDeltaWindowSize = initialReceiveWindowSize - newWindowSize;, +                spdySession.updateReceiveWindowSize(streamId, streamDeltaWindowSize);, +                        new DefaultSpdyWindowUpdateFrame(streamId, streamDeltaWindowSize);, +            if (streamId != SPDY_SESSION_STREAM_ID) {, +                if (streamId == SPDY_SESSION_STREAM_ID) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyVersion.java, +    SPDY_3_1 (3, 1);, +    private SpdyVersion(int version, int minorVersion) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +import java.util.List;, +     * when the {@link SelectedProtocol} was {@link SelectedProtocol#SPDY_3_1}., +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +                int sessionDeltaWindowSize = initialReceiveWindowSize - newSessionWindowSize;, +                spdySession.updateReceiveWindowSize(SPDY_SESSION_STREAM_ID, sessionDeltaWindowSize);, +                    new DefaultSpdyWindowUpdateFrame(SPDY_SESSION_STREAM_ID, sessionDeltaWindowSize);, +                int streamDeltaWindowSize = initialReceiveWindowSize - newWindowSize;, +                spdySession.updateReceiveWindowSize(streamId, streamDeltaWindowSize);, +                        new DefaultSpdyWindowUpdateFrame(streamId, streamDeltaWindowSize);, +            if (streamId != SPDY_SESSION_STREAM_ID) {, +                if (streamId == SPDY_SESSION_STREAM_ID) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyVersion.java, +    SPDY_3_1 (3, 1);, +    private SpdyVersion(int version, int minorVersion) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdyFrameDecoderTest.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +import java.util.List;, +     * when the {@link SelectedProtocol} was {@link SelectedProtocol#SPDY_3_1}., +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +                int sessionDeltaWindowSize = initialReceiveWindowSize - newSessionWindowSize;, +                spdySession.updateReceiveWindowSize(SPDY_SESSION_STREAM_ID, sessionDeltaWindowSize);, +                    new DefaultSpdyWindowUpdateFrame(SPDY_SESSION_STREAM_ID, sessionDeltaWindowSize);, +                int streamDeltaWindowSize = initialReceiveWindowSize - newWindowSize;, +                spdySession.updateReceiveWindowSize(streamId, streamDeltaWindowSize);, +                        new DefaultSpdyWindowUpdateFrame(streamId, streamDeltaWindowSize);, +            if (streamId != SPDY_SESSION_STREAM_ID) {, +                if (streamId == SPDY_SESSION_STREAM_ID) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyVersion.java, +    SPDY_3_1 (3, 1);, +    private SpdyVersion(int version, int minorVersion) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdyFrameDecoderTest.java, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdySessionHandlerTest.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +import java.util.List;, +     * when the {@link SelectedProtocol} was {@link SelectedProtocol#SPDY_3_1}., +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +                int sessionDeltaWindowSize = initialReceiveWindowSize - newSessionWindowSize;, +                spdySession.updateReceiveWindowSize(SPDY_SESSION_STREAM_ID, sessionDeltaWindowSize);, +                    new DefaultSpdyWindowUpdateFrame(SPDY_SESSION_STREAM_ID, sessionDeltaWindowSize);, +                int streamDeltaWindowSize = initialReceiveWindowSize - newWindowSize;, +                spdySession.updateReceiveWindowSize(streamId, streamDeltaWindowSize);, +                        new DefaultSpdyWindowUpdateFrame(streamId, streamDeltaWindowSize);, +            if (streamId != SPDY_SESSION_STREAM_ID) {, +                if (streamId == SPDY_SESSION_STREAM_ID) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyVersion.java, +    SPDY_3_1 (3, 1);, +    private SpdyVersion(int version, int minorVersion) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdyFrameDecoderTest.java, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdySessionHandlerTest.java, +++ b/example/src/main/java/io/netty/example/spdy/server/SpdyServerProvider.java, +        return Arrays.asList("spdy/3.1", "http/1.1");, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyOrHttpChooser.java, +import java.util.List;, +     * when the {@link SelectedProtocol} was {@link SelectedProtocol#SPDY_3_1}., +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +                int sessionDeltaWindowSize = initialReceiveWindowSize - newSessionWindowSize;, +                spdySession.updateReceiveWindowSize(SPDY_SESSION_STREAM_ID, sessionDeltaWindowSize);, +                    new DefaultSpdyWindowUpdateFrame(SPDY_SESSION_STREAM_ID, sessionDeltaWindowSize);, +                int streamDeltaWindowSize = initialReceiveWindowSize - newWindowSize;, +                spdySession.updateReceiveWindowSize(streamId, streamDeltaWindowSize);, +                        new DefaultSpdyWindowUpdateFrame(streamId, streamDeltaWindowSize);, +            if (streamId != SPDY_SESSION_STREAM_ID) {, +                if (streamId == SPDY_SESSION_STREAM_ID) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyVersion.java, +    SPDY_3_1 (3, 1);, +    private SpdyVersion(int version, int minorVersion) {, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdyFrameDecoderTest.java, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdySessionHandlerTest.java, +++ b/example/src/main/java/io/netty/example/spdy/server/SpdyServerProvider.java]