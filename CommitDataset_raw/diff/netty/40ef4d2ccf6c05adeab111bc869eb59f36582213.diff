[+++ b/example/src/main/java/io/netty/example/http/websocketx/client/WebSocketClient.java, +        Channel ch = null;, +        , +        try {, +            future.awaitUninterruptibly().rethrowIfFailed();, +            ch = future.getChannel();, +            handshaker.handshake(ch).awaitUninterruptibly().rethrowIfFailed();, +        } finally {, +            if (ch != null) {, +                ch.close();, +            }, +    }, +++ b/example/src/main/java/io/netty/example/http/websocketx/client/WebSocketClient.java, +        Channel ch = null;, +        , +        try {, +            future.awaitUninterruptibly().rethrowIfFailed();, +            ch = future.getChannel();, +            handshaker.handshake(ch).awaitUninterruptibly().rethrowIfFailed();, +        } finally {, +            if (ch != null) {, +                ch.close();, +            }, +    }, +++ b/transport/src/main/java/io/netty/channel/ChannelFuture.java, +     * Rethrows the exception that caused this future fail if this future is, +     * complete and failed., +     */, +    ChannelFuture rethrowIfFailed() throws Exception;, +, +    /**, +++ b/example/src/main/java/io/netty/example/http/websocketx/client/WebSocketClient.java, +        Channel ch = null;, +        , +        try {, +            future.awaitUninterruptibly().rethrowIfFailed();, +            ch = future.getChannel();, +            handshaker.handshake(ch).awaitUninterruptibly().rethrowIfFailed();, +        } finally {, +            if (ch != null) {, +                ch.close();, +            }, +    }, +++ b/transport/src/main/java/io/netty/channel/ChannelFuture.java, +     * Rethrows the exception that caused this future fail if this future is, +     * complete and failed., +     */, +    ChannelFuture rethrowIfFailed() throws Exception;, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelFuture.java, +    public ChannelFuture rethrowIfFailed() throws Exception {, +        if (!isDone()) {, +            return this;, +        }, +        , +        Throwable cause = getCause();, +        if (cause == null) {, +            return this;, +        }, +, +        if (cause instanceof Exception) {, +            throw (Exception) cause;, +        }, +, +        if (cause instanceof Error) {, +            throw (Error) cause;, +        }, +, +        throw new RuntimeException(cause);, +    }, +, +    @Override, +++ b/example/src/main/java/io/netty/example/http/websocketx/client/WebSocketClient.java, +        Channel ch = null;, +        , +        try {, +            future.awaitUninterruptibly().rethrowIfFailed();, +            ch = future.getChannel();, +            handshaker.handshake(ch).awaitUninterruptibly().rethrowIfFailed();, +        } finally {, +            if (ch != null) {, +                ch.close();, +            }, +    }, +++ b/transport/src/main/java/io/netty/channel/ChannelFuture.java, +     * Rethrows the exception that caused this future fail if this future is, +     * complete and failed., +     */, +    ChannelFuture rethrowIfFailed() throws Exception;, +, +    /**, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelFuture.java, +    public ChannelFuture rethrowIfFailed() throws Exception {, +        if (!isDone()) {, +            return this;, +        }, +        , +        Throwable cause = getCause();, +        if (cause == null) {]