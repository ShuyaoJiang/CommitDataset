[+++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        ByteBuffer buf =  ByteBuffer.wrap(memory, index, length);, +        return buf.slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        ByteBuffer buf =  ByteBuffer.wrap(memory, index, length);, +        return buf.slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        ByteBuffer buf =  ByteBuffer.wrap(memory, index, length);, +        return buf.slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +        return ((ByteBuffer) buffer.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        ByteBuffer buf =  ByteBuffer.wrap(memory, index, length);, +        return buf.slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +        return ((ByteBuffer) buffer.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledHeapByteBuf.java, +        return ByteBuffer.wrap(array, index, length).slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        ByteBuffer buf =  ByteBuffer.wrap(memory, index, length);, +        return buf.slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +        return ((ByteBuffer) buffer.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledHeapByteBuf.java, +        return ByteBuffer.wrap(array, index, length).slice();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledUnsafeDirectByteBuf.java, +        return ((ByteBuffer) buffer.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        ByteBuffer buf =  ByteBuffer.wrap(memory, index, length);, +        return buf.slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +        return ((ByteBuffer) buffer.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledHeapByteBuf.java, +        return ByteBuffer.wrap(array, index, length).slice();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledUnsafeDirectByteBuf.java, +        return ((ByteBuffer) buffer.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java, +, +    @Test, +    public void testNioBufferExposeOnlyRegion() {, +        final ByteBuf buffer = freeLater(newBuffer(8));, +        byte[] data = new byte[8];, +        random.nextBytes(data);, +        buffer.writeBytes(data);, +, +        ByteBuffer nioBuf = buffer.nioBuffer(1, data.length - 2);, +        assertEquals(0, nioBuf.position());, +        assertEquals(6, nioBuf.remaining());, +, +        for (int i = 1; nioBuf.hasRemaining(); i++) {, +            assertEquals(data[i], nioBuf.get());, +        }, +    }, +, +++ b/buffer/src/main/java/io/netty/buffer/PooledDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java, +        ByteBuffer buf =  ByteBuffer.wrap(memory, index, length);, +        return buf.slice();, +++ b/buffer/src/main/java/io/netty/buffer/PooledUnsafeDirectByteBuf.java, +        return ((ByteBuffer) memory.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, +        return ((ByteBuffer) buffer.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledHeapByteBuf.java, +        return ByteBuffer.wrap(array, index, length).slice();, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledUnsafeDirectByteBuf.java, +        return ((ByteBuffer) buffer.duplicate().position(index).limit(index + length)).slice();, +++ b/buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java, +, +    @Test, +    public void testNioBufferExposeOnlyRegion() {, +        final ByteBuf buffer = freeLater(newBuffer(8));, +        byte[] data = new byte[8];, +        random.nextBytes(data);, +        buffer.writeBytes(data);, +]