[+++ b/transport/src/main/java/io/netty/channel/ChannelFlushFutureNotifier.java, +public final class ChannelFlushFutureNotifier {, +, +    /**, +     * Add a {@link ChannelFuture} to this {@link ChannelFlushFutureNotifier} which will be notified after the given, +     * pendingDataSize was reached., +     */, +        if (future == null) {, +            throw new NullPointerException("future");, +        }, +        if (pendingDataSize < 0) {, +            throw new IllegalArgumentException("pendingDataSize must be >= 0 but was" + pendingDataSize);, +        }, +    /**, +     * Increase the current write counter by the given delta, +     */, +        if (delta < 0) {, +            throw new IllegalArgumentException("delta must be >= 0 but was" + delta);, +        }, +    /**, +     * Return the current write counter of this {@link ChannelFlushFutureNotifier}, +     */, +    public long writeCounter() {, +        return writeCounter;, +    }, +, +    /**, +     * Notify all {@link ChannelFuture}s that were registered with {@link #addFlushFuture(ChannelFuture, int)} and, +     * their pendingDatasize is smaller after the the current writeCounter returned by {@link #writeCounter()}., +     *, +     * After a {@link ChannelFuture} was notified it will be removed from this {@link ChannelFlushFutureNotifier} and, +     * so not receive anymore notificiation., +     */, +    /**, +     * Notify all {@link ChannelFuture}s that were registered with {@link #addFlushFuture(ChannelFuture, int)} and, +     * their pendingDatasize isis smaller then the current writeCounter returned by {@link #writeCounter()}., +     *, +     * After a {@link ChannelFuture} was notified it will be removed from this {@link ChannelFlushFutureNotifier} and, +     * so not receive anymore notificiation., +     *, +     * The rest of the remaining {@link ChannelFuture}s will be failed with the given {@link Throwable}., +     *, +     * So after this operation this {@link ChannelFutureListener} is empty., +     */, +    /**, +     * Notify all {@link ChannelFuture}s that were registered with {@link #addFlushFuture(ChannelFuture, int)} and, +     * their pendingDatasize is smaller then the current writeCounter returned by {@link #writeCounter()} using, +     * the given cause1., +     *, +     * After a {@link ChannelFuture} was notified it will be removed from this {@link ChannelFlushFutureNotifier} and, +     * so not receive anymore notificiation., +     *, +     * The rest of the remaining {@link ChannelFuture}s will be failed with the given {@link Throwable}., +     *, +     * So after this operation this {@link ChannelFutureListener} is empty., +     *, +     * @param cause1    the {@link Throwable} which will be used to fail all of the {@link ChannelFuture}s whichs, +     *                  pendingDataSize is smaller then the current writeCounter returned by {@link #writeCounter()}, +     * @param cause2    the {@link Throwable} which will be used to fail the remaining {@link ChannelFuture}s, +     */]