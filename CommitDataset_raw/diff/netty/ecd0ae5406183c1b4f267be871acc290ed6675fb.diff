[+++ b/buffer/src/main/java/io/netty/buffer/Unpooled.java, +        if (queue instanceof MessageBuf) {, +            return (MessageBuf<T>) queue;, +        }, +++ b/buffer/src/main/java/io/netty/buffer/Unpooled.java, +        if (queue instanceof MessageBuf) {, +            return (MessageBuf<T>) queue;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +import java.util.ArrayDeque;, +    final Queue<HttpMethod> queue = new ArrayDeque<HttpMethod>();, +++ b/buffer/src/main/java/io/netty/buffer/Unpooled.java, +        if (queue instanceof MessageBuf) {, +            return (MessageBuf<T>) queue;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +import java.util.ArrayDeque;, +    final Queue<HttpMethod> queue = new ArrayDeque<HttpMethod>();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +import java.util.ArrayDeque;, +    private final Queue<String> acceptEncodingQueue = new ArrayDeque<String>();, +++ b/buffer/src/main/java/io/netty/buffer/Unpooled.java, +        if (queue instanceof MessageBuf) {, +            return (MessageBuf<T>) queue;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +import java.util.ArrayDeque;, +    final Queue<HttpMethod> queue = new ArrayDeque<HttpMethod>();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +import java.util.ArrayDeque;, +    private final Queue<String> acceptEncodingQueue = new ArrayDeque<String>();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySession.java, +import io.netty.util.internal.QueueFactory;, +, +import java.util.concurrent.BlockingQueue;, +        private final BlockingQueue<Object> pendingWriteQueue = QueueFactory.createQueue();, +++ b/buffer/src/main/java/io/netty/buffer/Unpooled.java, +        if (queue instanceof MessageBuf) {, +            return (MessageBuf<T>) queue;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +import java.util.ArrayDeque;, +    final Queue<HttpMethod> queue = new ArrayDeque<HttpMethod>();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +import java.util.ArrayDeque;, +    private final Queue<String> acceptEncodingQueue = new ArrayDeque<String>();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySession.java, +import io.netty.util.internal.QueueFactory;, +, +import java.util.concurrent.BlockingQueue;, +        private final BlockingQueue<Object> pendingWriteQueue = QueueFactory.createQueue();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +        MessageBuf<Object> in = ctx.inboundMessageBuffer();, +        MessageBuf<Object> in = ctx.outboundMessageBuffer();, +++ b/buffer/src/main/java/io/netty/buffer/Unpooled.java, +        if (queue instanceof MessageBuf) {, +            return (MessageBuf<T>) queue;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +import java.util.ArrayDeque;, +    final Queue<HttpMethod> queue = new ArrayDeque<HttpMethod>();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +import java.util.ArrayDeque;, +    private final Queue<String> acceptEncodingQueue = new ArrayDeque<String>();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySession.java, +import io.netty.util.internal.QueueFactory;, +, +import java.util.concurrent.BlockingQueue;, +        private final BlockingQueue<Object> pendingWriteQueue = QueueFactory.createQueue();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +        MessageBuf<Object> in = ctx.inboundMessageBuffer();, +        MessageBuf<Object> in = ctx.outboundMessageBuffer();, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +import io.netty.buffer.MessageBuf;, +        MessageBuf<I> in = ctx.outboundMessageBuffer();, +++ b/buffer/src/main/java/io/netty/buffer/Unpooled.java, +        if (queue instanceof MessageBuf) {, +            return (MessageBuf<T>) queue;, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +import java.util.ArrayDeque;, +    final Queue<HttpMethod> queue = new ArrayDeque<HttpMethod>();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +import java.util.ArrayDeque;, +    private final Queue<String> acceptEncodingQueue = new ArrayDeque<String>();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySession.java, +import io.netty.util.internal.QueueFactory;, +, +import java.util.concurrent.BlockingQueue;, +        private final BlockingQueue<Object> pendingWriteQueue = QueueFactory.createQueue();, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +        MessageBuf<Object> in = ctx.inboundMessageBuffer();, +        MessageBuf<Object> in = ctx.outboundMessageBuffer();, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java, +import io.netty.buffer.MessageBuf;, +        MessageBuf<I> in = ctx.outboundMessageBuffer();, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +        MessageBuf<I> in = ctx.inboundMessageBuffer();, +++ b/buffer/src/main/java/io/netty/buffer/Unpooled.java, +        if (queue instanceof MessageBuf) {]