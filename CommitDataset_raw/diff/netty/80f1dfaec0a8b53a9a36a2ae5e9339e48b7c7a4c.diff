[+++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequest.java, +        if (port <= 0 || port >= 65536) {, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequest.java, +        if (port <= 0 || port >= 65536) {, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponse.java, +        if (port <= 0 && port >= 65536) {, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequest.java, +        if (port <= 0 || port >= 65536) {, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponse.java, +        if (port <= 0 && port >= 65536) {, +++ b/codec-socks/src/test/java/io/netty/handler/codec/socks/SocksAuthResponseTest.java, +, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequest.java, +        if (port <= 0 || port >= 65536) {, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponse.java, +        if (port <= 0 && port >= 65536) {, +++ b/codec-socks/src/test/java/io/netty/handler/codec/socks/SocksAuthResponseTest.java, +, +++ b/codec-socks/src/test/java/io/netty/handler/codec/socks/SocksCmdRequestDecoderTest.java, +        int[] ports = {1, 32769, 65535 };, +        int[] ports = {1, 32769, 65535};, +        int[] ports = {1, 32769, 65535};, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequest.java, +        if (port <= 0 || port >= 65536) {, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponse.java, +        if (port <= 0 && port >= 65536) {, +++ b/codec-socks/src/test/java/io/netty/handler/codec/socks/SocksAuthResponseTest.java, +, +++ b/codec-socks/src/test/java/io/netty/handler/codec/socks/SocksCmdRequestDecoderTest.java, +        int[] ports = {1, 32769, 65535 };, +        int[] ports = {1, 32769, 65535};, +        int[] ports = {1, 32769, 65535};, +++ b/codec-socks/src/test/java/io/netty/handler/codec/socks/SocksCmdRequestTest.java, +            new SocksCmdRequest(null, SocksAddressType.UNKNOWN, "", 1);, +            new SocksCmdRequest(SocksCmdType.UNKNOWN, null, "", 1);, +            new SocksCmdRequest(SocksCmdType.UNKNOWN, SocksAddressType.UNKNOWN, null, 1);, +            new SocksCmdRequest(SocksCmdType.BIND, SocksAddressType.IPv4, "54.54.1111.253", 1);, +            new SocksCmdRequest(SocksCmdType.BIND, SocksAddressType.IPv6, "xxx:xxx:xxx", 1);, +                    "παράδειγμα.δοκιμήπαράδειγμα.δοκιμήπαράδειγμα.δοκιμήπαράδειγμα.δοκιμή", 1);, +                    "παράδειγμα.δοκιμήπαράδει", 0);, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdRequest.java, +        if (port <= 0 || port >= 65536) {, +++ b/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponse.java, +        if (port <= 0 && port >= 65536) {, +++ b/codec-socks/src/test/java/io/netty/handler/codec/socks/SocksAuthResponseTest.java, +, +++ b/codec-socks/src/test/java/io/netty/handler/codec/socks/SocksCmdRequestDecoderTest.java, +        int[] ports = {1, 32769, 65535 };, +        int[] ports = {1, 32769, 65535};, +        int[] ports = {1, 32769, 65535};, +++ b/codec-socks/src/test/java/io/netty/handler/codec/socks/SocksCmdRequestTest.java, +            new SocksCmdRequest(null, SocksAddressType.UNKNOWN, "", 1);, +            new SocksCmdRequest(SocksCmdType.UNKNOWN, null, "", 1);, +            new SocksCmdRequest(SocksCmdType.UNKNOWN, SocksAddressType.UNKNOWN, null, 1);, +            new SocksCmdRequest(SocksCmdType.BIND, SocksAddressType.IPv4, "54.54.1111.253", 1);, +            new SocksCmdRequest(SocksCmdType.BIND, SocksAddressType.IPv6, "xxx:xxx:xxx", 1);, +                    "παράδειγμα.δοκιμήπαράδειγμα.δοκιμήπαράδειγμα.δοκιμήπαράδειγμα.δοκιμή", 1);, +                    "παράδειγμα.δοκιμήπαράδει", 0);, +++ b/codec-socks/src/test/java/io/netty/handler/codec/socks/SocksCmdResponseTest.java, +    @Test, +    public void testValidPortRange() {, +        try {, +            new SocksCmdResponse(SocksCmdStatus.SUCCESS, SocksAddressType.IPv4, "127.0.0", 0);, +        } catch (Exception e) {, +            assertTrue(e instanceof IllegalArgumentException);, +        }, +, +        try {, +            new SocksCmdResponse(SocksCmdStatus.SUCCESS, SocksAddressType.IPv4, "127.0.0", 65536);, +        } catch (Exception e) {, +            assertTrue(e instanceof IllegalArgumentException);, +        }, +    }]