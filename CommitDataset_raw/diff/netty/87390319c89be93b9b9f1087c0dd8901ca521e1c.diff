[+++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +import org.jboss.netty.channel.ChannelConfig;, + * For the detailed list of available options, please refer to, + * {@link ChannelConfig} and its sub-types, + *, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +import org.jboss.netty.channel.ChannelConfig;, + * For the detailed list of available options, please refer to, + * {@link ChannelConfig} and its sub-types, + *, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, +import org.jboss.netty.channel.ChannelConfig;, + * For the detailed list of available options, please refer to, + * {@link ChannelConfig} and its sub-types., + *, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +import org.jboss.netty.channel.ChannelConfig;, + * For the detailed list of available options, please refer to, + * {@link ChannelConfig} and its sub-types, + *, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, +import org.jboss.netty.channel.ChannelConfig;, + * For the detailed list of available options, please refer to, + * {@link ChannelConfig} and its sub-types., + *, +++ b/src/main/java/org/jboss/netty/channel/ChannelConfig.java, +import org.jboss.netty.channel.socket.nio.NioSocketChannelConfig;, + * <h3>Option map</h3>, + *, + * An option map property is a dynamic write-only property which allows, + * the configuration of a {@link Channel} without down-casting its associated, + * {@link ChannelConfig}.  To update an option map, please call {@link #setOptions(Map)}., + * <p>, + * All {@link ChannelConfig} has the following options:, + * <table>, + * <tr>, + * <th>Name</th><th>Associated setter method</th>, + * </tr><tr>, + * <td>{@code "connectTimeoutMillis"}</td><td>{@link #setConnectTimeoutMillis(int)}</td>, + * </tr><tr>, + * <td>{@code "writeTimeoutMillis"}</td><td>{@link #setWriteTimeoutMillis(int)}</td>, + * </tr><tr>, + * <td>{@code "pipelineFactory"}</td><td>{@link #setPipelineFactory(ChannelPipelineFactory)}</td>, + * </tr>, + * </table>, + *, + * More options are available in the sub-types of {@link ChannelConfig}.  For, + * example, you can configure the parameters which are specific to a TCP/IP, + * socket as explained in {@link SocketChannelConfig} or {@link NioSocketChannelConfig}., + *, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +import org.jboss.netty.channel.ChannelConfig;, + * For the detailed list of available options, please refer to, + * {@link ChannelConfig} and its sub-types, + *, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, +import org.jboss.netty.channel.ChannelConfig;, + * For the detailed list of available options, please refer to, + * {@link ChannelConfig} and its sub-types., + *, +++ b/src/main/java/org/jboss/netty/channel/ChannelConfig.java, +import org.jboss.netty.channel.socket.nio.NioSocketChannelConfig;, + * <h3>Option map</h3>, + *, + * An option map property is a dynamic write-only property which allows, + * the configuration of a {@link Channel} without down-casting its associated, + * {@link ChannelConfig}.  To update an option map, please call {@link #setOptions(Map)}., + * <p>, + * All {@link ChannelConfig} has the following options:, + * <table>, + * <tr>, + * <th>Name</th><th>Associated setter method</th>, + * </tr><tr>, + * <td>{@code "connectTimeoutMillis"}</td><td>{@link #setConnectTimeoutMillis(int)}</td>, + * </tr><tr>, + * <td>{@code "writeTimeoutMillis"}</td><td>{@link #setWriteTimeoutMillis(int)}</td>, + * </tr><tr>, + * <td>{@code "pipelineFactory"}</td><td>{@link #setPipelineFactory(ChannelPipelineFactory)}</td>, + * </tr>, + * </table>, + *, + * More options are available in the sub-types of {@link ChannelConfig}.  For, + * example, you can configure the parameters which are specific to a TCP/IP, + * socket as explained in {@link SocketChannelConfig} or {@link NioSocketChannelConfig}., + *, +++ b/src/main/java/org/jboss/netty/channel/socket/ServerSocketChannelConfig.java, + * <h3>Available options</h3>, + *, + * In addition to the options provided by {@link ChannelConfig},, + * {@link ServerSocketChannelConfig} allows the following options in the, + * option map:, + * <table>, + * <tr>, + * <th>Name</th><th>Associated setter method</th>, + * </tr><tr>, + * <td>{@code "backlog"}</td><td>{@link #setBacklog(int)}</td>, + * </tr><tr>, + * <td>{@code "reuseAddress"}</td><td>{@link #setReuseAddress(boolean)}</td>, + * </tr><tr>, + * <td>{@code "receiveBufferSize"}</td><td>{@link #setReceiveBufferSize(int)}</td>]