[+++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +    private static final Throwable UNSAFE_UNAVAILABILITY_CAUSE = unsafeUnavailabilityCause0();, +            UNSAFE_UNAVAILABILITY_CAUSE == null && !SystemPropertyUtil.getBoolean("io.netty.noPreferDirect", false);, +        return UNSAFE_UNAVAILABILITY_CAUSE == null;, +        return UNSAFE_UNAVAILABILITY_CAUSE;, +    private static Throwable unsafeUnavailabilityCause0() {, +            return new UnsupportedOperationException("sun.misc.Unsafe: unavailable (Android)");, +        Throwable cause = PlatformDependent0.getUnsafeUnavailabilityCause();, +        if (cause != null) {, +            return cause;, +            return hasUnsafe ? null : PlatformDependent0.getUnsafeUnavailabilityCause();, +            return new UnsupportedOperationException("Could not determine if Unsafe is available", t);, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +    private static final Throwable UNSAFE_UNAVAILABILITY_CAUSE = unsafeUnavailabilityCause0();, +            UNSAFE_UNAVAILABILITY_CAUSE == null && !SystemPropertyUtil.getBoolean("io.netty.noPreferDirect", false);, +        return UNSAFE_UNAVAILABILITY_CAUSE == null;, +        return UNSAFE_UNAVAILABILITY_CAUSE;, +    private static Throwable unsafeUnavailabilityCause0() {, +            return new UnsupportedOperationException("sun.misc.Unsafe: unavailable (Android)");, +        Throwable cause = PlatformDependent0.getUnsafeUnavailabilityCause();, +        if (cause != null) {, +            return cause;, +            return hasUnsafe ? null : PlatformDependent0.getUnsafeUnavailabilityCause();, +            return new UnsupportedOperationException("Could not determine if Unsafe is available", t);, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent0.java, +    private static final Throwable EXPLICIT_NO_UNSAFE_CAUSE = explicitNoUnsafeCause0();, +        if ((unsafeUnavailabilityCause = EXPLICIT_NO_UNSAFE_CAUSE) != null) {, +        return EXPLICIT_NO_UNSAFE_CAUSE == null;, +    private static Throwable explicitNoUnsafeCause0() {, +            return new UnsupportedOperationException("sun.misc.Unsafe: unavailable (io.netty.noUnsafe)");, +        String unsafePropName;, +            unsafePropName = "io.netty.tryUnsafe";, +            unsafePropName = "org.jboss.netty.tryUnsafe";, +        if (!SystemPropertyUtil.getBoolean(unsafePropName, true)) {, +            String msg = "sun.misc.Unsafe: unavailable (" + unsafePropName + ")";, +            logger.debug(msg);, +            return new UnsupportedOperationException(msg);, +        return null;]