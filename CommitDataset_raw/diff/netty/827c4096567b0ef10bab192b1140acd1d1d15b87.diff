[+++ b/all/pom.xml, +      <id>uber-staging</id>, +    <profile>, +      <id>uber-snapshot</id>, +, +      <dependencies>, +        <!-- Depend on all our native jars -->, +        <!-- As this is executed on either macOS or Linux we directly need to specify the classifier -->, +        <dependency>, +          <groupId>${project.groupId}</groupId>, +          <artifactId>netty-transport-native-epoll</artifactId>, +          <version>${project.version}</version>, +          <classifier>linux-x86_64</classifier>, +          <scope>compile</scope>, +          <optional>true</optional>, +        </dependency>, +        <dependency>, +          <groupId>${project.groupId}</groupId>, +          <artifactId>netty-transport-native-kqueue</artifactId>, +          <version>${project.version}</version>, +          <classifier>osx-x86_64</classifier>, +          <scope>compile</scope>, +          <optional>true</optional>, +        </dependency>, +      </dependencies>, +    </profile>, +++ b/all/pom.xml, +      <id>uber-staging</id>, +    <profile>, +      <id>uber-snapshot</id>, +, +      <dependencies>, +        <!-- Depend on all our native jars -->, +        <!-- As this is executed on either macOS or Linux we directly need to specify the classifier -->, +        <dependency>, +          <groupId>${project.groupId}</groupId>, +          <artifactId>netty-transport-native-epoll</artifactId>, +          <version>${project.version}</version>, +          <classifier>linux-x86_64</classifier>, +          <scope>compile</scope>, +          <optional>true</optional>, +        </dependency>, +        <dependency>, +          <groupId>${project.groupId}</groupId>, +          <artifactId>netty-transport-native-kqueue</artifactId>, +          <version>${project.version}</version>, +          <classifier>osx-x86_64</classifier>, +          <scope>compile</scope>, +          <optional>true</optional>, +        </dependency>, +      </dependencies>, +    </profile>, +++ b/pom.xml, +      <!-- After artifacts were deployed from linux and macos we need to execute the following on macOS (in the root of the project)., +           mvn -Psonatype-oss-release,full,uber-staging -pl transport-native-kqueue,transport-native-unix-common,all,tarball clean package gpg:sign org.sonatype.plugins:nexus-staging-maven-plugin:deploy -DstagingRepositoryId=${netty-id} -DnexusUrl=https://oss.sonatype.org -DserverId=sonatype-nexus-staging, +++ b/all/pom.xml, +      <id>uber-staging</id>, +    <profile>, +      <id>uber-snapshot</id>, +, +      <dependencies>, +        <!-- Depend on all our native jars -->, +        <!-- As this is executed on either macOS or Linux we directly need to specify the classifier -->, +        <dependency>, +          <groupId>${project.groupId}</groupId>, +          <artifactId>netty-transport-native-epoll</artifactId>, +          <version>${project.version}</version>, +          <classifier>linux-x86_64</classifier>, +          <scope>compile</scope>, +          <optional>true</optional>, +        </dependency>, +        <dependency>, +          <groupId>${project.groupId}</groupId>, +          <artifactId>netty-transport-native-kqueue</artifactId>, +          <version>${project.version}</version>, +          <classifier>osx-x86_64</classifier>, +          <scope>compile</scope>, +          <optional>true</optional>, +        </dependency>, +      </dependencies>, +    </profile>, +++ b/pom.xml, +      <!-- After artifacts were deployed from linux and macos we need to execute the following on macOS (in the root of the project)., +           mvn -Psonatype-oss-release,full,uber-staging -pl transport-native-kqueue,transport-native-unix-common,all,tarball clean package gpg:sign org.sonatype.plugins:nexus-staging-maven-plugin:deploy -DstagingRepositoryId=${netty-id} -DnexusUrl=https://oss.sonatype.org -DserverId=sonatype-nexus-staging, +++ b/tarball/pom.xml, +      <id>uber-staging</id>, +    <profile>, +      <id>uber-snapshot</id>, +      <dependencies>, +        <!-- Depend on all our native jars -->, +        <dependency>, +          <groupId>${project.groupId}</groupId>, +          <artifactId>netty-transport-native-epoll</artifactId>, +          <version>${project.version}</version>, +          <classifier>linux-x86_64</classifier>, +          <scope>compile</scope>, +          <optional>true</optional>, +        </dependency>, +        <dependency>, +          <groupId>${project.groupId}</groupId>]