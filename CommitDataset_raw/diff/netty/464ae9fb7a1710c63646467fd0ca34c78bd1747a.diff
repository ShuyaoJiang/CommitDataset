[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpUtil.java, +     * @param message entity to fetch Content-Type header from, +     * Fetch charset from Content-Type header value., +     *, +     * @param contentTypeValue Content-Type header value to parse, +     * @return the charset from message's Content-Type header or {@link io.netty.util.CharsetUtil#ISO_8859_1}, +     * if charset is not presented or unparsable, +     */, +    public static Charset getCharset(CharSequence contentTypeValue) {, +        if (contentTypeValue != null) {, +            return getCharset(contentTypeValue, CharsetUtil.ISO_8859_1);, +        } else {, +            return CharsetUtil.ISO_8859_1;, +        }, +    }, +, +    /**, +     * @param message entity to fetch Content-Type header from, +     * @param defaultCharset result to use in case of empty, incorrect or doesn't conain required part header value, +        CharSequence contentTypeValue = message.headers().get(HttpHeaderNames.CONTENT_TYPE);, +        if (contentTypeValue != null) {, +            return getCharset(contentTypeValue, defaultCharset);, +        } else {, +            return defaultCharset;, +        }, +    }, +, +    /**, +     * Fetch charset from Content-Type header value., +     *, +     * @param contentTypeValue Content-Type header value to parse, +     * @param defaultCharset result to use in case of empty, incorrect or doesn't contain required part header value, +     * @return the charset from message's Content-Type header or {@code defaultCharset}, +     * if charset is not presented or unparsable, +     */, +    public static Charset getCharset(CharSequence contentTypeValue, Charset defaultCharset) {, +        if (contentTypeValue != null) {, +            CharSequence charsetCharSequence = getCharsetAsSequence(contentTypeValue);, +        } else {, +            return defaultCharset;, +        }, +     * @param message entity to fetch Content-Type header from, +            return getCharsetAsSequence(contentTypeValue);, +        } else {, +            return null;, +        }, +    }, +, +    /**, +     * Fetch charset from Content-Type header value as a char sequence., +     *, +     * A lot of sites/possibly clients have charset="CHARSET", for example charset="utf-8". Or "utf8" instead of "utf-8", +     * This is not according to standard, but this method provide an ability to catch desired mistakes manually in code, +     *, +     * @param contentTypeValue Content-Type header value to parse, +     * @return the {@code CharSequence} with charset from message's Content-Type header, +     * or {@code null} if charset is not presented, +     * @throws NullPointerException in case if {@code contentTypeValue == null}, +     */, +    public static CharSequence getCharsetAsSequence(CharSequence contentTypeValue) {, +        if (contentTypeValue == null) {, +            throw new NullPointerException("contentTypeValue");, +        }, +     * @param message entity to fetch Content-Type header from, +            return getMimeType(contentTypeValue);, +        } else {, +            return null;, +        }, +    }, +, +    /**, +     * Fetch MIME type part from Content-Type header value as a char sequence., +     *, +     * @param contentTypeValue Content-Type header value to parse, +     * @return the MIME type as a {@code CharSequence} from message's Content-Type header, +     * or {@code null} if content-type header or MIME type part of this header are not presented, +     * <p/>, +     * "content-type: text/html; charset=utf-8" - "text/html" will be returned <br/>, +     * "content-type: text/html" - "text/html" will be returned <br/>, +     * "content-type: empty header - {@code null} we be returned, +     * @throws NullPointerException in case if {@code contentTypeValue == null}, +     */, +    public static CharSequence getMimeType(CharSequence contentTypeValue) {, +        if (contentTypeValue == null) {, +            throw new NullPointerException("contentTypeValue");, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpUtil.java, +     * @param message entity to fetch Content-Type header from, +     * Fetch charset from Content-Type header value., +     *, +     * @param contentTypeValue Content-Type header value to parse, +     * @return the charset from message's Content-Type header or {@link io.netty.util.CharsetUtil#ISO_8859_1}, +     * if charset is not presented or unparsable, +     */, +    public static Charset getCharset(CharSequence contentTypeValue) {, +        if (contentTypeValue != null) {, +            return getCharset(contentTypeValue, CharsetUtil.ISO_8859_1);, +        } else {, +            return CharsetUtil.ISO_8859_1;]