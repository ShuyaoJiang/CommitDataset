[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkedInput.java, +, +    @Override, +    public long length() {, +        return input.length();, +    }, +, +    @Override, +    public long progress() {, +        return input.progress();, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkedInput.java, +, +    @Override, +    public long length() {, +        return input.length();, +    }, +, +    @Override, +    public long progress() {, +        return input.progress();, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java, +    /**, +     * Global Transfer progress, +     */, +    private long globalProgress;, +            HttpContent nextChunk = nextChunk();, +            globalProgress += nextChunk.content().readableBytes();, +            return nextChunk;, +    @Override, +    public long length() {, +        return isMultipart? globalBodySize : globalBodySize - 1;, +    }, +, +    @Override, +    public long progress() {, +        return globalProgress;, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkedInput.java, +, +    @Override, +    public long length() {, +        return input.length();, +    }, +, +    @Override, +    public long progress() {, +        return input.progress();, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java, +    /**, +     * Global Transfer progress, +     */, +    private long globalProgress;, +            HttpContent nextChunk = nextChunk();, +            globalProgress += nextChunk.content().readableBytes();, +            return nextChunk;, +    @Override, +    public long length() {, +        return isMultipart? globalBodySize : globalBodySize - 1;, +    }, +, +    @Override, +    public long progress() {, +        return globalProgress;, +    }, +, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedFile.java, +, +    @Override, +    public long length() {, +        return endOffset - startOffset;, +    }, +, +    @Override, +    public long progress() {, +        return offset - startOffset;, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkedInput.java, +, +    @Override, +    public long length() {, +        return input.length();, +    }, +, +    @Override, +    public long progress() {, +        return input.progress();, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java, +    /**, +     * Global Transfer progress, +     */, +    private long globalProgress;, +            HttpContent nextChunk = nextChunk();, +            globalProgress += nextChunk.content().readableBytes();, +            return nextChunk;, +    @Override]