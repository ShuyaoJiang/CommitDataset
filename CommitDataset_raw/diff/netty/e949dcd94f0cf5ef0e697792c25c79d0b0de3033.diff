[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2LocalFlowController.java, +        if (numBytes < 0) {, +            throw new IllegalArgumentException("numBytes must not be negative");, +        }, +        if (numBytes == 0) {, +            return false;, +        }, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2LocalFlowController.java, +        if (numBytes < 0) {, +            throw new IllegalArgumentException("numBytes must not be negative");, +        }, +        if (numBytes == 0) {, +            return false;, +        }, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoderTest.java, +        mockFlowControl(0);, +            // Now we ignore the empty bytes inside consumeBytes method, so it will be called once., +            verify(localFlow).consumeBytes(eq(ctx), eq(stream), eq(0));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2LocalFlowController.java, +        if (numBytes < 0) {, +            throw new IllegalArgumentException("numBytes must not be negative");, +        }, +        if (numBytes == 0) {, +            return false;, +        }, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoderTest.java, +        mockFlowControl(0);, +            // Now we ignore the empty bytes inside consumeBytes method, so it will be called once., +            verify(localFlow).consumeBytes(eq(ctx), eq(stream), eq(0));, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2LocalFlowControllerTest.java, +    @Test, +    public void consumeBytesForZeroNumBytesShouldIgnore() throws Http2Exception {, +        assertFalse(controller.consumeBytes(ctx, connection.stream(STREAM_ID), 0));, +    }, +, +    @Test(expected = IllegalArgumentException.class), +    public void consumeBytesForNegativeNumBytesShouldFail() throws Http2Exception {, +        assertFalse(controller.consumeBytes(ctx, connection.stream(STREAM_ID), -1));, +    }, +]