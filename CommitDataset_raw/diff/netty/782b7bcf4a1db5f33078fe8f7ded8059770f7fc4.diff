[+++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2CodecTest.java, +import io.netty.channel.ChannelInitializer;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +    private volatile Channel serverConnectedChannel;, +        final CountDownLatch serverChannelLatch = new CountDownLatch(1);, +                .childHandler(new ChannelInitializer<Channel>() {, +                    @Override, +                    protected void initChannel(Channel ch) throws Exception {, +                        serverConnectedChannel = ch;, +                        ch.pipeline().addLast(new Http2Codec(true, serverLastInboundHandler));, +                        serverChannelLatch.countDown();, +                    }, +                });, +        assertTrue(serverChannelLatch.await(2, TimeUnit.SECONDS));, +        if (serverConnectedChannel != null) {, +            serverConnectedChannel.close().sync();, +            serverConnectedChannel = null;, +        }, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2CodecTest.java, +import io.netty.channel.ChannelInitializer;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +    private volatile Channel serverConnectedChannel;, +        final CountDownLatch serverChannelLatch = new CountDownLatch(1);, +                .childHandler(new ChannelInitializer<Channel>() {, +                    @Override, +                    protected void initChannel(Channel ch) throws Exception {, +                        serverConnectedChannel = ch;, +                        ch.pipeline().addLast(new Http2Codec(true, serverLastInboundHandler));, +                        serverChannelLatch.countDown();, +                    }, +                });, +        assertTrue(serverChannelLatch.await(2, TimeUnit.SECONDS));, +        if (serverConnectedChannel != null) {, +            serverConnectedChannel.close().sync();, +            serverConnectedChannel = null;, +        }, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionRoundtripTest.java, +    private volatile Channel serverConnectedChannel;, +        if (serverConnectedChannel != null) {, +            serverConnectedChannel.close().sync();, +            serverConnectedChannel = null;, +        }, +                serverConnectedChannel = ch;, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2CodecTest.java, +import io.netty.channel.ChannelInitializer;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +    private volatile Channel serverConnectedChannel;, +        final CountDownLatch serverChannelLatch = new CountDownLatch(1);, +                .childHandler(new ChannelInitializer<Channel>() {, +                    @Override, +                    protected void initChannel(Channel ch) throws Exception {, +                        serverConnectedChannel = ch;, +                        ch.pipeline().addLast(new Http2Codec(true, serverLastInboundHandler));, +                        serverChannelLatch.countDown();, +                    }, +                });, +        assertTrue(serverChannelLatch.await(2, TimeUnit.SECONDS));, +        if (serverConnectedChannel != null) {, +            serverConnectedChannel.close().sync();, +            serverConnectedChannel = null;, +        }, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionRoundtripTest.java, +    private volatile Channel serverConnectedChannel;, +        if (serverConnectedChannel != null) {, +            serverConnectedChannel.close().sync();, +            serverConnectedChannel = null;, +        }, +                serverConnectedChannel = ch;, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/HttpToHttp2ConnectionHandlerTest.java, +import java.util.concurrent.TimeUnit;, +    private volatile Channel serverConnectedChannel;, +        if (serverConnectedChannel != null) {, +            serverConnectedChannel.close().sync();, +            serverConnectedChannel = null;, +        }, +        final CountDownLatch serverChannelLatch = new CountDownLatch(1);, +                serverConnectedChannel = ch;, +                serverChannelLatch.countDown();, +        assertTrue(serverChannelLatch.await(2, TimeUnit.SECONDS));, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2CodecTest.java, +import io.netty.channel.ChannelInitializer;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +    private volatile Channel serverConnectedChannel;, +        final CountDownLatch serverChannelLatch = new CountDownLatch(1);, +                .childHandler(new ChannelInitializer<Channel>() {, +                    @Override, +                    protected void initChannel(Channel ch) throws Exception {, +                        serverConnectedChannel = ch;, +                        ch.pipeline().addLast(new Http2Codec(true, serverLastInboundHandler));, +                        serverChannelLatch.countDown();, +                    }, +                });]