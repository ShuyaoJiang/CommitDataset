[+++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +            switch (s.nioBufferCount()) {, +                case 0:, +                    throw new UnsupportedOperationException();, +                case 1:, +                    break;, +                default:, +                    Collections.addAll(buffers, s.nioBuffers(index - adjustment, localLength));, +            }, +, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +            switch (s.nioBufferCount()) {, +                case 0:, +                    throw new UnsupportedOperationException();, +                case 1:, +                    break;, +                default:, +                    Collections.addAll(buffers, s.nioBuffers(index - adjustment, localLength));, +            }, +, +++ b/buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java, +, +    @Test, +    public void testNestedLayout() {, +        CompositeByteBuf buf = freeLater(compositeBuffer());, +        buf.addComponent(, +                compositeBuffer(), +                        .addComponent(wrappedBuffer(new byte[]{1, 2})), +                        .addComponent(wrappedBuffer(new byte[]{3, 4})).slice(1, 2));, +, +        ByteBuffer[] nioBuffers = buf.nioBuffers(0, 2);, +        assertThat(nioBuffers.length, is(2));, +        assertThat(nioBuffers[0].remaining(), is(1));, +        assertThat(nioBuffers[0].get(), is((byte) 2));, +        assertThat(nioBuffers[1].remaining(), is(1));, +        assertThat(nioBuffers[1].get(), is((byte) 3));, +    }]