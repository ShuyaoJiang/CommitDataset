[+++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, +                if (!(pending.msg() instanceof ByteBuf)) {, +                    ctx.write(pending.msg(), (ChannelPromise) pending.recycleAndGet());, +                    pendingUnencryptedWrites.remove();, +                    continue;, +                }, +, +++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, +                if (!(pending.msg() instanceof ByteBuf)) {, +                    ctx.write(pending.msg(), (ChannelPromise) pending.recycleAndGet());, +                    pendingUnencryptedWrites.remove();, +                    continue;, +                }, +, +++ b/handler/src/test/java/io/netty/handler/ssl/SslHandlerTest.java, +    }, +, +    @Test, +    public void testNonByteBufPassthrough() throws Exception {, +        SSLEngine engine = SSLContext.getDefault().createSSLEngine();, +        engine.setUseClientMode(false);, +, +        EmbeddedChannel ch = new EmbeddedChannel(new SslHandler(engine));, +, +        Object msg1 = new Object();, +        ch.writeOutbound(msg1);, +        assertThat(ch.readOutbound(), is(sameInstance(msg1)));, +, +        Object msg2 = new Object();, +        ch.writeInbound(msg2);, +        assertThat(ch.readInbound(), is(sameInstance(msg2)));, +, +        ch.finish();]