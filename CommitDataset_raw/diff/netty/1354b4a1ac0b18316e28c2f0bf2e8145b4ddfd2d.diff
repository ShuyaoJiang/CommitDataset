[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameDecoder.java, +import static io.netty.handler.codec.spdy.SpdyCodecUtil.*;, +, +        while (numHeaders -- > 0) {, +            if (valueLength < 0) {, +, +            // SPDY/3 allows zero-length (empty) header values, +            if (valueLength == 0) {, +                if (version < 3) {, +                    spdyHeaderBlock.setInvalid();, +                    return;, +                } else {, +                    spdyHeaderBlock.addHeader(name, "");, +                    this.headerSize = headerSize;, +                    continue;, +                }, +            }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameDecoder.java, +import static io.netty.handler.codec.spdy.SpdyCodecUtil.*;, +, +        while (numHeaders -- > 0) {, +            if (valueLength < 0) {, +, +            // SPDY/3 allows zero-length (empty) header values, +            if (valueLength == 0) {, +                if (version < 3) {, +                    spdyHeaderBlock.setInvalid();, +                    return;, +                } else {, +                    spdyHeaderBlock.addHeader(name, "");, +                    this.headerSize = headerSize;, +                    continue;, +                }, +            }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +                if (valueBytes.length > 0) {, +            }, +            if (valueLength == 0) {, +                if (version < 3) {, +                    throw new IllegalArgumentException(, +                            "header value cannot be empty: " + name);, +                }, +            } else {, +            }, +            if (valueLength > 0) {, +        }]