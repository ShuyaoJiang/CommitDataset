[+++ b/testsuite/src/test/java/io/netty/testsuite/transport/udt/UDTClientServerConnectionTest.java, +/*, + * Copyright 2012 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.testsuite.transport.udt;, +, +import static org.junit.Assert.assertTrue;, +import io.netty.bootstrap.Bootstrap;, +import io.netty.bootstrap.ServerBootstrap;, +import io.netty.buffer.BufType;, +import io.netty.channel.Channel;, +import io.netty.channel.ChannelHandlerContext;, +import io.netty.channel.ChannelInboundMessageHandlerAdapter;, +import io.netty.channel.ChannelInitializer;, +import io.netty.channel.ChannelPipeline;, +import io.netty.channel.group.ChannelGroup;, +import io.netty.channel.group.DefaultChannelGroup;, +import io.netty.channel.nio.NioEventLoopGroup;, +import io.netty.channel.udt.UdtChannel;, +import io.netty.channel.udt.nio.NioUdtProvider;, +import io.netty.handler.codec.DelimiterBasedFrameDecoder;, +import io.netty.handler.codec.Delimiters;, +import io.netty.handler.codec.string.StringDecoder;, +import io.netty.handler.codec.string.StringEncoder;, +import io.netty.testsuite.transport.udt.UDTClientServerConnectionTest.Server.TestThreadFactory;, +import io.netty.util.CharsetUtil;, +, +import java.util.concurrent.ThreadFactory;, +import java.util.concurrent.atomic.AtomicInteger;, +import java.util.logging.Level;, +import java.util.logging.Logger;, +, +import org.junit.Test;, +, +public class UDTClientServerConnectionTest {, +, +    @Test, +    public void test() throws InterruptedException {, +        // first start server, +, +        int port = 1234;, +        Server server = new Server(port);, +        Thread serverTread = new Thread(server);, +        serverTread.start();, +, +        Thread.sleep(1000);, +, +        // start a client, +        final String host = "localhost";, +, +        TestClient client = new TestClient(host, port);, +        Thread clientThread = new Thread(client);, +        clientThread.start();, +, +        Thread.sleep(1000);, +, +        // check number of connections, +        assertTrue(server.connectedClients() == 1);, +, +        // close client, +        client.shutdown();, +, +        Thread.sleep(1000);, +, +        // check connections again, +        assertTrue(server.connectedClients() == 0);, +    }, +, +    static class Server implements Runnable {, +        private final ChannelGroup channels = new DefaultChannelGroup(, +                "all channels");, +        private Channel serverChannel;, +, +        private static final Logger log = Logger.getLogger(Server.class, +                .getName());, +, +        private final int port;, +        private ServerBootstrap b;, +        private boolean running;, +        private boolean shutdown;, +, +        public Server(final int port) {, +            this.port = port;, +        }, +, +        public void shutdown() {, +            log.info("shutting down server...");, +            running = false;]