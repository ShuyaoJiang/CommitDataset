[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieDecoder.java, +, +import io.netty.handler.codec.DateFormatter;, +import java.util.Date;, +                    Date date = DateFormatter.parseHttpDate(value);, +                    if (date != null) {, +                        long maxAgeMillis = date.getTime() - System.currentTimeMillis();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieDecoder.java, +, +import io.netty.handler.codec.DateFormatter;, +import java.util.Date;, +                    Date date = DateFormatter.parseHttpDate(value);, +                    if (date != null) {, +                        long maxAgeMillis = date.getTime() - System.currentTimeMillis();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +import io.netty.handler.codec.DateFormatter;, +                return DateFormatter.format((Date) value);, +                return DateFormatter.format(((Calendar) value).getTime());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieDecoder.java, +, +import io.netty.handler.codec.DateFormatter;, +import java.util.Date;, +                    Date date = DateFormatter.parseHttpDate(value);, +                    if (date != null) {, +                        long maxAgeMillis = date.getTime() - System.currentTimeMillis();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +import io.netty.handler.codec.DateFormatter;, +                return DateFormatter.format((Date) value);, +                return DateFormatter.format(((Calendar) value).getTime());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderDateFormat.java, +import io.netty.handler.codec.DateFormatter;, + * @deprecated Use {@link DateFormatter} instead, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieDecoder.java, +, +import io.netty.handler.codec.DateFormatter;, +import java.util.Date;, +                    Date date = DateFormatter.parseHttpDate(value);, +                    if (date != null) {, +                        long maxAgeMillis = date.getTime() - System.currentTimeMillis();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +import io.netty.handler.codec.DateFormatter;, +                return DateFormatter.format((Date) value);, +                return DateFormatter.format(((Calendar) value).getTime());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderDateFormat.java, +import io.netty.handler.codec.DateFormatter;, + * @deprecated Use {@link DateFormatter} instead, +++ /dev/null, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieDecoder.java, +, +import io.netty.handler.codec.DateFormatter;, +import java.util.Date;, +                    Date date = DateFormatter.parseHttpDate(value);, +                    if (date != null) {, +                        long maxAgeMillis = date.getTime() - System.currentTimeMillis();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +import io.netty.handler.codec.DateFormatter;, +                return DateFormatter.format((Date) value);, +                return DateFormatter.format(((Calendar) value).getTime());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderDateFormat.java, +import io.netty.handler.codec.DateFormatter;, + * @deprecated Use {@link DateFormatter} instead, +++ /dev/null, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +import io.netty.handler.codec.DateFormatter;, +        Date date = DateFormatter.parseHttpDate(value);, +        if (date == null) {, +            throw new ParseException("header can't be parsed into a Date: " + value, 0);, +        }, +        return date;, +        Date date = DateFormatter.parseHttpDate(value);, +        return date != null ? date : defaultValue;, +            message.headers().set(name, DateFormatter.format(value));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieDecoder.java, +, +import io.netty.handler.codec.DateFormatter;, +import java.util.Date;, +                    Date date = DateFormatter.parseHttpDate(value);, +                    if (date != null) {, +                        long maxAgeMillis = date.getTime() - System.currentTimeMillis();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +import io.netty.handler.codec.DateFormatter;, +                return DateFormatter.format((Date) value);, +                return DateFormatter.format(((Calendar) value).getTime());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderDateFormat.java, +import io.netty.handler.codec.DateFormatter;, + * @deprecated Use {@link DateFormatter} instead, +++ /dev/null, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +import io.netty.handler.codec.DateFormatter;, +        Date date = DateFormatter.parseHttpDate(value);, +        if (date == null) {, +            throw new ParseException("header can't be parsed into a Date: " + value, 0);, +        }, +        return date;, +        Date date = DateFormatter.parseHttpDate(value);, +        return date != null ? date : defaultValue;, +            message.headers().set(name, DateFormatter.format(value));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cookie/ClientCookieDecoder.java, +import io.netty.handler.codec.DateFormatter;, +                Date expiresDate = DateFormatter.parseHttpDate(header, expiresStart, expiresEnd);]