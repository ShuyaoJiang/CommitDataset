[+++ b/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java, +import io.netty.resolver.ResolvedAddressTypes;, +    private static final DnsRecord[] EMPTY_ADDITIONALS = new DnsRecord[0];, +    private static final DnsRecordType[] IPV4_ONLY_RESOLVED_RECORD_TYPES =, +            new DnsRecordType[] {DnsRecordType.A};, +    private static final InternetProtocolFamily[] IPV4_ONLY_RESOLVED_PROTOCOL_FAMILIES =, +            new InternetProtocolFamily[] {InternetProtocolFamily.IPv4};, +    private static final DnsRecordType[] IPV4_PREFERRED_RESOLVED_RECORD_TYPES =, +            new DnsRecordType[] {DnsRecordType.A, DnsRecordType.AAAA};, +    private static final InternetProtocolFamily[] IPV4_PREFERRED_RESOLVED_PROTOCOL_FAMILIES =, +            new InternetProtocolFamily[] {InternetProtocolFamily.IPv4, InternetProtocolFamily.IPv6};, +    private static final DnsRecordType[] IPV6_ONLY_RESOLVED_RECORD_TYPES =, +            new DnsRecordType[] {DnsRecordType.AAAA};, +    private static final InternetProtocolFamily[] IPV6_ONLY_RESOLVED_PROTOCOL_FAMILIES =, +            new InternetProtocolFamily[] {InternetProtocolFamily.IPv6};, +    private static final DnsRecordType[] IPV6_PREFERRED_RESOLVED_RECORD_TYPES =, +            new DnsRecordType[] {DnsRecordType.AAAA, DnsRecordType.A};, +    private static final InternetProtocolFamily[] IPV6_PREFERRED_RESOLVED_PROTOCOL_FAMILIES =, +            new InternetProtocolFamily[] {InternetProtocolFamily.IPv6, InternetProtocolFamily.IPv4};, +    static final ResolvedAddressTypes DEFAULT_RESOLVE_ADDRESS_TYPES;, +    static final String[] DEFAULT_SEARCH_DOMAINS;, +            DEFAULT_RESOLVE_ADDRESS_TYPES = ResolvedAddressTypes.IPV4_ONLY;, +                DEFAULT_RESOLVE_ADDRESS_TYPES = ResolvedAddressTypes.IPV6_PREFERRED;, +                DEFAULT_RESOLVE_ADDRESS_TYPES = ResolvedAddressTypes.IPV4_PREFERRED;, +        DEFAULT_SEARCH_DOMAINS = searchDomains;, +    private final ResolvedAddressTypes resolvedAddressTypes;, +    private final InternetProtocolFamily[] resolvedInternetProtocolFamilies;, +     * @param resolvedAddressTypes the preferred address types, +            ResolvedAddressTypes resolvedAddressTypes,, +        this.resolvedAddressTypes = resolvedAddressTypes != null ? resolvedAddressTypes : DEFAULT_RESOLVE_ADDRESS_TYPES;, +        switch (this.resolvedAddressTypes) {, +            case IPV4_ONLY:, +                supportsAAAARecords = false;, +                resolveRecordTypes = IPV4_ONLY_RESOLVED_RECORD_TYPES;, +                resolvedInternetProtocolFamilies = IPV4_ONLY_RESOLVED_PROTOCOL_FAMILIES;, +                preferredAddressType = InternetProtocolFamily.IPv4;, +            case IPV4_PREFERRED:, +                supportsARecords = true;, +                resolveRecordTypes = IPV4_PREFERRED_RESOLVED_RECORD_TYPES;, +                resolvedInternetProtocolFamilies = IPV4_PREFERRED_RESOLVED_PROTOCOL_FAMILIES;, +                preferredAddressType = InternetProtocolFamily.IPv4;, +                break;, +            case IPV6_ONLY:, +                supportsAAAARecords = true;, +                supportsARecords = false;, +                resolveRecordTypes = IPV6_ONLY_RESOLVED_RECORD_TYPES;, +                resolvedInternetProtocolFamilies = IPV6_ONLY_RESOLVED_PROTOCOL_FAMILIES;, +                preferredAddressType = InternetProtocolFamily.IPv6;, +                break;, +            case IPV6_PREFERRED:, +                supportsAAAARecords = true;, +                supportsARecords = true;, +                resolveRecordTypes = IPV6_PREFERRED_RESOLVED_RECORD_TYPES;, +                resolvedInternetProtocolFamilies = IPV6_PREFERRED_RESOLVED_PROTOCOL_FAMILIES;, +                preferredAddressType = InternetProtocolFamily.IPv6;, +                throw new IllegalArgumentException("Unknown ResolvedAddressTypes " + resolvedAddressTypes);, +     * Returns the {@link ResolvedAddressTypes} resolved by {@link #resolve(String)}., +    public ResolvedAddressTypes resolvedAddressTypes() {, +        return resolvedAddressTypes;, +    InternetProtocolFamily[] resolvedInternetProtocolFamiliesUnsafe() {, +        return resolvedInternetProtocolFamilies;, +            InetAddress address = hostsFileEntriesResolver.address(hostname, resolvedAddressTypes);, +        doResolve(inetHost, EMPTY_ADDITIONALS, promise, resolveCache);, +            return EMPTY_ADDITIONALS;, +                for (InternetProtocolFamily f : resolvedInternetProtocolFamilies) {, +        doResolveAll(inetHost, EMPTY_ADDITIONALS, promise, resolveCache);, +                for (InternetProtocolFamily f : resolvedInternetProtocolFamilies) {, +        return query0(nameServerAddr, question, EMPTY_ADDITIONALS,, +        return query0(nameServerAddr, question, EMPTY_ADDITIONALS, promise);, +++ b/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java, +import io.netty.resolver.ResolvedAddressTypes;, +    private static final DnsRecord[] EMPTY_ADDITIONALS = new DnsRecord[0];, +    private static final DnsRecordType[] IPV4_ONLY_RESOLVED_RECORD_TYPES =, +            new DnsRecordType[] {DnsRecordType.A};, +    private static final InternetProtocolFamily[] IPV4_ONLY_RESOLVED_PROTOCOL_FAMILIES =, +            new InternetProtocolFamily[] {InternetProtocolFamily.IPv4};, +    private static final DnsRecordType[] IPV4_PREFERRED_RESOLVED_RECORD_TYPES =, +            new DnsRecordType[] {DnsRecordType.A, DnsRecordType.AAAA};, +    private static final InternetProtocolFamily[] IPV4_PREFERRED_RESOLVED_PROTOCOL_FAMILIES =, +            new InternetProtocolFamily[] {InternetProtocolFamily.IPv4, InternetProtocolFamily.IPv6};, +    private static final DnsRecordType[] IPV6_ONLY_RESOLVED_RECORD_TYPES =, +            new DnsRecordType[] {DnsRecordType.AAAA};, +    private static final InternetProtocolFamily[] IPV6_ONLY_RESOLVED_PROTOCOL_FAMILIES =, +            new InternetProtocolFamily[] {InternetProtocolFamily.IPv6};, +    private static final DnsRecordType[] IPV6_PREFERRED_RESOLVED_RECORD_TYPES =, +            new DnsRecordType[] {DnsRecordType.AAAA, DnsRecordType.A};, +    private static final InternetProtocolFamily[] IPV6_PREFERRED_RESOLVED_PROTOCOL_FAMILIES =, +            new InternetProtocolFamily[] {InternetProtocolFamily.IPv6, InternetProtocolFamily.IPv4};, +    static final ResolvedAddressTypes DEFAULT_RESOLVE_ADDRESS_TYPES;, +    static final String[] DEFAULT_SEARCH_DOMAINS;, +            DEFAULT_RESOLVE_ADDRESS_TYPES = ResolvedAddressTypes.IPV4_ONLY;, +                DEFAULT_RESOLVE_ADDRESS_TYPES = ResolvedAddressTypes.IPV6_PREFERRED;, +                DEFAULT_RESOLVE_ADDRESS_TYPES = ResolvedAddressTypes.IPV4_PREFERRED;, +        DEFAULT_SEARCH_DOMAINS = searchDomains;, +    private final ResolvedAddressTypes resolvedAddressTypes;, +    private final InternetProtocolFamily[] resolvedInternetProtocolFamilies;, +     * @param resolvedAddressTypes the preferred address types, +            ResolvedAddressTypes resolvedAddressTypes,, +        this.resolvedAddressTypes = resolvedAddressTypes != null ? resolvedAddressTypes : DEFAULT_RESOLVE_ADDRESS_TYPES;, +        switch (this.resolvedAddressTypes) {]