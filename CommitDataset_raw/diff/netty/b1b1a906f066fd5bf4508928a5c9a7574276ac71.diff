[+++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/DefaultRxtxChannelConfig.java, +    private volatile int readTimeout = 1000;, +        if (option == READ_TIMEOUT) {, +            return (T) Integer.valueOf(getReadTimeout());, +        }, +        } else if (option == READ_TIMEOUT) {, +            setReadTimeout((Integer) value);, +    public RxtxChannelConfig setReadTimeout(int readTimeout) {, +        if (readTimeout < 0) {, +            throw new IllegalArgumentException("readTime must be >= 0");, +        }, +        this.readTimeout = readTimeout;, +        return this;, +    }, +, +    @Override, +    public int getReadTimeout() {, +        return readTimeout;, +    }, +, +    @Override, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/DefaultRxtxChannelConfig.java, +    private volatile int readTimeout = 1000;, +        if (option == READ_TIMEOUT) {, +            return (T) Integer.valueOf(getReadTimeout());, +        }, +        } else if (option == READ_TIMEOUT) {, +            setReadTimeout((Integer) value);, +    public RxtxChannelConfig setReadTimeout(int readTimeout) {, +        if (readTimeout < 0) {, +            throw new IllegalArgumentException("readTime must be >= 0");, +        }, +        this.readTimeout = readTimeout;, +        return this;, +    }, +, +    @Override, +    public int getReadTimeout() {, +        return readTimeout;, +    }, +, +    @Override, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelConfig.java, +    /**, +     * Sets the maximal time (in ms) to block while try to read from the serial port. Default is 1000ms, +     */, +    RxtxChannelConfig setReadTimeout(int readTimout);, +, +    /**, +     * Return the maximal time (in ms) to block and wait for something to be ready to read., +     */, +    int getReadTimeout();, +, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/DefaultRxtxChannelConfig.java, +    private volatile int readTimeout = 1000;, +        if (option == READ_TIMEOUT) {, +            return (T) Integer.valueOf(getReadTimeout());, +        }, +        } else if (option == READ_TIMEOUT) {, +            setReadTimeout((Integer) value);, +    public RxtxChannelConfig setReadTimeout(int readTimeout) {, +        if (readTimeout < 0) {, +            throw new IllegalArgumentException("readTime must be >= 0");, +        }, +        this.readTimeout = readTimeout;, +        return this;, +    }, +, +    @Override, +    public int getReadTimeout() {, +        return readTimeout;, +    }, +, +    @Override, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelConfig.java, +    /**, +     * Sets the maximal time (in ms) to block while try to read from the serial port. Default is 1000ms, +     */, +    RxtxChannelConfig setReadTimeout(int readTimout);, +, +    /**, +     * Return the maximal time (in ms) to block and wait for something to be ready to read., +     */, +    int getReadTimeout();, +, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelOption.java, +    public static final RxtxChannelOption<Integer> READ_TIMEOUT =, +            new RxtxChannelOption<Integer>("READ_TIMEOUT");, +]