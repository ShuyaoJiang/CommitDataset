[+++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +        if (buffer.hasArray()) {, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +        if (buffer.hasArray()) {, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioWorker.java, +        final SocketChannel ch = (SocketChannel) k.channel();, +        final NioSocketChannel channel = (NioSocketChannel) k.attachment();, +        final ReceiveBufferSizePredictor predictor =, +        final int predictedRecvBufSize = predictor.nextReceiveBufferSize();, +        ByteBuffer bb = recvBufferPool.acquire(predictedRecvBufSize);, +            bb.flip();, +, +            final ChannelBufferFactory bufferFactory =, +                channel.getConfig().getBufferFactory();, +            final ChannelBuffer buffer = bufferFactory.getBuffer(, +                    bb.order(bufferFactory.getDefaultOrder()));, +, +            recvBufferPool.release(bb);, +, +        } else {, +            recvBufferPool.release(bb);, +++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java, +        if (buffer.hasArray()) {, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioWorker.java, +        final SocketChannel ch = (SocketChannel) k.channel();, +        final NioSocketChannel channel = (NioSocketChannel) k.attachment();, +        final ReceiveBufferSizePredictor predictor =, +        final int predictedRecvBufSize = predictor.nextReceiveBufferSize();, +        ByteBuffer bb = recvBufferPool.acquire(predictedRecvBufSize);, +            bb.flip();, +, +            final ChannelBufferFactory bufferFactory =, +                channel.getConfig().getBufferFactory();, +            final ChannelBuffer buffer = bufferFactory.getBuffer(, +                    bb.order(bufferFactory.getDefaultOrder()));, +, +            recvBufferPool.release(bb);, +, +        } else {, +            recvBufferPool.release(bb);, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/SocketReceiveBufferPool.java, +    private static final int POOL_SIZE = 8;, +            buf.clear();, +        buf.clear();]