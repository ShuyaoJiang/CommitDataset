[+++ b/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java, +                        currentWrite.success();, +                            currentWrite.progress();, +                            currentWrite.success();, +        void success() {, +            if (promise instanceof ChannelProgressivePromise) {, +                // Now we know what the total is., +                ((ChannelProgressivePromise) promise).tryProgress(progress, progress);, +            }, +            promise.setSuccess();, +        }, +, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java, +                        currentWrite.success();, +                            currentWrite.progress();, +                            currentWrite.success();, +        void success() {, +            if (promise instanceof ChannelProgressivePromise) {, +                // Now we know what the total is., +                ((ChannelProgressivePromise) promise).tryProgress(progress, progress);, +            }, +            promise.setSuccess();, +        }, +, +++ b/transport/src/main/java/io/netty/channel/nio/AbstractNioByteChannel.java, +                in.progress(flushedAmount);, +, +                in.progress(flushedAmount);, +, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java, +                        currentWrite.success();, +                            currentWrite.progress();, +                            currentWrite.success();, +        void success() {, +            if (promise instanceof ChannelProgressivePromise) {, +                // Now we know what the total is., +                ((ChannelProgressivePromise) promise).tryProgress(progress, progress);, +            }, +            promise.setSuccess();, +        }, +, +++ b/transport/src/main/java/io/netty/channel/nio/AbstractNioByteChannel.java, +                in.progress(flushedAmount);, +, +                in.progress(flushedAmount);, +, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannel.java, +                        in.progress(readableBytes);, +                    } else { // readableBytes == writtenBytes, +                        in.progress(readableBytes);]