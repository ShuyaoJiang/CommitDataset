[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketPipelineSink.java, +            final NioClientSocketChannel channel, final ChannelFuture cf,, +                channel.worker.register(channel, cf);, +                channel.getCloseFuture().addListener(new ChannelFutureListener() {, +                    public void operationComplete(ChannelFuture f), +                            throws Exception {, +                        cf.setFailure(new ClosedChannelException());, +                    }, +                });, +                cf.addListener(ChannelFutureListener.CLOSE_ON_FAILURE);, +                channel.connectFuture = cf;, +            cf.setFailure(t);, +                    NioWorker.close(ch, succeededFuture(ch));, +                NioWorker.close(ch, succeededFuture(ch));, +            NioClientSocketChannel ch = (NioClientSocketChannel) k.attachment();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketPipelineSink.java, +            final NioClientSocketChannel channel, final ChannelFuture cf,, +                channel.worker.register(channel, cf);, +                channel.getCloseFuture().addListener(new ChannelFutureListener() {, +                    public void operationComplete(ChannelFuture f), +                            throws Exception {, +                        cf.setFailure(new ClosedChannelException());, +                    }, +                });, +                cf.addListener(ChannelFutureListener.CLOSE_ON_FAILURE);, +                channel.connectFuture = cf;, +            cf.setFailure(t);, +                    NioWorker.close(ch, succeededFuture(ch));, +                NioWorker.close(ch, succeededFuture(ch));, +            NioClientSocketChannel ch = (NioClientSocketChannel) k.attachment();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramWorker.java, +            worker.cancelledKeys ++;, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketPipelineSink.java, +            final NioClientSocketChannel channel, final ChannelFuture cf,, +                channel.worker.register(channel, cf);, +                channel.getCloseFuture().addListener(new ChannelFutureListener() {, +                    public void operationComplete(ChannelFuture f), +                            throws Exception {, +                        cf.setFailure(new ClosedChannelException());, +                    }, +                });, +                cf.addListener(ChannelFutureListener.CLOSE_ON_FAILURE);, +                channel.connectFuture = cf;, +            cf.setFailure(t);, +                    NioWorker.close(ch, succeededFuture(ch));, +                NioWorker.close(ch, succeededFuture(ch));, +            NioClientSocketChannel ch = (NioClientSocketChannel) k.attachment();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioDatagramWorker.java, +            worker.cancelledKeys ++;, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioWorker.java, +            worker.cancelledKeys ++;]