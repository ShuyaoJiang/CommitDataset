[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioSocketChannel.java, +    final Runnable writeTask = new WriteTask();, +, +    private class WriteTask implements Runnable {, +, +        WriteTask() {, +            super();, +        }, +, +        public void run() {, +            NioWorker.write(NioSocketChannel.this, false);, +        }, +    }, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioSocketChannel.java, +    final Runnable writeTask = new WriteTask();, +, +    private class WriteTask implements Runnable {, +, +        WriteTask() {, +            super();, +        }, +, +        public void run() {, +            NioWorker.write(NioSocketChannel.this, false);, +        }, +    }, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioWorker.java, +import java.util.Queue;, +import java.util.concurrent.ConcurrentLinkedQueue;, +    final Queue<Runnable> taskQueue = new ConcurrentLinkedQueue<Runnable>();, +, +                processTaskQueue();, +, +    private void processTaskQueue() {, +        for (;;) {, +            final Runnable task = taskQueue.poll();, +            if (task == null) {, +                break;, +            }, +, +            task.run();, +        }, +    }, +, +    // FIXME I/O 스레드냐 아니냐에 따라서 task queue 에 안넣거나 넣거나 IoSocketHandler, IoSocketDispatcher, +    static void write(final NioSocketChannel channel, boolean mightNeedWakeup) {, +        if (mightNeedWakeup) {, +            NioWorker worker = channel.getWorker();, +            if (worker != null && Thread.currentThread() != worker.thread) {, +                worker.taskQueue.offer(channel.writeTask);, +                if (worker.wakenUp.compareAndSet(false, true)) {, +                    worker.selector.wakeup();, +                }, +                return;, +            }, +        }, +]