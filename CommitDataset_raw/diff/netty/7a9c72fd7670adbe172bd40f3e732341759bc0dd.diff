[+++ b/src/main/java/org/jboss/netty/channel/Channels.java, +    public static void fireChannelInterestChanged(Channel channel) {, +                        ChannelState.INTEREST_OPS, Channel.OP_READ));, +    }, +, +    /**, +     * @deprecated Use {@link #fireChannelInterestChanged(Channel)} instead., +     *, +     * Sends a {@code "channelInterestChanged"} event to the first, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} of, +     * the specified {@link Channel}., +     *, +     * @param interestOps the new interestOps, +     */, +    @Deprecated, +    public static void fireChannelInterestChanged(, +            Channel channel, @SuppressWarnings("unused") int interestOps) {, +        fireChannelInterestChanged(channel);, +            ChannelHandlerContext ctx, Channel channel) {, +                        ChannelState.INTEREST_OPS, Channel.OP_READ));, +    }, +, +    /**, +     * @deprecated Use {@link #fireChannelInterestChanged(ChannelHandlerContext, Channel)} instead., +     *, +     * Sends a {@code "channelInterestChanged"} event to the next, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} where, +     * the specified {@link ChannelHandlerContext} belongs., +     *, +     * @param interestOps the new interestOps, +     */, +    @Deprecated, +    public static void fireChannelInterestChanged(, +            ChannelHandlerContext ctx, Channel channel,, +            @SuppressWarnings("unused") int interestOps) {, +, +        fireChannelInterestChanged(ctx, channel);, +++ b/src/main/java/org/jboss/netty/channel/Channels.java, +    public static void fireChannelInterestChanged(Channel channel) {, +                        ChannelState.INTEREST_OPS, Channel.OP_READ));, +    }, +, +    /**, +     * @deprecated Use {@link #fireChannelInterestChanged(Channel)} instead., +     *, +     * Sends a {@code "channelInterestChanged"} event to the first, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} of, +     * the specified {@link Channel}., +     *, +     * @param interestOps the new interestOps, +     */, +    @Deprecated, +    public static void fireChannelInterestChanged(, +            Channel channel, @SuppressWarnings("unused") int interestOps) {, +        fireChannelInterestChanged(channel);, +            ChannelHandlerContext ctx, Channel channel) {, +                        ChannelState.INTEREST_OPS, Channel.OP_READ));, +    }, +, +    /**, +     * @deprecated Use {@link #fireChannelInterestChanged(ChannelHandlerContext, Channel)} instead., +     *, +     * Sends a {@code "channelInterestChanged"} event to the next, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} where, +     * the specified {@link ChannelHandlerContext} belongs., +     *, +     * @param interestOps the new interestOps, +     */, +    @Deprecated, +    public static void fireChannelInterestChanged(, +            ChannelHandlerContext ctx, Channel channel,, +            @SuppressWarnings("unused") int interestOps) {, +, +        fireChannelInterestChanged(ctx, channel);, +++ b/src/main/java/org/jboss/netty/channel/DefaultChannelStateEvent.java, +            buf.append("INTEREST_CHANGED");, +            buf.append(getState().name());, +            buf.append(": ");, +++ b/src/main/java/org/jboss/netty/channel/Channels.java, +    public static void fireChannelInterestChanged(Channel channel) {, +                        ChannelState.INTEREST_OPS, Channel.OP_READ));, +    }, +, +    /**, +     * @deprecated Use {@link #fireChannelInterestChanged(Channel)} instead., +     *, +     * Sends a {@code "channelInterestChanged"} event to the first, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} of, +     * the specified {@link Channel}., +     *, +     * @param interestOps the new interestOps, +     */, +    @Deprecated, +    public static void fireChannelInterestChanged(, +            Channel channel, @SuppressWarnings("unused") int interestOps) {, +        fireChannelInterestChanged(channel);, +            ChannelHandlerContext ctx, Channel channel) {, +                        ChannelState.INTEREST_OPS, Channel.OP_READ));, +    }, +]