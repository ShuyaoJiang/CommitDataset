[+++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    void consolidate();, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    void consolidate();, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +        components.subList(cIndex, cIndex + numComponents).clear();, +    public void consolidate() {, +        final int numComponents = numComponents();, +        if (numComponents <= 1) {, +            return;, +        }, +, +        final Component last = components.get(numComponents - 1);, +        final int capacity = last.endOffset;, +        final ByteBuf consolidated = last.buf.unsafe().newBuffer(capacity);, +, +        for (int i = 0; i < numComponents; i ++) {, +            ByteBuf b = components.get(i).buf;, +            consolidated.writeBytes(b);, +            b.unsafe().release();, +        }, +, +        components.clear();, +        components.add(new Component(consolidated));, +        updateComponentOffsets(0);, +    }, +, +    @Override, +        components.subList(cIndex + 1, endCIndex).clear();, +            components.get(i).buf.unsafe().release();, +        components.subList(0, firstComponentId).clear();, +            components.get(i).buf.unsafe().release();, +        components.subList(0, firstComponentId).clear();, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    void consolidate();, +++ b/buffer/src/main/java/io/netty/buffer/DefaultCompositeByteBuf.java, +        components.subList(cIndex, cIndex + numComponents).clear();, +    public void consolidate() {, +        final int numComponents = numComponents();, +        if (numComponents <= 1) {, +            return;, +        }, +, +        final Component last = components.get(numComponents - 1);, +        final int capacity = last.endOffset;, +        final ByteBuf consolidated = last.buf.unsafe().newBuffer(capacity);, +, +        for (int i = 0; i < numComponents; i ++) {, +            ByteBuf b = components.get(i).buf;, +            consolidated.writeBytes(b);, +            b.unsafe().release();, +        }, +, +        components.clear();, +        components.add(new Component(consolidated));, +        updateComponentOffsets(0);, +    }, +, +    @Override, +        components.subList(cIndex + 1, endCIndex).clear();, +            components.get(i).buf.unsafe().release();, +        components.subList(0, firstComponentId).clear();, +            components.get(i).buf.unsafe().release();, +        components.subList(0, firstComponentId).clear();, +++ b/buffer/src/test/java/io/netty/buffer/AbstractCompositeChannelBufferTest.java, +    public void testAutoConsolidation() {, +        CompositeByteBuf buf = compositeBuffer(2);, +, +        buf.addComponent(wrappedBuffer(new byte[] { 1 }));, +        assertEquals(1, buf.numComponents());, +, +        buf.addComponent(wrappedBuffer(new byte[] { 2, 3 }));, +        assertEquals(2, buf.numComponents());, +, +        buf.addComponent(wrappedBuffer(new byte[] { 4, 5, 6 }));, +, +        assertEquals(1, buf.numComponents());, +        assertTrue(buf.hasArray());, +        assertNotNull(buf.array());, +        assertEquals(0, buf.arrayOffset());, +    }, +, +    @Test, +    public void testFullConsolidation() {, +        CompositeByteBuf buf = compositeBuffer(Integer.MAX_VALUE);, +        buf.addComponent(wrappedBuffer(new byte[] { 1 }));, +        buf.addComponent(wrappedBuffer(new byte[] { 2, 3 }));, +        buf.addComponent(wrappedBuffer(new byte[] { 4, 5, 6 }));, +        buf.consolidate();, +, +        assertEquals(1, buf.numComponents());, +        assertTrue(buf.hasArray());, +        assertNotNull(buf.array());, +        assertEquals(0, buf.arrayOffset());, +    }, +, +    @Test, +    public void testRangedConsolidation() {, +        CompositeByteBuf buf = compositeBuffer(Integer.MAX_VALUE);, +        buf.addComponent(wrappedBuffer(new byte[] { 1 }));]