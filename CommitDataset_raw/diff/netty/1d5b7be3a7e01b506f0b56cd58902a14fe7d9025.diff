[+++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +        int nextIndex = cIndex > 0 ? components[cIndex - 1].endOffset : 0;, +            lastAccessed = null;, +        return toComponentIndex0(offset);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +        int nextIndex = cIndex > 0 ? components[cIndex - 1].endOffset : 0;, +            lastAccessed = null;, +        return toComponentIndex0(offset);, +++ b/buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java, +    public void testToComponentIndex() {, +        CompositeByteBuf buf = (CompositeByteBuf) wrappedBuffer(new byte[]{1, 2, 3, 4, 5},, +                new byte[]{4, 5, 6, 7, 8, 9, 26}, new byte[]{10, 9, 8, 7, 6, 5, 33});, +, +        // spot checks, +        assertEquals(0, buf.toComponentIndex(4));, +        assertEquals(1, buf.toComponentIndex(5));, +        assertEquals(2, buf.toComponentIndex(15));, +, +        //Loop through each byte, +, +        byte index = 0;, +, +        while (index < buf.capacity()) {, +            int cindex = buf.toComponentIndex(index++);, +            assertTrue(cindex >= 0 && cindex < buf.numComponents());, +        }, +, +        buf.release();, +    }, +, +    @Test, +    public void testToByteIndex() {, +        CompositeByteBuf buf = (CompositeByteBuf) wrappedBuffer(new byte[]{1, 2, 3, 4, 5},, +                new byte[]{4, 5, 6, 7, 8, 9, 26}, new byte[]{10, 9, 8, 7, 6, 5, 33});, +, +        // spot checks, +        assertEquals(0, buf.toByteIndex(0));, +        assertEquals(5, buf.toByteIndex(1));, +        assertEquals(12, buf.toByteIndex(2));, +, +        buf.release();, +    }, +, +    @Test, +    public void testRemoveComponents() {, +        CompositeByteBuf buf = compositeBuffer();, +        for (int i = 0; i < 10; i++) {, +            buf.addComponent(wrappedBuffer(new byte[]{1, 2}));, +        }, +        assertEquals(10, buf.numComponents());, +        assertEquals(20, buf.capacity());, +        buf.removeComponents(4, 3);, +        assertEquals(7, buf.numComponents());, +        assertEquals(14, buf.capacity());, +        buf.release();, +    }, +, +    @Test]