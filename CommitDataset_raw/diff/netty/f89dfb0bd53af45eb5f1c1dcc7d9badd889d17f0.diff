[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/Cookie.java, +    @Override, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/Cookie.java, +    @Override, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/Cookie.java, +    @Override, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/EmptyHttpHeaders.java, +    public static final EmptyHttpHeaders INSTANCE = instance();, +, +    /**, +     * @deprecated Use {@link EmptyHttpHeaders#INSTANCE}, +     * <p>, +     * This is needed to break a cyclic static initialization loop between {@link HttpHeaders} and, +     * {@link EmptyHttpHeaders}., +     * @see HttpUtil#EMPTY_HEADERS, +     */, +    @Deprecated, +    static EmptyHttpHeaders instance() {, +        return HttpUtil.EMPTY_HEADERS;, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/Cookie.java, +    @Override, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/EmptyHttpHeaders.java, +    public static final EmptyHttpHeaders INSTANCE = instance();, +, +    /**, +     * @deprecated Use {@link EmptyHttpHeaders#INSTANCE}, +     * <p>, +     * This is needed to break a cyclic static initialization loop between {@link HttpHeaders} and, +     * {@link EmptyHttpHeaders}., +     * @see HttpUtil#EMPTY_HEADERS, +     */, +    @Deprecated, +    static EmptyHttpHeaders instance() {, +        return HttpUtil.EMPTY_HEADERS;, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                final int code = res.status().code();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/Cookie.java, +    @Override, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/EmptyHttpHeaders.java, +    public static final EmptyHttpHeaders INSTANCE = instance();, +, +    /**, +     * @deprecated Use {@link EmptyHttpHeaders#INSTANCE}, +     * <p>, +     * This is needed to break a cyclic static initialization loop between {@link HttpHeaders} and, +     * {@link EmptyHttpHeaders}., +     * @see HttpUtil#EMPTY_HEADERS, +     */, +    @Deprecated, +    static EmptyHttpHeaders instance() {, +        return HttpUtil.EMPTY_HEADERS;, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                final int code = res.status().code();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java, +     * <p>, +     * The instance is instantiated here to break the cyclic static initialization between {@link EmptyHttpHeaders} and, +     * {@link HttpHeaders}. The issue is that if someone accesses {@link EmptyHttpHeaders#INSTANCE} before, +     * {@link HttpHeaders#EMPTY_HEADERS} then {@link HttpHeaders#EMPTY_HEADERS} will be {@code null}., +    public static final HttpHeaders EMPTY_HEADERS = EmptyHttpHeaders.instance();, +     * <p>, +     * @see #get(CharSequence), +     * @see #getAsString(CharSequence), +     * @deprecated Use {@link #getAll(CharSequence)}, +     * @see #getAllAsString(CharSequence), +    @Override, +     * @deprecated Use {@link #contains(CharSequence, CharSequence, boolean)}, +    @Deprecated, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/Cookie.java, +    @Override, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/EmptyHttpHeaders.java, +    public static final EmptyHttpHeaders INSTANCE = instance();, +, +    /**, +     * @deprecated Use {@link EmptyHttpHeaders#INSTANCE}, +     * <p>, +     * This is needed to break a cyclic static initialization loop between {@link HttpHeaders} and, +     * {@link EmptyHttpHeaders}., +     * @see HttpUtil#EMPTY_HEADERS, +     */, +    @Deprecated, +    static EmptyHttpHeaders instance() {, +        return HttpUtil.EMPTY_HEADERS;, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                final int code = res.status().code();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java]