[+++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +                write(ctx, succeededFuture(ctx.channel()), CONTINUE.duplicate());, +                m.setContent(ChannelBuffers.dynamicBuffer(e.channel().getConfig().getBufferFactory()));, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +                write(ctx, succeededFuture(ctx.channel()), CONTINUE.duplicate());, +                m.setContent(ChannelBuffers.dynamicBuffer(e.channel().getConfig().getBufferFactory()));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +                write(ctx, succeededFuture(ctx.channel()), CONTINUE.duplicate());, +                m.setContent(ChannelBuffers.dynamicBuffer(e.channel().getConfig().getBufferFactory()));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                                ctx, Channels.succeededFuture(e.channel()), new DefaultHttpChunk(lastProduct), e.getRemoteAddress());, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +                write(ctx, succeededFuture(ctx.channel()), CONTINUE.duplicate());, +                m.setContent(ChannelBuffers.dynamicBuffer(e.channel().getConfig().getBufferFactory()));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                                ctx, Channels.succeededFuture(e.channel()), new DefaultHttpChunk(lastProduct), e.getRemoteAddress());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket00FrameDecoder.java, +    private final int maxFrameSize;, +    public WebSocket00FrameDecoder(int maxFrameSize) {, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +                write(ctx, succeededFuture(ctx.channel()), CONTINUE.duplicate());, +                m.setContent(ChannelBuffers.dynamicBuffer(e.channel().getConfig().getBufferFactory()));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                                ctx, Channels.succeededFuture(e.channel()), new DefaultHttpChunk(lastProduct), e.getRemoteAddress());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket00FrameDecoder.java, +    private final int maxFrameSize;, +    public WebSocket00FrameDecoder(int maxFrameSize) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder.java, +     * Constructor, +            int willHaveReadByteCount = framePayloadBytesRead + rbytes;, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +                write(ctx, succeededFuture(ctx.channel()), CONTINUE.duplicate());, +                m.setContent(ChannelBuffers.dynamicBuffer(e.channel().getConfig().getBufferFactory()));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                                ctx, Channels.succeededFuture(e.channel()), new DefaultHttpChunk(lastProduct), e.getRemoteAddress());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket00FrameDecoder.java, +    private final int maxFrameSize;, +    public WebSocket00FrameDecoder(int maxFrameSize) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder.java, +     * Constructor, +            int willHaveReadByteCount = framePayloadBytesRead + rbytes;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket13FrameDecoder.java, +     * Constructor, +        super(maskedPayload, allowExtensions);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +                write(ctx, succeededFuture(ctx.channel()), CONTINUE.duplicate());, +                m.setContent(ChannelBuffers.dynamicBuffer(e.channel().getConfig().getBufferFactory()));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java, +                                ctx, Channels.succeededFuture(e.channel()), new DefaultHttpChunk(lastProduct), e.getRemoteAddress());]