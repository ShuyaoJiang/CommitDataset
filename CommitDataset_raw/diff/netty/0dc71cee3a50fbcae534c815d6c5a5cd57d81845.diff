[+++ b/common/src/main/java/io/netty/util/concurrent/DefaultPromise.java, +        if (result instanceof CauseHolder || result == SUCCESS || result == UNCANCELLABLE) {, +++ b/common/src/main/java/io/netty/util/concurrent/DefaultPromise.java, +        if (result instanceof CauseHolder || result == SUCCESS || result == UNCANCELLABLE) {, +++ b/common/src/test/java/io/netty/util/concurrent/DefaultPromiseTest.java, +import static org.junit.Assert.*;, +    @Test, +    public void setUncancellableGetNow() {, +        final Promise<String> promise = new DefaultPromise<String>(ImmediateEventExecutor.INSTANCE);, +        assertNull(promise.getNow());, +        assertTrue(promise.setUncancellable());, +        assertNull(promise.getNow());, +        assertFalse(promise.isDone());, +        assertFalse(promise.isSuccess());, +, +        promise.setSuccess("success");, +, +        assertTrue(promise.isDone());, +        assertTrue(promise.isSuccess());, +        assertEquals("success", promise.getNow());, +    }, +]