[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +    /**, +     * Returns the raw path string of the URI., +     */, +    public String rawPath() {, +        return uri.substring(0, pathEndIdx());, +    }, +, +    /**, +     * Returns raw query string of the URI., +     */, +    public String rawQuery() {, +        int start = pathEndIdx() + 1;, +        return start < uri.length() ? uri.substring(start) : EMPTY_STRING;, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java, +    /**, +     * Returns the raw path string of the URI., +     */, +    public String rawPath() {, +        return uri.substring(0, pathEndIdx());, +    }, +, +    /**, +     * Returns raw query string of the URI., +     */, +    public String rawQuery() {, +        int start = pathEndIdx() + 1;, +        return start < uri.length() ? uri.substring(start) : EMPTY_STRING;, +    }, +, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/QueryStringDecoderTest.java, +        Assert.assertEquals("/foo", decoder.rawPath());, +        Assert.assertEquals("param1=value1&param2=value2&param3=value3", decoder.rawQuery());, +        Assert.assertEquals("/", decoder.rawPath());, +        Assert.assertEquals("param1=value1&param2=value2&param3=value3", decoder.rawQuery());, +, +        Assert.assertEquals("", decoder.rawPath());, +        Assert.assertEquals("param1=value1&param2=value2&param3=value3", decoder.rawQuery());, +, +        Assert.assertEquals("/images;num=10", decoder.rawPath());, +        Assert.assertEquals("query=name;value=123", decoder.rawQuery());, +, +, +    @Test, +    public void testEmptyStrings() {, +        QueryStringDecoder pathSlash = new QueryStringDecoder("path/");, +        Assert.assertEquals("path/", pathSlash.rawPath());, +        Assert.assertEquals("", pathSlash.rawQuery());, +        QueryStringDecoder pathQuestion = new QueryStringDecoder("path?");, +        Assert.assertEquals("path", pathQuestion.rawPath());, +        Assert.assertEquals("", pathQuestion.rawQuery());, +        QueryStringDecoder empty = new QueryStringDecoder("");, +        Assert.assertEquals("", empty.rawPath());, +        Assert.assertEquals("", empty.rawQuery());, +    }]