[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyPingFrame.java, +    private int id;, +     * @param id the unique ID of this frame, +    public DefaultSpdyPingFrame(int id) {, +        setId(id);, +    public int getId() {, +        return id;, +    public void setId(int id) {, +        this.id = id;, +        buf.append(id);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyPingFrame.java, +    private int id;, +     * @param id the unique ID of this frame, +    public DefaultSpdyPingFrame(int id) {, +        setId(id);, +    public int getId() {, +        return id;, +    public void setId(int id) {, +        this.id = id;, +        buf.append(id);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +            out.writeInt(spdyPingFrame.getId());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyPingFrame.java, +    private int id;, +     * @param id the unique ID of this frame, +    public DefaultSpdyPingFrame(int id) {, +        setId(id);, +    public int getId() {, +        return id;, +    public void setId(int id) {, +        this.id = id;, +        buf.append(id);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +            out.writeInt(spdyPingFrame.getId());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyPingFrame.java, +    int getId();, +    void setId(int id);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyPingFrame.java, +    private int id;, +     * @param id the unique ID of this frame, +    public DefaultSpdyPingFrame(int id) {, +        setId(id);, +    public int getId() {, +        return id;, +    public void setId(int id) {, +        this.id = id;, +        buf.append(id);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +            out.writeInt(spdyPingFrame.getId());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyPingFrame.java, +    int getId();, +    void setId(int id);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +            if (isRemoteInitiatedID(spdyPingFrame.getId())) {, +            if (isRemoteInitiatedID(spdyPingFrame.getId())) {, +                            "invalid PING ID: " + spdyPingFrame.getId()));, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyPingFrame.java, +    private int id;, +     * @param id the unique ID of this frame, +    public DefaultSpdyPingFrame(int id) {, +        setId(id);, +    public int getId() {, +        return id;, +    public void setId(int id) {, +        this.id = id;, +        buf.append(id);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +            out.writeInt(spdyPingFrame.getId());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyPingFrame.java, +    int getId();, +    void setId(int id);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdySessionHandler.java, +            if (isRemoteInitiatedID(spdyPingFrame.getId())) {, +            if (isRemoteInitiatedID(spdyPingFrame.getId())) {, +                            "invalid PING ID: " + spdyPingFrame.getId()));, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdySessionHandlerTest.java, +        Assert.assertTrue(spdyPingFrame.getId() == ID);, +        assertPing(sessionHandler.readOutbound(), localPingFrame.getId());]