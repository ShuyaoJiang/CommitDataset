[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/example/src/main/java/io/netty/example/http/snoop/HttpSnoopClient.java, +/*, + * Copyright 2011 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.example.http.snoop;, +, +import java.net.InetSocketAddress;, +import java.net.URI;, +import java.util.concurrent.Executors;, +, +import io.netty.bootstrap.ClientBootstrap;, +import io.netty.channel.Channel;, +import io.netty.channel.ChannelFuture;, +import io.netty.channel.socket.nio.NioClientSocketChannelFactory;, +import io.netty.handler.codec.http.CookieEncoder;, +import io.netty.handler.codec.http.DefaultHttpRequest;, +import io.netty.handler.codec.http.HttpHeaders;, +import io.netty.handler.codec.http.HttpMethod;, +import io.netty.handler.codec.http.HttpRequest;, +import io.netty.handler.codec.http.HttpVersion;, +, +/**, + * A simple HTTP client that prints out the content of the HTTP response to, + * {@link System#out} to test {@link HttpSnoopServer}., + */, +public class HttpSnoopClient {, +, +    private final URI uri;, +, +    public HttpSnoopClient(URI uri) {, +        this.uri = uri;, +    }, +, +    public void run() {, +        String scheme = uri.getScheme() == null? "http" : uri.getScheme();, +        String host = uri.getHost() == null? "localhost" : uri.getHost();, +        int port = uri.getPort();, +        if (port == -1) {, +            if (scheme.equalsIgnoreCase("http")) {, +                port = 80;, +            } else if (scheme.equalsIgnoreCase("https")) {, +                port = 443;, +            }, +        }, +, +        if (!scheme.equalsIgnoreCase("http") && !scheme.equalsIgnoreCase("https")) {, +            System.err.println("Only HTTP(S) is supported.");, +            return;, +        }, +, +        boolean ssl = scheme.equalsIgnoreCase("https");, +, +        // Configure the client., +        ClientBootstrap bootstrap = new ClientBootstrap(, +                new NioClientSocketChannelFactory(, +                        Executors.newCachedThreadPool(),, +                        Executors.newCachedThreadPool()));, +, +        // Set up the event pipeline factory., +        bootstrap.setPipelineFactory(new HttpSnoopClientPipelineFactory(ssl));, +]