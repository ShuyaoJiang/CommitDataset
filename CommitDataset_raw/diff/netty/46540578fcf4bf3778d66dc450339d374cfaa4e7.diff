[+++ b/codec/src/main/java/io/netty/handler/codec/OutputMessageBuf.java, +    private int byteBufCnt;, +                byteBufCnt ++;, +                byteBufCnt --;, +            byteBufCnt --;, +        byteBufCnt = 0;, +        final int size = size();, +        if (size == 0) {, +            return false;, +, +        final int byteBufCnt = this.byteBufCnt;, +        if (byteBufCnt == 0 || ctx.nextInboundBufferType() != BufType.BYTE) {, +, +        final ByteBuf nextByteBuf = ctx.nextInboundByteBuffer();, +        if (byteBufCnt == size) {, +            // Contains only ByteBufs, +            for (Object o = poll();;) {, +                nextByteBuf.writeBytes((ByteBuf) o);, +                if ((o = poll()) == null) {, +                    break;, +                }, +            }, +        } else {, +            // Contains both ByteBufs and non-ByteBufs (0 < byteBufCnt < size()), +            final MessageBuf<Object> nextMsgBuf = ctx.nextInboundMessageBuffer();, +            for (Object o = poll();;) {, +                if (o instanceof ByteBuf) {, +                    nextByteBuf.writeBytes((ByteBuf) o);, +                } else {, +                    nextMsgBuf.add(o);, +                }, +, +                if ((o = poll()) == null) {, +                    break;, +                }, +            }, +        return true;, +    }, +, +        final int size = size();, +        if (size == 0) {, +            return false;, +, +        final int byteBufCnt = this.byteBufCnt;, +        if (byteBufCnt == 0 || ctx.nextOutboundBufferType() != BufType.BYTE) {, +, +        final ByteBuf nextByteBuf = ctx.nextOutboundByteBuffer();, +        if (byteBufCnt == size) {, +            // Contains only ByteBufs, +            for (Object o = poll();;) {, +                nextByteBuf.writeBytes((ByteBuf) o);, +                if ((o = poll()) == null) {, +                    break;, +                }, +            }, +        } else {, +            // Contains both ByteBufs and non-ByteBufs (0 < byteBufCnt < size()), +            final MessageBuf<Object> nextMsgBuf = ctx.nextOutboundMessageBuffer();, +            for (Object o = poll();;) {, +                if (o instanceof ByteBuf) {, +                    nextByteBuf.writeBytes((ByteBuf) o);, +                } else {, +                    nextMsgBuf.add(o);, +                }, +, +                if ((o = poll()) == null) {, +                    break;, +                }, +            }, +        }, +, +        return true;]