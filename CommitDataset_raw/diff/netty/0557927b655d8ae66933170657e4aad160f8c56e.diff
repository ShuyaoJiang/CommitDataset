[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfigBuilder.java, +     * with a 'null' value for the the CORS response header 'Access-Control-Allow-Origin'., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfigBuilder.java, +     * with a 'null' value for the the CORS response header 'Access-Control-Allow-Origin'., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java, +    private static final String NULL_ORIGIN = "null";, +            if (NULL_ORIGIN.equals(origin) && config.isNullOriginAllowed()) {, +                setNullOrigin(response);, +    private static void setNullOrigin(final HttpResponse response) {, +        setOrigin(response, NULL_ORIGIN);, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfigBuilder.java, +     * with a 'null' value for the the CORS response header 'Access-Control-Allow-Origin'., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java, +    private static final String NULL_ORIGIN = "null";, +            if (NULL_ORIGIN.equals(origin) && config.isNullOriginAllowed()) {, +                setNullOrigin(response);, +    private static void setNullOrigin(final HttpResponse response) {, +        setOrigin(response, NULL_ORIGIN);, +    }, +, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/cors/CorsHandlerTest.java, +    public void simpleRequestWithNullOrigin() {, +        final HttpResponse response = simpleRequest(forOrigin("http://test.com").allowNullOrigin(), +                .allowCredentials(), +                .build(), "null");, +        assertThat(response.headers().get(ACCESS_CONTROL_ALLOW_ORIGIN), is("null"));, +        assertThat(response.headers().get(ACCESS_CONTROL_ALLOW_CREDENTIALS), is(equalTo("true")));, +    }, +, +    @Test, +        assertThat(response.headers().get(ACCESS_CONTROL_ALLOW_ORIGIN), is(equalTo("null")));, +        assertThat(response.headers().get(ACCESS_CONTROL_ALLOW_CREDENTIALS), is(equalTo("true")));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfigBuilder.java, +     * with a 'null' value for the the CORS response header 'Access-Control-Allow-Origin'., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java, +    private static final String NULL_ORIGIN = "null";, +            if (NULL_ORIGIN.equals(origin) && config.isNullOriginAllowed()) {, +                setNullOrigin(response);, +    private static void setNullOrigin(final HttpResponse response) {, +        setOrigin(response, NULL_ORIGIN);, +    }, +, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/cors/CorsHandlerTest.java, +    public void simpleRequestWithNullOrigin() {, +        final HttpResponse response = simpleRequest(forOrigin("http://test.com").allowNullOrigin(), +                .allowCredentials(), +                .build(), "null");, +        assertThat(response.headers().get(ACCESS_CONTROL_ALLOW_ORIGIN), is("null"));, +        assertThat(response.headers().get(ACCESS_CONTROL_ALLOW_CREDENTIALS), is(equalTo("true")));, +    }, +, +    @Test, +        assertThat(response.headers().get(ACCESS_CONTROL_ALLOW_ORIGIN), is(equalTo("null")));, +        assertThat(response.headers().get(ACCESS_CONTROL_ALLOW_CREDENTIALS), is(equalTo("true")));, +++ b/example/src/main/java/io/netty/example/http/cors/HttpCorsServerInitializer.java, +        CorsConfig corsConfig = CorsConfigBuilder.forAnyOrigin().allowNullOrigin().allowCredentials().build();]