[+++ b/transport/src/main/java/io/netty/channel/ChannelOutboundHandlerAdapter.java, +    /**, +     * Calls {@link ChannelHandlerContext#write(MessageList, ChannelPromise)} to forward, +     * to the next {@link ChannelOutboundHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +++ b/transport/src/main/java/io/netty/channel/ChannelOutboundHandlerAdapter.java, +    /**, +     * Calls {@link ChannelHandlerContext#write(MessageList, ChannelPromise)} to forward, +     * to the next {@link ChannelOutboundHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +++ b/transport/src/main/java/io/netty/channel/ChannelOutboundInvoker.java, +     * {@link IncompleteFlushException}., +     * {@link ChannelInboundHandler#messageReceived(ChannelHandlerContext, MessageList)} event if data was, +     * {@link IncompleteFlushException}., +++ b/transport/src/main/java/io/netty/channel/ChannelOutboundHandlerAdapter.java, +    /**, +     * Calls {@link ChannelHandlerContext#write(MessageList, ChannelPromise)} to forward, +     * to the next {@link ChannelOutboundHandler} in the {@link ChannelPipeline}., +     *, +     * Sub-classes may override this method to change behavior., +     */, +++ b/transport/src/main/java/io/netty/channel/ChannelOutboundInvoker.java, +     * {@link IncompleteFlushException}., +     * {@link ChannelInboundHandler#messageReceived(ChannelHandlerContext, MessageList)} event if data was, +     * {@link IncompleteFlushException}., +++ b/transport/src/main/java/io/netty/channel/MessageList.java, +/**, + * Datastructure which holds messages., + *, + * You should call {@link #recycle()} once you are done with using it., + * @param <T>, + */]