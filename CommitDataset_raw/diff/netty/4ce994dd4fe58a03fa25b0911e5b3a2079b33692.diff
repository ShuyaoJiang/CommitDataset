[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +import java.text.ParseException;, +    public HttpHeaders addInt(CharSequence name, int value) {, +        headers.addInt(name, value);, +        return this;, +    }, +, +    @Override, +    public HttpHeaders setInt(CharSequence name, int value) {, +        headers.setInt(name, value);, +        return this;, +    }, +, +    @Override, +    public Integer getInt(CharSequence name) {, +        return headers.getInt(name);, +    }, +, +    @Override, +    public int getInt(CharSequence name, int defaultValue) {, +        return headers.getInt(name, defaultValue);, +    }, +, +    @Override, +    public Date getDate(CharSequence name) {, +        return getDate(name, null);, +    }, +, +    @Override, +    public Date getDate(CharSequence name, Date defaultValue) {, +        String value = get(name);, +        if (value == null) {, +            return defaultValue;, +        }, +, +        try {, +            return HttpHeaderDateFormat.get().parse(value);, +        } catch (ParseException ignored) {, +            return defaultValue;, +        }, +    }, +, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +import java.text.ParseException;, +    public HttpHeaders addInt(CharSequence name, int value) {, +        headers.addInt(name, value);, +        return this;, +    }, +, +    @Override, +    public HttpHeaders setInt(CharSequence name, int value) {, +        headers.setInt(name, value);, +        return this;, +    }, +, +    @Override, +    public Integer getInt(CharSequence name) {, +        return headers.getInt(name);, +    }, +, +    @Override, +    public int getInt(CharSequence name, int defaultValue) {, +        return headers.getInt(name, defaultValue);, +    }, +, +    @Override, +    public Date getDate(CharSequence name) {, +        return getDate(name, null);, +    }, +, +    @Override, +    public Date getDate(CharSequence name, Date defaultValue) {, +        String value = get(name);, +        if (value == null) {, +            return defaultValue;, +        }, +, +        try {, +            return HttpHeaderDateFormat.get().parse(value);, +        } catch (ParseException ignored) {, +            return defaultValue;, +        }, +    }, +, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpMessage.java, +        buf.append(HttpHeaderUtil.isKeepAlive(this));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +import java.text.ParseException;, +    public HttpHeaders addInt(CharSequence name, int value) {, +        headers.addInt(name, value);, +        return this;, +    }, +, +    @Override, +    public HttpHeaders setInt(CharSequence name, int value) {, +        headers.setInt(name, value);, +        return this;, +    }]