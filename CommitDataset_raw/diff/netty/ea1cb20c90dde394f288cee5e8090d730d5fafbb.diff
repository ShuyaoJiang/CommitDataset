[+++ b/common/src/main/java/io/netty/util/NetUtil.java, +, +                        // a special case ::1:2:3:4:5:d.d.d.d allows 7 colons with an, +                        // IPv4 ending, otherwise 7 :'s is bad, +                        if ((numberOfColons != 6 && !doubleColon) ||, +                            (numberOfColons == 7 && (ipAddress.charAt(startOffset) != ':' ||, +                                ipAddress.charAt(1 + startOffset) != ':'))) {, +                            return false;, +                        }, +, +, +        final boolean mustBeZero = compressBegin + compressLength >= 14;, +        return currentIndex <= 12 && currentIndex >= 2 && (!mustBeZero || compressBegin < 12) &&, +                isValidIPv4MappedSeparators(bytes[currentIndex - 1], bytes[currentIndex - 2], mustBeZero) &&, +                PlatformDependent.isZero(bytes, 0, currentIndex - 3);, +++ b/common/src/main/java/io/netty/util/NetUtil.java, +, +                        // a special case ::1:2:3:4:5:d.d.d.d allows 7 colons with an, +                        // IPv4 ending, otherwise 7 :'s is bad, +                        if ((numberOfColons != 6 && !doubleColon) ||, +                            (numberOfColons == 7 && (ipAddress.charAt(startOffset) != ':' ||, +                                ipAddress.charAt(1 + startOffset) != ':'))) {, +                            return false;, +                        }, +, +, +        final boolean mustBeZero = compressBegin + compressLength >= 14;, +        return currentIndex <= 12 && currentIndex >= 2 && (!mustBeZero || compressBegin < 12) &&, +                isValidIPv4MappedSeparators(bytes[currentIndex - 1], bytes[currentIndex - 2], mustBeZero) &&, +                PlatformDependent.isZero(bytes, 0, currentIndex - 3);, +++ b/common/src/test/java/io/netty/util/NetUtilTest.java, +            "0::0:0:0:0:10.0.0.1",                       "00000000000000000000ffff0a000001",, +            "0:0::0:0:0:10.0.0.1",                       "00000000000000000000ffff0a000001",, +            "0:0:0::0:0:10.0.0.1",                       "00000000000000000000ffff0a000001",, +            "0:0:0:0::0:10.0.0.1",                       "00000000000000000000ffff0a000001",, +            // Invalid IPv4 mapped address - too many bytes (too many 0's), +            "::0:0:0:0:0:ffff:1.0.0.1", null,, +            // Invalid IPv4 mapped address - too many bytes (too many 0's), +            "0:0:0:0:0:0::1.0.0.1", null,, +            // Invalid IPv4 mapped address - too many bytes (too many 0's), +            "0:0:0:0:0:00000:1.0.0.1", null,, +            "0::0:0:0:0:1.2.3.4", "::ffff:1.2.3.4",, +            "0:0::0:0:0:1.2.3.4", "::ffff:1.2.3.4",, +            "0:0:0::0:0:1.2.3.4", "::ffff:1.2.3.4",, +            "0:0:0:0::0:1.2.3.4", "::ffff:1.2.3.4",, +            "0:0:0:0:0::1.2.3.4", "::ffff:1.2.3.4",, +            "0::0:0:0:1.2.3.4", "::ffff:1.2.3.4",, +            "0:0::0:0:1.2.3.4", "::ffff:1.2.3.4",, +            "0:0:0::0:1.2.3.4", "::ffff:1.2.3.4",, +            "0:0:0:0::1.2.3.4", "::ffff:1.2.3.4",, +            "0::0:0:0:1.2.3.4", "::ffff:1.2.3.4",, +            "0:0::0:0:1.2.3.4", "::ffff:1.2.3.4",, +            "0:0:0::0:1.2.3.4", "::ffff:1.2.3.4",, +            "0:0:0:0::1.2.3.4", "::ffff:1.2.3.4",, +            "0::0:0:1.2.3.4", "::ffff:1.2.3.4",, +            "0:0::0:1.2.3.4", "::ffff:1.2.3.4",, +            "0:0:0::1.2.3.4", "::ffff:1.2.3.4",, +            "0::0:1.2.3.4", "::ffff:1.2.3.4",, +            "0:0::1.2.3.4", "::ffff:1.2.3.4",]