[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java, +import io.netty.handler.codec.http2.Http2Connection.Endpoint;, +import static io.netty.handler.codec.http2.Http2CodecUtil.SMALLEST_MAX_CONCURRENT_STREAMS;, +import static java.lang.Integer.MAX_VALUE;, +import static java.lang.Math.min;, +                int value = (int) min(maxConcurrentStreams, MAX_VALUE);, +                connection.remote().maxStreams(value, calculateMaxStreams(value));, +                headerTable.maxHeaderTableSize((int) min(headerTableSize, MAX_VALUE));, +        /**, +         * Calculate the {@code maxStreams} paramter for the {@link Endpoint#maxStreams(int, int)} method based upon, +         * SETTINGS_MAX_CONCURRENT_STREAMS., +         * @param maxConcurrentStreams SETTINGS_MAX_CONCURRENT_STREAMS, +         * @return the {@code maxStreams} paramter for the {@link Endpoint#maxStreams(int, int)} method., +         */, +        @UnstableApi, +        protected int calculateMaxStreams(int maxConcurrentStreams) {, +            int maxStreams = maxConcurrentStreams + SMALLEST_MAX_CONCURRENT_STREAMS;, +            return maxStreams < 0 ? MAX_VALUE : maxStreams;, +        }, +, +            Endpoint<?> remote = connection.remote();]