[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +    /**, +     * Create a new instance., +     * <p>, +     * Header names will be validated., +     */, +        this(true);, +    }, +, +    /**, +     * Create a new instance., +     * @param validateHeaders {@code true} to validate headers. {@code false} to not validate headers., +     * @see #DefaultHttp2HeadersDecoder(boolean), +     */, +    public DefaultHttp2FrameReader(boolean validateHeaders) {, +        this(new DefaultHttp2HeadersDecoder(validateHeaders));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +    /**, +     * Create a new instance., +     * <p>, +     * Header names will be validated., +     */, +        this(true);, +    }, +, +    /**, +     * Create a new instance., +     * @param validateHeaders {@code true} to validate headers. {@code false} to not validate headers., +     * @see #DefaultHttp2HeadersDecoder(boolean), +     */, +    public DefaultHttp2FrameReader(boolean validateHeaders) {, +        this(new DefaultHttp2HeadersDecoder(validateHeaders));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Headers.java, +import io.netty.util.ByteProcessor;, +import io.netty.util.internal.PlatformDependent;, +    private static final ByteProcessor HTTP2_NAME_VALIDATOR_PROCESSOR = new ByteProcessor() {, +        @Override, +        public boolean process(byte value) throws Exception {, +            if (value >= 'A' && value <= 'Z') {, +                throw new IllegalArgumentException("name must be all lower case but found: " + (char) value);, +            }, +            return true;, +        }, +    };, +    private static final NameValidator<ByteString> HTTP2_NAME_VALIDATOR = new NameValidator<ByteString>() {, +        @Override, +        public void validateName(ByteString name) {, +            try {, +                name.forEachByte(HTTP2_NAME_VALIDATOR_PROCESSOR);, +            } catch (Exception e) {, +                PlatformDependent.throwException(e);, +            }, +        }, +    };, +    /**, +     * Create a new instance., +     * <p>, +     * Header names will be validated according to, +     * <a href="https://tools.ietf.org/html/rfc7540">rfc7540</a>., +     */, +        this(true);, +    }, +, +    /**, +     * Create a new instance., +     * @param validate {@code true} to validate header names according to, +     * <a href="https://tools.ietf.org/html/rfc7540">rfc7540</a>. {@code false} to not validate header names., +     */, +    @SuppressWarnings("unchecked"), +    public DefaultHttp2Headers(boolean validate) {, +        super(ByteStringValueConverter.INSTANCE, validate ? HTTP2_NAME_VALIDATOR : NameValidator.NOT_NULL);, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java, +    /**, +     * Create a new instance., +     * <p>, +     * Header names will be validated., +     */, +        this(true);, +    }, +, +    /**, +     * Create a new instance., +     * @param validateHeaders {@code true} to validate headers. {@code false} to not validate headers., +     * @see #DefaultHttp2HeadersDecoder(boolean), +     */, +    public DefaultHttp2FrameReader(boolean validateHeaders) {, +        this(new DefaultHttp2HeadersDecoder(validateHeaders));, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Headers.java, +import io.netty.util.ByteProcessor;, +import io.netty.util.internal.PlatformDependent;, +    private static final ByteProcessor HTTP2_NAME_VALIDATOR_PROCESSOR = new ByteProcessor() {, +        @Override, +        public boolean process(byte value) throws Exception {, +            if (value >= 'A' && value <= 'Z') {, +                throw new IllegalArgumentException("name must be all lower case but found: " + (char) value);, +            }, +            return true;, +        }, +    };, +    private static final NameValidator<ByteString> HTTP2_NAME_VALIDATOR = new NameValidator<ByteString>() {]