[+++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyGoAwayFrame.java, +    private int lastGoodStreamId;, +     * @param lastGoodStreamId the Last-good-stream-ID of this frame, +    public DefaultSpdyGoAwayFrame(int lastGoodStreamId) {, +        this(lastGoodStreamId, 0);, +     * @param lastGoodStreamId the Last-good-stream-ID of this frame, +    public DefaultSpdyGoAwayFrame(int lastGoodStreamId, int statusCode) {, +        this(lastGoodStreamId, SpdySessionStatus.valueOf(statusCode));, +     * @param lastGoodStreamId the Last-good-stream-ID of this frame, +    public DefaultSpdyGoAwayFrame(int lastGoodStreamId, SpdySessionStatus status) {, +        setLastGoodStreamId(lastGoodStreamId);, +    public int getLastGoodStreamId() {, +        return lastGoodStreamId;, +    public void setLastGoodStreamId(int lastGoodStreamId) {, +        if (lastGoodStreamId < 0) {, +                    + " cannot be negative: " + lastGoodStreamId);, +        this.lastGoodStreamId = lastGoodStreamId;, +        buf.append(lastGoodStreamId);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyGoAwayFrame.java, +    private int lastGoodStreamId;, +     * @param lastGoodStreamId the Last-good-stream-ID of this frame, +    public DefaultSpdyGoAwayFrame(int lastGoodStreamId) {, +        this(lastGoodStreamId, 0);, +     * @param lastGoodStreamId the Last-good-stream-ID of this frame, +    public DefaultSpdyGoAwayFrame(int lastGoodStreamId, int statusCode) {, +        this(lastGoodStreamId, SpdySessionStatus.valueOf(statusCode));, +     * @param lastGoodStreamId the Last-good-stream-ID of this frame, +    public DefaultSpdyGoAwayFrame(int lastGoodStreamId, SpdySessionStatus status) {, +        setLastGoodStreamId(lastGoodStreamId);, +    public int getLastGoodStreamId() {, +        return lastGoodStreamId;, +    public void setLastGoodStreamId(int lastGoodStreamId) {, +        if (lastGoodStreamId < 0) {, +                    + " cannot be negative: " + lastGoodStreamId);, +        this.lastGoodStreamId = lastGoodStreamId;, +        buf.append(lastGoodStreamId);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +            out.writeInt(spdyGoAwayFrame.getLastGoodStreamId());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyGoAwayFrame.java, +    private int lastGoodStreamId;, +     * @param lastGoodStreamId the Last-good-stream-ID of this frame, +    public DefaultSpdyGoAwayFrame(int lastGoodStreamId) {, +        this(lastGoodStreamId, 0);, +     * @param lastGoodStreamId the Last-good-stream-ID of this frame, +    public DefaultSpdyGoAwayFrame(int lastGoodStreamId, int statusCode) {, +        this(lastGoodStreamId, SpdySessionStatus.valueOf(statusCode));, +     * @param lastGoodStreamId the Last-good-stream-ID of this frame, +    public DefaultSpdyGoAwayFrame(int lastGoodStreamId, SpdySessionStatus status) {, +        setLastGoodStreamId(lastGoodStreamId);, +    public int getLastGoodStreamId() {, +        return lastGoodStreamId;, +    public void setLastGoodStreamId(int lastGoodStreamId) {, +        if (lastGoodStreamId < 0) {, +                    + " cannot be negative: " + lastGoodStreamId);, +        this.lastGoodStreamId = lastGoodStreamId;, +        buf.append(lastGoodStreamId);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +            out.writeInt(spdyGoAwayFrame.getLastGoodStreamId());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyGoAwayFrame.java, +    int getLastGoodStreamId();, +    void setLastGoodStreamId(int lastGoodStreamId);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyGoAwayFrame.java, +    private int lastGoodStreamId;, +     * @param lastGoodStreamId the Last-good-stream-ID of this frame, +    public DefaultSpdyGoAwayFrame(int lastGoodStreamId) {, +        this(lastGoodStreamId, 0);, +     * @param lastGoodStreamId the Last-good-stream-ID of this frame, +    public DefaultSpdyGoAwayFrame(int lastGoodStreamId, int statusCode) {, +        this(lastGoodStreamId, SpdySessionStatus.valueOf(statusCode));, +     * @param lastGoodStreamId the Last-good-stream-ID of this frame, +    public DefaultSpdyGoAwayFrame(int lastGoodStreamId, SpdySessionStatus status) {, +        setLastGoodStreamId(lastGoodStreamId);, +    public int getLastGoodStreamId() {, +        return lastGoodStreamId;, +    public void setLastGoodStreamId(int lastGoodStreamId) {, +        if (lastGoodStreamId < 0) {, +                    + " cannot be negative: " + lastGoodStreamId);, +        this.lastGoodStreamId = lastGoodStreamId;, +        buf.append(lastGoodStreamId);, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyFrameEncoder.java, +            out.writeInt(spdyGoAwayFrame.getLastGoodStreamId());, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyGoAwayFrame.java, +    int getLastGoodStreamId();, +    void setLastGoodStreamId(int lastGoodStreamId);, +++ b/codec-http/src/test/java/io/netty/handler/codec/spdy/SpdySessionHandlerTest.java, +        Assert.assertTrue(spdyGoAwayFrame.getLastGoodStreamId() == lastGoodStreamID);]