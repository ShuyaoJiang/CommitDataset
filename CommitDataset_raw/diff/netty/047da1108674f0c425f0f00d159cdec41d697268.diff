[+++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/DatagramUnicastTest.java, +        NONE, DUP, SLICE, READ_ONLY, +            switch (wrapType) {, +                case DUP:, +                    break;, +                case SLICE:, +                    break;, +                case READ_ONLY:, +                    cc.write(new DatagramPacket(buf.retain().asReadOnly(), addr));, +                    break;, +                case NONE:, +                    break;, +                default:, +                    throw new Error("unknown wrap type: " + wrapType);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/DatagramUnicastTest.java, +        NONE, DUP, SLICE, READ_ONLY, +            switch (wrapType) {, +                case DUP:, +                    break;, +                case SLICE:, +                    break;, +                case READ_ONLY:, +                    cc.write(new DatagramPacket(buf.retain().asReadOnly(), addr));, +                    break;, +                case NONE:, +                    break;, +                default:, +                    throw new Error("unknown wrap type: " + wrapType);, +++ b/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/UnixChannelUtilTest.java, +        assertTrue(isBufferCopyNeededForWrite(byteBuf.asReadOnly()));, +, +        assertTrue(isBufferCopyNeededForWrite(byteBuf.asReadOnly()));, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/DatagramUnicastTest.java, +        NONE, DUP, SLICE, READ_ONLY, +            switch (wrapType) {, +                case DUP:, +                    break;, +                case SLICE:, +                    break;, +                case READ_ONLY:, +                    cc.write(new DatagramPacket(buf.retain().asReadOnly(), addr));, +                    break;, +                case NONE:, +                    break;, +                default:, +                    throw new Error("unknown wrap type: " + wrapType);, +++ b/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/UnixChannelUtilTest.java, +        assertTrue(isBufferCopyNeededForWrite(byteBuf.asReadOnly()));, +, +        assertTrue(isBufferCopyNeededForWrite(byteBuf.asReadOnly()));, +++ b/transport-native-unix-common/src/main/java/io/netty/channel/unix/UnixChannelUtil.java, +        return !byteBuf.hasMemoryAddress() || !byteBuf.isDirect() || byteBuf.nioBufferCount() > IOV_MAX;]