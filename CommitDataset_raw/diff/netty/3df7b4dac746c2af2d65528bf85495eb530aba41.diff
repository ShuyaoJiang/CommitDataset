[+++ b/common/src/main/java/io/netty/util/NetUtil.java, +     * {@code true} if ipv4 should be used on a system that supports ipv4 and ipv6., +     */, +    private static final boolean IPV4_PREFERRED = Boolean.getBoolean("java.net.preferIPv4Stack");, +, +    /**, +     * Returns {@code true} if ipv4 should be prefered on a system that supports ipv4 and ipv6., +     */, +    public static boolean isIpV4StackPreferred() {, +        return IPV4_PREFERRED;, +    }, +, +    /**, +++ b/common/src/main/java/io/netty/util/NetUtil.java, +     * {@code true} if ipv4 should be used on a system that supports ipv4 and ipv6., +     */, +    private static final boolean IPV4_PREFERRED = Boolean.getBoolean("java.net.preferIPv4Stack");, +, +    /**, +     * Returns {@code true} if ipv4 should be prefered on a system that supports ipv4 and ipv6., +     */, +    public static boolean isIpV4StackPreferred() {, +        return IPV4_PREFERRED;, +    }, +, +    /**, +++ b/transport-native-epoll/src/main/c/io_netty_channel_epoll_Native.c, +jclass netUtilClass = NULL;, +jmethodID netUtilClassIpv4PreferredMethodId = NULL;, +static int socket_type(JNIEnv* env) {, +    jboolean ipv4Preferred = (*env)->CallStaticBooleanMethod(env, netUtilClass, netUtilClassIpv4PreferredMethodId);, +, +    if (ipv4Preferred) {, +        // User asked to use ipv4 explicitly., +        return AF_INET;, +    }, +        jclass localNetUtilClass = (*env)->FindClass(env, "io/netty/util/NetUtil" );, +        if (localNetUtilClass == NULL) {, +            // pending exception..., +            return JNI_ERR;, +        }, +        netUtilClass = (jclass) (*env)->NewGlobalRef(env, localNetUtilClass);, +        if (netUtilClass == NULL) {, +            // out-of-memory!, +            throwOutOfMemoryError(env);, +            return JNI_ERR;, +        }, +, +        netUtilClassIpv4PreferredMethodId = (*env)->GetStaticMethodID(env, netUtilClass, "isIpV4StackPreferred", "()Z" );, +        if (netUtilClassIpv4PreferredMethodId == NULL) {, +            // position method was not found.. something is wrong so bail out, +            throwRuntimeException(env, "failed to get method ID: NetUild.isIpV4StackPreferred()");, +            return JNI_ERR;, +        }, +        socketType = socket_type(env);, +        if (netUtilClass != NULL) {, +            (*env)->DeleteGlobalRef(env, netUtilClass);, +        }]