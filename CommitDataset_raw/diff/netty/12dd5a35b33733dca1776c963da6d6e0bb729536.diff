[+++ b/src/main/java/org/jboss/netty/channel/ChannelPipelineCoverage.java, + * is OK to do so (or there's nothing to share.)  The following code shows an, + * example of a handler type annotated with {@code "all"} value:, + *, + * <pre>, + * public class StatelessHandler extends SimpleChannelHandler {, + *, + *     // No state properties - you are safe to add the same instance to, + *     //                       multiple pipelines., + *, + *     public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) {, + *         // Prepend a length field to the message., + *         ChannelBuffer body = (ChannelBuffer) e.getMessage();, + *         ChannelBuffer header = ChannelBuffers.buffer(4);, + *         header.writeInt(body.readableBytes());, + *, + *         // Create a message prepended with the header and fire a new event., + *         ChannelBuffer message = ChannelBuffers.wrappedBuffer(header, body);, + *         Channels.fireMessageReceived(ctx, message, e.getRemoteAddress());, + *     }, + *     ..., + * }, + * </pre>, + * the handler to a race condition.  The following code shows an example of a, + * handler type annotated with {@code "one"} value:, + *, + * <pre>, + * public class StatefulHandler extends SimpleChannelHandler {, + *, + *     // Stateful property - adding the same instance to multiple pipelines, + *     //                     can lead to a race condition., + *     private int messageId;, + *, + *     public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) {, + *         // Prepend a message ID and length field to the message., + *         ChannelBuffer body = (ChannelBuffer) e.getMessage();, + *         ChannelBuffer header = ChannelBuffers.buffer(8);, + *         header.writeInt(messageId);, + *         header.writeInt(body.readableBytes());, + *, + *         // Update the stateful property., + *         messageId ++;, + *, + *         // Create a message prepended with the header and fire a new event., + *         ChannelBuffer message = ChannelBuffers.wrappedBuffer(header, body);, + *         Channels.fireMessageReceived(ctx, message, e.getRemoteAddress());, + *     }, + *     ..., + * }, + * </pre>]