[+++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpContentCompressor.java, + * Compresses an {@link HttpMessage} and an {@link HttpChunk} in {@code gzip} or, + * {@code deflate} encoding while respecting the {@code "Accept-Encoding"} header., + * If there is no matching encoding, no compression is done.  For more, + * information on how this handler modifies the message, please refer to, + * {@link HttpContentEncoder}., +    /**, +     * Creates a new handler with the default compression level (<tt>6</tt>)., +     */, +    /**, +     * Creates a new handler with the specified compression level., +     *, +     * @param compressionLevel, +     *        {@code 1} yields the fastest compression and {@code 9} yields the, +     *        best compression.  {@code 0} means no compression.  The default, +     *        compression level is {@code 6}., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpContentCompressor.java, + * Compresses an {@link HttpMessage} and an {@link HttpChunk} in {@code gzip} or, + * {@code deflate} encoding while respecting the {@code "Accept-Encoding"} header., + * If there is no matching encoding, no compression is done.  For more, + * information on how this handler modifies the message, please refer to, + * {@link HttpContentEncoder}., +    /**, +     * Creates a new handler with the default compression level (<tt>6</tt>)., +     */, +    /**, +     * Creates a new handler with the specified compression level., +     *, +     * @param compressionLevel, +     *        {@code 1} yields the fastest compression and {@code 9} yields the, +     *        best compression.  {@code 0} means no compression.  The default, +     *        compression level is {@code 6}., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpContentDecoder.java, + * Decodes the content of the received {@link HttpRequest} and {@link HttpChunk}., + * The original content is replaced with the new content decoded by the, + * {@link DecoderEmbedder}, which is created by {@link #newContentDecoder(String)}., + * Once decoding is finished, the value of the <tt>'Content-Encoding'</tt>, + * header is set to the target content encoding, as returned by {@link #getTargetContentEncoding(String)}., + * Also, the <tt>'Content-Length'</tt> header is updated to the length of the, + * by the decoder, {@link #newContentDecoder(String)} should return {@code null}, + * so that no decoding occurs (i.e. pass-through)., + * <p>, + * This handler must be placed after {@link HttpMessageDecoder} in the pipeline, + * so that this handler can intercept HTTP requests after {@link HttpMessageDecoder}, + * converts {@link ChannelBuffer}s into HTTP requests., +     * @param contentEncoding the value of the {@code "Content-Encoding"} header, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpContentCompressor.java, + * Compresses an {@link HttpMessage} and an {@link HttpChunk} in {@code gzip} or, + * {@code deflate} encoding while respecting the {@code "Accept-Encoding"} header., + * If there is no matching encoding, no compression is done.  For more, + * information on how this handler modifies the message, please refer to, + * {@link HttpContentEncoder}., +    /**, +     * Creates a new handler with the default compression level (<tt>6</tt>)., +     */, +    /**, +     * Creates a new handler with the specified compression level., +     *, +     * @param compressionLevel, +     *        {@code 1} yields the fastest compression and {@code 9} yields the, +     *        best compression.  {@code 0} means no compression.  The default, +     *        compression level is {@code 6}., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpContentDecoder.java, + * Decodes the content of the received {@link HttpRequest} and {@link HttpChunk}., + * The original content is replaced with the new content decoded by the, + * {@link DecoderEmbedder}, which is created by {@link #newContentDecoder(String)}., + * Once decoding is finished, the value of the <tt>'Content-Encoding'</tt>, + * header is set to the target content encoding, as returned by {@link #getTargetContentEncoding(String)}., + * Also, the <tt>'Content-Length'</tt> header is updated to the length of the, + * by the decoder, {@link #newContentDecoder(String)} should return {@code null}, + * so that no decoding occurs (i.e. pass-through)., + * <p>, + * This handler must be placed after {@link HttpMessageDecoder} in the pipeline, + * so that this handler can intercept HTTP requests after {@link HttpMessageDecoder}, + * converts {@link ChannelBuffer}s into HTTP requests., +     * @param contentEncoding the value of the {@code "Content-Encoding"} header, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpContentDecompressor.java, + * {@code gzip} or {@code deflate} encoding.  For more information on how this, + * handler modifies the message, please refer to {@link HttpContentDecoder}., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpContentCompressor.java, + * Compresses an {@link HttpMessage} and an {@link HttpChunk} in {@code gzip} or, + * {@code deflate} encoding while respecting the {@code "Accept-Encoding"} header., + * If there is no matching encoding, no compression is done.  For more, + * information on how this handler modifies the message, please refer to, + * {@link HttpContentEncoder}., +    /**, +     * Creates a new handler with the default compression level (<tt>6</tt>)., +     */, +    /**, +     * Creates a new handler with the specified compression level., +     *, +     * @param compressionLevel, +     *        {@code 1} yields the fastest compression and {@code 9} yields the, +     *        best compression.  {@code 0} means no compression.  The default, +     *        compression level is {@code 6}., +     */, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpContentDecoder.java]