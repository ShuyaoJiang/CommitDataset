[+++ b/transport/src/main/java/io/netty/channel/ChannelPipeline.java, + * inbound and outbount operations of a {@link Channel}.  {@link ChannelPipeline}, + * For each new channel, a new pipeline iscreated and attached to the, + * the current pipeline from it. All of this is handled for you and you not need, + * to take care of this., + *, + * The following diagram describes how I/O is processed by, + * A I/O-operation can be handled by either a {@link ChannelInboundHandler}, + * or a {@link ChannelOutboundHandler} and be forwarded to the closest, + * handler by calling either one of the methods defined in the, + * {@link ChannelInboundInvoker} interface for inbound I/O or by one, + * of the methods defined in the {@link ChannelOutboundInvoker} interface, + * for outbound I/O. {@link ChannelPipeline} extends both of them., + *, + *  +----------------------------------------------------+-----------------+, + *  |    | Inbound Handler  N   |            | Outbound Handler  1    |    |, + *  |    | Inbound Handler N-1  |            |   Outbound Handler  2  |    |, + *  | [{@link ChannelInboundInvoker}]   [{@link ChannelOutboundInvoker}()] |, + *  |        [ method call]                    [method call]               |, + *  |    | Inbound Handler  2   |            | Outbound Handler M-1   |    |, + *  |    | Inbound Handler  1   |            | Outbound Handler  M    |    |, + *  +---------------+------------------------------------+-----------------+, + *  +---------------+------------------------------------+-----------------+, + *  +----------------------------------------------------------------------+, + * {@link ChannelPipeline} p = ...;, + * p.addLast("1", new InboundHandlerA());, + * p.addLast("2", new InboundHandlerB());, + * p.addLast("3", new OutboundHandlerA());, + * p.addLast("4", new OutboundHandlerB());, + * p.addLast("5", new InboundOutboundHandlerX());, + * <li>3 and 4 don't implement {@link ChannelInboundHandler}, and therefore the, + * <li>1, 2, and 5 don't implement {@link ChannelOutboundHandler}, and, + * <li>If 5 implements both, + *     {@link ChannelInboundHandler} and {@link ChannelOutboundHandler}, the, + * {@link ChannelPipeline} pipeline = ...;]