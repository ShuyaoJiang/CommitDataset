[+++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioServerSocketPipelineSink.java, +                    if (!channel.isBound() || !channel.isOpen()) {, +++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioServerSocketPipelineSink.java, +                    if (!channel.isBound() || !channel.isOpen()) {, +++ b/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java, +            synchronized (closeFutures) {, +        }, +                synchronized (closeFutures) {, +                }, +++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioServerSocketPipelineSink.java, +                    if (!channel.isBound() || !channel.isOpen()) {, +++ b/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java, +            synchronized (closeFutures) {, +        }, +                synchronized (closeFutures) {, +                }, +++ b/src/test/java/org/jboss/netty/bootstrap/AbstractSocketClientBootstrapTest.java, +                if (executor.awaitTermination(1, TimeUnit.MILLISECONDS)) {, +++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioServerSocketPipelineSink.java, +                    if (!channel.isBound() || !channel.isOpen()) {, +++ b/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java, +            synchronized (closeFutures) {, +        }, +                synchronized (closeFutures) {, +                }, +++ b/src/test/java/org/jboss/netty/bootstrap/AbstractSocketClientBootstrapTest.java, +                if (executor.awaitTermination(1, TimeUnit.MILLISECONDS)) {, +++ b/src/test/java/org/jboss/netty/bootstrap/AbstractSocketServerBootstrapTest.java, +                if (executor.awaitTermination(1, TimeUnit.MILLISECONDS)) {, +++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioServerSocketPipelineSink.java, +                    if (!channel.isBound() || !channel.isOpen()) {, +++ b/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java, +            synchronized (closeFutures) {, +        }, +                synchronized (closeFutures) {, +                }, +++ b/src/test/java/org/jboss/netty/bootstrap/AbstractSocketClientBootstrapTest.java, +                if (executor.awaitTermination(1, TimeUnit.MILLISECONDS)) {, +++ b/src/test/java/org/jboss/netty/bootstrap/AbstractSocketServerBootstrapTest.java, +                if (executor.awaitTermination(1, TimeUnit.MILLISECONDS)) {, +++ b/src/test/java/org/jboss/netty/channel/socket/AbstractSocketEchoTest.java, +                if (executor.awaitTermination(1, TimeUnit.MILLISECONDS)) {, +        assertTrue(ccf.awaitUninterruptibly().isSuccess());, +, +        assertNull(sh.exception);, +        assertNull(ch.exception);, +++ b/src/main/java/org/jboss/netty/channel/socket/oio/OioServerSocketPipelineSink.java, +                    if (!channel.isBound() || !channel.isOpen()) {, +++ b/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java, +            synchronized (closeFutures) {, +        }, +                synchronized (closeFutures) {, +                }, +++ b/src/test/java/org/jboss/netty/bootstrap/AbstractSocketClientBootstrapTest.java, +                if (executor.awaitTermination(1, TimeUnit.MILLISECONDS)) {, +++ b/src/test/java/org/jboss/netty/bootstrap/AbstractSocketServerBootstrapTest.java, +                if (executor.awaitTermination(1, TimeUnit.MILLISECONDS)) {, +++ b/src/test/java/org/jboss/netty/channel/socket/AbstractSocketEchoTest.java, +                if (executor.awaitTermination(1, TimeUnit.MILLISECONDS)) {, +        assertTrue(ccf.awaitUninterruptibly().isSuccess());, +, +        assertNull(sh.exception);, +        assertNull(ch.exception);, +++ b/src/test/java/org/jboss/netty/handler/ssl/AbstractSocketSslEchoTest.java, +/*, + * JBoss, Home of Professional Open Source, + *, + * Copyright 2008, Red Hat Middleware LLC, and individual contributors, + * by the @author tags. See the COPYRIGHT.txt in the distribution for a, + * full listing of individual contributors., + *, + * This is free software; you can redistribute it and/or modify it, + * under the terms of the GNU Lesser General Public License as, + * published by the Free Software Foundation; either version 2.1 of, + * the License, or (at your option) any later version., + *, + * This software is distributed in the hope that it will be useful,, + * but WITHOUT ANY WARRANTY; without even the implied warranty of, + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU, + * Lesser General Public License for more details., + *, + * You should have received a copy of the GNU Lesser General Public, + * License along with this software; if not, write to the Free, + * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA, + * 02110-1301 USA, or see the FSF site: http://www.fsf.org., + */, +package org.jboss.netty.handler.ssl;, +, +import static org.junit.Assert.*;, +, +import java.net.InetAddress;, +import java.net.InetSocketAddress;, +import java.util.Random;, +import java.util.concurrent.Executor;, +import java.util.concurrent.ExecutorService;, +import java.util.concurrent.Executors;, +import java.util.concurrent.TimeUnit;, +, +import javax.net.ssl.SSLEngine;, +]