[+++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/test/java/io/netty/buffer/AbstractChannelBufferTest.java, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/test/java/io/netty/buffer/AbstractChannelBufferTest.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     *            Sub protocol request sent to the server., +        expectedSubprotocol = subprotocol;, +     * Returns the sub protocol request sent to the server as specified in the constructor, +     * Returns the sub protocol response and sent by the server. Only available after end of handshake., +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/test/java/io/netty/buffer/AbstractChannelBufferTest.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     *            Sub protocol request sent to the server., +        expectedSubprotocol = subprotocol;, +     * Returns the sub protocol request sent to the server as specified in the constructor, +     * Returns the sub protocol response and sent by the server. Only available after end of handshake., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java, +        if (getExpectedSubprotocol() != null && !getExpectedSubprotocol().equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, getExpectedSubprotocol());, +        String protocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(protocol);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/test/java/io/netty/buffer/AbstractChannelBufferTest.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     *            Sub protocol request sent to the server., +        expectedSubprotocol = subprotocol;, +     * Returns the sub protocol request sent to the server as specified in the constructor, +     * Returns the sub protocol response and sent by the server. Only available after end of handshake., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java, +        if (getExpectedSubprotocol() != null && !getExpectedSubprotocol().equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, getExpectedSubprotocol());, +        String protocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(protocol);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java, +    private static final String protocol = null;, +, +        if (protocol != null && !protocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, protocol);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/test/java/io/netty/buffer/AbstractChannelBufferTest.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     *            Sub protocol request sent to the server., +        expectedSubprotocol = subprotocol;, +     * Returns the sub protocol request sent to the server as specified in the constructor, +     * Returns the sub protocol response and sent by the server. Only available after end of handshake., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java, +        if (getExpectedSubprotocol() != null && !getExpectedSubprotocol().equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, getExpectedSubprotocol());, +        String protocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(protocol);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java, +    private static final String protocol = null;, +, +        if (protocol != null && !protocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, protocol);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker13.java, +    private static final String protocol = null;, +, +        if (protocol != null && !protocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, protocol);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/test/java/io/netty/buffer/AbstractChannelBufferTest.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     *            Sub protocol request sent to the server., +        expectedSubprotocol = subprotocol;, +     * Returns the sub protocol request sent to the server as specified in the constructor, +     * Returns the sub protocol response and sent by the server. Only available after end of handshake., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java, +        if (getExpectedSubprotocol() != null && !getExpectedSubprotocol().equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, getExpectedSubprotocol());, +        String protocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(protocol);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java, +    private static final String protocol = null;, +, +        if (protocol != null && !protocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, protocol);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker13.java, +    private static final String protocol = null;, +, +        if (protocol != null && !protocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, protocol);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.java, +        String[] requesteSubprotocolArray = requestedSubprotocols.split(",");, +        for (String p : requesteSubprotocolArray) {, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/test/java/io/netty/buffer/AbstractChannelBufferTest.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     *            Sub protocol request sent to the server., +        expectedSubprotocol = subprotocol;, +     * Returns the sub protocol request sent to the server as specified in the constructor, +     * Returns the sub protocol response and sent by the server. Only available after end of handshake., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java, +        if (getExpectedSubprotocol() != null && !getExpectedSubprotocol().equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, getExpectedSubprotocol());, +        String protocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(protocol);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java, +    private static final String protocol = null;]