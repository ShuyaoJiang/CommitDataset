[+++ b/buffer/src/main/java/io/netty/buffer/PoolThreadCache.java, +import java.util.concurrent.atomic.AtomicBoolean;, +    private final AtomicBoolean freed = new AtomicBoolean();, +        // As free() may be called either by the finalizer or by FastThreadLocal.onRemoval(...) we need to ensure, +        // we only call this one time., +        if (freed.compareAndSet(false, true)) {, +                logger.debug("Freed {} thread-local buffer(s) from thread: {}", numFreed,, +                        Thread.currentThread().getName());, +    }]