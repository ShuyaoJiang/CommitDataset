[+++ b/codec/src/test/java/io/netty/handler/codec/ByteToMessageHandlerTest.java, +, +    @Test, +    public void testRemoveItselfWriteBuffer() {, +        final ByteBuf buf = Unpooled.buffer().writeBytes(new byte[] {'a', 'b', 'c'});, +        EmbeddedChannel channel = new EmbeddedChannel(new ByteToMessageDecoder() {, +            private boolean removed;, +, +            @Override, +            protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +                Assert.assertFalse(removed);, +                in.readByte();, +                ctx.pipeline().remove(this);, +, +                // This should not let it keep call decode, +                buf.writeByte('d');, +                removed = true;, +            }, +        });, +, +        channel.writeInbound(buf.copy());, +        ByteBuf b = (ByteBuf) channel.readInbound();, +        Assert.assertEquals(b, Unpooled.wrappedBuffer(new byte[] { 'b', 'c'}));, +    }, +++ b/codec/src/test/java/io/netty/handler/codec/ByteToMessageHandlerTest.java, +, +    @Test, +    public void testRemoveItselfWriteBuffer() {, +        final ByteBuf buf = Unpooled.buffer().writeBytes(new byte[] {'a', 'b', 'c'});, +        EmbeddedChannel channel = new EmbeddedChannel(new ByteToMessageDecoder() {, +            private boolean removed;, +, +            @Override, +            protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +                Assert.assertFalse(removed);, +                in.readByte();, +                ctx.pipeline().remove(this);, +, +                // This should not let it keep call decode, +                buf.writeByte('d');, +                removed = true;, +            }, +        });, +, +        channel.writeInbound(buf.copy());, +        ByteBuf b = (ByteBuf) channel.readInbound();, +        Assert.assertEquals(b, Unpooled.wrappedBuffer(new byte[] { 'b', 'c'}));, +    }, +++ b/codec/src/test/java/io/netty/handler/codec/ReplayingDecoderTest.java, +, +    @Test, +    public void testRemoveItselfWriteBuffer() {, +        final ByteBuf buf = Unpooled.buffer().writeBytes(new byte[] {'a', 'b', 'c'});, +        EmbeddedChannel channel = new EmbeddedChannel(new ReplayingDecoder() {, +            private boolean removed;, +, +            @Override, +            protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {, +                assertFalse(removed);, +                in.readByte();, +                ctx.pipeline().remove(this);, +, +                // This should not let it keep call decode, +                buf.writeByte('d');, +                removed = true;, +            }, +        });, +, +        channel.writeInbound(buf.copy());, +        ByteBuf b = (ByteBuf) channel.readInbound();, +        assertEquals(b, Unpooled.wrappedBuffer(new byte[] { 'b', 'c'}));, +    }]