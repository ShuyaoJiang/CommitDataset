[+++ b/src/main/java/org/jboss/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder.java, +	private UTF8Output fragmentedFramesText = null;, +			, +			logger.debug("Frame length =" + framePayloadLength);, +			// Processing for fragmented messages, +			String aggregatedText = null;, +				// Final frame of the sequence. Apparently ping frames are, +				// allowed in the middle of a fragmented message, +				if (frameOpcode != OPCODE_PING) {, +, +					// Check text for UTF8 correctness, +					if (frameOpcode == OPCODE_TEXT || fragmentedFramesText != null) {, +						checkUTF8String(channel, framePayload.array());, +					}, +, +					// If final frame in a fragmented message, then set, +					// aggregated text so it can be returned, +					if (fragmentedFramesText != null) {, +						aggregatedText = fragmentedFramesText.toString();, +						fragmentedFramesText = null;, +					}, +				}, +				// Not final frame so we can expect more frames in the, +				// fragmented sequence, +				if (fragmentedFramesCount == 0) {, +					// First text or binary frame for a fragmented set, +					fragmentedFramesText = null;, +					if (frameOpcode == OPCODE_TEXT) {, +						checkUTF8String(channel, framePayload.array());, +					}, +				} else {, +					// Subsequent frames - only check if init frame is text, +					if (fragmentedFramesText != null) {, +						checkUTF8String(channel, framePayload.array());, +					}, +				}, +, +				// Increment counter, +				return new ContinuationWebSocketFrame(frameFinalFlag, frameRsv, framePayload, aggregatedText);, +, +	private void checkUTF8String(Channel channel, byte[] bytes) throws CorruptedFrameException {, +		try {, +			, +			StringBuilder sb = new StringBuilder("UTF8 " + bytes.length + " bytes: ");, +			for (byte b : bytes) {, +				sb.append(Integer.toHexString(b)).append(" ");, +			}, +			logger.debug(sb.toString());, +			, +			if (fragmentedFramesText == null) {, +				fragmentedFramesText = new UTF8Output(bytes);, +			} else {, +				fragmentedFramesText.write(bytes);, +			}, +		} catch (UTF8Exception ex) {, +			protocolViolation(channel, "invalid UTF-8 bytes");, +		}, +	}, +++ b/src/main/java/org/jboss/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder.java, +	private UTF8Output fragmentedFramesText = null;, +			, +			logger.debug("Frame length =" + framePayloadLength);, +			// Processing for fragmented messages, +			String aggregatedText = null;, +				// Final frame of the sequence. Apparently ping frames are, +				// allowed in the middle of a fragmented message, +				if (frameOpcode != OPCODE_PING) {, +, +					// Check text for UTF8 correctness, +					if (frameOpcode == OPCODE_TEXT || fragmentedFramesText != null) {, +						checkUTF8String(channel, framePayload.array());, +					}, +, +					// If final frame in a fragmented message, then set, +					// aggregated text so it can be returned, +					if (fragmentedFramesText != null) {, +						aggregatedText = fragmentedFramesText.toString();, +						fragmentedFramesText = null;, +					}, +				}, +				// Not final frame so we can expect more frames in the, +				// fragmented sequence, +				if (fragmentedFramesCount == 0) {, +					// First text or binary frame for a fragmented set, +					fragmentedFramesText = null;, +					if (frameOpcode == OPCODE_TEXT) {, +						checkUTF8String(channel, framePayload.array());, +					}, +				} else {, +					// Subsequent frames - only check if init frame is text, +					if (fragmentedFramesText != null) {, +						checkUTF8String(channel, framePayload.array());, +					}, +				}, +, +				// Increment counter, +				return new ContinuationWebSocketFrame(frameFinalFlag, frameRsv, framePayload, aggregatedText);, +, +	private void checkUTF8String(Channel channel, byte[] bytes) throws CorruptedFrameException {, +		try {]