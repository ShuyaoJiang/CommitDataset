[+++ b/codec/src/main/java/io/netty/handler/codec/compression/SnappyFramedDecoder.java, +                        // TODO: Optimize me., +                        snappy.decode(in.readSlice(chunkLength - 4), uncompressed, chunkLength);, +                        out.writeBytes(uncompressed);, +                        snappy.decode(in.readSlice(chunkLength - 4), out, chunkLength);, +++ b/codec/src/main/java/io/netty/handler/codec/compression/SnappyFramedDecoder.java, +                        // TODO: Optimize me., +                        snappy.decode(in.readSlice(chunkLength - 4), uncompressed, chunkLength);, +                        out.writeBytes(uncompressed);, +                        snappy.decode(in.readSlice(chunkLength - 4), out, chunkLength);, +++ b/codec/src/test/java/io/netty/handler/codec/compression/SnappyFramedDecoderTest.java, +import org.junit.Before;, +    private EmbeddedByteChannel channel;, +, +    @Before, +    public void initChannel() {, +        channel = new EmbeddedByteChannel(new SnappyFramedDecoder());, +    }, +            0x03, 0x01, 0x00, 0x00, 0x00, +            -0x80, 0x05, 0x00, 0x00, 'n', 'e', 't', 't', 'y', +            -0x80, 0x06, 0x00, 0x00, 's', 'n', 'e', 't', 't', 'y', +            -0x7f, 0x06, 0x00, 0x00, 's', 'n', 'e', 't', 't', 'y', +            0x01, 0x05, 0x00, 0x00, 'n', 'e', 't', 't', 'y', +            0x00, 0x05, 0x00, 0x00, 'n', 'e', 't', 't', 'y', +           -0x80, 0x06, 0x00, 0x00, 0x73, 0x4e, 0x61, 0x50, 0x70, 0x59,, +           -0x7f, 0x05, 0x00, 0x00, 'n', 'e', 't', 't', 'y', +        assertFalse(in.isReadable());, +           -0x80, 0x06, 0x00, 0x00, 0x73, 0x4e, 0x61, 0x50, 0x70, 0x59,, +            0x01, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 'n', 'e', 't', 't', 'y', +           -0x80, 0x06, 0x00, 0x00, 0x73, 0x4e, 0x61, 0x50, 0x70, 0x59,, +            0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,]