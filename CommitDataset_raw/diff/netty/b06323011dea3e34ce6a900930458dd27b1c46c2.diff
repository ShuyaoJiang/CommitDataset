[+++ b/src/main/java/org/jboss/netty/channel/ChannelPipeline.java, + *   +---------------------------------------------+----------------+, + *   |  LAST | Upstream Handler  N  |  | Downstream Handler  M  |   |, + *   |   .   +----------+-----------+  +-----------+------------+   |, + *   |   .             /|\                         |                |, + *   |   .              |                         \|/               |, + *   |   .   +----------+-----------+  +-----------+------------+   |, + *   |   .   | Upstream Handler N-1 |  | Downstream Handler M-1 |   |, + *   |   .   +----------+-----------+  +-----------+------------+   |, + *   |   .             /|\                         .                |, + *   |   .              .                          .                |, + *   |   .      [ Going UPSTREAM ]        [ Going DOWNSTREAM ]      |, + *   |   .              .                          .                |, + *   |   .              .                         \|/               |, + *   |   .   +----------+-----------+  +-----------+------------+   |, + *   |   .   | Upstream Handler  2  |  | Downstream Handler  2  |   |, + *   |   .   +----------+-----------+  +-----------+------------+   |, + *   |   .             /|\                         |                |, + *   |   .              |                         \|/               |, + *   |   .   +----------+-----------+  +-----------+------------+   |, + *   | FIRST | Upstream Handler  1  |  | Downstream Handler  1  |   |, + *   +------------------+--------------------------+----------------+, + *   +------------------+--------------------------+----------------+, + *   +--------------------------------------------------------------+, +++ b/src/main/java/org/jboss/netty/channel/ChannelPipeline.java, + *   +---------------------------------------------+----------------+, + *   |  LAST | Upstream Handler  N  |  | Downstream Handler  M  |   |, + *   |   .   +----------+-----------+  +-----------+------------+   |, + *   |   .             /|\                         |                |, + *   |   .              |                         \|/               |, + *   |   .   +----------+-----------+  +-----------+------------+   |, + *   |   .   | Upstream Handler N-1 |  | Downstream Handler M-1 |   |, + *   |   .   +----------+-----------+  +-----------+------------+   |, + *   |   .             /|\                         .                |, + *   |   .              .                          .                |, + *   |   .      [ Going UPSTREAM ]        [ Going DOWNSTREAM ]      |, + *   |   .              .                          .                |, + *   |   .              .                         \|/               |, + *   |   .   +----------+-----------+  +-----------+------------+   |, + *   |   .   | Upstream Handler  2  |  | Downstream Handler  2  |   |, + *   |   .   +----------+-----------+  +-----------+------------+   |, + *   |   .             /|\                         |                |, + *   |   .              |                         \|/               |, + *   |   .   +----------+-----------+  +-----------+------------+   |, + *   | FIRST | Upstream Handler  1  |  | Downstream Handler  1  |   |, + *   +------------------+--------------------------+----------------+, + *   +------------------+--------------------------+----------------+, + *   +--------------------------------------------------------------+, +++ b/src/main/java/org/jboss/netty/channel/Channels.java, +     * Fires a {@code "channelOpen"} event to the first, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} of, +     * the specified {@link Channel}.  If the specified channel has a parent,, +     * a {@code "childChannelOpen"} event will be fired, too., +     * Fires a {@code "channelOpen"} event to the next, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} where, +     * the specified {@link ChannelHandlerContext} belongs.  Please note that, +     * this method doesn't fire a {@code "childChannelOpen"} event unlike, +     * Fires a {@code "channelBound"} event to the first, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} of, +     * the specified {@link Channel}., +     * Fires a {@code "channelBound"} event to the next, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} where, +     * the specified {@link ChannelHandlerContext} belongs., +     * Fires a {@code "channelConnected"} event to the first, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} of, +     * the specified {@link Channel}., +     * Fires a {@code "channelConnected"} event to the next, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} where, +     * the specified {@link ChannelHandlerContext} belongs., +     * Fires a {@code "messageReceived"} event to the first, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} of, +     * the specified {@link Channel}., +     * Fires a {@code "messageReceived"} event to the first, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} of, +     * the specified {@link Channel} belongs., +     * Fires a {@code "messageReceived"} event to the next, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} where, +     * the specified {@link ChannelHandlerContext} belongs., +     * Fires a {@code "messageReceived"} event to the next, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} where, +     * the specified {@link ChannelHandlerContext} belongs., +     * Fires a {@code "channelInterestChanged"} event to the first, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} of, +     * the specified {@link Channel}., +     * Fires a {@code "channelInterestChanged"} event to the next, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} where, +     * the specified {@link ChannelHandlerContext} belongs., +     * Fires a {@code "channelDisconnected"} event to the first, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} of, +     * the specified {@link Channel}., +     * Fires a {@code "channelDisconnected"} event to the next, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} where, +     * the specified {@link ChannelHandlerContext} belongs., +    /**, +     * Fires a {@code "channelUnbound"} event to the first, +     * {@link ChannelUpstreamHandler} in the {@link ChannelPipeline} of, +     * the specified {@link Channel}., +     */, +    /**, +     * Fires a {@code "channelUnbound"} event to the next]