[+++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +    public boolean isReadOnly() {, +        return false;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +    public boolean isReadOnly() {, +        return false;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +    public boolean isReadOnly() {, +        return unwrap().isReadOnly();, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +    public boolean isReadOnly() {, +        return false;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +    public boolean isReadOnly() {, +        return unwrap().isReadOnly();, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +     * Returns {@code true} if and only if this buffer is read-only., +     */, +    public abstract boolean isReadOnly();, +, +    /**, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +    public boolean isReadOnly() {, +        return false;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +    public boolean isReadOnly() {, +        return unwrap().isReadOnly();, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +     * Returns {@code true} if and only if this buffer is read-only., +     */, +    public abstract boolean isReadOnly();, +, +    /**, +++ b/buffer/src/main/java/io/netty/buffer/EmptyByteBuf.java, +    public boolean isReadOnly() {, +        return false;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +    public boolean isReadOnly() {, +        return false;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +    public boolean isReadOnly() {, +        return unwrap().isReadOnly();, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +     * Returns {@code true} if and only if this buffer is read-only., +     */, +    public abstract boolean isReadOnly();, +, +    /**, +++ b/buffer/src/main/java/io/netty/buffer/EmptyByteBuf.java, +    public boolean isReadOnly() {, +        return false;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/ReadOnlyByteBuf.java, +    public boolean isReadOnly() {, +        return true;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +    public boolean isReadOnly() {, +        return false;, +    }, +, +    @Override, +++ b/buffer/src/main/java/io/netty/buffer/AbstractDerivedByteBuf.java, +    public boolean isReadOnly() {, +        return unwrap().isReadOnly();, +    }]