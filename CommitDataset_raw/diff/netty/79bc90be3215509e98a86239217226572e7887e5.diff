[+++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateDecoderTest.java, +        finalPayloadWrapped.release();, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateDecoderTest.java, +        finalPayloadWrapped.release();, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslContext.java, +            ByteBuf encoded = Base64.encode(Unpooled.wrappedBuffer(key.getEncoded()), true);, +            buffer.writeBytes(encoded);, +            encoded.release();, +                ByteBuf encoded = Base64.encode(Unpooled.wrappedBuffer(cert.getEncoded()), true);, +                buffer.writeBytes(encoded);, +                encoded.release();, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateDecoderTest.java, +        finalPayloadWrapped.release();, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslContext.java, +            ByteBuf encoded = Base64.encode(Unpooled.wrappedBuffer(key.getEncoded()), true);, +            buffer.writeBytes(encoded);, +            encoded.release();, +                ByteBuf encoded = Base64.encode(Unpooled.wrappedBuffer(cert.getEncoded()), true);, +                buffer.writeBytes(encoded);, +                encoded.release();, +++ b/handler/src/main/java/io/netty/handler/ssl/util/SelfSignedCertificate.java, +import io.netty.buffer.ByteBuf;, +        ByteBuf enc = Base64.encode(Unpooled.wrappedBuffer(key.getEncoded()), true);, +        String keyText = "-----BEGIN PRIVATE KEY-----\n" + enc.toString(CharsetUtil.US_ASCII) +, +        enc.release();, +        ByteBuf encoded = Base64.encode(Unpooled.wrappedBuffer(cert.getEncoded()), true);, +                encoded.toString(CharsetUtil.US_ASCII) +, +        encoded.release();]