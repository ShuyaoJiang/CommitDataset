[+++ b/transport/src/main/java/io/netty/channel/ChannelPipeline.java, +     *         if the specified handler is {@code null}, +     *         if the specified handler is {@code null}, +     *         if the specified handler is {@code null}, +     *         if the specified handler is {@code null}, +     *         if the specified baseName or handler is {@code null}, +     *         if the specified baseName or handler is {@code null}, +     *         if the specified baseName or handler is {@code null}, +     *         if the specified baseName or handler is {@code null}, +     *         if the specified old handler or new handler is, +     *         if the specified old handler or new handler is, +     *         if the specified old handler or new handler is, +++ b/transport/src/main/java/io/netty/channel/ChannelPipeline.java, +     *         if the specified handler is {@code null}, +     *         if the specified handler is {@code null}, +     *         if the specified handler is {@code null}, +     *         if the specified handler is {@code null}, +     *         if the specified baseName or handler is {@code null}, +     *         if the specified baseName or handler is {@code null}, +     *         if the specified baseName or handler is {@code null}, +     *         if the specified baseName or handler is {@code null}, +     *         if the specified old handler or new handler is, +     *         if the specified old handler or new handler is, +     *         if the specified old handler or new handler is, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            name = filterName(name, handler);, +            newCtx = newContext(group, filterName(name, handler), handler);, +            name = filterName(name, handler);, +    private String filterName(String name, ChannelHandler handler) {, +        if (name == null) {, +            return generateName(handler);, +        }, +        checkDuplicateName(name);, +        return name;, +    }, +, +            EventExecutorGroup group, String baseName, String name, ChannelHandler handler) {, +            name = filterName(name, handler);, +            addFirst(executor, null, h);, +            addLast(executor, null, h);, +++ b/transport/src/main/java/io/netty/channel/ChannelPipeline.java, +     *         if the specified handler is {@code null}, +     *         if the specified handler is {@code null}, +     *         if the specified handler is {@code null}, +     *         if the specified handler is {@code null}, +     *         if the specified baseName or handler is {@code null}, +     *         if the specified baseName or handler is {@code null}, +     *         if the specified baseName or handler is {@code null}, +     *         if the specified baseName or handler is {@code null}, +     *         if the specified old handler or new handler is, +     *         if the specified old handler or new handler is, +     *         if the specified old handler or new handler is, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java, +            name = filterName(name, handler);, +            newCtx = newContext(group, filterName(name, handler), handler);, +            name = filterName(name, handler);, +    private String filterName(String name, ChannelHandler handler) {, +        if (name == null) {, +            return generateName(handler);, +        }, +        checkDuplicateName(name);, +        return name;, +    }, +, +            EventExecutorGroup group, String baseName, String name, ChannelHandler handler) {, +            name = filterName(name, handler);, +            addFirst(executor, null, h);, +            addLast(executor, null, h);, +++ b/transport/src/test/java/io/netty/channel/DefaultChannelPipelineTest.java, +    @Test, +    public void testNullName() {, +        ChannelPipeline pipeline = new LocalChannel().pipeline();, +        pipeline.addLast(newHandler());, +        pipeline.addLast(null, newHandler());, +        pipeline.addFirst(newHandler());, +        pipeline.addFirst(null, newHandler());, +, +        pipeline.addLast("test", newHandler());, +        pipeline.addAfter("test", null, newHandler());, +, +        pipeline.addBefore("test", null, newHandler());, +    }, +]