[+++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +import static io.netty.util.internal.EmptyArrays.EMPTY_CERTIFICATES;, +import static io.netty.util.internal.EmptyArrays.EMPTY_JAVAX_X509_CERTIFICATES;, +    private static boolean isEmpty(Object[] arr) {, +        return arr == null || arr.length == 0;, +    }, +, +    private static boolean isEmpty(byte[] cert) {, +        return cert == null || cert.length == 0;, +    }, +, +        private Certificate[] peerCerts;, +            if (clientMode) {, +                if (isEmpty(chain)) {, +                    peerCerts = EMPTY_CERTIFICATES;, +                    x509PeerCerts = EMPTY_JAVAX_X509_CERTIFICATES;, +                } else {, +                    peerCerts = new Certificate[chain.length];, +                    x509PeerCerts = new X509Certificate[chain.length];, +                    initCerts(chain, 0);, +                }, +            } else {, +                byte[] clientCert = SSL.getPeerCertificate(ssl);, +                if (isEmpty(clientCert)) {, +                    peerCerts = EMPTY_CERTIFICATES;, +                    x509PeerCerts = EMPTY_JAVAX_X509_CERTIFICATES;, +                    if (isEmpty(chain)) {, +                        peerCerts = new Certificate[] {new OpenSslX509Certificate(clientCert)};, +                        x509PeerCerts = new X509Certificate[] {new OpenSslJavaxX509Certificate(clientCert)};, +                        peerCerts = new Certificate[chain.length + 1];, +                        x509PeerCerts = new X509Certificate[chain.length + 1];, +                        initCerts(chain, 1);, +, +        private void initCerts(byte[][] chain, int startPos) {, +            for (int i = 0; i < chain.length; i++) {, +                int certPos = startPos + i;, +                peerCerts[certPos] = new OpenSslX509Certificate(chain[i]);, +                x509PeerCerts[certPos] = new OpenSslJavaxX509Certificate(chain[i]);, +            }, +                if (isEmpty(peerCerts)) {, +                if (isEmpty(x509PeerCerts)) {, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +import static io.netty.util.internal.EmptyArrays.EMPTY_CERTIFICATES;, +import static io.netty.util.internal.EmptyArrays.EMPTY_JAVAX_X509_CERTIFICATES;, +    private static boolean isEmpty(Object[] arr) {, +        return arr == null || arr.length == 0;, +    }, +, +    private static boolean isEmpty(byte[] cert) {, +        return cert == null || cert.length == 0;, +    }, +, +        private Certificate[] peerCerts;, +            if (clientMode) {, +                if (isEmpty(chain)) {, +                    peerCerts = EMPTY_CERTIFICATES;, +                    x509PeerCerts = EMPTY_JAVAX_X509_CERTIFICATES;, +                } else {, +                    peerCerts = new Certificate[chain.length];, +                    x509PeerCerts = new X509Certificate[chain.length];, +                    initCerts(chain, 0);, +                }, +            } else {, +                byte[] clientCert = SSL.getPeerCertificate(ssl);, +                if (isEmpty(clientCert)) {, +                    peerCerts = EMPTY_CERTIFICATES;, +                    x509PeerCerts = EMPTY_JAVAX_X509_CERTIFICATES;, +                    if (isEmpty(chain)) {, +                        peerCerts = new Certificate[] {new OpenSslX509Certificate(clientCert)};, +                        x509PeerCerts = new X509Certificate[] {new OpenSslJavaxX509Certificate(clientCert)};, +                        peerCerts = new Certificate[chain.length + 1];, +                        x509PeerCerts = new X509Certificate[chain.length + 1];, +                        initCerts(chain, 1);, +, +        private void initCerts(byte[][] chain, int startPos) {, +            for (int i = 0; i < chain.length; i++) {, +                int certPos = startPos + i;, +                peerCerts[certPos] = new OpenSslX509Certificate(chain[i]);, +                x509PeerCerts[certPos] = new OpenSslJavaxX509Certificate(chain[i]);, +            }, +                if (isEmpty(peerCerts)) {, +                if (isEmpty(x509PeerCerts)) {, +++ b/handler/src/test/java/io/netty/handler/ssl/SSLEngineTest.java, +import java.security.cert.Certificate;, +import javax.security.cert.X509Certificate;, +                                SSLSession session = ((SslHandler) ctx.pipeline().first()).engine().getSession();, +                                X509Certificate[] peerCertificateChain = session.getPeerCertificateChain();, +                                Certificate[] peerCertificates = session.getPeerCertificates();, +                                if (peerCertificateChain == null) {, +                                    promise.setFailure(new NullPointerException("peerCertificateChain"));, +                                } else if (peerCertificates == null) {, +                                    promise.setFailure(new NullPointerException("peerCertificates"));, +                                } else if (peerCertificateChain.length + peerCertificates.length != 4) {, +                                    String excTxtFmt = "peerCertificateChain.length:%s, peerCertificates.length:%s";, +                                    promise.setFailure(new IllegalStateException(String.format(excTxtFmt,, +                                            peerCertificateChain.length,, +                                            peerCertificates.length)));, +                                } else {, +                                    for (int i = 0; i < peerCertificateChain.length; i++) {, +                                        if (peerCertificateChain[i] == null || peerCertificates[i] == null) {]