[+++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpClientCodecTest.java, +    private static final String INCOMPLETE_CHUNKED_RESPONSE = "HTTP/1.1 200 OK\r\n" + "Content-Type: text/plain\r\n" + "Transfer-Encoding: chunked\r\n" + "\r\n", +            +"5\r\n" + "first\r\n" + "6\r\n" + "second\r\n" + "0\r\n";, +    private static final String CHUNKED_RESPONSE = INCOMPLETE_CHUNKED_RESPONSE + "\r\n";, +, +    public void testFailsNotOnRequestResponseChunked() {, +        HttpClientCodec codec = new HttpClientCodec();, +        DecoderEmbedder<ChannelBuffer> decoder = new DecoderEmbedder<ChannelBuffer>(codec);, +        EncoderEmbedder<ChannelBuffer> encoder = new EncoderEmbedder<ChannelBuffer>(codec);, +        , +        encoder.offer(new DefaultHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.GET, "http://localhost/"));, +        decoder.offer(ChannelBuffers.copiedBuffer(CHUNKED_RESPONSE, CharsetUtil.ISO_8859_1));, +, +        encoder.finish();, +        decoder.finish();, +   , +    }, +    , +    @Test, +    , +    @Test, +    public void testFailsOnIncompleteChunkedResponse() {, +        HttpClientCodec codec = new HttpClientCodec();, +        DecoderEmbedder<ChannelBuffer> decoder = new DecoderEmbedder<ChannelBuffer>(codec);, +, +        EncoderEmbedder<ChannelBuffer> encoder = new EncoderEmbedder<ChannelBuffer>(codec);, +        , +        encoder.offer(new DefaultHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.GET, "http://localhost/"));, +        decoder.offer(ChannelBuffers.copiedBuffer(INCOMPLETE_CHUNKED_RESPONSE, CharsetUtil.ISO_8859_1));, +, +        try {, +            encoder.finish();, +            decoder.finish();, +            fail();, +        } catch (CodecEmbedderException e) {, +            assertTrue(e.getCause() instanceof PrematureChannelClosureException);, +        }, +        , +    }]