[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpChunk.java, +, +    @Override, +    public String toString() {, +        StringBuilder buf = new StringBuilder();, +        buf.append(getClass().getSimpleName());, +, +        final boolean last = isLast();, +        buf.append("(last: ");, +        buf.append(last);, +        if (!last) {, +            buf.append(", size: ");, +            buf.append(getContent().readableBytes());, +        }, +, +        buf.append(", decodeResult: ");, +        buf.append(getDecodeResult());, +        buf.append(')');, +, +        return buf.toString();, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpChunk.java, +, +    @Override, +    public String toString() {, +        StringBuilder buf = new StringBuilder();, +        buf.append(getClass().getSimpleName());, +, +        final boolean last = isLast();, +        buf.append("(last: ");, +        buf.append(last);, +        if (!last) {, +            buf.append(", size: ");, +            buf.append(getContent().readableBytes());, +        }, +, +        buf.append(", decodeResult: ");, +        buf.append(getDecodeResult());, +        buf.append(')');, +, +        return buf.toString();, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpChunkTrailer.java, +import io.netty.util.internal.StringUtil;, +, +    @Override, +    public String toString() {, +        StringBuilder buf = new StringBuilder();, +        buf.append(getClass().getSimpleName());, +, +        final boolean last = isLast();, +        buf.append("(last: ");, +        buf.append(last);, +        if (!last) {, +            buf.append(", size: ");, +            buf.append(getContent().readableBytes());, +        }, +, +        buf.append(", decodeResult: ");, +        buf.append(getDecodeResult());, +        buf.append(')');, +        buf.append(StringUtil.NEWLINE);, +        appendHeaders(buf);, +, +        // Remove the last newline., +        buf.setLength(buf.length() - StringUtil.NEWLINE.length());, +        return buf.toString();, +    }, +, +    private void appendHeaders(StringBuilder buf) {, +        for (Map.Entry<String, String> e: getHeaders()) {, +            buf.append(e.getKey());, +            buf.append(": ");, +            buf.append(e.getValue());, +            buf.append(StringUtil.NEWLINE);, +        }, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpChunk.java, +, +    @Override, +    public String toString() {, +        StringBuilder buf = new StringBuilder();, +        buf.append(getClass().getSimpleName());, +, +        final boolean last = isLast();, +        buf.append("(last: ");, +        buf.append(last);, +        if (!last) {, +            buf.append(", size: ");, +            buf.append(getContent().readableBytes());, +        }, +, +        buf.append(", decodeResult: ");, +        buf.append(getDecodeResult());, +        buf.append(')');, +, +        return buf.toString();, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpChunkTrailer.java, +import io.netty.util.internal.StringUtil;]