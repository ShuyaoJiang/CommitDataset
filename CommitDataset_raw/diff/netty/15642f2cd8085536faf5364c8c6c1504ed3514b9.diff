[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/AutobahnServerHandler.java, +import static io.netty.handler.codec.http.HttpHeaders.*;, +import static io.netty.handler.codec.http.HttpMethod.*;, +import static io.netty.handler.codec.http.HttpResponseStatus.*;, +import static io.netty.handler.codec.http.HttpVersion.*;, +, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/AutobahnServerHandler.java, +import static io.netty.handler.codec.http.HttpHeaders.*;, +import static io.netty.handler.codec.http.HttpMethod.*;, +import static io.netty.handler.codec.http.HttpResponseStatus.*;, +import static io.netty.handler.codec.http.HttpVersion.*;, +, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/example/src/main/java/io/netty/example/http/websocketx/server/WebSocketServerHandler.java, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/AutobahnServerHandler.java, +import static io.netty.handler.codec.http.HttpHeaders.*;, +import static io.netty.handler.codec.http.HttpMethod.*;, +import static io.netty.handler.codec.http.HttpResponseStatus.*;, +import static io.netty.handler.codec.http.HttpVersion.*;, +, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/example/src/main/java/io/netty/example/http/websocketx/server/WebSocketServerHandler.java, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/example/src/main/java/io/netty/example/http/websocketx/sslserver/WebSocketSslServerHandler.java, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/example/src/main/java/io/netty/example/http/websocketx/autobahn/AutobahnServerHandler.java, +import static io.netty.handler.codec.http.HttpHeaders.*;, +import static io.netty.handler.codec.http.HttpMethod.*;, +import static io.netty.handler.codec.http.HttpResponseStatus.*;, +import static io.netty.handler.codec.http.HttpVersion.*;, +, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/example/src/main/java/io/netty/example/http/websocketx/server/WebSocketServerHandler.java, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/example/src/main/java/io/netty/example/http/websocketx/sslserver/WebSocketSslServerHandler.java, +            WebSocketServerHandshakerFactory.sendUnsupportedWebSocketVersionResponse(ctx.channel());, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +        return DefaultChannelPipeline.hasNextOutboundByteBuffer(prev);, +        return DefaultChannelPipeline.hasNextOutboundMessageBuffer(prev);, +        return DefaultChannelPipeline.nextOutboundByteBuffer(prev);, +        return DefaultChannelPipeline.nextOutboundMessageBuffer(prev);]