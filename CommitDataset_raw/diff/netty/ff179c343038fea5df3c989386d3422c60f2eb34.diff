[+++ b/common/src/main/java/io/netty/util/NetUtil.java, +import java.util.List;, +     * The loopback {@link NetworkInterface} of the current machine, +        byte[] LOCALHOST4_BYTES = {127, 0, 0, 1};, +        byte[] LOCALHOST6_BYTES = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1};, +            localhost4 = (Inet4Address) InetAddress.getByAddress(LOCALHOST4_BYTES);, +            localhost6 = (Inet6Address) InetAddress.getByAddress(LOCALHOST6_BYTES);, +        // Retrieve the list of available network interfaces., +        List<NetworkInterface> ifaces = new ArrayList<NetworkInterface>();, +        try {, +            for (Enumeration<NetworkInterface> i = NetworkInterface.getNetworkInterfaces(); i.hasMoreElements();) {, +                NetworkInterface iface = i.nextElement();, +                // Use the interface with proper INET addresses only., +                if (iface.getInetAddresses().hasMoreElements()) {, +                    ifaces.add(iface);, +                }, +            }, +        } catch (SocketException e) {, +            logger.warn("Failed to retrieve the list of available network interfaces", e);, +        }, +, +        // Find the first loopback interface available from its INET address (127.0.0.1 or ::1), +        // Note that we do not use NetworkInterface.isLoopback() in the first place because it takes long time, +        // on a certain environment. (e.g. Windows with -Djava.net.preferIPv4Stack=true), +        NetworkInterface loopbackIface = null;, +        InetAddress loopbackAddr = null;, +        loop: for (NetworkInterface iface: ifaces) {, +            for (Enumeration<InetAddress> i = iface.getInetAddresses(); i.hasMoreElements();) {, +                InetAddress addr = i.nextElement();, +                if (addr.isLoopbackAddress()) {, +                    // Found, +                    loopbackIface = iface;, +                    loopbackAddr = addr;, +                    break loop;, +                }, +            }, +        }, +, +        // If failed to find the loopback interface from its INET address, fall back to isLoopback()., +        if (loopbackIface == null) {, +            try {, +                for (NetworkInterface iface: ifaces) {, +                    if (iface.isLoopback()) {, +                        Enumeration<InetAddress> i = iface.getInetAddresses();, +                        if (i.hasMoreElements()) {, +                            // Found the one with INET address., +                            loopbackIface = iface;, +                            loopbackAddr = i.nextElement();, +                            break;, +                        }, +                    }, +                }, +, +                if (loopbackIface == null) {, +                    logger.warn("Failed to find the loopback interface");, +                }, +            } catch (SocketException e) {, +                logger.warn("Failed to find the loopback interface", e);, +            }, +        }, +, +        if (loopbackIface != null) {, +            // Found the loopback interface with an INET address., +            logger.debug(, +                    "Loopback interface: {} ({}, {})",, +                    loopbackIface.getName(), loopbackIface.getDisplayName(), loopbackAddr.getHostAddress());, +        } else {, +            // Could not find the loopback interface, but we can't leave LOCALHOST as null., +            // Use LOCALHOST6 or LOCALHOST4, preferably the IPv6 one., +            if (loopbackAddr == null) {, +                        loopbackAddr = localhost6;, +                    if (loopbackAddr == null) {, +                        loopbackAddr = localhost4;, +                    }, +        LOOPBACK_IF = loopbackIface;, +        LOCALHOST = loopbackAddr;, +        // Determine the default somaxconn (server socket backlog) value of the platform., +                        if (Integer.parseInt(ipAddress.substring(i + 1)) < 0) {, +                            return false;, +                        }, +        return Integer.parseInt(word) <= 255;, +, +        return periods == 3;, +++ b/common/src/main/java/io/netty/util/NetUtil.java, +import java.util.List;, +     * The loopback {@link NetworkInterface} of the current machine, +        byte[] LOCALHOST4_BYTES = {127, 0, 0, 1};, +        byte[] LOCALHOST6_BYTES = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1};, +            localhost4 = (Inet4Address) InetAddress.getByAddress(LOCALHOST4_BYTES);, +            localhost6 = (Inet6Address) InetAddress.getByAddress(LOCALHOST6_BYTES);, +        // Retrieve the list of available network interfaces., +        List<NetworkInterface> ifaces = new ArrayList<NetworkInterface>();, +        try {, +            for (Enumeration<NetworkInterface> i = NetworkInterface.getNetworkInterfaces(); i.hasMoreElements();) {, +                NetworkInterface iface = i.nextElement();, +                // Use the interface with proper INET addresses only., +                if (iface.getInetAddresses().hasMoreElements()) {, +                    ifaces.add(iface);, +                }, +            }]