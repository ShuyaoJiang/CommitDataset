[+++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, +     * an option with the same key, it is replaced with the new value.  If the, +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, +     * an option with the same key, it is replaced with the new value.  If the, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, + * It is rare to configure the pipeline of a parent channel because what it is, +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, +     * an option with the same key, it is replaced with the new value.  If the, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, + * It is rare to configure the pipeline of a parent channel because what it is, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, + * It does not clear the buffer content (e.g. filling with {@code 0}) but just, +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * does not., +     * while {@link #readBytes(ChannelBuffer, int, int)} does not., +     * does not., +     * {@link #writeBytes(ChannelBuffer, int, int)} does not., +     * of the returned buffer or this buffer does not affect each other at all., +     * the returned buffer or this buffer does not affect each other at all., +     * Please note that it does not compare {@link #readerIndex()} nor, +     * Returns the string representation of this buffer.  This method does not, +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, +     * an option with the same key, it is replaced with the new value.  If the, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, + * It is rare to configure the pipeline of a parent channel because what it is, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, + * It does not clear the buffer content (e.g. filling with {@code 0}) but just, +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * does not., +     * while {@link #readBytes(ChannelBuffer, int, int)} does not., +     * does not., +     * {@link #writeBytes(ChannelBuffer, int, int)} does not., +     * of the returned buffer or this buffer does not affect each other at all., +     * the returned buffer or this buffer does not affect each other at all., +     * Please note that it does not compare {@link #readerIndex()} nor, +     * Returns the string representation of this buffer.  This method does not, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffers.java, + * provided and their name is all {@code copiedBuffer()}.  It is also convenient, +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, +     * an option with the same key, it is replaced with the new value.  If the, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, + * It is rare to configure the pipeline of a parent channel because what it is, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, + * It does not clear the buffer content (e.g. filling with {@code 0}) but just, +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * does not., +     * while {@link #readBytes(ChannelBuffer, int, int)} does not., +     * does not., +     * {@link #writeBytes(ChannelBuffer, int, int)} does not., +     * of the returned buffer or this buffer does not affect each other at all., +     * the returned buffer or this buffer does not affect each other at all., +     * Please note that it does not compare {@link #readerIndex()} nor, +     * Returns the string representation of this buffer.  This method does not, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffers.java, + * provided and their name is all {@code copiedBuffer()}.  It is also convenient, +++ b/src/main/java/org/jboss/netty/buffer/WrappedChannelBuffer.java, + * need to use this interface.  It is used internally in most cases., +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, +     * an option with the same key, it is replaced with the new value.  If the, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, + * It is rare to configure the pipeline of a parent channel because what it is, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, + * It does not clear the buffer content (e.g. filling with {@code 0}) but just, +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * does not., +     * while {@link #readBytes(ChannelBuffer, int, int)} does not., +     * does not., +     * {@link #writeBytes(ChannelBuffer, int, int)} does not., +     * of the returned buffer or this buffer does not affect each other at all., +     * the returned buffer or this buffer does not affect each other at all., +     * Please note that it does not compare {@link #readerIndex()} nor, +     * Returns the string representation of this buffer.  This method does not, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffers.java, + * provided and their name is all {@code copiedBuffer()}.  It is also convenient, +++ b/src/main/java/org/jboss/netty/buffer/WrappedChannelBuffer.java, + * need to use this interface.  It is used internally in most cases., +++ b/src/main/java/org/jboss/netty/channel/AbstractServerChannel.java, + * {@link Channel} does not allow the following operations:, +++ b/src/main/java/org/jboss/netty/bootstrap/Bootstrap.java, +     * an option with the same key, it is replaced with the new value.  If the, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, + * It is rare to configure the pipeline of a parent channel because what it is, +++ b/src/main/java/org/jboss/netty/buffer/ChannelBuffer.java, + * It does not clear the buffer content (e.g. filling with {@code 0}) but just, +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not., +     * {@link #getBytes(int, ChannelBuffer, int, int)} does not.]