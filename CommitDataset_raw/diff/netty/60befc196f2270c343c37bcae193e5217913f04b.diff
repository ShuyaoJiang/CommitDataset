[+++ b/src/main/java/org/jboss/netty/handler/timeout/HashedWheelTimer.java, +    public Timeout newTimeout(TimerTask task, long delay, TimeUnit unit) {, +        final long currentTime = System.nanoTime();, +, +        delay = unit.toNanos(delay);, +        checkDelay(delay);, +        // Prepare the required parameters to create the timeout object., +        final long lastRoundDelay = delay % roundDuration;, +        final long lastTickDelay = delay % tickDuration;, +        final long relativeIndex =, +            lastRoundDelay / tickDuration + (lastTickDelay != 0? 1 : 0);, +        final long deadline = currentTime + delay;, +, +        final long remainingRounds =, +            delay / roundDuration - (delay % roundDuration == 0? 1 : 0);, +, +        // Add the timeout to the wheel., +            timeout =, +                new HashedWheelTimeout(, +                        task, deadline,, +                        (int) (wheelCursor + relativeIndex & mask),, +                        remainingRounds);, +            wheel[timeout.stopIndex].add(timeout);, +        final int stopIndex;, +        final long deadline;, +        volatile long remainingRounds;, +        HashedWheelTimeout(, +                TimerTask task, long deadline, int stopIndex, long remainingRounds) {, +            this.deadline = deadline;, +            this.stopIndex = stopIndex;, +            this.remainingRounds = remainingRounds;, +++ b/src/main/java/org/jboss/netty/handler/timeout/HashedWheelTimer.java, +    public Timeout newTimeout(TimerTask task, long delay, TimeUnit unit) {, +        final long currentTime = System.nanoTime();, +, +        delay = unit.toNanos(delay);, +        checkDelay(delay);, +        // Prepare the required parameters to create the timeout object., +        final long lastRoundDelay = delay % roundDuration;, +        final long lastTickDelay = delay % tickDuration;, +        final long relativeIndex =, +            lastRoundDelay / tickDuration + (lastTickDelay != 0? 1 : 0);, +        final long deadline = currentTime + delay;, +, +        final long remainingRounds =, +            delay / roundDuration - (delay % roundDuration == 0? 1 : 0);, +, +        // Add the timeout to the wheel., +            timeout =, +                new HashedWheelTimeout(, +                        task, deadline,, +                        (int) (wheelCursor + relativeIndex & mask),, +                        remainingRounds);, +            wheel[timeout.stopIndex].add(timeout);, +        final int stopIndex;, +        final long deadline;, +        volatile long remainingRounds;, +        HashedWheelTimeout(, +                TimerTask task, long deadline, int stopIndex, long remainingRounds) {, +            this.deadline = deadline;, +            this.stopIndex = stopIndex;, +            this.remainingRounds = remainingRounds;, +++ b/src/main/java/org/jboss/netty/handler/timeout/Timeout.java, +++ b/src/main/java/org/jboss/netty/handler/timeout/HashedWheelTimer.java, +    public Timeout newTimeout(TimerTask task, long delay, TimeUnit unit) {, +        final long currentTime = System.nanoTime();, +, +        delay = unit.toNanos(delay);, +        checkDelay(delay);, +        // Prepare the required parameters to create the timeout object., +        final long lastRoundDelay = delay % roundDuration;, +        final long lastTickDelay = delay % tickDuration;, +        final long relativeIndex =, +            lastRoundDelay / tickDuration + (lastTickDelay != 0? 1 : 0);, +        final long deadline = currentTime + delay;, +, +        final long remainingRounds =, +            delay / roundDuration - (delay % roundDuration == 0? 1 : 0);, +, +        // Add the timeout to the wheel., +            timeout =, +                new HashedWheelTimeout(, +                        task, deadline,, +                        (int) (wheelCursor + relativeIndex & mask),, +                        remainingRounds);, +            wheel[timeout.stopIndex].add(timeout);, +        final int stopIndex;, +        final long deadline;, +        volatile long remainingRounds;, +        HashedWheelTimeout(, +                TimerTask task, long deadline, int stopIndex, long remainingRounds) {, +            this.deadline = deadline;, +            this.stopIndex = stopIndex;, +            this.remainingRounds = remainingRounds;, +++ b/src/main/java/org/jboss/netty/handler/timeout/Timeout.java, +++ b/src/main/java/org/jboss/netty/handler/timeout/Timer.java, +    Timeout newTimeout(TimerTask task, long delay, TimeUnit unit);]