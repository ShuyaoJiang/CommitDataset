[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     * Returns the CSV of requested subprotocol(s) sent to the server as specified in the constructor, +     * Returns the subprotocol response sent by the server. Only available after end of handshake., +     * Null if no subprotocol was requested or confirmed by the server., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     * Returns the CSV of requested subprotocol(s) sent to the server as specified in the constructor, +     * Returns the subprotocol response sent by the server. Only available after end of handshake., +     * Null if no subprotocol was requested or confirmed by the server., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java, +        String expectedSubprotocol = this.getExpectedSubprotocol(); , +        if (expectedSubprotocol != null && !expectedSubprotocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, expectedSubprotocol);, +, +        String subprotocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(subprotocol);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     * Returns the CSV of requested subprotocol(s) sent to the server as specified in the constructor, +     * Returns the subprotocol response sent by the server. Only available after end of handshake., +     * Null if no subprotocol was requested or confirmed by the server., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java, +        String expectedSubprotocol = this.getExpectedSubprotocol(); , +        if (expectedSubprotocol != null && !expectedSubprotocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, expectedSubprotocol);, +, +        String subprotocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(subprotocol);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java, +        String expectedSubprotocol = getExpectedSubprotocol();, +        if (expectedSubprotocol != null && !expectedSubprotocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, expectedSubprotocol);, +, +        String subprotocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(subprotocol);, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     * Returns the CSV of requested subprotocol(s) sent to the server as specified in the constructor, +     * Returns the subprotocol response sent by the server. Only available after end of handshake., +     * Null if no subprotocol was requested or confirmed by the server., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java, +        String expectedSubprotocol = this.getExpectedSubprotocol(); , +        if (expectedSubprotocol != null && !expectedSubprotocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, expectedSubprotocol);, +, +        String subprotocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(subprotocol);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java, +        String expectedSubprotocol = getExpectedSubprotocol();, +        if (expectedSubprotocol != null && !expectedSubprotocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, expectedSubprotocol);, +, +        String subprotocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(subprotocol);, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker13.java, +        String expectedSubprotocol = getExpectedSubprotocol();, +        if (expectedSubprotocol != null && !expectedSubprotocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, expectedSubprotocol);, +, +        String subprotocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(subprotocol);, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     * Returns the CSV of requested subprotocol(s) sent to the server as specified in the constructor, +     * Returns the subprotocol response sent by the server. Only available after end of handshake., +     * Null if no subprotocol was requested or confirmed by the server., +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java, +        String expectedSubprotocol = this.getExpectedSubprotocol(); , +        if (expectedSubprotocol != null && !expectedSubprotocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, expectedSubprotocol);, +, +        String subprotocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(subprotocol);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java, +        String expectedSubprotocol = getExpectedSubprotocol();, +        if (expectedSubprotocol != null && !expectedSubprotocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, expectedSubprotocol);, +, +        String subprotocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(subprotocol);, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker13.java, +        String expectedSubprotocol = getExpectedSubprotocol();, +        if (expectedSubprotocol != null && !expectedSubprotocol.equals("")) {, +            request.addHeader(Names.SEC_WEBSOCKET_PROTOCOL, expectedSubprotocol);, +, +        String subprotocol = response.getHeader(Names.SEC_WEBSOCKET_PROTOCOL);, +        setActualSubprotocol(subprotocol);, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.java, +    private String selectedSubprotocol = null;, +, +<<<<<<< HEAD, +=======, +     * Returns the max length for any frame's payload, +>>>>>>> abd10d9... Fixed bug where subprotocol not sent by client, +        String[] requestedSubprotocolArray = requestedSubprotocols.split(",");, +        for (String p: requestedSubprotocolArray) {, +, +    /**, +     * Returns the selected subprotocol. Null if no subprotocol has been selected.]