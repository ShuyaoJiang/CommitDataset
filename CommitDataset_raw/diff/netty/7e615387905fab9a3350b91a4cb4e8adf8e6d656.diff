[+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java, +            try {, +            } catch (IOException e) {, +                // Continue on write error as a DatagramChannel can write to multiple remote peers, +                //, +                // See https://github.com/netty/netty/issues/2665, +                in.remove(e);, +            }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java, +            try {, +            } catch (IOException e) {, +                // Continue on write error as a DatagramChannel can write to multiple remote peers, +                //, +                // See https://github.com/netty/netty/issues/2665, +                in.remove(e);, +            }, +++ b/transport/src/main/java/io/netty/channel/nio/AbstractNioMessageChannel.java, +            try {, +            } catch (IOException e) {, +                if (continueOnWriteError()) {, +                    in.remove(e);, +                } else {, +                    throw e;, +        }, +    }, +, +    /**, +     * Returns {@code true} if we should continue the write loop on a write error., +     */, +    protected boolean continueOnWriteError() {, +        return false;, +    }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java, +            try {, +            } catch (IOException e) {, +                // Continue on write error as a DatagramChannel can write to multiple remote peers, +                //, +                // See https://github.com/netty/netty/issues/2665, +                in.remove(e);, +            }, +++ b/transport/src/main/java/io/netty/channel/nio/AbstractNioMessageChannel.java, +            try {, +            } catch (IOException e) {, +                if (continueOnWriteError()) {, +                    in.remove(e);, +                } else {, +                    throw e;, +        }, +    }, +, +    /**, +     * Returns {@code true} if we should continue the write loop on a write error., +     */, +    protected boolean continueOnWriteError() {, +        return false;, +    }, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioDatagramChannel.java, +    protected boolean continueOnWriteError() {, +        // Continue on write error as a DatagramChannel can write to multiple remote peers, +        //, +        // See https://github.com/netty/netty/issues/2665, +        return true;, +    }, +, +    @Override, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java, +            try {, +            } catch (IOException e) {, +                // Continue on write error as a DatagramChannel can write to multiple remote peers, +                //, +                // See https://github.com/netty/netty/issues/2665, +                in.remove(e);, +            }, +++ b/transport/src/main/java/io/netty/channel/nio/AbstractNioMessageChannel.java, +            try {, +            } catch (IOException e) {, +                if (continueOnWriteError()) {, +                    in.remove(e);, +                } else {, +                    throw e;, +        }, +    }, +, +    /**, +     * Returns {@code true} if we should continue the write loop on a write error., +     */, +    protected boolean continueOnWriteError() {, +        return false;, +    }, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioDatagramChannel.java, +    protected boolean continueOnWriteError() {, +        // Continue on write error as a DatagramChannel can write to multiple remote peers, +        //, +        // See https://github.com/netty/netty/issues/2665, +        return true;, +    }, +, +    @Override, +++ b/transport/src/main/java/io/netty/channel/socket/oio/OioDatagramChannel.java, +            try {]