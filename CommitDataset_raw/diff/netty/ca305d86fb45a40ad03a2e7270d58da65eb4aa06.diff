[+++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +        if (!hasUnsafe() || !PlatformDependent0.unalignedAccess()) {, +        } else if (PlatformDependent0.hasCharArray(bytes)) {, +            return PlatformDependent0.hashCodeAscii(PlatformDependent0.charArray(bytes));, +        } else if (PlatformDependent0.hasByteArray(bytes)) {, +            return PlatformDependent0.hashCodeAscii(PlatformDependent0.byteArray(bytes));, +        return hashCodeAsciiSafe(bytes);, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent.java, +        if (!hasUnsafe() || !PlatformDependent0.unalignedAccess()) {, +        } else if (PlatformDependent0.hasCharArray(bytes)) {, +            return PlatformDependent0.hashCodeAscii(PlatformDependent0.charArray(bytes));, +        } else if (PlatformDependent0.hasByteArray(bytes)) {, +            return PlatformDependent0.hashCodeAscii(PlatformDependent0.byteArray(bytes));, +        return hashCodeAsciiSafe(bytes);, +++ b/common/src/main/java/io/netty/util/internal/PlatformDependent0.java, +    private static final long STRING_CHAR_VALUE_FIELD_OFFSET;, +    private static final long STRING_BYTE_VALUE_FIELD_OFFSET;, +            STRING_CHAR_VALUE_FIELD_OFFSET = STRING_BYTE_VALUE_FIELD_OFFSET = -1;, +, +            if (stringValueField == null) {, +                STRING_CHAR_VALUE_FIELD_OFFSET = STRING_BYTE_VALUE_FIELD_OFFSET = -1;, +            } else {, +                long stringValueFieldOffset = UNSAFE.objectFieldOffset(stringValueField);, +                Object o = UNSAFE.getObject("", stringValueFieldOffset);, +                if (char[].class.isInstance(o)) {, +                    STRING_CHAR_VALUE_FIELD_OFFSET = stringValueFieldOffset;, +                    STRING_BYTE_VALUE_FIELD_OFFSET = -1;, +                } else if (byte[].class.isInstance(o)) {, +                    STRING_CHAR_VALUE_FIELD_OFFSET = -1;, +                    STRING_BYTE_VALUE_FIELD_OFFSET = stringValueFieldOffset;, +                } else {, +                    STRING_CHAR_VALUE_FIELD_OFFSET = STRING_BYTE_VALUE_FIELD_OFFSET = -1;, +                    logger.info("Unexpected type [" + o.getClass() + "] for String value array." +, +                            "String hash code optimizations are disabled.");, +                }, +            }, +    static int hashCodeAscii(byte[] bytes) {, +        return hashCodeAscii(bytes, 0, bytes.length);, +    }, +, +    static boolean hasCharArray(CharSequence data) {, +        return STRING_CHAR_VALUE_FIELD_OFFSET != -1 && data.getClass() == String.class;, +    }, +, +    static boolean hasByteArray(CharSequence data) {, +        return STRING_BYTE_VALUE_FIELD_OFFSET != -1 && data.getClass() == String.class;, +    }, +, +    /**, +     * Callers are expected to call {@link #hasCharArray(CharSequence)} before calling this method., +     */, +    static char[] charArray(CharSequence data) {, +        return (char[]) UNSAFE.getObject(data, STRING_CHAR_VALUE_FIELD_OFFSET);, +    }, +, +    /**, +     * Callers are expected to call {@link #hasByteArray(CharSequence)} before calling this method., +     */, +    static byte[] byteArray(CharSequence data) {, +        return (byte[]) UNSAFE.getObject(data, STRING_BYTE_VALUE_FIELD_OFFSET);]