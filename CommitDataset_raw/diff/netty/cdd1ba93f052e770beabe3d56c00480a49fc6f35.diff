[+++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket00FrameDecoder.java, +    private final int maxFrameSize;, +    public WebSocket00FrameDecoder(int maxFrameSize) {, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket00FrameDecoder.java, +    private final int maxFrameSize;, +    public WebSocket00FrameDecoder(int maxFrameSize) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder.java, +     * Constructor, +            int willHaveReadByteCount = framePayloadBytesRead + rbytes;, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket00FrameDecoder.java, +    private final int maxFrameSize;, +    public WebSocket00FrameDecoder(int maxFrameSize) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder.java, +     * Constructor, +            int willHaveReadByteCount = framePayloadBytesRead + rbytes;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket13FrameDecoder.java, +     * Constructor, +        super(maskedPayload, allowExtensions);, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket00FrameDecoder.java, +    private final int maxFrameSize;, +    public WebSocket00FrameDecoder(int maxFrameSize) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder.java, +     * Constructor, +            int willHaveReadByteCount = framePayloadBytesRead + rbytes;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket13FrameDecoder.java, +     * Constructor, +        super(maskedPayload, allowExtensions);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     * Base constructor, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket00FrameDecoder.java, +    private final int maxFrameSize;, +    public WebSocket00FrameDecoder(int maxFrameSize) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket08FrameDecoder.java, +     * Constructor, +            int willHaveReadByteCount = framePayloadBytesRead + rbytes;, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket13FrameDecoder.java, +     * Constructor, +        super(maskedPayload, allowExtensions);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java, +     * Base constructor, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java, +     * Constructor specifying the destination web socket location and version to initiate, +        super(webSocketURL, version, subprotocol, customHeaders);, +        request.addHeader(Names.ORIGIN, "http://" + wsURL.getHost());, +        channel.getPipeline().replace(HttpResponseDecoder.class, "ws-decoder", new WebSocket00FrameDecoder());, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +        this(4096, 8192, 8192);, +            return super.encode(ctx, channel, msg);, +                return super.decode(ctx, channel, buffer, state);]