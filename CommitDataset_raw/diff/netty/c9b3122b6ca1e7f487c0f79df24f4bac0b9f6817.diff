[+++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultCookie.java, +                        "name contains one of the following prohibited characters: " +, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultCookie.java, +                        "name contains one of the following prohibited characters: " +, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpMessage.java, +import java.util.LinkedList;, +        validateHeaderName(name);, +        validateHeaderValue(value);, +        validateHeaderName(name);, +        validateHeaderValue(value);, +    public void setHeader(final String name, final Iterable<String> values) {, +        validateHeaderName(name);, +        if (values == null) {, +            throw new NullPointerException("values");, +, +        int nValues = 0;, +        for (String v: values) {, +            validateHeaderValue(v);, +            nValues ++;, +        }, +, +        if (nValues == 0) {, +            throw new IllegalArgumentException("values is empty.");, +        }, +, +        if (values instanceof List) {, +            headers.put(name, (List<String>) values);, +        } else {, +            List<String> valueList = new LinkedList<String>();, +            for (String v: values) {, +                valueList.add(v);, +            }, +            headers.put(name, valueList);, +        }, +    }, +, +    private static void validateHeaderName(String name) {, +        if (name == null) {, +            throw new NullPointerException("name");, +        }, +        for (int i = 0; i < name.length(); i ++) {, +            char c = name.charAt(i);, +            if (c > 127) {, +                throw new IllegalArgumentException(, +                        "name contains non-ascii character: " + name);, +            }, +, +            // Check prohibited characters., +            switch (c) {, +            case '=':  case ',':  case ';': case ' ': case ':':, +            case '\t': case '\r': case '\n': case '\f':, +            case 0x0b: // Vertical tab, +                throw new IllegalArgumentException(, +                        "name contains one of the following prohibited characters: " +, +                        "=,;: \\t\\r\\n\\v\\f: " + name);, +            }, +        }, +    }, +, +    private static void validateHeaderValue(String value) {, +        if (value == null) {, +            throw new NullPointerException("value");, +        }, +        for (int i = 0; i < value.length(); i ++) {, +            char c = value.charAt(i);, +            // Check prohibited characters., +            switch (c) {, +            case '\r': case '\n': case '\f':, +            case 0x0b: // Vertical tab, +                throw new IllegalArgumentException(, +                        "value contains one of the following prohibited characters: " +, +                        "\\r\\n\\v\\f: " + value);, +            }, +        }, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultCookie.java, +                        "name contains one of the following prohibited characters: " +, +++ b/src/main/java/org/jboss/netty/handler/codec/http/DefaultHttpMessage.java, +import java.util.LinkedList;, +        validateHeaderName(name);, +        validateHeaderValue(value);, +        validateHeaderName(name);, +        validateHeaderValue(value);, +    public void setHeader(final String name, final Iterable<String> values) {, +        validateHeaderName(name);, +        if (values == null) {, +            throw new NullPointerException("values");, +, +        int nValues = 0;, +        for (String v: values) {, +            validateHeaderValue(v);, +            nValues ++;, +        }, +, +        if (nValues == 0) {, +            throw new IllegalArgumentException("values is empty.");, +        }, +, +        if (values instanceof List) {, +            headers.put(name, (List<String>) values);, +        } else {]