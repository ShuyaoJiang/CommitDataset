[+++ b/buffer/src/main/java/io/netty/buffer/UnreleasableByteBuf.java, +import io.netty.util.internal.StringUtil;, +, + * A {@link ByteBuf} implementation that wraps another buffer to prevent a user from increasing or decreasing the, + * wrapped buffer's reference count., +, +    private SwappedByteBuf swappedBuf;, +        buf.capacity(newCapacity);, +        return this;, +        if (endianness == null) {, +            throw new NullPointerException("endianness");, +        }, +        if (endianness == order()) {, +            return this;, +        }, +, +        SwappedByteBuf swappedBuf = this.swappedBuf;, +        if (swappedBuf == null) {, +            this.swappedBuf = swappedBuf = new SwappedByteBuf(this);, +        }, +        return swappedBuf;, +        buf.readerIndex(readerIndex);, +        return this;, +        buf.writerIndex(writerIndex);, +        return this;, +        buf.setIndex(readerIndex, writerIndex);, +        return this;, +        buf.clear();, +        return this;, +        buf.markReaderIndex();, +        return this;, +        buf.resetReaderIndex();, +        return this;, +        buf.markWriterIndex();, +        return this;, +        buf.resetWriterIndex();, +        return this;, +        buf.discardReadBytes();, +        return this;, +        buf.discardSomeReadBytes();, +        return this;, +        buf.ensureWritable(minWritableBytes);, +        return this;, +        buf.ensureWritableBytes(minWritableBytes);, +        return this;, +        buf.getBytes(index, dst);, +        return this;, +        buf.getBytes(index, dst, length);, +        return this;, +        buf.getBytes(index, dst, dstIndex, length);, +        return this;, +        buf.getBytes(index, dst);, +        return this;, +        buf.getBytes(index, dst, dstIndex, length);, +        return this;, +        buf.getBytes(index, dst);, +        return this;, +        buf.getBytes(index, out, length);, +        return this;, +        buf.setBoolean(index, value);, +        return this;, +        buf.setByte(index, value);, +        return this;, +        buf.setShort(index, value);, +        return this;, +        buf.setMedium(index, value);, +        return this;, +        buf.setInt(index, value);, +        return this;, +        buf.setLong(index, value);, +        return this;, +        buf.setChar(index, value);, +        return this;, +        buf.setFloat(index, value);, +        return this;, +        buf.setDouble(index, value);, +        return this;, +        buf.setBytes(index, src);, +        return this;, +        buf.setBytes(index, src, length);, +        return this;, +        buf.setBytes(index, src, srcIndex, length);, +        return this;, +        buf.setBytes(index, src);, +        return this;, +        buf.setBytes(index, src, srcIndex, length);, +        return this;, +        buf.setBytes(index, src);, +        return this;, +        buf.setZero(index, length);, +        return this;, +        return new UnreleasableByteBuf(buf.readSlice(length));, +        buf.readBytes(dst);, +        return this;, +        buf.readBytes(dst, length);, +        return this;, +        buf.readBytes(dst, dstIndex, length);, +        return this;, +        buf.readBytes(dst);, +        return this;]