[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java, +        if (name.isEmpty()) {, +        if (value.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java, +        if (name.isEmpty()) {, +        if (value.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMessageDecoder.java, +        if (line.isEmpty()) {, +            } while (!line.isEmpty());, +        if (!line.isEmpty()) {, +                    if (!current.isEmpty()) {, +            } while (!line.isEmpty());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java, +        if (name.isEmpty()) {, +        if (value.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMessageDecoder.java, +        if (line.isEmpty()) {, +            } while (!line.isEmpty());, +        if (!line.isEmpty()) {, +                    if (!current.isEmpty()) {, +            } while (!line.isEmpty());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMethod.java, +        if (name.isEmpty()) {, +        if (name.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java, +        if (name.isEmpty()) {, +        if (value.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMessageDecoder.java, +        if (line.isEmpty()) {, +            } while (!line.isEmpty());, +        if (!line.isEmpty()) {, +                    if (!current.isEmpty()) {, +            } while (!line.isEmpty());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMethod.java, +        if (name.isEmpty()) {, +        if (name.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java, +        if (text.isEmpty()) {, +        if (protocolName.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java, +        if (name.isEmpty()) {, +        if (value.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMessageDecoder.java, +        if (line.isEmpty()) {, +            } while (!line.isEmpty());, +        if (!line.isEmpty()) {, +                    if (!current.isEmpty()) {, +            } while (!line.isEmpty());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMethod.java, +        if (name.isEmpty()) {, +        if (name.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java, +        if (text.isEmpty()) {, +        if (protocolName.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractHttpData.java, +import java.nio.charset.Charset;, +, +        if (name.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java, +        if (name.isEmpty()) {, +        if (value.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMessageDecoder.java, +        if (line.isEmpty()) {, +            } while (!line.isEmpty());, +        if (!line.isEmpty()) {, +                    if (!current.isEmpty()) {, +            } while (!line.isEmpty());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMethod.java, +        if (name.isEmpty()) {, +        if (name.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java, +        if (text.isEmpty()) {, +        if (protocolName.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractHttpData.java, +import java.nio.charset.Charset;, +, +        if (name.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +        return !bodyListHttpData.isEmpty() && bodyListHttpDataRank < bodyListHttpData.size();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java, +        if (name.isEmpty()) {, +        if (value.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMessageDecoder.java, +        if (line.isEmpty()) {, +            } while (!line.isEmpty());, +        if (!line.isEmpty()) {, +                    if (!current.isEmpty()) {, +            } while (!line.isEmpty());, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpMethod.java, +        if (name.isEmpty()) {, +        if (name.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java, +        if (text.isEmpty()) {, +        if (protocolName.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractHttpData.java, +import java.nio.charset.Charset;, +, +        if (name.isEmpty()) {, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java, +        return !bodyListHttpData.isEmpty() && bodyListHttpDataRank < bodyListHttpData.size();]