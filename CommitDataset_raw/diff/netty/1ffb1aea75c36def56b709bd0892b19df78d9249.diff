[+++ b/src/main/java/org/jboss/netty/handler/ipfilter/CIDR.java, +/*, + * Copyright 2009 Red Hat, Inc., + *, + * Red Hat licenses this file to you under the Apache License, version 2.0, + * (the "License"); you may not use this file except in compliance with the, + * License.  You may obtain a copy of the License at:, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package org.jboss.netty.handler.ipfilter;, +, +import java.net.Inet4Address;, +import java.net.Inet6Address;, +import java.net.InetAddress;, +import java.net.UnknownHostException;, +import java.util.StringTokenizer;, +, +/**, + * @author frederic bregier, + */, +public abstract class CIDR implements Comparable<CIDR>, +{, +   /**, +    * The base address of the CIDR notation, +    */, +   protected InetAddress baseAddress;, +, +   /**, +    * The mask used in the CIDR notation, +    */, +   protected int cidrMask;, +, +   /**, +    * Create CIDR using the CIDR Notation, +    * @param baseAddress, +    * @param cidrMask, +    * @return the generated CIDR, +    * @throws UnknownHostException, +    */, +   public static CIDR newCIDR(InetAddress baseAddress, int cidrMask) throws UnknownHostException, +   {, +      if (cidrMask < 0), +      {, +         throw new UnknownHostException("Invalid mask length used: " + cidrMask);, +      }, +      if (baseAddress instanceof Inet4Address), +      {, +         if (cidrMask > 32), +         {, +            throw new UnknownHostException("Invalid mask length used: " + cidrMask);, +         }, +         return new CIDR4((Inet4Address) baseAddress, cidrMask);, +      }, +      // IPv6., +      if (cidrMask > 128), +      {, +         throw new UnknownHostException("Invalid mask length used: " + cidrMask);, +      }, +      return new CIDR6((Inet6Address) baseAddress, cidrMask);, +   }, +, +   /**, +    * Create CIDR using the normal Notation, +    * @param baseAddress, +    * @param scidrMask, +    * @return the generated CIDR, +    * @throws UnknownHostException, +    */, +   public static CIDR newCIDR(InetAddress baseAddress, String scidrMask) throws UnknownHostException, +   {, +      int cidrMask = getNetMask(scidrMask);, +      if (cidrMask < 0), +      {, +         throw new UnknownHostException("Invalid mask length used: " + cidrMask);, +      }, +      if (baseAddress instanceof Inet4Address), +      {, +         if (cidrMask > 32), +         {, +            throw new UnknownHostException("Invalid mask length used: " + cidrMask);, +         }, +         return new CIDR4((Inet4Address) baseAddress, cidrMask);, +      }, +      cidrMask += 96;, +      // IPv6., +      if (cidrMask > 128), +      {, +         throw new UnknownHostException("Invalid mask length used: " + cidrMask);, +      }, +      return new CIDR6((Inet6Address) baseAddress, cidrMask);, +   }, +, +   /**]