[+++ b/common/src/main/java/io/netty/util/AbstractConstant.java, +import io.netty.util.internal.PlatformDependent;, +import io.netty.util.internal.ThreadLocalRandom;, +, +import java.nio.ByteBuffer;, +, +    private volatile long uniquifier;, +    private ByteBuffer directBuffer;, +    public final String toString() {, +        return name();, +    }, +, +    @Override, +    public final boolean equals(Object obj) {, +        return super.equals(obj);, +    public final int compareTo(T o) {, +        if (this == o) {, +        @SuppressWarnings("UnnecessaryLocalVariable"), +        AbstractConstant<T> other = o;, +        int returnCode;, +, +        returnCode = hashCode() - other.hashCode();, +        long thisUV = uniquifier();, +        long otherUV = other.uniquifier();, +        if (thisUV < otherUV) {, +            return -1;, +        }, +        if (thisUV > otherUV) {, +            return 1;, +        throw new Error("failed to compare two different constants");, +    }, +, +    private long uniquifier() {, +        long uniquifier;, +        if ((uniquifier = this.uniquifier) == 0) {, +            synchronized (this) {, +                while ((uniquifier = this.uniquifier) == 0) {, +                    if (PlatformDependent.hasUnsafe()) {, +                        directBuffer = ByteBuffer.allocateDirect(1);, +                        this.uniquifier = PlatformDependent.directBufferAddress(directBuffer);, +                    } else {, +                        directBuffer = null;, +                        this.uniquifier = ThreadLocalRandom.current().nextLong();, +                    }, +                }, +            }, +        }, +, +        return uniquifier;, +++ b/common/src/main/java/io/netty/util/AbstractConstant.java, +import io.netty.util.internal.PlatformDependent;, +import io.netty.util.internal.ThreadLocalRandom;, +, +import java.nio.ByteBuffer;, +, +    private volatile long uniquifier;, +    private ByteBuffer directBuffer;, +    public final String toString() {, +        return name();, +    }, +, +    @Override, +    public final boolean equals(Object obj) {, +        return super.equals(obj);, +    public final int compareTo(T o) {, +        if (this == o) {, +        @SuppressWarnings("UnnecessaryLocalVariable"), +        AbstractConstant<T> other = o;, +        int returnCode;, +, +        returnCode = hashCode() - other.hashCode();, +        long thisUV = uniquifier();, +        long otherUV = other.uniquifier();, +        if (thisUV < otherUV) {, +            return -1;, +        }, +        if (thisUV > otherUV) {, +            return 1;, +        throw new Error("failed to compare two different constants");, +    }, +, +    private long uniquifier() {, +        long uniquifier;, +        if ((uniquifier = this.uniquifier) == 0) {, +            synchronized (this) {, +                while ((uniquifier = this.uniquifier) == 0) {, +                    if (PlatformDependent.hasUnsafe()) {, +                        directBuffer = ByteBuffer.allocateDirect(1);, +                        this.uniquifier = PlatformDependent.directBufferAddress(directBuffer);, +                    } else {, +                        directBuffer = null;, +                        this.uniquifier = ThreadLocalRandom.current().nextLong();, +                    }, +                }, +            }, +        }, +, +        return uniquifier;, +++ b/common/src/main/java/io/netty/util/Signal.java, +    private final SignalConstant constant;]