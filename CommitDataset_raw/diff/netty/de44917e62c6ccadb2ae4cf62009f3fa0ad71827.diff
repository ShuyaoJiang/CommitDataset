[+++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +import io.netty.util.Recycler;, +            executor.execute(WriteTask.newInstance(next, msg, promise));, +, +    static final class WriteTask implements Runnable {, +        private DefaultChannelHandlerContext ctx;, +        private Object msg;, +        private ChannelPromise promise;, +, +        private static final Recycler<WriteTask> RECYCLER = new Recycler<WriteTask>() {, +            @Override, +            protected WriteTask newObject(Handle handle) {, +                return new WriteTask(handle);, +            }, +        };, +, +        private static WriteTask newInstance(DefaultChannelHandlerContext ctx, Object msg, ChannelPromise promise) {, +            WriteTask task = RECYCLER.get();, +            task.ctx = ctx;, +            task.msg = msg;, +            task.promise = promise;, +            return task;, +        }, +, +        private final Recycler.Handle handle;, +, +        private WriteTask(Recycler.Handle handle) {, +            this.handle = handle;, +        }, +, +        @Override, +        public void run() {, +            try {, +                ctx.invokeWrite(msg, promise);, +            } finally {, +                // Set to null so the GC can collect them directly, +                ctx = null;, +                msg = null;, +                promise = null;, +, +                RECYCLER.recycle(this, handle);, +            }, +        }, +    }]