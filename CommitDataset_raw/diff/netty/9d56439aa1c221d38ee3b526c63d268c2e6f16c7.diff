[+++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, + * A NIO {@link ByteBuffer} based buffer. It is recommended to use, + * {@link UnpooledByteBufAllocator#directBuffer(int, int)}, {@link Unpooled#directBuffer(int)} and, + * {@link Unpooled#wrappedBuffer(ByteBuffer)} instead of calling the constructor explicitly., +    public UnpooledDirectByteBuf(ByteBufAllocator alloc, int initialCapacity, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, + * A NIO {@link ByteBuffer} based buffer. It is recommended to use, + * {@link UnpooledByteBufAllocator#directBuffer(int, int)}, {@link Unpooled#directBuffer(int)} and, + * {@link Unpooled#wrappedBuffer(ByteBuffer)} instead of calling the constructor explicitly., +    public UnpooledDirectByteBuf(ByteBufAllocator alloc, int initialCapacity, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledHeapByteBuf.java, + * Big endian Java heap buffer implementation. It is recommended to use, + * {@link UnpooledByteBufAllocator#heapBuffer(int, int)}, {@link Unpooled#buffer(int)} and, + * {@link Unpooled#wrappedBuffer(byte[])} instead of calling the constructor explicitly., +    public UnpooledHeapByteBuf(ByteBufAllocator alloc, int initialCapacity, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java, + * A NIO {@link ByteBuffer} based buffer. It is recommended to use, + * {@link UnpooledByteBufAllocator#directBuffer(int, int)}, {@link Unpooled#directBuffer(int)} and, + * {@link Unpooled#wrappedBuffer(ByteBuffer)} instead of calling the constructor explicitly., +    public UnpooledDirectByteBuf(ByteBufAllocator alloc, int initialCapacity, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledHeapByteBuf.java, + * Big endian Java heap buffer implementation. It is recommended to use, + * {@link UnpooledByteBufAllocator#heapBuffer(int, int)}, {@link Unpooled#buffer(int)} and, + * {@link Unpooled#wrappedBuffer(byte[])} instead of calling the constructor explicitly., +    public UnpooledHeapByteBuf(ByteBufAllocator alloc, int initialCapacity, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/UnpooledUnsafeDirectByteBuf.java, + * A NIO {@link ByteBuffer} based buffer. It is recommended to use, + * {@link UnpooledByteBufAllocator#directBuffer(int, int)}, {@link Unpooled#directBuffer(int)} and, + * {@link Unpooled#wrappedBuffer(ByteBuffer)} instead of calling the constructor explicitly.}, +    public UnpooledUnsafeDirectByteBuf(ByteBufAllocator alloc, int initialCapacity, int maxCapacity) {]