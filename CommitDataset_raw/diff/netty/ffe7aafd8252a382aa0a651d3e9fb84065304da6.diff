[+++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +        ensureWritable0(minWritableBytes);, +    private void ensureWritable0(int minWritableBytes) {, +        if (minWritableBytes <= writableBytes()) {, +            return;, +        }, +, +            _setLong(index, 0);, +            _setInt(index, 0);, +            // Not need to update the index as we not will use it after this., +                _setByte(index, (byte) 0);, +            _setInt(index, 0);, +                _setByte(index, (byte) 0);, +        checkReadableBytes0(1);, +        byte b = _getByte(i);, +        checkReadableBytes0(2);, +        checkReadableBytes0(3);, +        checkReadableBytes0(4);, +        checkReadableBytes0(8);, +        ensureWritable0(1);, +        ensureWritable0(2);, +        ensureWritable0(3);, +        ensureWritable0(4);, +        ensureWritable0(8);, +        int wIndex = writerIndex;, +        checkIndex(wIndex, length);, +            _setLong(wIndex, 0);, +            wIndex += 8;, +            _setInt(wIndex, 0);, +            wIndex += 4;, +                _setByte(wIndex, (byte) 0);, +                wIndex++;, +            _setInt(wIndex, 0);, +            wIndex += 4;, +                _setByte(wIndex, (byte) 0);, +                wIndex++;, +        writerIndex = wIndex;, +        checkIndex(index, 1);, +        if (isInvalid(index, fieldLength, capacity())) {, +        if (isInvalid(srcIndex, length, srcCapacity)) {, +        if (isInvalid(dstIndex, length, dstCapacity)) {, +    private static boolean isInvalid(int index, int length, int capacity) {, +        return (index | length | (index + length) | (capacity - (index + length))) < 0;, +    }, +, +        checkReadableBytes0(minimumReadableBytes);, +    }, +, +    private void checkReadableBytes0(int minimumReadableBytes) {, +        ensureAccessible();]