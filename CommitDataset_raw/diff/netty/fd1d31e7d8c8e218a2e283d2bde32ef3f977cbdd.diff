[+++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +import gnu.io.CommPort;, +import gnu.io.CommPortIdentifier;, +import gnu.io.SerialPort;, +import static io.netty.channel.rxtx.RxtxChannelOption.*;, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +import gnu.io.CommPort;, +import gnu.io.CommPortIdentifier;, +import gnu.io.SerialPort;, +import static io.netty.channel.rxtx.RxtxChannelOption.*;, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            if (task == null) {, +                flushNotifierAndFlush(promise);, +            } else {, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +import gnu.io.CommPort;, +import gnu.io.CommPortIdentifier;, +import gnu.io.SerialPort;, +import static io.netty.channel.rxtx.RxtxChannelOption.*;, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            if (task == null) {, +                flushNotifierAndFlush(promise);, +            } else {, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +import gnu.io.CommPort;, +import gnu.io.CommPortIdentifier;, +import gnu.io.SerialPort;, +import static io.netty.channel.rxtx.RxtxChannelOption.*;, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            if (task == null) {, +                flushNotifierAndFlush(promise);, +            } else {, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +     *         use {@link DatagramPacket#recipient()} to determine, +     * Returns an <em>internal-use-only</em> object that provides unsafe operations., +     * <em>Unsafe</em> operations that should <em>never</em> be called from user-code. These methods, +     * are only provided to implement the actual transport, and must be invoked from an I/O thread except for the, +     * following methods:, +     * <ul>, +     *   <li>{@link #headContext()}</li>, +     *   <li>{@link #voidFuture()}</li>, +     *   <li>{@link #localAddress()}</li>, +     *   <li>{@link #remoteAddress()}</li>, +     *   <li>{@link #closeForcibly()}</li>, +     *   <li>{@link #register(EventLoop, ChannelPromise)}</li>, +     * </ul>, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +import gnu.io.CommPort;, +import gnu.io.CommPortIdentifier;, +import gnu.io.SerialPort;, +import static io.netty.channel.rxtx.RxtxChannelOption.*;, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            if (task == null) {, +                flushNotifierAndFlush(promise);, +            } else {, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +     *         use {@link DatagramPacket#recipient()} to determine, +     * Returns an <em>internal-use-only</em> object that provides unsafe operations., +     * <em>Unsafe</em> operations that should <em>never</em> be called from user-code. These methods, +     * are only provided to implement the actual transport, and must be invoked from an I/O thread except for the, +     * following methods:, +     * <ul>, +     *   <li>{@link #headContext()}</li>, +     *   <li>{@link #voidFuture()}</li>, +     *   <li>{@link #localAddress()}</li>, +     *   <li>{@link #remoteAddress()}</li>, +     *   <li>{@link #closeForcibly()}</li>, +     *   <li>{@link #register(EventLoop, ChannelPromise)}</li>, +     * </ul>, +++ b/transport/src/main/java/io/netty/channel/aio/AbstractAioChannel.java, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +import gnu.io.CommPort;, +import gnu.io.CommPortIdentifier;, +import gnu.io.SerialPort;, +import static io.netty.channel.rxtx.RxtxChannelOption.*;, +++ b/transport/src/main/java/io/netty/channel/AbstractChannel.java, +            if (task == null) {, +                flushNotifierAndFlush(promise);, +            } else {, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +     *         use {@link DatagramPacket#recipient()} to determine, +     * Returns an <em>internal-use-only</em> object that provides unsafe operations., +     * <em>Unsafe</em> operations that should <em>never</em> be called from user-code. These methods, +     * are only provided to implement the actual transport, and must be invoked from an I/O thread except for the, +     * following methods:, +     * <ul>, +     *   <li>{@link #headContext()}</li>, +     *   <li>{@link #voidFuture()}</li>, +     *   <li>{@link #localAddress()}</li>, +     *   <li>{@link #remoteAddress()}</li>, +     *   <li>{@link #closeForcibly()}</li>, +     *   <li>{@link #register(EventLoop, ChannelPromise)}</li>, +     * </ul>, +++ b/transport/src/main/java/io/netty/channel/aio/AbstractAioChannel.java, +++ b/transport/src/main/java/io/netty/channel/local/LocalChannel.java, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java]