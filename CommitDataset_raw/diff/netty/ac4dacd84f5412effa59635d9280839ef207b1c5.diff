[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +import io.netty.buffer.CompositeByteBuf;, +    public static final int DEFAULT_MAX_COMPOSITEBUFFER_COMPONENTS = 1024;, +    private int maxCumulationBufferComponents = DEFAULT_MAX_COMPOSITEBUFFER_COMPONENTS;, +    private ChannelHandlerContext ctx;, +, +    /**, +     * Returns the maximum number of components in the cumulation buffer.  If the number of, +     * the components in the cumulation buffer exceeds this value, the components of the, +     * cumulation buffer are consolidated into a single component, involving memory copies., +     * The default value of this property is {@link #DEFAULT_MAX_COMPOSITEBUFFER_COMPONENTS}., +     */, +    public final int getMaxCumulationBufferComponents() {, +        return maxCumulationBufferComponents;, +    }, +, +    /**, +     * Sets the maximum number of components in the cumulation buffer.  If the number of, +     * the components in the cumulation buffer exceeds this value, the components of the, +     * cumulation buffer are consolidated into a single component, involving memory copies., +     * The default value of this property is {@link #DEFAULT_MAX_COMPOSITEBUFFER_COMPONENTS}, +     * and its minimum allowed value is {@code 2}., +     */, +    public final void setMaxCumulationBufferComponents(int maxCumulationBufferComponents) {, +        if (maxCumulationBufferComponents < 2) {, +            throw new IllegalArgumentException(, +                    "maxCumulationBufferComponents: " + maxCumulationBufferComponents +, +                    " (expected: >= 2)");, +        }, +, +        if (ctx == null) {, +            this.maxCumulationBufferComponents = maxCumulationBufferComponents;, +        } else {, +            throw new IllegalStateException(, +                    "decoder properties cannot be changed once the decoder is added to a pipeline.");, +        }, +    }, +, +            // Append the content of the chunk, +            appendToCumulation(chunk.getContent());, +, +, +    protected void appendToCumulation(ByteBuf input) {, +        ByteBuf cumulation = this.currentMessage.getContent();, +        if (cumulation instanceof CompositeByteBuf) {, +            // Make sure the resulting cumulation buffer has no more than 4 components., +            CompositeByteBuf composite = (CompositeByteBuf) cumulation;, +            if (composite.numComponents() >= maxCumulationBufferComponents) {, +                currentMessage.setContent(Unpooled.wrappedBuffer(composite.copy(), input));, +            } else {, +                List<ByteBuf> decomposed = composite.decompose(0, composite.readableBytes());, +                ByteBuf[] buffers = decomposed.toArray(new ByteBuf[decomposed.size() + 1]);, +                buffers[buffers.length - 1] = input;, +, +                currentMessage.setContent(Unpooled.wrappedBuffer(buffers));, +            }, +        } else {, +            currentMessage.setContent(Unpooled.wrappedBuffer(cumulation, input));, +        }, +, +    }, +, +    public void beforeAdd(ChannelHandlerContext ctx) throws Exception {, +        this.ctx = ctx;, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +import io.netty.buffer.CompositeByteBuf;, +    public static final int DEFAULT_MAX_COMPOSITEBUFFER_COMPONENTS = 1024;, +    private int maxCumulationBufferComponents = DEFAULT_MAX_COMPOSITEBUFFER_COMPONENTS;, +    private ChannelHandlerContext ctx;, +, +    /**, +     * Returns the maximum number of components in the cumulation buffer.  If the number of, +     * the components in the cumulation buffer exceeds this value, the components of the, +     * cumulation buffer are consolidated into a single component, involving memory copies., +     * The default value of this property is {@link #DEFAULT_MAX_COMPOSITEBUFFER_COMPONENTS}., +     */, +    public final int getMaxCumulationBufferComponents() {, +        return maxCumulationBufferComponents;, +    }, +, +    /**, +     * Sets the maximum number of components in the cumulation buffer.  If the number of, +     * the components in the cumulation buffer exceeds this value, the components of the, +     * cumulation buffer are consolidated into a single component, involving memory copies., +     * The default value of this property is {@link #DEFAULT_MAX_COMPOSITEBUFFER_COMPONENTS}, +     * and its minimum allowed value is {@code 2}., +     */, +    public final void setMaxCumulationBufferComponents(int maxCumulationBufferComponents) {, +        if (maxCumulationBufferComponents < 2) {, +            throw new IllegalArgumentException(, +                    "maxCumulationBufferComponents: " + maxCumulationBufferComponents +, +                    " (expected: >= 2)");, +        }, +, +        if (ctx == null) {, +            this.maxCumulationBufferComponents = maxCumulationBufferComponents;, +        } else {, +            throw new IllegalStateException(]