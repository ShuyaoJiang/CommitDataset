[+++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketFileRegionTest.java, +import io.netty.channel.ChannelInboundHandlerAdapter;, +import org.hamcrest.CoreMatchers;, +    @Test, +    public void testFileRegionCountLargerThenFile() throws Throwable {, +        run();, +    }, +, +    public void testFileRegionCountLargerThenFile(ServerBootstrap sb, Bootstrap cb) throws Throwable {, +        File file = File.createTempFile("netty-", ".tmp");, +        file.deleteOnExit();, +, +        final FileOutputStream out = new FileOutputStream(file);, +        out.write(data);, +        out.close();, +, +        sb.childHandler(new SimpleChannelInboundHandler<ByteBuf>() {, +            @Override, +            protected void channelRead0(ChannelHandlerContext ctx, ByteBuf msg) {, +                // Just drop the message., +            }, +        });, +        cb.handler(new ChannelInboundHandlerAdapter());, +, +        Channel sc = sb.bind().sync().channel();, +        Channel cc = cb.connect(sc.localAddress()).sync().channel();, +, +        // Request file region which is bigger then the underlying file., +        FileRegion region = new DefaultFileRegion(, +                new FileInputStream(file).getChannel(), 0, data.length + 1024);, +, +        assertThat(cc.writeAndFlush(region).await().cause(), CoreMatchers.<Throwable>instanceOf(IOException.class));, +        cc.close().sync();, +        sc.close().sync();, +    }, +, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketFileRegionTest.java, +import io.netty.channel.ChannelInboundHandlerAdapter;, +import org.hamcrest.CoreMatchers;, +    @Test, +    public void testFileRegionCountLargerThenFile() throws Throwable {, +        run();, +    }, +, +    public void testFileRegionCountLargerThenFile(ServerBootstrap sb, Bootstrap cb) throws Throwable {, +        File file = File.createTempFile("netty-", ".tmp");, +        file.deleteOnExit();, +, +        final FileOutputStream out = new FileOutputStream(file);, +        out.write(data);, +        out.close();, +, +        sb.childHandler(new SimpleChannelInboundHandler<ByteBuf>() {, +            @Override, +            protected void channelRead0(ChannelHandlerContext ctx, ByteBuf msg) {, +                // Just drop the message., +            }, +        });, +        cb.handler(new ChannelInboundHandlerAdapter());, +, +        Channel sc = sb.bind().sync().channel();, +        Channel cc = cb.connect(sc.localAddress()).sync().channel();, +, +        // Request file region which is bigger then the underlying file., +        FileRegion region = new DefaultFileRegion(, +                new FileInputStream(file).getChannel(), 0, data.length + 1024);, +, +        assertThat(cc.writeAndFlush(region).await().cause(), CoreMatchers.<Throwable>instanceOf(IOException.class));, +        cc.close().sync();, +        sc.close().sync();, +    }, +, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java, +        final long offset = region.transferred();, +        if (offset >= regionCount) {, +        } else if (flushedAmount == 0) {, +            validateFileRegion(region, offset);, +++ b/testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketFileRegionTest.java, +import io.netty.channel.ChannelInboundHandlerAdapter;, +import org.hamcrest.CoreMatchers;, +    @Test, +    public void testFileRegionCountLargerThenFile() throws Throwable {, +        run();, +    }, +, +    public void testFileRegionCountLargerThenFile(ServerBootstrap sb, Bootstrap cb) throws Throwable {, +        File file = File.createTempFile("netty-", ".tmp");, +        file.deleteOnExit();, +, +        final FileOutputStream out = new FileOutputStream(file);, +        out.write(data);, +        out.close();, +, +        sb.childHandler(new SimpleChannelInboundHandler<ByteBuf>() {, +            @Override, +            protected void channelRead0(ChannelHandlerContext ctx, ByteBuf msg) {, +                // Just drop the message., +            }, +        });, +        cb.handler(new ChannelInboundHandlerAdapter());]