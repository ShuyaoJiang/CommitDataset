[+++ b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java, +import java.io.FileNotFoundException;, +        InputStream in = null;, +        OutputStream out = null;, +        File tmpFile = null;, +        try {, +            if (url == null) {, +                if (PlatformDependent.isOsx()) {, +                    String fileName = path.endsWith(".jnilib") ? NATIVE_RESOURCE_HOME + "lib" + name + ".dynlib" :, +                            NATIVE_RESOURCE_HOME + "lib" + name + ".jnilib";, +                    url = loader.getResource(fileName);, +                    if (url == null) {, +                        throw new FileNotFoundException(fileName);, +                    }, +                    throw new FileNotFoundException(path);, +, +++ b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java, +import java.io.FileNotFoundException;, +        InputStream in = null;, +        OutputStream out = null;, +        File tmpFile = null;, +        try {, +            if (url == null) {, +                if (PlatformDependent.isOsx()) {, +                    String fileName = path.endsWith(".jnilib") ? NATIVE_RESOURCE_HOME + "lib" + name + ".dynlib" :, +                            NATIVE_RESOURCE_HOME + "lib" + name + ".jnilib";, +                    url = loader.getResource(fileName);, +                    if (url == null) {, +                        throw new FileNotFoundException(fileName);, +                    }, +                    throw new FileNotFoundException(path);, +, +++ b/common/src/test/java/io/netty/util/internal/NativeLibraryLoaderTest.java, +/*, + * Copyright 2017 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.util.internal;, +, +import org.junit.Test;, +, +import java.io.FileNotFoundException;, +import java.util.UUID;, +, +import static org.junit.Assert.assertTrue;, +import static org.junit.Assert.fail;, +, +public class NativeLibraryLoaderTest {, +, +    @Test, +    public void testFileNotFound() {, +        try {, +            NativeLibraryLoader.load(UUID.randomUUID().toString(), NativeLibraryLoaderTest.class.getClassLoader());, +            fail();, +        } catch (UnsatisfiedLinkError error) {, +            assertTrue(error.getCause() instanceof FileNotFoundException);, +        }, +    }, +}]