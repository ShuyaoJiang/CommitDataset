[+++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java, +import io.netty.channel.ChannelException;, +    static boolean isSoErrorZero(BsdSocket fd) {, +        try {, +            return fd.getSoError() == 0;, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java, +import io.netty.channel.ChannelException;, +    static boolean isSoErrorZero(BsdSocket fd) {, +        try {, +            return fd.getSoError() == 0;, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueServerChannel.java, +    AbstractKQueueServerChannel(BsdSocket fd) {, +        this(fd, isSoErrorZero(fd));, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java, +import io.netty.channel.ChannelException;, +    static boolean isSoErrorZero(BsdSocket fd) {, +        try {, +            return fd.getSoError() == 0;, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueServerChannel.java, +    AbstractKQueueServerChannel(BsdSocket fd) {, +        this(fd, isSoErrorZero(fd));, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueStreamChannel.java, +    AbstractKQueueStreamChannel(BsdSocket fd) {, +        this(null, fd, isSoErrorZero(fd));, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java, +import io.netty.channel.ChannelException;, +    static boolean isSoErrorZero(BsdSocket fd) {, +        try {, +            return fd.getSoError() == 0;, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueServerChannel.java, +    AbstractKQueueServerChannel(BsdSocket fd) {, +        this(fd, isSoErrorZero(fd));, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueStreamChannel.java, +    AbstractKQueueStreamChannel(BsdSocket fd) {, +        this(null, fd, isSoErrorZero(fd));, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDatagramChannel.java, +    public KQueueDatagramChannel(int fd) {, +        this(new BsdSocket(fd), true);, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java, +import io.netty.channel.ChannelException;, +    static boolean isSoErrorZero(BsdSocket fd) {, +        try {, +            return fd.getSoError() == 0;, +        } catch (IOException e) {, +            throw new ChannelException(e);, +        }, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueServerChannel.java, +    AbstractKQueueServerChannel(BsdSocket fd) {, +        this(fd, isSoErrorZero(fd));, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueStreamChannel.java, +    AbstractKQueueStreamChannel(BsdSocket fd) {, +        this(null, fd, isSoErrorZero(fd));, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDatagramChannel.java, +    public KQueueDatagramChannel(int fd) {, +        this(new BsdSocket(fd), true);, +    }, +, +++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainSocketChannel.java, +    public KQueueDomainSocketChannel(int fd) {, +        this(null, new BsdSocket(fd));, +    }, +]