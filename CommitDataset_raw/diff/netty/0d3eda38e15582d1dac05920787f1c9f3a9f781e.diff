[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpUtil.java, +    private static final AsciiString SEMICOLON = AsciiString.of(";");, +     * Fetch charset from message's Content-Type header as a char sequence., +     * @return the {@code CharSequence} with charset from message's Content-Type header, +     * or {@code null} if charset is not presented, +    /**, +     * Fetch MIME type part from message's Content-Type header as a char sequence., +     *, +     * @return the MIME type as a {@code CharSequence} from message's Content-Type header, +     * or {@code null} if content-type header or MIME type part of this header are not presented, +     * <p/>, +     * "content-type: text/html; charset=utf-8" - "text/html" will be returned <br/>, +     * "content-type: text/html" - "text/html" will be returned <br/>, +     * "content-type: " or no header - {@code null} we be returned, +     */, +    public static CharSequence getMimeType(HttpMessage message) {, +        CharSequence contentTypeValue = message.headers().get(HttpHeaderNames.CONTENT_TYPE);, +        if (contentTypeValue != null) {, +            int indexOfSemicolon = AsciiString.indexOfIgnoreCaseAscii(contentTypeValue, SEMICOLON, 0);, +            if (indexOfSemicolon != AsciiString.INDEX_NOT_FOUND) {, +                return contentTypeValue.subSequence(0, indexOfSemicolon);, +            } else {, +                return contentTypeValue.length() > 0 ? contentTypeValue : null;, +            }, +        }, +        return null;, +    }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpUtil.java, +    private static final AsciiString SEMICOLON = AsciiString.of(";");, +     * Fetch charset from message's Content-Type header as a char sequence., +     * @return the {@code CharSequence} with charset from message's Content-Type header, +     * or {@code null} if charset is not presented, +    /**, +     * Fetch MIME type part from message's Content-Type header as a char sequence., +     *, +     * @return the MIME type as a {@code CharSequence} from message's Content-Type header, +     * or {@code null} if content-type header or MIME type part of this header are not presented, +     * <p/>, +     * "content-type: text/html; charset=utf-8" - "text/html" will be returned <br/>, +     * "content-type: text/html" - "text/html" will be returned <br/>, +     * "content-type: " or no header - {@code null} we be returned, +     */, +    public static CharSequence getMimeType(HttpMessage message) {, +        CharSequence contentTypeValue = message.headers().get(HttpHeaderNames.CONTENT_TYPE);, +        if (contentTypeValue != null) {, +            int indexOfSemicolon = AsciiString.indexOfIgnoreCaseAscii(contentTypeValue, SEMICOLON, 0);, +            if (indexOfSemicolon != AsciiString.INDEX_NOT_FOUND) {, +                return contentTypeValue.subSequence(0, indexOfSemicolon);, +            } else {, +                return contentTypeValue.length() > 0 ? contentTypeValue : null;, +            }, +        }, +        return null;, +    }, +, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpUtilTest.java, +, +    @Test, +    public void testGetMimeType() {, +        HttpMessage message = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK);, +        assertNull(HttpUtil.getMimeType(message));, +        message.headers().set(HttpHeaderNames.CONTENT_TYPE, "");, +        assertNull(HttpUtil.getMimeType(message));, +        message.headers().set(HttpHeaderNames.CONTENT_TYPE, "text/html");, +        assertEquals("text/html", HttpUtil.getMimeType(message));, +        message.headers().set(HttpHeaderNames.CONTENT_TYPE, "text/html; charset=utf-8");, +        assertEquals("text/html", HttpUtil.getMimeType(message));, +    }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpUtil.java, +    private static final AsciiString SEMICOLON = AsciiString.of(";");, +     * Fetch charset from message's Content-Type header as a char sequence., +     * @return the {@code CharSequence} with charset from message's Content-Type header, +     * or {@code null} if charset is not presented, +    /**, +     * Fetch MIME type part from message's Content-Type header as a char sequence., +     *, +     * @return the MIME type as a {@code CharSequence} from message's Content-Type header, +     * or {@code null} if content-type header or MIME type part of this header are not presented, +     * <p/>, +     * "content-type: text/html; charset=utf-8" - "text/html" will be returned <br/>, +     * "content-type: text/html" - "text/html" will be returned <br/>, +     * "content-type: " or no header - {@code null} we be returned, +     */, +    public static CharSequence getMimeType(HttpMessage message) {, +        CharSequence contentTypeValue = message.headers().get(HttpHeaderNames.CONTENT_TYPE);, +        if (contentTypeValue != null) {, +            int indexOfSemicolon = AsciiString.indexOfIgnoreCaseAscii(contentTypeValue, SEMICOLON, 0);, +            if (indexOfSemicolon != AsciiString.INDEX_NOT_FOUND) {, +                return contentTypeValue.subSequence(0, indexOfSemicolon);, +            } else {, +                return contentTypeValue.length() > 0 ? contentTypeValue : null;, +            }, +        }, +        return null;, +    }, +, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpUtilTest.java, +, +    @Test]