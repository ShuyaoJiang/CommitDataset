[+++ b/handler-proxy/src/main/java/io/netty/handler/proxy/HttpProxyHandler.java, +import io.netty.handler.codec.http.HttpHeaders;, +    private HttpHeaders headers;, +        this(proxyAddress, null);, +    }, +, +    public HttpProxyHandler(SocketAddress proxyAddress, HttpHeaders headers) {, +        this.headers = headers;, +        this(proxyAddress, username, password, null);, +    }, +, +    public HttpProxyHandler(SocketAddress proxyAddress, String username, String password,, +                            HttpHeaders headers) {, +, +        this.headers = headers;, +        if (headers != null) {, +            req.headers().add(headers);, +        }, +, +++ b/handler-proxy/src/main/java/io/netty/handler/proxy/HttpProxyHandler.java, +import io.netty.handler.codec.http.HttpHeaders;, +    private HttpHeaders headers;, +        this(proxyAddress, null);, +    }, +, +    public HttpProxyHandler(SocketAddress proxyAddress, HttpHeaders headers) {, +        this.headers = headers;, +        this(proxyAddress, username, password, null);, +    }, +, +    public HttpProxyHandler(SocketAddress proxyAddress, String username, String password,, +                            HttpHeaders headers) {, +, +        this.headers = headers;, +        if (headers != null) {, +            req.headers().add(headers);, +        }, +, +++ b/handler-proxy/src/test/java/io/netty/handler/proxy/HttpProxyHandlerTest.java, +import io.netty.handler.codec.http.DefaultHttpHeaders;, +import io.netty.handler.codec.http.HttpHeaders;, +        testInitialMessage(socketAddress, "[::1]:8080", null);, +        testInitialMessage(socketAddress, "[::1]:8080", null);, +        testInitialMessage(socketAddress, "10.0.0.1:8080", null);, +        testInitialMessage(socketAddress, "10.0.0.1:8080", null);, +    @Test, +    public void testCustomHeaders() throws Exception {, +        InetSocketAddress socketAddress = InetSocketAddress.createUnresolved("10.0.0.1", 8080);, +        testInitialMessage(socketAddress, "10.0.0.1:8080",, +                           new DefaultHttpHeaders().add("CUSTOM_HEADER", "CUSTOM_VALUE1"), +                                                   .add("CUSTOM_HEADER", "CUSTOM_VALUE2"));, +    }, +, +    private static void testInitialMessage(InetSocketAddress socketAddress, String hostPort,, +                                           HttpHeaders headers) throws Exception  {, +        HttpProxyHandler handler = new HttpProxyHandler(new InetSocketAddress(NetUtil.LOCALHOST, 8080), headers);, +            assertEquals(hostPort, request.uri());, +            HttpHeaders actualHeaders = request.headers();, +            assertEquals(hostPort, actualHeaders.get(HttpHeaderNames.HOST));, +, +            if (headers != null) {, +                // The actual request header is a strict superset of the custom header, +                for (String name : headers.names()) {, +                    assertEquals(headers.getAll(name), actualHeaders.getAll(name));, +                }, +            }]