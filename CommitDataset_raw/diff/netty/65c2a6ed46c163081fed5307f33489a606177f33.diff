[+++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +public abstract class AbstractByteBuf extends ByteBuf {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +public abstract class AbstractByteBuf extends ByteBuf {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBufAllocator.java, +        return new CompositeByteBuf(this, false, maxNumComponents);, +        return new CompositeByteBuf(this, true, maxNumComponents);, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java, +public abstract class AbstractByteBuf extends ByteBuf {, +++ b/buffer/src/main/java/io/netty/buffer/AbstractByteBufAllocator.java, +        return new CompositeByteBuf(this, false, maxNumComponents);, +        return new CompositeByteBuf(this, true, maxNumComponents);, +++ b/buffer/src/main/java/io/netty/buffer/ByteBuf.java, +@SuppressWarnings("ClassMayBeInterface"), +public abstract class ByteBuf implements ReferenceCounted, Comparable<ByteBuf> {, +    public abstract int capacity();, +    public abstract ByteBuf capacity(int newCapacity);, +    public abstract int maxCapacity();, +    public abstract ByteBufAllocator alloc();, +    public abstract ByteOrder order();, +    public abstract ByteBuf order(ByteOrder endianness);, +    public abstract ByteBuf unwrap();, +    public abstract boolean isDirect();, +    public abstract int readerIndex();, +    public abstract ByteBuf readerIndex(int readerIndex);, +    public abstract int writerIndex();, +    public abstract ByteBuf writerIndex(int writerIndex);, +    public abstract ByteBuf setIndex(int readerIndex, int writerIndex);, +    public abstract int readableBytes();, +    public abstract int writableBytes();, +    public abstract int maxWritableBytes();, +    public abstract boolean isReadable();, +    public abstract boolean isReadable(int size);, +    public abstract boolean isWritable();, +    public abstract boolean isWritable(int size);, +    public abstract ByteBuf clear();, +    public abstract ByteBuf markReaderIndex();, +    public abstract ByteBuf resetReaderIndex();, +    public abstract ByteBuf markWriterIndex();, +    public abstract ByteBuf resetWriterIndex();, +    public abstract ByteBuf discardReadBytes();, +    public abstract ByteBuf discardSomeReadBytes();, +    public abstract ByteBuf ensureWritable(int minWritableBytes);, +    public abstract int ensureWritable(int minWritableBytes, boolean force);, +    public abstract boolean getBoolean(int index);, +    public abstract byte  getByte(int index);, +    public abstract short getUnsignedByte(int index);, +    public abstract short getShort(int index);, +    public abstract int getUnsignedShort(int index);, +    public abstract int   getMedium(int index);, +    public abstract int   getUnsignedMedium(int index);, +    public abstract int   getInt(int index);, +    public abstract long  getUnsignedInt(int index);, +    public abstract long  getLong(int index);, +    public abstract char  getChar(int index);, +    public abstract float getFloat(int index);, +    public abstract double getDouble(int index);, +    public abstract ByteBuf getBytes(int index, ByteBuf dst);, +    public abstract ByteBuf getBytes(int index, ByteBuf dst, int length);, +    public abstract ByteBuf getBytes(int index, ByteBuf dst, int dstIndex, int length);, +    public abstract ByteBuf getBytes(int index, byte[] dst);, +    public abstract ByteBuf getBytes(int index, byte[] dst, int dstIndex, int length);, +    public abstract ByteBuf getBytes(int index, ByteBuffer dst);, +    public abstract ByteBuf getBytes(int index, OutputStream out, int length) throws IOException;, +    public abstract int getBytes(int index, GatheringByteChannel out, int length) throws IOException;, +    public abstract ByteBuf setBoolean(int index, boolean value);, +    public abstract ByteBuf setByte(int index, int value);, +    public abstract ByteBuf setShort(int index, int value);, +    public abstract ByteBuf setMedium(int index, int   value);, +    public abstract ByteBuf setInt(int index, int   value);, +    public abstract ByteBuf setLong(int index, long  value);, +    public abstract ByteBuf setChar(int index, int value);, +    public abstract ByteBuf setFloat(int index, float value);, +    public abstract ByteBuf setDouble(int index, double value);, +    public abstract ByteBuf setBytes(int index, ByteBuf src);, +    public abstract ByteBuf setBytes(int index, ByteBuf src, int length);, +    public abstract ByteBuf setBytes(int index, ByteBuf src, int srcIndex, int length);, +    public abstract ByteBuf setBytes(int index, byte[] src);, +    public abstract ByteBuf setBytes(int index, byte[] src, int srcIndex, int length);, +    public abstract ByteBuf setBytes(int index, ByteBuffer src);, +    public abstract int setBytes(int index, InputStream in, int length) throws IOException;, +    public abstract int  setBytes(int index, ScatteringByteChannel in, int length) throws IOException;, +    public abstract ByteBuf setZero(int index, int length);, +    public abstract boolean readBoolean();, +    public abstract byte  readByte();, +    public abstract short readUnsignedByte();, +    public abstract short readShort();, +    public abstract int   readUnsignedShort();, +    public abstract int   readMedium();, +    public abstract int   readUnsignedMedium();, +    public abstract int   readInt();, +    public abstract long  readUnsignedInt();, +    public abstract long  readLong();, +    public abstract char  readChar();, +    public abstract float readFloat();, +    public abstract double readDouble();, +    public abstract ByteBuf readBytes(int length);, +    public abstract ByteBuf readSlice(int length);, +    public abstract ByteBuf readBytes(ByteBuf dst);, +    public abstract ByteBuf readBytes(ByteBuf dst, int length);]