[+++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslClientContext.java, +                    // IMPORTANT: The callbacks set for verification must be static to prevent memory leak as, +                    //            otherwise the context can never be collected. This is because the JNI code holds, +                    //            a global reference to the callbacks., +                    //, +                    //            See https://github.com/netty/netty/issues/5372, +, +                        SSLContext.setCertVerifyCallback(ctx,, +                                new ExtendedTrustManagerVerifyCallback(engineMap, (X509ExtendedTrustManager) manager));, +                        SSLContext.setCertVerifyCallback(ctx, new TrustManagerVerifyCallback(engineMap, manager));, +, +    private static final class TrustManagerVerifyCallback extends AbstractCertificateVerifier {, +        private final X509TrustManager manager;, +, +        TrustManagerVerifyCallback(OpenSslEngineMap engineMap, X509TrustManager manager) {, +            super(engineMap);, +            this.manager = manager;, +        }, +, +        @Override, +        void verify(OpenSslEngine engine, X509Certificate[] peerCerts, String auth), +                throws Exception {, +            manager.checkServerTrusted(peerCerts, auth);, +        }, +    }, +, +    private static final class ExtendedTrustManagerVerifyCallback extends AbstractCertificateVerifier {, +        private final X509ExtendedTrustManager manager;, +, +        ExtendedTrustManagerVerifyCallback(OpenSslEngineMap engineMap, X509ExtendedTrustManager manager) {, +            super(engineMap);, +            this.manager = manager;, +        }, +, +        @Override, +        void verify(OpenSslEngine engine, X509Certificate[] peerCerts, String auth), +                throws Exception {, +            manager.checkServerTrusted(peerCerts, auth, engine);, +        }, +    }, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslClientContext.java, +                    // IMPORTANT: The callbacks set for verification must be static to prevent memory leak as, +                    //            otherwise the context can never be collected. This is because the JNI code holds, +                    //            a global reference to the callbacks., +                    //, +                    //            See https://github.com/netty/netty/issues/5372, +, +                        SSLContext.setCertVerifyCallback(ctx,, +                                new ExtendedTrustManagerVerifyCallback(engineMap, (X509ExtendedTrustManager) manager));, +                        SSLContext.setCertVerifyCallback(ctx, new TrustManagerVerifyCallback(engineMap, manager));, +, +    private static final class TrustManagerVerifyCallback extends AbstractCertificateVerifier {, +        private final X509TrustManager manager;, +, +        TrustManagerVerifyCallback(OpenSslEngineMap engineMap, X509TrustManager manager) {, +            super(engineMap);, +            this.manager = manager;, +        }, +, +        @Override, +        void verify(OpenSslEngine engine, X509Certificate[] peerCerts, String auth), +                throws Exception {, +            manager.checkServerTrusted(peerCerts, auth);, +        }, +    }, +, +    private static final class ExtendedTrustManagerVerifyCallback extends AbstractCertificateVerifier {, +        private final X509ExtendedTrustManager manager;, +, +        ExtendedTrustManagerVerifyCallback(OpenSslEngineMap engineMap, X509ExtendedTrustManager manager) {, +            super(engineMap);, +            this.manager = manager;, +        }, +, +        @Override, +        void verify(OpenSslEngine engine, X509Certificate[] peerCerts, String auth), +                throws Exception {, +            manager.checkServerTrusted(peerCerts, auth, engine);, +        }, +    }, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslContext.java, +    final OpenSslEngineMap engineMap = new DefaultOpenSslEngineMap();, +    abstract static class AbstractCertificateVerifier implements CertificateVerifier {, +        private final OpenSslEngineMap engineMap;, +, +        AbstractCertificateVerifier(OpenSslEngineMap engineMap) {, +            this.engineMap = engineMap;, +        }, +, +++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslClientContext.java, +                    // IMPORTANT: The callbacks set for verification must be static to prevent memory leak as, +                    //            otherwise the context can never be collected. This is because the JNI code holds, +                    //            a global reference to the callbacks., +                    //, +                    //            See https://github.com/netty/netty/issues/5372, +, +                        SSLContext.setCertVerifyCallback(ctx,, +                                new ExtendedTrustManagerVerifyCallback(engineMap, (X509ExtendedTrustManager) manager));, +                        SSLContext.setCertVerifyCallback(ctx, new TrustManagerVerifyCallback(engineMap, manager));, +]