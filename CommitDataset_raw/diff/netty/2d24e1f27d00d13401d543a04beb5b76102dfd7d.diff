[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultFullHttpRequest.java, +    private static final int HASH_CODE_PRIME = 31;, +    public DefaultFullHttpRequest(HttpVersion httpVersion, HttpMethod method, String uri, boolean validateHeaders) {, +        this(httpVersion, method, uri, Unpooled.buffer(0), validateHeaders);, +    }, +, +    /**, +     * Copy this object, +     *, +     * @param copyContent, +     * <ul>, +     * <li>{@code true} if this object's {@link #content()} should be used to copy.</li>, +     * <li>{@code false} if {@code newContent} should be used instead.</li>, +     * </ul>, +     * @param newContent, +     * <ul>, +     * <li>if {@code copyContent} is false then this will be used in the copy's content.</li>, +     * <li>if {@code null} then a default buffer of 0 size will be selected</li>, +     * </ul>, +     * @return A copy of this object, +     */, +    private FullHttpRequest copy(boolean copyContent, ByteBuf newContent) {, +                protocolVersion(), method(), uri(),, +                copyContent ? content().copy() :, +                        newContent == null ? Unpooled.buffer(0) : newContent);, +    public FullHttpRequest copy(ByteBuf newContent) {, +        return copy(false, newContent);, +    }, +, +    @Override, +    public FullHttpRequest copy() {, +        return copy(true, null);, +    }, +, +    @Override, +    public int hashCode() {, +        int result = 1;, +        result = HASH_CODE_PRIME * result + content().hashCode();, +        result = HASH_CODE_PRIME * result + trailingHeaders().hashCode();, +        result = HASH_CODE_PRIME * result + super.hashCode();, +        return result;, +    }, +, +    @Override, +    public boolean equals(Object o) {, +        if (!(o instanceof DefaultFullHttpRequest)) {, +            return false;, +        }, +, +        DefaultFullHttpRequest other = (DefaultFullHttpRequest) o;, +, +        return super.equals(other) &&, +               content().equals(other.content()) &&, +               trailingHeaders().equals(other.trailingHeaders());, +    }, +, +    @Override, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultFullHttpRequest.java, +    private static final int HASH_CODE_PRIME = 31;, +    public DefaultFullHttpRequest(HttpVersion httpVersion, HttpMethod method, String uri, boolean validateHeaders) {, +        this(httpVersion, method, uri, Unpooled.buffer(0), validateHeaders);, +    }, +, +    /**, +     * Copy this object, +     *, +     * @param copyContent, +     * <ul>, +     * <li>{@code true} if this object's {@link #content()} should be used to copy.</li>, +     * <li>{@code false} if {@code newContent} should be used instead.</li>, +     * </ul>, +     * @param newContent, +     * <ul>, +     * <li>if {@code copyContent} is false then this will be used in the copy's content.</li>, +     * <li>if {@code null} then a default buffer of 0 size will be selected</li>, +     * </ul>, +     * @return A copy of this object, +     */, +    private FullHttpRequest copy(boolean copyContent, ByteBuf newContent) {, +                protocolVersion(), method(), uri(),, +                copyContent ? content().copy() :, +                        newContent == null ? Unpooled.buffer(0) : newContent);, +    public FullHttpRequest copy(ByteBuf newContent) {, +        return copy(false, newContent);, +    }, +, +    @Override, +    public FullHttpRequest copy() {, +        return copy(true, null);, +    }, +, +    @Override, +    public int hashCode() {, +        int result = 1;, +        result = HASH_CODE_PRIME * result + content().hashCode();, +        result = HASH_CODE_PRIME * result + trailingHeaders().hashCode();, +        result = HASH_CODE_PRIME * result + super.hashCode();, +        return result;, +    }, +]