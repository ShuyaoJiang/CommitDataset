[+++ b/example/.gitignore, +, +#, +# native udt library extract location, +#, +, +/lib, +, +++ b/example/.gitignore, +, +#, +# native udt library extract location, +#, +, +/lib, +, +++ b/example/pom.xml, +    , +        <!-- see https://github.com/netty/netty/issues/874 -->, +        <dependency>, +            <groupId>com.yammer.metrics</groupId>, +            <artifactId>metrics-core</artifactId>, +            <version>2.2.0</version>, +        </dependency>, +        <dependency>, +            <groupId>${project.groupId}</groupId>, +            <artifactId>netty-transport-udt</artifactId>, +            <version>${project.version}</version>, +        </dependency>, +</project>, +++ b/example/.gitignore, +, +#, +# native udt library extract location, +#, +, +/lib, +, +++ b/example/pom.xml, +    , +        <!-- see https://github.com/netty/netty/issues/874 -->, +        <dependency>, +            <groupId>com.yammer.metrics</groupId>, +            <artifactId>metrics-core</artifactId>, +            <version>2.2.0</version>, +        </dependency>, +        <dependency>, +            <groupId>${project.groupId}</groupId>, +            <artifactId>netty-transport-udt</artifactId>, +            <version>${project.version}</version>, +        </dependency>, +</project>, +++ b/example/src/main/java/io/netty/example/udt/echo/bytes/ByteEchoClient.java, +/*, + * Copyright 2012 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.example.udt.echo.bytes;, +, +import io.netty.bootstrap.Bootstrap;, +import io.netty.channel.ChannelFuture;, +import io.netty.channel.ChannelInitializer;, +import io.netty.channel.socket.nio.NioEventLoopGroup;, +import io.netty.example.udt.util.UtilConsoleReporter;, +import io.netty.example.udt.util.UtilThreadFactory;, +import io.netty.handler.logging.LogLevel;, +import io.netty.handler.logging.LoggingHandler;, +import io.netty.transport.udt.UdtChannel;, +import io.netty.transport.udt.nio.NioUdtProvider;, +, +import java.net.InetSocketAddress;, +import java.util.concurrent.ThreadFactory;, +import java.util.concurrent.TimeUnit;, +, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +, +/**, + * UDT Byte Stream Client, + * <p>, + * Sends one message when a connection is open and echoes back any received data, + * to the server. Simply put, the echo client initiates the ping-pong traffic, + * between the echo client and server by sending the first message to the, + * server., + */, +public class ByteEchoClient {, +, +    private static final Logger log = LoggerFactory, +            .getLogger(ByteEchoClient.class);]