[+++ b/src/main/java/org/jboss/netty/handler/codec/compression/ZlibDecoder.java, +            int resultCode = z.inflateInit(JZlib.W_ZLIB);, +            resultCode = z.inflateInit(JZlib.W_ZLIB);, +++ b/src/main/java/org/jboss/netty/handler/codec/compression/ZlibDecoder.java, +            int resultCode = z.inflateInit(JZlib.W_ZLIB);, +            resultCode = z.inflateInit(JZlib.W_ZLIB);, +++ b/src/main/java/org/jboss/netty/handler/codec/compression/ZlibEncoder.java, +                byte[] out = new byte[32]; // room for ADLER32 + ZLIB / CRC32 + GZIP header, +++ b/src/main/java/org/jboss/netty/handler/codec/compression/ZlibDecoder.java, +            int resultCode = z.inflateInit(JZlib.W_ZLIB);, +            resultCode = z.inflateInit(JZlib.W_ZLIB);, +++ b/src/main/java/org/jboss/netty/handler/codec/compression/ZlibEncoder.java, +                byte[] out = new byte[32]; // room for ADLER32 + ZLIB / CRC32 + GZIP header, +++ b/src/main/java/org/jboss/netty/util/internal/jzlib/CRC32.java, +/*, + * Copyright 2009 Red Hat, Inc., + *, + * Red Hat licenses this file to you under the Apache License, version 2.0, + * (the "License"); you may not use this file except in compliance with the, + * License.  You may obtain a copy of the License at:, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package org.jboss.netty.util.internal.jzlib;, +, +final class CRC32 {, +    static long crc32(long crc32, byte[] buf, int index, int len) {, +        // TODO implement me, +        return crc32;, +    }, +}, +++ b/src/main/java/org/jboss/netty/handler/codec/compression/ZlibDecoder.java, +            int resultCode = z.inflateInit(JZlib.W_ZLIB);, +            resultCode = z.inflateInit(JZlib.W_ZLIB);, +++ b/src/main/java/org/jboss/netty/handler/codec/compression/ZlibEncoder.java, +                byte[] out = new byte[32]; // room for ADLER32 + ZLIB / CRC32 + GZIP header, +++ b/src/main/java/org/jboss/netty/util/internal/jzlib/CRC32.java, +/*, + * Copyright 2009 Red Hat, Inc., + *, + * Red Hat licenses this file to you under the Apache License, version 2.0, + * (the "License"); you may not use this file except in compliance with the, + * License.  You may obtain a copy of the License at:, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package org.jboss.netty.util.internal.jzlib;, +, +final class CRC32 {, +    static long crc32(long crc32, byte[] buf, int index, int len) {, +        // TODO implement me, +        return crc32;, +    }, +}, +++ b/src/main/java/org/jboss/netty/util/internal/jzlib/Deflate.java, +        strm.crc32 = CRC32.crc32(0, null, 0, 0);, +            switch (wrapperType) {, +            case ZLIB:, +                break;, +            case GZIP:, +                // Identification, +                put_byte((byte) 0x1f);, +                put_byte((byte) 0x8b);, +                // Compression method: DEFLATE, +                put_byte((byte) 8);, +                // Flags, +                put_byte((byte) 0);, +                // MTIME, +                put_byte((byte) 0);, +                put_byte((byte) 0);, +                put_byte((byte) 0);, +                put_byte((byte) 0);, +                // XFL, +                switch (config_table[level].func) {, +                case FAST:, +                    put_byte((byte) 4);, +                    break;, +                case SLOW:, +                    put_byte((byte) 2);, +                    break;, +                default:, +                    put_byte((byte) 0);, +                    break;, +                }, +                // OS, +                put_byte((byte) 255);, +, +                strm.crc32 = CRC32.crc32(0, null, 0, 0);]