[+++ b/buffer/src/main/java/io/netty/buffer/DefaultMessageBuf.java, + * Default {@link MessageBuf} implementation., + *, + * You should use {@link Unpooled#messageBuffer()} to create an instance, +public class DefaultMessageBuf<T> extends AbstractMessageBuf<T> {, +    protected DefaultMessageBuf() {, +    protected DefaultMessageBuf(int initialCapacity) {, +    protected DefaultMessageBuf(int initialCapacity, int maxCapacity) {, +++ b/buffer/src/main/java/io/netty/buffer/DefaultMessageBuf.java, + * Default {@link MessageBuf} implementation., + *, + * You should use {@link Unpooled#messageBuffer()} to create an instance, +public class DefaultMessageBuf<T> extends AbstractMessageBuf<T> {, +    protected DefaultMessageBuf() {, +    protected DefaultMessageBuf(int initialCapacity) {, +    protected DefaultMessageBuf(int initialCapacity, int maxCapacity) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +    private static final ThreadLocal<OutputMessageBuf> decoderOutput =, +            new ThreadLocal<OutputMessageBuf>() {, +                protected OutputMessageBuf initialValue() {, +                    return new OutputMessageBuf();, +        OutputMessageBuf out = decoderOutput();, +            if (out.containsByteBuf()) {, +            } else {, +                if (out.drainTo(ctx.nextInboundMessageBuffer()) > 0) {, +                    decoded = true;, +                }, +            }, +        OutputMessageBuf out = decoderOutput();, +            if (out.containsByteBuf()) {, +            } else {, +                if (out.drainTo(ctx.nextInboundMessageBuffer()) > 0) {, +                    decoded = true;, +                }, +            }, +    final OutputMessageBuf decoderOutput() {, +++ b/buffer/src/main/java/io/netty/buffer/DefaultMessageBuf.java, + * Default {@link MessageBuf} implementation., + *, + * You should use {@link Unpooled#messageBuffer()} to create an instance, +public class DefaultMessageBuf<T> extends AbstractMessageBuf<T> {, +    protected DefaultMessageBuf() {, +    protected DefaultMessageBuf(int initialCapacity) {, +    protected DefaultMessageBuf(int initialCapacity, int maxCapacity) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +    private static final ThreadLocal<OutputMessageBuf> decoderOutput =, +            new ThreadLocal<OutputMessageBuf>() {, +                protected OutputMessageBuf initialValue() {, +                    return new OutputMessageBuf();, +        OutputMessageBuf out = decoderOutput();, +            if (out.containsByteBuf()) {, +            } else {, +                if (out.drainTo(ctx.nextInboundMessageBuffer()) > 0) {, +                    decoded = true;, +                }, +            }, +        OutputMessageBuf out = decoderOutput();, +            if (out.containsByteBuf()) {, +            } else {, +                if (out.drainTo(ctx.nextInboundMessageBuffer()) > 0) {, +                    decoded = true;, +                }, +            }, +    final OutputMessageBuf decoderOutput() {, +++ b/codec/src/main/java/io/netty/handler/codec/MessageToMessageDecoder.java, +    private static final ThreadLocal<OutputMessageBuf> decoderOutput =, +            new ThreadLocal<OutputMessageBuf>() {, +                protected OutputMessageBuf initialValue() {, +                    return new OutputMessageBuf();, +        OutputMessageBuf out = decoderOutput.get();, +            if (out.containsByteBuf()) {, +                    Object decoded = out.poll();, +                    if (decoded == null) {, +                    ChannelHandlerUtil.addToNextInboundBuffer(ctx, decoded);, +                }, +            } else {, +                out.drainTo(ctx.nextInboundMessageBuffer());, +++ b/buffer/src/main/java/io/netty/buffer/DefaultMessageBuf.java, + * Default {@link MessageBuf} implementation., + *, + * You should use {@link Unpooled#messageBuffer()} to create an instance, +public class DefaultMessageBuf<T> extends AbstractMessageBuf<T> {, +    protected DefaultMessageBuf() {, +    protected DefaultMessageBuf(int initialCapacity) {, +    protected DefaultMessageBuf(int initialCapacity, int maxCapacity) {, +++ b/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java, +    private static final ThreadLocal<OutputMessageBuf> decoderOutput =, +            new ThreadLocal<OutputMessageBuf>() {, +                protected OutputMessageBuf initialValue() {, +                    return new OutputMessageBuf();, +        OutputMessageBuf out = decoderOutput();, +            if (out.containsByteBuf()) {, +            } else {, +                if (out.drainTo(ctx.nextInboundMessageBuffer()) > 0) {, +                    decoded = true;, +                }, +            }, +        OutputMessageBuf out = decoderOutput();, +            if (out.containsByteBuf()) {, +            } else {]