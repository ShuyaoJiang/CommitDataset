[+++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +                finished = futureQueue.offer(event.getChannel().connect(remoteAddress));, +                assert finished;, +                finished = futureQueue.offer(event.getChannel().connect(remoteAddress));, +                assert finished;, +                finished = futureQueue.offer(failedFuture(e.getChannel(), cause));, +                assert finished;, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +                finished = futureQueue.offer(event.getChannel().connect(remoteAddress));, +                assert finished;, +                finished = futureQueue.offer(event.getChannel().connect(remoteAddress));, +                assert finished;, +                finished = futureQueue.offer(failedFuture(e.getChannel(), cause));, +                assert finished;, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, +            boolean finished = futureQueue.offer(evt.getChannel().bind(localAddress));, +            assert finished;, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +                finished = futureQueue.offer(event.getChannel().connect(remoteAddress));, +                assert finished;, +                finished = futureQueue.offer(event.getChannel().connect(remoteAddress));, +                assert finished;, +                finished = futureQueue.offer(failedFuture(e.getChannel(), cause));, +                assert finished;, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, +            boolean finished = futureQueue.offer(evt.getChannel().bind(localAddress));, +            assert finished;, +++ b/src/main/java/org/jboss/netty/buffer/ReadOnlyChannelBuffer.java, +import java.nio.ReadOnlyBufferException;, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +                finished = futureQueue.offer(event.getChannel().connect(remoteAddress));, +                assert finished;, +                finished = futureQueue.offer(event.getChannel().connect(remoteAddress));, +                assert finished;, +                finished = futureQueue.offer(failedFuture(e.getChannel(), cause));, +                assert finished;, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, +            boolean finished = futureQueue.offer(evt.getChannel().bind(localAddress));, +            assert finished;, +++ b/src/main/java/org/jboss/netty/buffer/ReadOnlyChannelBuffer.java, +import java.nio.ReadOnlyBufferException;, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioProviderMetadata.java, +                        boolean finished = resultQueue.offer(Integer.valueOf(level));, +                        assert finished;, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +                finished = futureQueue.offer(event.getChannel().connect(remoteAddress));, +                assert finished;, +                finished = futureQueue.offer(event.getChannel().connect(remoteAddress));, +                assert finished;, +                finished = futureQueue.offer(failedFuture(e.getChannel(), cause));, +                assert finished;, +++ b/src/main/java/org/jboss/netty/bootstrap/ServerBootstrap.java, +            boolean finished = futureQueue.offer(evt.getChannel().bind(localAddress));, +            assert finished;, +++ b/src/main/java/org/jboss/netty/buffer/ReadOnlyChannelBuffer.java, +import java.nio.ReadOnlyBufferException;, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +        throw new ReadOnlyBufferException();, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioProviderMetadata.java, +                        boolean finished = resultQueue.offer(Integer.valueOf(level));, +                        assert finished;, +++ b/src/main/java/org/jboss/netty/example/factorial/FactorialClientHandler.java, +                    boolean offered = answer.offer((BigInteger) e.getMessage());, +                    assert offered;, +++ b/src/main/java/org/jboss/netty/bootstrap/ClientBootstrap.java, +                finished = futureQueue.offer(event.getChannel().connect(remoteAddress));, +                assert finished;, +                finished = futureQueue.offer(event.getChannel().connect(remoteAddress));, +                assert finished;]