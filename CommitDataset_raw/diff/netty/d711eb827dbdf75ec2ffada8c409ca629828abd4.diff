[+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +        try {, +        } finally {, +            // Ensure the file descriptor is closed in all cases., +    }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +        try {, +        } finally {, +            // Ensure the file descriptor is closed in all cases., +    }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java, +            if (isActive()) {, +                // If it is still active, we need to call epollInReady as otherwise we may miss to, +                // read pending data from the underyling file descriptor., +                // See https://github.com/netty/netty/issues/3709, +                epollInReady();, +            } else {, +        }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +        try {, +        } finally {, +            // Ensure the file descriptor is closed in all cases., +    }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java, +            if (isActive()) {, +                // If it is still active, we need to call epollInReady as otherwise we may miss to, +                // read pending data from the underyling file descriptor., +                // See https://github.com/netty/netty/issues/3709, +                epollInReady();, +            } else {, +        }, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoop.java, +                if (ch != null) {, +                    // First check if EPOLLIN was set, in this case we do not need to check for, +                    // EPOLLRDHUP as EPOLLIN will handle connection-reset case as well., +                    if ((ev & Native.EPOLLIN) != 0) {, +                        // Something is ready to read, so consume it now, +                        unsafe.epollInReady();, +                    } else if ((ev & Native.EPOLLRDHUP) != 0) {]