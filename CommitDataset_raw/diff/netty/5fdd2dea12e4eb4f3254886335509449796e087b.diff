[+++ b/codec/src/main/java/io/netty/handler/codec/embedder/AbstractCodecEmbedder.java, +, +        @Override, +        public void fireEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +            handleEvent(e);, +        }, +++ b/codec/src/main/java/io/netty/handler/codec/embedder/AbstractCodecEmbedder.java, +, +        @Override, +        public void fireEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +            handleEvent(e);, +        }, +++ b/transport-http/src/main/java/io/netty/channel/socket/http/AbstractHttpChannelSink.java, +/*, + * Copyright 2011 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +, +package io.netty.channel.socket.http;, +, +import io.netty.channel.AbstractChannelSink;, +import io.netty.channel.ChannelEvent;, +import io.netty.channel.ChannelPipeline;, +, +public abstract class AbstractHttpChannelSink extends AbstractChannelSink{, +, +    @Override, +    public void fireEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +        pipeline.sendUpstream(e);, +    }, +, +}, +++ b/codec/src/main/java/io/netty/handler/codec/embedder/AbstractCodecEmbedder.java, +, +        @Override, +        public void fireEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +            handleEvent(e);, +        }, +++ b/transport-http/src/main/java/io/netty/channel/socket/http/AbstractHttpChannelSink.java, +/*, + * Copyright 2011 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +, +package io.netty.channel.socket.http;, +, +import io.netty.channel.AbstractChannelSink;, +import io.netty.channel.ChannelEvent;, +import io.netty.channel.ChannelPipeline;, +, +public abstract class AbstractHttpChannelSink extends AbstractChannelSink{, +, +    @Override, +    public void fireEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +        pipeline.sendUpstream(e);, +    }, +, +}, +++ b/transport-http/src/main/java/io/netty/channel/socket/http/HttpTunnelAcceptedChannelSink.java, +class HttpTunnelAcceptedChannelSink extends AbstractHttpChannelSink {, +++ b/codec/src/main/java/io/netty/handler/codec/embedder/AbstractCodecEmbedder.java, +, +        @Override, +        public void fireEventLater(ChannelPipeline pipeline, ChannelEvent e) throws Exception {, +            handleEvent(e);, +        }, +++ b/transport-http/src/main/java/io/netty/channel/socket/http/AbstractHttpChannelSink.java, +/*, + * Copyright 2011 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT]