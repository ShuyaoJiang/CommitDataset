[+++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +import io.netty.util.internal.DetectionUtil;, +, +        if (DetectionUtil.javaVersion() >= 7) {, +            return (int) out.write(toByteBuffers(index, length));, +        }, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +import io.netty.util.internal.DetectionUtil;, +, +        if (DetectionUtil.javaVersion() >= 7) {, +            return (int) out.write(toByteBuffers(index, length));, +        }, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +            , +            , +            // Check if we exceeded the maximum size of 2gb if this is the case then , +            // newCapacity == 0, +            //, +            // https://github.com/netty/netty/issues/258, +            if (newCapacity == 0) {, +                throw new IllegalStateException("Maximum size of 2gb exceeded");, +            }, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +import io.netty.util.internal.DetectionUtil;, +, +        if (DetectionUtil.javaVersion() >= 7) {, +            return (int) out.write(toByteBuffers(index, length));, +        }, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +            , +            , +            // Check if we exceeded the maximum size of 2gb if this is the case then , +            // newCapacity == 0, +            //, +            // https://github.com/netty/netty/issues/258, +            if (newCapacity == 0) {, +                throw new IllegalStateException("Maximum size of 2gb exceeded");, +            }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +     * , +     * <strong>Be aware that calling this method will clear the content of the {@link CookieEncoder}</strong>, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +import io.netty.util.internal.DetectionUtil;, +, +        if (DetectionUtil.javaVersion() >= 7) {, +            return (int) out.write(toByteBuffers(index, length));, +        }, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +            , +            , +            // Check if we exceeded the maximum size of 2gb if this is the case then , +            // newCapacity == 0, +            //, +            // https://github.com/netty/netty/issues/258, +            if (newCapacity == 0) {, +                throw new IllegalStateException("Maximum size of 2gb exceeded");, +            }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +     * , +     * <strong>Be aware that calling this method will clear the content of the {@link CookieEncoder}</strong>, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +                write(ctx, succeededFuture(ctx.getChannel()), CONTINUE.duplicate());, +                m.setContent(ChannelBuffers.dynamicBuffer(e.getChannel().getConfig().getBufferFactory()));, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +import io.netty.util.internal.DetectionUtil;, +, +        if (DetectionUtil.javaVersion() >= 7) {, +            return (int) out.write(toByteBuffers(index, length));, +        }, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +            , +            , +            // Check if we exceeded the maximum size of 2gb if this is the case then , +            // newCapacity == 0, +            //, +            // https://github.com/netty/netty/issues/258, +            if (newCapacity == 0) {, +                throw new IllegalStateException("Maximum size of 2gb exceeded");, +            }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/CookieEncoder.java, +     * , +     * <strong>Be aware that calling this method will clear the content of the {@link CookieEncoder}</strong>, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkAggregator.java, +                write(ctx, succeededFuture(ctx.getChannel()), CONTINUE.duplicate());, +                m.setContent(ChannelBuffers.dynamicBuffer(e.getChannel().getConfig().getBufferFactory()));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java, +import java.util.concurrent.atomic.AtomicLong;, +import io.netty.channel.ChannelStateEvent;, +import io.netty.handler.codec.PrematureChannelClosureException;, + * , + * If the {@link Channel} gets closed and there are requests missing for a response, + * a {@link PrematureChannelClosureException} is thrown., + * , +    private final AtomicLong requestResponseCounter = new AtomicLong(0);, +    private final boolean failOnMissingResponse;, +     *, +        this(4096, 8192, 8192, false);, +        this(maxInitialLineLength, maxHeaderSize, maxChunkSize, false);, +    }, +]