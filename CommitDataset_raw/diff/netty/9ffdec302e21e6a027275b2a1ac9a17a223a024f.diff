[+++ b/handler-proxy/src/test/java/io/netty/handler/proxy/ProxyHandlerTest.java, +import java.util.Random;, +    // set to non-zero value in case you need predictable shuffling of test cases, +    // look for "Seed used: *" debug message in test logs, +    private static final long reproducibleSeed = 0L;, +, +, +                        "Anonymous HTTP proxy: successful connection, AUTO_READ on",, +                        true,, +                        new HttpProxyHandler(anonHttpProxy.address())),, +, +                new SuccessTestItem(, +                        "Anonymous HTTP proxy: successful connection, AUTO_READ off",, +                        DESTINATION,, +                        false,, +                        "HTTP proxy: successful connection, AUTO_READ on",, +                        true,, +                        new HttpProxyHandler(httpProxy.address(), USERNAME, PASSWORD)),, +, +                new SuccessTestItem(, +                        "HTTP proxy: successful connection, AUTO_READ off",, +                        DESTINATION,, +                        false,, +                        "Anonymous HTTPS proxy: successful connection, AUTO_READ on",, +                        true,, +                        clientSslCtx.newHandler(PooledByteBufAllocator.DEFAULT),, +                        new HttpProxyHandler(anonHttpsProxy.address())),, +, +                new SuccessTestItem(, +                        "Anonymous HTTPS proxy: successful connection, AUTO_READ off",, +                        DESTINATION,, +                        false,, +                        "HTTPS proxy: successful connection, AUTO_READ on",, +                        true,, +                        clientSslCtx.newHandler(PooledByteBufAllocator.DEFAULT),, +                        new HttpProxyHandler(httpsProxy.address(), USERNAME, PASSWORD)),, +, +                new SuccessTestItem(, +                        "HTTPS proxy: successful connection, AUTO_READ off",, +                        DESTINATION,, +                        false,, +                        "Anonymous SOCKS4: successful connection, AUTO_READ on",, +                        true,, +                        new Socks4ProxyHandler(anonSocks4Proxy.address())),, +, +                new SuccessTestItem(, +                        "Anonymous SOCKS4: successful connection, AUTO_READ off",, +                        DESTINATION,, +                        false,, +                        "SOCKS4: successful connection, AUTO_READ on",, +                        true,, +                        new Socks4ProxyHandler(socks4Proxy.address(), USERNAME)),, +, +                new SuccessTestItem(, +                        "SOCKS4: successful connection, AUTO_READ off",, +                        DESTINATION,, +                        false,, +                        "Anonymous SOCKS5: successful connection, AUTO_READ on",, +                        true,, +                        new Socks5ProxyHandler(anonSocks5Proxy.address())),, +, +                new SuccessTestItem(, +                        "Anonymous SOCKS5: successful connection, AUTO_READ off",, +                        DESTINATION,, +                        false,, +                        "SOCKS5: successful connection, AUTO_READ on",, +                        true,, +                        new Socks5ProxyHandler(socks5Proxy.address(), USERNAME, PASSWORD)),, +, +                new SuccessTestItem(, +                        "SOCKS5: successful connection, AUTO_READ off",, +                        DESTINATION,, +                        false,, +                        "Single-chain: successful connection, AUTO_READ on",, +                        true,, +                        new Socks5ProxyHandler(interSocks5Proxy.address()), // SOCKS5, +                        new Socks4ProxyHandler(interSocks4Proxy.address()), // SOCKS4, +                        clientSslCtx.newHandler(PooledByteBufAllocator.DEFAULT),, +                        new HttpProxyHandler(interHttpsProxy.address()), // HTTPS, +                        new HttpProxyHandler(interHttpProxy.address()), // HTTP, +                        new HttpProxyHandler(anonHttpProxy.address())),, +, +                new SuccessTestItem(, +                        "Single-chain: successful connection, AUTO_READ off",, +                        DESTINATION,, +                        false,, +                        "Double-chain: successful connection, AUTO_READ on",, +                        true,, +                        new Socks5ProxyHandler(interSocks5Proxy.address()), // SOCKS5, +                        new Socks4ProxyHandler(interSocks4Proxy.address()), // SOCKS4, +                        clientSslCtx.newHandler(PooledByteBufAllocator.DEFAULT),, +                        new HttpProxyHandler(interHttpsProxy.address()), // HTTPS, +                        new HttpProxyHandler(interHttpProxy.address()), // HTTP, +                        new Socks5ProxyHandler(interSocks5Proxy.address()), // SOCKS5, +                        new Socks4ProxyHandler(interSocks4Proxy.address()), // SOCKS4, +                        clientSslCtx.newHandler(PooledByteBufAllocator.DEFAULT),, +                        new HttpProxyHandler(interHttpsProxy.address()), // HTTPS, +                        new HttpProxyHandler(interHttpProxy.address()), // HTTP, +                        new HttpProxyHandler(anonHttpProxy.address())),, +]