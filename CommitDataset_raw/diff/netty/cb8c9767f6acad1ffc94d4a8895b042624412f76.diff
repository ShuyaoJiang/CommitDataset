[+++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    , +    public ByteBuf getBufferFor(int index) throws IOException {, +        if (index < 0 || index > capacity()) {, +            throw new IndexOutOfBoundsException("Invalid index: " + index, +                    + " - Bytes needed: " + (index) + ", maximum is ", +                    + capacity());, +        }, +        , +        List<ByteBuf> components = decompose(index, 1);, +        switch (components.size()) {, +        case 0:, +            return Unpooled.EMPTY_BUFFER;, +        case 1:, +            return components.get(0);, +        default:, +            throw new IOException("Index " + index + " is part of " + components.size() + " buffers!");, +        }, +    }, +++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java, +    , +    public ByteBuf getBufferFor(int index) throws IOException {, +        if (index < 0 || index > capacity()) {, +            throw new IndexOutOfBoundsException("Invalid index: " + index, +                    + " - Bytes needed: " + (index) + ", maximum is ", +                    + capacity());, +        }, +        , +        List<ByteBuf> components = decompose(index, 1);, +        switch (components.size()) {, +        case 0:, +            return Unpooled.EMPTY_BUFFER;, +        case 1:, +            return components.get(0);, +        default:, +            throw new IOException("Index " + index + " is part of " + components.size() + " buffers!");, +        }, +    }, +++ b/pom.xml, +      <version>1.6.4</version>, +        <version>1.0.1</version>, +        <version>1.7</version>, +        <version>2.3.1</version>]