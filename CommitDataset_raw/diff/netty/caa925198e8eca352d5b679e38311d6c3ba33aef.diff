[+++ b/src/main/java/org/jboss/netty/handler/execution/OrderedMemoryAwareThreadPoolExecutor.java, +import java.util.concurrent.ConcurrentLinkedQueue;, +import java.util.concurrent.atomic.AtomicBoolean;, +        private final ConcurrentLinkedQueue<Runnable> tasks = new ConcurrentLinkedQueue<Runnable>();, +        private final AtomicBoolean isRunning = new AtomicBoolean(false);, +, +            if (isRunning.get() == false) {, +            // check if its already running by using CAS. If so just return here. So in the worst case the thread, +            // is executed and do nothing, +            if (isRunning.compareAndSet(false, true)) {, +                try {, +                        final Runnable task = tasks.poll();, +                        // this should never happen but just in case check if, +                        // the queue was empty, +                        if (task == null) {, +                            break;, +                } finally {, +                    // set it back to not running, +                    isRunning.set(false);, +                }]