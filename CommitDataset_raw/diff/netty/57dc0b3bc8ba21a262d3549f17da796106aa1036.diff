[+++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpChunkAggregator.java, +import static org.jboss.netty.channel.Channels.*;, +import static org.jboss.netty.handler.codec.http.HttpHeaders.*;, +, +import org.jboss.netty.util.CharsetUtil;, +    private static final ChannelBuffer CONTINUE = ChannelBuffers.copiedBuffer(, +            "HTTP/1.1 100 Continue\r\n\r\n", CharsetUtil.US_ASCII);, +, +, +            // Handle the 'Expect: 100-continue' header if necessary., +            // TODO: Respond with 413 Request Entity Too Large, +            //   and discard the traffic or close the connection., +            //       No need to notify the upstream handlers - just log., +            //       If decoding a response, just throw an exception., +            if (is100ContinueExpected(m)) {, +                write(ctx, succeededFuture(ctx.getChannel()), CONTINUE.duplicate());, +            }, +, +                // TODO: Respond with 413 Request Entity Too Large, +                //   and discard the traffic or close the connection., +                //       No need to notify the upstream handlers - just log., +                //       If decoding a response, just throw an exception., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpChunkAggregator.java, +import static org.jboss.netty.channel.Channels.*;, +import static org.jboss.netty.handler.codec.http.HttpHeaders.*;, +, +import org.jboss.netty.util.CharsetUtil;, +    private static final ChannelBuffer CONTINUE = ChannelBuffers.copiedBuffer(, +            "HTTP/1.1 100 Continue\r\n\r\n", CharsetUtil.US_ASCII);, +, +, +            // Handle the 'Expect: 100-continue' header if necessary., +            // TODO: Respond with 413 Request Entity Too Large, +            //   and discard the traffic or close the connection., +            //       No need to notify the upstream handlers - just log., +            //       If decoding a response, just throw an exception., +            if (is100ContinueExpected(m)) {, +                write(ctx, succeededFuture(ctx.getChannel()), CONTINUE.duplicate());, +            }, +, +                // TODO: Respond with 413 Request Entity Too Large, +                //   and discard the traffic or close the connection., +                //       No need to notify the upstream handlers - just log., +                //       If decoding a response, just throw an exception., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpHeaders.java, +        // Expect: 100-continue is for requests only., +        if (!(message instanceof HttpRequest)) {, +            return false;, +        }, +, +        // It works only on HTTP/1.1 or later., +        if (message.getProtocolVersion().compareTo(HttpVersion.HTTP_1_1) < 0) {, +            return false;, +        }, +, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpChunkAggregator.java, +import static org.jboss.netty.channel.Channels.*;, +import static org.jboss.netty.handler.codec.http.HttpHeaders.*;, +, +import org.jboss.netty.util.CharsetUtil;, +    private static final ChannelBuffer CONTINUE = ChannelBuffers.copiedBuffer(, +            "HTTP/1.1 100 Continue\r\n\r\n", CharsetUtil.US_ASCII);, +, +, +            // Handle the 'Expect: 100-continue' header if necessary., +            // TODO: Respond with 413 Request Entity Too Large, +            //   and discard the traffic or close the connection., +            //       No need to notify the upstream handlers - just log., +            //       If decoding a response, just throw an exception., +            if (is100ContinueExpected(m)) {, +                write(ctx, succeededFuture(ctx.getChannel()), CONTINUE.duplicate());, +            }, +, +                // TODO: Respond with 413 Request Entity Too Large, +                //   and discard the traffic or close the connection., +                //       No need to notify the upstream handlers - just log., +                //       If decoding a response, just throw an exception., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpHeaders.java, +        // Expect: 100-continue is for requests only., +        if (!(message instanceof HttpRequest)) {, +            return false;, +        }, +, +        // It works only on HTTP/1.1 or later., +        if (message.getProtocolVersion().compareTo(HttpVersion.HTTP_1_1) < 0) {, +            return false;, +        }, +, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMessageDecoder.java, +                // TODO: Respond with Bad Request and discard the traffic, +                //    or close the connection., +                //       No need to notify the upstream handlers - just log., +                //       If decoding a response, just throw an exception., +                    // TODO: Respond with Bad Request and discard the traffic, +                    //    or close the connection., +                    //       No need to notify the upstream handlers - just log., +                    //       If decoding a response, just throw an exception.]