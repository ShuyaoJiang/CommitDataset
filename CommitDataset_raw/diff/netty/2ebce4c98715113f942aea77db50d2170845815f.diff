[+++ b/src/main/java/org/jboss/netty/example/http/HttpRequestHandler.java, +import org.jboss.netty.channel.ChannelFuture;, +import org.jboss.netty.channel.ChannelFutureListener;, +    private volatile HttpRequest request;, +            HttpRequest request = this.request = (HttpRequest) e.getMessage();, +        // Convert the response content to a ChannelBuffer., +        responseContent.setLength(0);, +, +        // Decide whether to close the connection or not., +        boolean close =, +            HttpHeaders.Values.CLOSE.equalsIgnoreCase(request.getHeader(HttpHeaders.Names.CONNECTION)) ||, +            request.getProtocolVersion().equals(HttpVersion.HTTP_1_0) &&, +            !HttpHeaders.Values.KEEP_ALIVE.equalsIgnoreCase(request.getHeader(HttpHeaders.Names.CONNECTION));, +, +        // Build the response object., +        HttpResponse response = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK);, +        response.setHeader(HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(buf.readableBytes()));, +, +        // Write the response., +        ChannelFuture future = e.getChannel().write(response);, +, +        // Close the connection after the write operation is done if necessary., +        if (close) {, +            future.addListener(ChannelFutureListener.CLOSE);, +        }]