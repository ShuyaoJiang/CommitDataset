[+++ b/common/src/main/java/io/netty/util/ResourceLeakDetector.java, +        DefaultResourceLeak(Object referent) {, +                    creationRecord = newRecord(3);, +                String value = newRecord(2);, +    private static final String[] STACK_TRACE_ELEMENT_EXCLUSIONS = {, +            "io.netty.buffer.AbstractByteBufAllocator.toLeakAwareBuffer(",, +    };, +, +    static String newRecord(int recordsToSkip) {, +                String estr = e.toString();, +, +                // Strip the noisy stack trace elements., +                boolean excluded = false;, +                for (String exclusion: STACK_TRACE_ELEMENT_EXCLUSIONS) {, +                    if (estr.startsWith(exclusion)) {, +                        excluded = true;, +                        break;, +                    }, +                }, +, +                if (!excluded) {, +                    buf.append(estr);, +        }]