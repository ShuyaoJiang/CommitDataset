[+++ b/codec/src/test/java/io/netty/handler/codec/ReplayingDecoderTest.java, +import io.netty.channel.ChannelInboundByteHandlerAdapter;, +import org.junit.Ignore;, +, +        ch.finish();, +, +    @Test, +    @Ignore("needs a fix"), +    public void testReplacement() throws Exception {, +        EmbeddedByteChannel ch = new EmbeddedByteChannel(new BloatedLineDecoder());, +, +        // "AB" should be forwarded to LineDecoder by BloatedLineDecoder., +        ch.writeInbound(Unpooled.wrappedBuffer(new byte[]{'A', 'B'}));, +        assertNull(ch.readInbound());, +, +        // "C\n" should be appended to "AB" so that LineDecoder decodes it correctly., +        ch.writeInbound(Unpooled.wrappedBuffer(new byte[]{'C', '\n'}));, +        assertEquals(Unpooled.wrappedBuffer(new byte[] { 'A', 'B', 'C' }), ch.readInbound());, +, +        ch.finish();, +        assertNull(ch.readInbound());, +    }, +, +    private static final class BloatedLineDecoder extends ChannelInboundByteHandlerAdapter {, +        @Override, +        protected void inboundBufferUpdated(ChannelHandlerContext ctx, ByteBuf in) throws Exception {, +            ctx.pipeline().replace(this, "less-bloated", new LineDecoder());, +        }, +    }]