[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/DefaultNioSocketChannelConfig.java, +import java.util.Map;, +    public void setOptions(Map<String, Object> options) {, +        super.setOptions(options);, +        if (getWriteBufferHighWaterMark() < getWriteBufferLowWaterMark()) {, +            // Recover the integrity of the configuration with a sensible value., +            setWriteBufferLowWaterMark0(getWriteBufferHighWaterMark() >>> 1);, +            // Notify the user about misconfiguration., +            logger.warn(, +                    "writeBufferLowWaterMark cannot be greater than " +, +                    "writeBufferHighWaterMark; setting to the half of the " +, +                    "writeBufferHighWaterMark.");, +        }, +    }, +, +    @Override, +            setWriteBufferHighWaterMark0(ConversionUtil.toInt(value));, +            setWriteBufferLowWaterMark0(ConversionUtil.toInt(value));, +        if (writeBufferHighWaterMark < getWriteBufferLowWaterMark()) {, +            throw new IllegalArgumentException(, +                    "writeBufferHighWaterMark cannot be less than " +, +                    "writeBufferLowWaterMark (" + getWriteBufferLowWaterMark() + "): " +, +                    writeBufferHighWaterMark);, +        }, +        setWriteBufferHighWaterMark0(writeBufferHighWaterMark);, +    }, +, +    private void setWriteBufferHighWaterMark0(int writeBufferHighWaterMark) {, +        if (writeBufferLowWaterMark > getWriteBufferHighWaterMark()) {, +            throw new IllegalArgumentException(, +                    "writeBufferLowWaterMark cannot be greater than " +, +                    "writeBufferHighWaterMark (" + getWriteBufferHighWaterMark() + "): " +, +                    writeBufferLowWaterMark);, +        }, +        setWriteBufferLowWaterMark0(writeBufferLowWaterMark);, +    }, +, +    private void setWriteBufferLowWaterMark0(int writeBufferLowWaterMark) {]