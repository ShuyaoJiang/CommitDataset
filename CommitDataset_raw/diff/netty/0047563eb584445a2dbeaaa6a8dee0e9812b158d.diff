[+++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, + * An HTTP <a href="http://en.wikipedia.org/wiki/HTTP_cookie">Cookie</a>., +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, + * An HTTP <a href="http://en.wikipedia.org/wiki/HTTP_cookie">Cookie</a>., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpChunk.java, + * An HTTP chunk which is used for HTTP chunked transfer-encoding., +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, + * An HTTP <a href="http://en.wikipedia.org/wiki/HTTP_cookie">Cookie</a>., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpChunk.java, + * An HTTP chunk which is used for HTTP chunked transfer-encoding., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMessage.java, + * An HTTP message which provides common properties for {@link HttpRequest} and, +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, + * An HTTP <a href="http://en.wikipedia.org/wiki/HTTP_cookie">Cookie</a>., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpChunk.java, + * An HTTP chunk which is used for HTTP chunked transfer-encoding., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMessage.java, + * An HTTP message which provides common properties for {@link HttpRequest} and, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMethod.java, + * The request method of HTTP or its derived protocols, such as, +     * Creates a new HTTP method with the specified name.  You will not need to, +     * create a new method unless you are implementing a protocol derived from, +     * HTTP, such as, +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, + * An HTTP <a href="http://en.wikipedia.org/wiki/HTTP_cookie">Cookie</a>., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpChunk.java, + * An HTTP chunk which is used for HTTP chunked transfer-encoding., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMessage.java, + * An HTTP message which provides common properties for {@link HttpRequest} and, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMethod.java, + * The request method of HTTP or its derived protocols, such as, +     * Creates a new HTTP method with the specified name.  You will not need to, +     * create a new method unless you are implementing a protocol derived from, +     * HTTP, such as, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpRequest.java, + * An HTTP request., +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, + * An HTTP <a href="http://en.wikipedia.org/wiki/HTTP_cookie">Cookie</a>., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpChunk.java, + * An HTTP chunk which is used for HTTP chunked transfer-encoding., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMessage.java, + * An HTTP message which provides common properties for {@link HttpRequest} and, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMethod.java, + * The request method of HTTP or its derived protocols, such as, +     * Creates a new HTTP method with the specified name.  You will not need to, +     * create a new method unless you are implementing a protocol derived from, +     * HTTP, such as, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpRequest.java, + * An HTTP request., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpResponse.java, + * An HTTP response., +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, + * An HTTP <a href="http://en.wikipedia.org/wiki/HTTP_cookie">Cookie</a>., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpChunk.java, + * An HTTP chunk which is used for HTTP chunked transfer-encoding., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMessage.java, + * An HTTP message which provides common properties for {@link HttpRequest} and, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMethod.java, + * The request method of HTTP or its derived protocols, such as, +     * Creates a new HTTP method with the specified name.  You will not need to, +     * create a new method unless you are implementing a protocol derived from, +     * HTTP, such as, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpRequest.java, + * An HTTP request., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpResponse.java, + * An HTTP response., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpResponseStatus.java, + * The response code and its description of HTTP or its derived protocols, such as, +++ b/src/main/java/org/jboss/netty/handler/codec/http/Cookie.java, + * An HTTP <a href="http://en.wikipedia.org/wiki/HTTP_cookie">Cookie</a>., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpChunk.java, + * An HTTP chunk which is used for HTTP chunked transfer-encoding., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMessage.java, + * An HTTP message which provides common properties for {@link HttpRequest} and, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMethod.java, + * The request method of HTTP or its derived protocols, such as, +     * Creates a new HTTP method with the specified name.  You will not need to, +     * create a new method unless you are implementing a protocol derived from, +     * HTTP, such as, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpRequest.java, + * An HTTP request., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpResponse.java, + * An HTTP response., +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpResponseStatus.java, + * The response code and its description of HTTP or its derived protocols, such as, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpVersion.java, + * The version of HTTP or its derived protocols, such as, +     * Creates a new HTTP version with the specified protocol name and version, +     * numbers.  You will not need to create a new instance unless you are, +     * implementing a protocol derived from HTTP, such as]