[+++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, +            SSLContext.setVerify(ctx, SSL.SSL_CVERIFY_NONE, VERIFY_DEPTH);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, +            SSLContext.setVerify(ctx, SSL.SSL_CVERIFY_NONE, VERIFY_DEPTH);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +import io.netty.util.internal.UnstableApi;, +    /**, +     * See <a href="https://www.openssl.org/docs/man1.0.2/ssl/SSL_set_verify.html">SSL_set_verify</a> and, +     * {@link SSL#setVerify(long, int, int)}., +     */, +    @UnstableApi, +    public synchronized final void setVerify(int verifyMode, int depth) {, +        SSL.setVerify(ssl, verifyMode, depth);, +    }, +, +                    SSL.setVerify(ssl, SSL.SSL_CVERIFY_REQUIRED, ReferenceCountedOpenSslContext.VERIFY_DEPTH);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, +            SSLContext.setVerify(ctx, SSL.SSL_CVERIFY_NONE, VERIFY_DEPTH);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +import io.netty.util.internal.UnstableApi;, +    /**, +     * See <a href="https://www.openssl.org/docs/man1.0.2/ssl/SSL_set_verify.html">SSL_set_verify</a> and, +     * {@link SSL#setVerify(long, int, int)}., +     */, +    @UnstableApi, +    public synchronized final void setVerify(int verifyMode, int depth) {, +        SSL.setVerify(ssl, verifyMode, depth);, +    }, +, +                    SSL.setVerify(ssl, SSL.SSL_CVERIFY_REQUIRED, ReferenceCountedOpenSslContext.VERIFY_DEPTH);, +++ b/handler/src/test/java/io/netty/handler/ssl/JdkOpenSslEngineInteroptTest.java, +import javax.net.ssl.SSLException;, +, +import static io.netty.tcnative.jni.SSL.SSL_CVERIFY_IGNORED;, +, +    @Override, +    protected void mySetupMutualAuthServerInitSslHandler(SslHandler handler) {, +        ReferenceCountedOpenSslEngine engine = (ReferenceCountedOpenSslEngine) handler.engine();, +        engine.setVerify(SSL_CVERIFY_IGNORED, 1);, +    }, +, +    @Override, +    protected boolean mySetupMutualAuthServerIsValidClientException(Throwable cause) {, +        // TODO(scott): work around for a JDK issue. The exception should be SSLHandshakeException., +        return super.mySetupMutualAuthServerIsValidException(cause) || cause instanceof SSLException;, +    }, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, +            SSLContext.setVerify(ctx, SSL.SSL_CVERIFY_NONE, VERIFY_DEPTH);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java, +import io.netty.util.internal.UnstableApi;, +    /**, +     * See <a href="https://www.openssl.org/docs/man1.0.2/ssl/SSL_set_verify.html">SSL_set_verify</a> and, +     * {@link SSL#setVerify(long, int, int)}., +     */, +    @UnstableApi, +    public synchronized final void setVerify(int verifyMode, int depth) {, +        SSL.setVerify(ssl, verifyMode, depth);, +    }, +, +                    SSL.setVerify(ssl, SSL.SSL_CVERIFY_REQUIRED, ReferenceCountedOpenSslContext.VERIFY_DEPTH);, +++ b/handler/src/test/java/io/netty/handler/ssl/JdkOpenSslEngineInteroptTest.java, +import javax.net.ssl.SSLException;, +, +import static io.netty.tcnative.jni.SSL.SSL_CVERIFY_IGNORED;, +, +    @Override, +    protected void mySetupMutualAuthServerInitSslHandler(SslHandler handler) {, +        ReferenceCountedOpenSslEngine engine = (ReferenceCountedOpenSslEngine) handler.engine();, +        engine.setVerify(SSL_CVERIFY_IGNORED, 1);, +    }, +, +    @Override, +    protected boolean mySetupMutualAuthServerIsValidClientException(Throwable cause) {, +        // TODO(scott): work around for a JDK issue. The exception should be SSLHandshakeException., +        return super.mySetupMutualAuthServerIsValidException(cause) || cause instanceof SSLException;, +    }, +++ b/handler/src/test/java/io/netty/handler/ssl/JdkSslEngineTest.java, +import org.junit.Ignore;, +import javax.net.ssl.SSLEngine;, +import javax.net.ssl.SSLException;, +import javax.net.ssl.SSLHandshakeException;, +    @Ignore /* Does the JDK support a "max certificate chain length"? */, +    @Override, +    public void testMutualAuthValidClientCertChainTooLongFailOptionalClientAuth() throws Exception {, +    }, +, +    @Ignore /* Does the JDK support a "max certificate chain length"? */, +    @Override, +    public void testMutualAuthValidClientCertChainTooLongFailRequireClientAuth() throws Exception {, +    }, +, +    @Override, +    protected boolean mySetupMutualAuthServerIsValidException(Throwable cause) {, +        // TODO(scott): work around for a JDK issue. The exception should be SSLHandshakeException., +        return super.mySetupMutualAuthServerIsValidException(cause) || cause instanceof SSLException;, +    }, +, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java, +            SSLContext.setVerify(ctx, SSL.SSL_CVERIFY_NONE, VERIFY_DEPTH);, +++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java]