[+++ b/transport/src/main/java/io/netty/channel/socket/SctpChannel.java, +, +    /**, +     * Bind a address to the already bound channel to enable multi-homing., +     * The Channel bust be bound and yet to be connected., +     */, +    ChannelFuture bindAddress(InetAddress localAddress);, +, +    /**, +     *  Unbind the address from channel's multi-homing address list., +     *  The address should be added already in multi-homing address list., +     */, +    ChannelFuture unbindAddress(InetAddress localAddress);, +++ b/transport/src/main/java/io/netty/channel/socket/SctpChannel.java, +, +    /**, +     * Bind a address to the already bound channel to enable multi-homing., +     * The Channel bust be bound and yet to be connected., +     */, +    ChannelFuture bindAddress(InetAddress localAddress);, +, +    /**, +     *  Unbind the address from channel's multi-homing address list., +     *  The address should be added already in multi-homing address list., +     */, +    ChannelFuture unbindAddress(InetAddress localAddress);, +++ b/transport/src/main/java/io/netty/channel/socket/nio/NioSctpChannel.java, +import io.netty.channel.ChannelFuture;, +import java.net.InetAddress;, +    @SuppressWarnings("rawtypes"), +    @SuppressWarnings("unchecked"), +, +    @Override, +    public ChannelFuture bindAddress(InetAddress localAddress) {, +        ChannelFuture future = newFuture();, +        doBindAddress(localAddress, future);, +        return future;, +    }, +, +    void doBindAddress(final InetAddress localAddress, final ChannelFuture future) {, +        if (eventLoop().inEventLoop()) {, +            try {, +                javaChannel().bindAddress(localAddress);, +                future.setSuccess();, +                // TODO: Do we want to fire an event ?, +            } catch (Throwable t) {, +                future.setFailure(t);, +                pipeline().fireExceptionCaught(t);, +            }, +        } else {, +            eventLoop().execute(new Runnable() {, +                @Override, +                public void run() {, +                    doBindAddress(localAddress, future);, +                }, +            });, +        }, +    }, +, +    @Override, +    public ChannelFuture unbindAddress(InetAddress localAddress) {, +        ChannelFuture future = newFuture();, +        doUnbindAddress(localAddress, future);, +        return future;, +    }, +, +    void doUnbindAddress(final InetAddress localAddress, final ChannelFuture future) {, +        if (eventLoop().inEventLoop()) {, +            try {, +                javaChannel().unbindAddress(localAddress);, +                future.setSuccess();, +                // TODO: Do we want to fire an event ?, +            } catch (Throwable t) {, +                future.setFailure(t);, +                pipeline().fireExceptionCaught(t);, +            }, +        } else {, +            eventLoop().execute(new Runnable() {, +                @Override, +                public void run() {, +                    doUnbindAddress(localAddress, future);, +                }, +            });, +        }, +    }, +]