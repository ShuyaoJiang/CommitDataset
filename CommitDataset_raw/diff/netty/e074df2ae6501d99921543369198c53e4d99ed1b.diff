[+++ b/resolver-dns/src/main/java/io/netty/resolver/dns/DefaultDnsServerAddressStreamProvider.java, +/*, + * Copyright 2017 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.resolver.dns;, +, +import io.netty.util.internal.UnstableApi;, +, +import static io.netty.resolver.dns.DnsServerAddresses.defaultAddresses;, +, +/**, + * A {@link DnsServerAddressStreamProvider} which will use predefined default DNS servers to use for DNS resolution., + * These defaults do not respect your host's machines defaults., + */, +@UnstableApi, +public final class DefaultDnsServerAddressStreamProvider implements DnsServerAddressStreamProvider {, +    public static final DefaultDnsServerAddressStreamProvider INSTANCE = new DefaultDnsServerAddressStreamProvider();, +, +    private DefaultDnsServerAddressStreamProvider() {, +    }, +, +    @Override, +    public DnsServerAddressStream nameServerAddressStream(String hostname) {, +        return defaultAddresses().stream();, +    }, +}, +++ b/resolver-dns/src/main/java/io/netty/resolver/dns/DefaultDnsServerAddressStreamProvider.java, +/*, + * Copyright 2017 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.resolver.dns;, +, +import io.netty.util.internal.UnstableApi;, +, +import static io.netty.resolver.dns.DnsServerAddresses.defaultAddresses;, +, +/**, + * A {@link DnsServerAddressStreamProvider} which will use predefined default DNS servers to use for DNS resolution., + * These defaults do not respect your host's machines defaults., + */, +@UnstableApi, +public final class DefaultDnsServerAddressStreamProvider implements DnsServerAddressStreamProvider {, +    public static final DefaultDnsServerAddressStreamProvider INSTANCE = new DefaultDnsServerAddressStreamProvider();, +, +    private DefaultDnsServerAddressStreamProvider() {, +    }, +, +    @Override, +    public DnsServerAddressStream nameServerAddressStream(String hostname) {, +        return defaultAddresses().stream();, +    }, +}, +++ b/resolver-dns/src/main/java/io/netty/resolver/dns/DnsAddressResolverGroup.java, +    private final DnsServerAddressStreamProvider nameServerProvider;, +            DnsServerAddressStreamProvider nameServerProvider) {, +        this(new ReflectiveChannelFactory<DatagramChannel>(channelType), nameServerProvider);, +            DnsServerAddressStreamProvider nameServerProvider) {, +        this.nameServerProvider = nameServerProvider;, +        return newResolver((EventLoop) executor, channelFactory, nameServerProvider);, +     * @deprecated Override {@link #newNameResolver(EventLoop, ChannelFactory, DnsServerAddressStreamProvider)}., +            DnsServerAddressStreamProvider nameServerProvider) throws Exception {, +                newNameResolver(eventLoop, channelFactory, nameServerProvider),, +                                                        DnsServerAddressStreamProvider nameServerProvider), +            throws Exception {, +                .nameServerProvider(nameServerProvider), +++ b/resolver-dns/src/main/java/io/netty/resolver/dns/DefaultDnsServerAddressStreamProvider.java, +/*, + * Copyright 2017 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software]