[+++ b/transport/src/main/java/io/netty/channel/ChannelInboundMessageHandlerAdapter.java, +++ b/transport/src/main/java/io/netty/channel/ChannelInboundMessageHandlerAdapter.java, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +                notifyHandlerException(e);, +                notifyHandlerException(e);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +        findContextInbound().invokeExceptionCaught(cause);, +        return this;, +    }, +, +    private void invokeExceptionCaught(final Throwable cause) {, +        EventExecutor executor = executor();, +            invokeExceptionCaught0(cause);, +                        invokeExceptionCaught0(cause);, +    private void invokeExceptionCaught0(Throwable cause) {, +            notifyHandlerException(t);, +                    notifyHandlerException(t);, +                            notifyHandlerException(t);, +                notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +                    notifyHandlerException(t);, +            notifyHandlerException(t);, +                notifyHandlerException(t);, +                notifyHandlerException(t);, +    private void notifyHandlerException(Throwable cause) {, +        if (inExceptionCaught(cause)) {, +            if (logger.isWarnEnabled()) {, +                logger.warn(, +                        "An exception was thrown by a user handler " +, +                                "while handling an exceptionCaught event", cause);, +            }, +            return;, +        }, +, +        if (handler() instanceof ChannelStateHandler) {, +            invokeExceptionCaught(cause);, +        } else {, +            findContextInbound().invokeExceptionCaught(cause);, +        }, +    }, +, +    private static boolean inExceptionCaught(Throwable cause) {, +        do {, +            StackTraceElement[] trace = cause.getStackTrace();, +            if (trace != null) {, +                for (StackTraceElement t : trace) {, +                    if (t == null) {, +                        break;, +                    }, +                    if ("exceptionCaught".equals(t.getMethodName())) {, +                        return true;, +                    }, +                }, +            }, +, +            cause = cause.getCause();, +        } while (cause != null);, +, +        return false;, +    }, +, +++ b/transport/src/main/java/io/netty/channel/ChannelInboundMessageHandlerAdapter.java, +++ b/transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java, +                notifyHandlerException(e);, +                notifyHandlerException(e);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +        findContextInbound().invokeExceptionCaught(cause);, +        return this;, +    }, +, +    private void invokeExceptionCaught(final Throwable cause) {, +        EventExecutor executor = executor();, +            invokeExceptionCaught0(cause);, +                        invokeExceptionCaught0(cause);, +    private void invokeExceptionCaught0(Throwable cause) {, +            notifyHandlerException(t);, +                    notifyHandlerException(t);, +                            notifyHandlerException(t);, +                notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);, +            notifyHandlerException(t);]