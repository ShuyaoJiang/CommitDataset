[+++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +        super(null);, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +        super(null);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpChannel.java, +        this(null, sctpChannel);, +    public NioSctpChannel(Channel parent, SctpChannel sctpChannel) {, +        super(parent, sctpChannel, SelectionKey.OP_READ);, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +        super(null);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpChannel.java, +        this(null, sctpChannel);, +    public NioSctpChannel(Channel parent, SctpChannel sctpChannel) {, +        super(parent, sctpChannel, SelectionKey.OP_READ);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpServerChannel.java, +        super(null, newSocket(), SelectionKey.OP_ACCEPT);, +        buf.add(new NioSctpChannel(this, ch));, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +        super(null);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpChannel.java, +        this(null, sctpChannel);, +    public NioSctpChannel(Channel parent, SctpChannel sctpChannel) {, +        super(parent, sctpChannel, SelectionKey.OP_READ);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpServerChannel.java, +        super(null, newSocket(), SelectionKey.OP_ACCEPT);, +        buf.add(new NioSctpChannel(this, ch));, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/oio/OioSctpChannel.java, +        this(null, ch);, +    public OioSctpChannel(Channel parent, SctpChannel ch) {, +        super(parent);, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +        super(null);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpChannel.java, +        this(null, sctpChannel);, +    public NioSctpChannel(Channel parent, SctpChannel sctpChannel) {, +        super(parent, sctpChannel, SelectionKey.OP_READ);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpServerChannel.java, +        super(null, newSocket(), SelectionKey.OP_ACCEPT);, +        buf.add(new NioSctpChannel(this, ch));, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/oio/OioSctpChannel.java, +        this(null, ch);, +    public OioSctpChannel(Channel parent, SctpChannel ch) {, +        super(parent);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/oio/OioSctpServerChannel.java, +        super(null);, +                            buf.add(new OioSctpChannel(this, s));, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +        super(null);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpChannel.java, +        this(null, sctpChannel);, +    public NioSctpChannel(Channel parent, SctpChannel sctpChannel) {, +        super(parent, sctpChannel, SelectionKey.OP_READ);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpServerChannel.java, +        super(null, newSocket(), SelectionKey.OP_ACCEPT);, +        buf.add(new NioSctpChannel(this, ch));, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/oio/OioSctpChannel.java, +        this(null, ch);, +    public OioSctpChannel(Channel parent, SctpChannel ch) {, +        super(parent);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/oio/OioSctpServerChannel.java, +        super(null);, +                            buf.add(new OioSctpChannel(this, s));, +++ b/transport-udt/src/main/java/io/netty/channel/udt/nio/NioUdtAcceptorChannel.java, +public abstract class NioUdtAcceptorChannel extends AbstractNioMessageChannel implements UdtServerChannel {, +    protected static final InternalLogger logger =, +            InternalLoggerFactory.getInstance(NioUdtAcceptorChannel.class);, +        super(null, channelUDT, OP_ACCEPT);, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +        super(null);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpChannel.java, +        this(null, sctpChannel);, +    public NioSctpChannel(Channel parent, SctpChannel sctpChannel) {, +        super(parent, sctpChannel, SelectionKey.OP_READ);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpServerChannel.java, +        super(null, newSocket(), SelectionKey.OP_ACCEPT);, +        buf.add(new NioSctpChannel(this, ch));, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/oio/OioSctpChannel.java, +        this(null, ch);, +    public OioSctpChannel(Channel parent, SctpChannel ch) {, +        super(parent);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/oio/OioSctpServerChannel.java, +        super(null);, +                            buf.add(new OioSctpChannel(this, s));, +++ b/transport-udt/src/main/java/io/netty/channel/udt/nio/NioUdtAcceptorChannel.java, +public abstract class NioUdtAcceptorChannel extends AbstractNioMessageChannel implements UdtServerChannel {, +    protected static final InternalLogger logger =, +            InternalLoggerFactory.getInstance(NioUdtAcceptorChannel.class);, +        super(null, channelUDT, OP_ACCEPT);, +++ b/transport-udt/src/main/java/io/netty/channel/udt/nio/NioUdtByteAcceptorChannel.java, +            buf.add(new NioUdtByteConnectorChannel(this, channelUDT));, +++ b/transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java, +        super(null);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpChannel.java, +        this(null, sctpChannel);, +    public NioSctpChannel(Channel parent, SctpChannel sctpChannel) {, +        super(parent, sctpChannel, SelectionKey.OP_READ);, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/nio/NioSctpServerChannel.java, +        super(null, newSocket(), SelectionKey.OP_ACCEPT);, +        buf.add(new NioSctpChannel(this, ch));, +++ b/transport-sctp/src/main/java/io/netty/channel/sctp/oio/OioSctpChannel.java]