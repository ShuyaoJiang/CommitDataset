[+++ b/buffer/src/main/java/io/netty/buffer/Unpooled.java, +import java.io.InputStream;, +import java.io.OutputStream;, +import java.nio.ReadOnlyBufferException;, +import java.nio.channels.GatheringByteChannel;, +import java.nio.channels.ScatteringByteChannel;, +    public static final ByteBuf EMPTY_BUFFER = new AbstractByteBuf(0) {, +        @Override, +        public int capacity() {, +            return 0;, +        }, +, +        @Override, +        public ByteBuf capacity(int newCapacity) {, +            throw new ReadOnlyBufferException();, +        }, +, +        @Override, +        public ByteBufAllocator alloc() {, +            return ALLOC;, +        }, +, +        @Override, +        public ByteOrder order() {, +            return BIG_ENDIAN;, +        }, +, +        @Override, +        public ByteBuf unwrap() {, +            return null;, +        }, +, +        @Override, +        public boolean isDirect() {, +            return false;, +        }, +, +        @Override, +        public byte getByte(int index) {, +            throw new IndexOutOfBoundsException();, +        }, +, +        @Override, +        public short getShort(int index) {, +            throw new IndexOutOfBoundsException();, +        }, +, +        @Override, +        public int getUnsignedMedium(int index) {, +            throw new IndexOutOfBoundsException();, +        }, +, +        @Override, +        public int getInt(int index) {, +            throw new IndexOutOfBoundsException();, +        }, +, +        @Override, +        public long getLong(int index) {, +            throw new IndexOutOfBoundsException();, +        }, +, +        @Override, +        public ByteBuf getBytes(int index, ByteBuf dst, int dstIndex, int length) {, +            throw new IndexOutOfBoundsException();, +        }, +, +        @Override, +        public ByteBuf getBytes(int index, byte[] dst, int dstIndex, int length) {, +            throw new IndexOutOfBoundsException();, +        }, +, +        @Override, +        public ByteBuf getBytes(int index, ByteBuffer dst) {, +            throw new IndexOutOfBoundsException();, +        }, +, +        @Override, +        public ByteBuf getBytes(int index, OutputStream out, int length) {, +            throw new IndexOutOfBoundsException();, +        }, +, +        @Override, +        public int getBytes(int index, GatheringByteChannel out, int length) {, +            throw new IndexOutOfBoundsException();, +        }, +, +        @Override, +        public ByteBuf setByte(int index, int value) {, +            throw new ReadOnlyBufferException();, +        }, +, +        @Override, +        public ByteBuf setShort(int index, int value) {, +            throw new ReadOnlyBufferException();, +        }, +, +        @Override, +        public ByteBuf setMedium(int index, int value) {, +            throw new ReadOnlyBufferException();]