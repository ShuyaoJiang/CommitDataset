[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.java, +import io.netty.handler.codec.http.HttpHeaders;, +        return handshake(channel, req, null, channel.newPromise());, +     * @param responseHeaders, +     *            Extra headers to add to the handshake response or {@code null} if no extra headers should be added, +    public abstract ChannelFuture handshake(Channel channel, FullHttpRequest req,, +                                            HttpHeaders responseHeaders, ChannelPromise promise);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.java, +import io.netty.handler.codec.http.HttpHeaders;, +        return handshake(channel, req, null, channel.newPromise());, +     * @param responseHeaders, +     *            Extra headers to add to the handshake response or {@code null} if no extra headers should be added, +    public abstract ChannelFuture handshake(Channel channel, FullHttpRequest req,, +                                            HttpHeaders responseHeaders, ChannelPromise promise);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +import io.netty.handler.codec.http.HttpHeaders;, +    public ChannelFuture handshake(Channel channel, FullHttpRequest req, HttpHeaders headers, ChannelPromise promise) {, +        if (headers != null) {, +            res.headers().add(headers);, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.java, +import io.netty.handler.codec.http.HttpHeaders;, +        return handshake(channel, req, null, channel.newPromise());, +     * @param responseHeaders, +     *            Extra headers to add to the handshake response or {@code null} if no extra headers should be added, +    public abstract ChannelFuture handshake(Channel channel, FullHttpRequest req,, +                                            HttpHeaders responseHeaders, ChannelPromise promise);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +import io.netty.handler.codec.http.HttpHeaders;, +    public ChannelFuture handshake(Channel channel, FullHttpRequest req, HttpHeaders headers, ChannelPromise promise) {, +        if (headers != null) {, +            res.headers().add(headers);, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker07.java, +import io.netty.handler.codec.http.HttpHeaders;, +    public ChannelFuture handshake(Channel channel, FullHttpRequest req, HttpHeaders headers, ChannelPromise promise) {, +        if (headers != null) {, +            res.headers().add(headers);, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.java, +import io.netty.handler.codec.http.HttpHeaders;, +        return handshake(channel, req, null, channel.newPromise());, +     * @param responseHeaders, +     *            Extra headers to add to the handshake response or {@code null} if no extra headers should be added, +    public abstract ChannelFuture handshake(Channel channel, FullHttpRequest req,, +                                            HttpHeaders responseHeaders, ChannelPromise promise);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +import io.netty.handler.codec.http.HttpHeaders;, +    public ChannelFuture handshake(Channel channel, FullHttpRequest req, HttpHeaders headers, ChannelPromise promise) {, +        if (headers != null) {, +            res.headers().add(headers);, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker07.java, +import io.netty.handler.codec.http.HttpHeaders;, +    public ChannelFuture handshake(Channel channel, FullHttpRequest req, HttpHeaders headers, ChannelPromise promise) {, +        if (headers != null) {, +            res.headers().add(headers);, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08.java, +import io.netty.handler.codec.http.HttpHeaders;, +    public ChannelFuture handshake(Channel channel, FullHttpRequest req, HttpHeaders headers, ChannelPromise promise) {, +        if (headers != null) {, +            res.headers().add(headers);, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.java, +import io.netty.handler.codec.http.HttpHeaders;, +        return handshake(channel, req, null, channel.newPromise());, +     * @param responseHeaders, +     *            Extra headers to add to the handshake response or {@code null} if no extra headers should be added, +    public abstract ChannelFuture handshake(Channel channel, FullHttpRequest req,, +                                            HttpHeaders responseHeaders, ChannelPromise promise);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker00.java, +import io.netty.handler.codec.http.HttpHeaders;, +    public ChannelFuture handshake(Channel channel, FullHttpRequest req, HttpHeaders headers, ChannelPromise promise) {, +        if (headers != null) {, +            res.headers().add(headers);, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker07.java, +import io.netty.handler.codec.http.HttpHeaders;, +    public ChannelFuture handshake(Channel channel, FullHttpRequest req, HttpHeaders headers, ChannelPromise promise) {, +        if (headers != null) {, +            res.headers().add(headers);, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker08.java, +import io.netty.handler.codec.http.HttpHeaders;, +    public ChannelFuture handshake(Channel channel, FullHttpRequest req, HttpHeaders headers, ChannelPromise promise) {, +        if (headers != null) {, +            res.headers().add(headers);, +        }, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker13.java, +import io.netty.handler.codec.http.HttpHeaders;]