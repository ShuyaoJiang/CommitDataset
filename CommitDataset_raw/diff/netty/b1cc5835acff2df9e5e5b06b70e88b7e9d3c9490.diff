[+++ b/transport-native-epoll/src/main/c/netty_epoll_linuxsocket.c, +    // We call netty_unix_socket_getOption0 directly so we can handle ENOPROTOOPT by ourself., +    if (netty_unix_socket_getOption0(fd, IPPROTO_TCP, TCP_FASTOPEN_CONNECT, &optval, sizeof(optval)) == -1) {, +++ b/transport-native-epoll/src/main/c/netty_epoll_linuxsocket.c, +    // We call netty_unix_socket_getOption0 directly so we can handle ENOPROTOOPT by ourself., +    if (netty_unix_socket_getOption0(fd, IPPROTO_TCP, TCP_FASTOPEN_CONNECT, &optval, sizeof(optval)) == -1) {, +++ b/transport-native-unix-common/src/main/c/netty_unix_socket.c, +int netty_unix_socket_getOption0(jint fd, int level, int optname, void* optval, socklen_t optlen) {, +++ b/transport-native-epoll/src/main/c/netty_epoll_linuxsocket.c, +    // We call netty_unix_socket_getOption0 directly so we can handle ENOPROTOOPT by ourself., +    if (netty_unix_socket_getOption0(fd, IPPROTO_TCP, TCP_FASTOPEN_CONNECT, &optval, sizeof(optval)) == -1) {, +++ b/transport-native-unix-common/src/main/c/netty_unix_socket.c, +int netty_unix_socket_getOption0(jint fd, int level, int optname, void* optval, socklen_t optlen) {, +++ b/transport-native-unix-common/src/main/c/netty_unix_socket.h, +int netty_unix_socket_getOption0(jint fd, int level, int optname, void* optval, socklen_t optlen);]