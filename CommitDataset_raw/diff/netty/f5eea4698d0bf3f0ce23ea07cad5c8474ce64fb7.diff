[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkedInput.java, +            if (buf == null) {, +                return null;, +            }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpChunkedInput.java, +            if (buf == null) {, +                return null;, +            }, +++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpChunkedInputTest.java, +import io.netty.buffer.ByteBufAllocator;, +import io.netty.channel.ChannelHandlerContext;, +    @Test, +    public void testWrappedReturnNull() throws Exception {, +        HttpChunkedInput input = new HttpChunkedInput(new ChunkedInput<ByteBuf>() {, +            @Override, +            public boolean isEndOfInput() throws Exception {, +                return false;, +            }, +, +            @Override, +            public void close() throws Exception {, +                // NOOP, +            }, +, +            @Override, +            public ByteBuf readChunk(ChannelHandlerContext ctx) throws Exception {, +                return null;, +            }, +, +            @Override, +            public ByteBuf readChunk(ByteBufAllocator allocator) throws Exception {, +                return null;, +            }, +, +            @Override, +            public long length() {, +                return 0;, +            }, +, +            @Override, +            public long progress() {, +                return 0;, +            }, +        });, +        assertNull(input.readChunk(ByteBufAllocator.DEFAULT));, +    }, +, +        assertSame("Last chunk must be LastHttpContent.EMPTY_LAST_CONTENT",, +                LastHttpContent.EMPTY_LAST_CONTENT, lastHttpContent);]