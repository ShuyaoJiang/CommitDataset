[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +import io.netty.channel.embedded.EmbeddedStreamChannel;, +                new EmbeddedStreamChannel(, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +import io.netty.channel.embedded.EmbeddedStreamChannel;, +                new EmbeddedStreamChannel(, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +import io.netty.channel.embedded.EmbeddedStreamChannel;, +    private EmbeddedStreamChannel decoder;, +                    ChannelBuffer newContent = ChannelBuffers.dynamicBuffer();, +                    decode(content, newContent);, +                    finishDecode(newContent);, +                    m.setContent(newContent);, +                                Integer.toString(newContent.readableBytes()));, +                    ChannelBuffer newContent = ChannelBuffers.dynamicBuffer();, +                    decode(content, newContent);, +                    if (newContent.readable()) {, +                        c.setContent(newContent);, +                    } else {, +                        return null;, +                    ChannelBuffer lastProduct = ChannelBuffers.dynamicBuffer();, +                    finishDecode(lastProduct);, +    protected abstract EmbeddedStreamChannel newContentDecoder(String contentEncoding) throws Exception;, +    private void decode(ChannelBuffer in, ChannelBuffer out) {, +        decoder.writeInbound(in);, +        fetchDecoderOutput(out);, +    private void finishDecode(ChannelBuffer out) {, +            fetchDecoderOutput(out);, +    }, +, +    private void fetchDecoderOutput(ChannelBuffer out) {, +        for (;;) {, +            ChannelBuffer buf = (ChannelBuffer) decoder.readInbound();, +            if (buf == null) {, +                break;, +            }, +            out.writeBytes(buf);, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +import io.netty.channel.embedded.EmbeddedStreamChannel;, +                new EmbeddedStreamChannel(, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +import io.netty.channel.embedded.EmbeddedStreamChannel;, +    private EmbeddedStreamChannel decoder;, +                    ChannelBuffer newContent = ChannelBuffers.dynamicBuffer();, +                    decode(content, newContent);, +                    finishDecode(newContent);, +                    m.setContent(newContent);, +                                Integer.toString(newContent.readableBytes()));, +                    ChannelBuffer newContent = ChannelBuffers.dynamicBuffer();, +                    decode(content, newContent);, +                    if (newContent.readable()) {, +                        c.setContent(newContent);, +                    } else {, +                        return null;, +                    ChannelBuffer lastProduct = ChannelBuffers.dynamicBuffer();, +                    finishDecode(lastProduct);, +    protected abstract EmbeddedStreamChannel newContentDecoder(String contentEncoding) throws Exception;, +    private void decode(ChannelBuffer in, ChannelBuffer out) {, +        decoder.writeInbound(in);, +        fetchDecoderOutput(out);, +    private void finishDecode(ChannelBuffer out) {, +            fetchDecoderOutput(out);, +    }, +, +    private void fetchDecoderOutput(ChannelBuffer out) {, +        for (;;) {, +            ChannelBuffer buf = (ChannelBuffer) decoder.readInbound();, +            if (buf == null) {, +                break;, +            }, +            out.writeBytes(buf);, +        }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecompressor.java, +import io.netty.channel.embedded.EmbeddedStreamChannel;, +    protected EmbeddedStreamChannel newContentDecoder(String contentEncoding) throws Exception {, +            return new EmbeddedStreamChannel(new ZlibDecoder(ZlibWrapper.GZIP));, +            return new EmbeddedStreamChannel(new ZlibDecoder(ZlibWrapper.ZLIB_OR_NONE));, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java, +import io.netty.channel.embedded.EmbeddedStreamChannel;, +                new EmbeddedStreamChannel(, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java, +import io.netty.channel.embedded.EmbeddedStreamChannel;, +    private EmbeddedStreamChannel decoder;, +                    ChannelBuffer newContent = ChannelBuffers.dynamicBuffer();, +                    decode(content, newContent);, +                    finishDecode(newContent);, +                    m.setContent(newContent);, +                                Integer.toString(newContent.readableBytes()));, +                    ChannelBuffer newContent = ChannelBuffers.dynamicBuffer();, +                    decode(content, newContent);, +                    if (newContent.readable()) {, +                        c.setContent(newContent);, +                    } else {, +                        return null;, +                    ChannelBuffer lastProduct = ChannelBuffers.dynamicBuffer();, +                    finishDecode(lastProduct);, +    protected abstract EmbeddedStreamChannel newContentDecoder(String contentEncoding) throws Exception;, +    private void decode(ChannelBuffer in, ChannelBuffer out) {, +        decoder.writeInbound(in);]