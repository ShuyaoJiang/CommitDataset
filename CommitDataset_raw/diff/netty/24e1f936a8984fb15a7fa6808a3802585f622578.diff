[+++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    public ChannelBufferType bufferType() {, +        return ChannelBufferType.MESSAGE;, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    public ChannelBufferType bufferType() {, +        return ChannelBufferType.MESSAGE;, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +    ChannelBufferType bufferType();, +, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    public ChannelBufferType bufferType() {, +        return ChannelBufferType.MESSAGE;, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +    ChannelBufferType bufferType();, +, +++ b/transport/src/main/java/io/netty/channel/ChannelBufferHolder.java, +    private final ChannelBufferType type;, +        type = ChannelBufferType.MESSAGE;, +        type = ChannelBufferType.STREAM;, +    public ChannelBufferType type() {, +        return type;, +        switch (type) {, +        case MESSAGE:, +        case STREAM:, +        default:, +            throw new Error();, +        switch (type) {, +        case MESSAGE:, +        case STREAM:, +        default:, +            throw new Error();, +        switch (type) {, +        case MESSAGE:, +        case STREAM:, +        default:, +            throw new Error();, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    public ChannelBufferType bufferType() {, +        return ChannelBufferType.MESSAGE;, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +    ChannelBufferType bufferType();, +, +++ b/transport/src/main/java/io/netty/channel/ChannelBufferHolder.java, +    private final ChannelBufferType type;, +        type = ChannelBufferType.MESSAGE;, +        type = ChannelBufferType.STREAM;, +    public ChannelBufferType type() {, +        return type;, +        switch (type) {, +        case MESSAGE:, +        case STREAM:, +        default:, +            throw new Error();, +        switch (type) {, +        case MESSAGE:, +        case STREAM:, +        default:, +            throw new Error();, +        switch (type) {, +        case MESSAGE:, +        case STREAM:, +        default:, +            throw new Error();, +++ b/transport/src/main/java/io/netty/channel/ChannelBufferType.java, +/*, + * Copyright 2012 The Netty Project, + *, + * The Netty Project licenses this file to you under the Apache License,, + * version 2.0 (the "License"); you may not use this file except in compliance, + * with the License. You may obtain a copy of the License at:, + *, + *   http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations, + * under the License., + */, +package io.netty.channel;, +, +public enum ChannelBufferType {, +    STREAM,, +    MESSAGE;, +}, +++ b/transport/src/main/java/io/netty/channel/AbstractServerChannel.java, +    public ChannelBufferType bufferType() {, +        return ChannelBufferType.MESSAGE;, +++ b/transport/src/main/java/io/netty/channel/Channel.java, +    ChannelBufferType bufferType();, +, +++ b/transport/src/main/java/io/netty/channel/ChannelBufferHolder.java, +    private final ChannelBufferType type;, +        type = ChannelBufferType.MESSAGE;, +        type = ChannelBufferType.STREAM;, +    public ChannelBufferType type() {, +        return type;, +        switch (type) {, +        case MESSAGE:, +        case STREAM:]