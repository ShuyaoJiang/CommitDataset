[+++ b/src/main/java/org/jboss/netty/channel/socket/nio/DefaultNioSocketChannelConfig.java, +    private volatile ReceiveBufferSizePredictor predictor =, +        new DefaultReceiveBufferSizePredictor();, +        return predictor;, +        if (predictor == null) {, +            throw new NullPointerException("predictor");, +        }, +        this.predictor = predictor;, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/DefaultNioSocketChannelConfig.java, +    private volatile ReceiveBufferSizePredictor predictor =, +        new DefaultReceiveBufferSizePredictor();, +        return predictor;, +        if (predictor == null) {, +            throw new NullPointerException("predictor");, +        }, +        this.predictor = predictor;, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioSocketChannelConfig.java, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/DefaultNioSocketChannelConfig.java, +    private volatile ReceiveBufferSizePredictor predictor =, +        new DefaultReceiveBufferSizePredictor();, +        return predictor;, +        if (predictor == null) {, +            throw new NullPointerException("predictor");, +        }, +        this.predictor = predictor;, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioSocketChannelConfig.java, +++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioWorker.java, +import org.jboss.netty.buffer.ChannelBufferFactory;, +        ReceiveBufferSizePredictor predictor =, +            channel.getConfig().getReceiveBufferSizePredictor();, +        ChannelBufferFactory bufferFactory =, +            channel.getConfig().getBufferFactory();, +        ChannelBuffer buffer =, +            bufferFactory.getBuffer(predictor.nextReceiveBufferSize());, +            while ((ret = buffer.writeBytes(ch, buffer.writableBytes())) > 0) {, +                if (!buffer.writable()) {, +            // Update the predictor., +            predictor.previousReceiveBufferSize(readBytes);, +, +            fireMessageReceived(channel, buffer);]