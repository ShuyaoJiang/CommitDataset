[+++ b/transport/src/main/java/io/netty/channel/nio/NioEventLoop.java, +        final SelectedSelectionKeySet selectedKeySet = new SelectedSelectionKeySet();, +, +        Object maybeSelectorImplClass = AccessController.doPrivileged(new PrivilegedAction<Object>() {, +            @Override, +            public Object run() {, +                    return Class.forName(, +                            "sun.nio.ch.SelectorImpl",, +                            false,, +                            PlatformDependent.getSystemClassLoader());, +                } catch (ClassNotFoundException e) {, +                    return e;, +                } catch (SecurityException e) {, +                    return e;, +                }, +            }, +        });, +        if (!(maybeSelectorImplClass instanceof Class) ||, +                // ensure the current selector implementation is what we can instrument., +                !((Class<?>) maybeSelectorImplClass).isAssignableFrom(selector.getClass())) {, +            if (maybeSelectorImplClass instanceof Exception) {, +                Exception e = (Exception) maybeSelectorImplClass;, +                logger.trace("failed to instrument a special java.util.Set into: {}", selector, e);, +            }, +        final Class<?> selectorImplClass = (Class<?>) maybeSelectorImplClass;, +, +        Object maybeException = AccessController.doPrivileged(new PrivilegedAction<Object>() {, +            @Override, +            public Object run() {, +                try {, +                    return null;, +                } catch (NoSuchFieldException e) {, +                    return e;, +                } catch (IllegalAccessException e) {, +                    return e;, +                }, +            }, +        });, +        if (maybeException instanceof Exception) {, +            Exception e = (Exception) maybeException;, +            logger.trace("failed to instrument a special java.util.Set into: {}", selector, e);, +        } else {, +            selectedKeys = selectedKeySet;, +            logger.trace("instrumented a special java.util.Set into: {}", selector);]