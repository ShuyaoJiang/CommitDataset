[+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java, +import io.netty.util.internal.StringUtil;, +       addBodyFileUpload(name, file.getName(), file, contentType, isText);, +    }, +, +    /**, +     * Add a file as a FileUpload, +     *, +     * @param name, +     *            the name of the parameter, +     * @param file, +     *            the file to be uploaded (if not Multipart mode, only the filename will be included), +     * @param filename, +     *            the filename to use for this File part, empty String will be ignored by, +     *            the encoder, +     * @param contentType, +     *            the associated contentType for the File, +     * @param isText, +     *            True if this file should be transmitted in Text format (else binary), +     * @throws NullPointerException, +     *             for name and file, +     * @throws ErrorDataEncoderException, +     *             if the encoding is in error or if the finalize were already done, +     */, +    public void addBodyFileUpload(String name, String filename, File file, String contentType, boolean isText), +            throws ErrorDataEncoderException {, +        if (filename == null) {, +            filename = StringUtil.EMPTY_STRING;, +        }, +        FileUpload fileUpload = factory.createFileUpload(request, name, filename, scontentType,, +                        .append(HttpHeaderValues.ATTACHMENT);, +, +                    if (!fileUpload.getFilename().isEmpty()) {, +                        replacement.append("; "), +                                   .append('"');, +                    }, +, +                    replacement.append("\r\n");, +, +                if (fileUpload.getFilename().isEmpty()) {, +                    // Content-Disposition: attachment, +                    internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + ": ", +                            + HttpHeaderValues.ATTACHMENT + "\r\n");, +                } else {, +                    internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + ": ", +                            + HttpHeaderValues.ATTACHMENT + "; ", +                }, +, +                if (fileUpload.getFilename().isEmpty()) {, +                    // Content-Disposition: form-data; name="files";, +                    internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + ": " + HttpHeaderValues.FORM_DATA + "; ", +                            + HttpHeaderValues.NAME + "=\"" + fileUpload.getName() + "\"\r\n");, +                } else {, +            }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java, +import io.netty.util.internal.StringUtil;, +       addBodyFileUpload(name, file.getName(), file, contentType, isText);, +    }, +, +    /**, +     * Add a file as a FileUpload, +     *, +     * @param name, +     *            the name of the parameter, +     * @param file, +     *            the file to be uploaded (if not Multipart mode, only the filename will be included), +     * @param filename, +     *            the filename to use for this File part, empty String will be ignored by, +     *            the encoder, +     * @param contentType, +     *            the associated contentType for the File, +     * @param isText, +     *            True if this file should be transmitted in Text format (else binary), +     * @throws NullPointerException, +     *             for name and file, +     * @throws ErrorDataEncoderException, +     *             if the encoding is in error or if the finalize were already done, +     */, +    public void addBodyFileUpload(String name, String filename, File file, String contentType, boolean isText), +            throws ErrorDataEncoderException {, +        if (filename == null) {, +            filename = StringUtil.EMPTY_STRING;, +        }, +        FileUpload fileUpload = factory.createFileUpload(request, name, filename, scontentType,, +                        .append(HttpHeaderValues.ATTACHMENT);, +, +                    if (!fileUpload.getFilename().isEmpty()) {, +                        replacement.append("; "), +                                   .append('"');, +                    }, +, +                    replacement.append("\r\n");, +, +                if (fileUpload.getFilename().isEmpty()) {, +                    // Content-Disposition: attachment, +                    internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + ": ", +                            + HttpHeaderValues.ATTACHMENT + "\r\n");, +                } else {, +                    internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + ": ", +                            + HttpHeaderValues.ATTACHMENT + "; "]