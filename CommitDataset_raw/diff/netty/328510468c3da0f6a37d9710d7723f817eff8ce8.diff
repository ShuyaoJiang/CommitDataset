[+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameCodec.java, +                consumeBytes(frame.streamId(), frame.windowSizeIncrement(), promise);, +    private void consumeBytes(int streamId, int bytes, ChannelPromise promise) {, +            promise.setSuccess();, +            promise.setFailure(t);, +++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameCodec.java, +                consumeBytes(frame.streamId(), frame.windowSizeIncrement(), promise);, +    private void consumeBytes(int streamId, int bytes, ChannelPromise promise) {, +            promise.setSuccess();, +            promise.setFailure(t);, +++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2FrameCodecTest.java, +        ChannelFuture f = channel.write(new DefaultHttp2WindowUpdateFrame(100).setStreamId(stream.id()));, +        assertTrue(f.isSuccess());, +    }, +, +    @Test, +    public void windowUpdateMayFail() throws Exception {, +        frameListener.onHeadersRead(http2HandlerCtx, 3, request, 31, false);, +        Http2Connection connection = framingCodec.connectionHandler().connection();, +        Http2Stream stream = connection.stream(3);, +        assertNotNull(stream);, +, +        // Fails, cause trying to return too many bytes to the flow controller, +        ChannelFuture f = channel.write(new DefaultHttp2WindowUpdateFrame(100).setStreamId(stream.id()));, +        assertTrue(f.isDone());, +        assertFalse(f.isSuccess());, +        assertThat(f.cause(), instanceOf(Http2Exception.class));]