[+++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, + * The handshake will be automaticly issued for you once the {@link Channel} is active and, + * {@link SSLEngine#getUseClientMode()} returns {@code true}., + * So no need to bother with it by your self., +++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, + * The handshake will be automaticly issued for you once the {@link Channel} is active and, + * {@link SSLEngine#getUseClientMode()} returns {@code true}., + * So no need to bother with it by your self., +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedFile.java, +import io.netty.channel.FileRegion;, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, + * The handshake will be automaticly issued for you once the {@link Channel} is active and, + * {@link SSLEngine#getUseClientMode()} returns {@code true}., + * So no need to bother with it by your self., +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedFile.java, +import io.netty.channel.FileRegion;, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedNioFile.java, +import io.netty.channel.FileRegion;, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, + * The handshake will be automaticly issued for you once the {@link Channel} is active and, + * {@link SSLEngine#getUseClientMode()} returns {@code true}., + * So no need to bother with it by your self., +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedFile.java, +import io.netty.channel.FileRegion;, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedNioFile.java, +import io.netty.channel.FileRegion;, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedNioStream.java, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, + * The handshake will be automaticly issued for you once the {@link Channel} is active and, + * {@link SSLEngine#getUseClientMode()} returns {@code true}., + * So no need to bother with it by your self., +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedFile.java, +import io.netty.channel.FileRegion;, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedNioFile.java, +import io.netty.channel.FileRegion;, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedNioStream.java, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedStream.java, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/ssl/SslHandler.java, + * The handshake will be automaticly issued for you once the {@link Channel} is active and, + * {@link SSLEngine#getUseClientMode()} returns {@code true}., + * So no need to bother with it by your self., +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedFile.java, +import io.netty.channel.FileRegion;, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedNioFile.java, +import io.netty.channel.FileRegion;, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedNioStream.java, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedStream.java, +     *                  {@link #readChunk(ByteBuf)} call, +++ b/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java, + * {@link ChunkedInput#readChunk(Object)}, resulting in the indefinitely suspended]