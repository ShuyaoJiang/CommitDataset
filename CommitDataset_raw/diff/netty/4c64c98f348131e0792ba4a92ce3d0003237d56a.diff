[+++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/AbstractDnsRecord.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +        checkPositiveOrZero(timeToLive, "timeToLive");, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/AbstractDnsRecord.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +        checkPositiveOrZero(timeToLive, "timeToLive");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +                throw new IllegalArgumentException("a header name cannot contain non-ASCII character: " + value);, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/AbstractDnsRecord.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +        checkPositiveOrZero(timeToLive, "timeToLive");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +                throw new IllegalArgumentException("a header name cannot contain non-ASCII character: " + value);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java, +import static io.netty.util.internal.ObjectUtil.checkPositive;, +, +        checkPositive(maxInitialLineLength, "maxInitialLineLength");, +        checkPositive(maxHeaderSize, "maxHeaderSize");, +        checkPositive(maxChunkSize, "maxChunkSize");, +, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/AbstractDnsRecord.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +        checkPositiveOrZero(timeToLive, "timeToLive");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +                throw new IllegalArgumentException("a header name cannot contain non-ASCII character: " + value);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java, +import static io.netty.util.internal.ObjectUtil.checkPositive;, +, +        checkPositive(maxInitialLineLength, "maxInitialLineLength");, +        checkPositive(maxHeaderSize, "maxHeaderSize");, +        checkPositive(maxChunkSize, "maxChunkSize");, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseStatus.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +        checkPositiveOrZero(code, "code");, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/AbstractDnsRecord.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +        checkPositiveOrZero(timeToLive, "timeToLive");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +                throw new IllegalArgumentException("a header name cannot contain non-ASCII character: " + value);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java, +import static io.netty.util.internal.ObjectUtil.checkPositive;, +, +        checkPositive(maxInitialLineLength, "maxInitialLineLength");, +        checkPositive(maxHeaderSize, "maxHeaderSize");, +        checkPositive(maxChunkSize, "maxChunkSize");, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseStatus.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +        checkPositiveOrZero(code, "code");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +, +        checkPositiveOrZero(majorVersion, "majorVersion");, +        checkPositiveOrZero(minorVersion, "minorVersion");, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/AbstractDnsRecord.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +        checkPositiveOrZero(timeToLive, "timeToLive");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +                throw new IllegalArgumentException("a header name cannot contain non-ASCII character: " + value);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java, +import static io.netty.util.internal.ObjectUtil.checkPositive;, +, +        checkPositive(maxInitialLineLength, "maxInitialLineLength");, +        checkPositive(maxHeaderSize, "maxHeaderSize");, +        checkPositive(maxChunkSize, "maxChunkSize");, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseStatus.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +        checkPositiveOrZero(code, "code");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +, +        checkPositiveOrZero(majorVersion, "majorVersion");, +        checkPositiveOrZero(minorVersion, "minorVersion");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractMemoryHttpData.java, +            throw new IllegalArgumentException("File too big to be loaded in memory");, +++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/AbstractDnsRecord.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +        checkPositiveOrZero(timeToLive, "timeToLive");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java, +                throw new IllegalArgumentException("a header name cannot contain non-ASCII character: " + value);, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java, +import static io.netty.util.internal.ObjectUtil.checkPositive;, +, +        checkPositive(maxInitialLineLength, "maxInitialLineLength");, +        checkPositive(maxHeaderSize, "maxHeaderSize");, +        checkPositive(maxChunkSize, "maxChunkSize");, +, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseStatus.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +        checkPositiveOrZero(code, "code");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java, +import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;, +, +        checkPositiveOrZero(majorVersion, "majorVersion");, +        checkPositiveOrZero(minorVersion, "minorVersion");, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractMemoryHttpData.java, +            throw new IllegalArgumentException("File too big to be loaded in memory");, +++ b/codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyGoAwayFrame.java]