[+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +    protected final int doWriteBytes(ByteBuf buf, int writeSpinCount) throws Exception {, +            for (int i = writeSpinCount - 1; i >= 0; i--) {, +                    break;, +            for (int i = writeSpinCount - 1; i >= 0; i--) {, +        if (writtenBytes < readableBytes) {, +            // Returned EAGAIN need to set EPOLLOUT, +            setFlag(Native.EPOLLOUT);, +        }, +        return writtenBytes;, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +    protected final int doWriteBytes(ByteBuf buf, int writeSpinCount) throws Exception {, +            for (int i = writeSpinCount - 1; i >= 0; i--) {, +                    break;, +            for (int i = writeSpinCount - 1; i >= 0; i--) {, +        if (writtenBytes < readableBytes) {, +            // Returned EAGAIN need to set EPOLLOUT, +            setFlag(Native.EPOLLOUT);, +        }, +        return writtenBytes;, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java, +    private boolean writeBytes(ChannelOutboundBuffer in, ByteBuf buf, int writeSpinCount) throws Exception {, +            int writtenBytes = doWriteBytes(buf, writeSpinCount);, +            return writeBytesMultiple(in, nioBuffers, nioBuffers.length, readableBytes, writeSpinCount);, +    private boolean writeBytesMultiple(, +            ChannelOutboundBuffer in, IovArray array, int writeSpinCount) throws IOException {, +        for (int i = writeSpinCount - 1; i >= 0; i--) {, +        if (!done) {, +            setFlag(Native.EPOLLOUT);, +        }, +            int nioBufferCnt, long expectedWrittenBytes, int writeSpinCount) throws IOException {, +        for (int i = writeSpinCount - 1; i >= 0; i--) {, +        if (!done) {, +            setFlag(Native.EPOLLOUT);, +        }, +    private boolean writeFileRegion(, +            ChannelOutboundBuffer in, DefaultFileRegion region, int writeSpinCount) throws Exception {, +        for (int i = writeSpinCount - 1; i >= 0; i--) {, +        } else {, +            // Returned EAGAIN need to set EPOLLOUT, +            setFlag(Native.EPOLLOUT);, +        int writeSpinCount = config().getWriteSpinCount();, +                if (!doWriteMultiple(in, writeSpinCount)) {, +                if (!doWriteSingle(in, writeSpinCount)) {, +    protected boolean doWriteSingle(ChannelOutboundBuffer in, int writeSpinCount) throws Exception {, +            if (!writeBytes(in, buf, writeSpinCount)) {, +            if (!writeFileRegion(in, region, writeSpinCount)) {, +    private boolean doWriteMultiple(ChannelOutboundBuffer in, int writeSpinCount) throws Exception {, +                if (!writeBytesMultiple(in, array, writeSpinCount)) {, +                if (!writeBytesMultiple(in, buffers, cnt, in.nioBufferSize(), writeSpinCount)) {, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java, +    protected final int doWriteBytes(ByteBuf buf, int writeSpinCount) throws Exception {, +            for (int i = writeSpinCount - 1; i >= 0; i--) {, +                    break;, +            for (int i = writeSpinCount - 1; i >= 0; i--) {, +        if (writtenBytes < readableBytes) {, +            // Returned EAGAIN need to set EPOLLOUT, +            setFlag(Native.EPOLLOUT);, +        }, +        return writtenBytes;, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java, +    private boolean writeBytes(ChannelOutboundBuffer in, ByteBuf buf, int writeSpinCount) throws Exception {, +            int writtenBytes = doWriteBytes(buf, writeSpinCount);, +            return writeBytesMultiple(in, nioBuffers, nioBuffers.length, readableBytes, writeSpinCount);, +    private boolean writeBytesMultiple(, +            ChannelOutboundBuffer in, IovArray array, int writeSpinCount) throws IOException {, +        for (int i = writeSpinCount - 1; i >= 0; i--) {, +        if (!done) {, +            setFlag(Native.EPOLLOUT);, +        }, +            int nioBufferCnt, long expectedWrittenBytes, int writeSpinCount) throws IOException {, +        for (int i = writeSpinCount - 1; i >= 0; i--) {, +        if (!done) {, +            setFlag(Native.EPOLLOUT);, +        }, +    private boolean writeFileRegion(, +            ChannelOutboundBuffer in, DefaultFileRegion region, int writeSpinCount) throws Exception {, +        for (int i = writeSpinCount - 1; i >= 0; i--) {, +        } else {, +            // Returned EAGAIN need to set EPOLLOUT, +            setFlag(Native.EPOLLOUT);, +        int writeSpinCount = config().getWriteSpinCount();, +                if (!doWriteMultiple(in, writeSpinCount)) {, +                if (!doWriteSingle(in, writeSpinCount)) {, +    protected boolean doWriteSingle(ChannelOutboundBuffer in, int writeSpinCount) throws Exception {, +            if (!writeBytes(in, buf, writeSpinCount)) {, +            if (!writeFileRegion(in, region, writeSpinCount)) {, +    private boolean doWriteMultiple(ChannelOutboundBuffer in, int writeSpinCount) throws Exception {, +                if (!writeBytesMultiple(in, array, writeSpinCount)) {, +                if (!writeBytesMultiple(in, buffers, cnt, in.nioBufferSize(), writeSpinCount)) {, +++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollDomainSocketChannel.java, +    protected boolean doWriteSingle(ChannelOutboundBuffer in, int writeSpinCount) throws Exception {, +        return super.doWriteSingle(in, writeSpinCount);]