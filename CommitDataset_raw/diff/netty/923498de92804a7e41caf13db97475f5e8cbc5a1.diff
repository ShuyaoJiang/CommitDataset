[+++ b/all/pom.xml, +  <groupId>io.netty</groupId>, +++ b/all/pom.xml, +  <groupId>io.netty</groupId>, +++ /dev/null, +++ b/all/pom.xml, +  <groupId>io.netty</groupId>, +++ /dev/null, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return readableBytes() > 0;, +++ b/all/pom.xml, +  <groupId>io.netty</groupId>, +++ /dev/null, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return readableBytes() > 0;, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +import io.netty.util.internal.DetectionUtil;, +, +        if (DetectionUtil.javaVersion() >= 7) {, +            return (int) out.write(toByteBuffers(index, length));, +        }, +++ b/all/pom.xml, +  <groupId>io.netty</groupId>, +++ /dev/null, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return readableBytes() > 0;, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +import io.netty.util.internal.DetectionUtil;, +, +        if (DetectionUtil.javaVersion() >= 7) {, +            return (int) out.write(toByteBuffers(index, length));, +        }, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +            , +            , +            // Check if we exceeded the maximum size of 2gb if this is the case then , +            // newCapacity == 0, +            //, +            // https://github.com/netty/netty/issues/258, +            if (newCapacity == 0) {, +                throw new IllegalStateException("Maximum size of 2gb exceeded");, +            }, +++ b/all/pom.xml, +  <groupId>io.netty</groupId>, +++ /dev/null, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return readableBytes() > 0;, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +import io.netty.util.internal.DetectionUtil;, +, +        if (DetectionUtil.javaVersion() >= 7) {, +            return (int) out.write(toByteBuffers(index, length));, +        }, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +            , +            , +            // Check if we exceeded the maximum size of 2gb if this is the case then , +            // newCapacity == 0, +            //, +            // https://github.com/netty/netty/issues/258, +            if (newCapacity == 0) {, +                throw new IllegalStateException("Maximum size of 2gb exceeded");, +            }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractDiskHttpData.java, +        localfileChannel.force(false);, +            fileChannel.force(false);, +        localfileChannel.force(false);, +        localfileChannel.close();, +            in.close();, +            out.close();, +++ b/all/pom.xml, +  <groupId>io.netty</groupId>, +++ /dev/null, +++ b/buffer/src/main/java/io/netty/buffer/AbstractChannelBuffer.java, +        return readableBytes() > 0;, +++ b/buffer/src/main/java/io/netty/buffer/CompositeChannelBuffer.java, +import io.netty.util.internal.DetectionUtil;, +, +        if (DetectionUtil.javaVersion() >= 7) {, +            return (int) out.write(toByteBuffers(index, length));, +        }, +++ b/buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java, +            , +            , +            // Check if we exceeded the maximum size of 2gb if this is the case then , +            // newCapacity == 0, +            //, +            // https://github.com/netty/netty/issues/258, +            if (newCapacity == 0) {, +                throw new IllegalStateException("Maximum size of 2gb exceeded");, +            }, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractDiskHttpData.java, +        localfileChannel.force(false);, +            fileChannel.force(false);, +        localfileChannel.force(false);, +        localfileChannel.close();, +            in.close();, +            out.close();, +++ b/codec-http/src/main/java/io/netty/handler/codec/http/AbstractMemoryHttpData.java, +        fileChannel.force(false);]