[+++ b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java, +        String path = "META-INF/native/" + libname;, +++ b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java, +        String path = "META-INF/native/" + libname;, +++ b/pom.xml, +    <extensions>, +      <extension>, +        <groupId>kr.motd.maven</groupId>, +        <artifactId>os-maven-plugin</artifactId>, +        <version>1.1.1</version>, +      </extension>, +    </extensions>, +, +        <plugin>, +          <groupId>org.fusesource.hawtjni</groupId>, +          <artifactId>maven-hawtjni-plugin</artifactId>, +          <version>1.10</version>, +        </plugin>, +++ b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java, +        String path = "META-INF/native/" + libname;, +++ b/pom.xml, +    <extensions>, +      <extension>, +        <groupId>kr.motd.maven</groupId>, +        <artifactId>os-maven-plugin</artifactId>, +        <version>1.1.1</version>, +      </extension>, +    </extensions>, +, +        <plugin>, +          <groupId>org.fusesource.hawtjni</groupId>, +          <artifactId>maven-hawtjni-plugin</artifactId>, +          <version>1.10</version>, +        </plugin>, +++ b/transport-native-epoll/pom.xml, +            <id>build-native-lib</id>, +              <nativeSourceDirectory>${project.basedir}/src/main/c</nativeSourceDirectory>, +              <libDirectory>${project.build.outputDirectory}</libDirectory>, +              <!-- We use Maven's artifact classifier instead., +                   This hack will make the hawtjni plugin to put the native library, +                   under 'META-INF/native' rather than 'META-INF/native/${platform}'. -->, +              <platform>.</platform>, +, +      <!-- Because the generated JAR is platform dependent, use the platform as a classifier. -->, +      <plugin>, +        <artifactId>maven-jar-plugin</artifactId>, +        <configuration>, +          <classifier>${os.detected.classifier}</classifier>, +        </configuration>, +      </plugin>, +, +++ b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java, +        String path = "META-INF/native/" + libname;, +++ b/pom.xml, +    <extensions>, +      <extension>, +        <groupId>kr.motd.maven</groupId>, +        <artifactId>os-maven-plugin</artifactId>, +        <version>1.1.1</version>, +      </extension>, +    </extensions>, +, +        <plugin>, +          <groupId>org.fusesource.hawtjni</groupId>, +          <artifactId>maven-hawtjni-plugin</artifactId>, +          <version>1.10</version>, +        </plugin>, +++ b/transport-native-epoll/pom.xml, +            <id>build-native-lib</id>, +              <nativeSourceDirectory>${project.basedir}/src/main/c</nativeSourceDirectory>, +              <libDirectory>${project.build.outputDirectory}</libDirectory>, +              <!-- We use Maven's artifact classifier instead., +                   This hack will make the hawtjni plugin to put the native library, +                   under 'META-INF/native' rather than 'META-INF/native/${platform}'. -->, +              <platform>.</platform>, +, +      <!-- Because the generated JAR is platform dependent, use the platform as a classifier. -->, +      <plugin>, +        <artifactId>maven-jar-plugin</artifactId>, +        <configuration>, +          <classifier>${os.detected.classifier}</classifier>, +        </configuration>, +      </plugin>, +, +++ /dev/null]