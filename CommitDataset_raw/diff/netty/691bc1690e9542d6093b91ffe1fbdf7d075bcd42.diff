[+++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +    private static final byte WRITE_UTF_UNKNOWN = (byte) '?';, +                    buffer._setByte(writerIndex++, WRITE_UTF_UNKNOWN);, +                    continue;, +                    buffer._setByte(writerIndex++, WRITE_UTF_UNKNOWN);, +                    break;, +                    buffer._setByte(writerIndex++, WRITE_UTF_UNKNOWN);, +                    buffer._setByte(writerIndex++, Character.isHighSurrogate(c2) ? WRITE_UTF_UNKNOWN : c2);, +                    continue;, +++ b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java, +    private static final byte WRITE_UTF_UNKNOWN = (byte) '?';, +                    buffer._setByte(writerIndex++, WRITE_UTF_UNKNOWN);, +                    continue;, +                    buffer._setByte(writerIndex++, WRITE_UTF_UNKNOWN);, +                    break;, +                    buffer._setByte(writerIndex++, WRITE_UTF_UNKNOWN);, +                    buffer._setByte(writerIndex++, Character.isHighSurrogate(c2) ? WRITE_UTF_UNKNOWN : c2);, +                    continue;, +++ b/buffer/src/test/java/io/netty/buffer/ByteBufUtilTest.java, +import static io.netty.buffer.Unpooled.unreleasableBuffer;, +import static io.netty.util.ReferenceCountUtil.releaseLater;, +import static org.junit.Assert.assertEquals;, +        ByteBuf buf = releaseLater(Unpooled.buffer(16));, +        ByteBuf buf2 = releaseLater(Unpooled.buffer(16));, +        assertEquals(buf, buf2);, +        ByteBuf buf = unreleasableBuffer(releaseLater(Unpooled.buffer(16)));, +        ByteBuf buf2 = unreleasableBuffer(releaseLater(Unpooled.buffer(16)));, +        assertEquals(buf, buf2);, +        ByteBuf buf = releaseLater(Unpooled.buffer(16));, +        ByteBuf buf2 = releaseLater(Unpooled.buffer(16));, +        assertEquals(buf, buf2);, +                                .append('a'), +                                .append('b'), +        ByteBuf buf = releaseLater(Unpooled.buffer(16));, +        ByteBuf buf2 = releaseLater(Unpooled.buffer(16));, +        assertEquals(buf, buf2);, +    }, +, +    @Test, +    public void testWriteUtf8InvalidOnlyTrailingSurrogate() {, +        String surrogateString = new StringBuilder(2), +                                .append('a'), +                                .append('\uDC00'), +                                .append('b'), +                                .toString();, +        ByteBuf buf = releaseLater(Unpooled.buffer(16));, +        buf.writeBytes(surrogateString.getBytes(CharsetUtil.UTF_8));, +        ByteBuf buf2 = releaseLater(Unpooled.buffer(16));, +        ByteBufUtil.writeUtf8(buf2, surrogateString);, +, +        assertEquals(buf, buf2);, +    }, +, +    @Test, +    public void testWriteUtf8InvalidOnlyLeadingSurrogate() {, +        String surrogateString = new StringBuilder(2), +                                .append('a'), +                                .append('\uD800'), +                                .append('b'), +                                .toString();, +        ByteBuf buf = releaseLater(Unpooled.buffer(16));, +        buf.writeBytes(surrogateString.getBytes(CharsetUtil.UTF_8));, +        ByteBuf buf2 = releaseLater(Unpooled.buffer(16));, +        ByteBufUtil.writeUtf8(buf2, surrogateString);, +, +        assertEquals(buf, buf2);, +    }, +, +    @Test, +    public void testWriteUtf8InvalidSurrogatesSwitched() {, +        String surrogateString = new StringBuilder(2), +                                .append('a'), +                                .append('\uDC00'), +                                .append('\uD800'), +                                .append('b'), +                                .toString();, +        ByteBuf buf = releaseLater(Unpooled.buffer(16));, +        buf.writeBytes(surrogateString.getBytes(CharsetUtil.UTF_8));, +        ByteBuf buf2 = releaseLater(Unpooled.buffer(16));, +        ByteBufUtil.writeUtf8(buf2, surrogateString);, +, +        assertEquals(buf, buf2);, +    }, +, +    @Test, +    public void testWriteUtf8InvalidTwoLeadingSurrogates() {, +        String surrogateString = new StringBuilder(2), +                                .append('a'), +                                .append('\uD800'), +                                .append('\uD800'), +                                .append('b'), +                                .toString();, +        ByteBuf buf = releaseLater(Unpooled.buffer(16));, +        buf.writeBytes(surrogateString.getBytes(CharsetUtil.UTF_8));, +        ByteBuf buf2 = releaseLater(Unpooled.buffer(16));, +        ByteBufUtil.writeUtf8(buf2, surrogateString);, +, +        assertEquals(buf, buf2);, +    }, +]