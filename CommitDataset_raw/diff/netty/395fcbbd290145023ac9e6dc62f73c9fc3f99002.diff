[+++ b/src/main/java/org/jboss/netty/channel/local/LocalAddress.java, +, +    public static final String EPHEMERAL = "ephemeral";, +    public LocalAddress(String id) {, +        id = id.trim().toLowerCase();, +        if (id.length() == 0) {, +            throw new IllegalArgumentException("empty id");, +        }, +        ephemeral = id.equals("ephemeral");, +        if (ephemeral) {, +            return System.identityHashCode(this);, +        } else {, +    }, +        if (ephemeral) {, +            return this == o;, +        } else {, +    }, +++ b/src/main/java/org/jboss/netty/channel/local/LocalAddress.java, +, +    public static final String EPHEMERAL = "ephemeral";, +    public LocalAddress(String id) {, +        id = id.trim().toLowerCase();, +        if (id.length() == 0) {, +            throw new IllegalArgumentException("empty id");, +        }, +        ephemeral = id.equals("ephemeral");, +        if (ephemeral) {, +            return System.identityHashCode(this);, +        } else {, +    }, +        if (ephemeral) {, +            return this == o;, +        } else {, +    }, +++ b/src/main/java/org/jboss/netty/channel/local/LocalClientChannelSink.java, +        bind(channel, succeededFuture(channel), new LocalAddress(LocalAddress.EPHEMERAL));, +++ b/src/main/java/org/jboss/netty/channel/local/LocalAddress.java, +, +    public static final String EPHEMERAL = "ephemeral";, +    public LocalAddress(String id) {, +        id = id.trim().toLowerCase();, +        if (id.length() == 0) {, +            throw new IllegalArgumentException("empty id");, +        }, +        ephemeral = id.equals("ephemeral");, +        if (ephemeral) {, +            return System.identityHashCode(this);, +        } else {, +    }, +        if (ephemeral) {, +            return this == o;, +        } else {, +    }, +++ b/src/main/java/org/jboss/netty/channel/local/LocalClientChannelSink.java, +        bind(channel, succeededFuture(channel), new LocalAddress(LocalAddress.EPHEMERAL));, +++ b/src/main/java/org/jboss/netty/example/local/LocalExample.java, +        LocalAddress socketAddress = new LocalAddress("1");, +++ b/src/main/java/org/jboss/netty/channel/local/LocalAddress.java, +, +    public static final String EPHEMERAL = "ephemeral";, +    public LocalAddress(String id) {, +        id = id.trim().toLowerCase();, +        if (id.length() == 0) {, +            throw new IllegalArgumentException("empty id");, +        }, +        ephemeral = id.equals("ephemeral");, +        if (ephemeral) {, +            return System.identityHashCode(this);, +        } else {, +    }, +        if (ephemeral) {, +            return this == o;, +        } else {, +    }, +++ b/src/main/java/org/jboss/netty/channel/local/LocalClientChannelSink.java, +        bind(channel, succeededFuture(channel), new LocalAddress(LocalAddress.EPHEMERAL));, +++ b/src/main/java/org/jboss/netty/example/local/LocalExample.java, +        LocalAddress socketAddress = new LocalAddress("1");, +++ b/src/main/java/org/jboss/netty/example/servlet/LocalTransportRegister.java, +        serverChannel = serverBootstrap.bind(new LocalAddress("localAddress"));, +++ b/src/main/java/org/jboss/netty/channel/local/LocalAddress.java, +, +    public static final String EPHEMERAL = "ephemeral";, +    public LocalAddress(String id) {, +        id = id.trim().toLowerCase();, +        if (id.length() == 0) {, +            throw new IllegalArgumentException("empty id");, +        }, +        ephemeral = id.equals("ephemeral");, +        if (ephemeral) {, +            return System.identityHashCode(this);, +        } else {, +    }, +        if (ephemeral) {, +            return this == o;, +        } else {, +    }, +++ b/src/main/java/org/jboss/netty/channel/local/LocalClientChannelSink.java, +        bind(channel, succeededFuture(channel), new LocalAddress(LocalAddress.EPHEMERAL));, +++ b/src/main/java/org/jboss/netty/example/local/LocalExample.java]