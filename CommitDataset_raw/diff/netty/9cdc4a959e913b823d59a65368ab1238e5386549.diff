[+++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMessageDecoder.java, +        SKIP_CONTROL_CHARS,, +        READ_CRLF;, +        super(State.SKIP_CONTROL_CHARS);, +        case SKIP_CONTROL_CHARS: {, +            try {, +                skipControlCharacters(buffer);, +                checkpoint(State.READ_INITIAL);, +            } finally {, +                checkpoint();, +            }, +        }, +        checkpoint(State.SKIP_CONTROL_CHARS);, +    private void skipControlCharacters(ChannelBuffer buffer) {, +        for (;;) {, +            char c = (char) buffer.readUnsignedByte();, +            if (!Character.isISOControl(c) &&, +                !Character.isWhitespace(c)) {, +                buffer.readerIndex(buffer.readerIndex() - 1);, +                break;, +            }, +        }, +    }, +, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMessageDecoder.java, +        SKIP_CONTROL_CHARS,, +        READ_CRLF;, +        super(State.SKIP_CONTROL_CHARS);, +        case SKIP_CONTROL_CHARS: {, +            try {, +                skipControlCharacters(buffer);, +                checkpoint(State.READ_INITIAL);, +            } finally {, +                checkpoint();, +            }, +        }, +        checkpoint(State.SKIP_CONTROL_CHARS);, +    private void skipControlCharacters(ChannelBuffer buffer) {, +        for (;;) {, +            char c = (char) buffer.readUnsignedByte();, +            if (!Character.isISOControl(c) &&, +                !Character.isWhitespace(c)) {, +                buffer.readerIndex(buffer.readerIndex() - 1);, +                break;, +            }, +        }, +    }, +, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMethod.java, +            if (Character.isISOControl(name.charAt(i)) ||, +                Character.isWhitespace(name.charAt(i))) {, +                throw new IllegalArgumentException("invalid character in name");, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMessageDecoder.java, +        SKIP_CONTROL_CHARS,, +        READ_CRLF;, +        super(State.SKIP_CONTROL_CHARS);, +        case SKIP_CONTROL_CHARS: {, +            try {, +                skipControlCharacters(buffer);, +                checkpoint(State.READ_INITIAL);, +            } finally {, +                checkpoint();, +            }, +        }, +        checkpoint(State.SKIP_CONTROL_CHARS);, +    private void skipControlCharacters(ChannelBuffer buffer) {, +        for (;;) {, +            char c = (char) buffer.readUnsignedByte();, +            if (!Character.isISOControl(c) &&, +                !Character.isWhitespace(c)) {, +                buffer.readerIndex(buffer.readerIndex() - 1);, +                break;, +            }, +        }, +    }, +, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpMethod.java, +            if (Character.isISOControl(name.charAt(i)) ||, +                Character.isWhitespace(name.charAt(i))) {, +                throw new IllegalArgumentException("invalid character in name");, +++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpVersion.java, +            if (Character.isISOControl(protocolName.charAt(i)) ||, +                Character.isWhitespace(protocolName.charAt(i))) {, +                throw new IllegalArgumentException("invalid character in protocolName");]