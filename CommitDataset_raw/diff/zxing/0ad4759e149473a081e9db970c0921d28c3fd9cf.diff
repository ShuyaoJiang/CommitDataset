[+++ b/android/AndroidManifest.xml, +          android:versionName="4.4 beta 2", +          android:versionCode="90", +++ b/android/AndroidManifest.xml, +          android:versionName="4.4 beta 2", +          android:versionCode="90", +++ b/android/assets/html-en/whatsnew.html, +  <li>The Holo theme is enabled on Android 3 and Android 4 devices.</li>, +  <li>The chosen preview size has changed on some Android 4 devices, , +      in order to accommodate the space taken by the soft navigation bar.</li>, +++ b/android/AndroidManifest.xml, +          android:versionName="4.4 beta 2", +          android:versionCode="90", +++ b/android/assets/html-en/whatsnew.html, +  <li>The Holo theme is enabled on Android 3 and Android 4 devices.</li>, +  <li>The chosen preview size has changed on some Android 4 devices, , +      in order to accommodate the space taken by the soft navigation bar.</li>, +++ b/android/src/com/google/zxing/client/android/camera/CameraConfigurationManager.java, +import java.util.Iterator;, +  private static final int MIN_PREVIEW_PIXELS = 480 * 320; // normal screen, +  private static final double MAX_ASPECT_DISTORTION = 0.15;, +                                    Camera.Parameters.FOCUS_MODE_EDOF);, +    double screenAspectRatio = (double) screenResolution.x / (double) screenResolution.y;, +    // Remove sizes that are unsuitable, +    Iterator<Camera.Size> it = supportedPreviewSizes.iterator();, +    while (it.hasNext()) {, +      Camera.Size supportedPreviewSize = it.next();, +      if (realWidth * realHeight < MIN_PREVIEW_PIXELS) {, +        it.remove();, +, +      double aspectRatio = (double) maybeFlippedWidth / (double) maybeFlippedHeight;, +      double distortion = Math.abs(aspectRatio - screenAspectRatio);, +      if (distortion > MAX_ASPECT_DISTORTION) {, +        it.remove(); , +        continue;, +      }, +, +    // If no exact match, use largest preview size. This was not a great idea on older devices because, +    // of the additional computation needed. We're likely to get here on newer Android 4+ devices, where, +    // the CPU is much more powerful., +    if (!supportedPreviewSizes.isEmpty()) {, +      Camera.Size largestPreview = supportedPreviewSizes.get(0);, +      Point largestSize = new Point(largestPreview.width, largestPreview.height);, +      Log.i(TAG, "Using largest suitable preview size: " + largestSize);, +      return largestSize;, +    // If there is nothing at all suitable, return current preview size, +    Camera.Size defaultPreview = parameters.getPreviewSize();, +    Point defaultSize = new Point(defaultPreview.width, defaultPreview.height);, +    Log.i(TAG, "No suitable preview sizes, using default: " + defaultSize);, +    return defaultSize;]