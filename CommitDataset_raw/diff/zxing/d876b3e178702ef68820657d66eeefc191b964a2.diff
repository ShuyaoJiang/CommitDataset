[+++ b/AUTHORS, +jjYBdx4IL, +++ b/AUTHORS, +jjYBdx4IL, +++ b/core/src/main/java/com/google/zxing/ReaderException.java, +++ b/AUTHORS, +jjYBdx4IL, +++ b/core/src/main/java/com/google/zxing/ReaderException.java, +++ b/core/src/main/java/com/google/zxing/common/BitMatrix.java, +    int pos = 0;, +      if (stringRepresentation.charAt(pos) == '\n' ||, +          stringRepresentation.charAt(pos) == '\r') {, +        throw new IllegalArgumentException(, +            "illegal character encountered: " + stringRepresentation.substring(pos));, +      } else if (bitsPos - rowStartPos != rowLength) {, +   * Exclusive-or (XOR): Flip the bit in this {@code BitMatrix} if the corresponding, +   * mask bit is set., +   * @param mask XOR mask, +++ b/AUTHORS, +jjYBdx4IL, +++ b/core/src/main/java/com/google/zxing/ReaderException.java, +++ b/core/src/main/java/com/google/zxing/common/BitMatrix.java, +    int pos = 0;, +      if (stringRepresentation.charAt(pos) == '\n' ||, +          stringRepresentation.charAt(pos) == '\r') {, +        throw new IllegalArgumentException(, +            "illegal character encountered: " + stringRepresentation.substring(pos));, +      } else if (bitsPos - rowStartPos != rowLength) {, +   * Exclusive-or (XOR): Flip the bit in this {@code BitMatrix} if the corresponding, +   * mask bit is set., +   * @param mask XOR mask, +++ b/core/src/test/java/com/google/zxing/aztec/decoder/DecoderTest.java, +public final class DecoderTest {, +  @Test(expected = FormatException.class), +  public void testDecodeTooManyErrors() throws FormatException {, +    new Decoder().decode(r);, +  @Test(expected = FormatException.class), +  public void testDecodeTooManyErrors2() throws FormatException {, +    new Decoder().decode(r);, +++ b/AUTHORS, +jjYBdx4IL, +++ b/core/src/main/java/com/google/zxing/ReaderException.java, +++ b/core/src/main/java/com/google/zxing/common/BitMatrix.java, +    int pos = 0;, +      if (stringRepresentation.charAt(pos) == '\n' ||, +          stringRepresentation.charAt(pos) == '\r') {, +        throw new IllegalArgumentException(, +            "illegal character encountered: " + stringRepresentation.substring(pos));, +      } else if (bitsPos - rowStartPos != rowLength) {, +   * Exclusive-or (XOR): Flip the bit in this {@code BitMatrix} if the corresponding, +   * mask bit is set., +   * @param mask XOR mask, +++ b/core/src/test/java/com/google/zxing/aztec/decoder/DecoderTest.java, +public final class DecoderTest {, +  @Test(expected = FormatException.class), +  public void testDecodeTooManyErrors() throws FormatException {, +    new Decoder().decode(r);, +  @Test(expected = FormatException.class), +  public void testDecodeTooManyErrors2() throws FormatException {, +    new Decoder().decode(r);, +++ b/core/src/test/java/com/google/zxing/aztec/encoder/EncoderTest.java, +    return new Random(0xDEADBEEF);, +++ b/AUTHORS, +jjYBdx4IL, +++ b/core/src/main/java/com/google/zxing/ReaderException.java, +++ b/core/src/main/java/com/google/zxing/common/BitMatrix.java, +    int pos = 0;, +      if (stringRepresentation.charAt(pos) == '\n' ||, +          stringRepresentation.charAt(pos) == '\r') {, +        throw new IllegalArgumentException(, +            "illegal character encountered: " + stringRepresentation.substring(pos));, +      } else if (bitsPos - rowStartPos != rowLength) {, +   * Exclusive-or (XOR): Flip the bit in this {@code BitMatrix} if the corresponding, +   * mask bit is set., +   * @param mask XOR mask, +++ b/core/src/test/java/com/google/zxing/aztec/decoder/DecoderTest.java, +public final class DecoderTest {, +  @Test(expected = FormatException.class), +  public void testDecodeTooManyErrors() throws FormatException {, +    new Decoder().decode(r);, +  @Test(expected = FormatException.class), +  public void testDecodeTooManyErrors2() throws FormatException {, +    new Decoder().decode(r);, +++ b/core/src/test/java/com/google/zxing/aztec/encoder/EncoderTest.java, +    return new Random(0xDEADBEEF);, +++ b/core/src/test/java/com/google/zxing/common/BitArrayTestCase.java, +    Random r = new Random(0xDEADBEEF);, +++ b/AUTHORS, +jjYBdx4IL, +++ b/core/src/main/java/com/google/zxing/ReaderException.java, +++ b/core/src/main/java/com/google/zxing/common/BitMatrix.java, +    int pos = 0;, +      if (stringRepresentation.charAt(pos) == '\n' ||, +          stringRepresentation.charAt(pos) == '\r') {, +        throw new IllegalArgumentException(, +            "illegal character encountered: " + stringRepresentation.substring(pos));, +      } else if (bitsPos - rowStartPos != rowLength) {, +   * Exclusive-or (XOR): Flip the bit in this {@code BitMatrix} if the corresponding, +   * mask bit is set., +   * @param mask XOR mask]