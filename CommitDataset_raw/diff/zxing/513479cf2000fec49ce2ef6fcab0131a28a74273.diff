[+++ b/core/src/com/google/zxing/common/BitArray.java, +    if (size < 1) {, +      throw new IllegalArgumentException("size must be at least 1");, +    }, +++ b/core/src/com/google/zxing/common/BitArray.java, +    if (size < 1) {, +      throw new IllegalArgumentException("size must be at least 1");, +    }, +++ b/core/src/com/google/zxing/common/reedsolomon/GF256Poly.java, +    int coefficientsLength = coefficients.length;, +    if (coefficientsLength > 1 && coefficients[0] == 0) {, +      while (firstNonZero < coefficientsLength && coefficients[firstNonZero] == 0) {, +      if (firstNonZero == coefficientsLength) {, +        this.coefficients = new int[coefficientsLength - firstNonZero];, +      product[i] = field.multiply(coefficients[i], scalar);, +      product[i] = field.multiply(coefficients[i], coefficient);, +++ b/core/src/com/google/zxing/common/BitArray.java, +    if (size < 1) {, +      throw new IllegalArgumentException("size must be at least 1");, +    }, +++ b/core/src/com/google/zxing/common/reedsolomon/GF256Poly.java, +    int coefficientsLength = coefficients.length;, +    if (coefficientsLength > 1 && coefficients[0] == 0) {, +      while (firstNonZero < coefficientsLength && coefficients[firstNonZero] == 0) {, +      if (firstNonZero == coefficientsLength) {, +        this.coefficients = new int[coefficientsLength - firstNonZero];, +      product[i] = field.multiply(coefficients[i], scalar);, +      product[i] = field.multiply(coefficients[i], coefficient);, +++ b/core/src/com/google/zxing/qrcode/decoder/DecodedBitStreamParser.java, +  private static final String EUC_JP = "EUC-JP";, +    ASSUME_SHIFT_JIS = SHIFT_JIS.equalsIgnoreCase(platformDefault) || EUC_JP.equalsIgnoreCase(platformDefault);]