[+++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +   * @param scaleFactor amount by which thumbnail was scaled, +  public void handleDecode(Result rawResult, Bitmap barcode, float scaleFactor) {, +      drawResultPoints(barcode, scaleFactor, rawResult);, +   * @param scaleFactor amount by which thumbnail was scaled, +  private void drawResultPoints(Bitmap barcode, float scaleFactor, Result rawResult) {, +        drawLine(canvas, paint, points[0], points[1], scaleFactor);, +        drawLine(canvas, paint, points[0], points[1], scaleFactor);, +        drawLine(canvas, paint, points[2], points[3], scaleFactor);, +          canvas.drawPoint(scaleFactor * point.getX(), scaleFactor * point.getY(), paint);, +  private static void drawLine(Canvas canvas, Paint paint, ResultPoint a, ResultPoint b, float scaleFactor) {, +    canvas.drawLine(scaleFactor * a.getX(), , +                    scaleFactor * a.getY(), , +                    scaleFactor * b.getX(), , +                    scaleFactor * b.getY(), , +                    paint);, +++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +   * @param scaleFactor amount by which thumbnail was scaled, +  public void handleDecode(Result rawResult, Bitmap barcode, float scaleFactor) {, +      drawResultPoints(barcode, scaleFactor, rawResult);, +   * @param scaleFactor amount by which thumbnail was scaled, +  private void drawResultPoints(Bitmap barcode, float scaleFactor, Result rawResult) {, +        drawLine(canvas, paint, points[0], points[1], scaleFactor);, +        drawLine(canvas, paint, points[0], points[1], scaleFactor);, +        drawLine(canvas, paint, points[2], points[3], scaleFactor);, +          canvas.drawPoint(scaleFactor * point.getX(), scaleFactor * point.getY(), paint);, +  private static void drawLine(Canvas canvas, Paint paint, ResultPoint a, ResultPoint b, float scaleFactor) {, +    canvas.drawLine(scaleFactor * a.getX(), , +                    scaleFactor * a.getY(), , +                    scaleFactor * b.getX(), , +                    scaleFactor * b.getY(), , +                    paint);, +++ b/android/src/com/google/zxing/client/android/CaptureActivityHandler.java, +import android.graphics.BitmapFactory;, +        Bitmap barcode = null;, +        float scaleFactor = 1.0f;, +        if (bundle != null) {, +          byte[] compressedBitmap = bundle.getByteArray(DecodeThread.BARCODE_BITMAP);, +          if (compressedBitmap != null) {, +            BitmapFactory.Options options = new BitmapFactory.Options();, +            options.inMutable = true;, +            barcode = BitmapFactory.decodeByteArray(compressedBitmap, 0, compressedBitmap.length, options);, +          }, +          scaleFactor = bundle.getFloat(DecodeThread.BARCODE_SCALED_FACTOR);          , +        }, +        activity.handleDecode((Result) message.obj, barcode, scaleFactor);, +++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +   * @param scaleFactor amount by which thumbnail was scaled, +  public void handleDecode(Result rawResult, Bitmap barcode, float scaleFactor) {, +      drawResultPoints(barcode, scaleFactor, rawResult);, +   * @param scaleFactor amount by which thumbnail was scaled, +  private void drawResultPoints(Bitmap barcode, float scaleFactor, Result rawResult) {, +        drawLine(canvas, paint, points[0], points[1], scaleFactor);, +        drawLine(canvas, paint, points[0], points[1], scaleFactor);, +        drawLine(canvas, paint, points[2], points[3], scaleFactor);, +          canvas.drawPoint(scaleFactor * point.getX(), scaleFactor * point.getY(), paint);, +  private static void drawLine(Canvas canvas, Paint paint, ResultPoint a, ResultPoint b, float scaleFactor) {, +    canvas.drawLine(scaleFactor * a.getX(), , +                    scaleFactor * a.getY(), , +                    scaleFactor * b.getX(), , +                    scaleFactor * b.getY(), , +                    paint);, +++ b/android/src/com/google/zxing/client/android/CaptureActivityHandler.java, +import android.graphics.BitmapFactory;, +        Bitmap barcode = null;, +        float scaleFactor = 1.0f;, +        if (bundle != null) {, +          byte[] compressedBitmap = bundle.getByteArray(DecodeThread.BARCODE_BITMAP);, +          if (compressedBitmap != null) {, +            BitmapFactory.Options options = new BitmapFactory.Options();, +            options.inMutable = true;, +            barcode = BitmapFactory.decodeByteArray(compressedBitmap, 0, compressedBitmap.length, options);, +          }, +          scaleFactor = bundle.getFloat(DecodeThread.BARCODE_SCALED_FACTOR);          , +        }, +        activity.handleDecode((Result) message.obj, barcode, scaleFactor);, +++ b/android/src/com/google/zxing/client/android/DecodeHandler.java, +import java.io.ByteArrayOutputStream;, +        bundleThumbnail(source, bundle);        , +  private static void bundleThumbnail(PlanarYUVLuminanceSource source, Bundle bundle) {, +    int[] pixels = source.renderThumbnail();, +    int width = source.getThumbnailWidth();, +    int height = source.getThumbnailHeight();, +    Bitmap bitmap = Bitmap.createBitmap(pixels, 0, width, width, height, Bitmap.Config.ARGB_8888);, +    ByteArrayOutputStream out = new ByteArrayOutputStream();    , +    bitmap.compress(Bitmap.CompressFormat.JPEG, 50, out);, +    bundle.putByteArray(DecodeThread.BARCODE_BITMAP, out.toByteArray());, +    bundle.putFloat(DecodeThread.BARCODE_SCALED_FACTOR, (float) width / source.getWidth());, +++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +   * @param scaleFactor amount by which thumbnail was scaled, +  public void handleDecode(Result rawResult, Bitmap barcode, float scaleFactor) {, +      drawResultPoints(barcode, scaleFactor, rawResult);, +   * @param scaleFactor amount by which thumbnail was scaled, +  private void drawResultPoints(Bitmap barcode, float scaleFactor, Result rawResult) {, +        drawLine(canvas, paint, points[0], points[1], scaleFactor);, +        drawLine(canvas, paint, points[0], points[1], scaleFactor);, +        drawLine(canvas, paint, points[2], points[3], scaleFactor);, +          canvas.drawPoint(scaleFactor * point.getX(), scaleFactor * point.getY(), paint);, +  private static void drawLine(Canvas canvas, Paint paint, ResultPoint a, ResultPoint b, float scaleFactor) {, +    canvas.drawLine(scaleFactor * a.getX(), ]