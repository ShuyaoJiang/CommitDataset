[+++ b/core/src/com/google/zxing/EncodeHintType.java, +  /**, +   * Specifies the required number of layers for an Aztec code:, +   *   a negative number (-1, -2, -3, -4) specifies a compact Aztec code, +   *   0 indicates to use the minimum number of layers (the default), +   *   a positive number (1, 2, .. 32) specifies a normaol (non-compact) Aztec code, +   */, +   AZTEC_LAYERS,, +++ b/core/src/com/google/zxing/EncodeHintType.java, +  /**, +   * Specifies the required number of layers for an Aztec code:, +   *   a negative number (-1, -2, -3, -4) specifies a compact Aztec code, +   *   0 indicates to use the minimum number of layers (the default), +   *   a positive number (1, 2, .. 32) specifies a normaol (non-compact) Aztec code, +   */, +   AZTEC_LAYERS,, +++ b/core/src/com/google/zxing/aztec/AztecReader.java, +import com.google.zxing.common.DecoderResult;, +    NotFoundException notFoundException = null;, +    FormatException formatException = null;, +    Detector detector = new Detector(image.getBlackMatrix());, +    ResultPoint[] points = null;, +    DecoderResult decoderResult = null;, +    try {, +      AztecDetectorResult detectorResult = detector.detect(false);, +      points = detectorResult.getPoints();, +      decoderResult = new Decoder().decode(detectorResult);, +    } catch (NotFoundException e) {, +      notFoundException = e;, +    } catch (FormatException e) {, +      formatException = e;, +    }, +    if (decoderResult == null) {, +      try {, +        AztecDetectorResult detectorResult = detector.detect(true);, +        points = detectorResult.getPoints();, +        decoderResult = new Decoder().decode(detectorResult);, +      } catch (NotFoundException e) {, +        if (notFoundException != null) {, +          throw notFoundException;, +        }, +        if (formatException != null) {, +          throw formatException;, +        }, +        throw e;, +      } catch (FormatException e) {, +        // throw the exception from the non-mirror case, instead, +        if (notFoundException != null) {, +          throw notFoundException;, +        }, +        if (formatException != null) {, +          throw formatException;, +        }, +        throw e;, +      }, +    }, +++ b/core/src/com/google/zxing/EncodeHintType.java, +  /**, +   * Specifies the required number of layers for an Aztec code:, +   *   a negative number (-1, -2, -3, -4) specifies a compact Aztec code, +   *   0 indicates to use the minimum number of layers (the default), +   *   a positive number (1, 2, .. 32) specifies a normaol (non-compact) Aztec code, +   */, +   AZTEC_LAYERS,, +++ b/core/src/com/google/zxing/aztec/AztecReader.java, +import com.google.zxing.common.DecoderResult;, +    NotFoundException notFoundException = null;, +    FormatException formatException = null;, +    Detector detector = new Detector(image.getBlackMatrix());, +    ResultPoint[] points = null;, +    DecoderResult decoderResult = null;, +    try {, +      AztecDetectorResult detectorResult = detector.detect(false);, +      points = detectorResult.getPoints();, +      decoderResult = new Decoder().decode(detectorResult);, +    } catch (NotFoundException e) {, +      notFoundException = e;, +    } catch (FormatException e) {, +      formatException = e;, +    }, +    if (decoderResult == null) {, +      try {, +        AztecDetectorResult detectorResult = detector.detect(true);, +        points = detectorResult.getPoints();, +        decoderResult = new Decoder().decode(detectorResult);, +      } catch (NotFoundException e) {, +        if (notFoundException != null) {, +          throw notFoundException;, +        }, +        if (formatException != null) {, +          throw formatException;, +        }, +        throw e;, +      } catch (FormatException e) {, +        // throw the exception from the non-mirror case, instead, +        if (notFoundException != null) {, +          throw notFoundException;, +        }, +        if (formatException != null) {, +          throw formatException;]