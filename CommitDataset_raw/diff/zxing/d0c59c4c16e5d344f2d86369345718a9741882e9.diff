[+++ b/AUTHORS, +Manuel Kasten, +mike32767, +++ b/AUTHORS, +Manuel Kasten, +mike32767, +++ b/core/src/com/google/zxing/BarcodeFormat.java, +  /** MaxiCode 2D barcode format. */, +  public static final BarcodeFormat MAXICODE = new BarcodeFormat("MAXICODE");, +, +++ b/AUTHORS, +Manuel Kasten, +mike32767, +++ b/core/src/com/google/zxing/BarcodeFormat.java, +  /** MaxiCode 2D barcode format. */, +  public static final BarcodeFormat MAXICODE = new BarcodeFormat("MAXICODE");, +, +++ b/core/src/com/google/zxing/MultiFormatReader.java, +import com.google.zxing.maxicode.MaxiCodeReader;, +      if (formats.contains(BarcodeFormat.MAXICODE)) {, +         readers.addElement(new MaxiCodeReader());, +      }, +      readers.addElement(new MaxiCodeReader());, +++ b/AUTHORS, +Manuel Kasten, +mike32767, +++ b/core/src/com/google/zxing/BarcodeFormat.java, +  /** MaxiCode 2D barcode format. */, +  public static final BarcodeFormat MAXICODE = new BarcodeFormat("MAXICODE");, +, +++ b/core/src/com/google/zxing/MultiFormatReader.java, +import com.google.zxing.maxicode.MaxiCodeReader;, +      if (formats.contains(BarcodeFormat.MAXICODE)) {, +         readers.addElement(new MaxiCodeReader());, +      }, +      readers.addElement(new MaxiCodeReader());, +++ b/core/src/com/google/zxing/common/BitMatrix.java, +   * This is useful in detecting the enclosing rectangle of a 'pure' barcode., +   *, +   * @return {left,top,width,height} enclosing rectangle of all 1 bits, or null if it is all white, +   */, +  public int[] getEnclosingRectangle() {, +    int left = width;, +    int top = height;, +    int right = -1;, +    int bottom = -1;, +    , +    for (int y = 0; y < height; y++) {, +      for (int x32 = 0; x32 < rowSize; x32++) {, +        int theBits = bits[y * rowSize + x32];, +        if (theBits != 0) {, +          if (y < top) {, +            top = y;, +          }, +          if (y > bottom) {, +            bottom = y;, +          }, +          if (x32 * 32 < left) {, +            int bit = 0;, +            while ((theBits << (31 - bit)) == 0) {, +              bit++;, +            }, +            if ((x32 * 32 + bit) < left) {, +              left = x32 * 32 + bit;, +            }, +          }, +          if (x32 * 32 + 31 > right) {, +            int bit = 31;, +            while ((theBits >>> bit) == 0) {, +              bit--;, +            }, +            if ((x32 * 32 + bit) > right) {, +              right = x32 * 32 + bit;, +            }, +          }, +        }, +      }, +    }, +    , +    int width = right - left;, +    int height = bottom - top;, +    , +    if (width < 0 || height < 0) {, +      return null;, +    }, +    , +    return new int[] {left, top, width, height};, +  }, +, +  /**, +++ b/AUTHORS, +Manuel Kasten, +mike32767, +++ b/core/src/com/google/zxing/BarcodeFormat.java, +  /** MaxiCode 2D barcode format. */, +  public static final BarcodeFormat MAXICODE = new BarcodeFormat("MAXICODE");, +, +++ b/core/src/com/google/zxing/MultiFormatReader.java, +import com.google.zxing.maxicode.MaxiCodeReader;, +      if (formats.contains(BarcodeFormat.MAXICODE)) {]