[+++ b/core/src/com/google/zxing/datamatrix/decoder/DecodedBitStreamParser.java, + * @author srowen@google.com (Sean Owen), +    'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '{', '|', '}', '~', (char) 127, +        switch (mode) {, +          case C40_ENCODE:, +            decodeC40Segment(bits, result);, +            break;, +          case TEXT_ENCODE:, +            decodeTextSegment(bits, result);, +            break;, +          case ANSIX12_ENCODE:, +            decodeAnsiX12Segment(bits, result);, +            break;, +          case EDIFACT_ENCODE:, +            decodeEdifactSegment(bits, result);, +            break;, +          case BASE256_ENCODE:, +            decodeBase256Segment(bits, result);, +            break;, +          default:, +        mode = ASCII_ENCODE;, +	      int value = oneByte - 130;, +	      if (value < 10) { // padd with '0' for single digit values, +	    	result.append(value);, +	    	throw new ReaderException(oneByte + " should not be used in ASCII encodation");, +  private static void decodeC40Segment(BitSource bits, StringBuffer result) throws ReaderException {, +    int[] cValues = new int[3];, +        return;, +        return;, +      parseTwoBytes(firstByte, bits.readBits(8), cValues);, +      int shift = 0;, +        switch (shift) {, +          case 0:, +            if (cValue < 3) {, +              shift = cValue + 1;, +            } else {, +            }, +            break;, +          case 1:, +            break;, +          case 2:, +              throw new ReaderException(cValue + " is not valid in the C40 Shift 2 set");, +            break;, +          case 3:, +            break;, +          default:, +  private static void decodeTextSegment(BitSource bits, StringBuffer result) throws ReaderException {, +    int[] cValues = new int[3];, +        return;, +        return;, +      parseTwoBytes(firstByte, bits.readBits(8), cValues);, +      int shift = 0;, +        switch (shift) {, +          case 0:, +            if (cValue < 3) {, +              shift = cValue + 1;, +            } else {, +            }, +            break;, +          case 1:, +            break;, +          case 2:, +            } else if (cValue == 30) {  // Upper Shift, +              throw new ReaderException(cValue + " is not valid in the C40 Shift 2 set");, +            break;, +          case 3:, +            break;, +          default:, +  private static void decodeAnsiX12Segment(BitSource bits, StringBuffer result) throws ReaderException {, +    int[] cValues = new int[3];, +        return;, +        return;, +      parseTwoBytes(firstByte, bits.readBits(8), cValues);, +          result.append('\r');, +          throw new ReaderException(cValue + " is not valid in the ANSI X12 set");, +  }, +  private static void parseTwoBytes(int firstByte, int secondByte, int[] result) {, +    int fullBitValue = (firstByte << 8) + secondByte - 1;, +    int temp = fullBitValue / 1600;, +    result[0] = temp;, +    fullBitValue -= temp * 1600;, +    temp = fullBitValue / 40;, +    result[1] = temp;, +    result[2] = fullBitValue - temp * 40;, +  private static void decodeEdifactSegment(BitSource bits, StringBuffer result) {, +        return;, +  private static void decodeBase256Segment(BitSource bits, StringBuffer result) {]