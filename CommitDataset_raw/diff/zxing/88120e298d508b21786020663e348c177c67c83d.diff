[+++ b/zxingorg/src/main/java/com/google/zxing/web/DecodeServlet.java, +import java.util.Timer;, +import java.util.concurrent.TimeUnit;, +  private Timer timer;, +  private DoSTracker destHostTracker;, +, +    timer = new Timer("DecodeServlet");, +    destHostTracker = new DoSTracker(timer, 500, TimeUnit.MILLISECONDS.convert(5, TimeUnit.MINUTES), 10_000);, +  }, +, +  @Override, +  public void destroy() {, +    if (timer != null) {, +      timer.cancel();, +    }, +    if (destHostTracker.isBanned(imageURL.getHost())) {, +      errorResponse(request, response, "badurl");, +    }, +, +++ b/zxingorg/src/main/java/com/google/zxing/web/DecodeServlet.java, +import java.util.Timer;, +import java.util.concurrent.TimeUnit;, +  private Timer timer;, +  private DoSTracker destHostTracker;, +, +    timer = new Timer("DecodeServlet");, +    destHostTracker = new DoSTracker(timer, 500, TimeUnit.MILLISECONDS.convert(5, TimeUnit.MINUTES), 10_000);, +  }, +, +  @Override, +  public void destroy() {, +    if (timer != null) {, +      timer.cancel();, +    }, +    if (destHostTracker.isBanned(imageURL.getHost())) {, +      errorResponse(request, response, "badurl");, +    }, +, +++ b/zxingorg/src/main/java/com/google/zxing/web/DoSFilter.java, +  private DoSTracker sourceAddrTracker;, +    sourceAddrTracker = new DoSTracker(timer, 500, TimeUnit.MILLISECONDS.convert(5, TimeUnit.MINUTES), 10_000);, +    return sourceAddrTracker.isBanned(remoteIPAddress);, +++ b/zxingorg/src/main/java/com/google/zxing/web/DecodeServlet.java, +import java.util.Timer;, +import java.util.concurrent.TimeUnit;, +  private Timer timer;, +  private DoSTracker destHostTracker;, +, +    timer = new Timer("DecodeServlet");, +    destHostTracker = new DoSTracker(timer, 500, TimeUnit.MILLISECONDS.convert(5, TimeUnit.MINUTES), 10_000);, +  }, +, +  @Override, +  public void destroy() {, +    if (timer != null) {, +      timer.cancel();, +    }, +    if (destHostTracker.isBanned(imageURL.getHost())) {, +      errorResponse(request, response, "badurl");, +    }, +, +++ b/zxingorg/src/main/java/com/google/zxing/web/DoSFilter.java, +  private DoSTracker sourceAddrTracker;, +    sourceAddrTracker = new DoSTracker(timer, 500, TimeUnit.MILLISECONDS.convert(5, TimeUnit.MINUTES), 10_000);, +    return sourceAddrTracker.isBanned(remoteIPAddress);, +++ b/zxingorg/src/main/java/com/google/zxing/web/DoSTracker.java, +/*, + * Copyright 2017 ZXing authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.zxing.web;, +, +import java.util.Iterator;, +import java.util.Map;, +import java.util.Timer;, +import java.util.TimerTask;, +import java.util.concurrent.atomic.AtomicLong;, +import java.util.logging.Logger;, +, +/**, + * Simple class which tracks a number of actions that happen per time and can flag when an action has, + * happened too frequently recently. This can be used for example to track and temporarily block access, + * from certain IPs or to certain hosts., + */, +final class DoSTracker {, +, +  private static final Logger log = Logger.getLogger(DoSTracker.class.getName());, +]