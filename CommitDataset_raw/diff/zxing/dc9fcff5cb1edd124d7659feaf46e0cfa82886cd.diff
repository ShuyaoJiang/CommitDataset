[+++ b/cpp/core/src/zxing/LuminanceSource.cpp, +unsigned char* LuminanceSource::copyMatrix() {, +++ b/cpp/core/src/zxing/LuminanceSource.cpp, +unsigned char* LuminanceSource::copyMatrix() {, +++ b/cpp/core/src/zxing/LuminanceSource.h, +  virtual int getWidth() = 0;, +  virtual int getHeight() = 0;, +  virtual unsigned char getPixel(int x, int y) = 0;, +  virtual unsigned char* copyMatrix();, +++ b/cpp/core/src/zxing/LuminanceSource.cpp, +unsigned char* LuminanceSource::copyMatrix() {, +++ b/cpp/core/src/zxing/LuminanceSource.h, +  virtual int getWidth() = 0;, +  virtual int getHeight() = 0;, +  virtual unsigned char getPixel(int x, int y) = 0;, +  virtual unsigned char* copyMatrix();, +++ b/cpp/core/src/zxing/oned/Code128Reader.cpp, +#include <sstream>, +						unsigned int bestVariance = MAX_AVG_VARIANCE;, +							unsigned int variance = patternMatchVariance(counters, sizeof(counters)/sizeof(int), CODE_PATTERNS[startCode], MAX_INDIVIDUAL_VARIANCE);, +			unsigned int bestVariance = MAX_AVG_VARIANCE; // worst variance we'll accept, +				unsigned int variance = patternMatchVariance(counters, countersCount, pattern, MAX_INDIVIDUAL_VARIANCE);, +			std::stringstream tmpResultSStr; // used if its Code 128C, +					// the code read in this case is the number encoded directly, +							if (code < 10) , +							tmpResultSStr << '0';, +						tmpResultSStr << code;, +			if (codeSet == CODE_CODE_C), +				tmpResultString.append(tmpResultSStr.str());, +			, +++ b/cpp/core/src/zxing/LuminanceSource.cpp, +unsigned char* LuminanceSource::copyMatrix() {, +++ b/cpp/core/src/zxing/LuminanceSource.h, +  virtual int getWidth() = 0;, +  virtual int getHeight() = 0;, +  virtual unsigned char getPixel(int x, int y) = 0;, +  virtual unsigned char* copyMatrix();, +++ b/cpp/core/src/zxing/oned/Code128Reader.cpp, +#include <sstream>, +						unsigned int bestVariance = MAX_AVG_VARIANCE;, +							unsigned int variance = patternMatchVariance(counters, sizeof(counters)/sizeof(int), CODE_PATTERNS[startCode], MAX_INDIVIDUAL_VARIANCE);, +			unsigned int bestVariance = MAX_AVG_VARIANCE; // worst variance we'll accept, +				unsigned int variance = patternMatchVariance(counters, countersCount, pattern, MAX_INDIVIDUAL_VARIANCE);, +			std::stringstream tmpResultSStr; // used if its Code 128C, +					// the code read in this case is the number encoded directly, +							if (code < 10) , +							tmpResultSStr << '0';, +						tmpResultSStr << code;, +			if (codeSet == CODE_CODE_C), +				tmpResultString.append(tmpResultSStr.str());, +			, +++ b/cpp/core/src/zxing/oned/Code128Reader.h, +			static const unsigned int MAX_AVG_VARIANCE = (unsigned int) (PATTERN_MATCH_RESULT_SCALE_FACTOR * 0.25f);, +++ b/cpp/core/src/zxing/LuminanceSource.cpp, +unsigned char* LuminanceSource::copyMatrix() {, +++ b/cpp/core/src/zxing/LuminanceSource.h, +  virtual int getWidth() = 0;, +  virtual int getHeight() = 0;, +  virtual unsigned char getPixel(int x, int y) = 0;, +  virtual unsigned char* copyMatrix();, +++ b/cpp/core/src/zxing/oned/Code128Reader.cpp, +#include <sstream>, +						unsigned int bestVariance = MAX_AVG_VARIANCE;, +							unsigned int variance = patternMatchVariance(counters, sizeof(counters)/sizeof(int), CODE_PATTERNS[startCode], MAX_INDIVIDUAL_VARIANCE);, +			unsigned int bestVariance = MAX_AVG_VARIANCE; // worst variance we'll accept, +				unsigned int variance = patternMatchVariance(counters, countersCount, pattern, MAX_INDIVIDUAL_VARIANCE);, +			std::stringstream tmpResultSStr; // used if its Code 128C, +					// the code read in this case is the number encoded directly, +							if (code < 10) , +							tmpResultSStr << '0';, +						tmpResultSStr << code;, +			if (codeSet == CODE_CODE_C), +				tmpResultString.append(tmpResultSStr.str());, +			, +++ b/cpp/core/src/zxing/oned/Code128Reader.h, +			static const unsigned int MAX_AVG_VARIANCE = (unsigned int) (PATTERN_MATCH_RESULT_SCALE_FACTOR * 0.25f);, +++ b/cpp/core/src/zxing/oned/ITFReader.cpp, +//#pragma mark needs some corrections, +			unsigned int bestVariance = MAX_AVG_VARIANCE; // worst variance we'll accept, +				unsigned int variance = patternMatchVariance(counters, countersLen, pattern, MAX_INDIVIDUAL_VARIANCE);, +++ b/cpp/core/src/zxing/LuminanceSource.cpp, +unsigned char* LuminanceSource::copyMatrix() {, +++ b/cpp/core/src/zxing/LuminanceSource.h, +  virtual int getWidth() = 0;, +  virtual int getHeight() = 0;, +  virtual unsigned char getPixel(int x, int y) = 0;, +  virtual unsigned char* copyMatrix();, +++ b/cpp/core/src/zxing/oned/Code128Reader.cpp, +#include <sstream>, +						unsigned int bestVariance = MAX_AVG_VARIANCE;, +							unsigned int variance = patternMatchVariance(counters, sizeof(counters)/sizeof(int), CODE_PATTERNS[startCode], MAX_INDIVIDUAL_VARIANCE);, +			unsigned int bestVariance = MAX_AVG_VARIANCE; // worst variance we'll accept, +				unsigned int variance = patternMatchVariance(counters, countersCount, pattern, MAX_INDIVIDUAL_VARIANCE);, +			std::stringstream tmpResultSStr; // used if its Code 128C, +					// the code read in this case is the number encoded directly, +							if (code < 10) , +							tmpResultSStr << '0';, +						tmpResultSStr << code;, +			if (codeSet == CODE_CODE_C), +				tmpResultString.append(tmpResultSStr.str());]