[+++ b/core/src/com/google/zxing/upc/UPCDecoder.java, +import com.google.zxing.common.BitArray;, +  /** Alternative even-parity patterns for EAN-13 barcodes. */, +  /**, +   * Utility class for returning a matched character. Defines the character, +   * plus the parity used for encoding it., +   */, +  /**, +   * To decode the image, we follow a search pattern defined in kBitmapSearchPattern. It is a, +   * list of percentages which translate to row numbers to scan across. For each row, we scan, +   * left to right, and if that fails, we reverse the row in place and try again to see if the, +   * bar code was upside down., +   */, +  /**, +   * Verifies the checksum. This is computed by adding up digits in the even, +   * indices (0, 2, 4...) then adding the digits in the odd indices (1, 3, 5..), +   * and multiplying by 3. The total, plus the final checksum digit, should be, +   * divisible by 10., +   *, +   * Note that for a UPC barcode, we add the additional '0' to the front, +   * (converting it to a EAN-13 code) for purposes of calculating the checksum, +   */, +    if (result.length() != 12 && result.length() != 13) {, +    }, +      if (foundChar.parity == UNKNOWN_PARITY) {, +      }, +      if (foundChar.parity == EVEN_PARITY) {, +      }, +    char firstDigit = '-';, +    if (firstDigit == '-') {, +    }, +    if (firstDigit != '0') {, +    }, +  /**, +   * Returns the horizontal position just after the pattern was found if successful, otherwise, +   * returns -1 if the pattern was not found. Searches are always left to right, and patterns, +   * begin on white or black based on the flag., +   */]