[+++ b/README.md, +++ b/README.md, +++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +++ b/README.md, +++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/C40Encoder.java, +        if ((buffer.length() % 3) == 2 && available != 2) {, +++ b/README.md, +++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/C40Encoder.java, +        if ((buffer.length() % 3) == 2 && available != 2) {, +++ b/pom.xml, +          <version>3.1.0</version>, +          <version>3.0.0-M3</version>, +              <version>8.18</version>, +++ b/README.md, +++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/C40Encoder.java, +        if ((buffer.length() % 3) == 2 && available != 2) {, +++ b/pom.xml, +          <version>3.1.0</version>, +          <version>3.0.0-M3</version>, +              <version>8.18</version>, +++ b/zxingorg/src/main/java/com/google/zxing/web/ChartServlet.java, +    if (requestURI == null) {, +      response.sendError(HttpServletResponse.SC_BAD_REQUEST);, +      return;, +    }, +++ b/README.md, +++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/C40Encoder.java, +        if ((buffer.length() % 3) == 2 && available != 2) {, +++ b/pom.xml, +          <version>3.1.0</version>, +          <version>3.0.0-M3</version>, +              <version>8.18</version>, +++ b/zxingorg/src/main/java/com/google/zxing/web/ChartServlet.java, +    if (requestURI == null) {, +      response.sendError(HttpServletResponse.SC_BAD_REQUEST);, +      return;, +    }, +++ b/zxingorg/src/main/java/com/google/zxing/web/DecodeServlet.java, +import javax.servlet.annotation.WebInitParam;, +@WebServlet(value = "/w/decode", loadOnStartup = 1, initParams = {, +  @WebInitParam(name = "maxAccessPerTime", value = "150"),, +  @WebInitParam(name = "accessTimeSec", value = "300"),, +  @WebInitParam(name = "maxEntries", value = "10000"), +}), +    int maxAccessPerTime = Integer.parseInt(servletConfig.getInitParameter("maxAccessPerTime"));, +    int accessTimeSec = Integer.parseInt(servletConfig.getInitParameter("accessTimeSec"));, +    long accessTimeMS = TimeUnit.MILLISECONDS.convert(accessTimeSec, TimeUnit.SECONDS);, +    int maxEntries = Integer.parseInt(servletConfig.getInitParameter("maxEntries"));, +, +    destHostTracker = new DoSTracker(timer, maxAccessPerTime, accessTimeMS, maxEntries);, +++ b/README.md, +++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/C40Encoder.java, +        if ((buffer.length() % 3) == 2 && available != 2) {, +++ b/pom.xml, +          <version>3.1.0</version>, +          <version>3.0.0-M3</version>, +              <version>8.18</version>, +++ b/zxingorg/src/main/java/com/google/zxing/web/ChartServlet.java, +    if (requestURI == null) {, +      response.sendError(HttpServletResponse.SC_BAD_REQUEST);, +      return;, +    }, +++ b/zxingorg/src/main/java/com/google/zxing/web/DecodeServlet.java, +import javax.servlet.annotation.WebInitParam;, +@WebServlet(value = "/w/decode", loadOnStartup = 1, initParams = {, +  @WebInitParam(name = "maxAccessPerTime", value = "150"),, +  @WebInitParam(name = "accessTimeSec", value = "300"),, +  @WebInitParam(name = "maxEntries", value = "10000"), +}), +    int maxAccessPerTime = Integer.parseInt(servletConfig.getInitParameter("maxAccessPerTime"));, +    int accessTimeSec = Integer.parseInt(servletConfig.getInitParameter("accessTimeSec"));, +    long accessTimeMS = TimeUnit.MILLISECONDS.convert(accessTimeSec, TimeUnit.SECONDS);, +    int maxEntries = Integer.parseInt(servletConfig.getInitParameter("maxEntries"));, +, +    destHostTracker = new DoSTracker(timer, maxAccessPerTime, accessTimeMS, maxEntries);, +++ b/zxingorg/src/main/java/com/google/zxing/web/DoSFilter.java, +import javax.servlet.annotation.WebInitParam;, +@WebFilter(urlPatterns = {"/w/decode", "/w/chart"}, initParams = {, +  @WebInitParam(name = "maxAccessPerTime", value = "150"),, +  @WebInitParam(name = "accessTimeSec", value = "300"),, +  @WebInitParam(name = "maxEntries", value = "10000"), +}), +    int maxAccessPerTime = Integer.parseInt(filterConfig.getInitParameter("maxAccessPerTime"));, +    int accessTimeSec = Integer.parseInt(filterConfig.getInitParameter("accessTimeSec"));, +    long accessTimeMS = TimeUnit.MILLISECONDS.convert(accessTimeSec, TimeUnit.SECONDS);, +    int maxEntries = Integer.parseInt(filterConfig.getInitParameter("maxEntries"));, +    sourceAddrTracker = new DoSTracker(timer, maxAccessPerTime, accessTimeMS, maxEntries);, +    return, +      (remoteIPAddress != null && sourceAddrTracker.isBanned(remoteIPAddress)) ||, +      sourceAddrTracker.isBanned(request.getRemoteAddr());, +++ b/README.md, +++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/C40Encoder.java, +        if ((buffer.length() % 3) == 2 && available != 2) {, +++ b/pom.xml]