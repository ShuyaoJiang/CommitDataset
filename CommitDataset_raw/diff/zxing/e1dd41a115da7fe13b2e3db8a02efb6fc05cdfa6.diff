[+++ b/core/src/com/google/zxing/qrcode/detector/FinderPatternFinder.java, +    // 5% of the total module size estimates, it's too much., +, +    int startSize = possibleCenters.size();, +    if (startSize < 3) {, +, +    // Filter outlier possibilities whose module size is too different, +    if (startSize > 3) {, +      // But we can only afford to do so if we have at least 4 possibilities to choose from, +      float totalModuleSize = 0.0f;, +      for (int i = 0; i < startSize; i++) {, +        totalModuleSize += ((FinderPattern) possibleCenters.get(i)).getEstimatedModuleSize();, +      }, +      float average = totalModuleSize / (float) startSize;, +      for (int i = 0; i < possibleCenters.size() && possibleCenters.size() > 3; i++) {, +        FinderPattern pattern = (FinderPattern) possibleCenters.get(i);, +        if (Math.abs(pattern.getEstimatedModuleSize() - average) > 0.2f * average) {, +          possibleCenters.remove(i);, +          i--;, +        }, +      }, +    }, +      Collections.insertionSort(possibleCenters, new CenterComparator());      , +++ b/core/src/com/google/zxing/qrcode/detector/FinderPatternFinder.java, +    // 5% of the total module size estimates, it's too much., +, +    int startSize = possibleCenters.size();, +    if (startSize < 3) {, +, +    // Filter outlier possibilities whose module size is too different, +    if (startSize > 3) {, +      // But we can only afford to do so if we have at least 4 possibilities to choose from, +      float totalModuleSize = 0.0f;, +      for (int i = 0; i < startSize; i++) {, +        totalModuleSize += ((FinderPattern) possibleCenters.get(i)).getEstimatedModuleSize();, +      }, +      float average = totalModuleSize / (float) startSize;, +      for (int i = 0; i < possibleCenters.size() && possibleCenters.size() > 3; i++) {, +        FinderPattern pattern = (FinderPattern) possibleCenters.get(i);, +        if (Math.abs(pattern.getEstimatedModuleSize() - average) > 0.2f * average) {, +          possibleCenters.remove(i);, +          i--;, +        }, +      }, +    }, +      Collections.insertionSort(possibleCenters, new CenterComparator());      , +++ b/core/test/src/com/google/zxing/qrcode/QRCodeBlackBox2TestCase.java, +    addTest(21, 21, 90.0f);, +    addTest(20, 20, 180.0f);, +    addTest(18, 18, 270.0f);]