[+++ b/core/src/main/java/com/google/zxing/client/result/ExpandedProductResultParser.java, +      }, +      if (currentChar < '0' || currentChar > '9') {, +      buf.append(currentChar);, +        // We look for a new AI. If it doesn't exist (ERROR), we continue, +        if (findAIvalue(index, rawTextAux) != null) {, +        buf.append('(');, +++ b/core/src/main/java/com/google/zxing/client/result/ExpandedProductResultParser.java, +      }, +      if (currentChar < '0' || currentChar > '9') {, +      buf.append(currentChar);, +        // We look for a new AI. If it doesn't exist (ERROR), we continue, +        if (findAIvalue(index, rawTextAux) != null) {, +        buf.append('(');, +++ b/core/src/main/java/com/google/zxing/datamatrix/decoder/Decoder.java, +      boolean[] imageI = image[i];, +        if (imageI[j]) {, +++ b/core/src/main/java/com/google/zxing/client/result/ExpandedProductResultParser.java, +      }, +      if (currentChar < '0' || currentChar > '9') {, +      buf.append(currentChar);, +        // We look for a new AI. If it doesn't exist (ERROR), we continue, +        if (findAIvalue(index, rawTextAux) != null) {, +        buf.append('(');, +++ b/core/src/main/java/com/google/zxing/datamatrix/decoder/Decoder.java, +      boolean[] imageI = image[i];, +        if (imageI[j]) {, +++ b/core/src/main/java/com/google/zxing/oned/rss/expanded/RSSExpandedReader.java, +  // Whether the pairs form a valid find pattern sequence,, +++ b/core/src/main/java/com/google/zxing/client/result/ExpandedProductResultParser.java, +      }, +      if (currentChar < '0' || currentChar > '9') {, +      buf.append(currentChar);, +        // We look for a new AI. If it doesn't exist (ERROR), we continue, +        if (findAIvalue(index, rawTextAux) != null) {, +        buf.append('(');, +++ b/core/src/main/java/com/google/zxing/datamatrix/decoder/Decoder.java, +      boolean[] imageI = image[i];, +        if (imageI[j]) {, +++ b/core/src/main/java/com/google/zxing/oned/rss/expanded/RSSExpandedReader.java, +  // Whether the pairs form a valid find pattern sequence,, +++ b/core/src/main/java/com/google/zxing/pdf417/PDF417Writer.java, +  private static final int WHITE_SPACE = 30;, +  private static final int DEFAULT_ERROR_CORRECTION_LEVEL = 2;, +      return bitMatrixFromBitArray(scaledMatrix, margin);, +    return bitMatrixFromBitArray(originalScale, margin);, +  private static BitMatrix bitMatrixFromBitArray(byte[][] input, int margin) {, +      byte[] inputY = input[y];, +        if (inputY[x] == 1) {, +++ b/core/src/main/java/com/google/zxing/client/result/ExpandedProductResultParser.java, +      }, +      if (currentChar < '0' || currentChar > '9') {, +      buf.append(currentChar);, +        // We look for a new AI. If it doesn't exist (ERROR), we continue, +        if (findAIvalue(index, rawTextAux) != null) {, +        buf.append('(');, +++ b/core/src/main/java/com/google/zxing/datamatrix/decoder/Decoder.java, +      boolean[] imageI = image[i];, +        if (imageI[j]) {, +++ b/core/src/main/java/com/google/zxing/oned/rss/expanded/RSSExpandedReader.java, +  // Whether the pairs form a valid find pattern sequence,, +++ b/core/src/main/java/com/google/zxing/pdf417/PDF417Writer.java, +  private static final int WHITE_SPACE = 30;, +  private static final int DEFAULT_ERROR_CORRECTION_LEVEL = 2;, +      return bitMatrixFromBitArray(scaledMatrix, margin);, +    return bitMatrixFromBitArray(originalScale, margin);, +  private static BitMatrix bitMatrixFromBitArray(byte[][] input, int margin) {, +      byte[] inputY = input[y];, +        if (inputY[x] == 1) {, +++ b/core/src/main/java/com/google/zxing/pdf417/decoder/PDF417ScanningDecoder.java, +    BarcodeValue barcodeMatrix01 = barcodeMatrix[0][1];, +    int[] numberOfCodewords = barcodeMatrix01.getValue();, +      barcodeMatrix01.setValue(calculatedNumberOfCodewords);, +      barcodeMatrix01.setValue(calculatedNumberOfCodewords);, +++ b/core/src/main/java/com/google/zxing/client/result/ExpandedProductResultParser.java, +      }, +      if (currentChar < '0' || currentChar > '9') {, +      buf.append(currentChar);, +        // We look for a new AI. If it doesn't exist (ERROR), we continue, +        if (findAIvalue(index, rawTextAux) != null) {, +        buf.append('(');, +++ b/core/src/main/java/com/google/zxing/datamatrix/decoder/Decoder.java, +      boolean[] imageI = image[i];, +        if (imageI[j]) {, +++ b/core/src/main/java/com/google/zxing/oned/rss/expanded/RSSExpandedReader.java, +  // Whether the pairs form a valid find pattern sequence,, +++ b/core/src/main/java/com/google/zxing/pdf417/PDF417Writer.java, +  private static final int WHITE_SPACE = 30;, +  private static final int DEFAULT_ERROR_CORRECTION_LEVEL = 2;, +      return bitMatrixFromBitArray(scaledMatrix, margin);, +    return bitMatrixFromBitArray(originalScale, margin);, +  private static BitMatrix bitMatrixFromBitArray(byte[][] input, int margin) {, +      byte[] inputY = input[y];, +        if (inputY[x] == 1) {, +++ b/core/src/main/java/com/google/zxing/pdf417/decoder/PDF417ScanningDecoder.java, +    BarcodeValue barcodeMatrix01 = barcodeMatrix[0][1];, +    int[] numberOfCodewords = barcodeMatrix01.getValue();, +      barcodeMatrix01.setValue(calculatedNumberOfCodewords);, +      barcodeMatrix01.setValue(calculatedNumberOfCodewords);, +++ b/core/src/main/java/com/google/zxing/qrcode/decoder/Decoder.java]