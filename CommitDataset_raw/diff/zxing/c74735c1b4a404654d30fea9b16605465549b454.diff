[+++ b/core/src/com/google/zxing/qrcode/decoder/Mode.java, +public final class Mode {, +  public static final Mode TERMINATOR = new Mode(new int[]{0, 0, 0}, 0x00, "TERMINATOR"); // Not really a mode..., +  public static final Mode NUMERIC = new Mode(new int[]{10, 12, 14}, 0x01, "NUMERIC");, +  public static final Mode ALPHANUMERIC = new Mode(new int[]{9, 11, 13}, 0x02, "ALPHANUMERIC");, +  public static final Mode BYTE = new Mode(new int[]{8, 16, 16}, 0x04, "BYTE");, +  public static final Mode ECI = new Mode(null, 0x07, "ECI"); // character counts don't apply, +  public static final Mode KANJI = new Mode(new int[]{8, 10, 12}, 0x08, "KANJI");, +  public static final Mode FNC1_FIRST_POSITION = new Mode(null, 0x05, "FNC1_FIRST_POSITION");, +  public static final Mode FNC1_SECOND_POSITION = new Mode(null, 0x09, "FNC1_SECOND_POSITION");, +  private final int bits;, +  private final String name;, +  private Mode(int[] characterCountBitsForVersions, int bits, String name) {, +    this.bits = bits;, +    this.name = name;, +   * @throws IllegalArgumentException if bits do not correspond to a known mode, +  public static Mode forBits(int bits) {, +        throw new IllegalArgumentException();, +  public int getCharacterCountBits(Version version) {, +  public int getBits() {, +    return bits;, +  }, +, +  public String getName() {, +    return name;, +  }, +, +  public String toString() {, +    return name;, +  }, +, +++ b/core/src/com/google/zxing/qrcode/decoder/Mode.java, +public final class Mode {, +  public static final Mode TERMINATOR = new Mode(new int[]{0, 0, 0}, 0x00, "TERMINATOR"); // Not really a mode..., +  public static final Mode NUMERIC = new Mode(new int[]{10, 12, 14}, 0x01, "NUMERIC");, +  public static final Mode ALPHANUMERIC = new Mode(new int[]{9, 11, 13}, 0x02, "ALPHANUMERIC");, +  public static final Mode BYTE = new Mode(new int[]{8, 16, 16}, 0x04, "BYTE");, +  public static final Mode ECI = new Mode(null, 0x07, "ECI"); // character counts don't apply, +  public static final Mode KANJI = new Mode(new int[]{8, 10, 12}, 0x08, "KANJI");, +  public static final Mode FNC1_FIRST_POSITION = new Mode(null, 0x05, "FNC1_FIRST_POSITION");, +  public static final Mode FNC1_SECOND_POSITION = new Mode(null, 0x09, "FNC1_SECOND_POSITION");, +  private final int bits;, +  private final String name;, +  private Mode(int[] characterCountBitsForVersions, int bits, String name) {, +    this.bits = bits;, +    this.name = name;, +   * @throws IllegalArgumentException if bits do not correspond to a known mode, +  public static Mode forBits(int bits) {, +        throw new IllegalArgumentException();, +  public int getCharacterCountBits(Version version) {, +  public int getBits() {, +    return bits;, +  }, +, +  public String getName() {, +    return name;, +  }, +, +  public String toString() {, +    return name;, +  }, +, +++ b/core/src/com/google/zxing/qrcode/decoder/Version.java, +  public static Version getVersionForNumber(int versionNumber) {, +      throw new IllegalArgumentException();, +++ b/core/src/com/google/zxing/qrcode/decoder/Mode.java, +public final class Mode {, +  public static final Mode TERMINATOR = new Mode(new int[]{0, 0, 0}, 0x00, "TERMINATOR"); // Not really a mode..., +  public static final Mode NUMERIC = new Mode(new int[]{10, 12, 14}, 0x01, "NUMERIC");, +  public static final Mode ALPHANUMERIC = new Mode(new int[]{9, 11, 13}, 0x02, "ALPHANUMERIC");, +  public static final Mode BYTE = new Mode(new int[]{8, 16, 16}, 0x04, "BYTE");, +  public static final Mode ECI = new Mode(null, 0x07, "ECI"); // character counts don't apply, +  public static final Mode KANJI = new Mode(new int[]{8, 10, 12}, 0x08, "KANJI");, +  public static final Mode FNC1_FIRST_POSITION = new Mode(null, 0x05, "FNC1_FIRST_POSITION");, +  public static final Mode FNC1_SECOND_POSITION = new Mode(null, 0x09, "FNC1_SECOND_POSITION");, +  private final int bits;, +  private final String name;, +  private Mode(int[] characterCountBitsForVersions, int bits, String name) {, +    this.bits = bits;, +    this.name = name;, +   * @throws IllegalArgumentException if bits do not correspond to a known mode, +  public static Mode forBits(int bits) {, +        throw new IllegalArgumentException();, +  public int getCharacterCountBits(Version version) {, +  public int getBits() {, +    return bits;, +  }, +, +  public String getName() {, +    return name;, +  }, +, +  public String toString() {, +    return name;, +  }, +, +++ b/core/src/com/google/zxing/qrcode/decoder/Version.java, +  public static Version getVersionForNumber(int versionNumber) {, +      throw new IllegalArgumentException();, +++ b/core/src/com/google/zxing/qrcode/encoder/Encoder.java]