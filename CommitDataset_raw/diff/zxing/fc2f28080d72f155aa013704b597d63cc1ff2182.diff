[+++ b/core/src/com/google/zxing/qrcode/QRCodeReader.java, +      DetectorResult result = new Detector(image).detect(hints);, +++ b/core/src/com/google/zxing/qrcode/QRCodeReader.java, +      DetectorResult result = new Detector(image).detect(hints);, +++ b/core/src/com/google/zxing/qrcode/detector/Detector.java, +import java.util.Hashtable;, +, +    return detect(null);, +  }, +, +  /**, +   * <p>Detects a QR Code in an image, simply.</p>, +   *, +   * @param hints optional hints to detector, +   * @return {@link DetectorResult} encapsulating results of detecting a QR Code, +   * @throws ReaderException if no QR Code can be found, +   */, +  public DetectorResult detect(Hashtable hints) throws ReaderException {, +    FinderPatternInfo info = finder.find(hints);, +++ b/core/src/com/google/zxing/qrcode/QRCodeReader.java, +      DetectorResult result = new Detector(image).detect(hints);, +++ b/core/src/com/google/zxing/qrcode/detector/Detector.java, +import java.util.Hashtable;, +, +    return detect(null);, +  }, +, +  /**, +   * <p>Detects a QR Code in an image, simply.</p>, +   *, +   * @param hints optional hints to detector, +   * @return {@link DetectorResult} encapsulating results of detecting a QR Code, +   * @throws ReaderException if no QR Code can be found, +   */, +  public DetectorResult detect(Hashtable hints) throws ReaderException {, +    FinderPatternInfo info = finder.find(hints);, +++ b/core/src/com/google/zxing/qrcode/detector/FinderPatternFinder.java, +import com.google.zxing.DecodeHintType;, +import java.util.Hashtable;, +  FinderPatternInfo find(Hashtable hints) throws ReaderException {, +    boolean tryHarder = hints != null && hints.containsKey(DecodeHintType.TRY_HARDER);, +    int iSkip = tryHarder ? 1 : BIG_SKIP;]