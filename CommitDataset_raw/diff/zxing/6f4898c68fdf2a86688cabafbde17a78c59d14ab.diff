[+++ b/core/src/com/google/zxing/qrcode/encoder/Encoder.java, +    Matrix matrix = new Matrix(qr_code.matrix_width(), qr_code.matrix_width());, +      Matrix matrix) {, +    int min_penalty = Integer.MAX_VALUE;  // Lower penalty is better., +      final int penalty = MaskUtil.CalculateMaskPenalty(matrix);, +++ b/core/src/com/google/zxing/qrcode/encoder/Encoder.java, +    Matrix matrix = new Matrix(qr_code.matrix_width(), qr_code.matrix_width());, +      Matrix matrix) {, +    int min_penalty = Integer.MAX_VALUE;  // Lower penalty is better., +      final int penalty = MaskUtil.CalculateMaskPenalty(matrix);, +++ b/core/src/com/google/zxing/qrcode/encoder/MaskUtil.java, +  public static int CalculateMaskPenalty(final Matrix matrix) {, +  public static int ApplyMaskPenaltyRule1(final Matrix matrix) {, +  //, +  // JAVAPORT: Consider using Matrix.getArray() instead., +  public static int ApplyMaskPenaltyRule2(final Matrix matrix) {, +        int value = matrix.get(y, x);, +        if (value == matrix.get(y + 0, x + 1) &&, +            value == matrix.get(y + 1, x + 0) &&, +            value == matrix.get(y + 1, x + 1)) {, +  //, +  // JAVAPORT: This many calls to Matrix.get() looks expensive. We should profile and consider, +  // adding a byte[][] Matrix.getArray() method, then using that array locally., +  public static int ApplyMaskPenaltyRule3(final Matrix matrix) {, +            matrix.get(y, x +  0) == 1 &&, +            matrix.get(y, x +  1) == 0 &&, +            matrix.get(y, x +  2) == 1 &&, +            matrix.get(y, x +  3) == 1 &&, +            matrix.get(y, x +  4) == 1 &&, +            matrix.get(y, x +  5) == 0 &&, +            matrix.get(y, x +  6) == 1 &&, +                matrix.get(y, x +  7) == 0 &&, +                matrix.get(y, x +  8) == 0 &&, +                matrix.get(y, x +  9) == 0 &&, +                matrix.get(y, x + 10) == 0) ||, +                    matrix.get(y, x -  1) == 0 &&, +                    matrix.get(y, x -  2) == 0 &&, +                    matrix.get(y, x -  3) == 0 &&, +                    matrix.get(y, x -  4) == 0))) {, +            matrix.get(y +  0, x) == 1  &&, +            matrix.get(y +  1, x) == 0  &&, +            matrix.get(y +  2, x) == 1  &&, +            matrix.get(y +  3, x) == 1  &&, +            matrix.get(y +  4, x) == 1  &&, +            matrix.get(y +  5, x) == 0  &&, +            matrix.get(y +  6, x) == 1 &&, +                matrix.get(y +  7, x) == 0 &&, +                matrix.get(y +  8, x) == 0 &&, +                matrix.get(y +  9, x) == 0 &&, +                matrix.get(y + 10, x) == 0) ||, +                    matrix.get(y -  1, x) == 0 &&, +                    matrix.get(y -  2, x) == 0 &&, +                    matrix.get(y -  3, x) == 0 &&, +                    matrix.get(y -  4, x) == 0))) {, +  public static int ApplyMaskPenaltyRule4(final Matrix matrix) {, +        if (matrix.get(y, x) == 1) {, +    double dark_ratio = (double) num_dark_cells / num_total_cells;, +    final int penalty = Math.abs((int) (dark_ratio * 100 - 50)) / 5 * 10;, +  public static int GetDataMaskBit(final int mask_pattern, final int x, final int y) {, +        return ((y + x) % 2 == 0) ? 1 : 0;, +        return (y % 2 == 0) ? 1 : 0;, +        return (x % 3 == 0) ? 1 : 0;, +        return ((y + x) % 3 == 0) ? 1 : 0;, +        return (((y / 2) + (x / 3)) % 2 == 0) ? 1 : 0;, +        return (((y * x) % 2) + ((y * x) % 3) == 0) ? 1 : 0;, +        return ((((y * x) % 2) + ((y * x) % 3)) % 2 == 0) ? 1 : 0;, +        return ((((y * x) % 3) + ((y + x) % 2)) % 2 == 0) ? 1 : 0;, +  private static int ApplyMaskPenaltyRule1Internal(final Matrix matrix, boolean is_horizontal) {, +    //       int bit = matrix.get(i, j);, +    //       int bit = matrix.get(j, i);, +        final int bit = is_horizontal ? matrix.get(i, j) : matrix.get(j, i);, +++ b/core/src/com/google/zxing/qrcode/encoder/Encoder.java, +    Matrix matrix = new Matrix(qr_code.matrix_width(), qr_code.matrix_width());, +      Matrix matrix) {, +    int min_penalty = Integer.MAX_VALUE;  // Lower penalty is better., +      final int penalty = MaskUtil.CalculateMaskPenalty(matrix);, +++ b/core/src/com/google/zxing/qrcode/encoder/MaskUtil.java, +  public static int CalculateMaskPenalty(final Matrix matrix) {, +  public static int ApplyMaskPenaltyRule1(final Matrix matrix) {, +  //, +  // JAVAPORT: Consider using Matrix.getArray() instead., +  public static int ApplyMaskPenaltyRule2(final Matrix matrix) {, +        int value = matrix.get(y, x);, +        if (value == matrix.get(y + 0, x + 1) &&, +            value == matrix.get(y + 1, x + 0) &&, +            value == matrix.get(y + 1, x + 1)) {, +  //, +  // JAVAPORT: This many calls to Matrix.get() looks expensive. We should profile and consider, +  // adding a byte[][] Matrix.getArray() method, then using that array locally., +  public static int ApplyMaskPenaltyRule3(final Matrix matrix) {, +            matrix.get(y, x +  0) == 1 &&, +            matrix.get(y, x +  1) == 0 &&, +            matrix.get(y, x +  2) == 1 &&, +            matrix.get(y, x +  3) == 1 &&, +            matrix.get(y, x +  4) == 1 &&, +            matrix.get(y, x +  5) == 0 &&, +            matrix.get(y, x +  6) == 1 &&, +                matrix.get(y, x +  7) == 0 &&, +                matrix.get(y, x +  8) == 0 &&, +                matrix.get(y, x +  9) == 0 &&]