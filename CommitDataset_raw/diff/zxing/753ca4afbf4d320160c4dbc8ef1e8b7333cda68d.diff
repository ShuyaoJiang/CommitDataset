[+++ b/cpp/core/src/MonochromeBitmapSource.cpp, +      size_t startX = (width - minDimension) >> 1;, +      size_t startY = (height - minDimension) >> 1;, +        unsigned char pixel = getPixel(startX + n, startY + n);, +      if (arg < 0 || arg >= (int)height) {, +  return lastEstimationMethod_;, +++ b/cpp/core/src/MonochromeBitmapSource.cpp, +      size_t startX = (width - minDimension) >> 1;, +      size_t startY = (height - minDimension) >> 1;, +        unsigned char pixel = getPixel(startX + n, startY + n);, +      if (arg < 0 || arg >= (int)height) {, +  return lastEstimationMethod_;, +++ b/cpp/core/src/common/BlackPointEstimator.cpp, +    int maxBucketCount = 0;, +      if (histogram[i] > maxBucketCount) {, +        maxBucketCount = histogram[i];, +      }, +    if (secondPeak - firstPeak <= numBuckets >> 4) {, +      int score = fromFirst * fromFirst * (secondPeak - i) * (maxBucketCount - histogram[i]);, +++ b/cpp/core/src/MonochromeBitmapSource.cpp, +      size_t startX = (width - minDimension) >> 1;, +      size_t startY = (height - minDimension) >> 1;, +        unsigned char pixel = getPixel(startX + n, startY + n);, +      if (arg < 0 || arg >= (int)height) {, +  return lastEstimationMethod_;, +++ b/cpp/core/src/common/BlackPointEstimator.cpp, +    int maxBucketCount = 0;, +      if (histogram[i] > maxBucketCount) {, +        maxBucketCount = histogram[i];, +      }, +    if (secondPeak - firstPeak <= numBuckets >> 4) {, +      int score = fromFirst * fromFirst * (secondPeak - i) * (maxBucketCount - histogram[i]);, +++ b/cpp/core/src/common/reedsolomon/ReedSolomonDecoder.cpp, +    , +    , +#ifdef DEBUG, +#endif, +    , +    , +    , +      , +      , +#ifdef DEBUG, +#endif, +++ b/cpp/core/src/MonochromeBitmapSource.cpp, +      size_t startX = (width - minDimension) >> 1;, +      size_t startY = (height - minDimension) >> 1;, +        unsigned char pixel = getPixel(startX + n, startY + n);, +      if (arg < 0 || arg >= (int)height) {, +  return lastEstimationMethod_;, +++ b/cpp/core/src/common/BlackPointEstimator.cpp, +    int maxBucketCount = 0;, +      if (histogram[i] > maxBucketCount) {, +        maxBucketCount = histogram[i];, +      }, +    if (secondPeak - firstPeak <= numBuckets >> 4) {, +      int score = fromFirst * fromFirst * (secondPeak - i) * (maxBucketCount - histogram[i]);, +++ b/cpp/core/src/common/reedsolomon/ReedSolomonDecoder.cpp, +    , +    , +#ifdef DEBUG, +#endif, +    , +    , +    , +      , +      , +#ifdef DEBUG, +#endif, +++ b/cpp/core/src/qrcode/QRCodeReader.cpp, +#ifdef DEBUG, +#endif, +    , +    , +#ifdef DEBUG, +#endif , +    , +#ifdef DEBUG, +#endif , +    , +, +#ifdef DEBUG, +#endif, +    , +#ifdef DEBUG, +#endif, +    , +#ifdef DEBUG, +#endif, +    , +++ b/cpp/core/src/MonochromeBitmapSource.cpp, +      size_t startX = (width - minDimension) >> 1;, +      size_t startY = (height - minDimension) >> 1;, +        unsigned char pixel = getPixel(startX + n, startY + n);, +      if (arg < 0 || arg >= (int)height) {, +  return lastEstimationMethod_;, +++ b/cpp/core/src/common/BlackPointEstimator.cpp, +    int maxBucketCount = 0;, +      if (histogram[i] > maxBucketCount) {, +        maxBucketCount = histogram[i];]