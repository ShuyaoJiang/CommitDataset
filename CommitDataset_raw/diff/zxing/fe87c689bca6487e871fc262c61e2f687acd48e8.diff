[+++ b/iphone/Classes/Decoder.m, +#include <zxing/qrcode/QRCodeReader.h>, +#include <zxing/BinaryBitmap.h>, +#include <zxing/ReaderException.h>, +#include <zxing/common/IllegalArgumentException.h>, +#include <zxing/common/GlobalHistogramBinarizer.h>, +using namespace zxing;, +using namespace zxing::qrcode;, +		Ref<LuminanceSource> source (new GrayBytesMonochromeBitmapSource(subsetData, subsetWidth, subsetHeight, subsetBytesPerRow));, +		, +		Ref<Binarizer> binarizer (new GlobalHistogramBinarizer(source));, +		Ref<BinaryBitmap> grayImage (new BinaryBitmap(binarizer));, +				std::vector<Ref<ResultPoint> > resultPoints = result->getResultPoints();, +				[NSMutableArray arrayWithCapacity:resultPoints.size()];, +				for (size_t i = 0; i < resultPoints.size(); i++) {, +++ b/iphone/Classes/Decoder.m, +#include <zxing/qrcode/QRCodeReader.h>, +#include <zxing/BinaryBitmap.h>, +#include <zxing/ReaderException.h>, +#include <zxing/common/IllegalArgumentException.h>, +#include <zxing/common/GlobalHistogramBinarizer.h>, +using namespace zxing;, +using namespace zxing::qrcode;, +		Ref<LuminanceSource> source (new GrayBytesMonochromeBitmapSource(subsetData, subsetWidth, subsetHeight, subsetBytesPerRow));, +		, +		Ref<Binarizer> binarizer (new GlobalHistogramBinarizer(source));, +		Ref<BinaryBitmap> grayImage (new BinaryBitmap(binarizer));, +				std::vector<Ref<ResultPoint> > resultPoints = result->getResultPoints();, +				[NSMutableArray arrayWithCapacity:resultPoints.size()];, +				for (size_t i = 0; i < resultPoints.size(); i++) {, +++ b/iphone/Classes/GrayBytesMonochromeBitmapSource.cpp, +//, +//  GrayBytesMonochromeBitmapSource.cpp, +//  ZXing, +//, +//  Created by Thomas Recloux, Norsys on 04/12/2009., +/*, + * Copyright 2008 ZXing authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +#include "GrayBytesMonochromeBitmapSource.h", +#include <zxing/ReaderException.h>, +, +, +GrayBytesMonochromeBitmapSource::GrayBytesMonochromeBitmapSource(const unsigned char *bytes, , +                                int width, , +                                int height,, +								int bytesPerRow)  : , +				width_(width), , +				height_(height),, +				bytes_(bytes), , +				bytesPerRow_(bytesPerRow) { }, +, +, +int GrayBytesMonochromeBitmapSource::getWidth() {, +	return width_;, +}, +, +int GrayBytesMonochromeBitmapSource::getHeight() {, +	return height_;, +}, +, +unsigned char GrayBytesMonochromeBitmapSource::getPixel(int x, int y) {, +/*	if (x >= width_ || y >= height_) {, +		throw new ReaderException("bitmap coordinate out of bounds");, +	}*/, +	int index = y * bytesPerRow_ + x;, +	return bytes_[index];, +}, +++ b/iphone/Classes/Decoder.m, +#include <zxing/qrcode/QRCodeReader.h>, +#include <zxing/BinaryBitmap.h>, +#include <zxing/ReaderException.h>, +#include <zxing/common/IllegalArgumentException.h>, +#include <zxing/common/GlobalHistogramBinarizer.h>, +using namespace zxing;, +using namespace zxing::qrcode;, +		Ref<LuminanceSource> source (new GrayBytesMonochromeBitmapSource(subsetData, subsetWidth, subsetHeight, subsetBytesPerRow));, +		, +		Ref<Binarizer> binarizer (new GlobalHistogramBinarizer(source));, +		Ref<BinaryBitmap> grayImage (new BinaryBitmap(binarizer));, +				std::vector<Ref<ResultPoint> > resultPoints = result->getResultPoints();, +				[NSMutableArray arrayWithCapacity:resultPoints.size()];, +				for (size_t i = 0; i < resultPoints.size(); i++) {, +++ b/iphone/Classes/GrayBytesMonochromeBitmapSource.cpp, +//, +//  GrayBytesMonochromeBitmapSource.cpp, +//  ZXing]