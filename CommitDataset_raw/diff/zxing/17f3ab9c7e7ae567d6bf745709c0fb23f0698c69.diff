[+++ b/core/src/main/java/com/google/zxing/oned/CodaBarWriter.java, +  private static final char[] CHARS_WHICH_ARE_TEN_LENGTH_EACH_AFTER_DECODED = {'/', ':', '+', '.'};, +      if (Character.isDigit(contents.charAt(i)) || contents.charAt(i) == '-' || contents.charAt(i) == '$') {, +      } else if (CodaBarReader.arrayContains(CHARS_WHICH_ARE_TEN_LENGTH_EACH_AFTER_DECODED, contents.charAt(i))) {, +      if (index == 0 || index == contents.length() - 1) {, +        // The start/end chars are not in the CodaBarReader.ALPHABET., +++ b/core/src/main/java/com/google/zxing/oned/CodaBarWriter.java, +  private static final char[] CHARS_WHICH_ARE_TEN_LENGTH_EACH_AFTER_DECODED = {'/', ':', '+', '.'};, +      if (Character.isDigit(contents.charAt(i)) || contents.charAt(i) == '-' || contents.charAt(i) == '$') {, +      } else if (CodaBarReader.arrayContains(CHARS_WHICH_ARE_TEN_LENGTH_EACH_AFTER_DECODED, contents.charAt(i))) {, +      if (index == 0 || index == contents.length() - 1) {, +        // The start/end chars are not in the CodaBarReader.ALPHABET., +++ b/core/src/test/java/com/google/zxing/oned/CodaBarWriterTestCase.java, + * @author Sean Owen, +    doTest("B515-3/B",, +           "00000" +, +           "1001001011" + "0110101001" + "0101011001" + "0110101001" + "0101001101" +, +           "0110010101" + "01101101011" + "01001001011" +, +           "00000");, +, +  @Test, +  public void testEncode2() throws WriterException {, +    doTest("T123T",, +           "00000" +, +           "1011001001" + "0101011001" + "0101001011" + "0110010101" + "01011001001" +, +           "00000");, +  }, +, +  @Test, +  public void testAltStartEnd() throws WriterException {, +    assertEquals(encode("T123456789-$T"), encode("A123456789-$A"));, +  }, +, +  private static void doTest(String input, CharSequence expected) throws WriterException {, +    BitMatrix result = encode(input);, +    StringBuilder actual = new StringBuilder(result.getWidth());, +    for (int i = 0; i < result.getWidth(); i++) {, +      actual.append(result.get(i, 0) ? '1' : '0');, +    }, +    assertEquals(expected, actual.toString());, +  }, +, +  private static BitMatrix encode(String input) throws WriterException {, +    return new CodaBarWriter().encode(input, BarcodeFormat.CODABAR, 0, 0);]