[+++ b/core/src/com/google/zxing/client/result/URIResultParser.java, +  private static final String ALPHANUM_PART = "[a-zA-Z0-9\\-]";, +  private static final Pattern URL_WITH_PROTOCOL_PATTERN = Pattern.compile("[a-zA-Z0-9]{2,}:");, +      "(" + ALPHANUM_PART + "+\\.)+" + ALPHANUM_PART + "{2,}" + // host name elements, +      "(:\\d{1,5})?" + // maybe port, +      "(/|\\?|$)"); // query, path or nothing, +    // We specifically handle the odd "URL" scheme here for simplicity and add "URI" for fun, +    // Assume anything starting this way really means to be a URI, +    if (rawText.startsWith("URL:") || rawText.startsWith("URI:")) {, +      return new URIParsedResult(rawText.substring(4).trim(), null);, +++ b/core/src/com/google/zxing/client/result/URIResultParser.java, +  private static final String ALPHANUM_PART = "[a-zA-Z0-9\\-]";, +  private static final Pattern URL_WITH_PROTOCOL_PATTERN = Pattern.compile("[a-zA-Z0-9]{2,}:");, +      "(" + ALPHANUM_PART + "+\\.)+" + ALPHANUM_PART + "{2,}" + // host name elements, +      "(:\\d{1,5})?" + // maybe port, +      "(/|\\?|$)"); // query, path or nothing, +    // We specifically handle the odd "URL" scheme here for simplicity and add "URI" for fun, +    // Assume anything starting this way really means to be a URI, +    if (rawText.startsWith("URL:") || rawText.startsWith("URI:")) {, +      return new URIParsedResult(rawText.substring(4).trim(), null);, +++ b/core/test/src/com/google/zxing/client/result/URIParsedResultTestCase.java, +    doTest("BTCTX:-TC4TO3$ZYZTC5NC83/SYOV+YGUGK:$BSF0P8/STNTKTKS.V84+JSA$LB+EHCG+8A725.2AZ-NAVX3VBV5K4MH7UL2.2M:" +, +               "F*M9HSL*$2P7T*FX.ZT80GWDRV0QZBPQ+O37WDCNZBRM3EQ0S9SZP+3BPYZG02U/LA*89C2U.V1TS.CT1VF3DIN*HN3W-O-" +, +               "0ZAKOAB32/.8:J501GJJTTWOA+5/6$MIYBERPZ41NJ6-WSG/*Z48ZH*LSAOEM*IXP81L:$F*W08Z60CR*C*P.JEEVI1F02J07L6+" +, +               "W4L1G$/IC*$16GK6A+:I1-:LJ:Z-P3NW6Z6ADFB-F2AKE$2DWN23GYCYEWX9S8L+LF$VXEKH7/R48E32PU+A:9H:8O5",, +           "btctx:-TC4TO3$ZYZTC5NC83/SYOV+YGUGK:$BSF0P8/STNTKTKS.V84+JSA$LB+EHCG+8A725.2AZ-NAVX3VBV5K4MH7UL2.2M:" +, +               "F*M9HSL*$2P7T*FX.ZT80GWDRV0QZBPQ+O37WDCNZBRM3EQ0S9SZP+3BPYZG02U/LA*89C2U.V1TS.CT1VF3DIN*HN3W-O-" +, +               "0ZAKOAB32/.8:J501GJJTTWOA+5/6$MIYBERPZ41NJ6-WSG/*Z48ZH*LSAOEM*IXP81L:$F*W08Z60CR*C*P.JEEVI1F02J07L6+" +, +               "W4L1G$/IC*$16GK6A+:I1-:LJ:Z-P3NW6Z6ADFB-F2AKE$2DWN23GYCYEWX9S8L+LF$VXEKH7/R48E32PU+A:9H:8O5",, +           null);]