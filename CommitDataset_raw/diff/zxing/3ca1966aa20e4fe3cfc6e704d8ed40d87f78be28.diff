[+++ b/symbian/QQrDecoder/CameraImageWrapper.cpp, +int CameraImageWrapper::getWidth() const, +int CameraImageWrapper::getHeight() const, +unsigned char CameraImageWrapper::getPixel(int x, int y) const, +unsigned char* CameraImageWrapper::copyMatrix() const, +    {, +        unsigned char* newMatrix = (unsigned char*)malloc(image.width()*image.height()*sizeof(unsigned char));, +            , +        int cnt = 0;, +        for(int i=0; i<image.width(); i++), +        {, +            for(int j=0; j<image.height(); j++), +            {, +                newMatrix[cnt++] = getPixel(i,j);, +            }, +        }, +        , +        return newMatrix;, +    }, +, +void CameraImageWrapper::setImage(QString fileName), +++ b/symbian/QQrDecoder/CameraImageWrapper.cpp, +int CameraImageWrapper::getWidth() const, +int CameraImageWrapper::getHeight() const, +unsigned char CameraImageWrapper::getPixel(int x, int y) const, +unsigned char* CameraImageWrapper::copyMatrix() const, +    {, +        unsigned char* newMatrix = (unsigned char*)malloc(image.width()*image.height()*sizeof(unsigned char));, +            , +        int cnt = 0;, +        for(int i=0; i<image.width(); i++), +        {, +            for(int j=0; j<image.height(); j++), +            {, +                newMatrix[cnt++] = getPixel(i,j);, +            }, +        }, +        , +        return newMatrix;, +    }, +, +void CameraImageWrapper::setImage(QString fileName), +++ b/symbian/QQrDecoder/CameraImageWrapper.h, +    int getWidth() const;, +    int getHeight() const;, +    unsigned char getPixel(int x, int y) const;, +    unsigned char* copyMatrix() const;, +    void setImage(QString fileName);, +++ b/symbian/QQrDecoder/CameraImageWrapper.cpp, +int CameraImageWrapper::getWidth() const, +int CameraImageWrapper::getHeight() const, +unsigned char CameraImageWrapper::getPixel(int x, int y) const, +unsigned char* CameraImageWrapper::copyMatrix() const, +    {, +        unsigned char* newMatrix = (unsigned char*)malloc(image.width()*image.height()*sizeof(unsigned char));, +            , +        int cnt = 0;, +        for(int i=0; i<image.width(); i++), +        {, +            for(int j=0; j<image.height(); j++), +            {, +                newMatrix[cnt++] = getPixel(i,j);, +            }, +        }, +        , +        return newMatrix;, +    }, +, +void CameraImageWrapper::setImage(QString fileName), +++ b/symbian/QQrDecoder/CameraImageWrapper.h, +    int getWidth() const;, +    int getHeight() const;, +    unsigned char getPixel(int x, int y) const;, +    unsigned char* copyMatrix() const;, +    void setImage(QString fileName);, +++ b/symbian/QQrDecoder/QQrDecoder.pro, +DEFINES += ZXING_ICONV_CONST, +, +++ b/symbian/QQrDecoder/CameraImageWrapper.cpp, +int CameraImageWrapper::getWidth() const, +int CameraImageWrapper::getHeight() const, +unsigned char CameraImageWrapper::getPixel(int x, int y) const, +unsigned char* CameraImageWrapper::copyMatrix() const, +    {, +        unsigned char* newMatrix = (unsigned char*)malloc(image.width()*image.height()*sizeof(unsigned char));, +            , +        int cnt = 0;, +        for(int i=0; i<image.width(); i++), +        {, +            for(int j=0; j<image.height(); j++), +            {, +                newMatrix[cnt++] = getPixel(i,j);, +            }, +        }, +        , +        return newMatrix;, +    }, +, +void CameraImageWrapper::setImage(QString fileName), +++ b/symbian/QQrDecoder/CameraImageWrapper.h]