[+++ b/android/src/com/google/zxing/client/android/AndroidGraphicsGridSampler.java, +      checkAndNudgePoints(image, points);, +++ b/android/src/com/google/zxing/client/android/AndroidGraphicsGridSampler.java, +      checkAndNudgePoints(image, points);, +++ b/core/src/com/google/zxing/common/DefaultGridSampler.java, +      checkAndNudgePoints(image, points);, +++ b/android/src/com/google/zxing/client/android/AndroidGraphicsGridSampler.java, +      checkAndNudgePoints(image, points);, +++ b/core/src/com/google/zxing/common/DefaultGridSampler.java, +      checkAndNudgePoints(image, points);, +++ b/core/src/com/google/zxing/common/GridSampler.java, +   * the image's dimensions to see if the point are even within the image.</p>, +   * <p>For efficiency, the method will check points from either end of the line until one is found, +   * to be within the image. Because the set of points are assumed to be linear, this is valid.</p>, +   *, +  protected static void checkAndNudgePoints(MonochromeBitmapSource image, float[] points) throws ReaderException {, +    // Check and nudge points from start until we see some that are OK:, +    boolean nudged = true;, +    for (int offset = 0; offset < points.length && nudged; offset += 2) {, +      nudged = false;, +        nudged = true;, +        nudged = true;, +        nudged = true;, +        nudged = true;, +      }, +    }, +    // Check and nudge points from end:, +    nudged = true;, +    for (int offset = points.length - 2; offset >= 0 && nudged; offset -= 2) {, +      int x = (int) points[offset];, +      int y = (int) points[offset + 1];, +      if (x < -1 || x > width || y < -1 || y > height) {, +        throw new ReaderException("Transformed point out of bounds at " + x + ',' + y);, +      }, +      nudged = false;, +      if (x == -1) {, +        points[offset] = 0.0f;, +        nudged = true;, +      } else if (x == width) {, +        points[offset] = width - 1;, +        nudged = true;, +      }, +      if (y == -1) {, +        points[offset + 1] = 0.0f;, +        nudged = true;, +      } else if (y == height) {, +        points[offset + 1] = height - 1;, +        nudged = true;, +      }]