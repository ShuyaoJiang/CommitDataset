[+++ b/core/src/test/java/com/google/zxing/oned/Code128WriterTestCase.java, +import static org.junit.Assert.assertEquals;, +, +import org.junit.Before;, +	private static final String FNC1 = "11110101110";, +	private static final String FNC2 = "11110101000";, +	private static final String FNC4 = "10111101110";, +	Writer writer;, +	, +	@Before, +	public void setup() {, +		writer = new Code128Writer();, +	}, +	, +		String actual = matrixToString(result);, +		assertEquals(expected, actual);, +	, +	@Test, +	public void testEncodeWithFunc2() throws WriterException {, +		String toEncode = "\u00f2" + "123";, +		//                                                       "1"            "2"             "3"          check digit 56, +		String expected = QUIET_SPACE + START_CODE_B + FNC2 + "10011100110" + "11001110010" + "11001011100" + "11100010110" + STOP + QUIET_SPACE;, +		, +		BitMatrix result = writer.encode(toEncode, BarcodeFormat.CODE_128, 0, 0);, +		, +		String actual = matrixToString(result);, +		assertEquals(expected, actual);, +	}, +	, +	@Test, +	public void testEncodeWithFunc1() throws WriterException {, +		String toEncode = "\u00f1" + "123";, +		//                                                       "1"            "2"             "3"          check digit 61, +		String expected = QUIET_SPACE + START_CODE_B + FNC1 + "10011100110" + "11001110010" + "11001011100" + "11001000010" + STOP + QUIET_SPACE;, +		, +		BitMatrix result = writer.encode(toEncode, BarcodeFormat.CODE_128, 0, 0);, +		, +		String actual = matrixToString(result);, +		assertEquals(expected, actual);, +	}, +	, +	@Test, +	public void testEncodeWithFunc4() throws WriterException {, +		String toEncode = "\u00f4" + "123";, +		//                                                       "1"            "2"             "3"          check digit 59, +		String expected = QUIET_SPACE + START_CODE_B + FNC4 + "10011100110" + "11001110010" + "11001011100" + "11100011010" + STOP + QUIET_SPACE;, +		, +		BitMatrix result = writer.encode(toEncode, BarcodeFormat.CODE_128, 0, 0);, +		, +		String actual = matrixToString(result);, +		assertEquals(expected, actual);, +	}, +, +	private String matrixToString(BitMatrix result) {, +		StringBuilder builder = new StringBuilder(result.getWidth());, +		for (int i = 0; i < result.getWidth(); i++) {, +			builder.append(result.get(i, 0) ? '1' : '0');, +		}, +		return builder.toString();]