[+++ b/android/src/com/google/zxing/client/android/BarcodeReaderCaptureActivity.java, +    ParsedReaderResult readerResult = ParsedReaderResult.parseReaderResult(rawResult);, +      String rawText = rawResult.getText();, +++ b/android/src/com/google/zxing/client/android/BarcodeReaderCaptureActivity.java, +    ParsedReaderResult readerResult = ParsedReaderResult.parseReaderResult(rawResult);, +      String rawText = rawResult.getText();, +++ b/core/src/com/google/zxing/Result.java, +  private final byte[] rawBytes;, +  public Result(String text, byte[] rawBytes, ResultPoint[] resultPoints, BarcodeFormat format) {, +    this.rawBytes = rawBytes;, +   * @return raw text encoded by the barcode, if applicable, otherwise <code>null</code>, +   * @return raw bytes encoded by the barcode, if applicable, otherwise <code>null</code>, +   */, +  public byte[] getRawBytes() {, +    return rawBytes;, +  }, +, +  /**, +++ b/android/src/com/google/zxing/client/android/BarcodeReaderCaptureActivity.java, +    ParsedReaderResult readerResult = ParsedReaderResult.parseReaderResult(rawResult);, +      String rawText = rawResult.getText();, +++ b/core/src/com/google/zxing/Result.java, +  private final byte[] rawBytes;, +  public Result(String text, byte[] rawBytes, ResultPoint[] resultPoints, BarcodeFormat format) {, +    this.rawBytes = rawBytes;, +   * @return raw text encoded by the barcode, if applicable, otherwise <code>null</code>, +   * @return raw bytes encoded by the barcode, if applicable, otherwise <code>null</code>, +   */, +  public byte[] getRawBytes() {, +    return rawBytes;, +  }, +, +  /**, +++ b/core/src/com/google/zxing/client/result/ParsedReaderResult.java, +import com.google.zxing.Result;, +, +  public static ParsedReaderResult parseReaderResult(Result theResult) {, +    String rawText = theResult.getText();, +++ b/android/src/com/google/zxing/client/android/BarcodeReaderCaptureActivity.java, +    ParsedReaderResult readerResult = ParsedReaderResult.parseReaderResult(rawResult);, +      String rawText = rawResult.getText();, +++ b/core/src/com/google/zxing/Result.java, +  private final byte[] rawBytes;, +  public Result(String text, byte[] rawBytes, ResultPoint[] resultPoints, BarcodeFormat format) {, +    this.rawBytes = rawBytes;, +   * @return raw text encoded by the barcode, if applicable, otherwise <code>null</code>, +   * @return raw bytes encoded by the barcode, if applicable, otherwise <code>null</code>, +   */, +  public byte[] getRawBytes() {, +    return rawBytes;, +  }, +, +  /**, +++ b/core/src/com/google/zxing/client/result/ParsedReaderResult.java, +import com.google.zxing.Result;, +, +  public static ParsedReaderResult parseReaderResult(Result theResult) {, +    String rawText = theResult.getText();, +++ b/core/src/com/google/zxing/common/DecoderResult.java, +/*, + * Copyright 2007 Google Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.zxing.common;, +, +/**, + * <p>Encapsulates the result of decoding a matrix of bits. This typically, + * applies to 2D barcode formats. For now it contains the raw bytes obtained,, + * as well as a String interpretation of those bytes, if applicable.</p>, + *, + * @author srowen@google.com (Sean Owen), + */, +public final class DecoderResult {, +, +  private final byte[] rawBytes;, +  private final String text;, +, +  public DecoderResult(byte[] rawBytes, String text) {, +    if (rawBytes == null && text == null) {, +      throw new IllegalArgumentException();, +    }, +    this.rawBytes = rawBytes;, +    this.text = text;, +  }, +, +  public byte[] getRawBytes() {, +    return rawBytes;, +  }]