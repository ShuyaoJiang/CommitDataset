[+++ b/javase/pom.xml, +          <source>7</source>, +          <target>7</target>, +++ b/javase/pom.xml, +          <source>7</source>, +          <target>7</target>, +++ b/javase/src/com/google/zxing/HtmlAssetTranslator.java, +    Collection<String> languages = new ArrayList<>();, +    Collection<String> fileNamesToTranslate = new ArrayList<>();, +    Queue<Node> nodes = new LinkedList<>();, +    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {, +      throw new IllegalStateException(e);, +++ b/javase/pom.xml, +          <source>7</source>, +          <target>7</target>, +++ b/javase/src/com/google/zxing/HtmlAssetTranslator.java, +    Collection<String> languages = new ArrayList<>();, +    Collection<String> fileNamesToTranslate = new ArrayList<>();, +    Queue<Node> nodes = new LinkedList<>();, +    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {, +      throw new IllegalStateException(e);, +++ b/javase/src/com/google/zxing/StringsResourceTranslator.java, +  private static final Map<String,String> LANGUAGE_CODE_MASSAGINGS = new HashMap<>(3);, +    try (Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(resultTempFile), UTF8))) {, +    try (Reader in = new BufferedReader(new InputStreamReader(connection.getInputStream(), UTF8))) {, +    SortedMap<String,String> entries = new TreeMap<>();, +    try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), UTF8))) {, +++ b/javase/pom.xml, +          <source>7</source>, +          <target>7</target>, +++ b/javase/src/com/google/zxing/HtmlAssetTranslator.java, +    Collection<String> languages = new ArrayList<>();, +    Collection<String> fileNamesToTranslate = new ArrayList<>();, +    Queue<Node> nodes = new LinkedList<>();, +    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {, +      throw new IllegalStateException(e);, +++ b/javase/src/com/google/zxing/StringsResourceTranslator.java, +  private static final Map<String,String> LANGUAGE_CODE_MASSAGINGS = new HashMap<>(3);, +    try (Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(resultTempFile), UTF8))) {, +    try (Reader in = new BufferedReader(new InputStreamReader(connection.getInputStream(), UTF8))) {, +    SortedMap<String,String> entries = new TreeMap<>();, +    try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), UTF8))) {, +++ b/javase/src/com/google/zxing/client/j2se/CommandLineEncoder.java, +, +      String[] argValue = arg.split("=");, +      switch (argValue[0]) {, +        case "--barcode_format":, +          barcodeFormat = BarcodeFormat.valueOf(argValue[1]);, +          break;, +        case "--image_format":, +          imageFormat = argValue[1];, +          break;, +        case "--output":, +          outFileString = argValue[1];, +          break;, +        case "--width":, +          width = Integer.parseInt(argValue[1]);, +          break;, +        case "--height":, +          height = Integer.parseInt(argValue[1]);, +          break;, +        default:, +          if (arg.startsWith("-")) {, +            System.err.println("Unknown command line option " + arg);, +            printUsage();, +            return;, +          }, +    if (DEFAULT_OUTPUT_FILE.equals(outFileString)) {, +      outFileString += '.' + imageFormat.toLowerCase(Locale.ENGLISH);, +    }, +    , +++ b/javase/pom.xml, +          <source>7</source>, +          <target>7</target>, +++ b/javase/src/com/google/zxing/HtmlAssetTranslator.java, +    Collection<String> languages = new ArrayList<>();, +    Collection<String> fileNamesToTranslate = new ArrayList<>();, +    Queue<Node> nodes = new LinkedList<>();, +    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {, +      throw new IllegalStateException(e);, +++ b/javase/src/com/google/zxing/StringsResourceTranslator.java, +  private static final Map<String,String> LANGUAGE_CODE_MASSAGINGS = new HashMap<>(3);, +    try (Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(resultTempFile), UTF8))) {, +    try (Reader in = new BufferedReader(new InputStreamReader(connection.getInputStream(), UTF8))) {, +    SortedMap<String,String> entries = new TreeMap<>();, +    try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), UTF8))) {, +++ b/javase/src/com/google/zxing/client/j2se/CommandLineEncoder.java, +, +      String[] argValue = arg.split("=");, +      switch (argValue[0]) {, +        case "--barcode_format":, +          barcodeFormat = BarcodeFormat.valueOf(argValue[1]);, +          break;, +        case "--image_format":, +          imageFormat = argValue[1];, +          break;, +        case "--output":, +          outFileString = argValue[1];, +          break;, +        case "--width":]