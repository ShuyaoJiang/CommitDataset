[+++ b/core-ext/src/com/google/zxing/client/result/URIParsedResult.java, +    if (rawText.startsWith("URL:")) {, +      // Sometimes a URL is prefixed with "URL:" -- support this, +      rawText = rawText.substring(4);, +    }, +++ b/core-ext/src/com/google/zxing/client/result/URIParsedResult.java, +    if (rawText.startsWith("URL:")) {, +      // Sometimes a URL is prefixed with "URL:" -- support this, +      rawText = rawText.substring(4);, +    }, +++ b/javame/src/com/google/zxing/client/j2me/ZXingMIDlet.java, +  private void showOpenURL(final String text) {, +    Alert alert = new Alert("Open web page?", text, null, AlertType.CONFIRMATION);, +  private void showAlert(String title, String text) {, +  /// TODO this whole bit needs to be merged with the code in core-ext -- this is messy and duplicative, +, +    if (text.startsWith("http://") || text.startsWith("https://")) {, +      showOpenURL(text);, +    } else if (text.startsWith("HTTP://") || text.startsWith("HTTPS://")) {, +      showOpenURL(decapitalizeProtocol(text));, +    } else if (text.startsWith("URL:")) {, +      showOpenURL(decapitalizeProtocol(text.substring(4)));, +    } else if (text.startsWith("MEBKM:")) {, +      int urlIndex = text.indexOf("URL:", 6);, +      if (urlIndex >= 6) {, +        String url = text.substring( urlIndex + 4);, +        int semicolon = url.indexOf((int) ';');, +        if (semicolon >= 0) {, +          url = url.substring(0, semicolon);, +        }, +        showOpenURL(decapitalizeProtocol(url));, +      } else {, +        showAlert("Barcode detected", text);, +      }, +    } else if (maybeURLWithoutScheme(text)) {, +      showOpenURL("http://" + text);, +  private static String decapitalizeProtocol(String url) {, +    int protocolEnd = url.indexOf("://");, +    if (protocolEnd >= 0) {, +      return url.substring(0, protocolEnd).toLowerCase() + url.substring(protocolEnd);, +    } else {, +      return url;, +    }, +  }, +, +  /**, +   * Crudely guesses that a string may represent a URL if it has a '.' and no spaces., +   */]