[+++ b/symbian/QQrDecoder/QQrDecoder.cpp, +//#include <zxing/qrcode/QRCodeReader.h>, +#include <zxing/MultiFormatReader.h>, +//using namespace zxing::qrcode;, +    MultiFormatReader decoder;, +++ b/symbian/QQrDecoder/QQrDecoder.cpp, +//#include <zxing/qrcode/QRCodeReader.h>, +#include <zxing/MultiFormatReader.h>, +//using namespace zxing::qrcode;, +    MultiFormatReader decoder;, +++ b/symbian/QQrDecoder/QQrDecoder.pro, +++ b/symbian/QQrDecoder/QQrDecoder.cpp, +//#include <zxing/qrcode/QRCodeReader.h>, +#include <zxing/MultiFormatReader.h>, +//using namespace zxing::qrcode;, +    MultiFormatReader decoder;, +++ b/symbian/QQrDecoder/QQrDecoder.pro, +++ b/symbian/QQrDecoder/QQrDecoder_template.sisx, +++ b/symbian/QQrDecoder/QQrDecoder.cpp, +//#include <zxing/qrcode/QRCodeReader.h>, +#include <zxing/MultiFormatReader.h>, +//using namespace zxing::qrcode;, +    MultiFormatReader decoder;, +++ b/symbian/QQrDecoder/QQrDecoder.pro, +++ b/symbian/QQrDecoder/QQrDecoder_template.sisx, +++ b/symbian/QQrDecoder/zxing/Binarizer.cpp, +	Binarizer::Binarizer(Ref<LuminanceSource> source) : source_(source), array_(NULL), matrix_(NULL), cached_y_(-1) {, +		if (array_ == NULL && cached_y_ != y) {, +			cached_y_ = y;, +		}, +++ b/symbian/QQrDecoder/QQrDecoder.cpp, +//#include <zxing/qrcode/QRCodeReader.h>, +#include <zxing/MultiFormatReader.h>, +//using namespace zxing::qrcode;, +    MultiFormatReader decoder;, +++ b/symbian/QQrDecoder/QQrDecoder.pro, +++ b/symbian/QQrDecoder/QQrDecoder_template.sisx, +++ b/symbian/QQrDecoder/zxing/Binarizer.cpp, +	Binarizer::Binarizer(Ref<LuminanceSource> source) : source_(source), array_(NULL), matrix_(NULL), cached_y_(-1) {, +		if (array_ == NULL && cached_y_ != y) {, +			cached_y_ = y;, +		}, +++ b/symbian/QQrDecoder/zxing/Binarizer.h, +  Ref<BitMatrix> matrix_;, +  int cached_y_;, +++ b/symbian/QQrDecoder/QQrDecoder.cpp, +//#include <zxing/qrcode/QRCodeReader.h>, +#include <zxing/MultiFormatReader.h>, +//using namespace zxing::qrcode;, +    MultiFormatReader decoder;, +++ b/symbian/QQrDecoder/QQrDecoder.pro, +++ b/symbian/QQrDecoder/QQrDecoder_template.sisx, +++ b/symbian/QQrDecoder/zxing/Binarizer.cpp, +	Binarizer::Binarizer(Ref<LuminanceSource> source) : source_(source), array_(NULL), matrix_(NULL), cached_y_(-1) {, +		if (array_ == NULL && cached_y_ != y) {, +			cached_y_ = y;, +		}, +++ b/symbian/QQrDecoder/zxing/Binarizer.h, +  Ref<BitMatrix> matrix_;, +  int cached_y_;, +++ b/symbian/QQrDecoder/zxing/BinaryBitmap.cpp, +	BinaryBitmap::BinaryBitmap(Ref<Binarizer> binarizer) : bits_(NULL), array_bits_(NULL), binarizer_(binarizer), cached_y_(-1) {, +		if (array_bits_ == NULL && cached_y_ != y) {, +			cached_y_ = y;, +++ b/symbian/QQrDecoder/QQrDecoder.cpp, +//#include <zxing/qrcode/QRCodeReader.h>, +#include <zxing/MultiFormatReader.h>, +//using namespace zxing::qrcode;, +    MultiFormatReader decoder;, +++ b/symbian/QQrDecoder/QQrDecoder.pro, +++ b/symbian/QQrDecoder/QQrDecoder_template.sisx, +++ b/symbian/QQrDecoder/zxing/Binarizer.cpp, +	Binarizer::Binarizer(Ref<LuminanceSource> source) : source_(source), array_(NULL), matrix_(NULL), cached_y_(-1) {, +		if (array_ == NULL && cached_y_ != y) {, +			cached_y_ = y;, +		}, +++ b/symbian/QQrDecoder/zxing/Binarizer.h, +  Ref<BitMatrix> matrix_;, +  int cached_y_;, +++ b/symbian/QQrDecoder/zxing/BinaryBitmap.cpp, +	BinaryBitmap::BinaryBitmap(Ref<Binarizer> binarizer) : bits_(NULL), array_bits_(NULL), binarizer_(binarizer), cached_y_(-1) {, +		if (array_bits_ == NULL && cached_y_ != y) {, +			cached_y_ = y;, +++ b/symbian/QQrDecoder/zxing/BinaryBitmap.h, +		int cached_y_;, +++ b/symbian/QQrDecoder/QQrDecoder.cpp, +//#include <zxing/qrcode/QRCodeReader.h>, +#include <zxing/MultiFormatReader.h>, +//using namespace zxing::qrcode;, +    MultiFormatReader decoder;, +++ b/symbian/QQrDecoder/QQrDecoder.pro, +++ b/symbian/QQrDecoder/QQrDecoder_template.sisx, +++ b/symbian/QQrDecoder/zxing/Binarizer.cpp, +	Binarizer::Binarizer(Ref<LuminanceSource> source) : source_(source), array_(NULL), matrix_(NULL), cached_y_(-1) {, +		if (array_ == NULL && cached_y_ != y) {, +			cached_y_ = y;, +		}, +++ b/symbian/QQrDecoder/zxing/Binarizer.h, +  Ref<BitMatrix> matrix_;, +  int cached_y_;]