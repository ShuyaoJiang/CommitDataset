[+++ b/core/src/com/google/zxing/oned/AbstractUPCEANReader.java, +      // Make sure there is a quiet zone at least as big as the start pattern before the barcode., +      // If this check would run off the left edge of the image, do not accept this barcode,, +      // as it is very likely to be a false positive., +  public final Result decodeRow(int rowNumber, BitArray row, Hashtable hints), +      throws ReaderException {, +  public final Result decodeRow(int rowNumber, BitArray row, int[] startGuardRange), +      throws ReaderException {, +   * Subclasses override this to decode the portion of a barcode between the start, +   * and end guard patterns., +++ b/core/src/com/google/zxing/oned/AbstractUPCEANReader.java, +      // Make sure there is a quiet zone at least as big as the start pattern before the barcode., +      // If this check would run off the left edge of the image, do not accept this barcode,, +      // as it is very likely to be a false positive., +  public final Result decodeRow(int rowNumber, BitArray row, Hashtable hints), +      throws ReaderException {, +  public final Result decodeRow(int rowNumber, BitArray row, int[] startGuardRange), +      throws ReaderException {, +   * Subclasses override this to decode the portion of a barcode between the start, +   * and end guard patterns., +++ b/core/src/com/google/zxing/oned/EAN8Reader.java, +  protected int decodeMiddle(BitArray row, int[] startRange, StringBuffer result), +      throws ReaderException {]