[+++ b/zxingorg/src/com/google/zxing/web/DecodeServlet.java, +import com.google.zxing.multi.GenericMultipleBarcodeReader;, +import com.google.zxing.multi.MultipleBarcodeReader;, +import java.util.ArrayList;, +import java.util.Arrays;, +    Collection<Result> results = new ArrayList<Result>(1);, +      // Look for multiple barcodes, +      MultipleBarcodeReader multiReader = new GenericMultipleBarcodeReader(reader);, +      Result[] theResults = multiReader.decodeMultiple(bitmap, HINTS);, +      if (theResults != null) {, +        results.addAll(Arrays.asList(theResults));, +      }, +    if (results.isEmpty()) {, +      try {, +        // Look for pure barcode, +        Result theResult = reader.decode(bitmap, HINTS_PURE);, +        if (theResult != null) {, +          results.add(theResult);, +        }, +      } catch (ReaderException re) {, +        savedException = re;, +      }, +    }, +, +    if (results.isEmpty()) {, +        Result theResult = reader.decode(bitmap, HINTS);, +        if (theResult != null) {, +          results.add(theResult);, +        }, +    if (results.isEmpty()) {, +        Result theResult = reader.decode(hybridBitmap, HINTS);, +        if (theResult != null) {, +          results.add(theResult);, +        }, +    if (results.isEmpty()) {, +        for (Result result : results) {, +          out.write('\n');, +        }, +      request.setAttribute("results", results);, +++ b/zxingorg/src/com/google/zxing/web/DecodeServlet.java, +import com.google.zxing.multi.GenericMultipleBarcodeReader;, +import com.google.zxing.multi.MultipleBarcodeReader;, +import java.util.ArrayList;, +import java.util.Arrays;, +    Collection<Result> results = new ArrayList<Result>(1);, +      // Look for multiple barcodes, +      MultipleBarcodeReader multiReader = new GenericMultipleBarcodeReader(reader);, +      Result[] theResults = multiReader.decodeMultiple(bitmap, HINTS);, +      if (theResults != null) {, +        results.addAll(Arrays.asList(theResults));, +      }, +    if (results.isEmpty()) {, +      try {, +        // Look for pure barcode, +        Result theResult = reader.decode(bitmap, HINTS_PURE);, +        if (theResult != null) {, +          results.add(theResult);, +        }, +      } catch (ReaderException re) {, +        savedException = re;, +      }, +    }, +, +    if (results.isEmpty()) {, +        Result theResult = reader.decode(bitmap, HINTS);, +        if (theResult != null) {, +          results.add(theResult);, +        }, +    if (results.isEmpty()) {, +        Result theResult = reader.decode(hybridBitmap, HINTS);, +        if (theResult != null) {, +          results.add(theResult);, +        }, +    if (results.isEmpty()) {, +        for (Result result : results) {, +          out.write('\n');, +        }, +      request.setAttribute("results", results);, +++ b/zxingorg/web/decoderesult.jspx, +<jsp:directive.page import=", +  java.util.List,, +  com.google.zxing.Result,, +  com.google.zxing.client.result.ResultParser,, +  com.google.zxing.client.result.ParsedResult,, +  org.apache.commons.lang.StringEscapeUtils"/>, +  <jsp:declaration>, +  private static String arrayToString(byte[] bytes) {, +    int length = bytes.length;, +    StringBuilder result = new StringBuilder(length &lt;&lt; 2);, +    int i = 0;, +    while (i &lt; length) {, +      int max = Math.min(i + 8, length);, +      for (int j = i; j &lt; max; j++) {, +        int value = bytes[j] &amp; 0xFF;, +        result.append(Integer.toHexString(value / 16));, +        result.append(Integer.toHexString(value % 16));, +        result.append(' ');, +      }, +      result.append('\n');, +      i += 8;]