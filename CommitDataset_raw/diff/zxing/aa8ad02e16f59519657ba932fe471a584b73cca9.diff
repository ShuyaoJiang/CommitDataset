[+++ b/javase/src/com/google/zxing/client/j2se/CommandLineRunner.java, +    boolean pureBarcode = false;, +      } else if ("--pure_barcode".equals(arg)) {, +        pureBarcode = true;, +    Hashtable<DecodeHintType, Object> hints = buildHints(tryHarder, pureBarcode, productsOnly);, +                                                              boolean pureBarcode,, +    if (pureBarcode) {, +      hints.put(DecodeHintType.PURE_BARCODE, Boolean.TRUE);, +    }, +++ b/javase/src/com/google/zxing/client/j2se/CommandLineRunner.java, +    boolean pureBarcode = false;, +      } else if ("--pure_barcode".equals(arg)) {, +        pureBarcode = true;, +    Hashtable<DecodeHintType, Object> hints = buildHints(tryHarder, pureBarcode, productsOnly);, +                                                              boolean pureBarcode,, +    if (pureBarcode) {, +      hints.put(DecodeHintType.PURE_BARCODE, Boolean.TRUE);, +    }, +++ b/zxingorg/src/com/google/zxing/web/DecodeServlet.java, +  static final Hashtable<DecodeHintType, Object> HINTS_PURE;, +    HINTS_PURE = new Hashtable<DecodeHintType, Object>(HINTS);, +    HINTS_PURE.put(DecodeHintType.PURE_BARCODE, Boolean.TRUE);, +, +    Result result = null;, +    ReaderException savedException = null;, +, +    try {, +      // Look for pure barcode, +      result = reader.decode(bitmap, HINTS_PURE);, +    } catch (ReaderException re) {, +      savedException = re;, +    }, +, +    if (result == null) {, +      try {, +        // Look for normal barcode in photo, +        savedException = re;, +      }, +    }, +, +    if (result == null) {, +        BinaryBitmap hybridBitmap = new BinaryBitmap(new HybridBinarizer(source));, +        result = reader.decode(hybridBitmap, HINTS);, +      } catch (ReaderException re) {, +        savedException = re;, +    if (result == null) {, +      handleException(savedException, response);, +      return;, +    }, +, +  private static void handleException(ReaderException re, HttpServletResponse response) throws IOException {, +    if (re instanceof NotFoundException) {, +      log.info("Not found: " + re);, +      response.sendRedirect("notfound.jspx");, +    } else if (re instanceof FormatException) {, +      log.info("Format problem: " + re);, +      response.sendRedirect("format.jspx");, +    } else if (re instanceof ChecksumException) {, +      log.info("Checksum problem: " + re);, +      response.sendRedirect("format.jspx");, +    } else {, +      log.info("Unknown problem: " + re);, +      response.sendRedirect("notfound.jspx");, +    }, +  }, +]