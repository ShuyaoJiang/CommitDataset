[+++ b/cpp/core/src/zxing/common/BitArray.cpp, +#include <limits>, +const unsigned int BitArray::bitsPerWord_ = numeric_limits<unsigned int>::digits;, +++ b/cpp/core/src/zxing/common/BitArray.cpp, +#include <limits>, +const unsigned int BitArray::bitsPerWord_ = numeric_limits<unsigned int>::digits;, +++ b/cpp/core/src/zxing/common/BitArray.h, +++ b/cpp/core/src/zxing/common/BitArray.cpp, +#include <limits>, +const unsigned int BitArray::bitsPerWord_ = numeric_limits<unsigned int>::digits;, +++ b/cpp/core/src/zxing/common/BitArray.h, +++ b/cpp/core/src/zxing/common/BitMatrix.cpp, +const unsigned int bitsPerWord = numeric_limits<unsigned int>::digits;, +++ b/cpp/core/src/zxing/common/BitArray.cpp, +#include <limits>, +const unsigned int BitArray::bitsPerWord_ = numeric_limits<unsigned int>::digits;, +++ b/cpp/core/src/zxing/common/BitArray.h, +++ b/cpp/core/src/zxing/common/BitMatrix.cpp, +const unsigned int bitsPerWord = numeric_limits<unsigned int>::digits;, +++ b/cpp/core/src/zxing/datamatrix/detector/Detector.cpp, +    bool steep = abs(toY - fromY) > abs(toX - fromX);, +    int dx = abs(toX - fromX);, +    int dy = abs(toY - fromY);, +++ b/cpp/core/src/zxing/common/BitArray.cpp, +#include <limits>, +const unsigned int BitArray::bitsPerWord_ = numeric_limits<unsigned int>::digits;, +++ b/cpp/core/src/zxing/common/BitArray.h, +++ b/cpp/core/src/zxing/common/BitMatrix.cpp, +const unsigned int bitsPerWord = numeric_limits<unsigned int>::digits;, +++ b/cpp/core/src/zxing/datamatrix/detector/Detector.cpp, +    bool steep = abs(toY - fromY) > abs(toX - fromX);, +    int dx = abs(toX - fromX);, +    int dy = abs(toY - fromY);, +++ b/cpp/core/src/zxing/qrcode/decoder/DecodedBitStreamParser.cpp, +void DecodedBitStreamParser::append(std::string &result, const unsigned char *bufIn, size_t nIn, const char *src) {, +    return;, +  result.append((const char *)bufOut);, +  result.append((const char *)bufIn, nIn);, +void DecodedBitStreamParser::decodeKanjiSegment(Ref<BitSource> bits, std::string &result, int count) {, +  append(result, buffer, nBytes, SHIFT_JIS);, +void DecodedBitStreamParser::decodeByteSegment(Ref<BitSource> bits, std::string &result, int count) {, +  append(result, readBytes, nBytes, encoding);, +void DecodedBitStreamParser::decodeNumericSegment(Ref<BitSource> bits, std::string &result, int count) {, +  append(result, bytes, nBytes, ASCII);, +void DecodedBitStreamParser::decodeAlphanumericSegment(Ref<BitSource> bits, std::string &result, int count) {, +  append(result, bytes, nBytes, ASCII);, +        decodeNumericSegment(bits, result, count);, +        decodeAlphanumericSegment(bits, result, count);, +        decodeByteSegment(bits, result, count);, +        decodeKanjiSegment(bits, result, count);, +++ b/cpp/core/src/zxing/common/BitArray.cpp, +#include <limits>, +const unsigned int BitArray::bitsPerWord_ = numeric_limits<unsigned int>::digits;, +++ b/cpp/core/src/zxing/common/BitArray.h, +++ b/cpp/core/src/zxing/common/BitMatrix.cpp, +const unsigned int bitsPerWord = numeric_limits<unsigned int>::digits;, +++ b/cpp/core/src/zxing/datamatrix/detector/Detector.cpp, +    bool steep = abs(toY - fromY) > abs(toX - fromX);, +    int dx = abs(toX - fromX);, +    int dy = abs(toY - fromY);, +++ b/cpp/core/src/zxing/qrcode/decoder/DecodedBitStreamParser.cpp, +void DecodedBitStreamParser::append(std::string &result, const unsigned char *bufIn, size_t nIn, const char *src) {, +    return;, +  result.append((const char *)bufOut);, +  result.append((const char *)bufIn, nIn);, +void DecodedBitStreamParser::decodeKanjiSegment(Ref<BitSource> bits, std::string &result, int count) {, +  append(result, buffer, nBytes, SHIFT_JIS);, +void DecodedBitStreamParser::decodeByteSegment(Ref<BitSource> bits, std::string &result, int count) {, +  append(result, readBytes, nBytes, encoding);, +void DecodedBitStreamParser::decodeNumericSegment(Ref<BitSource> bits, std::string &result, int count) {, +  append(result, bytes, nBytes, ASCII);, +void DecodedBitStreamParser::decodeAlphanumericSegment(Ref<BitSource> bits, std::string &result, int count) {, +  append(result, bytes, nBytes, ASCII);, +        decodeNumericSegment(bits, result, count);, +        decodeAlphanumericSegment(bits, result, count);, +        decodeByteSegment(bits, result, count);, +        decodeKanjiSegment(bits, result, count);, +++ b/cpp/core/src/zxing/qrcode/decoder/DecodedBitStreamParser.h, +  static void decodeKanjiSegment(Ref<BitSource> bits, std::string &result, int count);, +  static void decodeByteSegment(Ref<BitSource> bits, std::string &result, int count);, +  static void decodeAlphanumericSegment(Ref<BitSource> bits, std::string &result, int count);, +  static void decodeNumericSegment(Ref<BitSource> bits, std::string &result, int count);, +  static void append(std::string &ost, const unsigned char *bufIn, size_t nIn, const char *src);, +++ b/cpp/core/src/zxing/common/BitArray.cpp, +#include <limits>, +const unsigned int BitArray::bitsPerWord_ = numeric_limits<unsigned int>::digits;, +++ b/cpp/core/src/zxing/common/BitArray.h, +++ b/cpp/core/src/zxing/common/BitMatrix.cpp, +const unsigned int bitsPerWord = numeric_limits<unsigned int>::digits;, +++ b/cpp/core/src/zxing/datamatrix/detector/Detector.cpp, +    bool steep = abs(toY - fromY) > abs(toX - fromX);, +    int dx = abs(toX - fromX);, +    int dy = abs(toY - fromY);, +++ b/cpp/core/src/zxing/qrcode/decoder/DecodedBitStreamParser.cpp, +void DecodedBitStreamParser::append(std::string &result, const unsigned char *bufIn, size_t nIn, const char *src) {, +    return;, +  result.append((const char *)bufOut);, +  result.append((const char *)bufIn, nIn);, +void DecodedBitStreamParser::decodeKanjiSegment(Ref<BitSource> bits, std::string &result, int count) {, +  append(result, buffer, nBytes, SHIFT_JIS);]