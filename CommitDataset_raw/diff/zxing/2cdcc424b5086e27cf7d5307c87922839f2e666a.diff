[+++ b/AUTHORS, +Stephen Furlani, +++ b/AUTHORS, +Stephen Furlani, +++ b/csharp/common/DecoderResult.cs, +using System;, +using System.Collections.Generic;, +, +namespace ZXing.Common, +    /// Encapsulates the result of decoding a matrix of bits. This typically, +    /// as well as a String interpretation of those bytes, if applicable., +    /// <author>Sean Owen</author>, +    /// <author>Stephen Furlani (Updated to latest Core version w/ Other)</author>, +        public byte[] RawBytes { get; private set; }, +        public String Text { get; private set; }, +        public IList<byte[]> ByteSegments { get; private set; }, +        public String ECLevel { get; private set; }, +        public int ErrorsCorrected { get; set; }, +        public int Erasures { get; set; }, +        /// <summary>, +        /// Miscellanseous data value for the various decoders, +        /// </summary>, +        /// <value>The other.</value>, +        public object Other { get; set; }, +, +        public DecoderResult(byte[] rawBytes, String text, IList<byte[]> byteSegments, String ecLevel), +            if (rawBytes == null && text == null), +                throw new ArgumentException();, +            RawBytes = rawBytes;, +            Text = text;, +            ByteSegments = byteSegments;, +            ECLevel = ecLevel;, +++ b/AUTHORS, +Stephen Furlani, +++ b/csharp/common/DecoderResult.cs, +using System;, +using System.Collections.Generic;, +, +namespace ZXing.Common, +    /// Encapsulates the result of decoding a matrix of bits. This typically, +    /// as well as a String interpretation of those bytes, if applicable., +    /// <author>Sean Owen</author>, +    /// <author>Stephen Furlani (Updated to latest Core version w/ Other)</author>, +        public byte[] RawBytes { get; private set; }, +        public String Text { get; private set; }, +        public IList<byte[]> ByteSegments { get; private set; }, +        public String ECLevel { get; private set; }, +        public int ErrorsCorrected { get; set; }, +        public int Erasures { get; set; }, +        /// <summary>, +        /// Miscellanseous data value for the various decoders, +        /// </summary>, +        /// <value>The other.</value>, +        public object Other { get; set; }, +, +        public DecoderResult(byte[] rawBytes, String text, IList<byte[]> byteSegments, String ecLevel), +            if (rawBytes == null && text == null), +                throw new ArgumentException();, +            RawBytes = rawBytes;, +            Text = text;, +            ByteSegments = byteSegments;, +            ECLevel = ecLevel;, +++ b/csharp/pdf417/PDF417Common.cs, +/*, + * Copyright 2009 ZXing authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +using System.Collections.Generic;, +, +using ZXing.Common;, +using ZXing.PDF417.Internal;, +using System;, +, +namespace ZXing.PDF417, +{, +    /// <summary>, +    /// <author>SITA Lab (kevin.osullivan@sita.aero) </author>, +    /// <author>Guenther Grau </author>, +    /// <author>Stephen Furlani (C# Port)</author>, +    /// </summary>, +    public sealed class PDF417Common, +    {, +        public static readonly int INVALID_CODEWORD = -1;, +, +        public static readonly int NUMBER_OF_CODEWORDS = 929;, +        /// <summary>, +        /// Maximum Codewords (Data + Error)., +        /// </summary>]