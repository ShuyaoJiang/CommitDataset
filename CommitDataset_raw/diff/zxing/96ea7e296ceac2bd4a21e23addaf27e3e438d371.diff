[+++ b/core/src/com/google/zxing/qrcode/detector/DefaultGridSampler.java, +          bits.set(i, j >> 1);, +++ b/core/src/com/google/zxing/qrcode/detector/DefaultGridSampler.java, +          bits.set(i, j >> 1);, +++ b/core/src/com/google/zxing/qrcode/detector/PerspectiveTransform.java, +, +    PerspectiveTransform qToS = quadrilateralToSquare(x0, y0, x1, y1, x2, y2, x3, y3);, +    PerspectiveTransform sToQ = squareToQuadrilateral(x0p, y0p, x1p, y1p, x2p, y2p, x3p, y3p);, +    PerspectiveTransform product = sToQ.times(qToS);, +    return product;, +  static PerspectiveTransform squareToQuadrilateral(float x0, float y0,, +    float dy2 = y3 - y2;, +    float dy3 = y0 - y1 + y2 - y3;, +    if (dy2 == 0.0f && dy3 == 0.0f) {, +      return new PerspectiveTransform(x1 - x0, x2 - x1, x0,, +                                      y1 - y0, y2 - y1, y0,, +                                      0.0f,    0.0f,    1.0f);, +    } else {, +      return new PerspectiveTransform(x1 - x0 + a13*x1, x3 - x0 + a23*x3, x0,, +                                      y1 - y0 + a13*y1, y3 - y0 + a23*y3, y0,, +                                      a13,              a23,              1.0f);, +    }, +  static PerspectiveTransform quadrilateralToSquare(float x0, float y0,, +  PerspectiveTransform buildAdjoint() {, +  PerspectiveTransform times(PerspectiveTransform other) {, +                                    a11*other.a21 + a21*other.a22 + a31*other.a23,, +                                    a11*other.a31 + a21*other.a32 + a31*other.a33,, +                                    a12*other.a11 + a22*other.a12 + a32*other.a13,, +                                    a12*other.a21 + a22*other.a22 + a32*other.a23,, +                                    a12*other.a31 + a22*other.a32 + a32*other.a33,, +                                    a13*other.a11 + a23*other.a12 + a33*other.a13,, +                                    a13*other.a21 + a23*other.a22 + a33*other.a23,, +                                    a13*other.a31 + a23*other.a32 + a33*other.a33);, +, +++ b/core/src/com/google/zxing/qrcode/detector/DefaultGridSampler.java, +          bits.set(i, j >> 1);, +++ b/core/src/com/google/zxing/qrcode/detector/PerspectiveTransform.java, +, +    PerspectiveTransform qToS = quadrilateralToSquare(x0, y0, x1, y1, x2, y2, x3, y3);, +    PerspectiveTransform sToQ = squareToQuadrilateral(x0p, y0p, x1p, y1p, x2p, y2p, x3p, y3p);, +    PerspectiveTransform product = sToQ.times(qToS);, +    return product;, +  static PerspectiveTransform squareToQuadrilateral(float x0, float y0,, +    float dy2 = y3 - y2;, +    float dy3 = y0 - y1 + y2 - y3;, +    if (dy2 == 0.0f && dy3 == 0.0f) {, +      return new PerspectiveTransform(x1 - x0, x2 - x1, x0,, +                                      y1 - y0, y2 - y1, y0,, +                                      0.0f,    0.0f,    1.0f);, +    } else {, +      return new PerspectiveTransform(x1 - x0 + a13*x1, x3 - x0 + a23*x3, x0,, +                                      y1 - y0 + a13*y1, y3 - y0 + a23*y3, y0,, +                                      a13,              a23,              1.0f);, +    }, +  static PerspectiveTransform quadrilateralToSquare(float x0, float y0,, +  PerspectiveTransform buildAdjoint() {, +  PerspectiveTransform times(PerspectiveTransform other) {, +                                    a11*other.a21 + a21*other.a22 + a31*other.a23,, +                                    a11*other.a31 + a21*other.a32 + a31*other.a33,, +                                    a12*other.a11 + a22*other.a12 + a32*other.a13,, +                                    a12*other.a21 + a22*other.a22 + a32*other.a23,, +                                    a12*other.a31 + a22*other.a32 + a32*other.a33,, +                                    a13*other.a11 + a23*other.a12 + a33*other.a13,, +                                    a13*other.a21 + a23*other.a22 + a33*other.a23,, +                                    a13*other.a31 + a23*other.a32 + a33*other.a33);, +, +++ b/core/test/src/com/google/zxing/qrcode/detector/PerspectiveTransformTestCase.java, +/*, + * Copyright 2007 Google Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.zxing.qrcode.detector;, +, +import junit.framework.TestCase;, +, +/**, + * @author srowen@google.com (Sean Owen), + */, +public final class PerspectiveTransformTestCase extends TestCase {, +, +  private static final float EPSILON = 0.0001f;, +, +  public void testSquareToQuadrilateral() {, +    PerspectiveTransform pt = PerspectiveTransform.squareToQuadrilateral(, +        2.0f, 3.0f, 10.0f, 4.0f, 16.0f, 15.0f, 4.0f, 9.0f);, +    assertPointEquals(2.0f, 3.0f, 0.0f, 0.0f, pt);, +    assertPointEquals(10.0f, 4.0f, 1.0f, 0.0f, pt);, +    assertPointEquals(4.0f, 9.0f, 0.0f, 1.0f, pt);]