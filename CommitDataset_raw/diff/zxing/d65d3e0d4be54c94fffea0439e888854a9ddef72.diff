[+++ b/cpp/core/src/zxing/qrcode/FormatInformation.cpp, +Ref<FormatInformation> FormatInformation::decodeFormatInformation(int maskedFormatInfo1, int maskedFormatInfo2) {, +  Ref<FormatInformation> result(doDecodeFormatInformation(maskedFormatInfo1, maskedFormatInfo2));, +  // Should return null, but, some QR codes apparently, +  // do not mask this info. Try again by actually masking the pattern, +  // first, +  return doDecodeFormatInformation(maskedFormatInfo1 ^ FORMAT_INFO_MASK_QR,, +                                   maskedFormatInfo2  ^ FORMAT_INFO_MASK_QR);, +Ref<FormatInformation> FormatInformation::doDecodeFormatInformation(int maskedFormatInfo1, int maskedFormatInfo2) {, +    if (targetInfo == maskedFormatInfo1 || targetInfo == maskedFormatInfo2) {, +    int bitsDifference = numBitsDiffering(maskedFormatInfo1, targetInfo);, +    if (maskedFormatInfo1 != maskedFormatInfo2) {, +        // also try the other option, +        bitsDifference = numBitsDiffering(maskedFormatInfo2, targetInfo);, +        if (bitsDifference < bestDifference) {, +            bestFormatInfo = decodeInfo[1];, +          bestDifference = bitsDifference;, +        }, +      }, +++ b/cpp/core/src/zxing/qrcode/FormatInformation.cpp, +Ref<FormatInformation> FormatInformation::decodeFormatInformation(int maskedFormatInfo1, int maskedFormatInfo2) {, +  Ref<FormatInformation> result(doDecodeFormatInformation(maskedFormatInfo1, maskedFormatInfo2));, +  // Should return null, but, some QR codes apparently, +  // do not mask this info. Try again by actually masking the pattern, +  // first, +  return doDecodeFormatInformation(maskedFormatInfo1 ^ FORMAT_INFO_MASK_QR,, +                                   maskedFormatInfo2  ^ FORMAT_INFO_MASK_QR);, +Ref<FormatInformation> FormatInformation::doDecodeFormatInformation(int maskedFormatInfo1, int maskedFormatInfo2) {, +    if (targetInfo == maskedFormatInfo1 || targetInfo == maskedFormatInfo2) {, +    int bitsDifference = numBitsDiffering(maskedFormatInfo1, targetInfo);, +    if (maskedFormatInfo1 != maskedFormatInfo2) {, +        // also try the other option, +        bitsDifference = numBitsDiffering(maskedFormatInfo2, targetInfo);, +        if (bitsDifference < bestDifference) {, +            bestFormatInfo = decodeInfo[1];, +          bestDifference = bitsDifference;, +        }, +      }, +++ b/cpp/core/src/zxing/qrcode/FormatInformation.h, +  static Ref<FormatInformation> decodeFormatInformation(int maskedFormatInfo1, int maskedFormatInfo2);, +  static Ref<FormatInformation> doDecodeFormatInformation(int maskedFormatInfo1, int maskedFormatInfo2);, +++ b/cpp/core/src/zxing/qrcode/FormatInformation.cpp, +Ref<FormatInformation> FormatInformation::decodeFormatInformation(int maskedFormatInfo1, int maskedFormatInfo2) {, +  Ref<FormatInformation> result(doDecodeFormatInformation(maskedFormatInfo1, maskedFormatInfo2));, +  // Should return null, but, some QR codes apparently, +  // do not mask this info. Try again by actually masking the pattern, +  // first, +  return doDecodeFormatInformation(maskedFormatInfo1 ^ FORMAT_INFO_MASK_QR,, +                                   maskedFormatInfo2  ^ FORMAT_INFO_MASK_QR);, +Ref<FormatInformation> FormatInformation::doDecodeFormatInformation(int maskedFormatInfo1, int maskedFormatInfo2) {, +    if (targetInfo == maskedFormatInfo1 || targetInfo == maskedFormatInfo2) {, +    int bitsDifference = numBitsDiffering(maskedFormatInfo1, targetInfo);, +    if (maskedFormatInfo1 != maskedFormatInfo2) {, +        // also try the other option, +        bitsDifference = numBitsDiffering(maskedFormatInfo2, targetInfo);, +        if (bitsDifference < bestDifference) {, +            bestFormatInfo = decodeInfo[1];, +          bestDifference = bitsDifference;, +        }, +      }, +++ b/cpp/core/src/zxing/qrcode/FormatInformation.h, +  static Ref<FormatInformation> decodeFormatInformation(int maskedFormatInfo1, int maskedFormatInfo2);, +  static Ref<FormatInformation> doDecodeFormatInformation(int maskedFormatInfo1, int maskedFormatInfo2);, +++ b/cpp/core/src/zxing/qrcode/decoder/BitMatrixParser.cpp, +  int formatInfoBits1 = 0;, +  for (int i = 0; i < 6; i++) {, +    formatInfoBits1 = copyBit(i, 8, formatInfoBits1);, +  formatInfoBits1 = copyBit(7, 8, formatInfoBits1);, +  formatInfoBits1 = copyBit(8, 8, formatInfoBits1);, +  formatInfoBits1 = copyBit(8, 7, formatInfoBits1);, +  for (int j = 5; j >= 0; j--) {, +    formatInfoBits1 = copyBit(8, j, formatInfoBits1);, +  // Read the top-right/bottom-left pattern, +  int formatInfoBits2 = 0;, +  int jMin = dimension - 7;, +  for (int j = dimension - 1; j >= jMin; j--) {, +    formatInfoBits2 = copyBit(8, j, formatInfoBits2);, +  for (int i = dimension - 8; i < dimension; i++) {, +    formatInfoBits2 = copyBit(i, 8, formatInfoBits2);, +  parsedFormatInfo_ = FormatInformation::decodeFormatInformation(formatInfoBits1,formatInfoBits2);]