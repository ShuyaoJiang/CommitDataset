[+++ b/androidtest/AndroidManifest.xml, +  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />, +  <uses-sdk android:minSdkVersion="16" android:targetSdkVersion="22"/>, +++ b/androidtest/AndroidManifest.xml, +  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />, +  <uses-sdk android:minSdkVersion="16" android:targetSdkVersion="22"/>, +++ b/androidtest/src/com/google/zxing/client/androidtest/BenchmarkActivity.java, +import java.io.File;, +, +        File dir = new File(path, "zxingbenchmark");, +        benchmarkTask = new BenchmarkAsyncTask(BenchmarkActivity.this, dir);, +++ b/androidtest/AndroidManifest.xml, +  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />, +  <uses-sdk android:minSdkVersion="16" android:targetSdkVersion="22"/>, +++ b/androidtest/src/com/google/zxing/client/androidtest/BenchmarkActivity.java, +import java.io.File;, +, +        File dir = new File(path, "zxingbenchmark");, +        benchmarkTask = new BenchmarkAsyncTask(BenchmarkActivity.this, dir);, +++ b/androidtest/src/com/google/zxing/client/androidtest/BenchmarkAsyncTask.java, +  private final File file;, +  BenchmarkAsyncTask(BenchmarkActivity benchmarkActivity, File file) {, +    this.file = file;, +    walkTree(reader, file, items);, +  private static void walkTree(MultiFormatReader reader,, +                               File fileOrDir,, +                               List<BenchmarkItem> items) {, +    Log.i(TAG, "Decoding " + fileOrDir);, +    if (fileOrDir.isDirectory()) {, +      File[] files = fileOrDir.listFiles();, +      if (files != null) {, +        for (File file : files) {, +          walkTree(reader, file, items);, +        }, +      BenchmarkItem item = decode(reader, fileOrDir);, +  private static BenchmarkItem decode(MultiFormatReader reader, File file) {, +    Bitmap imageBitmap = BitmapFactory.decodeFile(file.getAbsolutePath());, +      Log.e(TAG, "Couldn't open " + file);, +    BenchmarkItem item = new BenchmarkItem(file, RUNS);, +++ b/androidtest/AndroidManifest.xml, +  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />, +  <uses-sdk android:minSdkVersion="16" android:targetSdkVersion="22"/>, +++ b/androidtest/src/com/google/zxing/client/androidtest/BenchmarkActivity.java, +import java.io.File;, +, +        File dir = new File(path, "zxingbenchmark");, +        benchmarkTask = new BenchmarkAsyncTask(BenchmarkActivity.this, dir);, +++ b/androidtest/src/com/google/zxing/client/androidtest/BenchmarkAsyncTask.java, +  private final File file;, +  BenchmarkAsyncTask(BenchmarkActivity benchmarkActivity, File file) {, +    this.file = file;, +    walkTree(reader, file, items);, +  private static void walkTree(MultiFormatReader reader,, +                               File fileOrDir,, +                               List<BenchmarkItem> items) {, +    Log.i(TAG, "Decoding " + fileOrDir);, +    if (fileOrDir.isDirectory()) {, +      File[] files = fileOrDir.listFiles();, +      if (files != null) {, +        for (File file : files) {, +          walkTree(reader, file, items);, +        }, +      BenchmarkItem item = decode(reader, fileOrDir);, +  private static BenchmarkItem decode(MultiFormatReader reader, File file) {, +    Bitmap imageBitmap = BitmapFactory.decodeFile(file.getAbsolutePath());, +      Log.e(TAG, "Couldn't open " + file);, +    BenchmarkItem item = new BenchmarkItem(file, RUNS);, +++ b/androidtest/src/com/google/zxing/client/androidtest/BenchmarkItem.java, +import java.io.File;, +, +  private final File file;, +  BenchmarkItem(File file, int runs) {, +    this.file = file;, +    return (decoded ? "DECODED " + format + ": " : "FAILED: ") + file +]