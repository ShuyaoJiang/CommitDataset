[+++ b/core/src/com/google/zxing/Binarizer.java, +  protected Binarizer(LuminanceSource source) {, +++ b/core/src/com/google/zxing/Binarizer.java, +  protected Binarizer(LuminanceSource source) {, +++ b/core/src/com/google/zxing/LuminanceSource.java, +  protected LuminanceSource(int width, int height) {, +++ b/core/src/com/google/zxing/Binarizer.java, +  protected Binarizer(LuminanceSource source) {, +++ b/core/src/com/google/zxing/LuminanceSource.java, +  protected LuminanceSource(int width, int height) {, +++ b/core/src/com/google/zxing/common/ByteArray.java, +  public boolean isEmpty() {, +++ b/core/src/com/google/zxing/Binarizer.java, +  protected Binarizer(LuminanceSource source) {, +++ b/core/src/com/google/zxing/LuminanceSource.java, +  protected LuminanceSource(int width, int height) {, +++ b/core/src/com/google/zxing/common/ByteArray.java, +  public boolean isEmpty() {, +++ b/core/src/com/google/zxing/common/ByteMatrix.java, +    StringBuffer result = new StringBuffer(2 * width * height + 2);, +++ b/core/src/com/google/zxing/Binarizer.java, +  protected Binarizer(LuminanceSource source) {, +++ b/core/src/com/google/zxing/LuminanceSource.java, +  protected LuminanceSource(int width, int height) {, +++ b/core/src/com/google/zxing/common/ByteArray.java, +  public boolean isEmpty() {, +++ b/core/src/com/google/zxing/common/ByteMatrix.java, +    StringBuffer result = new StringBuffer(2 * width * height + 2);, +++ b/core/src/com/google/zxing/common/GlobalHistogramBinarizer.java, +      int right = (width << 2) / 5;, +++ b/core/src/com/google/zxing/Binarizer.java, +  protected Binarizer(LuminanceSource source) {, +++ b/core/src/com/google/zxing/LuminanceSource.java, +  protected LuminanceSource(int width, int height) {, +++ b/core/src/com/google/zxing/common/ByteArray.java, +  public boolean isEmpty() {, +++ b/core/src/com/google/zxing/common/ByteMatrix.java, +    StringBuffer result = new StringBuffer(2 * width * height + 2);, +++ b/core/src/com/google/zxing/common/GlobalHistogramBinarizer.java, +      int right = (width << 2) / 5;, +++ b/core/src/com/google/zxing/common/LocalBlockBinarizer.java, +  public BitArray getBlackRow(int y, BitArray row) {, +  public BitMatrix getBlackMatrix() {, +        int sum = 0;, +        threshold8x8Block(luminances, x << 3, y << 3, average, stride, matrix);, +          int offset = ((y << 3) + yy) * stride + (x << 3);, +++ b/core/src/com/google/zxing/Binarizer.java, +  protected Binarizer(LuminanceSource source) {, +++ b/core/src/com/google/zxing/LuminanceSource.java, +  protected LuminanceSource(int width, int height) {, +++ b/core/src/com/google/zxing/common/ByteArray.java, +  public boolean isEmpty() {, +++ b/core/src/com/google/zxing/common/ByteMatrix.java, +    StringBuffer result = new StringBuffer(2 * width * height + 2);, +++ b/core/src/com/google/zxing/common/GlobalHistogramBinarizer.java, +      int right = (width << 2) / 5;, +++ b/core/src/com/google/zxing/common/LocalBlockBinarizer.java, +  public BitArray getBlackRow(int y, BitArray row) {, +  public BitMatrix getBlackMatrix() {, +        int sum = 0;, +        threshold8x8Block(luminances, x << 3, y << 3, average, stride, matrix);, +          int offset = ((y << 3) + yy) * stride + (x << 3);, +++ b/core/src/com/google/zxing/common/detector/MonochromeRectangleDetector.java]