[+++ b/iphone/Classes/DecoderViewController.m, +    if ([picker respondsToSelector:@selector(setAllowsEditing:)]) {, +      // not in 3.0, +      [picker setAllowsEditing:!isCamera];, +    }, +      if ([picker respondsToSelector:@selector(setShowsCameraControls:)]) {, +        [picker setShowsCameraControls:NO];, +        UIButton *cancelButton =, +          [UIButton buttonWithType:UIButtonTypeRoundedRect];, +        CGSize size =, +          [cancelString sizeWithFont:[UIFont systemFontOfSize:height]];, +    }, +++ b/iphone/Classes/DecoderViewController.m, +    if ([picker respondsToSelector:@selector(setAllowsEditing:)]) {, +      // not in 3.0, +      [picker setAllowsEditing:!isCamera];, +    }, +      if ([picker respondsToSelector:@selector(setShowsCameraControls:)]) {, +        [picker setShowsCameraControls:NO];, +        UIButton *cancelButton =, +          [UIButton buttonWithType:UIButtonTypeRoundedRect];, +        CGSize size =, +          [cancelString sizeWithFont:[UIFont systemFontOfSize:height]];, +    }, +++ b/iphone/Classes/ResultParser.m, +, +  // Make the parser of last resort the last parser we try., +  NSMutableArray *resultParsers =, +    [NSMutableArray arrayWithArray:[[self resultParsers] allObjects]];, +  NSUInteger textIndex =, +    [resultParsers indexOfObject:NSClassFromString(@"TextResultParser")];, +  if (NSNotFound != textIndex) {, +    // If it is present, make sure it is last., +    [resultParsers exchangeObjectAtIndex:textIndex, +                       withObjectAtIndex:[resultParsers count] - 1];, +  }, +, +  for (Class c in resultParsers) {]