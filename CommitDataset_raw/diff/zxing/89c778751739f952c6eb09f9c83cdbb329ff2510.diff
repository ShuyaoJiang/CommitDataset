[+++ b/core/src/com/google/zxing/MultiFormatReader.java, +import com.google.zxing.upc.UPCReader;, +    boolean tryUPC = false;, +    boolean tryQR = false;, +    , +    if (possibleFormats == null) {, +      tryUPC = true;, +      tryQR = true;, +    } else if (possibleFormats.contains(BarcodeFormat.UPC)) {, +      tryUPC = true;, +    } else if (possibleFormats.contains(BarcodeFormat.QR_CODE)) {, +      tryQR = true;, +    , +    // UPC is much faster to decode, so try it first., +    if (tryUPC) {, +      try {, +        return new UPCReader().decode(image, hints);, +      } catch (ReaderException e) {, +      }, +    }, +    , +    // Then fall through to QR codes., +    if (tryQR) {, +      try {, +        return new QRCodeReader().decode(image, hints);, +      } catch (ReaderException e) {, +      }, +    }, +    , +    throw new ReaderException();, +++ b/core/src/com/google/zxing/MultiFormatReader.java, +import com.google.zxing.upc.UPCReader;, +    boolean tryUPC = false;, +    boolean tryQR = false;, +    , +    if (possibleFormats == null) {, +      tryUPC = true;, +      tryQR = true;, +    } else if (possibleFormats.contains(BarcodeFormat.UPC)) {, +      tryUPC = true;, +    } else if (possibleFormats.contains(BarcodeFormat.QR_CODE)) {, +      tryQR = true;, +    , +    // UPC is much faster to decode, so try it first., +    if (tryUPC) {, +      try {, +        return new UPCReader().decode(image, hints);, +      } catch (ReaderException e) {, +      }, +    }, +    , +    // Then fall through to QR codes., +    if (tryQR) {, +      try {, +        return new QRCodeReader().decode(image, hints);, +      } catch (ReaderException e) {, +      }, +    }, +    , +    throw new ReaderException();, +++ b/core/src/com/google/zxing/common/BitArray.java, +  private int[] bits;, +  private int size;, +    this.size = size;, +    this.bits = makeArray(size);, +   *  corresponds to bit i, the next-least-significant to i+1, and so on., +  /**, +   * Reverses all bits in the array., +   */, +  public void reverse() {, +    int[] newBits = makeArray(size);, +    int max = newBits.length;, +    for (int i = 0; i < max; i++) {, +      newBits[i] = 0;, +    }, +    for (int i = 0; i < size; i++) {, +      if (this.get(size - i - 1)) {, +        newBits[i >> 5] |= 1 << (i & 0x1F);, +      }, +    }, +    bits = newBits;, +  }, +  , +  private int[] makeArray(int size) {, +    int arraySize = size >> 5;, +    if ((size & 0x1F) != 0) {, +      arraySize++;, +    }, +    int[] result = new int[arraySize];, +    return result;, +  }, +, +++ b/core/src/com/google/zxing/MultiFormatReader.java, +import com.google.zxing.upc.UPCReader;, +    boolean tryUPC = false;, +    boolean tryQR = false;, +    , +    if (possibleFormats == null) {, +      tryUPC = true;, +      tryQR = true;]