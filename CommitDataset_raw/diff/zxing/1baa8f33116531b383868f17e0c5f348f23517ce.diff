[+++ b/core/src/main/java/com/google/zxing/DecodeHintType.java, +, +  /**, +   * Allowed extension lengths for EAN or UPC barcodes., +   * Other formats will ignore this., +   * Maps to an {@code int[]} of the allowed extension lengths, for example [2], [5], or [2, 5]., +   * If it is optional to have an extension, do not set this hint., +   */, +  ALLOWED_EAN_EXTENSIONS(int[].class);, +, +++ b/core/src/main/java/com/google/zxing/DecodeHintType.java, +, +  /**, +   * Allowed extension lengths for EAN or UPC barcodes., +   * Other formats will ignore this., +   * Maps to an {@code int[]} of the allowed extension lengths, for example [2], [5], or [2, 5]., +   * If it is optional to have an extension, do not set this hint., +   */, +  ALLOWED_EAN_EXTENSIONS(int[].class);, +, +++ b/core/src/main/java/com/google/zxing/oned/UPCEANReader.java, +    int extensionLength = 0;, +, +      extensionLength = extensionResult.getText().length();, +    int[] allowedExtensions = hints == null ? null :, +        (int[])hints.get(DecodeHintType.ALLOWED_EAN_EXTENSIONS);, +    if(allowedExtensions != null) {, +      boolean valid = false;, +      for (int length : allowedExtensions) {, +        if(extensionLength == length) {, +          valid = true;, +          break;, +        }, +      }, +      if(!valid) {, +        throw NotFoundException.getNotFoundInstance();, +      }, +    }, +]