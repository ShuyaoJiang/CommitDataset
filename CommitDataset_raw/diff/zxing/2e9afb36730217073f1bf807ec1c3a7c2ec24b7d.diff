[+++ b/android/src/com/google/zxing/client/android/result/CalendarResultHandler.java, +, +                       calendarResult.getLocation(),, +                       calendarResult.getDescription());, +    ParsedResult.maybeAppend(calResult.getDescription(), result);, +++ b/android/src/com/google/zxing/client/android/result/CalendarResultHandler.java, +, +                       calendarResult.getLocation(),, +                       calendarResult.getDescription());, +    ParsedResult.maybeAppend(calResult.getDescription(), result);, +++ b/android/src/com/google/zxing/client/android/result/ResultHandler.java, +   * @param description a text description of the event itself, +  final void addCalendarEvent(String summary, , +                              String start,, +                              String end,, +                              String location,, +                              String description) {, +    intent.putExtra("description", description);, +++ b/android/src/com/google/zxing/client/android/result/CalendarResultHandler.java, +, +                       calendarResult.getLocation(),, +                       calendarResult.getDescription());, +    ParsedResult.maybeAppend(calResult.getDescription(), result);, +++ b/android/src/com/google/zxing/client/android/result/ResultHandler.java, +   * @param description a text description of the event itself, +  final void addCalendarEvent(String summary, , +                              String start,, +                              String end,, +                              String location,, +                              String description) {, +    intent.putExtra("description", description);, +++ b/core/src/com/google/zxing/client/result/CalendarParsedResult.java, +  private final String description;, +                              String description) {, +    if (end == null) {, +      end = start;, +    } else {, +    }, +    this.description = description;, +  public String getDescription() {, +    return description;, +    maybeAppend(description, result);, +++ b/android/src/com/google/zxing/client/android/result/CalendarResultHandler.java, +, +                       calendarResult.getLocation(),, +                       calendarResult.getDescription());, +    ParsedResult.maybeAppend(calResult.getDescription(), result);, +++ b/android/src/com/google/zxing/client/android/result/ResultHandler.java, +   * @param description a text description of the event itself, +  final void addCalendarEvent(String summary, , +                              String start,, +                              String end,, +                              String location,, +                              String description) {, +    intent.putExtra("description", description);, +++ b/core/src/com/google/zxing/client/result/CalendarParsedResult.java, +  private final String description;, +                              String description) {, +    if (end == null) {, +      end = start;, +    } else {, +    }, +    this.description = description;, +  public String getDescription() {, +    return description;, +    maybeAppend(description, result);, +++ b/core/src/com/google/zxing/client/result/VCardResultParser.java, +      while ((i = rawText.indexOf((int) '\n', i)) >= 0 &&  // Really, ends in \r\n, +             i < rawText.length() - 1 &&           // But if followed by tab or space,, +             (rawText.charAt(i+1) == ' ' ||        // this is only a continuation, +              rawText.charAt(i+1) == '\t')) {, +        i += 2;, +      }, +        if (rawText.charAt(i-1) == '\r') {, +          i--; // Back up over \r, which really should be there, +        }, +        element = stripContinuationCRLF(element);, +  private static String stripContinuationCRLF(String value) {, +    int length = value.length();, +    StringBuffer result = new StringBuffer(length);, +    boolean lastWasLF = false;, +    for (int i = 0; i < length; i++) {, +      if (lastWasLF) {, +        lastWasLF = false;, +        continue;, +      }, +      char c = value.charAt(i);, +      lastWasLF = false;, +      switch (c) {, +        case '\n':, +          lastWasLF = true;, +          break;, +        case '\r':, +          break;, +        default:, +          result.append(c);, +      }, +    }, +    return result.toString();, +  }]