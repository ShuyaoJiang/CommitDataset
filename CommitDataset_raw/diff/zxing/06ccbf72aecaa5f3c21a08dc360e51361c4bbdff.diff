[+++ b/core/src/main/java/com/google/zxing/client/result/AddressBookParsedResult.java, +    if (phoneNumbers != null && phoneTypes != null && phoneNumbers.length != phoneTypes.length) {, +      throw new IllegalArgumentException("Phone numbers and types lengths differ");, +    }, +    if (emails != null && emailTypes != null && emails.length != emailTypes.length) {, +      throw new IllegalArgumentException("Emails and types lengths differ");, +    }, +    if (addresses != null && addressTypes != null && addresses.length != addressTypes.length) {, +      throw new IllegalArgumentException("Addresses and types lengths differ");, +    }, +++ b/core/src/main/java/com/google/zxing/client/result/AddressBookParsedResult.java, +    if (phoneNumbers != null && phoneTypes != null && phoneNumbers.length != phoneTypes.length) {, +      throw new IllegalArgumentException("Phone numbers and types lengths differ");, +    }, +    if (emails != null && emailTypes != null && emails.length != emailTypes.length) {, +      throw new IllegalArgumentException("Emails and types lengths differ");, +    }, +    if (addresses != null && addressTypes != null && addresses.length != addressTypes.length) {, +      throw new IllegalArgumentException("Addresses and types lengths differ");, +    }, +++ b/core/src/main/java/com/google/zxing/client/result/VCardResultParser.java, +    return result.toArray(new String[result.size()]);, +      String value = list.get(0);, +      if (value != null && !value.isEmpty()) {, +    }, +    return result.toArray(new String[result.size()]);, +++ b/core/src/main/java/com/google/zxing/client/result/AddressBookParsedResult.java, +    if (phoneNumbers != null && phoneTypes != null && phoneNumbers.length != phoneTypes.length) {, +      throw new IllegalArgumentException("Phone numbers and types lengths differ");, +    }, +    if (emails != null && emailTypes != null && emails.length != emailTypes.length) {, +      throw new IllegalArgumentException("Emails and types lengths differ");, +    }, +    if (addresses != null && addressTypes != null && addresses.length != addressTypes.length) {, +      throw new IllegalArgumentException("Addresses and types lengths differ");, +    }, +++ b/core/src/main/java/com/google/zxing/client/result/VCardResultParser.java, +    return result.toArray(new String[result.size()]);, +      String value = list.get(0);, +      if (value != null && !value.isEmpty()) {, +    }, +    return result.toArray(new String[result.size()]);, +++ b/core/src/test/java/com/google/zxing/client/result/AddressBookParsedResultTestCase.java, +    doTest("MECARD:N:Sean Owen;;", null, new String[] {"Sean Owen"}, null, null, null, null, null, null, null, null, null);, +        null, new String[] {"Sean Owen"}, null, null, new String[] {"srowen@example.org"}, null, null, null,, +        null, new String[] {"Sean"}, null, null, null, new String[] {"+12125551212"}, null, null, null, null, "foo");, +           null, new String[] {"Sean Owen"}, null, new String[] {"123 Main St"}, null, null, null, null, null, null, null);, +           null, new String[] {"Mr. Sean T Owen Esq."}, null, null, null, null, null, null, null, null, null);, +           null, new String[] {"Sean Owen"}, null, null, null, null, null, null, null, null, null);, +           null, new String[] {"Sean"}, null, null, null, null, null, null, null, null, null);, +           null, new String[] {"Sean Owen"}, null, new String[] {"123 Main St"}, null, null, null, null, null, null, null);, +           null, new String[] {"Sean Owen"}, null, new String[] {"123;\\ Main, St\nHome"}, null, null, null, null, null, null, null);, +        new String[] {"+12125551212"}, null, "Google", null, null, null);, +           new String[] {"5555555555" }, null, "Company", null, null, "This is the memo.");, +           null, null, null, null, null, null, null);, +           null, null, null, null, null, null, null, null, null, null, "foo\nbar");, +               null, null, null, null, null, null, null, null, null, null, "foo;bar");, +                   null, null, null, null, null, null, null, null, null, null, "foo\\bar");, +                       null, null, null, null, null, null, null, null, null, null, "foo,bar");, +  }, +, +  @Test, +  public void testVCardTypes() {, +    doTest("BEGIN:VCARD\r\nTEL;HOME:\r\nTEL;WORK:10\r\nTEL:20\r\nTEL;CELL:30\r\nEND:VCARD",, +           null, null, null, null, null, new String[] { "10", "20", "30" },, +           new String[] { "WORK", null, "CELL" }, null, null, null, null);, +                             String[] phoneTypes,, +    assertArrayEquals(phoneTypes, addressResult.getPhoneTypes());]