[+++ b/android/src/com/google/zxing/client/android/Intents.java, +     * By default, sending this will decode all barcodes that we understand. However it, +     * may be useful to limit scanning to certain formats. Use, +     * {@link android.content.Intent#putExtra(String, String)} with one of the values below., +     * If a barcode is found, Barcodes returns RESULT_OK to , +     * {@link android.app.Activity#onActivityResult(int, int, android.content.Intent)}, +     * of the app which requested the scan via, +     * {@link android.app.Activity#startActivityForResult(android.content.Intent, int)}, +     * The barcodes contents can be retrieved with, +     * {@link android.content.Intent#getStringExtra(String)}. , +     * If the user presses Back, the result code will be, +     * The data to encode. Use {@link android.content.Intent#putExtra(String, String)} or, +     * {@link android.content.Intent#putExtra(String, android.os.Bundle)}, , +     * depending on the type and format specified. Non-QR Code formats should, +     * {@link android.content.Intent#putExtra(String, String)} with one of {@link Contents.Type}., +     * it defaults to QR Code. Use {@link android.content.Intent#putExtra(String, String)}, where, +     * format is one of {@link com.google.zxing.BarcodeFormat}., +++ b/android/src/com/google/zxing/client/android/Intents.java, +     * By default, sending this will decode all barcodes that we understand. However it, +     * may be useful to limit scanning to certain formats. Use, +     * {@link android.content.Intent#putExtra(String, String)} with one of the values below., +     * If a barcode is found, Barcodes returns RESULT_OK to , +     * {@link android.app.Activity#onActivityResult(int, int, android.content.Intent)}, +     * of the app which requested the scan via, +     * {@link android.app.Activity#startActivityForResult(android.content.Intent, int)}, +     * The barcodes contents can be retrieved with, +     * {@link android.content.Intent#getStringExtra(String)}. , +     * If the user presses Back, the result code will be, +     * The data to encode. Use {@link android.content.Intent#putExtra(String, String)} or, +     * {@link android.content.Intent#putExtra(String, android.os.Bundle)}, , +     * depending on the type and format specified. Non-QR Code formats should, +     * {@link android.content.Intent#putExtra(String, String)} with one of {@link Contents.Type}., +     * it defaults to QR Code. Use {@link android.content.Intent#putExtra(String, String)}, where, +     * format is one of {@link com.google.zxing.BarcodeFormat}., +++ b/android/src/com/google/zxing/client/android/encode/EncodeActivity.java, +        setTitle(getString(R.string.app_name) + " - " + qrCodeEncoder.getTitle());, +        setTitle(getString(R.string.app_name));]