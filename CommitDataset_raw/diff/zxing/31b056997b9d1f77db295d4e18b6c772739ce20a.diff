[+++ b/core/src/com/google/zxing/upc/UPCDecoder.java, +import com.google.zxing.ResultPoint;, +  private static final UPCPoint[] NO_POINTS = new UPCPoint[0];, +  private UPCPoint[] points;, +    points = NO_POINTS;, +  public String decode() {, +      if (decodeRow(row, rowData)) {, +      if (decodeRow(row, rowData)) {, +  public ResultPoint[] getPoints() {, +    return points;, +  }, +  , +  private boolean decodeRow(int row, BitArray rowData) {, +    int startOffset = rowOffset;, +    , +    boolean result = verifyResult();, +    if (result) {, +      points = new UPCPoint[2];, +      points[0] = new UPCPoint(startOffset, row);, +      points[1] = new UPCPoint(rowOffset, row);, +    }, +    return result;, +++ b/core/src/com/google/zxing/upc/UPCDecoder.java, +import com.google.zxing.ResultPoint;, +  private static final UPCPoint[] NO_POINTS = new UPCPoint[0];, +  private UPCPoint[] points;, +    points = NO_POINTS;, +  public String decode() {, +      if (decodeRow(row, rowData)) {, +      if (decodeRow(row, rowData)) {, +  public ResultPoint[] getPoints() {, +    return points;, +  }, +  , +  private boolean decodeRow(int row, BitArray rowData) {, +    int startOffset = rowOffset;, +    , +    boolean result = verifyResult();, +    if (result) {, +      points = new UPCPoint[2];, +      points[0] = new UPCPoint(startOffset, row);, +      points[1] = new UPCPoint(rowOffset, row);, +    }, +    return result;, +++ b/core/src/com/google/zxing/upc/UPCPoint.java, +/*, + * Copyright 2007 Google Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.zxing.upc;, +, +import com.google.zxing.ResultPoint;, +, +/**, + * @author dswitkin@google.com (Daniel Switkin), + */, +public final class UPCPoint implements ResultPoint {, +, +  private final float posX;, +  private final float posY;, +, +  UPCPoint(float posX, float posY) {, +    this.posX = posX;, +    this.posY = posY;, +  }, +, +  public float getX() {, +    return posX;, +  }, +, +  public float getY() {, +    return posY;, +  }, +, +}, +++ b/core/src/com/google/zxing/upc/UPCDecoder.java, +import com.google.zxing.ResultPoint;, +  private static final UPCPoint[] NO_POINTS = new UPCPoint[0];, +  private UPCPoint[] points;, +    points = NO_POINTS;, +  public String decode() {, +      if (decodeRow(row, rowData)) {, +      if (decodeRow(row, rowData)) {, +  public ResultPoint[] getPoints() {, +    return points;, +  }, +  , +  private boolean decodeRow(int row, BitArray rowData) {]