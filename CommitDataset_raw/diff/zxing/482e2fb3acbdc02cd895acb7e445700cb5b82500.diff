[+++ b/zxingorg/pom.xml, +      <plugin>, +        <groupId>org.eclipse.jetty</groupId>, +        <artifactId>jetty-maven-plugin</artifactId>, +        <version>9.2.3.v20140905</version>, +      </plugin>, +++ b/zxingorg/pom.xml, +      <plugin>, +        <groupId>org.eclipse.jetty</groupId>, +        <artifactId>jetty-maven-plugin</artifactId>, +        <version>9.2.3.v20140905</version>, +      </plugin>, +++ b/zxingorg/src/main/java/com/google/zxing/web/ChartServlet.java, +import javax.servlet.annotation.WebServlet;, +@WebServlet("/w/chart"), +++ b/zxingorg/pom.xml, +      <plugin>, +        <groupId>org.eclipse.jetty</groupId>, +        <artifactId>jetty-maven-plugin</artifactId>, +        <version>9.2.3.v20140905</version>, +      </plugin>, +++ b/zxingorg/src/main/java/com/google/zxing/web/ChartServlet.java, +import javax.servlet.annotation.WebServlet;, +@WebServlet("/w/chart"), +++ b/zxingorg/src/main/java/com/google/zxing/web/DecodeServlet.java, +import javax.servlet.annotation.MultipartConfig;, +import javax.servlet.annotation.WebServlet;, +import javax.servlet.http.Part;, +@MultipartConfig(, +    maxFileSize = 10_000_000,, +    maxRequestSize = 10_000_000,, +    fileSizeThreshold = 1_000_000,, +    location = "/tmp"), +@WebServlet("/w/decode"), +    Collection<Part> parts = request.getParts();, +    if (parts.isEmpty()) {, +    for (Part part : parts) {, +      try (InputStream is = part.getInputStream()) {, +++ b/zxingorg/pom.xml, +      <plugin>, +        <groupId>org.eclipse.jetty</groupId>, +        <artifactId>jetty-maven-plugin</artifactId>, +        <version>9.2.3.v20140905</version>, +      </plugin>, +++ b/zxingorg/src/main/java/com/google/zxing/web/ChartServlet.java, +import javax.servlet.annotation.WebServlet;, +@WebServlet("/w/chart"), +++ b/zxingorg/src/main/java/com/google/zxing/web/DecodeServlet.java, +import javax.servlet.annotation.MultipartConfig;, +import javax.servlet.annotation.WebServlet;, +import javax.servlet.http.Part;, +@MultipartConfig(, +    maxFileSize = 10_000_000,, +    maxRequestSize = 10_000_000,, +    fileSizeThreshold = 1_000_000,, +    location = "/tmp"), +@WebServlet("/w/decode"), +    Collection<Part> parts = request.getParts();, +    if (parts.isEmpty()) {, +    for (Part part : parts) {, +      try (InputStream is = part.getInputStream()) {, +++ b/zxingorg/src/main/java/com/google/zxing/web/LegacyJavadocRedirectServlet.java, +import javax.servlet.annotation.WebServlet;, +@WebServlet("/w/docs/javadoc/*"), +++ b/zxingorg/pom.xml, +      <plugin>, +        <groupId>org.eclipse.jetty</groupId>, +        <artifactId>jetty-maven-plugin</artifactId>, +        <version>9.2.3.v20140905</version>, +      </plugin>, +++ b/zxingorg/src/main/java/com/google/zxing/web/ChartServlet.java, +import javax.servlet.annotation.WebServlet;, +@WebServlet("/w/chart"), +++ b/zxingorg/src/main/java/com/google/zxing/web/DecodeServlet.java, +import javax.servlet.annotation.MultipartConfig;, +import javax.servlet.annotation.WebServlet;, +import javax.servlet.http.Part;, +@MultipartConfig(, +    maxFileSize = 10_000_000,, +    maxRequestSize = 10_000_000,, +    fileSizeThreshold = 1_000_000,, +    location = "/tmp"), +@WebServlet("/w/decode"), +    Collection<Part> parts = request.getParts();, +    if (parts.isEmpty()) {, +    for (Part part : parts) {, +      try (InputStream is = part.getInputStream()) {, +++ b/zxingorg/src/main/java/com/google/zxing/web/LegacyJavadocRedirectServlet.java, +import javax.servlet.annotation.WebServlet;, +@WebServlet("/w/docs/javadoc/*"), +++ b/zxingorg/src/web/WEB-INF/web.xml]