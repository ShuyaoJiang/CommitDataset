[+++ b/core/src/com/google/zxing/datamatrix/decoder/BitMatrixParser.java, +  Version getVersion() {, +    return version;, +  }, +, +  private static Version readVersion(BitMatrix bitMatrix) throws FormatException {, +++ b/core/src/com/google/zxing/datamatrix/decoder/BitMatrixParser.java, +  Version getVersion() {, +    return version;, +  }, +, +  private static Version readVersion(BitMatrix bitMatrix) throws FormatException {, +++ b/core/src/com/google/zxing/datamatrix/decoder/Decoder.java, +    Version version = parser.getVersion();, +++ b/core/src/com/google/zxing/datamatrix/decoder/BitMatrixParser.java, +  Version getVersion() {, +    return version;, +  }, +, +  private static Version readVersion(BitMatrix bitMatrix) throws FormatException {, +++ b/core/src/com/google/zxing/datamatrix/decoder/Decoder.java, +    Version version = parser.getVersion();, +++ b/core/src/com/google/zxing/qrcode/decoder/Decoder.java, +  public DecoderResult decode(boolean[][] image, Hashtable hints) throws ChecksumException, FormatException {, +  public DecoderResult decode(BitMatrix bits) throws ChecksumException, FormatException {, +++ b/core/src/com/google/zxing/datamatrix/decoder/BitMatrixParser.java, +  Version getVersion() {, +    return version;, +  }, +, +  private static Version readVersion(BitMatrix bitMatrix) throws FormatException {, +++ b/core/src/com/google/zxing/datamatrix/decoder/Decoder.java, +    Version version = parser.getVersion();, +++ b/core/src/com/google/zxing/qrcode/decoder/Decoder.java, +  public DecoderResult decode(boolean[][] image, Hashtable hints) throws ChecksumException, FormatException {, +  public DecoderResult decode(BitMatrix bits) throws ChecksumException, FormatException {, +++ b/core/src/com/google/zxing/qrcode/detector/FinderPatternFinder.java, +    private FurthestFromAverageComparator(float f) {, +    private CenterComparator(float f) {, +      if (((FinderPattern) center2).getCount() == ((FinderPattern) center1).getCount()) {, +      } else {, +        return ((FinderPattern) center2).getCount() - ((FinderPattern) center1).getCount();]