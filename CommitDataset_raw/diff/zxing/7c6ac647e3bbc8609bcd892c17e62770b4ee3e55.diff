[+++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +    /** XML */, +    XML,, +      case XML:, +        contentTypes = "application/xml,text/*,*/*";, +        break;, +    int redirects = 0;, +    while (redirects < 5) {, +      connection.setInstanceFollowRedirects(true); // Won't work HTTP -> HTTPS or vice versa, +        switch (responseCode) {, +          case HttpURLConnection.HTTP_OK:, +            return consume(connection, maxChars);, +          case HttpURLConnection.HTTP_MOVED_TEMP:, +            String location = connection.getHeaderField("Location");, +            if (location != null) {, +              uri = location;, +              redirects++;, +              continue;, +            }, +            throw new IOException("No Location");, +          default:, +    throw new IOException("Too many redirects");, +  }, +++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +    /** XML */, +    XML,, +      case XML:, +        contentTypes = "application/xml,text/*,*/*";, +        break;, +    int redirects = 0;, +    while (redirects < 5) {, +      connection.setInstanceFollowRedirects(true); // Won't work HTTP -> HTTPS or vice versa, +        switch (responseCode) {, +          case HttpURLConnection.HTTP_OK:, +            return consume(connection, maxChars);, +          case HttpURLConnection.HTTP_MOVED_TEMP:, +            String location = connection.getHeaderField("Location");, +            if (location != null) {, +              uri = location;, +              redirects++;, +              continue;, +            }, +            throw new IOException("No Location");, +          default:, +    throw new IOException("Too many redirects");, +  }, +++ b/android/src/com/google/zxing/client/android/result/supplement/BookResultInfoRetriever.java, +    maybeAddText(title, newTexts);, +    maybeAddTextSeries(authors, newTexts);, +    maybeAddText(pages == null || pages.length() == 0 ? null : pages + "pp.", newTexts);, +++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +    /** XML */, +    XML,, +      case XML:, +        contentTypes = "application/xml,text/*,*/*";, +        break;, +    int redirects = 0;, +    while (redirects < 5) {, +      connection.setInstanceFollowRedirects(true); // Won't work HTTP -> HTTPS or vice versa, +        switch (responseCode) {, +          case HttpURLConnection.HTTP_OK:, +            return consume(connection, maxChars);, +          case HttpURLConnection.HTTP_MOVED_TEMP:, +            String location = connection.getHeaderField("Location");, +            if (location != null) {, +              uri = location;, +              redirects++;, +              continue;, +            }, +            throw new IOException("No Location");, +          default:, +    throw new IOException("Too many redirects");, +  }, +++ b/android/src/com/google/zxing/client/android/result/supplement/BookResultInfoRetriever.java, +    maybeAddText(title, newTexts);, +    maybeAddTextSeries(authors, newTexts);, +    maybeAddText(pages == null || pages.length() == 0 ? null : pages + "pp.", newTexts);, +++ b/android/src/com/google/zxing/client/android/result/supplement/SupplementalInfoRetriever.java, +import java.util.Collection;, +  static void maybeAddText(String text, Collection<String> texts) {, +    if (text != null && text.length() > 0) {, +      texts.add(text);, +    }, +  }, +  , +  static void maybeAddTextSeries(Collection<String> textSeries, Collection<String> texts) {, +    if (textSeries != null && !textSeries.isEmpty()) {, +      boolean first = true;, +      StringBuilder authorsText = new StringBuilder();, +      for (String author : textSeries) {, +        if (first) {, +          first = false;, +        } else {, +          authorsText.append(", ");, +        }, +        authorsText.append(author);, +      }, +      texts.add(authorsText.toString());, +    }, +  }]