[+++ b/core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java, +    private final int tryHarderCount;, +, +    TestResult(int mustPassCount, int tryHarderCount, float rotation) {, +      this.tryHarderCount = tryHarderCount;, +    public int getTryHarderCount() {, +      return tryHarderCount;, +    }, +   * @param tryHarderCount The number of images which must pass using the try harder flag., +  protected void addTest(int mustPassCount, int tryHarderCount, float rotation) {, +    testResults.add(new TestResult(mustPassCount, tryHarderCount, rotation));, +    int testCount = testResults.size();, +    int[] passedCounts = new int[testCount];, +    int[] tryHarderCounts = new int[testCount];, +      for (int x = 0; x < testCount; x++) {, +        float rotation = testResults.get(x).getRotation();, +        BufferedImage rotatedImage = rotateImage(image, rotation);, +        MonochromeBitmapSource source = new BufferedImageMonochromeBitmapSource(rotatedImage);, +        if (decode(source, rotation, expectedText, false)) {, +        if (decode(source, rotation, expectedText, true)) {, +          tryHarderCounts[x]++;, +        }, +    for (int x = 0; x < testCount; x++) {, +      System.out.println("Rotation " + testResults.get(x).getRotation() + " degrees:");, +      System.out.println("  " + passedCounts[x] + " of " + imageFiles.length + " images passed (", +          + testResults.get(x).getMustPassCount() + " required)");, +      System.out.println("  " + tryHarderCounts[x] + " of " + imageFiles.length +, +          " images passed with try harder (" + testResults.get(x).getTryHarderCount() +, +      assertTrue("Rotation " + testResults.get(x).getRotation() +, +          " degrees: Too many images failed",, +      assertTrue("Try harder, Rotation " + testResults.get(x).getRotation() +, +          " degrees: Too many images failed",, +          tryHarderCounts[x] >= testResults.get(x).getTryHarderCount());, +  private boolean decode(MonochromeBitmapSource source, float rotation, String expectedText,, +                         boolean tryHarder) {, +    String suffix = " (" + (tryHarder ? "try harder, " : "") + "rotation: " + rotation + ')';, +, +      result = barcodeReader.decode(source, tryHarder ? TRY_HARDER_HINT : null);, +      System.out.println(re + suffix);, +          result.getBarcodeFormat() + "'" + suffix);, +          "'" +  suffix);, +++ b/core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java, +    private final int tryHarderCount;, +, +    TestResult(int mustPassCount, int tryHarderCount, float rotation) {, +      this.tryHarderCount = tryHarderCount;, +    public int getTryHarderCount() {, +      return tryHarderCount;, +    }, +   * @param tryHarderCount The number of images which must pass using the try harder flag., +  protected void addTest(int mustPassCount, int tryHarderCount, float rotation) {, +    testResults.add(new TestResult(mustPassCount, tryHarderCount, rotation));, +    int testCount = testResults.size();, +    int[] passedCounts = new int[testCount];, +    int[] tryHarderCounts = new int[testCount];, +      for (int x = 0; x < testCount; x++) {, +        float rotation = testResults.get(x).getRotation();, +        BufferedImage rotatedImage = rotateImage(image, rotation);, +        MonochromeBitmapSource source = new BufferedImageMonochromeBitmapSource(rotatedImage);, +        if (decode(source, rotation, expectedText, false)) {, +        if (decode(source, rotation, expectedText, true)) {, +          tryHarderCounts[x]++;, +        }, +    for (int x = 0; x < testCount; x++) {, +      System.out.println("Rotation " + testResults.get(x).getRotation() + " degrees:");, +      System.out.println("  " + passedCounts[x] + " of " + imageFiles.length + " images passed (", +          + testResults.get(x).getMustPassCount() + " required)");, +      System.out.println("  " + tryHarderCounts[x] + " of " + imageFiles.length +, +          " images passed with try harder (" + testResults.get(x).getTryHarderCount() +, +      assertTrue("Rotation " + testResults.get(x).getRotation() +, +          " degrees: Too many images failed",, +      assertTrue("Try harder, Rotation " + testResults.get(x).getRotation() +, +          " degrees: Too many images failed",, +          tryHarderCounts[x] >= testResults.get(x).getTryHarderCount());, +  private boolean decode(MonochromeBitmapSource source, float rotation, String expectedText,, +                         boolean tryHarder) {, +    String suffix = " (" + (tryHarder ? "try harder, " : "") + "rotation: " + rotation + ')';, +, +      result = barcodeReader.decode(source, tryHarder ? TRY_HARDER_HINT : null);, +      System.out.println(re + suffix);, +          result.getBarcodeFormat() + "'" + suffix);, +          "'" +  suffix);, +++ b/core/test/src/com/google/zxing/datamatrix/DataMatrixBlackBox1TestCase.java, +    addTest(7, 7, 0.0f);, +++ b/core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java, +    private final int tryHarderCount;, +, +    TestResult(int mustPassCount, int tryHarderCount, float rotation) {, +      this.tryHarderCount = tryHarderCount;, +    public int getTryHarderCount() {, +      return tryHarderCount;, +    }, +   * @param tryHarderCount The number of images which must pass using the try harder flag., +  protected void addTest(int mustPassCount, int tryHarderCount, float rotation) {, +    testResults.add(new TestResult(mustPassCount, tryHarderCount, rotation));, +    int testCount = testResults.size();, +    int[] passedCounts = new int[testCount];, +    int[] tryHarderCounts = new int[testCount];, +      for (int x = 0; x < testCount; x++) {, +        float rotation = testResults.get(x).getRotation();]