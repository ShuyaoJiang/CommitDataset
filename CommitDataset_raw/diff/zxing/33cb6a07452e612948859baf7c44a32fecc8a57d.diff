[+++ b/core/build.xml, +      <jvmarg value="-DexplicitLuminanceConversion=true"/>, +++ b/core/build.xml, +      <jvmarg value="-DexplicitLuminanceConversion=true"/>, +++ b/core/test/src/com/google/zxing/BufferedImageLuminanceSource.java, +import java.awt.image.WritableRaster;, +    private static final boolean EXPLICIT_LUMINANCE_CONVERSION;, +    static {, +        String property = System.getProperty("explicitLuminanceConversion");, +        if (property == null) {, +            property = System.getenv("EXPLICIT_LUMINANCE_CONVERSION");, +        }, +        EXPLICIT_LUMINANCE_CONVERSION = Boolean.parseBoolean(property);, +    }, +, +        if (image.getType() == BufferedImage.TYPE_BYTE_GRAY) {, +            this.image = image;, +        } else {, +            this.image = new BufferedImage(sourceWidth, sourceHeight, BufferedImage.TYPE_BYTE_GRAY);, +, +            if (EXPLICIT_LUMINANCE_CONVERSION) {, +, +                WritableRaster raster = this.image.getRaster();, +                int[] buffer = new int[width];, +                for (int y = top; y < top + height; y++) {, +                    image.getRGB(left, y, width, 1, buffer, 0, sourceWidth);, +                    for (int x = 0; x < width; x++) {, +                        int pixel = buffer[x];, +, +                        // see comments in implicit branch, +                        if ((pixel & 0xFF000000) == 0) {, +                            pixel = 0xFFFFFFFF; // = white, +                        }, +, +                        int luminance = 0;, +                        // .229R + 0.587G + 0.114B (YUV/YIQ for PAL and NTSC), +                        luminance = (306 * ((pixel >> 16) & 0xFF) +, +                                     601 * ((pixel >> 8) & 0xFF) +, +                                     117 * (pixel & 0xFF) +, +                                     (0x200)) >> 10; // 0x200 = 1<<9, half an lsb of the result to force rounding, +                        buffer[x] = luminance;, +                    }, +                    raster.setPixels(left, y, width, 1, buffer);, +                }, +, +            } else {, +, +, +            }, +        }, +++ b/core/build.xml, +      <jvmarg value="-DexplicitLuminanceConversion=true"/>, +++ b/core/test/src/com/google/zxing/BufferedImageLuminanceSource.java, +import java.awt.image.WritableRaster;, +    private static final boolean EXPLICIT_LUMINANCE_CONVERSION;, +    static {, +        String property = System.getProperty("explicitLuminanceConversion");, +        if (property == null) {, +            property = System.getenv("EXPLICIT_LUMINANCE_CONVERSION");, +        }, +        EXPLICIT_LUMINANCE_CONVERSION = Boolean.parseBoolean(property);, +    }, +, +        if (image.getType() == BufferedImage.TYPE_BYTE_GRAY) {, +            this.image = image;, +        } else {, +            this.image = new BufferedImage(sourceWidth, sourceHeight, BufferedImage.TYPE_BYTE_GRAY);, +, +            if (EXPLICIT_LUMINANCE_CONVERSION) {, +, +                WritableRaster raster = this.image.getRaster();, +                int[] buffer = new int[width];, +                for (int y = top; y < top + height; y++) {, +                    image.getRGB(left, y, width, 1, buffer, 0, sourceWidth);, +                    for (int x = 0; x < width; x++) {, +                        int pixel = buffer[x];, +, +                        // see comments in implicit branch, +                        if ((pixel & 0xFF000000) == 0) {, +                            pixel = 0xFFFFFFFF; // = white, +                        }, +, +                        int luminance = 0;, +                        // .229R + 0.587G + 0.114B (YUV/YIQ for PAL and NTSC), +                        luminance = (306 * ((pixel >> 16) & 0xFF) +, +                                     601 * ((pixel >> 8) & 0xFF) +, +                                     117 * (pixel & 0xFF) +, +                                     (0x200)) >> 10; // 0x200 = 1<<9, half an lsb of the result to force rounding, +                        buffer[x] = luminance;, +                    }, +                    raster.setPixels(left, y, width, 1, buffer);, +                }, +, +            } else {, +, +, +            }, +        }, +++ b/core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java, +          System.out.printf("could not read at rotation %f\n", rotation);]