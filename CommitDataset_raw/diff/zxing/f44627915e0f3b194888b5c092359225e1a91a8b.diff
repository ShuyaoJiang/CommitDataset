[+++ b/core/src/com/google/zxing/common/BitArray.java, +   * @param i bit to get, +   *, +   * @param i bit to set, +  /**, +   * Sets a block of 32 bits, starting at bit i., +   *, +   * @param i first bit to set, +   * @param newBits the new value of the next 32 bits. Note again that the least-significant bit, +   *  correponds to bit i, the next-least-significant to i+1, and so on., +   */, +   * Clears all bits (sets to false)., +++ b/core/src/com/google/zxing/common/BitArray.java, +   * @param i bit to get, +   *, +   * @param i bit to set, +  /**, +   * Sets a block of 32 bits, starting at bit i., +   *, +   * @param i first bit to set, +   * @param newBits the new value of the next 32 bits. Note again that the least-significant bit, +   *  correponds to bit i, the next-least-significant to i+1, and so on., +   */, +   * Clears all bits (sets to false)., +++ b/core/src/com/google/zxing/common/BitMatrix.java, +  /**, +   * @param i row offset, +   * @param j column offset, +   * @return value of given bit in matrix, +   */, +  /**, +   * <p>Sets the given bit to true.</p>, +   *, +   * @param i row offset, +   * @param j column offset, +   */, +  /**, +   * <p>Sets a square region of the bit matrix to true.</p>, +   *, +   * @param topI row offset of region's top-left corner (inclusive), +   * @param leftJ column offset of region's top-left corner (inclusive), +   * @param height height of region, +   * @param width width of region, +   */, +  /**, +   * @return row/column dimension of this matrix, +   */, +  /**, +   * @return array of ints holding internal representation of this matrix's bits, +   */, +    BufferedImage image = new BufferedImage(dimension, dimension, BufferedImage.TYPE_BYTE_BINARY);, +++ b/core/src/com/google/zxing/common/BitArray.java, +   * @param i bit to get, +   *, +   * @param i bit to set, +  /**, +   * Sets a block of 32 bits, starting at bit i., +   *, +   * @param i first bit to set, +   * @param newBits the new value of the next 32 bits. Note again that the least-significant bit, +   *  correponds to bit i, the next-least-significant to i+1, and so on., +   */, +   * Clears all bits (sets to false)., +++ b/core/src/com/google/zxing/common/BitMatrix.java, +  /**, +   * @param i row offset, +   * @param j column offset, +   * @return value of given bit in matrix, +   */, +  /**, +   * <p>Sets the given bit to true.</p>, +   *, +   * @param i row offset, +   * @param j column offset, +   */, +  /**, +   * <p>Sets a square region of the bit matrix to true.</p>, +   *, +   * @param topI row offset of region's top-left corner (inclusive), +   * @param leftJ column offset of region's top-left corner (inclusive), +   * @param height height of region, +   * @param width width of region, +   */, +  /**, +   * @return row/column dimension of this matrix, +   */, +  /**, +   * @return array of ints holding internal representation of this matrix's bits, +   */, +    BufferedImage image = new BufferedImage(dimension, dimension, BufferedImage.TYPE_BYTE_BINARY);, +++ b/core/src/com/google/zxing/common/Collections.java, +   * @param vector vector to sort, +   * @param comparator comparator to define sort ordering, +++ b/core/src/com/google/zxing/common/BitArray.java, +   * @param i bit to get, +   *, +   * @param i bit to set, +  /**, +   * Sets a block of 32 bits, starting at bit i., +   *]