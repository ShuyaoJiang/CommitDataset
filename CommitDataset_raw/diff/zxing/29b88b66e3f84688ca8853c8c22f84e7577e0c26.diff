[+++ b/android/res/drawable/unknown_barcode.png, +++ b/android/res/drawable/unknown_barcode.png, +++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +import android.graphics.drawable.BitmapDrawable;, +    historyManager.trimHistory();, +    historyManager.addHistoryItem(rawResult);, +    if (barcode == null) {, +      // This is from history -- no saved barcode, +      handleDecodeInternally(rawResult, null);, +    } else {, +      barcode = ((BitmapDrawable) getResources().getDrawable(R.drawable.unknown_barcode)).getBitmap();, +    }, +    ImageView barcodeImageView = (ImageView) findViewById(R.id.barcode_image_view);, +      TextView button = (TextView) buttonView.getChildAt(x);, +++ b/android/res/drawable/unknown_barcode.png, +++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +import android.graphics.drawable.BitmapDrawable;, +    historyManager.trimHistory();, +    historyManager.addHistoryItem(rawResult);, +    if (barcode == null) {, +      // This is from history -- no saved barcode, +      handleDecodeInternally(rawResult, null);, +    } else {, +      barcode = ((BitmapDrawable) getResources().getDrawable(R.drawable.unknown_barcode)).getBitmap();, +    }, +    ImageView barcodeImageView = (ImageView) findViewById(R.id.barcode_image_view);, +      TextView button = (TextView) buttonView.getChildAt(x);, +++ b/android/src/com/google/zxing/client/android/history/DBHelper.java, +  static final String ID_COL = "id";, +  static final String FORMAT_COL = "format";, +  static final String DISPLAY_COL = "display";, +            FORMAT_COL + " TEXT, " +, +            DISPLAY_COL + " TEXT, " +, +    sqLiteDatabase.delete(TABLE_NAME, null, null);, +    onCreate(sqLiteDatabase);, +++ b/android/res/drawable/unknown_barcode.png, +++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +import android.graphics.drawable.BitmapDrawable;, +    historyManager.trimHistory();, +    historyManager.addHistoryItem(rawResult);, +    if (barcode == null) {, +      // This is from history -- no saved barcode, +      handleDecodeInternally(rawResult, null);, +    } else {, +      barcode = ((BitmapDrawable) getResources().getDrawable(R.drawable.unknown_barcode)).getBitmap();, +    }, +    ImageView barcodeImageView = (ImageView) findViewById(R.id.barcode_image_view);, +      TextView button = (TextView) buttonView.getChildAt(x);, +++ b/android/src/com/google/zxing/client/android/history/DBHelper.java, +  static final String ID_COL = "id";, +  static final String FORMAT_COL = "format";, +  static final String DISPLAY_COL = "display";, +            FORMAT_COL + " TEXT, " +, +            DISPLAY_COL + " TEXT, " +, +    sqLiteDatabase.delete(TABLE_NAME, null, null);, +    onCreate(sqLiteDatabase);, +++ b/android/src/com/google/zxing/client/android/history/HistoryManager.java, +import com.google.zxing.BarcodeFormat;, + * <p>Manages functionality related to scan history.</p>, + * , +  private static final int MAX_ITEMS = 20;, +  private static final String[] TEXT_COL_PROJECTION = { DBHelper.TEXT_COL };, +  private static final String[] TEXT_FORMAT_COL_PROJECTION = { DBHelper.TEXT_COL, DBHelper.FORMAT_COL };, +  private static final String[] ID_COL_PROJECTION = { DBHelper.ID_COL };, +, +  List<Result> getHistoryItems() {, +    List<Result> items = new ArrayList<Result>();, +    Cursor cursor = null;, +      cursor = db.query(DBHelper.TABLE_NAME,, +                        TEXT_FORMAT_COL_PROJECTION,, +        Result result = new Result(cursor.getString(0), null, null, BarcodeFormat.valueOf(cursor.getString(1)));, +        items.add(result);, +      if (cursor != null) {, +        cursor.close();, +      }, +    final List<Result> items = getHistoryItems();, +      dialogItems[i] = items.get(i).getText();, +          Result result = items.get(i);, +  public void addHistoryItem(Result result) {, +    Cursor cursor = null;, +      cursor = db.query(DBHelper.TABLE_NAME,, +                        TEXT_COL_PROJECTION,, +                        DBHelper.TEXT_COL + "=?",, +                        new String[] { result.getText() },, +                        null, null, null, null);, +      if (cursor.moveToNext()) {, +        return;, +      }, +      values.put(DBHelper.TEXT_COL, result.getText());, +      values.put(DBHelper.FORMAT_COL, result.getBarcodeFormat().toString());, +      values.put(DBHelper.DISPLAY_COL, result.getText()); // TODO use parsed result display value?, +      if (cursor != null) {, +        cursor.close();, +      }, +      db.close();, +    }, +  }, +, +  public void trimHistory() {, +    SQLiteOpenHelper helper = new DBHelper(activity);]