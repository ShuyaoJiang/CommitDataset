[+++ b/android/res/layout-land/encode.xml, +            android:paddingRight="8px", +            android:paddingTop="8px", +            android:paddingBottom="8px"/>, +++ b/android/res/layout-land/encode.xml, +            android:paddingRight="8px", +            android:paddingTop="8px", +            android:paddingBottom="8px"/>, +++ b/android/res/layout/encode.xml, +            android:paddingBottom="8px", +            android:paddingLeft="8px", +            android:paddingRight="8px"/>, +++ b/android/res/layout-land/encode.xml, +            android:paddingRight="8px", +            android:paddingTop="8px", +            android:paddingBottom="8px"/>, +++ b/android/res/layout/encode.xml, +            android:paddingBottom="8px", +            android:paddingLeft="8px", +            android:paddingRight="8px"/>, +++ b/android/res/values/strings.xml, +  <string name="msg_encode_barcode_failed">Could not generate the requested barcode.</string>, +++ b/android/res/layout-land/encode.xml, +            android:paddingRight="8px", +            android:paddingTop="8px", +            android:paddingBottom="8px"/>, +++ b/android/res/layout/encode.xml, +            android:paddingBottom="8px", +            android:paddingLeft="8px", +            android:paddingRight="8px"/>, +++ b/android/res/values/strings.xml, +  <string name="msg_encode_barcode_failed">Could not generate the requested barcode.</string>, +++ b/android/src/com/google/zxing/client/android/QRCodeEncoder.java, +import com.google.zxing.BarcodeFormat;, +import com.google.zxing.MultiFormatWriter;, +import com.google.zxing.WriterException;, +import com.google.zxing.common.ByteMatrix;, +    Thread encodeThread = new EncodeThread(mContents, handler, pixelResolution);, +    encodeThread.start();, +  // TODO: The string encoding should live in the core ZXing library., +  private final static class EncodeThread extends Thread {, +    public EncodeThread(String contents, Handler handler, int pixelResolution) {, +        ByteMatrix result = new MultiFormatWriter().encode(mContents, BarcodeFormat.QR_CODE,, +             mPixelResolution, mPixelResolution);, +        int width = result.width();, +        int height = result.height();, +        byte[][] array = result.getArray();, +        int[] pixels = new int[width * height];, +        for (int y = 0; y < height; y++) {, +          for (int x = 0; x < width; x++) {, +            int grey = array[y][x] & 0xff;, +            pixels[y * width + x] = (0xff << 24) | (grey << 16) | (grey << 8) | grey;, +        }, +, +        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);, +        bitmap.setPixels(pixels, 0, width, 0, 0, width, height);, +        Message message = Message.obtain(mHandler, R.id.encode_succeeded);, +        message.obj = bitmap;, +        message.sendToTarget();, +      } catch (WriterException e) {, +      } catch (IllegalArgumentException e) {, +        Log.e(TAG, e.toString());, +        Message message = Message.obtain(mHandler, R.id.encode_failed);, +        message.sendToTarget();, +++ b/android/res/layout-land/encode.xml, +            android:paddingRight="8px", +            android:paddingTop="8px", +            android:paddingBottom="8px"/>, +++ b/android/res/layout/encode.xml, +            android:paddingBottom="8px", +            android:paddingLeft="8px", +            android:paddingRight="8px"/>, +++ b/android/res/values/strings.xml, +  <string name="msg_encode_barcode_failed">Could not generate the requested barcode.</string>, +++ b/android/src/com/google/zxing/client/android/QRCodeEncoder.java, +import com.google.zxing.BarcodeFormat;, +import com.google.zxing.MultiFormatWriter;, +import com.google.zxing.WriterException;, +import com.google.zxing.common.ByteMatrix;, +    Thread encodeThread = new EncodeThread(mContents, handler, pixelResolution);, +    encodeThread.start();, +  // TODO: The string encoding should live in the core ZXing library., +  private final static class EncodeThread extends Thread {, +    public EncodeThread(String contents, Handler handler, int pixelResolution) {, +        ByteMatrix result = new MultiFormatWriter().encode(mContents, BarcodeFormat.QR_CODE,, +             mPixelResolution, mPixelResolution);, +        int width = result.width();, +        int height = result.height();, +        byte[][] array = result.getArray();, +        int[] pixels = new int[width * height];, +        for (int y = 0; y < height; y++) {, +          for (int x = 0; x < width; x++) {, +            int grey = array[y][x] & 0xff;, +            pixels[y * width + x] = (0xff << 24) | (grey << 16) | (grey << 8) | grey;, +        }, +, +        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);, +        bitmap.setPixels(pixels, 0, width, 0, 0, width, height);, +        Message message = Message.obtain(mHandler, R.id.encode_succeeded);, +        message.obj = bitmap;]