[+++ b/core/src/com/google/zxing/client/result/VCardResultParser.java, +, +, +, +, +      int metadataStart = i;, +, +      boolean quotedPrintable = false;, +      if (i > metadataStart) {, +        // There was something after the tag, before colon, +        int j = metadataStart+1;, +        while (j <= i) {, +          if (rawText.charAt(j) == ';' || rawText.charAt(j) == ':') {, +            String metadata = rawText.substring(metadataStart+1, j);, +            int equals = metadata.indexOf('=');, +            if (equals >= 0) {, +              String key = metadata.substring(0, equals);, +              String value = metadata.substring(equals+1);, +              if (key.equalsIgnoreCase("ENCODING")) {, +                if (value.equalsIgnoreCase("QUOTED-PRINTABLE")) {, +                  quotedPrintable = true;, +                }, +              }, +            }, +            metadataStart = j;, +          }, +          j++;, +        }, +      }, +, +, +      int matchStart = i; // Found the start of a match here, +, +      while ((i = rawText.indexOf((int) '\n', i)) >= 0) { // Really, end in \r\n, +        if (i < rawText.length() - 1 &&           // But if followed by tab or space,, +          i += 2; // Skip \n and continutation whitespace, +        } else if (quotedPrintable &&             // If preceded by = in quoted printable, +                   (rawText.charAt(i-1) == '=' || // this is a continuation, +                    rawText.charAt(i-2) == '=')) {, +          i++; // Skip \n, +        } else {, +          break;, +      }, +, +      } else if (i > matchStart) {, +          matches = new Vector(1); // lazy init, +        String element = rawText.substring(matchStart, i);, +        if (quotedPrintable) {, +          element = decodeQuotedPrintable(element);, +        } else {, +        }, +, +, +  private static String decodeQuotedPrintable(String value) {, +    int length = value.length();, +    StringBuffer result = new StringBuffer(length);, +    for (int i = 0; i < length; i++) {, +      char c = value.charAt(i);, +      switch (c) {, +        case '\r':, +        case '\n':, +          break;, +        case '=':, +          if (i < length - 2) {, +            char nextChar = value.charAt(i+1);, +            if (nextChar == '\r' || nextChar == '\n') {, +              // Ignore, it's just a continuation symbol, +            } else {, +              char nextNextChar = value.charAt(i+2);, +              try {, +                int encodedChar = 16 * toHexValue(nextChar) + toHexValue(nextNextChar);, +                result.append((char) encodedChar);, +              } catch (IllegalArgumentException iae) {, +                // continue, assume it was incorrectly encoded, +              }, +              i += 2;, +            }, +          }, +          break;, +        default:, +          result.append(c);, +      }, +    }, +    return result.toString();, +  }, +, +  private static int toHexValue(char c) {, +    if (c >= '0' && c <= '9') {, +      return c - '0';, +    } else if (c >= 'A' && c <= 'F') {, +      return c - 'A' + 10;, +    } else if (c >= 'a' && c <= 'f') {, +      return c - 'a' + 10;, +    }, +    throw new IllegalArgumentException();, +  }, +, +++ b/core/src/com/google/zxing/client/result/VCardResultParser.java, +, +]