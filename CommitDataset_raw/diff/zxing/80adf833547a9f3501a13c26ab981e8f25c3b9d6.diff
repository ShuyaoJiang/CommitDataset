[+++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +  private static final long DEFAULT_INTENT_RESULT_DURATION_MS = 1500L;, +  private IntentSource source;, +        source = IntentSource.NATIVE_APP_INTENT;, +        source = IntentSource.PRODUCT_SEARCH_LINK;, +        source = IntentSource.ZXING_LINK;, +        source = IntentSource.NONE;, +      source = IntentSource.NONE;, +      if (source == IntentSource.NATIVE_APP_INTENT) {, +      } else if ((source == IntentSource.NONE || source == IntentSource.ZXING_LINK) && lastResult != null) {, +    if (source == IntentSource.NATIVE_APP_INTENT) {, +      , +          intent.putExtra(Intents.Scan.RESULT_ORIENTATION, orientation.intValue());, +        Iterable<byte[]> byteSegments = (Iterable<byte[]>) metadata.get(ResultMetadataType.BYTE_SEGMENTS);, +      sendReplyMessage(R.id.return_scan_result, intent);, +      , +    } else if (source == IntentSource.PRODUCT_SEARCH_LINK) {, +      , +      String replyURL = sourceUrl.substring(0, end) + "?q=" + resultHandler.getDisplayContents() + "&source=zxing";      , +      sendReplyMessage(R.id.launch_product_query, replyURL);, +      , +    } else if (source == IntentSource.ZXING_LINK) {, +      , +        String replyURL = returnUrlTemplate.replace(RETURN_CODE_PLACEHOLDER, codeReplacement);, +        sendReplyMessage(R.id.launch_product_query, replyURL);, +      , +    }, +  }, +  , +  private void sendReplyMessage(int id, Object arg) {, +    Message message = Message.obtain(handler, id, arg);, +    long resultDurationMS = getIntent().getLongExtra(Intents.Scan.RESULT_DISPLAY_DURATION_MS,, +                                                     DEFAULT_INTENT_RESULT_DURATION_MS);, +    if (resultDurationMS > 0L) {, +      handler.sendMessageDelayed(message, resultDurationMS);, +    } else {, +      handler.sendMessage(message);, +++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +  private static final long DEFAULT_INTENT_RESULT_DURATION_MS = 1500L;, +  private IntentSource source;, +        source = IntentSource.NATIVE_APP_INTENT;, +        source = IntentSource.PRODUCT_SEARCH_LINK;, +        source = IntentSource.ZXING_LINK;, +        source = IntentSource.NONE;, +      source = IntentSource.NONE;, +      if (source == IntentSource.NATIVE_APP_INTENT) {, +      } else if ((source == IntentSource.NONE || source == IntentSource.ZXING_LINK) && lastResult != null) {, +    if (source == IntentSource.NATIVE_APP_INTENT) {, +      , +          intent.putExtra(Intents.Scan.RESULT_ORIENTATION, orientation.intValue());, +        Iterable<byte[]> byteSegments = (Iterable<byte[]>) metadata.get(ResultMetadataType.BYTE_SEGMENTS);, +      sendReplyMessage(R.id.return_scan_result, intent);, +      , +    } else if (source == IntentSource.PRODUCT_SEARCH_LINK) {, +      , +      String replyURL = sourceUrl.substring(0, end) + "?q=" + resultHandler.getDisplayContents() + "&source=zxing";      , +      sendReplyMessage(R.id.launch_product_query, replyURL);, +      , +    } else if (source == IntentSource.ZXING_LINK) {, +      , +        String replyURL = returnUrlTemplate.replace(RETURN_CODE_PLACEHOLDER, codeReplacement);, +        sendReplyMessage(R.id.launch_product_query, replyURL);, +      , +    }, +  }, +  , +  private void sendReplyMessage(int id, Object arg) {, +    Message message = Message.obtain(handler, id, arg);, +    long resultDurationMS = getIntent().getLongExtra(Intents.Scan.RESULT_DISPLAY_DURATION_MS,, +                                                     DEFAULT_INTENT_RESULT_DURATION_MS);, +    if (resultDurationMS > 0L) {, +      handler.sendMessageDelayed(message, resultDurationMS);, +    } else {, +      handler.sendMessage(message);, +++ b/android/src/com/google/zxing/client/android/IntentSource.java, +/*, + * Copyright (C) 2011 ZXing authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.zxing.client.android;, +, +enum IntentSource {, +, +  NATIVE_APP_INTENT,, +  PRODUCT_SEARCH_LINK,, +  ZXING_LINK,, +  NONE, +]