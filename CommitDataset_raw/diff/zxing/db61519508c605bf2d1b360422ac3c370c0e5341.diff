[+++ b/core/src/com/google/zxing/common/CharacterSetECI.java, +  private static Hashtable VALUE_TO_ECI;, +  private static Hashtable NAME_TO_ECI;, +, +  private static void initialize() {, +    NAME_TO_ECI = new Hashtable(29);, +    addCharacterSet(1, new String[] {"ISO8859_1", "ISO-8859-1"});, +    addCharacterSet(3, new String[] {"ISO8859_1", "ISO-8859-1"});, +    addCharacterSet(20, new String[] {"SJIS", "Shift_JIS"});, +    CharacterSetECI eci = new CharacterSetECI(value, encodingName);, +    VALUE_TO_ECI.put(new Integer(value), eci);, +    NAME_TO_ECI.put(encodingName, eci);, +  private static void addCharacterSet(int value, String[] encodingNames) {, +    CharacterSetECI eci = new CharacterSetECI(value, encodingNames[0]);, +    VALUE_TO_ECI.put(new Integer(value), eci);, +    for (int i = 0; i < encodingNames.length; i++) {, +      NAME_TO_ECI.put(encodingNames[i], eci);, +  }, +, +  /**, +   * @param value character set ECI value, +   * @return {@link CharacterSetECI} representing ECI of given value, or null if it is legal but unsupported, +   * @throws IllegalArgumentException if ECI value is invalid, +   */, +  public static CharacterSetECI getCharacterSetECIByValue(int value) {, +    if (VALUE_TO_ECI == null) {, +      initialize();, +    }, +    if (value < 0 || value >= 900) {, +      throw new IllegalArgumentException("Bad ECI value: " + value);, +    }, +    return (CharacterSetECI) VALUE_TO_ECI.get(new Integer(value));, +  }, +, +  /**, +   * @param name character set ECI encoding name, +   * @return {@link CharacterSetECI} representing ECI for character encoding, or null if it is legal but unsupported, +   */, +  public static CharacterSetECI getCharacterSetECIByName(String name) {, +    if (NAME_TO_ECI == null) {, +      initialize();, +    }, +    return (CharacterSetECI) NAME_TO_ECI.get(name);, +++ b/core/src/com/google/zxing/common/CharacterSetECI.java, +  private static Hashtable VALUE_TO_ECI;, +  private static Hashtable NAME_TO_ECI;, +, +  private static void initialize() {, +    NAME_TO_ECI = new Hashtable(29);, +    addCharacterSet(1, new String[] {"ISO8859_1", "ISO-8859-1"});, +    addCharacterSet(3, new String[] {"ISO8859_1", "ISO-8859-1"});, +    addCharacterSet(20, new String[] {"SJIS", "Shift_JIS"});, +    CharacterSetECI eci = new CharacterSetECI(value, encodingName);, +    VALUE_TO_ECI.put(new Integer(value), eci);, +    NAME_TO_ECI.put(encodingName, eci);, +  private static void addCharacterSet(int value, String[] encodingNames) {, +    CharacterSetECI eci = new CharacterSetECI(value, encodingNames[0]);, +    VALUE_TO_ECI.put(new Integer(value), eci);, +    for (int i = 0; i < encodingNames.length; i++) {, +      NAME_TO_ECI.put(encodingNames[i], eci);, +  }, +, +  /**, +   * @param value character set ECI value, +   * @return {@link CharacterSetECI} representing ECI of given value, or null if it is legal but unsupported, +   * @throws IllegalArgumentException if ECI value is invalid, +   */, +  public static CharacterSetECI getCharacterSetECIByValue(int value) {, +    if (VALUE_TO_ECI == null) {, +      initialize();, +    }, +    if (value < 0 || value >= 900) {, +      throw new IllegalArgumentException("Bad ECI value: " + value);, +    }, +    return (CharacterSetECI) VALUE_TO_ECI.get(new Integer(value));, +  }, +, +  /**, +   * @param name character set ECI encoding name, +   * @return {@link CharacterSetECI} representing ECI for character encoding, or null if it is legal but unsupported, +   */, +  public static CharacterSetECI getCharacterSetECIByName(String name) {, +    if (NAME_TO_ECI == null) {, +      initialize();, +    }, +    return (CharacterSetECI) NAME_TO_ECI.get(name);, +++ b/core/src/com/google/zxing/common/ECI.java, +  /**, +   * @param value ECI value, +   * @return {@link ECI} representing ECI of given value, or null if it is legal but unsupported, +   * @throws IllegalArgumentException if ECI value is invalid, +   */, +    return null;, +++ b/core/src/com/google/zxing/common/CharacterSetECI.java, +  private static Hashtable VALUE_TO_ECI;, +  private static Hashtable NAME_TO_ECI;, +, +  private static void initialize() {, +    NAME_TO_ECI = new Hashtable(29);, +    addCharacterSet(1, new String[] {"ISO8859_1", "ISO-8859-1"});]