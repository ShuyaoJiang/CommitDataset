[+++ /dev/null, +++ /dev/null, +++ b/core/src/com/google/zxing/qrcode/decoder/DecodedBitStreamParser.java, +    boolean fc1InEffect = false;, +        if (mode.equals(Mode.FNC1_FIRST_POSITION) || mode.equals(Mode.FNC1_SECOND_POSITION)) {, +          // We do little with FNC1 except alter the parsed result a bit according to the spec, +          fc1InEffect = true;, +        } else if (mode.equals(Mode.ECI)) {, +            decodeAlphanumericSegment(bits, result, count, fc1InEffect);, +                                                int count,, +                                                boolean fc1InEffect) {, +    int start = result.length();, +    // See section 6.4.8.1, 6.4.8.2, +    if (fc1InEffect) {, +      // We need to massage the result a bit if in an FNC1 mode:, +      for (int i = start; i < result.length(); i++) {, +        if (result.charAt(i) == '%') {, +          if (i < result.length() - 1 && result.charAt(i + 1) == '%') {, +            // %% is rendered as %, +            result.deleteCharAt(i + 1);, +          } else {, +            // In alpha mode, % should be converted to FNC1 separator 0x1D, +            result.setCharAt(i, (char) 0x1D);, +          }, +        }, +      }, +    }, +++ /dev/null, +++ b/core/src/com/google/zxing/qrcode/decoder/DecodedBitStreamParser.java, +    boolean fc1InEffect = false;, +        if (mode.equals(Mode.FNC1_FIRST_POSITION) || mode.equals(Mode.FNC1_SECOND_POSITION)) {, +          // We do little with FNC1 except alter the parsed result a bit according to the spec, +          fc1InEffect = true;, +        } else if (mode.equals(Mode.ECI)) {, +            decodeAlphanumericSegment(bits, result, count, fc1InEffect);, +                                                int count,, +                                                boolean fc1InEffect) {, +    int start = result.length();, +    // See section 6.4.8.1, 6.4.8.2, +    if (fc1InEffect) {, +      // We need to massage the result a bit if in an FNC1 mode:, +      for (int i = start; i < result.length(); i++) {, +        if (result.charAt(i) == '%') {, +          if (i < result.length() - 1 && result.charAt(i + 1) == '%') {, +            // %% is rendered as %, +            result.deleteCharAt(i + 1);, +          } else {, +            // In alpha mode, % should be converted to FNC1 separator 0x1D, +            result.setCharAt(i, (char) 0x1D);, +          }, +        }, +      }, +    }, +++ b/core/src/com/google/zxing/qrcode/decoder/Mode.java, +  static final Mode FNC1_FIRST_POSITION = new Mode(null);, +  static final Mode FNC1_SECOND_POSITION = new Mode(null);, +      case 0x5:, +        return FNC1_FIRST_POSITION;, +      case 0x9:, +        return FNC1_SECOND_POSITION;, +        throw new ReaderException("Unsupported mode bits: " + bits);, +    if (characterCountBitsForVersions == null) {, +      throw new IllegalArgumentException("Character count doesn't apply to this mode");]