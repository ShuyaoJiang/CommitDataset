[+++ b/core/src/com/google/zxing/Writer.java, +++ b/core/src/com/google/zxing/Writer.java, +++ b/core/src/com/google/zxing/client/result/ExpandedProductParsedResult.java, +  public ExpandedProductParsedResult(String productID,, +                                     String sscc,, +                                     String lotNumber,, +                                     String productionDate,, +                                     String packagingDate,, +                                     String bestBeforeDate,, +                                     String expirationDate,, +                                     String weight,, +                                     String weightType,, +                                     String weightIncrement,, +                                     String price,, +                                     String priceIncrement,, +                                     String priceCurrency,, +                                     Hashtable uncommonAIs) {, +    return equalsOrNull(productID, other.productID), +        && equalsOrNull(sscc, other.sscc), +        && equalsOrNull(lotNumber, other.lotNumber), +        && equalsOrNull(productionDate, other.productionDate), +        && equalsOrNull(bestBeforeDate, other.bestBeforeDate), +        && equalsOrNull(expirationDate, other.expirationDate), +        && equalsOrNull(weight, other.weight), +        && equalsOrNull(weightType, other.weightType), +        && equalsOrNull(weightIncrement, other.weightIncrement), +        && equalsOrNull(price, other.price), +        && equalsOrNull(priceIncrement, other.priceIncrement), +        && equalsOrNull(priceCurrency, other.priceCurrency), +        && equalsOrNull(uncommonAIs, other.uncommonAIs);, +  }, +, +  private static boolean equalsOrNull(Object o1, Object o2) {, +    return o1 == null ? o2 == null : o1.equals(o2);, +    int hash = 0;, +    hash ^= hashNotNull(productID);, +    hash ^= hashNotNull(sscc);, +    hash ^= hashNotNull(lotNumber);, +    hash ^= hashNotNull(productionDate);, +    hash ^= hashNotNull(bestBeforeDate);, +    hash ^= hashNotNull(expirationDate);, +    hash ^= hashNotNull(weight);, +    hash ^= hashNotNull(weightType);, +    hash ^= hashNotNull(weightIncrement);, +    hash ^= hashNotNull(price);, +    hash ^= hashNotNull(priceIncrement);, +    hash ^= hashNotNull(priceCurrency);, +    hash ^= hashNotNull(uncommonAIs);, +    return hash;, +  }, +  private static int hashNotNull(Object o) {, +    return o == null ? 0 : o.hashCode();, +++ b/core/src/com/google/zxing/Writer.java, +++ b/core/src/com/google/zxing/client/result/ExpandedProductParsedResult.java, +  public ExpandedProductParsedResult(String productID,, +                                     String sscc,, +                                     String lotNumber,, +                                     String productionDate,, +                                     String packagingDate,, +                                     String bestBeforeDate,, +                                     String expirationDate,, +                                     String weight,, +                                     String weightType,, +                                     String weightIncrement,, +                                     String price,, +                                     String priceIncrement,, +                                     String priceCurrency,, +                                     Hashtable uncommonAIs) {, +    return equalsOrNull(productID, other.productID), +        && equalsOrNull(sscc, other.sscc), +        && equalsOrNull(lotNumber, other.lotNumber), +        && equalsOrNull(productionDate, other.productionDate), +        && equalsOrNull(bestBeforeDate, other.bestBeforeDate), +        && equalsOrNull(expirationDate, other.expirationDate), +        && equalsOrNull(weight, other.weight), +        && equalsOrNull(weightType, other.weightType), +        && equalsOrNull(weightIncrement, other.weightIncrement), +        && equalsOrNull(price, other.price), +        && equalsOrNull(priceIncrement, other.priceIncrement), +        && equalsOrNull(priceCurrency, other.priceCurrency), +        && equalsOrNull(uncommonAIs, other.uncommonAIs);, +  }, +, +  private static boolean equalsOrNull(Object o1, Object o2) {, +    return o1 == null ? o2 == null : o1.equals(o2);, +    int hash = 0;, +    hash ^= hashNotNull(productID);, +    hash ^= hashNotNull(sscc);, +    hash ^= hashNotNull(lotNumber);, +    hash ^= hashNotNull(productionDate);, +    hash ^= hashNotNull(bestBeforeDate);, +    hash ^= hashNotNull(expirationDate);, +    hash ^= hashNotNull(weight);, +    hash ^= hashNotNull(weightType);, +    hash ^= hashNotNull(weightIncrement);, +    hash ^= hashNotNull(price);, +    hash ^= hashNotNull(priceIncrement);, +    hash ^= hashNotNull(priceCurrency);, +    hash ^= hashNotNull(uncommonAIs);, +    return hash;]