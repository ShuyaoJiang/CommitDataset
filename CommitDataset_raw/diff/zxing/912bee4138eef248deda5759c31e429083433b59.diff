[+++ b/android/src/com/google/zxing/client/android/PreferencesFragment.java, +      // Before validating, remove custom placeholders, which will not, +      // be considered valid parts of the URL in some locations:, +      valueString = valueString.replaceAll("%[sdf]", "");, +++ b/android/src/com/google/zxing/client/android/PreferencesFragment.java, +      // Before validating, remove custom placeholders, which will not, +      // be considered valid parts of the URL in some locations:, +      valueString = valueString.replaceAll("%[sdf]", "");, +++ /dev/null, +++ b/android/src/com/google/zxing/client/android/PreferencesFragment.java, +      // Before validating, remove custom placeholders, which will not, +      // be considered valid parts of the URL in some locations:, +      valueString = valueString.replaceAll("%[sdf]", "");, +++ /dev/null, +++ /dev/null, +++ b/android/src/com/google/zxing/client/android/PreferencesFragment.java, +      // Before validating, remove custom placeholders, which will not, +      // be considered valid parts of the URL in some locations:, +      valueString = valueString.replaceAll("%[sdf]", "");, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/android/src/com/google/zxing/client/android/PreferencesFragment.java, +      // Before validating, remove custom placeholders, which will not, +      // be considered valid parts of the URL in some locations:, +      valueString = valueString.replaceAll("%[sdf]", "");, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/android/src/com/google/zxing/client/android/PreferencesFragment.java, +      // Before validating, remove custom placeholders, which will not, +      // be considered valid parts of the URL in some locations:, +      valueString = valueString.replaceAll("%[sdf]", "");, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/android/src/com/google/zxing/client/android/PreferencesFragment.java, +      // Before validating, remove custom placeholders, which will not, +      // be considered valid parts of the URL in some locations:, +      valueString = valueString.replaceAll("%[sdf]", "");, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/zxing.appspot.com/src/main/webapp/scan.html, +    <meta http-equiv="content-type" content="text/html; charset=UTF-8">, +    <title>Zebra Crossing</title>, +    <link rel="stylesheet" href="/style.css" type="text/css"/>, +    <div id="header">, +      <h1>Zebra Crossing <span>from the ZXing Project</span></h1>, +    , +    <table>, +      <tr>, +        <td style="vertical-align:top;padding:4px;margin:8px">, +          <img src="/zxingiconsmall.png" width="48" height="48" alt="ZXing"/>, +        </td>, +        <td style="vertical-align:top;padding:4px;margin:8px">, +          <p>A web page you are viewing would like to scan a barcode with your camera phone. To do, +          this, you need to install a new application.</p>, +          <p>If you are using an Android device,, +          <a href="market://details?id=com.google.zxing.client.android">click here</a> to, +          install Barcode Scanner. Once installed, it will launch automatically the next time you, +          click on the hyperlink which brought you here.</p>, +        </td>, +      </tr>, +       <!--, +        function getQueryParameter(name) {, +          var query;, +          query = window.location.search.substring(1);, +          if (query.length <= 0), +            return null;, +          name += "=";, +          var head;, +          head = query.indexOf(name);, +          if (head < 0), +            return null;, +          head += name.length;, +          var tail;, +          tail = query.indexOf ( "&" , head );, +          if (tail < 0), +            tail = query.length;, +          return decodeURIComponent(query.substring(head, tail));, +        function process(form) {, +          if (window.ret == null), +            return false;, +          var code;, +          code = form['{CODE}'].value;, +          if (code == null || code.length == 0), +            return false;, +          var url;, +          url = window.ret.replace('{CODE}', encodeURIComponent(code));, +          window.location = url;, +          return false;, +        window.ret = getQueryParameter("ret");, +        // We COULD allow any protocol, but this is a we, +        if (window.ret != null && window.ret.indexOf("http") == 0) {]