[+++ b/core/src/main/java/com/google/zxing/oned/EAN13Writer.java, +    int length = contents.length();, +    switch (length) {, +      case 12:, +        // No check digit present, calculate it and add it, +        int check;, +        try {, +          check = UPCEANReader.getStandardUPCEANChecksum(contents);, +        } catch (FormatException fe) {, +          throw new IllegalArgumentException(fe);, +        contents += check;, +        break;, +      case 13:, +        break;, +      default:, +        throw new IllegalArgumentException(, +            "Requested contents should be 12 or 13 digits long, but got " + length);, +    }, +, +    int firstDigit = Character.digit(contents.charAt(0), 10);, +    // See EAN13Reader for a description of how the first digit & left bars are encoded, +      int digit = Character.digit(contents.charAt(i), 10);, +      int digit = Character.digit(contents.charAt(i), 10);, +++ b/core/src/main/java/com/google/zxing/oned/EAN13Writer.java, +    int length = contents.length();, +    switch (length) {, +      case 12:, +        // No check digit present, calculate it and add it, +        int check;, +        try {, +          check = UPCEANReader.getStandardUPCEANChecksum(contents);, +        } catch (FormatException fe) {, +          throw new IllegalArgumentException(fe);, +        contents += check;, +        break;, +      case 13:, +        break;, +      default:, +        throw new IllegalArgumentException(, +            "Requested contents should be 12 or 13 digits long, but got " + length);, +    }, +, +    int firstDigit = Character.digit(contents.charAt(0), 10);, +    // See EAN13Reader for a description of how the first digit & left bars are encoded, +      int digit = Character.digit(contents.charAt(i), 10);, +      int digit = Character.digit(contents.charAt(i), 10);, +++ b/core/src/main/java/com/google/zxing/oned/EAN8Writer.java, +import com.google.zxing.FormatException;, +    int length = contents.length();, +    switch (length) {, +      case 7:, +        // No check digit present, calculate it and add it, +        int check;, +        try {, +          check = UPCEANReader.getStandardUPCEANChecksum(contents);, +        } catch (FormatException fe) {, +          throw new IllegalArgumentException(fe);, +        }, +        contents += check;, +        break;, +      case 8:, +        try {, +          if (!UPCEANReader.checkStandardUPCEANChecksum(contents)) {, +            throw new IllegalArgumentException("Contents do not pass checksum");, +          }, +        } catch (FormatException ignored) {, +          throw new IllegalArgumentException("Illegal contents");, +        }, +        break;, +      default:, +            "Requested contents should be 8 digits long, but got " + length);, +      int digit = Character.digit(contents.charAt(i), 10);, +      int digit = Character.digit(contents.charAt(i), 10);, +++ b/core/src/main/java/com/google/zxing/oned/EAN13Writer.java, +    int length = contents.length();, +    switch (length) {, +      case 12:, +        // No check digit present, calculate it and add it, +        int check;, +        try {, +          check = UPCEANReader.getStandardUPCEANChecksum(contents);, +        } catch (FormatException fe) {, +          throw new IllegalArgumentException(fe);, +        contents += check;, +        break;, +      case 13:, +        break;, +      default:, +        throw new IllegalArgumentException(, +            "Requested contents should be 12 or 13 digits long, but got " + length);, +    }, +, +    int firstDigit = Character.digit(contents.charAt(0), 10);, +    // See EAN13Reader for a description of how the first digit & left bars are encoded, +      int digit = Character.digit(contents.charAt(i), 10);, +      int digit = Character.digit(contents.charAt(i), 10);, +++ b/core/src/main/java/com/google/zxing/oned/EAN8Writer.java, +import com.google.zxing.FormatException;, +    int length = contents.length();, +    switch (length) {]