[+++ b/AUTHORS, +Wolfgang Jung, +++ b/AUTHORS, +Wolfgang Jung, +++ b/javase/src/com/google/zxing/client/j2se/BufferedImageLuminanceSource.java, +import java.awt.image.BufferedImage;, + * @author code@elektrowolle.de (Wolfgang Jung), +  public BufferedImageLuminanceSource(BufferedImage image, int left, int top, int width, int height) {, +    // Create a grayscale copy, no need to calculate the luminance manually, +    this.image = new BufferedImage(sourceWidth, sourceHeight, BufferedImage.TYPE_BYTE_GRAY);, +    this.image.getGraphics().drawImage(image, 0, 0, null);, +    // The underlying raster of image consists of bytes with the luminance values, +    image.getRaster().getDataElements(left, top + y, width, 1, row);, +    // The underlying raster of image consists of area bytes with the luminance values, +    image.getRaster().getDataElements(left, top, width, height, matrix);, +  /**, +   * This is always true, since the image is a gray-scale image., +   *, +   * @return true, +   */, +    return true;, +    //if (!isRotateSupported()) {, +    //  throw new IllegalStateException("Rotate not supported");, +    //}, +    BufferedImage rotatedImage = new BufferedImage(sourceHeight, sourceWidth, BufferedImage.TYPE_BYTE_GRAY);, +    return new BufferedImageLuminanceSource(rotatedImage, top, sourceWidth - (left + width), getHeight(), width);]