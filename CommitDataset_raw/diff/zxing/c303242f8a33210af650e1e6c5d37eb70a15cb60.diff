[+++ b/zxing.appspot.com/generator/.classpath, +	<classpathentry kind="lib" path="libs/gwt-maps.jar"/>, +++ b/zxing.appspot.com/generator/.classpath, +	<classpathentry kind="lib" path="libs/gwt-maps.jar"/>, +++ b/zxing.appspot.com/generator/libs/gwt-maps.jar, +++ b/zxing.appspot.com/generator/.classpath, +	<classpathentry kind="lib" path="libs/gwt-maps.jar"/>, +++ b/zxing.appspot.com/generator/libs/gwt-maps.jar, +++ b/zxing.appspot.com/generator/src/com/google/zxing/web/generator/Generator.gwt.xml, +      <inherits name='com.google.gwt.widgetideas.WidgetIdeas' />, +      <inherits name='com.google.gwt.maps.GoogleMaps' />, +      <stylesheet src='DatePickerDemo.css' />, +      , +      <script src='http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAjEOGGB_IEuss4QYUzB6Z0BRlY4xXjGBjgubjQXCS8Djm2jdpYBQn9f8dHtxpg30ararqd3GCyq_T4A' />, +++ b/zxing.appspot.com/generator/.classpath, +	<classpathentry kind="lib" path="libs/gwt-maps.jar"/>, +++ b/zxing.appspot.com/generator/libs/gwt-maps.jar, +++ b/zxing.appspot.com/generator/src/com/google/zxing/web/generator/Generator.gwt.xml, +      <inherits name='com.google.gwt.widgetideas.WidgetIdeas' />, +      <inherits name='com.google.gwt.maps.GoogleMaps' />, +      <stylesheet src='DatePickerDemo.css' />, +      , +      <script src='http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAjEOGGB_IEuss4QYUzB6Z0BRlY4xXjGBjgubjQXCS8Djm2jdpYBQn9f8dHtxpg30ararqd3GCyq_T4A' />, +++ b/zxing.appspot.com/generator/src/com/google/zxing/web/generator/client/GeoLocationGenerator.java, +import com.google.gwt.dom.client.Node;, +import com.google.gwt.dom.client.NodeList;, +import com.google.gwt.maps.client.MapWidget;, +import com.google.gwt.maps.client.control.SmallMapControl;, +import com.google.gwt.maps.client.event.MapClickHandler;, +import com.google.gwt.maps.client.event.MarkerDragEndHandler;, +import com.google.gwt.maps.client.event.MapClickHandler.MapClickEvent;, +import com.google.gwt.maps.client.geom.LatLng;, +import com.google.gwt.maps.client.overlay.Marker;, +import com.google.gwt.maps.client.overlay.MarkerOptions;, +import com.google.gwt.user.client.ui.SimplePanel;, +public class GeoLocationGenerator implements GeneratorSource, ChangeListener {, +  MapWidget map = new MapWidget();, +  Marker mapMarker = null;, +  private ChangeListener changeListener;, +    this.changeListener = listener;, +    latitude.addChangeListener(this);, +    longitude.addChangeListener(this);, +    table = new Grid(7, 2);, +    map.setSize("256px", "256px");, +    map.addControl(new SmallMapControl());, +    map.addMapClickHandler(new MapClickHandler() {, +      public void onClick(MapClickEvent event) {, +        mapClick(event);, +      }, +    });, +    table.setText(5, 0, "OR");, +    table.setText(5, 1, "use the map to select a location:");, +    SimplePanel sp = new SimplePanel();, +    sp.add(map);, +    table.setWidget(6, 1, sp);, +  protected void mapClick(MapClickEvent event) {, +    latitude.setText("" + event.getLatLng().getLatitude());, +    longitude.setText("" + event.getLatLng().getLongitude());, +    setMapMarker(event.getLatLng().getLatitude(), event.getLatLng().getLongitude(), false);, +    changeListener.onChange(latitude);, +    changeListener.onChange(longitude);, +  }, +  , +  protected void mapMarkerMoved() {, +    latitude.setText("" + mapMarker.getLatLng().getLatitude());, +    longitude.setText("" + mapMarker.getLatLng().getLongitude());, +    changeListener.onChange(latitude);, +    changeListener.onChange(longitude);, +  }, +  , +  protected void setMapMarker(double lat, double lon, boolean zoomAndCenter) {, +    if (mapMarker != null) {, +      map.removeOverlay(mapMarker);, +    }, +    LatLng ll = LatLng.newInstance(lat, lon);, +    if (zoomAndCenter) {, +      map.setCenter(ll);, +      map.setZoomLevel(12);, +    }, +    if (mapMarker != null) {, +      mapMarker.setLatLng(ll);, +    } else {, +      MarkerOptions opt = MarkerOptions.newInstance();, +      opt.setDraggable(true);, +      mapMarker = new Marker(ll, opt);, +      mapMarker.addMarkerDragEndHandler(new MarkerDragEndHandler() {, +        public void onDragEnd(MarkerDragEndEvent event) {, +          mapMarkerMoved();, +        }, +      });, +    }, +    map.addOverlay(mapMarker);  , +  }, +, +    changeListener.onChange(latitude);, +    changeListener.onChange(longitude);, +    this.onChange(latitude);, +, +  public void onChange(Widget sender) {, +    if (sender == latitude || sender == longitude) {]