[+++ b/csharp/common/ByteMatrix.cs, +			sbyte[][] array = this.Array;, +			int width = this.Width;, +			int height = this.Height;, +			//Here create the Bitmap to the known height, width and format, +			Bitmap bmp = new Bitmap(width, height, PixelFormat.Format8bppIndexed);, +			//Create a BitmapData and Lock all pixels to be written, +			BitmapData bmpData =, +				bmp.LockBits(new Rectangle(0, 0, bmp.Width, bmp.Height),, +										 ImageLockMode.WriteOnly, bmp.PixelFormat);, +			// If you wanted to support formats other than 8bpp, you should use Bitmap.GetPixelFormatSize(bmp.PixelFormat) to adjust the array size, +			byte[] pixels = new byte[bmpData.Stride * height];, +			int iPixelsCounter = 0;, +					int offset = y * width;, +					for (int x = 0; x < width; x++), +						pixels[iPixelsCounter++] = array[y][x] == BLACK ? BLACK : WHITE;, +					iPixelsCounter += bmpData.Stride - width;, +			System.Runtime.InteropServices.Marshal.Copy(pixels, 0, bmpData.Scan0, pixels.Length);, +, +			//Return the bitmap]