[+++ b/cpp/core/src/zxing/oned/EAN13Reader.cpp, +        if (bestMatch < 0) {, +          return -1;, +        }, +      if (!determineFirstDigit(resultString, lgPatternFound)) {, +        return -1;, +      }, +      int* middleRange = findGuardPattern(row, rowOffset, true, (int*)getMIDDLE_PATTERN(),, +      if (middleRange != NULL) {, +          if (bestMatch < 0) {, +            delete [] middleRange;, +            return -1;, +          }, +      return -1;, +    bool EAN13Reader::determineFirstDigit(std::string& resultString, int lgPatternFound) {, +          return true;, +      return false;, +++ b/cpp/core/src/zxing/oned/EAN13Reader.cpp, +        if (bestMatch < 0) {, +          return -1;, +        }, +      if (!determineFirstDigit(resultString, lgPatternFound)) {, +        return -1;, +      }, +      int* middleRange = findGuardPattern(row, rowOffset, true, (int*)getMIDDLE_PATTERN(),, +      if (middleRange != NULL) {, +          if (bestMatch < 0) {, +            delete [] middleRange;, +            return -1;, +          }, +      return -1;, +    bool EAN13Reader::determineFirstDigit(std::string& resultString, int lgPatternFound) {, +          return true;, +      return false;, +++ b/cpp/core/src/zxing/oned/EAN13Reader.h, +			static bool determineFirstDigit(std::string& resultString, int lgPatternFound);, +			int decodeMiddle(Ref<BitArray> row, int startRange[], int startRangeLen,, +			    std::string& resultString);, +++ b/cpp/core/src/zxing/oned/EAN13Reader.cpp, +        if (bestMatch < 0) {, +          return -1;, +        }, +      if (!determineFirstDigit(resultString, lgPatternFound)) {, +        return -1;, +      }, +      int* middleRange = findGuardPattern(row, rowOffset, true, (int*)getMIDDLE_PATTERN(),, +      if (middleRange != NULL) {, +          if (bestMatch < 0) {, +            delete [] middleRange;, +            return -1;, +          }, +      return -1;, +    bool EAN13Reader::determineFirstDigit(std::string& resultString, int lgPatternFound) {, +          return true;, +      return false;, +++ b/cpp/core/src/zxing/oned/EAN13Reader.h, +			static bool determineFirstDigit(std::string& resultString, int lgPatternFound);, +			int decodeMiddle(Ref<BitArray> row, int startRange[], int startRangeLen,, +			    std::string& resultString);, +++ b/cpp/core/src/zxing/oned/EAN8Reader.cpp, +        if (bestMatch < 0) {, +          return -1;, +        }, +      int* middleRange = findGuardPattern(row, rowOffset, true, (int*)getMIDDLE_PATTERN(),, +      if (middleRange != NULL) {, +          if (bestMatch < 0) {, +            delete [] middleRange;, +            return -1;, +          }, +      return -1;, +++ b/cpp/core/src/zxing/oned/EAN13Reader.cpp, +        if (bestMatch < 0) {, +          return -1;, +        }, +      if (!determineFirstDigit(resultString, lgPatternFound)) {, +        return -1;, +      }, +      int* middleRange = findGuardPattern(row, rowOffset, true, (int*)getMIDDLE_PATTERN(),, +      if (middleRange != NULL) {, +          if (bestMatch < 0) {, +            delete [] middleRange;, +            return -1;, +          }, +      return -1;, +    bool EAN13Reader::determineFirstDigit(std::string& resultString, int lgPatternFound) {, +          return true;, +      return false;, +++ b/cpp/core/src/zxing/oned/EAN13Reader.h, +			static bool determineFirstDigit(std::string& resultString, int lgPatternFound);, +			int decodeMiddle(Ref<BitArray> row, int startRange[], int startRangeLen,, +			    std::string& resultString);, +++ b/cpp/core/src/zxing/oned/EAN8Reader.cpp, +        if (bestMatch < 0) {, +          return -1;, +        }, +      int* middleRange = findGuardPattern(row, rowOffset, true, (int*)getMIDDLE_PATTERN(),, +      if (middleRange != NULL) {, +          if (bestMatch < 0) {, +            delete [] middleRange;, +            return -1;]