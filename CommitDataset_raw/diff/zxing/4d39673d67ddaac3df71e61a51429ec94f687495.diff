[+++ b/core/src/main/java/com/google/zxing/common/GridSampler.java, +    int maxOffset = points.length - 1; // points.length must be even, +    for (int offset = 0; offset < maxOffset && nudged; offset += 2) {, +++ b/core/src/main/java/com/google/zxing/common/GridSampler.java, +    int maxOffset = points.length - 1; // points.length must be even, +    for (int offset = 0; offset < maxOffset && nudged; offset += 2) {, +++ b/core/src/main/java/com/google/zxing/common/PerspectiveTransform.java, +    int maxI = points.length - 1; // points.length must be even, +    for (int i = 0; i < maxI; i += 2) {, +++ b/core/src/main/java/com/google/zxing/common/GridSampler.java, +    int maxOffset = points.length - 1; // points.length must be even, +    for (int offset = 0; offset < maxOffset && nudged; offset += 2) {, +++ b/core/src/main/java/com/google/zxing/common/PerspectiveTransform.java, +    int maxI = points.length - 1; // points.length must be even, +    for (int i = 0; i < maxI; i += 2) {, +++ b/core/src/main/java/com/google/zxing/common/detector/MathUtils.java, +    double xDiff = aX - bX;, +    double yDiff = aY - bY;, +    double xDiff = aX - bX;, +    double yDiff = aY - bY;, +++ b/core/src/main/java/com/google/zxing/common/GridSampler.java, +    int maxOffset = points.length - 1; // points.length must be even, +    for (int offset = 0; offset < maxOffset && nudged; offset += 2) {, +++ b/core/src/main/java/com/google/zxing/common/PerspectiveTransform.java, +    int maxI = points.length - 1; // points.length must be even, +    for (int i = 0; i < maxI; i += 2) {, +++ b/core/src/main/java/com/google/zxing/common/detector/MathUtils.java, +    double xDiff = aX - bX;, +    double yDiff = aY - bY;, +    double xDiff = aX - bX;, +    double yDiff = aY - bY;, +++ b/core/src/main/java/com/google/zxing/multi/qrcode/detector/MultiFinderPatternFinder.java, +          float dCpy = (float) Math.sqrt((double) dA * dA + (double) dB * dB);, +++ b/core/src/main/java/com/google/zxing/common/GridSampler.java, +    int maxOffset = points.length - 1; // points.length must be even, +    for (int offset = 0; offset < maxOffset && nudged; offset += 2) {, +++ b/core/src/main/java/com/google/zxing/common/PerspectiveTransform.java, +    int maxI = points.length - 1; // points.length must be even, +    for (int i = 0; i < maxI; i += 2) {, +++ b/core/src/main/java/com/google/zxing/common/detector/MathUtils.java, +    double xDiff = aX - bX;, +    double yDiff = aY - bY;, +    double xDiff = aX - bX;, +    double yDiff = aY - bY;, +++ b/core/src/main/java/com/google/zxing/multi/qrcode/detector/MultiFinderPatternFinder.java, +          float dCpy = (float) Math.sqrt((double) dA * dA + (double) dB * dB);, +++ b/core/src/main/java/com/google/zxing/pdf417/decoder/PDF417ScanningDecoder.java, +    DetectionResult detectionResult;, +    for (boolean firstPass = true; ; firstPass = false) {, +      BoundingBox resultBox = detectionResult.getBoundingBox();, +      if (firstPass && resultBox != null &&, +          (resultBox.getMinY() < boundingBox.getMinY() || resultBox.getMaxY() > boundingBox.getMaxY())) {, +        boundingBox = resultBox;, +    detectionResult.setBoundingBox(boundingBox);, +++ b/core/src/main/java/com/google/zxing/common/GridSampler.java, +    int maxOffset = points.length - 1; // points.length must be even, +    for (int offset = 0; offset < maxOffset && nudged; offset += 2) {, +++ b/core/src/main/java/com/google/zxing/common/PerspectiveTransform.java, +    int maxI = points.length - 1; // points.length must be even, +    for (int i = 0; i < maxI; i += 2) {, +++ b/core/src/main/java/com/google/zxing/common/detector/MathUtils.java, +    double xDiff = aX - bX;, +    double yDiff = aY - bY;, +    double xDiff = aX - bX;, +    double yDiff = aY - bY;, +++ b/core/src/main/java/com/google/zxing/multi/qrcode/detector/MultiFinderPatternFinder.java, +          float dCpy = (float) Math.sqrt((double) dA * dA + (double) dB * dB);, +++ b/core/src/main/java/com/google/zxing/pdf417/decoder/PDF417ScanningDecoder.java, +    DetectionResult detectionResult;, +    for (boolean firstPass = true; ; firstPass = false) {, +      BoundingBox resultBox = detectionResult.getBoundingBox();, +      if (firstPass && resultBox != null &&, +          (resultBox.getMinY() < boundingBox.getMinY() || resultBox.getMaxY() > boundingBox.getMaxY())) {, +        boundingBox = resultBox;, +    detectionResult.setBoundingBox(boundingBox);, +++ b/core/src/main/java/com/google/zxing/pdf417/encoder/PDF417.java, +      float newRatio = ((float) (17 * cols + 69) * DEFAULT_MODULE_WIDTH) / (rows * HEIGHT);, +++ b/core/src/main/java/com/google/zxing/common/GridSampler.java, +    int maxOffset = points.length - 1; // points.length must be even, +    for (int offset = 0; offset < maxOffset && nudged; offset += 2) {, +++ b/core/src/main/java/com/google/zxing/common/PerspectiveTransform.java, +    int maxI = points.length - 1; // points.length must be even, +    for (int i = 0; i < maxI; i += 2) {, +++ b/core/src/main/java/com/google/zxing/common/detector/MathUtils.java, +    double xDiff = aX - bX;, +    double yDiff = aY - bY;, +    double xDiff = aX - bX;, +    double yDiff = aY - bY;, +++ b/core/src/main/java/com/google/zxing/multi/qrcode/detector/MultiFinderPatternFinder.java, +          float dCpy = (float) Math.sqrt((double) dA * dA + (double) dB * dB);, +++ b/core/src/main/java/com/google/zxing/pdf417/decoder/PDF417ScanningDecoder.java, +    DetectionResult detectionResult;, +    for (boolean firstPass = true; ; firstPass = false) {, +      BoundingBox resultBox = detectionResult.getBoundingBox();, +      if (firstPass && resultBox != null &&, +          (resultBox.getMinY() < boundingBox.getMinY() || resultBox.getMaxY() > boundingBox.getMaxY())) {, +        boundingBox = resultBox;, +    detectionResult.setBoundingBox(boundingBox);, +++ b/core/src/main/java/com/google/zxing/pdf417/encoder/PDF417.java, +      float newRatio = ((float) (17 * cols + 69) * DEFAULT_MODULE_WIDTH) / (rows * HEIGHT);]