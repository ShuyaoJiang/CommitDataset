[+++ b/core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java, +  protected AbstractBlackBoxTestCase(String testBasePathSuffix,, +    // A little workaround to prevent aggravation in my IDE, +    File testBase = new File(testBasePathSuffix);, +    if (!testBase.exists()) {, +      // try starting with 'core' since the test base is often given as the project root, +      testBase = new File("core/" + testBasePathSuffix);, +    }, +      result = barcodeReader.decode(source, hints);, +      at.rotate(Math.toRadians(degrees), original.getWidth() / 2.0, original.getHeight() / 2.0);, +++ b/core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java, +  protected AbstractBlackBoxTestCase(String testBasePathSuffix,, +    // A little workaround to prevent aggravation in my IDE, +    File testBase = new File(testBasePathSuffix);, +    if (!testBase.exists()) {, +      // try starting with 'core' since the test base is often given as the project root, +      testBase = new File("core/" + testBasePathSuffix);, +    }, +      result = barcodeReader.decode(source, hints);, +      at.rotate(Math.toRadians(degrees), original.getWidth() / 2.0, original.getHeight() / 2.0);, +++ b/core/test/src/com/google/zxing/common/AbstractNegativeBlackBoxTestCase.java, +  protected AbstractNegativeBlackBoxTestCase(String testBasePathSuffix) {, +    super(testBasePathSuffix, new MultiFormatReader(), null);, +++ b/core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java, +  protected AbstractBlackBoxTestCase(String testBasePathSuffix,, +    // A little workaround to prevent aggravation in my IDE, +    File testBase = new File(testBasePathSuffix);, +    if (!testBase.exists()) {, +      // try starting with 'core' since the test base is often given as the project root, +      testBase = new File("core/" + testBasePathSuffix);, +    }, +      result = barcodeReader.decode(source, hints);, +      at.rotate(Math.toRadians(degrees), original.getWidth() / 2.0, original.getHeight() / 2.0);, +++ b/core/test/src/com/google/zxing/common/AbstractNegativeBlackBoxTestCase.java, +  protected AbstractNegativeBlackBoxTestCase(String testBasePathSuffix) {, +    super(testBasePathSuffix, new MultiFormatReader(), null);, +++ b/core/test/src/com/google/zxing/datamatrix/DataMatrixBlackBox1TestCase.java, +    super("test/data/blackbox/datamatrix-1", new DataMatrixReader(), BarcodeFormat.DATAMATRIX);, +++ b/core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java, +  protected AbstractBlackBoxTestCase(String testBasePathSuffix,, +    // A little workaround to prevent aggravation in my IDE, +    File testBase = new File(testBasePathSuffix);, +    if (!testBase.exists()) {, +      // try starting with 'core' since the test base is often given as the project root, +      testBase = new File("core/" + testBasePathSuffix);, +    }, +      result = barcodeReader.decode(source, hints);, +      at.rotate(Math.toRadians(degrees), original.getWidth() / 2.0, original.getHeight() / 2.0);, +++ b/core/test/src/com/google/zxing/common/AbstractNegativeBlackBoxTestCase.java, +  protected AbstractNegativeBlackBoxTestCase(String testBasePathSuffix) {, +    super(testBasePathSuffix, new MultiFormatReader(), null);, +++ b/core/test/src/com/google/zxing/datamatrix/DataMatrixBlackBox1TestCase.java, +    super("test/data/blackbox/datamatrix-1", new DataMatrixReader(), BarcodeFormat.DATAMATRIX);, +++ b/core/test/src/com/google/zxing/datamatrix/DataMatrixBlackBox2TestCase.java, +    super("test/data/blackbox/datamatrix-2", new DataMatrixReader(), BarcodeFormat.DATAMATRIX);, +++ b/core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java, +  protected AbstractBlackBoxTestCase(String testBasePathSuffix,, +    // A little workaround to prevent aggravation in my IDE, +    File testBase = new File(testBasePathSuffix);, +    if (!testBase.exists()) {, +      // try starting with 'core' since the test base is often given as the project root, +      testBase = new File("core/" + testBasePathSuffix);, +    }, +      result = barcodeReader.decode(source, hints);, +      at.rotate(Math.toRadians(degrees), original.getWidth() / 2.0, original.getHeight() / 2.0);, +++ b/core/test/src/com/google/zxing/common/AbstractNegativeBlackBoxTestCase.java, +  protected AbstractNegativeBlackBoxTestCase(String testBasePathSuffix) {, +    super(testBasePathSuffix, new MultiFormatReader(), null);, +++ b/core/test/src/com/google/zxing/datamatrix/DataMatrixBlackBox1TestCase.java, +    super("test/data/blackbox/datamatrix-1", new DataMatrixReader(), BarcodeFormat.DATAMATRIX);, +++ b/core/test/src/com/google/zxing/datamatrix/DataMatrixBlackBox2TestCase.java, +    super("test/data/blackbox/datamatrix-2", new DataMatrixReader(), BarcodeFormat.DATAMATRIX);, +++ b/core/test/src/com/google/zxing/negative/FalsePositivesBlackBoxTestCase.java, +    super("test/data/blackbox/falsepositives");, +++ b/core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java, +  protected AbstractBlackBoxTestCase(String testBasePathSuffix,, +    // A little workaround to prevent aggravation in my IDE, +    File testBase = new File(testBasePathSuffix);, +    if (!testBase.exists()) {, +      // try starting with 'core' since the test base is often given as the project root, +      testBase = new File("core/" + testBasePathSuffix);, +    }, +      result = barcodeReader.decode(source, hints);, +      at.rotate(Math.toRadians(degrees), original.getWidth() / 2.0, original.getHeight() / 2.0);, +++ b/core/test/src/com/google/zxing/common/AbstractNegativeBlackBoxTestCase.java, +  protected AbstractNegativeBlackBoxTestCase(String testBasePathSuffix) {, +    super(testBasePathSuffix, new MultiFormatReader(), null);, +++ b/core/test/src/com/google/zxing/datamatrix/DataMatrixBlackBox1TestCase.java, +    super("test/data/blackbox/datamatrix-1", new DataMatrixReader(), BarcodeFormat.DATAMATRIX);, +++ b/core/test/src/com/google/zxing/datamatrix/DataMatrixBlackBox2TestCase.java, +    super("test/data/blackbox/datamatrix-2", new DataMatrixReader(), BarcodeFormat.DATAMATRIX);, +++ b/core/test/src/com/google/zxing/negative/FalsePositivesBlackBoxTestCase.java, +    super("test/data/blackbox/falsepositives");, +++ b/core/test/src/com/google/zxing/negative/PartialBlackBoxTestCase.java, +    super("test/data/blackbox/partial");, +++ b/core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java, +  protected AbstractBlackBoxTestCase(String testBasePathSuffix,, +    // A little workaround to prevent aggravation in my IDE, +    File testBase = new File(testBasePathSuffix);, +    if (!testBase.exists()) {]