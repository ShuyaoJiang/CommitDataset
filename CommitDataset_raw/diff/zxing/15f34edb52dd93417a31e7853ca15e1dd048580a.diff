[+++ b/core/src/com/google/zxing/oned/Code39Reader.java, +      int totalWideCountersWidth = 0;, +        int counter = counters[i];, +          totalWideCountersWidth += counter;, +        // Found 3 wide counters, but are they close enough in width?, +        // We can perform a cheap, conservative check to see if any individual, +        // counter is more than 1.5 times the average:, +        for (int i = 0; i < numCounters && wideCounters > 0; i++) {, +          int counter = counters[i];, +          if (counters[i] > maxNarrowCounter) {, +            wideCounters--;, +            // totalWideCountersWidth = 3 * average, so this checks if counter >= 3/2 * average, +            if ((counter << 1) >= totalWideCountersWidth) {, +              throw new ReaderException("Wide bars vary too much in width, rejecting");, +            }, +          }, +        }, +++ b/core/src/com/google/zxing/oned/Code39Reader.java, +      int totalWideCountersWidth = 0;, +        int counter = counters[i];, +          totalWideCountersWidth += counter;, +        // Found 3 wide counters, but are they close enough in width?, +        // We can perform a cheap, conservative check to see if any individual, +        // counter is more than 1.5 times the average:, +        for (int i = 0; i < numCounters && wideCounters > 0; i++) {, +          int counter = counters[i];, +          if (counters[i] > maxNarrowCounter) {, +            wideCounters--;, +            // totalWideCountersWidth = 3 * average, so this checks if counter >= 3/2 * average, +            if ((counter << 1) >= totalWideCountersWidth) {, +              throw new ReaderException("Wide bars vary too much in width, rejecting");, +            }, +          }, +        }, +++ b/core/test/src/com/google/zxing/common/FalsePositivesBlackBoxTestCase.java, +  private static final int FALSE_POSITIVES_ALLOWED = 15;]