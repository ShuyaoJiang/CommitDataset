[+++ b/javase/src/com/google/zxing/client/j2se/CommandLineRunner.java, +    int[] crop = null;, +      } else if (arg.startsWith("--crop")) {, +        crop = new int[4];, +        String[] tokens = arg.substring(7).split(",");, +        for (int i = 0; i < crop.length; i++) {, +          crop[i] = Integer.parseInt(tokens[i]);, +        }, +        decodeOneArgument(arg, hints, dumpResults, dumpBlackPoint, crop);, +    System.err.println("  --pure_barcode: Input image is a pure monochrome barcode image, not a photo");, +    System.err.println("  --crop=left,top,width,height: Only examine cropped region of input image(s)");, +  private static void decodeOneArgument(String argument,, +                                        Hashtable<DecodeHintType, Object> hints,, +                                        boolean dumpResults,, +                                        boolean dumpBlackPoint,, +                                        int[] crop) throws IOException,, +          Result result = decode(input.toURI(), hints, dumpBlackPoint, crop);, +        Result result = decode(inputFile.toURI(), hints, dumpBlackPoint, crop);, +      decode(new URI(argument), hints, dumpBlackPoint, crop);, +  private static Result decode(URI uri,, +                               Hashtable<DecodeHintType, Object> hints,, +                               boolean dumpBlackPoint,, +                               int[] crop) throws IOException {, +      LuminanceSource source;, +      if (crop == null) {, +        source = new BufferedImageLuminanceSource(image);, +      } else {, +        source = new BufferedImageLuminanceSource(image, crop[0], crop[1], crop[2], crop[3]);, +      }]