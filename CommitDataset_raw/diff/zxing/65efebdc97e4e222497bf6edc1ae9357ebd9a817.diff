[+++ b/zxingorg/src/com/google/zxing/web/DecodeServlet.java, +import org.apache.http.impl.conn.BasicClientConnectionManager;, +import org.apache.http.params.BasicHttpParams;, +import org.apache.http.params.CoreConnectionPNames;, +import org.apache.http.params.HttpParams;, +    HttpParams params = new BasicHttpParams();, +    DefaultHttpClient.setDefaultHttpParams(params);, +    params.setIntParameter(CoreConnectionPNames.SO_LINGER, 5); // Avoids CLOSE_WAIT socket issue?, +    params.setIntParameter(CoreConnectionPNames.SO_TIMEOUT, 5000);, +    params.setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);, +, +    ClientConnectionManager connectionManager = new BasicClientConnectionManager();, +    HttpClient client = new DefaultHttpClient(connectionManager, params);, +      connectionManager.shutdown();, +++ b/zxingorg/src/com/google/zxing/web/DecodeServlet.java, +import org.apache.http.impl.conn.BasicClientConnectionManager;, +import org.apache.http.params.BasicHttpParams;, +import org.apache.http.params.CoreConnectionPNames;, +import org.apache.http.params.HttpParams;, +    HttpParams params = new BasicHttpParams();, +    DefaultHttpClient.setDefaultHttpParams(params);, +    params.setIntParameter(CoreConnectionPNames.SO_LINGER, 5); // Avoids CLOSE_WAIT socket issue?, +    params.setIntParameter(CoreConnectionPNames.SO_TIMEOUT, 5000);, +    params.setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);, +, +    ClientConnectionManager connectionManager = new BasicClientConnectionManager();, +    HttpClient client = new DefaultHttpClient(connectionManager, params);, +      connectionManager.shutdown();, +++ b/zxingorg/src/com/google/zxing/web/DoSFilter.java, +import java.util.Arrays;, +  public static final String BAD_IPS_INIT_PARAM = "bad.ips";, +  private final Set<String> badIPAddresses;, +    badIPAddresses = new HashSet<String>();, +    badIPAddresses.clear();, +    String badIPsString = filterConfig.getInitParameter(BAD_IPS_INIT_PARAM);, +    if (badIPsString != null) {, +      badIPAddresses.addAll(Arrays.asList(badIPsString.split(",")));, +    }, +    if (bannedIPAddresses.contains(remoteIPAddressString) || badIPAddresses.contains(remoteIPAddressString)) {, +    badIPAddresses.clear();, +++ b/zxingorg/src/com/google/zxing/web/DecodeServlet.java, +import org.apache.http.impl.conn.BasicClientConnectionManager;, +import org.apache.http.params.BasicHttpParams;, +import org.apache.http.params.CoreConnectionPNames;, +import org.apache.http.params.HttpParams;, +    HttpParams params = new BasicHttpParams();, +    DefaultHttpClient.setDefaultHttpParams(params);, +    params.setIntParameter(CoreConnectionPNames.SO_LINGER, 5); // Avoids CLOSE_WAIT socket issue?, +    params.setIntParameter(CoreConnectionPNames.SO_TIMEOUT, 5000);, +    params.setIntParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);, +, +    ClientConnectionManager connectionManager = new BasicClientConnectionManager();, +    HttpClient client = new DefaultHttpClient(connectionManager, params);, +      connectionManager.shutdown();, +++ b/zxingorg/src/com/google/zxing/web/DoSFilter.java, +import java.util.Arrays;, +  public static final String BAD_IPS_INIT_PARAM = "bad.ips";, +  private final Set<String> badIPAddresses;, +    badIPAddresses = new HashSet<String>();, +    badIPAddresses.clear();, +    String badIPsString = filterConfig.getInitParameter(BAD_IPS_INIT_PARAM);, +    if (badIPsString != null) {, +      badIPAddresses.addAll(Arrays.asList(badIPsString.split(",")));, +    }, +    if (bannedIPAddresses.contains(remoteIPAddressString) || badIPAddresses.contains(remoteIPAddressString)) {, +    badIPAddresses.clear();, +++ b/zxingorg/web/WEB-INF/web.xml, +    <init-param>, +      <param-name>bad.ips</param-name>, +      <param-value>69.89.31.60,2.95.142.74</param-value> <!-- Causes weird CLOSE_WAIT thread hangs -->, +    </init-param>]