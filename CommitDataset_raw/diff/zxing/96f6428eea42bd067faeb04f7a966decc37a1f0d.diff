[+++ b/android/src/com/google/zxing/client/android/YUVMonochromeBitmapSource.java, +  public void cacheColumnForLuminance(int x) {, +, +  }, +, +++ b/android/src/com/google/zxing/client/android/YUVMonochromeBitmapSource.java, +  public void cacheColumnForLuminance(int x) {, +, +  }, +, +++ b/bug/src/com/google/zxing/client/bug/AWTImageMonochromeBitmapSource.java, +  public void cacheColumnForLuminance(int x) {, +    // do nothing, +  }, +, +++ b/android/src/com/google/zxing/client/android/YUVMonochromeBitmapSource.java, +  public void cacheColumnForLuminance(int x) {, +, +  }, +, +++ b/bug/src/com/google/zxing/client/bug/AWTImageMonochromeBitmapSource.java, +  public void cacheColumnForLuminance(int x) {, +    // do nothing, +  }, +, +++ b/core/src/com/google/zxing/MonochromeBitmapSource.java, +   * Entirely analogous to {@link #getBlackRow(int, BitArray, int, int)} but gets a column., +   */, +  BitArray getBlackColumn(int x, BitArray column, int startY, int getHeight);, +, +  /**, +   * Entirely analogous to {@link #cacheRowForLuminance(int)} but caches a column., +   */, +  void cacheColumnForLuminance(int x);, +, +  /**, +++ b/android/src/com/google/zxing/client/android/YUVMonochromeBitmapSource.java, +  public void cacheColumnForLuminance(int x) {, +, +  }, +, +++ b/bug/src/com/google/zxing/client/bug/AWTImageMonochromeBitmapSource.java, +  public void cacheColumnForLuminance(int x) {, +    // do nothing, +  }, +, +++ b/core/src/com/google/zxing/MonochromeBitmapSource.java, +   * Entirely analogous to {@link #getBlackRow(int, BitArray, int, int)} but gets a column., +   */, +  BitArray getBlackColumn(int x, BitArray column, int startY, int getHeight);, +, +  /**, +   * Entirely analogous to {@link #cacheRowForLuminance(int)} but caches a column., +   */, +  void cacheColumnForLuminance(int x);, +, +  /**, +++ b/core/src/com/google/zxing/common/BaseMonochromeBitmapSource.java, +  public BitArray getBlackColumn(int x, BitArray column, int startY, int getHeight) {, +    if (column == null || column.getSize() < getHeight) {, +      column = new BitArray(getHeight);, +    } else {, +      column.clear();, +    }, +, +    cacheColumnForLuminance(x);, +    // We don't handle "row sampling" specially here, +    for (int y = 0; y < getHeight; y++) {, +      if (getLuminance(x, startY + y) < blackPoint) {, +        column.set(y);, +      }, +    }, +    return column;, +  }, +, +  public abstract void cacheColumnForLuminance(int x);, +, +++ b/android/src/com/google/zxing/client/android/YUVMonochromeBitmapSource.java, +  public void cacheColumnForLuminance(int x) {, +, +  }, +, +++ b/bug/src/com/google/zxing/client/bug/AWTImageMonochromeBitmapSource.java, +  public void cacheColumnForLuminance(int x) {, +    // do nothing, +  }, +, +++ b/core/src/com/google/zxing/MonochromeBitmapSource.java, +   * Entirely analogous to {@link #getBlackRow(int, BitArray, int, int)} but gets a column., +   */, +  BitArray getBlackColumn(int x, BitArray column, int startY, int getHeight);, +, +  /**, +   * Entirely analogous to {@link #cacheRowForLuminance(int)} but caches a column., +   */, +  void cacheColumnForLuminance(int x);, +, +  /**, +++ b/core/src/com/google/zxing/common/BaseMonochromeBitmapSource.java, +  public BitArray getBlackColumn(int x, BitArray column, int startY, int getHeight) {]