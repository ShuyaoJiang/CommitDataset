[+++ b/cpp/core/src/zxing/MultiFormatReader.cpp, +      readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +      readers_.push_back(Ref<Reader>(new zxing::qrcode::QRCodeReader()));, +      readers_.push_back(Ref<Reader>(new zxing::datamatrix::DataMatrixReader()));, +      readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +        readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +      readers_.push_back(Ref<Reader>(new zxing::qrcode::QRCodeReader()));, +        readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +, +++ b/cpp/core/src/zxing/MultiFormatReader.cpp, +      readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +      readers_.push_back(Ref<Reader>(new zxing::qrcode::QRCodeReader()));, +      readers_.push_back(Ref<Reader>(new zxing::datamatrix::DataMatrixReader()));, +      readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +        readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +      readers_.push_back(Ref<Reader>(new zxing::qrcode::QRCodeReader()));, +        readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +, +++ b/cpp/core/src/zxing/MultiFormatReader.h, +    std::vector<Ref<Reader> > readers_;, +++ b/cpp/core/src/zxing/MultiFormatReader.cpp, +      readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +      readers_.push_back(Ref<Reader>(new zxing::qrcode::QRCodeReader()));, +      readers_.push_back(Ref<Reader>(new zxing::datamatrix::DataMatrixReader()));, +      readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +        readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +      readers_.push_back(Ref<Reader>(new zxing::qrcode::QRCodeReader()));, +        readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +, +++ b/cpp/core/src/zxing/MultiFormatReader.h, +    std::vector<Ref<Reader> > readers_;, +++ b/cpp/core/src/zxing/common/GlobalHistogramBinarizer.cpp, +  unsigned char* row_pixels = NULL;, +  try {, +      row_pixels = new unsigned char[width];, +  } catch (IllegalArgumentException const& iae) {, +      delete [] row_pixels;, +      throw iae;, +  }, +++ b/cpp/core/src/zxing/MultiFormatReader.cpp, +      readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +      readers_.push_back(Ref<Reader>(new zxing::qrcode::QRCodeReader()));, +      readers_.push_back(Ref<Reader>(new zxing::datamatrix::DataMatrixReader()));, +      readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +        readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +      readers_.push_back(Ref<Reader>(new zxing::qrcode::QRCodeReader()));, +        readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +, +++ b/cpp/core/src/zxing/MultiFormatReader.h, +    std::vector<Ref<Reader> > readers_;, +++ b/cpp/core/src/zxing/common/GlobalHistogramBinarizer.cpp, +  unsigned char* row_pixels = NULL;, +  try {, +      row_pixels = new unsigned char[width];, +  } catch (IllegalArgumentException const& iae) {, +      delete [] row_pixels;, +      throw iae;, +  }, +++ b/cpp/core/src/zxing/oned/Code39Reader.cpp, +  Code39Reader::Code39Reader(bool usingCheckDigit_, bool extendedMode_) :, +    alphabet_string(ALPHABET_STRING), , +    usingCheckDigit(usingCheckDigit_),, +    extendedMode(extendedMode_) {, +  }, +    int* start = NULL;, +    try {, +      start = findAsteriskPattern(row);, +      const int countersLen = 9;, +      int counters[countersLen];, +, +      delete [] start;, +    } catch (ReaderException const& re) {, +      delete [] start;, +      throw re;, +    }, +    const int countersLen = 9;, +    int counters[countersLen];, +++ b/cpp/core/src/zxing/MultiFormatReader.cpp, +      readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +      readers_.push_back(Ref<Reader>(new zxing::qrcode::QRCodeReader()));, +      readers_.push_back(Ref<Reader>(new zxing::datamatrix::DataMatrixReader()));, +      readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +        readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +      readers_.push_back(Ref<Reader>(new zxing::qrcode::QRCodeReader()));, +        readers_.push_back(Ref<Reader>(new zxing::oned::MultiFormatOneDReader(hints)));, +, +++ b/cpp/core/src/zxing/MultiFormatReader.h, +    std::vector<Ref<Reader> > readers_;, +++ b/cpp/core/src/zxing/common/GlobalHistogramBinarizer.cpp, +  unsigned char* row_pixels = NULL;, +  try {, +      row_pixels = new unsigned char[width];, +  } catch (IllegalArgumentException const& iae) {, +      delete [] row_pixels;, +      throw iae;, +  }, +++ b/cpp/core/src/zxing/oned/Code39Reader.cpp, +  Code39Reader::Code39Reader(bool usingCheckDigit_, bool extendedMode_) :, +    alphabet_string(ALPHABET_STRING), , +    usingCheckDigit(usingCheckDigit_),]