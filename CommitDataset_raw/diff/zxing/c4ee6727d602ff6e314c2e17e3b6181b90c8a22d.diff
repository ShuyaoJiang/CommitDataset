[+++ b/android/src/com/google/zxing/client/android/YUVMonochromeBitmapSource.java, +  public MonochromeBitmapSource rotateCounterClockwise() {, +    throw new IllegalStateException("Rotate not supported");, +  }, +, +  public boolean isRotatedSupported() {, +    return false;, +  }, +, +++ b/android/src/com/google/zxing/client/android/YUVMonochromeBitmapSource.java, +  public MonochromeBitmapSource rotateCounterClockwise() {, +    throw new IllegalStateException("Rotate not supported");, +  }, +, +  public boolean isRotatedSupported() {, +    return false;, +  }, +, +++ b/core/src/com/google/zxing/DecodeHintType.java, + * @author srowen@google.com (Sean Owen), + * @author dswitkin@google.com (Daniel Switkin), +  /**, +   * Unspecified, application-specific hint. Maps to an unspecified {@link Object}., +   */, +  /**, +   * Image is a pure monochrome image of a barcode. Doesn't matter what it maps to;, +   * use {@link Boolean#TRUE}., +   */, +   * Maps to a {@link java.util.Vector} of {@link BarcodeFormat}s., +  /**, +   * Spend more time to try to find a barcode; optimize for accuracy, not speed., +   * Doesn't matter what it maps to; use {@link Boolean#TRUE}., +   */, +++ b/android/src/com/google/zxing/client/android/YUVMonochromeBitmapSource.java, +  public MonochromeBitmapSource rotateCounterClockwise() {, +    throw new IllegalStateException("Rotate not supported");, +  }, +, +  public boolean isRotatedSupported() {, +    return false;, +  }, +, +++ b/core/src/com/google/zxing/DecodeHintType.java, + * @author srowen@google.com (Sean Owen), + * @author dswitkin@google.com (Daniel Switkin), +  /**, +   * Unspecified, application-specific hint. Maps to an unspecified {@link Object}., +   */, +  /**, +   * Image is a pure monochrome image of a barcode. Doesn't matter what it maps to;, +   * use {@link Boolean#TRUE}., +   */, +   * Maps to a {@link java.util.Vector} of {@link BarcodeFormat}s., +  /**, +   * Spend more time to try to find a barcode; optimize for accuracy, not speed., +   * Doesn't matter what it maps to; use {@link Boolean#TRUE}., +   */, +++ b/core/src/com/google/zxing/MonochromeBitmapSource.java, +  /**, +   * <p>Optional operation which returns an implementation based on the same underlying, +   * image, but which behaves as if the underlying image had been rotated 90 degrees, +   * counterclockwise. This is useful in the context of 1D barcodes and the, +   * {@link DecodeHintType#TRY_HARDER} decode hint, and is only intended to be, +   * used in non-resource-constrained environments. Hence, implementations, +   * of this class which are only used in resource-constrained mobile environments, +   * don't have a need to implement this.</p>, +   *, +   * @throws IllegalStateException if not supported, +   */, +  MonochromeBitmapSource rotateCounterClockwise();, +, +  /**, +   * @return true iff rotation is supported, +   * @see #rotateCounterClockwise(), +   */, +  boolean isRotatedSupported();, +, +++ b/android/src/com/google/zxing/client/android/YUVMonochromeBitmapSource.java, +  public MonochromeBitmapSource rotateCounterClockwise() {, +    throw new IllegalStateException("Rotate not supported");, +  }, +, +  public boolean isRotatedSupported() {, +    return false;, +  }, +, +++ b/core/src/com/google/zxing/DecodeHintType.java, + * @author srowen@google.com (Sean Owen), + * @author dswitkin@google.com (Daniel Switkin), +  /**, +   * Unspecified, application-specific hint. Maps to an unspecified {@link Object}., +   */, +  /**, +   * Image is a pure monochrome image of a barcode. Doesn't matter what it maps to;, +   * use {@link Boolean#TRUE}., +   */, +   * Maps to a {@link java.util.Vector} of {@link BarcodeFormat}s., +  /**, +   * Spend more time to try to find a barcode; optimize for accuracy, not speed., +   * Doesn't matter what it maps to; use {@link Boolean#TRUE}.]