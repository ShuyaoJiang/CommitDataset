[+++ b/cpp/core/src/zxing/qrcode/detector/AlignmentPattern.cpp, +// -*- mode:c++; tab-width:2; indent-tabs-mode:nil; c-basic-offset:2 -*-, +  if (abs(i - getY()) <= moduleSize && abs(j - getX()) <= moduleSize) {, +    float moduleSizeDiff = abs(moduleSize - estimatedModuleSize_);, +    return moduleSizeDiff <= 1.0f || moduleSizeDiff <= estimatedModuleSize_;, +  }, +  return false;, +}, +, +Ref<AlignmentPattern> AlignmentPattern::combineEstimate(float i, float j, float newModuleSize) const {, +  float combinedX = (getX() + j) / 2.0f;, +  float combinedY = (getY() + i) / 2.0f;, +  float combinedModuleSize = (estimatedModuleSize_ + newModuleSize) / 2.0f;, +  Ref<AlignmentPattern> result, +    (new AlignmentPattern(combinedX, combinedY, combinedModuleSize));, +  return result;, +++ b/cpp/core/src/zxing/qrcode/detector/AlignmentPattern.cpp, +// -*- mode:c++; tab-width:2; indent-tabs-mode:nil; c-basic-offset:2 -*-, +  if (abs(i - getY()) <= moduleSize && abs(j - getX()) <= moduleSize) {, +    float moduleSizeDiff = abs(moduleSize - estimatedModuleSize_);, +    return moduleSizeDiff <= 1.0f || moduleSizeDiff <= estimatedModuleSize_;, +  }, +  return false;, +}, +, +Ref<AlignmentPattern> AlignmentPattern::combineEstimate(float i, float j, float newModuleSize) const {, +  float combinedX = (getX() + j) / 2.0f;, +  float combinedY = (getY() + i) / 2.0f;, +  float combinedModuleSize = (estimatedModuleSize_ + newModuleSize) / 2.0f;, +  Ref<AlignmentPattern> result, +    (new AlignmentPattern(combinedX, combinedY, combinedModuleSize));, +  return result;, +++ b/cpp/core/src/zxing/qrcode/detector/AlignmentPattern.h, +// -*- mode:c++; tab-width:2; indent-tabs-mode:nil; c-basic-offset:2 -*-, +, +      Ref<AlignmentPattern> combineEstimate(float i, float j,, +                                            float newModuleSize) const;, +++ b/cpp/core/src/zxing/qrcode/detector/AlignmentPattern.cpp, +// -*- mode:c++; tab-width:2; indent-tabs-mode:nil; c-basic-offset:2 -*-, +  if (abs(i - getY()) <= moduleSize && abs(j - getX()) <= moduleSize) {, +    float moduleSizeDiff = abs(moduleSize - estimatedModuleSize_);, +    return moduleSizeDiff <= 1.0f || moduleSizeDiff <= estimatedModuleSize_;, +  }, +  return false;, +}, +, +Ref<AlignmentPattern> AlignmentPattern::combineEstimate(float i, float j, float newModuleSize) const {, +  float combinedX = (getX() + j) / 2.0f;, +  float combinedY = (getY() + i) / 2.0f;, +  float combinedModuleSize = (estimatedModuleSize_ + newModuleSize) / 2.0f;, +  Ref<AlignmentPattern> result, +    (new AlignmentPattern(combinedX, combinedY, combinedModuleSize));, +  return result;, +++ b/cpp/core/src/zxing/qrcode/detector/AlignmentPattern.h, +// -*- mode:c++; tab-width:2; indent-tabs-mode:nil; c-basic-offset:2 -*-, +, +      Ref<AlignmentPattern> combineEstimate(float i, float j,, +                                            float newModuleSize) const;, +++ b/cpp/core/src/zxing/qrcode/detector/AlignmentPatternFinder.cpp, +// -*- mode:c++; tab-width:2; indent-tabs-mode:nil; c-basic-offset:2 -*-, +        return center->combineEstimate(centerI, centerJ, estimatedModuleSize);, +++ b/cpp/core/src/zxing/qrcode/detector/AlignmentPattern.cpp, +// -*- mode:c++; tab-width:2; indent-tabs-mode:nil; c-basic-offset:2 -*-, +  if (abs(i - getY()) <= moduleSize && abs(j - getX()) <= moduleSize) {, +    float moduleSizeDiff = abs(moduleSize - estimatedModuleSize_);, +    return moduleSizeDiff <= 1.0f || moduleSizeDiff <= estimatedModuleSize_;, +  }, +  return false;, +}, +, +Ref<AlignmentPattern> AlignmentPattern::combineEstimate(float i, float j, float newModuleSize) const {, +  float combinedX = (getX() + j) / 2.0f;, +  float combinedY = (getY() + i) / 2.0f;, +  float combinedModuleSize = (estimatedModuleSize_ + newModuleSize) / 2.0f;, +  Ref<AlignmentPattern> result, +    (new AlignmentPattern(combinedX, combinedY, combinedModuleSize));, +  return result;, +++ b/cpp/core/src/zxing/qrcode/detector/AlignmentPattern.h, +// -*- mode:c++; tab-width:2; indent-tabs-mode:nil; c-basic-offset:2 -*-, +, +      Ref<AlignmentPattern> combineEstimate(float i, float j,, +                                            float newModuleSize) const;, +++ b/cpp/core/src/zxing/qrcode/detector/AlignmentPatternFinder.cpp, +// -*- mode:c++; tab-width:2; indent-tabs-mode:nil; c-basic-offset:2 -*-, +        return center->combineEstimate(centerI, centerJ, estimatedModuleSize);, +++ b/cpp/core/src/zxing/qrcode/detector/FinderPattern.cpp, +// -*- mode:c++; tab-width:2; indent-tabs-mode:nil; c-basic-offset:2 -*-, +		posX_(posX), posY_(posY), estimatedModuleSize_(estimatedModuleSize), count_(1) {, +		}, +		, +		FinderPattern::FinderPattern(float posX, float posY, float estimatedModuleSize, int count) :, +		posX_(posX), posY_(posY), estimatedModuleSize_(estimatedModuleSize), count_(count) {, +			return count_;, +			count_++;, +/*, +*/, +    bool FinderPattern::aboutEquals(float moduleSize, float i, float j) const {, +      if (abs(i - getY()) <= moduleSize && abs(j - getX()) <= moduleSize) {, +        float moduleSizeDiff = abs(moduleSize - estimatedModuleSize_);, +        return moduleSizeDiff <= 1.0f || moduleSizeDiff <= estimatedModuleSize_;]