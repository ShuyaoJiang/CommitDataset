[+++ b/core/src/com/google/zxing/common/detector/WhiteRectangleDetector.java, +        ResultPoint x=null, y=null, z=null, t=null;, +        final int max_size = right-left;, +        for (int i = 1; i < max_size; i++){, +            ResultPoint a = new ResultPoint(left, down-i);, +            ResultPoint b = new ResultPoint(left+i, down);, +            z = getBlackPointOnSegment(a, b);, +            if (z != null){, +                break;, +            }, +        }, +        if (z == null){, +            throw NotFoundException.getNotFoundInstance();, +        }, +, +        //go down right, +        for (int i = 1; i < max_size; i++){, +            ResultPoint a = new ResultPoint(left, up+i);, +            ResultPoint b = new ResultPoint(left+i, up);, +            t = getBlackPointOnSegment(a, b);, +            if (t != null){, +                break;, +            }, +        }, +        , +        if (t == null){, +            throw NotFoundException.getNotFoundInstance();, +        }, +        , +        //go down left, +        for (int i = 1; i < max_size; i++){, +            ResultPoint a = new ResultPoint(right, up+i);, +            ResultPoint b = new ResultPoint(right-i, up);, +            x = getBlackPointOnSegment(a, b);, +            if (x != null){, +                break;, +            }, +        }, +        , +        if (x == null){, +            throw NotFoundException.getNotFoundInstance();, +        }, +        , +        //go up left, +        for (int i = 1; i < max_size; i++){, +            ResultPoint a = new ResultPoint(right, down-i);, +            ResultPoint b = new ResultPoint(right-i, down);, +            y = getBlackPointOnSegment(a, b);, +            if (y != null){, +                break;, +            }, +        }, +        , +        if (y == null){, +            throw NotFoundException.getNotFoundInstance();, +, +    private ResultPoint getBlackPointOnSegment(ResultPoint a, ResultPoint b) {, +        int dist = distanceL2(a, b);, +        float xStep = (b.getX()-a.getX())/dist;, +        float yStep = (b.getY()-a.getY())/dist;, +        , +        for (int i = 0; i < dist; i++){, +            if (image.get(Math.round(a.getX()+i*xStep), Math.round(a.getY()+i*yStep))){, +                return new ResultPoint(Math.round(a.getX()+i*xStep), Math.round(a.getY()+i*yStep));, +            }, +        }, +        return null;, +    }, +, +    private static int distanceL2(ResultPoint a, ResultPoint b) {, +        return (int) Math.round(Math.sqrt((a.getX() - b.getX()), +                * (a.getX() - b.getX()) + (a.getY() - b.getY()), +                * (a.getY() - b.getY())));, +    }, +, +++ b/core/src/com/google/zxing/common/detector/WhiteRectangleDetector.java, +        ResultPoint x=null, y=null, z=null, t=null;, +        final int max_size = right-left;, +        for (int i = 1; i < max_size; i++){, +            ResultPoint a = new ResultPoint(left, down-i);, +            ResultPoint b = new ResultPoint(left+i, down);, +            z = getBlackPointOnSegment(a, b);, +            if (z != null){, +                break;, +            }, +        }, +        if (z == null){, +            throw NotFoundException.getNotFoundInstance();, +        }, +, +        //go down right, +        for (int i = 1; i < max_size; i++){, +            ResultPoint a = new ResultPoint(left, up+i);, +            ResultPoint b = new ResultPoint(left+i, up);, +            t = getBlackPointOnSegment(a, b);, +            if (t != null){, +                break;, +            }, +        }, +        ]