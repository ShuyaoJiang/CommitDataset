[+++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +        drawLine(canvas, paint, points[0], points[1]);, +      } else if (points.length == 4 &&, +                 (rawResult.getBarcodeFormat().equals(BarcodeFormat.UPC_A)) ||, +                 (rawResult.getBarcodeFormat().equals(BarcodeFormat.EAN_13))) {, +        // Hacky special case -- draw two lines, for the barcode and metadata, +        drawLine(canvas, paint, points[0], points[1]);, +        drawLine(canvas, paint, points[2], points[3]);, +  private static void drawLine(Canvas canvas, Paint paint, ResultPoint a, ResultPoint b) {, +    canvas.drawLine(a.getX(), a.getY(), b.getX(), b.getY(), paint);, +  }, +, +++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +        drawLine(canvas, paint, points[0], points[1]);, +      } else if (points.length == 4 &&, +                 (rawResult.getBarcodeFormat().equals(BarcodeFormat.UPC_A)) ||, +                 (rawResult.getBarcodeFormat().equals(BarcodeFormat.EAN_13))) {, +        // Hacky special case -- draw two lines, for the barcode and metadata, +        drawLine(canvas, paint, points[0], points[1]);, +        drawLine(canvas, paint, points[2], points[3]);, +  private static void drawLine(Canvas canvas, Paint paint, ResultPoint a, ResultPoint b) {, +    canvas.drawLine(a.getX(), a.getY(), b.getX(), b.getY(), paint);, +  }, +, +++ b/core/src/com/google/zxing/Result.java, +  private ResultPoint[] resultPoints;, +  public void addResultPoints(ResultPoint[] newPoints) {, +    if (resultPoints == null) {, +      resultPoints = newPoints;, +    } else if (newPoints != null && newPoints.length > 0) {, +      ResultPoint[] allPoints = new ResultPoint[resultPoints.length + newPoints.length];, +      System.arraycopy(resultPoints, 0, allPoints, 0, resultPoints.length);, +      System.arraycopy(newPoints, 0, allPoints, resultPoints.length, newPoints.length);, +      resultPoints = allPoints;, +    }, +  }, +, +++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +        drawLine(canvas, paint, points[0], points[1]);, +      } else if (points.length == 4 &&, +                 (rawResult.getBarcodeFormat().equals(BarcodeFormat.UPC_A)) ||, +                 (rawResult.getBarcodeFormat().equals(BarcodeFormat.EAN_13))) {, +        // Hacky special case -- draw two lines, for the barcode and metadata, +        drawLine(canvas, paint, points[0], points[1]);, +        drawLine(canvas, paint, points[2], points[3]);, +  private static void drawLine(Canvas canvas, Paint paint, ResultPoint a, ResultPoint b) {, +    canvas.drawLine(a.getX(), a.getY(), b.getX(), b.getY(), paint);, +  }, +, +++ b/core/src/com/google/zxing/Result.java, +  private ResultPoint[] resultPoints;, +  public void addResultPoints(ResultPoint[] newPoints) {, +    if (resultPoints == null) {, +      resultPoints = newPoints;, +    } else if (newPoints != null && newPoints.length > 0) {, +      ResultPoint[] allPoints = new ResultPoint[resultPoints.length + newPoints.length];, +      System.arraycopy(resultPoints, 0, allPoints, 0, resultPoints.length);, +      System.arraycopy(newPoints, 0, allPoints, resultPoints.length, newPoints.length);, +      resultPoints = allPoints;, +    }, +  }, +, +++ b/core/src/com/google/zxing/oned/UPCEANExtensionSupport.java, +import com.google.zxing.ResultPoint;, +  Result decodeRow(int rowNumber, BitArray row, int rowOffset) throws NotFoundException {, +    int end = decodeMiddle(row, extensionStartRange, result);, +    Result extensionResult =, +        new Result(resultString,, +                   null,, +                   new ResultPoint[] {, +                       new ResultPoint((extensionStartRange[0] + extensionStartRange[1]) / 2.0f, (float) rowNumber),, +                       new ResultPoint((float) end, (float) rowNumber),, +                   },, +                   BarcodeFormat.UPC_EAN_EXTENSION);, +      if (x != 4) {, +        // Read off separator if not last, +    }, +++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +        drawLine(canvas, paint, points[0], points[1]);, +      } else if (points.length == 4 &&, +                 (rawResult.getBarcodeFormat().equals(BarcodeFormat.UPC_A)) ||, +                 (rawResult.getBarcodeFormat().equals(BarcodeFormat.EAN_13))) {, +        // Hacky special case -- draw two lines, for the barcode and metadata, +        drawLine(canvas, paint, points[0], points[1]);, +        drawLine(canvas, paint, points[2], points[3]);, +  private static void drawLine(Canvas canvas, Paint paint, ResultPoint a, ResultPoint b) {, +    canvas.drawLine(a.getX(), a.getY(), b.getX(), b.getY(), paint);, +  }, +, +++ b/core/src/com/google/zxing/Result.java, +  private ResultPoint[] resultPoints;, +  public void addResultPoints(ResultPoint[] newPoints) {, +    if (resultPoints == null) {, +      resultPoints = newPoints;, +    } else if (newPoints != null && newPoints.length > 0) {, +      ResultPoint[] allPoints = new ResultPoint[resultPoints.length + newPoints.length];, +      System.arraycopy(resultPoints, 0, allPoints, 0, resultPoints.length);, +      System.arraycopy(newPoints, 0, allPoints, resultPoints.length, newPoints.length);, +      resultPoints = allPoints;, +    }]