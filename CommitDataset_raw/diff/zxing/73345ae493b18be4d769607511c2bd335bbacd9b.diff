[+++ b/NOTICE, +NOTICES FOR APACHE COMMONS FILEUPLOAD, IO, LANG, +Copyright 2002-2010 The Apache Software Foundation, +++ b/NOTICE, +NOTICES FOR APACHE COMMONS FILEUPLOAD, IO, LANG, +Copyright 2002-2010 The Apache Software Foundation, +++ b/zxingorg/src/com/google/zxing/web/DecodeServlet.java, +import java.net.HttpURLConnection;, +import java.util.Timer;, +import java.util.TimerTask;, +  private static final Logger log = Logger.getLogger(DecodeServlet.class.getName());, +, +  private static final byte[] REMAINDER_BUFFER = new byte[8192];, +  private static final long GC_HACK_INTERVAL_MS = 60 * 1000;, +  private static final Map<DecodeHintType,Object> HINTS;, +  private static final Map<DecodeHintType,Object> HINTS_PURE;, +  private Timer gcHackTimer;, +    gcHackTimer = new Timer();, +    gcHackTimer.schedule(new TimerTask() {, +      @Override, +      public void run() {, +        System.gc(); // Hack: GC may close these weird stuck CLOSE_WAIT sockets?, +      }, +    }, GC_HACK_INTERVAL_MS, GC_HACK_INTERVAL_MS);, +  protected void doGet(HttpServletRequest request,, +                       HttpServletResponse response) throws ServletException, IOException {, +, +    HttpURLConnection connection = (HttpURLConnection) imageURI.toURL().openConnection();, +    connection.setAllowUserInteraction(false);, +    connection.setReadTimeout(5000);, +    connection.setConnectTimeout(5000);, +    connection.setRequestProperty("User-Agent", "zxing.org");, +    connection.setRequestProperty("Connection", "close");, +        connection.connect();, +      InputStream is = null;, +      try {, +, +        is = connection.getInputStream();, +, +        if (connection.getResponseCode() != HttpServletResponse.SC_OK) {, +            log.fine("Unsuccessful return code: " + connection.getResponseCode());, +        if (connection.getHeaderFieldInt("Content-Length", 0) > MAX_IMAGE_SIZE) {, +, +      } catch (IOException ioe) {, +        if (log.isLoggable(Level.FINE)) {, +          log.fine(ioe.toString());, +        }, +        response.sendRedirect("badurl.jspx");, +        if (is != null) {, +          consumeRemainder(is);, +    } finally {, +      connection.disconnect();, +    }, +, +  }, +, +  private static void consumeRemainder(InputStream is) {, +    try {, +      int available;, +      while ((available = is.available()) > 0) {, +        is.read(REMAINDER_BUFFER, 0, available); // don't care about value, or collision, +      }, +    } catch (IOException ioe) {, +      // continue, +    }, +  private static void processStream(InputStream is,, +                                    ServletRequest request,, +    gcHackTimer.cancel();, +++ b/NOTICE, +NOTICES FOR APACHE COMMONS FILEUPLOAD, IO, LANG, +Copyright 2002-2010 The Apache Software Foundation, +++ b/zxingorg/src/com/google/zxing/web/DecodeServlet.java, +import java.net.HttpURLConnection;, +import java.util.Timer;, +import java.util.TimerTask;, +  private static final Logger log = Logger.getLogger(DecodeServlet.class.getName());, +, +  private static final byte[] REMAINDER_BUFFER = new byte[8192];, +  private static final long GC_HACK_INTERVAL_MS = 60 * 1000;, +  private static final Map<DecodeHintType,Object> HINTS;, +  private static final Map<DecodeHintType,Object> HINTS_PURE;, +  private Timer gcHackTimer;, +    gcHackTimer = new Timer();, +    gcHackTimer.schedule(new TimerTask() {, +      @Override, +      public void run() {, +        System.gc(); // Hack: GC may close these weird stuck CLOSE_WAIT sockets?, +      }, +    }, GC_HACK_INTERVAL_MS, GC_HACK_INTERVAL_MS);, +  protected void doGet(HttpServletRequest request,, +                       HttpServletResponse response) throws ServletException, IOException {, +, +    HttpURLConnection connection = (HttpURLConnection) imageURI.toURL().openConnection();, +    connection.setAllowUserInteraction(false);, +    connection.setReadTimeout(5000);, +    connection.setConnectTimeout(5000);, +    connection.setRequestProperty("User-Agent", "zxing.org");, +    connection.setRequestProperty("Connection", "close");, +        connection.connect();, +      InputStream is = null;]