[+++ b/core/src/com/google/zxing/client/result/EmailDoCoMoResultParser.java, +  private static final char[] ATEXT_SYMBOLS =, +      {'@','.','!','#','$','%','&','\'','*','+','-','/','=','?','^','_','`','{','|','}','~'};, +, +   * an '@' contains no characters disallowed by RFC 2822. This is an overly lenient definition of, +   * validity. We want to generally be lenient here since this class is only intended to encapsulate what's, +      if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c < '0' || c > '9') &&, +          !isAtextSymbol(c)) {, +        return false;, +      }, +      }, +    }, +    return atFound;, +  }, +, +  private static boolean isAtextSymbol(char c) {, +    for (int i = 0; i < ATEXT_SYMBOLS.length; i++) {, +      if (c == ATEXT_SYMBOLS[i]) {, +        return true;, +      }, +    }, +++ b/core/src/com/google/zxing/client/result/EmailDoCoMoResultParser.java, +  private static final char[] ATEXT_SYMBOLS =, +      {'@','.','!','#','$','%','&','\'','*','+','-','/','=','?','^','_','`','{','|','}','~'};, +, +   * an '@' contains no characters disallowed by RFC 2822. This is an overly lenient definition of, +   * validity. We want to generally be lenient here since this class is only intended to encapsulate what's, +      if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c < '0' || c > '9') &&, +          !isAtextSymbol(c)) {, +        return false;, +      }, +      }, +    }, +    return atFound;, +  }, +, +  private static boolean isAtextSymbol(char c) {, +    for (int i = 0; i < ATEXT_SYMBOLS.length; i++) {, +      if (c == ATEXT_SYMBOLS[i]) {, +        return true;, +      }, +    }, +++ b/core/test/src/com/google/zxing/client/result/ParsedReaderResultTestCase.java, +    doTestResult("srowen@example", "srowen@example", ParsedResultType.EMAIL_ADDRESS);]