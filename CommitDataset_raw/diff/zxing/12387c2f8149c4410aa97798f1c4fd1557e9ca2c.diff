[+++ b/cpp/core/src/zxing/common/GreyscaleLuminanceSource.cpp, +Ref<LuminanceSource> GreyscaleLuminanceSource::rotateCounterClockwise() const {, +                                          top_, left_, getHeight(), getWidth()));, +++ b/cpp/core/src/zxing/common/GreyscaleLuminanceSource.cpp, +Ref<LuminanceSource> GreyscaleLuminanceSource::rotateCounterClockwise() const {, +                                          top_, left_, getHeight(), getWidth()));, +++ b/cpp/core/src/zxing/common/GreyscaleLuminanceSource.h, +  Ref<LuminanceSource> rotateCounterClockwise() const;, +++ b/cpp/core/src/zxing/common/GreyscaleLuminanceSource.cpp, +Ref<LuminanceSource> GreyscaleLuminanceSource::rotateCounterClockwise() const {, +                                          top_, left_, getHeight(), getWidth()));, +++ b/cpp/core/src/zxing/common/GreyscaleLuminanceSource.h, +  Ref<LuminanceSource> rotateCounterClockwise() const;, +++ b/cpp/core/src/zxing/common/GreyscaleRotatedLuminanceSource.h, +++ b/cpp/core/src/zxing/common/GreyscaleLuminanceSource.cpp, +Ref<LuminanceSource> GreyscaleLuminanceSource::rotateCounterClockwise() const {, +                                          top_, left_, getHeight(), getWidth()));, +++ b/cpp/core/src/zxing/common/GreyscaleLuminanceSource.h, +  Ref<LuminanceSource> rotateCounterClockwise() const;, +++ b/cpp/core/src/zxing/common/GreyscaleRotatedLuminanceSource.h, +++ b/cpp/zxing-cpp.xcodeproj/project.pbxproj, +		3B6AA6711710C83200DF84C0 /* InvertedLuminanceSource.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3B6AA6701710C83200DF84C0 /* InvertedLuminanceSource.cpp */; };, +		3B6AA6701710C83200DF84C0 /* InvertedLuminanceSource.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = InvertedLuminanceSource.cpp; sourceTree = "<group>"; };, +				3B6AA6701710C83200DF84C0 /* InvertedLuminanceSource.cpp */,, +				3B6AA6711710C83200DF84C0 /* InvertedLuminanceSource.cpp in Sources */,, +++ b/cpp/core/src/zxing/common/GreyscaleLuminanceSource.cpp, +Ref<LuminanceSource> GreyscaleLuminanceSource::rotateCounterClockwise() const {, +                                          top_, left_, getHeight(), getWidth()));, +++ b/cpp/core/src/zxing/common/GreyscaleLuminanceSource.h, +  Ref<LuminanceSource> rotateCounterClockwise() const;, +++ b/cpp/core/src/zxing/common/GreyscaleRotatedLuminanceSource.h, +++ b/cpp/zxing-cpp.xcodeproj/project.pbxproj, +		3B6AA6711710C83200DF84C0 /* InvertedLuminanceSource.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3B6AA6701710C83200DF84C0 /* InvertedLuminanceSource.cpp */; };, +		3B6AA6701710C83200DF84C0 /* InvertedLuminanceSource.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = InvertedLuminanceSource.cpp; sourceTree = "<group>"; };, +				3B6AA6701710C83200DF84C0 /* InvertedLuminanceSource.cpp */,, +				3B6AA6711710C83200DF84C0 /* InvertedLuminanceSource.cpp in Sources */,, +++ b/iphone/ZXingWidget/ZXingWidget.xcodeproj/project.pbxproj, +		3B6AA66C1710C34600DF84C0 /* InvertedLuminanceSource.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3B6AA66A1710C34600DF84C0 /* InvertedLuminanceSource.cpp */; };, +		3B6AA66D1710C34600DF84C0 /* InvertedLuminanceSource.h in Headers */ = {isa = PBXBuildFile; fileRef = 3B6AA66B1710C34600DF84C0 /* InvertedLuminanceSource.h */; };, +		3B6AA66A1710C34600DF84C0 /* InvertedLuminanceSource.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = InvertedLuminanceSource.cpp; sourceTree = "<group>"; };, +		3B6AA66B1710C34600DF84C0 /* InvertedLuminanceSource.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = InvertedLuminanceSource.h; sourceTree = "<group>"; };, +				3B6AA66A1710C34600DF84C0 /* InvertedLuminanceSource.cpp */,, +				3B6AA66B1710C34600DF84C0 /* InvertedLuminanceSource.h */,, +				3B6AA66D1710C34600DF84C0 /* InvertedLuminanceSource.h in Headers */,, +				3B6AA66C1710C34600DF84C0 /* InvertedLuminanceSource.cpp in Sources */,, +++ b/cpp/core/src/zxing/common/GreyscaleLuminanceSource.cpp, +Ref<LuminanceSource> GreyscaleLuminanceSource::rotateCounterClockwise() const {, +                                          top_, left_, getHeight(), getWidth()));, +++ b/cpp/core/src/zxing/common/GreyscaleLuminanceSource.h, +  Ref<LuminanceSource> rotateCounterClockwise() const;, +++ b/cpp/core/src/zxing/common/GreyscaleRotatedLuminanceSource.h, +++ b/cpp/zxing-cpp.xcodeproj/project.pbxproj, +		3B6AA6711710C83200DF84C0 /* InvertedLuminanceSource.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3B6AA6701710C83200DF84C0 /* InvertedLuminanceSource.cpp */; };, +		3B6AA6701710C83200DF84C0 /* InvertedLuminanceSource.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = InvertedLuminanceSource.cpp; sourceTree = "<group>"; };, +				3B6AA6701710C83200DF84C0 /* InvertedLuminanceSource.cpp */,, +				3B6AA6711710C83200DF84C0 /* InvertedLuminanceSource.cpp in Sources */,, +++ b/iphone/ZXingWidget/ZXingWidget.xcodeproj/project.pbxproj, +		3B6AA66C1710C34600DF84C0 /* InvertedLuminanceSource.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 3B6AA66A1710C34600DF84C0 /* InvertedLuminanceSource.cpp */; };, +		3B6AA66D1710C34600DF84C0 /* InvertedLuminanceSource.h in Headers */ = {isa = PBXBuildFile; fileRef = 3B6AA66B1710C34600DF84C0 /* InvertedLuminanceSource.h */; };, +		3B6AA66A1710C34600DF84C0 /* InvertedLuminanceSource.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = InvertedLuminanceSource.cpp; sourceTree = "<group>"; };, +		3B6AA66B1710C34600DF84C0 /* InvertedLuminanceSource.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = InvertedLuminanceSource.h; sourceTree = "<group>"; };, +				3B6AA66A1710C34600DF84C0 /* InvertedLuminanceSource.cpp */,, +				3B6AA66B1710C34600DF84C0 /* InvertedLuminanceSource.h */,, +				3B6AA66D1710C34600DF84C0 /* InvertedLuminanceSource.h in Headers */,, +				3B6AA66C1710C34600DF84C0 /* InvertedLuminanceSource.cpp in Sources */,, +++ b/objc/src/ZXing/CGImageLuminanceSource.mm, +CGImageLuminanceSource* CGImageLuminanceSource::create(CVPixelBufferRef buffer) {, +  // Will leak if there's an exception ..., +  CGImageLuminanceSource* source = new CGImageLuminanceSource(image);, +  return source;, +CGImageLuminanceSource::CGImageLuminanceSource(CVPixelBufferRef buffer,, +                                               int left, int top, int width, int height), +: Super(width, height) { , +: Super((int)CGImageGetWidth(cgimage), (int)CGImageGetHeight(cgimage)) {, +CGImageLuminanceSource::CGImageLuminanceSource(CGImageRef cgimage,, +                                               int left,, +                                               int top,, +                                               int width,, +                                               int height), +: Super(width, height) {, +  init(cgimage, left, top);, +CGImageLuminanceSource::init(CGImageRef cgimage) {, +  init(cgimage, 0, 0);, +CGImageLuminanceSource::init(CGImageRef cgimage, int left, int top) {, +  if (left_ + getWidth() > dataWidth_ ||, +      top_ + getHeight() > dataHeight_ ||, +                                             getWidth(),, +                                             getHeight(), , +                                             getWidth(),, +      CGContextClipToRect(ctx, CGRectMake(0, 0, getWidth(), getHeight()));, +    CGContextDrawImage(ctx, CGRectMake(-left, -top, getWidth(), getHeight()), image_);, +    bytesPerRow_ = getWidth();, +    dataWidth_ = getWidth();, +    dataHeight_ = getHeight();, +ArrayRef<char> CGImageLuminanceSource::getRow(int y, ArrayRef<char> row) const {, +    row = ArrayRef<char>(getWidth());, +ArrayRef<char> CGImageLuminanceSource::getMatrix() const {, +  int size = getWidth() * getHeight();, +      dataWidth_ == getWidth() &&, +      dataHeight_ == getHeight()) {]