[+++ b/cpp/core/src/zxing/common/Counted.h, +  bool empty() const {, +    return object_ == 0;, +  }, +, +++ b/cpp/core/src/zxing/common/Counted.h, +  bool empty() const {, +    return object_ == 0;, +  }, +, +++ b/cpp/core/src/zxing/oned/Code128Reader.cpp, +							unsigned int variance = patternMatchVariance(counters, sizeof(counters) / sizeof(int),, +							    CODE_PATTERNS[startCode], MAX_INDIVIDUAL_VARIANCE);, +							if (row->isRange(fmaxl(0, patternStart - (i - patternStart) / 2), patternStart,, +							    false)) {, +		int Code128Reader::decodeCode(Ref<BitArray> row, int counters[], int countersCount,, +		    int rowOffset){, +				unsigned int variance = patternMatchVariance(counters, countersCount, pattern,, +				    MAX_INDIVIDUAL_VARIANCE);, +		  int* startPatternInfo = NULL;, +		  try {, +        startPatternInfo = findStartPattern(row);, +                // Don't let CODE_STOP, which always appears, affect whether whether we think the, +                // last code was printable or not., +        ArrayRef<unsigned char> resultBytes(1);, +        return Ref<Result>(new Result(resultString, resultBytes, resultPoints,, +            BarcodeFormat_CODE_128));, +			} catch (ReaderException const& re) {, +			  delete [] startPatternInfo;, +			  return Ref<Result>();, +			}, +++ b/cpp/core/src/zxing/common/Counted.h, +  bool empty() const {, +    return object_ == 0;, +  }, +, +++ b/cpp/core/src/zxing/oned/Code128Reader.cpp, +							unsigned int variance = patternMatchVariance(counters, sizeof(counters) / sizeof(int),, +							    CODE_PATTERNS[startCode], MAX_INDIVIDUAL_VARIANCE);, +							if (row->isRange(fmaxl(0, patternStart - (i - patternStart) / 2), patternStart,, +							    false)) {, +		int Code128Reader::decodeCode(Ref<BitArray> row, int counters[], int countersCount,, +		    int rowOffset){, +				unsigned int variance = patternMatchVariance(counters, countersCount, pattern,, +				    MAX_INDIVIDUAL_VARIANCE);, +		  int* startPatternInfo = NULL;, +		  try {, +        startPatternInfo = findStartPattern(row);, +                // Don't let CODE_STOP, which always appears, affect whether whether we think the, +                // last code was printable or not., +        ArrayRef<unsigned char> resultBytes(1);, +        return Ref<Result>(new Result(resultString, resultBytes, resultPoints,, +            BarcodeFormat_CODE_128));, +			} catch (ReaderException const& re) {, +			  delete [] startPatternInfo;, +			  return Ref<Result>();, +			}, +++ b/cpp/core/src/zxing/oned/Code39Reader.cpp, +      return Ref<Result>();, +++ b/cpp/core/src/zxing/common/Counted.h, +  bool empty() const {, +    return object_ == 0;, +  }, +, +++ b/cpp/core/src/zxing/oned/Code128Reader.cpp, +							unsigned int variance = patternMatchVariance(counters, sizeof(counters) / sizeof(int),, +							    CODE_PATTERNS[startCode], MAX_INDIVIDUAL_VARIANCE);, +							if (row->isRange(fmaxl(0, patternStart - (i - patternStart) / 2), patternStart,, +							    false)) {, +		int Code128Reader::decodeCode(Ref<BitArray> row, int counters[], int countersCount,, +		    int rowOffset){, +				unsigned int variance = patternMatchVariance(counters, countersCount, pattern,, +				    MAX_INDIVIDUAL_VARIANCE);, +		  int* startPatternInfo = NULL;, +		  try {, +        startPatternInfo = findStartPattern(row);, +                // Don't let CODE_STOP, which always appears, affect whether whether we think the, +                // last code was printable or not., +        ArrayRef<unsigned char> resultBytes(1);, +        return Ref<Result>(new Result(resultString, resultBytes, resultPoints,, +            BarcodeFormat_CODE_128));, +			} catch (ReaderException const& re) {, +			  delete [] startPatternInfo;, +			  return Ref<Result>();, +			}, +++ b/cpp/core/src/zxing/oned/Code39Reader.cpp, +      return Ref<Result>();, +++ b/cpp/core/src/zxing/oned/EAN13Reader.cpp, +    static const int FIRST_DIGIT_ENCODINGS[10] = {, +      0x00, 0x0B, 0x0D, 0xE, 0x13, 0x19, 0x1C, 0x15, 0x16, 0x1A, +    };, +    int EAN13Reader::decodeMiddle(Ref<BitArray> row, int startRange[], int startRangeLen,, +        std::string& resultString){, +        int bestMatch = decodeDigit(row, counters, countersLen, rowOffset,, +            UPC_EAN_PATTERNS_L_AND_G_PATTERNS);, +        middleRange = findGuardPattern(row, rowOffset, true, (int*)getMIDDLE_PATTERN(),, +            getMIDDLE_PATTERN_LEN());, +          int bestMatch = decodeDigit(row, counters, countersLen, rowOffset,, +              UPC_EAN_PATTERNS_L_PATTERNS);, +++ b/cpp/core/src/zxing/common/Counted.h]