[+++ b/android-m3/src/com/google/zxing/client/android/RGBMonochromeBitmapSource.java, +, +    // If the current decoder calculated the blackPoint based on one row, assume we're trying to, +    // decode a 1D barcode, and apply some sharpening., +    // TODO: We may want to add a fifth parameter to request the amount of shapening to be done., +    if (lastMethod == BlackPointEstimationMethod.ROW_SAMPLING) {, +      int left = computeRGBLuminance(pixelRow[0]);, +      int center = computeRGBLuminance(pixelRow[1]);, +      for (int i = 1; i < getWidth - 1; i++) {, +        int right = computeRGBLuminance(pixelRow[i + 1]);, +        // Simple -1 4 -1 box filter with a weight of 2, +        int luminance = ((center << 2) - left - right) >> 1;, +        if (luminance < blackPoint) {, +          row.set(i);, +        }, +        left = center;, +        center = right;, +      }, +    } else {, +    }, +++ b/android-m3/src/com/google/zxing/client/android/RGBMonochromeBitmapSource.java, +, +    // If the current decoder calculated the blackPoint based on one row, assume we're trying to, +    // decode a 1D barcode, and apply some sharpening., +    // TODO: We may want to add a fifth parameter to request the amount of shapening to be done., +    if (lastMethod == BlackPointEstimationMethod.ROW_SAMPLING) {, +      int left = computeRGBLuminance(pixelRow[0]);, +      int center = computeRGBLuminance(pixelRow[1]);, +      for (int i = 1; i < getWidth - 1; i++) {, +        int right = computeRGBLuminance(pixelRow[i + 1]);, +        // Simple -1 4 -1 box filter with a weight of 2, +        int luminance = ((center << 2) - left - right) >> 1;, +        if (luminance < blackPoint) {, +          row.set(i);, +        }, +        left = center;, +        center = right;, +      }, +    } else {, +    }, +++ b/core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java, +      if (expectedFormat != result.getBarcodeFormat()) {, +        System.out.println("Format mismatch: expected '" + expectedFormat + "' but got '" +, +            result.getBarcodeFormat() + '\'');, +        continue;, +      }, +        System.out.println("Mismatch: expected '" + expectedText + "' but got '" + resultText + '\'');, +        continue;, +      if (expectedFormat != result.getBarcodeFormat()) {, +        System.out.println("Try Harder Format mismatch: expected '" + expectedFormat + "' but got '" +, +            result.getBarcodeFormat() + '\'');, +      } else if (!expectedText.equals(resultText)) {, +        System.out.println("Try Harder Mismatch: expected '" + expectedText + "' but got '" +, +            resultText + '\'');, +      }, +++ b/android-m3/src/com/google/zxing/client/android/RGBMonochromeBitmapSource.java, +, +    // If the current decoder calculated the blackPoint based on one row, assume we're trying to, +    // decode a 1D barcode, and apply some sharpening., +    // TODO: We may want to add a fifth parameter to request the amount of shapening to be done., +    if (lastMethod == BlackPointEstimationMethod.ROW_SAMPLING) {, +      int left = computeRGBLuminance(pixelRow[0]);, +      int center = computeRGBLuminance(pixelRow[1]);, +      for (int i = 1; i < getWidth - 1; i++) {, +        int right = computeRGBLuminance(pixelRow[i + 1]);, +        // Simple -1 4 -1 box filter with a weight of 2, +        int luminance = ((center << 2) - left - right) >> 1;, +        if (luminance < blackPoint) {, +          row.set(i);, +        }, +        left = center;, +        center = right;, +      }, +    } else {, +    }, +++ b/core/test/src/com/google/zxing/common/AbstractBlackBoxTestCase.java, +      if (expectedFormat != result.getBarcodeFormat()) {, +        System.out.println("Format mismatch: expected '" + expectedFormat + "' but got '" +, +            result.getBarcodeFormat() + '\'');, +        continue;, +      }, +        System.out.println("Mismatch: expected '" + expectedText + "' but got '" + resultText + '\'');, +        continue;, +      if (expectedFormat != result.getBarcodeFormat()) {, +        System.out.println("Try Harder Format mismatch: expected '" + expectedFormat + "' but got '" +, +            result.getBarcodeFormat() + '\'');, +      } else if (!expectedText.equals(resultText)) {, +        System.out.println("Try Harder Mismatch: expected '" + expectedText + "' but got '" +, +            resultText + '\'');, +      }, +++ b/core/test/src/com/google/zxing/oned/EAN13BlackBox2TestCase.java, +    super(new File("test/data/blackbox/ean13-2"), new MultiFormatReader(), 1, BarcodeFormat.EAN_13);, +++ b/android-m3/src/com/google/zxing/client/android/RGBMonochromeBitmapSource.java, +, +    // If the current decoder calculated the blackPoint based on one row, assume we're trying to, +    // decode a 1D barcode, and apply some sharpening., +    // TODO: We may want to add a fifth parameter to request the amount of shapening to be done., +    if (lastMethod == BlackPointEstimationMethod.ROW_SAMPLING) {, +      int left = computeRGBLuminance(pixelRow[0]);, +      int center = computeRGBLuminance(pixelRow[1]);]