[+++ b/core/build.xml, +          <exclude name="**/Abstract*.java"/>            , +          <exclude name="**/Abstract*.java"/>, +++ b/core/build.xml, +          <exclude name="**/Abstract*.java"/>            , +          <exclude name="**/Abstract*.java"/>, +++ b/core/src/com/google/zxing/ResultMetadataType.java, +  /**, +   * <p>2D barcode formats typically encode text, but allow for a sort of 'byte mode', +   * which is sometimes used to encode binary data. While {@link Result} makes available, +   * the complete raw bytes in the barcode for these formats, it does not offer the bytes, +   * from the byte segments alone.</p>, +   *, +   * <p>This maps to a {@link java.util.Vector} of {@link byte[]}s corresponding to the, +   * raw bytes in the byte segments in the barcode, in order.</p>, +   */, +  public static final ResultMetadataType BYTE_SEGMENTS = new ResultMetadataType();, +, +++ b/core/build.xml, +          <exclude name="**/Abstract*.java"/>            , +          <exclude name="**/Abstract*.java"/>, +++ b/core/src/com/google/zxing/ResultMetadataType.java, +  /**, +   * <p>2D barcode formats typically encode text, but allow for a sort of 'byte mode', +   * which is sometimes used to encode binary data. While {@link Result} makes available, +   * the complete raw bytes in the barcode for these formats, it does not offer the bytes, +   * from the byte segments alone.</p>, +   *, +   * <p>This maps to a {@link java.util.Vector} of {@link byte[]}s corresponding to the, +   * raw bytes in the byte segments in the barcode, in order.</p>, +   */, +  public static final ResultMetadataType BYTE_SEGMENTS = new ResultMetadataType();, +, +++ b/core/src/com/google/zxing/common/DecoderResult.java, +import java.util.Vector;, +, +  private final Vector byteSegments;, +  public DecoderResult(byte[] rawBytes, String text, Vector byteSegments) {, +    this.byteSegments = byteSegments;, +  public Vector getByteSegments() {, +    return byteSegments;, +  }, +, +++ b/core/build.xml, +          <exclude name="**/Abstract*.java"/>            , +          <exclude name="**/Abstract*.java"/>, +++ b/core/src/com/google/zxing/ResultMetadataType.java, +  /**, +   * <p>2D barcode formats typically encode text, but allow for a sort of 'byte mode', +   * which is sometimes used to encode binary data. While {@link Result} makes available, +   * the complete raw bytes in the barcode for these formats, it does not offer the bytes, +   * from the byte segments alone.</p>, +   *, +   * <p>This maps to a {@link java.util.Vector} of {@link byte[]}s corresponding to the, +   * raw bytes in the byte segments in the barcode, in order.</p>, +   */, +  public static final ResultMetadataType BYTE_SEGMENTS = new ResultMetadataType();, +, +++ b/core/src/com/google/zxing/common/DecoderResult.java, +import java.util.Vector;, +, +  private final Vector byteSegments;, +  public DecoderResult(byte[] rawBytes, String text, Vector byteSegments) {, +    this.byteSegments = byteSegments;, +  public Vector getByteSegments() {, +    return byteSegments;, +  }, +, +++ b/core/src/com/google/zxing/datamatrix/DataMatrixReader.java, +import com.google.zxing.ResultMetadataType;, +      DetectorResult detectorResult = new Detector(image).detect();, +      decoderResult = decoder.decode(detectorResult.getBits());, +      points = detectorResult.getPoints();, +    Result result = new Result(decoderResult.getText(), decoderResult.getRawBytes(), points, BarcodeFormat.DATAMATRIX);, +    if (decoderResult.getByteSegments() != null) {, +      result.putMetadata(ResultMetadataType.BYTE_SEGMENTS, decoderResult.getByteSegments());, +    }, +    return result;, +++ b/core/build.xml, +          <exclude name="**/Abstract*.java"/>            , +          <exclude name="**/Abstract*.java"/>, +++ b/core/src/com/google/zxing/ResultMetadataType.java, +  /**, +   * <p>2D barcode formats typically encode text, but allow for a sort of 'byte mode', +   * which is sometimes used to encode binary data. While {@link Result} makes available, +   * the complete raw bytes in the barcode for these formats, it does not offer the bytes, +   * from the byte segments alone.</p>, +   *, +   * <p>This maps to a {@link java.util.Vector} of {@link byte[]}s corresponding to the, +   * raw bytes in the byte segments in the barcode, in order.</p>, +   */, +  public static final ResultMetadataType BYTE_SEGMENTS = new ResultMetadataType();, +, +++ b/core/src/com/google/zxing/common/DecoderResult.java, +import java.util.Vector;, +, +  private final Vector byteSegments;, +  public DecoderResult(byte[] rawBytes, String text, Vector byteSegments) {, +    this.byteSegments = byteSegments;, +  public Vector getByteSegments() {]