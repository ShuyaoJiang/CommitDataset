[+++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/Base256Encoder.java, +        // Return to ASCII encodation, which will actually handle latch to new mode, +        context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION);, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/Base256Encoder.java, +        // Return to ASCII encodation, which will actually handle latch to new mode, +        context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION);, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/C40Encoder.java, +          // Return to ASCII encodation, which will actually handle latch to new mode, +          context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION);, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/Base256Encoder.java, +        // Return to ASCII encodation, which will actually handle latch to new mode, +        context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION);, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/C40Encoder.java, +          // Return to ASCII encodation, which will actually handle latch to new mode, +          context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION);, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/EdifactEncoder.java, +          // Return to ASCII encodation, which will actually handle latch to new mode, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/Base256Encoder.java, +        // Return to ASCII encodation, which will actually handle latch to new mode, +        context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION);, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/C40Encoder.java, +          // Return to ASCII encodation, which will actually handle latch to new mode, +          context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION);, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/EdifactEncoder.java, +          // Return to ASCII encodation, which will actually handle latch to new mode, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/X12Encoder.java, +          // Return to ASCII encodation, which will actually handle latch to new mode, +          context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION);, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/Base256Encoder.java, +        // Return to ASCII encodation, which will actually handle latch to new mode, +        context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION);, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/C40Encoder.java, +          // Return to ASCII encodation, which will actually handle latch to new mode, +          context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION);, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/EdifactEncoder.java, +          // Return to ASCII encodation, which will actually handle latch to new mode, +++ b/core/src/main/java/com/google/zxing/datamatrix/encoder/X12Encoder.java, +          // Return to ASCII encodation, which will actually handle latch to new mode, +          context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION);, +++ b/core/src/test/java/com/google/zxing/datamatrix/encoder/HighLevelEncodeTestCase.java, +  @Test, +  public void testEncodingWithStartAsX12AndLatchToEDIFACTInTheMiddle() {, +, +    String visualized = encodeHighLevel("*MEMANT-1F-MESTECH");, +    assertEquals("238 10 99 164 204 254 240 82 220 70 180 209 83 80 80 200", visualized);, +  }, +]