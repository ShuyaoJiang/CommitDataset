[+++ b/core/src/com/google/zxing/datamatrix/decoder/DecodedBitStreamParser.java, +      int oneByte = bits.readBits(8);, +      if (oneByte == 0) {, +	    	oneByte = upperShift ? (oneByte + 128) : oneByte;, +      int firstByte = bits.readBits(8);, +      int[] cValues = new int[3];, +      cValues[0] = fullBitValue / 1600;, +      cValues[1] = fullBitValue / 40;, +      cValues[2] = fullBitValue;, +        int cValue = cValues[i];, +          if (cValue == 0) {  // Shift 1, +          } else if (cValue == 1) {  // Shift 2, +          } else if (cValue == 2) {  // Shift 3, +            result.append((char) (C40_BASIC_SET_CHARS[cValue] + 128));, +            result.append(C40_BASIC_SET_CHARS[cValue]);, +            result.append((char) (cValue + 128));, +            result.append(cValue);, +          shift = 0;, +          if (cValue < 27) {, +              result.append((char) (C40_SHIFT2_SET_CHARS[cValue] + 128));, +              result.append(C40_SHIFT2_SET_CHARS[cValue]);, +          } else if (cValue == 27) {  // FNC1, +          } else if (cValue == 30) {  // Upper Shift, +            throw new ReaderException(Integer.toString(cValue) + " is not valid in the C40 Shift 2 set");, +          shift = 0;, +            result.append((char) (cValue + 224));, +            result.append((char) (cValue + 96));, +          shift = 0;, +      int firstByte = bits.readBits(8);, +      int[] cValues = new int[3];, +      cValues[0] = fullBitValue / 1600;, +      cValues[1] = fullBitValue / 40;, +      cValues[2] = fullBitValue;, +        int cValue = cValues[i];, +          if (cValue == 0) {  // Shift 1, +          } else if (cValue == 1) {  // Shift 2, +          } else if (cValue == 2) {  // Shift 3, +            result.append((char) (TEXT_BASIC_SET_CHARS[cValue] + 128));, +            result.append(TEXT_BASIC_SET_CHARS[cValue]);, +            result.append((char) (cValue + 128));, +            result.append(cValue);, +          shift = 0;, +          if (cValue < 27) {, +              result.append((char) (C40_SHIFT2_SET_CHARS[cValue] + 128));, +              result.append(C40_SHIFT2_SET_CHARS[cValue]);, +          } else if (cValue == 27) {  // FNC1, +          } else if (cValue == 30) {  // Upper Shirt, +            throw new ReaderException(Integer.toString(cValue) + " is not valid in the C40 Shift 2 set");, +          shift = 0;, +            result.append((char) (TEXT_SHIFT3_SET_CHARS[cValue] + 128));, +            result.append(TEXT_SHIFT3_SET_CHARS[cValue]);, +          shift = 0;, +      int firstByte = bits.readBits(8);, +      int[] cValues = new int[3];, +      cValues[0] = fullBitValue / 1600;, +      cValues[1] = fullBitValue / 40;, +      cValues[2] = fullBitValue;, +        int cValue = cValues[i];, +        if (cValue == 0) {  // X12 segment terminator <CR>, +        } else if (cValue == 1) {  // X12 segment separator *, +        } else if (cValue == 2) {  // X12 sub-element separator >, +        } else if (cValue == 3) {  // space, +        } else if (cValue < 14) {  // 0 - 9, +          result.append((char) (cValue + 44));, +        } else if (cValue < 40) {  // A - Z, +          result.append((char) (cValue + 51));, +          throw new ReaderException(Integer.toString(cValue) + " is not valid in the ANSI X12 set");, +        int edifactValue = bits.readBits(6);, +    int d1 = bits.readBits(8);, +      result.append(unrandomize255State(bits.readBits(8), count));, +  private static char unrandomize255State(int randomizedBase256Codeword,, +    int pseudoRandomNumber = ((149 * base256CodewordPosition) % 255) + 1;]