[+++ b/android-integration/src/com/google/zxing/integration/android/IntentIntegrator.java, +        int intentOrientation = intent.getIntExtra("SCAN_RESULT_ORIENTATION", Integer.MIN_VALUE);, +        Integer orientation = intentOrientation == Integer.MIN_VALUE ? null : intentOrientation;, +        String errorCorrectionLevel = intent.getStringExtra("SCAN_RESULT_ERROR_CORRECTION_LEVEL");, +        return new IntentResult(contents,, +                                formatName,, +                                rawBytes,, +                                orientation,, +                                errorCorrectionLevel);, +++ b/android-integration/src/com/google/zxing/integration/android/IntentIntegrator.java, +        int intentOrientation = intent.getIntExtra("SCAN_RESULT_ORIENTATION", Integer.MIN_VALUE);, +        Integer orientation = intentOrientation == Integer.MIN_VALUE ? null : intentOrientation;, +        String errorCorrectionLevel = intent.getStringExtra("SCAN_RESULT_ERROR_CORRECTION_LEVEL");, +        return new IntentResult(contents,, +                                formatName,, +                                rawBytes,, +                                orientation,, +                                errorCorrectionLevel);, +++ b/android-integration/src/com/google/zxing/integration/android/IntentResult.java, +  private final Integer orientation;, +  private final String errorCorrectionLevel;, +    this(null, null, null, null, null);, +  IntentResult(String contents,, +               String formatName,, +               byte[] rawBytes,, +               Integer orientation,, +               String errorCorrectionLevel) {, +    this.orientation = orientation;, +    this.errorCorrectionLevel = errorCorrectionLevel;, +  /**, +   * @return rotation of the image, in degrees, which resulted in a successful scan. May be null., +   */, +  public Integer getOrientation() {, +    return orientation;, +  }, +, +  /**, +   * @return name of the error correction level used in the barcode, if applicable, +   */, +  public String getErrorCorrectionLevel() {, +    return errorCorrectionLevel;, +  }, +  , +  @Override, +  public String toString() {, +    StringBuilder dialogText = new StringBuilder(100);, +    dialogText.append("Format: ").append(formatName).append('\n');, +    dialogText.append("Contents: ").append(contents).append('\n');, +    int rawBytesLength = rawBytes == null ? 0 : rawBytes.length;, +    dialogText.append("Raw bytes: (").append(rawBytesLength).append(" bytes)\n");, +    dialogText.append("Orientation: ").append(orientation).append('\n');, +    dialogText.append("EC level: ").append(errorCorrectionLevel).append('\n');, +    return dialogText.toString();, +  }, +, +++ b/android-integration/src/com/google/zxing/integration/android/IntentIntegrator.java, +        int intentOrientation = intent.getIntExtra("SCAN_RESULT_ORIENTATION", Integer.MIN_VALUE);, +        Integer orientation = intentOrientation == Integer.MIN_VALUE ? null : intentOrientation;, +        String errorCorrectionLevel = intent.getStringExtra("SCAN_RESULT_ERROR_CORRECTION_LEVEL");, +        return new IntentResult(contents,, +                                formatName,, +                                rawBytes,, +                                orientation,, +                                errorCorrectionLevel);, +++ b/android-integration/src/com/google/zxing/integration/android/IntentResult.java, +  private final Integer orientation;, +  private final String errorCorrectionLevel;, +    this(null, null, null, null, null);, +  IntentResult(String contents,, +               String formatName,, +               byte[] rawBytes,, +               Integer orientation,, +               String errorCorrectionLevel) {, +    this.orientation = orientation;, +    this.errorCorrectionLevel = errorCorrectionLevel;, +  /**, +   * @return rotation of the image, in degrees, which resulted in a successful scan. May be null., +   */, +  public Integer getOrientation() {, +    return orientation;, +  }, +, +  /**, +   * @return name of the error correction level used in the barcode, if applicable, +   */, +  public String getErrorCorrectionLevel() {, +    return errorCorrectionLevel;, +  }, +  , +  @Override, +  public String toString() {, +    StringBuilder dialogText = new StringBuilder(100);, +    dialogText.append("Format: ").append(formatName).append('\n');, +    dialogText.append("Contents: ").append(contents).append('\n');, +    int rawBytesLength = rawBytes == null ? 0 : rawBytes.length;, +    dialogText.append("Raw bytes: (").append(rawBytesLength).append(" bytes)\n");, +    dialogText.append("Orientation: ").append(orientation).append('\n');, +    dialogText.append("EC level: ").append(errorCorrectionLevel).append('\n');, +    return dialogText.toString();, +  }]