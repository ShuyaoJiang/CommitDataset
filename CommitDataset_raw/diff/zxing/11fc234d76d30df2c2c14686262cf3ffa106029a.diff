[+++ b/core/src/com/google/zxing/client/result/AbstractNDEFParsedResult.java, +      // This should only be used when 'encoding' is an encoding that must necessarily, +      // be supported by the JVM, like UTF-8, +++ b/core/src/com/google/zxing/client/result/AbstractNDEFParsedResult.java, +      // This should only be used when 'encoding' is an encoding that must necessarily, +      // be supported by the JVM, like UTF-8, +++ b/core/src/com/google/zxing/client/result/AddressBookAUParsedResult.java, +    if (rawText == null || rawText.indexOf("MEMORY") < 0 || rawText.indexOf("\r\n") < 0) {, +++ b/core/src/com/google/zxing/client/result/AbstractNDEFParsedResult.java, +      // This should only be used when 'encoding' is an encoding that must necessarily, +      // be supported by the JVM, like UTF-8, +++ b/core/src/com/google/zxing/client/result/AddressBookAUParsedResult.java, +    if (rawText == null || rawText.indexOf("MEMORY") < 0 || rawText.indexOf("\r\n") < 0) {, +++ b/core/src/com/google/zxing/client/result/AddressBookDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MECARD:")) {, +++ b/core/src/com/google/zxing/client/result/AbstractNDEFParsedResult.java, +      // This should only be used when 'encoding' is an encoding that must necessarily, +      // be supported by the JVM, like UTF-8, +++ b/core/src/com/google/zxing/client/result/AddressBookAUParsedResult.java, +    if (rawText == null || rawText.indexOf("MEMORY") < 0 || rawText.indexOf("\r\n") < 0) {, +++ b/core/src/com/google/zxing/client/result/AddressBookDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MECARD:")) {, +++ b/core/src/com/google/zxing/client/result/BookmarkDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MEBKM:")) {, +++ b/core/src/com/google/zxing/client/result/AbstractNDEFParsedResult.java, +      // This should only be used when 'encoding' is an encoding that must necessarily, +      // be supported by the JVM, like UTF-8, +++ b/core/src/com/google/zxing/client/result/AddressBookAUParsedResult.java, +    if (rawText == null || rawText.indexOf("MEMORY") < 0 || rawText.indexOf("\r\n") < 0) {, +++ b/core/src/com/google/zxing/client/result/AddressBookDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MECARD:")) {, +++ b/core/src/com/google/zxing/client/result/BookmarkDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MEBKM:")) {, +++ b/core/src/com/google/zxing/client/result/EmailAddressParsedResult.java, +    if (rawText != null && rawText.startsWith("mailto:")) {, +++ b/core/src/com/google/zxing/client/result/AbstractNDEFParsedResult.java, +      // This should only be used when 'encoding' is an encoding that must necessarily, +      // be supported by the JVM, like UTF-8, +++ b/core/src/com/google/zxing/client/result/AddressBookAUParsedResult.java, +    if (rawText == null || rawText.indexOf("MEMORY") < 0 || rawText.indexOf("\r\n") < 0) {, +++ b/core/src/com/google/zxing/client/result/AddressBookDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MECARD:")) {, +++ b/core/src/com/google/zxing/client/result/BookmarkDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MEBKM:")) {, +++ b/core/src/com/google/zxing/client/result/EmailAddressParsedResult.java, +    if (rawText != null && rawText.startsWith("mailto:")) {, +++ b/core/src/com/google/zxing/client/result/EmailDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MATMSG:")) {, +    if (email == null) {, +      return false;, +    }, +++ b/core/src/com/google/zxing/client/result/AbstractNDEFParsedResult.java, +      // This should only be used when 'encoding' is an encoding that must necessarily, +      // be supported by the JVM, like UTF-8, +++ b/core/src/com/google/zxing/client/result/AddressBookAUParsedResult.java, +    if (rawText == null || rawText.indexOf("MEMORY") < 0 || rawText.indexOf("\r\n") < 0) {, +++ b/core/src/com/google/zxing/client/result/AddressBookDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MECARD:")) {, +++ b/core/src/com/google/zxing/client/result/BookmarkDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MEBKM:")) {, +++ b/core/src/com/google/zxing/client/result/EmailAddressParsedResult.java, +    if (rawText != null && rawText.startsWith("mailto:")) {, +++ b/core/src/com/google/zxing/client/result/EmailDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MATMSG:")) {, +    if (email == null) {, +      return false;, +    }, +++ b/core/src/com/google/zxing/client/result/GeoParsedResult.java, +    if (rawText == null || !rawText.startsWith("geo:")) {, +++ b/core/src/com/google/zxing/client/result/AbstractNDEFParsedResult.java, +      // This should only be used when 'encoding' is an encoding that must necessarily, +      // be supported by the JVM, like UTF-8, +++ b/core/src/com/google/zxing/client/result/AddressBookAUParsedResult.java, +    if (rawText == null || rawText.indexOf("MEMORY") < 0 || rawText.indexOf("\r\n") < 0) {, +++ b/core/src/com/google/zxing/client/result/AddressBookDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MECARD:")) {, +++ b/core/src/com/google/zxing/client/result/BookmarkDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MEBKM:")) {, +++ b/core/src/com/google/zxing/client/result/EmailAddressParsedResult.java, +    if (rawText != null && rawText.startsWith("mailto:")) {, +++ b/core/src/com/google/zxing/client/result/EmailDoCoMoParsedResult.java, +    if (rawText == null || !rawText.startsWith("MATMSG:")) {, +    if (email == null) {, +      return false;, +    }, +++ b/core/src/com/google/zxing/client/result/GeoParsedResult.java, +    if (rawText == null || !rawText.startsWith("geo:")) {, +++ b/core/src/com/google/zxing/client/result/NDEFRecord.java, +/*, + * Copyright 2008 Google Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.]