[+++ b/core/src/main/java/com/google/zxing/common/BitMatrix.java, +  /**, +   * Creates an empty square {@link BitMatrix}., +   *, +   * @param dimension height and width, +   */, +  /**, +   * Creates an empty {@link BitMatrix}., +   *, +   * @param width bit matrix width, +   * @param height bit matrix height, +   */, +  /**, +   * Interprets a 2D array of booleans as a {@link BitMatrix}, where "true" means an "on" bit., +   *, +   * @param image bits of the image, as a row-major 2D array. Elements are arrays representing rows, +   * @return {@link BitMatrix} representation of image, +   */, +  public static BitMatrix parse(boolean[][] image) {, +    int height = image.length;, +    int width = image[0].length;, +    BitMatrix bits = new BitMatrix(width, height);, +    for (int i = 0; i < height; i++) {, +      boolean[] imageI = image[i];, +      for (int j = 0; j < width; j++) {, +        if (imageI[j]) {, +          bits.set(j, i);, +        }, +      }, +    }, +    return bits;, +  }, +, +++ b/core/src/main/java/com/google/zxing/common/BitMatrix.java, +  /**, +   * Creates an empty square {@link BitMatrix}., +   *, +   * @param dimension height and width, +   */, +  /**, +   * Creates an empty {@link BitMatrix}., +   *, +   * @param width bit matrix width, +   * @param height bit matrix height, +   */, +  /**, +   * Interprets a 2D array of booleans as a {@link BitMatrix}, where "true" means an "on" bit., +   *, +   * @param image bits of the image, as a row-major 2D array. Elements are arrays representing rows, +   * @return {@link BitMatrix} representation of image, +   */, +  public static BitMatrix parse(boolean[][] image) {, +    int height = image.length;, +    int width = image[0].length;, +    BitMatrix bits = new BitMatrix(width, height);, +    for (int i = 0; i < height; i++) {, +      boolean[] imageI = image[i];, +      for (int j = 0; j < width; j++) {, +        if (imageI[j]) {, +          bits.set(j, i);, +        }, +      }, +    }, +    return bits;, +  }, +, +++ b/core/src/main/java/com/google/zxing/datamatrix/decoder/Decoder.java, +    return decode(BitMatrix.parse(image));, +++ b/core/src/main/java/com/google/zxing/common/BitMatrix.java, +  /**, +   * Creates an empty square {@link BitMatrix}., +   *, +   * @param dimension height and width, +   */, +  /**, +   * Creates an empty {@link BitMatrix}., +   *, +   * @param width bit matrix width, +   * @param height bit matrix height, +   */, +  /**, +   * Interprets a 2D array of booleans as a {@link BitMatrix}, where "true" means an "on" bit., +   *, +   * @param image bits of the image, as a row-major 2D array. Elements are arrays representing rows, +   * @return {@link BitMatrix} representation of image, +   */, +  public static BitMatrix parse(boolean[][] image) {, +    int height = image.length;, +    int width = image[0].length;, +    BitMatrix bits = new BitMatrix(width, height);, +    for (int i = 0; i < height; i++) {, +      boolean[] imageI = image[i];, +      for (int j = 0; j < width; j++) {, +        if (imageI[j]) {, +          bits.set(j, i);, +        }, +      }, +    }, +    return bits;, +  }]