[+++ b/core/src/com/google/zxing/BarcodeFormat.java, +  /** ITF (Interleaved Two of Five) 1D format. */, +  public static final BarcodeFormat ITF = new BarcodeFormat("ITF");, +++ b/core/src/com/google/zxing/BarcodeFormat.java, +  /** ITF (Interleaved Two of Five) 1D format. */, +  public static final BarcodeFormat ITF = new BarcodeFormat("ITF");, +++ /dev/null, +++ b/core/src/com/google/zxing/BarcodeFormat.java, +  /** ITF (Interleaved Two of Five) 1D format. */, +  public static final BarcodeFormat ITF = new BarcodeFormat("ITF");, +++ /dev/null, +++ b/core/src/com/google/zxing/oned/ITFReader.java, +/*, + * Copyright 2008 ZXing authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.zxing.oned;, +, +import com.google.zxing.BarcodeFormat;, +import com.google.zxing.ReaderException;, +import com.google.zxing.Result;, +import com.google.zxing.ResultPoint;, +import com.google.zxing.common.BitArray;, +import com.google.zxing.common.GenericResultPoint;, +, +import java.util.Hashtable;, +, +/**, + *<p>, + * Implements decoding of the ITF format., + * </p>, + *<p>, + * "ITF" stands for Interleaved Two of Five. This Reader will scan an arbritary, + * ITF length barcode. The checksum is optional and is not applied by this, + * Reader. The user of the decoded value will have to apply a checksum if, + * required., + * </p>, + * , + *<p>, + * <a, + * href="http://en.wikipedia.org/wiki/Interleaved_2_of_5">http://en.wikipedia., + * org/wiki/Interleaved_2_of_5</a> is a great reference for Interleaved 2 of 5, + * information., + * </p>, + * , + * @author kevin.osullivan@sita.aero, + */, +public class ITFReader extends AbstractOneDReader {, +, +	private static final int MAX_AVG_VARIANCE = (int) (PATTERN_MATCH_RESULT_SCALE_FACTOR * 0.42f);, +	private static final int MAX_INDIVIDUAL_VARIANCE = (int) (PATTERN_MATCH_RESULT_SCALE_FACTOR * 0.8f);, +, +	private static final int W = 3; // Pixel width of a wide line, +	private static final int N = 1; // Pixed width of a narrow line, +, +	// Stores the actual narrow line width of the image being decoded., +	private int narrowLineWidth = -1;, +, +	/**, +	 * Start/end guard pattern., +	 * , +	 * Note: The end pattern is reversed because the row is reversed before, +	 * searching for the END_PATTERN, +	 */, +	private static final int[] START_PATTERN = { N, N, N, N };, +	private static final int[] END_PATTERN_REVERSED = { N, N, W };, +, +	/**, +	 * Patterns of Wide / Narrow lines to indicate each digit, +	 */, +	static final int[][] PATTERNS = { { N, N, W, W, N }, // 0, +			{ W, N, N, N, W }, // 1, +			{ N, W, N, N, W }, // 2, +			{ W, W, N, N, N }, // 3, +			{ N, N, W, N, W }, // 4, +			{ W, N, W, N, N }, // 5, +			{ N, W, W, N, N }, // 6, +			{ N, N, N, W, W }, // 7, +			{ W, N, N, W, N }, // 8, +			{ N, W, N, W, N } // 9, +	};, +, +	public final Result decodeRow(int rowNumber, BitArray row, Hashtable hints) throws ReaderException {, +, +		StringBuffer result = new StringBuffer(20);, +, +		/**, +		 * Find out where the Middle section (payload) starts & ends]