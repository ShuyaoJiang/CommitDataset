[+++ b/core/src/com/google/zxing/qrcode/detector/DefaultGridSampler.java, +      for (int j = 0; j < max; j += 2) {, +        if (image.isBlack((int) points[j], (int) points[j + 1])) {, +++ b/core/src/com/google/zxing/qrcode/detector/DefaultGridSampler.java, +      for (int j = 0; j < max; j += 2) {, +        if (image.isBlack((int) points[j], (int) points[j + 1])) {, +++ b/core/src/com/google/zxing/qrcode/detector/PerspectiveTransform.java, +  private PerspectiveTransform(float a11, float a21, float a31,, +                               float a12, float a22, float a32,, +                               float a13, float a23, float a33) {, +    return, +        quadrilateralToSquare(x0, y0, x1, y1, x2, y2, x3, y3).times(, +    int max = points.length;, +    float a11 = this.a11;, +    float a12 = this.a12;, +    float a13 = this.a13;, +    float a21 = this.a21;, +    float a22 = this.a22;, +    float a23 = this.a23;, +	  float a31 = this.a31;, +	  float a32 = this.a32;, +	  float a33 = this.a33;, +    for (int i = 0; i < max; i += 2) {, +	    float denominator = a13*x + a23*y + a33;, +      points[i] = (a11*x + a21*y + a31) / denominator;, +      points[i+1] = (a12*x + a22*y + a32) / denominator;, +                                  y1 - y0 + a13*y1,, +                                  y3 - y0 + a23*y3,, +                                  a13,, +                                  a23,, +                                  a23*a31 - a21*a33,, +                                  a13*a32 - a12*a33,, +                                  a11*a33 - a13*a31,, +                                  a12*a31 - a11*a32,, +                                  a12*a23 - a13*a22,, +                                  a13*a21 - a11*a23,, +    return new PerspectiveTransform(a11*other.a11 + a21*other.a12 + a31*other.a13,]