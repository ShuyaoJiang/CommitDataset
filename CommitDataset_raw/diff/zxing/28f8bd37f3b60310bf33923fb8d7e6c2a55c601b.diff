[+++ b/android/src/com/google/zxing/client/android/wifi/WifiConfigManager.java, +        switch (networkType) {, +          case WEP:, +            break;, +          case WPA:, +            break;, +++ b/android/src/com/google/zxing/client/android/wifi/WifiConfigManager.java, +        switch (networkType) {, +          case WEP:, +            break;, +          case WPA:, +            break;, +++ b/core/src/main/java/com/google/zxing/datamatrix/decoder/DecodedBitStreamParser.java, +      } else {, +        switch (oneByte) {, +          case 230: // Latch to C40 encodation, +          case 231: // Latch to Base 256 encodation, +          case 232: // FNC1, +            break;, +          case 233: // Structured Append, +          case 234: // Reader Programming, +            break;, +          case 235: // Upper Shift (shift to Extended ASCII), +            break;, +          case 236: // 05 Macro, +            break;, +          case 237: // 06 Macro, +            break;, +          case 238: // Latch to ANSI X12 encodation, +          case 239: // Latch to Text encodation, +          case 240: // Latch to EDIFACT encodation, +          case 241: // ECI Character, +            break;, +          default:, +            // Not to be used in ASCII encodation, +            // but work around encoders that end with 254, latch back to ASCII, +            if (oneByte >= 242 && (oneByte != 254 || bits.available() != 0)) {, +            break;, +        }, +              switch (cValue) {, +                case 27: // FNC1, +                  result.append((char) 29); // translate as ASCII 29, +                  break;, +                case 30: // Upper Shift, +                  upperShift = true;, +                  break;, +                default:, +            }, +              switch (cValue) {, +                case 27: // FNC1, +                  result.append((char) 29); // translate as ASCII 29, +                  break;, +                case 30: // Upper Shift, +                  upperShift = true;, +                  break;, +                default:, +            }, +        switch (cValue) {, +          case 0: // X12 segment terminator <CR>, +            break;, +          case 1: // X12 segment separator *, +            break;, +          case 2: // X12 sub-element separator >, +            break;, +          case 3: // space, +            break;, +          default:, +            if (cValue < 14) {  // 0 - 9, +            break;, +        }, +++ b/android/src/com/google/zxing/client/android/wifi/WifiConfigManager.java, +        switch (networkType) {, +          case WEP:, +            break;, +          case WPA:, +            break;, +++ b/core/src/main/java/com/google/zxing/datamatrix/decoder/DecodedBitStreamParser.java, +      } else {, +        switch (oneByte) {, +          case 230: // Latch to C40 encodation, +          case 231: // Latch to Base 256 encodation, +          case 232: // FNC1, +            break;, +          case 233: // Structured Append, +          case 234: // Reader Programming, +            break;, +          case 235: // Upper Shift (shift to Extended ASCII), +            break;, +          case 236: // 05 Macro, +            break;, +          case 237: // 06 Macro, +            break;, +          case 238: // Latch to ANSI X12 encodation, +          case 239: // Latch to Text encodation, +          case 240: // Latch to EDIFACT encodation, +          case 241: // ECI Character, +            break;, +          default:, +            // Not to be used in ASCII encodation, +            // but work around encoders that end with 254, latch back to ASCII]