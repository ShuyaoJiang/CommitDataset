[+++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +    , +    inactivityTimer.onResume();, +    inactivityTimer.onPause();, +++ b/android/src/com/google/zxing/client/android/CaptureActivity.java, +    , +    inactivityTimer.onResume();, +    inactivityTimer.onPause();, +++ b/android/src/com/google/zxing/client/android/InactivityTimer.java, +import android.content.BroadcastReceiver;, +import android.content.Context;, +import android.content.Intent;, +import android.content.IntentFilter;, + * Finishes an activity after a period of inactivity if the device is on battery power., +  private final PowerStatusReceiver powerStatusReceiver = new PowerStatusReceiver();, +  public void onPause(){, +  	activity.unregisterReceiver(powerStatusReceiver);, +  }, +  , +  public void onResume(){, +  	activity.registerReceiver(powerStatusReceiver, new IntentFilter(Intent.ACTION_BATTERY_CHANGED));, +  }, +, +  private final class PowerStatusReceiver extends BroadcastReceiver {, +  	@Override, +    public void onReceive(Context context, Intent intent){, +  		if (Intent.ACTION_BATTERY_CHANGED.equals(intent.getAction())) {, +  			// 0 indicates that we're on battery, +        // In Android 2.0+, use BatteryManager.EXTRA_PLUGGED, +        if (intent.getIntExtra("plugged", -1) == 0) {, +          InactivityTimer.this.onActivity();, +        } else {, +          InactivityTimer.this.cancel();, +        }, +  		}, +  	}, +  }, +]