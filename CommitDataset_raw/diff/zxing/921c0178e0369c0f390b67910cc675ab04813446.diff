[+++ b/core/src/com/google/zxing/pdf417/decoder/BitMatrixParser.java, +          if (next >= codewords.length) {, +            throw FormatException.getFormatInstance();, +          }, +++ b/core/src/com/google/zxing/pdf417/decoder/BitMatrixParser.java, +          if (next >= codewords.length) {, +            throw FormatException.getFormatInstance();, +          }, +++ b/core/src/com/google/zxing/pdf417/detector/LinesSampler.java, +import com.google.zxing.NotFoundException;, +  public BitMatrix sample() throws NotFoundException {   , +  private void linesMatrixToCodewords(int[][] codewords, int[][] clusterNumbers, List<Float> symbolWidths) , +      throws NotFoundException {, +, +    // Not sure if this is the right way to handle this but avoids an error:, +    if (symbolsPerLine > symbolWidths.size()) {, +      throw NotFoundException.getNotFoundInstance();, +    }, +, +++ b/core/src/com/google/zxing/pdf417/decoder/BitMatrixParser.java, +          if (next >= codewords.length) {, +            throw FormatException.getFormatInstance();, +          }, +++ b/core/src/com/google/zxing/pdf417/detector/LinesSampler.java, +import com.google.zxing.NotFoundException;, +  public BitMatrix sample() throws NotFoundException {   , +  private void linesMatrixToCodewords(int[][] codewords, int[][] clusterNumbers, List<Float> symbolWidths) , +      throws NotFoundException {, +, +    // Not sure if this is the right way to handle this but avoids an error:, +    if (symbolsPerLine > symbolWidths.size()) {, +      throw NotFoundException.getNotFoundInstance();, +    }, +, +++ /dev/null, +++ b/core/src/com/google/zxing/pdf417/decoder/BitMatrixParser.java, +          if (next >= codewords.length) {, +            throw FormatException.getFormatInstance();, +          }, +++ b/core/src/com/google/zxing/pdf417/detector/LinesSampler.java, +import com.google.zxing.NotFoundException;, +  public BitMatrix sample() throws NotFoundException {   , +  private void linesMatrixToCodewords(int[][] codewords, int[][] clusterNumbers, List<Float> symbolWidths) , +      throws NotFoundException {, +, +    // Not sure if this is the right way to handle this but avoids an error:, +    if (symbolsPerLine > symbolWidths.size()) {, +      throw NotFoundException.getNotFoundInstance();, +    }, +, +++ /dev/null, +++ /dev/null, +++ b/core/src/com/google/zxing/pdf417/decoder/BitMatrixParser.java, +          if (next >= codewords.length) {, +            throw FormatException.getFormatInstance();, +          }, +++ b/core/src/com/google/zxing/pdf417/detector/LinesSampler.java, +import com.google.zxing.NotFoundException;, +  public BitMatrix sample() throws NotFoundException {   , +  private void linesMatrixToCodewords(int[][] codewords, int[][] clusterNumbers, List<Float> symbolWidths) , +      throws NotFoundException {, +, +    // Not sure if this is the right way to handle this but avoids an error:, +    if (symbolsPerLine > symbolWidths.size()) {, +      throw NotFoundException.getNotFoundInstance();, +    }, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/com/google/zxing/pdf417/decoder/BitMatrixParser.java, +          if (next >= codewords.length) {, +            throw FormatException.getFormatInstance();, +          }, +++ b/core/src/com/google/zxing/pdf417/detector/LinesSampler.java, +import com.google.zxing.NotFoundException;, +  public BitMatrix sample() throws NotFoundException {   , +  private void linesMatrixToCodewords(int[][] codewords, int[][] clusterNumbers, List<Float> symbolWidths) , +      throws NotFoundException {, +, +    // Not sure if this is the right way to handle this but avoids an error:, +    if (symbolsPerLine > symbolWidths.size()) {, +      throw NotFoundException.getNotFoundInstance();, +    }, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/com/google/zxing/pdf417/decoder/BitMatrixParser.java, +          if (next >= codewords.length) {, +            throw FormatException.getFormatInstance();, +          }, +++ b/core/src/com/google/zxing/pdf417/detector/LinesSampler.java, +import com.google.zxing.NotFoundException;, +  public BitMatrix sample() throws NotFoundException {   , +  private void linesMatrixToCodewords(int[][] codewords, int[][] clusterNumbers, List<Float> symbolWidths) , +      throws NotFoundException {, +, +    // Not sure if this is the right way to handle this but avoids an error:]