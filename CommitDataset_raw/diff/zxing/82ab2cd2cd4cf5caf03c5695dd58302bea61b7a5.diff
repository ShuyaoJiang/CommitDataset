[+++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +import java.io.InputStreamReader;, +import java.io.Reader;, +   * Downloads the entire resource instead of part., +   *, +   * @see #downloadViaHttp(String, HttpHelper.ContentType, int), +   */, +  public static CharSequence downloadViaHttp(String uri, ContentType type) throws IOException {, +    return downloadViaHttp(uri, type, Integer.MAX_VALUE);, +  }, +, +  /**, +   * @param maxChars approximate maximum characters to read from the source, +  public static CharSequence downloadViaHttp(String uri, ContentType type, int maxChars) throws IOException {, +    return downloadViaHttp(uri, contentTypes, maxChars);, +  private static CharSequence downloadViaHttp(String uri, String contentTypes, int maxChars) throws IOException {, +      return consume(connection, maxChars);, +  private static CharSequence consume(URLConnection connection, int maxChars) throws IOException {, +    StringBuilder out = new StringBuilder();, +    Reader in = null;, +      in = new InputStreamReader(connection.getInputStream(), encoding);, +      char[] buffer = new char[1024];, +      int charsRead;, +      while (out.length() < maxChars && (charsRead = in.read(buffer)) > 0) {, +        out.append(buffer, 0, charsRead);, +      if (in != null) {, +    return out;, +++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +import java.io.InputStreamReader;, +import java.io.Reader;, +   * Downloads the entire resource instead of part., +   *, +   * @see #downloadViaHttp(String, HttpHelper.ContentType, int), +   */, +  public static CharSequence downloadViaHttp(String uri, ContentType type) throws IOException {, +    return downloadViaHttp(uri, type, Integer.MAX_VALUE);, +  }, +, +  /**, +   * @param maxChars approximate maximum characters to read from the source, +  public static CharSequence downloadViaHttp(String uri, ContentType type, int maxChars) throws IOException {, +    return downloadViaHttp(uri, contentTypes, maxChars);, +  private static CharSequence downloadViaHttp(String uri, String contentTypes, int maxChars) throws IOException {, +      return consume(connection, maxChars);, +  private static CharSequence consume(URLConnection connection, int maxChars) throws IOException {, +    StringBuilder out = new StringBuilder();, +    Reader in = null;, +      in = new InputStreamReader(connection.getInputStream(), encoding);, +      char[] buffer = new char[1024];, +      int charsRead;, +      while (out.length() < maxChars && (charsRead = in.read(buffer)) > 0) {, +        out.append(buffer, 0, charsRead);, +      if (in != null) {, +    return out;, +++ b/android/src/com/google/zxing/client/android/book/SearchBookContentsActivity.java, +        CharSequence content = HttpHelper.downloadViaHttp(uri, HttpHelper.ContentType.JSON);, +        return new JSONObject(content.toString());, +++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +import java.io.InputStreamReader;, +import java.io.Reader;, +   * Downloads the entire resource instead of part., +   *, +   * @see #downloadViaHttp(String, HttpHelper.ContentType, int), +   */, +  public static CharSequence downloadViaHttp(String uri, ContentType type) throws IOException {, +    return downloadViaHttp(uri, type, Integer.MAX_VALUE);, +  }, +, +  /**, +   * @param maxChars approximate maximum characters to read from the source, +  public static CharSequence downloadViaHttp(String uri, ContentType type, int maxChars) throws IOException {, +    return downloadViaHttp(uri, contentTypes, maxChars);, +  private static CharSequence downloadViaHttp(String uri, String contentTypes, int maxChars) throws IOException {, +      return consume(connection, maxChars);, +  private static CharSequence consume(URLConnection connection, int maxChars) throws IOException {, +    StringBuilder out = new StringBuilder();, +    Reader in = null;, +      in = new InputStreamReader(connection.getInputStream(), encoding);, +      char[] buffer = new char[1024];, +      int charsRead;, +      while (out.length() < maxChars && (charsRead = in.read(buffer)) > 0) {, +        out.append(buffer, 0, charsRead);, +      if (in != null) {, +    return out;, +++ b/android/src/com/google/zxing/client/android/book/SearchBookContentsActivity.java, +        CharSequence content = HttpHelper.downloadViaHttp(uri, HttpHelper.ContentType.JSON);, +        return new JSONObject(content.toString());, +++ b/android/src/com/google/zxing/client/android/result/supplement/BookResultInfoRetriever.java, +    CharSequence contents = HttpHelper.downloadViaHttp("https://www.googleapis.com/books/v1/volumes?q=isbn:" + isbn,, +      JSONObject topLevel = (JSONObject) new JSONTokener(contents.toString()).nextValue();, +++ b/android/src/com/google/zxing/client/android/HttpHelper.java, +import java.io.InputStreamReader;, +import java.io.Reader;, +   * Downloads the entire resource instead of part., +   *, +   * @see #downloadViaHttp(String, HttpHelper.ContentType, int), +   */, +  public static CharSequence downloadViaHttp(String uri, ContentType type) throws IOException {, +    return downloadViaHttp(uri, type, Integer.MAX_VALUE);, +  }]