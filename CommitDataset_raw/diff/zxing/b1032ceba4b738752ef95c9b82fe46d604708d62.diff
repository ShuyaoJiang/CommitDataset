[+++ b/cpp/core/src/zxing/common/BitArray.cpp, +  std::vector<unsigned int> newBits(bits_.size(),(const unsigned int) 0);, +  for (size_t i = 0; i < size_; i++) {, +    if (get(size_ - i - 1)) {, +      newBits[i >> logBits_] |= 1<< (i & bitsMask_);, +  bits_ = newBits;, +}, +++ b/cpp/core/src/zxing/common/BitArray.cpp, +  std::vector<unsigned int> newBits(bits_.size(),(const unsigned int) 0);, +  for (size_t i = 0; i < size_; i++) {, +    if (get(size_ - i - 1)) {, +      newBits[i >> logBits_] |= 1<< (i & bitsMask_);, +  bits_ = newBits;, +}, +++ b/cpp/core/src/zxing/oned/OneDReader.cpp, +#include <zxing/oned/OneDResultPoint.h>, +				}catch (IllegalArgumentException re) {, +					continue;, +							std::vector<Ref<ResultPoint> > points(result->getResultPoints());, +							if (points.size() == 2) {, +								Ref<ResultPoint> pointZero(new OneDResultPoint(width - points[0]->getX() - 1, points[0]->getY()));, +								points[0] = pointZero;, +, +								Ref<ResultPoint> pointOne(new OneDResultPoint(width - points[1]->getX() - 1, points[1]->getY()));, +								points[1] = pointOne;, +, +                result.reset(new Result(result->getText(),result->getRawBytes(),points,result->getBarcodeFormat()));, +							}, +								, +			throw ReaderException("doDecode() failed");]