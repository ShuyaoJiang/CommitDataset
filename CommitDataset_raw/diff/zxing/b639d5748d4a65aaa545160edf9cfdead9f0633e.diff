[+++ b/core/src/main/java/com/google/zxing/common/detector/MonochromeRectangleDetector.java, + * @deprecated without replacement since 3.3.0, +@Deprecated, +++ b/core/src/main/java/com/google/zxing/common/detector/MonochromeRectangleDetector.java, + * @deprecated without replacement since 3.3.0, +@Deprecated, +++ b/core/src/test/java/com/google/zxing/PlanarYUVLuminanceSourceTestCase.java, +    assertTrue(source.isCropSupported());, +    byte[] cropMatrix = source.getMatrix();, +    for (int r = 0; r < ROWS - 2; r++) {, +      assertEquals(Y, (r + 1) * COLS + 1, cropMatrix, r * (COLS - 2), COLS - 2);, +    }, +  @Test, +  public void testThumbnail() {, +    PlanarYUVLuminanceSource source =, +        new PlanarYUVLuminanceSource(YUV, COLS, ROWS, 0, 0, COLS, ROWS, false);, +    assertArrayEquals(, +        new int[] { 0xFF000000, 0xFF010101, 0xFF030303, 0xFF000000, 0xFFFFFFFF, 0xFFFDFDFD },, +        source.renderThumbnail());, +  }, +, +++ b/core/src/main/java/com/google/zxing/common/detector/MonochromeRectangleDetector.java, + * @deprecated without replacement since 3.3.0, +@Deprecated, +++ b/core/src/test/java/com/google/zxing/PlanarYUVLuminanceSourceTestCase.java, +    assertTrue(source.isCropSupported());, +    byte[] cropMatrix = source.getMatrix();, +    for (int r = 0; r < ROWS - 2; r++) {, +      assertEquals(Y, (r + 1) * COLS + 1, cropMatrix, r * (COLS - 2), COLS - 2);, +    }, +  @Test, +  public void testThumbnail() {, +    PlanarYUVLuminanceSource source =, +        new PlanarYUVLuminanceSource(YUV, COLS, ROWS, 0, 0, COLS, ROWS, false);, +    assertArrayEquals(, +        new int[] { 0xFF000000, 0xFF010101, 0xFF030303, 0xFF000000, 0xFFFFFFFF, 0xFFFDFDFD },, +        source.renderThumbnail());, +  }, +, +++ b/core/src/test/java/com/google/zxing/client/result/GeoParsedResultTestCase.java, +import java.util.Locale;, +, +    doTest("geo:1,2", 1.0, 2.0, 0.0, null, "geo:1.0,2.0");, +    doTest("geo:80.33,-32.3344,3.35", 80.33, -32.3344, 3.35, null, null);, +    doTest("geo:-20.33,132.3344,0.01", -20.33, 132.3344, 0.01, null, null);, +    doTest("geo:-20.33,132.3344,0.01?q=foobar", -20.33, 132.3344, 0.01, "q=foobar", null);, +    doTest("GEO:-20.33,132.3344,0.01?q=foobar", -20.33, 132.3344, 0.01, "q=foobar", null);, +                             String query,, +                             String uri) {, +    assertEquals(uri == null ? contents.toLowerCase(Locale.ENGLISH) : uri, geoResult.getGeoURI());, +++ b/core/src/main/java/com/google/zxing/common/detector/MonochromeRectangleDetector.java, + * @deprecated without replacement since 3.3.0, +@Deprecated, +++ b/core/src/test/java/com/google/zxing/PlanarYUVLuminanceSourceTestCase.java, +    assertTrue(source.isCropSupported());, +    byte[] cropMatrix = source.getMatrix();, +    for (int r = 0; r < ROWS - 2; r++) {, +      assertEquals(Y, (r + 1) * COLS + 1, cropMatrix, r * (COLS - 2), COLS - 2);, +    }, +  @Test, +  public void testThumbnail() {, +    PlanarYUVLuminanceSource source =, +        new PlanarYUVLuminanceSource(YUV, COLS, ROWS, 0, 0, COLS, ROWS, false);, +    assertArrayEquals(, +        new int[] { 0xFF000000, 0xFF010101, 0xFF030303, 0xFF000000, 0xFFFFFFFF, 0xFFFDFDFD },, +        source.renderThumbnail());, +  }, +, +++ b/core/src/test/java/com/google/zxing/client/result/GeoParsedResultTestCase.java, +import java.util.Locale;, +, +    doTest("geo:1,2", 1.0, 2.0, 0.0, null, "geo:1.0,2.0");, +    doTest("geo:80.33,-32.3344,3.35", 80.33, -32.3344, 3.35, null, null);, +    doTest("geo:-20.33,132.3344,0.01", -20.33, 132.3344, 0.01, null, null);, +    doTest("geo:-20.33,132.3344,0.01?q=foobar", -20.33, 132.3344, 0.01, "q=foobar", null);, +    doTest("GEO:-20.33,132.3344,0.01?q=foobar", -20.33, 132.3344, 0.01, "q=foobar", null);, +                             String query,, +                             String uri) {, +    assertEquals(uri == null ? contents.toLowerCase(Locale.ENGLISH) : uri, geoResult.getGeoURI());, +++ b/core/src/test/java/com/google/zxing/client/result/SMSMMSParsedResultTestCase.java, +    doTest("sms:+15551212", "+15551212", null, null, null, "sms:+15551212");, +    doTest("sms:+15551212?subject=foo&body=bar", "+15551212", "foo", "bar", null,, +           "sms:+15551212?body=bar&subject=foo");, +    doTest("sms:+15551212;via=999333", "+15551212", null, null, "999333",, +           "sms:+15551212;via=999333");, +    doTest("mms:+15551212", "+15551212", null, null, null, "sms:+15551212");, +    doTest("mms:+15551212?subject=foo&body=bar", "+15551212", "foo", "bar", null,, +           "sms:+15551212?body=bar&subject=foo");, +    doTest("mms:+15551212;via=999333", "+15551212", null, null, "999333",, +           "sms:+15551212;via=999333");, +                             String via,, +                             String parsedURI) {, +    assertArrayEquals(new String[] { number }, smsResult.getNumbers());, +    assertArrayEquals(new String[] { via }, smsResult.getVias());, +    assertEquals(parsedURI, smsResult.getSMSURI());, +++ b/core/src/main/java/com/google/zxing/common/detector/MonochromeRectangleDetector.java, + * @deprecated without replacement since 3.3.0, +@Deprecated, +++ b/core/src/test/java/com/google/zxing/PlanarYUVLuminanceSourceTestCase.java, +    assertTrue(source.isCropSupported());]