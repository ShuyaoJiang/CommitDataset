[+++ b/android/src/com/google/zxing/client/android/encode/QRCodeEncoder.java, +      result = new MultiFormatWriter().encode(contentsToEncode, format, dimension, dimension, hints);, +++ b/android/src/com/google/zxing/client/android/encode/QRCodeEncoder.java, +      result = new MultiFormatWriter().encode(contentsToEncode, format, dimension, dimension, hints);, +++ b/androidtest/src/com/google/zxing/client/androidtest/BenchmarkActivity.java, +  private final Handler handler = new Handler() {, +      if (message.what == R.id.benchmark_done) {, +        benchmarkThread = null;, +        runBenchmarkButton.setEnabled(true);, +      }, +    }, +  };, +  , +  Handler getHandler() {, +    return handler;, +  }, +  , +  @Override, +  public void onCreate(Bundle icicle) {, +    super.onCreate(icicle);, +, +    setContentView(R.layout.benchmark);, +, +    runBenchmarkButton = (Button) findViewById(R.id.benchmark_run);, +    runBenchmarkButton.setOnClickListener(runBenchmark);, +    textView = (TextView) findViewById(R.id.benchmark_help);, +, +    benchmarkThread = null;, +++ b/android/src/com/google/zxing/client/android/encode/QRCodeEncoder.java, +      result = new MultiFormatWriter().encode(contentsToEncode, format, dimension, dimension, hints);, +++ b/androidtest/src/com/google/zxing/client/androidtest/BenchmarkActivity.java, +  private final Handler handler = new Handler() {, +      if (message.what == R.id.benchmark_done) {, +        benchmarkThread = null;, +        runBenchmarkButton.setEnabled(true);, +      }, +    }, +  };, +  , +  Handler getHandler() {, +    return handler;, +  }, +  , +  @Override, +  public void onCreate(Bundle icicle) {, +    super.onCreate(icicle);, +, +    setContentView(R.layout.benchmark);, +, +    runBenchmarkButton = (Button) findViewById(R.id.benchmark_run);, +    runBenchmarkButton.setOnClickListener(runBenchmark);, +    textView = (TextView) findViewById(R.id.benchmark_help);, +, +    benchmarkThread = null;, +++ b/androidtest/src/com/google/zxing/client/androidtest/BenchmarkThread.java, +    Message message = Message.obtain(activity.getHandler(), R.id.benchmark_done);, +++ b/android/src/com/google/zxing/client/android/encode/QRCodeEncoder.java, +      result = new MultiFormatWriter().encode(contentsToEncode, format, dimension, dimension, hints);, +++ b/androidtest/src/com/google/zxing/client/androidtest/BenchmarkActivity.java, +  private final Handler handler = new Handler() {, +      if (message.what == R.id.benchmark_done) {, +        benchmarkThread = null;, +        runBenchmarkButton.setEnabled(true);, +      }, +    }, +  };, +  , +  Handler getHandler() {, +    return handler;, +  }, +  , +  @Override, +  public void onCreate(Bundle icicle) {, +    super.onCreate(icicle);, +, +    setContentView(R.layout.benchmark);, +, +    runBenchmarkButton = (Button) findViewById(R.id.benchmark_run);, +    runBenchmarkButton.setOnClickListener(runBenchmark);, +    textView = (TextView) findViewById(R.id.benchmark_help);, +, +    benchmarkThread = null;, +++ b/androidtest/src/com/google/zxing/client/androidtest/BenchmarkThread.java, +    Message message = Message.obtain(activity.getHandler(), R.id.benchmark_done);, +++ b/core/src/com/google/zxing/aztec/detector/Detector.java, +    int dx = bullEyeCornerPoints[0].getX() - bullEyeCornerPoints[2].getX();, +    int dy = bullEyeCornerPoints[0].getY() - bullEyeCornerPoints[2].getY();, +    int targetcx = MathUtils.round(bullEyeCornerPoints[2].getX() - ratio * dx);, +    int targetcy = MathUtils.round(bullEyeCornerPoints[2].getY() - ratio * dy);, +    int targetax = MathUtils.round(bullEyeCornerPoints[0].getX() + ratio * dx);, +    int targetay = MathUtils.round(bullEyeCornerPoints[0].getY() + ratio * dy);, +    dx = bullEyeCornerPoints[1].getX() - bullEyeCornerPoints[3].getX();, +    dy = bullEyeCornerPoints[1].getY() - bullEyeCornerPoints[3].getY();, +    int targetdx = MathUtils.round(bullEyeCornerPoints[3].getX() - ratio * dx);, +    int targetdy = MathUtils.round(bullEyeCornerPoints[3].getY() - ratio * dy);, +    int targetbx = MathUtils.round(bullEyeCornerPoints[1].getX() + ratio * dx);, +    int targetby = MathUtils.round(bullEyeCornerPoints[1].getY() +ratio*dy);, +    int dx = pina.getX() - pinc.getX();, +    int dy = pina.getY() - pinc.getY();, +    int targetcx = MathUtils.round(pinc.getX() -ratio*dx);]