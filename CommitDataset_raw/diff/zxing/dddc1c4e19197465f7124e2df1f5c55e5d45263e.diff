[+++ b/core/src/test/java/com/google/zxing/aztec/detector/DetectorTest.java, +import java.nio.charset.StandardCharsets;, +    AztecCode aztec = Encoder.encode(data.getBytes(StandardCharsets.ISO_8859_1), 25, Encoder.DEFAULT_AZTEC_LAYERS);, +++ b/core/src/test/java/com/google/zxing/aztec/detector/DetectorTest.java, +import java.nio.charset.StandardCharsets;, +    AztecCode aztec = Encoder.encode(data.getBytes(StandardCharsets.ISO_8859_1), 25, Encoder.DEFAULT_AZTEC_LAYERS);, +++ b/core/src/test/java/com/google/zxing/aztec/encoder/EncoderTest.java, +import java.nio.charset.StandardCharsets;, +    AztecCode aztec = Encoder.encode(data.getBytes(StandardCharsets.ISO_8859_1),, +    byte[] alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".getBytes(StandardCharsets.ISO_8859_1);, +    byte[] data = alphabet4.getBytes(StandardCharsets.ISO_8859_1);, +    aztecCode = Encoder.encode(alphabet4.substring(0, 100).getBytes(StandardCharsets.ISO_8859_1), 10, Encoder.DEFAULT_AZTEC_LAYERS);, +    AztecCode aztec = Encoder.encode(data.getBytes(StandardCharsets.ISO_8859_1), 33, Encoder.DEFAULT_AZTEC_LAYERS);, +    AztecCode aztec = Encoder.encode(data.getBytes(StandardCharsets.ISO_8859_1), 25, Encoder.DEFAULT_AZTEC_LAYERS);, +    String expectedData = new String(data.getBytes(Charset.forName(charset)), StandardCharsets.ISO_8859_1);, +    BitArray bits = new HighLevelEncoder(s.getBytes(StandardCharsets.ISO_8859_1)).encode();, +    BitArray bits = new HighLevelEncoder(s.getBytes(StandardCharsets.ISO_8859_1)).encode();, +++ b/core/src/test/java/com/google/zxing/aztec/detector/DetectorTest.java, +import java.nio.charset.StandardCharsets;, +    AztecCode aztec = Encoder.encode(data.getBytes(StandardCharsets.ISO_8859_1), 25, Encoder.DEFAULT_AZTEC_LAYERS);, +++ b/core/src/test/java/com/google/zxing/aztec/encoder/EncoderTest.java, +import java.nio.charset.StandardCharsets;, +    AztecCode aztec = Encoder.encode(data.getBytes(StandardCharsets.ISO_8859_1),, +    byte[] alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".getBytes(StandardCharsets.ISO_8859_1);, +    byte[] data = alphabet4.getBytes(StandardCharsets.ISO_8859_1);, +    aztecCode = Encoder.encode(alphabet4.substring(0, 100).getBytes(StandardCharsets.ISO_8859_1), 10, Encoder.DEFAULT_AZTEC_LAYERS);, +    AztecCode aztec = Encoder.encode(data.getBytes(StandardCharsets.ISO_8859_1), 33, Encoder.DEFAULT_AZTEC_LAYERS);, +    AztecCode aztec = Encoder.encode(data.getBytes(StandardCharsets.ISO_8859_1), 25, Encoder.DEFAULT_AZTEC_LAYERS);, +    String expectedData = new String(data.getBytes(Charset.forName(charset)), StandardCharsets.ISO_8859_1);, +    BitArray bits = new HighLevelEncoder(s.getBytes(StandardCharsets.ISO_8859_1)).encode();, +    BitArray bits = new HighLevelEncoder(s.getBytes(StandardCharsets.ISO_8859_1)).encode();, +++ b/core/src/test/java/com/google/zxing/common/AbstractBlackBoxTestCase.java, +import java.io.BufferedReader;, +import java.nio.charset.StandardCharsets;, +import java.nio.file.DirectoryStream;, +import java.nio.file.Files;, +import java.nio.file.Path;, +import java.nio.file.Paths;, +  private final Path testBase;, +    Path testBase = Paths.get(testBasePathSuffix);, +    if (!Files.exists(testBase)) {, +      testBase = Paths.get("core").resolve(testBasePathSuffix);, +  protected final Path getTestBase() {, +    return testBase;, +  }, +, +  protected final List<Path> getImageFiles() throws IOException {, +    assertTrue("Please download and install test images, and run from the 'core' directory", Files.exists(testBase));, +    List<Path> paths = new ArrayList<>();, +    try (DirectoryStream<Path> pathIt = Files.newDirectoryStream(testBase, "*.{jpg,jpeg,gif,png,JPG,JPEG,GIF,PNG}")) {, +      for (Path path : pathIt) {, +        paths.add(path);, +      }, +    }, +    return paths;, +  final Reader getReader() {, +    List<Path> imageFiles = getImageFiles();, +    for (Path testImage : imageFiles) {, +      log.info(String.format("Starting %s", testImage));, +      BufferedImage image = ImageIO.read(testImage.toFile());, +      String testImageFileName = testImage.getFileName().toString();, +      Path expectedTextFile = testBase.resolve(fileBaseName + ".txt");, +      if (Files.exists(expectedTextFile)) {, +        expectedText = readFileAsString(expectedTextFile, StandardCharsets.UTF_8);, +        expectedTextFile = testBase.resolve(fileBaseName + ".bin");, +        assertTrue(Files.exists(expectedTextFile));, +        expectedText = readFileAsString(expectedTextFile, StandardCharsets.ISO_8859_1);, +      Path expectedMetadataFile = testBase.resolve(fileBaseName + ".metadata.txt");, +      if (Files.exists(expectedMetadataFile)) {, +        try (BufferedReader reader = Files.newBufferedReader(expectedMetadataFile, StandardCharsets.UTF_8)) {, +          expectedMetadata.load(reader);, +                             passedCounts[x], imageFiles.size(), testResult.getMustPassCount()));, +      int failed = imageFiles.size() - passedCounts[x];, +                             tryHarderCounts[x], imageFiles.size(), testResult.getTryHarderCount()));, +      failed = imageFiles.size() - tryHarderCounts[x];, +    int totalTests = imageFiles.size() * testCount * 2;, +  protected static String readFileAsString(Path file, Charset charset) throws IOException {, +    String stringContents = new String(Files.readAllBytes(file), charset);, +++ b/core/src/test/java/com/google/zxing/aztec/detector/DetectorTest.java, +import java.nio.charset.StandardCharsets;, +    AztecCode aztec = Encoder.encode(data.getBytes(StandardCharsets.ISO_8859_1), 25, Encoder.DEFAULT_AZTEC_LAYERS);, +++ b/core/src/test/java/com/google/zxing/aztec/encoder/EncoderTest.java, +import java.nio.charset.StandardCharsets;, +    AztecCode aztec = Encoder.encode(data.getBytes(StandardCharsets.ISO_8859_1),, +    byte[] alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".getBytes(StandardCharsets.ISO_8859_1);, +    byte[] data = alphabet4.getBytes(StandardCharsets.ISO_8859_1);, +    aztecCode = Encoder.encode(alphabet4.substring(0, 100).getBytes(StandardCharsets.ISO_8859_1), 10, Encoder.DEFAULT_AZTEC_LAYERS);, +    AztecCode aztec = Encoder.encode(data.getBytes(StandardCharsets.ISO_8859_1), 33, Encoder.DEFAULT_AZTEC_LAYERS);, +    AztecCode aztec = Encoder.encode(data.getBytes(StandardCharsets.ISO_8859_1), 25, Encoder.DEFAULT_AZTEC_LAYERS);, +    String expectedData = new String(data.getBytes(Charset.forName(charset)), StandardCharsets.ISO_8859_1);, +    BitArray bits = new HighLevelEncoder(s.getBytes(StandardCharsets.ISO_8859_1)).encode();, +    BitArray bits = new HighLevelEncoder(s.getBytes(StandardCharsets.ISO_8859_1)).encode();, +++ b/core/src/test/java/com/google/zxing/common/AbstractBlackBoxTestCase.java, +import java.io.BufferedReader;, +import java.nio.charset.StandardCharsets;, +import java.nio.file.DirectoryStream;, +import java.nio.file.Files;, +import java.nio.file.Path;, +import java.nio.file.Paths;, +  private final Path testBase;]