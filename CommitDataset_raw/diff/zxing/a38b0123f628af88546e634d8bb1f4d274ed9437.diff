[+++ b/core/src/com/google/zxing/client/result/URIResultParser.java, +    // Forget strings that don't have a valid-looking protocol, +    int period = uri.indexOf('.');, +    if (period >= uri.length() - 2) {, +      return false;, +    }, +    int colon = uri.indexOf(':');, +    if (period < 0 && colon < 0) {, +      return false;, +    }, +    if (colon >= 0) {, +      if (period < 0 || period > colon) {, +        // colon ends the protocol, +        for (int i = 0; i < colon; i++) {, +          char c = uri.charAt(i);, +          if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z')) {, +            return false;, +          }, +        }, +      } else {, +        // colon starts the port; crudely look for at least two numbers, +        if (colon >= uri.length() - 2) {, +          return false;, +        }, +        for (int i = colon + 1; i < colon + 3; i++) {, +          char c = uri.charAt(i);, +          if (c < '0' || c > '9') {, +            return false;, +          }, +        }, +      }, +    }, +    return true;, +++ b/core/src/com/google/zxing/client/result/URIResultParser.java, +    // Forget strings that don't have a valid-looking protocol, +    int period = uri.indexOf('.');, +    if (period >= uri.length() - 2) {, +      return false;, +    }, +    int colon = uri.indexOf(':');, +    if (period < 0 && colon < 0) {, +      return false;, +    }, +    if (colon >= 0) {, +      if (period < 0 || period > colon) {, +        // colon ends the protocol, +        for (int i = 0; i < colon; i++) {, +          char c = uri.charAt(i);, +          if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z')) {, +            return false;, +          }, +        }, +      } else {, +        // colon starts the port; crudely look for at least two numbers, +        if (colon >= uri.length() - 2) {, +          return false;, +        }, +        for (int i = colon + 1; i < colon + 3; i++) {, +          char c = uri.charAt(i);, +          if (c < '0' || c > '9') {, +            return false;, +          }, +        }, +      }, +    }, +    return true;, +++ b/core/test/src/com/google/zxing/client/result/AddressBookParsedResultTestCase.java, +    assertSame(ParsedResultType.ADDRESSBOOK, result.getType());, +++ b/core/src/com/google/zxing/client/result/URIResultParser.java, +    // Forget strings that don't have a valid-looking protocol, +    int period = uri.indexOf('.');, +    if (period >= uri.length() - 2) {, +      return false;, +    }, +    int colon = uri.indexOf(':');, +    if (period < 0 && colon < 0) {, +      return false;, +    }, +    if (colon >= 0) {, +      if (period < 0 || period > colon) {, +        // colon ends the protocol, +        for (int i = 0; i < colon; i++) {, +          char c = uri.charAt(i);, +          if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z')) {, +            return false;, +          }, +        }, +      } else {, +        // colon starts the port; crudely look for at least two numbers, +        if (colon >= uri.length() - 2) {, +          return false;, +        }, +        for (int i = colon + 1; i < colon + 3; i++) {, +          char c = uri.charAt(i);, +          if (c < '0' || c > '9') {, +            return false;, +          }, +        }, +      }, +    }]