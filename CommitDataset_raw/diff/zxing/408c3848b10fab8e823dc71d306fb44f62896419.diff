[+++ b/core/src/main/java/com/google/zxing/oned/CodaBarReader.java, +  private static final float MAX_ACCEPTABLE = 2.0f;, +  private static final float PADDING = 1.5f;, +    float[] maxes = new float[4];, +    float[] mins = new float[4];, +      mins[i] = 0.0f;  // Accept arbitrarily small "short" stripes., +      mins[i + 2] = ((float) sizes[i] / counts[i] + (float) sizes[i + 2] / counts[i + 2]) / 2.0f;, +        int size = counters[pos + j];, +++ b/core/src/main/java/com/google/zxing/oned/CodaBarReader.java, +  private static final float MAX_ACCEPTABLE = 2.0f;, +  private static final float PADDING = 1.5f;, +    float[] maxes = new float[4];, +    float[] mins = new float[4];, +      mins[i] = 0.0f;  // Accept arbitrarily small "short" stripes., +      mins[i + 2] = ((float) sizes[i] / counts[i] + (float) sizes[i + 2] / counts[i + 2]) / 2.0f;, +        int size = counters[pos + j];, +++ b/core/src/main/java/com/google/zxing/oned/Code128Reader.java, +  private static final float MAX_AVG_VARIANCE = 0.25f;, +  private static final float MAX_INDIVIDUAL_VARIANCE = 0.7f;, +          float bestVariance = MAX_AVG_VARIANCE;, +            float variance = patternMatchVariance(counters, CODE_PATTERNS[startCode],, +    float bestVariance = MAX_AVG_VARIANCE; // worst variance we'll accept, +      float variance = patternMatchVariance(counters, pattern, MAX_INDIVIDUAL_VARIANCE);, +++ b/core/src/main/java/com/google/zxing/oned/CodaBarReader.java, +  private static final float MAX_ACCEPTABLE = 2.0f;, +  private static final float PADDING = 1.5f;, +    float[] maxes = new float[4];, +    float[] mins = new float[4];, +      mins[i] = 0.0f;  // Accept arbitrarily small "short" stripes., +      mins[i + 2] = ((float) sizes[i] / counts[i] + (float) sizes[i + 2] / counts[i + 2]) / 2.0f;, +        int size = counters[pos + j];, +++ b/core/src/main/java/com/google/zxing/oned/Code128Reader.java, +  private static final float MAX_AVG_VARIANCE = 0.25f;, +  private static final float MAX_INDIVIDUAL_VARIANCE = 0.7f;, +          float bestVariance = MAX_AVG_VARIANCE;, +            float variance = patternMatchVariance(counters, CODE_PATTERNS[startCode],, +    float bestVariance = MAX_AVG_VARIANCE; // worst variance we'll accept, +      float variance = patternMatchVariance(counters, pattern, MAX_INDIVIDUAL_VARIANCE);, +++ b/core/src/main/java/com/google/zxing/oned/Code93Reader.java, +      int scaled = Math.round(counters[i] * 9.0f / sum);, +      if (scaled < 1 || scaled > 4) {, +        for (int j = 0; j < scaled; j++) {, +        pattern <<= scaled;, +++ b/core/src/main/java/com/google/zxing/oned/CodaBarReader.java, +  private static final float MAX_ACCEPTABLE = 2.0f;, +  private static final float PADDING = 1.5f;, +    float[] maxes = new float[4];, +    float[] mins = new float[4];, +      mins[i] = 0.0f;  // Accept arbitrarily small "short" stripes., +      mins[i + 2] = ((float) sizes[i] / counts[i] + (float) sizes[i + 2] / counts[i + 2]) / 2.0f;, +        int size = counters[pos + j];, +++ b/core/src/main/java/com/google/zxing/oned/Code128Reader.java, +  private static final float MAX_AVG_VARIANCE = 0.25f;, +  private static final float MAX_INDIVIDUAL_VARIANCE = 0.7f;, +          float bestVariance = MAX_AVG_VARIANCE;, +            float variance = patternMatchVariance(counters, CODE_PATTERNS[startCode],, +    float bestVariance = MAX_AVG_VARIANCE; // worst variance we'll accept, +      float variance = patternMatchVariance(counters, pattern, MAX_INDIVIDUAL_VARIANCE);, +++ b/core/src/main/java/com/google/zxing/oned/Code93Reader.java, +      int scaled = Math.round(counters[i] * 9.0f / sum);, +      if (scaled < 1 || scaled > 4) {, +        for (int j = 0; j < scaled; j++) {, +        pattern <<= scaled;, +++ b/core/src/main/java/com/google/zxing/oned/ITFReader.java, +  private static final float MAX_AVG_VARIANCE = 0.38f;, +  private static final float MAX_INDIVIDUAL_VARIANCE = 0.78f;, +    float bestVariance = MAX_AVG_VARIANCE; // worst variance we'll accept, +      float variance = patternMatchVariance(counters, pattern, MAX_INDIVIDUAL_VARIANCE);, +++ b/core/src/main/java/com/google/zxing/oned/CodaBarReader.java, +  private static final float MAX_ACCEPTABLE = 2.0f;, +  private static final float PADDING = 1.5f;, +    float[] maxes = new float[4];, +    float[] mins = new float[4];, +      mins[i] = 0.0f;  // Accept arbitrarily small "short" stripes., +      mins[i + 2] = ((float) sizes[i] / counts[i] + (float) sizes[i + 2] / counts[i + 2]) / 2.0f;, +        int size = counters[pos + j];, +++ b/core/src/main/java/com/google/zxing/oned/Code128Reader.java, +  private static final float MAX_AVG_VARIANCE = 0.25f;, +  private static final float MAX_INDIVIDUAL_VARIANCE = 0.7f;, +          float bestVariance = MAX_AVG_VARIANCE;, +            float variance = patternMatchVariance(counters, CODE_PATTERNS[startCode],, +    float bestVariance = MAX_AVG_VARIANCE; // worst variance we'll accept, +      float variance = patternMatchVariance(counters, pattern, MAX_INDIVIDUAL_VARIANCE);, +++ b/core/src/main/java/com/google/zxing/oned/Code93Reader.java, +      int scaled = Math.round(counters[i] * 9.0f / sum);, +      if (scaled < 1 || scaled > 4) {, +        for (int j = 0; j < scaled; j++) {, +        pattern <<= scaled;, +++ b/core/src/main/java/com/google/zxing/oned/ITFReader.java, +  private static final float MAX_AVG_VARIANCE = 0.38f;, +  private static final float MAX_INDIVIDUAL_VARIANCE = 0.78f;, +    float bestVariance = MAX_AVG_VARIANCE; // worst variance we'll accept, +      float variance = patternMatchVariance(counters, pattern, MAX_INDIVIDUAL_VARIANCE);, +++ b/core/src/main/java/com/google/zxing/oned/OneDReader.java, +   * @return ratio of total variance between counters and pattern compared to total pattern size, +  protected static float patternMatchVariance(int[] counters,, +                                              float maxIndividualVariance) {, +      return Float.POSITIVE_INFINITY;, +    float unitBarWidth = (float) total / patternLength;, +    maxIndividualVariance *= unitBarWidth;]