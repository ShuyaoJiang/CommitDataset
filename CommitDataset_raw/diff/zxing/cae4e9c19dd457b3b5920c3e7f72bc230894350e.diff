[+++ b/core/src/com/google/zxing/DecodeHintType.java, +   * Assume the barcode is being processed as a GS1 barcode, and modify behavior as needed., +   * For example this affects FNC1 handling for Code 128 (aka GS1-128). Doesn't matter what it maps to;, +   * use {@link Boolean#TRUE}., +   */, +  ASSUME_GS1,, +, +  /**, +++ b/core/src/com/google/zxing/DecodeHintType.java, +   * Assume the barcode is being processed as a GS1 barcode, and modify behavior as needed., +   * For example this affects FNC1 handling for Code 128 (aka GS1-128). Doesn't matter what it maps to;, +   * use {@link Boolean#TRUE}., +   */, +  ASSUME_GS1,, +, +  /**, +++ b/core/src/com/google/zxing/oned/Code128Reader.java, +    boolean convertFNC1 = hints != null && hints.containsKey(DecodeHintType.ASSUME_GS1);, +, +                if (convertFNC1) {, +                }, +                if (convertFNC1) {, +                  if (result.length() == 0){, +                    // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code, +                    // is FNC1 then this is GS1-128. We add the symbology identifier., +                    result.append("]C1");, +                  } else {, +                    // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS), +                    result.append((char) 29);, +                  }, +                }, +                break;, +                if (convertFNC1) {, +                  if (result.length() == 0){, +                    // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code, +                    // is FNC1 then this is GS1-128. We add the symbology identifier., +                    result.append("]C1");, +                  } else {, +                    // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS), +                    result.append((char) 29);, +                  }, +                }]