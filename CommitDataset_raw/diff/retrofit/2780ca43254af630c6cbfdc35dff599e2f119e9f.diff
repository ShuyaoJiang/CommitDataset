[+++ b/pom.xml, +    <gson.version>2.6.1</gson.version>, +++ b/pom.xml, +    <gson.version>2.6.1</gson.version>, +++ b/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonConverterFactory.java, +    return new GsonResponseBodyConverter<>(gson, adapter);, +++ b/pom.xml, +    <gson.version>2.6.1</gson.version>, +++ b/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonConverterFactory.java, +    return new GsonResponseBodyConverter<>(gson, adapter);, +++ b/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonResponseBodyConverter.java, +import com.google.gson.Gson;, +import com.google.gson.stream.JsonReader;, +  private final Gson gson;, +  GsonResponseBodyConverter(Gson gson, TypeAdapter<T> adapter) {, +    this.gson = gson;, +    JsonReader jsonReader = gson.newJsonReader(value.charStream());, +      return adapter.read(jsonReader);, +++ b/pom.xml, +    <gson.version>2.6.1</gson.version>, +++ b/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonConverterFactory.java, +    return new GsonResponseBodyConverter<>(gson, adapter);, +++ b/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonResponseBodyConverter.java, +import com.google.gson.Gson;, +import com.google.gson.stream.JsonReader;, +  private final Gson gson;, +  GsonResponseBodyConverter(Gson gson, TypeAdapter<T> adapter) {, +    this.gson = gson;, +    JsonReader jsonReader = gson.newJsonReader(value.charStream());, +      return adapter.read(jsonReader);, +++ b/retrofit-converters/gson/src/test/java/retrofit2/converter/gson/GsonConverterFactoryTest.java, +        .setLenient(), +, +  @Test public void deserializeUsesConfiguration() throws IOException, InterruptedException {, +    server.enqueue(new MockResponse().setBody("{/* a comment! */}"));, +, +    Response<AnImplementation> response =, +        service.anImplementation(new AnImplementation("value")).execute();, +    assertThat(response.body().getName()).isNull();, +  }]