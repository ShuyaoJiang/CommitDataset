[+++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, +import java.io.IOException;, +/**, + * A {@linkplain CallAdapter.Factory call adapter} which creates Guava futures., + * <p>, + * Adding this class to {@link Retrofit} allows you to return {@link ListenableFuture} from service, + * methods., + * <pre>{@code, + * interface MyService {, + *   &#64;GET("user/me"), + *   ListenableFuture<User> getUser(), + * }, + * }</pre>, + * There are two configurations supported for the {@code ListenableFuture} type parameter:, + * <ul>, + * <li>Direct body (e.g., {@code ListenableFuture<User>}) returns the deserialized body for 2XX, + * responses, sets {@link HttpException} errors for non-2XX responses, and sets {@link IOException}, + * for network errors.</li>, + * <li>Response wrapped body (e.g., {@code ListenableFuture<Response<User>>}) returns a, + * {@link Response} object for all HTTP responses and sets {@link IOException} for network, + * errors</li>, + * </ul>, + */, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, +import java.io.IOException;, +/**, + * A {@linkplain CallAdapter.Factory call adapter} which creates Guava futures., + * <p>, + * Adding this class to {@link Retrofit} allows you to return {@link ListenableFuture} from service, + * methods., + * <pre>{@code, + * interface MyService {, + *   &#64;GET("user/me"), + *   ListenableFuture<User> getUser(), + * }, + * }</pre>, + * There are two configurations supported for the {@code ListenableFuture} type parameter:, + * <ul>, + * <li>Direct body (e.g., {@code ListenableFuture<User>}) returns the deserialized body for 2XX, + * responses, sets {@link HttpException} errors for non-2XX responses, and sets {@link IOException}, + * for network errors.</li>, + * <li>Response wrapped body (e.g., {@code ListenableFuture<Response<User>>}) returns a, + * {@link Response} object for all HTTP responses and sets {@link IOException} for network, + * errors</li>, + * </ul>, + */, +++ b/retrofit-adapters/java8/src/main/java/retrofit2/adapter/java8/Java8CallAdapterFactory.java, +import java.io.IOException;, +/**, + * A {@linkplain CallAdapter.Factory call adapter} which creates Java 8 futures., + * <p>, + * Adding this class to {@link Retrofit} allows you to return {@link CompletableFuture} from, + * service methods., + * <pre>{@code, + * interface MyService {, + *   &#64;GET("user/me"), + *   CompletableFuture<User> getUser(), + * }, + * }</pre>, + * There are two configurations supported for the {@code CompletableFuture} type parameter:, + * <ul>, + * <li>Direct body (e.g., {@code CompletableFuture<User>}) returns the deserialized body for 2XX, + * responses, sets {@link HttpException} errors for non-2XX responses, and sets {@link IOException}, + * for network errors.</li>, + * <li>Response wrapped body (e.g., {@code CompletableFuture<Response<User>>}) returns a, + * {@link Response} object for all HTTP responses and sets {@link IOException} for network, + * errors</li>, + * </ul>, + */, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, +import java.io.IOException;, +/**, + * A {@linkplain CallAdapter.Factory call adapter} which creates Guava futures., + * <p>, + * Adding this class to {@link Retrofit} allows you to return {@link ListenableFuture} from service, + * methods., + * <pre>{@code, + * interface MyService {, + *   &#64;GET("user/me"), + *   ListenableFuture<User> getUser(), + * }, + * }</pre>, + * There are two configurations supported for the {@code ListenableFuture} type parameter:, + * <ul>, + * <li>Direct body (e.g., {@code ListenableFuture<User>}) returns the deserialized body for 2XX, + * responses, sets {@link HttpException} errors for non-2XX responses, and sets {@link IOException}, + * for network errors.</li>, + * <li>Response wrapped body (e.g., {@code ListenableFuture<Response<User>>}) returns a, + * {@link Response} object for all HTTP responses and sets {@link IOException} for network, + * errors</li>, + * </ul>, + */, +++ b/retrofit-adapters/java8/src/main/java/retrofit2/adapter/java8/Java8CallAdapterFactory.java, +import java.io.IOException;, +/**, + * A {@linkplain CallAdapter.Factory call adapter} which creates Java 8 futures., + * <p>, + * Adding this class to {@link Retrofit} allows you to return {@link CompletableFuture} from, + * service methods., + * <pre>{@code]