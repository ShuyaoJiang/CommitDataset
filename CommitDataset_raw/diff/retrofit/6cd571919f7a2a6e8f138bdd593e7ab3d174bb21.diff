[+++ b/retrofit-adapters/java8/README.md, +Deprecated – Included by default in Retrofit, +---------------------------------------, +, +, +++ b/retrofit-adapters/java8/README.md, +Deprecated – Included by default in Retrofit, +---------------------------------------, +, +, +++ b/retrofit-adapters/java8/src/main/java/retrofit2/adapter/java8/Java8CallAdapterFactory.java, + * @deprecated Retrofit includes support for CompletableFuture. This no longer needs to be added to, + * the Retrofit instance explicitly., + *, +@Deprecated, +++ b/retrofit-adapters/java8/README.md, +Deprecated – Included by default in Retrofit, +---------------------------------------, +, +, +++ b/retrofit-adapters/java8/src/main/java/retrofit2/adapter/java8/Java8CallAdapterFactory.java, + * @deprecated Retrofit includes support for CompletableFuture. This no longer needs to be added to, + * the Retrofit instance explicitly., + *, +@Deprecated, +++ b/retrofit-mock/src/main/java/retrofit2/mock/Calls.java, +      return new Request.Builder().url("http://localhost").build();, +++ b/retrofit-adapters/java8/README.md, +Deprecated – Included by default in Retrofit, +---------------------------------------, +, +, +++ b/retrofit-adapters/java8/src/main/java/retrofit2/adapter/java8/Java8CallAdapterFactory.java, + * @deprecated Retrofit includes support for CompletableFuture. This no longer needs to be added to, + * the Retrofit instance explicitly., + *, +@Deprecated, +++ b/retrofit-mock/src/main/java/retrofit2/mock/Calls.java, +      return new Request.Builder().url("http://localhost").build();, +++ b/retrofit-mock/src/test/java/retrofit2/mock/CallsTest.java, +import java.io.FileNotFoundException;, +import retrofit2.Retrofit;, +++ b/retrofit-adapters/java8/README.md, +Deprecated – Included by default in Retrofit, +---------------------------------------, +, +, +++ b/retrofit-adapters/java8/src/main/java/retrofit2/adapter/java8/Java8CallAdapterFactory.java, + * @deprecated Retrofit includes support for CompletableFuture. This no longer needs to be added to, + * the Retrofit instance explicitly., + *, +@Deprecated, +++ b/retrofit-mock/src/main/java/retrofit2/mock/Calls.java, +      return new Request.Builder().url("http://localhost").build();, +++ b/retrofit-mock/src/test/java/retrofit2/mock/CallsTest.java, +import java.io.FileNotFoundException;, +import retrofit2.Retrofit;, +++ b/retrofit/src/main/java/retrofit2/CompletableFutureCallAdapterFactory.java, +/*, + * Copyright (C) 2016 Square, Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package retrofit2;, +, +import java.io.IOException;, +import java.lang.annotation.Annotation;, +import java.lang.reflect.ParameterizedType;, +import java.lang.reflect.Type;, +import java.util.concurrent.CompletableFuture;, +import org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement;, +, +/**, + * A {@linkplain CallAdapter.Factory call adapter} which creates Java 8 futures., + * <p>, + * Adding this class to {@link Retrofit} allows you to return {@link CompletableFuture} from, + * service methods., + * <pre><code>, + * interface MyService {, + *   &#64;GET("user/me"), + *   CompletableFuture&lt;User&gt; getUser(), + * }, + * </code></pre>, + * There are two configurations supported for the {@code CompletableFuture} type parameter:, + * <ul>, + * <li>Direct body (e.g., {@code CompletableFuture<User>}) returns the deserialized body for 2XX, + * responses, sets {@link retrofit2.HttpException HttpException} errors for non-2XX responses, and, + * sets {@link IOException} for network errors.</li>, + * <li>Response wrapped body (e.g., {@code CompletableFuture<Response<User>>}) returns a, + * {@link Response} object for all HTTP responses and sets {@link IOException} for network]