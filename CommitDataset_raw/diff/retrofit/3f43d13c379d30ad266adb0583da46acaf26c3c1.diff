[+++ b/README.md, +[this file](https://github.com/square/retrofit/blob/master/retrofit/src/main/resources/META-INF/proguard/retrofit2.pro)., +++ b/README.md, +[this file](https://github.com/square/retrofit/blob/master/retrofit/src/main/resources/META-INF/proguard/retrofit2.pro)., +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +  private final ServiceMethod<T, ?> serviceMethod;, +  OkHttpCall(ServiceMethod<T, ?> serviceMethod, @Nullable Object[] args) {, +    this.serviceMethod = serviceMethod;, +    return new OkHttpCall<>(serviceMethod, args);, +    okhttp3.Call call = serviceMethod.toCall(args);, +      T body = serviceMethod.toResponse(catchingBody);, +++ b/README.md, +[this file](https://github.com/square/retrofit/blob/master/retrofit/src/main/resources/META-INF/proguard/retrofit2.pro)., +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +  private final ServiceMethod<T, ?> serviceMethod;, +  OkHttpCall(ServiceMethod<T, ?> serviceMethod, @Nullable Object[] args) {, +    this.serviceMethod = serviceMethod;, +    return new OkHttpCall<>(serviceMethod, args);, +    okhttp3.Call call = serviceMethod.toCall(args);, +      T body = serviceMethod.toResponse(catchingBody);, +++ b/retrofit/src/main/java/retrofit2/ServiceMethod.java, +import java.io.IOException;, +  /** Builds an HTTP request from method arguments. */, +  okhttp3.Call toCall(@Nullable Object[] args) throws IOException {, +    return callFactory.newCall(requestFactory.create(args));, +  }, +, +    return callAdapter.adapt(new OkHttpCall<>(this, args));, +  }, +, +  /** Builds a method return value from an HTTP response body. */, +  ResponseT toResponse(ResponseBody body) throws IOException {, +    return responseConverter.convert(body);, +++ b/README.md, +[this file](https://github.com/square/retrofit/blob/master/retrofit/src/main/resources/META-INF/proguard/retrofit2.pro)., +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +  private final ServiceMethod<T, ?> serviceMethod;, +  OkHttpCall(ServiceMethod<T, ?> serviceMethod, @Nullable Object[] args) {, +    this.serviceMethod = serviceMethod;, +    return new OkHttpCall<>(serviceMethod, args);, +    okhttp3.Call call = serviceMethod.toCall(args);, +      T body = serviceMethod.toResponse(catchingBody);, +++ b/retrofit/src/main/java/retrofit2/ServiceMethod.java, +import java.io.IOException;, +  /** Builds an HTTP request from method arguments. */, +  okhttp3.Call toCall(@Nullable Object[] args) throws IOException {, +    return callFactory.newCall(requestFactory.create(args));, +  }, +, +    return callAdapter.adapt(new OkHttpCall<>(this, args));, +  }, +, +  /** Builds a method return value from an HTTP response body. */, +  ResponseT toResponse(ResponseBody body) throws IOException {, +    return responseConverter.convert(body);, +++ b/website/index.html, +              <p>If you are using R8 or ProGuard add the options from <a href="https://github.com/square/retrofit/blob/master/retrofit/src/main/resources/META-INF/proguard/retrofit2.pro">this file</a>.</p>]