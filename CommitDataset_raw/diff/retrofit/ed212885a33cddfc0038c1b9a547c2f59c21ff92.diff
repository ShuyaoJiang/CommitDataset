[+++ b/pom.xml, +    <wire.version>1.0.0</wire.version>, +++ b/pom.xml, +    <wire.version>1.0.0</wire.version>, +++ b/retrofit-converters/wire/src/main/java/retrofit/converter/WireConverter.java, +import java.io.ByteArrayOutputStream;, +import java.io.InputStream;, +import java.io.OutputStream;, +      byte[] data = consumeAsBytes(body.in());, +      return wire.parseFrom(data, (Class<Message>) c);, +, +  /** Reads a stream into a {@code byte} array. */, +  private byte[] consumeAsBytes(InputStream in) throws IOException {, +    ByteArrayOutputStream out = new ByteArrayOutputStream();, +    pipe(in, out);, +    return out.toByteArray();, +  }, +, +  /** Reads content from the given input and pipes it to the given output. */, +  private void pipe(InputStream in, OutputStream out) throws IOException {, +    byte[] buffer = new byte[4096];, +    int count;, +    while ((count = in.read(buffer)) != -1) {, +      out.write(buffer, 0, count);, +    }, +  }, +++ b/pom.xml, +    <wire.version>1.0.0</wire.version>, +++ b/retrofit-converters/wire/src/main/java/retrofit/converter/WireConverter.java, +import java.io.ByteArrayOutputStream;, +import java.io.InputStream;, +import java.io.OutputStream;, +      byte[] data = consumeAsBytes(body.in());, +      return wire.parseFrom(data, (Class<Message>) c);, +, +  /** Reads a stream into a {@code byte} array. */, +  private byte[] consumeAsBytes(InputStream in) throws IOException {, +    ByteArrayOutputStream out = new ByteArrayOutputStream();, +    pipe(in, out);, +    return out.toByteArray();, +  }, +, +  /** Reads content from the given input and pipes it to the given output. */, +  private void pipe(InputStream in, OutputStream out) throws IOException {, +    byte[] buffer = new byte[4096];, +    int count;, +    while ((count = in.read(buffer)) != -1) {, +      out.write(buffer, 0, count);, +    }, +  }, +++ b/website/index.html, +              <li>URL parameter replacement and query parameter support</li>]