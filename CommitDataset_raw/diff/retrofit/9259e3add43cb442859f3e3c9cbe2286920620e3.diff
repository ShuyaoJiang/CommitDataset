[+++ b/modules/io/src-tests/retrofit/io/TypedFileTest.java, +import java.io.FileOutputStream;, +import java.io.IOException;, +, +  public void testLength() throws IOException {, +    File tempFile = File.createTempFile("foo", ".tmp");, +    try {, +      TypedFile typedFile = new TypedFile(tempFile, MimeType.PNG);, +      assertEquals("length", 0, typedFile.length());, +, +      writeToFile(tempFile, new byte[]{0, 1, 2, 3, 4});, +, +      assertEquals("file length", 5, tempFile.length());, +      assertEquals("typed file length", 5, typedFile.length());, +, +    } finally {, +      //noinspection ResultOfMethodCallIgnored, +      tempFile.delete();, +    }, +  }, +, +  private void writeToFile(File file, byte[] data) throws IOException {, +    FileOutputStream fos = new FileOutputStream(file);, +    try {, +      fos.write(data);, +    } finally {, +      fos.close();, +    }, +  }, +++ b/modules/io/src-tests/retrofit/io/TypedFileTest.java, +import java.io.FileOutputStream;, +import java.io.IOException;, +, +  public void testLength() throws IOException {, +    File tempFile = File.createTempFile("foo", ".tmp");, +    try {, +      TypedFile typedFile = new TypedFile(tempFile, MimeType.PNG);, +      assertEquals("length", 0, typedFile.length());, +, +      writeToFile(tempFile, new byte[]{0, 1, 2, 3, 4});, +, +      assertEquals("file length", 5, tempFile.length());, +      assertEquals("typed file length", 5, typedFile.length());, +, +    } finally {, +      //noinspection ResultOfMethodCallIgnored, +      tempFile.delete();, +    }, +  }, +, +  private void writeToFile(File file, byte[] data) throws IOException {, +    FileOutputStream fos = new FileOutputStream(file);, +    try {, +      fos.write(data);, +    } finally {, +      fos.close();, +    }, +  }, +++ b/modules/io/src/retrofit/io/AbstractTypedBytes.java, +  public AbstractTypedBytes(MimeType mimeType) {, +  /** Returns the length in bytes. */, +  public abstract int length();, +++ b/modules/io/src-tests/retrofit/io/TypedFileTest.java, +import java.io.FileOutputStream;, +import java.io.IOException;, +, +  public void testLength() throws IOException {, +    File tempFile = File.createTempFile("foo", ".tmp");, +    try {, +      TypedFile typedFile = new TypedFile(tempFile, MimeType.PNG);, +      assertEquals("length", 0, typedFile.length());, +, +      writeToFile(tempFile, new byte[]{0, 1, 2, 3, 4});, +, +      assertEquals("file length", 5, tempFile.length());, +      assertEquals("typed file length", 5, typedFile.length());, +, +    } finally {, +      //noinspection ResultOfMethodCallIgnored, +      tempFile.delete();, +    }, +  }, +, +  private void writeToFile(File file, byte[] data) throws IOException {, +    FileOutputStream fos = new FileOutputStream(file);, +    try {, +      fos.write(data);, +    } finally {, +      fos.close();, +    }, +  }, +++ b/modules/io/src/retrofit/io/AbstractTypedBytes.java, +  public AbstractTypedBytes(MimeType mimeType) {, +  /** Returns the length in bytes. */, +  public abstract int length();, +++ b/modules/io/src/retrofit/io/TypedByteArray.java, +    super(mimeType);, +  @Override public int length() {, +    return bytes.length;, +  }]