[+++ b/retrofit-converters/wire/src/main/java/retrofit/converter/WireConverter.java, +      throw new IllegalArgumentException("Expected a proto but was: " + body.mimeType());, +++ b/retrofit-converters/wire/src/main/java/retrofit/converter/WireConverter.java, +      throw new IllegalArgumentException("Expected a proto but was: " + body.mimeType());, +++ b/retrofit-converters/wire/src/test/java/retrofit/converter/WireConverterTest.java, +    } catch (IllegalArgumentException e) {, +++ b/retrofit-converters/wire/src/main/java/retrofit/converter/WireConverter.java, +      throw new IllegalArgumentException("Expected a proto but was: " + body.mimeType());, +++ b/retrofit-converters/wire/src/test/java/retrofit/converter/WireConverterTest.java, +    } catch (IllegalArgumentException e) {, +++ b/retrofit/src/main/java/retrofit/RestMethodInfo.java, +        throw methodError("URL query string \"%s\" must not have replace block. For dynamic query", +            + " parameters use @Query.", query);, +++ b/retrofit-converters/wire/src/main/java/retrofit/converter/WireConverter.java, +      throw new IllegalArgumentException("Expected a proto but was: " + body.mimeType());, +++ b/retrofit-converters/wire/src/test/java/retrofit/converter/WireConverterTest.java, +    } catch (IllegalArgumentException e) {, +++ b/retrofit/src/main/java/retrofit/RestMethodInfo.java, +        throw methodError("URL query string \"%s\" must not have replace block. For dynamic query", +            + " parameters use @Query.", query);, +++ b/retrofit/src/test/java/retrofit/RestMethodInfoTest.java, +          "Example.a: URL query string \"bar={bar}\" must not have replace block. For dynamic query", +              + " parameters use @Query.");]