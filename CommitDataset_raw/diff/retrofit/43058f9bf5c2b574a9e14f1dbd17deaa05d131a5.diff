[+++ b/pom.xml, +    <okhttp.version>2.4.0-RC1</okhttp.version>, +++ b/pom.xml, +    <okhttp.version>2.4.0-RC1</okhttp.version>, +++ b/retrofit-mock/src/test/java/retrofit/MockRestAdapterTest.java, +        .endpoint("http://example.com"), +++ b/pom.xml, +    <okhttp.version>2.4.0-RC1</okhttp.version>, +++ b/retrofit-mock/src/test/java/retrofit/MockRestAdapterTest.java, +        .endpoint("http://example.com"), +++ /dev/null, +++ b/pom.xml, +    <okhttp.version>2.4.0-RC1</okhttp.version>, +++ b/retrofit-mock/src/test/java/retrofit/MockRestAdapterTest.java, +        .endpoint("http://example.com"), +++ /dev/null, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import com.squareup.okhttp.FormEncodingBuilder;, +  private void addFormField(String name, String value, boolean encode) {, +    if (encode) {, +      formEncodingBuilder.add(name, value);, +    } else {, +      formEncodingBuilder.addEncoded(name, value);, +    }, +  }, +, +          boolean encode = field.encode();, +                addFormField(name, iterableValue.toString(), encode);, +                addFormField(name, arrayValue.toString(), encode);, +            addFormField(name, value.toString(), encode);, +          boolean encode = fieldMap.encode();, +              addFormField(entryKey.toString(), entryValue.toString(), encode);, +++ b/pom.xml, +    <okhttp.version>2.4.0-RC1</okhttp.version>, +++ b/retrofit-mock/src/test/java/retrofit/MockRestAdapterTest.java, +        .endpoint("http://example.com"), +++ /dev/null, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import com.squareup.okhttp.FormEncodingBuilder;, +  private void addFormField(String name, String value, boolean encode) {, +    if (encode) {, +      formEncodingBuilder.add(name, value);, +    } else {, +      formEncodingBuilder.addEncoded(name, value);, +    }, +  }, +, +          boolean encode = field.encode();, +                addFormField(name, iterableValue.toString(), encode);, +                addFormField(name, arrayValue.toString(), encode);, +            addFormField(name, value.toString(), encode);, +          boolean encode = fieldMap.encode();, +              addFormField(entryKey.toString(), entryValue.toString(), encode);, +++ b/retrofit/src/main/java/retrofit/http/Field.java, +  /** Specifies whether the {@linkplain #value() name} and value are URL encoded. */, +  boolean encode() default true;, +++ b/pom.xml, +    <okhttp.version>2.4.0-RC1</okhttp.version>, +++ b/retrofit-mock/src/test/java/retrofit/MockRestAdapterTest.java, +        .endpoint("http://example.com"), +++ /dev/null, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import com.squareup.okhttp.FormEncodingBuilder;, +  private void addFormField(String name, String value, boolean encode) {, +    if (encode) {, +      formEncodingBuilder.add(name, value);, +    } else {, +      formEncodingBuilder.addEncoded(name, value);, +    }, +  }, +, +          boolean encode = field.encode();, +                addFormField(name, iterableValue.toString(), encode);, +                addFormField(name, arrayValue.toString(), encode);, +            addFormField(name, value.toString(), encode);, +          boolean encode = fieldMap.encode();, +              addFormField(entryKey.toString(), entryValue.toString(), encode);, +++ b/retrofit/src/main/java/retrofit/http/Field.java, +  /** Specifies whether the {@linkplain #value() name} and value are URL encoded. */, +  boolean encode() default true;, +++ b/retrofit/src/main/java/retrofit/http/FieldMap.java, +  /** Specifies whether the names and values are URL encoded. */, +  boolean encode() default true;, +++ b/pom.xml, +    <okhttp.version>2.4.0-RC1</okhttp.version>, +++ b/retrofit-mock/src/test/java/retrofit/MockRestAdapterTest.java, +        .endpoint("http://example.com"), +++ /dev/null, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import com.squareup.okhttp.FormEncodingBuilder;, +  private void addFormField(String name, String value, boolean encode) {, +    if (encode) {, +      formEncodingBuilder.add(name, value);, +    } else {, +      formEncodingBuilder.addEncoded(name, value);, +    }, +  }, +, +          boolean encode = field.encode();, +                addFormField(name, iterableValue.toString(), encode);]