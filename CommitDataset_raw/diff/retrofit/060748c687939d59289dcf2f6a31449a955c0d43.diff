[+++ b/io/src/main/java/retrofit/internal/Objects.java, +// Copyright 2010 Square, Inc., +package retrofit.internal;, +, +/**, + * Object utility methods., + *, + * @author Bob Lee (bob@squareup.com), + */, +public class Objects {, +, +  /**, +   * Returns t unless it's null., +   *, +   * @throws NullPointerException if t is null, +   */, +  public static <T> T nonNull(T t, String name) {, +    if (t == null) throw new NullPointerException(name);, +    return t;, +  }, +}, +++ b/io/src/main/java/retrofit/internal/Objects.java, +// Copyright 2010 Square, Inc., +package retrofit.internal;, +, +/**, + * Object utility methods., + *, + * @author Bob Lee (bob@squareup.com), + */, +public class Objects {, +, +  /**, +   * Returns t unless it's null., +   *, +   * @throws NullPointerException if t is null, +   */, +  public static <T> T nonNull(T t, String name) {, +    if (t == null) throw new NullPointerException(name);, +    return t;, +  }, +}, +++ b/io/src/main/java/retrofit/io/AbstractTypedBytes.java, +import retrofit.internal.Objects;, +, +    this.mimeType = Objects.nonNull(mimeType, "mimeType");, +++ b/io/src/main/java/retrofit/internal/Objects.java, +// Copyright 2010 Square, Inc., +package retrofit.internal;, +, +/**, + * Object utility methods., + *, + * @author Bob Lee (bob@squareup.com), + */, +public class Objects {, +, +  /**, +   * Returns t unless it's null., +   *, +   * @throws NullPointerException if t is null, +   */, +  public static <T> T nonNull(T t, String name) {, +    if (t == null) throw new NullPointerException(name);, +    return t;, +  }, +}, +++ b/io/src/main/java/retrofit/io/AbstractTypedBytes.java, +import retrofit.internal.Objects;, +, +    this.mimeType = Objects.nonNull(mimeType, "mimeType");, +++ b/io/src/main/java/retrofit/io/TypedByteArray.java, +import retrofit.internal.Objects;, +, +    this.bytes = Objects.nonNull(bytes, "bytes");, +++ b/io/src/main/java/retrofit/internal/Objects.java, +// Copyright 2010 Square, Inc., +package retrofit.internal;, +, +/**, + * Object utility methods., + *, + * @author Bob Lee (bob@squareup.com), + */, +public class Objects {, +, +  /**, +   * Returns t unless it's null., +   *, +   * @throws NullPointerException if t is null, +   */, +  public static <T> T nonNull(T t, String name) {, +    if (t == null) throw new NullPointerException(name);, +    return t;, +  }, +}, +++ b/io/src/main/java/retrofit/io/AbstractTypedBytes.java, +import retrofit.internal.Objects;, +, +    this.mimeType = Objects.nonNull(mimeType, "mimeType");]