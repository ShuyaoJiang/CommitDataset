[+++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, + * responses, sets {@link retrofit2.HttpException HttpException} errors for non-2XX responses, and, + * sets {@link IOException} for network errors.</li>, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, + * responses, sets {@link retrofit2.HttpException HttpException} errors for non-2XX responses, and, + * sets {@link IOException} for network errors.</li>, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/HttpException.java, +/** @deprecated Use {@link retrofit2.HttpException}. */, +@Deprecated, +public final class HttpException extends retrofit2.HttpException {, +    super(response);, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, + * responses, sets {@link retrofit2.HttpException HttpException} errors for non-2XX responses, and, + * sets {@link IOException} for network errors.</li>, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/HttpException.java, +/** @deprecated Use {@link retrofit2.HttpException}. */, +@Deprecated, +public final class HttpException extends retrofit2.HttpException {, +    super(response);, +++ b/retrofit-adapters/guava/src/test/java/retrofit2/adapter/guava/ListenableFutureTest.java, +      assertThat(e.getCause()), +          .isInstanceOf(HttpException.class) // Required for backwards compatibility., +          .isInstanceOf(retrofit2.HttpException.class), +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, + * responses, sets {@link retrofit2.HttpException HttpException} errors for non-2XX responses, and, + * sets {@link IOException} for network errors.</li>, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/HttpException.java, +/** @deprecated Use {@link retrofit2.HttpException}. */, +@Deprecated, +public final class HttpException extends retrofit2.HttpException {, +    super(response);, +++ b/retrofit-adapters/guava/src/test/java/retrofit2/adapter/guava/ListenableFutureTest.java, +      assertThat(e.getCause()), +          .isInstanceOf(HttpException.class) // Required for backwards compatibility., +          .isInstanceOf(retrofit2.HttpException.class), +++ b/retrofit-adapters/java8/src/main/java/retrofit2/adapter/java8/HttpException.java, +/** @deprecated Use {@link retrofit2.HttpException}. */, +@Deprecated, +public final class HttpException extends retrofit2.HttpException {, +    super(response);, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, + * responses, sets {@link retrofit2.HttpException HttpException} errors for non-2XX responses, and, + * sets {@link IOException} for network errors.</li>, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/HttpException.java, +/** @deprecated Use {@link retrofit2.HttpException}. */, +@Deprecated, +public final class HttpException extends retrofit2.HttpException {, +    super(response);, +++ b/retrofit-adapters/guava/src/test/java/retrofit2/adapter/guava/ListenableFutureTest.java, +      assertThat(e.getCause()), +          .isInstanceOf(HttpException.class) // Required for backwards compatibility., +          .isInstanceOf(retrofit2.HttpException.class), +++ b/retrofit-adapters/java8/src/main/java/retrofit2/adapter/java8/HttpException.java, +/** @deprecated Use {@link retrofit2.HttpException}. */, +@Deprecated, +public final class HttpException extends retrofit2.HttpException {, +    super(response);, +++ b/retrofit-adapters/java8/src/main/java/retrofit2/adapter/java8/Java8CallAdapterFactory.java, + * responses, sets {@link retrofit2.HttpException HttpException} errors for non-2XX responses, and, + * sets {@link IOException} for network errors.</li>, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, + * responses, sets {@link retrofit2.HttpException HttpException} errors for non-2XX responses, and, + * sets {@link IOException} for network errors.</li>, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/HttpException.java, +/** @deprecated Use {@link retrofit2.HttpException}. */, +@Deprecated, +public final class HttpException extends retrofit2.HttpException {, +    super(response);, +++ b/retrofit-adapters/guava/src/test/java/retrofit2/adapter/guava/ListenableFutureTest.java, +      assertThat(e.getCause()), +          .isInstanceOf(HttpException.class) // Required for backwards compatibility., +          .isInstanceOf(retrofit2.HttpException.class), +++ b/retrofit-adapters/java8/src/main/java/retrofit2/adapter/java8/HttpException.java, +/** @deprecated Use {@link retrofit2.HttpException}. */, +@Deprecated, +public final class HttpException extends retrofit2.HttpException {, +    super(response);, +++ b/retrofit-adapters/java8/src/main/java/retrofit2/adapter/java8/Java8CallAdapterFactory.java, + * responses, sets {@link retrofit2.HttpException HttpException} errors for non-2XX responses, and, + * sets {@link IOException} for network errors.</li>, +++ b/retrofit-adapters/java8/src/test/java/retrofit2/adapter/java8/CompletableFutureTest.java, +      assertThat(e.getCause()), +          .isInstanceOf(HttpException.class) // Required for backwards compatibility., +          .isInstanceOf(retrofit2.HttpException.class), +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, + * responses, sets {@link retrofit2.HttpException HttpException} errors for non-2XX responses, and, + * sets {@link IOException} for network errors.</li>, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/HttpException.java, +/** @deprecated Use {@link retrofit2.HttpException}. */, +@Deprecated, +public final class HttpException extends retrofit2.HttpException {, +    super(response);, +++ b/retrofit-adapters/guava/src/test/java/retrofit2/adapter/guava/ListenableFutureTest.java, +      assertThat(e.getCause()), +          .isInstanceOf(HttpException.class) // Required for backwards compatibility., +          .isInstanceOf(retrofit2.HttpException.class), +++ b/retrofit-adapters/java8/src/main/java/retrofit2/adapter/java8/HttpException.java, +/** @deprecated Use {@link retrofit2.HttpException}. */, +@Deprecated, +public final class HttpException extends retrofit2.HttpException {]