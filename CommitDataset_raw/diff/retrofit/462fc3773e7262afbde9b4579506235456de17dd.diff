[+++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import java.util.Map;, +, +  void addQueryListParams(String name, List<?> values) {, +    if (name == null) {, +      throw new IllegalArgumentException("Query name must not be null.");, +    }, +    if (values == null) {, +      throw new IllegalArgumentException("Query param list must not be null.");, +    }, +, +    for (Object value : values) {, +      addQueryParam(name, value.toString());, +    }, +  }, +, +  void addQueryMapParams(String name, Map<?, ?> values) {, +    if (name == null) {, +      throw new IllegalArgumentException("Query name must not be null.");, +    }, +    if (values == null) {, +      throw new IllegalArgumentException("Query param map must not be null.");, +    }, +, +    for (Map.Entry<?, ?> entry : values.entrySet()) {, +      Object value = entry.getValue();, +      if (value != null) { // Skip null values., +        addQueryParam(entry.getKey().toString(), value.toString());, +      }, +    }, +  }, +, +            if (value instanceof List) {, +              addQueryListParams(name, (List<?>) value);, +            } else if (value instanceof Map) {, +              addQueryMapParams(name, (Map<?, ?>) value);, +            } else {, +          }, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import java.util.Map;, +, +  void addQueryListParams(String name, List<?> values) {, +    if (name == null) {, +      throw new IllegalArgumentException("Query name must not be null.");, +    }, +    if (values == null) {, +      throw new IllegalArgumentException("Query param list must not be null.");, +    }, +, +    for (Object value : values) {, +      addQueryParam(name, value.toString());, +    }, +  }, +, +  void addQueryMapParams(String name, Map<?, ?> values) {, +    if (name == null) {, +      throw new IllegalArgumentException("Query name must not be null.");, +    }, +    if (values == null) {, +      throw new IllegalArgumentException("Query param map must not be null.");, +    }, +, +    for (Map.Entry<?, ?> entry : values.entrySet()) {, +      Object value = entry.getValue();, +      if (value != null) { // Skip null values., +        addQueryParam(entry.getKey().toString(), value.toString());, +      }, +    }, +  }, +, +            if (value instanceof List) {, +              addQueryListParams(name, (List<?>) value);, +            } else if (value instanceof Map) {, +              addQueryMapParams(name, (Map<?, ?>) value);, +            } else {, +          }, +++ b/retrofit/src/main/java/retrofit/http/Query.java, + * {@link String#valueOf(Object)}. Parameter values will be URL encoded. List, + * and Map contents are handled as individual query parameters., +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import java.util.Map;, +, +  void addQueryListParams(String name, List<?> values) {, +    if (name == null) {, +      throw new IllegalArgumentException("Query name must not be null.");, +    }, +    if (values == null) {, +      throw new IllegalArgumentException("Query param list must not be null.");, +    }, +, +    for (Object value : values) {, +      addQueryParam(name, value.toString());, +    }, +  }, +, +  void addQueryMapParams(String name, Map<?, ?> values) {, +    if (name == null) {, +      throw new IllegalArgumentException("Query name must not be null.");, +    }, +    if (values == null) {]