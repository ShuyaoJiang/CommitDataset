[+++ b/retrofit/src/main/java/retrofit/Call.java, + *, + * @param <T> Successful response body type., +  /**, +   * Synchronously send the request and return its response., +   *, +   * @throws IOException if a problem occurred talking to the server., +   * @throws RuntimeException (and subclasses) if an unexpected error occurs creating the request, +   * or processing the response., +   */, +, +  /**, +   * Asynchronously send the request and notify {@code callback} of its response or if an error, +   * occurred talking to the server, creating the request, or processing the response., +   */, +, +  /**, +   * Cancel this call. An attempt will be made to cancel in-flight calls, and if the call has not, +   * yet been executed it never will be., +   */, +, +  /** Create a new, identical call to this one. */, +++ b/retrofit/src/main/java/retrofit/Call.java, + *, + * @param <T> Successful response body type., +  /**, +   * Synchronously send the request and return its response., +   *, +   * @throws IOException if a problem occurred talking to the server., +   * @throws RuntimeException (and subclasses) if an unexpected error occurs creating the request, +   * or processing the response., +   */, +, +  /**, +   * Asynchronously send the request and notify {@code callback} of its response or if an error, +   * occurred talking to the server, creating the request, or processing the response., +   */, +, +  /**, +   * Cancel this call. An attempt will be made to cancel in-flight calls, and if the call has not, +   * yet been executed it never will be., +   */, +, +  /** Create a new, identical call to this one. */, +++ b/retrofit/src/main/java/retrofit/CallAdapter.java, +  /** Creates {@link CallAdapter} instances based on a desired type. */, +     * Returns a call adapter for interface methods that return {@code returnType}, or null if it, +     * cannot be handled by this factory., +++ b/retrofit/src/main/java/retrofit/Call.java, + *, + * @param <T> Successful response body type., +  /**, +   * Synchronously send the request and return its response., +   *, +   * @throws IOException if a problem occurred talking to the server., +   * @throws RuntimeException (and subclasses) if an unexpected error occurs creating the request, +   * or processing the response., +   */, +, +  /**, +   * Asynchronously send the request and notify {@code callback} of its response or if an error, +   * occurred talking to the server, creating the request, or processing the response., +   */, +, +  /**, +   * Cancel this call. An attempt will be made to cancel in-flight calls, and if the call has not, +   * yet been executed it never will be., +   */, +, +  /** Create a new, identical call to this one. */, +++ b/retrofit/src/main/java/retrofit/CallAdapter.java, +  /** Creates {@link CallAdapter} instances based on a desired type. */, +     * Returns a call adapter for interface methods that return {@code returnType}, or null if it, +     * cannot be handled by this factory., +++ b/retrofit/src/main/java/retrofit/Callback.java, + * @param <T> Successful response body type., +  /**, +   * Invoked for a received HTTP response., +   * <p>, +   * Note: An HTTP response may still indicate an application-level failure such as a 404 or 500., +   * Call {@link Response#isSuccess()} to determine if the response indicates success., +   */, +  /**, +   * Invoked when a network exception occurred talking to the server or when an unexpected, +   * exception occurred creating the request or processing the response., +   */, +++ b/retrofit/src/main/java/retrofit/Call.java, + *, + * @param <T> Successful response body type., +  /**, +   * Synchronously send the request and return its response., +   *, +   * @throws IOException if a problem occurred talking to the server., +   * @throws RuntimeException (and subclasses) if an unexpected error occurs creating the request, +   * or processing the response., +   */, +, +  /**, +   * Asynchronously send the request and notify {@code callback} of its response or if an error, +   * occurred talking to the server, creating the request, or processing the response.]