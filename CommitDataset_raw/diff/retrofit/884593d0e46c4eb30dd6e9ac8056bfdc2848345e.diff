[+++ b/retrofit/src/main/java/retrofit/ChangeableServer.java, +public class ChangeableServer implements IServer {, +    this.name = Server.DEFAULT_NAME;, +++ b/retrofit/src/main/java/retrofit/ChangeableServer.java, +public class ChangeableServer implements IServer {, +    this.name = Server.DEFAULT_NAME;, +++ b/retrofit/src/main/java/retrofit/IServer.java, +package retrofit;, +, +/**, + * Represents an API endpoint URL and associated name. Callers should always consult the instance, + * for the latest values rather than caching the returned values., + *, + * @author Matt Hickman (mhickman@palantir.com), + * @see Server, ChangeableServer, + */, +public interface IServer {, +, +  /** The base API URL. */, +  public String getUrl();, +, +  /** A name for differentiating between multiple API URLs. */, +  public String getName();, +, +}, +++ b/retrofit/src/main/java/retrofit/ChangeableServer.java, +public class ChangeableServer implements IServer {, +    this.name = Server.DEFAULT_NAME;, +++ b/retrofit/src/main/java/retrofit/IServer.java, +package retrofit;, +, +/**, + * Represents an API endpoint URL and associated name. Callers should always consult the instance, + * for the latest values rather than caching the returned values., + *, + * @author Matt Hickman (mhickman@palantir.com), + * @see Server, ChangeableServer, + */, +public interface IServer {, +, +  /** The base API URL. */, +  public String getUrl();, +, +  /** A name for differentiating between multiple API URLs. */, +  public String getName();, +, +}, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, +  final IServer server;, +  private RestAdapter(IServer server, Client.Provider clientProvider, Executor httpExecutor,, +   * <li>{@link #setServer(IServer)}</li>, +    private IServer server;, +    public Builder setServer(IServer server) {, +++ b/retrofit/src/main/java/retrofit/ChangeableServer.java, +public class ChangeableServer implements IServer {, +    this.name = Server.DEFAULT_NAME;, +++ b/retrofit/src/main/java/retrofit/IServer.java, +package retrofit;, +, +/**, + * Represents an API endpoint URL and associated name. Callers should always consult the instance, + * for the latest values rather than caching the returned values., + *, + * @author Matt Hickman (mhickman@palantir.com), + * @see Server, ChangeableServer, + */, +public interface IServer {, +, +  /** The base API URL. */, +  public String getUrl();, +, +  /** A name for differentiating between multiple API URLs. */, +  public String getName();, +, +}, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, +  final IServer server;, +  private RestAdapter(IServer server, Client.Provider clientProvider, Executor httpExecutor,, +   * <li>{@link #setServer(IServer)}</li>, +    private IServer server;, +    public Builder setServer(IServer server) {, +++ b/retrofit/src/main/java/retrofit/Server.java, +public class Server implements IServer {, +  @Override public String getUrl() {, +  @Override public String getName() {, +++ b/retrofit/src/main/java/retrofit/ChangeableServer.java, +public class ChangeableServer implements IServer {, +    this.name = Server.DEFAULT_NAME;, +++ b/retrofit/src/main/java/retrofit/IServer.java, +package retrofit;, +, +/**, + * Represents an API endpoint URL and associated name. Callers should always consult the instance, + * for the latest values rather than caching the returned values., + *, + * @author Matt Hickman (mhickman@palantir.com), + * @see Server, ChangeableServer, + */, +public interface IServer {, +]