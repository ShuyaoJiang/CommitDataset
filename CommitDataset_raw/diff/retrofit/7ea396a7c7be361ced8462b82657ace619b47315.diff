[+++ b/retrofit/src/main/java/retrofit/http/GsonConverter.java, +    @Override public String mimeType() {, +      return "application/json; charset=UTF-8";, +++ b/retrofit/src/main/java/retrofit/http/GsonConverter.java, +    @Override public String mimeType() {, +      return "application/json; charset=UTF-8";, +++ b/retrofit/src/main/java/retrofit/http/RestAdapter.java, +            throw RetrofitError.conversionError(url, converter, statusCode, headers, body, type, e);, +        throw RetrofitError.httpError(url, converter, statusCode, headers, body, type);, +      contentType = body.mimeType();, +++ b/retrofit/src/main/java/retrofit/http/GsonConverter.java, +    @Override public String mimeType() {, +      return "application/json; charset=UTF-8";, +++ b/retrofit/src/main/java/retrofit/http/RestAdapter.java, +            throw RetrofitError.conversionError(url, converter, statusCode, headers, body, type, e);, +        throw RetrofitError.httpError(url, converter, statusCode, headers, body, type);, +      contentType = body.mimeType();, +++ b/retrofit/src/main/java/retrofit/http/RetrofitError.java, +import java.util.List;, +    return new RetrofitError(url, 0, null, null, null, null, true, exception);, +  static RetrofitError conversionError(String url, Converter converter, int statusCode,, +      List<Header> headers, byte[] body, Type successType, ConversionException exception) {, +    return new RetrofitError(url, statusCode, headers, body, converter, successType, false,, +        exception);, +  static RetrofitError httpError(String url, Converter converter, int statusCode,, +      List<Header> headers, byte[] body, Type successType) {, +    return new RetrofitError(url, statusCode, headers, body, converter, successType, false, null);, +    return new RetrofitError(url, 0, null, null, null, null, false, exception);, +  private final int statusCode;, +  private final List<Header> headers;, +  private final byte[] body;, +  private RetrofitError(String url, int statusCode, List<Header> headers, byte[] body,, +      Converter converter, Type successType, boolean networkError, Throwable exception) {, +    this.statusCode = statusCode;, +    this.headers = headers;, +    this.body = body;, +  /** HTTP status code of the response or 0 if no response received. */, +  public int getStatusCode() {, +    return statusCode;, +  /** List of headers returning in the HTTP response, if any. */, +  public List<Header> getHeaders() {, +    return headers;, +  }, +, +  /** Raw {@code byte[]} of the HTTP response body, if any. */, +  public byte[] getRawBody() {, +    return body;, +  }, +, +++ b/retrofit/src/main/java/retrofit/http/GsonConverter.java, +    @Override public String mimeType() {, +      return "application/json; charset=UTF-8";, +++ b/retrofit/src/main/java/retrofit/http/RestAdapter.java, +            throw RetrofitError.conversionError(url, converter, statusCode, headers, body, type, e);, +        throw RetrofitError.httpError(url, converter, statusCode, headers, body, type);, +      contentType = body.mimeType();, +++ b/retrofit/src/main/java/retrofit/http/RetrofitError.java, +import java.util.List;, +    return new RetrofitError(url, 0, null, null, null, null, true, exception);, +  static RetrofitError conversionError(String url, Converter converter, int statusCode,, +      List<Header> headers, byte[] body, Type successType, ConversionException exception) {, +    return new RetrofitError(url, statusCode, headers, body, converter, successType, false,, +        exception);, +  static RetrofitError httpError(String url, Converter converter, int statusCode,, +      List<Header> headers, byte[] body, Type successType) {, +    return new RetrofitError(url, statusCode, headers, body, converter, successType, false, null);, +    return new RetrofitError(url, 0, null, null, null, null, false, exception);, +  private final int statusCode;, +  private final List<Header> headers;, +  private final byte[] body;, +  private RetrofitError(String url, int statusCode, List<Header> headers, byte[] body,, +      Converter converter, Type successType, boolean networkError, Throwable exception) {, +    this.statusCode = statusCode;, +    this.headers = headers;, +    this.body = body;, +  /** HTTP status code of the response or 0 if no response received. */, +  public int getStatusCode() {, +    return statusCode;, +  /** List of headers returning in the HTTP response, if any. */, +  public List<Header> getHeaders() {, +    return headers;, +  }, +, +  /** Raw {@code byte[]} of the HTTP response body, if any. */, +  public byte[] getRawBody() {, +    return body;, +  }, +, +++ b/retrofit/src/main/java/retrofit/http/client/ApacheClient.java, +      super(typedBytes.mimeType());, +      return null;, +      setContentType(typedBytes.mimeType());, +++ b/retrofit/src/main/java/retrofit/http/GsonConverter.java, +    @Override public String mimeType() {, +      return "application/json; charset=UTF-8";, +++ b/retrofit/src/main/java/retrofit/http/RestAdapter.java, +            throw RetrofitError.conversionError(url, converter, statusCode, headers, body, type, e);, +        throw RetrofitError.httpError(url, converter, statusCode, headers, body, type);, +      contentType = body.mimeType();, +++ b/retrofit/src/main/java/retrofit/http/RetrofitError.java]