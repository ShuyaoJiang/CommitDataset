[+++ /dev/null, +++ /dev/null, +++ b/retrofit/src/main/java/retrofit/android/MainThreadExecutor.java, +// Copyright 2012 Square, Inc., +package retrofit.android;, +, +import android.os.Handler;, +import android.os.Looper;, +, +import java.util.concurrent.Executor;, +, +/** Executor that runs tasks on Android's main thread. */, +public class MainThreadExecutor implements Executor {, +  private final Handler handler = new Handler(Looper.getMainLooper());, +, +  @Override public void execute(Runnable r) {, +    handler.post(r);, +  }, +}, +++ /dev/null, +++ b/retrofit/src/main/java/retrofit/android/MainThreadExecutor.java, +// Copyright 2012 Square, Inc., +package retrofit.android;, +, +import android.os.Handler;, +import android.os.Looper;, +, +import java.util.concurrent.Executor;, +, +/** Executor that runs tasks on Android's main thread. */, +public class MainThreadExecutor implements Executor {, +  private final Handler handler = new Handler(Looper.getMainLooper());, +, +  @Override public void execute(Runnable r) {, +    handler.post(r);, +  }, +}, +++ b/retrofit/src/main/java/retrofit/http/CallbackRunnable.java, +import java.util.concurrent.Executor;, +, + * {@link Executor} in the form of a method call on a {@link Callback}., +  private final Executor callbackExecutor;, +  CallbackRunnable(Callback<T> callback, Executor callbackExecutor) {, +    this.callbackExecutor = callbackExecutor;, +      callbackExecutor.execute(new Runnable() {, +      callbackExecutor.execute(new Runnable() {, +      callbackExecutor.execute(new Runnable() {, +      callbackExecutor.execute(new Runnable() {, +      callbackExecutor.execute(new Runnable() {, +      callbackExecutor.execute(new Runnable() {, +      callbackExecutor.execute(new Runnable() {, +++ /dev/null, +++ b/retrofit/src/main/java/retrofit/android/MainThreadExecutor.java, +// Copyright 2012 Square, Inc., +package retrofit.android;, +, +import android.os.Handler;, +import android.os.Looper;, +, +import java.util.concurrent.Executor;, +, +/** Executor that runs tasks on Android's main thread. */, +public class MainThreadExecutor implements Executor {, +  private final Handler handler = new Handler(Looper.getMainLooper());, +, +  @Override public void execute(Runnable r) {, +    handler.post(r);, +  }, +}, +++ b/retrofit/src/main/java/retrofit/http/CallbackRunnable.java, +import java.util.concurrent.Executor;, +, + * {@link Executor} in the form of a method call on a {@link Callback}., +  private final Executor callbackExecutor;, +  CallbackRunnable(Callback<T> callback, Executor callbackExecutor) {, +    this.callbackExecutor = callbackExecutor;, +      callbackExecutor.execute(new Runnable() {, +      callbackExecutor.execute(new Runnable() {, +      callbackExecutor.execute(new Runnable() {, +      callbackExecutor.execute(new Runnable() {, +      callbackExecutor.execute(new Runnable() {, +      callbackExecutor.execute(new Runnable() {, +      callbackExecutor.execute(new Runnable() {, +++ /dev/null, +++ /dev/null, +++ b/retrofit/src/main/java/retrofit/android/MainThreadExecutor.java, +// Copyright 2012 Square, Inc., +package retrofit.android;, +, +import android.os.Handler;, +import android.os.Looper;, +, +import java.util.concurrent.Executor;, +, +/** Executor that runs tasks on Android's main thread. */, +public class MainThreadExecutor implements Executor {, +  private final Handler handler = new Handler(Looper.getMainLooper());, +, +  @Override public void execute(Runnable r) {, +    handler.post(r);]