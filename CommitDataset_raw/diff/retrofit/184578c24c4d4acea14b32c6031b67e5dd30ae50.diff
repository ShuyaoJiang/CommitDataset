[+++ b/retrofit/src/main/java/retrofit/client/UrlConnectionClient.java, +  private static final int CHUNK_SIZE = 4096;, +      }else{, +        connection.setChunkedStreamingMode(CHUNK_SIZE);, +++ b/retrofit/src/main/java/retrofit/client/UrlConnectionClient.java, +  private static final int CHUNK_SIZE = 4096;, +      }else{, +        connection.setChunkedStreamingMode(CHUNK_SIZE);, +++ b/retrofit/src/main/java/retrofit/mime/MultipartTypedOutput.java, +  private final static class MimePart {, +    private final String boundary;, +    private boolean isBuilt;, +    public MimePart(String name, TypedOutput body, String boundary, boolean isFirst) {, +      this.boundary = boundary;, +      if (body.length() > -1) {, +      } else {, +        return -1;, +      }, +  public List<byte[]> getParts() throws IOException {, +    List<byte[]> parts = new ArrayList<byte[]>(mimeParts.size());, +    MimePart part = new MimePart(name, body, boundary, mimeParts.isEmpty());, +  @Override public String fileName() {, +  @Override public String mimeType() {, +  @Override public long length() {, +  @Override public void writeTo(OutputStream out) throws IOException {, +  private static byte[] buildHeader(String name, TypedOutput value) {]