[+++ b/retrofit/src/test/java/retrofit/RequestBuilderTest.java, +      @GET("http://example2.com/foo/bar/"), +    assertThat(request.urlString()).isEqualTo("http://example2.com/foo/bar/");, +    Request request = buildRequest(Example.class, "https://example2.com/foo/bar/");, +    assertThat(request.urlString()).isEqualTo("https://example2.com/foo/bar/");, +    assertThat(request.body()).isNull();, +  }, +, +  @Test public void getWithUrlAbsoluteSameHost() {, +    class Example {, +      @GET, +      Call<Object> method(@Url String url) {, +        return null;, +      }, +    }, +, +    Request request = buildRequest(Example.class, "http://example.com/foo/bar/");, +    assertThat(request.method()).isEqualTo("GET");, +    assertThat(request.headers().size()).isZero();, +    assertThat(request.urlString()).isEqualTo("http://example.com/foo/bar/");, +  @Test public void postWithUrl() {, +    class Example {, +      @POST, +      Call<Object> method(@Url String url, @Body RequestBody body) {, +        return null;, +      }, +    }, +    RequestBody body = RequestBody.create(MediaType.parse("text/plain"), "hi");, +    Request request = buildRequest(Example.class, "http://example.com/foo/bar", body);, +    assertThat(request.method()).isEqualTo("POST");, +    assertThat(request.headers().size()).isZero();, +    assertThat(request.urlString()).isEqualTo("http://example.com/foo/bar");, +    assertBody(request.body(), "hi");, +  }, +]