[+++ b/CHANGELOG.md, +++ b/CHANGELOG.md, +++ b/pom.xml, +  <version>1.1.1-SNAPSHOT</version>, +++ b/CHANGELOG.md, +++ b/pom.xml, +  <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit-samples/github-client/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/CHANGELOG.md, +++ b/pom.xml, +  <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit-samples/github-client/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit-samples/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/CHANGELOG.md, +++ b/pom.xml, +  <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit-samples/github-client/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit-samples/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/CHANGELOG.md, +++ b/pom.xml, +  <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit-samples/github-client/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit-samples/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +          if (value == null) {, +            throw new IllegalArgumentException(, +                "Multipart part \"" + name + "\" value must not be null.");, +          }, +++ b/CHANGELOG.md, +++ b/pom.xml, +  <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit-samples/github-client/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit-samples/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +          if (value == null) {, +            throw new IllegalArgumentException(, +                "Multipart part \"" + name + "\" value must not be null.");, +          }, +++ b/retrofit/src/main/java/retrofit/converter/GsonConverter.java, +  private String encode;, +    this(gson, "UTF-8");, +  }, +  , +  public GsonConverter(Gson gson, String encode) {, +    this.encode = encode;, +      return new JsonTypedOutput(gson.toJson(object).getBytes(encode), encode);, +    private final String encode;, +    JsonTypedOutput(byte[] jsonBytes, String encode) {, +      this.encode = encode;, +      return "application/json; charset=" + encode;, +++ b/CHANGELOG.md, +++ b/pom.xml, +  <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit-samples/github-client/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit-samples/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit/pom.xml, +    <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +          if (value == null) {, +            throw new IllegalArgumentException(, +                "Multipart part \"" + name + "\" value must not be null.");, +          }, +++ b/retrofit/src/main/java/retrofit/converter/GsonConverter.java, +  private String encode;, +    this(gson, "UTF-8");, +  }, +  , +  public GsonConverter(Gson gson, String encode) {, +    this.encode = encode;, +      return new JsonTypedOutput(gson.toJson(object).getBytes(encode), encode);, +    private final String encode;, +    JsonTypedOutput(byte[] jsonBytes, String encode) {, +      this.encode = encode;, +      return "application/json; charset=" + encode;, +++ b/retrofit/src/main/java/retrofit/http/Part.java, + * Denotes a single part of a mutli-part request., + * The parameter type on which this annotation exists will be processed in one of two ways:, + * void example(&#64;Part("description") TypedString description,, +++ b/CHANGELOG.md, +++ b/pom.xml, +  <version>1.1.1-SNAPSHOT</version>, +++ b/retrofit-samples/github-client/pom.xml, +    <version>1.1.1-SNAPSHOT</version>]