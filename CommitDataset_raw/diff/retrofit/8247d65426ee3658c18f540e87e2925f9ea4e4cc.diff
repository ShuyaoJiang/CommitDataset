[+++ b/checkstyle.xml, +        <!--<module name="MethodLength"/>-->, +++ b/checkstyle.xml, +        <!--<module name="MethodLength"/>-->, +++ b/retrofit/src/main/java/retrofit/MethodInfo.java, +        requestType = RequestType.MULTIPART;, +++ b/checkstyle.xml, +        <!--<module name="MethodLength"/>-->, +++ b/retrofit/src/main/java/retrofit/MethodInfo.java, +        requestType = RequestType.MULTIPART;, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import com.squareup.okhttp.MultipartBuilder;, +import retrofit.http.Part;, +import retrofit.http.PartMap;, +  private MultipartBuilder multipartBody;, +, +    switch (methodInfo.requestType) {, +      //case FORM_URL_ENCODED:, +      //  // Will be set to 'body' in 'build'., +      //  formBody = new FormUrlEncodedTypedOutput();, +      //  break;, +      case MULTIPART:, +        // Will be set to 'body' in 'build'., +        multipartBody = new MultipartBuilder();, +        break;, +      case SIMPLE:, +        // If present, 'body' will be set in 'setArguments' call., +        break;, +      default:, +        throw new IllegalArgumentException("Unknown request type: " + methodInfo.requestType);, +    }, +      } else if (annotationType == Part.class) {, +        if (value != null) { // Skip null values., +          String name = ((Part) annotation).value();, +          String transferEncoding = ((Part) annotation).encoding();, +          Headers headers = Headers.of(, +              "Content-Disposition", "name=\"" + name + "\"",, +              "Content-Transfer-Encoding", transferEncoding);, +          if (value instanceof RequestBody) {, +            multipartBody.addPart(headers, (RequestBody) value);, +          } else if (value instanceof String) {, +            multipartBody.addPart(headers, RequestBody.create(, +                MediaType.parse("text/plain"), (String) value));, +          } else {, +            multipartBody.addPart(headers,, +                converter.toBody(value, value.getClass()));, +          }, +        }, +      } else if (annotationType == PartMap.class) {, +        if (value != null) { // Skip null values., +          String transferEncoding = ((PartMap) annotation).encoding();, +          for (Map.Entry<?, ?> entry : ((Map<?, ?>) value).entrySet()) {, +            Object entryKey = entry.getKey();, +            if (entryKey == null) {, +              throw new IllegalArgumentException(, +                  "Parameter #" + (i + 1) + " part map contained null key.");, +            }, +            String entryName = entryKey.toString();, +            Object entryValue = entry.getValue();, +            Headers headers = Headers.of(, +                "Content-Disposition", "name=\"" + entryName + "\"",, +                "Content-Transfer-Encoding", transferEncoding);, +            if (entryValue != null) { // Skip null values., +              if (entryValue instanceof RequestBody) {, +                multipartBody.addPart(headers, (RequestBody) entryValue);, +              } else if (entryValue instanceof String) {, +                multipartBody.addPart(headers, RequestBody.create(, +                    MediaType.parse("text/plain"), (String) entryValue));, +              } else {, +                multipartBody.addPart(headers, converter.toBody(entryValue, entryValue.getClass()));, +              }, +            }, +          }, +        }, +    if (multipartBody != null) {, +      body = multipartBody.build();, +    }, +++ b/checkstyle.xml, +        <!--<module name="MethodLength"/>-->, +++ b/retrofit/src/main/java/retrofit/MethodInfo.java, +        requestType = RequestType.MULTIPART;, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import com.squareup.okhttp.MultipartBuilder;, +import retrofit.http.Part;, +import retrofit.http.PartMap;, +  private MultipartBuilder multipartBody;, +, +    switch (methodInfo.requestType) {, +      //case FORM_URL_ENCODED:, +      //  // Will be set to 'body' in 'build'., +      //  formBody = new FormUrlEncodedTypedOutput();, +      //  break;, +      case MULTIPART:, +        // Will be set to 'body' in 'build'., +        multipartBody = new MultipartBuilder();, +        break;, +      case SIMPLE:, +        // If present, 'body' will be set in 'setArguments' call., +        break;, +      default:]