[+++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/BodyOnSubscribe.java, +import rx.exceptions.CompositeException;, +import rx.plugins.RxJavaPlugins;, +        Throwable t = new HttpException(response);, +        try {, +          subscriber.onError(t);, +        } catch (Throwable inner) {, +          CompositeException composite = new CompositeException(t, inner);, +          RxJavaPlugins.getInstance().getErrorHandler().handleError(composite);, +        }, +      } else {, +        // This should never happen! onNext handles and forwards errors automatically., +        Throwable broken = new AssertionError(, +            "This should never happen! Report as a Retrofit bug with the full stacktrace.");, +        //noinspection UnnecessaryInitCause Two-arg AssertionError constructor is 1.7+ only., +        broken.initCause(throwable);, +        RxJavaPlugins.getInstance().getErrorHandler().handleError(broken);, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/BodyOnSubscribe.java, +import rx.exceptions.CompositeException;, +import rx.plugins.RxJavaPlugins;, +        Throwable t = new HttpException(response);, +        try {, +          subscriber.onError(t);, +        } catch (Throwable inner) {, +          CompositeException composite = new CompositeException(t, inner);, +          RxJavaPlugins.getInstance().getErrorHandler().handleError(composite);, +        }, +      } else {, +        // This should never happen! onNext handles and forwards errors automatically., +        Throwable broken = new AssertionError(, +            "This should never happen! Report as a Retrofit bug with the full stacktrace.");, +        //noinspection UnnecessaryInitCause Two-arg AssertionError constructor is 1.7+ only., +        broken.initCause(throwable);, +        RxJavaPlugins.getInstance().getErrorHandler().handleError(broken);, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/CallOnSubscribe.java, +import rx.exceptions.CompositeException;, +import rx.plugins.RxJavaPlugins;, +      boolean terminated = false;, +          terminated = true;, +        if (terminated) {, +          RxJavaPlugins.getInstance().getErrorHandler().handleError(t);, +        } else if (!call.isCanceled()) {, +          try {, +          } catch (Throwable inner) {, +            CompositeException composite = new CompositeException(t, inner);, +            RxJavaPlugins.getInstance().getErrorHandler().handleError(composite);, +          }, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/BodyOnSubscribe.java, +import rx.exceptions.CompositeException;, +import rx.plugins.RxJavaPlugins;, +        Throwable t = new HttpException(response);, +        try {, +          subscriber.onError(t);, +        } catch (Throwable inner) {, +          CompositeException composite = new CompositeException(t, inner);, +          RxJavaPlugins.getInstance().getErrorHandler().handleError(composite);, +        }, +      } else {, +        // This should never happen! onNext handles and forwards errors automatically., +        Throwable broken = new AssertionError(, +            "This should never happen! Report as a Retrofit bug with the full stacktrace.");, +        //noinspection UnnecessaryInitCause Two-arg AssertionError constructor is 1.7+ only., +        broken.initCause(throwable);, +        RxJavaPlugins.getInstance().getErrorHandler().handleError(broken);, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/CallOnSubscribe.java, +import rx.exceptions.CompositeException;, +import rx.plugins.RxJavaPlugins;, +      boolean terminated = false;, +          terminated = true;, +        if (terminated) {, +          RxJavaPlugins.getInstance().getErrorHandler().handleError(t);, +        } else if (!call.isCanceled()) {, +          try {, +          } catch (Throwable inner) {, +            CompositeException composite = new CompositeException(t, inner);, +            RxJavaPlugins.getInstance().getErrorHandler().handleError(composite);, +          }, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/ResultOnSubscribe.java, +import rx.exceptions.CompositeException;, +import rx.plugins.RxJavaPlugins;, +        try {, +        } catch (Throwable inner) {, +          CompositeException composite = new CompositeException(t, inner);, +          RxJavaPlugins.getInstance().getErrorHandler().handleError(composite);, +        }, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/BodyOnSubscribe.java, +import rx.exceptions.CompositeException;, +import rx.plugins.RxJavaPlugins;, +        Throwable t = new HttpException(response);, +        try {, +          subscriber.onError(t);, +        } catch (Throwable inner) {, +          CompositeException composite = new CompositeException(t, inner);, +          RxJavaPlugins.getInstance().getErrorHandler().handleError(composite);, +        }, +      } else {, +        // This should never happen! onNext handles and forwards errors automatically., +        Throwable broken = new AssertionError(, +            "This should never happen! Report as a Retrofit bug with the full stacktrace.");, +        //noinspection UnnecessaryInitCause Two-arg AssertionError constructor is 1.7+ only.]