[+++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +            if (value instanceof Iterable) {, +              for (Object v : (Iterable<?>) value) {, +                formBody.addField(name, v.toString());, +              }, +            } else if (value instanceof Map) {, +              for (Map.Entry<?, ?> entry : ((Map<?, ?>) value).entrySet()) {, +                Object v = entry.getValue();, +                if (v != null) { // Skip null values., +                  formBody.addField(entry.getKey().toString(), v.toString());, +                }, +              }, +            } else {, +          }, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +            if (value instanceof Iterable) {, +              for (Object v : (Iterable<?>) value) {, +                formBody.addField(name, v.toString());, +              }, +            } else if (value instanceof Map) {, +              for (Map.Entry<?, ?> entry : ((Map<?, ?>) value).entrySet()) {, +                Object v = entry.getValue();, +                if (v != null) { // Skip null values., +                  formBody.addField(entry.getKey().toString(), v.toString());, +                }, +              }, +            } else {, +          }, +++ b/retrofit/src/test/java/retrofit/RequestBuilderTest.java, +  @Test public void formEncodedFieldList() throws Exception {, +    List<Object> values = new ArrayList<Object>(Arrays.asList("foo", "bar", 3));, +, +    Request request = new Helper() //, +        .setMethod("POST") //, +        .setHasBody() //, +        .setUrl("http://example.com") //, +        .setPath("/foo") //, +        .setFormEncoded() //, +        .addFieldList("foo", values) //, +        .addField("kit", "kat") //, +        .build();, +    assertTypedBytes(request.getBody(), "foo=foo&foo=bar&foo=3&kit=kat");, +  }, +, +  @Test public void formEncodedFieldMap() throws Exception {, +    Map<String, Object> params = new LinkedHashMap<String, Object>();, +    params.put("kit", "kat");, +    params.put("foo", null);, +    params.put("ping", "pong");, +, +    Request request = new Helper() //, +        .setMethod("POST") //, +        .setHasBody() //, +        .setUrl("http://example.com") //, +        .setPath("/foo") //, +        .setFormEncoded() //, +        .addFieldMap("options", params) //, +        .build();, +    assertTypedBytes(request.getBody(), "kit=kat&ping=pong");, +  }, +, +    Helper addFieldList(String name, List<Object> values) {, +      paramNames.add(name);, +      paramUsages.add(FIELD);, +      args.add(values);, +      return this;, +    }, +, +    Helper addFieldMap(String name, Map<String, Object> values) {, +      paramNames.add(name);, +      paramUsages.add(FIELD);, +      args.add(values);, +      return this;, +    }, +]