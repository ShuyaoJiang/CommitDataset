[+++ b/http/src/main/java/retrofit/http/CallbackResponseHandler.java, +  private String requestUrl; // Can be null., +    this(gson, callback, null);, +  }, +, +  protected CallbackResponseHandler(Gson gson, Callback<T> callback, String requestUrl) {, +    this.requestUrl = requestUrl;, +      LOGGER.fine("Session expired.  Request url " + requestUrl);, +        LOGGER.fine("Missing entity for " + statusCode + " response.  Url " + requestUrl);, +            + statusLine.getReasonPhrase() + ". Body: " + body + ". Request url " + requestUrl);, +            + statusLine.getReasonPhrase() + ". Request url " + requestUrl);, +          + statusLine.getReasonPhrase() + ". Body: " + body + ". Request url " + requestUrl);, +          + statusLine.getReasonPhrase() + ". Request url " + requestUrl);, +++ b/http/src/main/java/retrofit/http/CallbackResponseHandler.java, +  private String requestUrl; // Can be null., +    this(gson, callback, null);, +  }, +, +  protected CallbackResponseHandler(Gson gson, Callback<T> callback, String requestUrl) {, +    this.requestUrl = requestUrl;, +      LOGGER.fine("Session expired.  Request url " + requestUrl);, +        LOGGER.fine("Missing entity for " + statusCode + " response.  Url " + requestUrl);, +            + statusLine.getReasonPhrase() + ". Body: " + body + ". Request url " + requestUrl);, +            + statusLine.getReasonPhrase() + ". Request url " + requestUrl);, +          + statusLine.getReasonPhrase() + ". Body: " + body + ". Request url " + requestUrl);, +          + statusLine.getReasonPhrase() + ". Request url " + requestUrl);, +++ b/http/src/main/java/retrofit/http/GsonResponseHandler.java, +    super(gson, callback, url);]