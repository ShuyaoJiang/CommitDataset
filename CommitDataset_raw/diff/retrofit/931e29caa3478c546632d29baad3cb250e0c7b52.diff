[+++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +        url.append(requestQuery);, +          Object arg = args[i];, +          if (arg != null) { // Null values are skipped., +            String value = URLEncoder.encode(String.valueOf(arg), "UTF-8");, +    }, +        Object arg = args[i];, +        if (arg == null) {, +          throw new IllegalArgumentException("Path parameters must not be null: " + param + ".");, +        }, +        String value = URLEncoder.encode(String.valueOf(arg), "UTF-8");, +        if (body == null) {, +          throw new IllegalArgumentException("Body must not be null.");, +        }, +            Object value = args[i];, +            if (value != null) { // Null values are skipped., +              body.addField(name, String.valueOf(value));, +            }, +            if (value == null) {, +              throw new IllegalArgumentException("Multipart part must not be null: " + name + ".");, +            }, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +        url.append(requestQuery);, +          Object arg = args[i];, +          if (arg != null) { // Null values are skipped., +            String value = URLEncoder.encode(String.valueOf(arg), "UTF-8");, +    }, +        Object arg = args[i];, +        if (arg == null) {, +          throw new IllegalArgumentException("Path parameters must not be null: " + param + ".");, +        }, +        String value = URLEncoder.encode(String.valueOf(arg), "UTF-8");, +        if (body == null) {, +          throw new IllegalArgumentException("Body must not be null.");, +        }, +            Object value = args[i];, +            if (value != null) { // Null values are skipped., +              body.addField(name, String.valueOf(value));, +            }, +            if (value == null) {, +              throw new IllegalArgumentException("Multipart part must not be null: " + name + ".");, +            }, +++ b/retrofit/src/main/java/retrofit/http/Body.java, + * body). If the value of the parameter implements {@link retrofit.mime.TypedOutput TypedOutput},, + * the request body will be written exactly as specified by, + * {@link retrofit.mime.TypedOutput#writeTo(java.io.OutputStream)}. If the value does not implement, + * TypedOutput, the object will be serialized using the {@link retrofit.RestAdapter RestAdapter}'s, + * {@link retrofit.converter.Converter Converter} and the result will be set directly as the, + * request body., + * <p>, + * Body parameters may not be {@code null}., +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +        url.append(requestQuery);, +          Object arg = args[i];, +          if (arg != null) { // Null values are skipped., +            String value = URLEncoder.encode(String.valueOf(arg), "UTF-8");, +    }, +        Object arg = args[i];, +        if (arg == null) {, +          throw new IllegalArgumentException("Path parameters must not be null: " + param + ".");, +        }, +        String value = URLEncoder.encode(String.valueOf(arg), "UTF-8");, +        if (body == null) {, +          throw new IllegalArgumentException("Body must not be null.");, +        }, +            Object value = args[i];, +            if (value != null) { // Null values are skipped., +              body.addField(name, String.valueOf(value));, +            }, +            if (value == null) {, +              throw new IllegalArgumentException("Multipart part must not be null: " + name + ".");, +            }, +++ b/retrofit/src/main/java/retrofit/http/Body.java, + * body). If the value of the parameter implements {@link retrofit.mime.TypedOutput TypedOutput},, + * the request body will be written exactly as specified by, + * {@link retrofit.mime.TypedOutput#writeTo(java.io.OutputStream)}. If the value does not implement, + * TypedOutput, the object will be serialized using the {@link retrofit.RestAdapter RestAdapter}'s, + * {@link retrofit.converter.Converter Converter} and the result will be set directly as the, + * request body., + * <p>, + * Body parameters may not be {@code null}., +++ b/retrofit/src/main/java/retrofit/http/Field.java, + * <p>, + * Field parameters may be {@code null} which will omit them from the request body., +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +        url.append(requestQuery);, +          Object arg = args[i];, +          if (arg != null) { // Null values are skipped., +            String value = URLEncoder.encode(String.valueOf(arg), "UTF-8");, +    }, +        Object arg = args[i];, +        if (arg == null) {, +          throw new IllegalArgumentException("Path parameters must not be null: " + param + ".");, +        }, +        String value = URLEncoder.encode(String.valueOf(arg), "UTF-8");, +        if (body == null) {, +          throw new IllegalArgumentException("Body must not be null.");, +        }, +            Object value = args[i];, +            if (value != null) { // Null values are skipped.]