[+++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    private CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    private CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java, +  private final NetworkBehavior behavior;, +  private final ExecutorService backgroundExecutor;, +  private final Call<T> delegate;, +  private volatile boolean canceled;, +      private boolean delaySleep() {, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    private CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java, +  private final NetworkBehavior behavior;, +  private final ExecutorService backgroundExecutor;, +  private final Call<T> delegate;, +  private volatile boolean canceled;, +      private boolean delaySleep() {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorDelegate.java, +  private final Retrofit retrofit;, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    private CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java, +  private final NetworkBehavior behavior;, +  private final ExecutorService backgroundExecutor;, +  private final Call<T> delegate;, +  private volatile boolean canceled;, +      private boolean delaySleep() {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorDelegate.java, +  private final Retrofit retrofit;, +++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +  private final Executor callbackExecutor;, +    private final Executor callbackExecutor;, +    private final Call<T> delegate;, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    private CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java, +  private final NetworkBehavior behavior;, +  private final ExecutorService backgroundExecutor;, +  private final Call<T> delegate;, +  private volatile boolean canceled;, +      private boolean delaySleep() {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorDelegate.java, +  private final Retrofit retrofit;, +++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +  private final Executor callbackExecutor;, +    private final Executor callbackExecutor;, +    private final Call<T> delegate;, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +  private Response<T> parseResponse(com.squareup.okhttp.Response rawResponse) throws IOException {, +    private IOException thrownException;, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    private CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java, +  private final NetworkBehavior behavior;, +  private final ExecutorService backgroundExecutor;, +  private final Call<T> delegate;, +  private volatile boolean canceled;, +      private boolean delaySleep() {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorDelegate.java, +  private final Retrofit retrofit;, +++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +  private final Executor callbackExecutor;, +    private final Executor callbackExecutor;, +    private final Call<T> delegate;, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +  private Response<T> parseResponse(com.squareup.okhttp.Response rawResponse) throws IOException {, +    private IOException thrownException;, +++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java, +  private static String canonicalize(String input, boolean alreadyEncoded) {, +  private static void canonicalize(Buffer out, String input, int pos, int limit,, +      boolean alreadyEncoded) {, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    private CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java, +  private final NetworkBehavior behavior;, +  private final ExecutorService backgroundExecutor;, +  private final Call<T> delegate;, +  private volatile boolean canceled;, +      private boolean delaySleep() {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorDelegate.java, +  private final Retrofit retrofit;, +++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +  private final Executor callbackExecutor;, +    private final Executor callbackExecutor;, +    private final Call<T> delegate;, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +  private Response<T> parseResponse(com.squareup.okhttp.Response rawResponse) throws IOException {, +    private IOException thrownException;, +++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java, +  private static String canonicalize(String input, boolean alreadyEncoded) {, +  private static void canonicalize(Buffer out, String input, int pos, int limit,, +      boolean alreadyEncoded) {, +++ b/retrofit/src/main/java/retrofit2/RequestFactoryParser.java, +  private static Class<?> boxIfPrimitive(Class<?> type) {, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    private CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java, +  private final NetworkBehavior behavior;, +  private final ExecutorService backgroundExecutor;]