[+++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import java.io.UnsupportedEncodingException;, +import java.net.URLEncoder;, +    try {, +      if (!encoded) {, +        String encodedValue = URLEncoder.encode(String.valueOf(value), "UTF-8");, +        // URLEncoder encodes for use as a query parameter. Path encoding uses %20 to, +        // encode spaces rather than +. Query encoding difference specified in HTML spec., +        // Any remaining plus signs represent spaces as already URLEncoded., +        encodedValue = encodedValue.replace("+", "%20");, +        relativeUrl = relativeUrl.replace("{" + name + "}", encodedValue);, +        relativeUrl = relativeUrl.replace("{" + name + "}", String.valueOf(value));, +    } catch (UnsupportedEncodingException e) {, +      throw new RuntimeException(, +          "Unable to convert path parameter \"" + name + "\" value to UTF-8:" + value, e);, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import java.io.UnsupportedEncodingException;, +import java.net.URLEncoder;, +    try {, +      if (!encoded) {, +        String encodedValue = URLEncoder.encode(String.valueOf(value), "UTF-8");, +        // URLEncoder encodes for use as a query parameter. Path encoding uses %20 to, +        // encode spaces rather than +. Query encoding difference specified in HTML spec., +        // Any remaining plus signs represent spaces as already URLEncoded., +        encodedValue = encodedValue.replace("+", "%20");, +        relativeUrl = relativeUrl.replace("{" + name + "}", encodedValue);, +        relativeUrl = relativeUrl.replace("{" + name + "}", String.valueOf(value));, +    } catch (UnsupportedEncodingException e) {, +      throw new RuntimeException(, +          "Unable to convert path parameter \"" + name + "\" value to UTF-8:" + value, e);, +++ b/retrofit/src/test/java/retrofit/RequestBuilderTest.java, +    assertThat(request.urlString()).isEqualTo("http://example.com/foo/bar/pong%26/?kit=kat%26");, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import java.io.UnsupportedEncodingException;, +import java.net.URLEncoder;, +    try {, +      if (!encoded) {, +        String encodedValue = URLEncoder.encode(String.valueOf(value), "UTF-8");, +        // URLEncoder encodes for use as a query parameter. Path encoding uses %20 to, +        // encode spaces rather than +. Query encoding difference specified in HTML spec., +        // Any remaining plus signs represent spaces as already URLEncoded., +        encodedValue = encodedValue.replace("+", "%20");, +        relativeUrl = relativeUrl.replace("{" + name + "}", encodedValue);, +        relativeUrl = relativeUrl.replace("{" + name + "}", String.valueOf(value));, +    } catch (UnsupportedEncodingException e) {, +      throw new RuntimeException(, +          "Unable to convert path parameter \"" + name + "\" value to UTF-8:" + value, e);, +++ b/retrofit/src/test/java/retrofit/RequestBuilderTest.java, +    assertThat(request.urlString()).isEqualTo("http://example.com/foo/bar/pong%26/?kit=kat%26");, +++ b/samples/src/main/java/com/example/retrofit/DeserializeErrorBody.java, +, +    server.shutdown();]