[+++ b/retrofit-adapters/rxjava/src/test/java/retrofit/ObservableCallAdapterFactoryTest.java, +            Response.fromError(404, ResponseBody.create(MediaType.parse("application/json"), "Hi")));, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit/ObservableCallAdapterFactoryTest.java, +            Response.fromError(404, ResponseBody.create(MediaType.parse("application/json"), "Hi")));, +++ b/retrofit/src/main/java/retrofit/OkHttpCall.java, +    return new Response<>(rawResponse, converted, body);, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit/ObservableCallAdapterFactoryTest.java, +            Response.fromError(404, ResponseBody.create(MediaType.parse("application/json"), "Hi")));, +++ b/retrofit/src/main/java/retrofit/OkHttpCall.java, +    return new Response<>(rawResponse, converted, body);, +++ b/retrofit/src/main/java/retrofit/Response.java, +    return new Response<T>(rawResponse, body, null);, +  public static Response<Object> fromError(int code, ResponseBody body) {, +        .build());, +  public static Response<Object> fromError(com.squareup.okhttp.Response rawResponse) {, +    return new Response<>(rawResponse, null, errorBody);, +  Response(com.squareup.okhttp.Response rawResponse, T body, ResponseBody errorBody) {, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit/ObservableCallAdapterFactoryTest.java, +            Response.fromError(404, ResponseBody.create(MediaType.parse("application/json"), "Hi")));, +++ b/retrofit/src/main/java/retrofit/OkHttpCall.java, +    return new Response<>(rawResponse, converted, body);, +++ b/retrofit/src/main/java/retrofit/Response.java, +    return new Response<T>(rawResponse, body, null);, +  public static Response<Object> fromError(int code, ResponseBody body) {, +        .build());, +  public static Response<Object> fromError(com.squareup.okhttp.Response rawResponse) {, +    return new Response<>(rawResponse, null, errorBody);, +  Response(com.squareup.okhttp.Response rawResponse, T body, ResponseBody errorBody) {, +++ b/retrofit/src/test/java/retrofit/CallTest.java, +    assertThat(response.errorBody().string()).isEqualTo("Hi");, +  @Test public void http404Async() throws InterruptedException, IOException {, +    assertThat(response.errorBody().string()).isEqualTo("Hi");]