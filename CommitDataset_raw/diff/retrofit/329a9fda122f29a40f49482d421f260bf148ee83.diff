[+++ b/retrofit/src/main/java/retrofit2/Response.java, +   * Create a synthetic successful response with an HTTP status code of {@code code} and, +   * {@code body} as the deserialized body., +   */, +  public static <T> Response<T> success(int code, @Nullable T body) {, +    if (code < 200 || code >= 300) {, +      throw new IllegalArgumentException("code < 200 or >= 300: " + code);, +    }, +    return success(body, new okhttp3.Response.Builder() //, +        .code(code), +        .message("Response.success()"), +        .protocol(Protocol.HTTP_1_1), +        .request(new Request.Builder().url("http://localhost/").build()), +        .build());, +  }, +, +  /**, +++ b/retrofit/src/main/java/retrofit2/Response.java, +   * Create a synthetic successful response with an HTTP status code of {@code code} and, +   * {@code body} as the deserialized body., +   */, +  public static <T> Response<T> success(int code, @Nullable T body) {, +    if (code < 200 || code >= 300) {, +      throw new IllegalArgumentException("code < 200 or >= 300: " + code);, +    }, +    return success(body, new okhttp3.Response.Builder() //, +        .code(code), +        .message("Response.success()"), +        .protocol(Protocol.HTTP_1_1), +        .request(new Request.Builder().url("http://localhost/").build()), +        .build());, +  }, +, +  /**, +++ b/retrofit/src/test/java/retrofit2/ResponseTest.java, +  @Test public void successWithStatusCode() {, +    Object body = new Object();, +    Response<Object> response = Response.success(204, body);, +    assertThat(response.code()).isEqualTo(204);, +    assertThat(response.message()).isEqualTo("Response.success()");, +    assertThat(response.headers().size()).isZero();, +    assertThat(response.isSuccessful()).isTrue();, +    assertThat(response.body()).isSameAs(body);, +    assertThat(response.errorBody()).isNull();, +  }, +]