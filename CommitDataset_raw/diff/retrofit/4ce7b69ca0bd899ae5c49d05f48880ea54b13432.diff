[+++ b/retrofit-adapters/rxjava/src/main/java/retrofit/RxJavaCallAdapterFactory.java, +    Type observableType = Utils.getParameterUpperBound(0, (ParameterizedType) returnType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit/RxJavaCallAdapterFactory.java, +    Type observableType = Utils.getParameterUpperBound(0, (ParameterizedType) returnType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit/RxJavaCallAdapterFactoryTest.java, +    public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +    @Override public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit/RxJavaCallAdapterFactory.java, +    Type observableType = Utils.getParameterUpperBound(0, (ParameterizedType) returnType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit/RxJavaCallAdapterFactoryTest.java, +    public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +    @Override public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/gson/src/main/java/retrofit/GsonConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +  @Override, +  public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit/RxJavaCallAdapterFactory.java, +    Type observableType = Utils.getParameterUpperBound(0, (ParameterizedType) returnType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit/RxJavaCallAdapterFactoryTest.java, +    public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +    @Override public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/gson/src/main/java/retrofit/GsonConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +  @Override, +  public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/jackson/src/main/java/retrofit/JacksonConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +  @Override, +  public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit/RxJavaCallAdapterFactory.java, +    Type observableType = Utils.getParameterUpperBound(0, (ParameterizedType) returnType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit/RxJavaCallAdapterFactoryTest.java, +    public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +    @Override public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/gson/src/main/java/retrofit/GsonConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +  @Override, +  public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/jackson/src/main/java/retrofit/JacksonConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +  @Override, +  public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/moshi/src/main/java/retrofit/MoshiConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +  @Override, +  public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit/RxJavaCallAdapterFactory.java, +    Type observableType = Utils.getParameterUpperBound(0, (ParameterizedType) returnType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit/RxJavaCallAdapterFactoryTest.java, +    public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +    @Override public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/gson/src/main/java/retrofit/GsonConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +  @Override, +  public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/jackson/src/main/java/retrofit/JacksonConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +  @Override, +  public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/moshi/src/main/java/retrofit/MoshiConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +  @Override, +  public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/protobuf/src/main/java/retrofit/ProtoConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +  @Override, +  public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit/RxJavaCallAdapterFactory.java, +    Type observableType = Utils.getParameterUpperBound(0, (ParameterizedType) returnType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +      Type responseType = Utils.getParameterUpperBound(0, (ParameterizedType) observableType);, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit/RxJavaCallAdapterFactoryTest.java, +    public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +    @Override public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/gson/src/main/java/retrofit/GsonConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +  @Override, +  public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/jackson/src/main/java/retrofit/JacksonConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +  @Override, +  public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/moshi/src/main/java/retrofit/MoshiConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {, +  @Override, +  public Converter<?, RequestBody> requestBodyConverter(Type type, Annotation[] annotations) {, +++ b/retrofit-converters/protobuf/src/main/java/retrofit/ProtoConverterFactory.java, +  public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations) {]