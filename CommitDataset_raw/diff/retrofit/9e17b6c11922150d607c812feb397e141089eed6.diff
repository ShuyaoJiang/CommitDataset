[+++ b/pom.xml, +    <okhttp.version>2.0.0</okhttp.version>, +    <rxjava.version>0.19.2</rxjava.version>, +    <appengine.version>1.9.6</appengine.version>, +    <jackson.version>2.4.1</jackson.version>, +    <wire.version>1.5.1</wire.version>, +++ b/pom.xml, +    <okhttp.version>2.0.0</okhttp.version>, +    <rxjava.version>0.19.2</rxjava.version>, +    <appengine.version>1.9.6</appengine.version>, +    <jackson.version>2.4.1</jackson.version>, +    <wire.version>1.5.1</wire.version>, +++ b/retrofit-converters/wire/src/test/java/retrofit/converter/Person.java, +   * A list of the customer's phone numbers., +  public Person(String name, Integer id, String email, List<PhoneNumber> phone) {, +    this.name = name;, +    this.id = id;, +    this.email = email;, +    this.phone = immutableCopyOf(phone);, +  }, +, +    this(builder.name, builder.id, builder.email, builder.phone);, +    setBuilder(builder);, +    if (other == this) return true;, +      result = result * 37 + (phone != null ? phone.hashCode() : 1);, +    /**, +     * The customer's full name., +     */, +    /**, +     * The customer's ID number., +     */, +    /**, +     * Email address for the customer., +     */, +    /**, +     * A list of the customer's phone numbers., +     */, +      this.phone = checkForNulls(phone);, +  public enum PhoneType, +      implements ProtoEnum {, +    MOBILE(0),, +    HOME(1),, +    /**, +     * Could be phone or fax., +     */, +    WORK(2);, +, +    private final int value;, +, +    private PhoneType(int value) {, +      this.value = value;, +    }, +, +    @Override, +    public int getValue() {, +      return value;, +    }, +     * The customer's phone number., +    public PhoneNumber(String number, PhoneType type) {, +      this.number = number;, +      this.type = type;, +    }, +, +      this(builder.number, builder.type);, +      setBuilder(builder);, +      if (other == this) return true;, +      /**, +       * The customer's phone number., +       */, +      /**, +       * The type of phone stored here., +       */]