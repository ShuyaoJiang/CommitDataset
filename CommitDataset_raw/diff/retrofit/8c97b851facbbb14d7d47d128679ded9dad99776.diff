[+++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, +public final class GuavaCallAdapterFactory extends CallAdapter.Factory {, +    if (getRawType(returnType) != ListenableFuture.class) {, +    Type innerType = getParameterUpperBound(0, (ParameterizedType) returnType);, +    if (getRawType(innerType) != Response.class) {, +    Type responseType = getParameterUpperBound(0, (ParameterizedType) innerType);, +    @Override public <R> ListenableFuture<?> adapt(final Call<R> call) {, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, +public final class GuavaCallAdapterFactory extends CallAdapter.Factory {, +    if (getRawType(returnType) != ListenableFuture.class) {, +    Type innerType = getParameterUpperBound(0, (ParameterizedType) returnType);, +    if (getRawType(innerType) != Response.class) {, +    Type responseType = getParameterUpperBound(0, (ParameterizedType) innerType);, +    @Override public <R> ListenableFuture<?> adapt(final Call<R> call) {, +++ /dev/null, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, +public final class GuavaCallAdapterFactory extends CallAdapter.Factory {, +    if (getRawType(returnType) != ListenableFuture.class) {, +    Type innerType = getParameterUpperBound(0, (ParameterizedType) returnType);, +    if (getRawType(innerType) != Response.class) {, +    Type responseType = getParameterUpperBound(0, (ParameterizedType) innerType);, +    @Override public <R> ListenableFuture<?> adapt(final Call<R> call) {, +++ /dev/null, +++ /dev/null, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, +public final class GuavaCallAdapterFactory extends CallAdapter.Factory {, +    if (getRawType(returnType) != ListenableFuture.class) {, +    Type innerType = getParameterUpperBound(0, (ParameterizedType) returnType);, +    if (getRawType(innerType) != Response.class) {, +    Type responseType = getParameterUpperBound(0, (ParameterizedType) innerType);, +    @Override public <R> ListenableFuture<?> adapt(final Call<R> call) {, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, +public final class GuavaCallAdapterFactory extends CallAdapter.Factory {, +    if (getRawType(returnType) != ListenableFuture.class) {, +    Type innerType = getParameterUpperBound(0, (ParameterizedType) returnType);, +    if (getRawType(innerType) != Response.class) {, +    Type responseType = getParameterUpperBound(0, (ParameterizedType) innerType);, +    @Override public <R> ListenableFuture<?> adapt(final Call<R> call) {, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, +public final class GuavaCallAdapterFactory extends CallAdapter.Factory {, +    if (getRawType(returnType) != ListenableFuture.class) {, +    Type innerType = getParameterUpperBound(0, (ParameterizedType) returnType);, +    if (getRawType(innerType) != Response.class) {, +    Type responseType = getParameterUpperBound(0, (ParameterizedType) innerType);, +    @Override public <R> ListenableFuture<?> adapt(final Call<R> call) {, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/HttpException.java, +package retrofit2.adapter.rxjava;, +, +import retrofit2.Response;, +, +/** Exception for an unexpected, non-2xx HTTP response. */, +public final class HttpException extends Exception {, +  private final int code;, +  private final String message;, +  private final transient Response<?> response;, +, +  public HttpException(Response<?> response) {, +    super("HTTP " + response.code() + " " + response.message());, +    this.code = response.code();, +    this.message = response.message();, +    this.response = response;, +  }, +, +  /** HTTP status code. */, +  public int code() {, +    return code;, +  }, +, +  /** HTTP status message. */, +  public String message() {, +    return message;, +  }, +, +  /**, +   * The full HTTP response. This may be null if the exception was serialized., +   */, +  public Response<?> response() {, +    return response;, +  }, +}, +++ b/retrofit-adapters/guava/src/main/java/retrofit2/adapter/guava/GuavaCallAdapterFactory.java, +public final class GuavaCallAdapterFactory extends CallAdapter.Factory {, +    if (getRawType(returnType) != ListenableFuture.class) {, +    Type innerType = getParameterUpperBound(0, (ParameterizedType) returnType);, +    if (getRawType(innerType) != Response.class) {, +    Type responseType = getParameterUpperBound(0, (ParameterizedType) innerType);, +    @Override public <R> ListenableFuture<?> adapt(final Call<R> call) {, +++ /dev/null, +++ /dev/null]