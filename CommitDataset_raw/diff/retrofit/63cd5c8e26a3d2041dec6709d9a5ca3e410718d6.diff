[+++ b/pom.xml, +      <dependency>, +        <groupId>com.squareup.okhttp</groupId>, +        <artifactId>mockwebserver</artifactId>, +        <version>${okhttp.version}</version>, +      </dependency>, +++ b/pom.xml, +      <dependency>, +        <groupId>com.squareup.okhttp</groupId>, +        <artifactId>mockwebserver</artifactId>, +        <version>${okhttp.version}</version>, +      </dependency>, +++ b/retrofit/pom.xml, +    <dependency>, +      <groupId>com.squareup.okhttp</groupId>, +      <artifactId>mockwebserver</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/pom.xml, +      <dependency>, +        <groupId>com.squareup.okhttp</groupId>, +        <artifactId>mockwebserver</artifactId>, +        <version>${okhttp.version}</version>, +      </dependency>, +++ b/retrofit/pom.xml, +    <dependency>, +      <groupId>com.squareup.okhttp</groupId>, +      <artifactId>mockwebserver</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import java.io.IOException;, +import java.io.OutputStream;, +  private String contentTypeHeader;, +    contentTypeHeader = methodInfo.contentTypeHeader;, +    if ("Content-Type".equalsIgnoreCase(name)) {, +      contentTypeHeader = value;, +      return;, +    }, +, +    if (body != null && contentTypeHeader != null) {, +      body = new MimeOverridingTypedOutput(body, contentTypeHeader);, +, +  private static class MimeOverridingTypedOutput implements TypedOutput {, +    private final TypedOutput delegate;, +    private final String mimeType;, +, +    MimeOverridingTypedOutput(TypedOutput delegate, String mimeType) {, +      this.delegate = delegate;, +      this.mimeType = mimeType;, +    }, +, +    @Override public String fileName() {, +      return delegate.fileName();, +    }, +, +    @Override public String mimeType() {, +      return mimeType;, +    }, +, +    @Override public long length() {, +      return delegate.length();, +    }, +, +    @Override public void writeTo(OutputStream out) throws IOException {, +      delegate.writeTo(out);, +    }, +  }, +++ b/pom.xml, +      <dependency>, +        <groupId>com.squareup.okhttp</groupId>, +        <artifactId>mockwebserver</artifactId>, +        <version>${okhttp.version}</version>, +      </dependency>, +++ b/retrofit/pom.xml, +    <dependency>, +      <groupId>com.squareup.okhttp</groupId>, +      <artifactId>mockwebserver</artifactId>, +      <scope>test</scope>, +    </dependency>, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +import java.io.IOException;, +import java.io.OutputStream;, +  private String contentTypeHeader;, +    contentTypeHeader = methodInfo.contentTypeHeader;, +    if ("Content-Type".equalsIgnoreCase(name)) {, +      contentTypeHeader = value;, +      return;, +    }, +, +    if (body != null && contentTypeHeader != null) {, +      body = new MimeOverridingTypedOutput(body, contentTypeHeader);, +, +  private static class MimeOverridingTypedOutput implements TypedOutput {, +    private final TypedOutput delegate;, +    private final String mimeType;, +, +    MimeOverridingTypedOutput(TypedOutput delegate, String mimeType) {, +      this.delegate = delegate;, +      this.mimeType = mimeType;]