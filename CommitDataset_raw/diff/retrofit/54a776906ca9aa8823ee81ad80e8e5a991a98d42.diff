[+++ b/retrofit/src/main/java/retrofit2/ParameterHandler.java, +import java.lang.reflect.Method;, +    private final Method method;, +    private final int p;, +, +    RelativeUrl(Method method, int p) {, +      this.method = method;, +      this.p = p;, +    }, +, +      if (value == null) {, +        throw Utils.parameterError(method, p, "@Url parameter is null.");, +      }, +    private final Method method;, +    private final int p;, +, +    Path(Method method, int p, String name, Converter<T, String> valueConverter, boolean encoded) {, +      this.method = method;, +      this.p = p;, +        throw Utils.parameterError(method, p,, +    private final Method method;, +    private final int p;, +    QueryMap(Method method, int p, Converter<T, String> valueConverter, boolean encoded) {, +      this.method = method;, +      this.p = p;, +        throw Utils.parameterError(method, p, "Query map was null");, +          throw Utils.parameterError(method, p, "Query map contained null key.");, +          throw Utils.parameterError(method, p,, +          throw Utils.parameterError(method, p, "Query map value '", +    private final Method method;, +    private final int p;, +    HeaderMap(Method method, int p, Converter<T, String> valueConverter) {, +      this.method = method;, +      this.p = p;, +        throw Utils.parameterError(method, p, "Header map was null.");, +          throw Utils.parameterError(method, p, "Header map contained null key.");, +          throw Utils.parameterError(method, p,, +    private final Method method;, +    private final int p;, +    FieldMap(Method method, int p, Converter<T, String> valueConverter, boolean encoded) {, +      this.method = method;, +      this.p = p;, +        throw Utils.parameterError(method, p, "Field map was null.");, +          throw Utils.parameterError(method, p, "Field map contained null key.");, +          throw Utils.parameterError(method, p,, +          throw Utils.parameterError(method, p, "Field map value '", +    private final Method method;, +    private final int p;, +    Part(Method method, int p, Headers headers, Converter<T, RequestBody> converter) {, +      this.method = method;, +      this.p = p;, +        throw Utils.parameterError(method, p, "Unable to convert " + value + " to RequestBody", e);, +    private final Method method;, +    private final int p;, +    PartMap(Method method, int p,, +            Converter<T, RequestBody> valueConverter, String transferEncoding) {, +      this.method = method;, +      this.p = p;, +        throw Utils.parameterError(method, p, "Part map was null.");, +          throw Utils.parameterError(method, p, "Part map contained null key.");, +          throw Utils.parameterError(method, p,, +    private final Method method;, +    private final int p;, +    Body(Method method, int p, Converter<T, RequestBody> converter) {, +      this.method = method;, +      this.p = p;, +        throw Utils.parameterError(method, p, "Body parameter value must not be null.");, +        throw Utils.parameterError(method, e, p, "Unable to convert " + value + " to RequestBody");, +++ b/retrofit/src/main/java/retrofit2/ParameterHandler.java, +import java.lang.reflect.Method;, +    private final Method method;, +    private final int p;, +, +    RelativeUrl(Method method, int p) {, +      this.method = method;, +      this.p = p;, +    }, +, +      if (value == null) {, +        throw Utils.parameterError(method, p, "@Url parameter is null.");, +      }, +    private final Method method;, +    private final int p;, +, +    Path(Method method, int p, String name, Converter<T, String> valueConverter, boolean encoded) {, +      this.method = method;, +      this.p = p;, +        throw Utils.parameterError(method, p,, +    private final Method method;, +    private final int p;, +    QueryMap(Method method, int p, Converter<T, String> valueConverter, boolean encoded) {, +      this.method = method;, +      this.p = p;, +        throw Utils.parameterError(method, p, "Query map was null");, +          throw Utils.parameterError(method, p, "Query map contained null key.");, +          throw Utils.parameterError(method, p,, +          throw Utils.parameterError(method, p, "Query map value '", +    private final Method method;, +    private final int p;, +    HeaderMap(Method method, int p, Converter<T, String> valueConverter) {]