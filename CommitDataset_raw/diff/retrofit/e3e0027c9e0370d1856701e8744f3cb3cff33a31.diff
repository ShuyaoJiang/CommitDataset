[+++ b/retrofit-mock/src/main/java/retrofit/MockRestAdapter.java, +  private MockRxSupport mockRxSupport;, +        if (mockRxSupport == null) {, +          if (Platform.HAS_RX_JAVA) {, +            mockRxSupport = new MockRxSupport(restAdapter);, +          } else {, +            throw new IllegalStateException("Observable method found but no RxJava on classpath");, +          }, +        }, +++ b/retrofit-mock/src/main/java/retrofit/MockRestAdapter.java, +  private MockRxSupport mockRxSupport;, +        if (mockRxSupport == null) {, +          if (Platform.HAS_RX_JAVA) {, +            mockRxSupport = new MockRxSupport(restAdapter);, +          } else {, +            throw new IllegalStateException("Observable method found but no RxJava on classpath");, +          }, +        }, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, +  private RxSupport rxSupport;, +        if (rxSupport == null) {, +          if (Platform.HAS_RX_JAVA) {, +            rxSupport = new RxSupport(httpExecutor, errorHandler);, +          } else {, +            throw new IllegalStateException("Observable method found but no RxJava on classpath");, +          }, +        }, +    private Object invokeRequest(RequestInterceptor requestInterceptor, RestMethodInfo methodInfo,, +        Object[] args) {]