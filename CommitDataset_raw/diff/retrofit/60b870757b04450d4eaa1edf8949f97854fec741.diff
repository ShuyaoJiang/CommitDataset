[+++ b/pom.xml, +    <gson.version>2.4</gson.version>, +++ b/pom.xml, +    <gson.version>2.4</gson.version>, +++ b/retrofit-converters/gson/src/main/java/retrofit/GsonConverterFactory.java, +    return new GsonRequestBodyConverter<>(gson, adapter);, +++ b/pom.xml, +    <gson.version>2.4</gson.version>, +++ b/retrofit-converters/gson/src/main/java/retrofit/GsonConverterFactory.java, +    return new GsonRequestBodyConverter<>(gson, adapter);, +++ b/retrofit-converters/gson/src/main/java/retrofit/GsonRequestBodyConverter.java, +import com.google.gson.Gson;, +import com.google.gson.stream.JsonWriter;, +  private final Gson gson;, +  GsonRequestBodyConverter(Gson gson, TypeAdapter<T> adapter) {, +    this.gson = gson;, +    JsonWriter jsonWriter = gson.newJsonWriter(writer);, +      adapter.write(jsonWriter, value);, +      jsonWriter.flush();, +++ b/pom.xml, +    <gson.version>2.4</gson.version>, +++ b/retrofit-converters/gson/src/main/java/retrofit/GsonConverterFactory.java, +    return new GsonRequestBodyConverter<>(gson, adapter);, +++ b/retrofit-converters/gson/src/main/java/retrofit/GsonRequestBodyConverter.java, +import com.google.gson.Gson;, +import com.google.gson.stream.JsonWriter;, +  private final Gson gson;, +  GsonRequestBodyConverter(Gson gson, TypeAdapter<T> adapter) {, +    this.gson = gson;, +    JsonWriter jsonWriter = gson.newJsonWriter(writer);, +      adapter.write(jsonWriter, value);, +      jsonWriter.flush();, +++ b/retrofit-converters/gson/src/test/java/retrofit/GsonConverterFactoryTest.java, +  }, +  @Test public void serializeUsesConfiguration() throws IOException, InterruptedException {, +    server.enqueue(new MockResponse().setBody("{}"));, +, +    service.anImplementation(new AnImplementation(null)).execute();, +, +    RecordedRequest request = server.takeRequest();, +    assertThat(request.getBody().readUtf8()).isEqualTo("{}"); // Null value was not serialized., +    assertThat(request.getHeader("Content-Type")).isEqualTo("application/json; charset=UTF-8");]