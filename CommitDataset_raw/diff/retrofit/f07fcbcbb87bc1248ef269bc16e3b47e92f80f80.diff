[+++ b/modules/android/src-tests/retrofit/io/QueueFileTest.java, +import java.io.File;, +import java.io.FileNotFoundException;, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.RandomAccessFile;, +import junit.framework.ComparisonFailure;, +import junit.framework.TestCase;, +      @Override public void read(InputStream in, int length) throws IOException {, +      @Override public void read(InputStream in, int length) throws IOException {, +      @Override public void read(InputStream in, int length) throws IOException {, +      @Override public void read(InputStream in, int length) throws IOException {, +++ b/modules/android/src-tests/retrofit/io/QueueFileTest.java, +import java.io.File;, +import java.io.FileNotFoundException;, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.RandomAccessFile;, +import junit.framework.ComparisonFailure;, +import junit.framework.TestCase;, +      @Override public void read(InputStream in, int length) throws IOException {, +      @Override public void read(InputStream in, int length) throws IOException {, +      @Override public void read(InputStream in, int length) throws IOException {, +      @Override public void read(InputStream in, int length) throws IOException {, +++ b/modules/android/src/retrofit/io/QueueFile.java, +import java.io.File;, +import java.io.FileNotFoundException;, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.RandomAccessFile;, +    raf.getChannel().force(true);, +    if (fileLength > INITIAL_LENGTH) raf.setLength(INITIAL_LENGTH);, +        @Override public void read(InputStream in, int length) throws IOException {]