[+++ /dev/null, +++ /dev/null, +++ b/retrofit/src/main/java/retrofit2/Retrofit.java, +  private final HttpUrl baseUrl;, +  Retrofit(okhttp3.Call.Factory callFactory, HttpUrl baseUrl,, +  public HttpUrl baseUrl() {, +    private HttpUrl baseUrl;, +    public Builder baseUrl(HttpUrl baseUrl) {, +      this.baseUrl = baseUrl;, +++ /dev/null, +++ b/retrofit/src/main/java/retrofit2/Retrofit.java, +  private final HttpUrl baseUrl;, +  Retrofit(okhttp3.Call.Factory callFactory, HttpUrl baseUrl,, +  public HttpUrl baseUrl() {, +    private HttpUrl baseUrl;, +    public Builder baseUrl(HttpUrl baseUrl) {, +      this.baseUrl = baseUrl;, +++ b/retrofit/src/main/java/retrofit2/ServiceMethod.java, +import okhttp3.HttpUrl;, +  private final HttpUrl baseUrl;, +    RequestBuilder requestBuilder = new RequestBuilder(httpMethod, baseUrl, relativeUrl, headers,, +        contentType, hasBody, isFormEncoded, isMultipart);, +++ /dev/null, +++ b/retrofit/src/main/java/retrofit2/Retrofit.java, +  private final HttpUrl baseUrl;, +  Retrofit(okhttp3.Call.Factory callFactory, HttpUrl baseUrl,, +  public HttpUrl baseUrl() {, +    private HttpUrl baseUrl;, +    public Builder baseUrl(HttpUrl baseUrl) {, +      this.baseUrl = baseUrl;, +++ b/retrofit/src/main/java/retrofit2/ServiceMethod.java, +import okhttp3.HttpUrl;, +  private final HttpUrl baseUrl;, +    RequestBuilder requestBuilder = new RequestBuilder(httpMethod, baseUrl, relativeUrl, headers,, +        contentType, hasBody, isFormEncoded, isMultipart);, +++ b/retrofit/src/main/java/retrofit2/http/QueryMap.java, + * Calling with {@code foo.list(ImmutableMap.of("foo", "foo+foo"))} yields, + * {@code /search?foo=foo%2Bbar}., +++ /dev/null, +++ b/retrofit/src/main/java/retrofit2/Retrofit.java, +  private final HttpUrl baseUrl;, +  Retrofit(okhttp3.Call.Factory callFactory, HttpUrl baseUrl,, +  public HttpUrl baseUrl() {, +    private HttpUrl baseUrl;, +    public Builder baseUrl(HttpUrl baseUrl) {, +      this.baseUrl = baseUrl;, +++ b/retrofit/src/main/java/retrofit2/ServiceMethod.java, +import okhttp3.HttpUrl;, +  private final HttpUrl baseUrl;, +    RequestBuilder requestBuilder = new RequestBuilder(httpMethod, baseUrl, relativeUrl, headers,, +        contentType, hasBody, isFormEncoded, isMultipart);, +++ b/retrofit/src/main/java/retrofit2/http/QueryMap.java, + * Calling with {@code foo.list(ImmutableMap.of("foo", "foo+foo"))} yields, + * {@code /search?foo=foo%2Bbar}., +++ b/retrofit/src/test/java/retrofit2/RetrofitTest.java, +    HttpUrl baseUrl = retrofit.baseUrl();, +    assertThat(baseUrl).isEqualTo(HttpUrl.parse("http://example.com/"));, +    assertThat(retrofit.baseUrl()).isSameAs(url);]