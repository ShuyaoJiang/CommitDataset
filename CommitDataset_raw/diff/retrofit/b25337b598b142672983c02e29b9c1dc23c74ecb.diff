[+++ b/retrofit/src/main/java/retrofit/RestAdapter.java, + *, + * @author Bob Lee (bob@squareup.com), + * @author Jake Wharton (jw@squareup.com), +    // Prevent API interfaces from extending other interfaces. This not only avoids a bug in, +    // Android (http://b.android.com/58753) but it forces composition of API declarations which is, +    // the recommended pattern., +    if (service.getSuperclass() != null) {, +      throw new IllegalArgumentException("Interface definitions must not extend other interfaces.");, +    }, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, + *, + * @author Bob Lee (bob@squareup.com), + * @author Jake Wharton (jw@squareup.com), +    // Prevent API interfaces from extending other interfaces. This not only avoids a bug in, +    // Android (http://b.android.com/58753) but it forces composition of API declarations which is, +    // the recommended pattern., +    if (service.getSuperclass() != null) {, +      throw new IllegalArgumentException("Interface definitions must not extend other interfaces.");, +    }, +++ b/retrofit/src/test/java/retrofit/RestAdapterTest.java, +  private interface InvalidExample extends Example {, +  }, +  @Test public void interfaceWithExtendIsNotSupported() {, +    try {, +      new RestAdapter.Builder().setServer("http://foo/").build().create(InvalidExample.class);, +    } catch (IllegalArgumentException e) {, +      assertThat(e).hasMessage("Interface definitions must not extend other interfaces.");, +    }, +  }, +]