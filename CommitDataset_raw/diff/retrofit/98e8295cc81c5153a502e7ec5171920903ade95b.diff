[+++ b/retrofit-converters/moshi/src/main/java/retrofit2/converter/moshi/MoshiResponseBodyConverter.java, +import com.squareup.moshi.JsonDataException;, +import com.squareup.moshi.JsonReader;, +      JsonReader reader = JsonReader.of(source);, +      T result = adapter.fromJson(reader);, +      if (reader.peek() != JsonReader.Token.END_DOCUMENT) {, +        throw new JsonDataException("JSON document was not fully consumed.");, +      }, +      return result;, +++ b/retrofit-converters/moshi/src/main/java/retrofit2/converter/moshi/MoshiResponseBodyConverter.java, +import com.squareup.moshi.JsonDataException;, +import com.squareup.moshi.JsonReader;, +      JsonReader reader = JsonReader.of(source);, +      T result = adapter.fromJson(reader);, +      if (reader.peek() != JsonReader.Token.END_DOCUMENT) {, +        throw new JsonDataException("JSON document was not fully consumed.");, +      }, +      return result;, +++ b/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java, +import retrofit2.http.GET;, +  static final class Value {, +    final String theName;, +, +    Value(String theName) {, +      this.theName = theName;, +    }, +  }, +, +, +    @FromJson public Value readWithoutEndingObject(JsonReader reader) throws IOException {, +      reader.beginObject();, +      reader.nextName();, +      String theName = reader.nextString();, +      return new Value(theName);, +    }, +    @GET("/") Call<Value> value();, +, +  @Test public void requireFullResponseDocumentConsumption() throws Exception {, +    server.enqueue(new MockResponse().setBody("{\"theName\":\"value\"}"));, +, +    Call<Value> call = service.value();, +    try {, +      call.execute();, +      fail();, +    } catch (JsonDataException e) {, +      assertThat(e).hasMessage("JSON document was not fully consumed.");, +    }, +  }]