[+++ b/retrofit-adapters/README.md, +Retrofit ships with a default adapter for executing `Call` instances. The child modules contained, +herein are additional adapters for other popular execution mechanisms., +, +To use, supply an instance of your desired converter when building your `Retrofit` instance., +, +```java, +Retrofit retrofit = new Retrofit.Builder(), +    .baseUrl("https://api.example.com"), +    .addCallAdapterFactory(RxJavaCallAdapterFactory.create()), +    .build();, +```, +++ b/retrofit-adapters/README.md, +Retrofit ships with a default adapter for executing `Call` instances. The child modules contained, +herein are additional adapters for other popular execution mechanisms., +, +To use, supply an instance of your desired converter when building your `Retrofit` instance., +, +```java, +Retrofit retrofit = new Retrofit.Builder(), +    .baseUrl("https://api.example.com"), +    .addCallAdapterFactory(RxJavaCallAdapterFactory.create()), +    .build();, +```, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactory.java, + * A {@linkplain CallAdapter.Factory call adapter} which uses RxJava for creating observables., + * <p>, + * Adding this class to {@link Retrofit} allows you to return {@link Observable} from service, + * methods., + * <pre>{@code, + * interface MyService {, + *   &#64;GET("user/me"), + *   Observable<User> getUser(), + * }, + * }</pre>, +   * Returns an instance which creates synchronous observables that do not operate on any scheduler, +   * by default., +   * Returns an instance which creates synchronous observables that, +   * {@linkplain Observable#subscribeOn(Scheduler) subscribe on} {@code scheduler} by default., +++ b/retrofit-adapters/README.md, +Retrofit ships with a default adapter for executing `Call` instances. The child modules contained, +herein are additional adapters for other popular execution mechanisms., +, +To use, supply an instance of your desired converter when building your `Retrofit` instance., +, +```java, +Retrofit retrofit = new Retrofit.Builder(), +    .baseUrl("https://api.example.com"), +    .addCallAdapterFactory(RxJavaCallAdapterFactory.create()), +    .build();, +```, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactory.java, + * A {@linkplain CallAdapter.Factory call adapter} which uses RxJava for creating observables., + * <p>, + * Adding this class to {@link Retrofit} allows you to return {@link Observable} from service, + * methods., + * <pre>{@code, + * interface MyService {, + *   &#64;GET("user/me"), + *   Observable<User> getUser(), + * }, + * }</pre>, +   * Returns an instance which creates synchronous observables that do not operate on any scheduler, +   * by default., +   * Returns an instance which creates synchronous observables that, +   * {@linkplain Observable#subscribeOn(Scheduler) subscribe on} {@code scheduler} by default., +++ b/retrofit-converters/README.md, +Retrofit ships with support for OkHttp's `RequestBody` and `ResponseBody` types but the library is, +content-format agnostic. The child modules contained herein are additional converters for other, +popular formats., +    .addConverterFactory(GsonConverterFactory.create()), +++ b/retrofit-adapters/README.md, +Retrofit ships with a default adapter for executing `Call` instances. The child modules contained, +herein are additional adapters for other popular execution mechanisms., +, +To use, supply an instance of your desired converter when building your `Retrofit` instance., +, +```java, +Retrofit retrofit = new Retrofit.Builder(), +    .baseUrl("https://api.example.com"), +    .addCallAdapterFactory(RxJavaCallAdapterFactory.create()), +    .build();, +```, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactory.java, + * A {@linkplain CallAdapter.Factory call adapter} which uses RxJava for creating observables., + * <p>, + * Adding this class to {@link Retrofit} allows you to return {@link Observable} from service, + * methods., + * <pre>{@code, + * interface MyService {, + *   &#64;GET("user/me"), + *   Observable<User> getUser(), + * }, + * }</pre>, +   * Returns an instance which creates synchronous observables that do not operate on any scheduler, +   * by default., +   * Returns an instance which creates synchronous observables that, +   * {@linkplain Observable#subscribeOn(Scheduler) subscribe on} {@code scheduler} by default., +++ b/retrofit-converters/README.md, +Retrofit ships with support for OkHttp's `RequestBody` and `ResponseBody` types but the library is]