[+++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +  private final RequestFactory requestFactory;, +  private final okhttp3.Call.Factory callFactory;, +  private final Converter<ResponseBody, T> responseConverter;, +  OkHttpCall(RequestFactory requestFactory, @Nullable Object[] args,, +      okhttp3.Call.Factory callFactory, Converter<ResponseBody, T> responseConverter) {, +    this.requestFactory = requestFactory;, +    this.callFactory = callFactory;, +    this.responseConverter = responseConverter;, +    return new OkHttpCall<>(requestFactory, args, callFactory, responseConverter);, +    okhttp3.Call call = callFactory.newCall(requestFactory.create(args));, +      T body = responseConverter.convert(catchingBody);, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +  private final RequestFactory requestFactory;, +  private final okhttp3.Call.Factory callFactory;, +  private final Converter<ResponseBody, T> responseConverter;, +  OkHttpCall(RequestFactory requestFactory, @Nullable Object[] args,, +      okhttp3.Call.Factory callFactory, Converter<ResponseBody, T> responseConverter) {, +    this.requestFactory = requestFactory;, +    this.callFactory = callFactory;, +    this.responseConverter = responseConverter;, +    return new OkHttpCall<>(requestFactory, args, callFactory, responseConverter);, +    okhttp3.Call call = callFactory.newCall(requestFactory.create(args));, +      T body = responseConverter.convert(catchingBody);, +++ b/retrofit/src/main/java/retrofit2/ServiceMethod.java, +    return callAdapter.adapt(, +        new OkHttpCall<>(requestFactory, args, callFactory, responseConverter));]