[+++ b/retrofit/src/main/java/retrofit/RestAdapter.java, +      String url = serverUrl; // Keep some url in case RequestBuilder throws an exception., +      try {, +    log.log(String.format("---- ERROR %s", url));, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, +      String url = serverUrl; // Keep some url in case RequestBuilder throws an exception., +      try {, +    log.log(String.format("---- ERROR %s", url));, +++ b/retrofit/src/main/java/retrofit/http/Field.java, + * Values are converted to strings using {@link String#valueOf(Object)} and then form URL encoded., + * {@code null} values are ignored. Passing a {@link java.util.List List} or array will result in a, + * field pair for each non-{@code null} item., + * <p>, + * Array Example:, + * <pre>, + * &#64;FormUrlEncoded, + * &#64;POST("/list"), + * void example(@Field("name") String... names);, + * </pre>, + * Calling with {@code foo.example("Bob Smith", "Jane Doe")} yields a request body of, + * {@code name=Bob+Smith&name=Jane+Doe}., +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, +      String url = serverUrl; // Keep some url in case RequestBuilder throws an exception., +      try {, +    log.log(String.format("---- ERROR %s", url));, +++ b/retrofit/src/main/java/retrofit/http/Field.java, + * Values are converted to strings using {@link String#valueOf(Object)} and then form URL encoded., + * {@code null} values are ignored. Passing a {@link java.util.List List} or array will result in a, + * field pair for each non-{@code null} item., + * <p>, + * Array Example:, + * <pre>, + * &#64;FormUrlEncoded, + * &#64;POST("/list"), + * void example(@Field("name") String... names);, + * </pre>, + * Calling with {@code foo.example("Bob Smith", "Jane Doe")} yields a request body of, + * {@code name=Bob+Smith&name=Jane+Doe}., +++ b/retrofit/src/main/java/retrofit/http/Part.java, + * Values may be {@code null} which will omit them from the request body., + * <p>, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, +      String url = serverUrl; // Keep some url in case RequestBuilder throws an exception., +      try {, +    log.log(String.format("---- ERROR %s", url));, +++ b/retrofit/src/main/java/retrofit/http/Field.java, + * Values are converted to strings using {@link String#valueOf(Object)} and then form URL encoded., + * {@code null} values are ignored. Passing a {@link java.util.List List} or array will result in a, + * field pair for each non-{@code null} item., + * <p>, + * Array Example:, + * <pre>, + * &#64;FormUrlEncoded, + * &#64;POST("/list"), + * void example(@Field("name") String... names);, + * </pre>, + * Calling with {@code foo.example("Bob Smith", "Jane Doe")} yields a request body of, + * {@code name=Bob+Smith&name=Jane+Doe}., +++ b/retrofit/src/main/java/retrofit/http/Part.java, + * Values may be {@code null} which will omit them from the request body., + * <p>, +++ b/retrofit/src/main/java/retrofit/http/Query.java, + * {@code null} values are ignored. Passing a {@link java.util.List List} or array will result in a, + * query parameter for each non-{@code null} item.]