[+++ b/pom.xml, +    <rxjava.version>1.1.9</rxjava.version>, +++ b/pom.xml, +    <rxjava.version>1.1.9</rxjava.version>, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableTest.java, +  @Rule public final RecordingSubscriber.Rule subscriberRule = new RecordingSubscriber.Rule();, +    RecordingSubscriber<Void> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +    RecordingSubscriber<Void> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +    subscriber.assertError(HttpException.class, "HTTP 404 Client Error");, +    RecordingSubscriber<Void> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +++ b/pom.xml, +    <rxjava.version>1.1.9</rxjava.version>, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableTest.java, +  @Rule public final RecordingSubscriber.Rule subscriberRule = new RecordingSubscriber.Rule();, +    RecordingSubscriber<Void> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +    RecordingSubscriber<Void> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +    subscriber.assertError(HttpException.class, "HTTP 404 Client Error");, +    RecordingSubscriber<Void> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableWithSchedulerTest.java, +  @Rule public final RecordingSubscriber.Rule subscriberRule = new RecordingSubscriber.Rule();, +    RecordingSubscriber<String> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +    subscriber.assertNoEvents();, +++ b/pom.xml, +    <rxjava.version>1.1.9</rxjava.version>, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableTest.java, +  @Rule public final RecordingSubscriber.Rule subscriberRule = new RecordingSubscriber.Rule();, +    RecordingSubscriber<Void> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +    RecordingSubscriber<Void> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +    subscriber.assertError(HttpException.class, "HTTP 404 Client Error");, +    RecordingSubscriber<Void> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableWithSchedulerTest.java, +  @Rule public final RecordingSubscriber.Rule subscriberRule = new RecordingSubscriber.Rule();, +    RecordingSubscriber<String> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +    subscriber.assertNoEvents();, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableTest.java, +  @Rule public final RecordingSubscriber.Rule subscriberRule = new RecordingSubscriber.Rule();, +    RecordingSubscriber<String> subscriber = subscriberRule.create();, +    service.body().unsafeSubscribe(subscriber);, +    subscriber.assertValue("Hi").assertCompleted();, +    RecordingSubscriber<String> subscriber = subscriberRule.create();, +    service.body().unsafeSubscribe(subscriber);, +    subscriber.assertError(HttpException.class, "HTTP 404 Client Error");, +    RecordingSubscriber<String> subscriber = subscriberRule.create();, +    service.body().unsafeSubscribe(subscriber);, +    RecordingSubscriber<String> subscriber = subscriberRule.createWithInitialRequest(0);, +    service.body().unsafeSubscribe(subscriber);, +    subscriber.assertAnyValue().assertCompleted();, +    RecordingSubscriber<Response<String>> subscriber = subscriberRule.create();, +    service.response().unsafeSubscribe(subscriber);, +    assertThat(subscriber.takeValue().body()).isEqualTo("Hi");, +    server.enqueue(new MockResponse().setResponseCode(404));, +    RecordingSubscriber<Response<String>> subscriber = subscriberRule.create();, +    service.response().unsafeSubscribe(subscriber);, +    assertThat(subscriber.takeValue().code()).isEqualTo(404);, +    RecordingSubscriber<Response<String>> subscriber = subscriberRule.create();, +    service.response().unsafeSubscribe(subscriber);, +    RecordingSubscriber<Response<String>> subscriber = subscriberRule.createWithInitialRequest(0);, +    service.response().unsafeSubscribe(subscriber);, +    subscriber.assertAnyValue().assertCompleted();, +    RecordingSubscriber<Result<String>> subscriber = subscriberRule.create();, +    service.result().unsafeSubscribe(subscriber);, +    assertThat(subscriber.takeValue().response().body()).isEqualTo("Hi");, +    server.enqueue(new MockResponse().setResponseCode(404));, +    RecordingSubscriber<Result<String>> subscriber = subscriberRule.create();, +    service.result().unsafeSubscribe(subscriber);, +    assertThat(subscriber.takeValue().response().code()).isEqualTo(404);, +    RecordingSubscriber<Result<String>> subscriber = subscriberRule.create();, +    service.result().unsafeSubscribe(subscriber);, +    assertThat(subscriber.takeValue().error()).isInstanceOf(IOException.class);, +    RecordingSubscriber<Result<String>> subscriber = subscriberRule.createWithInitialRequest(0);, +    service.result().unsafeSubscribe(subscriber);, +    subscriber.assertAnyValue().assertCompleted();, +++ b/pom.xml, +    <rxjava.version>1.1.9</rxjava.version>, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableTest.java, +  @Rule public final RecordingSubscriber.Rule subscriberRule = new RecordingSubscriber.Rule();, +    RecordingSubscriber<Void> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +    RecordingSubscriber<Void> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +    subscriber.assertError(HttpException.class, "HTTP 404 Client Error");, +    RecordingSubscriber<Void> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/CompletableWithSchedulerTest.java, +  @Rule public final RecordingSubscriber.Rule subscriberRule = new RecordingSubscriber.Rule();, +    RecordingSubscriber<String> subscriber = subscriberRule.create();, +    service.completable().unsafeSubscribe(subscriber);, +    subscriber.assertNoEvents();, +++ b/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableTest.java]