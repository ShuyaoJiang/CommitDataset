[+++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +      if (executed) throw new IllegalStateException("Already executed.");, +  @Override public Response<T> execute() throws IOException {, +      if (executed) throw new IllegalStateException("Already executed.");, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +      if (executed) throw new IllegalStateException("Already executed.");, +  @Override public Response<T> execute() throws IOException {, +      if (executed) throw new IllegalStateException("Already executed.");, +++ b/retrofit/src/test/java/retrofit2/CallTest.java, +  @Test public void executeCallOnce() throws IOException {, +    Retrofit retrofit = new Retrofit.Builder(), +        .baseUrl(server.url("/")), +        .addConverterFactory(new ToStringConverterFactory()), +        .build();, +    Service example = retrofit.create(Service.class);, +    server.enqueue(new MockResponse());, +    Call<String> call = example.getString();, +    call.execute();, +    try {, +      call.execute();, +      fail();, +    } catch (IllegalStateException e) {, +      assertThat(e).hasMessage("Already executed.");, +    }, +  }, +]