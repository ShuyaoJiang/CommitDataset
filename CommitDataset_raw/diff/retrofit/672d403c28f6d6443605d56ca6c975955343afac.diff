[+++ b/retrofit/src/main/java/retrofit2/http/Field.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Values are converted to strings using {@link Retrofit#stringConverter(Type, Annotation[])}, + * (or {@link Object#toString()}, if no matching string converter is installed), + * and then form URL encoded., +++ b/retrofit/src/main/java/retrofit2/http/Field.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Values are converted to strings using {@link Retrofit#stringConverter(Type, Annotation[])}, + * (or {@link Object#toString()}, if no matching string converter is installed), + * and then form URL encoded., +++ b/retrofit/src/main/java/retrofit2/http/HeaderMap.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Values are converted to strings using {@link Retrofit#stringConverter(Type, Annotation[])}, + * (or {@link Object#toString()}, if no matching string converter is installed)., +++ b/retrofit/src/main/java/retrofit2/http/Field.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Values are converted to strings using {@link Retrofit#stringConverter(Type, Annotation[])}, + * (or {@link Object#toString()}, if no matching string converter is installed), + * and then form URL encoded., +++ b/retrofit/src/main/java/retrofit2/http/HeaderMap.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Values are converted to strings using {@link Retrofit#stringConverter(Type, Annotation[])}, + * (or {@link Object#toString()}, if no matching string converter is installed)., +++ b/retrofit/src/main/java/retrofit2/http/Path.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Named replacement in a URL path segment. Values are converted to strings using, + * {@link Retrofit#stringConverter(Type, Annotation[])} (or {@link Object#toString()},, + * if no matching string converter is installed) and then URL encoded., +++ b/retrofit/src/main/java/retrofit2/http/Field.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Values are converted to strings using {@link Retrofit#stringConverter(Type, Annotation[])}, + * (or {@link Object#toString()}, if no matching string converter is installed), + * and then form URL encoded., +++ b/retrofit/src/main/java/retrofit2/http/HeaderMap.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Values are converted to strings using {@link Retrofit#stringConverter(Type, Annotation[])}, + * (or {@link Object#toString()}, if no matching string converter is installed)., +++ b/retrofit/src/main/java/retrofit2/http/Path.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Named replacement in a URL path segment. Values are converted to strings using, + * {@link Retrofit#stringConverter(Type, Annotation[])} (or {@link Object#toString()},, + * if no matching string converter is installed) and then URL encoded., +++ b/retrofit/src/main/java/retrofit2/http/Query.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Values are converted to strings using {@link Retrofit#stringConverter(Type, Annotation[])}, + * (or {@link Object#toString()}, if no matching string converter is installed), + * and then URL encoded., +++ b/retrofit/src/main/java/retrofit2/http/Field.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Values are converted to strings using {@link Retrofit#stringConverter(Type, Annotation[])}, + * (or {@link Object#toString()}, if no matching string converter is installed), + * and then form URL encoded., +++ b/retrofit/src/main/java/retrofit2/http/HeaderMap.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Values are converted to strings using {@link Retrofit#stringConverter(Type, Annotation[])}, + * (or {@link Object#toString()}, if no matching string converter is installed)., +++ b/retrofit/src/main/java/retrofit2/http/Path.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Named replacement in a URL path segment. Values are converted to strings using, + * {@link Retrofit#stringConverter(Type, Annotation[])} (or {@link Object#toString()},, + * if no matching string converter is installed) and then URL encoded., +++ b/retrofit/src/main/java/retrofit2/http/Query.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Values are converted to strings using {@link Retrofit#stringConverter(Type, Annotation[])}, + * (or {@link Object#toString()}, if no matching string converter is installed), + * and then URL encoded., +++ b/retrofit/src/main/java/retrofit2/http/QueryMap.java, +import java.lang.annotation.Annotation;, +import java.lang.reflect.Type;, +import retrofit2.Retrofit;, + * Values are converted to strings using {@link Retrofit#stringConverter(Type, Annotation[])}, + * (or {@link Object#toString()}, if no matching string converter is installed).]