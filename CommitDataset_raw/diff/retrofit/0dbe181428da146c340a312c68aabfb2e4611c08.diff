[+++ b/retrofit/src/main/java/retrofit/http/GsonConverter.java, +    @Override public String fileName() {, +      return null;, +    }, +, +++ b/retrofit/src/main/java/retrofit/http/GsonConverter.java, +    @Override public String fileName() {, +      return null;, +    }, +, +++ b/retrofit/src/main/java/retrofit/http/MultipartTypedOutput.java, +import java.io.ByteArrayOutputStream;, +import java.util.ArrayList;, +import java.util.List;, +  final List<byte[]> parts = new ArrayList<byte[]>();, +  private final byte[] footer;, +  private long length;, +    footer = buildBoundary(boundary, false, true);, +    length = footer.length;, +, +    byte[] part = buildPart(name, body, parts.isEmpty());, +    parts.add(part);, +    length += part.length;, +  }, +, +  @Override public String fileName() {, +    return null;, +    return length;, +    for (byte[] part : parts) {, +      out.write(part);, +    out.write(footer);, +  private byte[] buildPart(String name, TypedOutput body, boolean first) {, +    ByteArrayOutputStream out = null;, +    try {, +      out = new ByteArrayOutputStream();, +      out.write(buildBoundary(boundary, first, false));, +      out.write(buildHeader(name, body));, +      body.writeTo(out);, +      return out.toByteArray();, +    } catch (IOException ex) {, +      throw new RuntimeException("Unable to write multipart request.", ex);, +    } finally {, +      if (out != null) {, +        try {, +          out.close();, +        } catch (IOException ignored) {, +        }, +      }, +    }, +  }, +, +  private static byte[] buildBoundary(String boundary, boolean first, boolean last) {, +    try {, +      return sb.toString().getBytes("UTF-8");, +    } catch (IOException ex) {, +      throw new RuntimeException("Unable to write multipart boundary", ex);, +    }, +  private byte[] buildHeader(String name, TypedOutput value) {, +    try {, +      if (value.fileName() != null) {, +        headers.append(value.fileName());, +      return headers.toString().getBytes("UTF-8");, +    } catch (IOException ex) {, +      throw new RuntimeException("Unable to write multipart header", ex);, +    }, +++ b/retrofit/src/main/java/retrofit/http/GsonConverter.java, +    @Override public String fileName() {, +      return null;, +    }, +, +++ b/retrofit/src/main/java/retrofit/http/MultipartTypedOutput.java, +import java.io.ByteArrayOutputStream;, +import java.util.ArrayList;, +import java.util.List;, +  final List<byte[]> parts = new ArrayList<byte[]>();, +  private final byte[] footer;, +  private long length;, +    footer = buildBoundary(boundary, false, true);, +    length = footer.length;, +, +    byte[] part = buildPart(name, body, parts.isEmpty());, +    parts.add(part);, +    length += part.length;, +  }, +, +  @Override public String fileName() {, +    return null;, +    return length;, +    for (byte[] part : parts) {, +      out.write(part);, +    out.write(footer);, +  private byte[] buildPart(String name, TypedOutput body, boolean first) {, +    ByteArrayOutputStream out = null;, +    try {, +      out = new ByteArrayOutputStream();, +      out.write(buildBoundary(boundary, first, false));, +      out.write(buildHeader(name, body));, +      body.writeTo(out);, +      return out.toByteArray();, +    } catch (IOException ex) {]