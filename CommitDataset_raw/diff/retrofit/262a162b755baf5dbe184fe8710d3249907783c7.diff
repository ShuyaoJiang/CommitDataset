[+++ b/pom.xml, +    <rxjava.version>0.18.3</rxjava.version>, +++ b/pom.xml, +    <rxjava.version>0.18.3</rxjava.version>, +++ b/retrofit-mock/src/main/java/retrofit/MockHttpRetrofitError.java, +    super(message, url, response, null, null, false, null);, +++ b/pom.xml, +    <rxjava.version>0.18.3</rxjava.version>, +++ b/retrofit-mock/src/main/java/retrofit/MockHttpRetrofitError.java, +    super(message, url, response, null, null, false, null);, +++ b/retrofit-mock/src/test/java/retrofit/MockRestAdapterTest.java, +    @GET("/") void doStuff(Callback<Object> cb);, +    @GET("/") Observable<Object> doStuff();, +      @Override public void doStuff(Callback<Object> cb) {, +    mockService.doStuff(new Callback<Object>() {, +      @Override public void success(Object o, Response response) {, +    final Object expected = new Object();, +      @Override public void doStuff(Callback<Object> cb) {, +    mockService.doStuff(new Callback<Object>() {, +      @Override public void success(Object result, Response response) {, +    final Object expected = new Object();, +      @Override public Observable<Object> doStuff() {, +    final Object expected = new Object();, +      @Override public Object doStuff() {, +    final Object expected = new Object();, +      @Override public void doStuff(Callback<Object> cb) {, +    mockService.doStuff(new Callback<Object>() {, +      @Override public void success(Object o, Response response) {, +    final Object expected = new Object();, +      @Override public Observable<Object> doStuff() {, +      @Override public void doStuff(Callback<Object> cb) {, +    mockService.doStuff(new Callback<Object>() {, +      @Override public void success(Object o, Response response) {, +      @Override public Observable<Object> doStuff() {, +++ b/pom.xml, +    <rxjava.version>0.18.3</rxjava.version>, +++ b/retrofit-mock/src/main/java/retrofit/MockHttpRetrofitError.java, +    super(message, url, response, null, null, false, null);, +++ b/retrofit-mock/src/test/java/retrofit/MockRestAdapterTest.java, +    @GET("/") void doStuff(Callback<Object> cb);, +    @GET("/") Observable<Object> doStuff();, +      @Override public void doStuff(Callback<Object> cb) {, +    mockService.doStuff(new Callback<Object>() {, +      @Override public void success(Object o, Response response) {, +    final Object expected = new Object();, +      @Override public void doStuff(Callback<Object> cb) {, +    mockService.doStuff(new Callback<Object>() {, +      @Override public void success(Object result, Response response) {, +    final Object expected = new Object();, +      @Override public Observable<Object> doStuff() {, +    final Object expected = new Object();, +      @Override public Object doStuff() {, +    final Object expected = new Object();, +      @Override public void doStuff(Callback<Object> cb) {, +    mockService.doStuff(new Callback<Object>() {, +      @Override public void success(Object o, Response response) {, +    final Object expected = new Object();, +      @Override public Observable<Object> doStuff() {, +      @Override public void doStuff(Callback<Object> cb) {, +    mockService.doStuff(new Callback<Object>() {, +      @Override public void success(Object o, Response response) {, +      @Override public Observable<Object> doStuff() {, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, +            if (!methodInfo.isRaw) {, +            }, +++ b/pom.xml, +    <rxjava.version>0.18.3</rxjava.version>, +++ b/retrofit-mock/src/main/java/retrofit/MockHttpRetrofitError.java, +    super(message, url, response, null, null, false, null);, +++ b/retrofit-mock/src/test/java/retrofit/MockRestAdapterTest.java, +    @GET("/") void doStuff(Callback<Object> cb);, +    @GET("/") Observable<Object> doStuff();, +      @Override public void doStuff(Callback<Object> cb) {, +    mockService.doStuff(new Callback<Object>() {, +      @Override public void success(Object o, Response response) {, +    final Object expected = new Object();, +      @Override public void doStuff(Callback<Object> cb) {, +    mockService.doStuff(new Callback<Object>() {, +      @Override public void success(Object result, Response response) {, +    final Object expected = new Object();, +      @Override public Observable<Object> doStuff() {, +    final Object expected = new Object();, +      @Override public Object doStuff() {, +    final Object expected = new Object();, +      @Override public void doStuff(Callback<Object> cb) {, +    mockService.doStuff(new Callback<Object>() {, +      @Override public void success(Object o, Response response) {, +    final Object expected = new Object();, +      @Override public Observable<Object> doStuff() {, +      @Override public void doStuff(Callback<Object> cb) {, +    mockService.doStuff(new Callback<Object>() {, +      @Override public void success(Object o, Response response) {, +      @Override public Observable<Object> doStuff() {, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, +            if (!methodInfo.isRaw) {, +            }, +++ b/retrofit/src/main/java/retrofit/RestMethodInfo.java, +import retrofit.client.Response;, +import retrofit.http.Raw;, +  boolean isRaw;]