[+++ b/retrofit/src/main/java/retrofit2/BaseUrl.java, +package retrofit2;, +, +import okhttp3.HttpUrl;, +, +/** The base URL of the remote service. */, +public interface BaseUrl {, +  /**, +   * The base URL., +   * <p>, +   * Consumers will call this method every time they need to create a request allowing values, +   * to change over time., +   */, +  HttpUrl url();, +}, +++ b/retrofit/src/main/java/retrofit2/BaseUrl.java, +package retrofit2;, +, +import okhttp3.HttpUrl;, +, +/** The base URL of the remote service. */, +public interface BaseUrl {, +  /**, +   * The base URL., +   * <p>, +   * Consumers will call this method every time they need to create a request allowing values, +   * to change over time., +   */, +  HttpUrl url();, +}, +++ b/retrofit/src/main/java/retrofit2/Retrofit.java, +  private final BaseUrl baseUrl;, +  Retrofit(okhttp3.Call.Factory callFactory, BaseUrl baseUrl,, +  public BaseUrl baseUrl() {, +    private BaseUrl baseUrl;, +    public Builder baseUrl(final HttpUrl baseUrl) {, +      return baseUrl(new BaseUrl() {, +        @Override public HttpUrl url() {, +          return baseUrl;, +        }, +      });, +    }, +, +    /**, +     * Set an API base URL which can change over time., +     *, +     * @see #baseUrl(HttpUrl), +     */, +    public Builder baseUrl(BaseUrl baseUrl) {, +      this.baseUrl = checkNotNull(baseUrl, "baseUrl == null");, +++ b/retrofit/src/main/java/retrofit2/BaseUrl.java, +package retrofit2;, +, +import okhttp3.HttpUrl;, +, +/** The base URL of the remote service. */, +public interface BaseUrl {, +  /**, +   * The base URL., +   * <p>, +   * Consumers will call this method every time they need to create a request allowing values, +   * to change over time., +   */, +  HttpUrl url();, +}, +++ b/retrofit/src/main/java/retrofit2/Retrofit.java, +  private final BaseUrl baseUrl;, +  Retrofit(okhttp3.Call.Factory callFactory, BaseUrl baseUrl,, +  public BaseUrl baseUrl() {, +    private BaseUrl baseUrl;, +    public Builder baseUrl(final HttpUrl baseUrl) {, +      return baseUrl(new BaseUrl() {, +        @Override public HttpUrl url() {, +          return baseUrl;, +        }, +      });, +    }, +, +    /**, +     * Set an API base URL which can change over time., +     *, +     * @see #baseUrl(HttpUrl), +     */, +    public Builder baseUrl(BaseUrl baseUrl) {, +      this.baseUrl = checkNotNull(baseUrl, "baseUrl == null");, +++ b/retrofit/src/main/java/retrofit2/ServiceMethod.java, +  private final BaseUrl baseUrl;, +    RequestBuilder requestBuilder = new RequestBuilder(httpMethod, baseUrl.url(), relativeUrl,, +        headers, contentType, hasBody, isFormEncoded, isMultipart);, +++ b/retrofit/src/main/java/retrofit2/BaseUrl.java, +package retrofit2;, +, +import okhttp3.HttpUrl;, +, +/** The base URL of the remote service. */, +public interface BaseUrl {, +  /**, +   * The base URL., +   * <p>, +   * Consumers will call this method every time they need to create a request allowing values]