[+++ b/android/pom.xml, +        <dependency>, +            <groupId>org.easytesting</groupId>, +            <artifactId>fest-assert</artifactId>, +            <scope>test</scope>, +        </dependency>, +++ b/android/pom.xml, +        <dependency>, +            <groupId>org.easytesting</groupId>, +            <artifactId>fest-assert</artifactId>, +            <scope>test</scope>, +        </dependency>, +++ b/android/src/test/java/retrofit/android/ShakeDetectorTest.java, +import org.junit.Test;, +, +import static org.fest.assertions.Assertions.assertThat;, +  @Test public void testInitialShaking() {, +    assertThat(q.isShaking()).isFalse();, +  @Test public void testShakingSampleCount3() {, +    assertThat(q.isShaking()).isFalse();, +    assertThat(q.isShaking()).isFalse();, +    assertThat(q.isShaking()).isTrue();, +    assertThat(q.isShaking()).isTrue();, +    assertThat(q.isShaking()).isFalse();, +    assertThat(samples.size()).isEqualTo(expected.length).as(sb.toString());, +      assertThat(samples.get(i).accelerating).isEqualTo(expected[i]), +          .as("sample[" + i + "] accelerating");, +  @Test public void testClear() {, +    assertThat(q.isShaking()).isTrue();, +    assertThat(q.isShaking()).isFalse();, +++ b/android/pom.xml, +        <dependency>, +            <groupId>org.easytesting</groupId>, +            <artifactId>fest-assert</artifactId>, +            <scope>test</scope>, +        </dependency>, +++ b/android/src/test/java/retrofit/android/ShakeDetectorTest.java, +import org.junit.Test;, +, +import static org.fest.assertions.Assertions.assertThat;, +  @Test public void testInitialShaking() {, +    assertThat(q.isShaking()).isFalse();, +  @Test public void testShakingSampleCount3() {, +    assertThat(q.isShaking()).isFalse();, +    assertThat(q.isShaking()).isFalse();, +    assertThat(q.isShaking()).isTrue();, +    assertThat(q.isShaking()).isTrue();, +    assertThat(q.isShaking()).isFalse();, +    assertThat(samples.size()).isEqualTo(expected.length).as(sb.toString());, +      assertThat(samples.get(i).accelerating).isEqualTo(expected[i]), +          .as("sample[" + i + "] accelerating");, +  @Test public void testClear() {, +    assertThat(q.isShaking()).isTrue();, +    assertThat(q.isShaking()).isFalse();, +++ b/http/pom.xml, +            <groupId>org.easytesting</groupId>, +            <artifactId>fest-assert</artifactId>, +            <scope>test</scope>, +        </dependency>, +        <dependency>, +++ b/android/pom.xml, +        <dependency>, +            <groupId>org.easytesting</groupId>, +            <artifactId>fest-assert</artifactId>, +            <scope>test</scope>, +        </dependency>, +++ b/android/src/test/java/retrofit/android/ShakeDetectorTest.java, +import org.junit.Test;, +, +import static org.fest.assertions.Assertions.assertThat;, +  @Test public void testInitialShaking() {, +    assertThat(q.isShaking()).isFalse();, +  @Test public void testShakingSampleCount3() {, +    assertThat(q.isShaking()).isFalse();, +    assertThat(q.isShaking()).isFalse();, +    assertThat(q.isShaking()).isTrue();, +    assertThat(q.isShaking()).isTrue();, +    assertThat(q.isShaking()).isFalse();, +    assertThat(samples.size()).isEqualTo(expected.length).as(sb.toString());, +      assertThat(samples.get(i).accelerating).isEqualTo(expected[i]), +          .as("sample[" + i + "] accelerating");, +  @Test public void testClear() {, +    assertThat(q.isShaking()).isTrue();, +    assertThat(q.isShaking()).isFalse();, +++ b/http/pom.xml, +            <groupId>org.easytesting</groupId>, +            <artifactId>fest-assert</artifactId>, +            <scope>test</scope>, +        </dependency>, +        <dependency>, +++ b/http/src/test/java/retrofit/http/FetcherTest.java, +import org.junit.Test;, +import static org.easymock.EasyMock.anyInt;, +import static org.easymock.EasyMock.createMock;, +import static org.easymock.EasyMock.expect;, +import static org.easymock.EasyMock.expectLastCall;, +import static org.easymock.EasyMock.replay;, +import static org.easymock.EasyMock.verify;, +import static org.fest.assertions.Assertions.assertThat;, +public class FetcherTest {]