[+++ b/retrofit/src/main/java/retrofit/client/ApacheClient.java, +import org.apache.http.params.BasicHttpParams;, +import org.apache.http.params.HttpConnectionParams;, +import org.apache.http.params.HttpParams;, +  private static HttpClient createDefaultClient() {, +    HttpParams params = new BasicHttpParams();, +    HttpConnectionParams.setConnectionTimeout(params, Defaults.CONNECT_TIMEOUT);, +    HttpConnectionParams.setSoTimeout(params, Defaults.READ_TIMEOUT);, +    return new DefaultHttpClient(params);, +  }, +, +    this(createDefaultClient());, +++ b/retrofit/src/main/java/retrofit/client/ApacheClient.java, +import org.apache.http.params.BasicHttpParams;, +import org.apache.http.params.HttpConnectionParams;, +import org.apache.http.params.HttpParams;, +  private static HttpClient createDefaultClient() {, +    HttpParams params = new BasicHttpParams();, +    HttpConnectionParams.setConnectionTimeout(params, Defaults.CONNECT_TIMEOUT);, +    HttpConnectionParams.setSoTimeout(params, Defaults.READ_TIMEOUT);, +    return new DefaultHttpClient(params);, +  }, +, +    this(createDefaultClient());, +++ b/retrofit/src/main/java/retrofit/client/Defaults.java, +package retrofit.client;, +, +class Defaults {, +  static final int CONNECT_TIMEOUT = 15 * 1000; // 15s, +  static final int READ_TIMEOUT = 20 * 1000; // 20s, +}, +++ b/retrofit/src/main/java/retrofit/client/ApacheClient.java, +import org.apache.http.params.BasicHttpParams;, +import org.apache.http.params.HttpConnectionParams;, +import org.apache.http.params.HttpParams;, +  private static HttpClient createDefaultClient() {, +    HttpParams params = new BasicHttpParams();, +    HttpConnectionParams.setConnectionTimeout(params, Defaults.CONNECT_TIMEOUT);, +    HttpConnectionParams.setSoTimeout(params, Defaults.READ_TIMEOUT);, +    return new DefaultHttpClient(params);, +  }, +, +    this(createDefaultClient());, +++ b/retrofit/src/main/java/retrofit/client/Defaults.java, +package retrofit.client;, +, +class Defaults {, +  static final int CONNECT_TIMEOUT = 15 * 1000; // 15s, +  static final int READ_TIMEOUT = 20 * 1000; // 20s, +}, +++ b/retrofit/src/main/java/retrofit/client/OkClient.java, +    HttpURLConnection connection = client.open(new URL(request.getUrl()));, +    connection.setConnectTimeout(Defaults.CONNECT_TIMEOUT);, +    connection.setReadTimeout(Defaults.READ_TIMEOUT);, +    return connection;, +++ b/retrofit/src/main/java/retrofit/client/ApacheClient.java, +import org.apache.http.params.BasicHttpParams;, +import org.apache.http.params.HttpConnectionParams;, +import org.apache.http.params.HttpParams;, +  private static HttpClient createDefaultClient() {, +    HttpParams params = new BasicHttpParams();, +    HttpConnectionParams.setConnectionTimeout(params, Defaults.CONNECT_TIMEOUT);, +    HttpConnectionParams.setSoTimeout(params, Defaults.READ_TIMEOUT);, +    return new DefaultHttpClient(params);, +  }, +, +    this(createDefaultClient());, +++ b/retrofit/src/main/java/retrofit/client/Defaults.java, +package retrofit.client;, +, +class Defaults {, +  static final int CONNECT_TIMEOUT = 15 * 1000; // 15s, +  static final int READ_TIMEOUT = 20 * 1000; // 20s, +}, +++ b/retrofit/src/main/java/retrofit/client/OkClient.java, +    HttpURLConnection connection = client.open(new URL(request.getUrl()));, +    connection.setConnectTimeout(Defaults.CONNECT_TIMEOUT);, +    connection.setReadTimeout(Defaults.READ_TIMEOUT);, +    return connection;, +++ b/retrofit/src/main/java/retrofit/client/UrlConnectionClient.java, +    HttpURLConnection connection =, +        (HttpURLConnection) new URL(request.getUrl()).openConnection();, +    connection.setConnectTimeout(Defaults.CONNECT_TIMEOUT);, +    connection.setReadTimeout(Defaults.READ_TIMEOUT);, +    return connection;]