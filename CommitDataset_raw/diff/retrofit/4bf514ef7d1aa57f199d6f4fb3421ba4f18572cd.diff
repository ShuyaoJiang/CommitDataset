[+++ b/retrofit/src/main/java/retrofit/ErrorHandler.java, + * A hook allowing clients to customize {@link RetrofitError RetrofitError}., +++ b/retrofit/src/main/java/retrofit/ErrorHandler.java, + * A hook allowing clients to customize {@link RetrofitError RetrofitError}., +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, + * {@link retrofit.converter.Converter#toBody(Object, java.lang.reflect.Type) toBody}, + * on the supplied {@link retrofit.converter.Converter Converter} for this instance., +++ b/retrofit/src/main/java/retrofit/ErrorHandler.java, + * A hook allowing clients to customize {@link RetrofitError RetrofitError}., +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, + * {@link retrofit.converter.Converter#toBody(Object, java.lang.reflect.Type) toBody}, + * on the supplied {@link retrofit.converter.Converter Converter} for this instance., +++ b/retrofit/src/main/java/retrofit/http/Body.java, + * body). The object will be serialized using the {@link retrofit.RestAdapter RestAdapter}'s, +++ b/retrofit/src/main/java/retrofit/ErrorHandler.java, + * A hook allowing clients to customize {@link RetrofitError RetrofitError}., +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, + * {@link retrofit.converter.Converter#toBody(Object, java.lang.reflect.Type) toBody}, + * on the supplied {@link retrofit.converter.Converter Converter} for this instance., +++ b/retrofit/src/main/java/retrofit/http/Body.java, + * body). The object will be serialized using the {@link retrofit.RestAdapter RestAdapter}'s, +++ b/retrofit/src/main/java/retrofit/http/Part.java, + * retrofit.converter.Converter#toBody(Object, java.lang.reflect.Type)}.</li>, +++ b/retrofit/src/main/java/retrofit/ErrorHandler.java, + * A hook allowing clients to customize {@link RetrofitError RetrofitError}., +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, + * {@link retrofit.converter.Converter#toBody(Object, java.lang.reflect.Type) toBody}, + * on the supplied {@link retrofit.converter.Converter Converter} for this instance., +++ b/retrofit/src/main/java/retrofit/http/Body.java, + * body). The object will be serialized using the {@link retrofit.RestAdapter RestAdapter}'s, +++ b/retrofit/src/main/java/retrofit/http/Part.java, + * retrofit.converter.Converter#toBody(Object, java.lang.reflect.Type)}.</li>, +++ b/retrofit/src/main/java/retrofit/http/PartMap.java, + * retrofit.converter.Converter#toBody(Object, java.lang.reflect.Type)}.</li>, +++ b/retrofit/src/main/java/retrofit/ErrorHandler.java, + * A hook allowing clients to customize {@link RetrofitError RetrofitError}., +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, + * {@link retrofit.converter.Converter#toBody(Object, java.lang.reflect.Type) toBody}, + * on the supplied {@link retrofit.converter.Converter Converter} for this instance., +++ b/retrofit/src/main/java/retrofit/http/Body.java, + * body). The object will be serialized using the {@link retrofit.RestAdapter RestAdapter}'s, +++ b/retrofit/src/main/java/retrofit/http/Part.java, + * retrofit.converter.Converter#toBody(Object, java.lang.reflect.Type)}.</li>, +++ b/retrofit/src/main/java/retrofit/http/PartMap.java, + * retrofit.converter.Converter#toBody(Object, java.lang.reflect.Type)}.</li>, +++ b/retrofit/src/main/java/retrofit/http/Streaming.java, + * Treat the response body on methods returning {@link com.squareup.okhttp.Response Response} as is,, + * i.e. without converting {@link com.squareup.okhttp.Response#body() body()} to {@code byte[]}.]