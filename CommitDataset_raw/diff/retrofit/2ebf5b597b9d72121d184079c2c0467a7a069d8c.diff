[+++ b/retrofit/src/main/java/retrofit/RestAdapter.java, +            // Read the entire response body so we can log it and replace the original response, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, +            // Read the entire response body so we can log it and replace the original response, +++ b/retrofit/src/main/java/retrofit/Utils.java, +    InputStream is = body.in();, +    byte[] bodyBytes = Utils.streamToBytes(is);, +    is.close();, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, +            // Read the entire response body so we can log it and replace the original response, +++ b/retrofit/src/main/java/retrofit/Utils.java, +    InputStream is = body.in();, +    byte[] bodyBytes = Utils.streamToBytes(is);, +    is.close();, +++ b/retrofit/src/test/java/retrofit/RestAdapterTest.java, +, +import static org.mockito.Mockito.times;, +  @Test public void closeInputStream() throws IOException {, +    // Set logger and profiler on example to make sure we exercise all the code paths., +    Example example = new RestAdapter.Builder() //, +        .setClient(mockClient), +        .setExecutors(mockRequestExecutor, mockCallbackExecutor), +        .setServer("http://example.com"), +        .setProfiler(mockProfiler), +        .setLog(new RestAdapter.Log() {, +            @Override, +            public void log(String message) {, +            }, +        }), +        .setLogLevel(FULL), +        .build(), +        .create(Example.class);, +, +    ByteArrayInputStream is = spy(new ByteArrayInputStream("hello".getBytes()));, +    TypedInput typedInput = mock(TypedInput.class);, +    when(typedInput.in()).thenReturn(is);, +    Response response = new Response(200, "OK", NO_HEADERS, typedInput);, +    when(mockClient.execute(any(Request.class))) //, +        .thenReturn(response);, +    example.something();, +    verify(is, times(1)).close();, +  }, +]