[+++ b/retrofit/src/main/java/retrofit/Retrofit.java, + * <li>{@link retrofit.http.Multipart @Multipart} - RFC 2388-compliant multi-part data with parts, +++ b/retrofit/src/main/java/retrofit/Retrofit.java, + * <li>{@link retrofit.http.Multipart @Multipart} - RFC 2388-compliant multi-part data with parts, +++ b/retrofit/src/main/java/retrofit/http/Part.java, + * The parameter type on which this annotation exists will be processed in one of two ways:, + * <li>If the type is {@link com.squareup.okhttp.RequestBody RequestBody} the value will be used, + * directly with its content type.</li>, + * Call&lt;<ResponseBody> example(, + *     &#64;Part("description") String description,, + *     &#64;Part(value = "image", encoding = "8-bit") RequestBody image);, +++ b/retrofit/src/main/java/retrofit/Retrofit.java, + * <li>{@link retrofit.http.Multipart @Multipart} - RFC 2388-compliant multi-part data with parts, +++ b/retrofit/src/main/java/retrofit/http/Part.java, + * The parameter type on which this annotation exists will be processed in one of two ways:, + * <li>If the type is {@link com.squareup.okhttp.RequestBody RequestBody} the value will be used, + * directly with its content type.</li>, + * Call&lt;<ResponseBody> example(, + *     &#64;Part("description") String description,, + *     &#64;Part(value = "image", encoding = "8-bit") RequestBody image);, +++ b/retrofit/src/main/java/retrofit/http/PartMap.java, + * Denotes name and value parts of a multi-part request., + * Values of the map on which this annotation exists will be processed in one of two ways:, + * <li>If the type is {@link com.squareup.okhttp.RequestBody RequestBody} the value will be used, + * directly with its content type.</li>, + * Call&lt;ResponseBody> upload(, + *     &#64;Part("file") RequestBody file,, + *     &#64;PartMap Map&lt;String, RequestBody&gt; params);]