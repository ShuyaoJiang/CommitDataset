[+++ b/retrofit/src/main/java/retrofit/ChangeableServer.java, +/** An {@link Endpoint} whose URL and name can be changed at runtime. */, +@Deprecated public class ChangeableServer implements Endpoint {, +++ b/retrofit/src/main/java/retrofit/ChangeableServer.java, +/** An {@link Endpoint} whose URL and name can be changed at runtime. */, +@Deprecated public class ChangeableServer implements Endpoint {, +++ b/retrofit/src/main/java/retrofit/Endpoint.java, +package retrofit;, +, +/**, + * Represents an API endpoint URL and associated name. Callers should always consult the instance, + * for the latest values rather than caching the returned values., + *, + * @author Matt Hickman (mhickman@palantir.com), + */, +public interface Endpoint {, +, +  /** The base API URL. */, +  String getUrl();, +, +  /** A name for differentiating between multiple API URLs. */, +  String getName();, +, +}, +++ b/retrofit/src/main/java/retrofit/ChangeableServer.java, +/** An {@link Endpoint} whose URL and name can be changed at runtime. */, +@Deprecated public class ChangeableServer implements Endpoint {, +++ b/retrofit/src/main/java/retrofit/Endpoint.java, +package retrofit;, +, +/**, + * Represents an API endpoint URL and associated name. Callers should always consult the instance, + * for the latest values rather than caching the returned values., + *, + * @author Matt Hickman (mhickman@palantir.com), + */, +public interface Endpoint {, +, +  /** The base API URL. */, +  String getUrl();, +, +  /** A name for differentiating between multiple API URLs. */, +  String getName();, +, +}, +++ b/retrofit/src/main/java/retrofit/Endpoints.java, +package retrofit;, +, +/**, + * Static factory methods for creating {@link Endpoint}, + * instances., + *, + * @author Matt Hickman (mhickman@palantir.com), + */, +public abstract class Endpoints {, +, +  /** Create a server with the provided URL. */, +  public static Endpoint newFixedEndpoint(String url) {, +    return new Server(url);, +  }, +, +  /** Create an endpoint with the provided URL and name. */, +  public static Endpoint newFixedEndpoint(String url, String name) {, +    return new Server(url, name);, +  }, +, +}, +++ b/retrofit/src/main/java/retrofit/ChangeableServer.java, +/** An {@link Endpoint} whose URL and name can be changed at runtime. */, +@Deprecated public class ChangeableServer implements Endpoint {, +++ b/retrofit/src/main/java/retrofit/Endpoint.java, +package retrofit;, +, +/**, + * Represents an API endpoint URL and associated name. Callers should always consult the instance, + * for the latest values rather than caching the returned values., + *, + * @author Matt Hickman (mhickman@palantir.com), + */, +public interface Endpoint {, +, +  /** The base API URL. */, +  String getUrl();, +, +  /** A name for differentiating between multiple API URLs. */, +  String getName();, +, +}, +++ b/retrofit/src/main/java/retrofit/Endpoints.java, +package retrofit;, +, +/**, + * Static factory methods for creating {@link Endpoint}, + * instances., + *, + * @author Matt Hickman (mhickman@palantir.com), + */, +public abstract class Endpoints {, +, +  /** Create a server with the provided URL. */]