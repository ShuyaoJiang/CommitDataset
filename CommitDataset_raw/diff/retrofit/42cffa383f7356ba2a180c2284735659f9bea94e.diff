[+++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +    okhttp3.Call call = serviceMethod.toCall(args);, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +    okhttp3.Call call = serviceMethod.toCall(args);, +++ b/retrofit/src/main/java/retrofit2/Retrofit.java, +            return serviceMethod.adapt(okHttpCall);, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +    okhttp3.Call call = serviceMethod.toCall(args);, +++ b/retrofit/src/main/java/retrofit2/Retrofit.java, +            return serviceMethod.adapt(okHttpCall);, +++ b/retrofit/src/main/java/retrofit2/ServiceMethod.java, +  private final okhttp3.Call.Factory callFactory;, +  private final CallAdapter<R, T> callAdapter;, +  okhttp3.Call toCall(@Nullable Object... args) throws IOException {, +    return callFactory.newCall(requestBuilder.build());, +  }, +, +  T adapt(Call<R> call) {, +    return callAdapter.adapt(call);, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +    okhttp3.Call call = serviceMethod.toCall(args);, +++ b/retrofit/src/main/java/retrofit2/Retrofit.java, +            return serviceMethod.adapt(okHttpCall);, +++ b/retrofit/src/main/java/retrofit2/ServiceMethod.java, +  private final okhttp3.Call.Factory callFactory;, +  private final CallAdapter<R, T> callAdapter;, +  okhttp3.Call toCall(@Nullable Object... args) throws IOException {, +    return callFactory.newCall(requestBuilder.build());, +  }, +, +  T adapt(Call<R> call) {, +    return callAdapter.adapt(call);, +++ b/retrofit/src/test/java/retrofit2/RequestBuilderTest.java, +    Call<T> call = serviceMethod.adapt(okHttpCall);]