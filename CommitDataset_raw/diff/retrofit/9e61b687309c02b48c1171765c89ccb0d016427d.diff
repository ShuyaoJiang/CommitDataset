[+++ b/modules/io/src-tests/retrofit/io/FilesTest.java, +// Copyright 2011 Square, Inc., +package retrofit.io;, +, +import junit.framework.TestCase;, +, +import java.io.BufferedWriter;, +import java.io.File;, +import java.io.FileWriter;, +import java.io.PrintWriter;, +, +/**, + * @author Paul Hawke (psh@squareup.com), + */, +public class FilesTest extends TestCase {, +  public void testDelete() throws Exception {, +    File tmpFile = File.createTempFile("prefix", ".tmp");, +    PrintWriter pw = new PrintWriter(new FileWriter(tmpFile));, +    pw.println("content");, +    pw.close();, +, +    assertTrue(tmpFile.exists());, +    assertTrue(Files.delete(tmpFile));, +    assertFalse(tmpFile.exists());, +  }, +, +  public void testDeleteFileThatDoesntExist() throws Exception {, +    File tmpFile = new File("/foobar");, +    assertFalse(tmpFile.exists());, +    assertTrue(Files.delete(tmpFile));, +    assertFalse(tmpFile.exists());, +  }, +, +  public void testDeleteNullFile() throws Exception {, +    try {, +      Files.delete(null);, +      fail("Expected an IAE");, +    } catch (IllegalArgumentException e) {, +      // expect this, +    } catch (Throwable t) {, +      t.printStackTrace();, +      fail("Expected an IAE");, +    }, +  }, +}, +++ b/modules/io/src-tests/retrofit/io/FilesTest.java, +// Copyright 2011 Square, Inc., +package retrofit.io;, +, +import junit.framework.TestCase;, +, +import java.io.BufferedWriter;, +import java.io.File;, +import java.io.FileWriter;, +import java.io.PrintWriter;, +, +/**, + * @author Paul Hawke (psh@squareup.com), + */, +public class FilesTest extends TestCase {, +  public void testDelete() throws Exception {, +    File tmpFile = File.createTempFile("prefix", ".tmp");, +    PrintWriter pw = new PrintWriter(new FileWriter(tmpFile));, +    pw.println("content");, +    pw.close();, +, +    assertTrue(tmpFile.exists());, +    assertTrue(Files.delete(tmpFile));, +    assertFalse(tmpFile.exists());, +  }, +, +  public void testDeleteFileThatDoesntExist() throws Exception {, +    File tmpFile = new File("/foobar");, +    assertFalse(tmpFile.exists());, +    assertTrue(Files.delete(tmpFile));, +    assertFalse(tmpFile.exists());, +  }, +, +  public void testDeleteNullFile() throws Exception {, +    try {, +      Files.delete(null);, +      fail("Expected an IAE");, +    } catch (IllegalArgumentException e) {, +      // expect this, +    } catch (Throwable t) {, +      t.printStackTrace();, +      fail("Expected an IAE");, +    }, +  }, +}, +++ b/modules/io/src/retrofit/io/Files.java, +, +  /**, +   * Delete the given file, returning <code>true</code> if the file is gone, +   * (that is, if the delete succeeds, or was never there in the first place)., +   * A return value of <code>false</code> indicates that the delete failed., +   */, +  public static boolean delete(File file) throws IllegalAccessException {, +    if (file == null) {, +      throw new IllegalArgumentException("Cannot delete a null file.");]