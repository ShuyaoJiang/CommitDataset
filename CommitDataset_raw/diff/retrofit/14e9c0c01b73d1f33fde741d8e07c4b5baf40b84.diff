[+++ b/retrofit-mock/src/main/java/retrofit/MockRestAdapter.java, +      String apiUrl = restAdapter.endpoint.url();, +++ b/retrofit-mock/src/main/java/retrofit/MockRestAdapter.java, +      String apiUrl = restAdapter.endpoint.url();, +++ b/retrofit/src/main/java/retrofit/Endpoint.java, +import static retrofit.Utils.checkNotNull;, +, +/** An API endpoint. */, +public abstract class Endpoint {, +  /** Create an endpoint with the provided {@code url}. */, +  public static Endpoint createFixed(final String url) {, +    checkNotNull(url, "url == null");, +    return new Endpoint() {, +      @Override public String url() {, +        return url;, +      }, +    };, +  }, +, +   * The base URL., +   * <p>, +   * Consumers will call this method every time they need to create a request allowing values, +   * to change over time., +  public abstract String url();, +++ b/retrofit-mock/src/main/java/retrofit/MockRestAdapter.java, +      String apiUrl = restAdapter.endpoint.url();, +++ b/retrofit/src/main/java/retrofit/Endpoint.java, +import static retrofit.Utils.checkNotNull;, +, +/** An API endpoint. */, +public abstract class Endpoint {, +  /** Create an endpoint with the provided {@code url}. */, +  public static Endpoint createFixed(final String url) {, +    checkNotNull(url, "url == null");, +    return new Endpoint() {, +      @Override public String url() {, +        return url;, +      }, +    };, +  }, +, +   * The base URL., +   * <p>, +   * Consumers will call this method every time they need to create a request allowing values, +   * to change over time., +  public abstract String url();, +++ /dev/null, +++ b/retrofit-mock/src/main/java/retrofit/MockRestAdapter.java, +      String apiUrl = restAdapter.endpoint.url();, +++ b/retrofit/src/main/java/retrofit/Endpoint.java, +import static retrofit.Utils.checkNotNull;, +, +/** An API endpoint. */, +public abstract class Endpoint {, +  /** Create an endpoint with the provided {@code url}. */, +  public static Endpoint createFixed(final String url) {, +    checkNotNull(url, "url == null");, +    return new Endpoint() {, +      @Override public String url() {, +        return url;, +      }, +    };, +  }, +, +   * The base URL., +   * <p>, +   * Consumers will call this method every time they need to create a request allowing values, +   * to change over time., +  public abstract String url();, +++ /dev/null, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, +  final Endpoint endpoint;, +  private RestAdapter(Endpoint endpoint, Client client, Executor callbackExecutor,, +    this.endpoint = endpoint;, +      String serverUrl = endpoint.url();, +    public Builder setEndpoint(String url) {, +       return setEndpoint(Endpoint.createFixed(url));, +++ b/retrofit-mock/src/main/java/retrofit/MockRestAdapter.java, +      String apiUrl = restAdapter.endpoint.url();, +++ b/retrofit/src/main/java/retrofit/Endpoint.java, +import static retrofit.Utils.checkNotNull;, +, +/** An API endpoint. */, +public abstract class Endpoint {, +  /** Create an endpoint with the provided {@code url}. */, +  public static Endpoint createFixed(final String url) {, +    checkNotNull(url, "url == null");, +    return new Endpoint() {, +      @Override public String url() {, +        return url;, +      }, +    };, +  }, +, +   * The base URL., +   * <p>, +   * Consumers will call this method every time they need to create a request allowing values, +   * to change over time., +  public abstract String url();, +++ /dev/null]