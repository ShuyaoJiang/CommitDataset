[+++ b/website/index.html, +			<h3 id="restadapter-configuration">RestAdapter Configuration</h3>, +            <p>The converter is responsible for serializing and deserializing objects in HTTP., +			<h4>Customizing the Gson Converter</h4>, +            <p>The built-in Gson converter cannot be customized, but a Gson implementation can be provided while building a <code>RestAdapter</code>.</p>, +            <p>The following code creates a new <code>Gson</code> instance that will convert all fields from <code>LOWER_CASE_WITH_UNDERSCORES</code> to camel case and vice versa. It also registers a type adapter for the <code>Date</code> class. This <code>DateTypeAdapter</code> will be used anytime Gson encounters a <code>Date</code> field.</p>, +            <p><code>.setConverter(new GsonConverter(gson))</code> is then called passing  the Gson object that was created as a parameter.</p>, +            <p>Each call on the generated<code>GithubService</code> will now return objects that are parsed using the Gson implementation that was provided to the <code>RestAdapter</code>.</p>, +            <pre class="prettyprint">Gson gson = new GsonBuilder(), +    .setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES), +    .registerTypeAdapter(Date.class, new DateTypeAdapter()), +    .create();, +, +RestAdapter restAdapter = new RestAdapter.Builder(), +    .setServer("https://api.github.com"), +    .setConverter(new GsonConverter(gson)), +    .build();, +, +GitHubService service = restAdapter.create(GitHubService.class);</pre>, +                <li><a href="#restadapter-configuration">RestAdapter Configuration</a></li>]