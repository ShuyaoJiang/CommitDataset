[+++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +          Field field = (Field) annotation;, +          String name = field.value();, +          boolean encodeName = field.encodeName();, +          boolean encodeValue = field.encodeValue();, +                formBody.addField(name, encodeName, iterableValue.toString(), encodeValue);, +                formBody.addField(name, encodeName, arrayValue.toString(), encodeValue);, +            formBody.addField(name, encodeName, value.toString(), encodeValue);, +          FieldMap fieldMap = (FieldMap) annotation;, +          boolean encodeNames = fieldMap.encodeNames();, +          boolean encodeValues = fieldMap.encodeValues();, +              formBody.addField(entryKey.toString(), encodeNames, entryValue.toString(),, +                  encodeValues);, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +          Field field = (Field) annotation;, +          String name = field.value();, +          boolean encodeName = field.encodeName();, +          boolean encodeValue = field.encodeValue();, +                formBody.addField(name, encodeName, iterableValue.toString(), encodeValue);, +                formBody.addField(name, encodeName, arrayValue.toString(), encodeValue);, +            formBody.addField(name, encodeName, value.toString(), encodeValue);, +          FieldMap fieldMap = (FieldMap) annotation;, +          boolean encodeNames = fieldMap.encodeNames();, +          boolean encodeValues = fieldMap.encodeValues();, +              formBody.addField(entryKey.toString(), encodeNames, entryValue.toString(),, +                  encodeValues);, +++ b/retrofit/src/main/java/retrofit/http/Field.java, +, +  /** Specifies whether {@link #value()} is URL encoded. */, +  boolean encodeName() default true;, +, +  /** Specifies whether the argument value to the annotated method parameter is URL encoded. */, +  boolean encodeValue() default true;, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +          Field field = (Field) annotation;, +          String name = field.value();, +          boolean encodeName = field.encodeName();, +          boolean encodeValue = field.encodeValue();, +                formBody.addField(name, encodeName, iterableValue.toString(), encodeValue);, +                formBody.addField(name, encodeName, arrayValue.toString(), encodeValue);, +            formBody.addField(name, encodeName, value.toString(), encodeValue);, +          FieldMap fieldMap = (FieldMap) annotation;, +          boolean encodeNames = fieldMap.encodeNames();, +          boolean encodeValues = fieldMap.encodeValues();, +              formBody.addField(entryKey.toString(), encodeNames, entryValue.toString(),, +                  encodeValues);, +++ b/retrofit/src/main/java/retrofit/http/Field.java, +, +  /** Specifies whether {@link #value()} is URL encoded. */, +  boolean encodeName() default true;, +, +  /** Specifies whether the argument value to the annotated method parameter is URL encoded. */, +  boolean encodeValue() default true;, +++ b/retrofit/src/main/java/retrofit/http/FieldMap.java, +  /** Specifies whether parameter names (keys in the map) are URL encoded. */, +  boolean encodeNames() default true;, +, +  /** Specifies whether parameter values (values in the map) are URL encoded. */, +  boolean encodeValues() default true;, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +          Field field = (Field) annotation;, +          String name = field.value();, +          boolean encodeName = field.encodeName();, +          boolean encodeValue = field.encodeValue();, +                formBody.addField(name, encodeName, iterableValue.toString(), encodeValue);, +                formBody.addField(name, encodeName, arrayValue.toString(), encodeValue);, +            formBody.addField(name, encodeName, value.toString(), encodeValue);, +          FieldMap fieldMap = (FieldMap) annotation;, +          boolean encodeNames = fieldMap.encodeNames();, +          boolean encodeValues = fieldMap.encodeValues();, +              formBody.addField(entryKey.toString(), encodeNames, entryValue.toString(),, +                  encodeValues);, +++ b/retrofit/src/main/java/retrofit/http/Field.java, +, +  /** Specifies whether {@link #value()} is URL encoded. */, +  boolean encodeName() default true;, +, +  /** Specifies whether the argument value to the annotated method parameter is URL encoded. */, +  boolean encodeValue() default true;, +++ b/retrofit/src/main/java/retrofit/http/FieldMap.java, +  /** Specifies whether parameter names (keys in the map) are URL encoded. */, +  boolean encodeNames() default true;, +, +  /** Specifies whether parameter values (values in the map) are URL encoded. */, +  boolean encodeValues() default true;, +++ b/retrofit/src/main/java/retrofit/mime/FormUrlEncodedTypedOutput.java, +    addField(name, true, value, true);, +  }, +, +  public void addField(String name, boolean encodeName, String value, boolean encodeValue) {, +      if (encodeName) {, +      }, +      if (encodeValue) {, +      }, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +          Field field = (Field) annotation;, +          String name = field.value();, +          boolean encodeName = field.encodeName();, +          boolean encodeValue = field.encodeValue();, +                formBody.addField(name, encodeName, iterableValue.toString(), encodeValue);]