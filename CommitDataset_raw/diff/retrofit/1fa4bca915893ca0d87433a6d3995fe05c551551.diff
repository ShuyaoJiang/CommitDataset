[+++ b/http/src/main/java/retrofit/http/HttpRequestBuilder.java, +import javax.inject.Named;, +import java.io.UnsupportedEncodingException;, +import java.net.URLEncoder;, +          String value;, +          try {, +            value = URLEncoder.encode(found.getValue(), "UTF-8");, +          } catch (UnsupportedEncodingException e) {, +            throw new AssertionError(e);, +          }, +          replacedPath = doReplace(replacedPath, found.getName(), value);, +++ b/http/src/main/java/retrofit/http/HttpRequestBuilder.java, +import javax.inject.Named;, +import java.io.UnsupportedEncodingException;, +import java.net.URLEncoder;, +          String value;, +          try {, +            value = URLEncoder.encode(found.getValue(), "UTF-8");, +          } catch (UnsupportedEncodingException e) {, +            throw new AssertionError(e);, +          }, +          replacedPath = doReplace(replacedPath, found.getName(), value);, +++ b/http/src/test/java/retrofit/http/HttpRequestBuilderTest.java, +import java.net.URLEncoder;, +  @Test public void testRegex() throws Exception {, +  @Test public void testGetWithPathParamAndWhitespaceValue() throws Exception {, +    Method method =, +        MyService.class.getMethod("getWithPathParam", String.class, String.class, Callback.class);, +    String expectedId = "I have spaces buddy";, +    String category = UUID.randomUUID().toString();, +    Object[] args = new Object[] {expectedId, category, new MyCallback()};, +    HttpUriRequest request = build(method, args);, +, +    assertThat(request).isInstanceOf(HttpGet.class);, +, +    HttpGet put = (HttpGet) request;, +    // Make sure the url param got translated., +    final String uri = put.getURI().toString();, +    assertThat(uri).isEqualTo(API_URL + "/foo/" + URLEncoder.encode(expectedId, "UTF-8") + "/bar?category=" + category);, +  }, +]