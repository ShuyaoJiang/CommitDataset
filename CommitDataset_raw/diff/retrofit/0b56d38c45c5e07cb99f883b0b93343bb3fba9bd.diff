[+++ b/retrofit/src/main/java/retrofit2/BuiltInConverters.java, +    @Override public Void convert(ResponseBody value) {, +    @Override public RequestBody convert(RequestBody value) {, +    @Override public ResponseBody convert(ResponseBody value) {, +++ b/retrofit/src/main/java/retrofit2/BuiltInConverters.java, +    @Override public Void convert(ResponseBody value) {, +    @Override public RequestBody convert(RequestBody value) {, +    @Override public ResponseBody convert(ResponseBody value) {, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +      @Override public void onResponse(okhttp3.Call call, okhttp3.Response rawResponse) {, +, +        try {, +          callback.onResponse(OkHttpCall.this, response);, +        } catch (Throwable t) {, +          t.printStackTrace();, +        }, +++ b/retrofit/src/main/java/retrofit2/BuiltInConverters.java, +    @Override public Void convert(ResponseBody value) {, +    @Override public RequestBody convert(RequestBody value) {, +    @Override public ResponseBody convert(ResponseBody value) {, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +      @Override public void onResponse(okhttp3.Call call, okhttp3.Response rawResponse) {, +, +        try {, +          callback.onResponse(OkHttpCall.this, response);, +        } catch (Throwable t) {, +          t.printStackTrace();, +        }, +++ b/retrofit/src/main/java/retrofit2/ParameterHandler.java, +    @Override void apply(RequestBuilder builder, @Nullable MultipartBody.Part value) {, +++ b/retrofit/src/main/java/retrofit2/BuiltInConverters.java, +    @Override public Void convert(ResponseBody value) {, +    @Override public RequestBody convert(RequestBody value) {, +    @Override public ResponseBody convert(ResponseBody value) {, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +      @Override public void onResponse(okhttp3.Call call, okhttp3.Response rawResponse) {, +, +        try {, +          callback.onResponse(OkHttpCall.this, response);, +        } catch (Throwable t) {, +          t.printStackTrace();, +        }, +++ b/retrofit/src/main/java/retrofit2/ParameterHandler.java, +    @Override void apply(RequestBuilder builder, @Nullable MultipartBody.Part value) {, +++ b/retrofit/src/main/java/retrofit2/Utils.java, +      Object ownerA = pa.getOwnerType();, +      Object ownerB = pb.getOwnerType();, +      return (ownerA == ownerB || (ownerA != null && ownerA.equals(ownerB))), +  static boolean hasUnresolvableType(@Nullable Type type) {, +    ParameterizedTypeImpl(@Nullable Type ownerType, Type rawType, Type... typeArguments) {, +      return Arrays.hashCode(typeArguments), +          ^ rawType.hashCode(), +          ^ (ownerType != null ? ownerType.hashCode() : 0);]