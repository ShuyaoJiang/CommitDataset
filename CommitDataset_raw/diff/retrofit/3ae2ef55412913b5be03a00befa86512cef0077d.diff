[+++ b/http/src/main/java/retrofit/http/GsonResponseHandler.java, +import java.text.SimpleDateFormat;, +import java.util.Date;, +  private final Date start;, +  private ThreadLocal<SimpleDateFormat> dateFormat;, +  private GsonResponseHandler(Gson gson, Type type, Callback<T> callback, String url, Date start,, +      ThreadLocal<SimpleDateFormat> dateFormat) {, +    this.start = start;, +    this.dateFormat = dateFormat;, +      Date startTime, ThreadLocal<SimpleDateFormat> dateFormat) {, +    return new GsonResponseHandler<T>(gson, type, callback, url, startTime, dateFormat);, +        entity = HttpClients.copyAndLog(entity, url, start, dateFormat.get());, +++ b/http/src/main/java/retrofit/http/GsonResponseHandler.java, +import java.text.SimpleDateFormat;, +import java.util.Date;, +  private final Date start;, +  private ThreadLocal<SimpleDateFormat> dateFormat;, +  private GsonResponseHandler(Gson gson, Type type, Callback<T> callback, String url, Date start,, +      ThreadLocal<SimpleDateFormat> dateFormat) {, +    this.start = start;, +    this.dateFormat = dateFormat;, +      Date startTime, ThreadLocal<SimpleDateFormat> dateFormat) {, +    return new GsonResponseHandler<T>(gson, type, callback, url, startTime, dateFormat);, +        entity = HttpClients.copyAndLog(entity, url, start, dateFormat.get());, +++ b/http/src/main/java/retrofit/http/HttpClients.java, +import java.text.SimpleDateFormat;, +import java.util.Date;, +  public static HttpEntity copyAndLog(HttpEntity entity, String url, Date start,, +      SimpleDateFormat dateFormat), +      long msElapsed = new Date().getTime() - start.getTime();, +      final String startTime = dateFormat.format(start);, +      LOGGER.fine("----Response from " + url + " at " + startTime + " (" + msElapsed + "ms):");, +++ b/http/src/main/java/retrofit/http/GsonResponseHandler.java, +import java.text.SimpleDateFormat;, +import java.util.Date;, +  private final Date start;, +  private ThreadLocal<SimpleDateFormat> dateFormat;, +  private GsonResponseHandler(Gson gson, Type type, Callback<T> callback, String url, Date start,, +      ThreadLocal<SimpleDateFormat> dateFormat) {, +    this.start = start;, +    this.dateFormat = dateFormat;, +      Date startTime, ThreadLocal<SimpleDateFormat> dateFormat) {, +    return new GsonResponseHandler<T>(gson, type, callback, url, startTime, dateFormat);, +        entity = HttpClients.copyAndLog(entity, url, start, dateFormat.get());, +++ b/http/src/main/java/retrofit/http/HttpClients.java, +import java.text.SimpleDateFormat;, +import java.util.Date;, +  public static HttpEntity copyAndLog(HttpEntity entity, String url, Date start,, +      SimpleDateFormat dateFormat), +      long msElapsed = new Date().getTime() - start.getTime();, +      final String startTime = dateFormat.format(start);, +      LOGGER.fine("----Response from " + url + " at " + startTime + " (" + msElapsed + "ms):");, +++ b/http/src/main/java/retrofit/http/RestAdapter.java, +  public static final String DEBUGGING_DATE_FORMAT = "HH:mm:ss";, +      return new SimpleDateFormat(DEBUGGING_DATE_FORMAT);, +            GsonResponseHandler.create(gson, resultType, callback, url, start, dateFormat);]