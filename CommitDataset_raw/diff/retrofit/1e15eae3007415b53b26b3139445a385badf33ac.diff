[+++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +        String[] requestFormFields = methodInfo.requestFormFields;, +        for (int i = 0; i < requestFormFields.length; i++) {, +          String name = requestFormFields[i];, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +        String[] requestFormFields = methodInfo.requestFormFields;, +        for (int i = 0; i < requestFormFields.length; i++) {, +          String name = requestFormFields[i];, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, + * <li>{@link retrofit.http.FormUrlEncoded @FormUrlEncoded} - Form-encoded data with key-value, + * pairs specified by the {@link retrofit.http.Field @Field} parameter annotation., +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +        String[] requestFormFields = methodInfo.requestFormFields;, +        for (int i = 0; i < requestFormFields.length; i++) {, +          String name = requestFormFields[i];, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, + * <li>{@link retrofit.http.FormUrlEncoded @FormUrlEncoded} - Form-encoded data with key-value, + * pairs specified by the {@link retrofit.http.Field @Field} parameter annotation., +++ b/retrofit/src/main/java/retrofit/RestMethodInfo.java, +  String[] requestFormFields;, +   * Loads {@link #requestUrlParam}, {@link #requestQueryName}, {@link #requestFormFields},, +    requestFormFields = formValue;, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +        String[] requestFormFields = methodInfo.requestFormFields;, +        for (int i = 0; i < requestFormFields.length; i++) {, +          String name = requestFormFields[i];, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, + * <li>{@link retrofit.http.FormUrlEncoded @FormUrlEncoded} - Form-encoded data with key-value, + * pairs specified by the {@link retrofit.http.Field @Field} parameter annotation., +++ b/retrofit/src/main/java/retrofit/RestMethodInfo.java, +  String[] requestFormFields;, +   * Loads {@link #requestUrlParam}, {@link #requestQueryName}, {@link #requestFormFields},, +    requestFormFields = formValue;, +++ b/retrofit/src/test/java/retrofit/RequestBuilderTest.java, +        .addField("foo", "bar") //, +        .addField("ping", "pong") //, +    private final List<String> fieldParams = new ArrayList<String>();, +    private void addParam(String path, String query, String field, String part, String header,, +      fieldParams.add(field);, +    Helper addField(String name, String value) {, +      methodInfo.requestFormFields = fieldParams.toArray(new String[fieldParams.size()]);, +++ b/retrofit/src/main/java/retrofit/RequestBuilder.java, +        String[] requestFormFields = methodInfo.requestFormFields;, +        for (int i = 0; i < requestFormFields.length; i++) {, +          String name = requestFormFields[i];, +++ b/retrofit/src/main/java/retrofit/RestAdapter.java, + * <li>{@link retrofit.http.FormUrlEncoded @FormUrlEncoded} - Form-encoded data with key-value, + * pairs specified by the {@link retrofit.http.Field @Field} parameter annotation., +++ b/retrofit/src/main/java/retrofit/RestMethodInfo.java, +  String[] requestFormFields;, +   * Loads {@link #requestUrlParam}, {@link #requestQueryName}, {@link #requestFormFields},, +    requestFormFields = formValue;, +++ b/retrofit/src/test/java/retrofit/RequestBuilderTest.java, +        .addField("foo", "bar") //, +        .addField("ping", "pong") //, +    private final List<String> fieldParams = new ArrayList<String>();, +    private void addParam(String path, String query, String field, String part, String header,, +      fieldParams.add(field);, +    Helper addField(String name, String value) {, +      methodInfo.requestFormFields = fieldParams.toArray(new String[fieldParams.size()]);, +++ b/retrofit/src/test/java/retrofit/RestMethodInfoTest.java, +    assertThat(methodInfo.requestFormFields).isEmpty();, +    assertThat(methodInfo.requestFormFields).containsOnly(new String[] { null });, +    assertThat(methodInfo.requestFormFields).containsOnly(new String[] { null });, +    assertThat(methodInfo.requestFormFields).containsExactly(null, null, null);]