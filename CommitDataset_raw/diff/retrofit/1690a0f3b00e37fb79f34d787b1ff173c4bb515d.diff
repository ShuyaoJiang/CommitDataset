[+++ b/README.md, +  void normalGet(@Name("id") String id, Callback<SimpleResponse> callback);, +  void getWithPathParam(@Name("id") String id, @Name("category") String category, Callback<SimpleResponse> callback);, +  void normalPost(@Name("id") String id, @Name("body") String body, Callback<SimpleResponse> callback);, +  void singleEntityPost(@SingleEntity MyJsonObj card, @Name("id") String id, Callback<SimpleResponse> callback);, +  SimpleResponse normalGet(@Name("id") String id);, +++ b/README.md, +  void normalGet(@Name("id") String id, Callback<SimpleResponse> callback);, +  void getWithPathParam(@Name("id") String id, @Name("category") String category, Callback<SimpleResponse> callback);, +  void normalPost(@Name("id") String id, @Name("body") String body, Callback<SimpleResponse> callback);, +  void singleEntityPost(@SingleEntity MyJsonObj card, @Name("id") String id, Callback<SimpleResponse> callback);, +  SimpleResponse normalGet(@Name("id") String id);, +++ b/retrofit/src/main/java/retrofit/http/client/UrlConnectionClient.java, +    if (status >= 400) {, +    } else {, +      stream = connection.getInputStream();, +++ b/README.md, +  void normalGet(@Name("id") String id, Callback<SimpleResponse> callback);, +  void getWithPathParam(@Name("id") String id, @Name("category") String category, Callback<SimpleResponse> callback);, +  void normalPost(@Name("id") String id, @Name("body") String body, Callback<SimpleResponse> callback);, +  void singleEntityPost(@SingleEntity MyJsonObj card, @Name("id") String id, Callback<SimpleResponse> callback);, +  SimpleResponse normalGet(@Name("id") String id);, +++ b/retrofit/src/main/java/retrofit/http/client/UrlConnectionClient.java, +    if (status >= 400) {, +    } else {, +      stream = connection.getInputStream();, +++ b/retrofit/src/test/java/retrofit/http/client/UrlConnectionClientTest.java, +  @Test public void createdResponse() throws Exception {, +    DummyHttpUrlConnection connection = new DummyHttpUrlConnection(HOST);, +    connection.setResponseCode(201);, +    connection.setResponseMessage("OK");, +    connection.addResponseHeader("Content-Type", "text/plain");, +    connection.addResponseHeader("foo", "bar");, +    connection.addResponseHeader("kit", "kat");, +    connection.setInputStream(new ByteArrayInputStream("hello".getBytes("UTF-8")));, +    Response response = client.readResponse(connection);, +, +    assertThat(response.getStatus()).isEqualTo(201);, +    assertThat(response.getReason()).isEqualTo("OK");, +    assertThat(response.getHeaders()).hasSize(3) //, +        .containsOnly(new Header("foo", "bar"), new Header("kit", "kat"),, +            new Header("Content-Type", "text/plain"));, +    assertBytes(ByteStreams.toByteArray(response.getBody().in()), "hello");, +  }, +]