[+++ b/pom.xml, +    <robolectric.version>3.0</robolectric.version>, +++ b/pom.xml, +    <robolectric.version>3.0</robolectric.version>, +++ b/retrofit-adapters/java8/README.md, +Java 8 Adapter (Deprecated), +===========================, +A call adapter [Java 8's `CompletableFuture`][1]., +This adapter is no longer needed. Support for `CompletableFuture` is built-in to Retrofit and now, +works without configuration., +++ b/pom.xml, +    <robolectric.version>3.0</robolectric.version>, +++ b/retrofit-adapters/java8/README.md, +Java 8 Adapter (Deprecated), +===========================, +A call adapter [Java 8's `CompletableFuture`][1]., +This adapter is no longer needed. Support for `CompletableFuture` is built-in to Retrofit and now, +works without configuration., +++ b/retrofit-converters/java8/README.md, +Java 8 Converter (Deprecated), +=============================, +This converter is no longer needed. Support for `Optional` is built-in to Retrofit and now works, +without configuration., +++ b/pom.xml, +    <robolectric.version>3.0</robolectric.version>, +++ b/retrofit-adapters/java8/README.md, +Java 8 Adapter (Deprecated), +===========================, +A call adapter [Java 8's `CompletableFuture`][1]., +This adapter is no longer needed. Support for `CompletableFuture` is built-in to Retrofit and now, +works without configuration., +++ b/retrofit-converters/java8/README.md, +Java 8 Converter (Deprecated), +=============================, +This converter is no longer needed. Support for `Optional` is built-in to Retrofit and now works, +without configuration., +++ b/retrofit/src/main/java/retrofit2/CompletableFutureCallAdapterFactory.java, +import java.io.IOException;, +/**, + * A {@linkplain CallAdapter.Factory call adapter} which creates Java 8 futures., + * <p>, + * Adding this class to {@link Retrofit} allows you to return {@link CompletableFuture} from, + * service methods., + * <pre><code>, + * interface MyService {, + *   &#64;GET("user/me"), + *   CompletableFuture&lt;User&gt; getUser(), + * }, + * </code></pre>, + * There are two configurations supported for the {@code CompletableFuture} type parameter:, + * <ul>, + * <li>Direct body (e.g., {@code CompletableFuture<User>}) returns the deserialized body for 2XX, + * responses, sets {@link retrofit2.HttpException HttpException} errors for non-2XX responses, and, + * sets {@link IOException} for network errors.</li>, + * <li>Response wrapped body (e.g., {@code CompletableFuture<Response<User>>}) returns a, + * {@link Response} object for all HTTP responses and sets {@link IOException} for network, + * errors</li>, + * </ul>, + */, +@IgnoreJRERequirement, +++ b/pom.xml, +    <robolectric.version>3.0</robolectric.version>, +++ b/retrofit-adapters/java8/README.md, +Java 8 Adapter (Deprecated), +===========================, +A call adapter [Java 8's `CompletableFuture`][1]., +This adapter is no longer needed. Support for `CompletableFuture` is built-in to Retrofit and now, +works without configuration., +++ b/retrofit-converters/java8/README.md, +Java 8 Converter (Deprecated), +=============================, +This converter is no longer needed. Support for `Optional` is built-in to Retrofit and now works, +without configuration., +++ b/retrofit/src/main/java/retrofit2/CompletableFutureCallAdapterFactory.java, +import java.io.IOException;, +/**, + * A {@linkplain CallAdapter.Factory call adapter} which creates Java 8 futures., + * <p>, + * Adding this class to {@link Retrofit} allows you to return {@link CompletableFuture} from, + * service methods., + * <pre><code>, + * interface MyService {, + *   &#64;GET("user/me"), + *   CompletableFuture&lt;User&gt; getUser(), + * }, + * </code></pre>, + * There are two configurations supported for the {@code CompletableFuture} type parameter:, + * <ul>, + * <li>Direct body (e.g., {@code CompletableFuture<User>}) returns the deserialized body for 2XX, + * responses, sets {@link retrofit2.HttpException HttpException} errors for non-2XX responses, and, + * sets {@link IOException} for network errors.</li>, + * <li>Response wrapped body (e.g., {@code CompletableFuture<Response<User>>}) returns a, + * {@link Response} object for all HTTP responses and sets {@link IOException} for network, + * errors</li>, + * </ul>, + */, +@IgnoreJRERequirement, +++ b/retrofit/src/main/java/retrofit2/OptionalConverterFactory.java, +/**, + * A {@linkplain Converter.Factory converter} for {@code Optional<T>} which delegates to another]