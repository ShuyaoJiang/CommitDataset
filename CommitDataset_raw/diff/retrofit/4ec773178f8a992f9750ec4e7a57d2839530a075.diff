[+++ b/retrofit-converters/moshi/src/main/java/retrofit2/converter/moshi/MoshiConverterFactory.java, +    return new MoshiConverterFactory(moshi, false, false, false);, +  private final boolean failOnUnknown;, +  private MoshiConverterFactory(Moshi moshi, boolean lenient, boolean failOnUnknown,, +      boolean serializeNulls) {, +    this.failOnUnknown = failOnUnknown;, +    return new MoshiConverterFactory(moshi, true, failOnUnknown, serializeNulls);, +  }, +, +  /**, +   * Return a new factory which uses {@link JsonAdapter#failOnUnknown()} adapters., +   */, +  public MoshiConverterFactory failOnUnknown() {, +    return new MoshiConverterFactory(moshi, lenient, true, serializeNulls);, +    return new MoshiConverterFactory(moshi, lenient, failOnUnknown, true);, +    if (failOnUnknown) {, +      adapter = adapter.failOnUnknown();, +    }, +  @Override public Converter<?, RequestBody> requestBodyConverter(Type type,, +    if (failOnUnknown) {, +      adapter = adapter.failOnUnknown();, +    }, +++ b/retrofit-converters/moshi/src/main/java/retrofit2/converter/moshi/MoshiConverterFactory.java, +    return new MoshiConverterFactory(moshi, false, false, false);, +  private final boolean failOnUnknown;, +  private MoshiConverterFactory(Moshi moshi, boolean lenient, boolean failOnUnknown,, +      boolean serializeNulls) {, +    this.failOnUnknown = failOnUnknown;, +    return new MoshiConverterFactory(moshi, true, failOnUnknown, serializeNulls);, +  }, +, +  /**, +   * Return a new factory which uses {@link JsonAdapter#failOnUnknown()} adapters., +   */, +  public MoshiConverterFactory failOnUnknown() {, +    return new MoshiConverterFactory(moshi, lenient, true, serializeNulls);, +    return new MoshiConverterFactory(moshi, lenient, failOnUnknown, true);, +    if (failOnUnknown) {, +      adapter = adapter.failOnUnknown();, +    }, +  @Override public Converter<?, RequestBody> requestBodyConverter(Type type,, +    if (failOnUnknown) {, +      adapter = adapter.failOnUnknown();, +    }, +++ b/retrofit-converters/moshi/src/test/java/retrofit2/converter/moshi/MoshiConverterFactoryTest.java, +import com.squareup.moshi.JsonDataException;, +  private Service serviceFailOnUnknown;, +    MoshiConverterFactory factoryFailOnUnknown = factory.failOnUnknown();, +    Retrofit retrofitFailOnUnknown = new Retrofit.Builder(), +        .baseUrl(server.url("/")), +        .addConverterFactory(factoryFailOnUnknown), +        .build();, +    serviceFailOnUnknown = retrofitFailOnUnknown.create(Service.class);, +  @Test public void failOnUnknown() throws IOException, InterruptedException {, +    server.enqueue(new MockResponse().setBody("{\"taco\":\"delicious\"}"));, +, +    Call<AnImplementation> call = serviceFailOnUnknown.anImplementation(new AnImplementation(null));, +    try {, +      call.execute();, +    } catch (JsonDataException e) {, +      assertThat(e).hasMessage("Cannot skip unexpected STRING at $.taco");, +    }, +  }, +]