[+++ b/pom.xml, +++ b/pom.xml, +++ b/retrofit/pom.xml, +++ b/pom.xml, +++ b/retrofit/pom.xml, +++ b/retrofit/src/main/java/retrofit/Platform.java, +++ b/pom.xml, +++ b/retrofit/pom.xml, +++ b/retrofit/src/main/java/retrofit/Platform.java, +++ /dev/null, +++ b/pom.xml, +++ b/retrofit/pom.xml, +++ b/retrofit/src/main/java/retrofit/Platform.java, +++ /dev/null, +++ b/retrofit/src/test/java/retrofit/TestingUtils.java, +  public static void assertMultipart(TypedOutput typedOutput) {, +    assertThat(typedOutput).isInstanceOf(MultipartTypedOutput.class);, +  }, +, +  public static void assertBytes(byte[] bytes, String expected) throws Exception {, +++ b/pom.xml, +++ b/retrofit/pom.xml, +++ b/retrofit/src/main/java/retrofit/Platform.java, +++ /dev/null, +++ b/retrofit/src/test/java/retrofit/TestingUtils.java, +  public static void assertMultipart(TypedOutput typedOutput) {, +    assertThat(typedOutput).isInstanceOf(MultipartTypedOutput.class);, +  }, +, +  public static void assertBytes(byte[] bytes, String expected) throws Exception {, +++ /dev/null, +++ b/pom.xml, +++ b/retrofit/pom.xml, +++ b/retrofit/src/main/java/retrofit/Platform.java, +++ /dev/null, +++ b/retrofit/src/test/java/retrofit/TestingUtils.java, +  public static void assertMultipart(TypedOutput typedOutput) {, +    assertThat(typedOutput).isInstanceOf(MultipartTypedOutput.class);, +  }, +, +  public static void assertBytes(byte[] bytes, String expected) throws Exception {, +++ /dev/null, +++ b/retrofit/src/test/java/retrofit/client/ApacheClientTest.java, +import static retrofit.TestingUtils.assertMultipart;, +  @Test public void post() throws Exception {, +    assertThat(apacheRequest.getAllHeaders()).hasSize(0);, +    assertThat(apacheRequest.getAllHeaders()).hasSize(0);, +    assertMultipart(entity.typedOutput);, +  @Test public void response() throws Exception {, +  @Test public void emptyResponse() throws Exception {, +++ b/pom.xml, +++ b/retrofit/pom.xml, +++ b/retrofit/src/main/java/retrofit/Platform.java, +++ /dev/null, +++ b/retrofit/src/test/java/retrofit/TestingUtils.java, +  public static void assertMultipart(TypedOutput typedOutput) {, +    assertThat(typedOutput).isInstanceOf(MultipartTypedOutput.class);, +  }, +, +  public static void assertBytes(byte[] bytes, String expected) throws Exception {, +++ /dev/null, +++ b/retrofit/src/test/java/retrofit/client/ApacheClientTest.java, +import static retrofit.TestingUtils.assertMultipart;, +  @Test public void post() throws Exception {, +    assertThat(apacheRequest.getAllHeaders()).hasSize(0);, +    assertThat(apacheRequest.getAllHeaders()).hasSize(0);, +    assertMultipart(entity.typedOutput);, +  @Test public void response() throws Exception {, +  @Test public void emptyResponse() throws Exception {, +++ b/website/index.html, +                <li><a href="http://stackoverflow.com/questions/tagged/retrofit?sort=active">StackOverflow</a></li>]