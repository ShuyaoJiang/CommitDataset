[+++ b/pom.xml, +    <rxjava.version>0.14.9</rxjava.version>, +      <dependency>, +        <groupId>com.netflix.rxjava</groupId>, +        <artifactId>rxjava-core</artifactId>, +        <version>${rxjava.version}</version>, +      </dependency>, +++ b/pom.xml, +    <rxjava.version>0.14.9</rxjava.version>, +      <dependency>, +        <groupId>com.netflix.rxjava</groupId>, +        <artifactId>rxjava-core</artifactId>, +        <version>${rxjava.version}</version>, +      </dependency>, +++ b/retrofit-converters/jackson/src/main/java/retrofit/converter/JacksonConverter.java, +import com.fasterxml.jackson.databind.type.TypeFactory;, +      final JavaType javaType = TypeFactory.defaultInstance().constructType(type);, +++ b/pom.xml, +    <rxjava.version>0.14.9</rxjava.version>, +      <dependency>, +        <groupId>com.netflix.rxjava</groupId>, +        <artifactId>rxjava-core</artifactId>, +        <version>${rxjava.version}</version>, +      </dependency>, +++ b/retrofit-converters/jackson/src/main/java/retrofit/converter/JacksonConverter.java, +import com.fasterxml.jackson.databind.type.TypeFactory;, +      final JavaType javaType = TypeFactory.defaultInstance().constructType(type);, +++ b/retrofit-mock/pom.xml, +      <groupId>com.netflix.rxjava</groupId>, +      <artifactId>rxjava-core</artifactId>, +      <optional>true</optional>, +    </dependency>, +, +    <dependency>, +++ b/pom.xml, +    <rxjava.version>0.14.9</rxjava.version>, +      <dependency>, +        <groupId>com.netflix.rxjava</groupId>, +        <artifactId>rxjava-core</artifactId>, +        <version>${rxjava.version}</version>, +      </dependency>, +++ b/retrofit-converters/jackson/src/main/java/retrofit/converter/JacksonConverter.java, +import com.fasterxml.jackson.databind.type.TypeFactory;, +      final JavaType javaType = TypeFactory.defaultInstance().constructType(type);, +++ b/retrofit-mock/pom.xml, +      <groupId>com.netflix.rxjava</groupId>, +      <artifactId>rxjava-core</artifactId>, +      <optional>true</optional>, +    </dependency>, +, +    <dependency>, +++ b/retrofit-mock/src/main/java/retrofit/MockRestAdapter.java, +import rx.Observable;, +import rx.Observer;, +import rx.Subscription;, +import rx.concurrency.Schedulers;, +, +      if (methodInfo.isObservable) {, +        return Observable.create(new Observable.OnSubscribeFunc<Object>() {, +          @Override public Subscription onSubscribe(Observer<? super Object> observer) {, +            try {, +              Observable observable = (Observable) invokeSync(methodInfo, interceptorTape, args);, +              //noinspection unchecked, +              return observable.subscribe(observer);, +            } catch (Throwable throwable) {, +              return Observable.error(throwable).subscribe(observer);, +            }, +          }, +        }).subscribeOn(Schedulers.executor(restAdapter.httpExecutor));, +      }, +, +++ b/pom.xml, +    <rxjava.version>0.14.9</rxjava.version>, +      <dependency>, +        <groupId>com.netflix.rxjava</groupId>, +        <artifactId>rxjava-core</artifactId>, +        <version>${rxjava.version}</version>, +      </dependency>, +++ b/retrofit-converters/jackson/src/main/java/retrofit/converter/JacksonConverter.java, +import com.fasterxml.jackson.databind.type.TypeFactory;, +      final JavaType javaType = TypeFactory.defaultInstance().constructType(type);, +++ b/retrofit-mock/pom.xml, +      <groupId>com.netflix.rxjava</groupId>, +      <artifactId>rxjava-core</artifactId>, +      <optional>true</optional>, +    </dependency>, +, +    <dependency>, +++ b/retrofit-mock/src/main/java/retrofit/MockRestAdapter.java, +import rx.Observable;, +import rx.Observer;, +import rx.Subscription;, +import rx.concurrency.Schedulers;, +, +      if (methodInfo.isObservable) {, +        return Observable.create(new Observable.OnSubscribeFunc<Object>() {, +          @Override public Subscription onSubscribe(Observer<? super Object> observer) {, +            try {, +              Observable observable = (Observable) invokeSync(methodInfo, interceptorTape, args);, +              //noinspection unchecked]