[+++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +import static retrofit2.Utils.checkNotNull;, +, +      checkNotNull(callback, "callback == null");, +++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +import static retrofit2.Utils.checkNotNull;, +, +      checkNotNull(callback, "callback == null");, +++ b/retrofit/src/main/java/retrofit2/HttpException.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(response, "response == null");, +++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +import static retrofit2.Utils.checkNotNull;, +, +      checkNotNull(callback, "callback == null");, +++ b/retrofit/src/main/java/retrofit2/HttpException.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(response, "response == null");, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(callback, "callback == null");, +++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +import static retrofit2.Utils.checkNotNull;, +, +      checkNotNull(callback, "callback == null");, +++ b/retrofit/src/main/java/retrofit2/HttpException.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(response, "response == null");, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(callback, "callback == null");, +++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(relativeUrl, "@Url parameter is null.");, +++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +import static retrofit2.Utils.checkNotNull;, +, +      checkNotNull(callback, "callback == null");, +++ b/retrofit/src/main/java/retrofit2/HttpException.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(response, "response == null");, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(callback, "callback == null");, +++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(relativeUrl, "@Url parameter is null.");, +++ b/retrofit/src/main/java/retrofit2/Response.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(headers, "headers == null");, +    checkNotNull(rawResponse, "rawResponse == null");, +    checkNotNull(body, "body == null");, +    checkNotNull(rawResponse, "rawResponse == null");, +++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +import static retrofit2.Utils.checkNotNull;, +, +      checkNotNull(callback, "callback == null");, +++ b/retrofit/src/main/java/retrofit2/HttpException.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(response, "response == null");, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(callback, "callback == null");, +++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(relativeUrl, "@Url parameter is null.");, +++ b/retrofit/src/main/java/retrofit2/Response.java, +import static retrofit2.Utils.checkNotNull;, +, +    checkNotNull(headers, "headers == null");, +    checkNotNull(rawResponse, "rawResponse == null");, +    checkNotNull(body, "body == null");, +    checkNotNull(rawResponse, "rawResponse == null");, +++ b/retrofit/src/main/java/retrofit2/Utils.java, +    checkNotNull(type, "type == null");]