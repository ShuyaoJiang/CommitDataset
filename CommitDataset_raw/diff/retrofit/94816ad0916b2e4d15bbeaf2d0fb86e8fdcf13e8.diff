[+++ b/retrofit/src/main/java/retrofit/RestMethodInfo.java, +        if (RxSupport.isObservable(rawReturnType)) {, +          returnType = RxSupport.getObservableType(returnType, rawReturnType);, +, +  /** Indirection to avoid log complaints if RxJava isn't present. */, +  private static final class RxSupport {, +    public static boolean isObservable(Class rawType) {, +      return rawType == Observable.class;, +    }, +, +    public static Type getObservableType(Type contextType, Class contextRawType) {, +      return Types.getSupertype(contextType, contextRawType, Observable.class);, +    }, +  }, +++ b/retrofit/src/main/java/retrofit/RestMethodInfo.java, +        if (RxSupport.isObservable(rawReturnType)) {, +          returnType = RxSupport.getObservableType(returnType, rawReturnType);, +, +  /** Indirection to avoid log complaints if RxJava isn't present. */, +  private static final class RxSupport {, +    public static boolean isObservable(Class rawType) {, +      return rawType == Observable.class;, +    }, +, +    public static Type getObservableType(Type contextType, Class contextRawType) {, +      return Types.getSupertype(contextType, contextRawType, Observable.class);, +    }, +  }, +++ b/website/index.html, +            <!--<h3 id="restadapter-configuration">RestAdapter Configuration</h3>, +            <h4>Converter</h4>, +            <p>The converter is responsible for serializing and deserializing objects in HTTP. -->, +                <!--<li><a href="#restadapter-configuration">RestAdapter Configuration</a></li>-->]