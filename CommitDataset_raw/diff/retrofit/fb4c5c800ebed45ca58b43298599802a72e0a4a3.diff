[+++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java, +  final NetworkBehavior behavior;, +  final ExecutorService backgroundExecutor;, +  final Call<T> delegate;, +  volatile boolean canceled;, +      boolean delaySleep() {, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java, +  final NetworkBehavior behavior;, +  final ExecutorService backgroundExecutor;, +  final Call<T> delegate;, +  volatile boolean canceled;, +      boolean delaySleep() {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorDelegate.java, +  final Retrofit retrofit;, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java, +  final NetworkBehavior behavior;, +  final ExecutorService backgroundExecutor;, +  final Call<T> delegate;, +  volatile boolean canceled;, +      boolean delaySleep() {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorDelegate.java, +  final Retrofit retrofit;, +++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +  final Executor callbackExecutor;, +    final Executor callbackExecutor;, +    final Call<T> delegate;, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java, +  final NetworkBehavior behavior;, +  final ExecutorService backgroundExecutor;, +  final Call<T> delegate;, +  volatile boolean canceled;, +      boolean delaySleep() {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorDelegate.java, +  final Retrofit retrofit;, +++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +  final Executor callbackExecutor;, +    final Executor callbackExecutor;, +    final Call<T> delegate;, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +  Response<T> parseResponse(com.squareup.okhttp.Response rawResponse) throws IOException {, +    IOException thrownException;, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java, +  final NetworkBehavior behavior;, +  final ExecutorService backgroundExecutor;, +  final Call<T> delegate;, +  volatile boolean canceled;, +      boolean delaySleep() {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorDelegate.java, +  final Retrofit retrofit;, +++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +  final Executor callbackExecutor;, +    final Executor callbackExecutor;, +    final Call<T> delegate;, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +  Response<T> parseResponse(com.squareup.okhttp.Response rawResponse) throws IOException {, +    IOException thrownException;, +++ b/retrofit/src/main/java/retrofit2/Retrofit.java, +  Retrofit(Call.Factory callFactory, BaseUrl baseUrl, List<Converter.Factory> converterFactories,, +      List<CallAdapter.Factory> adapterFactories, Executor callbackExecutor,, +      boolean validateEagerly) {, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java, +    CallOnSubscribe(Call<T> originalCall) {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorCall.java, +  final NetworkBehavior behavior;, +  final ExecutorService backgroundExecutor;, +  final Call<T> delegate;, +  volatile boolean canceled;, +      boolean delaySleep() {, +++ b/retrofit-mock/src/main/java/retrofit2/mock/BehaviorDelegate.java, +  final Retrofit retrofit;, +++ b/retrofit/src/main/java/retrofit2/ExecutorCallAdapterFactory.java, +  final Executor callbackExecutor;, +    final Executor callbackExecutor;, +    final Call<T> delegate;, +++ b/retrofit/src/main/java/retrofit2/OkHttpCall.java, +  Response<T> parseResponse(com.squareup.okhttp.Response rawResponse) throws IOException {, +    IOException thrownException;, +++ b/retrofit/src/main/java/retrofit2/Retrofit.java, +  Retrofit(Call.Factory callFactory, BaseUrl baseUrl, List<Converter.Factory> converterFactories,, +      List<CallAdapter.Factory> adapterFactories, Executor callbackExecutor,, +      boolean validateEagerly) {, +++ b/retrofit/src/main/java/retrofit2/Utils.java, +    IllegalArgumentException e = new IllegalArgumentException(message, +        + method.getName());, +    e.initCause(cause);, +    return e;, +, +++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/RxJavaCallAdapterFactory.java]