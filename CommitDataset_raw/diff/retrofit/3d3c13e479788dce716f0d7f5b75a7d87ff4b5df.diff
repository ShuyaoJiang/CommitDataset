[+++ b/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonResponseBodyConverter.java, +import com.google.gson.JsonIOException;, +import com.google.gson.stream.JsonToken;, +      T result = adapter.read(jsonReader);, +      if (jsonReader.peek() != JsonToken.END_DOCUMENT) {, +        throw new JsonIOException("JSON document was not fully consumed.");, +      }, +      return result;, +++ b/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonResponseBodyConverter.java, +import com.google.gson.JsonIOException;, +import com.google.gson.stream.JsonToken;, +      T result = adapter.read(jsonReader);, +      if (jsonReader.peek() != JsonToken.END_DOCUMENT) {, +        throw new JsonIOException("JSON document was not fully consumed.");, +      }, +      return result;, +++ b/retrofit-converters/gson/src/test/java/retrofit2/converter/gson/GsonConverterFactoryTest.java, +import com.google.gson.JsonIOException;, +import retrofit2.http.GET;, +import static org.junit.Assert.fail;, +  static final class Value {, +    static final TypeAdapter<Value> BROKEN_ADAPTER = new TypeAdapter<Value>() {, +      @Override public void write(JsonWriter out, Value value) {, +        throw new AssertionError();, +      }, +, +      @Override public Value read(JsonReader reader) throws IOException {, +        reader.beginObject();, +        reader.nextName();, +        String theName = reader.nextString();, +        return new Value(theName);, +      }, +    };, +, +    final String theName;, +, +    Value(String theName) {, +      this.theName = theName;, +    }, +  }, +, +    @GET("/") Call<Value> value();, +        .registerTypeAdapter(Value.class, Value.BROKEN_ADAPTER), +, +  @Test public void requireFullResponseDocumentConsumption() throws Exception {, +    server.enqueue(new MockResponse().setBody("{\"theName\":\"value\"}"));, +, +    Call<Value> call = service.value();, +    try {, +      call.execute();, +      fail();, +    } catch (JsonIOException e) {, +      assertThat(e).hasMessage("JSON document was not fully consumed.");, +    }, +  }]