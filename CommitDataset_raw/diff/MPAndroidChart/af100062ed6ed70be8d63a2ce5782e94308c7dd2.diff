[+++ b/MPChartExample/res/menu/bar.xml, +     <item, +        android:id="@+id/actionToggleFilter", +        android:title="Toggle filter">, +    </item>, +++ b/MPChartExample/res/menu/bar.xml, +     <item, +        android:id="@+id/actionToggleFilter", +        android:title="Toggle filter">, +    </item>, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;, +		case R.id.actionToggleFilter:, +            if (mChart.isFilterSet()) {, +                mChart.setFilter(ApproximatorType.NONE, 0);, +            } else {, +                mChart.setFilter(ApproximatorType.DOUGLAS_PEUCKER, 2);, +            }, +            mChart.invalidate();, +            break;, +++ b/MPChartExample/res/menu/bar.xml, +     <item, +        android:id="@+id/actionToggleFilter", +        android:title="Toggle filter">, +    </item>, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;, +		case R.id.actionToggleFilter:, +            if (mChart.isFilterSet()) {, +                mChart.setFilter(ApproximatorType.NONE, 0);, +            } else {, +                mChart.setFilter(ApproximatorType.DOUGLAS_PEUCKER, 2);, +            }, +            mChart.invalidate();, +            break;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;, +    /**, +     * Sets a filter on the whole ChartData. If the type is NONE, the filtering is reset. Be aware that the original, +     * DataSets are not modified. Instead there are modified copies of the data. All methods return the filtered values, +     * if a filter is set. To receive the original values despite a set filter, call getOriginalDataSets() of the class, +     * ChartData. The ChartData can be received by calling getData()., +     * , +     * @param type, +     *            the filter type. NONE to reset filtering, +     * @param tolerance, +     *            the tolerance, +     */, +    public void setFilter(ApproximatorType type, double tolerance) {, +        mData.setFilter(type, tolerance);, +    }, +, +    /**, +     * returns true if a filter has been set, flase if not, +     * @return, +     */, +    public boolean isFilterSet() {, +        return mData.isApproximatedData();, +    }, +, +++ b/MPChartExample/res/menu/bar.xml, +     <item, +        android:id="@+id/actionToggleFilter", +        android:title="Toggle filter">, +    </item>, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;, +		case R.id.actionToggleFilter:, +            if (mChart.isFilterSet()) {, +                mChart.setFilter(ApproximatorType.NONE, 0);, +            } else {, +                mChart.setFilter(ApproximatorType.DOUGLAS_PEUCKER, 2);, +            }, +            mChart.invalidate();, +            break;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.data.filter.Approximator.ApproximatorType;, +    /**, +     * Sets a filter on the whole ChartData. If the type is NONE, the filtering is reset. Be aware that the original, +     * DataSets are not modified. Instead there are modified copies of the data. All methods return the filtered values, +     * if a filter is set. To receive the original values despite a set filter, call getOriginalDataSets() of the class, +     * ChartData. The ChartData can be received by calling getData()., +     * , +     * @param type, +     *            the filter type. NONE to reset filtering, +     * @param tolerance, +     *            the tolerance, +     */, +    public void setFilter(ApproximatorType type, double tolerance) {, +        mData.setFilter(type, tolerance);, +    }, +, +    /**, +     * returns true if a filter has been set, flase if not, +     * @return, +     */, +    public boolean isFilterSet() {, +        return mData.isApproximatedData();, +    }, +]