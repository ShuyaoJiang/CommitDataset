[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +        int dataSetIndex = 0;, +        int xIndex = 0;, +            xIndex = (int) Math.round(xPosition);, +            dataSetIndex = (int) baseNoSpace % setCount;, +            xIndex = (int) baseNoSpace / setCount;, +        }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +        int dataSetIndex = 0;, +        int xIndex = 0;, +            xIndex = (int) Math.round(xPosition);, +            dataSetIndex = (int) baseNoSpace % setCount;, +            xIndex = (int) baseNoSpace / setCount;, +        }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +            if (mLogEnabled), +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +        int dataSetIndex = 0;, +        int xIndex = 0;, +            xIndex = (int) Math.round(xPosition);, +            dataSetIndex = (int) baseNoSpace % setCount;, +            xIndex = (int) baseNoSpace / setCount;, +        }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +            if (mLogEnabled), +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java, +                            if (!mViewPortHandler.isInBoundsRight(valuePoints[j])), +                                break;, +, +                            if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]), +                                    || !mViewPortHandler.isInBoundsLeft(valuePoints[j])), +                                continue;, +, +                                float x = valuePoints[j];, +                                float y = transformed[k + 1], +                                        + (vals[k / 2] >= 0 ? posOffset : negOffset);, +                                , +                                if (!mViewPortHandler.isInBoundsRight(x)), +                                    break;, +, +                                if (!mViewPortHandler.isInBoundsY(y), +                                        || !mViewPortHandler.isInBoundsLeft(x)), +                                    continue;, +, +                                drawValue(c, vals[k / 2], x, y, formatter);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +        int dataSetIndex = 0;, +        int xIndex = 0;, +            xIndex = (int) Math.round(xPosition);, +            dataSetIndex = (int) baseNoSpace % setCount;, +            xIndex = (int) baseNoSpace / setCount;, +        }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +            if (mLogEnabled), +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java, +                            if (!mViewPortHandler.isInBoundsRight(valuePoints[j])), +                                break;, +, +                            if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]), +                                    || !mViewPortHandler.isInBoundsLeft(valuePoints[j])), +                                continue;, +, +                                float x = valuePoints[j];, +                                float y = transformed[k + 1], +                                        + (vals[k / 2] >= 0 ? posOffset : negOffset);, +                                , +                                if (!mViewPortHandler.isInBoundsRight(x)), +                                    break;, +, +                                if (!mViewPortHandler.isInBoundsY(y), +                                        || !mViewPortHandler.isInBoundsLeft(x)), +                                    continue;, +, +                                drawValue(c, vals[k / 2], x, y, formatter);, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/HorizontalBarChartRenderer.java, +    private float mYOffset = 0f;, +            negOffset = drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.convertDpToPixel(5);, +            posOffset = drawValueAboveBar ? Utils.convertDpToPixel(5) : -Utils.convertDpToPixel(5);, +, +            if (drawValueAboveBar), +                mValuePaint.setTextAlign(Align.LEFT);, +            else, +                mValuePaint.setTextAlign(Align.RIGHT);, +                mYOffset = Utils.calcTextHeight(mValuePaint, "10") / 2f;, +, +                        drawValue(c, val, valuePoints[j] + (val >= 0 ? posOffset : negOffset),, +                                valuePoints[j + 1], formatter);, +                            if (!mViewPortHandler.isInBoundsX(valuePoints[j])), +                                continue;, +, +                            if (!mViewPortHandler.isInBoundsTop(valuePoints[j + 1])), +                                break;, +, +                            if (!mViewPortHandler.isInBoundsBottom(valuePoints[j + 1])), +                                continue;, +, +                            drawValue(c, e.getVal(), valuePoints[j], +                                    + (e.getVal() >= 0 ? posOffset : negOffset),, +                                    valuePoints[j + 1],, +                                float x = transformed[k]]