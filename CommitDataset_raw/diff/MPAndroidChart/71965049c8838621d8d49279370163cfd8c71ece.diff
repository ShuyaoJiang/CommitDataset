[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java, +import com.github.mikephil.charting.highlight.CombinedHighlighter;, +        mHighlighter = new CombinedHighlighter(this);, +, +            mFillFormatter = new DefaultFillFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java, +import com.github.mikephil.charting.highlight.CombinedHighlighter;, +        mHighlighter = new CombinedHighlighter(this);, +, +            mFillFormatter = new DefaultFillFormatter();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java, +import java.util.ArrayList;, +    /**, +     * Returns all data objects in row: line-bar-scatter-candle-bubble if not null., +     * @return, +     */, +    public List<ChartData> getAllData() {, +, +        List<ChartData> data = new ArrayList<>();, +        if(mLineData != null), +            data.add(mLineData);, +        if(mBarData != null), +            data.add(mBarData);, +        if(mScatterData != null), +            data.add(mScatterData);, +        if(mCandleData != null), +            data.add(mCandleData);, +        if(mBubbleData != null), +            data.add(mBubbleData);, +, +        return data;, +    }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/CombinedChart.java, +import com.github.mikephil.charting.highlight.CombinedHighlighter;, +        mHighlighter = new CombinedHighlighter(this);, +, +            mFillFormatter = new DefaultFillFormatter();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CombinedData.java, +import java.util.ArrayList;, +    /**, +     * Returns all data objects in row: line-bar-scatter-candle-bubble if not null., +     * @return, +     */, +    public List<ChartData> getAllData() {, +, +        List<ChartData> data = new ArrayList<>();, +        if(mLineData != null), +            data.add(mLineData);, +        if(mBarData != null), +            data.add(mBarData);, +        if(mScatterData != null), +            data.add(mScatterData);, +        if(mCandleData != null), +            data.add(mCandleData);, +        if(mBubbleData != null), +            data.add(mBubbleData);, +, +        return data;, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/highlight/CombinedHighlighter.java, +package com.github.mikephil.charting.highlight;, +, +import com.github.mikephil.charting.data.ChartData;, +import com.github.mikephil.charting.data.CombinedData;, +import com.github.mikephil.charting.data.DataSet;, +import com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider;, +import com.github.mikephil.charting.utils.SelectionDetail;, +, +import java.util.ArrayList;, +import java.util.List;, +, +/**, + * Created by Philipp Jahoda on 12/09/15., + */, +public class CombinedHighlighter extends ChartHighlighter<BarLineScatterCandleBubbleDataProvider> {, +, +    public CombinedHighlighter(BarLineScatterCandleBubbleDataProvider chart) {, +        super(chart);, +    }, +, +    /**, +     * Returns a list of SelectionDetail object corresponding to the given xIndex., +     *, +     * @param xIndex, +     * @return, +     */, +    @Override, +    protected List<SelectionDetail> getSelectionDetailsAtIndex(int xIndex) {, +, +        CombinedData data = (CombinedData) mChart.getData();, +, +        // get all chartdata objects, +        List<ChartData> dataObjects = data.getAllData();, +]