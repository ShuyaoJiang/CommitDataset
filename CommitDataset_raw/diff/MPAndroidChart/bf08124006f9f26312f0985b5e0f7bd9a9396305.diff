[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        mSeekBarX.setProgress(10);, +        // add space between the dataset groups in percent of bar-width, +        data.setGroupSpace(110f);, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        mSeekBarX.setProgress(10);, +        // add space between the dataset groups in percent of bar-width, +        data.setGroupSpace(110f);, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +        int maxEntry = 0;, +, +        for (int i = 0; i < mOriginalData.getDataSetCount(); i++) {, +, +            DataSet set = mOriginalData.getDataSetByIndex(i);, +, +            if (maxEntry < set.getEntryCount()), +                maxEntry = set.getEntryCount();, +        }, +, +        float groupSpace = ((BarData) mOriginalData).getGroupSpace();, +        mDeltaX += maxEntry * groupSpace;, +        BarData bd = (BarData) mOriginalData;, +        int setCount = mOriginalData.getDataSetCount();, +, +                float x = index * setCount + dataSetIndex + bd.getGroupSpace() / 2f + bd.getGroupSpace() * index;, +        BarData bd = (BarData) mCurrentData;, +, +        ArrayList<BarDataSet> dataSets = (ArrayList<BarDataSet>) bd.getDataSets();, +        int setCount = bd.getDataSetCount();, +            // the space between bar-groups, +            float spaceSum = bd.getGroupSpace() / 2f;, +, +                float x = e.getXIndex() + j * (setCount - 1) + i + spaceSum;, +                spaceSum += bd.getGroupSpace();, +    @Override, +    protected void drawXLabels(float yPos) {, +, +        // pre allocate to save performance (dont allocate in loop), +        float[] position = new float[] {, +                0f, 0f, +        };, +, +        BarData bd = (BarData) mCurrentData;, +, +        int step = mCurrentData.getDataSetCount();, +, +        for (int i = 0; i < mCurrentData.getXValCount(); i += mXLabels.mXAxisLabelModulus) {, +, +            position[0] = i * step + i * bd.getGroupSpace() + bd.getGroupSpace() / 2f;, +, +            // center the text, +            if (mXLabels.isCenterXLabelsEnabled()), +                position[0] += (step / 2f);, +, +            transformPointArray(position);, +, +            if (position[0] >= mOffsetLeft && position[0] <= getWidth() - mOffsetRight) {, +, +                String label = mCurrentData.getXVals().get(i);, +, +                if (mXLabels.isAvoidFirstLastClippingEnabled()) {, +, +                    // avoid clipping of the last, +                    if (i == mCurrentData.getXValCount() - 1) {, +                        float width = Utils.calcTextWidth(mXLabelPaint, label);, +, +                        if (width > getOffsetRight() * 2 && position[0] + width > getWidth()), +                            position[0] -= width / 2;, +, +                        // avoid clipping of the first, +                    } else if (i == 0) {, +, +                        float width = Utils.calcTextWidth(mXLabelPaint, label);, +                        position[0] += width / 2;, +                    }, +                }, +, +                mDrawCanvas.drawText(label, position[0],, +                        yPos,, +                        mXLabelPaint);, +            }, +        }, +    }, +, +    @Override, +    protected void drawVerticalGrid() {, +, +        if (!mDrawVerticalGrid || mCurrentData == null), +            return;, +, +        float[] position = new float[] {, +                0f, 0f, +        };, +, +        BarData bd = (BarData) mCurrentData;, +, +        // take into consideration that multiple DataSets increase mDeltaX, +        int step = mCurrentData.getDataSetCount();]