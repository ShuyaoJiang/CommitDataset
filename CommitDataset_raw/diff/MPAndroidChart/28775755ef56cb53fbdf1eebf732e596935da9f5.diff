[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +        left.setDrawZeroLine(true); // draw a zero line, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +        left.setDrawZeroLine(true); // draw a zero line, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +        mChart.getAxisRight().setDrawGridLines(false);, +        mChart.getAxisRight().setDrawZeroLine(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +        left.setDrawZeroLine(true); // draw a zero line, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +        mChart.getAxisRight().setDrawGridLines(false);, +        mChart.getAxisRight().setDrawZeroLine(true);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java, +     * enum that defines the shape that is drawn where the values are, CIRCLE, +     * and SCQUARE offer the best performance, TRIANGLE has the worst, +     * performance., +        CROSS, TRIANGLE, CIRCLE, SQUARE, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +        left.setDrawZeroLine(true); // draw a zero line, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +        mChart.getAxisRight().setDrawGridLines(false);, +        mChart.getAxisRight().setDrawZeroLine(true);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java, +     * enum that defines the shape that is drawn where the values are, CIRCLE, +     * and SCQUARE offer the best performance, TRIANGLE has the worst, +     * performance., +        CROSS, TRIANGLE, CIRCLE, SQUARE, +++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java, +    /**, +     * flag indicating if the grid lines for this axis should be drawn, +     */, +    /**, +     * flag that indicates if the line alongside the axis is drawn or not, +     */, +    /**, +     * flag that indicates of the labels of this axis should be drawn or not, +     */, +    /**, +     * the path effect of the grid lines that makes dashed lines possible, +     */, +    /**, +     * array of limit lines that can be set for the axis, +     */, +    /**, +     * flag indicating the limit lines layer depth, +     */, +    /**, +     * default constructor, +     */, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +        left.setDrawZeroLine(true); // draw a zero line, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +        mChart.getAxisRight().setDrawGridLines(false);, +        mChart.getAxisRight().setDrawZeroLine(true);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java, +     * enum that defines the shape that is drawn where the values are, CIRCLE, +     * and SCQUARE offer the best performance, TRIANGLE has the worst, +     * performance., +        CROSS, TRIANGLE, CIRCLE, SQUARE, +++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java, +    /**, +     * flag indicating if the grid lines for this axis should be drawn, +     */, +    /**, +     * flag that indicates if the line alongside the axis is drawn or not, +     */, +    /**, +     * flag that indicates of the labels of this axis should be drawn or not, +     */, +    /**, +     * the path effect of the grid lines that makes dashed lines possible, +     */, +    /**, +     * array of limit lines that can be set for the axis, +     */, +    /**, +     * flag indicating the limit lines layer depth, +     */, +    /**, +     * default constructor, +     */, +++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java, +     * flag that indicates if the zero-line should be drawn regardless of other grid lines, +     */, +    protected boolean mDrawZeroLine = true;, +, +    /**, +    public boolean isDrawZeroLineEnabled() {, +        return mDrawZeroLine;, +    }, +, +    /**, +     * Set this to true to draw the zero-line regardless of weather other, +     * grid-lines are enabled or not., +     *, +     * @param mDrawZeroLine, +     */, +    public void setDrawZeroLine(boolean mDrawZeroLine) {, +        this.mDrawZeroLine = mDrawZeroLine;, +    }]