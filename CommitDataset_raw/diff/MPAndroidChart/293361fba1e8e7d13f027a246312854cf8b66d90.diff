[+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +    public void feed(IBarDataSet data) {, +        float size = data.getEntryCount() * phaseX;, +            BarEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +    public void feed(IBarDataSet data) {, +        float size = data.getEntryCount() * phaseX;, +            BarEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java, +//    /**, +//     * the last start value used for calcMinMax, +//     */, +//    protected int mLastStart = 0;, +//, +//    /**, +//     * the last end value used for calcMinMax, +//     */, +//    protected int mLastEnd = 0;, +     * Use this method to tell the data set that the underlying data has changed., +        calcMinMax( 0, getEntryCount()-1);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +    public void feed(IBarDataSet data) {, +        float size = data.getEntryCount() * phaseX;, +            BarEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java, +//    /**, +//     * the last start value used for calcMinMax, +//     */, +//    protected int mLastStart = 0;, +//, +//    /**, +//     * the last end value used for calcMinMax, +//     */, +//    protected int mLastEnd = 0;, +     * Use this method to tell the data set that the underlying data has changed., +        calcMinMax( 0, getEntryCount()-1);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +        calcMinMax(0, mYValCount);, +            if (mDataSets.get(i).getEntryCount() > mXVals.size()) {, +                set.calcMinMax(start, end);, +            calcMinMax(0, mYValCount);, +                calcMinMax(0, mYValCount);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +    public void feed(IBarDataSet data) {, +        float size = data.getEntryCount() * phaseX;, +            BarEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java, +//    /**, +//     * the last start value used for calcMinMax, +//     */, +//    protected int mLastStart = 0;, +//, +//    /**, +//     * the last end value used for calcMinMax, +//     */, +//    protected int mLastEnd = 0;, +     * Use this method to tell the data set that the underlying data has changed., +        calcMinMax( 0, getEntryCount()-1);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +        calcMinMax(0, mYValCount);, +            if (mDataSets.get(i).getEntryCount() > mXVals.size()) {, +                set.calcMinMax(start, end);, +            calcMinMax(0, mYValCount);, +                calcMinMax(0, mYValCount);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java, +        calcMinMax(0, mYVals.size());, +    public void calcMinMax(int start, int end) {, +        if (mYVals == null), +        final int yValCount = mYVals.size();, +            T e = mYVals.get(i);, +            calcMinMax(0, mYVals.size());, +            calcMinMax(0, mYVals.size());, +        if (mYVals == null), +        boolean removed = mYVals.remove(e);, +            calcMinMax(0, mYVals.size());, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;, +    public void feed(IBarDataSet data) {, +        float size = data.getEntryCount() * phaseX;, +            BarEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java, +//    /**, +//     * the last start value used for calcMinMax, +//     */, +//    protected int mLastStart = 0;, +//, +//    /**, +//     * the last end value used for calcMinMax, +//     */, +//    protected int mLastEnd = 0;, +     * Use this method to tell the data set that the underlying data has changed., +        calcMinMax( 0, getEntryCount()-1);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +        calcMinMax(0, mYValCount);, +            if (mDataSets.get(i).getEntryCount() > mXVals.size()) {, +                set.calcMinMax(start, end);]