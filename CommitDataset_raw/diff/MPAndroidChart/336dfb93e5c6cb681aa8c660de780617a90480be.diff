[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, +    protected void calcMinMax(BarEntry e) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, +    protected void calcMinMax(BarEntry e) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleDataSet.java, +    protected void calcMinMax(BubbleEntry e) {, +        super.calcMinMax(e);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, +    protected void calcMinMax(BarEntry e) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleDataSet.java, +    protected void calcMinMax(BubbleEntry e) {, +        super.calcMinMax(e);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java, +     * <p/>, +    protected void calcMinMax(CandleEntry e) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, +    protected void calcMinMax(BarEntry e) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleDataSet.java, +    protected void calcMinMax(BubbleEntry e) {, +        super.calcMinMax(e);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java, +     * <p/>, +    protected void calcMinMax(CandleEntry e) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java, +     * Tell DataSets to recalculate their min and max values, this is needed for autoScaleMinMax., +     *, +     * @param fromX the x-value to start the calculation from, +     * @param toX   the x-value to which the calculation should be performed, +    public void calcMinMax(float fromX, float toX) {, +, +        for (T set : mDataSets) {, +            set.calcMinMax(fromX, toX);, +        }, +, +        calcMinMax();, +    }, +, +    /**, +     * Calc minimum and maximum values (both x and y) over all DataSets., +     */, +    protected void calcMinMax() {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +            mData.calcMinMax(getLowestVisibleX(), getHighestVisibleX());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, +    protected void calcMinMax(BarEntry e) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleDataSet.java, +    protected void calcMinMax(BubbleEntry e) {, +        super.calcMinMax(e);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java, +     * <p/>, +    protected void calcMinMax(CandleEntry e) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java, +     * Tell DataSets to recalculate their min and max values, this is needed for autoScaleMinMax., +     *, +     * @param fromX the x-value to start the calculation from, +     * @param toX   the x-value to which the calculation should be performed, +    public void calcMinMax(float fromX, float toX) {, +, +        for (T set : mDataSets) {, +            set.calcMinMax(fromX, toX);, +        }, +, +        calcMinMax();, +    }, +, +    /**, +     * Calc minimum and maximum values (both x and y) over all DataSets., +     */, +    protected void calcMinMax() {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java, +    @Override, +    public void calcMinMax(float fromX, float toX) {, +, +        if (mValues == null || mValues.isEmpty()), +            return;, +]