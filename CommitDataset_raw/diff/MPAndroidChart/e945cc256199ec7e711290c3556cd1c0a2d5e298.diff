[+++ b/README.md, + - <code>fitScreen()</code>: Resets all zooming and dragging and makes the chart fit exactly it's bounds., +    Entry c1e2 = new Entry(50.000f, 1); // 1 == quarter 2 ..., +    Entry c2e2 = new Entry(110.000f, 1); // 1 == quarter 2 ..., +**Dynamically adding data (real time):**, +, +For **adding new data** to the chart dynamically, there are various methods that allow to either add `Entry` objects to an existing `DataSet` or `DataSet` objects to an existing `ChartData` object. , +, +Class `DataSet` (and all subclasses):, + - `addEntry(Entry e)`: Adds the given `Entry` object to the `DataSet`., +, +Class `ChartData` (and all subclasses):, + - `addEntry(Entry e, int dataSetIndex)`: Adds the given `Entry` to the `DataSet` at the specified dataset index., + - `addDataSet(DataSet d)`: Adds the given `DataSet` object to the `ChartData` object., +, +In addition to that, there are also methods for **removing data dynamically**., +, +Class `DataSet` (and all subclasses):, + - `public boolean removeEntry(Entry e)`: Removes the given `Entry` object from the `DataSet`. Returns true if successful., + - `public boolean removeEntry(int xIndex)`: Removes the `Entry` at the given x-index from the `DataSet`. Returns true if successful., +, +Class `ChartData` (and all subclasses):, + - `public boolean removeEntry(Entry e, int dataSetIndex)`: Removes the given `Entry` object from the `DataSet` with the given dataset index. Returns true if successful., + - `public boolean removeEntry(int xIndex, int dataSetIndex)`: Removes the `Entry` at the given x-index from the `DataSet` with the given dataset index. Returns true if successful., + - `public boolean removeDataSet(DataSet d)`: Removes the given `DataSet` object from the `ChartData` object. Returns true if successful., + - `public boolean removeDataSet(int index)`: Removes the `DataSet` at the given index from the `ChartData` object. Returns true if successful., +, +]