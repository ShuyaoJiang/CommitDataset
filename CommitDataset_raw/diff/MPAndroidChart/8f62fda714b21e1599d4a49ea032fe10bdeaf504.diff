[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +		if (mXAxis.isDrawLimitLinesBehindDataEnabled()), +			mXAxisRenderer.renderLimitLines(canvas);, +, +		if (!mXAxis.isDrawLimitLinesBehindDataEnabled()), +			mXAxisRenderer.renderLimitLines(canvas);, +, +	/**, +	 * This will move the center of the current viewport to the specified, +	 * x-index and y-value., +	 *, +	 * @param xIndex, +	 * @param yValue, +	 * @param axis - which axis should be used as a reference for the y-axis, +	 */, +	public void centerViewTo(int xIndex, float yValue, AxisDependency axis) {, +, +		float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();, +		float xsInView = getXAxis().getValues().size() / mViewPortHandler.getScaleX();, +, +		Runnable job = new MoveViewJob(mViewPortHandler,, +				xIndex - xsInView / 2f, yValue + valsInView / 2f,, +				getTransformer(axis), this);, +, +		if (mViewPortHandler.hasChartDimens()) {, +			post(job);, +		} else {, +			mJobs.add(job);, +		}, +	}, +, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +		if (mXAxis.isDrawLimitLinesBehindDataEnabled()), +			mXAxisRenderer.renderLimitLines(canvas);, +, +		if (!mXAxis.isDrawLimitLinesBehindDataEnabled()), +			mXAxisRenderer.renderLimitLines(canvas);, +, +	/**, +	 * This will move the center of the current viewport to the specified, +	 * x-index and y-value., +	 *, +	 * @param xIndex, +	 * @param yValue, +	 * @param axis - which axis should be used as a reference for the y-axis, +	 */, +	public void centerViewTo(int xIndex, float yValue, AxisDependency axis) {, +, +		float valsInView = getDeltaY(axis) / mViewPortHandler.getScaleY();, +		float xsInView = getXAxis().getValues().size() / mViewPortHandler.getScaleX();, +, +		Runnable job = new MoveViewJob(mViewPortHandler,, +				xIndex - xsInView / 2f, yValue + valsInView / 2f,, +				getTransformer(axis), this);, +, +		if (mViewPortHandler.hasChartDimens()) {, +			post(job);, +		} else {, +			mJobs.add(job);, +		}, +	}, +, +, +++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java, +import android.util.Log;, +import java.util.ArrayList;, +import java.util.List;, +, +	/** array of limit lines that can be set for the axis */, +	protected List<LimitLine> mLimitLines;, +, +	/** flag indicating the limit lines layer depth */, +	protected boolean mDrawLimitLineBehindData = false;, +, +		this.mLimitLines = new ArrayList<LimitLine>();, +	 * Adds a new LimitLine to this axis., +	 *, +	 * @param l, +	 */, +	public void addLimitLine(LimitLine l) {, +		mLimitLines.add(l);, +, +		if (mLimitLines.size() > 6) {, +			Log.e("MPAndroiChart",, +					"Warning! You have more than 6 LimitLines on your axis, do you really want that?");, +		}, +	}, +, +	/**, +	 * Removes the specified LimitLine from the axis., +	 *, +	 * @param l, +	 */, +	public void removeLimitLine(LimitLine l) {, +		mLimitLines.remove(l);, +	}, +, +	/**, +	 * Removes all LimitLines from the axis.]