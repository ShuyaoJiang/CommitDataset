[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.utils.ColorTemplate;, +        // disable 3D, +        mChart.set3DEnabled(false);, +, +//        mChart.setDrawLegend(false);, +        mSeekBarX.setProgress(45);, +//        XLabels xl  = mChart.getXLabels();, +//        xl.setPosition(XLabelPosition.TOP);, +//        , +//        YLabels yl = mChart.getYLabels();, +//        yl.setPosition(YLabelPosition.RIGHT);, +            xVals.add((i) + "");, +        for (int i = 0; i < mSeekBarX.getProgress() / 3; i++) {, +        for (int i = mSeekBarX.getProgress() / 3; i < mSeekBarX.getProgress() / 3 * 2; i++) {, +        for (int i = mSeekBarX.getProgress() / 3 * 2; i < mSeekBarX.getProgress(); i++) {, +        set1.setColors(ColorTemplate.createColors(getApplicationContext(), ColorTemplate.FRESH_COLORS));, +        set2.resetColors();, +        set2.addColor(getResources().getColor(R.color.liberty_2));, +        set2.addColor(getResources().getColor(R.color.liberty_3));, +        set3.setColors(ColorTemplate.createColors(getApplicationContext(), ColorTemplate.COLORFUL_COLORS));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.utils.ColorTemplate;, +        // disable 3D, +        mChart.set3DEnabled(false);, +, +//        mChart.setDrawLegend(false);, +        mSeekBarX.setProgress(45);, +//        XLabels xl  = mChart.getXLabels();, +//        xl.setPosition(XLabelPosition.TOP);, +//        , +//        YLabels yl = mChart.getYLabels();, +//        yl.setPosition(YLabelPosition.RIGHT);, +            xVals.add((i) + "");, +        for (int i = 0; i < mSeekBarX.getProgress() / 3; i++) {, +        for (int i = mSeekBarX.getProgress() / 3; i < mSeekBarX.getProgress() / 3 * 2; i++) {, +        for (int i = mSeekBarX.getProgress() / 3 * 2; i < mSeekBarX.getProgress(); i++) {, +        set1.setColors(ColorTemplate.createColors(getApplicationContext(), ColorTemplate.FRESH_COLORS));, +        set2.resetColors();, +        set2.addColor(getResources().getColor(R.color.liberty_2));, +        set2.addColor(getResources().getColor(R.color.liberty_3));, +        set3.setColors(ColorTemplate.createColors(getApplicationContext(), ColorTemplate.COLORFUL_COLORS));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.util.Log;, +        // if (!mStartAtZero && getYMin() >= 0f) {, +        // mYChartMin = getYMin();, +        // mDeltaY = Math.abs(mYChartMax - mYChartMin);, +        // }, +, +, +                prepareBar(e.getXIndex(), e.getVal(), ds.getBarSpace());, +        for (int i = 0; i < mCurrentData.getDataSetCount(); i++) {, +                    prepareBar(e.getXIndex(), e.getVal(), dataSet.getBarSpace());, +                        prepareBar(e.getXIndex(), e.getVal(), dataSet.getBarSpace());, +                            prepareBar(e.getXIndex(), e.getVal(), dataSet.getBarSpace());, +                            prepareBar(e.getXIndex(), vals[k] + all, dataSet.getBarSpace());, +, +                    if (isOffContentLeft(mBarRect.right)) {, +                        continue;, +                    }, +        long starttime = System.currentTimeMillis();, +                float[] valuePoints = generateTransformedValues(entries, 0.5f);, +, +        Log.i(LOG_TAG, "DrawValues time: " + (System.currentTimeMillis() - starttime) + "ms");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +import com.github.mikephil.charting.utils.ColorTemplate;, +        // disable 3D, +        mChart.set3DEnabled(false);, +, +//        mChart.setDrawLegend(false);, +        mSeekBarX.setProgress(45);, +//        XLabels xl  = mChart.getXLabels();, +//        xl.setPosition(XLabelPosition.TOP);, +//        , +//        YLabels yl = mChart.getYLabels();, +//        yl.setPosition(YLabelPosition.RIGHT);, +            xVals.add((i) + "");, +        for (int i = 0; i < mSeekBarX.getProgress() / 3; i++) {, +        for (int i = mSeekBarX.getProgress() / 3; i < mSeekBarX.getProgress() / 3 * 2; i++) {, +        for (int i = mSeekBarX.getProgress() / 3 * 2; i < mSeekBarX.getProgress(); i++) {, +        set1.setColors(ColorTemplate.createColors(getApplicationContext(), ColorTemplate.FRESH_COLORS));, +        set2.resetColors();, +        set2.addColor(getResources().getColor(R.color.liberty_2));, +        set2.addColor(getResources().getColor(R.color.liberty_3));, +        set3.setColors(ColorTemplate.createColors(getApplicationContext(), ColorTemplate.COLORFUL_COLORS));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.util.Log;, +        // if (!mStartAtZero && getYMin() >= 0f) {, +        // mYChartMin = getYMin();, +        // mDeltaY = Math.abs(mYChartMax - mYChartMin);, +        // }, +, +, +                prepareBar(e.getXIndex(), e.getVal(), ds.getBarSpace());, +        for (int i = 0; i < mCurrentData.getDataSetCount(); i++) {, +                    prepareBar(e.getXIndex(), e.getVal(), dataSet.getBarSpace());]