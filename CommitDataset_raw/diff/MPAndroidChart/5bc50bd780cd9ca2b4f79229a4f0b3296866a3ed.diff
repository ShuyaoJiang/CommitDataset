[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +import com.xxmassdeveloper.mpchartexample.notimportant.RealmBaseActivity;, +public class RealmDatabaseActivity extends RealmBaseActivity {, +    }, +, +    @Override, +    protected void onResume() {, +        super.onResume(); // setup realm, +        writeToDB(200);, +        // add data to the chart, +        RealmResults<RealmDemoData> result = mRealm.allObjects(RealmDemoData.class);, +        LineData data = new LineData(result, "xValue", dataSets);, +        mChart.animateY(1400, Easing.EasingOption.EaseInOutQuart);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +import com.xxmassdeveloper.mpchartexample.notimportant.RealmBaseActivity;, +public class RealmDatabaseActivity extends RealmBaseActivity {, +    }, +, +    @Override, +    protected void onResume() {, +        super.onResume(); // setup realm, +        writeToDB(200);, +        // add data to the chart, +        RealmResults<RealmDemoData> result = mRealm.allObjects(RealmDemoData.class);, +        LineData data = new LineData(result, "xValue", dataSets);, +        mChart.animateY(1400, Easing.EasingOption.EaseInOutQuart);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java, +    private String xValue;, +, +    public RealmDemoData(float value, int xIndex, String xValue) {, +        this.xValue = xValue;, +    public String getxValue() {, +        return xValue;, +    }, +, +    public void setxValue(String xValue) {, +        this.xValue = xValue;, +    }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivity.java, +import com.xxmassdeveloper.mpchartexample.notimportant.RealmBaseActivity;, +public class RealmDatabaseActivity extends RealmBaseActivity {, +    }, +, +    @Override, +    protected void onResume() {, +        super.onResume(); // setup realm, +        writeToDB(200);, +        // add data to the chart, +        RealmResults<RealmDemoData> result = mRealm.allObjects(RealmDemoData.class);, +        LineData data = new LineData(result, "xValue", dataSets);, +        mChart.animateY(1400, Easing.EasingOption.EaseInOutQuart);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmDemoData.java, +    private String xValue;, +, +    public RealmDemoData(float value, int xIndex, String xValue) {, +        this.xValue = xValue;, +    public String getxValue() {, +        return xValue;, +    }, +, +    public void setxValue(String xValue) {, +        this.xValue = xValue;, +    }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/RealmBaseActivity.java, +package com.xxmassdeveloper.mpchartexample.notimportant;, +, +import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;, +, +import io.realm.Realm;, +import io.realm.RealmConfiguration;, +, +/**, + * Created by Philipp Jahoda on 05/11/15., + */, +public abstract class RealmBaseActivity extends DemoBase {, +, +    protected Realm mRealm;, +, +    @Override, +    protected void onResume() {, +        super.onResume();, +, +        RealmConfiguration config = new RealmConfiguration.Builder(this), +                .name("myrealm.realm"), +                .build();, +, +        Realm.deleteRealm(config);, +, +        Realm.setDefaultConfiguration(config);, +, +        mRealm = Realm.getInstance(config);, +    }, +, +    @Override, +    protected void onPause() {, +        super.onPause();, +        mRealm.close();, +    }]