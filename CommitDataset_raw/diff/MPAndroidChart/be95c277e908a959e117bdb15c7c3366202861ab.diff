[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mChartTouchListener = new BarLineChartTouchListener(this, mViewPortHandler.getMatrixTouch());, +            ((BarLineChartTouchListener) mChartTouchListener).computeScroll();, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mChartTouchListener = new BarLineChartTouchListener(this, mViewPortHandler.getMatrixTouch());, +            ((BarLineChartTouchListener) mChartTouchListener).computeScroll();, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mChartTouchListener = new BarLineChartTouchListener(this, mViewPortHandler.getMatrixTouch());, +            ((BarLineChartTouchListener) mChartTouchListener).computeScroll();, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, +public class BarLineChartTouchListener extends ChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>>> {, +    public BarLineChartTouchListener(BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>> chart, Matrix touchMatrix) {, +        super(chart);, +     * @param x, +     * @param y, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mChartTouchListener = new BarLineChartTouchListener(this, mViewPortHandler.getMatrixTouch());, +            ((BarLineChartTouchListener) mChartTouchListener).computeScroll();, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, +public class BarLineChartTouchListener extends ChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>>> {, +    public BarLineChartTouchListener(BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>> chart, Matrix touchMatrix) {, +        super(chart);, +     * @param x, +     * @param y, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/ChartTouchListener.java, +import com.github.mikephil.charting.charts.Chart;, +public abstract class ChartTouchListener<T extends Chart<?>> extends GestureDetector.SimpleOnGestureListener implements View.OnTouchListener {, +, +    // states, +    protected static final int NONE = 0;, +    protected static final int DRAG = 1;, +    protected static final int X_ZOOM = 2;, +    protected static final int Y_ZOOM = 3;, +    protected static final int PINCH_ZOOM = 4;, +    protected static final int POST_ZOOM = 5;, +    protected static final int ROTATE = 6;, +, +    /** integer field that holds the current touch-state */, +    protected int mTouchMode = NONE;, +    /** the gesturedetector used for detecting taps and longpresses, ... */, +    protected GestureDetector mGestureDetector;, +, +    /** the chart the listener represents */, +    protected T mChart;, +, +    public ChartTouchListener(T chart) {, +        this.mChart = chart;, +, +        mGestureDetector = new GestureDetector(chart.getContext(), this);, +    }, +, +     * returns the touch mode the listener is currently in, +     *, +     * @return, +     */, +    public int getTouchMode() {, +        return mTouchMode;, +    }, +, +    /**, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mChartTouchListener = new BarLineChartTouchListener(this, mViewPortHandler.getMatrixTouch());, +            ((BarLineChartTouchListener) mChartTouchListener).computeScroll();, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, +public class BarLineChartTouchListener extends ChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>>> {, +    public BarLineChartTouchListener(BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>> chart, Matrix touchMatrix) {, +        super(chart);, +     * @param x, +     * @param y, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/ChartTouchListener.java, +import com.github.mikephil.charting.charts.Chart;, +public abstract class ChartTouchListener<T extends Chart<?>> extends GestureDetector.SimpleOnGestureListener implements View.OnTouchListener {, +, +    // states, +    protected static final int NONE = 0;, +    protected static final int DRAG = 1;, +    protected static final int X_ZOOM = 2;, +    protected static final int Y_ZOOM = 3;, +    protected static final int PINCH_ZOOM = 4;, +    protected static final int POST_ZOOM = 5;, +    protected static final int ROTATE = 6;, +, +    /** integer field that holds the current touch-state */, +    protected int mTouchMode = NONE;, +    /** the gesturedetector used for detecting taps and longpresses, ... */, +    protected GestureDetector mGestureDetector;, +, +    /** the chart the listener represents */, +    protected T mChart;, +, +    public ChartTouchListener(T chart) {, +        this.mChart = chart;, +, +        mGestureDetector = new GestureDetector(chart.getContext(), this);, +    }, +]