[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +, +        // entry label styling, +        mChart.setEntryLabelColor(Color.WHITE);, +        mChart.setEntryLabelTypeface(mTfRegular);, +        mChart.setEntryLabelTextSize(12f);, +                mChart.setDrawEntryLabels(!mChart.isDrawEntryLabelsEnabled());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +, +        // entry label styling, +        mChart.setEntryLabelColor(Color.WHITE);, +        mChart.setEntryLabelTypeface(mTfRegular);, +        mChart.setEntryLabelTextSize(12f);, +                mChart.setDrawEntryLabels(!mChart.isDrawEntryLabelsEnabled());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +                mChart.setDrawEntryLabels(!mChart.isDrawEntryLabelsEnabled());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +, +        // entry label styling, +        mChart.setEntryLabelColor(Color.WHITE);, +        mChart.setEntryLabelTypeface(mTfRegular);, +        mChart.setEntryLabelTextSize(12f);, +                mChart.setDrawEntryLabels(!mChart.isDrawEntryLabelsEnabled());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +                mChart.setDrawEntryLabels(!mChart.isDrawEntryLabelsEnabled());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java, +     * flag indicating if entry labels should be drawn or not, +    private boolean mDrawEntryLabels = true;, +     * Set this to true to draw the entry labels into the pie slices (Provided by the getLabel() method of the PieEntry class)., +     * Deprecated -> use setDrawEntryLabels(...) instead., +    @Deprecated, +        mDrawEntryLabels = enabled;, +     * Set this to true to draw the entry labels into the pie slices (Provided by the getLabel() method of the PieEntry class)., +     *, +     * @param enabled, +     */, +    public void setDrawEntryLabels(boolean enabled) {, +        mDrawEntryLabels = enabled;, +    }, +, +    /**, +     * Returns true if drawing the entry labels is enabled, false if not., +    public boolean isDrawEntryLabelsEnabled() {, +        return mDrawEntryLabels;, +    }, +, +    /**, +     * Sets the color the entry labels are drawn with., +     *, +     * @param color, +     */, +    public void setEntryLabelColor(int color) {, +        ((PieChartRenderer) mRenderer).getPaintEntryLabels().setColor(color);, +    }, +, +    /**, +     * Sets a custom Typeface for the drawing of the entry labels., +     *, +     * @param tf, +     */, +    public void setEntryLabelTypeface(Typeface tf) {, +        ((PieChartRenderer) mRenderer).getPaintEntryLabels().setTypeface(tf);, +    }, +, +    /**, +     * Sets the size of the entry labels in dp. Default: 13dp, +     *, +     * @param size, +     */, +    public void setEntryLabelTextSize(float size) {, +        ((PieChartRenderer) mRenderer).getPaintEntryLabels().setTextSize(Utils.convertDpToPixel(size));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +, +        // entry label styling, +        mChart.setEntryLabelColor(Color.WHITE);, +        mChart.setEntryLabelTypeface(mTfRegular);, +        mChart.setEntryLabelTextSize(12f);, +                mChart.setDrawEntryLabels(!mChart.isDrawEntryLabelsEnabled());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +                mChart.setDrawEntryLabels(!mChart.isDrawEntryLabelsEnabled());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java, +     * flag indicating if entry labels should be drawn or not, +    private boolean mDrawEntryLabels = true;, +     * Set this to true to draw the entry labels into the pie slices (Provided by the getLabel() method of the PieEntry class)., +     * Deprecated -> use setDrawEntryLabels(...) instead., +    @Deprecated, +        mDrawEntryLabels = enabled;, +     * Set this to true to draw the entry labels into the pie slices (Provided by the getLabel() method of the PieEntry class)., +     *, +     * @param enabled, +     */, +    public void setDrawEntryLabels(boolean enabled) {, +        mDrawEntryLabels = enabled;, +    }, +, +    /**, +     * Returns true if drawing the entry labels is enabled, false if not., +    public boolean isDrawEntryLabelsEnabled() {, +        return mDrawEntryLabels;, +    }]