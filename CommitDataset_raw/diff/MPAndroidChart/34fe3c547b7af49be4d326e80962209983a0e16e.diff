[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java, +        mChart.setScaleMinima(3f, 3f);, +        mChart.centerViewPort(10, 50);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java, +        mChart.setScaleMinima(3f, 3f);, +        mChart.centerViewPort(10, 50);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +                final float y = -pts[1] - getOffsetTop();, +     * if the chart is fully zoomed out, return true, +     * @return, +     */, +    public boolean isFullyZoomedOut() {, +        , +//        Log.i(LOG_TAG, "MinScaleX: " + mMinScaleX + ", ScaleX: " + mScaleX);, +        , +        if(mScaleX <= mMinScaleX && mScaleY <= mMinScaleY) return true;, +        else return false;, +    }, +, +    /**, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity.java, +        mChart.setScaleMinima(3f, 3f);, +        mChart.centerViewPort(10, 50);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +                final float y = -pts[1] - getOffsetTop();, +     * if the chart is fully zoomed out, return true, +     * @return, +     */, +    public boolean isFullyZoomedOut() {, +        , +//        Log.i(LOG_TAG, "MinScaleX: " + mMinScaleX + ", ScaleX: " + mScaleX);, +        , +        if(mScaleX <= mMinScaleX && mScaleY <= mMinScaleY) return true;, +        else return false;, +    }, +, +    /**, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +        Log.i(LOG_TAG, "Matrices prepared.");, +    private boolean mMatrixOnLayoutPrepared = false;, +, +            BarLineChartBase b = (BarLineChartBase) this;, +            , +            if (!b.hasFixedYValues() && !mMatrixOnLayoutPrepared) {, +                mMatrixOnLayoutPrepared = true;, +            }, +                ]