[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +        , +        mChart.setDrawYValues(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +        , +        mChart.setDrawYValues(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +        , +        mChart.setDrawYValues(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +            int digits = Utils.getDecimals(reference);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +        , +        mChart.setDrawYValues(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +            int digits = Utils.getDecimals(reference);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +                mDrawAngles[cnt] = calcAngle(Math.abs(entries.get(j).getVal()));, +                Entry e = entries.get(j);, +, +                // draw only if the value is greater than zero, +                if ((Math.abs(e.getVal()) > 0.000001)) {, +, +                    if (!needsHighlight(e.getXIndex(), i)) {, +                }, +                    val = mValueFormat.format(Math.abs(getPercentOfTotal(value))) + " %";, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/AnotherBarActivity.java, +        , +        mChart.setDrawYValues(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +            int digits = Utils.getDecimals(reference);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +                mDrawAngles[cnt] = calcAngle(Math.abs(entries.get(j).getVal()));, +                Entry e = entries.get(j);, +, +                // draw only if the value is greater than zero, +                if ((Math.abs(e.getVal()) > 0.000001)) {, +, +                    if (!needsHighlight(e.getXIndex(), i)) {, +                }, +                    val = mValueFormat.format(Math.abs(getPercentOfTotal(value))) + " %";, +++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java, +//    /**, +//     * returns the appropriate number of format digits for a delta value, +//     * , +//     * @param delta, +//     * @return, +//     */, +//    public static int getFormatDigits(float delta) {, +//, +//        if (delta < 0.1) {, +//            return 6;, +//        } else if (delta <= 1) {, +//            return 4;, +//        } else if (delta < 4) {, +//            return 3;, +//        } else if (delta < 20) {, +//            return 2;, +//        } else if (delta < 60) {, +//            return 1;, +//        } else {, +//            return 0;, +//        }, +//    }, +     * Returns the appropriate number of decimals to be used for the provided, +     * number., +     * , +     * @param number, +     * @return, +     */, +    public static int getDecimals(float number) {, +, +        float i = roundToNextSignificant(number);, +        return (int) Math.ceil(-Math.log10(i)) + 2;, +    }, +, +    /**]