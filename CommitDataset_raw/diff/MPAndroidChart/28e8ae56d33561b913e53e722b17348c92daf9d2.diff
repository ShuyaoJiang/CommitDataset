[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.PercentFormatter;, +        mChart.setValueFormatter(new PercentFormatter());, +            case R.id.actionTogglePercent:, +                mChart.setUsePercentValues(!mChart.isUsePercentValuesEnabled());, +                mChart.invalidate();, +                break;, +        PieDataSet dataSet = new PieDataSet(yVals1, "Election Results");, +        dataSet.setSliceSpace(3f);, +        dataSet.setColors(colors);, +        PieData data = new PieData(xVals, dataSet);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.PercentFormatter;, +        mChart.setValueFormatter(new PercentFormatter());, +            case R.id.actionTogglePercent:, +                mChart.setUsePercentValues(!mChart.isUsePercentValuesEnabled());, +                mChart.invalidate();, +                break;, +        PieDataSet dataSet = new PieDataSet(yVals1, "Election Results");, +        dataSet.setSliceSpace(3f);, +        dataSet.setColors(colors);, +        PieData data = new PieData(xVals, dataSet);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/PercentFormatter.java, +    public PercentFormatter() {, +        return mFormat.format(value) + " %";, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.PercentFormatter;, +        mChart.setValueFormatter(new PercentFormatter());, +            case R.id.actionTogglePercent:, +                mChart.setUsePercentValues(!mChart.isUsePercentValuesEnabled());, +                mChart.invalidate();, +                break;, +        PieDataSet dataSet = new PieDataSet(yVals1, "Election Results");, +        dataSet.setSliceSpace(3f);, +        dataSet.setColors(colors);, +        PieData data = new PieData(xVals, dataSet);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/PercentFormatter.java, +    public PercentFormatter() {, +        return mFormat.format(value) + " %";, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java, +        holder.chart.setValueFormatter(new PercentFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.PercentFormatter;, +        mChart.setValueFormatter(new PercentFormatter());, +            case R.id.actionTogglePercent:, +                mChart.setUsePercentValues(!mChart.isUsePercentValuesEnabled());, +                mChart.invalidate();, +                break;, +        PieDataSet dataSet = new PieDataSet(yVals1, "Election Results");, +        dataSet.setSliceSpace(3f);, +        dataSet.setColors(colors);, +        PieData data = new PieData(xVals, dataSet);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/PercentFormatter.java, +    public PercentFormatter() {, +        return mFormat.format(value) + " %";, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java, +        holder.chart.setValueFormatter(new PercentFormatter());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +    /** if true, the values inside the piechart are drawn as percent values */, +    private boolean mUsePercentValues = false;, +, +    /**, +     * If this is enabled, values inside the PieChart are drawn in percent and, +     * not with their original value. Values provided for the ValueFormatter to, +     * format are then provided in percent., +     * , +     * @param enabled, +     */, +    public void setUsePercentValues(boolean enabled) {, +        mUsePercentValues = enabled;, +    }, +, +    public boolean isUsePercentValuesEnabled() {, +        return mUsePercentValues;, +    }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.PercentFormatter;, +        mChart.setValueFormatter(new PercentFormatter());, +            case R.id.actionTogglePercent:, +                mChart.setUsePercentValues(!mChart.isUsePercentValuesEnabled());, +                mChart.invalidate();, +                break;, +        PieDataSet dataSet = new PieDataSet(yVals1, "Election Results");, +        dataSet.setSliceSpace(3f);, +        dataSet.setColors(colors);, +        PieData data = new PieData(xVals, dataSet);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/PercentFormatter.java, +    public PercentFormatter() {, +        return mFormat.format(value) + " %";, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java, +        holder.chart.setValueFormatter(new PercentFormatter());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +    /** if true, the values inside the piechart are drawn as percent values */, +    private boolean mUsePercentValues = false;, +, +    /**, +     * If this is enabled, values inside the PieChart are drawn in percent and, +     * not with their original value. Values provided for the ValueFormatter to, +     * format are then provided in percent.]