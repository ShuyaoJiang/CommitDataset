[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            float yVal = dataSet.getYValForXIndex(xIndex);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            float yVal = dataSet.getYValForXIndex(xIndex);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +            float yVal = dataSet.getYValForXIndex(xIndex);, +            if (!Float.isNaN(yVal)) {, +        }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            float yVal = dataSet.getYValForXIndex(xIndex);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +            float yVal = dataSet.getYValForXIndex(xIndex);, +            if (!Float.isNaN(yVal)) {, +        }, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +            mYMax = -Float.MIN_VALUE;, +            if (mYMin == Float.MAX_VALUE) {, +                mYMin = 0.f;, +                mYMax = 0.f;, +            }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            float yVal = dataSet.getYValForXIndex(xIndex);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +            float yVal = dataSet.getYValForXIndex(xIndex);, +            if (!Float.isNaN(yVal)) {, +        }, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +            mYMax = -Float.MIN_VALUE;, +            if (mYMin == Float.MAX_VALUE) {, +                mYMin = 0.f;, +                mYMax = 0.f;, +            }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java, +        mYMax = -Float.MIN_VALUE;, +, +        if (mYMin == Float.MAX_VALUE) {, +            mYMin = 0.f;, +            mYMax = 0.f;, +        }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            float yVal = dataSet.getYValForXIndex(xIndex);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +            float yVal = dataSet.getYValForXIndex(xIndex);, +            if (!Float.isNaN(yVal)) {, +        }, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +            mYMax = -Float.MIN_VALUE;, +            if (mYMin == Float.MAX_VALUE) {, +                mYMin = 0.f;, +                mYMax = 0.f;, +            }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java, +        mYMax = -Float.MIN_VALUE;, +, +        if (mYMin == Float.MAX_VALUE) {, +            mYMin = 0.f;, +            mYMax = 0.f;, +        }, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java, +            float yValue = set.getYValForXIndex(xIndex);, +            if (yValue == Float.NaN), +            float y = yValue * mAnimator.getPhaseY(); // get, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            float yVal = dataSet.getYValForXIndex(xIndex);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +            float yVal = dataSet.getYValForXIndex(xIndex);, +            if (!Float.isNaN(yVal)) {, +        }, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +            mYMax = -Float.MIN_VALUE;, +            if (mYMin == Float.MAX_VALUE) {, +                mYMin = 0.f;, +                mYMax = 0.f;, +            }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java, +        mYMax = -Float.MIN_VALUE;, +, +        if (mYMin == Float.MAX_VALUE) {, +            mYMin = 0.f;, +            mYMax = 0.f;, +        }, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java, +            float yValue = set.getYValForXIndex(xIndex);, +            if (yValue == Float.NaN), +            float y = yValue * mAnimator.getPhaseY(); // get, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java, +            float yValue = set.getYValForXIndex(xIndex);, +            if (yValue == Float.NaN), +            float y = yValue * mAnimator.getPhaseY(); // get]