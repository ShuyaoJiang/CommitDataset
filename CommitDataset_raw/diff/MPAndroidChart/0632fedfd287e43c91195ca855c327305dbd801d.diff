[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +        xl.setGranularity(10f);, +        float barWidth = 9f;, +        float spaceForBar = 10f;, +            yVals1.add(new BarEntry(i * spaceForBar, val));, +            data.setBarWidth(barWidth);, +    @Override, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +        xl.setGranularity(10f);, +        float barWidth = 9f;, +        float spaceForBar = 10f;, +            yVals1.add(new BarEntry(i * spaceForBar, val));, +            data.setBarWidth(barWidth);, +    @Override, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java, +import com.github.mikephil.charting.utils.EntryXComparator;, +import java.util.Collections;, +        xl.setAxisMinValue(0f);, +        ArrayList<Entry> entries = new ArrayList<Entry>();, +            float xVal = (float) (Math.random() * range);, +            float yVal = (float) (Math.random() * range);, +            entries.add(new Entry(xVal, yVal));, +        // sort by x-value, +        Collections.sort(entries, new EntryXComparator());, +, +        LineDataSet set1 = new LineDataSet(entries, "DataSet 1");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +        xl.setGranularity(10f);, +        float barWidth = 9f;, +        float spaceForBar = 10f;, +            yVals1.add(new BarEntry(i * spaceForBar, val));, +            data.setBarWidth(barWidth);, +    @Override, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java, +import com.github.mikephil.charting.utils.EntryXComparator;, +import java.util.Collections;, +        xl.setAxisMinValue(0f);, +        ArrayList<Entry> entries = new ArrayList<Entry>();, +            float xVal = (float) (Math.random() * range);, +            float yVal = (float) (Math.random() * range);, +            entries.add(new Entry(xVal, yVal));, +        // sort by x-value, +        Collections.sort(entries, new EntryXComparator());, +, +        LineDataSet set1 = new LineDataSet(entries, "DataSet 1");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, +            entries.add(new BarEntry(i, (float) (Math.random() * 70) + 30));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +        xl.setGranularity(10f);, +        float barWidth = 9f;, +        float spaceForBar = 10f;, +            yVals1.add(new BarEntry(i * spaceForBar, val));, +            data.setBarWidth(barWidth);, +    @Override, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java, +import com.github.mikephil.charting.utils.EntryXComparator;, +import java.util.Collections;, +        xl.setAxisMinValue(0f);, +        ArrayList<Entry> entries = new ArrayList<Entry>();, +            float xVal = (float) (Math.random() * range);, +            float yVal = (float) (Math.random() * range);, +            entries.add(new Entry(xVal, yVal));, +        // sort by x-value, +        Collections.sort(entries, new EntryXComparator());, +, +        LineDataSet set1 = new LineDataSet(entries, "DataSet 1");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/ListViewBarChartActivity.java, +            entries.add(new BarEntry(i, (float) (Math.random() * 70) + 30));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +        xAxis.setAxisMinValue(0f);, +        xAxis.setAxisMaxValue(110f);, +        xAxis.setCenterAxisLabels(true);, +        xAxis.setLabelCount(12);, +        xAxis.setGranularity(10f);, +        xAxis.setValueFormatter(new AxisValueFormatter() {, +, +            private DecimalFormat format = new DecimalFormat("###");, +, +            @Override, +            public String getFormattedValue(float value, AxisBase axis) {, +                return format.format(value) + "-" + format.format(value + 10);, +            }, +, +            @Override, +            public int getDecimalDigits() {, +                return 0;, +            }, +        });, +        yValues.add(new BarEntry(5, new float[]{ -10, 10 }));, +        yValues.add(new BarEntry(15, new float[]{ -12, 13 }));, +        yValues.add(new BarEntry(25, new float[]{ -15, 15 }));, +        yValues.add(new BarEntry(35, new float[]{ -17, 17 }));, +        yValues.add(new BarEntry(45, new float[]{ -19, 20 }));, +        yValues.add(new BarEntry(55, new float[]{ -19, 19 }));, +        yValues.add(new BarEntry(65, new float[]{ -16, 16 }));, +        yValues.add(new BarEntry(75, new float[]{ -13, 14 }));, +        yValues.add(new BarEntry(85, new float[]{ -10, 11 }));, +        yValues.add(new BarEntry(95, new float[]{ -5, 6 }));, +        yValues.add(new BarEntry(105, new float[]{ -1, 2 }));, +        data.setBarWidth(8.5f);]