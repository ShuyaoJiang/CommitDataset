[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        // l.setExtra(ColorTemplate.VORDIPLOM_COLORS, new String[] { "abc",, +        // "def", "ghj", "ikl", "mno" });, +        // l.setCustom(ColorTemplate.VORDIPLOM_COLORS, new String[] { "abc",, +        // "def", "ghj", "ikl", "mno" });, +        Log.i("x-index",, +                "low: " + mChart.getLowestVisibleXIndex() + ", high: ", +                        + mChart.getHighestVisibleXIndex());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        // l.setExtra(ColorTemplate.VORDIPLOM_COLORS, new String[] { "abc",, +        // "def", "ghj", "ikl", "mno" });, +        // l.setCustom(ColorTemplate.VORDIPLOM_COLORS, new String[] { "abc",, +        // "def", "ghj", "ikl", "mno" });, +        Log.i("x-index",, +                "low: " + mChart.getLowestVisibleXIndex() + ", high: ", +                        + mChart.getHighestVisibleXIndex());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        mChart.setDragDecelerationFrictionCoef(0.9f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        // l.setExtra(ColorTemplate.VORDIPLOM_COLORS, new String[] { "abc",, +        // "def", "ghj", "ikl", "mno" });, +        // l.setCustom(ColorTemplate.VORDIPLOM_COLORS, new String[] { "abc",, +        // "def", "ghj", "ikl", "mno" });, +        Log.i("x-index",, +                "low: " + mChart.getLowestVisibleXIndex() + ", high: ", +                        + mChart.getHighestVisibleXIndex());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        mChart.setDragDecelerationFrictionCoef(0.9f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        if (mLegend != null), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        // l.setExtra(ColorTemplate.VORDIPLOM_COLORS, new String[] { "abc",, +        // "def", "ghj", "ikl", "mno" });, +        // l.setCustom(ColorTemplate.VORDIPLOM_COLORS, new String[] { "abc",, +        // "def", "ghj", "ikl", "mno" });, +        Log.i("x-index",, +                "low: " + mChart.getLowestVisibleXIndex() + ", high: ", +                        + mChart.getHighestVisibleXIndex());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        mChart.setDragDecelerationFrictionCoef(0.9f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        if (mLegend != null), +++ b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java, +import com.github.mikephil.charting.utils.ColorTemplate;, +     * Colors and labels that will be appended to the end of the auto calculated, +     * colors and labels arrays after calculating the legend. (if the legend has, +     * already been calculated, you will need to call notifyDataSetChanged() to, +     * let the changes take effect), +    public void setExtra(List<Integer> colors, List<String> labels) {, +        this.mExtraColors = Utils.convertIntegers(colors);, +        this.mExtraLabels = Utils.convertStrings(labels);, +    }, +, +    /**, +     * Colors and labels that will be appended to the end of the auto calculated, +     * colors and labels arrays after calculating the legend. (if the legend has, +     * already been calculated, you will need to call notifyDataSetChanged() to, +     * let the changes take effect), +     */, +    public void setExtra(int[] colors, String[] labels) {, +        this.mExtraColors = colors;, +     * index. * A null label will start a group. * A ColorTemplate.COLOR_SKIP, +     * color will avoid drawing a form This will disable the feature that, +     * automatically calculates the legend labels and colors from the datasets., +     * Call resetCustom() to re-enable automatic calculation (and then, +, +        if (colors.length != labels.length) {, +            throw new IllegalArgumentException(, +                    "colors array and labels array need to be of same size");, +        }, +, +     * index. * A null label will start a group. * A ColorTemplate.COLOR_SKIP, +     * color will avoid drawing a form This will disable the feature that, +     * automatically calculates the legend labels and colors from the datasets., +     * Call resetCustom() to re-enable automatic calculation (and then, +, +        if (colors.size() != labels.size()) {, +            throw new IllegalArgumentException(, +                    "colors array and labels array need to be of same size");, +        }, +, +                if (mColors[i] != ColorTemplate.COLOR_SKIP), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        // l.setExtra(ColorTemplate.VORDIPLOM_COLORS, new String[] { "abc",, +        // "def", "ghj", "ikl", "mno" });, +        // l.setCustom(ColorTemplate.VORDIPLOM_COLORS, new String[] { "abc",, +        // "def", "ghj", "ikl", "mno" });, +        Log.i("x-index",, +                "low: " + mChart.getLowestVisibleXIndex() + ", high: ", +                        + mChart.getHighestVisibleXIndex());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        mChart.setDragDecelerationFrictionCoef(0.9f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        if (mLegend != null), +++ b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java, +import com.github.mikephil.charting.utils.ColorTemplate;, +     * Colors and labels that will be appended to the end of the auto calculated, +     * colors and labels arrays after calculating the legend. (if the legend has, +     * already been calculated, you will need to call notifyDataSetChanged() to, +     * let the changes take effect)]