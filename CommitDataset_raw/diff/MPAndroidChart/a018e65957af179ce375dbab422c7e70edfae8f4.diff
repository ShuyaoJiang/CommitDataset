[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +            mChart.setVisibleXRangeMaximum(6);, +            mChart.setVisibleYRangeMaximum(15, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +            mChart.setVisibleXRangeMaximum(6);, +            mChart.setVisibleYRangeMaximum(15, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +//        set1.setVisible(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +            mChart.setVisibleXRangeMaximum(6);, +            mChart.setVisibleYRangeMaximum(15, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +//        set1.setVisible(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, +            mChart.setVisibleXRangeMaximum(120);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +            mChart.setVisibleXRangeMaximum(6);, +            mChart.setVisibleYRangeMaximum(15, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +//        set1.setVisible(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, +            mChart.setVisibleXRangeMaximum(120);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +     * Sets the minimum scale factor value to which can be zoomed out. 1f =, +     * fitScreen, +     * visible at once (no further zooming out allowed). If this is e.g. set to, +     * 10, no more than 10 values on the x-axis can be viewed at once without, +     * scrolling., +     * @param maxXRange The maximum visible range of x-values., +    public void setVisibleXRangeMaximum(float maxXRange) {, +        float xScale = mDeltaX / (maxXRange);, +        mViewPortHandler.setMinimumScaleX(xScale);, +     * Sets the size of the area (range on the x-axis) that should be minimum, +     * visible at once (no further zooming in allowed). If this is e.g. set to, +     * 10, no more than 10 values on the x-axis can be viewed at once without, +     * scrolling., +     * , +     * @param minXRange The minimum visible range of x-values., +    public void setVisibleXRangeMinimum(float minXRange) {, +        float xScale = mDeltaX / (minXRange);, +        mViewPortHandler.setMaximumScaleX(xScale);, +    }, +, +    /**, +     * Limits the maximum and minimum value count that can be visible by, +     * pinching and zooming. e.g. minRange=10, maxRange=100 no less than 10, +     * values and no more that 100 values can be viewed at once without, +     * scrolling, +     * , +     * @param minXRange, +     * @param maxXRange, +     */, +    public void setVisibleXRange(float minXRange, float maxXRange) {, +        float maxScale = mDeltaX / minXRange;, +        float minScale = mDeltaX / maxXRange;, +        mViewPortHandler.setMinMaxScaleX(minScale, maxScale);, +     * @param maxYRange the maximum visible range on the y-axis, +    public void setVisibleYRangeMaximum(float maxYRange, AxisDependency axis) {, +        float yScale = getDeltaY(axis) / maxYRange;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +            mChart.setVisibleXRangeMaximum(6);, +            mChart.setVisibleYRangeMaximum(15, AxisDependency.LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +//        set1.setVisible(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, +            mChart.setVisibleXRangeMaximum(120);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +     * Sets the minimum scale factor value to which can be zoomed out. 1f =, +     * fitScreen, +     * visible at once (no further zooming out allowed). If this is e.g. set to, +     * 10, no more than 10 values on the x-axis can be viewed at once without, +     * scrolling., +     * @param maxXRange The maximum visible range of x-values., +    public void setVisibleXRangeMaximum(float maxXRange) {, +        float xScale = mDeltaX / (maxXRange);, +        mViewPortHandler.setMinimumScaleX(xScale);, +     * Sets the size of the area (range on the x-axis) that should be minimum, +     * visible at once (no further zooming in allowed). If this is e.g. set to, +     * 10, no more than 10 values on the x-axis can be viewed at once without, +     * scrolling., +     * , +     * @param minXRange The minimum visible range of x-values., +    public void setVisibleXRangeMinimum(float minXRange) {, +        float xScale = mDeltaX / (minXRange);, +        mViewPortHandler.setMaximumScaleX(xScale);, +    }, +, +    /**, +     * Limits the maximum and minimum value count that can be visible by, +     * pinching and zooming. e.g. minRange=10, maxRange=100 no less than 10, +     * values and no more that 100 values can be viewed at once without, +     * scrolling, +     * , +     * @param minXRange, +     * @param maxXRange, +     */, +    public void setVisibleXRange(float minXRange, float maxXRange) {, +        float maxScale = mDeltaX / minXRange;, +        float minScale = mDeltaX / maxXRange;, +        mViewPortHandler.setMinMaxScaleX(minScale, maxScale);]