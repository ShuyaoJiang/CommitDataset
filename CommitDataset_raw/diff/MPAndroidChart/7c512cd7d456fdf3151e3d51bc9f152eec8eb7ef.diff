[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +//                mHighlightPaint = p;, +//                mLimitLinePaint = p;, +//                return mHighlightPaint;, +//                return mLimitLinePaint;, +        for (int i = 0; i < getChildCount(); i++) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +//                mHighlightPaint = p;, +//                mLimitLinePaint = p;, +//                return mHighlightPaint;, +//                return mLimitLinePaint;, +        for (int i = 0; i < getChildCount(); i++) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +    protected void calculateOffsets() {, +        super.calculateOffsets();, +//    @Override, +//    protected void prepareContentRect() {, +//        super.prepareContentRect();, +//, +//        // prevent nullpointer when no data set, +//        if (mDataNotSet), +//            return;, +//, +//        float diameter = getDiameter();, +//        float boxSize = diameter / 2f;, +//, +//        PointF c = getCenterOffsets();, +//, +//        // create the circle box that will contain the pie-chart (the bounds of, +//        // the pie-chart), +//        mCircleBox.set(c.x - boxSize, c.y - boxSize,, +//                c.x + boxSize, c.y + boxSize);, +//    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +//                mHighlightPaint = p;, +//                mLimitLinePaint = p;, +//                return mHighlightPaint;, +//                return mLimitLinePaint;, +        for (int i = 0; i < getChildCount(); i++) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +    protected void calculateOffsets() {, +        super.calculateOffsets();, +//    @Override, +//    protected void prepareContentRect() {, +//        super.prepareContentRect();, +//, +//        // prevent nullpointer when no data set, +//        if (mDataNotSet), +//            return;, +//, +//        float diameter = getDiameter();, +//        float boxSize = diameter / 2f;, +//, +//        PointF c = getCenterOffsets();, +//, +//        // create the circle box that will contain the pie-chart (the bounds of, +//        // the pie-chart), +//        mCircleBox.set(c.x - boxSize, c.y - boxSize,, +//                c.x + boxSize, c.y + boxSize);, +//    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import android.graphics.RectF;, +                float legendHeight = mLegend.getFullHeight(mLegendLabelPaint);// +, +                                                                              // mOffsetTop;, +        float offsetLeft = Math.max(min, getRequiredBaseOffset());, +        float offsetTop = Math.max(min, legendTop);, +        float offsetRight = Math.max(min, legendRight);, +        float offsetBottom = Math.max(min, Math.max(getRequiredBaseOffset(), legendBottom));, +, +        mViewPortHandler.restrainViewPort(offsetLeft, offsetTop, offsetRight, offsetBottom);, +        // prepareContentRect();, +        //, +        // float scaleX = (float) ((getWidth() - mOffsetLeft - mOffsetRight) /, +        // mDeltaX);, +        // float scaleY = (float) ((getHeight() - mOffsetBottom - mOffsetTop) /, +        // mDeltaY);, +        //, +        // Matrix val = new Matrix();, +        // val.postTranslate(0, -mYChartMin);, +        // val.postScale(scaleX, -scaleY);, +        //, +        // mTrans.getValueMatrix().set(val);, +        //, +        // Matrix offset = new Matrix();, +        // offset.postTranslate(mOffsetLeft, getHeight() - mOffsetBottom);, +        //, +        // mTrans.getOffsetMatrix().set(offset);, +        RectF content = mViewPortHandler.getContentRect();, +        return Math.min(content.width(), content.height());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +//                mHighlightPaint = p;, +//                mLimitLinePaint = p;, +//                return mHighlightPaint;, +//                return mLimitLinePaint;, +        for (int i = 0; i < getChildCount(); i++) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +    protected void calculateOffsets() {, +        super.calculateOffsets();]