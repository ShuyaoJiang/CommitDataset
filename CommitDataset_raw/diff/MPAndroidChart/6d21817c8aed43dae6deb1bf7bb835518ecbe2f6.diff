[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.utils.MPPointD;, +            MPPointD origin = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +            MPPointD.recycleInstance(origin);, +            MPPointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +            MPPointD.recycleInstance(bounds);, +            MPPointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +            MPPointD.recycleInstance(bounds);, +     * Returns a recyclable MPPointD instance, +     * (encapsulated in a MPPointD). This method transforms pixel coordinates to, +    public MPPointD getValuesByTouchPoint(float x, float y, AxisDependency axis) {, +        MPPointD result = MPPointD.getInstance(0,0);, +    public void getValuesByTouchPoint(float x, float y, AxisDependency axis, MPPointD outputPoint){, +     * Returns a recyclable MPPointD instance, +    public MPPointD getPixelsForValues(float x, float y, AxisDependency axis) {, +    MPPointD pointForGetYValueByTouchPoint = MPPointD.getInstance(0,0);, +    protected MPPointD posForGetLowestVisibleX = MPPointD.getInstance(0,0);, +    protected MPPointD posForGetHighestVisibleX = MPPointD.getInstance(0,0);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.utils.MPPointD;, +            MPPointD origin = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +            MPPointD.recycleInstance(origin);, +            MPPointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +            MPPointD.recycleInstance(bounds);, +            MPPointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +            MPPointD.recycleInstance(bounds);, +     * Returns a recyclable MPPointD instance, +     * (encapsulated in a MPPointD). This method transforms pixel coordinates to, +    public MPPointD getValuesByTouchPoint(float x, float y, AxisDependency axis) {, +        MPPointD result = MPPointD.getInstance(0,0);, +    public void getValuesByTouchPoint(float x, float y, AxisDependency axis, MPPointD outputPoint){, +     * Returns a recyclable MPPointD instance, +    public MPPointD getPixelsForValues(float x, float y, AxisDependency axis) {, +    MPPointD pointForGetYValueByTouchPoint = MPPointD.getInstance(0,0);, +    protected MPPointD posForGetLowestVisibleX = MPPointD.getInstance(0,0);, +    protected MPPointD posForGetHighestVisibleX = MPPointD.getInstance(0,0);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +import com.github.mikephil.charting.utils.MPPointD;, +        MPPointD pos = getValsForTouch(x, y);, +        MPPointD.recycleInstance(pos);, +                MPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelsForValues(high.getX(), ranges[stackIndex].to);, +                MPPointD.recycleInstance(pixels);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.utils.MPPointD;, +            MPPointD origin = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +            MPPointD.recycleInstance(origin);, +            MPPointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +            MPPointD.recycleInstance(bounds);, +            MPPointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +            MPPointD.recycleInstance(bounds);, +     * Returns a recyclable MPPointD instance, +     * (encapsulated in a MPPointD). This method transforms pixel coordinates to, +    public MPPointD getValuesByTouchPoint(float x, float y, AxisDependency axis) {, +        MPPointD result = MPPointD.getInstance(0,0);, +    public void getValuesByTouchPoint(float x, float y, AxisDependency axis, MPPointD outputPoint){, +     * Returns a recyclable MPPointD instance, +    public MPPointD getPixelsForValues(float x, float y, AxisDependency axis) {, +    MPPointD pointForGetYValueByTouchPoint = MPPointD.getInstance(0,0);, +    protected MPPointD posForGetLowestVisibleX = MPPointD.getInstance(0,0);, +    protected MPPointD posForGetHighestVisibleX = MPPointD.getInstance(0,0);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +import com.github.mikephil.charting.utils.MPPointD;, +        MPPointD pos = getValsForTouch(x, y);, +        MPPointD.recycleInstance(pos);, +                MPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelsForValues(high.getX(), ranges[stackIndex].to);, +                MPPointD.recycleInstance(pixels);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +import com.github.mikephil.charting.utils.MPPointD;, +        MPPointD pos = getValsForTouch(x, y);, +        MPPointD.recycleInstance(pos);, +     * Returns a recyclable MPPointD instance., +    protected MPPointD getValsForTouch(float x, float y) {, +        MPPointD pos = mChart.getTransformer(YAxis.AxisDependency.LEFT).getValuesByTouchPoint(x, y);, +        MPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelsForValues(e.getX(), e.getY());, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.utils.MPPointD;, +            MPPointD origin = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +            MPPointD.recycleInstance(origin);, +            MPPointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +            MPPointD.recycleInstance(bounds);, +            MPPointD bounds = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +            MPPointD.recycleInstance(bounds);, +     * Returns a recyclable MPPointD instance, +     * (encapsulated in a MPPointD). This method transforms pixel coordinates to, +    public MPPointD getValuesByTouchPoint(float x, float y, AxisDependency axis) {, +        MPPointD result = MPPointD.getInstance(0,0);, +    public void getValuesByTouchPoint(float x, float y, AxisDependency axis, MPPointD outputPoint){, +     * Returns a recyclable MPPointD instance, +    public MPPointD getPixelsForValues(float x, float y, AxisDependency axis) {, +    MPPointD pointForGetYValueByTouchPoint = MPPointD.getInstance(0,0);, +    protected MPPointD posForGetLowestVisibleX = MPPointD.getInstance(0,0);, +    protected MPPointD posForGetHighestVisibleX = MPPointD.getInstance(0,0);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +import com.github.mikephil.charting.utils.MPPointD;, +        MPPointD pos = getValsForTouch(x, y);, +        MPPointD.recycleInstance(pos);, +                MPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelsForValues(high.getX(), ranges[stackIndex].to);, +                MPPointD.recycleInstance(pixels);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +import com.github.mikephil.charting.utils.MPPointD;]