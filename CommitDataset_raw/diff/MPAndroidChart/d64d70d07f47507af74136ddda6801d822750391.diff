[+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmScatterDataSet.java, +    /**, +     * the size the scattershape will have, in screen pixels, +     */, +, +    /**, +     * Constructor for creating a LineDataSet with realm data., +     *, +     * @param result       the queried results from the realm database, +     * @param yValuesField the name of the field in your data object that represents the y-value, +     */, +    public RealmScatterDataSet(RealmResults<T> result, String yValuesField) {, +        super(result, yValuesField);, +, +        build(this.results);, +        calcMinMax(0, results.size());, +    }, +, +    /**, +     * Constructor for creating a LineDataSet with realm data., +     *, +     * @param result       the queried results from the realm database, +     * @param yValuesField the name of the field in your data object that represents the y-value, +     * @param xIndexField  the name of the field in your data object that represents the x-index, +     */, +        if (mIndexField == null) { // x-index not available, +, +            int xIndex = 0;, +, +            for (T object : results) {, +, +                DynamicRealmObject dynamicObject = new DynamicRealmObject(object);, +                mValues.add(new Entry(dynamicObject.getFloat(mValuesField), xIndex));, +                xIndex++;, +            }, +, +        } else {, +, +    }]