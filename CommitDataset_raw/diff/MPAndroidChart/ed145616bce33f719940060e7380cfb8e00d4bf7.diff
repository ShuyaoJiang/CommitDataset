[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +//    protected float getPositiveYOffset(boolean drawAboveValueBar), +//    {, +//        return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,, +//                "8") * 1.5f);, +//    }, +//, +//    protected float getNegativeYOffset(boolean drawAboveValueBar), +//    {, +//        return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils, +//                .convertDpToPixel(5));, +//    }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +//    protected float getPositiveYOffset(boolean drawAboveValueBar), +//    {, +//        return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,, +//                "8") * 1.5f);, +//    }, +//, +//    protected float getNegativeYOffset(boolean drawAboveValueBar), +//    {, +//        return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils, +//                .convertDpToPixel(5));, +//    }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.data.BarData;, +                // calculate the maximum y-label width (including eventual, +                // offsets), +                // calculate the maximum y-label width (including eventual, +                // offsets), +    @Override, +    protected float[] getMarkerPosition(Entry e, int dataSetIndex) {, +        float xPos = e.getXIndex();, +, +        // make sure the marker is in the center of the bars in BarChart and, +        // CandleStickChart, +        if (this instanceof CandleStickChart), +            xPos += 0.5f;, +, +        else if (this instanceof BarChart) {, +, +            BarData bd = (BarData) mData;, +            float space = bd.getGroupSpace();, +            float j = mData.getDataSetByIndex(dataSetIndex), +                    .getEntryPosition(e);, +, +            float x = (j * (mData.getDataSetCount() - 1)) + dataSetIndex + space * j + space, +                    / 2f + 0.5f;, +, +            xPos += x;, +        }, +, +        // position of the marker depends on selected value index and value, +        float[] pts = new float[] {, +                xPos, e.getVal() * mAnimator.getPhaseY(), +        };, +, +        getTransformer(mData.getDataSetByIndex(dataSetIndex).getAxisDependency()), +                .pointValuesToPixel(pts);, +, +        return pts;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +//    protected float getPositiveYOffset(boolean drawAboveValueBar), +//    {, +//        return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,, +//                "8") * 1.5f);, +//    }, +//, +//    protected float getNegativeYOffset(boolean drawAboveValueBar), +//    {, +//        return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils, +//                .convertDpToPixel(5));, +//    }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.data.BarData;, +                // calculate the maximum y-label width (including eventual, +                // offsets), +                // calculate the maximum y-label width (including eventual, +                // offsets), +    @Override, +    protected float[] getMarkerPosition(Entry e, int dataSetIndex) {, +        float xPos = e.getXIndex();, +, +        // make sure the marker is in the center of the bars in BarChart and, +        // CandleStickChart, +        if (this instanceof CandleStickChart), +            xPos += 0.5f;, +, +        else if (this instanceof BarChart) {, +, +            BarData bd = (BarData) mData;, +            float space = bd.getGroupSpace();, +            float j = mData.getDataSetByIndex(dataSetIndex), +                    .getEntryPosition(e);, +, +            float x = (j * (mData.getDataSetCount() - 1)) + dataSetIndex + space * j + space, +                    / 2f + 0.5f;, +, +            xPos += x;, +        }]