[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, +                for (IDataSet<?> set : mChart.getData().getDataSets()), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, +                for (IDataSet<?> set : mChart.getData().getDataSets()), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IRadarDataSet;, +                for (IDataSet<?> set : mChart.getData().getDataSets()), +                ArrayList<IRadarDataSet> sets = (ArrayList<IRadarDataSet>) mChart.getData(), +                for (IRadarDataSet set : sets) {, +        ArrayList<IRadarDataSet> sets = new ArrayList<IRadarDataSet>();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, +                for (IDataSet<?> set : mChart.getData().getDataSets()), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IRadarDataSet;, +                for (IDataSet<?> set : mChart.getData().getDataSets()), +                ArrayList<IRadarDataSet> sets = (ArrayList<IRadarDataSet>) mChart.getData(), +                for (IRadarDataSet set : sets) {, +        ArrayList<IRadarDataSet> sets = new ArrayList<IRadarDataSet>();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java, +    @Override, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, +                for (IDataSet<?> set : mChart.getData().getDataSets()), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IRadarDataSet;, +                for (IDataSet<?> set : mChart.getData().getDataSets()), +                ArrayList<IRadarDataSet> sets = (ArrayList<IRadarDataSet>) mChart.getData(), +                for (IRadarDataSet set : sets) {, +        ArrayList<IRadarDataSet> sets = new ArrayList<IRadarDataSet>();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java, +    public void setDrawFilled(boolean enabled) {, +, +    }, +, +    @Override, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, +                for (IDataSet<?> set : mChart.getData().getDataSets()), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IDataSet;, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IRadarDataSet;, +                for (IDataSet<?> set : mChart.getData().getDataSets()), +                ArrayList<IRadarDataSet> sets = (ArrayList<IRadarDataSet>) mChart.getData(), +                for (IRadarDataSet set : sets) {, +        ArrayList<IRadarDataSet> sets = new ArrayList<IRadarDataSet>();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/LineRadarDataSet.java, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/RealmLineDataSet.java, +    public void setDrawFilled(boolean enabled) {, +, +    }, +, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/ILineRadarDataSet.java, +, +    /**, +     * Set to true if the DataSet should be drawn filled (surface), and not just, +     * as a line, disabling this will give great performance boost! default:, +     * false, +     *, +     * @param enabled, +     */, +    void setDrawFilled(boolean enabled);]