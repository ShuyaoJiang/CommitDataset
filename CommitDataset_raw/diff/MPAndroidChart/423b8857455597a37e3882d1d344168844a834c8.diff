[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +    protected SelectionDetail getDetails(IDataSet set, int dataSetIndex, float xVal, DataSet.Rounding rounding) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +    protected SelectionDetail getDetails(IDataSet set, int dataSetIndex, float xVal, DataSet.Rounding rounding) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java, +import com.github.mikephil.charting.data.DataSet;, +     * Returns a list of SelectionDetail object corresponding to the given xValue., +            for (int j = 0, dataSetCount = dataObjects.get(i).getDataSetCount(); j < dataSetCount; j++) {, +                // don't include datasets that cannot be highlighted, +                SelectionDetail s1 = getDetails(dataSet, j, xVal, DataSet.Rounding.UP);, +                s1.dataIndex = i;, +                vals.add(s1);, +                SelectionDetail s2 = getDetails(dataSet, j, xVal, DataSet.Rounding.DOWN);, +                s2.dataIndex = i;, +                vals.add(s2);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +    protected SelectionDetail getDetails(IDataSet set, int dataSetIndex, float xVal, DataSet.Rounding rounding) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java, +import com.github.mikephil.charting.data.DataSet;, +     * Returns a list of SelectionDetail object corresponding to the given xValue., +            for (int j = 0, dataSetCount = dataObjects.get(i).getDataSetCount(); j < dataSetCount; j++) {, +                // don't include datasets that cannot be highlighted, +                SelectionDetail s1 = getDetails(dataSet, j, xVal, DataSet.Rounding.UP);, +                s1.dataIndex = i;, +                vals.add(s1);, +                SelectionDetail s2 = getDetails(dataSet, j, xVal, DataSet.Rounding.DOWN);, +                s2.dataIndex = i;, +                vals.add(s2);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java, +                    && this.mStackIndex == h.mStackIndex && this.mDataIndex == h.mDataIndex), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +    protected SelectionDetail getDetails(IDataSet set, int dataSetIndex, float xVal, DataSet.Rounding rounding) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java, +import com.github.mikephil.charting.data.DataSet;, +     * Returns a list of SelectionDetail object corresponding to the given xValue., +            for (int j = 0, dataSetCount = dataObjects.get(i).getDataSetCount(); j < dataSetCount; j++) {, +                // don't include datasets that cannot be highlighted, +                SelectionDetail s1 = getDetails(dataSet, j, xVal, DataSet.Rounding.UP);, +                s1.dataIndex = i;, +                vals.add(s1);, +                SelectionDetail s2 = getDetails(dataSet, j, xVal, DataSet.Rounding.DOWN);, +                s2.dataIndex = i;, +                vals.add(s2);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/Highlight.java, +                    && this.mStackIndex == h.mStackIndex && this.mDataIndex == h.mDataIndex), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/CombinedChartRenderer.java, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;]