[+++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +		ArrayList<Series> yVals1 = new ArrayList<Series>();, +//		ArrayList<Series> yVals2 = new ArrayList<Series>();, +			yVals1.add(new Series(val, i));, +//		for (int i = mSeekBarX.getProgress() / 2; i < mSeekBarX.getProgress(); i++) {, +//            float mult = (mSeekBarY.getProgress() + 1);, +//            float val = (float) (Math.random() * mult * 0.1) + 3;// + (float) ((mult * 0.1) / 10);, +//            yVals2.add(new Series(val, i));, +//        }, +, +		DataSet set1 = new DataSet(yVals1, 0);, +//		DataSet set2 = new DataSet(yVals2, 1);, +        dataSets.add(set1);, +//        dataSets.add(set2);, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +		ArrayList<Series> yVals1 = new ArrayList<Series>();, +//		ArrayList<Series> yVals2 = new ArrayList<Series>();, +			yVals1.add(new Series(val, i));, +//		for (int i = mSeekBarX.getProgress() / 2; i < mSeekBarX.getProgress(); i++) {, +//            float mult = (mSeekBarY.getProgress() + 1);, +//            float val = (float) (Math.random() * mult * 0.1) + 3;// + (float) ((mult * 0.1) / 10);, +//            yVals2.add(new Series(val, i));, +//        }, +, +		DataSet set1 = new DataSet(yVals1, 0);, +//		DataSet set2 = new DataSet(yVals2, 1);, +        dataSets.add(set1);, +//        dataSets.add(set2);, +++ b/MPChartLib/src/com/github/mikephil/charting/BarChart.java, +                    float y = getYValueByDataSetIndex(index, mIndicesToHightlight[i].getDataSetIndex());, +            // get the color for the dataset, +            Paint paint = mDrawPaints[i % mDrawPaints.length];, +, +                // if only one DataSet exists, switch colors inside dataset, +                if(mData.getDataSetCount() == 1) paint = mDrawPaints[j % mDrawPaints.length];, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +		ArrayList<Series> yVals1 = new ArrayList<Series>();, +//		ArrayList<Series> yVals2 = new ArrayList<Series>();, +			yVals1.add(new Series(val, i));, +//		for (int i = mSeekBarX.getProgress() / 2; i < mSeekBarX.getProgress(); i++) {, +//            float mult = (mSeekBarY.getProgress() + 1);, +//            float val = (float) (Math.random() * mult * 0.1) + 3;// + (float) ((mult * 0.1) / 10);, +//            yVals2.add(new Series(val, i));, +//        }, +, +		DataSet set1 = new DataSet(yVals1, 0);, +//		DataSet set2 = new DataSet(yVals2, 1);, +        dataSets.add(set1);, +//        dataSets.add(set2);, +++ b/MPChartLib/src/com/github/mikephil/charting/BarChart.java, +                    float y = getYValueByDataSetIndex(index, mIndicesToHightlight[i].getDataSetIndex());, +            // get the color for the dataset, +            Paint paint = mDrawPaints[i % mDrawPaints.length];, +, +                // if only one DataSet exists, switch colors inside dataset, +                if(mData.getDataSetCount() == 1) paint = mDrawPaints[j % mDrawPaints.length];, +++ b/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java, +        ArrayList<SelInfo> valsAtIndex = getYValsAtIndex(xIndex);, +    private int getClosestDataSetIndex(ArrayList<SelInfo> valsAtIndex, float val) {, +        for (int i = 0; i < valsAtIndex.size(); i++) {, +            float cdistance = Math.abs((float) valsAtIndex.get(i).val - val);, +                index = valsAtIndex.get(i).dataSetIndex;, +        Log.i(LOG_TAG, "Closest DataSet index: " + index);, +++ b/MPChartExample/src/com/example/mpchartexample/BarChartActivity.java, +		ArrayList<Series> yVals1 = new ArrayList<Series>();, +//		ArrayList<Series> yVals2 = new ArrayList<Series>();, +			yVals1.add(new Series(val, i));, +//		for (int i = mSeekBarX.getProgress() / 2; i < mSeekBarX.getProgress(); i++) {, +//            float mult = (mSeekBarY.getProgress() + 1);, +//            float val = (float) (Math.random() * mult * 0.1) + 3;// + (float) ((mult * 0.1) / 10);, +//            yVals2.add(new Series(val, i));, +//        }, +, +		DataSet set1 = new DataSet(yVals1, 0);, +//		DataSet set2 = new DataSet(yVals2, 1);, +        dataSets.add(set1);, +//        dataSets.add(set2);, +++ b/MPChartLib/src/com/github/mikephil/charting/BarChart.java, +                    float y = getYValueByDataSetIndex(index, mIndicesToHightlight[i].getDataSetIndex());, +            // get the color for the dataset, +            Paint paint = mDrawPaints[i % mDrawPaints.length];, +, +                // if only one DataSet exists, switch colors inside dataset, +                if(mData.getDataSetCount() == 1) paint = mDrawPaints[j % mDrawPaints.length];, +++ b/MPChartLib/src/com/github/mikephil/charting/BarLineChartBase.java, +        ArrayList<SelInfo> valsAtIndex = getYValsAtIndex(xIndex);, +    private int getClosestDataSetIndex(ArrayList<SelInfo> valsAtIndex, float val) {, +        for (int i = 0; i < valsAtIndex.size(); i++) {, +            float cdistance = Math.abs((float) valsAtIndex.get(i).val - val);, +                index = valsAtIndex.get(i).dataSetIndex;, +        Log.i(LOG_TAG, "Closest DataSet index: " + index);, +++ b/MPChartLib/src/com/github/mikephil/charting/Chart.java, +    public float getYValueByDataSetIndex(int xIndex, int dataSet) {, +        return set.getYValForXIndex(xIndex);, +     * Returns an array of SelInfo objects for the given x-index. The SelInfo, +     * objects give information about the value at the selected index and the, +     * DataSet it belongs to. INFORMATION: This method does calculations at, +     * runtime. Do not over-use in performance critical situations., +    protected ArrayList<SelInfo> getYValsAtIndex(int xIndex) {, +        ArrayList<SelInfo> vals = new ArrayList<SelInfo>();]