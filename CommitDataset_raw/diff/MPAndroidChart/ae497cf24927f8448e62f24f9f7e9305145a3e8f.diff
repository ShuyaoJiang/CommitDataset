[+++ b/README.md, +For using a <code>LineChart, BarChart, ScatterChart or PieChart </code>, define it in .xml:, +or create it in code (and then **add it to a layout**):, +method. The baseclass <code>ChartData</code> class encapsulates all data and information that is needed for the chart during rendering. For each type of chart, a different subclass of `ChartData` (e.g. `LineData`) exists that should be used for setting data for the chart. In the constructor, you can hand over an <code>ArrayList<? extends DataSet></code> as the values to display, and an additional <code>ArrayList</code> of <code>String</code> that will describe the legend on the x-axis. Example with the class `LineData` (extends `ChartData`):, +    public LineData(ArrayList<String> xVals, ArrayList<LineDataSet> sets) { ... }, +So, what is a <code>DataSet</code> and why do you need it? That is actually pretty simple. One <code>DataSet</code> object represents a group of entries (datatype <code>Entry</code>) inside the chart that belong together. It is designed to **logically separate different groups of values in the chart**. For each type of chart, a differnt object that extends `DataSet` (e.g. `LineDataSet`) exists that allows specific styling. , +, +As an example, you might want to display the quarterly revenue of two different companies over one year in a `LineChart`. In that case, it would be recommended to create two different <code>LineDataSet</code> objects, each containing four values (one for each quarter). As an <code>ArrayList<String></code> to describe the legend on the x-axis, you would simply provide the four Strings "1.Q", "2.Q", "3.Q", "4.Q"., +So how to setup a <code>LineDataSet</code> object?, +    public LineDataSet(ArrayList<Entry> yVals, String label) { ... }, +When looking at the constructor, it is visible that the <code>LineDataSet</code> needs an <code>ArrayList</code> of type <code>Entry</code> and a `String` used to describe the `DataSet` and as a label used for the `Legend`. Furthermore this label can be used to find the `DataSet` amongst other `DataSet` objects in the `ChartData` object., +The <code>ArrayList</code> of type <code>Entry</code> encapsulates all values of the chart. A <code>Entry</code> object is an additional wrapper around a value and holds the value itself, and it's position on the x-axis (the index inside the <code>ArrayList</code> of <code>String</code> of the <code>LineData</code> object the value is mapped to):, +Now that we have our lists of <code>Entry</code> objects, the <code>LineDataSet</code> objects can be created:, +    LineDataSet setComp1 = new LineDataSet(valsComp1, "company 1");, +    LineDataSet setComp2 = new LineDataSet(valsComp2, "company 2");, +    ArrayList<LineDataSet> dataSets = new ArrayList<LineDataSet>();, +    LineData data = new LineData(xVals, dataSets);, +    mLineChart.setData(data);]