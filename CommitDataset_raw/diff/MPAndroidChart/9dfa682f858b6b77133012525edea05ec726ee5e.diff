[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +                mChart.notifyDataSetChanged();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +                mChart.notifyDataSetChanged();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +                mChart.notifyDataSetChanged();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +        , +        mChart.setDrawValueAboveBar(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +                mChart.notifyDataSetChanged();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +        , +        mChart.setDrawValueAboveBar(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java, +        while(index > stackIndex && index >= 0) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +                mChart.notifyDataSetChanged();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +        , +        mChart.setDrawValueAboveBar(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java, +        while(index > stackIndex && index >= 0) {, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java, +    /**, +     * Prepares a bar for being highlighted., +     * , +     * @param x the x-position, +     * @param y the y-position, +     * @param barspace the space between bars, +     * @param from, +     * @param trans, +     */, +    protected void prepareBarHighlight(float x, float y, float barspace, float from, Transformer trans) {, +, +        float barWidth = 0.5f;, +, +        float spaceHalf = barspace / 2f;, +        float left = x - barWidth + spaceHalf;, +        float right = x + barWidth - spaceHalf;, +        float top = y >= from ? y : from;, +        float bottom = y <= from ? y : from;, +, +        mBarRect.set(left, top, right, bottom);, +, +        trans.rectValueToPixel(mBarRect, mAnimator.getPhaseY());, +    }, +, +                                    valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset),, +                                    formatter);, +                boolean isStack = h.getStackIndex() < 0 ? false : true;, +                float y = isStack ? e.getVals()[h.getStackIndex()], +                        + e.getBelowSum(h.getStackIndex()) : e.getVal();, +                // this is where the bar starts, +                float from = isStack ? e.getBelowSum(h.getStackIndex()) : 0f;, +, +                prepareBarHighlight(x, y, set.getBarSpace(), from, trans);, +    public float[] getTransformedValues(Transformer trans, ArrayList<BarEntry> entries,, +            int dataSetIndex) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +                mChart.notifyDataSetChanged();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +        , +        mChart.setDrawValueAboveBar(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java, +        while(index > stackIndex && index >= 0) {, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java, +    /**, +     * Prepares a bar for being highlighted., +     * , +     * @param x the x-position, +     * @param y the y-position, +     * @param barspace the space between bars, +     * @param from, +     * @param trans, +     */, +    protected void prepareBarHighlight(float x, float y, float barspace, float from, Transformer trans) {, +, +        float barWidth = 0.5f;, +, +        float spaceHalf = barspace / 2f;, +        float left = x - barWidth + spaceHalf;, +        float right = x + barWidth - spaceHalf;, +        float top = y >= from ? y : from;, +        float bottom = y <= from ? y : from;, +, +        mBarRect.set(left, top, right, bottom);, +, +        trans.rectValueToPixel(mBarRect, mAnimator.getPhaseY());, +    }, +, +                                    valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset),, +                                    formatter);, +                boolean isStack = h.getStackIndex() < 0 ? false : true;, +                float y = isStack ? e.getVals()[h.getStackIndex()]]