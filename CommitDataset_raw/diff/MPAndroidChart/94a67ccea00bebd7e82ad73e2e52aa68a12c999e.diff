[+++ b/MPChartExample/build.gradle, +    compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.0.2@aar', +++ b/MPChartExample/build.gradle, +    compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.0.2@aar', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        mChart.centerViewToAnimated(e.getX(), e.getY(), mChart.getData().getDataSetByIndex(h.getDataSetIndex()), +                .getAxisDependency(), 500);, +        //mChart.zoomAndCenterAnimated(2.5f, 2.5f, e.getX(), e.getY(), mChart.getData().getDataSetByIndex(dataSetIndex), +        // .getAxisDependency(), 1000);, +        //mChart.zoomAndCenterAnimated(1.8f, 1.8f, e.getX(), e.getY(), mChart.getData().getDataSetByIndex(dataSetIndex), +        // .getAxisDependency(), 1000);, +++ b/MPChartExample/build.gradle, +    compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.0.2@aar', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        mChart.centerViewToAnimated(e.getX(), e.getY(), mChart.getData().getDataSetByIndex(h.getDataSetIndex()), +                .getAxisDependency(), 500);, +        //mChart.zoomAndCenterAnimated(2.5f, 2.5f, e.getX(), e.getY(), mChart.getData().getDataSetByIndex(dataSetIndex), +        // .getAxisDependency(), 1000);, +        //mChart.zoomAndCenterAnimated(1.8f, 1.8f, e.getX(), e.getY(), mChart.getData().getDataSetByIndex(dataSetIndex), +        // .getAxisDependency(), 1000);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java, +import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;, +import com.github.mikephil.charting.utils.ColorTemplate;, +    /**, +     * Drawing mode for this line dataset, +     **/, +    /**, +     * List representing all colors that are used for the circles, +     */, +    /**, +     * the color of the inner circles, +     */, +    /**, +     * the radius of the circle-shaped value indicators, +     */, +    /**, +     * the hole radius of the circle-shaped value indicators, +     */, +    /**, +     * sets the intensity of the cubic lines, +     */, +    /**, +     * the path effect of this DataSet that makes dashed lines possible, +     */, +    /**, +     * formatter for customizing the position of the fill-line, +     */, +    /**, +     * if true, drawing circles is enabled, +     */, +     * <p/>, +        return mCircleColors.get(index);, +++ b/MPChartExample/build.gradle, +    compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.0.2@aar', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        mChart.centerViewToAnimated(e.getX(), e.getY(), mChart.getData().getDataSetByIndex(h.getDataSetIndex()), +                .getAxisDependency(), 500);, +        //mChart.zoomAndCenterAnimated(2.5f, 2.5f, e.getX(), e.getY(), mChart.getData().getDataSetByIndex(dataSetIndex), +        // .getAxisDependency(), 1000);, +        //mChart.zoomAndCenterAnimated(1.8f, 1.8f, e.getX(), e.getY(), mChart.getData().getDataSetByIndex(dataSetIndex), +        // .getAxisDependency(), 1000);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/LineDataSet.java, +import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;, +import com.github.mikephil.charting.utils.ColorTemplate;, +    /**, +     * Drawing mode for this line dataset, +     **/, +    /**, +     * List representing all colors that are used for the circles, +     */, +    /**, +     * the color of the inner circles, +     */, +    /**, +     * the radius of the circle-shaped value indicators, +     */, +    /**, +     * the hole radius of the circle-shaped value indicators, +     */, +    /**, +     * sets the intensity of the cubic lines, +     */, +    /**, +     * the path effect of this DataSet that makes dashed lines possible, +     */, +    /**, +     * formatter for customizing the position of the fill-line, +     */, +    /**, +     * if true, drawing circles is enabled, +     */, +     * <p/>, +        return mCircleColors.get(index);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, +    public void initBuffers() { }, +    /**, +     * cache for the circle bitmaps of all datasets, +     */, +    /**, +     * buffer for drawing the circles]