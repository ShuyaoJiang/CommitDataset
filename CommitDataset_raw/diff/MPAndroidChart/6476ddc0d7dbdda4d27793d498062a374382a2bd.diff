[+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java, +, +    public RealmBarLineScatterCandleBubbleDataSet(RealmResults<T> results, String yValuesField) {, +        super(results, yValuesField);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java, +, +    public RealmBarLineScatterCandleBubbleDataSet(RealmResults<T> results, String yValuesField) {, +        super(results, yValuesField);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +, +    public RealmBaseDataSet(RealmResults<T> results, String yValuesField) {, +        this.results = results;, +        this.mValuesField = yValuesField;, +        this.mValues = new ArrayList<S>();, +        this.results.sort(mIndexField, true);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java, +, +    public RealmBarLineScatterCandleBubbleDataSet(RealmResults<T> results, String yValuesField) {, +        super(results, yValuesField);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +, +    public RealmBaseDataSet(RealmResults<T> results, String yValuesField) {, +        this.results = results;, +        this.mValuesField = yValuesField;, +        this.mValues = new ArrayList<S>();, +        this.results.sort(mIndexField, true);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java, +, +    public RealmLineRadarDataSet(RealmResults<T> results, String yValuesField) {, +        super(results, yValuesField);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java, +, +    public RealmBarLineScatterCandleBubbleDataSet(RealmResults<T> results, String yValuesField) {, +        super(results, yValuesField);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +, +    public RealmBaseDataSet(RealmResults<T> results, String yValuesField) {, +        this.results = results;, +        this.mValuesField = yValuesField;, +        this.mValues = new ArrayList<S>();, +        this.results.sort(mIndexField, true);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java, +, +    public RealmLineRadarDataSet(RealmResults<T> results, String yValuesField) {, +        super(results, yValuesField);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineScatterCandleRadarDataSet.java, +, +    public RealmLineScatterCandleRadarDataSet(RealmResults<T> results, String yValuesField) {, +        super(results, yValuesField);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBarLineScatterCandleBubbleDataSet.java, +, +    public RealmBarLineScatterCandleBubbleDataSet(RealmResults<T> results, String yValuesField) {, +        super(results, yValuesField);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +, +    public RealmBaseDataSet(RealmResults<T> results, String yValuesField) {, +        this.results = results;, +        this.mValuesField = yValuesField;, +        this.mValues = new ArrayList<S>();, +        this.results.sort(mIndexField, true);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java, +, +    public RealmLineRadarDataSet(RealmResults<T> results, String yValuesField) {, +        super(results, yValuesField);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineScatterCandleRadarDataSet.java, +, +    public RealmLineScatterCandleRadarDataSet(RealmResults<T> results, String yValuesField) {, +        super(results, yValuesField);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmLineDataSet.java, +    /**, +     * List representing all colors that are used for the circles, +     */]