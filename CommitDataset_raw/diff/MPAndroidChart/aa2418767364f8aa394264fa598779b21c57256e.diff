[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java, +        writeToDBStack(4);, +        System.out.println("Act: " + set.getStackSize());, +        System.out.println("Act: " + set.getStackSize());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java, +        writeToDBStack(4);, +        System.out.println("Act: " + set.getStackSize());, +        System.out.println("Act: " + set.getStackSize());, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +        this.mValues = new ArrayList<S>();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java, +        writeToDBStack(4);, +        System.out.println("Act: " + set.getStackSize());, +        System.out.println("Act: " + set.getStackSize());, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +        this.mValues = new ArrayList<S>();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java, +        mHighLightColor = Color.rgb(0, 0, 0);, +        calcStackSize();, +                mValues.add(new BarEntry(values, dynamicObject.getInt(mIndexField)));, +, +        calcStackSize();, +    private void calcStackSize() {, +, +        for (int i = 0; i < mValues.size(); i++) {, +, +            float[] vals = mValues.get(i).getVals();, +, +            if (vals != null && vals.length > mStackSize), +                mStackSize = vals.length;, +        }, +    }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java, +        writeToDBStack(4);, +        System.out.println("Act: " + set.getStackSize());, +        System.out.println("Act: " + set.getStackSize());, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +        this.mValues = new ArrayList<S>();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java, +        mHighLightColor = Color.rgb(0, 0, 0);, +        calcStackSize();, +                mValues.add(new BarEntry(values, dynamicObject.getInt(mIndexField)));, +, +        calcStackSize();, +    private void calcStackSize() {, +, +        for (int i = 0; i < mValues.size(); i++) {, +, +            float[] vals = mValues.get(i).getVals();, +, +            if (vals != null && vals.length > mStackSize), +                mStackSize = vals.length;, +        }, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java, +import com.github.mikephil.charting.interfaces.datasets.IPieDataSet;, +                } else if (dataSet instanceof IPieDataSet) {, +                    IPieDataSet pds = (IPieDataSet) dataSet;]