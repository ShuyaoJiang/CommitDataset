[+++ b/MPChartExample/src/com/example/mpchartexample/ScatterChartActivity.java, +import com.github.mikephil.charting.charts.ScatterChart.ScatterShape;, +        // one shape per dataset, +        mChart.setScatterShapes(new ScatterShape[] { ScatterShape.SQUARE, ScatterShape.TRIANGLE, ScatterShape.CIRCLE });, +, +        mChart.setDrawYValues(false);, +++ b/MPChartExample/src/com/example/mpchartexample/ScatterChartActivity.java, +import com.github.mikephil.charting.charts.ScatterChart.ScatterShape;, +        // one shape per dataset, +        mChart.setScatterShapes(new ScatterShape[] { ScatterShape.SQUARE, ScatterShape.TRIANGLE, ScatterShape.CIRCLE });, +, +        mChart.setDrawYValues(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/ScatterChart.java, +/**, + * The ScatterChart., + * , + * @author Philipp Jahoda, + */, +     * Custom path object the user can provide that is drawn where the values, +     * are at. This is used when ScatterShape.CUSTOM is set for a DataSet., +    /**, +     * array that holds all the scattershapes that this chart uses, each shape, +     * represents one dataset in the chart, +     */, +    private ScatterShape[] mScatterShapes = new ScatterShape[] {, +            ScatterShape.SQUARE, ScatterShape.TRIANGLE, +    };, +            ScatterShape shape = mScatterShapes[i % mScatterShapes.length];, +, +                if (shape == ScatterShape.SQUARE) {, +                    mDrawCanvas.drawRect(pos[j] - shapeHalf, pos[j + 1] - shapeHalf, pos[j], +                            + shapeHalf, pos[j + 1], +                } else if (shape == ScatterShape.CIRCLE) {, +                } else if (shape == ScatterShape.CROSS) {, +                } else if (shape == ScatterShape.TRIANGLE) {, +                    // create a triangle path, +                } else if (shape == ScatterShape.CUSTOM) {, +     * custom shapes. Default 12f, +     * Sets the shapes that are drawn on the position where the values are at., +     * One shape per DataSet. If "CUSTOM" is chosen for a DataSet, you need to, +     * call setCustomScatterShape(...) and provide a path object that is drawn, +     * as the custom scattershape. If more DataSets are drawn than ScatterShapes, +     * exist, shapes are reused., +     * @param shapes, +    public void setScatterShapes(ScatterShape[] shapes) {, +        mScatterShapes = shapes;, +     * returns all the different scattershapes the chart uses, +    public ScatterShape[] getScatterShapes() {, +        return mScatterShapes;, +     * not forget to call setScatterShapes(...) and set the shape for one, +     * DataSet to ScatterShape.CUSTOM.]