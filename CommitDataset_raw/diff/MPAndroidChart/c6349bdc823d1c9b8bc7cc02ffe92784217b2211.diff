[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +    protected boolean mDrawBarShadow = true;, +    protected RectF mBarShadow = new RectF();, +    protected RectF mBarRect = new RectF();, +    protected void prepareBar(float x, float y, float barspace) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +    protected boolean mDrawBarShadow = true;, +    protected RectF mBarShadow = new RectF();, +    protected RectF mBarRect = new RectF();, +    protected void prepareBar(float x, float y, float barspace) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.view.ViewGroup;, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>>, +		extends ViewGroup, +		setWillNotDraw(false);, +		for (int i=0; i < getChildCount(); i++), +		{, +			getChildAt(i).layout(left, top, right, bottom);, +		}, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +    protected boolean mDrawBarShadow = true;, +    protected RectF mBarShadow = new RectF();, +    protected RectF mBarRect = new RectF();, +    protected void prepareBar(float x, float y, float barspace) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.view.ViewGroup;, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>>, +		extends ViewGroup, +		setWillNotDraw(false);, +		for (int i=0; i < getChildCount(); i++), +		{, +			getChildAt(i).layout(left, top, right, bottom);, +		}, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +    protected class CPoint {, +				drawCubic(dataSet, entries);, +                // draw normal (straight) lines, +            } else {, +				drawLinear(dataSet, entries);, +            }, +, +            mRenderPaint.setPathEffect(null);, +        }, +    }, +, +	protected void drawCubic(LineDataSet dataSet, ArrayList<Entry> entries), +	{, +			drawCubicFill(dataSet, entries, spline);, +	}, +	protected void drawCubicFill(LineDataSet dataSet, ArrayList<Entry> entries, Path spline), +	{, +		float fillMin = mFillFormatter, +				.getFillLinePosition(dataSet, mData, mYChartMax, mYChartMin);, +, +		spline.lineTo((entries.size() - 1) * mPhaseX, fillMin);, +		spline.lineTo(0, fillMin);, +		spline.close();, +, +		mRenderPaint.setStyle(Paint.Style.FILL);, +	}, +, +	protected void drawLinear(LineDataSet dataSet, ArrayList<Entry> entries), +	{, +			drawLinearFill(dataSet, entries);, +		}, +	}, +, +	protected void drawLinearFill(LineDataSet dataSet, ArrayList<Entry> entries), +	{, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +    protected boolean mDrawBarShadow = true;, +    protected RectF mBarShadow = new RectF();, +    protected RectF mBarRect = new RectF();, +    protected void prepareBar(float x, float y, float barspace) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.view.ViewGroup;, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>>, +		extends ViewGroup, +		setWillNotDraw(false);, +		for (int i=0; i < getChildCount(); i++), +		{, +			getChildAt(i).layout(left, top, right, bottom);, +		}, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +    protected class CPoint {, +				drawCubic(dataSet, entries);, +                // draw normal (straight) lines, +            } else {, +				drawLinear(dataSet, entries);, +            }, +, +            mRenderPaint.setPathEffect(null);, +        }, +    }, +, +	protected void drawCubic(LineDataSet dataSet, ArrayList<Entry> entries), +	{]