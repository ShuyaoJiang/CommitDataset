[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +                // mData.removeEntryByXPos(xIndex, dataSetIndex);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +                // mData.removeEntryByXPos(xIndex, dataSetIndex);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, +    public boolean removeEntryByXPos(float xPos) {, +        T e = getEntryForXPos(xPos);, +        return removeEntry(e);, +    }, +, +    @Override, +    public boolean removeEntry(int index) {, +, +        T e = getEntryForIndex(index);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +                // mData.removeEntryByXPos(xIndex, dataSetIndex);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, +    public boolean removeEntryByXPos(float xPos) {, +        T e = getEntryForXPos(xPos);, +        return removeEntry(e);, +    }, +, +    @Override, +    public boolean removeEntry(int index) {, +, +        T e = getEntryForIndex(index);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +                // mData.removeEntryByXPos(xIndex, dataSetIndex);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, +    public boolean removeEntryByXPos(float xPos) {, +        T e = getEntryForXPos(xPos);, +        return removeEntry(e);, +    }, +, +    @Override, +    public boolean removeEntry(int index) {, +, +        T e = getEntryForIndex(index);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java, +                calcMinMax(e);, +    /**, +     * Updates the min and max x and y value of this DataSet based on the given Entry., +     *, +     * @param e, +     */, +    protected void calcMinMax(T e) {, +, +        if (e.getY() < mYMin), +            mYMin = e.getY();, +, +        if (e.getY() > mYMax), +            mYMax = e.getY();, +, +        if (e.getX() < mXMin), +            mXMin = e.getX();, +, +        if (e.getX() > mXMax), +            mXMax = e.getX();, +    }, +, +        calcMinMax(e);, +        List<T> values = getValues();, +        if (values == null) {, +            values = new ArrayList<T>();, +        calcMinMax(e);, +        values.add(e);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +                // mData.removeEntryByXPos(xIndex, dataSetIndex);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, +    public boolean removeEntryByXPos(float xPos) {, +        T e = getEntryForXPos(xPos);, +        return removeEntry(e);, +    }, +, +    @Override, +    public boolean removeEntry(int index) {, +, +        T e = getEntryForIndex(index);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/DataSet.java, +                calcMinMax(e);, +    /**, +     * Updates the min and max x and y value of this DataSet based on the given Entry., +     *, +     * @param e, +     */, +    protected void calcMinMax(T e) {, +, +        if (e.getY() < mYMin), +            mYMin = e.getY();, +, +        if (e.getY() > mYMax), +            mYMax = e.getY();, +, +        if (e.getX() < mXMin), +            mXMin = e.getX();, +, +        if (e.getX() > mXMax)]