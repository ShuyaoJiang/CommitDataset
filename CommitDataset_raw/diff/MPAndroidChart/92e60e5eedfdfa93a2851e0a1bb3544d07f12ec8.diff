[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        dataSet.setSliceSpace(3f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        dataSet.setSliceSpace(3f);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java, +    /** the space in pixels between the chart-slices, default 0f */, +     * Sets the space that is left out between the piechart-slices in dp., +     * Default: 0 --> no space, maximum 20f, +     * @param spaceDp, +    public void setSliceSpace(float spaceDp) {, +        if (spaceDp > 20), +            spaceDp = 20f;, +        if (spaceDp < 0), +            spaceDp = 0f;, +        mSliceSpace = Utils.convertDpToPixel(spaceDp);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        dataSet.setSliceSpace(3f);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java, +    /** the space in pixels between the chart-slices, default 0f */, +     * Sets the space that is left out between the piechart-slices in dp., +     * Default: 0 --> no space, maximum 20f, +     * @param spaceDp, +    public void setSliceSpace(float spaceDp) {, +        if (spaceDp > 20), +            spaceDp = 20f;, +        if (spaceDp < 0), +            spaceDp = 0f;, +        mSliceSpace = Utils.convertDpToPixel(spaceDp);, +++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java, +     * DataSet, in pixels., +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        dataSet.setSliceSpace(3f);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java, +    /** the space in pixels between the chart-slices, default 0f */, +     * Sets the space that is left out between the piechart-slices in dp., +     * Default: 0 --> no space, maximum 20f, +     * @param spaceDp, +    public void setSliceSpace(float spaceDp) {, +        if (spaceDp > 20), +            spaceDp = 20f;, +        if (spaceDp < 0), +            spaceDp = 0f;, +        mSliceSpace = Utils.convertDpToPixel(spaceDp);, +++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datasets/IPieDataSet.java, +     * DataSet, in pixels., +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java, +import android.graphics.PorterDuff;, +import android.graphics.PorterDuffXfermode;, +    protected Paint mSliceSpacePaint;, +, +, +        mSliceSpacePaint = new Paint(Paint.ANTI_ALIAS_FLAG);, +        mSliceSpacePaint.setStyle(Style.STROKE);, +        mSliceSpacePaint.setColor(0xFFFFFFFF); // transparent, +        mSliceSpacePaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.CLEAR));, +        float sliceSpace = dataSet.getSliceSpace();, +        mSliceSpacePaint.setStrokeWidth(sliceSpace);, +, +        PointF center = mChart.getCenterOffsets();, +, +                            rotationAngle + angle * phaseY,, +                            sliceAngle * phaseY,, +            // draw the slice space, +            if(sliceSpace > 0 && dataSet.getEntryCount() > 1) {, +, +                PointF pos = Utils.getPosition(center, mChart.getRadius(), rotationAngle * phaseX + angle * phaseY);, +                mBitmapCanvas.drawLine(center.x, center.y, pos.x, pos.y, mSliceSpacePaint);, +            }, +, +, +        // cover the final slice with slice space, +        if(sliceSpace > 0 && dataSet.getEntryCount() > 1) {, +, +            PointF pos = Utils.getPosition(center, mChart.getRadius(), rotationAngle * phaseX + angle * phaseY);, +            mBitmapCanvas.drawLine(center.x, center.y, pos.x, pos.y, mSliceSpacePaint);, +        }, +                final float offset = (sliceAngle) / 2.f;, +                    rotationAngle + angle * phaseY,, +                    sliceAngle * phaseY,]