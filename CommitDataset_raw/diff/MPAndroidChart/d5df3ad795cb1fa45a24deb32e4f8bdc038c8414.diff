[+++ b/MPChartExample/build.gradle, +    compile project(':MPChartLib-Realm'), +++ b/MPChartExample/build.gradle, +    compile project(':MPChartLib-Realm'), +++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="150", +        android:max="1500", +++ b/MPChartExample/build.gradle, +    compile project(':MPChartLib-Realm'), +++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="150", +        android:max="1500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.graphics.Rect;, +import com.github.mikephil.charting.utils.MPPointF;, +    protected RectF mOnValueSelectedRectF = new RectF();, +        RectF bounds = mOnValueSelectedRectF;, +        mChart.getBarBounds((BarEntry) e, bounds);, +        MPPointF position = mChart.getPosition(e, AxisDependency.LEFT);, +, +        MPPointF.recycleInstance(position);, +++ b/MPChartExample/build.gradle, +    compile project(':MPChartLib-Realm'), +++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="150", +        android:max="1500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.graphics.Rect;, +import com.github.mikephil.charting.utils.MPPointF;, +    protected RectF mOnValueSelectedRectF = new RectF();, +        RectF bounds = mOnValueSelectedRectF;, +        mChart.getBarBounds((BarEntry) e, bounds);, +        MPPointF position = mChart.getPosition(e, AxisDependency.LEFT);, +, +        MPPointF.recycleInstance(position);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +import com.github.mikephil.charting.formatter.FormattedStringCache;, +        private FormattedStringCache.PrimIntFloat mFormattedStringCache;, +            mFormattedStringCache = new FormattedStringCache.PrimIntFloat(new DecimalFormat("######.0"));, +            return mFormattedStringCache.getFormattedValue(value, dataSetIndex);, +++ b/MPChartExample/build.gradle, +    compile project(':MPChartLib-Realm'), +++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="150", +        android:max="1500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.graphics.Rect;, +import com.github.mikephil.charting.utils.MPPointF;, +    protected RectF mOnValueSelectedRectF = new RectF();, +        RectF bounds = mOnValueSelectedRectF;, +        mChart.getBarBounds((BarEntry) e, bounds);, +        MPPointF position = mChart.getPosition(e, AxisDependency.LEFT);, +, +        MPPointF.recycleInstance(position);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +import com.github.mikephil.charting.formatter.FormattedStringCache;, +        private FormattedStringCache.PrimIntFloat mFormattedStringCache;, +            mFormattedStringCache = new FormattedStringCache.PrimIntFloat(new DecimalFormat("######.0"));, +            return mFormattedStringCache.getFormattedValue(value, dataSetIndex);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +import android.graphics.Rect;, +import com.github.mikephil.charting.utils.MPPointF;, +    protected RectF mOnValueSelectedRectF = new RectF();, +        RectF bounds = mOnValueSelectedRectF;, +        mChart.getBarBounds((BarEntry) e, bounds);, +, +        MPPointF position = mChart.getPosition(e, mChart.getData().getDataSetByIndex(h.getDataSetIndex()), +, +        MPPointF.recycleInstance(position);, +++ b/MPChartExample/build.gradle, +    compile project(':MPChartLib-Realm'), +++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="150", +        android:max="1500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import android.graphics.Rect;, +import com.github.mikephil.charting.utils.MPPointF;, +    protected RectF mOnValueSelectedRectF = new RectF();, +        RectF bounds = mOnValueSelectedRectF;, +        mChart.getBarBounds((BarEntry) e, bounds);, +        MPPointF position = mChart.getPosition(e, AxisDependency.LEFT);, +, +        MPPointF.recycleInstance(position);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartPositiveNegative.java, +import com.github.mikephil.charting.formatter.FormattedStringCache;, +        private FormattedStringCache.PrimIntFloat mFormattedStringCache;, +            mFormattedStringCache = new FormattedStringCache.PrimIntFloat(new DecimalFormat("######.0"));, +            return mFormattedStringCache.getFormattedValue(value, dataSetIndex);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +import android.graphics.Rect;, +import com.github.mikephil.charting.utils.MPPointF;, +    protected RectF mOnValueSelectedRectF = new RectF();, +        RectF bounds = mOnValueSelectedRectF;, +        mChart.getBarBounds((BarEntry) e, bounds);, +, +        MPPointF position = mChart.getPosition(e, mChart.getData().getDataSetByIndex(h.getDataSetIndex()), +, +        MPPointF.recycleInstance(position);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        LimitLine ll1 = new LimitLine(150f, "Upper Limit");]