[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +//        mChart.setVisibleXRange(50, 10);, +//        mChart.moveViewToX(20);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +//        mChart.setVisibleXRange(50, 10);, +//        mChart.moveViewToX(20);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float minScale = mXAxis.mAxisRange / minXRange;, +        float maxScale = mXAxis.mAxisRange / maxXRange;, +     * @param axis      the axis for which this limit should apply, +     * Sets the size of the area (range on the y-axis) that should be minimum visible at once, no further zooming in possible., +     *, +     * @param minYRange, +     * @param axis      the axis for which this limit should apply, +     */, +    public void setVisibleYRangeMinimum(float minYRange, AxisDependency axis) {, +        float yScale = getDeltaY(axis) / minYRange;, +        mViewPortHandler.setMaximumScaleY(yScale);, +    }, +, +    /**, +     * Limits the maximum and minimum y range that can be visible by pinching and zooming., +     *, +     * @param minYRange, +     * @param maxYRange, +     * @param axis, +     */, +    public void setVisibleYRange(float minYRange, float maxYRange, AxisDependency axis) {, +        float minScale = getDeltaY(axis) / minYRange;, +        float maxScale = getDeltaY(axis) / maxYRange;, +        mViewPortHandler.setMinMaxScaleY(minScale, maxScale);, +    }, +, +    /**, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +//        mChart.setVisibleXRange(50, 10);, +//        mChart.moveViewToX(20);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float minScale = mXAxis.mAxisRange / minXRange;, +        float maxScale = mXAxis.mAxisRange / maxXRange;, +     * @param axis      the axis for which this limit should apply, +     * Sets the size of the area (range on the y-axis) that should be minimum visible at once, no further zooming in possible., +     *, +     * @param minYRange, +     * @param axis      the axis for which this limit should apply, +     */, +    public void setVisibleYRangeMinimum(float minYRange, AxisDependency axis) {, +        float yScale = getDeltaY(axis) / minYRange;, +        mViewPortHandler.setMaximumScaleY(yScale);, +    }, +, +    /**, +     * Limits the maximum and minimum y range that can be visible by pinching and zooming., +     *, +     * @param minYRange, +     * @param maxYRange, +     * @param axis, +     */, +    public void setVisibleYRange(float minYRange, float maxYRange, AxisDependency axis) {, +        float minScale = getDeltaY(axis) / minYRange;, +        float maxScale = getDeltaY(axis) / maxYRange;, +        mViewPortHandler.setMinMaxScaleY(minScale, maxScale);, +    }, +, +    /**, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, +import com.github.mikephil.charting.jobs.MoveViewJob;, +    /**, +     * ###### VIEWPORT METHODS BELOW THIS ######, +     */, +, +    public void setVisibleXRangeMinimum(float minXRange) {, +        float xScale = mXAxis.mAxisRange / (minXRange);, +        mViewPortHandler.setMaximumScaleY(xScale);, +    }, +, +    @Override, +    public void setVisibleXRange(float minXRange, float maxXRange) {, +        float minScale = mXAxis.mAxisRange / minXRange;, +        float maxScale = mXAxis.mAxisRange / maxXRange;, +        mViewPortHandler.setMinMaxScaleY(minScale, maxScale);, +    }, +, +    @Override, +    public void setVisibleYRangeMinimum(float minYRange, AxisDependency axis) {, +        float yScale = getDeltaY(axis) / minYRange;, +        mViewPortHandler.setMaximumScaleX(yScale);, +    }, +, +    @Override, +    public void setVisibleYRange(float minYRange, float maxYRange, AxisDependency axis) {, +        float minScale = getDeltaY(axis) / minYRange;, +        float maxScale = getDeltaY(axis) / maxYRange;, +        mViewPortHandler.setMinMaxScaleX(minScale, maxScale);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +//        mChart.setVisibleXRange(50, 10);, +//        mChart.moveViewToX(20);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float minScale = mXAxis.mAxisRange / minXRange;, +        float maxScale = mXAxis.mAxisRange / maxXRange;]