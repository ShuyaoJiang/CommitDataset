[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    /** Sets the minimum offset (padding) around the chart, defaults to 10 */, +    protected float mMinOffset = 10.f;, +, +                    // It's possible that we do not need this offset anymore as it, +                    //   is available through the extraOffsets, but changing it can mean, +                    //   changing default visibility for existing apps., +                    float yOffset = mLegend.mTextHeightMax;, +, +                } else if (mLegend.getPosition() == LegendPosition.ABOVE_CHART_LEFT, +                        || mLegend.getPosition() == LegendPosition.ABOVE_CHART_RIGHT, +                        || mLegend.getPosition() == LegendPosition.ABOVE_CHART_CENTER) {, +, +                    // It's possible that we do not need this offset anymore as it, +                    //   is available through the extraOffsets, but changing it can mean, +                    //   changing default visibility for existing apps., +                    float yOffset = mLegend.mTextHeightMax;, +, +                    offsetTop += Math.min(mLegend.mNeededHeight + yOffset,, +                            mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent());, +, +            float minOffset = Utils.convertDpToPixel(mMinOffset);, +            mViewPortHandler.restrainViewPort(, +                    Math.max(minOffset, offsetLeft),, +                    Math.max(minOffset, offsetTop),, +                    Math.max(minOffset, offsetRight),, +                    Math.max(minOffset, offsetBottom));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    /** Sets the minimum offset (padding) around the chart, defaults to 10 */, +    protected float mMinOffset = 10.f;, +, +                    // It's possible that we do not need this offset anymore as it, +                    //   is available through the extraOffsets, but changing it can mean, +                    //   changing default visibility for existing apps., +                    float yOffset = mLegend.mTextHeightMax;, +, +                } else if (mLegend.getPosition() == LegendPosition.ABOVE_CHART_LEFT, +                        || mLegend.getPosition() == LegendPosition.ABOVE_CHART_RIGHT, +                        || mLegend.getPosition() == LegendPosition.ABOVE_CHART_CENTER) {, +, +                    // It's possible that we do not need this offset anymore as it, +                    //   is available through the extraOffsets, but changing it can mean, +                    //   changing default visibility for existing apps., +                    float yOffset = mLegend.mTextHeightMax;, +, +                    offsetTop += Math.min(mLegend.mNeededHeight + yOffset,, +                            mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent());, +, +            float minOffset = Utils.convertDpToPixel(mMinOffset);, +            mViewPortHandler.restrainViewPort(, +                    Math.max(minOffset, offsetLeft),, +                    Math.max(minOffset, offsetTop),, +                    Math.max(minOffset, offsetRight),, +                    Math.max(minOffset, offsetBottom));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java, +				// It's possible that we do not need this offset anymore as it, +				//   is available through the extraOffsets, but changing it can mean, +				//   changing default visibility for existing apps., +				float yOffset = mLegend.mTextHeightMax * 2.f;, +, +, +			} else if (mLegend.getPosition() == LegendPosition.ABOVE_CHART_LEFT, +					|| mLegend.getPosition() == LegendPosition.ABOVE_CHART_RIGHT, +					|| mLegend.getPosition() == LegendPosition.ABOVE_CHART_CENTER) {, +, +				// It's possible that we do not need this offset anymore as it, +				//   is available through the extraOffsets, but changing it can mean, +				//   changing default visibility for existing apps., +				float yOffset = mLegend.mTextHeightMax * 2.f;, +, +				offsetTop += Math.min(mLegend.mNeededHeight + yOffset, mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent());, +		float minOffset = Utils.convertDpToPixel(mMinOffset);, +		mViewPortHandler.restrainViewPort(, +				Math.max(minOffset, offsetLeft),, +				Math.max(minOffset, offsetTop),, +				Math.max(minOffset, offsetRight),, +				Math.max(minOffset, offsetBottom));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    /** Sets the minimum offset (padding) around the chart, defaults to 10 */, +    protected float mMinOffset = 10.f;, +, +                    // It's possible that we do not need this offset anymore as it, +                    //   is available through the extraOffsets, but changing it can mean, +                    //   changing default visibility for existing apps., +                    float yOffset = mLegend.mTextHeightMax;, +, +                } else if (mLegend.getPosition() == LegendPosition.ABOVE_CHART_LEFT, +                        || mLegend.getPosition() == LegendPosition.ABOVE_CHART_RIGHT, +                        || mLegend.getPosition() == LegendPosition.ABOVE_CHART_CENTER) {, +, +                    // It's possible that we do not need this offset anymore as it, +                    //   is available through the extraOffsets, but changing it can mean, +                    //   changing default visibility for existing apps., +                    float yOffset = mLegend.mTextHeightMax;, +, +                    offsetTop += Math.min(mLegend.mNeededHeight + yOffset,, +                            mViewPortHandler.getChartHeight() * mLegend.getMaxSizePercent());, +, +            float minOffset = Utils.convertDpToPixel(mMinOffset);, +            mViewPortHandler.restrainViewPort(]