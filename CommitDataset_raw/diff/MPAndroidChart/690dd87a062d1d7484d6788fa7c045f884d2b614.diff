[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +import android.graphics.Color;, +            yVals1.add(new BarEntry(i, new float[]{val1, val2, val3}));, +            data.setValueTextColor(Color.WHITE);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +import android.graphics.Color;, +            yVals1.add(new BarEntry(i, new float[]{val1, val2, val3}));, +            data.setValueTextColor(Color.WHITE);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +        yValues.add(new BarEntry(0, new float[]{ -10, 10 }));, +        yValues.add(new BarEntry(1, new float[]{ -12, 13 }));, +        yValues.add(new BarEntry(2, new float[]{ -15, 15 }));, +        yValues.add(new BarEntry(3, new float[]{ -17, 17 }));, +        yValues.add(new BarEntry(4, new float[]{ -19, 20 }));, +        yValues.add(new BarEntry(5, new float[]{ -19, 19 }));, +        yValues.add(new BarEntry(6, new float[]{ -16, 16 }));, +        yValues.add(new BarEntry(7, new float[]{ -13, 14 }));, +        yValues.add(new BarEntry(8, new float[]{ -10, 11 }));, +        yValues.add(new BarEntry(9, new float[]{ -5, 6 }));, +        yValues.add(new BarEntry(10, new float[]{ -1, 2 }));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +import android.graphics.Color;, +            yVals1.add(new BarEntry(i, new float[]{val1, val2, val3}));, +            data.setValueTextColor(Color.WHITE);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +        yValues.add(new BarEntry(0, new float[]{ -10, 10 }));, +        yValues.add(new BarEntry(1, new float[]{ -12, 13 }));, +        yValues.add(new BarEntry(2, new float[]{ -15, 15 }));, +        yValues.add(new BarEntry(3, new float[]{ -17, 17 }));, +        yValues.add(new BarEntry(4, new float[]{ -19, 20 }));, +        yValues.add(new BarEntry(5, new float[]{ -19, 19 }));, +        yValues.add(new BarEntry(6, new float[]{ -16, 16 }));, +        yValues.add(new BarEntry(7, new float[]{ -13, 14 }));, +        yValues.add(new BarEntry(8, new float[]{ -10, 11 }));, +        yValues.add(new BarEntry(9, new float[]{ -5, 6 }));, +        yValues.add(new BarEntry(10, new float[]{ -1, 2 }));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +                    high = new Highlight(high.getX(), Float.NaN, -1, -1, -1);, +            float xVal = highlight.getX();, +            if (xVal <= deltaX && xVal <= deltaX * mAnimator.getPhaseX()) {, +                if (e == null || e.getX() != mIndicesToHighlight[i].getX()), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +import android.graphics.Color;, +            yVals1.add(new BarEntry(i, new float[]{val1, val2, val3}));, +            data.setValueTextColor(Color.WHITE);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +        yValues.add(new BarEntry(0, new float[]{ -10, 10 }));, +        yValues.add(new BarEntry(1, new float[]{ -12, 13 }));, +        yValues.add(new BarEntry(2, new float[]{ -15, 15 }));, +        yValues.add(new BarEntry(3, new float[]{ -17, 17 }));, +        yValues.add(new BarEntry(4, new float[]{ -19, 20 }));, +        yValues.add(new BarEntry(5, new float[]{ -19, 19 }));, +        yValues.add(new BarEntry(6, new float[]{ -16, 16 }));, +        yValues.add(new BarEntry(7, new float[]{ -13, 14 }));, +        yValues.add(new BarEntry(8, new float[]{ -10, 11 }));, +        yValues.add(new BarEntry(9, new float[]{ -5, 6 }));, +        yValues.add(new BarEntry(10, new float[]{ -1, 2 }));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +                    high = new Highlight(high.getX(), Float.NaN, -1, -1, -1);, +            float xVal = highlight.getX();, +            if (xVal <= deltaX && xVal <= deltaX * mAnimator.getPhaseX()) {, +                if (e == null || e.getX() != mIndicesToHighlight[i].getX()), +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +import com.github.mikephil.charting.data.DataSet;, +        int entryIndex = getData().getDataSet().getEntryIndex(highlight.getX(), DataSet.Rounding.CLOSEST);, +        float offset = mDrawAngles[entryIndex] / 2;, +                * Math.cos(Math.toRadians((rotationAngle + mAbsoluteAngles[entryIndex] - offset), +                * Math.sin(Math.toRadians((rotationAngle + mAbsoluteAngles[entryIndex] - offset), +            if (mIndicesToHighlight[i].getX() == xIndex, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +import android.graphics.Color;, +            yVals1.add(new BarEntry(i, new float[]{val1, val2, val3}));, +            data.setValueTextColor(Color.WHITE);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +        yValues.add(new BarEntry(0, new float[]{ -10, 10 }));, +        yValues.add(new BarEntry(1, new float[]{ -12, 13 }));, +        yValues.add(new BarEntry(2, new float[]{ -15, 15 }));, +        yValues.add(new BarEntry(3, new float[]{ -17, 17 }));, +        yValues.add(new BarEntry(4, new float[]{ -19, 20 }));, +        yValues.add(new BarEntry(5, new float[]{ -19, 19 }));, +        yValues.add(new BarEntry(6, new float[]{ -16, 16 }));, +        yValues.add(new BarEntry(7, new float[]{ -13, 14 }));, +        yValues.add(new BarEntry(8, new float[]{ -10, 11 }));, +        yValues.add(new BarEntry(9, new float[]{ -5, 6 }));, +        yValues.add(new BarEntry(10, new float[]{ -1, 2 }));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +                    high = new Highlight(high.getX(), Float.NaN, -1, -1, -1);, +            float xVal = highlight.getX();, +            if (xVal <= deltaX && xVal <= deltaX * mAnimator.getPhaseX()) {, +                if (e == null || e.getX() != mIndicesToHighlight[i].getX()), +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +import com.github.mikephil.charting.data.DataSet;, +        int entryIndex = getData().getDataSet().getEntryIndex(highlight.getX(), DataSet.Rounding.CLOSEST);, +        float offset = mDrawAngles[entryIndex] / 2;, +                * Math.cos(Math.toRadians((rotationAngle + mAbsoluteAngles[entryIndex] - offset), +                * Math.sin(Math.toRadians((rotationAngle + mAbsoluteAngles[entryIndex] - offset), +            if (mIndicesToHighlight[i].getX() == xIndex, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +            final float yVal = dataSet.getYValueForXValue(xIndex);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java]