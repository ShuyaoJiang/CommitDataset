[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        for (int i = 0; i < count; i++) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        for (int i = 0; i < count; i++) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +        yl.setInverted(true);, +        yr.setInverted(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        for (int i = 0; i < count; i++) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +        yl.setInverted(true);, +        yr.setInverted(true);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java, +            if(mInverted) { // inverted axis, +                , +                if (!mContainsStacks || vals == null) {, +, +                    float bottom = x - barWidth + barSpaceHalf;, +                    float top = x + barWidth - barSpaceHalf;, +                    float left = y >= 0 ? y : 0;, +                    float right = y <= 0 ? y : 0;, +, +                    // multiply the height of the rect with the phase, +                    if (right > 0), +                        right *= phaseY;, +                    else, +                        left *= phaseY;, +, +                    addBar(left, top, right, bottom);, +, +                } else {, +, +                    float all = e.getVal();, +, +                    // fill the stack, +                    for (int k = 0; k < vals.length; k++) {, +, +                        all -= vals[k];, +                        y = vals[k] + all;, +, +                        float bottom = x - barWidth + barSpaceHalf;, +                        float top = x + barWidth - barSpaceHalf;, +                        float left = y >= 0 ? y : 0;, +                        float right = y <= 0 ? y : 0;, +, +                        // multiply the height of the rect with the phase, +                        if (right > 0), +                            right *= phaseY;, +                        else, +                            left *= phaseY;, +, +                        addBar(left, top, right, bottom);, +                    }, +                }, +                , +            } else { // not inverted, +             , +        }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        for (int i = 0; i < count; i++) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +        yl.setInverted(true);, +        yr.setInverted(true);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/HorizontalBarBuffer.java, +            if(mInverted) { // inverted axis, +                , +                if (!mContainsStacks || vals == null) {, +, +                    float bottom = x - barWidth + barSpaceHalf;, +                    float top = x + barWidth - barSpaceHalf;, +                    float left = y >= 0 ? y : 0;, +                    float right = y <= 0 ? y : 0;, +, +                    // multiply the height of the rect with the phase, +                    if (right > 0), +                        right *= phaseY;, +                    else, +                        left *= phaseY;, +, +                    addBar(left, top, right, bottom);, +, +                } else {, +, +                    float all = e.getVal();, +, +                    // fill the stack, +                    for (int k = 0; k < vals.length; k++) {, +, +                        all -= vals[k];, +                        y = vals[k] + all;, +, +                        float bottom = x - barWidth + barSpaceHalf;, +                        float top = x + barWidth - barSpaceHalf;, +                        float left = y >= 0 ? y : 0;, +                        float right = y <= 0 ? y : 0;, +, +                        // multiply the height of the rect with the phase, +                        if (right > 0), +                            right *= phaseY;, +                        else]