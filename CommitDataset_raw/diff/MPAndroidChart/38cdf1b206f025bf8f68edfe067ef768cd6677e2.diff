[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java, +        this.mTextSize = Utils.convertDpToPixel(10f);, +        float formToTextSpace = Utils.convertDpToPixel(mFormToTextSpace);, +            final float formSize = Utils.convertDpToPixel(, +                    Float.isNaN(entry.formSize), +                    ? mFormSize : entry.formSize);, +        return max + maxFormSize + formToTextSpace;, +        mFormSize = size;, +        mFormLineWidth = size;, +        mXEntrySpace = space;, +        mYEntrySpace = space;, +        this.mFormToTextSpace = space;, +        float defaultFormSize = Utils.convertDpToPixel(mFormSize);, +        float stackSpace = Utils.convertDpToPixel(mStackSpace);, +        float formToTextSpace = Utils.convertDpToPixel(mFormToTextSpace);, +        float xEntrySpace = Utils.convertDpToPixel(mXEntrySpace);, +        float yEntrySpace = Utils.convertDpToPixel(mYEntrySpace);, +                    float formSize = Float.isNaN(e.formSize), +                            ? defaultFormSize, +                            : Utils.convertDpToPixel(e.formSize);, +                    float formSize = Float.isNaN(e.formSize), +                            ? defaultFormSize, +                            : Utils.convertDpToPixel(e.formSize);, +                        requiredWidth += drawingForm ? formToTextSpace + formSize : 0.f;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/components/Legend.java, +        this.mTextSize = Utils.convertDpToPixel(10f);, +        float formToTextSpace = Utils.convertDpToPixel(mFormToTextSpace);, +            final float formSize = Utils.convertDpToPixel(, +                    Float.isNaN(entry.formSize), +                    ? mFormSize : entry.formSize);, +        return max + maxFormSize + formToTextSpace;, +        mFormSize = size;, +        mFormLineWidth = size;, +        mXEntrySpace = space;, +        mYEntrySpace = space;, +        this.mFormToTextSpace = space;, +        float defaultFormSize = Utils.convertDpToPixel(mFormSize);, +        float stackSpace = Utils.convertDpToPixel(mStackSpace);, +        float formToTextSpace = Utils.convertDpToPixel(mFormToTextSpace);, +        float xEntrySpace = Utils.convertDpToPixel(mXEntrySpace);, +        float yEntrySpace = Utils.convertDpToPixel(mYEntrySpace);, +                    float formSize = Float.isNaN(e.formSize), +                            ? defaultFormSize, +                            : Utils.convertDpToPixel(e.formSize);, +                    float formSize = Float.isNaN(e.formSize), +                            ? defaultFormSize, +                            : Utils.convertDpToPixel(e.formSize);, +                        requiredWidth += drawingForm ? formToTextSpace + formSize : 0.f;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java, +        float labelLineSpacing = Utils.getLineSpacing(mLegendLabelPaint, legendFontMetrics), +                + Utils.convertDpToPixel(mLegend.getYEntrySpace());, +        float formToTextSpace = Utils.convertDpToPixel(mLegend.getFormToTextSpace());, +        float xEntrySpace = Utils.convertDpToPixel(mLegend.getXEntrySpace());, +        float defaultFormSize = Utils.convertDpToPixel(mLegend.getFormSize());, +        float stackSpace = Utils.convertDpToPixel(mLegend.getStackSpace());, +                    float formSize = Float.isNaN(e.formSize) ? defaultFormSize : Utils.convertDpToPixel(e.formSize);, +                    float formSize = Float.isNaN(e.formSize) ? defaultFormSize : Utils.convertDpToPixel(e.formSize);, +        final float formSize = Utils.convertDpToPixel(, +                Float.isNaN(entry.formSize), +                        ? legend.getFormSize(), +                        : entry.formSize);, +                final float formLineWidth = Utils.convertDpToPixel(, +                        Float.isNaN(entry.formLineWidth), +                                : entry.formLineWidth);]