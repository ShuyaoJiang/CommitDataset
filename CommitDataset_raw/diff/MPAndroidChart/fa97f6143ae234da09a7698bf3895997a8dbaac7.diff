[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +        for (int i = 5; i < count / 2; i+=2) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +        for (int i = 5; i < count / 2; i+=2) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +//        mChart.getXAxis().setDrawLabels(false);, +//        mChart.getXAxis().setDrawGridLines(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +        for (int i = 5; i < count / 2; i+=2) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +//        mChart.getXAxis().setDrawLabels(false);, +//        mChart.getXAxis().setDrawGridLines(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +        mChart.getAxisRight().setDrawGridLines(false);, +        set1.setColors(getColors());, +    , +    private int[] getColors() {, +        , +        int stacksize = 3;, +        , +        // have as many colors as stack-values per entry, +        int []colors = new int[stacksize];, +        , +        for(int i = 0; i < stacksize; i++) {, +            colors[i] = ColorTemplate.VORDIPLOM_COLORS[i];, +        }      , +        , +        return colors;, +    }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +        for (int i = 5; i < count / 2; i+=2) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +//        mChart.getXAxis().setDrawLabels(false);, +//        mChart.getXAxis().setDrawGridLines(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +        mChart.getAxisRight().setDrawGridLines(false);, +        set1.setColors(getColors());, +    , +    private int[] getColors() {, +        , +        int stacksize = 3;, +        , +        // have as many colors as stack-values per entry, +        int []colors = new int[stacksize];, +        , +        for(int i = 0; i < stacksize; i++) {, +            colors[i] = ColorTemplate.VORDIPLOM_COLORS[i];, +        }      , +        , +        return colors;, +    }, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/AbstractBuffer.java, + * Buffer class to boost performance while drawing. Concept: Replace instead of, + * recreate., + * @param <T> The data the buffer accepts to be fed with., +    /** index in the buffer */, +, +    /** float-buffer that holds the data points to draw, order: x,y,x,y,... */, +    /** animation phase x-axis */, +    protected float phaseX = 1f;, +, +    /** animation phase y-axis */, +    protected float phaseY = 1f;, +, +     * Resets the buffer index to 0 and makes the buffer reusable., +     * Returns the size (length) of the buffer array., +     * Set the phases used for animations., +     * , +     * @param phaseX, +     * @param phaseY, +     */, +    public void setPhases(float phaseX, float phaseY) {, +        this.phaseX = phaseX;, +        this.phaseY = phaseY;, +    }, +, +    /**, +     * after feed-completion. This needs to run FAST., +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +        for (int i = 5; i < count / 2; i+=2) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DynamicalAddingActivity.java, +//        mChart.getXAxis().setDrawLabels(false);, +//        mChart.getXAxis().setDrawGridLines(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +        mChart.getAxisRight().setDrawGridLines(false);, +        set1.setColors(getColors());, +    , +    private int[] getColors() {, +        , +        int stacksize = 3;, +        , +        // have as many colors as stack-values per entry, +        int []colors = new int[stacksize];, +        , +        for(int i = 0; i < stacksize; i++) {, +            colors[i] = ColorTemplate.VORDIPLOM_COLORS[i];, +        }      , +        , +        return colors;, +    }]