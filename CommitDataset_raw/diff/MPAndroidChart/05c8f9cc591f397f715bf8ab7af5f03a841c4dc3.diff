[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        mChart.setDrawBarShadow(false);, +        for (int i = 0; i < count-1; i++) {, +        yVals1.add(new BarEntry(-20f, count-1));, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        mChart.setDrawBarShadow(false);, +        for (int i = 0; i < count-1; i++) {, +        yVals1.add(new BarEntry(-20f, count-1));, +, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java, +    protected boolean mInverted = false;, +    public void setInverted(boolean inverted) {, +        this.mInverted = inverted;, +    }, +, +            if(mInverted) { // inverted axis, +                , +                if(!mContainsStacks || vals == null) {, +                    , +                    float left = x - barWidth + barSpaceHalf;, +                    float right = x + barWidth - barSpaceHalf;, +                    float bottom = y >= 0 ? y : 0;, +                    float top = y <= 0 ? y : 0;, +                    , +                    // multiply the height of the rect with the phase, +                    if (top > 0), +                        top *= phaseY;, +                    else, +                        bottom *= phaseY;, +, +                    addBar(left, top, right, bottom);, +                    , +                } else {, +                    , +                    float all = e.getVal();, +, +                    // fill the stack, +                    for (int k = 0; k < vals.length; k++) {, +, +                        all -= vals[k];, +                        y = vals[k] + all;, +, +                        float left = x - barWidth + barSpaceHalf;, +                        float right = x + barWidth - barSpaceHalf;, +                        float bottom = y >= 0 ? y : 0;, +                        float top = y <= 0 ? y : 0;, +, +                        // multiply the height of the rect with the phase, +                        if (top > 0), +                            top *= phaseY;, +                        else, +                            bottom *= phaseY;, +, +                        addBar(left, top, right, bottom);, +                    }, +                }   , +                , +            } else { // non inverted axis, +                , +        }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        mChart.setDrawBarShadow(false);, +        for (int i = 0; i < count-1; i++) {, +        yVals1.add(new BarEntry(-20f, count-1));, +, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java, +    protected boolean mInverted = false;, +    public void setInverted(boolean inverted) {, +        this.mInverted = inverted;, +    }, +, +            if(mInverted) { // inverted axis, +                , +                if(!mContainsStacks || vals == null) {, +                    , +                    float left = x - barWidth + barSpaceHalf;, +                    float right = x + barWidth - barSpaceHalf;, +                    float bottom = y >= 0 ? y : 0;, +                    float top = y <= 0 ? y : 0;, +                    , +                    // multiply the height of the rect with the phase, +                    if (top > 0), +                        top *= phaseY;, +                    else, +                        bottom *= phaseY;, +, +                    addBar(left, top, right, bottom);, +                    , +                } else {, +                    , +                    float all = e.getVal();, +, +                    // fill the stack, +                    for (int k = 0; k < vals.length; k++) {, +, +                        all -= vals[k];, +                        y = vals[k] + all;, +, +                        float left = x - barWidth + barSpaceHalf;]