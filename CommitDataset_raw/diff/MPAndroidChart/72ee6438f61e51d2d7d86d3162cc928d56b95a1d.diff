[+++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, +import com.github.mikephil.charting.utils.Utils;, +++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, +import com.github.mikephil.charting.utils.Utils;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import java.io.FileOutputStream;, +import java.io.OutputStream;, +import java.util.ArrayList;, +import java.util.Calendar;, +import java.util.Locale;, +, +	public int getOffsetLeft() {, +        return mOffsetLeft;, +    }, +	, +	public int getOffsetBottom() {, +        return mOffsetBottom;, +    }, +	, +	public int getOffsetRight() {, +        return mOffsetRight;, +    }, +	, +	public int getOffsetTop() {, +        return mOffsetTop;, +    }, +, +++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, +import com.github.mikephil.charting.utils.Utils;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import java.io.FileOutputStream;, +import java.io.OutputStream;, +import java.util.ArrayList;, +import java.util.Calendar;, +import java.util.Locale;, +, +	public int getOffsetLeft() {, +        return mOffsetLeft;, +    }, +	, +	public int getOffsetBottom() {, +        return mOffsetBottom;, +    }, +	, +	public int getOffsetRight() {, +        return mOffsetRight;, +    }, +	, +	public int getOffsetTop() {, +        return mOffsetTop;, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, +	 * returns the correct translation depending on the provided x and y touch points, +	 * , +	 * @param e, +	 * @return, +	 */, +	private PointF getTrans(float x, float y) {, +, +		float xTrans = x - mChart.getOffsetLeft();, +		float yTrans = -(mChart.getHeight() - y - mChart.getOffsetBottom());, +, +		return new PointF(xTrans, yTrans);, +	}, +, +	/**, +	public boolean onDoubleTap(MotionEvent e) {, +, +		PointF trans = getTrans(e.getX(), e.getY());, +, +		// double tap --> zoom in, +		mMatrix.postScale(1.4f, 1.4f, trans.x, trans.y);, +, +		mChart.refreshTouch(mMatrix);, +		return super.onDoubleTap(e);, +, +	@Override, +	public void onLongPress(MotionEvent e) {, +, +		PointF trans = getTrans(e.getX(), e.getY());, +, +		// zoom out, +		mMatrix.postScale(0.7f, 0.7f, trans.x, trans.y);, +		mChart.refreshTouch(mMatrix);]