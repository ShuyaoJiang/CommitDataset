[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        xAxis.enableGridDashedLine(10f, 10f, 0f);, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        xAxis.enableGridDashedLine(10f, 10f, 0f);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +     * Set this to true to make the highlight operation full-bar oriented, false to make it highlight single values (relevant, +     * only for stacked). If enabled, highlighting operations will highlight the whole bar, even if only a single stack entry, +     * was tapped., +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        xAxis.enableGridDashedLine(10f, 10f, 0f);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +     * Set this to true to make the highlight operation full-bar oriented, false to make it highlight single values (relevant, +     * only for stacked). If enabled, highlighting operations will highlight the whole bar, even if only a single stack entry, +     * was tapped., +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java, +    protected void setupGridPaint() {, +        mGridPaint.setColor(mXAxis.getGridColor());, +        mGridPaint.setStrokeWidth(mXAxis.getGridLineWidth());, +        mGridPaint.setPathEffect(mXAxis.getGridDashPathEffect());, +    }, +, +            positions[i + 1] = mXAxis.mEntries[i / 2];, +        setupGridPaint();, +            drawGridLine(c, positions[i], positions[i + 1], gridLinePath);, +        }, +    }, +    /**, +     * Draws the grid line at the specified position using the provided path., +     *, +     * @param c, +     * @param x, +     * @param y, +     * @param gridLinePath, +     */, +    protected void drawGridLine(Canvas c, float x, float y, Path gridLinePath) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        xAxis.enableGridDashedLine(10f, 10f, 0f);, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +     * Set this to true to make the highlight operation full-bar oriented, false to make it highlight single values (relevant, +     * only for stacked). If enabled, highlighting operations will highlight the whole bar, even if only a single stack entry, +     * was tapped., +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRenderer.java, +    protected void setupGridPaint() {, +        mGridPaint.setColor(mXAxis.getGridColor());, +        mGridPaint.setStrokeWidth(mXAxis.getGridLineWidth());, +        mGridPaint.setPathEffect(mXAxis.getGridDashPathEffect());, +    }, +, +            positions[i + 1] = mXAxis.mEntries[i / 2];, +        setupGridPaint();, +            drawGridLine(c, positions[i], positions[i + 1], gridLinePath);, +        }, +    }, +    /**, +     * Draws the grid line at the specified position using the provided path., +     *, +     * @param c, +     * @param x, +     * @param y, +     * @param gridLinePath, +     */, +    protected void drawGridLine(Canvas c, float x, float y, Path gridLinePath) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart.java, +    protected void drawGridLine(Canvas c, float x, float y, Path gridLinePath) {, +        gridLinePath.moveTo(mViewPortHandler.contentRight(), y);, +        gridLinePath.lineTo(mViewPortHandler.contentLeft(), y);, +        // draw a path because lines don't support dashing on lower android versions, +        c.drawPath(gridLinePath, mGridPaint);, +        gridLinePath.reset();]