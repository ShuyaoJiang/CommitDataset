[+++ b/MPChartExample/build.gradle, +    //compile 'com.github.PhilJay:MPAndroidChart:v2.2.5', +++ b/MPChartExample/build.gradle, +    //compile 'com.github.PhilJay:MPAndroidChart:v2.2.5', +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +     * 10, no more than a range of 10 on the x-axis can be viewed at once without, +     * 10, no less than a range of 10 on the x-axis can be viewed at once without, +     * Limits the maximum and minimum x range that can be visible by pinching and zooming. e.g. minRange=10, maxRange=100 the, +     * smallest range to be displayed at once is 10, and no more than a range of 100 values can be viewed at once without, +     * Moves the left side of the current viewport to the specified x-position., +     * @param xValue, +    public void moveViewToX(float xValue) {, +        Runnable job = new MoveViewJob(mViewPortHandler, xValue, 0f,, +     * x-value on the x-axis, and center the viewport to the specified y value on the y-axis., +     * This will move the left side of the current viewport to the specified x-value, +++ b/MPChartExample/build.gradle, +    //compile 'com.github.PhilJay:MPAndroidChart:v2.2.5', +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +     * 10, no more than a range of 10 on the x-axis can be viewed at once without, +     * 10, no less than a range of 10 on the x-axis can be viewed at once without, +     * Limits the maximum and minimum x range that can be visible by pinching and zooming. e.g. minRange=10, maxRange=100 the, +     * smallest range to be displayed at once is 10, and no more than a range of 100 values can be viewed at once without, +     * Moves the left side of the current viewport to the specified x-position., +     * @param xValue, +    public void moveViewToX(float xValue) {, +        Runnable job = new MoveViewJob(mViewPortHandler, xValue, 0f,, +     * x-value on the x-axis, and center the viewport to the specified y value on the y-axis., +     * This will move the left side of the current viewport to the specified x-value, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, +import com.github.mikephil.charting.components.YAxis;, +, +    @Override, +    public void setVisibleXRangeMaximum(float maxXRange) {, +        float xScale = mXAxis.mAxisRange / (maxXRange);, +        mViewPortHandler.setMinimumScaleY(xScale);, +    }, +, +    @Override, +    public void setVisibleYRangeMaximum(float maxYRange, AxisDependency axis) {, +        float yScale = getDeltaY(axis) / maxYRange;, +        mViewPortHandler.setMinimumScaleX(yScale);, +    }, +, +    @Override, +    public void setVisibleXRange(float minXRange, float maxXRange) {, +        float maxScale = mXAxis.mAxisRange / minXRange;, +        float minScale = mXAxis.mAxisRange / maxXRange;, +        mViewPortHandler.setMinMaxScaleY(minScale, maxScale);, +    }, +++ b/MPChartExample/build.gradle, +    //compile 'com.github.PhilJay:MPAndroidChart:v2.2.5', +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +     * 10, no more than a range of 10 on the x-axis can be viewed at once without, +     * 10, no less than a range of 10 on the x-axis can be viewed at once without, +     * Limits the maximum and minimum x range that can be visible by pinching and zooming. e.g. minRange=10, maxRange=100 the, +     * smallest range to be displayed at once is 10, and no more than a range of 100 values can be viewed at once without, +     * Moves the left side of the current viewport to the specified x-position., +     * @param xValue, +    public void moveViewToX(float xValue) {, +        Runnable job = new MoveViewJob(mViewPortHandler, xValue, 0f,, +     * x-value on the x-axis, and center the viewport to the specified y value on the y-axis., +     * This will move the left side of the current viewport to the specified x-value, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, +import com.github.mikephil.charting.components.YAxis;, +, +    @Override, +    public void setVisibleXRangeMaximum(float maxXRange) {, +        float xScale = mXAxis.mAxisRange / (maxXRange);, +        mViewPortHandler.setMinimumScaleY(xScale);, +    }, +, +    @Override, +    public void setVisibleYRangeMaximum(float maxYRange, AxisDependency axis) {, +        float yScale = getDeltaY(axis) / maxYRange;, +        mViewPortHandler.setMinimumScaleX(yScale);, +    }, +, +    @Override, +    public void setVisibleXRange(float minXRange, float maxXRange) {, +        float maxScale = mXAxis.mAxisRange / minXRange;, +        float minScale = mXAxis.mAxisRange / maxXRange;, +        mViewPortHandler.setMinMaxScaleY(minScale, maxScale);, +    }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java, +    public void setMinMaxScaleY(float minScaleY, float maxScaleY) {, +, +        if (minScaleY < 1f), +            minScaleY = 1f;, +, +        if (maxScaleY == 0.f), +            maxScaleY = Float.MAX_VALUE;, +, +        mMinScaleX = minScaleY;, +        mMaxScaleX = maxScaleY;, +, +        limitTransAndScale(mMatrixTouch, mContentRect);, +    }, +]