[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        l.setPosition(LegendPosition.BELOW_CHART_LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        l.setPosition(LegendPosition.BELOW_CHART_LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        l.setPosition(LegendPosition.BELOW_CHART_LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float offsetLeft = 0f, offsetRight = 0f, offsetTop = 0f, offsetBottom = 0f;, +                offsetRight += mLegend.mTextWidthMax;, +                offsetBottom += mLegend.mTextHeightMax * 3f;, +                    label + (mAxisLeft.mAxisMinimum < 0 ? "---" : "++")); // offsets, +            offsetLeft += ylabelwidth + mAxisRendererLeft.getXOffset() / 2f;, +                    label + (mAxisLeft.mAxisMinimum < 0 ? "---" : "++")); // offsets, +            offsetRight += ylabelwidth + mAxisRendererRight.getXOffset() / 2f;, +                offsetBottom += xlabelheight;, +                offsetTop += xlabelheight;, +                offsetBottom += xlabelheight;, +                offsetTop += xlabelheight;, +        float min = Utils.convertDpToPixel(10f);, +        mViewPortHandler.restrainViewPort(Math.max(min, offsetLeft), Math.max(min, offsetTop),, +                Math.max(min, offsetRight), Math.max(min, offsetBottom));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        l.setPosition(LegendPosition.BELOW_CHART_LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float offsetLeft = 0f, offsetRight = 0f, offsetTop = 0f, offsetBottom = 0f;, +                offsetRight += mLegend.mTextWidthMax;, +                offsetBottom += mLegend.mTextHeightMax * 3f;, +                    label + (mAxisLeft.mAxisMinimum < 0 ? "---" : "++")); // offsets, +            offsetLeft += ylabelwidth + mAxisRendererLeft.getXOffset() / 2f;, +                    label + (mAxisLeft.mAxisMinimum < 0 ? "---" : "++")); // offsets, +            offsetRight += ylabelwidth + mAxisRendererRight.getXOffset() / 2f;, +                offsetBottom += xlabelheight;, +                offsetTop += xlabelheight;, +                offsetBottom += xlabelheight;, +                offsetTop += xlabelheight;, +        float min = Utils.convertDpToPixel(10f);, +        mViewPortHandler.restrainViewPort(Math.max(min, offsetLeft), Math.max(min, offsetTop),, +                Math.max(min, offsetRight), Math.max(min, offsetBottom));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        l.setPosition(LegendPosition.BELOW_CHART_LEFT);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/DrawChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float offsetLeft = 0f, offsetRight = 0f, offsetTop = 0f, offsetBottom = 0f;, +                offsetRight += mLegend.mTextWidthMax;, +                offsetBottom += mLegend.mTextHeightMax * 3f;, +                    label + (mAxisLeft.mAxisMinimum < 0 ? "---" : "++")); // offsets, +            offsetLeft += ylabelwidth + mAxisRendererLeft.getXOffset() / 2f;, +                    label + (mAxisLeft.mAxisMinimum < 0 ? "---" : "++")); // offsets, +            offsetRight += ylabelwidth + mAxisRendererRight.getXOffset() / 2f;, +                offsetBottom += xlabelheight;, +                offsetTop += xlabelheight;, +                offsetBottom += xlabelheight;, +                offsetTop += xlabelheight;, +        float min = Utils.convertDpToPixel(10f);, +        mViewPortHandler.restrainViewPort(Math.max(min, offsetLeft), Math.max(min, offsetTop),, +                Math.max(min, offsetRight), Math.max(min, offsetBottom));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +++ b/MPChartLib/src/com/github/mikephil/charting/components/Legend.java, +    /** the total width of the legend (needed width space) */, +    public float mNeededWidth = 0f;, +, +    /** the total height of the legend (needed height space) */, +    public float mNeededHeight = 0f;, +    , +    public float mTextHeightMax = 0f;, +    , +    public float mTextWidthMax = 0f;, +, +    /**, +     * Calculates the dimensions of the Legend. This includes the maximum width, +     * and height of a single entry, as well as the total width and height of, +     * the Legend., +     * , +     * @param labelpaint, +     */, +    public void calculateDimensions(Paint labelpaint) {, +, +        if (mPosition == LegendPosition.RIGHT_OF_CHART, +                || mPosition == LegendPosition.RIGHT_OF_CHART_CENTER, +                || mPosition == LegendPosition.PIECHART_CENTER) {, +            mNeededWidth = getMaximumEntryWidth(labelpaint);, +            mNeededHeight = getFullHeight(labelpaint);, +            mTextWidthMax = mNeededWidth;, +            mTextHeightMax = getMaximumEntryHeight(labelpaint);, +, +        } else {, +, +            mNeededWidth = getFullWidth(labelpaint);, +            mNeededHeight = getMaximumEntryHeight(labelpaint);, +            mTextWidthMax = getMaximumEntryWidth(labelpaint);, +            mTextHeightMax = mNeededHeight;, +        }, +    }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +        l.setPosition(LegendPosition.BELOW_CHART_LEFT);]