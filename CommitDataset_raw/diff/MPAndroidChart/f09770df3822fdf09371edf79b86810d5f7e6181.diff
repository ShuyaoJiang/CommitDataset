[+++ b/MPChartExample/build.gradle, +    compile 'io.realm:realm-android:0.87.2' // dependency for realm-database API (http://realm.io), +    //compile 'com.github.PhilJay:MPAndroidChart:v2.2.0', +++ b/MPChartExample/build.gradle, +    compile 'io.realm:realm-android:0.87.2' // dependency for realm-database API (http://realm.io), +    //compile 'com.github.PhilJay:MPAndroidChart:v2.2.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java, +    public void setFloatValue(Float value) {, +++ b/MPChartExample/build.gradle, +    compile 'io.realm:realm-android:0.87.2' // dependency for realm-database API (http://realm.io), +    //compile 'com.github.PhilJay:MPAndroidChart:v2.2.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java, +    public void setFloatValue(Float value) {, +++ b/MPChartLib/build.gradle, +    provided 'io.realm:realm-android:0.87.2' // "optional" dependency to realm-database API, +++ b/MPChartExample/build.gradle, +    compile 'io.realm:realm-android:0.87.2' // dependency for realm-database API (http://realm.io), +    //compile 'com.github.PhilJay:MPAndroidChart:v2.2.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java, +    public void setFloatValue(Float value) {, +++ b/MPChartLib/build.gradle, +    provided 'io.realm:realm-android:0.87.2' // "optional" dependency to realm-database API, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +     * the maximum number of entries to which values will be drawn, +     * (entry numbers greater than this value will cause value-labels to disappear), +    protected boolean mDrawGridBackground = false;, +     * the object representing the labels on the left y-axis, +, +    /**, +     * the object representing the labels on the right y-axis, +     */, +    /**, +     * Gets the minimum offset (padding) around the chart, defaults to 15.f, +     */, +    /**, +     * Sets the minimum offset (padding) around the chart, defaults to 15.f, +     */, +++ b/MPChartExample/build.gradle, +    compile 'io.realm:realm-android:0.87.2' // dependency for realm-database API (http://realm.io), +    //compile 'com.github.PhilJay:MPAndroidChart:v2.2.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java, +    public void setFloatValue(Float value) {, +++ b/MPChartLib/build.gradle, +    provided 'io.realm:realm-android:0.87.2' // "optional" dependency to realm-database API, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +     * the maximum number of entries to which values will be drawn, +     * (entry numbers greater than this value will cause value-labels to disappear), +    protected boolean mDrawGridBackground = false;, +     * the object representing the labels on the left y-axis, +, +    /**, +     * the object representing the labels on the right y-axis, +     */, +    /**, +     * Gets the minimum offset (padding) around the chart, defaults to 15.f, +     */, +    /**, +     * Sets the minimum offset (padding) around the chart, defaults to 15.f, +     */, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java, +, +, +    /** ###### ###### DATA RELATED METHODS ###### ###### */, +, +    @Override, +    public int getIndexInEntries(int xIndex) {, +, +        for (int i = 0; i < getEntryCount(); i++) {, +            if (xIndex == getEntryForIndex(i).getXIndex()), +                return i;, +        }, +, +        return -1;, +    }, +, +    @Override, +    public boolean removeFirst() {, +, +        T entry = getEntryForIndex(0);, +        return removeEntry(entry);, +    }, +, +    @Override, +    public boolean removeLast() {, +, +        T entry = getEntryForIndex(getEntryCount() - 1);, +        return removeEntry(entry);, +    }, +, +    @Override, +    public boolean removeEntry(int xIndex) {, +, +        T e = getEntryForXIndex(xIndex);, +        return removeEntry(e);, +    }, +, +    @Override, +    public boolean contains(T e) {, +, +        for(int i = 0; i < getEntryCount(); i++) {]