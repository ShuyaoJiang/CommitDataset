[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +import android.text.SpannableString;, +    private SpannableString mCenterText = new SpannableString("");, +     * Sets the text SpannableString that is displayed in the center of the PieChart., +     *, +     * @param text, +     */, +    public void setCenterText(SpannableString text) {, +, +        if (text == null), +            mCenterText = new SpannableString("");, +        else, +            mCenterText = text;, +    }, +, +    /**, +    public void setCenterText(String text) {, +        setCenterText(new SpannableString(text));, +    public SpannableString getCenterText() {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +import android.text.SpannableString;, +    private SpannableString mCenterText = new SpannableString("");, +     * Sets the text SpannableString that is displayed in the center of the PieChart., +     *, +     * @param text, +     */, +    public void setCenterText(SpannableString text) {, +, +        if (text == null), +            mCenterText = new SpannableString("");, +        else, +            mCenterText = text;, +    }, +, +    /**, +    public void setCenterText(String text) {, +        setCenterText(new SpannableString(text));, +    public SpannableString getCenterText() {, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java, +import android.text.SpannableString;, +    private SpannableString mCenterTextLastValue;, +        SpannableString centerText = mChart.getCenterText();, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +import android.text.SpannableString;, +    private SpannableString mCenterText = new SpannableString("");, +     * Sets the text SpannableString that is displayed in the center of the PieChart., +     *, +     * @param text, +     */, +    public void setCenterText(SpannableString text) {, +, +        if (text == null), +            mCenterText = new SpannableString("");, +        else, +            mCenterText = text;, +    }, +, +    /**, +    public void setCenterText(String text) {, +        setCenterText(new SpannableString(text));, +    public SpannableString getCenterText() {, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java, +import android.text.SpannableString;, +    private SpannableString mCenterTextLastValue;, +        SpannableString centerText = mChart.getCenterText();, +++ b/MPChartLib/src/com/github/mikephil/charting/utils/Utils.java, +import android.text.Layout;, +import android.text.StaticLayout;, +import android.text.TextPaint;, +    private static Paint.FontMetrics mFontMetricsBuffer = new Paint.FontMetrics();, +    public static void drawText(Canvas c, String text, float x, float y,, +                                Paint paint,, +                                PointF anchor, float angleDegrees) {, +        final float lineHeight = paint.getFontMetrics(mFontMetricsBuffer);, +, +        // Android does not snap the bounds to line boundaries,, +        //  and draws from bottom to top., +        // And we want to normalize it., +        drawOffsetY += lineHeight;, +            drawOffsetY -= lineHeight * 0.5f;, +                        lineHeight,, +                drawOffsetY -= lineHeight * anchor.y;, +    public static void drawMultilineText(Canvas c, StaticLayout textLayout,, +                                         float x, float y,, +                                         TextPaint paint,, +                                         PointF anchor, float angleDegrees) {, +, +        float drawOffsetX = 0.f;, +        float drawOffsetY = 0.f;, +        float drawWidth;, +        float drawHeight;, +, +        final float lineHeight = paint.getFontMetrics(mFontMetricsBuffer);, +, +        drawWidth = textLayout.getWidth();, +        drawHeight = textLayout.getLineCount() * lineHeight;, +, +        // Android sometimes has pre-padding, +        drawOffsetX -= mDrawTextRectBuffer.left;, +]