[+++ b/MPChartExample/res/layout/activity_barchart.xml, +        android:max="500", +++ b/MPChartExample/res/layout/activity_barchart.xml, +        android:max="500", +++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="500", +++ b/MPChartExample/res/layout/activity_barchart.xml, +        android:max="500", +++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="500", +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +        mChart.setDragEnabled(true);, +        mChart.setTouchEnabled(true);, +++ b/MPChartExample/res/layout/activity_barchart.xml, +        android:max="500", +++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="500", +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +        mChart.setDragEnabled(true);, +        mChart.setTouchEnabled(true);, +++ b/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java, +        , +        // immediately unselect, +//        mChart.highlightValues(null);, +++ b/MPChartExample/res/layout/activity_barchart.xml, +        android:max="500", +++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="500", +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +        mChart.setDragEnabled(true);, +        mChart.setTouchEnabled(true);, +++ b/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java, +        , +        // immediately unselect, +//        mChart.highlightValues(null);, +++ b/MPChartLib/src/com/github/mikephil/charting/BarChart.java, +    @Override, +    protected void init() {, +        super.init();, +        , +        mHighlightPaint = new Paint(Paint.ANTI_ALIAS_FLAG);, +        mHighlightPaint.setStyle(Paint.Style.STROKE);, +        mHighlightPaint.setStrokeWidth(2f);, +        mHighlightPaint.setColor(Color.rgb(255, 187, 115));, +    }, +, +                int index = mIndicesToHightlight[i];, +                // check outofbounds, +                if (index < mYVals.size()) {, +, +                    float[] pts = new float[] {, +                            index + 0.5f, mYChartMax, index + 0.5f, mYChartMin,, +                            0, mYVals.get(index), mDeltaX, mYVals.get(index), +                    };, +                    , +                    transformPointArray(pts);, +                    // draw the highlight lines, +                    mDrawCanvas.drawLines(pts, mHighlightPaint);, +                }, +    public void setPaint(Paint p, int which) {, +        super.setPaint(p, which);, +        , +        switch(which) {, +            case PAINT_HIGHLIGHT_BAR:, +                mHighlightPaint = p;, +                break;, +        }, +    }, +, +    @Override, +++ b/MPChartExample/res/layout/activity_barchart.xml, +        android:max="500", +++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="500", +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +        mChart.setDragEnabled(true);, +        mChart.setTouchEnabled(true);, +++ b/MPChartExample/src/com/example/mpchartexample/PieChartActivity.java, +        , +        // immediately unselect, +//        mChart.highlightValues(null);, +++ b/MPChartLib/src/com/github/mikephil/charting/BarChart.java, +    @Override, +    protected void init() {, +        super.init();, +        , +        mHighlightPaint = new Paint(Paint.ANTI_ALIAS_FLAG);, +        mHighlightPaint.setStyle(Paint.Style.STROKE);, +        mHighlightPaint.setStrokeWidth(2f);, +        mHighlightPaint.setColor(Color.rgb(255, 187, 115));, +    }, +, +                int index = mIndicesToHightlight[i];, +                // check outofbounds, +                if (index < mYVals.size()) {, +, +                    float[] pts = new float[] {, +                            index + 0.5f, mYChartMax, index + 0.5f, mYChartMin,, +                            0, mYVals.get(index), mDeltaX, mYVals.get(index), +                    };]