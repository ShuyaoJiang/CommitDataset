[+++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, +		mChart.setYRangeFixed(false);, +		mChart.setYRange(-40f, 40f);, +++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, +		mChart.setYRangeFixed(false);, +		mChart.setYRange(-40f, 40f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +		if (!mFixedYValues) {, +			prepare();, +		} else {, +	}, +		if (minY < 0) {, +			mStartAtZero = false;, +		}, +	 * Sets the y range fixed., +	 * , +	 * @param fixed, +	 */, +	public void setYRangeFixed(boolean fixed) {, +		mFixedYValues = fixed;, +	}, +, +	/**, +++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, +		mChart.setYRangeFixed(false);, +		mChart.setYRange(-40f, 40f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +		if (!mFixedYValues) {, +			prepare();, +		} else {, +	}, +		if (minY < 0) {, +			mStartAtZero = false;, +		}, +	 * Sets the y range fixed., +	 * , +	 * @param fixed, +	 */, +	public void setYRangeFixed(boolean fixed) {, +		mFixedYValues = fixed;, +	}, +, +	/**, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import java.io.FileOutputStream;, +import java.io.OutputStream;, +import java.util.ArrayList;, +import java.util.Calendar;, +import java.util.Locale;, +, +	 * returns the left offset of the chart in pixels, +	 * , +	 * @return, +	 */, +	public float getOffsetLeft() {, +		return mOffsetLeft;, +	}, +, +	/**, +++ b/MPChartExample/src/com/example/mpchartexample/DrawChartActivity.java, +		mChart.setYRangeFixed(false);, +		mChart.setYRange(-40f, 40f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +		if (!mFixedYValues) {, +			prepare();, +		} else {, +	}, +		if (minY < 0) {, +			mStartAtZero = false;, +		}, +	 * Sets the y range fixed., +	 * , +	 * @param fixed, +	 */, +	public void setYRangeFixed(boolean fixed) {, +		mFixedYValues = fixed;, +	}, +, +	/**, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import java.io.FileOutputStream;, +import java.io.OutputStream;, +import java.util.ArrayList;, +import java.util.Calendar;, +import java.util.Locale;, +, +	 * returns the left offset of the chart in pixels, +	 * , +	 * @return, +	 */, +	public float getOffsetLeft() {, +		return mOffsetLeft;, +	}, +, +	/**, +++ b/MPChartLib/src/com/github/mikephil/charting/data/DrawingContext.java, +	public void deleteLastDrawingEntry(ChartData data) {, +		data.getDataSets().remove(mCurrentDrawingDataSet);, +		mCurrentDrawingDataSet = null;, +		mCurrentDrawingEntries = null;]