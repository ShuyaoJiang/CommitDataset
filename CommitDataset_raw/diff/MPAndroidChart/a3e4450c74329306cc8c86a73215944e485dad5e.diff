[+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +import com.github.mikephil.charting.data.BarEntry;, +import io.realm.DynamicRealmObject;, +    public void build(RealmResults<T> results) {, +, +        int xIndex = 0;, +        for (T object : results) {, +            mValues.add(buildEntryFromResultObject(object, xIndex++));, +        }, +    }, +, +    public S buildEntryFromResultObject(T realmObject, int xIndex) {, +        DynamicRealmObject dynamicObject = new DynamicRealmObject(realmObject);, +, +        return (S)new Entry(dynamicObject.getFloat(mValuesField),, +                mIndexField == null ? xIndex : dynamicObject.getInt(mIndexField));, +    }, +            S entry = mValues.get(m);, +, +            if (x == entry.getXIndex()) {, +            if (x > entry.getXIndex()), +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +import com.github.mikephil.charting.data.BarEntry;, +import io.realm.DynamicRealmObject;, +    public void build(RealmResults<T> results) {, +, +        int xIndex = 0;, +        for (T object : results) {, +            mValues.add(buildEntryFromResultObject(object, xIndex++));, +        }, +    }, +, +    public S buildEntryFromResultObject(T realmObject, int xIndex) {, +        DynamicRealmObject dynamicObject = new DynamicRealmObject(realmObject);, +, +        return (S)new Entry(dynamicObject.getFloat(mValuesField),, +                mIndexField == null ? xIndex : dynamicObject.getInt(mIndexField));, +    }, +            S entry = mValues.get(m);, +, +            if (x == entry.getXIndex()) {, +            if (x > entry.getXIndex()), +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +import com.github.mikephil.charting.data.BarEntry;, +import io.realm.DynamicRealmObject;, +    public void build(RealmResults<T> results) {, +, +        int xIndex = 0;, +        for (T object : results) {, +            mValues.add(buildEntryFromResultObject(object, xIndex++));, +        }, +    }, +, +    public S buildEntryFromResultObject(T realmObject, int xIndex) {, +        DynamicRealmObject dynamicObject = new DynamicRealmObject(realmObject);, +, +        return (S)new Entry(dynamicObject.getFloat(mValuesField),, +                mIndexField == null ? xIndex : dynamicObject.getInt(mIndexField));, +    }, +            S entry = mValues.get(m);, +, +            if (x == entry.getXIndex()) {, +            if (x > entry.getXIndex()), +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmLineRadarDataSet.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java, +import com.github.mikephil.charting.data.Entry;, +import io.realm.RealmFieldType;, +        super.build(results);, +        calcStackSize();, +    }, +, +    @Override, +    public BarEntry buildEntryFromResultObject(T realmObject, int xIndex) {, +        if (dynamicObject.getFieldType(mValuesField) == RealmFieldType.LIST) {, +            return new BarEntry(values,, +                    mIndexField == null ? xIndex : dynamicObject.getInt(mIndexField));, +        } else {, +            float value = dynamicObject.getFloat(mValuesField);, +            return new BarEntry(value,, +                    mIndexField == null ? xIndex : dynamicObject.getInt(mIndexField));, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/base/RealmBaseDataSet.java, +import com.github.mikephil.charting.data.BarEntry;, +import io.realm.DynamicRealmObject;, +    public void build(RealmResults<T> results) {, +, +        int xIndex = 0;, +        for (T object : results) {, +            mValues.add(buildEntryFromResultObject(object, xIndex++));, +        }, +    }, +, +    public S buildEntryFromResultObject(T realmObject, int xIndex) {, +        DynamicRealmObject dynamicObject = new DynamicRealmObject(realmObject);, +, +        return (S)new Entry(dynamicObject.getFloat(mValuesField),, +                mIndexField == null ? xIndex : dynamicObject.getInt(mIndexField));, +    }, +            S entry = mValues.get(m);, +]