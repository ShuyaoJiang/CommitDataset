[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +    public void onChartGestureStart(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +    public void onChartGestureEnd(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +        Log.i("Gesture", "END, lastGesture: " + lastPerformedGesture);, +, +        if(lastPerformedGesture != ChartTouchListener.ChartGesture.SINGLE_TAP), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +    public void onChartGestureStart(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +    public void onChartGestureEnd(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +        Log.i("Gesture", "END, lastGesture: " + lastPerformedGesture);, +, +        if(lastPerformedGesture != ChartTouchListener.ChartGesture.SINGLE_TAP), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +    public void onChartGestureStart(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +    public void onChartGestureEnd(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +        mChart.highlightValues(null);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +    public void onChartGestureStart(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +    public void onChartGestureEnd(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +        Log.i("Gesture", "END, lastGesture: " + lastPerformedGesture);, +, +        if(lastPerformedGesture != ChartTouchListener.ChartGesture.SINGLE_TAP), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +    public void onChartGestureStart(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +    public void onChartGestureEnd(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +        mChart.highlightValues(null);, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, +                startAction(event);, +, +, +                        if (!mChart.isFullyZoomedOut() && mChart.isDragEnabled()) {, +                        } else {, +, +                            mLastGesture = ChartGesture.DRAG;, +, +                        mLastGesture = ChartGesture.DRAG;, +                endAction(event);, +, +                endAction(event);, +        mLastGesture = ChartGesture.DRAG;, +, +                    mLastGesture = ChartGesture.PINCH_ZOOM;, +, +                    mLastGesture = ChartGesture.X_ZOOM;, +, +                    mLastGesture = ChartGesture.Y_ZOOM;, +, +        mLastGesture = ChartGesture.DOUBLE_TAP;, +, +        mLastGesture = ChartGesture.LONG_PRESS;, +, +        mLastGesture = ChartGesture.SINGLE_TAP;, +        return super.onSingleTapUp(e);, +//    @Override, +//    public boolean onSingleTapConfirmed(MotionEvent e) {, +//, +//        mLastGesture = ChartGesture.SINGLE_TAP;, +//, +//        OnChartGestureListener l = mChart.getOnChartGestureListener();, +//, +//        if (l != null) {, +//            l.onChartSingleTapped(e);, +//            l.onChartGestureEnd(e, mLastGesture);, +//        }, +//, +//        return super.onSingleTapConfirmed(e);, +//    }, +, +        mLastGesture = ChartGesture.FLING;, +, +        if (l != null) {, +        }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +    public void onChartGestureStart(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +    public void onChartGestureEnd(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +        Log.i("Gesture", "END, lastGesture: " + lastPerformedGesture);, +, +        if(lastPerformedGesture != ChartTouchListener.ChartGesture.SINGLE_TAP), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +    public void onChartGestureStart(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +    public void onChartGestureEnd(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture) {, +        mChart.highlightValues(null);, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, +                startAction(event);, +, +, +                        if (!mChart.isFullyZoomedOut() && mChart.isDragEnabled()) {, +                        } else {, +, +                            mLastGesture = ChartGesture.DRAG;, +, +                        mLastGesture = ChartGesture.DRAG;, +                endAction(event);]