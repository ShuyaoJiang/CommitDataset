[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            } else if (mAxisLeft.mAxisMinimum >= 0f) {, +                // We have positive values only, stay in the positive zone, +            } else if (mAxisRight.mAxisMinimum >= 0f) {, +                // We have positive values only, stay in the positive zone, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            } else if (mAxisLeft.mAxisMinimum >= 0f) {, +                // We have positive values only, stay in the positive zone, +            } else if (mAxisRight.mAxisMinimum >= 0f) {, +                // We have positive values only, stay in the positive zone, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +            mYAxis.mAxisMinimum = Math.min(0f, mYAxis.mAxisMinimum);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            } else if (mAxisLeft.mAxisMinimum >= 0f) {, +                // We have positive values only, stay in the positive zone, +            } else if (mAxisRight.mAxisMinimum >= 0f) {, +                // We have positive values only, stay in the positive zone, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +            mYAxis.mAxisMinimum = Math.min(0f, mYAxis.mAxisMinimum);, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java, +				final double rawCount = yMin / interval;, +				double first = rawCount < 0.0 ? Math.floor(rawCount) * interval : Math.ceil(rawCount) * interval;, +, +				if (first < yMin && mYAxis.isStartAtZeroEnabled()) {, +					// Force the first label to be at the 0 (or smallest negative value), +					first = yMin;, +				}, +		if (!mYAxis.isStartAtZeroEnabled() && mYAxis.mEntries[0] < yMin) {, +			// If startAtZero is disabled, and the first label is lower that the axis minimum,, +			// Then adjust the axis minimum, +			mYAxis.mAxisMinimum = mYAxis.mEntries[0];, +		}, +]