[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +    protected void drawDataSet(int index) {, +        BarDataSet dataSet = mData.getDataSets().get(index);, +            float x = e.getXIndex() + j * (mData.getDataSetCount() - 1) + index + space * j + space / 2f;, +            float posOffset = 0f;, +            float negOffset = 0f;, +                float[] valuePoints = mTrans.generateTransformedValuesBarChart(entries, i, mData,, +                        mPhaseY);, +                                        transformed[k + 1], +                                                + (vals[k / 2] >= 0 ? posOffset : negOffset));, +        return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,, +                "8") * 1.5f);, +        return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils, +                .convertDpToPixel(5));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +    protected void drawDataSet(int index) {, +        BarDataSet dataSet = mData.getDataSets().get(index);, +            float x = e.getXIndex() + j * (mData.getDataSetCount() - 1) + index + space * j + space / 2f;, +            float posOffset = 0f;, +            float negOffset = 0f;, +                float[] valuePoints = mTrans.generateTransformedValuesBarChart(entries, i, mData,, +                        mPhaseY);, +                                        transformed[k + 1], +                                                + (vals[k / 2] >= 0 ? posOffset : negOffset));, +        return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,, +                "8") * 1.5f);, +        return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils, +                .convertDpToPixel(5));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.data.DataSet;, +//    @Override, +//    protected void drawData() {, +//        for (int i = 0; i < mData.getDataSetCount(); i++) {, +//, +//            DataSet<?> ds = mData.getDataSets().get(i);, +//            if (ds.isVisible()), +//                drawDataSet(i);, +//        }, +//    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +    protected void drawDataSet(int index) {, +        BarDataSet dataSet = mData.getDataSets().get(index);, +            float x = e.getXIndex() + j * (mData.getDataSetCount() - 1) + index + space * j + space / 2f;, +            float posOffset = 0f;, +            float negOffset = 0f;, +                float[] valuePoints = mTrans.generateTransformedValuesBarChart(entries, i, mData,, +                        mPhaseY);, +                                        transformed[k + 1], +                                                + (vals[k / 2] >= 0 ? posOffset : negOffset));, +        return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,, +                "8") * 1.5f);, +        return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils, +                .convertDpToPixel(5));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.data.DataSet;, +//    @Override, +//    protected void drawData() {, +//        for (int i = 0; i < mData.getDataSetCount(); i++) {, +//, +//            DataSet<?> ds = mData.getDataSets().get(i);, +//            if (ds.isVisible()), +//                drawDataSet(i);, +//        }, +//    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java, +    protected void drawDataSet(int index) {, +        CandleDataSet dataSet = mData.getDataSets().get(index);, +            if (e == null), +                continue;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +    protected void drawDataSet(int index) {, +        BarDataSet dataSet = mData.getDataSets().get(index);, +            float x = e.getXIndex() + j * (mData.getDataSetCount() - 1) + index + space * j + space / 2f;, +            float posOffset = 0f;, +            float negOffset = 0f;, +                float[] valuePoints = mTrans.generateTransformedValuesBarChart(entries, i, mData,, +                        mPhaseY);, +                                        transformed[k + 1], +                                                + (vals[k / 2] >= 0 ? posOffset : negOffset));, +        return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,, +                "8") * 1.5f);, +        return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils, +                .convertDpToPixel(5));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.data.DataSet;, +//    @Override, +//    protected void drawData() {, +//        for (int i = 0; i < mData.getDataSetCount(); i++) {, +//, +//            DataSet<?> ds = mData.getDataSets().get(i);, +//            if (ds.isVisible()), +//                drawDataSet(i);, +//        }, +//    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java, +    protected void drawDataSet(int index) {, +        CandleDataSet dataSet = mData.getDataSets().get(index);]