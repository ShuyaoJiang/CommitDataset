[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.DayAxisValueFormatter;, +        xAxis.setValueFormatter(new DayAxisValueFormatter(mChart));, +        tvX.setText("" + (mSeekBarX.getProgress() + 2));, +        mChart.getXAxis().setAxisMaxValue(start + count + 2);, +        for (int i = (int) start; i < start + count + 1; i++) {, +    public void onNothingSelected() { }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.DayAxisValueFormatter;, +        xAxis.setValueFormatter(new DayAxisValueFormatter(mChart));, +        tvX.setText("" + (mSeekBarX.getProgress() + 2));, +        mChart.getXAxis().setAxisMaxValue(start + count + 2);, +        for (int i = (int) start; i < start + count + 1; i++) {, +    public void onNothingSelected() { }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/DayAxisValueFormatter.java, +package com.xxmassdeveloper.mpchartexample.custom;, +, +import com.github.mikephil.charting.charts.BarLineChartBase;, +import com.github.mikephil.charting.charts.Chart;, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +import com.github.mikephil.charting.formatter.DefaultAxisValueFormatter;, +, +/**, + * Created by philipp on 02/06/16., + */, +public class DayAxisValueFormatter implements AxisValueFormatter {, +, +    protected String[] mMonths = new String[]{, +            "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec", +    };, +, +    private BarLineChartBase<?> chart;, +, +    public DayAxisValueFormatter(BarLineChartBase<?> chart) {, +        this.chart = chart;, +    }, +, +    @Override, +    public String getFormattedValue(float value, AxisBase axis) {, +, +        int days = (int) value;, +, +        if (days == 0), +            return "";, +, +        int year = determineYear(days);, +, +        int month = determineMonth(days);, +        String monthName = mMonths[month % mMonths.length];, +        String yearName = String.valueOf(year);, +, +        if (year == 2017) {, +            System.out.println("");, +        }, +, +        if (chart.getVisibleXRange() > 30 * axis.getLabelCount()) {, +, +            return monthName + " " + yearName;, +        } else {, +, +            int dayOfMonth = determineDayOfMonth(days, month + 12 * (year - 2016));, +, +            String appendix = "th";, +, +            switch (dayOfMonth) {, +                case 1:, +                    appendix = "st";, +                    break;, +                case 2:, +                    appendix = "nd";, +                    break;, +                case 3:, +                    appendix = "rd";, +                    break;, +                case 21:, +                    appendix = "st";, +                    break;, +                case 22:, +                    appendix = "nd";, +                    break;, +                case 23:, +                    appendix = "rd";, +                    break;, +                case 31:, +                    appendix = "st";, +                    break;, +            }, +, +            return dayOfMonth + appendix + " " + monthName;, +        }, +    }, +, +    private int getDaysForMonth(int month, int year) {, +, +        if (month == 1) {, +, +            if (year == 2016 || year == 2020), +                return 29;, +            else]