[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.components.YAxis;, +                    high = new Highlight(high.getX(), Float.NaN, Float.NaN, Float.NaN, -1, YAxis.AxisDependency.LEFT);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.components.YAxis;, +                    high = new Highlight(high.getX(), Float.NaN, Float.NaN, Float.NaN, -1, YAxis.AxisDependency.LEFT);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import com.github.mikephil.charting.highlight.Highlight;, +    /**, +     * holds the normalized version of the current rotation angle of the chart, +     */, +    /**, +     * holds the raw version of the current rotation angle of the chart, +     */, +    /**, +     * flag that indicates if rotation is enabled or not, +     */, +    /**, +     * Sets the minimum offset (padding) around the chart, defaults to 0.f, +     */, +                case VERTICAL: {, +    /**, +     * Gets the minimum offset (padding) around the chart, defaults to 0.f, +     */, +    /**, +     * Sets the minimum offset (padding) around the chart, defaults to 0.f, +     */, +     * Returns an array of Highlight objects for the given x-index. The Highlight, +    public List<Highlight> getSelectionDetailsAtIndex(int xIndex) {, +        List<Highlight> vals = new ArrayList<Highlight>();, +            vals.add(new Highlight(0f, yVal, 0f, 0f, i, dataSet.getAxisDependency()));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.components.YAxis;, +                    high = new Highlight(high.getX(), Float.NaN, Float.NaN, Float.NaN, -1, YAxis.AxisDependency.LEFT);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import com.github.mikephil.charting.highlight.Highlight;, +    /**, +     * holds the normalized version of the current rotation angle of the chart, +     */, +    /**, +     * holds the raw version of the current rotation angle of the chart, +     */, +    /**, +     * flag that indicates if rotation is enabled or not, +     */, +    /**, +     * Sets the minimum offset (padding) around the chart, defaults to 0.f, +     */, +                case VERTICAL: {, +    /**, +     * Gets the minimum offset (padding) around the chart, defaults to 0.f, +     */, +    /**, +     * Sets the minimum offset (padding) around the chart, defaults to 0.f, +     */, +     * Returns an array of Highlight objects for the given x-index. The Highlight, +    public List<Highlight> getSelectionDetailsAtIndex(int xIndex) {, +        List<Highlight> vals = new ArrayList<Highlight>();, +            vals.add(new Highlight(0f, yVal, 0f, 0f, i, dataSet.getAxisDependency()));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +        Highlight high = getHighlightForX((float) pos.x, x, y);, +        if (high == null), +        IBarDataSet set = barData.getDataSetByIndex(high.getDataSetIndex());, +            return getStackedHighlight(high,, +        return high;, +     * @param high the Highlight to work with looking for stacked values, +     * @param yVal, +    protected Highlight getStackedHighlight(Highlight high, IBarDataSet set, float xVal, float yVal) {, +            return high;, +                int stackIndex = getClosestStackIndex(ranges, yVal);, +, +, +                Highlight stackedHigh = new Highlight(, +                        high.getXPx(),, +                        high.getYPx(),, +                        high.getDataSetIndex(),, +                        ranges[stackIndex],, +                        high.getAxis(), +, +                return stackedHigh;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.components.YAxis;, +                    high = new Highlight(high.getX(), Float.NaN, Float.NaN, Float.NaN, -1, YAxis.AxisDependency.LEFT);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java, +import com.github.mikephil.charting.highlight.Highlight;, +    /**, +     * holds the normalized version of the current rotation angle of the chart, +     */, +    /**, +     * holds the raw version of the current rotation angle of the chart, +     */, +    /**, +     * flag that indicates if rotation is enabled or not, +     */, +    /**, +     * Sets the minimum offset (padding) around the chart, defaults to 0.f, +     */, +                case VERTICAL: {, +    /**, +     * Gets the minimum offset (padding) around the chart, defaults to 0.f]