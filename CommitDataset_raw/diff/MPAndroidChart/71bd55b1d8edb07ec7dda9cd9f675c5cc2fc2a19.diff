[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +        mChart.setDrawYValues(false);, +, +        l.setPosition(LegendPosition.RIGHT_OF_CHART);, +            "Party A", "Party B", "Party C", "Party D", "Party E", "Party F", "Party G", "Party H",, +            "Party I", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +        mChart.setDrawYValues(false);, +, +        l.setPosition(LegendPosition.RIGHT_OF_CHART);, +            "Party A", "Party B", "Party C", "Party D", "Party E", "Party F", "Party G", "Party H",, +            "Party I", +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +, +    @Override, +    protected void calculateOffsets() {, +, +        if (mLegend == null), +            return;, +, +        // setup offsets for legend, +        if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {, +, +            mLegend.setOffsetRight(mLegend.getMaximumEntryLength(mLegendLabelPaint));, +            mLegendLabelPaint.setTextAlign(Align.LEFT);, +, +        } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {, +, +            mLegend.setOffsetBottom(mLegendLabelPaint.getTextSize() * 4f);, +        }, +, +        if (mDrawLegend) {, +, +            mOffsetBottom = Math.max(mOffsetBottom, mLegend.getOffsetBottom());, +            mOffsetRight = Math.max(mOffsetRight, mLegend.getOffsetRight() / 3 * 2);, +        }, +, +        mLegend.setOffsetTop(mOffsetTop);, +        mLegend.setOffsetLeft(mOffsetLeft);, +        , +        applyCalculatedOffsets();, +    }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +        mChart.setDrawYValues(false);, +, +        l.setPosition(LegendPosition.RIGHT_OF_CHART);, +            "Party A", "Party B", "Party C", "Party D", "Party E", "Party F", "Party G", "Party H",, +            "Party I", +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +, +    @Override, +    protected void calculateOffsets() {, +, +        if (mLegend == null), +            return;, +, +        // setup offsets for legend, +        if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART) {, +, +            mLegend.setOffsetRight(mLegend.getMaximumEntryLength(mLegendLabelPaint));, +            mLegendLabelPaint.setTextAlign(Align.LEFT);, +, +        } else if (mLegend.getPosition() == LegendPosition.BELOW_CHART_LEFT, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {, +, +            mLegend.setOffsetBottom(mLegendLabelPaint.getTextSize() * 4f);, +        }, +, +        if (mDrawLegend) {, +, +            mOffsetBottom = Math.max(mOffsetBottom, mLegend.getOffsetBottom());, +            mOffsetRight = Math.max(mOffsetRight, mLegend.getOffsetRight() / 3 * 2);, +        }, +, +        mLegend.setOffsetTop(mOffsetTop);, +        mLegend.setOffsetLeft(mOffsetLeft);, +        , +        applyCalculatedOffsets();, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +    /**, +     * Applys the newly calculated offsets to the matrices., +     */, +    protected void applyCalculatedOffsets() {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +        mChart.setDrawYValues(false);, +, +        l.setPosition(LegendPosition.RIGHT_OF_CHART);, +            "Party A", "Party B", "Party C", "Party D", "Party E", "Party F", "Party G", "Party H",, +            "Party I", +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +]