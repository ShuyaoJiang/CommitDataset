[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +			posOffset = getPositiveYOffset(mDrawValueAboveBar);, +			negOffset = getNegativeYOffset(mDrawValueAboveBar);, +	protected float getPositiveYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint, "8") * 1.5f);, +	}, +, +	protected float getNegativeYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils.convertDpToPixel(5));, +	}, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +			posOffset = getPositiveYOffset(mDrawValueAboveBar);, +			negOffset = getNegativeYOffset(mDrawValueAboveBar);, +	protected float getPositiveYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint, "8") * 1.5f);, +	}, +, +	protected float getNegativeYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils.convertDpToPixel(5));, +	}, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    protected void prepareYLabels() {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +			posOffset = getPositiveYOffset(mDrawValueAboveBar);, +			negOffset = getNegativeYOffset(mDrawValueAboveBar);, +	protected float getPositiveYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint, "8") * 1.5f);, +	}, +, +	protected float getNegativeYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils.convertDpToPixel(5));, +	}, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    protected void prepareYLabels() {, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/Transformer.java, +    protected Matrix mMatrixValueToPx = new Matrix();]