[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +        mIndicesToHightlight = null;, +     * necessary recalculations. It is crucial that this method is called, +     * everytime data is changed dynamically. Not calling this method can lead, +     * to crashes or unexpected behaviour., +    protected Highlight[] mIndicesToHightlight;, +     * Returns the array of currently highlighted values. This might a null or, +     * empty array if nothing is highlighted., +     * Returns the total number of (y) values the chart holds (across all DataSets)., +     * Set this to true to enable logcat outputs for the chart. Beware that, +     * logcat output decreases rendering performance. Default: disabled., +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +        mIndicesToHightlight = null;, +     * necessary recalculations. It is crucial that this method is called, +     * everytime data is changed dynamically. Not calling this method can lead, +     * to crashes or unexpected behaviour., +    protected Highlight[] mIndicesToHightlight;, +     * Returns the array of currently highlighted values. This might a null or, +     * empty array if nothing is highlighted., +     * Returns the total number of (y) values the chart holds (across all DataSets)., +     * Set this to true to enable logcat outputs for the chart. Beware that, +     * logcat output decreases rendering performance. Default: disabled., +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +    /**, +     * maximum y-value in the y-value array across all axes, +     */, +    /**, +     * the minimum y-value in the y-value array across all axes, +     */, +    /**, +     * the total sum of all y-values, +     */, +    /**, +     * total number of y-values across all DataSet objects, +     */, +    /**, +     * the last start value used for calcMinMax, +     */, +    /**, +     * the last end value used for calcMinMax, +     */, +    /**, +     * holds all x-values the chart represents, +     */, +    /**, +     * array that holds all DataSets the ChartData object represents, +     */, +     * Returns the average value across all entries in this Data object, +     * (all entries from the DataSets this data object holds), +     * @return, +     */, +    public float getAverage() {, +        return (float ) getYValueSum() / (float) getYValCount();, +    }, +, +    /**, +    /**, +     * Returns the first DataSet from the datasets-array that has it's dependency on the left axis., +     * Returns null if no DataSet with left dependency could be found., +     *, +     * @return, +     */, +    /**, +     * Returns the first DataSet from the datasets-array that has it's dependency on the right axis., +     * Returns null if no DataSet with right dependency could be found., +     *, +     * @return, +     */, +     * @param tf, +     * @param size, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +        mIndicesToHightlight = null;, +     * necessary recalculations. It is crucial that this method is called, +     * everytime data is changed dynamically. Not calling this method can lead, +     * to crashes or unexpected behaviour., +    protected Highlight[] mIndicesToHightlight;, +     * Returns the array of currently highlighted values. This might a null or, +     * empty array if nothing is highlighted., +     * Returns the total number of (y) values the chart holds (across all DataSets)., +     * Set this to true to enable logcat outputs for the chart. Beware that, +     * logcat output decreases rendering performance. Default: disabled., +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +    /**, +     * maximum y-value in the y-value array across all axes, +     */, +    /**, +     * the minimum y-value in the y-value array across all axes, +     */, +    /**, +     * the total sum of all y-values, +     */, +    /**, +     * total number of y-values across all DataSet objects, +     */, +    /**, +     * the last start value used for calcMinMax, +     */, +    /**, +     * the last end value used for calcMinMax, +     */]