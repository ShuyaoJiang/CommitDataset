[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +		, +		for (Entry e : entries) {	    , +		    if(e != null), +		}, +			drawCubicFill(dataSet, spline);, +	protected void drawCubicFill(LineDataSet dataSet, Path spline), +		spline.lineTo((mDeltaX + 1) * mPhaseX, fillMin);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +		, +		for (Entry e : entries) {	    , +		    if(e != null), +		}, +			drawCubicFill(dataSet, spline);, +	protected void drawCubicFill(LineDataSet dataSet, Path spline), +		spline.lineTo((mDeltaX + 1) * mPhaseX, fillMin);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +import android.graphics.PorterDuff;, +import android.graphics.PorterDuffXfermode;, +     * Sets the color for the hole that is drawn in the center of the PieChart, +     * (if enabled). NOTE: Use setHoleColorTransparent(boolean enabled) to make, +     * the hole transparent., +        mHolePaint.setXfermode(null);, +     * Set the hole in the center of the PieChart transparent., +     *, +     * @param enable, +     */, +    public void setHoleColorTransparent(boolean enable) {, +        if (enable) {, +            mHolePaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_OUT));, +        } else {, +            mHolePaint.setXfermode(null);, +        }, +    }, +, +    /**, +     * Returns true if the hole in the center of the PieChart is transparent,, +     * false if not., +     *, +     * @return true if hole is transparent., +     */, +    public boolean isHoleTransparent() {, +        return mHolePaint.getXfermode() != null;, +    }, +, +    /**, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +		, +		for (Entry e : entries) {	    , +		    if(e != null), +		}, +			drawCubicFill(dataSet, spline);, +	protected void drawCubicFill(LineDataSet dataSet, Path spline), +		spline.lineTo((mDeltaX + 1) * mPhaseX, fillMin);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +import android.graphics.PorterDuff;, +import android.graphics.PorterDuffXfermode;, +     * Sets the color for the hole that is drawn in the center of the PieChart, +     * (if enabled). NOTE: Use setHoleColorTransparent(boolean enabled) to make, +     * the hole transparent., +        mHolePaint.setXfermode(null);, +     * Set the hole in the center of the PieChart transparent., +     *, +     * @param enable, +     */, +    public void setHoleColorTransparent(boolean enable) {, +        if (enable) {, +            mHolePaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_OUT));, +        } else {, +            mHolePaint.setXfermode(null);, +        }, +    }, +, +    /**, +     * Returns true if the hole in the center of the PieChart is transparent,, +     * false if not., +     *, +     * @return true if hole is transparent., +     */, +    public boolean isHoleTransparent() {, +        return mHolePaint.getXfermode() != null;, +    }, +, +    /**, +++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java, +            if (e != null) {, +, +    }, +            Entry e = mYVals.get(i);, +            if (e != null), +                mYValueSum += Math.abs(e.getVal());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +		, +		for (Entry e : entries) {	    , +		    if(e != null), +		}, +			drawCubicFill(dataSet, spline);, +	protected void drawCubicFill(LineDataSet dataSet, Path spline), +		spline.lineTo((mDeltaX + 1) * mPhaseX, fillMin);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java]