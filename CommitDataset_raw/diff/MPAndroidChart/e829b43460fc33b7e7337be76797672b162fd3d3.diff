[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        l.setPosition(LegendPosition.RIGHT_OF_CHART_INSIDE);, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        l.setPosition(LegendPosition.RIGHT_OF_CHART_INSIDE);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    /** holds the maximum scale factor of the y-axis, default 12f */, +    protected float mMaxScaleY = 12f;, +        if (mLogEnabled), +        if (mLogEnabled), +        if (mDrawLegend && mLegend != null && mLegend.getPosition() != LegendPosition.NONE) {, +        , +        if(mLegend != null) {, +         , +            mLegend.setOffsetTop(mOffsetTop + min / 3f);, +        }, +     * sets the maximum scale factor for the y-axis. Default 12f, min 1f, max, +     * unlimited, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        l.setPosition(LegendPosition.RIGHT_OF_CHART_INSIDE);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    /** holds the maximum scale factor of the y-axis, default 12f */, +    protected float mMaxScaleY = 12f;, +        if (mLogEnabled), +        if (mLogEnabled), +        if (mDrawLegend && mLegend != null && mLegend.getPosition() != LegendPosition.NONE) {, +        , +        if(mLegend != null) {, +         , +            mLegend.setOffsetTop(mOffsetTop + min / 3f);, +        }, +     * sets the maximum scale factor for the y-axis. Default 12f, min 1f, max, +     * unlimited, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +    /** flag that indicates if logging is enabled or not */, +    protected boolean mLogEnabled = false;, +, +        if (!mDrawLegend || mLegend == null || mLegend.getPosition() == LegendPosition.NONE), +            case RIGHT_OF_CHART_INSIDE:, +, +                posX = getWidth() - mLegend.getMaximumEntryLength(mLegendLabelPaint), +                        - formTextSpaceAndForm;, +                posY = mLegend.getOffsetTop();, +, +                for (int i = 0; i < labels.length; i++) {, +, +                    mLegend.drawForm(mDrawCanvas, posX + stack, posY, mLegendFormPaint, i);, +, +                    if (labels[i] != null) {, +, +                        if (!wasStacked) {, +, +                            float x = posX;, +, +                            if (mLegend.getColors()[i] != -2), +                                x += formTextSpaceAndForm;, +, +                            posY += textDrop;, +, +                            mLegend.drawLabel(mDrawCanvas, x, posY,, +                                    mLegendLabelPaint, i);, +                        } else {, +, +                            posY += textSize * 1.2f + formSize;, +, +                            mLegend.drawLabel(mDrawCanvas, posX, posY,, +                                    mLegendLabelPaint, i);, +, +                        }, +, +                        // make a step down, +                        posY += mLegend.getYEntrySpace();, +                        stack = 0f;, +                    } else {, +                        stack += formSize + stackSpace;, +                        wasStacked = true;, +                    }, +                }, +                break;, +            case NONE:, +                break;, +     * Set this to true to enable logcat outputs for the chart. Default:, +     * disabled, +     * , +     * @param enabled, +     */, +    public void setLogEnabled(boolean enabled) {]