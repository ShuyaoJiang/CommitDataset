[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +//        if(mFilterData) mData = mZoomHandler.getFiltered(mOriginalData, mScaleX, mScaleY);, +//        else mData = mOriginalData;, +//        , +//        Log.i(LOG_TAG, "FilterTime: " + (System.currentTimeMillis() - starttime) + " ms");, +//        starttime = System.currentTimeMillis();, +, +     * Zooms in or out by the given scale factor. x and y are the coordinates, +     * (in pixels) of the zoom center., +     * , +     * @param scaleX if < 1f --> zoom out, if > 1f --> zoom in, +     * @param scaleY if < 1f --> zoom out, if > 1f --> zoom in, +     * @param x, +     * @param y, +     */, +    public void zoom(float scaleX, float scaleY, float x, float y) {, +, +        Matrix save = new Matrix();, +        save.set(mMatrixTouch);, +, +        save.postScale(scaleX, scaleY, x, y);, +, +        refreshTouch(save);, +    }, +, +    /**, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +//        if(mFilterData) mData = mZoomHandler.getFiltered(mOriginalData, mScaleX, mScaleY);, +//        else mData = mOriginalData;, +//        , +//        Log.i(LOG_TAG, "FilterTime: " + (System.currentTimeMillis() - starttime) + " ms");, +//        starttime = System.currentTimeMillis();, +, +     * Zooms in or out by the given scale factor. x and y are the coordinates, +     * (in pixels) of the zoom center., +     * , +     * @param scaleX if < 1f --> zoom out, if > 1f --> zoom in, +     * @param scaleY if < 1f --> zoom out, if > 1f --> zoom in, +     * @param x, +     * @param y, +     */, +    public void zoom(float scaleX, float scaleY, float x, float y) {, +, +        Matrix save = new Matrix();, +        save.set(mMatrixTouch);, +, +        save.postScale(scaleX, scaleY, x, y);, +, +        refreshTouch(save);, +    }, +, +    /**, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +    /**, +     * object that holds all data relevant for the chart (x-vals, y-vals, ...), +     * that are currently displayed, +     */, +    /** lets the chart know its unterlying data has changed */, +    /** flag that indicates if this is the first time the chart is refreshed */, +, +    /**, +     * flag that indicates if the content rect (container/bounds of the chart), +     * has been setup, +     */, +     * chart, +     * checks if the given index in the given DataSet is set for highlighting or, +     * not, +     * Returns true if there are values to highlight, false if there are no, +     * values to highlight. Checks if the highlight array is null, has a length, +     * of zero or if the first object is null., +     * Highlights the values at the given indices in the given DataSets. Provide, +     * null or an empty array to undo all highlighting., +            drawMarkerView(xIndex,, +                    getYValueByDataSetIndex(xIndex, mIndicesToHightlight[i].getDataSetIndex()));, +     * , +        // call the draw method of the markerview that will translate to the, +        // given position and draw the view, +     * returns the total value (sum) of all y-values across all DataSets, +     * returns the current y-max value across all DataSets, +     * returns the lowest value the chart can display, +     * returns the highest value the chart can display, +     * returns the current y-min value across all DataSets, +     * Get the total number of X-values., +     * returns the total number of values the chart holds (across all DataSets), +     * returns the center point of the chart in pixels, +     * chart values (use the setMarkerView(MarkerView mv) method to specify a, +     * marker view). Default: true, +     * Returns the ChartData object the chart represents. It contains all values, +     * and information the chart displays., +     * returns the percentage the given value has of the total y-value sum, +     * returns the number of digits used to format the printed values of the, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +//        if(mFilterData) mData = mZoomHandler.getFiltered(mOriginalData, mScaleX, mScaleY);, +//        else mData = mOriginalData;, +//        , +//        Log.i(LOG_TAG, "FilterTime: " + (System.currentTimeMillis() - starttime) + " ms");, +//        starttime = System.currentTimeMillis();, +, +     * Zooms in or out by the given scale factor. x and y are the coordinates, +     * (in pixels) of the zoom center.]