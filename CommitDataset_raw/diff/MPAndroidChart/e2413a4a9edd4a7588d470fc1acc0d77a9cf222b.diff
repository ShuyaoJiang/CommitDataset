[+++ /dev/null, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART, +                    || mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART_CENTER) {, +                float spacing = Utils.convertDpToPixel(12f);, +            float space = Math, +                    .abs(Math.max(Math.abs(mYChartMax), Math.abs(mYChartMin)) / 100f * 15f);, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART, +                    || mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART_CENTER) {, +                float spacing = Utils.convertDpToPixel(12f);, +            float space = Math, +                    .abs(Math.max(Math.abs(mYChartMax), Math.abs(mYChartMin)) / 100f * 15f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +        // canvas.drawColor(Color.TRANSPARENT,, +        // android.graphics.PorterDuff.Mode.XOR); // clear all, +        // contains the stacked legend size in pixels, +        float stack = 0f;, +, +        boolean wasStacked = false;, +, +                for (int i = 0; i < labels.length; i++) {, +, +                    mLegend.drawForm(mDrawCanvas, posX + stack, posY, mLegendFormPaint, i);, +, +                    if (labels[i] != null) {, +, +                        if (!wasStacked) {, +, +                            float x = posX;, +, +                            if (mLegend.getColors()[i] != -2), +                                x += formTextSpaceAndForm;, +, +                            posY += textDrop;, +, +                            mLegend.drawLabel(mDrawCanvas, x, posY,, +                                    mLegendLabelPaint, i);, +                        } else {, +, +                            posY += textSize * 1.2f + formSize;, +, +                            mLegend.drawLabel(mDrawCanvas, posX, posY,, +                                    mLegendLabelPaint, i);, +, +                        }, +, +                        // make a step down, +                        posY += mLegend.getYEntrySpace();, +                        stack = 0f;, +                    } else {, +                        stack += formSize + stackSpace;, +                        wasStacked = true;, +                    }, +                }, +                break;, +            case RIGHT_OF_CHART_CENTER:, +                posX = getWidth() - mLegend.getMaximumEntryLength(mLegendLabelPaint), +                        - formTextSpaceAndForm;, +                posY = getHeight() / 2f - mLegend.getFullHeight(mLegendLabelPaint) / 2f;, +, +++ /dev/null, +++ b/MPChartExample/project.properties, +android.library.reference.1=../MPChartLib, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            if (mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART, +                    || mLegend.getPosition() == LegendPosition.RIGHT_OF_CHART_CENTER) {, +                float spacing = Utils.convertDpToPixel(12f);, +            float space = Math, +                    .abs(Math.max(Math.abs(mYChartMax), Math.abs(mYChartMin)) / 100f * 15f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +        // canvas.drawColor(Color.TRANSPARENT,, +        // android.graphics.PorterDuff.Mode.XOR); // clear all, +        // contains the stacked legend size in pixels, +        float stack = 0f;, +, +        boolean wasStacked = false;, +, +                for (int i = 0; i < labels.length; i++) {, +, +                    mLegend.drawForm(mDrawCanvas, posX + stack, posY, mLegendFormPaint, i);, +, +                    if (labels[i] != null) {, +, +                        if (!wasStacked) {, +, +                            float x = posX;, +, +                            if (mLegend.getColors()[i] != -2), +                                x += formTextSpaceAndForm;, +]