[+++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +        // add data to the chart, +                , +        // get the legend, +        Legend l = mChart.getLegend();, +        , +        // modify it, +//        l.setPosition(LegendPosition.LEFT_OF_CHART);, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +        // add data to the chart, +                , +        // get the legend, +        Legend l = mChart.getLegend();, +        , +        // modify it, +//        l.setPosition(LegendPosition.LEFT_OF_CHART);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    @Override, +    public void calculateOffsets() {, +, +    }, +, +        // space between text and shape/form of entry, +        float formToTextSpace = mLegend.getFormToTextSpace();, +, +        // space between the entries, +        float entrySpace = mLegend.getEntrySpace();, +, +                float textSize = Utils.convertDpToPixel(mLegendLabelPaint.getTextSize());, +                topOffset = textSize;, +                    if (labels[i] == null), +                        break;, +, +                    // make a step to the left, +                    xOffset += formToTextSpace;, +                            - mOffsetBottom + topOffset + (textSize + formSize) / 2f,, +                    xOffset += Utils.calcTextWidth(mLegendLabelPaint, labels[i]) + entrySpace;, +                    if (labels[i] == null), +                        break;, +                    mDrawCanvas.drawText(labels[i], xOffset + getWidth() - mOffsetRight, +                            + formToTextSpace, mOffsetTop + topOffset + formSize,, +                    // make a step down, +                    topOffset += entrySpace;, +        mXLabelWidth = Utils.calcTextWidth(mXLabelPaint, a.toString());, +     * Returns the legend object of the chart. This method can be used to, +     * customize the automatically generated legend. IMPORTANT: this will return, +     * null if no data has been set for the chart when calling this method, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +        // add data to the chart, +                , +        // get the legend, +        Legend l = mChart.getLegend();, +        , +        // modify it, +//        l.setPosition(LegendPosition.LEFT_OF_CHART);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    @Override, +    public void calculateOffsets() {, +, +    }, +, +        // space between text and shape/form of entry, +        float formToTextSpace = mLegend.getFormToTextSpace();, +, +        // space between the entries, +        float entrySpace = mLegend.getEntrySpace();, +, +                float textSize = Utils.convertDpToPixel(mLegendLabelPaint.getTextSize());, +                topOffset = textSize;, +                    if (labels[i] == null), +                        break;, +, +                    // make a step to the left, +                    xOffset += formToTextSpace;, +                            - mOffsetBottom + topOffset + (textSize + formSize) / 2f,, +                    xOffset += Utils.calcTextWidth(mLegendLabelPaint, labels[i]) + entrySpace;, +                    if (labels[i] == null), +                        break;, +                    mDrawCanvas.drawText(labels[i], xOffset + getWidth() - mOffsetRight, +                            + formToTextSpace, mOffsetTop + topOffset + formSize,, +                    // make a step down, +                    topOffset += entrySpace;, +        mXLabelWidth = Utils.calcTextWidth(mXLabelPaint, a.toString());, +     * Returns the legend object of the chart. This method can be used to, +     * customize the automatically generated legend. IMPORTANT: this will return, +     * null if no data has been set for the chart when calling this method, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +    /** calculates the offsets of the chart to the border */, +    public abstract void calculateOffsets();, +, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +import com.github.mikephil.charting.utils.Legend.LegendPosition;, +        // add data to the chart, +                , +        // get the legend, +        Legend l = mChart.getLegend();, +        ]