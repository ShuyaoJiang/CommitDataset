[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +, +        mChart.setVisibleXRange(10, 50);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +, +        mChart.setVisibleXRange(10, 50);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +    protected ViewPortHandler mViewPortHandler = new ViewPortHandler();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +, +        mChart.setVisibleXRange(10, 50);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +    protected ViewPortHandler mViewPortHandler = new ViewPortHandler();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, +import com.github.mikephil.charting.utils.HorizontalViewPortHandler;, +, +        mViewPortHandler = new HorizontalViewPortHandler();, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +, +        mChart.setVisibleXRange(10, 50);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +    protected ViewPortHandler mViewPortHandler = new ViewPortHandler();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, +import com.github.mikephil.charting.utils.HorizontalViewPortHandler;, +, +        mViewPortHandler = new HorizontalViewPortHandler();, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/HorizontalViewPortHandler.java, +, +package com.github.mikephil.charting.utils;, +, +/**, + * ViewPortHandler for HorizontalBarChart., + */, +public class HorizontalViewPortHandler extends ViewPortHandler {, +, +, +//    @Override, +//    public void setMinimumScaleX(float xScale) {, +//        setMinimumScaleY(xScale);, +//    }, +//, +//    @Override, +//    public void setMinimumScaleY(float yScale) {, +//        setMinimumScaleX(yScale);, +//    }, +//, +//    @Override, +//    public void setMinMaxScaleX(float minScaleX, float maxScaleX) {, +//        setMinMaxScaleY(minScaleX, maxScaleX);, +//    }, +//, +//    @Override, +//    public void setMinMaxScaleY(float minScaleY, float maxScaleY) {, +//        setMinMaxScaleX(minScaleY, maxScaleY);, +//    }, +}]