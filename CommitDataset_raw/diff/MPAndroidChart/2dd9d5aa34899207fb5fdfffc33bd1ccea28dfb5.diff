[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        Log.i("Gesture", "START, x: " + me.getX() + ", y: " + me.getY());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        Log.i("Gesture", "START, x: " + me.getX() + ", y: " + me.getY());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        mChart.zoomAndCenterAnimated(1.8f, 1.8f, e.getXIndex(), e.getVal(), mChart.getData().getDataSetByIndex(dataSetIndex).getAxisDependency(), 1000);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        Log.i("Gesture", "START, x: " + me.getX() + ", y: " + me.getY());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        mChart.zoomAndCenterAnimated(1.8f, 1.8f, e.getXIndex(), e.getVal(), mChart.getData().getDataSetByIndex(dataSetIndex).getAxisDependency(), 1000);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.jobs.ZoomJob;, +     * Zooms in or out by the given scale factor., +     * x and y are the values to or which to zoom from (the values of the zoom center)., +     *, +     * @param scaleX, +     * @param scaleY, +     * @param xValue, +     * @param yValue, +     * @param axis   the axis relative to which the zoom should take place, +     */, +    public void zoom(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis) {, +, +        Runnable job = new ZoomJob(mViewPortHandler, scaleX, scaleY, xValue, yValue, getTransformer(axis), axis, this);, +        postJob(job);, +    }, +, +    /**, +    public void zoomAndCenterAnimated(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis, long duration) {, +        PointD origin = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +        Runnable job = new AnimatedZoomJob(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis.getValues().size(), scaleX, scaleY, mViewPortHandler.getScaleX(), mViewPortHandler.getScaleY(), xValue, yValue, (float) origin.x, (float) origin.y, duration);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        Log.i("Gesture", "START, x: " + me.getX() + ", y: " + me.getY());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        mChart.zoomAndCenterAnimated(1.8f, 1.8f, e.getXIndex(), e.getVal(), mChart.getData().getDataSetByIndex(dataSetIndex).getAxisDependency(), 1000);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.jobs.ZoomJob;, +     * Zooms in or out by the given scale factor., +     * x and y are the values to or which to zoom from (the values of the zoom center)., +     *, +     * @param scaleX, +     * @param scaleY, +     * @param xValue, +     * @param yValue, +     * @param axis   the axis relative to which the zoom should take place, +     */, +    public void zoom(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis) {, +, +        Runnable job = new ZoomJob(mViewPortHandler, scaleX, scaleY, xValue, yValue, getTransformer(axis), axis, this);, +        postJob(job);, +    }, +, +    /**, +    public void zoomAndCenterAnimated(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis, long duration) {, +        PointD origin = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +        Runnable job = new AnimatedZoomJob(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis.getValues().size(), scaleX, scaleY, mViewPortHandler.getScaleX(), mViewPortHandler.getScaleY(), xValue, yValue, (float) origin.x, (float) origin.y, duration);, +++ b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedJob.java, +public abstract class AnimatedJob extends ViewPortJob implements ValueAnimator.AnimatorUpdateListener {, +, +    public float getXOrigin() {, +        return xOrigin;, +    }, +, +    public float getYOrigin() {, +        return yOrigin;, +    }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        Log.i("Gesture", "START, x: " + me.getX() + ", y: " + me.getY());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        mChart.zoomAndCenterAnimated(1.8f, 1.8f, e.getXIndex(), e.getVal(), mChart.getData().getDataSetByIndex(dataSetIndex).getAxisDependency(), 1000);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.jobs.ZoomJob;, +     * Zooms in or out by the given scale factor., +     * x and y are the values to or which to zoom from (the values of the zoom center)., +     *, +     * @param scaleX, +     * @param scaleY, +     * @param xValue, +     * @param yValue, +     * @param axis   the axis relative to which the zoom should take place, +     */, +    public void zoom(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis) {, +, +        Runnable job = new ZoomJob(mViewPortHandler, scaleX, scaleY, xValue, yValue, getTransformer(axis), axis, this);, +        postJob(job);, +    }, +, +    /**, +    public void zoomAndCenterAnimated(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis, long duration) {, +        PointD origin = getValuesByTouchPoint(mViewPortHandler.contentLeft(), mViewPortHandler.contentTop(), axis);, +        Runnable job = new AnimatedZoomJob(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis.getValues().size(), scaleX, scaleY, mViewPortHandler.getScaleX(), mViewPortHandler.getScaleY(), xValue, yValue, (float) origin.x, (float) origin.y, duration);, +++ b/MPChartLib/src/com/github/mikephil/charting/jobs/AnimatedJob.java, +public abstract class AnimatedJob extends ViewPortJob implements ValueAnimator.AnimatorUpdateListener {, +, +    public float getXOrigin() {, +        return xOrigin;, +    }, +, +    public float getYOrigin() {, +        return yOrigin;]