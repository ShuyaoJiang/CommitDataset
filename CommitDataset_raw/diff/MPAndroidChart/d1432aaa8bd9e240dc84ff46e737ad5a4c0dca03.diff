[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +            for (int j = 0; j < set.getEntryCount(); j++) {, +                mDrawAngles[cnt] = calcAngle(Math.abs(set.getEntryForIndex(j).getVal()));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +            for (int j = 0; j < set.getEntryCount(); j++) {, +                mDrawAngles[cnt] = calcAngle(Math.abs(set.getEntryForIndex(j).getVal()));, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java, +    /**, +     * space indicator between the bars 0.1f == 10 %, +     */, +    /**, +     * the color used for drawing the bar shadows, +     */, +    /**, +     * the alpha value used to draw the highlight indicator bar, +     */, +    public void calcMinMax(int start, int end) {, +        if (mYVals == null), +            return;, +, +        final int yValCount = mYVals.size();, +            BarEntry e = mYVals.get(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +            for (int j = 0; j < set.getEntryCount(); j++) {, +                mDrawAngles[cnt] = calcAngle(Math.abs(set.getEntryForIndex(j).getVal()));, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java, +    /**, +     * space indicator between the bars 0.1f == 10 %, +     */, +    /**, +     * the color used for drawing the bar shadows, +     */, +    /**, +     * the alpha value used to draw the highlight indicator bar, +     */, +    public void calcMinMax(int start, int end) {, +        if (mYVals == null), +            return;, +, +        final int yValCount = mYVals.size();, +            BarEntry e = mYVals.get(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java, +     *, +    public void calcMinMax(int start, int end) {, +, +        if (mYVals == null), +            return;, +, +        if (mYVals.size() == 0), +            endValue = mYVals.size() - 1;, +        mYMin = yMin(mYVals.get(start));, +        mYMax = yMax(mYVals.get(start));, +            final BubbleEntry entry = mYVals.get(i);, +            if (ymin < mYMin) {, +            if (ymax > mYMax) {, +            if (xmin < mXMin) {, +            if (xmax > mXMax) {, +            if (size > mMaxSize) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +            for (int j = 0; j < set.getEntryCount(); j++) {, +                mDrawAngles[cnt] = calcAngle(Math.abs(set.getEntryForIndex(j).getVal()));, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java, +    /**, +     * space indicator between the bars 0.1f == 10 %, +     */, +    /**, +     * the color used for drawing the bar shadows, +     */, +    /**, +     * the alpha value used to draw the highlight indicator bar, +     */, +    public void calcMinMax(int start, int end) {, +        if (mYVals == null), +            return;, +, +        final int yValCount = mYVals.size();, +            BarEntry e = mYVals.get(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java, +     *, +    public void calcMinMax(int start, int end) {, +, +        if (mYVals == null), +            return;, +, +        if (mYVals.size() == 0), +            endValue = mYVals.size() - 1;, +        mYMin = yMin(mYVals.get(start));, +        mYMax = yMax(mYVals.get(start));, +            final BubbleEntry entry = mYVals.get(i);, +            if (ymin < mYMin) {, +            if (ymax > mYMax) {, +            if (xmin < mXMin) {, +            if (xmax > mXMax) {, +            if (size > mMaxSize) {, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java, +    /**, +     * the width of the shadow of the candle, +     */, +    /**, +     * the space between the candle entries, default 0.1f (10%)]