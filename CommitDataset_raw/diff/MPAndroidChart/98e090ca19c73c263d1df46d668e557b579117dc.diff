[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java, +        int offset = (int)(height * 0.65); /* percent to move */, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java, +        int offset = (int)(height * 0.65); /* percent to move */, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        setData(4, 100);, +        tvX.setText("" + (mSeekBarX.getProgress()));, +        ArrayList<PieEntry> entries = new ArrayList<PieEntry>();, +        // NOTE: The order of the entries when being added to the entries array determines their position around the center of, +        // the chart., +        for (int i = 0; i < count ; i++) {, +            entries.add(new PieEntry((float) ((Math.random() * mult) + mult / 5), mParties[i % mParties.length]));, +        PieDataSet dataSet = new PieDataSet(entries, "Election Results");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java, +        int offset = (int)(height * 0.65); /* percent to move */, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        setData(4, 100);, +        tvX.setText("" + (mSeekBarX.getProgress()));, +        ArrayList<PieEntry> entries = new ArrayList<PieEntry>();, +        // NOTE: The order of the entries when being added to the entries array determines their position around the center of, +        // the chart., +        for (int i = 0; i < count ; i++) {, +            entries.add(new PieEntry((float) ((Math.random() * mult) + mult / 5), mParties[i % mParties.length]));, +        PieDataSet dataSet = new PieDataSet(entries, "Election Results");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +        setData(4, 100);, +        tvX.setText("" + (mSeekBarX.getProgress()));, +        ArrayList<PieEntry> entries = new ArrayList<PieEntry>();, +        // NOTE: The order of the entries when being added to the entries array determines their position around the center of, +        // the chart., +        for (int i = 0; i < count; i++) {, +            entries.add(new PieEntry((float) (Math.random() * mult) + mult / 5, mParties[i % mParties.length]));, +        PieDataSet dataSet = new PieDataSet(entries, "Election Results");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HalfPieChartActivity.java, +        int offset = (int)(height * 0.65); /* percent to move */, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        setData(4, 100);, +        tvX.setText("" + (mSeekBarX.getProgress()));, +        ArrayList<PieEntry> entries = new ArrayList<PieEntry>();, +        // NOTE: The order of the entries when being added to the entries array determines their position around the center of, +        // the chart., +        for (int i = 0; i < count ; i++) {, +            entries.add(new PieEntry((float) ((Math.random() * mult) + mult / 5), mParties[i % mParties.length]));, +        PieDataSet dataSet = new PieDataSet(entries, "Election Results");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PiePolylineChartActivity.java, +        setData(4, 100);, +        tvX.setText("" + (mSeekBarX.getProgress()));, +        ArrayList<PieEntry> entries = new ArrayList<PieEntry>();, +        // NOTE: The order of the entries when being added to the entries array determines their position around the center of, +        // the chart., +        for (int i = 0; i < count; i++) {, +            entries.add(new PieEntry((float) (Math.random() * mult) + mult / 5, mParties[i % mParties.length]));, +        PieDataSet dataSet = new PieDataSet(entries, "Election Results");, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +, +        ArrayList<RadarEntry> entries1 = new ArrayList<RadarEntry>();, +        ArrayList<RadarEntry> entries2 = new ArrayList<RadarEntry>();, +        // NOTE: The order of the entries when being added to the entries array determines their position around the center of, +        // the chart., +            float val1 = (float) (Math.random() * mult) + min;, +            entries1.add(new RadarEntry(val1));, +, +            float val2 = (float) (Math.random() * mult) + min;, +            entries2.add(new RadarEntry(val2));, +        RadarDataSet set1 = new RadarDataSet(entries1, "Last Week");, +        RadarDataSet set2 = new RadarDataSet(entries2, "This Week");]