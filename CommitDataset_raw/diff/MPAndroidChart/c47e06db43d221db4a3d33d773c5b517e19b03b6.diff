[+++ b/MPChartExample/res/menu/line.xml, +    <item android:id="@+id/actionToggleRound" android:title="Toggle Round"></item>, +    <item android:id="@+id/actionToggleValues" android:title="Toggle Values"></item>, +    <item android:id="@+id/actionToggleFilled" android:title="Toggle Filled"></item>, +    <item android:id="@+id/actionToggleCircles" android:title="Toggle Circles"></item>, +    <item android:id="@+id/actionToggleHighlight" android:title="Toggle Highlight"></item>, +    <item android:id="@+id/actionToggleStartzero" android:title="Toggle StartZero"></item>, + <item android:id="@+id/actionToggleAdjustXLegend" android:title="Toggle AdjustXLegend"></item>, + <item android:id="@+id/actionSave" android:title="Save to Gallery"></item>, +++ b/MPChartExample/res/menu/line.xml, +    <item android:id="@+id/actionToggleRound" android:title="Toggle Round"></item>, +    <item android:id="@+id/actionToggleValues" android:title="Toggle Values"></item>, +    <item android:id="@+id/actionToggleFilled" android:title="Toggle Filled"></item>, +    <item android:id="@+id/actionToggleCircles" android:title="Toggle Circles"></item>, +    <item android:id="@+id/actionToggleHighlight" android:title="Toggle Highlight"></item>, +    <item android:id="@+id/actionToggleStartzero" android:title="Toggle StartZero"></item>, + <item android:id="@+id/actionToggleAdjustXLegend" android:title="Toggle AdjustXLegend"></item>, + <item android:id="@+id/actionSave" android:title="Save to Gallery"></item>, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +, +public class LineChartActivity extends Activity implements OnSeekBarChangeListener,, +        OnChartValueSelectedListener {, +        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,, +                WindowManager.LayoutParams.FLAG_FULLSCREEN);, +        ct.addColorsForDataSets(new int[] {, +            R.color.colorful_1, +        }, this);, +        Log.i("VALS SELECTED",, +                "Value: " + values[0].getVal() + ", xIndex: " + highlights[0].getXIndex(), +++ b/MPChartExample/res/menu/line.xml, +    <item android:id="@+id/actionToggleRound" android:title="Toggle Round"></item>, +    <item android:id="@+id/actionToggleValues" android:title="Toggle Values"></item>, +    <item android:id="@+id/actionToggleFilled" android:title="Toggle Filled"></item>, +    <item android:id="@+id/actionToggleCircles" android:title="Toggle Circles"></item>, +    <item android:id="@+id/actionToggleHighlight" android:title="Toggle Highlight"></item>, +    <item android:id="@+id/actionToggleStartzero" android:title="Toggle StartZero"></item>, + <item android:id="@+id/actionToggleAdjustXLegend" android:title="Toggle AdjustXLegend"></item>, + <item android:id="@+id/actionSave" android:title="Save to Gallery"></item>, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +, +public class LineChartActivity extends Activity implements OnSeekBarChangeListener,, +        OnChartValueSelectedListener {, +        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,, +                WindowManager.LayoutParams.FLAG_FULLSCREEN);, +        ct.addColorsForDataSets(new int[] {, +            R.color.colorful_1, +        }, this);, +        Log.i("VALS SELECTED",, +                "Value: " + values[0].getVal() + ", xIndex: " + highlights[0].getXIndex(), +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +	protected static final String LOG_TAG = "MPChart";, +	/** contains the current scale factor of the y-axis */, +	protected float mScaleY = 1f;, +, +//		float curTransY = vals[Matrix.MTRANS_Y];, +//		float curScaleY = vals[Matrix.MSCALE_Y];, +		, +//		Log.i(LOG_TAG, "curTransY: " + curTransY);, +, +		// min scale-x is 1f, +		mScaleX = Math.max(1f, Math.min(getMaxScaleX(), curScaleX));, +		, +		// min scale-y is 1f, +//		mScaleY = Math.max(1f, Math.min(getMaxScaleY(), curScaleY));, +//		float maxTransY = -(float) mContentRect.height();, +//        float newTransY = Math.min(Math.max(curTransY, maxTransY), 0);, +        , +//        Log.i(LOG_TAG, "maxTransY: " + maxTransX);, +, +//		vals[Matrix.MTRANS_Y] = newTransY;, +//        vals[Matrix.MSCALE_Y] = mScaleY;, +	 * returns the current x-scale factor, +	 * returns the current y-scale factor, +	 */, +	public float getScaleY() {, +	    return mScaleY;, +	}, +, +	/**, +	 * calcualtes the maximum x-scale value depending on the number of x-values, maximum scale is numberOfXvals / 2, +	public float getMaxScaleX() {, +     * calcualtes the maximum y-scale value depending on the y delta value, +     * , +     * @return, +     */, +    public float getMaxScaleY() {, +        return mDeltaY;, +    }, +, +	/**, +++ b/MPChartExample/res/menu/line.xml, +    <item android:id="@+id/actionToggleRound" android:title="Toggle Round"></item>, +    <item android:id="@+id/actionToggleValues" android:title="Toggle Values"></item>, +    <item android:id="@+id/actionToggleFilled" android:title="Toggle Filled"></item>, +    <item android:id="@+id/actionToggleCircles" android:title="Toggle Circles"></item>, +    <item android:id="@+id/actionToggleHighlight" android:title="Toggle Highlight"></item>, +    <item android:id="@+id/actionToggleStartzero" android:title="Toggle StartZero"></item>, + <item android:id="@+id/actionToggleAdjustXLegend" android:title="Toggle AdjustXLegend"></item>, + <item android:id="@+id/actionSave" android:title="Save to Gallery"></item>, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java]