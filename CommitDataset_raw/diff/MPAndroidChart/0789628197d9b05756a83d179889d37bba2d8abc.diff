[+++ b/MPChartExample/build.gradle, +    compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.0.0@aar', +++ b/MPChartExample/build.gradle, +    compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.0.0@aar', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, +import com.xxmassdeveloper.mpchartexample.realm.RealmMainActivity;, +                i = new Intent(this, RealmMainActivity.class);, +                startActivity(i);, +++ b/MPChartExample/build.gradle, +    compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.0.0@aar', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, +import com.xxmassdeveloper.mpchartexample.realm.RealmMainActivity;, +                i = new Intent(this, RealmMainActivity.class);, +                startActivity(i);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/realm/RealmBaseActivity.java, +package com.xxmassdeveloper.mpchartexample.realm;, +, +import android.graphics.Color;, +import android.graphics.Typeface;, +import android.os.Bundle;, +, +import com.github.mikephil.charting.charts.BarLineChartBase;, +import com.github.mikephil.charting.charts.Chart;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.data.ChartData;, +import com.github.mikephil.charting.formatter.PercentFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.RealmDemoData;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import io.realm.Realm;, +import io.realm.RealmConfiguration;, +, +/**, + * Created by Philipp Jahoda on 05/11/15., + */, +public abstract class RealmBaseActivity extends DemoBase {, +, +    protected Realm mRealm;, +, +    protected Typeface mTf;, +, +    @Override, +    protected void onCreate(Bundle savedInstanceState) {, +        super.onCreate(savedInstanceState);, +        setTitle("Realm.io Examples");, +    }, +, +    protected void setup(Chart<?> chart) {, +, +        mTf = Typeface.createFromAsset(getAssets(), "OpenSans-Regular.ttf");, +, +        // no description text, +        chart.setDescription("");, +        chart.setNoDataTextDescription("You need to provide data for the chart.");, +, +        // enable touch gestures, +        chart.setTouchEnabled(true);, +, +        if (chart instanceof BarLineChartBase) {, +, +            BarLineChartBase mChart = (BarLineChartBase) chart;, +, +            mChart.setDrawGridBackground(false);, +, +            // enable scaling and dragging, +            mChart.setDragEnabled(true);, +            mChart.setScaleEnabled(true);, +, +            // if disabled, scaling can be done on x- and y-axis separately, +            mChart.setPinchZoom(false);, +, +            YAxis leftAxis = mChart.getAxisLeft();, +            leftAxis.removeAllLimitLines(); // reset all limit lines to avoid overlapping lines, +            leftAxis.setTypeface(mTf);, +            leftAxis.setTextSize(8f);, +            leftAxis.setTextColor(Color.DKGRAY);, +            leftAxis.setValueFormatter(new PercentFormatter());, +, +            XAxis xAxis = mChart.getXAxis();, +            xAxis.setTypeface(mTf);, +            xAxis.setPosition(XAxis.XAxisPosition.BOTTOM);, +            xAxis.setTextSize(8f);, +            xAxis.setTextColor(Color.DKGRAY);, +, +            mChart.getAxisRight().setEnabled(false);, +        }, +    }, +, +    protected void styleData(ChartData data) {, +        data.setValueTypeface(mTf);, +        data.setValueTextSize(8f);, +        data.setValueTextColor(Color.DKGRAY);, +        data.setValueFormatter(new PercentFormatter());, +    }, +, +    @Override, +    protected void onResume() {, +        super.onResume();, +]