[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        mChart.notifyDataSetChanged();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        mChart.notifyDataSetChanged();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java, +    private static final int MAX_LENGTH = 5;, +        mFormat = new DecimalFormat("###E00");, +        int numericValue1 = Character.getNumericValue(r.charAt(r.length() - 1));, +        int numericValue2 = Character.getNumericValue(r.charAt(r.length() - 2));, +        int combined = Integer.valueOf(numericValue2 + "" + numericValue1);, +, +        r = r.replaceAll("E[0-9][0-9]", SUFFIX[combined / 3]);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        mChart.notifyDataSetChanged();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java, +    private static final int MAX_LENGTH = 5;, +        mFormat = new DecimalFormat("###E00");, +        int numericValue1 = Character.getNumericValue(r.charAt(r.length() - 1));, +        int numericValue2 = Character.getNumericValue(r.charAt(r.length() - 2));, +        int combined = Integer.valueOf(numericValue2 + "" + numericValue1);, +, +        r = r.replaceAll("E[0-9][0-9]", SUFFIX[combined / 3]);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        mChart.notifyDataSetChanged();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java, +    private static final int MAX_LENGTH = 5;, +        mFormat = new DecimalFormat("###E00");, +        int numericValue1 = Character.getNumericValue(r.charAt(r.length() - 1));, +        int numericValue2 = Character.getNumericValue(r.charAt(r.length() - 2));, +        int combined = Integer.valueOf(numericValue2 + "" + numericValue1);, +, +        r = r.replaceAll("E[0-9][0-9]", SUFFIX[combined / 3]);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java, +++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/AxisRendererTest.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        mChart.notifyDataSetChanged();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java, +    private static final int MAX_LENGTH = 5;, +        mFormat = new DecimalFormat("###E00");, +        int numericValue1 = Character.getNumericValue(r.charAt(r.length() - 1));, +        int numericValue2 = Character.getNumericValue(r.charAt(r.length() - 2));, +        int combined = Integer.valueOf(numericValue2 + "" + numericValue1);, +, +        r = r.replaceAll("E[0-9][0-9]", SUFFIX[combined / 3]);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java, +++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/AxisRendererTest.java, +++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java, +import static junit.framework.Assert.assertEquals;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        mChart.notifyDataSetChanged();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/LargeValueFormatter.java, +    private static final int MAX_LENGTH = 5;, +        mFormat = new DecimalFormat("###E00");, +        int numericValue1 = Character.getNumericValue(r.charAt(r.length() - 1));, +        int numericValue2 = Character.getNumericValue(r.charAt(r.length() - 2));, +        int combined = Integer.valueOf(numericValue2 + "" + numericValue1);, +, +        r = r.replaceAll("E[0-9][0-9]", SUFFIX[combined / 3]);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/ViewPortHandler.java, +++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/AxisRendererTest.java, +++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/DataSetTest.java, +import static junit.framework.Assert.assertEquals;, +++ b/MPChartLib/src/test/java/com/github/mikephil/charting/test/LargeValueFormatterTest.java, +package com.github.mikephil.charting.test;, +, +import com.github.mikephil.charting.formatter.LargeValueFormatter;, +, +import org.junit.Test;, +, +import static junit.framework.Assert.assertEquals;, +, +/**, + * Created by philipp on 06/06/16., + */, +public class LargeValueFormatterTest {, +, +    @Test, +    public void test() {, +, +        LargeValueFormatter formatter = new LargeValueFormatter();, +, +        String result = formatter.getFormattedValue(5f, null);, +        assertEquals("5", result);, +, +        result = formatter.getFormattedValue(5.5f, null);, +        assertEquals("5.5", result);, +, +        result = formatter.getFormattedValue(50f, null);, +        assertEquals("50", result);, +, +        result = formatter.getFormattedValue(50.5f, null);, +        assertEquals("50.5", result);, +, +        result = formatter.getFormattedValue(500f, null);, +        assertEquals("500", result);, +, +        result = formatter.getFormattedValue(1100f, null);, +        assertEquals("1.1k", result);, +]