[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        , +, +    public void onWindowFocusChanged(boolean hasFocus) {, +        super.onWindowFocusChanged(hasFocus);, +    }, +, +    @Override, +                , +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        , +, +    public void onWindowFocusChanged(boolean hasFocus) {, +        super.onWindowFocusChanged(hasFocus);, +    }, +, +    @Override, +                , +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.jobs.MoveViewJob;, +    public void moveViewToX(float xIndex) {, +        Runnable job = new MoveViewJob(mViewPortHandler, xIndex, 0f,, +                getTransformer(AxisDependency.LEFT), this);, +        if (mViewPortHandler.hasChartDimens()) {, +            post(job);, +        } else {, +            mJobs.add(job);, +        }, +, +        // float[] pts = new float[] {, +        // xIndex, 0f, +        // };, +        //, +        // getTransformer(AxisDependency.LEFT).pointValuesToPixel(pts);, +        //, +        // mViewPortHandler.centerViewPort(pts, this);, +        Runnable job = new MoveViewJob(mViewPortHandler, 0f, yValue + valsInView / 2f,, +                getTransformer(axis), this);, +        if (mViewPortHandler.hasChartDimens()) {, +            post(job);, +        } else {, +            mJobs.add(job);, +        }, +    public void moveViewTo(float xIndex, float yValue, AxisDependency axis) {, +        Runnable job = new MoveViewJob(mViewPortHandler, xIndex, yValue + valsInView / 2f,, +                getTransformer(axis), this);, +        if (mViewPortHandler.hasChartDimens()) {, +            post(job);, +        } else {, +            mJobs.add(job);, +        }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        , +, +    public void onWindowFocusChanged(boolean hasFocus) {, +        super.onWindowFocusChanged(hasFocus);, +    }, +, +    @Override, +                , +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.jobs.MoveViewJob;, +    public void moveViewToX(float xIndex) {, +        Runnable job = new MoveViewJob(mViewPortHandler, xIndex, 0f,, +                getTransformer(AxisDependency.LEFT), this);, +        if (mViewPortHandler.hasChartDimens()) {, +            post(job);, +        } else {, +            mJobs.add(job);, +        }, +, +        // float[] pts = new float[] {, +        // xIndex, 0f, +        // };, +        //, +        // getTransformer(AxisDependency.LEFT).pointValuesToPixel(pts);, +        //, +        // mViewPortHandler.centerViewPort(pts, this);, +        Runnable job = new MoveViewJob(mViewPortHandler, 0f, yValue + valsInView / 2f,, +                getTransformer(axis), this);, +        if (mViewPortHandler.hasChartDimens()) {, +            post(job);, +        } else {, +            mJobs.add(job);, +        }, +    public void moveViewTo(float xIndex, float yValue, AxisDependency axis) {, +        Runnable job = new MoveViewJob(mViewPortHandler, xIndex, yValue + valsInView / 2f,, +                getTransformer(axis), this);, +        if (mViewPortHandler.hasChartDimens()) {, +            post(job);, +        } else {, +            mJobs.add(job);, +        }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +    protected ArrayList<Runnable> mJobs = new ArrayList<Runnable>();, +, +            , +            for(Runnable r : mJobs) {, +                post(r);, +            }]