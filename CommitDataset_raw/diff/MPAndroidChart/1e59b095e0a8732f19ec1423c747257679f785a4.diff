[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +        data.setHighLightCircleWidth(1.5f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +        data.setHighLightCircleWidth(1.5f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, +        Utils.init(this);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +        data.setHighLightCircleWidth(1.5f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, +        Utils.init(this);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    /** If set to true, chart continues to scroll after touch up */, +    private boolean mDragDecelarationEnabled = true;, +, +    /**, +     * Decelaration friction coefficient in [0 ; 1] interval, higher values indicate that, +     * speed will decrease slowly, for example if it set to 0, it will stop immediately., +     * 1 is an invalid value, and will be converted to 0 automatically., +     */, +    private float mDragDecelarationFrictionCoef = 0.9f;, +, +    @Override, +    public void computeScroll() {, +, +        if (mListener instanceof BarLineChartTouchListener), +            ((BarLineChartTouchListener)mListener).computeScroll();, +    }, +, +     * If set to true, chart continues to scroll after touch up, +     *, +     * default: true, +     */, +    public boolean isDragDecelarationEnabled() {, +        return mDragDecelarationEnabled;, +    }, +, +    /**, +     * If set to true, chart continues to scroll after touch up, +     *, +     * @param enabled, +     */, +    public void setDragDecelarationEnabled(boolean enabled) {, +        mDragDecelarationEnabled = enabled;, +    }, +, +    /**, +     * Returns drag deceleration friction coefficient, +     * @return, +     */, +    public float getDragDecelarationFrictionCoef() {, +        return mDragDecelarationFrictionCoef;, +    }, +, +    /**+, +     * Decelaration friction coefficient in [0 ; 1] interval, higher values indicate that, +     * speed will decrease slowly, for example if it set to 0, it will stop immediately., +     * 1 is an invalid value, and will be converted to 0 automatically., +     *, +     * @param newValue, +     */, +    public void setDragDecelarationFrictionCoef(float newValue) {, +        if (newValue < 0.f || newValue >= 1.f), +            newValue = 0.f;, +, +        mDragDecelarationFrictionCoef = newValue;, +    }, +, +    /**, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +        data.setHighLightCircleWidth(1.5f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/notimportant/MainActivity.java, +        Utils.init(this);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    /** If set to true, chart continues to scroll after touch up */, +    private boolean mDragDecelarationEnabled = true;, +, +    /**, +     * Decelaration friction coefficient in [0 ; 1] interval, higher values indicate that, +     * speed will decrease slowly, for example if it set to 0, it will stop immediately., +     * 1 is an invalid value, and will be converted to 0 automatically., +     */, +    private float mDragDecelarationFrictionCoef = 0.9f;, +, +    @Override, +    public void computeScroll() {, +, +        if (mListener instanceof BarLineChartTouchListener), +            ((BarLineChartTouchListener)mListener).computeScroll();, +    }, +, +     * If set to true, chart continues to scroll after touch up, +     *, +     * default: true, +     */, +    public boolean isDragDecelarationEnabled() {, +        return mDragDecelarationEnabled;, +    }, +, +    /**, +     * If set to true, chart continues to scroll after touch up]