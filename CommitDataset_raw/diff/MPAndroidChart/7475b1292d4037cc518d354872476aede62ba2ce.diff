[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +		mXAxis.mAxisMinimum = -0.5f;, +		mXAxis.mAxisRange += 0.5f;, +		mXAxis.mAxisRange *= mData.getDataSetCount();, +		mXAxis.mAxisRange += mData.getXValCount() * groupSpace;, +		mXAxis.mAxisMaximum = mXAxis.mAxisRange - mXAxis.mAxisMinimum;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +		mXAxis.mAxisMinimum = -0.5f;, +		mXAxis.mAxisRange += 0.5f;, +		mXAxis.mAxisRange *= mData.getDataSetCount();, +		mXAxis.mAxisRange += mData.getXValCount() * groupSpace;, +		mXAxis.mAxisMaximum = mXAxis.mAxisRange - mXAxis.mAxisMinimum;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            Log.i(LOG_TAG, "Preparing Value-Px Matrix, xmin: " + mXAxis.mAxisMinimum + ", xmax: ", +                    + mXAxis.mAxisMaximum + ", xdelta: " + mXAxis.mAxisRange);, +        mRightAxisTransformer.prepareMatrixValuePx(mXAxis.mAxisMinimum, mXAxis.mAxisRange, mAxisRight.mAxisRange,, +        mLeftAxisTransformer.prepareMatrixValuePx(mXAxis.mAxisMinimum, mXAxis.mAxisRange, mAxisLeft.mAxisRange,, +        // calculate / set x-axis range, +        mXAxis.mAxisMaximum = mData.getXVals().size() - 1;, +        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);, +        float xScale = mXAxis.mAxisRange / (maxXRange);, +        float xScale = mXAxis.mAxisRange / (minXRange);, +        float maxScale = mXAxis.mAxisRange / minXRange;, +        float minScale = mXAxis.mAxisRange / maxXRange;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +		mXAxis.mAxisMinimum = -0.5f;, +		mXAxis.mAxisRange += 0.5f;, +		mXAxis.mAxisRange *= mData.getDataSetCount();, +		mXAxis.mAxisRange += mData.getXValCount() * groupSpace;, +		mXAxis.mAxisMaximum = mXAxis.mAxisRange - mXAxis.mAxisMinimum;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            Log.i(LOG_TAG, "Preparing Value-Px Matrix, xmin: " + mXAxis.mAxisMinimum + ", xmax: ", +                    + mXAxis.mAxisMaximum + ", xdelta: " + mXAxis.mAxisRange);, +        mRightAxisTransformer.prepareMatrixValuePx(mXAxis.mAxisMinimum, mXAxis.mAxisRange, mAxisRight.mAxisRange,, +        mLeftAxisTransformer.prepareMatrixValuePx(mXAxis.mAxisMinimum, mXAxis.mAxisRange, mAxisLeft.mAxisRange,, +        // calculate / set x-axis range, +        mXAxis.mAxisMaximum = mData.getXVals().size() - 1;, +        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);, +        float xScale = mXAxis.mAxisRange / (maxXRange);, +        float xScale = mXAxis.mAxisRange / (minXRange);, +        float maxScale = mXAxis.mAxisRange / minXRange;, +        float minScale = mXAxis.mAxisRange / maxXRange;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BubbleChart.java, +import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;, +        if (mXAxis.mAxisRange == 0 && mData.getYValCount() > 0), +            mXAxis.mAxisRange = 1;, +        mXAxis.mAxisMinimum = -0.5f;, +        mXAxis.mAxisMaximum = (float) mData.getXValCount() - 0.5f;, +                if (xmin < mXAxis.mAxisMinimum), +                    mXAxis.mAxisMinimum = xmin;, +                if (xmax > mXAxis.mAxisMaximum), +                    mXAxis.mAxisMaximum = xmax;, +        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +		mXAxis.mAxisMinimum = -0.5f;, +		mXAxis.mAxisRange += 0.5f;, +		mXAxis.mAxisRange *= mData.getDataSetCount();, +		mXAxis.mAxisRange += mData.getXValCount() * groupSpace;, +		mXAxis.mAxisMaximum = mXAxis.mAxisRange - mXAxis.mAxisMinimum;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            Log.i(LOG_TAG, "Preparing Value-Px Matrix, xmin: " + mXAxis.mAxisMinimum + ", xmax: ", +                    + mXAxis.mAxisMaximum + ", xdelta: " + mXAxis.mAxisRange);, +        mRightAxisTransformer.prepareMatrixValuePx(mXAxis.mAxisMinimum, mXAxis.mAxisRange, mAxisRight.mAxisRange,, +        mLeftAxisTransformer.prepareMatrixValuePx(mXAxis.mAxisMinimum, mXAxis.mAxisRange, mAxisLeft.mAxisRange,, +        // calculate / set x-axis range, +        mXAxis.mAxisMaximum = mData.getXVals().size() - 1;, +        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);, +        float xScale = mXAxis.mAxisRange / (maxXRange);, +        float xScale = mXAxis.mAxisRange / (minXRange);, +        float maxScale = mXAxis.mAxisRange / minXRange;, +        float minScale = mXAxis.mAxisRange / maxXRange;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BubbleChart.java, +import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;, +        if (mXAxis.mAxisRange == 0 && mData.getYValCount() > 0), +            mXAxis.mAxisRange = 1;, +        mXAxis.mAxisMinimum = -0.5f;, +        mXAxis.mAxisMaximum = (float) mData.getXValCount() - 0.5f;, +                if (xmin < mXAxis.mAxisMinimum), +                    mXAxis.mAxisMinimum = xmin;, +                if (xmax > mXAxis.mAxisMaximum), +                    mXAxis.mAxisMaximum = xmax;, +        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java, +        mXAxis.mAxisMinimum = -0.5f;, +        mXAxis.mAxisMaximum += 0.5f;, +        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +		mXAxis.mAxisMinimum = -0.5f;, +		mXAxis.mAxisRange += 0.5f;, +		mXAxis.mAxisRange *= mData.getDataSetCount();, +		mXAxis.mAxisRange += mData.getXValCount() * groupSpace;, +		mXAxis.mAxisMaximum = mXAxis.mAxisRange - mXAxis.mAxisMinimum;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            Log.i(LOG_TAG, "Preparing Value-Px Matrix, xmin: " + mXAxis.mAxisMinimum + ", xmax: ", +                    + mXAxis.mAxisMaximum + ", xdelta: " + mXAxis.mAxisRange);, +        mRightAxisTransformer.prepareMatrixValuePx(mXAxis.mAxisMinimum, mXAxis.mAxisRange, mAxisRight.mAxisRange,, +        mLeftAxisTransformer.prepareMatrixValuePx(mXAxis.mAxisMinimum, mXAxis.mAxisRange, mAxisLeft.mAxisRange,, +        // calculate / set x-axis range, +        mXAxis.mAxisMaximum = mData.getXVals().size() - 1;, +        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);]