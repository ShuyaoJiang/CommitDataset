[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java, +    private float[] mShadowBuffers = new float[8];, +    private float[] mBodyBuffers = new float[4];, +        float bodySpace = dataSet.getBodySpace();, +            final int xIndex = e.getXIndex();, +            final float open = e.getOpen();, +            final float close = e.getClose();, +            final float high = e.getHigh();, +            final float low = e.getLow();, +, +            // calculate the shadow, +, +            mShadowBuffers[0] = xIndex;, +            mShadowBuffers[2] = xIndex;, +            mShadowBuffers[4] = xIndex;, +            mShadowBuffers[6] = xIndex;, +, +            if (open > close), +            {, +                mShadowBuffers[1] = high * phaseY;, +                mShadowBuffers[3] = open * phaseY;, +                mShadowBuffers[5] = low * phaseY;, +                mShadowBuffers[7] = close * phaseY;, +            }, +            else if (open < close), +            {, +                mShadowBuffers[1] = high * phaseY;, +                mShadowBuffers[3] = close * phaseY;, +                mShadowBuffers[5] = low * phaseY;, +                mShadowBuffers[7] = open * phaseY;, +            }, +            else, +            {, +                mShadowBuffers[1] = high * phaseY;, +                mShadowBuffers[3] = open * phaseY;, +                mShadowBuffers[5] = low * phaseY;, +                mShadowBuffers[7] = mShadowBuffers[3];, +            }, +, +            trans.pointValuesToPixel(mShadowBuffers);, +, +            // draw the shadows, +, +                if (open > close), +                else if (open < close), +            c.drawLines(mShadowBuffers, mRenderPaint);, +            // calculate the body, +, +            mBodyBuffers[0] = xIndex - 0.5f + bodySpace;, +            mBodyBuffers[1] = close * phaseY;, +            mBodyBuffers[2] = (xIndex + 0.5f - bodySpace);, +            mBodyBuffers[3] = open * phaseY;, +, +            trans.pointValuesToPixel(mBodyBuffers);, +, +                c.drawRect(, +                        mBodyBuffers[0], mBodyBuffers[3],, +                        mBodyBuffers[2], mBodyBuffers[1],, +                        mRenderPaint);, +, +                c.drawRect(, +                        mBodyBuffers[0], mBodyBuffers[1],, +                        mBodyBuffers[2], mBodyBuffers[3],, +                        mRenderPaint);, +, +                c.drawLine(, +                        mBodyBuffers[0], mBodyBuffers[1],, +                        mBodyBuffers[2], mBodyBuffers[3],, +                        mRenderPaint);]