[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +    public void onChartScale(MotionEvent me, float scaleX, float scaleY) {, +        Log.i("Scale / Zoom", "ScaleX: " + scaleX + ", ScaleY: " + scaleY);, +    }, +    , +    @Override, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +    public void onChartScale(MotionEvent me, float scaleX, float scaleY) {, +        Log.i("Scale / Zoom", "ScaleX: " + scaleX + ", ScaleY: " + scaleY);, +    }, +    , +    @Override, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java, +   , +    @Override, +    public void onChartScale(MotionEvent me, float scaleX, float scaleY) {, +        Log.i("Scale / Zoom", "ScaleX: " + scaleX + ", ScaleY: " + scaleY);, +    }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +    public void onChartScale(MotionEvent me, float scaleX, float scaleY) {, +        Log.i("Scale / Zoom", "ScaleX: " + scaleX + ", ScaleY: " + scaleY);, +    }, +    , +    @Override, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java, +   , +    @Override, +    public void onChartScale(MotionEvent me, float scaleX, float scaleY) {, +        Log.i("Scale / Zoom", "ScaleX: " + scaleX + ", ScaleY: " + scaleY);, +    }, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, +            OnChartGestureListener l = mChart.getOnChartGestureListener();, +, +                    float scaleX = (mChart.isScaleXEnabled()) ? scale : 1f;, +                    float scaleY = (mChart.isScaleYEnabled()) ? scale : 1f;, +, +                    mMatrix.postScale(scaleX, scaleY, t.x, t.y);                   , +, +                    if (l != null), +                        l.onChartScale(event, scaleX, scaleY);, +                    if (l != null), +                        l.onChartScale(event, scaleX, 1f);, +, +                    if (l != null), +                        l.onChartScale(event, 1f, scaleY);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +    public void onChartScale(MotionEvent me, float scaleX, float scaleY) {, +        Log.i("Scale / Zoom", "ScaleX: " + scaleX + ", ScaleY: " + scaleY);, +    }, +    , +    @Override, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/fragments/BarChartFrag.java, +   , +    @Override, +    public void onChartScale(MotionEvent me, float scaleX, float scaleY) {, +        Log.i("Scale / Zoom", "ScaleX: " + scaleX + ", ScaleY: " + scaleY);, +    }, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/BarLineChartTouchListener.java, +            OnChartGestureListener l = mChart.getOnChartGestureListener();, +, +                    float scaleX = (mChart.isScaleXEnabled()) ? scale : 1f;, +                    float scaleY = (mChart.isScaleYEnabled()) ? scale : 1f;, +, +                    mMatrix.postScale(scaleX, scaleY, t.x, t.y);                   , +, +                    if (l != null), +                        l.onChartScale(event, scaleX, scaleY);, +                    if (l != null), +                        l.onChartScale(event, scaleX, 1f);, +, +                    if (l != null), +                        l.onChartScale(event, 1f, scaleY);, +++ b/MPChartLib/src/com/github/mikephil/charting/listener/OnChartGestureListener.java, +, +    /**, +     * Callbacks when the chart is scaled / zoomed via pinch zoom gesture., +     * , +     * @param me, +     * @param scaleX scalefactor on the x-axis, +     * @param scaleY scalefactor on the y-axis, +     */, +    public void onChartScale(MotionEvent me, float scaleX, float scaleY);]