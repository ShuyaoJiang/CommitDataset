[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        mChart.setDescription("");, +        mChart.setDrawHoleEnabled(true);, +        mChart.setHoleColorTransparent(true);, +        mChart.setTransparentCircleColor(Color.WHITE);, +        , +        mChart.setHoleRadius(58f);, +        mChart.setTransparentCircleRadius(61f);, +        mChart.animateXY(1500, 1500);//, EasingFunction.EaseInOutQuad, EasingFunction.EaseInOutQuad);, +        dataSet.setSelectionShift(5f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        mChart.setDescription("");, +        mChart.setDrawHoleEnabled(true);, +        mChart.setHoleColorTransparent(true);, +        mChart.setTransparentCircleColor(Color.WHITE);, +        , +        mChart.setHoleRadius(58f);, +        mChart.setTransparentCircleRadius(61f);, +        mChart.animateXY(1500, 1500);//, EasingFunction.EaseInOutQuad, EasingFunction.EaseInOutQuad);, +        dataSet.setSelectionShift(5f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +            ((PieChartRenderer) mRenderer).getPaintHole().setColor(0xFFFFFFFF);, +                    new PorterDuffXfermode(PorterDuff.Mode.CLEAR));, +    public void setTransparentCircleColor(int color) {, +        ((PieChartRenderer) mRenderer).getPaintTransparentCircle().setColor(color);, +    }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        mChart.setDescription("");, +        mChart.setDrawHoleEnabled(true);, +        mChart.setHoleColorTransparent(true);, +        mChart.setTransparentCircleColor(Color.WHITE);, +        , +        mChart.setHoleRadius(58f);, +        mChart.setTransparentCircleRadius(61f);, +        mChart.animateXY(1500, 1500);//, EasingFunction.EaseInOutQuad, EasingFunction.EaseInOutQuad);, +        dataSet.setSelectionShift(5f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +            ((PieChartRenderer) mRenderer).getPaintHole().setColor(0xFFFFFFFF);, +                    new PorterDuffXfermode(PorterDuff.Mode.CLEAR));, +    public void setTransparentCircleColor(int color) {, +        ((PieChartRenderer) mRenderer).getPaintTransparentCircle().setColor(color);, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java, +import android.graphics.Paint.Style;, +    protected Paint mHolePaint;, +    protected Paint mTransparentCirclePaint;, +        mHolePaint.setStyle(Style.FILL);, +, +        mTransparentCirclePaint = new Paint(Paint.ANTI_ALIAS_FLAG);, +        mTransparentCirclePaint.setColor(Color.WHITE);, +        mTransparentCirclePaint.setStyle(Style.FILL);, +    public Paint getPaintTransparentCircle() {, +        return mTransparentCirclePaint;, +    }, +, +        if (mDrawBitmap == null, +                || ((int) mViewPortHandler.getChartHeight() != mDrawBitmap.getHeight())) {, +                    (int) mViewPortHandler.getChartHeight(), Bitmap.Config.ARGB_8888);, +        float off = r / 10f * 3.6f;, +            for (int j = 0, maxEntry = Math.min(, +                    (int) Math.ceil(entries.size() * mAnimator.getPhaseX()), entries.size()); j < maxEntry; j++) {, +                float lineHeight = Utils.calcTextHeight(mValuePaint, val) + Utils.convertDpToPixel(4f);, +, +                        c.drawText(data.getXVals().get(j), x, y + lineHeight / 2f, mValuePaint);, +                    c.drawText(val, x, y + lineHeight / 2f, mValuePaint);, +        c.drawBitmap(mDrawBitmap, 0, 0, mRenderPaint);, +            if (transparentCircleRadius > holeRadius) {, +                , +                int color = mTransparentCirclePaint.getColor();, +, +                // make transparent, +                mTransparentCirclePaint.setColor(color & 0x60FFFFFF);, +, +                // draw the transparent-circle, +                mBitmapCanvas.drawCircle(center.x, center.y,, +                        radius / 100 * transparentCircleRadius, mTransparentCirclePaint);, +                , +                mTransparentCirclePaint.setColor(color); , +            } ]