[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java, +				float yOffset = mLegend.mTextHeightMax;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java, +				float yOffset = mLegend.mTextHeightMax;, +++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java, +    /**, +     * custom formatter that is used instead of the auto-formatter if set, +     */, +    /**, +     * the actual array of entries, +     */, +    /**, +     * the number of entries the legend contains, +     */, +    /**, +     * the number of decimal digits to use, +     */, +    /**, +     * the number of y-label entries the y-labels should have, default 6, +     */, +    /**, +     * indicates if the top y-label entry is drawn or not, +     */, +    /**, +     * if true, the y-labels show only the minimum and maximum value, +     */, +    /**, +     * flag that indicates if the axis is inverted or not, +     */, +    /**, +     * if true, the y-label entries will always start at zero, +     */, +    /**, +     * if true, the set number of y-labels will be forced, +     */, +    /**, +     * custom minimum value this axis represents, +     */, +    /**, +     * custom maximum value this axis represents, +     */, +    /**, +     * the total range of values this axis covers, +     */, +    /**, +     * the position of the y-labels relative to the chart, +     */, +    /**, +     * enum for the position of the y-labels relative to the chart, +     */, +    /**, +     * the side this axis object represents, +     */, +     * @param count the number of y-axis labels that sould be displayed, +     * @param force if enabled, the set label count will be forced, meaning that the exact specified count of labels will, +    /**, +     * This is for normal (not horizontal) charts horizontal spacing., +     *, +     * @param p, +     * @return, +     */, +    /**, +     * This is for HorizontalBarChart vertical spacing., +     *, +     * @param p, +     * @return, +     */, +        return (float) Utils.calcTextHeight(p, label) + getYOffset() * 2f;]