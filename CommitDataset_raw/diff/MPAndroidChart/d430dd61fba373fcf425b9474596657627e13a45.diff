[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        leftAxis.setGranularityEnabled(true);, +        rightAxis.setGranularityEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        leftAxis.setGranularityEnabled(true);, +        rightAxis.setGranularityEnabled(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java, +     * When true, axis labels are controlled by the `granularity` property., +     * When false, axis values could possibly be repeated., +     * This could happen if two adjacent axis values are rounded to same value., +     * If using granularity this could be avoided by having fewer axis values visible., +     */, +    protected boolean mGranularityEnabled = true;, +, +    /**, +     * the minimum interval between axis values, +     */, +    protected float mGranularity = 1.0f;, +, +    /**, +     * @return true if granularity is enabled, +     */, +    public boolean isGranularityEnabled() {, +        return mGranularityEnabled;, +    }, +, +    /**, +     * Enabled/disable granularity control on axis value intervals, +     * @param enabled, +     */, +    public void setGranularityEnabled(boolean enabled) {, +        mGranularityEnabled = true;, +    }, +, +    /**, +     * @return the minimum interval between axis values, +     */, +    public float getGranularity() {, +        return mGranularity;, +    }, +, +    /**, +     * set the minimum interval between axis values, +     * @param granularity, +     */, +    public void setGranularity(float granularity) {, +        mGranularity = granularity;, +    }, +, +    /**, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        leftAxis.setGranularityEnabled(true);, +        rightAxis.setGranularityEnabled(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java, +     * When true, axis labels are controlled by the `granularity` property., +     * When false, axis values could possibly be repeated., +     * This could happen if two adjacent axis values are rounded to same value., +     * If using granularity this could be avoided by having fewer axis values visible., +     */, +    protected boolean mGranularityEnabled = true;, +, +    /**, +     * the minimum interval between axis values, +     */, +    protected float mGranularity = 1.0f;, +, +    /**, +     * @return true if granularity is enabled, +     */, +    public boolean isGranularityEnabled() {, +        return mGranularityEnabled;, +    }, +, +    /**, +     * Enabled/disable granularity control on axis value intervals, +     * @param enabled, +     */, +    public void setGranularityEnabled(boolean enabled) {, +        mGranularityEnabled = true;, +    }, +, +    /**, +     * @return the minimum interval between axis values, +     */, +    public float getGranularity() {, +        return mGranularity;, +    }, +, +    /**, +     * set the minimum interval between axis values, +     * @param granularity, +     */, +    public void setGranularity(float granularity) {, +        mGranularity = granularity;, +    }, +, +    /**, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRenderer.java, +        // Find out how much spacing (in y value space) between axis values, +]