[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +                mChart.spin(2000, mChart.getRotationAngle(), mChart.getRotationAngle() + 360, Easing.EasingOption, +                        .EaseInCubic);, +            float val = (float) (Math.random() * mult) + mult / 2;, +            yVals1.add(new Entry(i, val));, +            float val = (float) (Math.random() * mult) + mult / 2;, +            yVals2.add(new Entry(i, val));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +                mChart.spin(2000, mChart.getRotationAngle(), mChart.getRotationAngle() + 360, Easing.EasingOption, +                        .EaseInCubic);, +            float val = (float) (Math.random() * mult) + mult / 2;, +            yVals1.add(new Entry(i, val));, +            float val = (float) (Math.random() * mult) + mult / 2;, +            yVals2.add(new Entry(i, val));, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java, +    /** interval on the x-axis per group */, +    protected float mInterval = 0f;, +, +    public void setInterval(float interval) {, +        this.mInterval = interval;, +    }, +, +        float barWidth = mInterval / mDataSetCount;, +, +        float groupSpaceWidth = mDataSetCount <= 1 ? 0 : barWidth * mGroupSpace;, +        float newInterval = (mInterval - groupSpaceWidth);, +        float newBarWidth = newInterval / mDataSetCount;, +, +        float barSpaceWidth = newBarWidth * mBarSpace;, +        float barSpaceWidthHalf = barSpaceWidth / 2f;, +, +        float groupSpaceWidthHalf = groupSpaceWidth / 2f;, +        float dataSetSpace = mDataSetCount <= 1 ? 0 : (newInterval / mDataSetCount) * mDataSetIndex;, +, +            // calculate the x-position, depending on interval, +            float x = mInterval * i + dataSetSpace;, +, +                float left = x + groupSpaceWidthHalf + barSpaceWidthHalf;, +                float right = left + newBarWidth - barSpaceWidth;, +                    float left = x + groupSpaceWidthHalf + barSpaceWidthHalf;, +                    float right = left + newBarWidth - barSpaceWidth;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +                mChart.spin(2000, mChart.getRotationAngle(), mChart.getRotationAngle() + 360, Easing.EasingOption, +                        .EaseInCubic);, +            float val = (float) (Math.random() * mult) + mult / 2;, +            yVals1.add(new Entry(i, val));, +            float val = (float) (Math.random() * mult) + mult / 2;, +            yVals2.add(new Entry(i, val));, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java, +    /** interval on the x-axis per group */, +    protected float mInterval = 0f;, +, +    public void setInterval(float interval) {, +        this.mInterval = interval;, +    }, +, +        float barWidth = mInterval / mDataSetCount;, +, +        float groupSpaceWidth = mDataSetCount <= 1 ? 0 : barWidth * mGroupSpace;, +        float newInterval = (mInterval - groupSpaceWidth);, +        float newBarWidth = newInterval / mDataSetCount;, +, +        float barSpaceWidth = newBarWidth * mBarSpace;, +        float barSpaceWidthHalf = barSpaceWidth / 2f;, +, +        float groupSpaceWidthHalf = groupSpaceWidth / 2f;, +        float dataSetSpace = mDataSetCount <= 1 ? 0 : (newInterval / mDataSetCount) * mDataSetIndex;, +, +            // calculate the x-position, depending on interval, +            float x = mInterval * i + dataSetSpace;, +, +                float left = x + groupSpaceWidthHalf + barSpaceWidthHalf;, +                float right = left + newBarWidth - barSpaceWidth;, +                    float left = x + groupSpaceWidthHalf + barSpaceWidthHalf;, +                    float right = left + newBarWidth - barSpaceWidth;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +		//mXAxis.mAxisMinimum = -0.5f;, +//, +//		// increase deltax by 1 because the bars have a width of 1, +//		mXAxis.mAxisRange += 0.5f;, +//, +//		// extend xDelta to make space for multiple datasets (if ther are one), +//		mXAxis.mAxisRange *= mData.getDataSetCount();, +//, +//		float groupSpace = mData.getGroupSpace();, +//		mXAxis.mAxisRange += mData.getXValCount() * groupSpace;, +//		mXAxis.mAxisMaximum = mXAxis.mAxisRange - mXAxis.mAxisMinimum;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +                mChart.spin(2000, mChart.getRotationAngle(), mChart.getRotationAngle() + 360, Easing.EasingOption, +                        .EaseInCubic);, +            float val = (float) (Math.random() * mult) + mult / 2;, +            yVals1.add(new Entry(i, val));, +            float val = (float) (Math.random() * mult) + mult / 2;, +            yVals2.add(new Entry(i, val));, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/BarBuffer.java, +    /** interval on the x-axis per group */, +    protected float mInterval = 0f;, +, +    public void setInterval(float interval) {, +        this.mInterval = interval;]