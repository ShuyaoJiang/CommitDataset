[+++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java, +public abstract class AxisBase extends ComponentBase {, +++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java, +public abstract class AxisBase extends ComponentBase {, +++ b/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java, +, +package com.github.mikephil.charting.components;, +, +import android.graphics.Color;, +import android.graphics.Typeface;, +, +import com.github.mikephil.charting.utils.Utils;, +, +/**, + * This class encapsulates everything both Axis and Legend have in common., + * , + * @author Philipp Jahoda, + */, +public abstract class ComponentBase {, +, +    /** the offset in pixels this axis labels have on the x-axis */, +    protected float mXOffset = 5f;, +, +    /** the offset in pixels this axis labels have on the Y-axis */, +    protected float mYOffset = 5f;, +, +    /** the typeface used for the labels */, +    protected Typeface mTypeface = null;, +, +    /** the text size of the labels */, +    protected float mTextSize = 10f;, +    , +    /** the text color to use for the labels */, +    protected int mTextColor = Color.BLACK;, +, +    /**, +     * Returns the used offset on the x-axis for drawing the axis or legend, +     * labels. This offset is applied before and after the label., +     * , +     * @return, +     */, +    public float getXOffset() {, +        return mXOffset;, +    }, +, +    /**, +     * Sets the used x-axis offset for the labels on this axis., +     * , +     * @param xOffset, +     */, +    public void setXOffset(float xOffset) {, +        mXOffset = Utils.convertDpToPixel(xOffset);, +    }, +, +    /**, +     * Returns the used offset on the x-axis for drawing the axis labels. This, +     * offset is applied before and after the label., +     * , +     * @return, +     */, +    public float getYOffset() {, +        return mYOffset;, +    }, +, +    /**, +     * Sets the used x-axis offset for the labels on this axis., +     * , +     * @param xOffset, +     */, +    public void setYOffset(float yOffset) {, +        mYOffset = Utils.convertDpToPixel(yOffset);, +    }, +, +    /**, +     * returns the Typeface used for the labels, returns null if none is set, +     * , +     * @return, +     */, +    public Typeface getTypeface() {, +        return mTypeface;, +    }, +, +    /**, +     * sets a specific Typeface for the labels, +     * , +     * @param tf, +     */, +    public void setTypeface(Typeface tf) {, +        mTypeface = tf;, +    }, +, +    /**, +     * sets the size of the label text in pixels min = 6f, max = 24f, default, +     * 10f, +     * , +     * @param size, +     */, +    public void setTextSize(float size) {, +, +        if (size > 24f)]