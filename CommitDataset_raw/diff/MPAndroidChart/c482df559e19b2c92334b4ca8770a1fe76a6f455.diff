[+++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java, +    /**, +     * space indicator between the bars 0.1f == 10 %, +     */, +    private float mBarSpace = 0.15f;, +, +    /**, +     * the maximum number of bars that are stacked upon each other, this value, +     * is calculated from the Entries that are added to the DataSet, +     */, +    private int mStackSize = 1;, +, +    /**, +     * the color used for drawing the bar shadows, +     */, +    private int mBarShadowColor = Color.rgb(215, 215, 215);, +, +    /**, +     * the alpha value used to draw the highlight indicator bar, +     */, +    private int mHighLightAlpha = 120;, +, +    /**, +     * array of labels used to describe the different values of the stacked bars, +     */, +    private String[] mStackLabels = new String[]{, +            "Stack", +    };, +, +    public void calcMinMax(int start, int end) {, +        // TODO: implement this, +        return mStackSize;, +    }, +, +    @Override, +    public boolean isStacked() {, +        return mStackSize > 1 ? true : false;, +    }, +, +    /**, +     * returns the space between bars in percent of the whole width of one value, +     *, +     * @return, +     */, +    public float getBarSpacePercent() {, +        return mBarSpace * 100f;, +    }, +, +    @Override, +    public float getBarSpace() {, +        return mBarSpace;, +    }, +, +    /**, +     * sets the space between the bars in percent (0-100) of the total bar width, +     *, +     * @param percent, +     */, +    public void setBarSpacePercent(float percent) {, +        mBarSpace = percent / 100f;, +    }, +, +    /**, +     * Sets the color used for drawing the bar-shadows. The bar shadows is a, +     * surface behind the bar that indicates the maximum value. Don't for get to, +     * use getResources().getColor(...) to set this. Or Color.rgb(...)., +     *, +     * @param color, +     */, +    public void setBarShadowColor(int color) {, +        mBarShadowColor = color;, +        return mBarShadowColor;, +    }, +, +    /**, +     * Set the alpha value (transparency) that is used for drawing the highlight, +     * indicator bar. min = 0 (fully transparent), max = 255 (fully opaque), +     *, +     * @param alpha, +     */, +    public void setHighLightAlpha(int alpha) {, +        mHighLightAlpha = alpha;, +        return mHighLightAlpha;, +    }, +, +    /**, +     * Sets labels for different values of bar-stacks, in case there are one., +     *, +     * @param labels, +     */, +    public void setStackLabels(String[] labels) {, +        mStackLabels = labels;, +        return mStackLabels;, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java, +    /**, +     * space indicator between the bars 0.1f == 10 %, +     */, +    private float mBarSpace = 0.15f;, +, +    /**]