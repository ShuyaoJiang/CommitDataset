[+++ b/MPChartExample/src/com/example/mpchartexample/MultiLineChartActivity.java, +//		mChart.setDrawTopYLegendEntry(false);, +++ b/MPChartExample/src/com/example/mpchartexample/MultiLineChartActivity.java, +//		mChart.setDrawTopYLegendEntry(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +	/** flag that indicates if pinch-zoom is enabled. if true, both x and y axis can be scaled with 2 fingers, if false, x and y axis can be scaled separately */, +	protected boolean mPinchZoomEnabled = false;, +, +	/**, +     * returns true if the specified point (y-axis) exceeds the limits of what is visible on the top, +     * , +     * @param v, +     * @return, +     */, +	protected boolean isOffContentTop(float p) {, +	    if(p < mContentRect.top) return true;, +	    else return false;, +	}, +	, +	/**, +     * returns true if the specified point (y-axis) exceeds the limits of what is visible on the bottom, +     * , +     * @param v, +     * @return, +     */, +	protected boolean isOffContentBottom(float p) {, +        if(p > mContentRect.bottom) return true;, +        else return false;, +    }, +, +    /**, +     * if set to true, both x and y axis can be scaled with 2 fingers, if false, x and y axis can be scaled separately. default: false, +     * @param enabled, +     */, +    public void setPinchZoom(boolean enabled) {, +        mPinchZoomEnabled = enabled;, +    }, +    , +    /**, +     * returns true if pinch-zoom is enabled, false if not, +     * @return, +     */, +    public boolean isPinchZoomEnabled() {, +        return mPinchZoomEnabled;, +    }, +, +++ b/MPChartExample/src/com/example/mpchartexample/MultiLineChartActivity.java, +//		mChart.setDrawTopYLegendEntry(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +	/** flag that indicates if pinch-zoom is enabled. if true, both x and y axis can be scaled with 2 fingers, if false, x and y axis can be scaled separately */, +	protected boolean mPinchZoomEnabled = false;, +, +	/**, +     * returns true if the specified point (y-axis) exceeds the limits of what is visible on the top, +     * , +     * @param v, +     * @return, +     */, +	protected boolean isOffContentTop(float p) {, +	    if(p < mContentRect.top) return true;, +	    else return false;, +	}, +	, +	/**, +     * returns true if the specified point (y-axis) exceeds the limits of what is visible on the bottom, +     * , +     * @param v, +     * @return, +     */, +	protected boolean isOffContentBottom(float p) {, +        if(p > mContentRect.bottom) return true;, +        else return false;, +    }, +, +    /**, +     * if set to true, both x and y axis can be scaled with 2 fingers, if false, x and y axis can be scaled separately. default: false, +     * @param enabled, +     */, +    public void setPinchZoom(boolean enabled) {, +        mPinchZoomEnabled = enabled;, +    }, +    , +    /**, +     * returns true if pinch-zoom is enabled, false if not, +     * @return, +     */, +    public boolean isPinchZoomEnabled() {, +        return mPinchZoomEnabled;, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +		float maxTransY = (float) mContentRect.height() * (mScaleY - 1f);, +		float newTransY = Math.max(Math.min(curTransY, maxTransY), 0f);, +		vals[Matrix.MTRANS_Y] = newTransY;, +        return 5f;, +++ b/MPChartExample/src/com/example/mpchartexample/MultiLineChartActivity.java, +//		mChart.setDrawTopYLegendEntry(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +	/** flag that indicates if pinch-zoom is enabled. if true, both x and y axis can be scaled with 2 fingers, if false, x and y axis can be scaled separately */, +	protected boolean mPinchZoomEnabled = false;]