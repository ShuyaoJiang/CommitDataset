[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +    protected boolean mDrawBarShadow = true;, +    protected RectF mBarShadow = new RectF();, +    protected RectF mBarRect = new RectF();, +    protected void prepareBar(float x, float y, float barspace) {, +			posOffset = getPositiveYOffset(mDrawValueAboveBar);, +			negOffset = getNegativeYOffset(mDrawValueAboveBar);, +	protected float getPositiveYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint, "8") * 1.5f);, +	}, +, +	protected float getNegativeYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils.convertDpToPixel(5));, +	}, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +    protected boolean mDrawBarShadow = true;, +    protected RectF mBarShadow = new RectF();, +    protected RectF mBarRect = new RectF();, +    protected void prepareBar(float x, float y, float barspace) {, +			posOffset = getPositiveYOffset(mDrawValueAboveBar);, +			negOffset = getNegativeYOffset(mDrawValueAboveBar);, +	protected float getPositiveYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint, "8") * 1.5f);, +	}, +, +	protected float getNegativeYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils.convertDpToPixel(5));, +	}, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    protected void prepareYLabels() {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +    protected boolean mDrawBarShadow = true;, +    protected RectF mBarShadow = new RectF();, +    protected RectF mBarRect = new RectF();, +    protected void prepareBar(float x, float y, float barspace) {, +			posOffset = getPositiveYOffset(mDrawValueAboveBar);, +			negOffset = getNegativeYOffset(mDrawValueAboveBar);, +	protected float getPositiveYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint, "8") * 1.5f);, +	}, +, +	protected float getNegativeYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils.convertDpToPixel(5));, +	}, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    protected void prepareYLabels() {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.view.ViewGroup;, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>>, +		extends ViewGroup, +		setWillNotDraw(false);, +		for (int i=0; i < getChildCount(); i++), +		{, +			getChildAt(i).layout(left, top, right, bottom);, +		}, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +    protected boolean mDrawBarShadow = true;, +    protected RectF mBarShadow = new RectF();, +    protected RectF mBarRect = new RectF();, +    protected void prepareBar(float x, float y, float barspace) {, +			posOffset = getPositiveYOffset(mDrawValueAboveBar);, +			negOffset = getNegativeYOffset(mDrawValueAboveBar);, +	protected float getPositiveYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint, "8") * 1.5f);, +	}, +, +	protected float getNegativeYOffset(boolean drawAboveValueBar), +	{, +		return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") * 1.5f : -Utils.convertDpToPixel(5));, +	}, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    protected void prepareYLabels() {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import android.view.ViewGroup;, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>>, +		extends ViewGroup, +		setWillNotDraw(false);, +		for (int i=0; i < getChildCount(); i++), +		{, +			getChildAt(i).layout(left, top, right, bottom);, +		}, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java, +package com.github.mikephil.charting.charts;, +, +import android.content.Context;, +import android.graphics.Paint;, +import android.graphics.Rect;]