[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +, +, +, +        mViewPortHandler.zoom(scaleX, scaleY, x, -y, save);, +     * x and y are the values (NOT PIXELS) of the zoom center.., +    public void zoom(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis) {, +     * Zooms to the center of the chart with the given scale factor., +     *, +     * @param scaleX, +     * @param scaleY, +     */, +    public void zoomCenter(float scaleX, float scaleY) {, +, +        MPPointF center = getCenterOffsets();, +, +        Matrix save = mZoomMatrixBuffer;, +        mViewPortHandler.zoom(scaleX, scaleY, center.x, -center.y, save);, +        mViewPortHandler.refresh(save, this, false);, +    }, +, +    /**, +, +        float yScale = getAxisRange(axis) / maxYRange;, +        float yScale = getAxisRange(axis) / minYRange;, +        float minScale = getAxisRange(axis) / minYRange;, +        float maxScale = getAxisRange(axis) / maxYRange;, +        float yInView = getAxisRange(axis) / mViewPortHandler.getScaleY();, +            float yInView = getAxisRange(axis) / mViewPortHandler.getScaleY();, +        float valsInView = getAxisRange(axis) / mViewPortHandler.getScaleY();, +        float yInView = getAxisRange(axis) / mViewPortHandler.getScaleY();, +            float yInView = getAxisRange(axis) / mViewPortHandler.getScaleY();, +     * Returns the range of the specified axis., +    protected float getAxisRange(AxisDependency axis) {, +, +, +    /**, +     * buffer for storing lowest visible x point, +     */, +    /**, +     * buffer for storing highest visible x point, +     */, +, +        mOnSizeChangedBuffer[0] = mOnSizeChangedBuffer[1] = 0;, +, +            mOnSizeChangedBuffer[0] = mViewPortHandler.contentLeft();, +            mOnSizeChangedBuffer[1] = mViewPortHandler.contentTop();, +            getTransformer(AxisDependency.LEFT).pixelsToValue(mOnSizeChangedBuffer);, +            getTransformer(AxisDependency.LEFT).pointValuesToPixel(mOnSizeChangedBuffer);, +            mViewPortHandler.centerViewPort(mOnSizeChangedBuffer, this);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +, +, +, +        mViewPortHandler.zoom(scaleX, scaleY, x, -y, save);, +     * x and y are the values (NOT PIXELS) of the zoom center.., +    public void zoom(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis) {, +     * Zooms to the center of the chart with the given scale factor., +     *, +     * @param scaleX, +     * @param scaleY, +     */, +    public void zoomCenter(float scaleX, float scaleY) {, +, +        MPPointF center = getCenterOffsets();, +, +        Matrix save = mZoomMatrixBuffer;, +        mViewPortHandler.zoom(scaleX, scaleY, center.x, -center.y, save);, +        mViewPortHandler.refresh(save, this, false);, +    }, +, +    /**, +, +        float yScale = getAxisRange(axis) / maxYRange;, +        float yScale = getAxisRange(axis) / minYRange;, +        float minScale = getAxisRange(axis) / minYRange;, +        float maxScale = getAxisRange(axis) / maxYRange;, +        float yInView = getAxisRange(axis) / mViewPortHandler.getScaleY();, +            float yInView = getAxisRange(axis) / mViewPortHandler.getScaleY();, +        float valsInView = getAxisRange(axis) / mViewPortHandler.getScaleY();, +        float yInView = getAxisRange(axis) / mViewPortHandler.getScaleY();, +            float yInView = getAxisRange(axis) / mViewPortHandler.getScaleY();, +     * Returns the range of the specified axis., +    protected float getAxisRange(AxisDependency axis) {, +, +, +    /**, +     * buffer for storing lowest visible x point, +     */, +    /**, +     * buffer for storing highest visible x point, +     */, +, +        mOnSizeChangedBuffer[0] = mOnSizeChangedBuffer[1] = 0;, +, +            mOnSizeChangedBuffer[0] = mViewPortHandler.contentLeft();, +            mOnSizeChangedBuffer[1] = mViewPortHandler.contentTop();, +            getTransformer(AxisDependency.LEFT).pixelsToValue(mOnSizeChangedBuffer);, +            getTransformer(AxisDependency.LEFT).pointValuesToPixel(mOnSizeChangedBuffer);, +            mViewPortHandler.centerViewPort(mOnSizeChangedBuffer, this);]