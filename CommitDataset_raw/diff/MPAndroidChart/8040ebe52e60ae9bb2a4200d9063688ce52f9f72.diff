[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    /** flag that indicates if auto scaling on the y axis is enabled */, +    private boolean mAutoScaleMinMaxEnabled = false;, +    private Integer mAutoScaleLastLowestVisibleXIndex = null;, +    private Integer mAutoScaleLastHighestVisibleXIndex = null;, +, +        if (mAutoScaleMinMaxEnabled) {, +            final int lowestVisibleXIndex = getLowestVisibleXIndex();, +            final int highestVisibleXIndex = getHighestVisibleXIndex();, +, +            if (mAutoScaleLastLowestVisibleXIndex == null ||, +                    mAutoScaleLastLowestVisibleXIndex != lowestVisibleXIndex ||, +                    mAutoScaleLastHighestVisibleXIndex == null ||, +                    mAutoScaleLastHighestVisibleXIndex != highestVisibleXIndex) {, +, +                calcMinMax();, +                calculateOffsets();, +, +                mAutoScaleLastLowestVisibleXIndex = lowestVisibleXIndex;, +                mAutoScaleLastHighestVisibleXIndex = highestVisibleXIndex;, +            }, +        }, +, +        if (mAutoScaleMinMaxEnabled), +            mData.calcMinMax(getLowestVisibleXIndex(), getHighestVisibleXIndex());, +, +    /**, +     * flag that indicates if auto scaling on the y axis is enabled., +     * @param enabled if yes, the y axis automatically adjusts to the, +     *                min and max y values of the current x axis range, +     *                whenever the viewport changes, +     */, +    public void setAutoScaleMinMaxEnabled(boolean enabled) {, +        mAutoScaleMinMaxEnabled = enabled;, +    }, +, +    /**, +     * @default false, +     * @return true if auto scaling on the y axis is enabled., +     */, +    public boolean isAutoScaleMinMaxEnabled() {, +        return mAutoScaleMinMaxEnabled;, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    /** flag that indicates if auto scaling on the y axis is enabled */, +    private boolean mAutoScaleMinMaxEnabled = false;, +    private Integer mAutoScaleLastLowestVisibleXIndex = null;, +    private Integer mAutoScaleLastHighestVisibleXIndex = null;, +, +        if (mAutoScaleMinMaxEnabled) {, +            final int lowestVisibleXIndex = getLowestVisibleXIndex();, +            final int highestVisibleXIndex = getHighestVisibleXIndex();, +, +            if (mAutoScaleLastLowestVisibleXIndex == null ||, +                    mAutoScaleLastLowestVisibleXIndex != lowestVisibleXIndex ||, +                    mAutoScaleLastHighestVisibleXIndex == null ||, +                    mAutoScaleLastHighestVisibleXIndex != highestVisibleXIndex) {, +, +                calcMinMax();, +                calculateOffsets();, +, +                mAutoScaleLastLowestVisibleXIndex = lowestVisibleXIndex;, +                mAutoScaleLastHighestVisibleXIndex = highestVisibleXIndex;, +            }, +        }, +, +        if (mAutoScaleMinMaxEnabled), +            mData.calcMinMax(getLowestVisibleXIndex(), getHighestVisibleXIndex());, +, +    /**, +     * flag that indicates if auto scaling on the y axis is enabled., +     * @param enabled if yes, the y axis automatically adjusts to the, +     *                min and max y values of the current x axis range, +     *                whenever the viewport changes, +     */, +    public void setAutoScaleMinMaxEnabled(boolean enabled) {, +        mAutoScaleMinMaxEnabled = enabled;, +    }, +, +    /**, +     * @default false, +     * @return true if auto scaling on the y axis is enabled., +     */, +    public boolean isAutoScaleMinMaxEnabled() {, +        return mAutoScaleMinMaxEnabled;, +    }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleDataSet.java, +    protected void calcMinMax(int start, int end) {, +        if (mYVals.size() == 0), +            return;, +        int endValue;, +, +        if (end == 0), +            endValue = mYVals.size() - 1;, +        else, +            endValue = end;, +, +        mLastStart = start;]