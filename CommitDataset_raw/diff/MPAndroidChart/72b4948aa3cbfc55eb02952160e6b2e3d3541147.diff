[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +            if (mData.getEntryCount() <= 0), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +            if (mData.getEntryCount() <= 0), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java, +        int entryCount = mData.getEntryCount();, +, +        mDrawAngles = new float[entryCount];, +        mAbsoluteAngles = new float[entryCount];, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +            if (mData.getEntryCount() <= 0), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java, +        int entryCount = mData.getEntryCount();, +, +        mDrawAngles = new float[entryCount];, +        mAbsoluteAngles = new float[entryCount];, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java, +    public int getMaxVisibleCount() {, +        return mData.getEntryCount();, +    }, +, +    @Override, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +            if (mData.getEntryCount() <= 0), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java, +        int entryCount = mData.getEntryCount();, +, +        mDrawAngles = new float[entryCount];, +        mAbsoluteAngles = new float[entryCount];, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java, +    public int getMaxVisibleCount() {, +        return mData.getEntryCount();, +    }, +, +    @Override, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, +//    @Override, +//    protected void calcMinMax() {, +//        super.calcMinMax();, +//, +//        if (mXAxis.mAxisRange == 0 && mData.getEntryCount() > 0), +//            mXAxis.mAxisRange = 1;, +//, +//        mXAxis.mAxisMaximum += 0.5f;, +//        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);, +//    }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +            if (mData.getEntryCount() <= 0), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java, +        int entryCount = mData.getEntryCount();, +, +        mDrawAngles = new float[entryCount];, +        mAbsoluteAngles = new float[entryCount];, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java, +    public int getMaxVisibleCount() {, +        return mData.getEntryCount();, +    }, +, +    @Override, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, +//    @Override, +//    protected void calcMinMax() {, +//        super.calcMinMax();, +//, +//        if (mXAxis.mAxisRange == 0 && mData.getEntryCount() > 0), +//            mXAxis.mAxisRange = 1;, +//, +//        mXAxis.mAxisMaximum += 0.5f;, +//        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);, +//    }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +            if (mData.getEntryCount() <= 0), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java, +        int entryCount = mData.getEntryCount();, +, +        mDrawAngles = new float[entryCount];, +        mAbsoluteAngles = new float[entryCount];, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieRadarChartBase.java, +    public int getMaxVisibleCount() {, +        return mData.getEntryCount();, +    }, +, +    @Override, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, +//    @Override, +//    protected void calcMinMax() {, +//        super.calcMinMax();, +//, +//        if (mXAxis.mAxisRange == 0 && mData.getEntryCount() > 0), +//            mXAxis.mAxisRange = 1;, +//, +//        mXAxis.mAxisMaximum += 0.5f;, +//        mXAxis.mAxisRange = Math.abs(mXAxis.mAxisMaximum - mXAxis.mAxisMinimum);, +//    }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/interfaces/dataprovider/BarLineScatterCandleBubbleDataProvider.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +            if (mData.getEntryCount() <= 0), +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/PieChart.java]