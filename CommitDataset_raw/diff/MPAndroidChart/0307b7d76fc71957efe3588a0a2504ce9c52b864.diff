[+++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBaseDataSet;, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBaseDataSet;, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBaseDataSet;, +            IDataSet set = mDataSets.get(dataSetIndex);, +        IDataSet set = mDataSets.get(dataSetIndex);, +, +        if(set != null) {, +            boolean removed = set.removeEntry(e);, +        } else, +            return false;, +        IDataSet dataSet = mDataSets.get(dataSetIndex);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBaseDataSet;, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBaseDataSet;, +            IDataSet set = mDataSets.get(dataSetIndex);, +        IDataSet set = mDataSets.get(dataSetIndex);, +, +        if(set != null) {, +            boolean removed = set.removeEntry(e);, +        } else, +            return false;, +        IDataSet dataSet = mDataSets.get(dataSetIndex);, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BaseDataSet.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBaseDataSet;, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBaseDataSet;, +            IDataSet set = mDataSets.get(dataSetIndex);, +        IDataSet set = mDataSets.get(dataSetIndex);, +, +        if(set != null) {, +            boolean removed = set.removeEntry(e);, +        } else, +            return false;, +        IDataSet dataSet = mDataSets.get(dataSetIndex);, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IDataSet.java, +public interface IDataSet<T extends Entry> {, +     * Adds an Entry to the DataSet dynamically., +     * Entries are added to the end of the list., +     * This will also recalculate the current minimum and maximum, +     * values of the DataSet and the value-sum., +     *, +     * @param e, +     */, +    void addEntry(T e);, +, +    /**, +     * Removes an Entry from the DataSets entries array. This will also, +     * recalculate the current minimum and maximum values of the DataSet and the, +     * value-sum. Returns true if an Entry was removed, false if no Entry could, +     * be removed., +     *, +     * @param e, +     */, +    boolean removeEntry(T e);, +, +    /**]