[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +     * and x-axis labels and their position, +        float stackSpace = mLegend.getStackSpace();, +                        posX += Utils.calcTextWidth(mLegendLabelPaint, labels[i]), +                                + mLegend.getXEntrySpace();, +                        posX -= Utils.calcTextWidth(mLegendLabelPaint, labels[i]), +                                + mLegend.getXEntrySpace();, +                posX = getWidth() - mLegend.getMaximumEntryLength(mLegendLabelPaint), +                        - formTextSpaceAndForm;, +                break;, +            case BELOW_CHART_CENTER:, +                , +                float fullSize = mLegend.getFullWidth(mLegendLabelPaint);, +                , +                posX = getWidth() / 2f - fullSize / 2f;, +                posY = getHeight() - mLegend.getOffsetBottom() / 2f - formSize / 2f;, +                , +                for (int i = 0; i < labels.length; i++) {, +, +                    mLegend.drawForm(mDrawCanvas, posX, posY, mLegendFormPaint, i);, +, +                    // grouped forms have null labels, +                    if (labels[i] != null) {, +, +                        // make a step to the left, +                        if (mLegend.getColors()[i] != -1), +                            posX += formTextSpaceAndForm;, +, +                        mLegend.drawLabel(mDrawCanvas, posX, posY + textDrop, mLegendLabelPaint, i);, +                        posX += Utils.calcTextWidth(mLegendLabelPaint, labels[i]), +                                + mLegend.getXEntrySpace();, +                    } else {, +                        posX += formSize + stackSpace;, +                    }, +                }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +     * and x-axis labels and their position, +        float stackSpace = mLegend.getStackSpace();, +                        posX += Utils.calcTextWidth(mLegendLabelPaint, labels[i]), +                                + mLegend.getXEntrySpace();, +                        posX -= Utils.calcTextWidth(mLegendLabelPaint, labels[i]), +                                + mLegend.getXEntrySpace();, +                posX = getWidth() - mLegend.getMaximumEntryLength(mLegendLabelPaint), +                        - formTextSpaceAndForm;, +                break;, +            case BELOW_CHART_CENTER:, +                , +                float fullSize = mLegend.getFullWidth(mLegendLabelPaint);, +                , +                posX = getWidth() / 2f - fullSize / 2f;, +                posY = getHeight() - mLegend.getOffsetBottom() / 2f - formSize / 2f;, +                , +                for (int i = 0; i < labels.length; i++) {, +, +                    mLegend.drawForm(mDrawCanvas, posX, posY, mLegendFormPaint, i);, +, +                    // grouped forms have null labels, +                    if (labels[i] != null) {, +, +                        // make a step to the left, +                        if (mLegend.getColors()[i] != -1), +                            posX += formTextSpaceAndForm;, +, +                        mLegend.drawLabel(mDrawCanvas, posX, posY + textDrop, mLegendLabelPaint, i);, +                        posX += Utils.calcTextWidth(mLegendLabelPaint, labels[i]), +                                + mLegend.getXEntrySpace();, +                    } else {, +                        posX += formSize + stackSpace;, +                    }, +                }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_RIGHT, +                || mLegend.getPosition() == LegendPosition.BELOW_CHART_CENTER) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +     * and x-axis labels and their position, +        float stackSpace = mLegend.getStackSpace();, +                        posX += Utils.calcTextWidth(mLegendLabelPaint, labels[i]), +                                + mLegend.getXEntrySpace();, +                        posX -= Utils.calcTextWidth(mLegendLabelPaint, labels[i]), +                                + mLegend.getXEntrySpace();, +                posX = getWidth() - mLegend.getMaximumEntryLength(mLegendLabelPaint), +                        - formTextSpaceAndForm;, +                break;, +            case BELOW_CHART_CENTER:, +                , +                float fullSize = mLegend.getFullWidth(mLegendLabelPaint);, +                , +                posX = getWidth() / 2f - fullSize / 2f;]