[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +       , +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +       , +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java, +        // set custom chart offsets (automatic offset calculation is hereby disabled), +        chart.setViewPortOffsets(10, 0, 10, 0);, +, +        chart.getAxisLeft().setEnabled(false);, +        chart.getXAxis().setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +       , +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java, +        // set custom chart offsets (automatic offset calculation is hereby disabled), +        chart.setViewPortOffsets(10, 0, 10, 0);, +, +        chart.getAxisLeft().setEnabled(false);, +        chart.getXAxis().setEnabled(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        if (!mCustomViewPortEnabled) {, +, +        }, +    /** flag that indicates if a custom viewport offset has been set */, +    private boolean mCustomViewPortEnabled = false;, +, +    /**, +     * Sets custom offsets for the current ViewPort (the offsets on the sides of, +     * the actual chart window). Setting this will prevent the chart from, +     * automatically calculating it's offsets. Use resetViewPortOffsets() to, +     * undo this., +     * , +     * @param left, +     * @param top, +     * @param right, +     * @param bottom, +     */, +    public void setViewPortOffsets(final float left, final float top,, +            final float right, final float bottom) {, +, +        mCustomViewPortEnabled = true;, +        , +        post(new Runnable() {, +            , +            @Override, +            public void run() {               , +                mViewPortHandler.restrainViewPort(left, top, right, bottom);, +            }, +        });, +    }, +, +    /**, +     * Resets all custom offsets set via setViewPortOffsets(...) method. Allows, +     * the chart to again calculate all offsets automatically., +     */, +    public void resetViewPortOffsets() {, +        mCustomViewPortEnabled = false;, +        calculateOffsets();, +    }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +       , +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivityColored.java, +        // set custom chart offsets (automatic offset calculation is hereby disabled), +        chart.setViewPortOffsets(10, 0, 10, 0);, +, +        chart.getAxisLeft().setEnabled(false);, +        chart.getXAxis().setEnabled(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        if (!mCustomViewPortEnabled) {, +, +        }, +    /** flag that indicates if a custom viewport offset has been set */, +    private boolean mCustomViewPortEnabled = false;, +, +    /**, +     * Sets custom offsets for the current ViewPort (the offsets on the sides of, +     * the actual chart window). Setting this will prevent the chart from, +     * automatically calculating it's offsets. Use resetViewPortOffsets() to, +     * undo this., +     * , +     * @param left, +     * @param top, +     * @param right, +     * @param bottom, +     */, +    public void setViewPortOffsets(final float left, final float top,, +            final float right, final float bottom) {, +, +        mCustomViewPortEnabled = true;, +        , +        post(new Runnable() {, +            , +            @Override, +            public void run() {               , +                mViewPortHandler.restrainViewPort(left, top, right, bottom);, +            }, +        });, +    }, +, +    /**]