[+++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IPieDataSet;, +public class PieDataSet extends DataSet<Entry> implements IPieDataSet {, +    @Override, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IPieDataSet;, +public class PieDataSet extends DataSet<Entry> implements IPieDataSet {, +    @Override, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/data/RadarDataSet.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IRadarDataSet;, +, +public class RadarDataSet extends LineRadarDataSet<Entry> implements IRadarDataSet {, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IPieDataSet;, +public class PieDataSet extends DataSet<Entry> implements IPieDataSet {, +    @Override, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/data/RadarDataSet.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IRadarDataSet;, +, +public class RadarDataSet extends LineRadarDataSet<Entry> implements IRadarDataSet {, +++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IBarDataSet.java, +, +, +    /**, +     * Returns the labels used for the different value-stacks in the legend., +     * This is only relevant for stacked bar entries., +     *, +     * @return, +     */, +    String[] getStackLabels();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IPieDataSet;, +public class PieDataSet extends DataSet<Entry> implements IPieDataSet {, +    @Override, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/data/RadarDataSet.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IRadarDataSet;, +, +public class RadarDataSet extends LineRadarDataSet<Entry> implements IRadarDataSet {, +++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IBarDataSet.java, +, +, +    /**, +     * Returns the labels used for the different value-stacks in the legend., +     * This is only relevant for stacked bar entries., +     *, +     * @return, +     */, +    String[] getStackLabels();, +++ b/MPChartLib/src/com/github/mikephil/charting/interfaces/datainterfaces/datasets/IPieDataSet.java, +package com.github.mikephil.charting.interfaces.datainterfaces.datasets;, +, +import com.github.mikephil.charting.data.Entry;, +, +/**, + * Created by Philipp Jahoda on 03/11/15., + */, +public interface IPieDataSet extends IDataSet<Entry> {, +, +    /**, +     * Returns the space that is set to be between the piechart-slices of this, +     * DataSet, in degrees., +     *, +     * @return, +     */, +    float getSliceSpace();, +, +    /**, +     * Returns the distance a highlighted piechart slice is "shifted" away from, +     * the chart-center in dp., +     *, +     * @return, +     */, +    float getSelectionShift();, +}, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/data/PieDataSet.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IPieDataSet;, +public class PieDataSet extends DataSet<Entry> implements IPieDataSet {, +    @Override, +    @Override, +++ b/MPChartLib/src/com/github/mikephil/charting/data/RadarDataSet.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IRadarDataSet;, +, +public class RadarDataSet extends LineRadarDataSet<Entry> implements IRadarDataSet {]