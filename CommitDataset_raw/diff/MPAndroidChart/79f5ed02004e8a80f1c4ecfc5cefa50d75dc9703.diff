[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, +        SQUARE("SQUARE"),, +        CIRCLE("CIRCLE"),, +        TRIANGLE("TRIANGLE"),, +        CROSS("CROSS"),, +        X("X"),, +        CHEVRON_UP("CHEVRON_UP"),, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, +        SQUARE("SQUARE"),, +        CIRCLE("CIRCLE"),, +        TRIANGLE("TRIANGLE"),, +        CROSS("CROSS"),, +        X("X"),, +        CHEVRON_UP("CHEVRON_UP"),, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java, +import com.github.mikephil.charting.renderer.scatter.ChevronDownShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.ChevronUpShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.CircleShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.CrossShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.TriangleShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.XShapeRenderer;, +        mShapeRenderer = getRendererForShape(shape);, +, +    public static IShapeRenderer getRendererForShape(ScatterChart.ScatterShape shape) {, +, +        switch (shape) {, +            case SQUARE: return new SquareShapeRenderer();, +            case CIRCLE: return new CircleShapeRenderer();, +            case TRIANGLE: return new TriangleShapeRenderer();, +            case CROSS: return new CrossShapeRenderer();, +            case X: return new XShapeRenderer();, +            case CHEVRON_UP: return new ChevronUpShapeRenderer();, +            case CHEVRON_DOWN: return new ChevronDownShapeRenderer();, +        }, +, +        return null;, +    }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/ScatterChart.java, +        SQUARE("SQUARE"),, +        CIRCLE("CIRCLE"),, +        TRIANGLE("TRIANGLE"),, +        CROSS("CROSS"),, +        X("X"),, +        CHEVRON_UP("CHEVRON_UP"),, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ScatterDataSet.java, +import com.github.mikephil.charting.renderer.scatter.ChevronDownShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.ChevronUpShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.CircleShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.CrossShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.TriangleShapeRenderer;, +import com.github.mikephil.charting.renderer.scatter.XShapeRenderer;, +        mShapeRenderer = getRendererForShape(shape);, +, +    public static IShapeRenderer getRendererForShape(ScatterChart.ScatterShape shape) {, +, +        switch (shape) {, +            case SQUARE: return new SquareShapeRenderer();, +            case CIRCLE: return new CircleShapeRenderer();, +            case TRIANGLE: return new TriangleShapeRenderer();, +            case CROSS: return new CrossShapeRenderer();, +            case X: return new XShapeRenderer();, +            case CHEVRON_UP: return new ChevronUpShapeRenderer();, +            case CHEVRON_DOWN: return new ChevronDownShapeRenderer();, +        }, +, +        return null;, +    }, +++ /dev/null]