[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float xsInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();, +            float xsInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float xsInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();, +            float xsInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.utils.PointD;, +                selectionDetail.xValue,, +            return getBase(x);, +//, +//            float baseNoSpace = getBase(x);, +//, +//            int setCount = mChart.getBarData().getDataSetCount();, +//            int xIndex = (int) baseNoSpace / setCount;, +//, +//            int valCount = mChart.getData().getXValCount();, +//, +//            if (xIndex < 0), +//                xIndex = 0;, +//            else if (xIndex >= valCount), +//                xIndex = valCount - 1;, +//, +//            return xIndex;, +, +        final Entry entry = dataSet.getEntryForXPos(xVal);, +        return new SelectionDetail(entry.getX(),, +                entry.getY(),, +     * This method creates the Highlight object that also indicates which yValue of a stacked BarEntry has been, +     * selected., +        // not stacked, +            return new Highlight(entry.getX(),, +        } else {, +, +                        entry.getX(),, +        }, +     * Returns the index of the closest yValue inside the values array / ranges (stacked barchart) to the yValue, +     * given as, +     * Returns the base xPx-yValue to the given xPx-touch value in pixels., +        // take any transformer to determine the x-axis value, +        PointD val = mChart.getTransformer(YAxis.AxisDependency.LEFT).getValuesByTouchPoint(x, 0f);, +        return (float) val.x;, +//, +//, +//, +//        // calculate how often the group-space appears, +//        int steps = (int) ((float) xVal / ((float) setCount + mChart.getBarData().getGroupSpace()));, +//, +//        float groupSpaceSum = mChart.getBarData().getGroupSpace() * (float) steps;, +//, +//        float baseNoSpace = (float) xVal - groupSpaceSum;, +//        return baseNoSpace;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float xsInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();, +            float xsInView = getXAxis().mAxisRange / mViewPortHandler.getScaleX();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.utils.PointD;, +                selectionDetail.xValue,, +            return getBase(x);, +//, +//            float baseNoSpace = getBase(x);, +//, +//            int setCount = mChart.getBarData().getDataSetCount();, +//            int xIndex = (int) baseNoSpace / setCount;, +//, +//            int valCount = mChart.getData().getXValCount();, +//, +//            if (xIndex < 0), +//                xIndex = 0;, +//            else if (xIndex >= valCount), +//                xIndex = valCount - 1;, +//, +//            return xIndex;, +, +        final Entry entry = dataSet.getEntryForXPos(xVal);, +        return new SelectionDetail(entry.getX(),, +                entry.getY(),, +     * This method creates the Highlight object that also indicates which yValue of a stacked BarEntry has been, +     * selected., +        // not stacked, +            return new Highlight(entry.getX(),, +        } else {, +, +                        entry.getX(),, +        }, +     * Returns the index of the closest yValue inside the values array / ranges (stacked barchart) to the yValue, +     * given as, +     * Returns the base xPx-yValue to the given xPx-touch value in pixels., +        // take any transformer to determine the x-axis value, +        PointD val = mChart.getTransformer(YAxis.AxisDependency.LEFT).getValuesByTouchPoint(x, 0f);, +        return (float) val.x;, +//, +//, +//, +//        // calculate how often the group-space appears, +//        int steps = (int) ((float) xVal / ((float) setCount + mChart.getBarData().getGroupSpace()));, +//, +//        float groupSpaceSum = mChart.getBarData().getGroupSpace() * (float) steps;]