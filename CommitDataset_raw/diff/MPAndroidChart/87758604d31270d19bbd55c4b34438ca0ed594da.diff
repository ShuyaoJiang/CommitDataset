[+++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="200", +        android:max="500", +++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="200", +        android:max="500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        LimitLine ll1 = new LimitLine(130f, "Upper Limit");, +        leftAxis.setAxisMaxValue(220f);, +++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="200", +        android:max="500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        LimitLine ll1 = new LimitLine(130f, "Upper Limit");, +        leftAxis.setAxisMaxValue(220f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, +        set.setCircleColor(Color.WHITE);, +++ b/MPChartExample/res/layout/activity_linechart.xml, +        android:max="200", +        android:max="500", +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        LimitLine ll1 = new LimitLine(130f, "Upper Limit");, +        leftAxis.setAxisMaxValue(220f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealtimeLineChartActivity.java, +        set.setCircleColor(Color.WHITE);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, +        Path filled = generateFilledPath(dataSet, bounds);, +    protected Path mGenerateFilledPathBuffer = new Path();, +     * Generates the path that is used for filled drawing., +     * @param dataSet, +    private Path generateFilledPath(ILineDataSet dataSet, XBounds bounds) {, +        float fillMin = dataSet.getFillFormatter().getFillLinePosition(dataSet, mChart);, +        float phaseY = mAnimator.getPhaseY();, +        Path filled = mGenerateFilledPathBuffer;, +        Entry entry = dataSet.getEntryForIndex(bounds.min);, +        for (int x = bounds.min + 1; x <= bounds.range + bounds.min; x++) {, +            Entry e = dataSet.getEntryForIndex(x);, +            if (isDrawSteppedEnabled) {, +                final Entry ePrev = dataSet.getEntryForIndex(x - 1);, +                if (ePrev == null) continue;, +, +                filled.lineTo(e.getX(), ePrev.getY() * phaseY);, +            filled.lineTo(e.getX(), e.getY() * phaseY);, +        filled.lineTo(dataSet.getEntryForIndex(bounds.range + bounds.min).getX(), fillMin);, +        return filled;]