[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +    /**, +     * flag that indicates if logging is enabled or not, +     */, +    /**, +     * If set to true, chart continues to scroll after touch up, +     */, +    /**, +     * default value-formatter, number of digits depends on provided chart-data, +     */, +    /**, +     * description text that appears in the bottom right corner of the chart, +     */, +    /**, +     * flag that indicates if the chart has been fed with data yet, +     */, +    /**, +     * if true, units are drawn next to the values in the chart, +     */, +    /**, +     * the number of x-values the chart displays, +     */, +    /**, +     * if true, touch gestures are enabled on the chart, +     */, +    /**, +     * the legend object containing all data associated with the legend, +     */, +    /**, +     * listener that is called when a value on the chart is selected, +     */, +    /**, +     * text that is displayed when the chart is empty, +     */, +    /**, +     * object responsible for rendering the data, +     */, +    /**, +     * object that manages the bounds and drawing constraints of the chart, +     */, +    /**, +     * object responsible for animations, +     */, +    /**, +     * Extra offsets to be appended to the viewport, +     */, +    /**, +     * default constructor for initialization in code, +     */, +    /**, +     * constructor for initialization in xml, +     */, +    /**, +     * even more awesome constructor, +     */, +    /**, +     * flag that indicates if offsets calculation has already been done or not, +     */, +    /**, +     * paint object used for drawing the bitmap, +     */, +    /**, +     * the custom position of the description text, +     */, +     * Highlights the values represented by the provided Highlight object, +     *, +     * @param highlight contains information about which entry should be highlighted, +     */, +    public void highlightValue(Highlight highlight) {, +        if (highlight == null), +            highlightValues(null);, +        else, +            highlightValues(new Highlight[]{highlight});, +    }, +, +    /**, +            } else {, +    /**, +     * if set to true, the marker view is drawn when a value is clicked, +     */, +    /**, +     * the view that represents the marker, +     */, +    /**, +     * paint for the grid background (only line and barchart), +     */, +    /**, +     * paint for the description text in the bottom right corner, +     */, +    /**, +     * paint for the hole in the middle of the pie chart, +     */, +    /**, +     * paint for the text in the middle of the pie chart, +     */, +    /**, +     * paint used for the legend, +     */, +    /**, +     * tasks to be done after the view is setup]