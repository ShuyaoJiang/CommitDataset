[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +    protected DefaultValueFormatter mDefaultValueFormatter = new DefaultValueFormatter(0);, +            if (set.needsFormatter() || set.getValueFormatter() == mDefaultValueFormatter), +                set.setValueFormatter(mDefaultValueFormatter);, +        mDefaultValueFormatter.setup(digits);, +        return mDefaultValueFormatter;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +    protected DefaultValueFormatter mDefaultValueFormatter = new DefaultValueFormatter(0);, +            if (set.needsFormatter() || set.getValueFormatter() == mDefaultValueFormatter), +                set.setValueFormatter(mDefaultValueFormatter);, +        mDefaultValueFormatter.setup(digits);, +        return mDefaultValueFormatter;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, +            return Utils.getDefaultValueFormatter();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +    protected DefaultValueFormatter mDefaultValueFormatter = new DefaultValueFormatter(0);, +            if (set.needsFormatter() || set.getValueFormatter() == mDefaultValueFormatter), +                set.setValueFormatter(mDefaultValueFormatter);, +        mDefaultValueFormatter.setup(digits);, +        return mDefaultValueFormatter;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java, +            return Utils.getDefaultValueFormatter();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Utils.java, +import com.github.mikephil.charting.formatter.DefaultValueFormatter;, +import com.github.mikephil.charting.formatter.IValueFormatter;, +, +    private static IValueFormatter mDefaultValueFormatter = generateDefaultValueFormatter();, +, +    private static IValueFormatter generateDefaultValueFormatter() {, +        final DefaultValueFormatter formatter = new DefaultValueFormatter(1);, +        return formatter;, +    }, +, +    /// - returns: The default value formatter used for all chart components that needs a default, +    public static IValueFormatter getDefaultValueFormatter(), +    {, +        return mDefaultValueFormatter;, +    }, +]