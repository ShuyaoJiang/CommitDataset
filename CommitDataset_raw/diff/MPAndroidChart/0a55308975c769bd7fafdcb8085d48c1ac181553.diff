[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java, +    protected float mLeftAxisMax = Float.MIN_VALUE;, +    protected float mLeftAxisMin = Float.MAX_VALUE;, +    protected float mRightAxisMax = Float.MIN_VALUE;, +    protected float mRightAxisMin = Float.MAX_VALUE;, +     * total number of values (entries) across all DataSet objects, +    private int mValueCount = 0;, +        mDataSets = arrayToList(dataSets);, +     * Created because Arrays.asList(...) does not support modification., +     *, +     * @param array, +     * @return, +     */, +    private List<T> arrayToList(T[] array) {, +, +        List<T> list = new ArrayList<>();, +, +        for (T set : array) {, +            list.add(set);, +        }, +, +        return list;, +    }, +, +    /**, +                T set = mDataSets.get(i);, +                calcMinMax(set);, +        mValueCount = 0;, +        mValueCount = count;, +        if (axis == AxisDependency.LEFT) {, +, +            if (mLeftAxisMin == Float.MAX_VALUE) {, +            } else, +                return mLeftAxisMin;, +        } else {, +            if (mRightAxisMin == Float.MAX_VALUE) {, +                return mLeftAxisMin;, +            } else, +                return mRightAxisMin;, +        }, +        if (axis == AxisDependency.LEFT) {, +, +            if (mLeftAxisMax == Float.MIN_VALUE) {, +            } else, +                return mLeftAxisMax;, +        } else {, +            if (mRightAxisMax == Float.MIN_VALUE) {, +                return mLeftAxisMax;, +            } else, +                return mRightAxisMax;, +        }, +        return mValueCount;, +        mValueCount += d.getEntryCount();, +        calcMinMax(d);, +            mValueCount -= d.getEntryCount();, +            calcMinMax(e, set.getAxisDependency());, +            mValueCount += 1;, +            Log.e("addEntry", "Cannot add Entry because dataSetIndex too high or too low.");, +    }, +    protected void calcMinMax(Entry e, AxisDependency axis) {, +        if (mYMax < e.getY()), +            mYMax = e.getY();, +        if (mYMin > e.getY()), +            mYMin = e.getY();, +, +        if (mXMax < e.getX()), +            mXMax = e.getX();, +        if (mXMin > e.getX()), +            mXMin = e.getX();, +, +        if (axis == AxisDependency.LEFT) {, +    protected void calcMinMax(T d) {, +        if (mYMax < d.getYMax()), +            mYMax = d.getYMax();, +        if (mYMin > d.getYMin()), +            mYMin = d.getYMin();, +        if (mXMax < d.getXMax()), +            mXMax = d.getXMax();, +        if (mXMin > d.getXMin()), +            mXMin = d.getXMin();, +, +        if (d.getAxisDependency() == AxisDependency.LEFT) {, +, +            if (mLeftAxisMax < d.getYMax()), +                mLeftAxisMax = d.getYMax();, +            if (mLeftAxisMin > d.getYMin()), +                mLeftAxisMin = d.getYMin();, +            if (mRightAxisMax < d.getYMax()), +                mRightAxisMax = d.getYMax();, +            if (mRightAxisMin > d.getYMin()), +                mRightAxisMin = d.getYMin();, +                mValueCount -= 1;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/ChartData.java, +    protected float mLeftAxisMax = Float.MIN_VALUE;, +    protected float mLeftAxisMin = Float.MAX_VALUE;, +    protected float mRightAxisMax = Float.MIN_VALUE;, +    protected float mRightAxisMin = Float.MAX_VALUE;, +     * total number of values (entries) across all DataSet objects, +    private int mValueCount = 0;, +        mDataSets = arrayToList(dataSets);]