[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronDownShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronDownShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronUpShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronDownShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronUpShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/CircleShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +            if (!viewPortHandler.isInBoundsRight(buffer.buffer[i])), +            if (!viewPortHandler.isInBoundsLeft(buffer.buffer[i]), +                    || !viewPortHandler.isInBoundsY(buffer.buffer[i + 1])), +            renderPaint.setColor(dataSet.getColor(i / 2));, +                renderPaint.setStyle(Paint.Style.STROKE);, +                renderPaint.setStrokeWidth(shapeStrokeSize);, +                        renderPaint);, +                    renderPaint.setStyle(Paint.Style.FILL);, +                    renderPaint.setColor(shapeHoleColor);, +                            renderPaint);, +                renderPaint.setStyle(Paint.Style.FILL);, +                        renderPaint);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronDownShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronUpShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/CircleShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +            if (!viewPortHandler.isInBoundsRight(buffer.buffer[i])), +            if (!viewPortHandler.isInBoundsLeft(buffer.buffer[i]), +                    || !viewPortHandler.isInBoundsY(buffer.buffer[i + 1])), +            renderPaint.setColor(dataSet.getColor(i / 2));, +                renderPaint.setStyle(Paint.Style.STROKE);, +                renderPaint.setStrokeWidth(shapeStrokeSize);, +                        renderPaint);, +                    renderPaint.setStyle(Paint.Style.FILL);, +                    renderPaint.setColor(shapeHoleColor);, +                            renderPaint);, +                renderPaint.setStyle(Paint.Style.FILL);, +                        renderPaint);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/CrossShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +        renderPaint.setStyle(Paint.Style.STROKE);, +        renderPaint.setStrokeWidth(Utils.convertDpToPixel(1f));, +            if (!viewPortHandler.isInBoundsRight(buffer.buffer[i])), +            if (!viewPortHandler.isInBoundsLeft(buffer.buffer[i]), +                    || !viewPortHandler.isInBoundsY(buffer.buffer[i + 1])), +            renderPaint.setColor(dataSet.getColor(i / 2));, +                    renderPaint);, +                    renderPaint);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronDownShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ChevronUpShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/CircleShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +            if (!viewPortHandler.isInBoundsRight(buffer.buffer[i])), +            if (!viewPortHandler.isInBoundsLeft(buffer.buffer[i]), +                    || !viewPortHandler.isInBoundsY(buffer.buffer[i + 1])), +            renderPaint.setColor(dataSet.getColor(i / 2));, +                renderPaint.setStyle(Paint.Style.STROKE);, +                renderPaint.setStrokeWidth(shapeStrokeSize);, +                        renderPaint);, +                    renderPaint.setStyle(Paint.Style.FILL);, +                    renderPaint.setColor(shapeHoleColor);, +                            renderPaint);, +                renderPaint.setStyle(Paint.Style.FILL);, +                        renderPaint);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/CrossShapeRenderer.java, +    public void renderShape(Canvas c, IScatterDataSet dataSet, ViewPortHandler viewPortHandler, ScatterBuffer buffer, Paint, +            renderPaint, final float shapeSize) {, +        renderPaint.setStyle(Paint.Style.STROKE);, +        renderPaint.setStrokeWidth(Utils.convertDpToPixel(1f));, +            if (!viewPortHandler.isInBoundsRight(buffer.buffer[i])), +            if (!viewPortHandler.isInBoundsLeft(buffer.buffer[i]), +                    || !viewPortHandler.isInBoundsY(buffer.buffer[i + 1])), +            renderPaint.setColor(dataSet.getColor(i / 2));, +                    renderPaint);, +                    renderPaint);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/scatter/ShapeRenderer.java, +     * @param c               Canvas object for drawing the shape, +     * @param dataSet         the DataSet to be drawn, +     * @param viewPortHandler contains information about the current state of the view, +     * @param buffer          buffer containing the transformed values of all entries in the DataSet, +     * @param renderPaint     Paint object used for styling and drawing]