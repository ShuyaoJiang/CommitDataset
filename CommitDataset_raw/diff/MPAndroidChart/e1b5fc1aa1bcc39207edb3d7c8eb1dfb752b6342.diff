[+++ b/MPChartLib/build.gradle, +        minSdkVersion 8, +++ b/MPChartLib/build.gradle, +        minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, +        implements AnimatorUpdateListener, ChartInterface {, +, +++ b/MPChartLib/build.gradle, +        minSdkVersion 8, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.nineoldandroids.animation.ObjectAnimator;, +import com.nineoldandroids.animation.ValueAnimator;, +import com.nineoldandroids.animation.ValueAnimator.AnimatorUpdateListener;, +        implements AnimatorUpdateListener, ChartInterface {, +, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java, +package com.github.mikephil.charting.charts;, +, +import android.content.Context;, +import android.graphics.Paint;, +import android.graphics.Rect;, +import android.util.AttributeSet;, +, +import com.github.mikephil.charting.renderer.ColumnToBarTransformer;, +import com.github.mikephil.charting.utils.YLabels;, +, +public class HorizontalBarChart extends ColumnChart, +{, +	public HorizontalBarChart(Context context), +	{, +		super(context);, +	}, +, +	public HorizontalBarChart(Context context, AttributeSet attrs), +	{, +		super(context, attrs);, +	}, +, +	public HorizontalBarChart(Context context, AttributeSet attrs,, +							  int defStyle), +	{, +		super(context, attrs, defStyle);, +	}, +, +	@Override, +	protected void init(), +	{, +		super.init();, +		setDrawXLabels(false);, +		setDrawYLabels(true);, +		mTrans = new ColumnToBarTransformer();, +		mValuePaint.setTextAlign(Paint.Align.LEFT);, +	}, +, +	/**, +	 * Prepares a bar for drawing on the specified x-index and y-position. Also, +	 * prepares the shadow-bar if enabled., +	 *, +	 * @param x the x-position, +	 * @param y the y-position, +	 * @param barspace the space between bars, +	 */, +	@Override, +	protected void prepareBar(float x, float y, float barspace) {, +, +		super.prepareBar(x, y, barspace);, +		float spaceHalf = barspace / 2f;, +, +		float top = x + spaceHalf;, +		float bottom = x + 1f - spaceHalf;, +, +		mBarRect.set(0, top, y, bottom);, +, +		mTrans.rectValueToPixel(mBarRect, mPhaseY);, +, +		// if a shadow is drawn, prepare it too, +		if (mDrawBarShadow) {, +			mBarShadow.set(mBarRect.left, mOffsetTop, mBarRect.right, getHeight() - mOffsetBottom);, +		}, +	}, +, +	@Override, +	protected void drawXLabels(float yPos), +	{, +		if (!mDrawXLabels) return;, +, +		mXLabelPaint.setTextAlign(Paint.Align.RIGHT);, +		// pre allocate to save performance (dont allocate in loop), +		float[] position = new float[] {, +				0f, 0f, +		};, +, +		int step = mData.getDataSetCount();, +, +		for (int i = 0; i < mData.getXValCount(); i += mXLabels.mXAxisLabelModulus) {, +, +			position[1] = i * step + i * mData.getGroupSpace()]