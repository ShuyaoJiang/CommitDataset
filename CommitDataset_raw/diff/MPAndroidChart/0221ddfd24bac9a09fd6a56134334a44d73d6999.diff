[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +            yVals.add(new Entry(i, val));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +            yVals.add(new Entry(i, val));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +//	/**, +//	 * Returns the lowest x-index (value on the x-axis) that is still visible on the chart., +//	 *, +//	 * @return, +//	 */, +//	@Override, +//	public float getLowestVisibleX() {, +//, +//		float step = mData.getDataSetCount();, +//		float div = (step <= 1) ? 1 : step + mData.getGroupSpace();, +//, +//		float[] pts = new float[] { mViewPortHandler.contentLeft(), mViewPortHandler.contentBottom() };, +//, +//		getTransformer(AxisDependency.LEFT).pixelsToValue(pts);, +//		return ((pts[0] <= getXChartMin()) ? 0 : (pts[0] / div) + 1);, +//	}, +//, +//	/**, +//	 * Returns the highest x-index (value on the x-axis) that is still visible on the chart., +//	 *, +//	 * @return, +//	 */, +//	@Override, +//	public float getHighestVisibleX() {, +//, +//		float step = mData.getDataSetCount();, +//		float div = (step <= 1) ? 1 : step + mData.getGroupSpace();, +//, +//		float[] pts = new float[] { mViewPortHandler.contentRight(), mViewPortHandler.contentBottom() };, +//, +//		getTransformer(AxisDependency.LEFT).pixelsToValue(pts);, +//		return ((pts[0] >= getXChartMax()) ? getXChartMax() / div : (pts[0] / div));, +//	}, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +            yVals.add(new Entry(i, val));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +//	/**, +//	 * Returns the lowest x-index (value on the x-axis) that is still visible on the chart., +//	 *, +//	 * @return, +//	 */, +//	@Override, +//	public float getLowestVisibleX() {, +//, +//		float step = mData.getDataSetCount();, +//		float div = (step <= 1) ? 1 : step + mData.getGroupSpace();, +//, +//		float[] pts = new float[] { mViewPortHandler.contentLeft(), mViewPortHandler.contentBottom() };, +//, +//		getTransformer(AxisDependency.LEFT).pixelsToValue(pts);, +//		return ((pts[0] <= getXChartMin()) ? 0 : (pts[0] / div) + 1);, +//	}, +//, +//	/**, +//	 * Returns the highest x-index (value on the x-axis) that is still visible on the chart., +//	 *, +//	 * @return, +//	 */, +//	@Override, +//	public float getHighestVisibleX() {, +//, +//		float step = mData.getDataSetCount();, +//		float div = (step <= 1) ? 1 : step + mData.getGroupSpace();, +//, +//		float[] pts = new float[] { mViewPortHandler.contentRight(), mViewPortHandler.contentBottom() };, +//, +//		getTransformer(AxisDependency.LEFT).pixelsToValue(pts);, +//		return ((pts[0] >= getXChartMax()) ? getXChartMax() / div : (pts[0] / div));, +//	}, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +public abstract class BarLineChartBase<T extends BarLineScatterCandleBubbleData<? extends, +        IBarLineScatterCandleBubbleDataSet<? extends Entry>>>, +    public void zoomAndCenterAnimated(float scaleX, float scaleY, float xValue, float yValue, AxisDependency axis,, +                                      long duration) {, +            Runnable job = new AnimatedZoomJob(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis, +                    .getValues().size(), scaleX, scaleY, mViewPortHandler.getScaleX(), mViewPortHandler.getScaleY(),, +                    xValue, yValue, (float) origin.x, (float) origin.y, duration);, +        PointD pos = getTransformer(AxisDependency.LEFT).getValuesByTouchPoint(mViewPortHandler.contentLeft(),, +                mViewPortHandler.contentBottom());, +        return (float) Math.min(mXAxis.mAxisMinimum, pos.x);, +        PointD pos = getTransformer(AxisDependency.LEFT).getValuesByTouchPoint(mViewPortHandler.contentRight(),, +                mViewPortHandler.contentBottom());, +        return (float) Math.min(mXAxis.mAxisMaximum, pos.x);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +            yVals.add(new Entry(i, val));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +//	/**, +//	 * Returns the lowest x-index (value on the x-axis) that is still visible on the chart., +//	 *, +//	 * @return, +//	 */, +//	@Override, +//	public float getLowestVisibleX() {, +//, +//		float step = mData.getDataSetCount();]