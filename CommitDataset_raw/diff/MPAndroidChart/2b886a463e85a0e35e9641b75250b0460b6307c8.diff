[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.data.Entry;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.data.Entry;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +//    @Override, +//    protected float[] getMarkerPosition(Highlight high) {, +//        return new float[] { high.getXPx(), high.getYPx() };, +//, +//        int dataSetIndex = highlight.getDataSetIndex();, +//        float xPos = e.getX();, +//        float yPos = e.getY() * mAnimator.getPhaseY();, +//, +//        // position of the marker depends on selected value index and value, +//        float[] pts = new float[]{, +//                xPos, yPos, +//        };, +//, +//        getTransformer(mData.getDataSetByIndex(dataSetIndex).getAxisDependency()), +//                .pointValuesToPixel(pts);, +//, +//        return pts;, +//    }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.data.Entry;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +//    @Override, +//    protected float[] getMarkerPosition(Highlight high) {, +//        return new float[] { high.getXPx(), high.getYPx() };, +//, +//        int dataSetIndex = highlight.getDataSetIndex();, +//        float xPos = e.getX();, +//        float yPos = e.getY() * mAnimator.getPhaseY();, +//, +//        // position of the marker depends on selected value index and value, +//        float[] pts = new float[]{, +//                xPos, yPos, +//        };, +//, +//        getTransformer(mData.getDataSetByIndex(dataSetIndex).getAxisDependency()), +//                .pointValuesToPixel(pts);, +//, +//        return pts;, +//    }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +     * Returns the Highlight object (contains x-index and DataSet index) of the, +     * selected value at the given touch point inside the Line-, Scatter-, or, +     * CandleStick-Chart., +     *, +     * @param x, +     * @param y, +     * @return, +     */, +    public Highlight getHighlightByTouchPoint(float x, float y) {, +, +        if (mData == null) {, +            Log.e(LOG_TAG, "Can't select by touch. No data set.");, +            return null;, +        } else, +            return getHighlighter().getHighlight(x, y);, +    }, +, +    /**, +            float[] pos = getMarkerPosition(highlight);, +     * Highlight object., +     * @param high, +    protected float[] getMarkerPosition(Highlight high) {, +        return new float[]{high.getXPx(), high.getYPx()};, +    }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.data.Entry;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +//    @Override, +//    protected float[] getMarkerPosition(Highlight high) {, +//        return new float[] { high.getXPx(), high.getYPx() };, +//, +//        int dataSetIndex = highlight.getDataSetIndex();, +//        float xPos = e.getX();, +//        float yPos = e.getY() * mAnimator.getPhaseY();, +//, +//        // position of the marker depends on selected value index and value, +//        float[] pts = new float[]{, +//                xPos, yPos, +//        };, +//, +//        getTransformer(mData.getDataSetByIndex(dataSetIndex).getAxisDependency()), +//                .pointValuesToPixel(pts);, +//, +//        return pts;, +//    }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +     * Returns the Highlight object (contains x-index and DataSet index) of the, +     * selected value at the given touch point inside the Line-, Scatter-, or, +     * CandleStick-Chart., +     *, +     * @param x, +     * @param y, +     * @return, +     */, +    public Highlight getHighlightByTouchPoint(float x, float y) {]