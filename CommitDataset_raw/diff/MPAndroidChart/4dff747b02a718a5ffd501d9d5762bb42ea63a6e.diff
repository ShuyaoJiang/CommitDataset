[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +        x.setEnabled(false);, +        y.setEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +        x.setEnabled(false);, +        y.setEnabled(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +//        // if data filtering is enabled, +//        if (mFilterData) {, +//            mData = getFilteredData();, +//, +//            Log.i(LOG_TAG, "FilterTime: " + (System.currentTimeMillis() -, +//                    starttime) + " ms");, +//            starttime = System.currentTimeMillis();, +//        } else {, +//            mData = getData();, +//            // Log.i(LOG_TAG, "Filtering disabled.");, +//        }, +        if (mAxisLeft.isEnabled()), +        if (mAxisRight.isEnabled()), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +        x.setEnabled(false);, +        y.setEnabled(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +//        // if data filtering is enabled, +//        if (mFilterData) {, +//            mData = getFilteredData();, +//, +//            Log.i(LOG_TAG, "FilterTime: " + (System.currentTimeMillis() -, +//                    starttime) + " ms");, +//            starttime = System.currentTimeMillis();, +//        } else {, +//            mData = getData();, +//            // Log.i(LOG_TAG, "Filtering disabled.");, +//        }, +        if (mAxisLeft.isEnabled()), +        if (mAxisRight.isEnabled()), +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +     * Returns the array of currently highlighted values. This might be null or, +     * empty if nothing is highlighted., +     * , +     * @return, +     */, +    public Highlight[] getHighlighted() {, +        return mIndicesToHightlight;, +    }, +, +    /**, +, +    /**, +     * Setting this to true will set the layer-type HARDWARE for the view, false, +     * will set layer-type SOFTWARE., +     * , +     * @param enabled, +     */, +    public void setHardwareAccelerationEnabled(boolean enabled) {, +        if (enabled), +            setLayerType(View.LAYER_TYPE_HARDWARE, null);, +        else, +            setLayerType(View.LAYER_TYPE_SOFTWARE, null);, +    }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CubicLineChartActivity.java, +        x.setEnabled(false);, +        y.setEnabled(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +//        // if data filtering is enabled, +//        if (mFilterData) {, +//            mData = getFilteredData();, +//, +//            Log.i(LOG_TAG, "FilterTime: " + (System.currentTimeMillis() -, +//                    starttime) + " ms");, +//            starttime = System.currentTimeMillis();, +//        } else {, +//            mData = getData();, +//            // Log.i(LOG_TAG, "Filtering disabled.");, +//        }, +        if (mAxisLeft.isEnabled()), +        if (mAxisRight.isEnabled()), +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +     * Returns the array of currently highlighted values. This might be null or, +     * empty if nothing is highlighted., +     * , +     * @return, +     */, +    public Highlight[] getHighlighted() {, +        return mIndicesToHightlight;, +    }, +, +    /**, +, +    /**, +     * Setting this to true will set the layer-type HARDWARE for the view, false, +     * will set layer-type SOFTWARE., +     * , +     * @param enabled, +     */, +    public void setHardwareAccelerationEnabled(boolean enabled) {, +        if (enabled), +            setLayerType(View.LAYER_TYPE_HARDWARE, null);, +        else]