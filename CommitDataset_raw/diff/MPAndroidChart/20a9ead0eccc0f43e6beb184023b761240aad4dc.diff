[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java, +        mChart.setDragScaleEnabled(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java, +        mChart.setDragScaleEnabled(true);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.data.DataSet;, +, +        // int maxEntry = 0;, +        //, +        // for(int i = 0; i < mOriginalData.getDataSetCount(); i++) {, +        //, +        // DataSet set = mOriginalData.getDataSetByIndex(i);, +        //, +        // if(maxEntry < set.getEntryCount()), +        // maxEntry = set.getEntryCount();, +        // }, +        //, +        // float groupSpace = 0.5f;, +        // mDeltaX += maxEntry * groupSpace;, +            if (index < mCurrentData.getYValCount() && index >= 0, +                    && index < (mDeltaX * mPhaseX) / mOriginalData.getDataSetCount()) {, +                // calculate the correct x-position, +                float y = e.getVal();, +                prepareBar(x, y, ds.getBarSpace());, +                    arrow.moveTo(x + 0.5f, y + offsetY * 0.3f);, +                    arrow.lineTo(x + 0.2f, y + offsetY);, +                    arrow.lineTo(x + 0.8f, y + offsetY);, +     * @param barspace the space between bars, +    private void prepareBar(float x, float y, float barspace) {, +        float spaceHalf = barspace / 2f;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/InvertedLineChartActivity.java, +        mChart.setDragScaleEnabled(true);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.data.DataSet;, +, +        // int maxEntry = 0;, +        //, +        // for(int i = 0; i < mOriginalData.getDataSetCount(); i++) {, +        //, +        // DataSet set = mOriginalData.getDataSetByIndex(i);, +        //, +        // if(maxEntry < set.getEntryCount()), +        // maxEntry = set.getEntryCount();, +        // }, +        //, +        // float groupSpace = 0.5f;, +        // mDeltaX += maxEntry * groupSpace;, +            if (index < mCurrentData.getYValCount() && index >= 0, +                    && index < (mDeltaX * mPhaseX) / mOriginalData.getDataSetCount()) {, +                // calculate the correct x-position, +                float y = e.getVal();, +                prepareBar(x, y, ds.getBarSpace());, +                    arrow.moveTo(x + 0.5f, y + offsetY * 0.3f);, +                    arrow.lineTo(x + 0.2f, y + offsetY);, +                    arrow.lineTo(x + 0.8f, y + offsetY);, +     * @param barspace the space between bars, +    private void prepareBar(float x, float y, float barspace) {, +        float spaceHalf = barspace / 2f;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        int step = 1;, +        if (this instanceof BarChart), +            step = mCurrentData.getDataSetCount();, +        // take into consideration that multiple DataSets increase mDeltaX, +        int step = 1;, +        if (this instanceof BarChart), +            step = mCurrentData.getDataSetCount();, +//        Toast.makeText(getContext(), "xindex: " + xIndex + ", dataSetIndex: " + dataSetIndex,, +//                Toast.LENGTH_SHORT).show();]