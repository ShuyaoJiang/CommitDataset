[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, +    private boolean mDrawBarShadow = true;, +    private RectF mBarShadow = new RectF();, +    private RectF mBarRect = new RectF();, +    private void prepareBar(float x, float y, float barspace) {, +            if (mDrawValueAboveBar) {, +                posOffset = -Utils.convertDpToPixel(5);, +                negOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, +            } else {, +                posOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, +                negOffset = -Utils.convertDpToPixel(5);, +            }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, +    private boolean mDrawBarShadow = true;, +    private RectF mBarShadow = new RectF();, +    private RectF mBarRect = new RectF();, +    private void prepareBar(float x, float y, float barspace) {, +            if (mDrawValueAboveBar) {, +                posOffset = -Utils.convertDpToPixel(5);, +                negOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, +            } else {, +                posOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, +                negOffset = -Utils.convertDpToPixel(5);, +            }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    private void prepareYLabels() {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, +    private boolean mDrawBarShadow = true;, +    private RectF mBarShadow = new RectF();, +    private RectF mBarRect = new RectF();, +    private void prepareBar(float x, float y, float barspace) {, +            if (mDrawValueAboveBar) {, +                posOffset = -Utils.convertDpToPixel(5);, +                negOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, +            } else {, +                posOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, +                negOffset = -Utils.convertDpToPixel(5);, +            }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    private void prepareYLabels() {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends View, +     * sets the size of the description text in pixels, min 6f, max 16f, +        if (size > 16f), +            size = 16f;, +        if (size < 6f), +            size = 6f;, +        mDescPaint.setTextSize(Utils.convertDpToPixel(size));, +        super.onLayout(changed, left, top, right, bottom);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, +    private boolean mDrawBarShadow = true;, +    private RectF mBarShadow = new RectF();, +    private RectF mBarRect = new RectF();, +    private void prepareBar(float x, float y, float barspace) {, +            if (mDrawValueAboveBar) {, +                posOffset = -Utils.convertDpToPixel(5);, +                negOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, +            } else {, +                posOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, +                negOffset = -Utils.convertDpToPixel(5);, +            }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    private void prepareYLabels() {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends View, +     * sets the size of the description text in pixels, min 6f, max 16f, +        if (size > 16f), +            size = 16f;, +        if (size < 6f), +            size = 6f;, +        mDescPaint.setTextSize(Utils.convertDpToPixel(size));, +        super.onLayout(changed, left, top, right, bottom);, +++ /dev/null, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, +    private boolean mDrawBarShadow = true;, +    private RectF mBarShadow = new RectF();, +    private RectF mBarRect = new RectF();, +    private void prepareBar(float x, float y, float barspace) {, +            if (mDrawValueAboveBar) {, +                posOffset = -Utils.convertDpToPixel(5);, +                negOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, +            } else {, +                posOffset = Utils.calcTextHeight(mValuePaint, "8") * 1.5f;, +                negOffset = -Utils.convertDpToPixel(5);, +            }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    private void prepareYLabels() {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends View, +     * sets the size of the description text in pixels, min 6f, max 16f, +        if (size > 16f), +            size = 16f;, +        if (size < 6f), +            size = 6f;, +        mDescPaint.setTextSize(Utils.convertDpToPixel(size));]