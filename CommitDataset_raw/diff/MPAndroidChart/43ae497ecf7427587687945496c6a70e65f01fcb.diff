[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, +        Bitmap drawBitmap = mDrawBitmap == null ? null : mDrawBitmap.get();, +, +        if (drawBitmap == null, +                || (drawBitmap.getWidth() != width), +                || (drawBitmap.getHeight() != height)) {, +                drawBitmap = Bitmap.createBitmap(width, height, mBitmapConfig);, +                mDrawBitmap = new WeakReference<>(drawBitmap);, +                mBitmapCanvas = new Canvas(drawBitmap);, +        drawBitmap.eraseColor(Color.TRANSPARENT);, +        c.drawBitmap(drawBitmap, 0, 0, mRenderPaint);, +            Bitmap drawBitmap = mDrawBitmap.get();, +            if (drawBitmap != null) {, +                drawBitmap.recycle();, +            }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LineChartRenderer.java, +        Bitmap drawBitmap = mDrawBitmap == null ? null : mDrawBitmap.get();, +, +        if (drawBitmap == null, +                || (drawBitmap.getWidth() != width), +                || (drawBitmap.getHeight() != height)) {, +                drawBitmap = Bitmap.createBitmap(width, height, mBitmapConfig);, +                mDrawBitmap = new WeakReference<>(drawBitmap);, +                mBitmapCanvas = new Canvas(drawBitmap);, +        drawBitmap.eraseColor(Color.TRANSPARENT);, +        c.drawBitmap(drawBitmap, 0, 0, mRenderPaint);, +            Bitmap drawBitmap = mDrawBitmap.get();, +            if (drawBitmap != null) {, +                drawBitmap.recycle();, +            }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/PieChartRenderer.java, +        Bitmap drawBitmap = mDrawBitmap == null ? null : mDrawBitmap.get();, +, +        if (drawBitmap == null, +                || (drawBitmap.getWidth() != width), +                || (drawBitmap.getHeight() != height)) {, +                drawBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_4444);, +                mDrawBitmap = new WeakReference<>(drawBitmap);, +                mBitmapCanvas = new Canvas(drawBitmap);, +        drawBitmap.eraseColor(Color.TRANSPARENT);, +            Bitmap drawBitmap = mDrawBitmap.get();, +            if (drawBitmap != null) {, +                drawBitmap.recycle();, +            }]