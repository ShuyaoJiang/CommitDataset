[+++ b/MPChartExample/AndroidManifest.xml, +    android:versionCode="27", +    android:versionName="1.7.0" >, +++ b/MPChartExample/AndroidManifest.xml, +    android:versionCode="27", +    android:versionName="1.7.0" >, +++ b/MPChartExample/build.gradle, +        versionCode 27, +        versionName '1.7.0', +++ b/MPChartExample/AndroidManifest.xml, +    android:versionCode="27", +    android:versionName="1.7.0" >, +++ b/MPChartExample/build.gradle, +        versionCode 27, +        versionName '1.7.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +    // data.addEntry(new Entry((float) (Math.random() * 50) + 50f,, +    // set.getEntryCount()), 0);, +, +        ArrayList<Integer> colors = new ArrayList<Integer>();, +, +        for (int c : ColorTemplate.VORDIPLOM_COLORS), +            colors.add(c);, +, +        for (int c : ColorTemplate.JOYFUL_COLORS), +            colors.add(c);, +, +        set1.setColors(colors);, +++ b/MPChartExample/AndroidManifest.xml, +    android:versionCode="27", +    android:versionName="1.7.0" >, +++ b/MPChartExample/build.gradle, +        versionCode 27, +        versionName '1.7.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +    // data.addEntry(new Entry((float) (Math.random() * 50) + 50f,, +    // set.getEntryCount()), 0);, +, +        ArrayList<Integer> colors = new ArrayList<Integer>();, +, +        for (int c : ColorTemplate.VORDIPLOM_COLORS), +            colors.add(c);, +, +        for (int c : ColorTemplate.JOYFUL_COLORS), +            colors.add(c);, +, +        set1.setColors(colors);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +            case PIECHART_CENTER:, +, +                posX = getWidth() / 2f, +                        - (mLegend.getMaximumEntryLength(mLegendLabelPaint) + mLegend.getXEntrySpace()), +                        / 2f;, +                posY = getHeight() / 2f - mLegend.getFullHeight(mLegendLabelPaint) / 2f;, +, +                for (int i = 0; i < labels.length; i++) {, +, +                    mLegend.drawForm(mDrawCanvas, posX + stack, posY, mLegendFormPaint, i);, +, +                    if (labels[i] != null) {, +, +                        if (!wasStacked) {, +, +                            float x = posX;, +, +                            if (mLegend.getColors()[i] != -2), +                                x += formTextSpaceAndForm;, +, +                            posY += textDrop;, +, +                            mLegend.drawLabel(mDrawCanvas, x, posY,, +                                    mLegendLabelPaint, i);, +                        } else {, +, +                            posY += textSize * 1.2f + formSize;, +, +                            mLegend.drawLabel(mDrawCanvas, posX, posY,, +                                    mLegendLabelPaint, i);, +, +                        }, +, +                        // make a step down, +                        posY += mLegend.getYEntrySpace();, +                        stack = 0f;, +                    } else {, +                        stack += formSize + stackSpace;, +                        wasStacked = true;, +                    }, +                }, +, +                break;, +++ b/MPChartExample/AndroidManifest.xml, +    android:versionCode="27", +    android:versionName="1.7.0" >, +++ b/MPChartExample/build.gradle, +        versionCode 27, +        versionName '1.7.0', +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +    // data.addEntry(new Entry((float) (Math.random() * 50) + 50f,, +    // set.getEntryCount()), 0);]