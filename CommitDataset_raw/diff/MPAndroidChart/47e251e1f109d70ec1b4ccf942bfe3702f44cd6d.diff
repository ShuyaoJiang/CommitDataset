[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +        XAxis xAxis = mChart.getXAxis();, +        xAxis.setTypeface(tf);, +        xAxis.setTextSize(9f);, +        YAxis yAxis = mChart.getYAxis();, +        yAxis.setTypeface(tf);, +        yAxis.setLabelCount(5);, +        yAxis.setTextSize(9f);, +        yAxis.setStartAtZero(true);, +        data.setValueTextSize(8f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +        XAxis xAxis = mChart.getXAxis();, +        xAxis.setTypeface(tf);, +        xAxis.setTextSize(9f);, +        YAxis yAxis = mChart.getYAxis();, +        yAxis.setTypeface(tf);, +        yAxis.setLabelCount(5);, +        yAxis.setTextSize(9f);, +        yAxis.setStartAtZero(true);, +        data.setValueTextSize(8f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +import android.util.Log;, +        mXChartMax = mData.getXVals().size() - 1;, +        mDeltaX = Math.abs(mXChartMax - mXChartMin);, +, +        mYAxisRenderer.computeAxis(mYAxis.mAxisMinimum, mYAxis.mAxisMaximum);, +                / mYAxis.mAxisRange;, +, +    /**, +     * Returns the range of y-values this chart can display., +     * , +     * @return, +     */, +    public float getYRange() {, +        return mYAxis.mAxisRange;, +    }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +        XAxis xAxis = mChart.getXAxis();, +        xAxis.setTypeface(tf);, +        xAxis.setTextSize(9f);, +        YAxis yAxis = mChart.getYAxis();, +        yAxis.setTypeface(tf);, +        yAxis.setLabelCount(5);, +        yAxis.setTextSize(9f);, +        yAxis.setStartAtZero(true);, +        data.setValueTextSize(8f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +import android.util.Log;, +        mXChartMax = mData.getXVals().size() - 1;, +        mDeltaX = Math.abs(mXChartMax - mXChartMin);, +, +        mYAxisRenderer.computeAxis(mYAxis.mAxisMinimum, mYAxis.mAxisMaximum);, +                / mYAxis.mAxisRange;, +, +    /**, +     * Returns the range of y-values this chart can display., +     * , +     * @return, +     */, +    public float getYRange() {, +        return mYAxis.mAxisRange;, +    }, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java, +            PointF p = Utils.getPosition(center, (e.getVal() - mChart.getYChartMin()) * factor,, +                PointF p = Utils.getPosition(center, (e.getVal() - mChart.getYChartMin()) * factor,, +            PointF p = Utils.getPosition(center, mChart.getYRange() * factor, sliceangle * i, +                float r = (mChart.getYAxis().mEntries[j] - mChart.getYChartMin()) * factor;, +            float y = (e.getVal() - mChart.getYChartMin());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RadarChartActivitry.java, +        XAxis xAxis = mChart.getXAxis();, +        xAxis.setTypeface(tf);, +        xAxis.setTextSize(9f);, +        YAxis yAxis = mChart.getYAxis();, +        yAxis.setTypeface(tf);, +        yAxis.setLabelCount(5);, +        yAxis.setTextSize(9f);, +        yAxis.setStartAtZero(true);, +        data.setValueTextSize(8f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +import android.util.Log;, +        mXChartMax = mData.getXVals().size() - 1;, +        mDeltaX = Math.abs(mXChartMax - mXChartMin);, +, +        mYAxisRenderer.computeAxis(mYAxis.mAxisMinimum, mYAxis.mAxisMaximum);, +                / mYAxis.mAxisRange;, +, +    /**, +     * Returns the range of y-values this chart can display., +     * , +     * @return, +     */, +    public float getYRange() {, +        return mYAxis.mAxisRange;, +    }, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/RadarChartRenderer.java, +            PointF p = Utils.getPosition(center, (e.getVal() - mChart.getYChartMin()) * factor,, +                PointF p = Utils.getPosition(center, (e.getVal() - mChart.getYChartMin()) * factor,, +            PointF p = Utils.getPosition(center, mChart.getYRange() * factor, sliceangle * i, +                float r = (mChart.getYAxis().mEntries[j] - mChart.getYChartMin()) * factor;, +            float y = (e.getVal() - mChart.getYChartMin());]