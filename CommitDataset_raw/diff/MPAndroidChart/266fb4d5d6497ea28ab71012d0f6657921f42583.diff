[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        mChart.setUsePercentValues(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        mChart.setUsePercentValues(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java, +        holder.chart.setUsePercentValues(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        mChart.setUsePercentValues(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java, +        holder.chart.setUsePercentValues(true);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import android.widget.Toast;, +import com.github.mikephil.charting.data.DataSet;, +            Log.i(LOG_TAG, "Preparing Value-Px Matrix, xmin: " + mXChartMin + ", xmax: ", +                    + mXChartMax + ", xdelta: " + mDeltaX);, +        // take any transformer to determine the x-axis value, +        float leftdist = Utils.getMinimumDistance(valsAtIndex, y, AxisDependency.LEFT);, +        float rightdist = Utils.getMinimumDistance(valsAtIndex, y, AxisDependency.RIGHT);, +, +        if (mData.getFirstRight() == null), +            rightdist = Float.MAX_VALUE;, +        if (mData.getFirstLeft() == null), +            leftdist = Float.MAX_VALUE;, +, +        AxisDependency axis = leftdist < rightdist ? AxisDependency.LEFT : AxisDependency.RIGHT;, +, +        int dataSetIndex = Utils.getClosestDataSetIndex(valsAtIndex, y, axis);, +     * Returns an array of SelInfo objects for the given x-index. The SelInfo, +     * objects give information about the value at the selected index and the, +     * DataSet it belongs to. INFORMATION: This method does calculations at, +     * runtime. Do not over-use in performance critical situations., +     *, +     * @return, +     */, +    public ArrayList<SelInfo> getYValsAtIndex(int xIndex) {, +, +        ArrayList<SelInfo> vals = new ArrayList<SelInfo>();, +, +        float[] pts = new float[2];, +, +        for (int i = 0; i < mData.getDataSetCount(); i++) {, +, +            DataSet<?> dataSet = mData.getDataSetByIndex(i);, +, +            // extract all y-values from all DataSets at the given x-index, +            float yVal = dataSet.getYValForXIndex(xIndex);, +            pts[1] = yVal;, +, +            getTransformer(dataSet.getAxisDependency()).pointValuesToPixel(pts);, +, +            if (!Float.isNaN(pts[1])) {, +                vals.add(new SelInfo(pts[1], i, dataSet));, +            }, +        }, +, +        return vals;, +    }, +, +    /**, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PieChartActivity.java, +        mChart.setUsePercentValues(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/listviewitems/PieChartItem.java, +        holder.chart.setUsePercentValues(true);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import android.widget.Toast;, +import com.github.mikephil.charting.data.DataSet;, +            Log.i(LOG_TAG, "Preparing Value-Px Matrix, xmin: " + mXChartMin + ", xmax: ", +                    + mXChartMax + ", xdelta: " + mDeltaX);, +        // take any transformer to determine the x-axis value, +        float leftdist = Utils.getMinimumDistance(valsAtIndex, y, AxisDependency.LEFT);, +        float rightdist = Utils.getMinimumDistance(valsAtIndex, y, AxisDependency.RIGHT);, +, +        if (mData.getFirstRight() == null), +            rightdist = Float.MAX_VALUE;, +        if (mData.getFirstLeft() == null), +            leftdist = Float.MAX_VALUE;, +, +        AxisDependency axis = leftdist < rightdist ? AxisDependency.LEFT : AxisDependency.RIGHT;, +, +        int dataSetIndex = Utils.getClosestDataSetIndex(valsAtIndex, y, axis);, +     * Returns an array of SelInfo objects for the given x-index. The SelInfo, +     * objects give information about the value at the selected index and the, +     * DataSet it belongs to. INFORMATION: This method does calculations at, +     * runtime. Do not over-use in performance critical situations., +     *, +     * @return, +     */, +    public ArrayList<SelInfo> getYValsAtIndex(int xIndex) {, +, +        ArrayList<SelInfo> vals = new ArrayList<SelInfo>();, +, +        float[] pts = new float[2];, +, +        for (int i = 0; i < mData.getDataSetCount(); i++) {, +, +            DataSet<?> dataSet = mData.getDataSetByIndex(i);, +, +            // extract all y-values from all DataSets at the given x-index, +            float yVal = dataSet.getYValForXIndex(xIndex);, +            pts[1] = yVal;]