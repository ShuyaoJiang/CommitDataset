[+++ b/MPChartExample/res/layout/activity_piechart.xml, +        android:layout_height="match_parent", +++ b/MPChartExample/res/layout/activity_piechart.xml, +        android:layout_height="match_parent", +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +        mChartTouchListener = new BarLineChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>>>(, +        if (mChartTouchListener == null || mDataNotSet), +            return mChartTouchListener.onTouch(this, event);, +        if (mChartTouchListener instanceof BarLineChartTouchListener), +            ((BarLineChartTouchListener<?>) mChartTouchListener).computeScroll();, +     * @param enabled the y axis automatically adjusts to the min and max y, +++ b/MPChartExample/res/layout/activity_piechart.xml, +        android:layout_height="match_parent", +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +        mChartTouchListener = new BarLineChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>>>(, +        if (mChartTouchListener == null || mDataNotSet), +            return mChartTouchListener.onTouch(this, event);, +        if (mChartTouchListener instanceof BarLineChartTouchListener), +            ((BarLineChartTouchListener<?>) mChartTouchListener).computeScroll();, +     * @param enabled the y axis automatically adjusts to the min and max y, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +    protected ChartTouchListener mChartTouchListener;, +, +        if(highs == null || highs.length == 0), +            mChartTouchListener.setLastHighlighted(null);, +, +     * @param high, +     * Set a new (e.g. custom) ChartTouchListener NOTE: make sure to, +     * setTouchEnabled(true); if you need touch gestures on the chart, +     *, +     * @param l, +     */, +    public void setOnTouchListener(ChartTouchListener l) {, +        this.mChartTouchListener = l;, +    }, +, +    /**, +++ b/MPChartExample/res/layout/activity_piechart.xml, +        android:layout_height="match_parent", +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +        mChartTouchListener = new BarLineChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>>>(, +        if (mChartTouchListener == null || mDataNotSet), +            return mChartTouchListener.onTouch(this, event);, +        if (mChartTouchListener instanceof BarLineChartTouchListener), +            ((BarLineChartTouchListener<?>) mChartTouchListener).computeScroll();, +     * @param enabled the y axis automatically adjusts to the min and max y, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +    protected ChartTouchListener mChartTouchListener;, +, +        if(highs == null || highs.length == 0), +            mChartTouchListener.setLastHighlighted(null);, +, +     * @param high, +     * Set a new (e.g. custom) ChartTouchListener NOTE: make sure to, +     * setTouchEnabled(true); if you need touch gestures on the chart, +     *, +     * @param l, +     */, +    public void setOnTouchListener(ChartTouchListener l) {, +        this.mChartTouchListener = l;, +    }, +, +    /**, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java, +        mChartTouchListener = new PieRadarChartTouchListener(this);, +        if (mTouchEnabled && mChartTouchListener != null), +            return mChartTouchListener.onTouch(this, event);, +        if (mChartTouchListener instanceof PieRadarChartTouchListener), +            ((PieRadarChartTouchListener) mChartTouchListener).computeScroll();, +++ b/MPChartExample/res/layout/activity_piechart.xml, +        android:layout_height="match_parent", +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +        mChartTouchListener = new BarLineChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>>>(, +        if (mChartTouchListener == null || mDataNotSet), +            return mChartTouchListener.onTouch(this, event);, +        if (mChartTouchListener instanceof BarLineChartTouchListener), +            ((BarLineChartTouchListener<?>) mChartTouchListener).computeScroll();, +     * @param enabled the y axis automatically adjusts to the min and max y, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.listener.ChartTouchListener;, +    protected ChartTouchListener mChartTouchListener;, +, +        if(highs == null || highs.length == 0), +            mChartTouchListener.setLastHighlighted(null);, +, +     * @param high, +     * Set a new (e.g. custom) ChartTouchListener NOTE: make sure to, +     * setTouchEnabled(true); if you need touch gestures on the chart, +     *, +     * @param l, +     */, +    public void setOnTouchListener(ChartTouchListener l) {, +        this.mChartTouchListener = l;, +    }]