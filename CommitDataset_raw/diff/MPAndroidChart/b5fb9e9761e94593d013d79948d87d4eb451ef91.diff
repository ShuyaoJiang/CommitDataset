[+++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java, +     * search. If the no Entry at the specified x-index is found, this method, +     * returns the index at the closest x-index. Returns null if no Entry object, +     * @param x, +        int index = getEntryIndex(x);, +        if (index > -1), +            return mYVals.get(index);, +        return null;, +    }, +, +    /**, +     * Returns the first Entry index found at the given xIndex with binary, +     * search. If the no Entry at the specified x-index is found, this method, +     * returns the index at the closest x-index. Returns -1 if no Entry object, +     * at that index. INFORMATION: This method does calculations at runtime. Do, +     * not over-use in performance critical situations., +     *, +     * @param x, +     * @return, +     */, +    public int getEntryIndex(int x) {, +, +        int closest = -1;, +                return m;, +            closest = m;, +     * Adds an Entry to the DataSet dynamically., +     * Entries are added to the end of the list., +     * This will also recalculate the current minimum and maximum, +     * values of the DataSet and the value-sum., +     * @param e, +     * Adds an Entry to the DataSet dynamically., +     * Entries are added to their appropriate index respective to it's x-index., +     * This will also recalculate the current minimum and maximum, +     * values of the DataSet and the value-sum., +     *, +     * @param e, +     */, +    @SuppressWarnings("unchecked"), +    public void addEntryOrdered(Entry e) {, +, +        if (e == null), +            return;, +, +        float val = e.getVal();, +, +        if (mYVals == null) {, +            mYVals = new ArrayList<T>();, +        }, +, +        if (mYVals.size() == 0) {, +            mYMax = val;, +            mYMin = val;, +        } else {, +            if (mYMax < val), +                mYMax = val;, +            if (mYMin > val), +                mYMin = val;, +        }, +, +        mYValueSum += val;, +, +        if (mYVals.size() > 0 && mYVals.get(mYVals.size() - 1).getXIndex() > e.getXIndex()), +        {, +            int closestIndex = getEntryIndex(e.getXIndex());, +            if (mYVals.get(closestIndex).getXIndex() < e.getXIndex()), +                closestIndex++;, +            mYVals.add(closestIndex, (T) e);, +            return;, +        }, +, +        mYVals.add((T) e);, +    }, +, +    /**]