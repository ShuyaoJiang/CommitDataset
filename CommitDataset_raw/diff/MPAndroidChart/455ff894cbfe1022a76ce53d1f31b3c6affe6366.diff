[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +        mSeekBarX.setProgress(1);, +        int count = mSeekBarX.getProgress();, +        data.setDrawValues(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +        mSeekBarX.setProgress(1);, +        int count = mSeekBarX.getProgress();, +        data.setDrawValues(false);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, +        mYMax = -Float.MAX_VALUE;, +        mXMax = -Float.MAX_VALUE;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +        mSeekBarX.setProgress(1);, +        int count = mSeekBarX.getProgress();, +        data.setDrawValues(false);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, +        mYMax = -Float.MAX_VALUE;, +        mXMax = -Float.MAX_VALUE;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleDataSet.java, +        mYMax = -Float.MAX_VALUE;, +        mXMax = -Float.MAX_VALUE;, +        for (BubbleEntry e : mValues) {, +            calcMinMax(e);, +            final float size = e.getSize();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +        mSeekBarX.setProgress(1);, +        int count = mSeekBarX.getProgress();, +        data.setDrawValues(false);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, +        mYMax = -Float.MAX_VALUE;, +        mXMax = -Float.MAX_VALUE;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleDataSet.java, +        mYMax = -Float.MAX_VALUE;, +        mXMax = -Float.MAX_VALUE;, +        for (BubbleEntry e : mValues) {, +            calcMinMax(e);, +            final float size = e.getSize();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java, +        mYMax = -Float.MAX_VALUE;, +        mXMax = -Float.MAX_VALUE;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +        mSeekBarX.setProgress(1);, +        int count = mSeekBarX.getProgress();, +        data.setDrawValues(false);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, +        mYMax = -Float.MAX_VALUE;, +        mXMax = -Float.MAX_VALUE;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleDataSet.java, +        mYMax = -Float.MAX_VALUE;, +        mXMax = -Float.MAX_VALUE;, +        for (BubbleEntry e : mValues) {, +            calcMinMax(e);, +            final float size = e.getSize();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java, +        mYMax = -Float.MAX_VALUE;, +        mXMax = -Float.MAX_VALUE;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java, +public class BubbleChartRenderer extends BarLineScatterCandleBubbleRenderer {, +    protected float getShapeSize(float entrySize, float maxSize, float reference, boolean normalizeSize) {, +        final float factor = normalizeSize ? ((maxSize == 0f) ? 1f : (float) Math.sqrt(entrySize / maxSize)) :, +                entrySize;, +        XBounds bounds = getXBounds(mChart, dataSet);, +        for (int j = bounds.min; j <= bounds.range + bounds.min; j++) {, +            pointBuffer[0] = entry.getX();, +            pointBuffer[1] = (entry.getY()) * phaseY;, +                XBounds bounds = getXBounds(mChart, dataSet);, +                        .generateTransformedValuesBubble(dataSet, phaseY, bounds.min, bounds.max);, +                    int valueTextColor = dataSet.getValueTextColor(j / 2 + bounds.min);, +                    BubbleEntry entry = dataSet.getEntryForIndex(j / 2 + bounds.min);, +            for (int dataSetIndex = minDataSetIndex; dataSetIndex < maxDataSetIndex; dataSetIndex++) {, +, +                if (entry == null), +                XBounds bounds = getXBounds(mChart, dataSet);, +                pointBuffer[0] = entry.getX();, +                pointBuffer[1] = (entry.getY()) * phaseY;, +                if (high.getX() < bounds.min || high.getX() > bounds.max), +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BubbleChartActivity.java, +        mSeekBarX.setProgress(1);, +        int count = mSeekBarX.getProgress();, +        data.setDrawValues(false);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BarDataSet.java, +        mYMax = -Float.MAX_VALUE;, +        mXMax = -Float.MAX_VALUE;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/BubbleDataSet.java, +        mYMax = -Float.MAX_VALUE;, +        mXMax = -Float.MAX_VALUE;, +        for (BubbleEntry e : mValues) {, +            calcMinMax(e);, +            final float size = e.getSize();, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CandleDataSet.java, +        mYMax = -Float.MAX_VALUE;, +        mXMax = -Float.MAX_VALUE;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/BubbleChartRenderer.java, +public class BubbleChartRenderer extends BarLineScatterCandleBubbleRenderer {, +    protected float getShapeSize(float entrySize, float maxSize, float reference, boolean normalizeSize) {, +        final float factor = normalizeSize ? ((maxSize == 0f) ? 1f : (float) Math.sqrt(entrySize / maxSize)) :, +                entrySize;, +        XBounds bounds = getXBounds(mChart, dataSet);, +        for (int j = bounds.min; j <= bounds.range + bounds.min; j++) {, +            pointBuffer[0] = entry.getX();]