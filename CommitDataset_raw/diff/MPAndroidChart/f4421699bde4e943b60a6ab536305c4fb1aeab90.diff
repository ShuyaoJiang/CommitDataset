[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java, +        writeToDBStack(200);, +        //RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, "stackValues", "xIndex"); // normal entries, +        RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, "stackValues", "xIndex", "floatValue"); // stacked entries, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java, +        writeToDBStack(200);, +        //RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, "stackValues", "xIndex"); // normal entries, +        RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, "stackValues", "xIndex", "floatValue"); // stacked entries, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java, +    private float floatValue;, +    public RealmFloat(float floatValue) {, +        this.floatValue = floatValue;, +    public float getFloatValue() {, +        return floatValue;, +    public void setFloatValue(float value) {, +        this.floatValue = value;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/RealmDatabaseActivityBar.java, +        writeToDBStack(200);, +        //RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, "stackValues", "xIndex"); // normal entries, +        RealmBarDataSet<RealmDemoData> set = new RealmBarDataSet<RealmDemoData>(result, "stackValues", "xIndex", "floatValue"); // stacked entries, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/RealmFloat.java, +    private float floatValue;, +    public RealmFloat(float floatValue) {, +        this.floatValue = floatValue;, +    public float getFloatValue() {, +        return floatValue;, +    public void setFloatValue(float value) {, +        this.floatValue = value;, +++ b/MPChartLib/src/com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet.java, +    private String mStackValueFieldName;, +, +        buildData(this.results);, +    /**, +     * Constructor for supporting stacked values., +     *, +     * @param results, +     * @param yValuesField, +     * @param xIndexField, +     * @param stackValueFieldName, +     */, +    public RealmBarDataSet(RealmResults<T> results, String yValuesField, String xIndexField, String stackValueFieldName) {, +        super(results, yValuesField, xIndexField);, +        this.mStackValueFieldName = stackValueFieldName;, +        mHighLightColor = Color.rgb(0, 0, 0);, +        buildData(this.results);, +    }, +    private void buildData(RealmResults<T> results) {, +                    values[i] = o.getFloat(mStackValueFieldName);, +    public void build(RealmResults<T> results) {, +        // TODO: make this cleaner, +    }, +, +    @Override]