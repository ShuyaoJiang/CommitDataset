[+++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java, +import android.graphics.DashPathEffect;, +    /** the path effect of the grid lines that makes dashed lines possible */, +    private DashPathEffect mGridDashPathEffect = null;, +, +, +    /**, +     * Enables the grid line to be drawn in dashed mode, e.g. like this, +     * "- - - - - -". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF., +     * Keep in mind that hardware acceleration boosts performance., +     *, +     * @param lineLength the length of the line pieces, +     * @param spaceLength the length of space in between the pieces, +     * @param phase offset, in degrees (normally, use 0), +     */, +    public void enableGridDashedLine(float lineLength, float spaceLength, float phase) {, +        mGridDashPathEffect = new DashPathEffect(new float[] {, +                lineLength, spaceLength, +        }, phase);, +    }, +, +    /**, +     * Disables the grid line to be drawn in dashed mode., +     */, +    public void disableGridDashedLine() {, +        mGridDashPathEffect = null;, +    }, +, +    /**, +     * Returns true if the grid dashed-line effect is enabled, false if not., +     *, +     * @return, +     */, +    public boolean isGridDashedLineEnabled() {, +        return mGridDashPathEffect == null ? false : true;, +    }, +, +    /**, +     * returns the DashPathEffect that is set for grid line, +     *, +     * @return, +     */, +    public DashPathEffect getDashPathEffect() {, +        return mGridDashPathEffect;, +    }, +++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java, +import android.graphics.DashPathEffect;, +    /** the path effect of the grid lines that makes dashed lines possible */, +    private DashPathEffect mGridDashPathEffect = null;, +, +, +    /**, +     * Enables the grid line to be drawn in dashed mode, e.g. like this, +     * "- - - - - -". THIS ONLY WORKS IF HARDWARE-ACCELERATION IS TURNED OFF., +     * Keep in mind that hardware acceleration boosts performance., +     *, +     * @param lineLength the length of the line pieces, +     * @param spaceLength the length of space in between the pieces, +     * @param phase offset, in degrees (normally, use 0), +     */, +    public void enableGridDashedLine(float lineLength, float spaceLength, float phase) {, +        mGridDashPathEffect = new DashPathEffect(new float[] {, +                lineLength, spaceLength, +        }, phase);, +    }, +, +    /**, +     * Disables the grid line to be drawn in dashed mode., +     */, +    public void disableGridDashedLine() {, +        mGridDashPathEffect = null;, +    }, +, +    /**, +     * Returns true if the grid dashed-line effect is enabled, false if not., +     *, +     * @return, +     */, +    public boolean isGridDashedLineEnabled() {, +        return mGridDashPathEffect == null ? false : true;, +    }, +, +    /**, +     * returns the DashPathEffect that is set for grid line, +     *, +     * @return, +     */, +    public DashPathEffect getDashPathEffect() {, +        return mGridDashPathEffect;, +    }, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/XAxisRenderer.java, +        mGridPaint.setPathEffect(mXAxis.getDashPathEffect());, +++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java, +import android.graphics.DashPathEffect;, +    /** the path effect of the grid lines that makes dashed lines possible */, +    private DashPathEffect mGridDashPathEffect = null;, +, +, +    /**, +     * Enables the grid line to be drawn in dashed mode, e.g. like this]