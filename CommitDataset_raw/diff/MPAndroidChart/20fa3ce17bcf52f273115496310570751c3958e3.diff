[+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/CandleBodyBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;, +public class CandleBodyBuffer extends AbstractBuffer<ICandleDataSet> {, +    public void feed(ICandleDataSet data) {, +            CandleEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/CandleBodyBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;, +public class CandleBodyBuffer extends AbstractBuffer<ICandleDataSet> {, +    public void feed(ICandleDataSet data) {, +            CandleEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/CandleShadowBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;, +public class CandleShadowBuffer extends AbstractBuffer<ICandleDataSet> {, +    public void feed(ICandleDataSet data) {, +            CandleEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/CandleBodyBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;, +public class CandleBodyBuffer extends AbstractBuffer<ICandleDataSet> {, +    public void feed(ICandleDataSet data) {, +            CandleEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/CandleShadowBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;, +public class CandleShadowBuffer extends AbstractBuffer<ICandleDataSet> {, +    public void feed(ICandleDataSet data) {, +            CandleEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java, +import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;, +        int maxx = Math.min(dataSet.getEntryIndex(entryTo) + 1, dataSet.getEntryCount());, +            final BubbleEntry entry = dataSet.getEntryForIndex(j);, +                        .generateTransformedValuesBubble(dataSet, phaseX, phaseY, minx, maxx);, +                    BubbleEntry entry = dataSet.getEntryForIndex(j / 2 + minx);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/CandleBodyBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;, +public class CandleBodyBuffer extends AbstractBuffer<ICandleDataSet> {, +    public void feed(ICandleDataSet data) {, +            CandleEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/CandleShadowBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;, +public class CandleShadowBuffer extends AbstractBuffer<ICandleDataSet> {, +    public void feed(ICandleDataSet data) {, +            CandleEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java, +import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;, +        int maxx = Math.min(dataSet.getEntryIndex(entryTo) + 1, dataSet.getEntryCount());, +            final BubbleEntry entry = dataSet.getEntryForIndex(j);, +                        .generateTransformedValuesBubble(dataSet, phaseX, phaseY, minx, maxx);, +                    BubbleEntry entry = dataSet.getEntryForIndex(j / 2 + minx);, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java, +import com.github.mikephil.charting.interfaces.dataprovider.CandleDataProvider;, +import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;, +import com.github.mikephil.charting.utils.ColorTemplate;, +        int maxx = Math.min(mMaxX + 1, dataSet.getEntryCount());, +        bodyBuffer.feed(dataSet);, +        shadowBuffer.feed(dataSet);, +            CandleEntry e = dataSet.getEntryForIndex(j / 4 + minx);, +                int maxx = Math.min(mMaxX + 1, dataSet.getEntryCount());, +                        dataSet, mAnimator.getPhaseX(), mAnimator.getPhaseY(), minx, maxx);, +                    CandleEntry entry = dataSet.getEntryForIndex(j / 2 + minx);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/CandleBodyBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;, +public class CandleBodyBuffer extends AbstractBuffer<ICandleDataSet> {, +    public void feed(ICandleDataSet data) {, +            CandleEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/CandleShadowBuffer.java, +import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;, +public class CandleShadowBuffer extends AbstractBuffer<ICandleDataSet> {, +    public void feed(ICandleDataSet data) {, +            CandleEntry e = data.getEntryForIndex(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/BubbleChartRenderer.java, +import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;, +        int maxx = Math.min(dataSet.getEntryIndex(entryTo) + 1, dataSet.getEntryCount());, +            final BubbleEntry entry = dataSet.getEntryForIndex(j);, +                        .generateTransformedValuesBubble(dataSet, phaseX, phaseY, minx, maxx);, +                    BubbleEntry entry = dataSet.getEntryForIndex(j / 2 + minx);, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java, +import com.github.mikephil.charting.interfaces.dataprovider.CandleDataProvider;, +import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;, +import com.github.mikephil.charting.utils.ColorTemplate;, +        int maxx = Math.min(mMaxX + 1, dataSet.getEntryCount());, +        bodyBuffer.feed(dataSet);, +        shadowBuffer.feed(dataSet);, +            CandleEntry e = dataSet.getEntryForIndex(j / 4 + minx);, +                int maxx = Math.min(mMaxX + 1, dataSet.getEntryCount());, +                        dataSet, mAnimator.getPhaseX(), mAnimator.getPhaseY(), minx, maxx);, +                    CandleEntry entry = dataSet.getEntryForIndex(j / 2 + minx);, +++ b/MPChartLib/src/com/github/mikephil/charting/utils/Transformer.java, +import com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet;, +import com.github.mikephil.charting.interfaces.datasets.ICandleDataSet;, +     * @param data, +    public float[] generateTransformedValuesBubble(IBubbleDataSet data,, +            Entry e = data.getEntryForIndex(j / 2 + from);, +     * @param data, +    public float[] generateTransformedValuesCandle(ICandleDataSet data,, +            CandleEntry e = data.getEntryForIndex(j / 2 + from);]