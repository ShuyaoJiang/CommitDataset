[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +import java.util.Arrays;, +, +            // stacked, +            entries2.add(new BarEntry(0, new float[]{getRandom(13, 12), getRandom(13, 12)}));, +        set2.setColors(new int[]{Color.rgb(61, 165, 255), Color.rgb(23, 197, 255)});, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +import java.util.Arrays;, +, +            // stacked, +            entries2.add(new BarEntry(0, new float[]{getRandom(13, 12), getRandom(13, 12)}));, +        set2.setColors(new int[]{Color.rgb(61, 165, 255), Color.rgb(23, 197, 255)});, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +import java.util.Arrays;, +, +            // stacked, +            entries2.add(new BarEntry(0, new float[]{getRandom(13, 12), getRandom(13, 12)}));, +        set2.setColors(new int[]{Color.rgb(61, 165, 255), Color.rgb(23, 197, 255)});, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.highlight.Highlighter;, +    protected Highlighter mHighlighter;, +    public Highlighter getHighlighter() {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +import java.util.Arrays;, +, +            // stacked, +            entries2.add(new BarEntry(0, new float[]{getRandom(13, 12), getRandom(13, 12)}));, +        set2.setColors(new int[]{Color.rgb(61, 165, 255), Color.rgb(23, 197, 255)});, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.highlight.Highlighter;, +    protected Highlighter mHighlighter;, +    public Highlighter getHighlighter() {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +        setHighlighter(new CombinedHighlighter(this, this));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +import java.util.Arrays;, +, +            // stacked, +            entries2.add(new BarEntry(0, new float[]{getRandom(13, 12), getRandom(13, 12)}));, +        set2.setColors(new int[]{Color.rgb(61, 165, 255), Color.rgb(23, 197, 255)});, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.highlight.Highlighter;, +    protected Highlighter mHighlighter;, +    public Highlighter getHighlighter() {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +        setHighlighter(new CombinedHighlighter(this, this));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +public class ChartHighlighter<T extends BarLineScatterCandleBubbleDataProvider> implements Highlighter {, +    @Override, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +import java.util.Arrays;, +, +            // stacked, +            entries2.add(new BarEntry(0, new float[]{getRandom(13, 12), getRandom(13, 12)}));, +        set2.setColors(new int[]{Color.rgb(61, 165, 255), Color.rgb(23, 197, 255)});, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.highlight.Highlighter;, +    protected Highlighter mHighlighter;, +    public Highlighter getHighlighter() {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +        setHighlighter(new CombinedHighlighter(this, this));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +public class ChartHighlighter<T extends BarLineScatterCandleBubbleDataProvider> implements Highlighter {, +    @Override, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java, +import com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider;, +public class CombinedHighlighter extends ChartHighlighter<BarLineScatterCandleBubbleDataProvider> implements Highlighter {, +    protected BarHighlighter barHighlighter;, +, +    public CombinedHighlighter(BarLineScatterCandleBubbleDataProvider chart, BarDataProvider barChart) {, +        barHighlighter = new BarHighlighter(barChart);, +    }, +, +    @Override, +    public Highlight getHighlight(float x, float y) {, +, +        Highlight h1 = super.getHighlight(x, y);, +        Highlight h2 = barHighlighter.getHighlight(x, y);, +, +        return h1;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CombinedChartActivity.java, +import java.util.Arrays;, +, +            // stacked, +            entries2.add(new BarEntry(0, new float[]{getRandom(13, 12), getRandom(13, 12)}));, +        set2.setColors(new int[]{Color.rgb(61, 165, 255), Color.rgb(23, 197, 255)});, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarChart.java, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +import com.github.mikephil.charting.highlight.Highlighter;, +    protected Highlighter mHighlighter;, +    public Highlighter getHighlighter() {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +        setHighlighter(new CombinedHighlighter(this, this));, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/ChartHighlighter.java, +public class ChartHighlighter<T extends BarLineScatterCandleBubbleDataProvider> implements Highlighter {]