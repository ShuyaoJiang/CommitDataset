[+++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-3.jar, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-3.jar, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java, +        tvX.setText("" + (mSeekBarX.getProgress()));, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-3.jar, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java, +        tvX.setText("" + (mSeekBarX.getProgress()));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-3.jar, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java, +        tvX.setText("" + (mSeekBarX.getProgress()));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +//        Log.i(LOG_TAG, "xvalcount: " + data.getXValCount());, +//        Log.i(LOG_TAG, "entrycount: " + data.getYValCount());, +, +            , +            Entry e = entries.get(j / 2);, +            , +            valuePoints[j] = e.getXIndex();, +            valuePoints[j + 1] = e.getVal() * mPhaseY;, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-3.jar, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java, +        tvX.setText("" + (mSeekBarX.getProgress()));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +//        Log.i(LOG_TAG, "xvalcount: " + data.getXValCount());, +//        Log.i(LOG_TAG, "entrycount: " + data.getYValCount());, +, +            , +            Entry e = entries.get(j / 2);, +            , +            valuePoints[j] = e.getXIndex();, +            valuePoints[j + 1] = e.getVal() * mPhaseY;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +        if (mOriginalData.getYValCount() == 1, +                || mOriginalData.getYValCount() <= mOriginalData.getDataSetCount()) {, +                    if (isOffContentLeft(positions[j]) ||, +                            isOffContentTop(positions[j + 1]), +                            dataSet.getCircleSize() / 2f,, +++ b/MPChartExample/libs/mpandroidchartlibrary-1-6-3.jar, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/MultiLineChartActivity.java, +        tvX.setText("" + (mSeekBarX.getProgress()));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +//        Log.i(LOG_TAG, "xvalcount: " + data.getXValCount());, +//        Log.i(LOG_TAG, "entrycount: " + data.getYValCount());, +, +            , +            Entry e = entries.get(j / 2);, +            , +            valuePoints[j] = e.getXIndex();, +            valuePoints[j + 1] = e.getVal() * mPhaseY;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +        if (mOriginalData.getYValCount() == 1, +                || mOriginalData.getYValCount() <= mOriginalData.getDataSetCount()) {, +                    if (isOffContentLeft(positions[j]) ||, +                            isOffContentTop(positions[j + 1]), +                            dataSet.getCircleSize() / 2f,, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +    // /**, +    // * Checks if the ChartData object contains valid data, +    // *, +    // * @return, +    // */, +    // public boolean isValid() {, +    // if (mXVals == null || mXVals.size() < 1), +    // return false;, +    //, +    // if (mDataSets == null || mDataSets.size() < 1), +    // return false;, +    //, +    // return true;, +    // }, +        if (mDataSets == null), +            return null;, +]