[+++ b/MPChartExample/AndroidManifest.xml, +        <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/AndroidManifest.xml, +        <activity android:name=".LineChartTime"></activity>, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartTime.java, +, +package com.xxmassdeveloper.mpchartexample;, +, +import android.graphics.Color;, +import android.graphics.Typeface;, +import android.os.Bundle;, +import android.util.Log;, +import android.view.Menu;, +import android.view.MenuItem;, +import android.view.WindowManager;, +import android.widget.SeekBar;, +import android.widget.SeekBar.OnSeekBarChangeListener;, +import android.widget.TextView;, +import android.widget.Toast;, +, +import com.github.mikephil.charting.charts.LineChart;, +import com.github.mikephil.charting.components.Legend;, +import com.github.mikephil.charting.components.Legend.LegendForm;, +import com.github.mikephil.charting.components.Legend.LegendPosition;, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +import com.github.mikephil.charting.components.YAxis.AxisDependency;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.data.LineData;, +import com.github.mikephil.charting.data.LineDataSet;, +import com.github.mikephil.charting.data.XAxisValue;, +import com.github.mikephil.charting.highlight.Highlight;, +import com.github.mikephil.charting.interfaces.datasets.ILineDataSet;, +import com.github.mikephil.charting.listener.OnChartValueSelectedListener;, +import com.github.mikephil.charting.utils.ColorTemplate;, +import com.xxmassdeveloper.mpchartexample.notimportant.DemoBase;, +, +import java.util.ArrayList;, +import java.util.Date;, +import java.util.List;, +, +public class LineChartTime extends DemoBase implements OnSeekBarChangeListener {, +, +    private LineChart mChart;, +    private SeekBar mSeekBarX, mSeekBarY;, +    private TextView tvX, tvY;, +, +    @Override, +    protected void onCreate(Bundle savedInstanceState) {, +        super.onCreate(savedInstanceState);, +        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,, +                WindowManager.LayoutParams.FLAG_FULLSCREEN);, +        setContentView(R.layout.activity_linechart);, +, +        tvX = (TextView) findViewById(R.id.tvXMax);, +        tvY = (TextView) findViewById(R.id.tvYMax);, +        mSeekBarX = (SeekBar) findViewById(R.id.seekBar1);, +        mSeekBarY = (SeekBar) findViewById(R.id.seekBar2);, +, +        mSeekBarX.setProgress(45);, +        mSeekBarY.setProgress(100);, +, +        mSeekBarY.setOnSeekBarChangeListener(this);, +        mSeekBarX.setOnSeekBarChangeListener(this);, +, +        mChart = (LineChart) findViewById(R.id.chart1);, +, +        // no description text, +        mChart.setDescription("");, +        mChart.setNoDataTextDescription("You need to provide data for the chart.");, +, +        // enable touch gestures, +        mChart.setTouchEnabled(true);, +, +        mChart.setDragDecelerationFrictionCoef(0.9f);, +, +        // enable scaling and dragging, +        mChart.setDragEnabled(true);, +        mChart.setScaleEnabled(true);, +        mChart.setDrawGridBackground(false);, +        mChart.setHighlightPerDragEnabled(true);, +, +        // if disabled, scaling can be done on x- and y-axis separately, +        mChart.setPinchZoom(true);, +, +        // set an alternative background color, +        mChart.setBackgroundColor(Color.LTGRAY);, +, +        // add data, +        setData(20, 30);, +, +        mChart.animateX(2500);, +, +        Typeface tf = Typeface.createFromAsset(getAssets(), "OpenSans-Regular.ttf");, +, +        // get the legend (only possible after setting data), +        Legend l = mChart.getLegend();, +, +        // modify the legend ..., +        // l.setPosition(LegendPosition.LEFT_OF_CHART);]