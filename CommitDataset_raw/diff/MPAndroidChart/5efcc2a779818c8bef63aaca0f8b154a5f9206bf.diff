[+++ b/README.md, + - Legends (generated automatically, customizeable), +    public DataSet(ArrayList<Entry> yVals, int type, String label) { ... }, +When looking at the constructor, it is visible that the <code>DataSet</code> needs an <code>ArrayList</code> of type <code>Entry</code> and an integer value for the type. The type integer value can be chosen freely and can be used to identify the <code>DataSet</code> amongst other <code>DataSet</code> objects in the <code>ChartData</code> object. A possible type in this scenario could be a integer constant COMPANY_1. As an additional option, a label `String` can be specified for the `DataSet` which will be used in a `Legend`., +    DataSet setComp1 = new DataSet(valsComp1, COMPANY_1, "company 1"); // COMPANY_1 is a constant integer and can be chosen freely, +    DataSet setComp2 = new DataSet(valsComp2, COMPANY_2, "company 2");, +**Displaying legends:**, +, +By default, all subclasses of `BarLineChartBase` **support legends** and will automatically generate and draw a legend after setting data for the chart., +, +The number of entries the automatically generated legend contains depends on the number of used colors as well as on the number of `DataSets` used in the chart. The labels of the `Legend` depend on the labels set for the used `DataSet` objects in the chart. If no labels for the `DataSet` objects have been specified, the chart will automatically generate them., +, +For customizeing the `Legend`, use you can retreive the `Legend` object from the chart **after setting data**., +, +```java, +    // setting data..., +    chart.setData(....);, +    , +    Legend l = chart.getLegend();, +    l.setFormSize(10f);, +    l.setForm(LegendForm.CIRCLE);, +    l.setPosition(LegendPosition.LEFT_OF_CHART);, +    l.setTypeface(...);, +    // and many more..., +```, +]