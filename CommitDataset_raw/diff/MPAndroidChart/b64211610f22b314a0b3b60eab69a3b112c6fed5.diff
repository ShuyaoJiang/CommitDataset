[+++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +++ b/MPChartExample/src/com/example/mpchartexample/LineChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import android.view.ViewParent;, +import com.github.mikephil.charting.utils.YLegend;, + * Baseclass of LineChart and BarChart., +    /** contains the current scale factor of the x-axis */, +    protected float mScaleX = 1f;, +, +    /** contains the current scale factor of the y-axis */, +    protected float mScaleY = 1f;, +, +    /** holds the maximum scale factor of the y-axis, default 7f */, +    protected float mMaxScaleY = 7f;, +, +    /** indicates if the top y-legend entry is drawn or not */, +    private boolean mDrawTopYLegendEntry = true;, +, +     * returns true if the specified point (x-axis) exceeds the limits of what, +     * is visible to the right side, +     * @param v, +     * @return, +    protected boolean isOffContentRight(float p) {, +        if (p > mContentRect.right), +            return true;, +        else, +            return false;, +    }, +, +    /**, +     * returns true if the specified point (x-axis) exceeds the limits of what, +     * is visible to the left side, +     * , +     * @param v, +     * @return, +     */, +    protected boolean isOffContentLeft(float p) {, +        if (p < mContentRect.left), +            return true;, +        else, +            return false;, +    }, +, +    /**, +     * returns true if the specified point (y-axis) exceeds the limits of what, +     * is visible on the top, +     * , +     * @param v, +     * @return, +     */, +    protected boolean isOffContentTop(float p) {, +        if (p < mContentRect.top), +            return true;, +        else, +            return false;, +    }, +, +    /**, +     * returns true if the specified point (y-axis) exceeds the limits of what, +     * is visible on the bottom, +     * , +     * @param v, +     * @return, +     */, +    protected boolean isOffContentBottom(float p) {, +        if (p > mContentRect.bottom), +            return true;, +        else, +            return false;, +    }, +, +    /**, +     * ################ ################ ################ ################, +     */, +    /** CODE BELOW THIS RELATED TO SCALING AND GESTURES */, +, +    /**, +     * disables intercept touchevents, +     */, +    public void disableScroll() {, +        ViewParent parent = getParent();, +        parent.requestDisallowInterceptTouchEvent(true);, +    }, +, +    /**, +     * enables intercept touchevents, +     */, +    public void enableScroll() {, +        ViewParent parent = getParent();, +        parent.requestDisallowInterceptTouchEvent(false);, +    }, +, +    /**, +     * call this method to refresh the graph with a given touch matrix, +     * , +     * @param newTouchMatrix, +     * @return, +     */, +    public Matrix refreshTouch(Matrix newTouchMatrix) {, +        mMatrixTouch.set(newTouchMatrix);]