[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +            PointD.recycleInstance(origin);, +, +, +            PointD.recycleInstance(bounds);, +, +            PointD.recycleInstance(bounds);, +     * Returns a recyclable PointD instance, +        PointD result = PointD.getInstance(0,0);, +        getValuesByTouchPoint(x,y,axis,result);, +        return result;, +    }, +, +    public void getValuesByTouchPoint(float x, float y, AxisDependency axis, PointD outputPoint){, +        getTransformer(axis).getValuesByTouchPoint(x, y, outputPoint);, +     * Returns a recyclable PointD instance, +    PointD pointForGetYValueByTouchPoint = PointD.getInstance(0,0);, +        getValuesByTouchPoint(x, y, axis, pointForGetYValueByTouchPoint);, +        float result = (float) pointForGetYValueByTouchPoint.y;, +        return result;, +    protected PointD posForGetLowestVisibleX = PointD.getInstance(0,0);, +        getTransformer(AxisDependency.LEFT).getValuesByTouchPoint(mViewPortHandler.contentLeft(),, +                mViewPortHandler.contentBottom(), posForGetLowestVisibleX);, +        float result = (float) Math.max(mXAxis.mAxisMinimum, posForGetLowestVisibleX.x);, +        return result;, +    protected PointD posForGetHighestVisibleX = PointD.getInstance(0,0);, +        getTransformer(AxisDependency.LEFT).getValuesByTouchPoint(mViewPortHandler.contentRight(),, +                mViewPortHandler.contentBottom(), posForGetHighestVisibleX);, +        float result = (float) Math.min(mXAxis.mAxisMaximum, posForGetHighestVisibleX.x);, +        return result;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +            PointD.recycleInstance(origin);, +, +, +            PointD.recycleInstance(bounds);, +, +            PointD.recycleInstance(bounds);, +     * Returns a recyclable PointD instance, +        PointD result = PointD.getInstance(0,0);, +        getValuesByTouchPoint(x,y,axis,result);, +        return result;, +    }, +, +    public void getValuesByTouchPoint(float x, float y, AxisDependency axis, PointD outputPoint){, +        getTransformer(axis).getValuesByTouchPoint(x, y, outputPoint);, +     * Returns a recyclable PointD instance, +    PointD pointForGetYValueByTouchPoint = PointD.getInstance(0,0);, +        getValuesByTouchPoint(x, y, axis, pointForGetYValueByTouchPoint);, +        float result = (float) pointForGetYValueByTouchPoint.y;, +        return result;, +    protected PointD posForGetLowestVisibleX = PointD.getInstance(0,0);, +        getTransformer(AxisDependency.LEFT).getValuesByTouchPoint(mViewPortHandler.contentLeft(),, +                mViewPortHandler.contentBottom(), posForGetLowestVisibleX);, +        float result = (float) Math.max(mXAxis.mAxisMinimum, posForGetLowestVisibleX.x);, +        return result;, +    protected PointD posForGetHighestVisibleX = PointD.getInstance(0,0);, +        getTransformer(AxisDependency.LEFT).getValuesByTouchPoint(mViewPortHandler.contentRight(),, +                mViewPortHandler.contentBottom(), posForGetHighestVisibleX);, +        float result = (float) Math.min(mXAxis.mAxisMaximum, posForGetHighestVisibleX.x);, +        return result;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/HorizontalBarChart.java, +    protected PointD posForGetLowestVisibleX = PointD.getInstance(0,0);, +        getTransformer(AxisDependency.LEFT).getValuesByTouchPoint(mViewPortHandler.contentLeft(),, +                mViewPortHandler.contentBottom(), posForGetLowestVisibleX);, +        float result = (float) Math.max(mXAxis.mAxisMinimum, posForGetLowestVisibleX.y);, +        return result;, +    protected PointD posForGetHighestVisibleX = PointD.getInstance(0,0);, +        getTransformer(AxisDependency.LEFT).getValuesByTouchPoint(mViewPortHandler.contentLeft(),, +                mViewPortHandler.contentTop(), posForGetHighestVisibleX);, +        float result = (float) Math.min(mXAxis.mAxisMaximum, posForGetHighestVisibleX.y);, +        return result;, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +            PointD.recycleInstance(origin);, +, +, +            PointD.recycleInstance(bounds);, +, +            PointD.recycleInstance(bounds);, +     * Returns a recyclable PointD instance, +        PointD result = PointD.getInstance(0,0);, +        getValuesByTouchPoint(x,y,axis,result);, +        return result;, +    }, +, +    public void getValuesByTouchPoint(float x, float y, AxisDependency axis, PointD outputPoint){, +        getTransformer(axis).getValuesByTouchPoint(x, y, outputPoint);, +     * Returns a recyclable PointD instance, +    PointD pointForGetYValueByTouchPoint = PointD.getInstance(0,0);, +        getValuesByTouchPoint(x, y, axis, pointForGetYValueByTouchPoint);, +        float result = (float) pointForGetYValueByTouchPoint.y;, +        return result;, +    protected PointD posForGetLowestVisibleX = PointD.getInstance(0,0);, +        getTransformer(AxisDependency.LEFT).getValuesByTouchPoint(mViewPortHandler.contentLeft(),, +                mViewPortHandler.contentBottom(), posForGetLowestVisibleX);, +        float result = (float) Math.max(mXAxis.mAxisMinimum, posForGetLowestVisibleX.x);, +        return result;, +    protected PointD posForGetHighestVisibleX = PointD.getInstance(0,0);, +        getTransformer(AxisDependency.LEFT).getValuesByTouchPoint(mViewPortHandler.contentRight(),, +                mViewPortHandler.contentBottom(), posForGetHighestVisibleX);, +        float result = (float) Math.min(mXAxis.mAxisMaximum, posForGetHighestVisibleX.x);]