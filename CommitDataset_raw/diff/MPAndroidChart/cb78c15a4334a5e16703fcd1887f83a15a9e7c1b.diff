[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, +    private boolean mDrawBarShadow = true;, +    private RectF mBarShadow = new RectF();, +    private RectF mBarRect = new RectF();, +    private void prepareBar(float x, float y, float barspace) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, +    private boolean mDrawBarShadow = true;, +    private RectF mBarShadow = new RectF();, +    private RectF mBarRect = new RectF();, +    private void prepareBar(float x, float y, float barspace) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends View, +        super.onLayout(changed, left, top, right, bottom);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, +    private boolean mDrawBarShadow = true;, +    private RectF mBarShadow = new RectF();, +    private RectF mBarRect = new RectF();, +    private void prepareBar(float x, float y, float barspace) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends View, +        super.onLayout(changed, left, top, right, bottom);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +    private class CPoint {, +                } else {, +                    mRenderPaint.setStyle(Paint.Style.STROKE);, +                mTrans.pathValueToPixel(spline);, +, +                mDrawCanvas.drawPath(spline, mRenderPaint);, +, +                // draw normal (straight) lines, +            } else {, +, +            }, +, +            mRenderPaint.setPathEffect(null);, +        }, +    }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import android.graphics.Matrix;, +    private boolean mDrawBarShadow = true;, +    private RectF mBarShadow = new RectF();, +    private RectF mBarRect = new RectF();, +    private void prepareBar(float x, float y, float barspace) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +public abstract class Chart<T extends ChartData<? extends DataSet<? extends Entry>>> extends View, +        super.onLayout(changed, left, top, right, bottom);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +    private class CPoint {, +                } else {, +                    mRenderPaint.setStyle(Paint.Style.STROKE);, +                mTrans.pathValueToPixel(spline);, +, +                mDrawCanvas.drawPath(spline, mRenderPaint);, +, +                // draw normal (straight) lines, +            } else {, +, +            }, +, +            mRenderPaint.setPathEffect(null);, +        }, +    }, +++ b/Projects_using_MPAndroidChart.txt, +, +Notification Analyser, +https://play.google.com/store/apps/details?id=com.tierep.notificationanalyser]