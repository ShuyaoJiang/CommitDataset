[+++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +        if (e == null || e.getXIndex() != xIndex), +            return false;, +, +++ b/MPChartExample/res/menu/candle.xml, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/CandleDataSet.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +        if (e == null || e.getXIndex() != xIndex), +            return false;, +, +++ b/MPChartLib/src/com/github/mikephil/charting/renderer/CandleStickChartRenderer.java, +        CandleShadowBuffer shadowBuffer = mShadowBuffers[dataSetIndex];, +        shadowBuffer.setPhases(phaseX, phaseY);, +        shadowBuffer.limitFrom(minx);, +        shadowBuffer.limitTo(maxx);, +        shadowBuffer.feed(entries);, +, +        trans.pointValuesToPixel(shadowBuffer.buffer);, +, +        mRenderPaint.setStyle(Paint.Style.STROKE);, +, +        // If not set, use default functionality for backward compatibility, +        if (dataSet.getShadowColor() == ColorTemplate.COLOR_NONE) {, +            mRenderPaint.setColor(dataSet.getColor());, +        } else {, +            mRenderPaint.setColor(dataSet.getShadowColor());, +        }, +, +        mRenderPaint.setStrokeWidth(dataSet.getShadowWidth());, +, +        // draw the shadow, +        c.drawLines(shadowBuffer.buffer, 0, range, mRenderPaint);, +, +                mRenderPaint.setColor(Color.BLACK);, +                mRenderPaint.setStyle(Paint.Style.STROKE);]