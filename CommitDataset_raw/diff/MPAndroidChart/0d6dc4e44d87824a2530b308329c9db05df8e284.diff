[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +		IBarDataSet set = mData.getDataSetForEntry(e);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +		IBarDataSet set = mData.getDataSetForEntry(e);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarData.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +, +public class BarData extends BarLineScatterCandleBubbleData<IBarDataSet> {, +    public BarData(List<String> xVals, List<IBarDataSet> dataSets) {, +    public BarData(String[] xVals, List<IBarDataSet> dataSets) {, +    public BarData(List<String> xVals, IBarDataSet dataSet) {, +    public BarData(String[] xVals, IBarDataSet dataSet) {, +    private static List<IBarDataSet> toList(IBarDataSet dataSet) {, +        List<IBarDataSet> sets = new ArrayList<IBarDataSet>();, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +		IBarDataSet set = mData.getDataSetForEntry(e);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarData.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +, +public class BarData extends BarLineScatterCandleBubbleData<IBarDataSet> {, +    public BarData(List<String> xVals, List<IBarDataSet> dataSets) {, +    public BarData(String[] xVals, List<IBarDataSet> dataSets) {, +    public BarData(List<String> xVals, IBarDataSet dataSet) {, +    public BarData(String[] xVals, IBarDataSet dataSet) {, +    private static List<IBarDataSet> toList(IBarDataSet dataSet) {, +        List<IBarDataSet> sets = new ArrayList<IBarDataSet>();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java, +    public void calcMinMax(List<BarEntry> values, int start, int end) {, +, +        final int yValCount = values.size();, +            BarEntry e = values.get(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +		IBarDataSet set = mData.getDataSetForEntry(e);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarData.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +, +public class BarData extends BarLineScatterCandleBubbleData<IBarDataSet> {, +    public BarData(List<String> xVals, List<IBarDataSet> dataSets) {, +    public BarData(String[] xVals, List<IBarDataSet> dataSets) {, +    public BarData(List<String> xVals, IBarDataSet dataSet) {, +    public BarData(String[] xVals, IBarDataSet dataSet) {, +    private static List<IBarDataSet> toList(IBarDataSet dataSet) {, +        List<IBarDataSet> sets = new ArrayList<IBarDataSet>();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java, +    public void calcMinMax(List<BarEntry> values, int start, int end) {, +, +        final int yValCount = values.size();, +            BarEntry e = values.get(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarLineScatterCandleBubbleDataSet.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +		IBarDataSet set = mData.getDataSetForEntry(e);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarData.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +, +public class BarData extends BarLineScatterCandleBubbleData<IBarDataSet> {, +    public BarData(List<String> xVals, List<IBarDataSet> dataSets) {, +    public BarData(String[] xVals, List<IBarDataSet> dataSets) {, +    public BarData(List<String> xVals, IBarDataSet dataSet) {, +    public BarData(String[] xVals, IBarDataSet dataSet) {, +    private static List<IBarDataSet> toList(IBarDataSet dataSet) {, +        List<IBarDataSet> sets = new ArrayList<IBarDataSet>();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java, +    public void calcMinMax(List<BarEntry> values, int start, int end) {, +, +        final int yValCount = values.size();, +            BarEntry e = values.get(i);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarLineScatterCandleBubbleDataSet.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BubbleData.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBubbleDataSet;, +, +public class BubbleData extends BarLineScatterCandleBubbleData<IBubbleDataSet> {, +    public BubbleData(List<String> xVals, List<IBubbleDataSet> dataSets) {, +    public BubbleData(String[] xVals, List<IBubbleDataSet> dataSets) {, +    public BubbleData(List<String> xVals, IBubbleDataSet dataSet) {, +    public BubbleData(String[] xVals, IBubbleDataSet dataSet) {, +    private static List<IBubbleDataSet> toList(IBubbleDataSet dataSet) {, +        List<IBubbleDataSet> sets = new ArrayList<IBubbleDataSet>();, +        for (IBubbleDataSet set : mDataSets) {, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +		IBarDataSet set = mData.getDataSetForEntry(e);, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarData.java, +import com.github.mikephil.charting.interfaces.datainterfaces.datasets.IBarDataSet;, +, +public class BarData extends BarLineScatterCandleBubbleData<IBarDataSet> {, +    public BarData(List<String> xVals, List<IBarDataSet> dataSets) {, +    public BarData(String[] xVals, List<IBarDataSet> dataSets) {, +    public BarData(List<String> xVals, IBarDataSet dataSet) {, +    public BarData(String[] xVals, IBarDataSet dataSet) {, +    private static List<IBarDataSet> toList(IBarDataSet dataSet) {, +        List<IBarDataSet> sets = new ArrayList<IBarDataSet>();, +++ b/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java, +    public void calcMinMax(List<BarEntry> values, int start, int end) {, +, +        final int yValCount = values.size();]