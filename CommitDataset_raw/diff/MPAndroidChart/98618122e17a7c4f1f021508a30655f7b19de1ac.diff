[+++ b/README.md, + - Open questions on [**stackoverflow**](https://stackoverflow.com/search?q=mpandroidchart) with the `mpandroidchart` tag, + - Labels (both x- and y-axis, customizeable), + - Animations (build up animations, on both x- and y-axis), + - Limit lines (providing additional information, maximums, ...), +- <code>public ChartData getDataCurrent()</code>: Returns the <code>ChartData</code> object the chart currently displays. It contains all information concerning the displayed values such as minimum and maximum values, value counts, value sums, ..., +**Limit Lines:**, +, +Limit lines (class `LimitLine`) are (as the name might indicate) plain and simple lines that can be set for all `Line-, Bar- and ScatterData` objects. They can be used to **provide additional information** for the user. , +, +As an example, your chart might display various blood pressure measurement results the user logged with an application. In order to inform the user that a systolic blood pressure of over 140 mmHg is considered to be a health risk, you could add a `LimitLine` at 140 to provide that information., +, +```java, +, +LineData ld = new LineData(...);, +, +LimitLine ll = new LimitLine(140f);, +ll.setLineColor(Color.RED);, +ll.setLineWidth(4f);, +// .. and more styling options, +, +ld.addLimitLine(ll);, +```, +, +**Animations:**, +, +All chart types support animations that can be used to create / build up the chart in an awesome looking way. Three different kinds of animation methods exist that animate either both, or x- and y-axis separately:, +, + - `animateX(int durationMillis)`: Animates the charts values on the horizontal axis, meaning that the chart will build up within the specified time from left to right., + - `animateY(int durationMillis)`: Animates the charts values on the vertical axis, meaning that the chart will build up within the specified time from bottom to top., + - `animateXY(int xDuration, int yDuration)`: Animates both horizontal and vertical axis, resulting in a left/right bottom/top build-up., +, +```java, +mChart.animateX(3000f); // animate horizontal 3000 milliseconds, +// or:, +mChart.animateY(3000f); // animate vertical 3000 milliseconds, +// or:, +mChart.animateXY(3000f, 3000f); // animate horizontal and vertical 3000 milliseconds, +```, +, +If `animate(...)` (of any kind) is called, no further calling of `invalidate()` is necessary to refresh the chart., +, +In order to support animations below Honeycomb, this library makes use of the awesome [**nineoldandroids library**](https://github.com/JakeWharton/NineOldAndroids) developed by Jake Wharton.]