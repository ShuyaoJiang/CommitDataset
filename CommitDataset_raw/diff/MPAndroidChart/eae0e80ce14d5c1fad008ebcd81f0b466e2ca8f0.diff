[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.renderer.BarChartRenderer;, +        mRenderer = new BarChartRenderer(this, mAnimator, mViewPortHandler);, +        mXAxisRenderer = new XAxisRendererBarChart(mViewPortHandler, mXAxis, mLeftAxisTransformer,, +                this);, +    // return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) :, +    // Utils.calcTextHeight(mValuePaint,, +    // return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") *, +    // 1.5f : -Utils, +    // * returns the skew value that indicates how much the 3D effect is turned, +    // to, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.renderer.BarChartRenderer;, +        mRenderer = new BarChartRenderer(this, mAnimator, mViewPortHandler);, +        mXAxisRenderer = new XAxisRendererBarChart(mViewPortHandler, mXAxis, mLeftAxisTransformer,, +                this);, +    // return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) :, +    // Utils.calcTextHeight(mValuePaint,, +    // return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") *, +    // 1.5f : -Utils, +    // * returns the skew value that indicates how much the 3D effect is turned, +    // to, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +    protected YAxis mAxisLeft;, +    protected YAxis mAxisRight;, +    protected XAxis mXAxis;, +        mAxisLeft = new YAxis(AxisDependency.LEFT);, +        mAxisRight = new YAxis(AxisDependency.RIGHT);, +, +        mXAxis = new XAxis();, +, +        if (mDataNotSet) {, +            if (mLogEnabled), +                Log.i(LOG_TAG, "Preparing... DATA NOT SET.");, +        } else {, +            if (mLogEnabled), +                Log.i(LOG_TAG, "Preparing...");, +        }, +        mRightAxisTransformer.prepareMatrixValuePx(mViewPortHandler, mDeltaX, mDeltaY, mYChartMin);, +        mLeftAxisTransformer.prepareMatrixValuePx(mViewPortHandler, mDeltaX, mDeltaY, mYChartMin);, +            mRightAxisTransformer.prepareMatrixValuePx(mViewPortHandler, mDeltaX, mDeltaY,, +                    mYChartMin);, +            mLeftAxisTransformer.prepareMatrixValuePx(mViewPortHandler, mDeltaX, mDeltaY,, +                    mYChartMin);, +                String label = mAxisLeft.getLongestLabel();, +                yleft = ylabelwidth + mAxisRendererLeft.getXOffset() / 2f;, +                String label = mAxisRight.getLongestLabel();, +                yright = ylabelwidth + mAxisRendererRight.getXOffset() / 2f;, +        if (mLogEnabled) {, +            Log.i(LOG_TAG, "offsetLeft: " + offsetLeft + ", offsetTop: " + offsetTop, +                    + ", offsetRight: " + offsetRight + ", offsetBottom: " + offsetBottom);, +            Log.i(LOG_TAG, "Content: " + mViewPortHandler.getContentRect().toString());, +        }, +        mXAxis.mAxisLabelModulus = (int) Math, +, +        if (mLogEnabled), +            Log.i(LOG_TAG, "X-Axis modulus: " + mXAxis.mAxisLabelModulus + ", x-axis label width: ", +                    + mXAxis.mLabelWidth + ", content width: " + mViewPortHandler.contentWidth());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +import com.github.mikephil.charting.renderer.BarChartRenderer;, +        mRenderer = new BarChartRenderer(this, mAnimator, mViewPortHandler);, +        mXAxisRenderer = new XAxisRendererBarChart(mViewPortHandler, mXAxis, mLeftAxisTransformer,, +                this);, +    // return (mDrawValueAboveBar ? -Utils.convertDpToPixel(5) :, +    // Utils.calcTextHeight(mValuePaint,, +    // return (mDrawValueAboveBar ? Utils.calcTextHeight(mValuePaint, "8") *, +    // 1.5f : -Utils, +    // * returns the skew value that indicates how much the 3D effect is turned, +    // to, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +import com.github.mikephil.charting.components.XAxis;, +import com.github.mikephil.charting.components.YAxis;, +    protected YAxis mAxisLeft;, +    protected YAxis mAxisRight;, +    protected XAxis mXAxis;, +        mAxisLeft = new YAxis(AxisDependency.LEFT);, +        mAxisRight = new YAxis(AxisDependency.RIGHT);, +, +        mXAxis = new XAxis();, +, +        if (mDataNotSet) {, +            if (mLogEnabled), +                Log.i(LOG_TAG, "Preparing... DATA NOT SET.");, +        } else {, +            if (mLogEnabled), +                Log.i(LOG_TAG, "Preparing...");, +        }, +        mRightAxisTransformer.prepareMatrixValuePx(mViewPortHandler, mDeltaX, mDeltaY, mYChartMin);, +        mLeftAxisTransformer.prepareMatrixValuePx(mViewPortHandler, mDeltaX, mDeltaY, mYChartMin);, +            mRightAxisTransformer.prepareMatrixValuePx(mViewPortHandler, mDeltaX, mDeltaY,, +                    mYChartMin);, +            mLeftAxisTransformer.prepareMatrixValuePx(mViewPortHandler, mDeltaX, mDeltaY,, +                    mYChartMin);, +                String label = mAxisLeft.getLongestLabel();, +                yleft = ylabelwidth + mAxisRendererLeft.getXOffset() / 2f;, +                String label = mAxisRight.getLongestLabel();, +                yright = ylabelwidth + mAxisRendererRight.getXOffset() / 2f;, +        if (mLogEnabled) {]