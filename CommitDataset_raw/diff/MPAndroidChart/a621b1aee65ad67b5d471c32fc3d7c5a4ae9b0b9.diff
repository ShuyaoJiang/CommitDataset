[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        yl.setAxisMaxValue(300);, +        yl.setAxisMinValue(-100f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        yl.setAxisMaxValue(300);, +        yl.setAxisMinValue(-100f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            Log.i(LOG_TAG, "Preparing Value-Px Matrix, deltaLeft: " + mAxisLeft.mAxisRange, +                    + ", deltaRight: " + mAxisRight.mAxisRange);, +        mRightAxisTransformer.prepareMatrixValuePx(mDeltaX, mAxisRight.mAxisRange,, +        mLeftAxisTransformer.prepareMatrixValuePx(mDeltaX, mAxisLeft.mAxisRange,, +        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft, +                .getAxisMaxValue() : maxLeft + topSpaceLeft;, +        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight, +                .getAxisMaxValue() : maxRight + topSpaceRight;, +        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft, +                .getAxisMinValue() : minLeft - bottomSpaceLeft;, +        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight, +                .getAxisMinValue() : minRight - bottomSpaceRight;, +        mAxisLeft.mAxisRange = Math.abs(mAxisLeft.mAxisMaximum - mAxisLeft.mAxisMinimum);, +        mAxisRight.mAxisRange = Math.abs(mAxisRight.mAxisMaximum - mAxisRight.mAxisMinimum);, +        //, +            return mAxisLeft.mAxisRange;, +            return mAxisRight.mAxisRange;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        yl.setAxisMaxValue(300);, +        yl.setAxisMinValue(-100f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            Log.i(LOG_TAG, "Preparing Value-Px Matrix, deltaLeft: " + mAxisLeft.mAxisRange, +                    + ", deltaRight: " + mAxisRight.mAxisRange);, +        mRightAxisTransformer.prepareMatrixValuePx(mDeltaX, mAxisRight.mAxisRange,, +        mLeftAxisTransformer.prepareMatrixValuePx(mDeltaX, mAxisLeft.mAxisRange,, +        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft, +                .getAxisMaxValue() : maxLeft + topSpaceLeft;, +        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight, +                .getAxisMaxValue() : maxRight + topSpaceRight;, +        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft, +                .getAxisMinValue() : minLeft - bottomSpaceLeft;, +        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight, +                .getAxisMinValue() : minRight - bottomSpaceRight;, +        mAxisLeft.mAxisRange = Math.abs(mAxisLeft.mAxisMaximum - mAxisLeft.mAxisMinimum);, +        mAxisRight.mAxisRange = Math.abs(mAxisRight.mAxisMaximum - mAxisRight.mAxisMinimum);, +        //, +            return mAxisLeft.mAxisRange;, +            return mAxisRight.mAxisRange;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +    public static final String LOG_TAG = "MPAndroidChart";, +    protected boolean mLogEnabled = false;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        yl.setAxisMaxValue(300);, +        yl.setAxisMinValue(-100f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            Log.i(LOG_TAG, "Preparing Value-Px Matrix, deltaLeft: " + mAxisLeft.mAxisRange, +                    + ", deltaRight: " + mAxisRight.mAxisRange);, +        mRightAxisTransformer.prepareMatrixValuePx(mDeltaX, mAxisRight.mAxisRange,, +        mLeftAxisTransformer.prepareMatrixValuePx(mDeltaX, mAxisLeft.mAxisRange,, +        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft, +                .getAxisMaxValue() : maxLeft + topSpaceLeft;, +        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight, +                .getAxisMaxValue() : maxRight + topSpaceRight;, +        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft, +                .getAxisMinValue() : minLeft - bottomSpaceLeft;, +        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight, +                .getAxisMinValue() : minRight - bottomSpaceRight;, +        mAxisLeft.mAxisRange = Math.abs(mAxisLeft.mAxisMaximum - mAxisLeft.mAxisMinimum);, +        mAxisRight.mAxisRange = Math.abs(mAxisRight.mAxisMaximum - mAxisRight.mAxisMinimum);, +        //, +            return mAxisLeft.mAxisRange;, +            return mAxisRight.mAxisRange;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +    public static final String LOG_TAG = "MPAndroidChart";, +    protected boolean mLogEnabled = false;, +++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java, +    , +    public float mAxisRange = 0f;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java, +        yl.setAxisMaxValue(300);, +        yl.setAxisMinValue(-100f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +            Log.i(LOG_TAG, "Preparing Value-Px Matrix, deltaLeft: " + mAxisLeft.mAxisRange, +                    + ", deltaRight: " + mAxisRight.mAxisRange);, +        mRightAxisTransformer.prepareMatrixValuePx(mDeltaX, mAxisRight.mAxisRange,, +        mLeftAxisTransformer.prepareMatrixValuePx(mDeltaX, mAxisLeft.mAxisRange,, +        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft, +                .getAxisMaxValue() : maxLeft + topSpaceLeft;, +        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight, +                .getAxisMaxValue() : maxRight + topSpaceRight;, +        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft, +                .getAxisMinValue() : minLeft - bottomSpaceLeft;, +        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight, +                .getAxisMinValue() : minRight - bottomSpaceRight;, +        mAxisLeft.mAxisRange = Math.abs(mAxisLeft.mAxisMaximum - mAxisLeft.mAxisMinimum);, +        mAxisRight.mAxisRange = Math.abs(mAxisRight.mAxisMaximum - mAxisRight.mAxisMinimum);, +        //, +            return mAxisLeft.mAxisRange;, +            return mAxisRight.mAxisRange;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +    public static final String LOG_TAG = "MPAndroidChart";, +    protected boolean mLogEnabled = false;, +++ b/MPChartLib/src/com/github/mikephil/charting/components/YAxis.java]