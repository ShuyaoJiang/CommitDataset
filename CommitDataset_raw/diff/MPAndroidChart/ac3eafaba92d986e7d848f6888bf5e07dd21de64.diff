[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +        mMaxHighlightDistance = Utils.convertDpToPixel(70f);, +     * The maximum distance in screen pixels away from an entry causing it to highlight., +     */, +    protected float mMaxHighlightDistance = 0f;, +, +    @Override, +    public float getMaxHighlightDistance() {, +        return mMaxHighlightDistance;, +    }, +, +    /**, +     * Sets the maximum distance in screen dp a touch can be away from an entry to cause it to get highlighted., +     * Default: 70dp, +     *, +     * @param distDp, +     */, +    public void setMaxHighlightDistance(float distDp) {, +        mMaxHighlightDistance = Utils.convertDpToPixel(distDp);, +    }, +, +    /**, +    public boolean saveToGallery(String fileName, String subFolderPath, String fileDescription, Bitmap.CompressFormat, +            format, int quality) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +        mMaxHighlightDistance = Utils.convertDpToPixel(70f);, +     * The maximum distance in screen pixels away from an entry causing it to highlight., +     */, +    protected float mMaxHighlightDistance = 0f;, +, +    @Override, +    public float getMaxHighlightDistance() {, +        return mMaxHighlightDistance;, +    }, +, +    /**, +     * Sets the maximum distance in screen dp a touch can be away from an entry to cause it to get highlighted., +     * Default: 70dp, +     *, +     * @param distDp, +     */, +    public void setMaxHighlightDistance(float distDp) {, +        mMaxHighlightDistance = Utils.convertDpToPixel(distDp);, +    }, +, +    /**, +    public boolean saveToGallery(String fileName, String subFolderPath, String fileDescription, Bitmap.CompressFormat, +            format, int quality) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/ColorFormatter.java, +import com.github.mikephil.charting.data.DataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +    /**, +     * Returns the color to be used for the given Entry at the given index (in the entries array), +     *, +     * @param index index in the entries array, +     * @param e     the entry to color, +     * @param set   the DataSet the entry belongs to, +     * @return, +     */, +    int getColor(int index, Entry e, IDataSet set);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java, +        mMaxHighlightDistance = Utils.convertDpToPixel(70f);, +     * The maximum distance in screen pixels away from an entry causing it to highlight., +     */, +    protected float mMaxHighlightDistance = 0f;, +, +    @Override, +    public float getMaxHighlightDistance() {, +        return mMaxHighlightDistance;, +    }, +, +    /**, +     * Sets the maximum distance in screen dp a touch can be away from an entry to cause it to get highlighted., +     * Default: 70dp, +     *, +     * @param distDp, +     */, +    public void setMaxHighlightDistance(float distDp) {, +        mMaxHighlightDistance = Utils.convertDpToPixel(distDp);, +    }, +, +    /**, +    public boolean saveToGallery(String fileName, String subFolderPath, String fileDescription, Bitmap.CompressFormat, +            format, int quality) {, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/formatter/ColorFormatter.java, +import com.github.mikephil.charting.data.DataSet;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +    /**, +     * Returns the color to be used for the given Entry at the given index (in the entries array), +     *, +     * @param index index in the entries array, +     * @param e     the entry to color, +     * @param set   the DataSet the entry belongs to, +     * @return, +     */, +    int getColor(int index, Entry e, IDataSet set);, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/BarHighlighter.java, +import com.github.mikephil.charting.utils.Utils;, +, +import java.util.List;]