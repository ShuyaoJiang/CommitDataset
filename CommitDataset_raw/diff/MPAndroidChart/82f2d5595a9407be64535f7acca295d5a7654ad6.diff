[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mXAxisRenderer.renderAxisLabels(mDrawCanvas);, +        mXAxisRenderer.renderAxisLine(mDrawCanvas);, +        mAxisRendererLeft.renderAxisLabels(mDrawCanvas);, +        mAxisRendererRight.renderAxisLabels(mDrawCanvas);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mXAxisRenderer.renderAxisLabels(mDrawCanvas);, +        mXAxisRenderer.renderAxisLine(mDrawCanvas);, +        mAxisRendererLeft.renderAxisLabels(mDrawCanvas);, +        mAxisRendererRight.renderAxisLabels(mDrawCanvas);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mXAxisRenderer.renderAxisLabels(mDrawCanvas);, +        mXAxisRenderer.renderAxisLine(mDrawCanvas);, +        mAxisRendererLeft.renderAxisLabels(mDrawCanvas);, +        mAxisRendererRight.renderAxisLabels(mDrawCanvas);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +        mXAxisRenderer.renderAxisLabels(mDrawCanvas);, +        mYAxisRenderer.renderAxisLabels(mDrawCanvas);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mXAxisRenderer.renderAxisLabels(mDrawCanvas);, +        mXAxisRenderer.renderAxisLine(mDrawCanvas);, +        mAxisRendererLeft.renderAxisLabels(mDrawCanvas);, +        mAxisRendererRight.renderAxisLabels(mDrawCanvas);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +        mXAxisRenderer.renderAxisLabels(mDrawCanvas);, +        mYAxisRenderer.renderAxisLabels(mDrawCanvas);, +++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java, +    /** flag that indicates of the labels of this axis should be drawn or not */, +    protected boolean mDrawLabels = true;, +, +     * Set this to true to enable drawing the labels of this axis (this will not, +     * affect drawing the grid lines or axis lines)., +    public void setDrawLabels(boolean enabled) {, +        mDrawLabels = enabled;, +     * Returns true if drawing the labels is enabled for this axis., +    public boolean isDrawLabelsEnabled() {, +        return mDrawLabels;, +     * Returns the longest formatted label (in terms of characters), this axis, +     * contains., +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mXAxisRenderer.renderAxisLabels(mDrawCanvas);, +        mXAxisRenderer.renderAxisLine(mDrawCanvas);, +        mAxisRendererLeft.renderAxisLabels(mDrawCanvas);, +        mAxisRendererRight.renderAxisLabels(mDrawCanvas);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +        mXAxisRenderer.renderAxisLabels(mDrawCanvas);, +        mYAxisRenderer.renderAxisLabels(mDrawCanvas);, +++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java, +    /** flag that indicates of the labels of this axis should be drawn or not */, +    protected boolean mDrawLabels = true;, +, +     * Set this to true to enable drawing the labels of this axis (this will not, +     * affect drawing the grid lines or axis lines)., +    public void setDrawLabels(boolean enabled) {, +        mDrawLabels = enabled;, +     * Returns true if drawing the labels is enabled for this axis., +    public boolean isDrawLabelsEnabled() {, +        return mDrawLabels;, +     * Returns the longest formatted label (in terms of characters), this axis, +     * contains., +++ b/MPChartLib/src/com/github/mikephil/charting/components/ComponentBase.java, +    /** flag that indicates if this axis / legend is enabled or not */, +    protected boolean mEnabled = true;, +, +, +    /**, +     * Set this to true if this component should be enabled (should be drawn),, +     * false if not. If disabled, nothing of this component will be drawn., +     * Default: true, +     * , +     * @param enabled, +     */, +    public void setEnabled(boolean enabled) {, +        mEnabled = enabled;, +    }, +, +    /**, +     * Returns true if this comonent is enabled (should be drawn), false if not., +     * , +     * @return, +     */, +    public boolean isEnabled() {, +        return mEnabled;, +    }, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mXAxisRenderer.renderAxisLabels(mDrawCanvas);, +        mXAxisRenderer.renderAxisLine(mDrawCanvas);, +        mAxisRendererLeft.renderAxisLabels(mDrawCanvas);, +        mAxisRendererRight.renderAxisLabels(mDrawCanvas);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/LineChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +        mXAxisRenderer.renderAxisLabels(mDrawCanvas);, +        mYAxisRenderer.renderAxisLabels(mDrawCanvas);, +++ b/MPChartLib/src/com/github/mikephil/charting/components/AxisBase.java, +    /** flag that indicates of the labels of this axis should be drawn or not */, +    protected boolean mDrawLabels = true;]