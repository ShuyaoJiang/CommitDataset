[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        // mChart.setScaleXEnabled(true);, +        // mChart.setScaleYEnabled(true);, +        for (int i = 0; i < count; i++) {, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        // mChart.setScaleXEnabled(true);, +        // mChart.setScaleYEnabled(true);, +        for (int i = 0; i < count; i++) {, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, +        set1.setDrawFilled(true);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        // mChart.setScaleXEnabled(true);, +        // mChart.setScaleYEnabled(true);, +        for (int i = 0; i < count; i++) {, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, +        set1.setDrawFilled(true);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    private boolean mScaleXEnabled = true;, +    private boolean mScaleYEnabled = true;, +     * the chart (this does not effect dragging) on both X- and Y-Axis., +        this.mScaleXEnabled = enabled;, +        this.mScaleYEnabled = enabled;, +    public void setScaleXEnabled(boolean enabled) {, +        mScaleXEnabled = enabled;, +    }, +    , +    public void setScaleYEnabled(boolean enabled) {, +        mScaleYEnabled = enabled;, +    }, +    , +    public boolean isScaleXEnabled() {, +        return mScaleXEnabled;, +    }, +    , +    public boolean isScaleYEnabled() {, +        return mScaleYEnabled;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        // mChart.setScaleXEnabled(true);, +        // mChart.setScaleYEnabled(true);, +        for (int i = 0; i < count; i++) {, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, +        set1.setDrawFilled(true);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    private boolean mScaleXEnabled = true;, +    private boolean mScaleYEnabled = true;, +     * the chart (this does not effect dragging) on both X- and Y-Axis., +        this.mScaleXEnabled = enabled;, +        this.mScaleYEnabled = enabled;, +    public void setScaleXEnabled(boolean enabled) {, +        mScaleXEnabled = enabled;, +    }, +    , +    public void setScaleYEnabled(boolean enabled) {, +        mScaleYEnabled = enabled;, +    }, +    , +    public boolean isScaleXEnabled() {, +        return mScaleXEnabled;, +    }, +    , +    public boolean isScaleYEnabled() {, +        return mScaleYEnabled;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +, +        if (android.os.Build.VERSION.SDK_INT >= 11) {, +, +        } else {, +            Log.e(LOG_TAG,, +                    "Cannot enable/disable hardware acceleration for devices below API level 11.");, +        }, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        // mChart.setScaleXEnabled(true);, +        // mChart.setScaleYEnabled(true);, +        for (int i = 0; i < count; i++) {, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/PerformanceLineChart.java, +        set1.setDrawFilled(true);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +    private boolean mScaleXEnabled = true;, +    private boolean mScaleYEnabled = true;, +     * the chart (this does not effect dragging) on both X- and Y-Axis., +        this.mScaleXEnabled = enabled;, +        this.mScaleYEnabled = enabled;, +    public void setScaleXEnabled(boolean enabled) {, +        mScaleXEnabled = enabled;, +    }, +    , +    public void setScaleYEnabled(boolean enabled) {, +        mScaleYEnabled = enabled;, +    }, +    , +    public boolean isScaleXEnabled() {, +        return mScaleXEnabled;, +    }, +    , +    public boolean isScaleYEnabled() {]