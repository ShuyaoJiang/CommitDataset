[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        Log.i("LOWHIGH", "low: " + mChart.getLowestVisibleXIndex() + ", high: " + mChart.getHighestVisibleXIndex());, +        Log.i("MIN MAX", "xmin: " + mChart.getXChartMin() + ", xmax: " + mChart.getXChartMax() + ", ymin: " + mChart.getYChartMin() + ", ymax: " + mChart.getYChartMax());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        Log.i("LOWHIGH", "low: " + mChart.getLowestVisibleXIndex() + ", high: " + mChart.getHighestVisibleXIndex());, +        Log.i("MIN MAX", "xmin: " + mChart.getXChartMin() + ", xmax: " + mChart.getXChartMax() + ", ymin: " + mChart.getYChartMin() + ", ymax: " + mChart.getYChartMax());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float minLeft = mData.getYMin(AxisDependency.LEFT);, +        float maxLeft = mData.getYMax(AxisDependency.LEFT);, +        float minRight = mData.getYMin(AxisDependency.RIGHT);, +        float maxRight = mData.getYMax(AxisDependency.RIGHT);, +        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft);, +        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft);, +        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight.getAxisMinValue() : (minRight - bottomSpaceRight);, +        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight.getAxisMaxValue() : (maxRight + topSpaceRight);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        Log.i("LOWHIGH", "low: " + mChart.getLowestVisibleXIndex() + ", high: " + mChart.getHighestVisibleXIndex());, +        Log.i("MIN MAX", "xmin: " + mChart.getXChartMin() + ", xmax: " + mChart.getXChartMax() + ", ymin: " + mChart.getYChartMin() + ", ymax: " + mChart.getYChartMax());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float minLeft = mData.getYMin(AxisDependency.LEFT);, +        float maxLeft = mData.getYMax(AxisDependency.LEFT);, +        float minRight = mData.getYMin(AxisDependency.RIGHT);, +        float maxRight = mData.getYMax(AxisDependency.RIGHT);, +        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft);, +        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft);, +        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight.getAxisMinValue() : (minRight - bottomSpaceRight);, +        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight.getAxisMaxValue() : (maxRight + topSpaceRight);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +import com.github.mikephil.charting.utils.ColorTemplate;, +     * if true, the hole will see-through to the inner ends of the slices, +     */, +    private boolean mDrawHoleTransparent = true;, +, +    /**, +        if (color == ColorTemplate.COLOR_NONE || color == ColorTemplate.COLOR_SKIP) {, +            color = 0; // Transparent, +        }, +     * Set the hole in the center of the PieChart transparent., +        mDrawHoleTransparent = enable;, +        return mDrawHoleTransparent;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        Log.i("LOWHIGH", "low: " + mChart.getLowestVisibleXIndex() + ", high: " + mChart.getHighestVisibleXIndex());, +        Log.i("MIN MAX", "xmin: " + mChart.getXChartMin() + ", xmax: " + mChart.getXChartMax() + ", ymin: " + mChart.getYChartMin() + ", ymax: " + mChart.getYChartMax());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float minLeft = mData.getYMin(AxisDependency.LEFT);, +        float maxLeft = mData.getYMax(AxisDependency.LEFT);, +        float minRight = mData.getYMin(AxisDependency.RIGHT);, +        float maxRight = mData.getYMax(AxisDependency.RIGHT);, +        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft);, +        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft);, +        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight.getAxisMinValue() : (minRight - bottomSpaceRight);, +        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight.getAxisMaxValue() : (maxRight + topSpaceRight);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +import com.github.mikephil.charting.utils.ColorTemplate;, +     * if true, the hole will see-through to the inner ends of the slices, +     */, +    private boolean mDrawHoleTransparent = true;, +, +    /**, +        if (color == ColorTemplate.COLOR_NONE || color == ColorTemplate.COLOR_SKIP) {, +            color = 0; // Transparent, +        }, +     * Set the hole in the center of the PieChart transparent., +        mDrawHoleTransparent = enable;, +        return mDrawHoleTransparent;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +        float minLeft = mData.getYMin(AxisDependency.LEFT);, +        float maxLeft = mData.getYMax(AxisDependency.LEFT);, +        mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft);, +        mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity1.java, +        Log.i("LOWHIGH", "low: " + mChart.getLowestVisibleXIndex() + ", high: " + mChart.getHighestVisibleXIndex());, +        Log.i("MIN MAX", "xmin: " + mChart.getXChartMin() + ", xmax: " + mChart.getXChartMax() + ", ymin: " + mChart.getYChartMin() + ", ymax: " + mChart.getYChartMax());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float minLeft = mData.getYMin(AxisDependency.LEFT);, +        float maxLeft = mData.getYMax(AxisDependency.LEFT);, +        float minRight = mData.getYMin(AxisDependency.RIGHT);, +        float maxRight = mData.getYMax(AxisDependency.RIGHT);, +        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()) ? mAxisLeft.getAxisMinValue() : (minLeft - bottomSpaceLeft);, +        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()) ? mAxisLeft.getAxisMaxValue() : (maxLeft + topSpaceLeft);, +        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()) ? mAxisRight.getAxisMinValue() : (minRight - bottomSpaceRight);, +        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()) ? mAxisRight.getAxisMaxValue() : (maxRight + topSpaceRight);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +import com.github.mikephil.charting.utils.ColorTemplate;, +     * if true, the hole will see-through to the inner ends of the slices, +     */, +    private boolean mDrawHoleTransparent = true;, +, +    /**, +        if (color == ColorTemplate.COLOR_NONE || color == ColorTemplate.COLOR_SKIP) {, +            color = 0; // Transparent, +        }, +     * Set the hole in the center of the PieChart transparent., +        mDrawHoleTransparent = enable;, +        return mDrawHoleTransparent;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +        float minLeft = mData.getYMin(AxisDependency.LEFT);, +        float maxLeft = mData.getYMax(AxisDependency.LEFT);, +        mYAxis.mAxisMinimum = !Float.isNaN(mYAxis.getAxisMinValue()) ? mYAxis.getAxisMinValue() : (minLeft - bottomSpaceLeft);, +        mYAxis.mAxisMaximum = !Float.isNaN(mYAxis.getAxisMaxValue()) ? mYAxis.getAxisMaxValue() : (maxLeft + topSpaceLeft);]