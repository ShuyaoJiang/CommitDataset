[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +        Runnable job = ZoomJob.getInstance(mViewPortHandler, scaleX, scaleY, xValue, yValue, getTransformer(axis), axis, this);, +            Runnable job = AnimatedZoomJob.getInstance(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis, +, +        Runnable job = MoveViewJob.getInstance(mViewPortHandler, xValue, 0f,, +        Runnable job = MoveViewJob.getInstance(mViewPortHandler, xValue, yValue + yInView / 2f,, +            Runnable job = AnimatedMoveViewJob.getInstance(mViewPortHandler, xValue, yValue + yInView / 2f,, +        Runnable job = MoveViewJob.getInstance(mViewPortHandler, 0f, yValue + valsInView / 2f,, +        Runnable job = MoveViewJob.getInstance(mViewPortHandler,, +            Runnable job = AnimatedMoveViewJob.getInstance(mViewPortHandler,, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +        Runnable job = ZoomJob.getInstance(mViewPortHandler, scaleX, scaleY, xValue, yValue, getTransformer(axis), axis, this);, +            Runnable job = AnimatedZoomJob.getInstance(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis, +, +        Runnable job = MoveViewJob.getInstance(mViewPortHandler, xValue, 0f,, +        Runnable job = MoveViewJob.getInstance(mViewPortHandler, xValue, yValue + yInView / 2f,, +            Runnable job = AnimatedMoveViewJob.getInstance(mViewPortHandler, xValue, yValue + yInView / 2f,, +        Runnable job = MoveViewJob.getInstance(mViewPortHandler, 0f, yValue + valsInView / 2f,, +        Runnable job = MoveViewJob.getInstance(mViewPortHandler,, +            Runnable job = AnimatedMoveViewJob.getInstance(mViewPortHandler,, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedMoveViewJob.java, +import com.github.mikephil.charting.utils.ObjectPool;, +@SuppressLint("NewApi"), +    private static ObjectPool<AnimatedMoveViewJob> pool;, +, +    static {, +        pool = ObjectPool.create(4, new AnimatedMoveViewJob(null,0,0,null,null,0,0,0));, +        pool.setReplenishPercentage(0.5f);, +    }, +, +    public static AnimatedMoveViewJob getInstance(ViewPortHandler viewPortHandler, float xValue, float yValue, Transformer trans, View v, float xOrigin, float yOrigin, long duration){, +        AnimatedMoveViewJob result = pool.get();, +        result.mViewPortHandler = viewPortHandler;, +        result.xValue = xValue;, +        result.yValue = yValue;, +        result.mTrans = trans;, +        result.view = v;, +        result.xOrigin = xOrigin;, +        result.yOrigin = yOrigin;, +        result.resetAnimator();, +        result.animator.setDuration(duration);, +        return result;, +    }, +, +    public static void recycleInstance(AnimatedMoveViewJob instance){, +        pool.recycle(instance);, +    }, +, +, +, +    public void recycleSelf(){, +        recycleInstance(this);, +    }, +, +    @Override, +    protected ObjectPool.Poolable instantiate() {, +        return new AnimatedMoveViewJob(null,0,0,null,null,0,0,0);, +    }, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java, +        Runnable job = ZoomJob.getInstance(mViewPortHandler, scaleX, scaleY, xValue, yValue, getTransformer(axis), axis, this);, +            Runnable job = AnimatedZoomJob.getInstance(mViewPortHandler, this, getTransformer(axis), getAxis(axis), mXAxis, +, +        Runnable job = MoveViewJob.getInstance(mViewPortHandler, xValue, 0f,, +        Runnable job = MoveViewJob.getInstance(mViewPortHandler, xValue, yValue + yInView / 2f,, +            Runnable job = AnimatedMoveViewJob.getInstance(mViewPortHandler, xValue, yValue + yInView / 2f,, +        Runnable job = MoveViewJob.getInstance(mViewPortHandler, 0f, yValue + valsInView / 2f,, +        Runnable job = MoveViewJob.getInstance(mViewPortHandler,, +            Runnable job = AnimatedMoveViewJob.getInstance(mViewPortHandler,, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/jobs/AnimatedMoveViewJob.java, +import com.github.mikephil.charting.utils.ObjectPool;, +@SuppressLint("NewApi"), +    private static ObjectPool<AnimatedMoveViewJob> pool;, +, +    static {, +        pool = ObjectPool.create(4, new AnimatedMoveViewJob(null,0,0,null,null,0,0,0));, +        pool.setReplenishPercentage(0.5f);, +    }, +, +    public static AnimatedMoveViewJob getInstance(ViewPortHandler viewPortHandler, float xValue, float yValue, Transformer trans, View v, float xOrigin, float yOrigin, long duration){, +        AnimatedMoveViewJob result = pool.get();, +        result.mViewPortHandler = viewPortHandler;, +        result.xValue = xValue;, +        result.yValue = yValue;, +        result.mTrans = trans;, +        result.view = v;, +        result.xOrigin = xOrigin;, +        result.yOrigin = yOrigin;, +        result.resetAnimator();, +        result.animator.setDuration(duration);, +        return result;, +    }, +, +    public static void recycleInstance(AnimatedMoveViewJob instance){, +        pool.recycle(instance);, +    }, +, +, +, +    public void recycleSelf(){, +        recycleInstance(this);]