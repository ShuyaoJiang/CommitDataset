[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, +        AxisValueFormatter custom = new MyAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, +        AxisValueFormatter custom = new MyAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, +        leftAxis.setValueFormatter(new MyAxisValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, +        AxisValueFormatter custom = new MyAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, +        leftAxis.setValueFormatter(new MyAxisValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +    private class CustomFormatter implements ValueFormatter, AxisValueFormatter {, +        public String getFormattedValue(float value, AxisBase axis) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, +        AxisValueFormatter custom = new MyAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, +        leftAxis.setValueFormatter(new MyAxisValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +    private class CustomFormatter implements ValueFormatter, AxisValueFormatter {, +        public String getFormattedValue(float value, AxisBase axis) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MonthXAxisFormatter.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +public class MonthXAxisFormatter implements AxisValueFormatter {, +    public String getFormattedValue(float value, AxisBase axis) {, +        float percent = value / axis.mAxisRange;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, +        AxisValueFormatter custom = new MyAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, +        leftAxis.setValueFormatter(new MyAxisValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +    private class CustomFormatter implements ValueFormatter, AxisValueFormatter {, +        public String getFormattedValue(float value, AxisBase axis) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MonthXAxisFormatter.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +public class MonthXAxisFormatter implements AxisValueFormatter {, +    public String getFormattedValue(float value, AxisBase axis) {, +        float percent = value / axis.mAxisRange;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MyAxisValueFormatter.java, +package com.xxmassdeveloper.mpchartexample.custom;, +, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +, +import java.text.DecimalFormat;, +, +public class MyAxisValueFormatter implements AxisValueFormatter {, +, +    private DecimalFormat mFormat;, +, +    public MyAxisValueFormatter() {, +        mFormat = new DecimalFormat("###,###,###,##0.0");, +    }, +, +    @Override, +    public String getFormattedValue(float value, AxisBase axis) {, +        return mFormat.format(value) + " $";, +    }, +, +    @Override, +    public int getDecimalDigits() {, +        return 1;, +    }, +}, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivity.java, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, +        AxisValueFormatter custom = new MyAxisValueFormatter();, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivity.java, +import com.xxmassdeveloper.mpchartexample.custom.MyAxisValueFormatter;, +        leftAxis.setValueFormatter(new MyAxisValueFormatter());, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/StackedBarActivityNegative.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;, +    private class CustomFormatter implements ValueFormatter, AxisValueFormatter {, +        public String getFormattedValue(float value, AxisBase axis) {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/custom/MonthXAxisFormatter.java, +import com.github.mikephil.charting.components.AxisBase;, +import com.github.mikephil.charting.formatter.AxisValueFormatter;]