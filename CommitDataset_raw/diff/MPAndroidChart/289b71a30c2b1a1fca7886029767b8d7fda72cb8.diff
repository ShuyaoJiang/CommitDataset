[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        , +        // create a custom MarkerView (extend MarkerView) and specify the layout, +        // to use for it, +        MyMarkerView mv = new MyMarkerView(this, R.layout.custom_marker_view);, +, +        // define an offset to change the original position of the marker, +        // (optional), +        mv.setOffsets(-mv.getMeasuredWidth() / 2, -mv.getMeasuredHeight());, +, +        // set the marker to the chart, +        mChart.setMarkerView(mv);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        , +        // create a custom MarkerView (extend MarkerView) and specify the layout, +        // to use for it, +        MyMarkerView mv = new MyMarkerView(this, R.layout.custom_marker_view);, +, +        // define an offset to change the original position of the marker, +        // (optional), +        mv.setOffsets(-mv.getMeasuredWidth() / 2, -mv.getMeasuredHeight());, +, +        // set the marker to the chart, +        mChart.setMarkerView(mv);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +        // the space between bar-groups, +        float space = bd.getGroupSpace();, +, +                float x = e.getXIndex() + j * (setCount - 1) + i + space * j + space / 2f;, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        , +        // create a custom MarkerView (extend MarkerView) and specify the layout, +        // to use for it, +        MyMarkerView mv = new MyMarkerView(this, R.layout.custom_marker_view);, +, +        // define an offset to change the original position of the marker, +        // (optional), +        mv.setOffsets(-mv.getMeasuredWidth() / 2, -mv.getMeasuredHeight());, +, +        // set the marker to the chart, +        mChart.setMarkerView(mv);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +        // the space between bar-groups, +        float space = bd.getGroupSpace();, +, +                float x = e.getXIndex() + j * (setCount - 1) + i + space * j + space / 2f;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +        if (this instanceof CandleStickChart), +        else if(this instanceof BarChart) { , +            , +            BarData bd = (BarData) mCurrentData;, +            float space = bd.getGroupSpace();, +            float j = mCurrentData.getDataSetByIndex(dataSetIndex).getEntryPosition(e);, +            , +            float x = (j * (mCurrentData.getDataSetCount() - 1)) + dataSetIndex + space * j + space / 2f + 0.5f;, +            , +            xPos += x; , +        }, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/BarChartActivityMultiDataset.java, +        , +        // create a custom MarkerView (extend MarkerView) and specify the layout, +        // to use for it, +        MyMarkerView mv = new MyMarkerView(this, R.layout.custom_marker_view);, +, +        // define an offset to change the original position of the marker, +        // (optional), +        mv.setOffsets(-mv.getMeasuredWidth() / 2, -mv.getMeasuredHeight());, +, +        // set the marker to the chart, +        mChart.setMarkerView(mv);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarChart.java, +        // the space between bar-groups, +        float space = bd.getGroupSpace();, +, +                float x = e.getXIndex() + j * (setCount - 1) + i + space * j + space / 2f;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/Chart.java, +        if (this instanceof CandleStickChart), +        else if(this instanceof BarChart) { , +            , +            BarData bd = (BarData) mCurrentData;, +            float space = bd.getGroupSpace();, +            float j = mCurrentData.getDataSetByIndex(dataSetIndex).getEntryPosition(e);, +            , +            float x = (j * (mCurrentData.getDataSetCount() - 1)) + dataSetIndex + space * j + space / 2f + 0.5f;, +            , +            xPos += x; , +        }, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/DataSet.java, +    /**, +     * Returns the position of the provided entry in the DataSets Entry array. Returns -1 if doesnt exist., +     * @param e, +     * @return, +     */, +    public int getEntryPosition(Entry e) {, +        , +        for(int i = 0; i < mYVals.size(); i++) {, +            if(e.equalTo(mYVals.get(i))) return i;, +        }]