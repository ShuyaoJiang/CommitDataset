[+++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +import android.graphics.Canvas;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +, +    /**, +     * draws all MarkerViews on the highlighted positions, +     */, +    protected void drawMarkers(Canvas canvas) {, +, +        // if there is no marker view or drawing marker is disabled, +        if (mMarker == null || !isDrawMarkersEnabled() || !valuesToHighlight()), +            return;, +, +        for (int i = 0; i < mIndicesToHighlight.length; i++) {, +, +            Highlight highlight = mIndicesToHighlight[i];, +, +            IDataSet set = mData.getDataSetByHighlight(highlight);, +, +            Entry e = mData.getEntryForHighlight(highlight);, +            if (e == null), +                continue;, +, +            int entryIndex = set.getEntryIndex(e);, +, +            // make sure entry not null, +            if (entryIndex > set.getEntryCount() * mAnimator.getPhaseX()), +                continue;, +, +            float[] pos = getMarkerPosition(highlight);, +, +            // check bounds, +            if (!mViewPortHandler.isInBounds(pos[0], pos[1])), +                continue;, +, +            // callbacks to update the content, +            mMarker.refreshContent(e, highlight);, +, +            // draw the marker, +            mMarker.draw(canvas, pos[0], pos[1]);, +        }, +    }, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java, +import android.graphics.Canvas;, +import com.github.mikephil.charting.data.Entry;, +import com.github.mikephil.charting.interfaces.datasets.IDataSet;, +, +    /**, +     * draws all MarkerViews on the highlighted positions, +     */, +    protected void drawMarkers(Canvas canvas) {, +, +        // if there is no marker view or drawing marker is disabled, +        if (mMarker == null || !isDrawMarkersEnabled() || !valuesToHighlight()), +            return;, +, +        for (int i = 0; i < mIndicesToHighlight.length; i++) {, +, +            Highlight highlight = mIndicesToHighlight[i];, +, +            IDataSet set = mData.getDataSetByHighlight(highlight);, +, +            Entry e = mData.getEntryForHighlight(highlight);, +            if (e == null), +                continue;, +, +            int entryIndex = set.getEntryIndex(e);, +, +            // make sure entry not null, +            if (entryIndex > set.getEntryCount() * mAnimator.getPhaseX()), +                continue;, +, +            float[] pos = getMarkerPosition(highlight);, +, +            // check bounds, +            if (!mViewPortHandler.isInBounds(pos[0], pos[1])), +                continue;, +, +            // callbacks to update the content, +            mMarker.refreshContent(e, highlight);, +, +            // draw the marker, +            mMarker.draw(canvas, pos[0], pos[1]);, +        }, +    }, +, +++ b/MPChartLib/src/main/java/com/github/mikephil/charting/data/CombinedData.java, +        if (highlight.getDataIndex() >= getAllData().size()), +        ChartData data = getDataByIndex(highlight.getDataIndex());, +, +, +    /**, +     * Get dataset for highlight, +     *, +     * @param highlight current highlight, +     * @return dataset related to highlight, +     */, +    public IBarLineScatterCandleBubbleDataSet<? extends Entry> getDataSetByHighlight(Highlight highlight) {]