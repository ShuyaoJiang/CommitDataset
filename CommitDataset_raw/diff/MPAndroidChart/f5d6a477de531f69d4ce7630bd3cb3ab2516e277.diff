[+++ b/MPChartLib/src/com/github/mikephil/charting/buffer/ScatterBuffer.java, +    protected void addForm(float x, float y) {, +            addForm(e.getXIndex(), e.getVal() * phaseY);, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/ScatterBuffer.java, +    protected void addForm(float x, float y) {, +            addForm(e.getXIndex(), e.getVal() * phaseY);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mListener = new BarLineChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>>>(, +                this, mViewPortHandler.getMatrixTouch());, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/ScatterBuffer.java, +    protected void addForm(float x, float y) {, +            addForm(e.getXIndex(), e.getVal() * phaseY);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mListener = new BarLineChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>>>(, +                this, mViewPortHandler.getMatrixTouch());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/ScatterBuffer.java, +    protected void addForm(float x, float y) {, +            addForm(e.getXIndex(), e.getVal() * phaseY);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mListener = new BarLineChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>>>(, +                this, mViewPortHandler.getMatrixTouch());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +     * @param entry, +, +    /**, +     * Checks if this data object contains the specified Entry. Returns true if, +     * so, false if not. NOTE: Performance is pretty bad on this one, do not, +     * over-use in performance critical situations., +     * , +     * @param e, +     * @return, +     */, +    public boolean contains(Entry e) {, +, +        for (T set : mDataSets) {, +            if (set.contains(e)), +                return true;, +        }, +, +        return false;, +    }, +, +    /**, +     * Checks if this data object contains the specified DataSet. Returns true, +     * if so, false if not., +     * , +     * @param dataSet, +     * @return, +     */, +    public boolean contains(T dataSet) {, +, +        for (T set : mDataSets) {, +            if (set.equals(dataSet)), +                return true;, +        }, +, +        return false;, +    }, +++ b/MPChartLib/src/com/github/mikephil/charting/buffer/ScatterBuffer.java, +    protected void addForm(float x, float y) {, +            addForm(e.getXIndex(), e.getVal() * phaseY);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        mListener = new BarLineChartTouchListener<BarLineChartBase<? extends BarLineScatterCandleData<? extends BarLineScatterCandleDataSet<? extends Entry>>>>(, +                this, mViewPortHandler.getMatrixTouch());, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/RadarChart.java, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +     * @param entry, +, +    /**, +     * Checks if this data object contains the specified Entry. Returns true if, +     * so, false if not. NOTE: Performance is pretty bad on this one, do not, +     * over-use in performance critical situations., +     * , +     * @param e, +     * @return, +     */, +    public boolean contains(Entry e) {, +, +        for (T set : mDataSets) {, +            if (set.contains(e)), +                return true;, +        }, +, +        return false;, +    }, +, +    /**, +     * Checks if this data object contains the specified DataSet. Returns true, +     * if so, false if not., +     * , +     * @param dataSet, +     * @return, +     */, +    public boolean contains(T dataSet) {, +, +        for (T set : mDataSets) {, +            if (set.equals(dataSet)), +                return true;]