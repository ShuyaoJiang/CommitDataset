[+++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float minLeft = !Float.isNaN(mAxisLeft.getAxisMinValue()), +                ? mAxisLeft.getAxisMinValue(), +                : mData.getYMin(AxisDependency.LEFT);, +        float maxLeft = !Float.isNaN(mAxisLeft.getAxisMaxValue()), +                ? mAxisLeft.getAxisMaxValue(), +                : mData.getYMax(AxisDependency.LEFT);, +        float minRight = !Float.isNaN(mAxisRight.getAxisMinValue()), +                ? mAxisRight.getAxisMinValue(), +                : mData.getYMin(AxisDependency.RIGHT);, +        float maxRight = !Float.isNaN(mAxisRight.getAxisMaxValue()), +                ? mAxisRight.getAxisMaxValue(), +                : mData.getYMax(AxisDependency.RIGHT);, +        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()), +                ? mAxisLeft.getAxisMinValue(), +                : (minLeft - bottomSpaceLeft);, +        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()), +                ? mAxisLeft.getAxisMaxValue(), +                : (maxLeft + topSpaceLeft);, +        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()), +                ? mAxisRight.getAxisMinValue(), +                : (minRight - bottomSpaceRight);, +        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()), +                ? mAxisRight.getAxisMaxValue(), +                : (maxRight + topSpaceRight);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float minLeft = !Float.isNaN(mAxisLeft.getAxisMinValue()), +                ? mAxisLeft.getAxisMinValue(), +                : mData.getYMin(AxisDependency.LEFT);, +        float maxLeft = !Float.isNaN(mAxisLeft.getAxisMaxValue()), +                ? mAxisLeft.getAxisMaxValue(), +                : mData.getYMax(AxisDependency.LEFT);, +        float minRight = !Float.isNaN(mAxisRight.getAxisMinValue()), +                ? mAxisRight.getAxisMinValue(), +                : mData.getYMin(AxisDependency.RIGHT);, +        float maxRight = !Float.isNaN(mAxisRight.getAxisMaxValue()), +                ? mAxisRight.getAxisMaxValue(), +                : mData.getYMax(AxisDependency.RIGHT);, +        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()), +                ? mAxisLeft.getAxisMinValue(), +                : (minLeft - bottomSpaceLeft);, +        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()), +                ? mAxisLeft.getAxisMaxValue(), +                : (maxLeft + topSpaceLeft);, +        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()), +                ? mAxisRight.getAxisMinValue(), +                : (minRight - bottomSpaceRight);, +        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()), +                ? mAxisRight.getAxisMaxValue(), +                : (maxRight + topSpaceRight);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +        ((PieChartRenderer) mRenderer).getPaintHole().setXfermode(null);, +     * Set the hole in the center of the PieChart transparent. Thank you, code, +     * provided by:, +     *, +     * @param enable, +     * @link https://github.com/tbarthel-fr, +        if (enable) {, +            ((PieChartRenderer) mRenderer).getPaintHole().setColor(0xFFFFFFFF);, +            ((PieChartRenderer) mRenderer).getPaintHole().setXfermode(, +                    new PorterDuffXfermode(PorterDuff.Mode.CLEAR));, +        } else {, +            ((PieChartRenderer) mRenderer).getPaintHole().setXfermode(null);, +        }, +        return ((PieChartRenderer) mRenderer).getPaintHole().getXfermode() != null;, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +        float minLeft = !Float.isNaN(mAxisLeft.getAxisMinValue()), +                ? mAxisLeft.getAxisMinValue(), +                : mData.getYMin(AxisDependency.LEFT);, +        float maxLeft = !Float.isNaN(mAxisLeft.getAxisMaxValue()), +                ? mAxisLeft.getAxisMaxValue(), +                : mData.getYMax(AxisDependency.LEFT);, +        float minRight = !Float.isNaN(mAxisRight.getAxisMinValue()), +                ? mAxisRight.getAxisMinValue(), +                : mData.getYMin(AxisDependency.RIGHT);, +        float maxRight = !Float.isNaN(mAxisRight.getAxisMaxValue()), +                ? mAxisRight.getAxisMaxValue(), +                : mData.getYMax(AxisDependency.RIGHT);, +        mAxisLeft.mAxisMinimum = !Float.isNaN(mAxisLeft.getAxisMinValue()), +                ? mAxisLeft.getAxisMinValue(), +                : (minLeft - bottomSpaceLeft);, +        mAxisLeft.mAxisMaximum = !Float.isNaN(mAxisLeft.getAxisMaxValue()), +                ? mAxisLeft.getAxisMaxValue(), +                : (maxLeft + topSpaceLeft);, +        mAxisRight.mAxisMinimum = !Float.isNaN(mAxisRight.getAxisMinValue()), +                ? mAxisRight.getAxisMinValue(), +                : (minRight - bottomSpaceRight);, +        mAxisRight.mAxisMaximum = !Float.isNaN(mAxisRight.getAxisMaxValue()), +                ? mAxisRight.getAxisMaxValue(), +                : (maxRight + topSpaceRight);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java, +        ((PieChartRenderer) mRenderer).getPaintHole().setXfermode(null);, +     * Set the hole in the center of the PieChart transparent. Thank you, code, +     * provided by:, +     *, +     * @param enable, +     * @link https://github.com/tbarthel-fr, +        if (enable) {, +            ((PieChartRenderer) mRenderer).getPaintHole().setColor(0xFFFFFFFF);, +            ((PieChartRenderer) mRenderer).getPaintHole().setXfermode(]