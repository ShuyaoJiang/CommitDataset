[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +//        mChart.setHighlightEnabled(false);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/HorizontalBarChartActivity.java, +//        mChart.setHighlightEnabled(false);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/HorizontalBarChart.java, +import com.github.mikephil.charting.utils.Highlight;, +    , +    /**, +     * Returns the Highlight object (contains x-index and DataSet index) of the, +     * selected value at the given touch point inside the BarChart., +     * , +     * @param x, +     * @param y, +     * @return, +     */, +    @Override, +    public Highlight getHighlightByTouchPoint(float x, float y) {, +, +        if (mDataNotSet || mData == null) {, +            Log.e(LOG_TAG, "Can't select by touch. No data set.");, +            return null;, +        }, +, +        // create an array of the touch-point, +        float[] pts = new float[2];, +        pts[0] = x;, +        pts[1] = y;, +, +        mLeftAxisTransformer.pixelsToValue(pts);, +, +        // for barchart, we only need x-val, +        double yTouchVal = pts[1];, +        double base = yTouchVal;, +, +        if (yTouchVal < mXChartMin || yTouchVal > mXChartMax), +            return null;, +, +        int setCount = mData.getDataSetCount();, +        int valCount = mData.getXValCount();, +, +        if (setCount <= 1) {, +            return new Highlight((int) Math.round(base), 0);, +        }, +, +        int steps = (int) ((float) base / ((float) setCount + mData.getGroupSpace()));, +, +        float groupSpaceSum = mData.getGroupSpace() * (float) steps;, +, +        float baseNoSpace = (float) base - groupSpaceSum;, +, +        if (mLogEnabled), +            Log.i(LOG_TAG, "base: " + base + ", steps: " + steps + ", groupSpaceSum: ", +                    + groupSpaceSum, +                    + ", baseNoSpace: " + baseNoSpace);, +, +        int dataSetIndex = (int) baseNoSpace % setCount;, +        int xIndex = (int) baseNoSpace / setCount;, +, +        if (mLogEnabled), +            Log.i(LOG_TAG, "xIndex: " + xIndex + ", dataSet: " + dataSetIndex);, +, +        // check bounds, +        if (xIndex < 0) {, +            xIndex = 0;, +            dataSetIndex = 0;, +        } else if (xIndex >= valCount) {, +            xIndex = valCount - 1;, +            dataSetIndex = setCount - 1;, +        }, +, +        // check bounds, +        if (dataSetIndex < 0), +            dataSetIndex = 0;, +        else if (dataSetIndex >= setCount), +            dataSetIndex = setCount - 1;, +, +        return new Highlight(xIndex, dataSetIndex);, +    }]