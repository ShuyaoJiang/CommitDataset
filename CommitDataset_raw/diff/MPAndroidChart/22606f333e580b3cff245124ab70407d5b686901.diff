[+++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +        xLabels.setSpaceBetweenLabels(2);, +        mChart.setDrawYLabels(true);, +        mSeekBarX.setProgress(30);, +            float val = (float) (Math.sin(i) * mult) + 400f;, +            boolean even = i % 2 == 0;, +, +            yVals1.add(new CandleEntry(i, even ? val + 10 : val - 10, even ? val - 10 : val + 10,, +                    even ? val + 5 : val - 5, even ? val - 5 : val + 5));, +            xVals.add("" + (i + 1));, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +        xLabels.setSpaceBetweenLabels(2);, +        mChart.setDrawYLabels(true);, +        mSeekBarX.setProgress(30);, +            float val = (float) (Math.sin(i) * mult) + 400f;, +            boolean even = i % 2 == 0;, +, +            yVals1.add(new CandleEntry(i, even ? val + 10 : val - 10, even ? val - 10 : val + 10,, +                    even ? val + 5 : val - 5, even ? val - 5 : val + 5));, +            xVals.add("" + (i + 1));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +                .ceil((mCurrentData.getXValCount() * mXLabels.mLabelWidth), +        int max = (int) Math.round(mCurrentData.getXValAverageLength() + mXLabels.getSpaceBetweenLabels());, +, +        for (int i = 0; i < max; i++) {, +        mXLabels.mLabelWidth = Utils.calcTextWidth(mXLabelPaint, a.toString());, +        mXLabels.mLabelHeight = Utils.calcTextWidth(mXLabelPaint, "Q");, +            drawXLabels(getHeight() - mOffsetBottom + mXLabels.mLabelHeight + yoffset * 1.5f);, +            drawXLabels(getHeight() - mOffsetBottom + mXLabels.mLabelHeight + yoffset * 1.6f);, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +        xLabels.setSpaceBetweenLabels(2);, +        mChart.setDrawYLabels(true);, +        mSeekBarX.setProgress(30);, +            float val = (float) (Math.sin(i) * mult) + 400f;, +            boolean even = i % 2 == 0;, +, +            yVals1.add(new CandleEntry(i, even ? val + 10 : val - 10, even ? val - 10 : val + 10,, +                    even ? val + 5 : val - 5, even ? val - 5 : val + 5));, +            xVals.add("" + (i + 1));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +                .ceil((mCurrentData.getXValCount() * mXLabels.mLabelWidth), +        int max = (int) Math.round(mCurrentData.getXValAverageLength() + mXLabels.getSpaceBetweenLabels());, +, +        for (int i = 0; i < max; i++) {, +        mXLabels.mLabelWidth = Utils.calcTextWidth(mXLabelPaint, a.toString());, +        mXLabels.mLabelHeight = Utils.calcTextWidth(mXLabelPaint, "Q");, +            drawXLabels(getHeight() - mOffsetBottom + mXLabels.mLabelHeight + yoffset * 1.5f);, +            drawXLabels(getHeight() - mOffsetBottom + mXLabels.mLabelHeight + yoffset * 1.6f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java, +                if (open > close), +                    mRenderPaint.setStyle(Paint.Style.FILL);, +                else, +                    mRenderPaint.setStyle(Paint.Style.STROKE);, +, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +        xLabels.setSpaceBetweenLabels(2);, +        mChart.setDrawYLabels(true);, +        mSeekBarX.setProgress(30);, +            float val = (float) (Math.sin(i) * mult) + 400f;, +            boolean even = i % 2 == 0;, +, +            yVals1.add(new CandleEntry(i, even ? val + 10 : val - 10, even ? val - 10 : val + 10,, +                    even ? val + 5 : val - 5, even ? val - 5 : val + 5));, +            xVals.add("" + (i + 1));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +                .ceil((mCurrentData.getXValCount() * mXLabels.mLabelWidth), +        int max = (int) Math.round(mCurrentData.getXValAverageLength() + mXLabels.getSpaceBetweenLabels());, +, +        for (int i = 0; i < max; i++) {, +        mXLabels.mLabelWidth = Utils.calcTextWidth(mXLabelPaint, a.toString());, +        mXLabels.mLabelHeight = Utils.calcTextWidth(mXLabelPaint, "Q");, +            drawXLabels(getHeight() - mOffsetBottom + mXLabels.mLabelHeight + yoffset * 1.5f);, +            drawXLabels(getHeight() - mOffsetBottom + mXLabels.mLabelHeight + yoffset * 1.6f);, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/CandleStickChart.java, +                if (open > close), +                    mRenderPaint.setStyle(Paint.Style.FILL);, +                else, +                    mRenderPaint.setStyle(Paint.Style.STROKE);, +, +++ b/MPChartLib/src/com/github/mikephil/charting/data/ChartData.java, +    private float mXValAverageLength = 0;, +        float sum = 0f;, +        mXValAverageLength = sum / (float) mXVals.size();, +    public float getXValAverageLength() {, +++ b/MPChartExample/src/com/xxmassdeveloper/mpchartexample/CandleStickChartActivity.java, +        xLabels.setSpaceBetweenLabels(2);, +        mChart.setDrawYLabels(true);, +        mSeekBarX.setProgress(30);, +            float val = (float) (Math.sin(i) * mult) + 400f;, +            boolean even = i % 2 == 0;, +, +            yVals1.add(new CandleEntry(i, even ? val + 10 : val - 10, even ? val - 10 : val + 10,, +                    even ? val + 5 : val - 5, even ? val - 5 : val + 5));, +            xVals.add("" + (i + 1));, +++ b/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java, +                .ceil((mCurrentData.getXValCount() * mXLabels.mLabelWidth), +        int max = (int) Math.round(mCurrentData.getXValAverageLength() + mXLabels.getSpaceBetweenLabels());, +, +        for (int i = 0; i < max; i++) {, +        mXLabels.mLabelWidth = Utils.calcTextWidth(mXLabelPaint, a.toString());]