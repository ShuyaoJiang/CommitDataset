[+++ b/EventBus/src/de/greenrobot/event/EventBus.java, +import android.os.HandlerThread;, +    /** Used for naming the thread. */, +    private static int backgroundPosterThreadNr;, +, +        MainThread, BackgroundThread, +    private volatile HandlerThread backgroundPosterHandlerThread;, +    private volatile PostViaHandler backgroundThreadPoster;, +    private List<Method> findSubscriberMethods(Class<?> subscriberClass, String eventMethodName) {, +        String key = subscriberClass.getName() + '.' + eventMethodName;, +                String methodName = method.getName();, +                if (methodName.startsWith(eventMethodName)) {, +                    String modifierString = methodName.substring(eventMethodName.length());, +                    if (modifierString.length() == 0 || modifierString.equals("MainThread"), +                            || modifierString.equals("BackgroundThread")) {, +            }, +            throw new RuntimeException("Subscriber " + subscriberClass + " has no methods called " + eventMethodName);, +                    } else if (subscription.threadMode == ThreadMode.BackgroundThread) {, +                        if (backgroundThreadPoster == null) {, +                            synchronized (this) {, +                                if (backgroundThreadPoster == null) {, +                                    backgroundPosterHandlerThread = new HandlerThread("EventBus-Background-Poster-", +                                            + (++backgroundPosterThreadNr));, +                                    backgroundPosterHandlerThread.start();, +                                    backgroundThreadPoster = new PostViaHandler(, +                                            backgroundPosterHandlerThread.getLooper());, +                                }, +                            }, +                        }, +                        backgroundThreadPoster.enqueue(event, subscription);, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +import android.os.HandlerThread;, +    /** Used for naming the thread. */, +    private static int backgroundPosterThreadNr;, +, +        MainThread, BackgroundThread, +    private volatile HandlerThread backgroundPosterHandlerThread;, +    private volatile PostViaHandler backgroundThreadPoster;, +    private List<Method> findSubscriberMethods(Class<?> subscriberClass, String eventMethodName) {, +        String key = subscriberClass.getName() + '.' + eventMethodName;, +                String methodName = method.getName();, +                if (methodName.startsWith(eventMethodName)) {, +                    String modifierString = methodName.substring(eventMethodName.length());, +                    if (modifierString.length() == 0 || modifierString.equals("MainThread"), +                            || modifierString.equals("BackgroundThread")) {, +            }, +            throw new RuntimeException("Subscriber " + subscriberClass + " has no methods called " + eventMethodName);, +                    } else if (subscription.threadMode == ThreadMode.BackgroundThread) {, +                        if (backgroundThreadPoster == null) {, +                            synchronized (this) {, +                                if (backgroundThreadPoster == null) {, +                                    backgroundPosterHandlerThread = new HandlerThread("EventBus-Background-Poster-", +                                            + (++backgroundPosterThreadNr));, +                                    backgroundPosterHandlerThread.start();, +                                    backgroundThreadPoster = new PostViaHandler(, +                                            backgroundPosterHandlerThread.getLooper());, +                                }, +                            }, +                        }, +                        backgroundThreadPoster.enqueue(event, subscription);, +++ b/EventBusTest/src/de/greenrobot/event/test/AbstractEventBusTest.java, +/*, + * Copyright (C) 2012 Markus Junginger, greenrobot (http://greenrobot.de), + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package de.greenrobot.event.test;, +, +import java.util.List;, +import java.util.concurrent.CopyOnWriteArrayList;, +import java.util.concurrent.atomic.AtomicInteger;, +, +import android.annotation.SuppressLint;, +import android.app.Application;, +import android.os.Handler;, +import android.os.Looper;, +import android.os.Message;, +import android.test.ApplicationTestCase;, +import de.greenrobot.event.EventBus;, +, +/**, + * @author Markus Junginger, greenrobot, + */, +public class AbstractEventBusTest extends ApplicationTestCase<Application> {, +, +    protected EventBus eventBus;, +, +    protected final AtomicInteger eventCount = new AtomicInteger();, +    protected final List<Object> eventsReceived = new CopyOnWriteArrayList<Object>();, +]