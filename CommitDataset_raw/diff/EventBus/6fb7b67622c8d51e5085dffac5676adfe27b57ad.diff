[+++ b/EventBus/src/org/greenrobot/eventbus/EventBus.java, +import android.os.Looper;, +    // @Nullable, +    private final MainThreadSupport mainThreadSupport;, +    // @Nullable, +        mainThreadSupport = builder.mainThreadSupport != null ? builder.mainThreadSupport :, +                Logger.AndroidLogger.isAndroidLogAvailable() ?, +                        new MainThreadSupport.AndroidHandlerMainThreadSupport(Looper.getMainLooper()) : null;, +        mainThreadPoster = mainThreadSupport != null ? mainThreadSupport.createPoster(this) : null;, +            postToSubscription(newSubscription, stickyEvent, isMainThread());, +    /**, +     * Checks if the current thread is running in the main thread., +     * If there is no main thread support (e.g. non-Android), "true" is always returned. In that case MAIN thread, +     * subscribers are always called in posting thread, and BACKGROUND subscribers are always called from a background, +     * poster., +     */, +    private boolean isMainThread() {, +        return mainThreadSupport != null? mainThreadSupport.isMainThread(): true;, +    }, +, +            postingState.isMainThread = isMainThread();, +++ b/EventBus/src/org/greenrobot/eventbus/EventBus.java, +import android.os.Looper;, +    // @Nullable, +    private final MainThreadSupport mainThreadSupport;, +    // @Nullable, +        mainThreadSupport = builder.mainThreadSupport != null ? builder.mainThreadSupport :, +                Logger.AndroidLogger.isAndroidLogAvailable() ?, +                        new MainThreadSupport.AndroidHandlerMainThreadSupport(Looper.getMainLooper()) : null;, +        mainThreadPoster = mainThreadSupport != null ? mainThreadSupport.createPoster(this) : null;, +            postToSubscription(newSubscription, stickyEvent, isMainThread());, +    /**, +     * Checks if the current thread is running in the main thread., +     * If there is no main thread support (e.g. non-Android), "true" is always returned. In that case MAIN thread, +     * subscribers are always called in posting thread, and BACKGROUND subscribers are always called from a background, +     * poster., +     */, +    private boolean isMainThread() {, +        return mainThreadSupport != null? mainThreadSupport.isMainThread(): true;, +    }, +, +            postingState.isMainThread = isMainThread();, +++ b/EventBus/src/org/greenrobot/eventbus/EventBusBuilder.java, +    MainThreadSupport mainThreadSupport;, +++ b/EventBus/src/org/greenrobot/eventbus/EventBus.java, +import android.os.Looper;, +    // @Nullable, +    private final MainThreadSupport mainThreadSupport;, +    // @Nullable, +        mainThreadSupport = builder.mainThreadSupport != null ? builder.mainThreadSupport :, +                Logger.AndroidLogger.isAndroidLogAvailable() ?, +                        new MainThreadSupport.AndroidHandlerMainThreadSupport(Looper.getMainLooper()) : null;, +        mainThreadPoster = mainThreadSupport != null ? mainThreadSupport.createPoster(this) : null;, +            postToSubscription(newSubscription, stickyEvent, isMainThread());, +    /**, +     * Checks if the current thread is running in the main thread., +     * If there is no main thread support (e.g. non-Android), "true" is always returned. In that case MAIN thread, +     * subscribers are always called in posting thread, and BACKGROUND subscribers are always called from a background, +     * poster., +     */, +    private boolean isMainThread() {, +        return mainThreadSupport != null? mainThreadSupport.isMainThread(): true;, +    }, +, +            postingState.isMainThread = isMainThread();, +++ b/EventBus/src/org/greenrobot/eventbus/EventBusBuilder.java, +    MainThreadSupport mainThreadSupport;, +++ b/EventBus/src/org/greenrobot/eventbus/HandlerPoster.java, +public class HandlerPoster extends Handler implements Poster {, +    protected HandlerPoster(EventBus eventBus, Looper looper, int maxMillisInsideHandleMessage) {, +        super(looper);, +++ b/EventBus/src/org/greenrobot/eventbus/EventBus.java, +import android.os.Looper;, +    // @Nullable, +    private final MainThreadSupport mainThreadSupport;, +    // @Nullable, +        mainThreadSupport = builder.mainThreadSupport != null ? builder.mainThreadSupport :, +                Logger.AndroidLogger.isAndroidLogAvailable() ?, +                        new MainThreadSupport.AndroidHandlerMainThreadSupport(Looper.getMainLooper()) : null;, +        mainThreadPoster = mainThreadSupport != null ? mainThreadSupport.createPoster(this) : null;, +            postToSubscription(newSubscription, stickyEvent, isMainThread());, +    /**, +     * Checks if the current thread is running in the main thread., +     * If there is no main thread support (e.g. non-Android), "true" is always returned. In that case MAIN thread, +     * subscribers are always called in posting thread, and BACKGROUND subscribers are always called from a background, +     * poster., +     */, +    private boolean isMainThread() {, +        return mainThreadSupport != null? mainThreadSupport.isMainThread(): true;, +    }, +, +            postingState.isMainThread = isMainThread();, +++ b/EventBus/src/org/greenrobot/eventbus/EventBusBuilder.java, +    MainThreadSupport mainThreadSupport;, +++ b/EventBus/src/org/greenrobot/eventbus/HandlerPoster.java, +public class HandlerPoster extends Handler implements Poster {, +    protected HandlerPoster(EventBus eventBus, Looper looper, int maxMillisInsideHandleMessage) {, +        super(looper);, +++ b/EventBus/src/org/greenrobot/eventbus/MainThreadSupport.java, +package org.greenrobot.eventbus;]