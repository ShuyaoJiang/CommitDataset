[+++ b/EventBusAnnotationProcessor/src/org/greenrobot/eventbus/annotationprocessor/EventBusAnnotationProcessor.java, +    /**, +     * Subscriber classes should be skipped if their class or any involved event class are not visible to the index., +     */, +++ b/EventBusAnnotationProcessor/src/org/greenrobot/eventbus/annotationprocessor/EventBusAnnotationProcessor.java, +    /**, +     * Subscriber classes should be skipped if their class or any involved event class are not visible to the index., +     */, +++ b/EventBusTest/src/org/greenrobot/eventbus/EventBusFallbackToReflectionTest.java, +    public class PublicClassWithPublicAndPrivateEvent {, +        @Subscribe, +        public void onEvent(String any) {, +            trackEvent(any);, +        }, +, +        @Subscribe, +        public void onEvent(PrivateEvent any) {, +            trackEvent(any);, +        }, +    }, +, +    public void testSubscriberClassWithPublicAndPrivateEvent() {, +        eventBus.register(new PublicClassWithPublicAndPrivateEvent());, +, +        eventBus.post("Hello");, +        assertEquals("Hello", lastEvent);, +        assertEquals(1, eventsReceived.size());, +, +        PrivateEvent privateEvent = new PrivateEvent();, +        eventBus.post(privateEvent);, +        assertEquals(privateEvent, lastEvent);, +        assertEquals(2, eventsReceived.size());, +    }, +, +    @Test]