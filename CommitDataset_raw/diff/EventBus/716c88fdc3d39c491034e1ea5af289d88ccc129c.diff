[+++ b/EventBus/build.gradle, +version = '2.2.0', +++ b/EventBus/build.gradle, +version = '2.2.0', +++ b/README.md, +    compile 'de.greenrobot:eventbus:2.2.0', +    <version>2.2.0</version>, +Subscriber priorities and ordered event delivery, +------------------------------------------------, +*TODO. For now, this is just the javadoc for the method register(Object subscriber, int priority):*, +Like register(Object) with an additional subscriber priority to influence the order of event delivery. Within the same delivery thread (ThreadMode), higher priority subscribers will receive events before others with a lower priority. The default priority is 0. Note: the priority does *NOT* affect the order of delivery among subscribers with different ThreadModes!, +, +Cancelling further event delivery, +---------------------------------, +*TODO. For now, this is just the javadoc for the method cancelEventDelivery(Object event):*, +Called from a subscriber's event handling method, further event delivery will be canceled. Subsequent subscribers won't receive the event. Events are usually canceled by higher priority subscribers (see register(Object, int)). Canceling is restricted to event handling methods running in posting thread ThreadMode.PostThread., +, +* **Tiny:** The jar is less than 50 KBytes., +### V2.2.0 (2013-11-18) Feature release, subscriber priority, +* Event delivery can be canceled by subscribers so subsequent subscribers will not receive the event]