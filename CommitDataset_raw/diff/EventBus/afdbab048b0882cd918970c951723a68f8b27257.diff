[+++ b/HOWTO.md, +    @Subscribe(threadmode = ThreadMode.PostThread) // ThreadMode is optional here , +    @Subscribe(threadMode = ThreadMode.MainThread), +    @Subscribe(threadMode = ThreadMode.BackgroundThread), +    @Subscribe(threadmode = ThreadMode.Async), +*Note:* EventBus takes care of calling the `onEvent` method in the proper thread depending on its annotation., +    @Subscribe(priority = 1);, +    public void onEvent(MessageEvent event) {, +    	..., +    }, +    @Subscribe, +After that, a new Activity gets started. During registration, and sticky Subscriber methods will immediately get the previously posted sticky event:, +        EventBus.getDefault().register(this);, +    @Subscribe(sticky = true, threadmode = ThreadMode.MainThread), +    public void onEvent(MessageEvent event) {, +    	// UI updates must run on MainThread, +ProGuard obfuscates method names and may remove "unused" methods, including Subscriber methods. Use the following snip in your ProGuard configuration file (proguard.cfg) to prevent Subscribers from being removed:, +-keepattributes *Annotation*, +    @de.greenrobot.event.Subscribe public *;, +        <td>Annotations</td>]