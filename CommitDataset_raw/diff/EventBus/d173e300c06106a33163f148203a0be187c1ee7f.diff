[+++ b/EventBus/src/de/greenrobot/event/EventBus.java, +        boolean subscriptionFound = false;, +        while (clazz != null) {, +            if (subscriptions != null) {, +                subscriptionFound = true;, +            clazz = clazz.getSuperclass();, +        }, +        if (!subscriptionFound) {, +            Log.d(TAG, "No subscripers registered for event " + eventToPost.getClass());, +        }, +, +    }, +            List<Subscription> list = subscriptionsByEventType.get(clazz);, +            if (list != null && !list.isEmpty()) {, +            } else {, +                return null;, +            }, +        }, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +        boolean subscriptionFound = false;, +        while (clazz != null) {, +            if (subscriptions != null) {, +                subscriptionFound = true;, +            clazz = clazz.getSuperclass();, +        }, +        if (!subscriptionFound) {, +            Log.d(TAG, "No subscripers registered for event " + eventToPost.getClass());, +        }, +, +    }, +            List<Subscription> list = subscriptionsByEventType.get(clazz);, +            if (list != null && !list.isEmpty()) {, +            } else {, +                return null;, +            }, +        }, +++ b/EventBusTest/src/de/greenrobot/greenbus/test/EventBusBasicTest.java, +    private int countMyEventExtended;, +    private int countMyEvent;, +    public void onEvent(MyEvent event) {, +        countMyEvent++;, +    }, +, +    public void onEvent(MyEventExtended event) {, +        countMyEventExtended++;, +    }, +, +    class MyEvent {, +    }, +, +    class MyEventExtended extends MyEvent {, +    }, +, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +        boolean subscriptionFound = false;, +        while (clazz != null) {, +            if (subscriptions != null) {, +                subscriptionFound = true;, +            clazz = clazz.getSuperclass();, +        }, +        if (!subscriptionFound) {, +            Log.d(TAG, "No subscripers registered for event " + eventToPost.getClass());, +        }, +, +    }, +            List<Subscription> list = subscriptionsByEventType.get(clazz);, +            if (list != null && !list.isEmpty()) {, +            } else {, +                return null;, +            }, +        }, +++ b/EventBusTest/src/de/greenrobot/greenbus/test/EventBusBasicTest.java, +    private int countMyEventExtended;, +    private int countMyEvent;, +    public void onEvent(MyEvent event) {, +        countMyEvent++;, +    }, +, +    public void onEvent(MyEventExtended event) {, +        countMyEventExtended++;, +    }, +, +    class MyEvent {, +    }, +, +    class MyEventExtended extends MyEvent {, +    }, +, +++ b/EventBusTest/src/de/greenrobot/greenbus/test/EventBusInheritanceTest.java, +/*, + * Copyright (C) 2012 Markus Junginger, greenrobot (http://greenrobot.de), + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,]