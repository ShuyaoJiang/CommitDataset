[+++ b/EventBusAnnotationProcessor/src/org/greenrobot/eventbus/annotationprocessor/EventBusAnnotationProcessor.java, +import javax.lang.model.type.TypeVariable;, +@SupportedOptions(value = {"eventBusIndex", "verbose"}), +    public static final String OPTION_VERBOSE = "verbose";, +    private boolean verbose;, +            verbose = Boolean.parseBoolean(processingEnv.getOptions().get(OPTION_VERBOSE));, +            if (verbose) {, +            }, +                        VariableElement param = method.getParameters().get(0);, +                        TypeMirror typeMirror = getParamTypeMirror(param, messager);, +                            skipReason = "event type cannot be processed";, +                                messager.printMessage(Diagnostic.Kind.NOTE, msg, param);, +    private TypeMirror getParamTypeMirror(VariableElement param, Messager messager) {, +        TypeMirror typeMirror = param.asType();, +        // Check for generic type, +        if (typeMirror instanceof TypeVariable) {, +            TypeMirror upperBound = ((TypeVariable) typeMirror).getUpperBound();, +            if (upperBound instanceof DeclaredType) {, +                if (messager != null) {, +                    messager.printMessage(Diagnostic.Kind.NOTE, "Using upper bound type " + upperBound +, +                            " for generic parameter", param);, +                }, +                typeMirror = upperBound;, +            }, +        }, +        return typeMirror;, +    }, +, +            TypeMirror paramType = getParamTypeMirror(parameters.get(0), null);, +            if (verbose) {, +            }]