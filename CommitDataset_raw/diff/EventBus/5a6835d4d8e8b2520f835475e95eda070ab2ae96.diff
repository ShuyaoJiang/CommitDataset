[+++ b/README.md, +EventBus is an Android optimized publish/subscribe event bus. , +, +An event bus eases the communication between Activities, Fragments, and background threads together without introducing complex and error-prone dependencies and life cycle issues. , +EventBus propagates event all participants (e.g. background service -> activity -> multiple fragments or helper classes)., +EventBus decouples event senders and receivers and simplifies event and data exchange between app components. , +Less code, better quality. , +(And you don't need to implement a single interface!), +In EventBus, *subscribers* implement event handling `onEventXXX` methods and register themselves to the bus. , +The events are delivered to matching event handling methods based on their arguments., +        EventBus.getDefault().register(this);, +        EventBus.getDefault().unregister(this);, +    , +    // In case many events are suscribed, just add another method with the event type, +    public void onEvent(SomeOtherMessageEvent event){, +        Toast.makeText(getActivity(), event.getMessage().toString(), Toast.LENGTH_SHORT).show();, +    }, +    , +    EventBus.getDefault().post(new MessageEvent("hello!"));]