[+++ b/EventBus/src/de/greenrobot/event/EventBus.java, +        List<SubscriberMethod> subscriberMethods = subscriberMethodFinder.findSubscriberMethods(subscriber.getClass());, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +        List<SubscriberMethod> subscriberMethods = subscriberMethodFinder.findSubscriberMethods(subscriber.getClass());, +++ b/EventBus/src/de/greenrobot/event/SubscriberMethod.java, +        if (other instanceof SubscriberMethod) {, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +        List<SubscriberMethod> subscriberMethods = subscriberMethodFinder.findSubscriberMethods(subscriber.getClass());, +++ b/EventBus/src/de/greenrobot/event/SubscriberMethod.java, +        if (other instanceof SubscriberMethod) {, +++ b/EventBus/src/de/greenrobot/event/SubscriberMethodFinder.java, +    private static final String ON_EVENT_METHOD_NAME = "onEvent";, +    /*, +     * In newer class files, compilers may add methods. Those are called bridge or synthetic methods., +     * EventBus must ignore both. There modifiers are not public but defined in the Java class file format:, +     * http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.6-200-A.1, +     */, +    private static final int BRIDGE = 0x40;, +    private static final int SYNTHETIC = 0x1000;, +    private static final int MODIFIERS_IGNORE = Modifier.ABSTRACT | Modifier.STATIC | BRIDGE | SYNTHETIC;, +    List<SubscriberMethod> findSubscriberMethods(Class<?> subscriberClass) {, +                if (methodName.startsWith(ON_EVENT_METHOD_NAME)) {, +                    if ((modifiers & Modifier.PUBLIC) != 0 && (modifiers & MODIFIERS_IGNORE) == 0) {, +                        if (parameterTypes.length == 1) {, +                            String modifierString = methodName.substring(ON_EVENT_METHOD_NAME.length());, +                            if (modifierString.length() == 0) {, +                            } else if (modifierString.equals("MainThread")) {, +                                threadMode = ThreadMode.MainThread;, +                            } else if (modifierString.equals("BackgroundThread")) {, +                                threadMode = ThreadMode.BackgroundThread;, +                            } else if (modifierString.equals("Async")) {, +                                threadMode = ThreadMode.Async;, +                            } else {, +                                if (skipMethodVerificationForClasses.containsKey(clazz)) {, +                                    continue;, +                                } else {, +                                    throw new EventBusException("Illegal onEvent method, check for typos: " + method);, +                            }, +                            Class<?> eventType = parameterTypes[0];, +                    } else if (!skipMethodVerificationForClasses.containsKey(clazz)) {, +                        Log.d(EventBus.TAG, "Skipping method (not public, static or abstract): " + clazz + ".", +                                + methodName);, +                }, +            }, +            throw new EventBusException("Subscriber " + subscriberClass + " has no public methods called ", +                    + ON_EVENT_METHOD_NAME);, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +        List<SubscriberMethod> subscriberMethods = subscriberMethodFinder.findSubscriberMethods(subscriber.getClass());, +++ b/EventBus/src/de/greenrobot/event/SubscriberMethod.java, +        if (other instanceof SubscriberMethod) {, +++ b/EventBus/src/de/greenrobot/event/SubscriberMethodFinder.java, +    private static final String ON_EVENT_METHOD_NAME = "onEvent";, +    /*, +     * In newer class files, compilers may add methods. Those are called bridge or synthetic methods., +     * EventBus must ignore both. There modifiers are not public but defined in the Java class file format:, +     * http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.6-200-A.1, +     */, +    private static final int BRIDGE = 0x40;, +    private static final int SYNTHETIC = 0x1000;, +    private static final int MODIFIERS_IGNORE = Modifier.ABSTRACT | Modifier.STATIC | BRIDGE | SYNTHETIC;, +    List<SubscriberMethod> findSubscriberMethods(Class<?> subscriberClass) {, +                if (methodName.startsWith(ON_EVENT_METHOD_NAME)) {, +                    if ((modifiers & Modifier.PUBLIC) != 0 && (modifiers & MODIFIERS_IGNORE) == 0) {, +                        if (parameterTypes.length == 1) {, +                            String modifierString = methodName.substring(ON_EVENT_METHOD_NAME.length());, +                            if (modifierString.length() == 0) {, +                            } else if (modifierString.equals("MainThread")) {, +                                threadMode = ThreadMode.MainThread;, +                            } else if (modifierString.equals("BackgroundThread")) {, +                                threadMode = ThreadMode.BackgroundThread;, +                            } else if (modifierString.equals("Async")) {, +                                threadMode = ThreadMode.Async;, +                            } else {, +                                if (skipMethodVerificationForClasses.containsKey(clazz)) {, +                                    continue;, +                                } else {, +                                    throw new EventBusException("Illegal onEvent method, check for typos: " + method);, +                            }, +                            Class<?> eventType = parameterTypes[0];, +                    } else if (!skipMethodVerificationForClasses.containsKey(clazz)) {, +                        Log.d(EventBus.TAG, "Skipping method (not public, static or abstract): " + clazz + ".", +                                + methodName);, +                }, +            }, +            throw new EventBusException("Subscriber " + subscriberClass + " has no public methods called ", +                    + ON_EVENT_METHOD_NAME);, +++ /dev/null, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +        List<SubscriberMethod> subscriberMethods = subscriberMethodFinder.findSubscriberMethods(subscriber.getClass());, +++ b/EventBus/src/de/greenrobot/event/SubscriberMethod.java, +        if (other instanceof SubscriberMethod) {, +++ b/EventBus/src/de/greenrobot/event/SubscriberMethodFinder.java, +    private static final String ON_EVENT_METHOD_NAME = "onEvent";, +    /*, +     * In newer class files, compilers may add methods. Those are called bridge or synthetic methods., +     * EventBus must ignore both. There modifiers are not public but defined in the Java class file format:, +     * http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.6-200-A.1, +     */, +    private static final int BRIDGE = 0x40;, +    private static final int SYNTHETIC = 0x1000;]