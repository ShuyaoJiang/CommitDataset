[+++ b/EventBus/src/de/greenrobot/event/EventBus.java, +import java.util.HashSet;, +        HashSet<Class<?>> eventTypesFound = new HashSet<Class<?>>();, +                        if (eventTypesFound.add(parameterTypes[0])) {, +                            // Only add if not already found in more concrete class, +            }, +            // TODO add interface and use cached list, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +import java.util.HashSet;, +        HashSet<Class<?>> eventTypesFound = new HashSet<Class<?>>();, +                        if (eventTypesFound.add(parameterTypes[0])) {, +                            // Only add if not already found in more concrete class, +            }, +            // TODO add interface and use cached list, +++ b/EventBusTest/src/de/greenrobot/greenbus/test/EventBusInheritanceTest.java, +    protected int countMyEventExtended;, +    protected int countMyEvent;, +    protected int countObjectEvent;, +        , +        eventBus.post("Hello");, +        assertEquals(1, countObjectEvent);, +        , +        assertEquals(2, countObjectEvent);, +        , +        assertEquals(3, countObjectEvent);, +    public void testSubscriberClassHierarchy() {, +        SubscriberExtended subscriber = new SubscriberExtended();, +        eventBus.register(subscriber);, +        , +        eventBus.post("Hello");, +        assertEquals(1, subscriber.countObjectEvent);, +        , +        eventBus.post(new MyEvent());, +        assertEquals(2, subscriber.countObjectEvent);, +        assertEquals(0, subscriber.countMyEvent);, +        assertEquals(1, subscriber.countMyEventOverwritten);, +        , +        eventBus.post(new MyEventExtended());, +        assertEquals(3, subscriber.countObjectEvent);, +        assertEquals(0, subscriber.countMyEvent);, +        assertEquals(1, subscriber.countMyEventExtended);, +        assertEquals(2, subscriber.countMyEventOverwritten);, +    }, +, +    public void onEvent(Object event) {, +        countObjectEvent++;, +    }, +, +    static class MyEvent {, +    static class MyEventExtended extends MyEvent {, +    }, +    , +    static class SubscriberExtended extends EventBusInheritanceTest {, +        private int countMyEventOverwritten;, +, +        public void onEvent(MyEvent event) {, +            countMyEventOverwritten++;, +        }]