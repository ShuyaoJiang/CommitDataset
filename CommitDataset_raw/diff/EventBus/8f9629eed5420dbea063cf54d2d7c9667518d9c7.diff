[+++ b/EventBusAnnotationProcessor/build.gradle, +group = 'org.greenrobot', +version = '3.0.0-rc', +    compile 'de.greenrobot:java-common:2.3.1', +++ b/EventBusAnnotationProcessor/build.gradle, +group = 'org.greenrobot', +version = '3.0.0-rc', +    compile 'de.greenrobot:java-common:2.3.1', +++ b/EventBusAnnotationProcessor/src/org/greenrobot/eventbus/annotationprocessor/EventBusAnnotationProcessor.java, +/*, + * Copyright (C) 2012-2016 Markus Junginger, greenrobot (http://greenrobot.org), + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +import de.greenrobot.common.ListMap;, +, +    private final ListMap<TypeElement, ExecutableElement> methodsByClass = new ListMap<>();, +                        TypeElement classElement = (TypeElement) method.getEnclosingElement();, +                        methodsByClass.putElement(classElement, method);, +        for (TypeElement skipCandidate : methodsByClass.keySet()) {, +        for (TypeElement subscriberTypeElement : methodsByClass.keySet()) {]