[+++ b/EventBus/src/de/greenrobot/event/Logger.java, +    public abstract boolean isLoggable(Level level);, +    public abstract void log(Level level, String msg);, +    public abstract void log(Level level, String msg, Throwable th);, +        public boolean isLoggable(Level level) {, +            if (level == Level.OFF) {, +                return false;, +            } else {, +                return Log.isLoggable(tag, mapLevel(level));, +            }, +        public void log(Level level, String msg) {, +            if (level != Level.OFF) {, +                Log.println(mapLevel(level), tag, msg);, +            }, +        public void log(Level level, String msg, Throwable th) {, +            if (level != Level.OFF) {, +                // That's how Log does it internally, +                Log.println(mapLevel(level), tag, msg + "\n" + Log.getStackTraceString(th));, +            }, +        protected int mapLevel(Level level) {, +            if (level == Level.OFF) {, +                return 0;, +            } else if (level == Level.FINEST || level == Level.FINER) {, +                return Log.VERBOSE;, +            } else if (level == Level.FINE || level == Level.CONFIG) {, +                return Log.DEBUG;, +            } else if (level == Level.INFO) {, +                return Log.INFO;, +            } else if (level == Level.WARNING) {, +                return Log.WARN;, +            } else if (level == Level.SEVERE) {, +                return Log.ERROR;, +            } else if (level == Level.ALL) {, +                // Hmm, well.., +                return Log.ASSERT;, +            } else {, +                throw new IllegalArgumentException("Unexpected level: " + level);, +            }, +        protected final java.util.logging.Logger logger;, +        public boolean isLoggable(Level level) {, +            return logger.isLoggable(level);, +        public void log(Level level, String msg) {, +            logger.log(level, msg);, +        public void log(Level level, String msg, Throwable th) {, +            logger.log(level, msg, th);]