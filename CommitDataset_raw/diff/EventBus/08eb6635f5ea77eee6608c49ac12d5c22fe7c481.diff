[+++ b/EventBus/src/de/greenrobot/event/EventBus.java, +            if (postingState.canceled) {, +     * Called from a subscriber's event handling method, further event delivery will be canceled. Subsequent subscribers, +     * won't receive the event. Events are usually canceled by higher priority subscribers (see, +     * {@link #register(Object, int)}). Canceling is restricted to event handling methods running in posting thread, +    public void cancelEventDelivery(Object event) {, +        postingState.canceled = true;, +                        aborted = postingState.canceled;, +                        postingState.canceled = false;, +        boolean canceled;, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +            if (postingState.canceled) {, +     * Called from a subscriber's event handling method, further event delivery will be canceled. Subsequent subscribers, +     * won't receive the event. Events are usually canceled by higher priority subscribers (see, +     * {@link #register(Object, int)}). Canceling is restricted to event handling methods running in posting thread, +    public void cancelEventDelivery(Object event) {, +        postingState.canceled = true;, +                        aborted = postingState.canceled;, +                        postingState.canceled = false;, +        boolean canceled;, +++ b/EventBusTest/src/de/greenrobot/event/test/EventBusAbortEventDeliveryTest.java, +            eventBus.cancelEventDelivery(this);, +                eventBus.cancelEventDelivery(event);, +                eventBus.cancelEventDelivery(this);, +                eventBus.cancelEventDelivery(event);]