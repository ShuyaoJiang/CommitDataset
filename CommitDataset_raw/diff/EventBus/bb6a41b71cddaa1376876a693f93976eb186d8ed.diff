[+++ b/EventBusTest/src/de/greenrobot/event/test/AbstractEventBusTest.java, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +    /** Activates long(er) running tests e.g. testing multi-threading more throughly.  */, +    protected static final boolean LONG_TESTS = true;, +    protected void countDownAndAwaitLatch(CountDownLatch latch, long seconds) {, +        latch.countDown();, +        try {, +            assertTrue(latch.await(seconds, TimeUnit.SECONDS));, +        } catch (InterruptedException e) {, +            throw new RuntimeException(e);, +        }, +    }, +, +++ b/EventBusTest/src/de/greenrobot/event/test/AbstractEventBusTest.java, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +    /** Activates long(er) running tests e.g. testing multi-threading more throughly.  */, +    protected static final boolean LONG_TESTS = true;, +    protected void countDownAndAwaitLatch(CountDownLatch latch, long seconds) {, +        latch.countDown();, +        try {, +            assertTrue(latch.await(seconds, TimeUnit.SECONDS));, +        } catch (InterruptedException e) {, +            throw new RuntimeException(e);, +        }, +    }, +, +++ b/EventBusTest/src/de/greenrobot/event/test/EventBusMainThreadRacingTest.java, +    private static final int ITERATIONS = LONG_TESTS ? 100000 : 1000;, +        countDownAndAwaitLatch(startLatch, 10);, +            countDownAndAwaitLatch(startLatch, 10);, +++ b/EventBusTest/src/de/greenrobot/event/test/AbstractEventBusTest.java, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +    /** Activates long(er) running tests e.g. testing multi-threading more throughly.  */, +    protected static final boolean LONG_TESTS = true;, +    protected void countDownAndAwaitLatch(CountDownLatch latch, long seconds) {, +        latch.countDown();, +        try {, +            assertTrue(latch.await(seconds, TimeUnit.SECONDS));, +        } catch (InterruptedException e) {, +            throw new RuntimeException(e);, +        }, +    }, +, +++ b/EventBusTest/src/de/greenrobot/event/test/EventBusMainThreadRacingTest.java, +    private static final int ITERATIONS = LONG_TESTS ? 100000 : 1000;, +        countDownAndAwaitLatch(startLatch, 10);, +            countDownAndAwaitLatch(startLatch, 10);, +++ b/EventBusTest/src/de/greenrobot/event/test/EventBusMultithreadedTest.java, +    private static final int COUNT = LONG_TESTS ? 100000 : 1000;, +            // Let all other threads prepare and ensure this one is the last , +                        Thread.sleep(0, (int) (1000000 * Math.random()));]