[+++ b/EventBus/src/de/greenrobot/event/Logger.java, +package de.greenrobot.event;, +, +import android.annotation.TargetApi;, +import android.os.Build;, +import android.util.Log;, +, +import java.util.logging.Level;, +, +public abstract class Logger {, +    private static final boolean useAndroidLog;, +    private static volatile Logger DEFAULT_LOGGER;, +, +, +    static {, +        boolean android = false;, +        try {, +            android = Class.forName("android.util.Log") != null;, +        } catch (ClassNotFoundException e) {, +            // OK, +        }, +        useAndroidLog = android;, +    }, +, +, +    public static synchronized Logger initDefaultLogger(String tag) {, +        if (DEFAULT_LOGGER != null) {, +            throw new IllegalStateException("Default logger already set up");, +        }, +        DEFAULT_LOGGER = create(tag);, +        return DEFAULT_LOGGER;, +    }, +, +    public static Logger get() {, +        if (DEFAULT_LOGGER == null) {, +            throw new IllegalStateException("Default logger must be initialized before");, +        }, +        return DEFAULT_LOGGER;, +    }, +, +    public static Logger create(String tag) {, +        if (useAndroidLog) {, +            return new AndroidLogger(tag);, +        } else {, +            return new JavaLogger(tag);, +        }, +    }, +, +, +    public abstract boolean isLoggable(int level);, +, +    public abstract void v(String msg);, +, +    public abstract void v(String msg, Throwable th);, +, +    public abstract void d(String msg);, +, +    public abstract void d(String msg, Throwable th);, +, +    public abstract void i(String msg);, +, +    public abstract void i(String msg, Throwable th);, +, +    public abstract void w(String msg);, +, +    public abstract void w(String msg, Throwable th);, +, +    public abstract void w(Throwable th);, +, +    public abstract void e(String msg);, +, +    public abstract void e(String msg, Throwable th);, +, +    public abstract void wtf(String msg);, +, +    public abstract void wtf(String msg, Throwable th);, +, +    public static class AndroidLogger extends Logger {, +        public static final int VERBOSE = 2;, +        public static final int DEBUG = 3;, +        public static final int INFO = 4;, +        public static final int WARN = 5;, +        public static final int ERROR = 6;, +        public static final int ASSERT = 7;, +, +        private final String tag;, +, +        public AndroidLogger(String tag) {, +            this.tag = tag;, +        }, +, +        public boolean isLoggable(int level) {, +            return Log.isLoggable(tag, level);, +        }, +, +        public void v(String msg) {, +            Log.v(tag, msg);, +        }, +, +        public void v(String msg, Throwable th) {]