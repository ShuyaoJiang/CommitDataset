[+++ b/EventBus/src/de/greenrobot/event/EventBus.java, +     * {@link ThreadMode#POSTING}., +        } else if (postingState.subscription.subscriberMethod.threadMode != ThreadMode.POSTING) {, +            case POSTING:, +            case MAIN:, +            case BACKGROUND:, +            case ASYNC:, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +     * {@link ThreadMode#POSTING}., +        } else if (postingState.subscription.subscriberMethod.threadMode != ThreadMode.POSTING) {, +            case POSTING:, +            case MAIN:, +            case BACKGROUND:, +            case ASYNC:, +++ b/EventBus/src/de/greenrobot/event/Subscribe.java, +    ThreadMode threadMode() default ThreadMode.POSTING;, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +     * {@link ThreadMode#POSTING}., +        } else if (postingState.subscription.subscriberMethod.threadMode != ThreadMode.POSTING) {, +            case POSTING:, +            case MAIN:, +            case BACKGROUND:, +            case ASYNC:, +++ b/EventBus/src/de/greenrobot/event/Subscribe.java, +    ThreadMode threadMode() default ThreadMode.POSTING;, +++ b/EventBus/src/de/greenrobot/event/ThreadMode.java, +    POSTING,, +    MAIN,, +    BACKGROUND,, +    ASYNC, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +     * {@link ThreadMode#POSTING}., +        } else if (postingState.subscription.subscriberMethod.threadMode != ThreadMode.POSTING) {, +            case POSTING:, +            case MAIN:, +            case BACKGROUND:, +            case ASYNC:, +++ b/EventBus/src/de/greenrobot/event/Subscribe.java, +    ThreadMode threadMode() default ThreadMode.POSTING;, +++ b/EventBus/src/de/greenrobot/event/ThreadMode.java, +    POSTING,, +    MAIN,, +    BACKGROUND,, +    ASYNC, +++ b/EventBusTest/src/de/greenrobot/event/test/EventBusBackgroundThreadTest.java, +    @Subscribe(threadMode = ThreadMode.BACKGROUND), +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +     * {@link ThreadMode#POSTING}., +        } else if (postingState.subscription.subscriberMethod.threadMode != ThreadMode.POSTING) {, +            case POSTING:, +            case MAIN:, +            case BACKGROUND:, +            case ASYNC:, +++ b/EventBus/src/de/greenrobot/event/Subscribe.java, +    ThreadMode threadMode() default ThreadMode.POSTING;, +++ b/EventBus/src/de/greenrobot/event/ThreadMode.java, +    POSTING,, +    MAIN,, +    BACKGROUND,, +    ASYNC, +++ b/EventBusTest/src/de/greenrobot/event/test/EventBusBackgroundThreadTest.java, +    @Subscribe(threadMode = ThreadMode.BACKGROUND), +++ b/EventBusTest/src/de/greenrobot/event/test/EventBusCancelEventDeliveryTest.java, +        @Subscribe(threadMode = ThreadMode.MAIN), +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +     * {@link ThreadMode#POSTING}., +        } else if (postingState.subscription.subscriberMethod.threadMode != ThreadMode.POSTING) {, +            case POSTING:, +            case MAIN:, +            case BACKGROUND:, +            case ASYNC:, +++ b/EventBus/src/de/greenrobot/event/Subscribe.java, +    ThreadMode threadMode() default ThreadMode.POSTING;, +++ b/EventBus/src/de/greenrobot/event/ThreadMode.java, +    POSTING,, +    MAIN,, +    BACKGROUND,, +    ASYNC, +++ b/EventBusTest/src/de/greenrobot/event/test/EventBusBackgroundThreadTest.java, +    @Subscribe(threadMode = ThreadMode.BACKGROUND), +++ b/EventBusTest/src/de/greenrobot/event/test/EventBusCancelEventDeliveryTest.java, +        @Subscribe(threadMode = ThreadMode.MAIN), +++ b/EventBusTest/src/de/greenrobot/event/test/EventBusMainThreadRacingTest.java, +    @Subscribe(threadMode = ThreadMode.MAIN), +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +     * {@link ThreadMode#POSTING}., +        } else if (postingState.subscription.subscriberMethod.threadMode != ThreadMode.POSTING) {, +            case POSTING:, +            case MAIN:, +            case BACKGROUND:, +            case ASYNC:, +++ b/EventBus/src/de/greenrobot/event/Subscribe.java, +    ThreadMode threadMode() default ThreadMode.POSTING;, +++ b/EventBus/src/de/greenrobot/event/ThreadMode.java, +    POSTING,, +    MAIN,, +    BACKGROUND,, +    ASYNC, +++ b/EventBusTest/src/de/greenrobot/event/test/EventBusBackgroundThreadTest.java, +    @Subscribe(threadMode = ThreadMode.BACKGROUND)]