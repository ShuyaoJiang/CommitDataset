[+++ b/EventBus/src/de/greenrobot/event/EventBus.java, +    /**, +     * Like {@link #register(Object)} with an additional subscriber priority to influence the order of event delivery., +     * Within the same delivery thread ({@link ThreadMode}), higher priority subscribers will receive events before, +     * others with a lower priority. The default priority is 0. Note: the priority does *NOT* affect the order of, +     * delivery among subscribers with different {@link ThreadMode}s!, +     */, +     * Like {@link #register(Object,int)}, but also triggers delivery of the most recent sticky event (posted with, +     * {@link #postSticky(Object)}) to the given subscriber., +     */, +    public void registerSticky(Object subscriber, int priority) {, +        register(subscriber, defaultMethodName, true, priority);, +    }, +, +    /**, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +    /**, +     * Like {@link #register(Object)} with an additional subscriber priority to influence the order of event delivery., +     * Within the same delivery thread ({@link ThreadMode}), higher priority subscribers will receive events before, +     * others with a lower priority. The default priority is 0. Note: the priority does *NOT* affect the order of, +     * delivery among subscribers with different {@link ThreadMode}s!, +     */, +     * Like {@link #register(Object,int)}, but also triggers delivery of the most recent sticky event (posted with, +     * {@link #postSticky(Object)}) to the given subscriber., +     */, +    public void registerSticky(Object subscriber, int priority) {, +        register(subscriber, defaultMethodName, true, priority);, +    }, +, +    /**, +++ b/EventBusTest/src/de/greenrobot/event/test/EventBusOrderedSubscriptionsTest.java, +        runTestOrdered("42", false);, +        runTestOrdered(new IntTestEvent(42), false);, +        runTestOrdered(Integer.valueOf(42), false);, +    public void testOrderedSticky() {, +        runTestOrdered("42", true);, +    }, +, +    public void testOrderedMainThreadSticky() {, +        runTestOrdered(new IntTestEvent(42), true);, +    }, +, +    public void testOrderedBackgroundThreadSticky() {, +        runTestOrdered(Integer.valueOf(42), true);, +    }, +, +    protected void runTestOrdered(Object event, boolean sticky) {, +        register(1, sticky);, +        register(-1, sticky);, +        register(10, sticky);, +        register(0, sticky);, +        register(-100, sticky);, +    protected PrioSubscriber register(int priority, boolean sticky) {, +        if (sticky) {, +            eventBus.registerSticky(subscriber, priority);, +        } else {, +        }]