[+++ b/EventBus/src/de/greenrobot/event/EventBus.java, +                // If the subscriber is trying to abort the event, it will fail (event is not tracked in posting state), +                // --> Strange corner case, which we don't take care of here., +            if (postingState.aborted) {, +                throw new EventBusException("Internal error. Abort state was not reset");, +            }, +    public void abortEventDelivery(Object event) {, +        PostingThreadState postingState = currentPostingThreadState.get();, +        if (!postingState.isPosting) {, +            throw new EventBusException(, +                    "This method may only be called from inside event handling methods on the posting thread");, +        } else if (event == null) {, +            throw new EventBusException("Event may not be null");, +        } else if (postingState.event != event) {, +            throw new EventBusException("Only the currently handled event may be aborted");, +        } else if (postingState.subscription.subscriberMethod.threadMode != ThreadMode.PostThread) {, +            throw new EventBusException(" event handlers may only abort the incoming event");, +        }, +, +        postingState.aborted = true;, +    }, +, +                    postingState.event = event;, +                    postingState.subscription = subscription;, +                    boolean aborted = false;, +                    try {, +                        aborted = postingState.aborted;, +                    } finally {, +                        postingState.event = null;, +                        postingState.subscription = null;, +                        postingState.aborted = false;, +                    }, +                    if (aborted) {, +                        break;, +                    }, +        Subscription subscription;, +        Object event;, +        public boolean aborted;]