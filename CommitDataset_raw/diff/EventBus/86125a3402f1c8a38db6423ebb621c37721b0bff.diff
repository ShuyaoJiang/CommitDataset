[+++ b/README.md, +*Define your event class as a POJO*, +*The receiver registers the eventbus* , +*Post your event from any part of your code*, +EventBus can handle threading for you: events can be posted in threads different from the posting thread. , +A common use case is dealing with UI changes. As you may know, UI changes must be done in the UI thread and networking (or other time consumming task) must be done in other treads. EventBus will help you to deal with those tasks and  synchronize with the UI thread (without having to delve into thread transistions, using AsyncTask, etc). , +In EventBus, you may define the thread that will call the event handling method `onEvent` by using a *ThreadMode*:, +Cancelling event delivery, +-------------------------, +Any further event delivery will be cancelled: subsequent subscribers won't receive the event., +And then you post the event:]