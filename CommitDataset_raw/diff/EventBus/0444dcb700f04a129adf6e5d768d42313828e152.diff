[+++ b/EventBus/src/de/greenrobot/event/EventBus.java, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +++ b/EventBus/src/de/greenrobot/event/PendingPost.java, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +++ b/EventBus/src/de/greenrobot/event/PendingPost.java, +++ b/EventBus/src/de/greenrobot/event/PostViaHandler.java, +package de.greenrobot.event;, +, +import android.os.Handler;, +import android.os.Looper;, +import android.os.Message;, +, +final class PostViaHandler extends Handler {, +, +    PostViaHandler(Looper looper) {, +        super(looper);, +    }, +, +    void enqueue(Object event, Subscription subscription) {, +        PendingPost pendingPost = PendingPost.obtainPendingPost(event, subscription);, +        Message message = obtainMessage();, +        message.obj = pendingPost;, +        if (!sendMessage(message)) {, +            throw new RuntimeException("Could not send handler message");, +        }, +    }, +, +    @Override, +    public void handleMessage(Message msg) {, +        PendingPost pendingPost = (PendingPost) msg.obj;, +        Object event = pendingPost.event;, +        Subscription subscription = pendingPost.subscription;, +        PendingPost.releasePendingPost(pendingPost);, +        EventBus.postToSubscribtion(subscription, event);, +    }, +, +}, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +++ b/EventBus/src/de/greenrobot/event/PendingPost.java, +++ b/EventBus/src/de/greenrobot/event/PostViaHandler.java, +package de.greenrobot.event;, +, +import android.os.Handler;, +import android.os.Looper;, +import android.os.Message;, +, +final class PostViaHandler extends Handler {, +, +    PostViaHandler(Looper looper) {, +        super(looper);, +    }, +, +    void enqueue(Object event, Subscription subscription) {, +        PendingPost pendingPost = PendingPost.obtainPendingPost(event, subscription);, +        Message message = obtainMessage();, +        message.obj = pendingPost;, +        if (!sendMessage(message)) {, +            throw new RuntimeException("Could not send handler message");, +        }, +    }, +, +    @Override, +    public void handleMessage(Message msg) {, +        PendingPost pendingPost = (PendingPost) msg.obj;, +        Object event = pendingPost.event;, +        Subscription subscription = pendingPost.subscription;, +        PendingPost.releasePendingPost(pendingPost);, +        EventBus.postToSubscribtion(subscription, event);, +    }, +, +}, +++ b/EventBus/src/de/greenrobot/event/Subscription.java, +package de.greenrobot.event;, +, +import java.lang.reflect.Method;, +, +final class Subscription {, +    final Object subscriber;, +    final Method method;, +    final ThreadMode threadMode;, +, +    Subscription(Object subscriber, Method method, ThreadMode threadMode) {, +        this.subscriber = subscriber;, +        this.method = method;, +        this.threadMode = threadMode;, +    }, +, +    @Override, +    public boolean equals(Object other) {, +        if (other instanceof Subscription) {, +            Subscription otherSubscription = (Subscription) other;, +            // Super slow (improve once used): http://code.google.com/p/android/issues/detail?id=7811, +            return subscriber == otherSubscription.subscriber && method.equals(otherSubscription.method);, +        } else {, +            return false;, +        }, +    }, +, +    @Override, +    public int hashCode() {]