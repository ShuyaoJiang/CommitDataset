[+++ b/EventBus/src/de/greenrobot/event/EventBus.java, +    private final Map<Class<?>, Object> stickyEvents;, +        stickyEvents = new ConcurrentHashMap<Class<?>, Object>();, +, +        Object stickyEvent = stickyEvents.get(eventType);, +        if (stickyEvent != null) {, +            postToSubscription(newSubscription, stickyEvent, Looper.getMainLooper() == Looper.myLooper());, +        }, +    /** Posts the given event to the event bus. */, +    public void postSticky(Object event) {, +        post(event);, +        stickyEvents.put(event.getClass(), event);, +    }, +, +++ b/EventBus/src/de/greenrobot/event/EventBus.java, +    private final Map<Class<?>, Object> stickyEvents;, +        stickyEvents = new ConcurrentHashMap<Class<?>, Object>();, +, +        Object stickyEvent = stickyEvents.get(eventType);, +        if (stickyEvent != null) {, +            postToSubscription(newSubscription, stickyEvent, Looper.getMainLooper() == Looper.myLooper());, +        }, +    /** Posts the given event to the event bus. */, +    public void postSticky(Object event) {, +        post(event);, +        stickyEvents.put(event.getClass(), event);, +    }, +, +++ b/EventBusTest/src/de/greenrobot/event/test/EventBusStickyEventTest.java, +/*, + * Copyright (C) 2012 Markus Junginger, greenrobot (http://greenrobot.de), + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package de.greenrobot.event.test;, +, +, +/**, + * @author Markus Junginger, greenrobot, + */, +public class EventBusStickyEventTest extends AbstractEventBusTest {, +, +    public void testPostInCurrentThread() throws InterruptedException {, +        eventBus.postSticky("Sticky");, +        eventBus.register(this);, +        assertEquals("Sticky", lastEvent);, +        assertEquals(Thread.currentThread(), lastThread);, +    }, +, +    public void onEvent(String event) {, +        trackEvent(event);, +    }, +, +}]