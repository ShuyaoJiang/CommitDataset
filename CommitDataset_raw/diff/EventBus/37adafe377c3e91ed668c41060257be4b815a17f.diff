[+++ b/EventBus/src/de/greenrobot/event/util/ErrorDialogFragmentFactory.java, +    protected T prepareErrorFragment(ThrowableFailureEvent event, boolean finishAfterDialog,, +            Bundle argumentsForErrorDialog) {, +        if (event.isSuppressErrorUi()) {, +            // Show nothing by default, +            return null;, +        }, +++ b/EventBus/src/de/greenrobot/event/util/ErrorDialogFragmentFactory.java, +    protected T prepareErrorFragment(ThrowableFailureEvent event, boolean finishAfterDialog,, +            Bundle argumentsForErrorDialog) {, +        if (event.isSuppressErrorUi()) {, +            // Show nothing by default, +            return null;, +        }, +++ b/EventBus/src/de/greenrobot/event/util/ErrorDialogManager.java, +            checkLogException(event);, +            if (errorFragment != null) {, +        }, +            checkLogException(event);, +, +            if (errorFragment != null) {, +        }, +    , +    protected static void checkLogException(ThrowableFailureEvent event) {, +        if (factory.config.logExceptions) {, +            String tag = factory.config.tagForLoggingExceptions;, +            if (tag == null) {, +                tag = EventBus.TAG;, +            }, +            Log.i(tag, "Error dialog manager received exception", event.throwable);, +        }, +    }, +, +++ b/EventBus/src/de/greenrobot/event/util/ErrorDialogFragmentFactory.java, +    protected T prepareErrorFragment(ThrowableFailureEvent event, boolean finishAfterDialog,, +            Bundle argumentsForErrorDialog) {, +        if (event.isSuppressErrorUi()) {, +            // Show nothing by default, +            return null;, +        }, +++ b/EventBus/src/de/greenrobot/event/util/ErrorDialogManager.java, +            checkLogException(event);, +            if (errorFragment != null) {, +        }, +            checkLogException(event);, +, +            if (errorFragment != null) {, +        }, +    , +    protected static void checkLogException(ThrowableFailureEvent event) {, +        if (factory.config.logExceptions) {, +            String tag = factory.config.tagForLoggingExceptions;, +            if (tag == null) {, +                tag = EventBus.TAG;, +            }, +            Log.i(tag, "Error dialog manager received exception", event.throwable);, +        }, +    }, +, +++ b/EventBus/src/de/greenrobot/event/util/ThrowableFailureEvent.java, +/**, + * A generic failure event, which can be used by apps to propagate thrown exceptions. Also used in conjunction with, + * {@link ErrorDialogManager}., + */, +    protected final Throwable throwable;, +    protected final boolean suppressErrorUi;, +        suppressErrorUi = false;, +    }, +, +    /**, +     * @param suppressErrorUi, +     *            true indicates to the receiver that no error UI (e.g. dialog) should now displayed., +     */, +    public ThrowableFailureEvent(Throwable throwable, boolean suppressErrorUi) {, +        this.throwable = throwable;, +        this.suppressErrorUi = suppressErrorUi;, +    }, +, +    public Throwable getThrowable() {, +        return throwable;, +    }, +, +    public boolean isSuppressErrorUi() {, +        return suppressErrorUi;]