Move oppositeNode() from Graphs to Endpoints and rename it otherNode(). Also make a few methods final. It changes the following code:

Graphs.oppositeNode(graph, edge, node);

to this:

graph.incidentNodes(edge).otherNode(node);

The oppositeNode() method in Graphs always kind of bugged me. It takes three parameters, which is a lot for a utility method. More importantly, the last two parameters were both of type Object, with no "obviously correct" ordering, so it was easy to accidentally swap them and get a run-time error. Finally, with the introduction of the Endpoints class, this moves the method to the more logically correct place. Someone looking for this method was probably already dealing with incidentNodes() and Endpoints. It makes a lot more sense to say "hey, sorry you can't call target() since this is undirected, try otherNode() instead!" if it's in the same class.

In terms of the change itself, the more fluent style seems like a big win. And there's not even a burden to third-party implementations of Graph/Network, because we will have the only implementations of Endpoints (the constructor is private). So I see only positives and no negatives for this change.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=126859221
