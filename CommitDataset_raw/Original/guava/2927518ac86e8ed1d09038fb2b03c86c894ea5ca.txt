Handle InheritableThreadLocals correctly on Java 9.

The internal Finalizer class is used by FinalizableReferenceQueue. In order to avoid holding a reference to the ClassLoader that loaded the class, it is necessary to avoid inheriting any ThreadLocals in the thread running the Finalizer code. Previously, we did this with a nasty hack accessing a private field in Thread. Although that field still exists in Java 9, private accesses like these are not allowed by default. This particularly access is also not needed on Java 9, since there is now a Thread constructor with a boolean parameter that says whether to inherit ThreadLocals. So we use that constructor if it is present, in preference to the field access.

Fixes https://github.com/google/guava/issues/2723.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=171212577
