BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (gradle.properties, castorbuilder.properties, mapping.xml, ... ).  renames some files.
 This change set is mainly composed of:  

1. Changes to package org.apache.commons.logging:  

1. Changes to package org.springframework.aop.interceptor:  

1. Changes to package org.springframework.aop.support:  

1. Changes to package org.springframework.beans.factory.config:  

1. Changes to package org.springframework.beans.propertyeditors:  

1. Changes to package org.springframework.context.annotation:  

1. Changes to package org.springframework.context.config:  

1. Changes to package org.springframework.context.event:  

1. Changes to package org.springframework.context.support:  

1. Changes to package org.springframework.context.weaving:  

1. Changes to package org.springframework.core.codec:  

1. Changes to package org.springframework.core.env:  

1. Changes to package org.springframework.core.log:  

1. Changes to package org.springframework.expression.spel.ast:  

1. Changes to package org.springframework.expression.spel.standard:  

1. Changes to package org.springframework.http:  

1. Changes to package org.springframework.http.client:  

1. Changes to package org.springframework.http.server.reactive:  

1. Changes to package org.springframework.instrument.classloading:  

1. Changes to package org.springframework.jdbc.core.metadata:  

1. Changes to package org.springframework.jndi:  

1. Changes to package org.springframework.messaging:  

1.1. Add an interface declaration  for reactive message handler. It allows to:

	Handle message

2. Changes to package org.springframework.messaging.handler:  

2.1. Add a class for composite message condition. It allows to:

	Instantiate composite message condition  with message conditions;
	Instantiate composite message condition  with message conditions list;
	Get message conditions;
	Get condition;
	Combine other composite message condition;
	Combine first message condition;
	Get matching condition;
	Compare  to other composite message condition;
	Compare first message condition;
	Check compatible;
	Check if composite message condition equals;
	Hash code;
	Convert composite message condition to string

3. Changes to package org.springframework.messaging.handler.annotation.support:  

3. Changes to package org.springframework.messaging.handler.annotation.support.reactive:  

3.1. Add a class for destination variable method argument resolver tests. It allows to:

	Check if destination variable method argument resolver tests supports parameter;
	Resolve argument;
	Resolve argument  not found;
	Handle message

3.2. Add a class for headers method argument resolver. It allows to:

	Check if headers method argument resolver supports parameter;
	Resolve argument value

3.3. Add a class for message mapping message handler. It allows to:

	Instantiate message mapping message handler;
	Set handlers;
	Set handler predicate;
	Get handler predicate;
	Set auto detect disabled;
	Set decoders;
	Get decoders;
	Set validator;
	Get validator;
	Set path matcher;
	Get path matcher;
	Set conversion service;
	Get conversion service;
	Set embedded value resolver;
	Handle init argument resolvers;
	Handle init return value handlers;
	Handle init handler predicate;
	Get mapping  for method;
	Get condition;
	Get direct lookup mappings;
	Get destination;
	Get matching mapping;
	Get mapping comparator;
	Create exception method resolver  for bean type class

3.4. Add a class for payload method argument resolver. It allows to:

	Instantiate payload method argument resolver  with decoders list, validator, reactive adapter registry and reactive adapter registry;
	Get decoders;
	Get validator;
	Get adapter registry;
	Check if payload method argument resolver is use default resolution;
	Check if payload method argument resolver supports parameter;
	Resolve argument;
	Extract content;
	Get unexpected payload error;
	Get mime type;
	Decode content;
	Handle read error;
	Handle missing body;

4. Changes to package org.springframework.messaging.handler.invocation:  

4.1. Add a class for test exception resolver. It allows to:

	Instantiate test exception resolver  with handler type class;
	Handle init exception mappings

5. Changes to package org.springframework.messaging.handler.invocation.reactive:  

5.1. Add a class for abstract encoder method return value handler. It allows to:

	Instantiate abstract encoder method return value handler  with encoders list, reactive adapter registry and reactive adapter registry;
	Get encoders;
	Get adapter registry;
	Check if abstract encoder method return value handler supports return type;
	Handle return value;
	Encode content;
	Get element type;
	Get encoder;
	Encode value;
	Handle encoded content;
	Handle no content

5.2. Add a class for argument resolver configurer. It allows to:

	Add custom resolver;
	Get custom resolvers

5.3. Add an interface declaration  for handler method argument resolver. It allows to:

	Check if handler method argument resolver supports parameter;
	Resolve argument

5.4. Add a class for handler method argument resolver composite. It allows to:

	Add resolver;
	Add resolvers;
	Get resolvers;
	Handle clear;
	Check if handler method argument resolver composite supports parameter;
	Resolve argument;
	Get argument resolver

5.5. Add an interface declaration  for handler method return value handler. It allows to:

	Check if handler method return value handler supports return type;
	Handle return value

5.6. Add a class for handler method return value handler composite. It allows to:

	Get return value handlers;
	Handle clear;
	Add handler;
	Add handlers;
	Check if handler method return value handler composite supports return type;
	Handle return value;
	Get return value handler

5.7. Add a class for invocable handler method. It allows to:

	Instantiate invocable handler method  with handler method;
	Instantiate invocable handler method  with method;
	Set argument resolvers;
	Get resolvers;
	Set parameter name discoverer;
	Get parameter name discoverer;
	Set reactive adapter registry;
	Invoke message;
	Get method argument values;
	Log argument error  if necessary;
	Check if invocable handler method is async void return type

5.8. Add a class for invocable helper. It allows to:

	Instantiate invocable helper  with exception method resolver factory function;
	Add argument resolvers;
	Add return value handlers;
	Set reactive adapter registry;
	Get reactive adapter registry;
	Register exception handler advice;
	Handle init message mapping method;
	Handle init exception handler method;
	Handle message;
	Handle return value

5.9. Add a class for return value handler configurer. It allows to:

	Add custom handler;
	Get custom handlers

5.10. Add a class for stub argument resolver. It allows to:

	Instantiate stub argument resolver;
	Instantiate stub argument resolver  with value type class;
	Get resolved parameters;
	Check if stub argument resolver supports parameter;
	Resolve argument

5.11. Add an interface declaration  for sync handler method argument resolver. It allows to:

	Resolve argument;
	Resolve argument value

5.12. Add a class for test encoder method return value handler. It allows to:

	Instantiate test encoder method return value handler  with encoders list, reactive adapter registry and reactive adapter registry;
	Get content;
	Get content  as strings;
	Handle encoded content;
	Handle no content

5.13. Add a class for test return value handler. It allows to:

	Get last return value;
	Check if test return value handler supports return type;
	Handle return value;
	Save value

6. Changes to package org.springframework.messaging.rsocket:  

6.1. Add a class for message handler acceptor. It allows to:

	Set default data mime type;
	Accept connection setup payload;
	Apply sending R socket;
	Create R socket

6.2. Add a class for messaging R socket. It allows to:

	Instantiate messaging R socket  with handler function, sending R socket, default data mime type, R socket strategies and R socket strategies;
	Handle connection setup payload;
	Get fire and forget;
	Get request response;
	Get request stream;
	Get request channel;
	Handle metadata push;
	Handle payload;
	Ref count;
	Handle first payload;
	Get destination;
	Retain data and release payload;
	Create headers

6.3. Add a class for payload utils. It allows to:

	Retain data and release payload;
	Create payload;

6.4. Add a class for r socket message handler. It allows to:

	Set encoders;
	Get encoders;
	Set R socket strategies;
	Get R socket strategies;
	Handle after properties set;
	Handle init return value handlers;
	Handle no match

6.5. Add a class for r socket payload return value handler. It allows to:

	Instantiate r socket payload return value handler  with encoders list, reactive adapter registry and reactive adapter registry;
	Handle encoded content;
	Handle no content;
	Get reply mono

6.6. Add a class for r socket requester method argument resolver. It allows to:

	Check if r socket requester method argument resolver supports parameter;
	Resolve argument

7. Changes to package org.springframework.messaging.simp:  

7. Changes to package org.springframework.messaging.simp.config:  

7. Changes to package org.springframework.oxm.config:  

7. Changes to package org.springframework.scheduling.config:  

7. Changes to package org.springframework.test.context:  

7. Changes to package org.springframework.test.context.event:  

7.1. Add a class for after test class event. It allows to:

	Instantiate after test class event  with source test context

7.2. Add a class for after test execution event. It allows to:

	Instantiate after test execution event  with source test context

7.3. Add a class for after test method event. It allows to:

	Instantiate after test method event  with source test context

7.4. Add a class for before test class event. It allows to:

	Instantiate before test class event  with source test context

7.5. Add a class for before test execution event. It allows to:

	Instantiate before test execution event  with source test context

7.6. Add a class for before test method event. It allows to:

	Instantiate before test method event  with source test context

7.7. Add a class for event publishing test execution listener. It allows to:

	Get order;
	Process event publishing test execution listener event publishing test execution listener before test class;
	Prepare test instance;
	Process event publishing test execution listener event publishing test execution listener before test method;
	Process event publishing test execution listener event publishing test execution listener before test execution;
	Process event publishing test execution listener event publishing test execution listener after test execution;
	Process event publishing test execution listener event publishing test execution listener after test method;
	Process event publishing test execution listener event publishing test execution listener after test class

7.8. Add a class for event publishing test execution listener tests. It allows to:

	Configure mock;
	Publish event publishing test execution listener tests before test class event;
	Publish prepare test instance event;
	Publish event publishing test execution listener tests before test method event;
	Publish event publishing test execution listener tests before test execution event;
	Publish event publishing test execution listener tests after test execution event;
	Publish event publishing test execution listener tests after test method event;
	Publish event publishing test execution listener tests after test class event;
	Check if event publishing test execution listener tests does not publish before test class event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish prepare test instance event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish before test method event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish before test execution event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish after test execution event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish after test method event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish after test class event if application context has not been loaded;
	Assert event;
	Assert no event

7.9. Add a class for prepare test instance event. It allows to:

	Instantiate prepare test instance event  with source test context

7.10. Add a class for test context event. It allows to:

	Instantiate test context event  with source test context;
	Get source;
	Get test context

8. Changes to package org.springframework.test.context.junit.jupiter:  

8. Changes to package org.springframework.test.web.reactive.server:  

8. Changes to package org.springframework.test.web.servlet.htmlunit:  

8. Changes to package org.springframework.test.web.servlet.setup:  

8. Changes to package org.springframework.transaction:  

8. Changes to package org.springframework.ui:  

8. Changes to package org.springframework.util:  

8. Changes to package org.springframework.web.client:  

8. Changes to package org.springframework.web.context.support:  

8. Changes to package org.springframework.web.filter.reactive:  

8. Changes to package org.springframework.web.reactive.function.client:  

8. Changes to package org.springframework.web.reactive.result.method.annotation:  

8. Changes to package org.springframework.web.servlet.tags.form:  

8. Changes to package org.springframework.web.util:  

