BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (gradle.properties, castorbuilder.properties, mapping.xml, ... ).  renames some files.
 This change set is mainly composed of:  

1. Changes to package org.apache.commons.logging:  

1. Changes to package org.springframework.aop.interceptor:  

1. Changes to package org.springframework.aop.support:  

1. Changes to package org.springframework.asm:  

1. Changes to package org.springframework.beans.factory.config:  

1. Changes to package org.springframework.beans.factory.support:  

1. Changes to package org.springframework.beans.propertyeditors:  

1. Changes to package org.springframework.cache.annotation:  

1. Changes to package org.springframework.cache.interceptor:  

1. Changes to package org.springframework.context:  

1. Changes to package org.springframework.context.annotation:  

1. Changes to package org.springframework.context.config:  

1. Changes to package org.springframework.context.event:  

1. Changes to package org.springframework.context.weaving:  

1. Changes to package org.springframework.core:  

1. Changes to package org.springframework.core.codec:  

1. Changes to package org.springframework.core.env:  

1. Changes to package org.springframework.core.io.support:  

1. Changes to package org.springframework.core.log:  

1. Changes to package org.springframework.core.type:  

1. Changes to package org.springframework.core.type.filter:  

1. Changes to package org.springframework.expression.spel.ast:  

1. Changes to package org.springframework.expression.spel.standard:  

1. Changes to package org.springframework.http:  

1. Changes to package org.springframework.http.client:  

1. Changes to package org.springframework.http.codec:  

1.1. Add a class for resource http message reader. It allows to:

	Instantiate resource http message reader;
	Instantiate resource http message reader  with resource decoder;
	Get read hints

2. Changes to package org.springframework.http.codec.support:  

2. Changes to package org.springframework.http.server.reactive:  

2. Changes to package org.springframework.instrument.classloading:  

2. Changes to package org.springframework.jdbc.core.metadata:  

2. Changes to package org.springframework.jndi:  

2. Changes to package org.springframework.messaging:  

2.1. Add an interface declaration  for reactive message handler. It allows to:

	Handle message

3. Changes to package org.springframework.messaging.converter:  

3. Changes to package org.springframework.messaging.handler:  

3.1. Add a class for composite message condition. It allows to:

	Instantiate composite message condition  with message conditions;
	Instantiate composite message condition  with message conditions list;
	Get message conditions;
	Get condition;
	Combine other composite message condition;
	Combine first message condition;
	Get matching condition;
	Compare  to other composite message condition;
	Compare first message condition;
	Check compatible;
	Check if composite message condition equals;
	Hash code;
	Convert composite message condition to string

4. Changes to package org.springframework.messaging.handler.annotation.support:  

4. Changes to package org.springframework.messaging.handler.annotation.support.reactive:  

4.1. Add a class for destination variable method argument resolver tests. It allows to:

	Check if destination variable method argument resolver tests supports parameter;
	Resolve argument;
	Resolve argument  not found;
	Handle message

4.2. Add a class for headers method argument resolver. It allows to:

	Check if headers method argument resolver supports parameter;
	Resolve argument value

4.3. Add a class for message mapping message handler. It allows to:

	Instantiate message mapping message handler;
	Set handlers;
	Set handler predicate;
	Get handler predicate;
	Set auto detect disabled;
	Set decoders;
	Get decoders;
	Set validator;
	Get validator;
	Set path matcher;
	Get path matcher;
	Set conversion service;
	Get conversion service;
	Set embedded value resolver;
	Handle init argument resolvers;
	Handle init return value handlers;
	Handle init handler predicate;
	Get mapping  for method;
	Get condition;
	Get direct lookup mappings;
	Get destination;
	Get matching mapping;
	Get mapping comparator;
	Create exception method resolver  for bean type class

4.4. Add a class for payload method argument resolver. It allows to:

	Instantiate payload method argument resolver  with decoders list, validator, reactive adapter registry and reactive adapter registry;
	Get decoders;
	Get validator;
	Get adapter registry;
	Check if payload method argument resolver is use default resolution;
	Check if payload method argument resolver supports parameter;
	Resolve argument;
	Extract content;
	Get unexpected payload error;
	Get mime type;
	Decode content;
	Handle read error;
	Handle missing body;

5. Changes to package org.springframework.messaging.handler.invocation:  

5.1. Add a class for test exception resolver. It allows to:

	Instantiate test exception resolver  with handler type class;
	Handle init exception mappings

6. Changes to package org.springframework.messaging.handler.invocation.reactive:  

6.1. Add a class for abstract encoder method return value handler. It allows to:

	Instantiate abstract encoder method return value handler  with encoders list, reactive adapter registry and reactive adapter registry;
	Get encoders;
	Get adapter registry;
	Check if abstract encoder method return value handler supports return type;
	Handle return value;
	Encode content;
	Get element type;
	Get encoder;
	Encode value;
	Handle encoded content;
	Handle no content

6.2. Add a class for argument resolver configurer. It allows to:

	Add custom resolver;
	Get custom resolvers

6.3. Add an interface declaration  for handler method argument resolver. It allows to:

	Check if handler method argument resolver supports parameter;
	Resolve argument

6.4. Add a class for handler method argument resolver composite. It allows to:

	Add resolver;
	Add resolvers;
	Get resolvers;
	Handle clear;
	Check if handler method argument resolver composite supports parameter;
	Resolve argument;
	Get argument resolver

6.5. Add an interface declaration  for handler method return value handler. It allows to:

	Check if handler method return value handler supports return type;
	Handle return value

6.6. Add a class for handler method return value handler composite. It allows to:

	Get return value handlers;
	Handle clear;
	Add handler;
	Add handlers;
	Check if handler method return value handler composite supports return type;
	Handle return value;
	Get return value handler

6.7. Add a class for invocable handler method. It allows to:

	Instantiate invocable handler method  with handler method;
	Instantiate invocable handler method  with method;
	Set argument resolvers;
	Get resolvers;
	Set parameter name discoverer;
	Get parameter name discoverer;
	Set reactive adapter registry;
	Invoke message;
	Get method argument values;
	Log argument error  if necessary;
	Check if invocable handler method is async void return type

6.8. Add a class for invocable helper. It allows to:

	Instantiate invocable helper  with exception method resolver factory function;
	Add argument resolvers;
	Add return value handlers;
	Set reactive adapter registry;
	Get reactive adapter registry;
	Register exception handler advice;
	Handle init message mapping method;
	Handle init exception handler method;
	Handle message;
	Handle return value

6.9. Add a class for return value handler configurer. It allows to:

	Add custom handler;
	Get custom handlers

6.10. Add a class for stub argument resolver. It allows to:

	Instantiate stub argument resolver;
	Instantiate stub argument resolver  with value type class;
	Get resolved parameters;
	Check if stub argument resolver supports parameter;
	Resolve argument

6.11. Add an interface declaration  for sync handler method argument resolver. It allows to:

	Resolve argument;
	Resolve argument value

6.12. Add a class for test encoder method return value handler. It allows to:

	Instantiate test encoder method return value handler  with encoders list, reactive adapter registry and reactive adapter registry;
	Get content;
	Get content  as strings;
	Handle encoded content;
	Handle no content

6.13. Add a class for test return value handler. It allows to:

	Get last return value;
	Check if test return value handler supports return type;
	Handle return value;
	Save value

7. Changes to package org.springframework.messaging.rsocket:  

7.1. Add a class for message handler acceptor. It allows to:

	Set default data mime type;
	Accept connection setup payload;
	Apply sending R socket;
	Create R socket

7.2. Add a class for messaging R socket. It allows to:

	Instantiate messaging R socket  with handler function, sending R socket, default data mime type, R socket strategies and R socket strategies;
	Handle connection setup payload;
	Get fire and forget;
	Get request response;
	Get request stream;
	Get request channel;
	Handle metadata push;
	Handle payload;
	Ref count;
	Handle first payload;
	Get destination;
	Retain data and release payload;
	Create headers

7.3. Add a class for payload utils. It allows to:

	Retain data and release payload;
	Create payload;

7.4. Add a class for r socket message handler. It allows to:

	Set encoders;
	Get encoders;
	Set R socket strategies;
	Get R socket strategies;
	Handle after properties set;
	Handle init return value handlers;
	Handle no match

7.5. Add a class for r socket payload return value handler. It allows to:

	Instantiate r socket payload return value handler  with encoders list, reactive adapter registry and reactive adapter registry;
	Handle encoded content;
	Handle no content;
	Get reply mono

7.6. Add a class for r socket requester method argument resolver. It allows to:

	Check if r socket requester method argument resolver supports parameter;
	Resolve argument

8. Changes to package org.springframework.messaging.simp:  

8. Changes to package org.springframework.mock.web:  

8. Changes to package org.springframework.oxm.config:  

8. Changes to package org.springframework.scheduling.annotation:  

8. Changes to package org.springframework.scheduling.config:  

8. Changes to package org.springframework.test.annotation:  

8. Changes to package org.springframework.test.context:  

8. Changes to package org.springframework.test.context.event:  

8.1. Add a class for after test class event. It allows to:

	Instantiate after test class event  with source test context

8.2. Add a class for after test execution event. It allows to:

	Instantiate after test execution event  with source test context

8.3. Add a class for after test method event. It allows to:

	Instantiate after test method event  with source test context

8.4. Add a class for before test class event. It allows to:

	Instantiate before test class event  with source test context

8.5. Add a class for before test execution event. It allows to:

	Instantiate before test execution event  with source test context

8.6. Add a class for before test method event. It allows to:

	Instantiate before test method event  with source test context

8.7. Add a class for event publishing test execution listener. It allows to:

	Get order;
	Process event publishing test execution listener event publishing test execution listener before test class;
	Prepare test instance;
	Process event publishing test execution listener event publishing test execution listener before test method;
	Process event publishing test execution listener event publishing test execution listener before test execution;
	Process event publishing test execution listener event publishing test execution listener after test execution;
	Process event publishing test execution listener event publishing test execution listener after test method;
	Process event publishing test execution listener event publishing test execution listener after test class

8.8. Add a class for event publishing test execution listener tests. It allows to:

	Configure mock;
	Publish event publishing test execution listener tests before test class event;
	Publish prepare test instance event;
	Publish event publishing test execution listener tests before test method event;
	Publish event publishing test execution listener tests before test execution event;
	Publish event publishing test execution listener tests after test execution event;
	Publish event publishing test execution listener tests after test method event;
	Publish event publishing test execution listener tests after test class event;
	Check if event publishing test execution listener tests does not publish before test class event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish prepare test instance event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish before test method event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish before test execution event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish after test execution event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish after test method event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish after test class event if application context has not been loaded;
	Assert event;
	Assert no event

8.9. Add a class for prepare test instance event. It allows to:

	Instantiate prepare test instance event  with source test context

8.10. Add a class for test context event. It allows to:

	Instantiate test context event  with source test context;
	Get source;
	Get test context

9. Changes to package org.springframework.test.context.junit.jupiter:  

9. Changes to package org.springframework.test.context.junit4:  

9. Changes to package org.springframework.test.context.transaction:  

9. Changes to package org.springframework.test.web.servlet.htmlunit:  

9. Changes to package org.springframework.test.web.servlet.setup:  

9. Changes to package org.springframework.transaction:  

9. Changes to package org.springframework.transaction.annotation:  

9. Changes to package org.springframework.transaction.interceptor:  

9. Changes to package org.springframework.ui:  

9. Changes to package org.springframework.util:  

9. Changes to package org.springframework.web.client:  

9. Changes to package org.springframework.web.context.support:  

9. Changes to package org.springframework.web.filter:  

9. Changes to package org.springframework.web.filter.reactive:  

9. Changes to package org.springframework.web.method.annotation:  

9. Changes to package org.springframework.web.multipart.commons:  

9. Changes to package org.springframework.web.reactive:  

9. Changes to package org.springframework.web.reactive.function.client:  

9. Changes to package org.springframework.web.reactive.function.server:  

9. Changes to package org.springframework.web.reactive.result.condition:  

9. Changes to package org.springframework.web.reactive.result.method:  

9. Changes to package org.springframework.web.reactive.result.method.annotation:  

9.1. Add a class for continuation handler method argument resolver. It allows to:

	Check if continuation handler method argument resolver supports parameter;
	Resolve argument

10. Changes to package org.springframework.web.reactive.socket.adapter:  

10. Changes to package org.springframework.web.reactive.socket.client:  

10. Changes to package org.springframework.web.reactive.socket.server.upgrade:  

10. Changes to package org.springframework.web.server.handler:  

10. Changes to package org.springframework.web.servlet.function:  

10.1. Add a class for default entity response builder tests. It allows to:

	Get message converters;
	Process default entity response builder tests default entity response builder tests from object;
	Process default entity response builder tests default entity response builder tests from object type reference;
	Handle status;
	Allow default entity response builder tests;
	Handle content length;
	Handle content type;
	Handle etag;
	Handle last modified;
	Handle cache control tag;
	Vary default entity response builder tests by;
	Handle header;
	Handle headers;
	Handle cookie;
	Handle cookies;
	Not modified etag;
	Handle not modified last modified

10.2. Add a class for default rendering response tests. It allows to:

	Get message converters;
	Create default rendering response tests;
	Handle status;
	Handle headers;
	Handle model attribute;
	Handle model attribute conventions;
	Handle model attributes;
	Handle model attributes conventions;
	Handle cookies;
	Not modified etag;
	Handle not modified last modified

10.3. Add a class for default server request builder tests. It allows to:

	Process default server request builder tests default server request builder tests from

10.4. Add a class for default server request tests. It allows to:

	Handle method;
	Handle uri;
	Handle uri builder;
	Attribute default server request tests;
	Handle params;
	Handle empty query param;
	Handle absent query param;
	Handle path variable;
	Handle path variable not found;
	Handle path variables;
	Handle header;
	Handle cookies;
	Handle body class;
	Handle body parameterized type reference;
	Handle body unacceptable;
	Handle session;
	Handle principal;
	Get name

10.5. Add a class for default server response builder tests. It allows to:

	Get message converters;
	Handle status;
	Process default server response builder tests default server response builder tests from;
	O default server response builder tests;
	Get created;
	Get accepted;
	No content;
	See other;
	Handle temporary redirect;
	Handle permanent redirect;
	Handle bad request;
	Handle not found;
	Handle unprocessable entity;
	Allow default server response builder tests;
	Handle content length;
	Handle content type;
	E tag;
	Handle last modified;
	Handle cache control tag;
	Vary default server response builder tests by;
	Handle status code;
	Handle headers;
	Handle cookies;
	Build default server response builder tests;
	Not modified etag;
	Handle not modified last modified;
	Handle body;
	Handle body with parameterized type reference;
	Handle body completion stage;
	Handle body publisher

10.6. Add an interface declaration  for handler filter function. It allows to:

	Get filter;
	And after handler filter function then;
	Apply handler function;
	Process handler filter function handler filter function of request processor;
	Process handler filter function handler filter function of response processor;
	Process handler filter function handler filter function of error handler

10.7. Add an interface declaration  for handler function. It allows to:

	Handle server request

10.8. Add a class for path resource lookup function. It allows to:

	Instantiate path resource lookup function  with location resource;
	Apply server request;
	Get process path;
	Check if path resource lookup function is invalid path;
	Check if path resource lookup function is resource under location;
	Convert path resource lookup function to string

10.9. Add a class for path resource lookup function tests. It allows to:

	Handle normal;
	Sub path;
	Handle not found;
	Compose resource lookup function

10.10. Add an interface declaration  for request predicate. It allows to:

	Handle test;
	And other request predicate;
	Negate request predicate;
	O other request predicate;
	Get nest;
	Accept request predicates visitor

10.11. Add a class for request predicate tests. It allows to:

	Create request;
	And request predicate tests;
	Negate request predicate tests;
	O request predicate tests

10.12. Add a class for request predicates tests. It allows to:

	All request predicates tests;
	Handle method;
	Handle methods;
	All methods;
	Handle path;
	Handle path encoded;
	Handle path predicates;
	Handle headers;
	Handle content type;
	Accept request predicates tests;
	Handle path extension;
	Handle param

10.13. Add a class for resource handler function tests. It allows to:

	Create context;
	Get message converters;
	Get resource handler function tests;
	Handle head;
	Handle options

10.14. Add an interface declaration  for router function. It allows to:

	Get route;
	And other router function;
	And other;
	And route;
	And nest;
	Get filter;
	Accept router functions visitor

10.15. Add a class for router function builder. It allows to:

	Add router function;
	Add request predicate;
	GET handler function;
	GET request predicate;
	HEAD handler function;
	HEAD request predicate;
	POST handler function;
	POST request predicate;
	PUT handler function;
	PUT request predicate;
	PATCH handler function;
	PATCH request predicate;
	DELETE handler function;
	DELETE request predicate;
	Get oPTIONS;
	Get resources;
	Get nest;
	Get path;
	Get filter;
	Before router function builder;
	Process router function builder router function builder after;
	Process router function builder router function builder on error;
	Build router function builder

10.16. Add a class for router function builder tests. It allows to:

	Handle route;
	Handle handler function;
	Handle resources;
	Handle nest;
	Handle filters

10.17. Add a class for router function tests. It allows to:

	And router function tests;
	And other;
	And route;
	Handle filter;
	Get handler method

10.18. Add a class for router functions tests. It allows to:

	Handle route match;
	Handle route no match;
	Handle nest match;
	Handle nest no match

10.19. Add a class for to string visitor. It allows to:

	Nested request predicate;
	Handle route;
	Handle resources;
	Handle unknown;
	Indent to string visitor;
	Handle method;
	Handle path;
	Handle path extension;
	Handle header;
	Handle param;
	Start to string visitor;
	And to string visitor;
	End to string visitor;
	O to string visitor;
	Negate to string visitor;
	Convert to string visitor to string

11. Changes to package org.springframework.web.servlet.function.support:  

11.1. Add a class for router function mapping. It allows to:

	Instantiate router function mapping;
	Instantiate router function mapping  with router function;
	Set router function;
	Get router function;
	Set message converters;
	Set detect handler functions  in ancestor contexts;
	Handle after properties set;
	Handle init router function;
	Handle init message converters;
	Get handler internal

12. Changes to package org.springframework.web.servlet.handler:  

12. Changes to package org.springframework.web.servlet.mvc.condition:  

12. Changes to package org.springframework.web.servlet.mvc.method.annotation:  

12. Changes to package org.springframework.web.servlet.tags.form:  

12. Changes to package org.springframework.web.socket.sockjs.client:  

12. Changes to package org.springframework.web.util:  

