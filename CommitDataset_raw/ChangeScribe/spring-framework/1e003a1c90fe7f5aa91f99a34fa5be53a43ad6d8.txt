BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (.gitignore, .mailmap, detect-split-packages.properties, ... ).  renames some files.
 This change set is mainly composed of:  

1. Changes to package com.foo:  

1.1. Add a class for component. It allows to:

	Add component;
	Get components;
	Get name;
	Set name

1.2. Add a class for component bean definition parser. It allows to:

	Parse internal;
	Parse component element;
	Parse component;
	Parse child components

1.3. Add a class for component bean definition parser tests. It allows to:

	Set up  before class;
	Tear down  after class;
	Get bionic family;
	Handle test bionic basic;
	Handle test bionic first level children;
	Handle test bionic second level children

1.4. Add a class for component factory bean. It allows to:

	Set parent;
	Set children;
	Get object;
	Get object type;
	Check if component factory bean is singleton

1.5. Add a class for component namespace handler. It allows to:

	Handle init

2. Changes to package example.profilescan:  

2.1. Add a class for profile annotated component

2.2. Add a class for profile meta annotated component

3. Changes to package example.scannable:  

3.1. Add a class for autowired qualifier foo service. It allows to:

	Handle init;
	Get foo;
	Handle async foo;
	Check if autowired qualifier foo service is init called

3.2. Add a class for custom annotations

3.3. Add a class for default named component

3.4. Add an interface declaration  for foo dao. It allows to:

	Find foo

3.5. Add an interface declaration  for foo service. It allows to:

	Get foo;
	Handle async foo;
	Check if foo service is init called

3.6. Add a class for foo service impl. It allows to:

	Handle init;
	Get foo;
	Lookup foo;
	Handle async foo;
	Check if foo service impl is init called;
	Get foo dao

3.7. Add a class for message bean. It allows to:

	Instantiate message bean;
	Get message

3.8. Add a class for named component

3.9. Add a class for named stub dao. It allows to:

	Find named stub dao

3.10. Add a class for scoped proxy test bean. It allows to:

	Get foo;
	Handle async foo;
	Check if scoped proxy test bean is init called

3.11. Add a class for service invocation counter. It allows to:

	Handle service execution;
	Count use;
	Get count;
	Get thread local count

3.12. Add a class for stub foo dao. It allows to:

	Find foo

3.13. Add a class for package

4. Changes to package example.scannable_implicitbasepackage:  

4.1. Add an object creator class for component scan annotated config with implicit base package. It allows to:

	Handle configurable component

4.2. Add a class for configurable component. It allows to:

	Instantiate configurable component;
	Check if configurable component is flag

4.3. Add a class for scanned component

5. Changes to package example.scannable_scoped:  

5.1. Add a class for custom scope annotation bean

6. Changes to package org.aopalliance.aop:  

6.1. Add an interface declaration  for advice

6.2. Add a class for aspect exception. It allows to:

	Instantiate aspect exception;
	Instantiate aspect exception  with cause throwable

7. Changes to package org.aopalliance.intercept:  

7.1. Add an interface declaration  for constructor interceptor. It allows to:

	Construct constructor invocation

7.2. Add an interface declaration  for constructor invocation. It allows to:

	Get constructor

7.3. Add an interface declaration  for interceptor

7.4. Add an interface declaration  for invocation. It allows to:

	Get arguments

7.5. Add an interface declaration  for joinpoint. It allows to:

	Proceed joinpoint;
	Get joinpoint;
	Get static part

7.6. Add an interface declaration  for method interceptor. It allows to:

	Invoke method invocation

7.7. Add an interface declaration  for method invocation. It allows to:

	Get method

8. Changes to package org.springframework.aop:  

8.1. Add an interface declaration  for advisor. It allows to:

	Get advice;
	Check if advisor is per instance

8.2. Add an interface declaration  for after advice

8.3. Add an interface declaration  for after returning advice. It allows to:

	Process after returning advice after returning advice after returning

8.4. Add a class for aop invocation exception. It allows to:

	Instantiate aop invocation exception;
	Instantiate aop invocation exception  with cause throwable

8.5. Add an interface declaration  for before advice

8.6. Add an interface declaration  for class filter. It allows to:

	Handle matches

8.7. Add an interface declaration  for dynamic introduction advice. It allows to:

	Check if dynamic introduction advice implements interface

8.8. Add an interface declaration  for introduction advisor. It allows to:

	Get class filter;
	Validate interfaces

8.9. Add an interface declaration  for introduction aware method matcher. It allows to:

	Handle matches

8.10. Add an interface declaration  for introduction info. It allows to:

	Get interfaces

8.11. Add an interface declaration  for introduction interceptor

8.12. Add an interface declaration  for method before advice. It allows to:

	Before method before advice

8.13. Add an interface declaration  for method matcher. It allows to:

	Handle matches;
	Check if method matcher is runtime;

8.14. Add an interface declaration  for pointcut. It allows to:

	Get class filter;
	Get method matcher

8.15. Add an interface declaration  for pointcut advisor. It allows to:

	Get pointcut

8.16. Add an interface declaration  for proxy method invocation. It allows to:

	Get proxy;
	Handle invocable clone;
	Set arguments;
	Set user attribute;
	Get user attribute

8.17. Add an interface declaration  for raw target access

8.18. Add an interface declaration  for spring proxy

8.19. Add an interface declaration  for target class aware. It allows to:

	Get target class

8.20. Add an interface declaration  for target source. It allows to:

	Get target class;
	Check if target source is static;
	Get target;
	Release target

8.21. Add an interface declaration  for throws advice

8.22. Add a class for true class filter. It allows to:

	Instantiate true class filter;
	Handle matches;
	Read resolve;
	Convert true class filter to string

8.23. Add a class for true method matcher. It allows to:

	Instantiate true method matcher;
	Check if true method matcher is runtime;
	Handle matches;
	Convert true method matcher to string;
	Read resolve

8.24. Add a class for true pointcut. It allows to:

	Instantiate true pointcut;
	Get class filter;
	Get method matcher;
	Read resolve;
	Convert true pointcut to string

9. Changes to package org.springframework.aop.aspectj:  

9.1. Add a class for after advice binding tests. It allows to:

	Handle setup;
	Handle test one int arg;
	Handle test one object arg binding proxy with this;
	Handle test one object arg binding target;
	Handle test one int and one object args;
	Test needs join point;
	Test needs join point static part

9.2. Add a class for after returning advice binding tests. It allows to:

	Handle setup;
	Handle test one int arg;
	Handle test one object arg;
	Handle test one int and one object args;
	Test needs join point;
	Test needs join point static part;
	Handle test returning string;
	Handle test returning object;
	Handle test returning bean;
	Handle test returning bean array;
	Handle test no invoke when returning parameter type does not match;
	Handle test returning by type;
	Handle test returning primitive

9.3. Add a class for after throwing advice binding tests. It allows to:

	Handle setup;
	Handle test simple after throwing;
	Handle test after throwing with binding;
	Handle test after throwing with named type restriction;
	Handle test after throwing with runtime exception binding;
	Handle test after throwing with type specified;
	Handle test after throwing with runtime type specified

9.4. Add a class for around advice binding tests. It allows to:

	Process around advice binding tests around advice binding tests on set up;
	Handle test one int arg;
	Convert test one object arg bound;
	Handle test one int and one object args;
	Test around advice binding tests just join point

9.5. Add a class for around advice circular tests. It allows to:

	Test both beans are proxies

9.6. Add an interface declaration  for aspect instance factory. It allows to:

	Get aspect instance;
	Get aspect class loader

9.7. Add a class for aspect J advice parameter name discover annotation tests. It allows to:

	Handle test annotation binding;
	Handle pjp and an annotation

9.8. Add a class for aspect J advice parameter name discoverer tests. It allows to:

	Handle test no args;
	Handle test join point only;
	Handle test join point static part only;
	Handle test two join points;
	Handle test one throwable;
	Handle test one JP and one throwable;
	Handle test one JP and two throwables;
	Handle test throwable no candidates;
	Handle test returning;
	Handle test ambiguous returning;
	Handle test returning no candidates;
	Handle test this binding one candidate;
	Handle test this binding with alternate tokenizations;
	Handle test this binding two candidates;
	Handle test this binding with bad pointcut expressions;
	Handle test target binding one candidate;
	Handle test target binding with alternate tokenizations;
	Handle test target binding two candidates;
	Handle test target binding with bad pointcut expressions;
	Handle test args binding one object;
	Handle test args binding one object two candidates;
	Handle test ambiguous args binding;
	Handle test args one primitive;
	Handle test args one primitive one object;
	Handle test this and primitive;
	Handle test target and primitive;
	Handle test throwing and primitive;
	Test all  together now;
	Handle test reference binding;
	Handle test reference binding with alternate tokenizations;
	Get method;
	Assert parameter names;
	Assert exception;
	Get format;
	No args;
	Handle tjp;
	Handle tjpsp;
	Two join points;
	One throwable;
	Handle jp and one throwable;
	Handle jp and two throwables;
	One object;
	Two objects;
	One primitive;
	One object one primitive;
	One throwable one primitive;
	The big one

9.9. Add a class for aspect J after advice. It allows to:

	Instantiate aspect J after advice  with aspect J before advice method, aspect J expression pointcut, aif aspect instance factory and aif aspect instance factory;
	Invoke mi method invocation;
	Check if aspect J after advice is before advice;
	Check if aspect J after advice is after advice

9.10. Add a class for aspect J after returning advice. It allows to:

	Instantiate aspect J after returning advice  with aspect J before advice method, aspect J expression pointcut, aif aspect instance factory and aif aspect instance factory;
	Check if aspect J after returning advice is before advice;
	Check if aspect J after returning advice is after advice;
	Set returning name;
	Process aspect J after returning advice aspect J after returning advice after returning;
	Should invoke  on return value of;
	Check if aspect J after returning advice matches return value

9.11. Add a class for aspect J after throwing advice. It allows to:

	Instantiate aspect J after throwing advice  with aspect J before advice method, aspect J expression pointcut, aif aspect instance factory and aif aspect instance factory;
	Check if aspect J after throwing advice is before advice;
	Check if aspect J after throwing advice is after advice;
	Set throwing name;
	Invoke mi method invocation;
	Should invoke  on throwing

9.12. Add a class for aspect J aop utils. It allows to:

	Check if aspect J aop utils is before advice;
	Check if aspect J aop utils is after advice;
	Get aspect J precedence information  for an advisor

9.13. Add a class for aspect J around advice. It allows to:

	Instantiate aspect J around advice  with aspect J around advice method, aspect J expression pointcut, aif aspect instance factory and aif aspect instance factory;
	Check if aspect J around advice is before advice;
	Check if aspect J around advice is after advice;
	Check if aspect J around advice supports proceeding join point;
	Invoke mi method invocation;
	Handle lazy get proceeding join point

9.14. Add a class for aspect J expression pointcut advisor. It allows to:

	Set expression;
	Get expression;
	Set location;
	Get location;
	Set parameter names;
	Set parameter types;
	Set bean factory;
	Get pointcut

9.15. Add a class for aspect J expression pointcut advisor tests. It allows to:

	Handle setup;
	Handle test pointcutting

Add a local a class for call counting interceptor. It allows to:

	Invoke method invocation;
	Get count;
	Reset call counting interceptor

9.16. Add a class for aspect J method before advice. It allows to:

	Instantiate aspect J method before advice  with aspect J before advice method, aspect J expression pointcut, aif aspect instance factory and aif aspect instance factory;
	Before aspect J method before advice;
	Check if aspect J method before advice is before advice;
	Check if aspect J method before advice is after advice

9.17. Add a class for aspect J pointcut advisor. It allows to:

	Instantiate aspect J pointcut advisor  with abstract aspect J advice;
	Get set order;
	Get order;
	Check if aspect J pointcut advisor is per instance;
	Get advice;
	Get pointcut;
	Get aspect name;
	Check if aspect J pointcut advisor equals;
	Hash code

9.18. Add an interface declaration  for aspect J precedence information. It allows to:

	Get aspect name;
	Get declaration order;
	Check if aspect J precedence information is before advice;
	Check if aspect J precedence information is after advice

9.19. Add a class for aspect J proxy utils. It allows to:

	Make advisor chain aspect J capable  if necessary;
	Check if aspect J proxy utils is aspect J advice

9.20. Add a class for aspect J weaver message handler. It allows to:

	Handle message;
	Make message  for a message;
	Check if aspect J weaver message handler is ignoring;
	Handle dont ignore;
	Ignore kind

9.21. Add a class for bean name pointcut at aspect tests. It allows to:

	Handle setup;
	Handle test matching bean name;
	Handle test non matching bean name;
	Handle test programmatic proxy creation

Add a local a class for counter aspect. It allows to:

	Handle increment 1 for anonymous pointcut

9.22. Add a class for bean name pointcut matching tests. It allows to:

	Handle test matching pointcuts;
	Handle test non matching pointcuts;
	Assert match;
	Assert mis match;
	Handle matches;
	Get current proxied bean name

9.23. Add a class for before advice binding tests. It allows to:

	Handle setup;
	Handle test one int arg;
	Convert test one object arg bound;
	Handle test one int and one object args;
	Test needs join point;
	Test needs join point static part

Add a local a class for authentication logger. It allows to:

	Log authentication attempt

Add a local a class for security manager. It allows to:

	Authenticate security manager

9.24. Add a class for call counting interceptor. It allows to:

	Invoke method invocation;
	Get count;
	Reset call counting interceptor

9.25. Add a class for declare parents advisor. It allows to:

	Instantiate declare parents advisor  with interface type class, default impl class and default impl class;
	Instantiate declare parents advisor  with interface type class;
	Instantiate declare parents advisor  with interface type class, introduction interceptor and introduction interceptor;
	Get class filter;
	Validate interfaces;
	Check if declare parents advisor is per instance;
	Get advice;
	Get interfaces

9.26. Add a class for declare parents delegate ref tests. It allows to:

	Handle setup;
	Handle test introduction was made;
	Handle test introduction delegation

Add a local an interface declaration  for no methods bean

Add a local a class for no methods bean impl

9.27. Add a class for declare parents tests. It allows to:

	Handle setup;
	Handle test introduction was made;
	Handle test locking works

Add a local a class for non annotated make lockable. It allows to:

	Check mixin lockable not locked

9.28. Add an interface declaration  for instantiation model aware pointcut advisor. It allows to:

	Check if instantiation model aware pointcut advisor is lazy;
	Check if instantiation model aware pointcut advisor is advice instantiated

9.29. Add a class for method invocation proceeding join point tests. It allows to:

	Handle testing binding with join point;
	Handle testing binding with proceeding join point;
	Handle test can get method signature from join point;
	Before;
	Handle test can get source location from join point;
	Handle test can get static part from join point;
	Convert method invocation proceeding join point tests to short and long string formed correctly;

9.30. Add a class for overloaded advice tests. It allows to:

	Handle test exception on config parsing with mismatched advice method;
	Handle test exception on config parsing with ambiguous advice method

Add a local a class for overloaded advice test aspect. It allows to:

	My overloaded advice test aspect before advice;

9.31. Add a class for proceed tests. It allows to:

	Handle setup;
	Handle test simple proceed with changed args;
	Handle test get args is defensive;
	Handle test proceed with args in same aspect;
	Handle test proceed with args across aspects

Add a local an interface declaration  for simple bean. It allows to:

	Set name;
	Get name;
	Set age;
	Get age;
	Set my float;
	Get my float;
	Set sex;
	Get sex

Add a local a class for simple bean impl. It allows to:

	Get age;
	Get my float;
	Get name;
	Get sex;
	Set age;
	Set my float;
	Set name;
	Set sex

Add a local a class for proceed testing aspect. It allows to:

	Get set order;
	Get order;
	Capitalize pjp proceeding join point;
	Handle double or quits;
	Add pjp proceeding join point;
	Capture string argument;
	Capture string argument  in around pjp proceeding join point;
	Capture float argument;
	Get last  before string value;
	Get last  around string value;
	Get last  before float value

9.32. Add a class for property dependent aspect tests. It allows to:

	Handle property dependent aspect with property declared before advice;
	Handle property dependent aspect with property declared after advice;
	Handle property dependent at aspect J aspect with property declared before advice;
	Handle property dependent at aspect J aspect with property declared after advice;
	Check xml aspect;
	Check property dependent aspect tests at aspect J aspect

Add a local a class for join point monitor aspect. It allows to:

	Before join point monitor aspect;
	Process join point monitor aspect join point monitor aspect around;
	Get join point monitor aspect counter;
	Set counter

Add a local a class for join point monitor at aspect J aspect. It allows to:

	Before join point monitor at aspect J aspect;
	Process join point monitor at aspect J aspect join point monitor at aspect J aspect around;
	Get join point monitor at aspect J aspect counter;
	Set counter

9.33. Add a class for shared pointcut with args mismatch tests. It allows to:

	Handle setup;
	Handle test mismatched arg binding

Add a local a class for to be advised. It allows to:

	Handle foo

Add a local a class for my aspect. It allows to:

	Do my aspect before;

9.34. Add a class for simple aspect instance factory. It allows to:

	Instantiate simple aspect instance factory  with aspect class;
	Get aspect class;
	Get aspect instance;
	Get aspect class loader;
	Get order;
	Get order  for aspect class

9.35. Add a class for simple spring before advice. It allows to:

	Before simple spring before advice;
	Set collaborator;
	Set bean name

9.36. Add a class for singleton aspect instance factory. It allows to:

	Instantiate singleton aspect instance factory;
	Get aspect instance;
	Get aspect class loader;
	Get order;
	Get order  for aspect class

9.37. Add a class for subtype sensitive matching tests. It allows to:

	Handle setup;
	Handle test beans are proxied on static match;
	Handle test beans that do not match based solely on runtime type are not proxied;
	Handle test beans that do not match based on other test are proxied

Add a local an interface declaration  for non serializable foo. It allows to:

	Handle foo

Add a local an interface declaration  for serializable foo. It allows to:

	Handle foo

Add a local a class for subtype matching test class A. It allows to:

	Handle foo

Add a local a class for subtype matching test class B. It allows to:

	Handle foo

Add a local an interface declaration  for bar. It allows to:

	Handle bar

Add a local a class for subtype matching test class C. It allows to:

	Handle bar

9.38. Add a class for this and target selection only pointcuts tests. It allows to:

	Handle setup;
	Handle test this as class does not match;
	Handle test this as interface match;
	Handle test target as class does match;
	Handle test target as interface match;
	Handle test this as class and target as class counter not match;
	Handle test this as interface and target as interface counter match;
	Handle test this as interface and target as class counter match

Add a local an interface declaration  for test interface. It allows to:

	Do test interface

Add a local a class for test impl. It allows to:

	Do test impl

9.39. Add a class for tiger aspect J advice parameter name discoverer tests. It allows to:

	Handle test at this;
	Handle test at target;
	Handle test at args;
	Handle test at within;
	Handle test at withincode;
	Handle test at annotation;
	Handle test ambiguous annotation two vars;
	Handle test ambiguous annotation one var;
	Handle test annotation medley;
	One annotation;
	Two annotations;
	Handle annotation medley

9.40. Add an interface declaration  for topsy turvy target. It allows to:

	Do something;
	Get X

Add a local a class for topsy turvy target impl. It allows to:

	Do something;
	Get X

Add a local a class for aspect collaborator. It allows to:

	Handle after returning advice fired;
	Handle around advice fired;
	Handle before advice fired

9.41. Add a class for type pattern class filter. It allows to:

	Instantiate type pattern class filter;
	Set type pattern;
	Get type pattern;
	Handle matches;
	Replace boolean operators

9.42. Add a class for type pattern class filter tests. It allows to:

	Handle test invalid pattern;
	Handle test valid pattern matching;
	Handle test subclass matching;
	Handle test and or not replacement;
	Handle test set type pattern with null argument;
	Handle test invocation of matches method blows up when no type pattern has been set

10. Changes to package org.springframework.aop.aspectj.annotation:  

10.1. Add an interface declaration  for aspect J advisor factory. It allows to:

	Check if aspect J advisor factory is aspect;
	Validate aspect class;
	Get advisors;
	Get advisor;
	Get advice

10.2. Add a class for aspect J pointcut advisor tests. It allows to:

	Handle test singleton;
	Handle test per target;
	Handle test per cflow target;
	Handle test per cflow below target;
	Handle test illegal instantiation model

10.3. Add a class for aspect J proxy factory. It allows to:

	Instantiate aspect J proxy factory;
	Instantiate aspect J proxy factory  with interfaces class;
	Add aspect;
	Add advisors  from aspect instance factory;
	Create aspect metadata;
	Create aspect instance factory;
	Get singleton aspect instance;
	Get proxy;

10.4. Add a class for aspect metadata. It allows to:

	Instantiate aspect metadata  with aspect class;
	Find aspect class per clause;
	Get aj type;
	Get aspect class;
	Get aspect name;
	Get aspect metadata per clause pointcut;
	Check if aspect metadata is per this or per target;
	Check if aspect metadata is per type within;
	Check if aspect metadata is lazily instantiated;
	Read object

10.5. Add a class for aspect metadata tests. It allows to:

	Handle test not an aspect;
	Handle test singleton aspect;
	Handle test per target aspect;
	Handle test per this aspect

10.6. Add a class for bean factory aspect instance factory. It allows to:

	Instantiate bean factory aspect instance factory  with bean factory;
	Instantiate bean factory aspect instance factory  with bean factory, type class and type class;
	Get aspect instance;
	Get aspect class loader;
	Get aspect metadata;
	Get aspect creation mutex;
	Get order;
	Convert bean factory aspect instance factory to string

10.7. Add a class for bean factory aspect J advisors builder. It allows to:

	Instantiate bean factory aspect J advisors builder  with listable bean factory;
	Instantiate bean factory aspect J advisors builder  with listable bean factory, aspect J advisor factory and aspect J advisor factory;
	Build aspect J advisors;
	Check if bean factory aspect J advisors builder is eligible bean

10.8. Add a class for lazy singleton aspect instance factory decorator. It allows to:

	Instantiate lazy singleton aspect instance factory decorator  with maaif metadata aware aspect instance factory;
	Get aspect instance;
	Check if lazy singleton aspect instance factory decorator is materialized;
	Get aspect class loader;
	Get aspect metadata;
	Get aspect creation mutex;
	Get order;
	Convert lazy singleton aspect instance factory decorator to string

10.9. Add a class for make I test bean modifiable

Add a local a class for make annotated type modifiable

Add a local a class for make lockable. It allows to:

	Check mixin lockable not locked

Add a local a class for can not be unlocked. It allows to:

	Lock can not be unlocked;
	Unlock can not be unlocked;
	Get locked;
	Compare can not be unlocked to

Add a local an interface declaration  for modifiable. It allows to:

	Check if modifiable is modified;
	Accept changes

Add a local an interface declaration  for annotated target

Add a local a class for annotated target impl

Add a local a class for not lockable. It allows to:

	Get int value;
	Set int value

Add a local a class for per this aspect. It allows to:

	Return count  as age;
	Count setter

10.10. Add an interface declaration  for metadata aware aspect instance factory. It allows to:

	Get aspect metadata;
	Get aspect creation mutex

10.11. Add a class for multiply return value. It allows to:

	Set multiple;
	Get multiple;
	Handle double return value

10.12. Add a class for not an at aspect exception. It allows to:

	Instantiate not an at aspect exception  with non aspect class;
	Get non aspect class

10.13. Add a class for pointcut with annotation argument. It allows to:

	Process pointcut with annotation argument pointcut with annotation argument around

Add a local a class for named pointcut with args. It allows to:

	Handle pointcut with args;
	Do  around pjp proceeding join point

10.14. Add a class for prototype aspect instance factory. It allows to:

	Instantiate prototype aspect instance factory  with bean factory

10.15. Add an object creator class for reflective aspect J advisor factory tests. It allows to:

	Get fixture

10.16. Add a class for simple metadata aware aspect instance factory. It allows to:

	Instantiate simple metadata aware aspect instance factory  with aspect class;
	Get aspect metadata;
	Get aspect creation mutex;
	Get order  for aspect class

10.17. Add a class for singleton metadata aware aspect instance factory. It allows to:

	Instantiate singleton metadata aware aspect instance factory;
	Get aspect metadata;
	Get aspect creation mutex;
	Get order  for aspect class

11. Changes to package org.springframework.aop.aspectj.autoproxy:  

11.1. Add a class for annotation binding tests. It allows to:

	Handle setup;
	Handle test annotation binding in around advice;
	Handle test no matching without annotation present

11.2. Add a class for annotation pointcut tests. It allows to:

	Handle setup;
	Handle test annotation binding in around advice;
	Handle test no matching without annotation present

Add a local a class for test method interceptor. It allows to:

	Invoke method invocation

11.3. Add a class for aspect implementing interface tests. It allows to:

	Handle test proxy creation

Add a local an interface declaration  for an interface. It allows to:

	Handle interface method

Add a local a class for interface extending aspect. It allows to:

	Handle increment;
	Handle interface method

11.4. Add a class for aspect J auto proxy creator and lazy init target source tests. It allows to:

	Handle test adrian

Add a local a class for lazy test bean. It allows to:

	Instantiate lazy test bean

11.5. Add a class for aspect J auto proxy creator tests. It allows to:

	Handle test aspects are applied;
	Handle test multiple aspects with parameter applied;
	Handle test aspects are applied in defined order;
	Handle test aspects and advisor are applied;
	Convert test aspects and advisor applied;
	Convert test aspects and advisor not applied;
	Handle test aspects and advisor are applied even if coming from parent factory;
	Do test aspects and advisor are applied;
	Handle test per this aspect;
	Handle test per target aspect;
	Test two advice aspect;
	Test two advice aspect singleton;
	Test two advice aspect prototype;
	Handle test age aspect;
	Handle test advice using join point;
	Handle test include mechanism;
	Handle test force proxy target class;
	Handle test with abstract factory bean are applied;
	Handle test retry aspect;
	Handle test with bean name auto proxy creator;
	Handle new context;
	Q name;
	Assert stop watch time limit

Add a local a class for per target aspect. It allows to:

	Return count  as age;
	Count setter;
	Get order;
	Get set order

Add a local a class for advice using this join point. It allows to:

	Get last method entered;
	Handle method execution;
	Handle entry trace

Add a local a class for dummy aspect. It allows to:

	Get test

Add a local a class for dummy aspect with parameter. It allows to:

	Get test

Add a local a class for dummy factory bean. It allows to:

	Get object;
	Get object type;
	Check if dummy factory bean is singleton

Add a local a class for increase return value. It allows to:

	Handle double return value

Add a local a class for multiply return value. It allows to:

	Set multiple;
	Get multiple;
	Handle double return value

Add a local a class for multiply return value for marker. It allows to:

	Set multiple;
	Get multiple;
	Handle double return value

Add a local an interface declaration  for i marker test bean. It allows to:

	Get age

Add a local a class for marker test bean. It allows to:

	Get age

Add a local a class for retry aspect. It allows to:

	Handle exec of public method;
	Retry jp proceeding join point;
	Get begin calls;
	Get commit calls;
	Get rollback calls

Add a local a class for retryable exception. It allows to:

	Instantiate retryable exception;
	Instantiate retryable exception  with cause throwable

Add a local a class for unreliable bean. It allows to:

	Handle unreliable

Add a local a class for test bean advisor. It allows to:

	Instantiate test bean advisor;
	Before;
	Handle matches

11.6. Add a class for aspect J namespace handler tests. It allows to:

	Set aspect J namespace handler tests;
	Handle test register auto proxy creator;
	Handle test register aspect J auto proxy creator;
	Handle test register aspect J auto proxy creator with existing auto proxy creator;
	Handle test register auto proxy creator when aspect J auto proxy creator already exists

11.7. Add a class for aspect J precedence comparator. It allows to:

	Instantiate aspect J precedence comparator;
	Instantiate aspect J precedence comparator  with advisor comparator;
	Compare o 1 advisor;
	Compare precedence  within aspect;
	Get declared in same aspect;
	Check if aspect J precedence comparator has aspect name;
	Get aspect name;
	Get aspect declaration order

11.8. Add a class for aspect J precedence comparator tests. It allows to:

	Set aspect J precedence comparator tests;
	Handle test same aspect no after advice;
	Handle test same aspect after advice;
	Handle test same aspect one of each;
	Handle test same advisor precedence different aspect no after advice;
	Handle test same advisor precedence different aspect after advice;
	Handle test higher advisor precedence no after advice;
	Handle test higher advisor precedence after advice;
	Test lower advisor precedence no  after advice;
	Test lower advisor precedence  after advice;
	Create aspect J  before advice;
	Create aspect J  around advice;
	Create aspect J  after advice;
	Create aspect J  after returning advice;
	Create aspect J  after throwing advice;
	Create aspect J advice;
	Create spring AOP  after advice;
	Process  after returning;
	Create spring AOP  before advice

11.9. Add a class for at aspect J after throwing tests. It allows to:

	Handle test access throwable

Add a local a class for exception handling aspect. It allows to:

	Handle IO exception

11.10. Add a class for at aspect J annotation binding tests. It allows to:

	Handle setup;
	Handle test annotation binding in around advice;
	Handle test no matching without annotation present;
	Handle test pointcut evaluated against array

Add a local a class for at aspect J annotation binding test aspect. It allows to:

	Do pjp proceeding join point with annotation

Add a local a class for resource array factory bean. It allows to:

	Get object;
	Get object type;
	Check if resource array factory bean is singleton

11.11. Add a class for auto proxy with code style aspects tests. It allows to:

	No autoproxying  of ajc compiled aspects

12. Changes to package org.springframework.aop.aspectj.autoproxy.benchmark:  

12.1. Add a class for benchmark tests. It allows to:

	Handle test repeated around advice invocations with aspect J;
	Handle test repeated around advice invocations with spring aop;
	Handle test repeated before advice invocations with aspect J;
	Handle test repeated before advice invocations with spring aop;
	Handle test repeated after returning advice invocations with aspect J;
	Handle test repeated after returning advice invocations with spring aop;
	Handle test repeated mix with aspect J;
	Handle test repeated mix with spring aop;
	Get count;
	Get test repeated around advice invocations;
	Get test before advice without join point;
	Get test after returning advice without join point;
	Get test mix

Add a local a class for multiply return value interceptor. It allows to:

	Set multiple;
	Get multiple;
	Invoke mi method invocation

Add a local a class for trace after returning advice. It allows to:

	Process trace after returning advice trace after returning advice after returning;
	Get advisor;
	Handle matches

Add a local a class for trace aspect. It allows to:

	Trace trace aspect without join point;
	Trace trace aspect without join point 2

Add a local a class for trace before advice. It allows to:

	Before trace before advice;
	Get advisor;
	Handle matches

13. Changes to package org.springframework.aop.aspectj.autoproxy.spr3064:  

13.1. Add a class for sPR 3064 tests. It allows to:

	Handle test service is advised

Add a local a class for transaction interceptor. It allows to:

	Process transaction interceptor transaction interceptor around

Add a local an interface declaration  for service. It allows to:

	Serve service

Add a local a class for service impl. It allows to:

	Serve service impl

14. Changes to package org.springframework.aop.aspectj.generic:  

14.1. Add a class for after returning generic type matching tests. It allows to:

	Handle setup;
	Handle test return type exact matching;
	Handle test return type raw matching;
	Handle test return type upper bound matching;
	Handle test return type lower bound matching

Add a local an object creator class for generic return type variation class. It allows to:

	Get strings;
	Get integers;
	Get test beans;
	Get employees

Add a local a class for counter aspect. It allows to:

	Any test method;
	Handle increment get raws invocations count;
	Handle increment get strings invocations count;
	Handle increment get integers invocations count;
	Handle increment get numbers invocations count;
	Handle increment test bean invocations count;
	Reset counter aspect

14.2. Add a class for generic bridge method matching class proxy tests. It allows to:

	Handle test generic derived interface method through class;
	Handle test generic base interface method through class

14.3. Add a class for generic bridge method matching tests. It allows to:

	Handle setup;
	Handle test generic derived interface method through interface;
	Handle test generic base interface method through interface

Add a local an interface declaration  for base interface. It allows to:

	Handle generic base interface method

Add a local an interface declaration  for derived interface. It allows to:

	Handle generic derived interface method

Add a local a class for derived string parameterized class. It allows to:

	Handle generic derived interface method;
	Handle generic base interface method

Add a local a class for generic counter aspect. It allows to:

	Handle increment

15. Changes to package org.springframework.aop.config:  

15.1. Add a class for abstract interceptor driven bean definition decorator. It allows to:

	Decorate node;
	Add interceptor name  to list;
	Check if abstract interceptor driven bean definition decorator is proxy factory bean definition;
	Get interceptor name suffix;
	Create interceptor definition

15.2. Add a class for advice entry. It allows to:

	Instantiate advice entry;
	Convert advice entry to string

15.3. Add a class for advisor component definition. It allows to:

	Instantiate advisor component definition  with advisor definition;
	Instantiate advisor component definition  with advisor definition, pointcut definition and pointcut definition;
	Build description;
	Get name;
	Get description;
	Get bean definitions;
	Get bean references;
	Get source

15.4. Add a class for advisor entry. It allows to:

	Instantiate advisor entry;
	Convert advisor entry to string

15.5. Add a class for aop config utils. It allows to:

	Register auto proxy creator  if necessary;
	Register aspect J auto proxy creator  if necessary;
	Register aspect J annotation auto proxy creator  if necessary;
	Force auto proxy creator  to use class proxying;
	Force auto proxy creator  to expose proxy;
	Register or escalate apc  as required;
	Find priority  for class;

15.6. Add a class for aop namespace handler. It allows to:

	Handle init

15.7. Add a class for aop namespace handler advice type tests. It allows to:

	Handle test parsing of advice types;
	Handle test parsing of advice types with error

15.8. Add a class for aop namespace handler arg names tests. It allows to:

	Handle test arg names OK;
	Handle test arg names error

15.9. Add a class for aop namespace handler event tests. It allows to:

	Handle setup;
	Handle test pointcut events;
	Handle test advisor events with pointcut ref;
	Handle test advisor events with direct pointcut;
	Handle test aspect event

15.10. Add a class for aop namespace handler pointcut error tests. It allows to:

	Handle test duplicate pointcut config;
	Handle test missing pointcut config

15.11. Add a class for aop namespace handler proxy target class tests. It allows to:

	Handle test is class proxy

15.12. Add a class for aop namespace handler returning tests. It allows to:

	Handle test returning on returning advice;
	Handle test parse returning on other advice type

15.13. Add a class for aop namespace handler scope integration tests. It allows to:

	Set aop namespace handler scope integration tests;
	Handle test singleton scoping;
	Handle test request scoping;
	Handle test session scoping

15.14. Add a class for aop namespace handler tests. It allows to:

	Handle setup;
	Get test bean;
	Handle test is proxy;
	Handle test advice invoked correctly;
	Handle test aspect applied;
	Handle test aspect applied for initialize bean with empty name;
	Handle test aspect applied for initialize bean with null name

Add a local a class for counting aspect J advice. It allows to:

	My counting aspect J advice before advice;
	My counting aspect J advice after advice;
	My pjp proceeding join point around advice;
	My counting aspect J advice after returning advice;
	My runtime exception after throwing advice;
	My set age advice;
	Get counting aspect J advice before count;
	Get counting aspect J advice after count;
	Get counting aspect J advice around count

15.15. Add a class for aop namespace handler throwing tests. It allows to:

	Handle test throwing on throwing advice;
	Handle test parse throwing on other advice type

15.16. Add a class for aop namespace utils. It allows to:

	Register auto proxy creator  if necessary;
	Register aspect J auto proxy creator  if necessary;
	Register aspect J annotation auto proxy creator  if necessary;
	Use class proxying  if necessary;
	Register component  if necessary

15.17. Add a class for aspect component definition. It allows to:

	Instantiate aspect component definition  with bean definitions, bean references and bean references;
	Get bean definitions;
	Get bean references

15.18. Add a class for aspect entry. It allows to:

	Instantiate aspect entry;
	Convert aspect entry to string

15.19. Add a class for aspect J auto proxy bean definition parser. It allows to:

	Parse element;
	Extend bean definition;
	Add include patterns

15.20. Add a class for config bean definition parser. It allows to:

	Parse element;
	Configure auto proxy creator;
	Parse advisor;
	Create advisor bean definition;
	Parse aspect;
	Create aspect component definition;
	Check if config bean definition parser is advice node;
	Parse declare parents;
	Parse advice;
	Create advice definition;
	Get advice class;
	Parse pointcut;
	Parse pointcut property;
	Create pointcut definition

15.21. Add a class for method locating factory bean. It allows to:

	Set target bean name;
	Set method name;
	Set bean factory;
	Get object;
	Get object type;
	Check if method locating factory bean is singleton

15.22. Add a class for method locating factory bean tests. It allows to:

	Set method locating factory bean tests;
	Handle test is singleton;
	Handle test get object type;
	Handle test with null target bean name;
	Handle test with empty target bean name;
	Handle test with null target method name;
	Handle test with empty target method name;
	Handle test when target bean class can not be resolved;
	Handle test sunny day path;
	Handle test where method can not be resolved

15.23. Add a class for pointcut component definition. It allows to:

	Instantiate pointcut component definition  with pointcut definition;
	Get name;
	Get description;
	Get bean definitions;
	Get source

15.24. Add a class for pointcut entry. It allows to:

	Instantiate pointcut entry;
	Convert pointcut entry to string

15.25. Add a class for prototype proxy tests. It allows to:

	Handle test injection before wrapping check does not kick in for prototype proxy

15.26. Add a class for scoped proxy bean definition decorator. It allows to:

	Decorate node

15.27. Add a class for simple bean factory aware aspect instance factory. It allows to:

	Set aspect bean name;
	Set bean factory;
	Get aspect instance;
	Get aspect class loader;
	Get order

15.28. Add a class for spring configured bean definition parser. It allows to:

	Parse element

15.29. Add a class for top level aop tag tests. It allows to:

	Handle test parse

16. Changes to package org.springframework.aop.framework:  

16.1. Add a class for abstract advising bean post processor. It allows to:

	Get set before existing advisors;
	Post process  before initialization;
	Post process  after initialization;
	Check if abstract advising bean post processor is eligible;
	Prepare proxy factory;
	Customize proxy factory

16.2. Add a class for abstract singleton proxy factory bean. It allows to:

	Set target;
	Set proxy interfaces;
	Set pre interceptors;
	Set post interceptors;
	Set advisor adapter registry;
	Set proxy class loader;
	Set bean class loader;
	Handle after properties set;
	Create target source;
	Post process proxy factory;
	Get object;
	Get object type;
	Check if abstract singleton proxy factory bean is singleton;
	Create main interceptor

16.3. Add an interface declaration  for advised. It allows to:

	Check if advised is frozen;
	Check if advised is proxy target class;
	Get proxied interfaces;
	Check if advised is interface proxied;
	Set target source;
	Get target source;
	Set expose proxy;
	Check if advised is expose proxy;
	Set advised;
	Check if advised is pre filtered;
	Get advisors;
	Add advisor;
	Remove advisor;
	Get index of;
	Replace advisor;
	Add advice;
	Remove advice;
	Convert advised to proxy config string

16.4. Add an interface declaration  for advised support listener. It allows to:

	Get activated;
	Handle advice changed

16.5. Add an interface declaration  for advisor chain factory. It allows to:

	Get interceptors and dynamic interception advice

16.6. Add a class for aop config exception. It allows to:

	Instantiate aop config exception;
	Instantiate aop config exception  with cause throwable

16.7. Add a class for aop context. It allows to:

	Instantiate aop context;
	Handle current proxy;
	Set current proxy

16.8. Add an interface declaration  for aop infrastructure bean

16.9. Add an interface declaration  for aop proxy. It allows to:

	Get proxy;

16.10. Add an interface declaration  for aop proxy factory. It allows to:

	Create aop proxy

16.11. Add a class for aop proxy utils. It allows to:

	Get singleton target;
	Handle ultimate target class;
	Handle complete proxied interfaces;
	Handle proxied user interfaces;
	Check if aop proxy utils equals in proxy;
	Check if aop proxy utils equals proxied interfaces;
	Check if aop proxy utils equals advisors;
	Adapt arguments  if necessary

16.12. Add a class for aop proxy utils tests. It allows to:

	Handle test complete proxied interfaces works with null;
	Handle test complete proxied interfaces works with null opaque;
	Handle test complete proxied interfaces advised not included;
	Handle test complete proxied interfaces advised included;
	Handle test complete proxied interfaces advised not included opaque;
	Handle test proxied user interfaces with single interface;
	Handle test proxied user interfaces with multiple interfaces;
	Handle test proxied user interfaces with no interface

16.13. Add a class for cglib test bean. It allows to:

	Instantiate cglib test bean;
	Set name;
	Get name;
	Convert cglib test bean to string

Add a local a class for unsupported interceptor. It allows to:

	Invoke mi method invocation

16.14. Add a class for class with complex constructor. It allows to:

	Instantiate class with complex constructor  with dependency;
	Get dependency;
	Handle method

16.15. Add a class for class with constructor. It allows to:

	Instantiate class with constructor;
	Handle method

16.16. Add a class for default advisor chain factory. It allows to:

	Get interceptors and dynamic interception advice;
	Check if default advisor chain factory has matching introductions

16.17. Add a class for default aop proxy factory. It allows to:

	Create aop proxy;
	Check if default aop proxy factory has no user supplied proxy interfaces

16.18. Add a class for dependency. It allows to:

	Handle method;
	Get value

16.19. Add a class for interceptor and dynamic method matcher. It allows to:

	Instantiate interceptor and dynamic method matcher  with method interceptor, method matcher and method matcher

16.20. Add a class for jdk dynamic aop proxy. It allows to:

	Instantiate jdk dynamic aop proxy  with config advised support;
	Get proxy;
	Find defined equals and hash code methods;
	Invoke method;
	Check if jdk dynamic aop proxy equals;
	Hash code

16.21. Add a class for method invocation tests. It allows to:

	Handle test valid invocation;
	Invoke method invocation;
	Convert test;
	Convert to string

16.22. Add a class for objenesis cglib aop proxy. It allows to:

	Instantiate objenesis cglib aop proxy  with config advised support;
	Create proxy class and instance

16.23. Add a class for objenesis proxy tests. It allows to:

	Check if objenesis proxy tests applies aspect to class with complex constructor

16.24. Add a class for proxy config. It allows to:

	Set proxy target class;
	Check if proxy config is proxy target class;
	Optimize proxy config;
	Check if proxy config is optimize;
	Set opaque;
	Check if proxy config is opaque;
	Set expose proxy;
	Check if proxy config is expose proxy;
	Frozen proxy config;
	Check if proxy config is frozen;
	Copy  from other proxy config;
	Convert proxy config to string

16.25. Add a class for proxy creator support. It allows to:

	Instantiate proxy creator support;
	Instantiate proxy creator support  with aop proxy factory;
	Set aop proxy factory;
	Get aop proxy factory;
	Add listener;
	Remove listener;
	Create aop proxy;
	Activate proxy creator support;
	Handle advice changed;
	Check if proxy creator support is active

16.26. Add a class for proxy factory. It allows to:

	Instantiate proxy factory;
	Instantiate proxy factory  with proxy interfaces class;
	Instantiate proxy factory  with proxy interface class, interceptor and interceptor;
	Instantiate proxy factory  with proxy interface class, target source and target source;
	Get proxy;

16.27. Add a class for proxy processor support. It allows to:

	Get set order;
	Get order;
	Set proxy class loader;
	Get proxy class loader;
	Set bean class loader;
	Evaluate proxy interfaces;
	Check if proxy processor support is configuration callback interface;
	Check if proxy processor support is internal language interface

16.28. Add a class for reflective method invocation. It allows to:

	Instantiate reflective method invocation  with method, target class, interceptors and dynamic method matchers list and interceptors and dynamic method matchers list;
	Get proxy;
	Get reflective method invocation;
	Get static part;
	Get method;
	Get arguments;
	Set arguments;
	Proceed reflective method invocation;
	Invoke joinpoint;
	Handle invocable clone;
	Set user attribute;
	Get user attribute;
	Get user attributes;
	Convert reflective method invocation to string

17. Changes to package org.springframework.aop.framework.adapter:  

17.1. Add an interface declaration  for advisor adapter. It allows to:

	Handle supports advice;
	Get interceptor

17.2. Add a class for advisor adapter registration manager. It allows to:

	Set advisor adapter registry;
	Post process  before initialization;
	Post process  after initialization

17.3. Add a class for advisor adapter registration tests. It allows to:

	Reset global advisor adapter registry;
	Handle test advisor adapter registration manager not present in context;
	Handle test advisor adapter registration manager present in context;
	Get advice impl

Add a local an interface declaration  for simple before advice. It allows to:

	Before simple before advice

Add a local a class for simple before advice adapter. It allows to:

	Handle supports advice;
	Get interceptor

Add a local a class for simple before advice impl. It allows to:

	Before simple before advice impl;
	Get invocation counter

Add a local a class for simple before advice interceptor. It allows to:

	Instantiate simple before advice interceptor  with simple before advice;
	Invoke mi method invocation

17.4. Add an interface declaration  for advisor adapter registry. It allows to:

	Wrap advisor adapter registry;
	Get interceptors;
	Register advisor adapter

17.5. Add a class for after returning advice adapter. It allows to:

	Handle supports advice;
	Get interceptor

17.6. Add a class for after returning advice interceptor. It allows to:

	Instantiate after returning advice interceptor  with after returning advice;
	Invoke mi method invocation

17.7. Add a class for default advisor adapter registry. It allows to:

	Instantiate default advisor adapter registry;
	Wrap default advisor adapter registry;
	Get interceptors;
	Register advisor adapter

17.8. Add a class for global advisor adapter registry. It allows to:

	Instantiate global advisor adapter registry;
	Get instance;
	Reset global advisor adapter registry

17.9. Add a class for method before advice adapter. It allows to:

	Handle supports advice;
	Get interceptor

17.10. Add a class for method before advice interceptor. It allows to:

	Instantiate method before advice interceptor  with method before advice;
	Invoke mi method invocation

17.11. Add a class for throws advice adapter. It allows to:

	Handle supports advice;
	Get interceptor

17.12. Add a class for throws advice interceptor. It allows to:

	Instantiate throws advice interceptor;
	Get handler method count;
	Invoke mi method invocation;
	Get exception handler;
	Invoke handler method

17.13. Add a class for unknown advice type exception. It allows to:

	Instantiate unknown advice type exception;

18. Changes to package org.springframework.aop.framework.autoproxy:  

18.1. Add a class for abstract auto proxy creator. It allows to:

	Frozen abstract auto proxy creator;
	Check if abstract auto proxy creator is frozen;
	Set advisor adapter registry;
	Set custom target source creators;
	Set interceptor names;
	Set apply common interceptors  first;
	Set bean factory;
	Get bean factory;
	Predict bean type;
	Determine candidate constructors;
	Get abstract auto proxy creator early bean reference;
	Post process  before instantiation;
	Post process  after instantiation;
	Post process properties;
	Post process  before initialization;
	Post process  after initialization;
	Get cache key;
	Wrap abstract auto proxy creator if necessary;
	Check if abstract auto proxy creator is infrastructure class;
	Skip bean class;
	Get custom target source;
	Create proxy;
	Should proxy target class;
	Handle advisors pre filtered;
	Build advisors;
	Resolve interceptor names;
	Customize proxy factory;
	Get advices and advisors  for bean

18.2. Add a class for abstract bean factory aware advising post processor. It allows to:

	Set bean factory;
	Prepare proxy factory;
	Check if abstract bean factory aware advising post processor is eligible

18.3. Add a class for advisor auto proxy creator integration tests. It allows to:

	Get bean factory;
	Handle test default exclusion prefix;
	Handle test no proxy;
	Handle test tx is proxied;
	Handle test regexp applied;
	Handle test transaction attribute on method;
	Handle test rollback rules on method cause rollback;
	Handle test rollback rules on method prevent rollback;
	Handle test programmatic rollback

Add a local a class for never match advisor. It allows to:

	Instantiate never match advisor;
	Set dependencies;
	Handle matches

Add a local a class for no setters. It allows to:

	A no setters;
	Get B

Add a local a class for rollback. It allows to:

	Handle rollback only;
	Set rollback  only;
	Echo exception

18.4. Add a class for advisor auto proxy creator tests. It allows to:

	Get bean factory;
	Handle test common interceptor and advisor;
	Handle test custom target source no match;
	Handle test custom prototype target source;
	Handle test lazy init target source;
	Handle test quick target source creator;
	Handle test with optimized proxy

Add a local an object creator class for selective prototype target source creator. It allows to:

	Create bean factory based target source

18.5. Add a class for auto proxy utils. It allows to:

	Should proxy target class;
	Determine target class;
	Expose target class;
	Check if auto proxy utils is original instance

18.6. Add a class for bean factory advisor retrieval helper. It allows to:

	Instantiate bean factory advisor retrieval helper  with configurable listable bean factory;
	Find advisor beans;
	Check if bean factory advisor retrieval helper is eligible bean

18.7. Add a class for bean name auto proxy creator. It allows to:

	Set bean names;
	Get advices and advisors  for bean;
	Check if bean name auto proxy creator is match

18.8. Add a class for bean name auto proxy creator init tests. It allows to:

	Handle test ignore advisor that is currently in creation

Add a local a class for null checker. It allows to:

	Before null checker;
	Check null checker

18.9. Add a class for bean name auto proxy creator tests. It allows to:

	Handle setup;
	Handle test no proxy;
	Handle test jdk proxy with exact name match;
	Handle test jdk proxy with double proxying;
	Handle test jdk introduction;
	Convert test jdk introduction applies;
	Handle test jdk proxy with wildcard match;
	Handle test cglib proxy with wildcard match;
	Handle test with frozen proxy;
	Handle jdk assertions;
	Cglib assertions

Add a local a class for creates test bean. It allows to:

	Get object;
	Get object type;
	Check if creates test bean is singleton

18.10. Add a class for default advisor auto proxy creator. It allows to:

	Get set use prefix;
	Check if default advisor auto proxy creator is use prefix;
	Set advisor bean name prefix;
	Get advisor bean name prefix;
	Set bean name;
	Check if default advisor auto proxy creator is eligible advisor bean

18.11. Add a class for infrastructure advisor auto proxy creator. It allows to:

	Init bean factory;
	Check if infrastructure advisor auto proxy creator is eligible advisor bean

18.12. Add a class for package visible method. It allows to:

	Do something

18.13. Add a class for proxy creation context. It allows to:

	Instantiate proxy creation context;
	Get current proxied bean name;
	Set current proxied bean name

18.14. Add an interface declaration  for target source creator. It allows to:

	Get target source

19. Changes to package org.springframework.aop.framework.autoproxy.target:  

19.1. Add a class for abstract bean factory based target source creator. It allows to:

	Set bean factory;
	Get bean factory;
	Get target source;
	Get internal bean factory  for bean;
	Build internal bean factory;
	Destroy abstract bean factory based target source creator;
	Check if abstract bean factory based target source creator is prototype based;
	Create bean factory based target source

19.2. Add a class for lazy init target source creator. It allows to:

	Check if lazy init target source creator is prototype based;
	Create bean factory based target source

19.3. Add a class for quick target source creator. It allows to:

	Create bean factory based target source

20. Changes to package org.springframework.aop.interceptor:  

20.1. Add a class for abstract monitoring interceptor. It allows to:

	Set prefix;
	Get prefix;
	Set suffix;
	Get suffix;
	Set log target class invocation;
	Create invocation trace name

20.2. Add a class for abstract trace interceptor. It allows to:

	Get set use dynamic logger;
	Set logger name;
	Set hide proxy class names;
	Set log exception stack trace;
	Invoke method invocation;
	Get logger  for invocation;
	Get class  for logging;
	Check if abstract trace interceptor is interceptor enabled;
	Check if abstract trace interceptor is log enabled;
	Write logger to log;
	Invoke method invocation under trace

20.3. Add a class for async execution aspect support. It allows to:

	Instantiate async execution aspect support  with default executor;
	Instantiate async execution aspect support  with default executor, async uncaught exception handler and async uncaught exception handler;
	Configure default executor supplier;
	Set executor;
	Set exception handler;
	Set bean factory;
	Determine async executor;
	Get executor qualifier;
	Find qualified executor;
	Get default executor;
	Submit task callable;
	Handle error

20.4. Add a class for async execution interceptor. It allows to:

	Instantiate async execution interceptor  with default executor;
	Instantiate async execution interceptor  with default executor, async uncaught exception handler and async uncaught exception handler;
	Invoke method invocation;
	Get executor qualifier;
	Get default executor;
	Get order

20.5. Add an interface declaration  for async uncaught exception handler. It allows to:

	Handle uncaught exception

20.6. Add a class for concurrency throttle interceptor. It allows to:

	Instantiate concurrency throttle interceptor;
	Invoke method invocation

20.7. Add a class for customizable trace interceptor. It allows to:

	Set enter message;
	Set exit message;
	Set exception message;
	Invoke method invocation under trace;
	Replace placeholders;
	Append return value;
	Append argument types;
	Check customizable trace interceptor for invalid placeholders

20.8. Add a class for debug interceptor. It allows to:

	Instantiate debug interceptor;
	Invoke method invocation;
	Get invocation description;
	Get count;
	Reset count

20.9. Add a class for expose invocation interceptor. It allows to:

	Convert to string;
	Handle current invocation;
	Instantiate expose invocation interceptor;
	Invoke mi method invocation;
	Get order;
	Read resolve

20.10. Add a class for expose invocation interceptor tests. It allows to:

	Handle test xml config

Add a local a class for exposed invocation test bean. It allows to:

	Get name;
	Handle absquatulate;
	Handle assertions

Add a local a class for invocation check exposed invocation test bean. It allows to:

	Handle assertions

20.11. Add a class for jamon performance monitor interceptor. It allows to:

	Instantiate jamon performance monitor interceptor;
	Set track all invocations;
	Check if jamon performance monitor interceptor is interceptor enabled;
	Invoke method invocation under trace;
	Track exception

20.12. Add a class for jamon performance monitor interceptor tests. It allows to:

	Set jamon performance monitor interceptor tests;
	Tear jamon performance monitor interceptor tests;
	Handle test invoke under trace with normal processing;
	Handle test invoke under trace with exception tracking

20.13. Add a class for performance monitor interceptor. It allows to:

	Instantiate performance monitor interceptor;
	Invoke method invocation under trace

20.14. Add a class for performance monitor interceptor tests. It allows to:

	Handle test suffix and prefix assignment;
	Handle test sunny day path logs performance metrics correctly;
	Handle test exception path still logs performance metrics correctly

20.15. Add a class for simple async uncaught exception handler. It allows to:

	Handle uncaught exception

20.16. Add a class for simple trace interceptor. It allows to:

	Instantiate simple trace interceptor;
	Invoke method invocation under trace;
	Get invocation description

20.17. Add a class for simple trace interceptor tests. It allows to:

	Handle test sunny day path logs correctly;
	Handle test exception path still logs correctly

21. Changes to package org.springframework.aop.scope:  

21.1. Add a class for default scoped object. It allows to:

	Instantiate default scoped object  with configurable bean factory;
	Get target object;
	Remove default scoped object from scope

21.2. Add a class for default scoped object tests. It allows to:

	Handle test ctor with null bean factory;
	Handle test ctor with null target bean name;
	Handle test ctor with empty target bean name;
	Handle test ctor with just whitespaced target bean name;
	Handle test bad target bean name

21.3. Add an interface declaration  for scoped object. It allows to:

	Get target object;
	Remove scoped object from scope

21.4. Add a class for scoped proxy factory bean. It allows to:

	Instantiate scoped proxy factory bean;
	Set target bean name;
	Set bean factory;
	Get object;
	Get object type;
	Check if scoped proxy factory bean is singleton

21.5. Add a class for scoped proxy tests. It allows to:

	Handle test proxy assignable;
	Handle test simple proxy;
	Handle test scoped override;
	Handle test jdk scoped proxy;
	Handle test cglib scoped proxy

21.6. Add a class for scoped proxy utils. It allows to:

	Create scoped proxy;
	Get target bean name;
	Check if scoped proxy utils is scoped target

22. Changes to package org.springframework.aop.support:  

22.1. Add a class for abstract bean factory pointcut advisor. It allows to:

	Set advice bean name;
	Get advice bean name;
	Set bean factory;
	Reset advice monitor;
	Set advice;
	Get advice;
	Convert abstract bean factory pointcut advisor to string;
	Read object

22.2. Add a class for abstract expression pointcut. It allows to:

	Set location;
	Get location;
	Set expression;
	Process abstract expression pointcut abstract expression pointcut on set expression;
	Get expression

22.3. Add a class for abstract generic pointcut advisor. It allows to:

	Set advice;
	Get advice;
	Convert abstract generic pointcut advisor to string

22.4. Add a class for abstract pointcut advisor. It allows to:

	Get set order;
	Get order;
	Check if abstract pointcut advisor is per instance;
	Check if abstract pointcut advisor equals;
	Hash code

22.5. Add a class for abstract regexp method pointcut. It allows to:

	Set pattern;
	Set patterns;
	Get patterns;
	Set excluded pattern;
	Set excluded patterns;
	Get excluded patterns;
	Handle matches;
	Check if abstract regexp method pointcut matches pattern;
	Handle init pattern representation;
	Init excluded pattern representation;
	Check if abstract regexp method pointcut matches exclusion;
	Check if abstract regexp method pointcut equals;
	Hash code;
	Convert abstract regexp method pointcut to string

22.6. Add a class for abstract regexp method pointcut tests. It allows to:

	Set abstract regexp method pointcut tests;
	Get regexp method pointcut;
	Handle test no pattern supplied;
	Handle test serialization with no pattern supplied;
	No pattern supplied tests;
	Handle test exact match;
	Handle exact match tests;
	Handle test specific match;
	Handle test wildcard;
	Handle test wildcard for one class;
	Handle test matches object class;
	Handle test with exclusion

22.7. Add a class for aop utils. It allows to:

	Check if aop utils is aop proxy;
	Check if aop utils is jdk dynamic proxy;
	Check if aop utils is cglib proxy;
	Get target class;
	Handle select invocable method;
	Check if aop utils is equals method;
	Check if aop utils is hash code method;
	Check if aop utils is to string method;
	Check if aop utils is finalize method;
	Get method most specific method;
	Apply pc pointcut;
	Apply advisor;
	Find advisors that can apply;
	Invoke joinpoint using reflection

22.8. Add a class for aop utils tests. It allows to:

	Handle test pointcut can never apply;
	Handle test pointcut always applies;
	Convert test pointcut applies;
	Handle test canonical framework classes still canonical on deserialization

22.9. Add a class for class filters tests. It allows to:

	Handle test union;
	Handle test intersection

22.10. Add a class for class utils tests. It allows to:

	Get short name  for cglib class

22.11. Add a class for composable pointcut. It allows to:

	Instantiate composable pointcut;
	Instantiate composable pointcut  with pointcut;
	Instantiate composable pointcut  with class filter;
	Instantiate composable pointcut  with method matcher;
	Instantiate composable pointcut  with class filter, method matcher and method matcher;
	Get union;
	Get intersection;
	Get class filter;
	Get method matcher;
	Check if composable pointcut equals;
	Hash code;
	Convert composable pointcut to string

22.12. Add a class for composable pointcut tests. It allows to:

	Handle matches;
	Handle test match all;
	Handle test filter by class;
	Handle test union method matcher;
	Handle test intersection method matcher;
	Handle test equals and hash code

22.13. Add a class for control flow pointcut. It allows to:

	Instantiate control flow pointcut  with clazz class;
	Handle matches;
	Check if control flow pointcut is runtime;
	Get evaluations;
	Get class filter;
	Get method matcher;
	Check if control flow pointcut equals;
	Hash code

22.14. Add a class for default bean factory pointcut advisor. It allows to:

	Set pointcut;
	Get pointcut;
	Convert default bean factory pointcut advisor to string

22.15. Add a class for default introduction advisor. It allows to:

	Instantiate default introduction advisor  with advice;
	Instantiate default introduction advisor  with advice, introduction info and introduction info;
	Instantiate default introduction advisor  with dynamic introduction advice, intf class and intf class;
	Add interface;
	Get interfaces;
	Validate interfaces;
	Get set order;
	Get order;
	Get advice;
	Check if default introduction advisor is per instance;
	Get class filter;
	Handle matches;
	Check if default introduction advisor equals;
	Hash code;
	Convert default introduction advisor to string

22.16. Add a class for default pointcut advisor. It allows to:

	Instantiate default pointcut advisor;
	Instantiate default pointcut advisor  with advice;
	Instantiate default pointcut advisor  with pointcut, advice and advice;
	Set pointcut;
	Get pointcut;
	Convert default pointcut advisor to string

22.17. Add a class for delegate per target object introduction interceptor. It allows to:

	Instantiate delegate per target object introduction interceptor  with default impl type class, interface type class and interface type class;
	Invoke mi method invocation;
	Proceed mi method invocation;
	Get introduction delegate  for;
	Create new delegate

22.18. Add a class for delegating introduction interceptor. It allows to:

	Instantiate delegating introduction interceptor;
	Handle init;
	Invoke mi method invocation;
	Proceed mi method invocation

22.19. Add a class for dynamic method matcher. It allows to:

	Check if dynamic method matcher is runtime;
	Handle matches

22.20. Add a class for dynamic method matcher pointcut. It allows to:

	Get class filter;
	Get method matcher

22.21. Add an interface declaration  for expression pointcut. It allows to:

	Get expression

22.22. Add a class for introduction info support. It allows to:

	Suppress interface;
	Get interfaces;
	Check if introduction info support implements interface;
	Implement interfaces  on object;
	Check if introduction info support is method on introduced interface;
	Read object

22.23. Add a class for jdk regexp method pointcut. It allows to:

	Handle init pattern representation;
	Init excluded pattern representation;
	Handle matches;
	Check if jdk regexp method pointcut matches exclusion;
	Compile patterns

22.24. Add an object creator class for jdk regexp method pointcut tests. It allows to:

	Get regexp method pointcut

22.25. Add a class for name match method pointcut. It allows to:

	Set mapped name;
	Set mapped names;
	Add method name;
	Handle matches;
	Check if name match method pointcut is match;
	Check if name match method pointcut equals;
	Hash code

22.26. Add a class for name match method pointcut advisor. It allows to:

	Instantiate name match method pointcut advisor;
	Instantiate name match method pointcut advisor  with advice;
	Set class filter;
	Set mapped name;
	Set mapped names;
	Add method name;
	Get pointcut

22.27. Add a class for name match method pointcut tests. It allows to:

	Handle setup;
	Handle test matching only;
	Handle test empty;
	Handle test match one method;
	Handle test sets;
	Handle test serializable;
	Handle test equals and hash code

22.28. Add a class for regexp method pointcut advisor integration tests. It allows to:

	Handle test single pattern;
	Handle test multiple patterns;
	Handle test serialization

22.29. Add a class for root class filter. It allows to:

	Instantiate root class filter  with clazz class;
	Handle matches

22.30. Add a class for static method matcher. It allows to:

	Check if static method matcher is runtime;
	Handle matches

22.31. Add a class for static method matcher pointcut. It allows to:

	Set class filter;
	Get class filter;
	Get method matcher

22.32. Add a class for static method matcher pointcut advisor. It allows to:

	Instantiate static method matcher pointcut advisor;
	Instantiate static method matcher pointcut advisor  with advice;
	Get set order;
	Get order;
	Set advice;
	Get advice;
	Check if static method matcher pointcut advisor is per instance;
	Get pointcut

23. Changes to package org.springframework.aop.support.annotation:  

23.1. Add a class for annotation class filter. It allows to:

	Instantiate annotation class filter  with annotation type class;
	Handle matches;
	Check if annotation class filter equals;
	Hash code;
	Convert annotation class filter to string

23.2. Add a class for annotation method matcher. It allows to:

	Instantiate annotation method matcher  with annotation type class;
	Handle matches;
	Check if annotation method matcher matches method;
	Check if annotation method matcher equals;
	Hash code;
	Convert annotation method matcher to string

24. Changes to package org.springframework.aop.target:  

24.1. Add a class for abstract bean factory based target source. It allows to:

	Set target bean name;
	Get target bean name;
	Set target class;
	Set bean factory;
	Get bean factory;
	Get target class;
	Check if abstract bean factory based target source is static;
	Release target;
	Copy  from other abstract bean factory based target source;
	Check if abstract bean factory based target source equals;
	Hash code;
	Convert abstract bean factory based target source to string

24.2. Add a class for abstract lazy creation target source. It allows to:

	Check if abstract lazy creation target source is initialized;
	Get target class;
	Check if abstract lazy creation target source is static;
	Get target;
	Release target;
	Create object

24.3. Add a class for abstract pooling target source. It allows to:

	Set max size;
	Get max size;
	Set bean factory;
	Create pool;
	Get target;
	Release target;
	Get pooling config mixin

24.4. Add a class for abstract prototype based target source. It allows to:

	Set bean factory;
	Handle new prototype instance;
	Destroy prototype instance;
	Read object;
	Replace abstract prototype based target source

24.5. Add a class for commons pool 2 target source. It allows to:

	Instantiate commons pool 2 target source;
	Set max idle;
	Get max idle;
	Set min idle;
	Get min idle;
	Set max wait;
	Get max wait;
	Set time  between eviction runs millis;
	Get time  between eviction runs millis;
	Set min evictable idle time millis;
	Get min evictable idle time millis;
	Set block when exhausted;
	Check if commons pool 2 target source is block when exhausted;
	Create pool;
	Create object pool;
	Get target;
	Release target;
	Get active count;
	Get idle count;
	Destroy commons pool 2 target source;
	Make object;
	Destroy object;
	Validate object;
	Activate object;
	Passivate object

24.6. Add a class for commons pool 2 target source proxy tests. It allows to:

	Handle test proxy

24.7. Add a class for commons pool 2 target source tests. It allows to:

	Set commons pool 2 target source tests;
	Tear commons pool 2 target source tests;
	Handle test functionality;
	Handle test functionality with no interceptors;
	Handle test config mixin;
	Handle test target source serializable without config mixin;
	Handle test proxy serializable without config mixin;
	Handle test hit max size;
	Handle test hit max size loaded from context;
	Handle test set when exhausted action;
	Handle reference identity by default;
	Prepare target source

24.8. Add a class for empty target source. It allows to:

	Process empty target source empty target source for class;
	Instantiate empty target source  with target class;
	Get target class;
	Check if empty target source is static;
	Get target;
	Release target;
	Read resolve;
	Check if empty target source equals;
	Hash code;
	Convert empty target source to string

24.9. Add a class for hot swappable target source. It allows to:

	Instantiate hot swappable target source;
	Get target class;
	Check if hot swappable target source is static;
	Get target;
	Release target;
	Get swap;
	Check if hot swappable target source equals;
	Hash code;
	Convert hot swappable target source to string

24.10. Add a class for hot swappable target source tests. It allows to:

	Handle setup;
	Close hot swappable target source tests;
	Handle test basic functionality;
	Handle test valid swaps;
	Convert test rejects swap;
	Handle test serialization

24.11. Add a class for lazy init target source. It allows to:

	Get target;
	Post process target object

24.12. Add an interface declaration  for pooling config. It allows to:

	Get max size;
	Get active count;
	Get idle count

24.13. Add a class for prototype target source. It allows to:

	Get target;
	Release target;
	Convert prototype target source to string

24.14. Add a class for prototype target source tests. It allows to:

	Handle setup;
	Handle test prototype and singleton behave differently

24.15. Add a class for simple bean target source. It allows to:

	Get target

24.16. Add a class for singleton target source. It allows to:

	Instantiate singleton target source;
	Get target class;
	Get target;
	Release target;
	Check if singleton target source is static;
	Check if singleton target source equals;
	Hash code;
	Convert singleton target source to string

24.17. Add a class for thread local target source. It allows to:

	Get target;
	Destroy thread local target source;
	Get invocation count;
	Get hit count;
	Get object count;
	Get stats  mixin

24.18. Add an interface declaration  for thread local target source stats. It allows to:

	Get invocation count;
	Get hit count;
	Get object count

24.19. Add a class for thread local target source tests. It allows to:

	Handle setup;
	Close thread local target source tests;
	Handle test use different managed instances in same thread;
	Handle test reuse in same thread;
	Handle test can get stats via mixin;
	Test new thread has own instance;
	Handle test reuse destroyed target

25. Changes to package org.springframework.aop.target.dynamic:  

25.1. Add a class for abstract refreshable target source. It allows to:

	Set refresh check delay;
	Get target class;
	Check if abstract refreshable target source is static;
	Get target;
	Release target;
	Refresh abstract refreshable target source;
	Get refresh count;
	Get last refresh time;
	Refresh check delay elapsed;
	Check if abstract refreshable target source requires refresh;
	Handle fresh target

25.2. Add a class for bean factory refreshable target source. It allows to:

	Instantiate bean factory refreshable target source  with bean factory;
	Handle fresh target;
	Obtain fresh bean

25.3. Add an interface declaration  for refreshable. It allows to:

	Refresh refreshable;
	Get refresh count;
	Get last refresh time

26. Changes to package org.springframework.asm:  

26.1. Add a class for annotation visitor. It allows to:

	Instantiate annotation visitor;
	Instantiate annotation visitor  with annotation visitor;
	Handle visit;
	Visit enum;
	Visit annotation;
	Visit array;
	Visit end

26.2. Add a class for annotation writer. It allows to:

	Instantiate annotation writer  with symbol table, annotation byte vector, previous annotation writer and previous annotation writer;
	Create symbol table;
	Handle visit;
	Visit enum;
	Visit annotation;
	Visit array;
	Visit end;
	Compute annotations size;
	Put annotations;
	Compute parameter annotations size;
	Put parameter annotations

26.3. Add a class for byte vector. It allows to:

	Instantiate byte vector;
	Put byte;
	Put byte vector;
	Put short;
	Put int;
	Put byte vector long;
	Put UTF 8;
	Encode utf 8;
	Put byte array;
	Enlarge byte vector

26.4. Add a class for class reader. It allows to:

	Instantiate class reader;
	Instantiate class reader  with input stream;
	Read stream;
	Get access;
	Get class name;
	Get super name;
	Get interfaces;
	Accept class visitor;
	Read module attributes;
	Read field;
	Read method;
	Read code;
	Read label;
	Create label;
	Create debug label;
	Read type annotations;
	Get type annotation bytecode offset;
	Read type annotation target;
	Read parameter annotations;
	Read element values;
	Read element value;
	Compute implicit frame;
	Read stack map frame;
	Read verification type info;
	Get first attribute offset;
	Read bootstrap methods attribute;
	Read attribute;
	Get item count;
	Get item;
	Get max string length;
	Read byte;
	Read unsigned short;
	Read short;
	Read int;
	Read class reader long;
	Read UTF 8;
	Read utf;
	Read stringish;
	Read class;
	Read module;
	Read package;
	Read constant dynamic;
	Read const

26.5. Add a class for class visitor. It allows to:

	Instantiate class visitor;
	Instantiate class visitor  with class visitor;
	Handle visit;
	Visit source;
	Visit module;
	Visit nest host;
	Visit outer class;
	Visit annotation;
	Visit type annotation;
	Visit attribute;
	Visit nest member;
	Visit inner class;
	Visit field;
	Visit method;
	Visit end

26.6. Add a class for class writer. It allows to:

	Instantiate class writer;
	Instantiate class writer  with class reader;
	Handle visit;
	Visit source;
	Visit module;
	Visit nest host;
	Visit outer class;
	Visit annotation;
	Visit type annotation;
	Visit attribute;
	Visit nest member;
	Visit inner class;
	Visit field;
	Visit method;
	Visit end;
	Convert class writer to byte array;
	Replace asm instructions;
	Get attribute prototypes;
	Handle new const;
	Handle new UTF 8;
	Handle new class;
	Handle new method type;
	Handle new module;
	Handle new package;
	Handle new handle;
	Handle new constant dynamic;
	Handle new invoke dynamic;
	Handle new field;
	Handle new method;
	Handle new name type;
	Get common super class;
	Get class loader

26.7. Add a class for context

26.8. Add a class for edge. It allows to:

	Instantiate edge  with successor label, next edge and next edge

26.9. Add a class for field visitor. It allows to:

	Instantiate field visitor;
	Instantiate field visitor  with field visitor;
	Visit annotation;
	Visit type annotation;
	Visit attribute;
	Visit end

26.10. Add a class for field writer. It allows to:

	Instantiate field writer  with symbol table;
	Visit annotation;
	Visit type annotation;
	Visit attribute;
	Visit end;
	Compute field info size;
	Put field info;
	Collect attribute prototypes

26.11. Add a class for frame. It allows to:

	Instantiate frame  with owner label;
	Copy  from frame;
	Get abstract type  from api format;
	Get abstract type  from internal name;
	Get abstract type  from descriptor;
	Set input frame  from descriptor;
	Set input frame  from api format;
	Get input stack size;
	Get local;
	Set local;
	Push frame;
	Push symbol table;
	Get pop;
	Handle pop;
	Add initialized type;
	Get initialized type;
	Execute arg symbol;
	Get concrete output type;
	Merge symbol table;
	Accept method writer;
	Put abstract type

26.12. Add a class for handle. It allows to:

	Instantiate handle;
	Get tag;
	Get owner;
	Get name;
	Get desc;
	Check if handle is interface;
	Check if handle equals;
	Hash code;
	Convert handle to string

26.13. Add a class for handler. It allows to:

	Instantiate handler  with start pc label, end pc label, handler pc label and handler pc label;
	Instantiate handler  with handler, start pc label, end pc label and end pc label;
	Remove range;
	Get exception table length;
	Get exception table size;
	Put exception table

26.14. Add a class for label. It allows to:

	Instantiate label;
	Offset label;
	Get canonical instance;
	Add line number;
	Accept method visitor;
	Put code byte vector;
	Add label forward reference;
	Resolve label;
	Handle mark subroutine;
	Add subroutine ret successors;
	Push successors;
	Convert label to string

26.15. Add a class for method visitor. It allows to:

	Instantiate method visitor;
	Instantiate method visitor  with method visitor;
	Visit parameter;
	Visit annotation default;
	Visit annotation;
	Visit type annotation;
	Visit annotable parameter count;
	Visit parameter annotation;
	Visit attribute;
	Visit code;
	Visit frame;
	Visit insn;
	Visit int insn;
	Visit var insn;
	Visit type insn;
	Visit field insn;
	Visit method insn;
	Visit invoke dynamic insn;
	Visit jump insn;
	Visit label;
	Visit ldc insn;
	Visit iinc insn;
	Visit table switch insn;
	Visit lookup switch insn;
	Visit multi A new array insn;
	Visit insn annotation;
	Visit try catch block;
	Visit try catch annotation;
	Visit local variable;
	Visit local variable annotation;
	Visit line number;
	Visit maxs;
	Visit end

26.16. Add a class for method writer. It allows to:

	Instantiate method writer  with symbol table;
	Check if method writer has frames;
	Check if method writer has asm instructions;
	Visit parameter;
	Visit annotation default;
	Visit annotation;
	Visit type annotation;
	Visit annotable parameter count;
	Visit parameter annotation;
	Visit attribute;
	Visit code;
	Visit frame;
	Visit insn;
	Visit int insn;
	Visit var insn;
	Visit type insn;
	Visit field insn;
	Visit method insn;
	Visit invoke dynamic insn;
	Visit jump insn;
	Visit label;
	Visit ldc insn;
	Visit iinc insn;
	Visit table switch insn;
	Visit lookup switch insn;
	Visit switch insn;
	Visit multi A new array insn;
	Visit insn annotation;
	Visit try catch block;
	Visit try catch annotation;
	Visit local variable;
	Visit local variable annotation;
	Visit line number;
	Visit maxs;
	Compute all frames;
	Compute max stack and local;
	Visit end;
	Add successor  to current basic block;
	End current basic block  with no successor;
	Visit frame start;
	Visit abstract type;
	Visit frame end;
	Put frame;
	Put abstract types;
	Put frame type;
	Can copy method attributes;
	Set method attributes source;
	Compute method info size;
	Put method info;
	Collect attribute prototypes

26.17. Add an interface declaration  for opcodes

26.18. Add a class for spring asm info

26.19. Add a class for type. It allows to:

	Instantiate type;
	Get type;
	Get element type;
	Get object type;
	Get method type;
	Get argument types;
	Get return type;
	Get return type offset;
	Get type internal;
	Get class name;
	Get internal name;
	Get descriptor;
	Get constructor descriptor;
	Get method descriptor;
	Append descriptor;
	Get sort;
	Get dimensions;
	Get size;
	Get arguments and return sizes;
	Get opcode;
	Check if type equals;
	Hash code;
	Convert type to string

26.20. Add a class for type path. It allows to:

	Instantiate type path;
	Get length;
	Step type path;
	Get step argument;
	Process type path type path from string;
	Convert type path to string;
	Put type path

26.21. Add a class for type reference. It allows to:

	Instantiate type reference;
	Handle new type reference;
	Handle new type parameter reference;
	Handle new type parameter bound reference;
	Handle new super type reference;
	Handle new formal parameter reference;
	Handle new exception reference;
	Handle new try catch reference;
	Handle new type argument reference;
	Get sort;
	Get type parameter index;
	Get type parameter bound index;
	Get super type index;
	Get formal parameter index;
	Get exception index;
	Get try catch block index;
	Get type argument index;
	Get value;
	Put target

27. Changes to package org.springframework.beans:  

27.1. Add a class for abstract property accessor. It allows to:

	Set extract old value  for editor;
	Check if abstract property accessor is extract old value for editor;
	Set auto grow nested paths;
	Check if abstract property accessor is auto grow nested paths;
	Set property value;
	Set property values;
	Get property type;
	Get property value;

27.2. Add a class for abstract property values tests. It allows to:

	Do test tony

27.3. Add an interface declaration  for bean info factory. It allows to:

	Get bean info

27.4. Add a class for bean instantiation exception. It allows to:

	Instantiate bean instantiation exception  with bean class;
	Instantiate bean instantiation exception  with bean class, cause throwable and cause throwable;
	Instantiate bean instantiation exception  with constructor, cause throwable and cause throwable;
	Instantiate bean instantiation exception  with constructing method, cause throwable and cause throwable;
	Get bean class;
	Get constructor;
	Get constructing method

27.5. Add a class for bean metadata attribute. It allows to:

	Instantiate bean metadata attribute;
	Get name;
	Get value;
	Set source;
	Get source;
	Check if bean metadata attribute equals;
	Hash code;
	Convert bean metadata attribute to string

27.6. Add a class for bean metadata attribute accessor. It allows to:

	Set source;
	Get source;
	Add metadata attribute;
	Get metadata attribute;
	Set attribute;
	Get attribute;
	Remove attribute

27.7. Add an interface declaration  for bean metadata element. It allows to:

	Get source

27.8. Add an interface declaration  for bean wrapper. It allows to:

	Set auto grow collection limit;
	Get auto grow collection limit;
	Get wrapped instance;
	Get wrapped class;
	Get property descriptors;
	Get property descriptor

27.9. Add a class for beans exception. It allows to:

	Instantiate beans exception;
	Instantiate beans exception  with cause throwable

27.10. Add a class for cached introspection results. It allows to:

	Accept class loader;
	Handle clear class loader;
	Process cached introspection results cached introspection results for class;
	Check if cached introspection results is class loader accepted;
	Check if cached introspection results is underneath class loader;
	Get bean info;
	Instantiate cached introspection results  with bean class;
	Handle introspect interfaces;
	Get bean class;
	Get property descriptor;
	Get property descriptors;
	Build generic type aware property descriptor;
	Add type descriptor;
	Get type descriptor

27.11. Add a class for cached introspection results tests. It allows to:

	Accept and clear class loader;
	Handle clear class loader for system class loader;
	Should use extended bean info when applicable

27.12. Add an interface declaration  for configurable property accessor. It allows to:

	Set conversion service;
	Get conversion service;
	Set extract old value  for editor;
	Check if configurable property accessor is extract old value for editor;
	Set auto grow nested paths;
	Check if configurable property accessor is auto grow nested paths

27.13. Add a class for conversion not supported exception. It allows to:

	Instantiate conversion not supported exception  with property change event, required type class, cause throwable and cause throwable;
	Instantiate conversion not supported exception  with required type class, cause throwable and cause throwable

27.14. Add a class for direct field accessor tests. It allows to:

	Create accessor;
	Process direct field accessor tests direct field accessor tests with shadowed field

27.15. Add a class for extended bean info factory. It allows to:

	Get bean info;
	Handle supports;
	Get order

27.16. Add a class for extended bean info factory tests. It allows to:

	Should extended bean info factory tests not support class having only void returning setter;
	Should support class having non void returning setter;
	Should support class having non void returning indexed setter;
	Should extended bean info factory tests not support class having non public non void returning indexed setter;
	Should extended bean info factory tests not support class having non void returning parameterless setter;
	Should extended bean info factory tests not support class having non void returning method named set

27.17. Add a class for fatal bean exception. It allows to:

	Instantiate fatal bean exception;
	Instantiate fatal bean exception  with cause throwable

27.18. Add a class for generic type aware property descriptor. It allows to:

	Instantiate generic type aware property descriptor  with bean class, read method, write method, property editor class and property editor class;
	Get bean class;
	Get read method;
	Get write method;
	Get write method  for actual access;
	Get write method parameter;
	Get property type;
	Get property editor class;
	Check if generic type aware property descriptor equals;
	Hash code

27.19. Add a class for invalid property exception. It allows to:

	Instantiate invalid property exception  with bean class;
	Instantiate invalid property exception  with bean class, cause throwable and cause throwable;
	Get bean class;
	Get property name

27.20. Add an interface declaration  for mergeable. It allows to:

	Check if mergeable is merge enabled;
	Merge mergeable

27.21. Add a class for method invocation exception. It allows to:

	Instantiate method invocation exception  with property change event, cause throwable and cause throwable;
	Get error code

27.22. Add a class for mutable property values. It allows to:

	Instantiate mutable property values;
	Instantiate mutable property values  with original property values;
	Instantiate mutable property values  with original map;
	Instantiate mutable property values  with property value list;
	Get property value list;
	Get size;
	Add property values;
	Add property value;
	Add mutable property values;
	Set property value  at pv property value;
	Merge new pv property value if required;
	Remove property value;
	Get iterator;
	Get spliterator;
	Get stream;
	Get property values;
	Get property value;
	Get mutable property values;
	Get changes since;
	Check if mutable property values contains;
	Check if mutable property values is empty;
	Register processed property;
	Handle clear processed property;
	Converted mutable property values;
	Check if mutable property values is converted;
	Check if mutable property values equals;
	Hash code;
	Convert mutable property values to string

27.23. Add a class for mutable property values tests. It allows to:

	Handle test valid;
	Handle test add or override;
	Handle test changes on equals;
	Handle test change of one field;
	Handle iterator contains property value;
	Handle iterator is empty for empty values;
	Handle stream contains property value;
	Handle stream is empty for empty values

27.24. Add a class for not readable property exception. It allows to:

	Instantiate not readable property exception  with bean class;
	Instantiate not readable property exception  with bean class, cause throwable and cause throwable

27.25. Add a class for not writable property exception. It allows to:

	Instantiate not writable property exception  with bean class;
	Instantiate not writable property exception  with bean class, cause throwable and cause throwable;
	Get possible matches

27.26. Add a class for null value in nested path exception. It allows to:

	Instantiate null value in nested path exception  with bean class;
	Instantiate null value in nested path exception  with bean class, cause throwable and cause throwable

27.27. Add a class for property access exception. It allows to:

	Instantiate property access exception  with property change event, cause throwable and cause throwable;
	Instantiate property access exception  with cause throwable;
	Get property change event;
	Get property name;
	Get value;
	Get error code

27.28. Add an interface declaration  for property accessor. It allows to:

	Check if property accessor is readable property;
	Check if property accessor is writable property;
	Get property type;
	Get property type descriptor;
	Get property value;
	Set property value;
	Set property values;

27.29. Add an object creator class for property accessor factory. It allows to:

	Instantiate property accessor factory;
	Process property accessor factory property accessor factory for bean property access;
	Process property accessor factory property accessor factory for direct field access

27.30. Add a class for property accessor utils. It allows to:

	Get property name;
	Check if property accessor utils is nested or indexed property;
	Get property accessor utils first nested property separator index;
	Get last nested property separator index;
	Get nested property separator index;
	Check if property accessor utils matches property;
	Handle canonical property name;
	Handle canonical property names

27.31. Add a class for property accessor utils tests. It allows to:

	Handle test canonical property name;
	Handle test canonical property names

27.32. Add a class for property batch update exception. It allows to:

	Instantiate property batch update exception  with property access exceptions;
	Get exception count;
	Get property access exceptions;
	Get property access exception;
	Get message;
	Convert property batch update exception to string;
	Print ps print stream;
	Print pw print writer;
	Check if property batch update exception contains

27.33. Add a class for property descriptor utils. It allows to:

	Copy non method properties;
	Find property type;
	Find indexed property type;
	Check if property descriptor utils equals

27.34. Add an interface declaration  for property editor registrar. It allows to:

	Register custom editors

27.35. Add an interface declaration  for property editor registry. It allows to:

	Register custom editor;
	Find custom editor

27.36. Add a class for property value. It allows to:

	Instantiate property value;
	Instantiate property value  with original property value;
	Get name;
	Get value;
	Get original property value;
	Set optional;
	Check if property value is optional;
	Check if property value is converted;
	Set converted value;
	Get converted value;
	Check if property value equals;
	Hash code;
	Convert property value to string

27.37. Add an interface declaration  for property values. It allows to:

	Get iterator;
	Get spliterator;
	Get stream;
	Get property values;
	Get property value;
	Get changes since;
	Check if property values contains;
	Check if property values is empty

27.38. Add a class for property values editor. It allows to:

	Get set as text

27.39. Add a class for simple property descriptor tests. It allows to:

	Convert simple property descriptor tests to string output;
	Non indexed equality;
	Get indexed equality

27.40. Add a class for simple type converter. It allows to:

	Instantiate simple type converter

27.41. Add an interface declaration  for type converter. It allows to:

	Convert required type class if necessary;

27.42. Add a class for type converter delegate. It allows to:

	Instantiate type converter delegate  with property editor registry support;
	Convert required type class if necessary;
	Attempt required type class to convert string to enum;
	Find default editor;
	Do convert value;
	Do convert text value;
	Convert component type class to typed array;
	Convert original collection to typed collection;
	Convert original map to typed map;
	Build indexed property name;
	Build keyed property name;
	Can create copy

27.43. Add a class for type converter support. It allows to:

	Convert required type class if necessary;

27.44. Add a class for type mismatch exception. It allows to:

	Instantiate type mismatch exception  with property change event, required type class and required type class;
	Instantiate type mismatch exception  with property change event, required type class, cause throwable and cause throwable;
	Instantiate type mismatch exception  with required type class;
	Instantiate type mismatch exception  with required type class, cause throwable and cause throwable;
	Handle init property name;
	Get property name;
	Get value;
	Get required type;
	Get error code

28. Changes to package org.springframework.beans.annotation:  

28.1. Add a class for annotation bean utils. It allows to:

	Copy properties  to bean;

29. Changes to package org.springframework.beans.factory:  

29.1. Add an interface declaration  for aware

29.2. Add an interface declaration  for bean class loader aware. It allows to:

	Set bean class loader

29.3. Add a class for bean creation exception. It allows to:

	Instantiate bean creation exception;
	Instantiate bean creation exception  with cause throwable;
	Get resource description;
	Get bean name;
	Add related cause;
	Get related causes;
	Convert bean creation exception to string;
	Print ps print stream;
	Print pw print writer;
	Check if bean creation exception contains

29.4. Add a class for bean creation not allowed exception. It allows to:

	Instantiate bean creation not allowed exception

29.5. Add a class for bean currently in creation exception. It allows to:

	Instantiate bean currently in creation exception;

29.6. Add a class for bean definition store exception. It allows to:

	Instantiate bean definition store exception;
	Instantiate bean definition store exception  with cause throwable;
	Get resource description;
	Get bean name

29.7. Add a class for bean expression exception. It allows to:

	Instantiate bean expression exception;
	Instantiate bean expression exception  with cause throwable

29.8. Add an interface declaration  for bean factory. It allows to:

	Get bean;
	Get bean provider;
	Check if bean factory contains bean;
	Check if bean factory is singleton;
	Check if bean factory is prototype;
	Check if bean factory is type match;
	Get type;
	Get aliases

29.9. Add an interface declaration  for bean factory aware. It allows to:

	Set bean factory

29.10. Add a class for bean factory utils. It allows to:

	Check if bean factory utils is factory dereference;
	Get transformed bean name;
	Check if bean factory utils is generated bean name;
	Handle original bean name;
	Count beans including ancestors;
	Get bean names including ancestors;
	Get bean names for type including ancestors;
	Get bean names for annotation including ancestors;
	Get beans of type including ancestors;
	Get bean of type including ancestors;
	Get bean of type;
	Merge names  with parent;
	Handle unique bean

29.11. Add a class for bean factory utils tests. It allows to:

	Set bean factory utils tests;
	Handle test hierarchical count beans with non hierarchical factory;
	Handle test hierarchical count beans with override;
	Handle test hierarchical names with no match;
	Handle test hierarchical names with match only in root;
	Handle test get bean names for type with override;
	Handle test no beans of type;
	Handle test finds beans of type with static factory;
	Handle test finds beans of type with default factory;
	Handle test hierarchical resolution with override;
	Handle test hierarchical names for annotation with no match;
	Handle test hierarchical names for annotation with match only in root;
	Handle test get bean names for annotation with override;
	Handle test A dependencies;
	Handle test B dependencies;
	Handle test C dependencies;
	Handle test int dependencies

29.12. Add a class for bean initialization exception. It allows to:

	Instantiate bean initialization exception;
	Instantiate bean initialization exception  with cause throwable

29.13. Add a class for bean is abstract exception. It allows to:

	Instantiate bean is abstract exception

29.14. Add a class for bean is not A factory exception. It allows to:

	Instantiate bean is not A factory exception  with actual type class

29.15. Add an interface declaration  for bean name aware. It allows to:

	Set bean name

29.16. Add a class for bean not of required type exception. It allows to:

	Instantiate bean not of required type exception  with required type class, actual type class and actual type class;
	Get bean name;
	Get required type;
	Get actual type

29.17. Add a class for can not load bean class exception. It allows to:

	Instantiate can not load bean class exception  with cause class not found exception;
	Instantiate can not load bean class exception  with cause linkage error;
	Get resource description;
	Get bean name;
	Get bean class name

29.18. Add an interface declaration  for disposable bean. It allows to:

	Destroy disposable bean

29.19. Add an interface declaration  for factory bean. It allows to:

	Get object;
	Get object type;
	Check if factory bean is singleton

29.20. Add a class for factory bean lookup tests. It allows to:

	Set factory bean lookup tests;
	Handle factory bean lookup by name dereferencing;
	Handle factory bean lookup by type;
	Handle factory bean lookup by type and name dereference;
	Handle factory bean object lookup by name;
	Handle factory bean object lookup by name and type

Add a local a class for foo factory bean. It allows to:

	Create instance;
	Get object type

Add a local a class for foo

29.21. Add a class for factory bean not initialized exception. It allows to:

	Instantiate factory bean not initialized exception;

29.22. Add an interface declaration  for hierarchical bean factory. It allows to:

	Get parent bean factory;
	Check if hierarchical bean factory contains local bean

29.23. Add an interface declaration  for initializing bean. It allows to:

	Handle after properties set

29.24. Add a class for injection point. It allows to:

	Instantiate injection point  with method parameter;
	Instantiate injection point  with field;
	Instantiate injection point  with original injection point;
	Instantiate injection point;
	Get method parameter;
	Get field;
	Obtain method parameter;
	Get annotations;
	Get annotation;
	Get declared type;
	Get member;
	Get annotated element;
	Check if injection point equals;
	Hash code;
	Convert injection point to string

29.25. Add an interface declaration  for listable bean factory. It allows to:

	Check if listable bean factory contains bean definition;
	Get bean definition count;
	Get bean definition names;
	Get bean names  for type;
	Get beans  of type;
	Get bean names  for annotation;
	Get beans  with annotation;
	Find annotation  on bean

29.26. Add an interface declaration  for named bean. It allows to:

	Get bean name

29.27. Add a class for no such bean definition exception. It allows to:

	Instantiate no such bean definition exception;
	Instantiate no such bean definition exception  with type class;
	Instantiate no such bean definition exception  with resolvable type;
	Get bean name;
	Get bean type;
	Get resolvable type;
	Get number  of beans found

29.28. Add a class for no unique bean definition exception. It allows to:

	Instantiate no unique bean definition exception  with type class;
	Instantiate no unique bean definition exception  with type class, bean names found collection and bean names found collection;
	Instantiate no unique bean definition exception  with resolvable type, bean names found collection and bean names found collection;
	Instantiate no unique bean definition exception  with resolvable type;
	Get number  of beans found;
	Get bean names found

29.29. Add an interface declaration  for object factory. It allows to:

	Get object

29.30. Add an interface declaration  for object provider. It allows to:

	Get object;
	Get object provider if available;
	Get default supplier if available;
	Process object provider object provider if available;
	Get object provider if unique;
	Get default supplier if unique;
	Process object provider object provider if unique;
	Get iterator;
	Get stream;
	Get ordered stream

29.31. Add an interface declaration  for smart factory bean. It allows to:

	Check if smart factory bean is prototype;
	Check if smart factory bean is eager init

29.32. Add an interface declaration  for smart initializing singleton. It allows to:

	Handle after singletons instantiated

29.33. Add a class for unsatisfied dependency exception. It allows to:

	Instantiate unsatisfied dependency exception;
	Instantiate unsatisfied dependency exception  with beans exception;
	Instantiate unsatisfied dependency exception  with injection point;
	Instantiate unsatisfied dependency exception  with injection point, beans exception and beans exception;
	Get injection point

30. Changes to package org.springframework.beans.factory.access:  

30.1. Add a class for test bean. It allows to:

	Get name;
	Set name;
	Get list;
	Set list;
	Get obj ref;
	Set obj ref

31. Changes to package org.springframework.beans.factory.annotation:  

31.1. Add an interface declaration  for annotated bean definition. It allows to:

	Get metadata;
	Get factory method metadata

31.2. Add a class for annotated generic bean definition. It allows to:

	Instantiate annotated generic bean definition  with bean class;
	Instantiate annotated generic bean definition  with annotation metadata;
	Instantiate annotated generic bean definition  with annotation metadata, factory method metadata and factory method metadata;
	Get metadata;
	Get factory method metadata

31.3. Add a class for annotation bean wiring info resolver. It allows to:

	Resolve wiring info;
	Build wiring info;
	Get default bean name

31.4. Add a class for bean factory annotation utils. It allows to:

	Get qualified beans of type;
	Get qualified bean of type;
	Check if bean factory annotation utils is qualifier match

31.5. Add a class for custom autowire configurer. It allows to:

	Get set order;
	Get order;
	Set bean class loader;
	Set custom qualifier types;
	Post process bean factory

31.6. Add a class for qualifier annotation autowire candidate resolver. It allows to:

	Instantiate qualifier annotation autowire candidate resolver;
	Instantiate qualifier annotation autowire candidate resolver  with qualifier type class;
	Instantiate qualifier annotation autowire candidate resolver  with qualifier types set;
	Add qualifier type;
	Get set value annotation type;
	Check if qualifier annotation autowire candidate resolver is autowire candidate;
	Check qualifiers;
	Check if qualifier annotation autowire candidate resolver is qualifier;
	Check qualifier;
	Get qualified element annotation;
	Get factory method annotation;
	Check if qualifier annotation autowire candidate resolver is required;
	Check if qualifier annotation autowire candidate resolver has qualifier;
	Get suggested value;
	Find value;
	Extract value

31.7. Add a class for required annotation bean post processor. It allows to:

	Set required annotation type;
	Get required annotation type;
	Set bean factory;
	Get set order;
	Get order;
	Post process merged bean definition;
	Post process property values;
	Skip configurable listable bean factory;
	Check if required annotation bean post processor is required property;
	Build exception message

32. Changes to package org.springframework.beans.factory.aspectj:  

32.1. Add an interface declaration  for configurable object

32.2. Add a class for should be configured by spring. It allows to:

	Set name;
	Get name

32.3. Add a class for spring configured with auto proxying tests. It allows to:

	Spring configured and auto proxy used  together

32.4. Add a class for xml bean configurer tests. It allows to:

	Handle injection

33. Changes to package org.springframework.beans.factory.config:  

33.1. Add an interface declaration  for autowire capable bean factory. It allows to:

	Create bean;
	Autowire bean;
	Configure bean;
	Get autowire;
	Autowire bean properties;
	Apply bean property values;
	Initialize bean;
	Apply bean post processors  before initialization;
	Apply bean post processors  after initialization;
	Destroy bean;
	Resolve named bean;
	Resolve bean  by name;
	Resolve dependency;

33.2. Add an interface declaration  for bean definition. It allows to:

	Set parent name;
	Get parent name;
	Set bean class name;
	Get bean class name;
	Set scope;
	Get scope;
	Set lazy init;
	Check if bean definition is lazy init;
	Set depends  on;
	Get depends  on;
	Set autowire candidate;
	Check if bean definition is autowire candidate;
	Set primary;
	Check if bean definition is primary;
	Set factory bean name;
	Get factory bean name;
	Set factory method name;
	Get factory method name;
	Get constructor argument values;
	Check if bean definition has constructor argument values;
	Get property values;
	Check if bean definition has property values;
	Set init method name;
	Get init method name;
	Set destroy method name;
	Get destroy method name;
	Set role;
	Get role;
	Set description;
	Get description;
	Check if bean definition is singleton;
	Check if bean definition is prototype;
	Check if bean definition is abstract;
	Get resource description;
	Get originating bean definition

33.3. Add a class for bean definition holder. It allows to:

	Instantiate bean definition holder  with bean definition;
	Instantiate bean definition holder  with bean definition holder;
	Get bean definition;
	Get bean name;
	Get aliases;
	Get source;
	Check if bean definition holder matches name;
	Get short description;
	Get bean definition holder long description;
	Convert bean definition holder to string;
	Check if bean definition holder equals;
	Hash code

33.4. Add a class for bean definition visitor. It allows to:

	Instantiate bean definition visitor  with string value resolver;
	Instantiate bean definition visitor;
	Visit bean definition;
	Visit parent name;
	Visit bean class name;
	Visit factory bean name;
	Visit factory method name;
	Visit scope;
	Visit property values;
	Visit indexed argument values;
	Visit generic argument values;
	Resolve value;
	Visit array;
	Visit list;
	Handle visit set;
	Visit map;
	Resolve string value

33.5. Add a class for bean expression context. It allows to:

	Instantiate bean expression context  with configurable bean factory, scope and scope;
	Get bean factory;
	Get scope;
	Check if bean expression context contains object;
	Get object;
	Check if bean expression context equals;
	Hash code

33.6. Add an interface declaration  for bean expression resolver. It allows to:

	Evaluate eval context

33.7. Add an interface declaration  for bean factory post processor. It allows to:

	Post process bean factory

33.8. Add an interface declaration  for bean post processor. It allows to:

	Post process  before initialization;
	Post process  after initialization

33.9. Add an interface declaration  for bean reference. It allows to:

	Get bean name

33.10. Add an interface declaration  for configurable bean factory. It allows to:

	Set parent bean factory;
	Set bean class loader;
	Get bean class loader;
	Set temp class loader;
	Get temp class loader;
	Set cache bean metadata;
	Check if configurable bean factory is cache bean metadata;
	Set bean expression resolver;
	Get bean expression resolver;
	Set conversion service;
	Get conversion service;
	Add property editor registrar;
	Register custom editor;
	Copy registered editors  to property editor registry;
	Set type converter;
	Get type converter;
	Add embedded value resolver;
	Check if configurable bean factory has embedded value resolver;
	Resolve embedded value;
	Add bean post processor;
	Get bean post processor count;
	Register scope;
	Get registered scope names;
	Get registered scope;
	Get access control context;
	Copy configuration  from other factory;
	Register configurable bean factory alias;
	Resolve aliases;
	Get merged bean definition;
	Check if configurable bean factory is factory bean;
	Set configurable bean factory currently in creation;
	Check if configurable bean factory is currently in creation;
	Register dependent bean;
	Get dependent beans;
	Get dependencies  for bean;
	Destroy bean;
	Destroy scoped bean;
	Destroy singletons

33.11. Add an interface declaration  for configurable listable bean factory. It allows to:

	Ignore dependency type;
	Ignore dependency interface;
	Register resolvable dependency;
	Check if configurable listable bean factory is autowire candidate;
	Get bean definition;
	Get bean names iterator;
	Handle clear metadata cache;
	Freeze configuration;
	Check if configurable listable bean factory is configuration frozen;
	Pre instantiate singletons

33.12. Add a class for custom editor configurer. It allows to:

	Get set order;
	Get order;
	Set property editor registrars;
	Set custom editors;
	Post process bean factory

33.13. Add a class for custom scope configurer. It allows to:

	Set scopes;
	Add scope;
	Get set order;
	Get order;
	Set bean class loader;
	Post process bean factory

33.14. Add a class for custom scope configurer tests. It allows to:

	Handle test with no scopes;
	Handle test sunny day with bona fide scope instance;
	Handle test sunny day with bona fide scope class;
	Handle test sunny day with bona fide scope class name;
	Handle test where scope map has null scope value in entry set;
	Handle test where scope map has non scope instance in entry set;
	Handle test where scope map has non string typed scope name in key set

33.15. Add a class for deprecated bean warner. It allows to:

	Set logger name;
	Post process bean factory;
	Log deprecated bean;
	Write deprecated bean warner to log;
	Check if deprecated bean warner is log enabled

33.16. Add an interface declaration  for destruction aware bean post processor. It allows to:

	Post process  before destruction;
	Check if destruction aware bean post processor requires destruction

33.17. Add a class for embedded value resolver. It allows to:

	Instantiate embedded value resolver  with configurable bean factory;
	Resolve string value

33.18. Add a class for field retrieving factory bean. It allows to:

	Set target class;
	Get target class;
	Set target object;
	Get target object;
	Set target field;
	Get target field;
	Set static field;
	Set bean name;
	Set bean class loader;
	Handle after properties set;
	Get object;
	Get object type;
	Check if field retrieving factory bean is singleton

33.19. Add an interface declaration  for instantiation aware bean post processor. It allows to:

	Post process  before instantiation;
	Post process  after instantiation;
	Post process properties;
	Post process property values

33.20. Add a class for instantiation aware bean post processor adapter. It allows to:

	Predict bean type;
	Determine candidate constructors;
	Get instantiation aware bean post processor adapter early bean reference;
	Post process  before instantiation;
	Post process  after instantiation;
	Post process properties;
	Post process property values;
	Post process  before initialization;
	Post process  after initialization

33.21. Add a class for list factory bean. It allows to:

	Set source list;
	Set target list class;
	Get object type;
	Create instance

33.22. Add a class for map factory bean. It allows to:

	Set source map;
	Set target map class;
	Get object type;
	Create instance

33.23. Add a class for method invoking bean. It allows to:

	Set bean class loader;
	Resolve class name;
	Set bean factory;
	Get default type converter;
	Handle after properties set;
	Invoke method invoking bean with target exception

33.24. Add a class for method invoking factory bean. It allows to:

	Set singleton;
	Handle after properties set;
	Get object;
	Get object type;
	Check if method invoking factory bean is singleton

33.25. Add a class for my deprecated bean

33.26. Add a class for placeholder configurer support. It allows to:

	Set placeholder prefix;
	Set placeholder suffix;
	Get set value separator;
	Set trim values;
	Set null value;
	Set ignore unresolvable placeholders;
	Set bean name;
	Set bean factory;
	Do process properties

33.27. Add a class for preferences placeholder configurer. It allows to:

	Set system tree path;
	Set user tree path;
	Handle after properties set;
	Resolve placeholder;

33.28. Add a class for properties factory bean. It allows to:

	Set singleton;
	Check if properties factory bean is singleton;
	Handle after properties set;
	Get object;
	Get object type;
	Create properties

33.29. Add a class for properties factory bean tests. It allows to:

	Handle test with properties file;
	Handle test with properties xml file;
	Handle test with local properties;
	Handle test with properties file and local properties;
	Handle test with properties file and multiple local properties;
	Handle test with properties file and local properties and local override;
	Handle test with prototype

33.30. Add a class for property override configurer. It allows to:

	Set bean name separator;
	Set ignore invalid keys;
	Handle process properties;
	Handle process key;
	Apply property value;
	Check if property override configurer has property overrides for

33.31. Add a class for property path factory bean. It allows to:

	Set target object;
	Set target bean name;
	Set property path;
	Set result type;
	Set bean name;
	Set bean factory;
	Get object;
	Get object type;
	Check if property path factory bean is singleton

33.32. Add a class for property path factory bean tests. It allows to:

	Handle test property path factory bean with singleton result;
	Handle test property path factory bean with prototype result;
	Handle test property path factory bean with null result;
	Handle test property path factory bean as inner bean;
	Handle test property path factory bean as null reference;
	Handle test property path factory bean as inner null

33.33. Add a class for property placeholder configurer tests. It allows to:

	Handle setup;
	Handle cleanup;
	Handle local properties via resource;
	Resolve property placeholder configurer tests from system properties;
	Resolve property placeholder configurer tests from local properties;
	Set system properties mode default is fallback;
	Set system system properties mode  to override and resolve from system properties;
	Set system system properties mode  to override and set search system environment to false;
	Two placeholder configurers  with conflicting settings;
	Handle custom placeholder prefix and suffix;
	Handle null value is preserved;
	Handle trim values is off by default;
	Handle trim values is applied

33.34. Add a class for property resource configurer. It allows to:

	Get set order;
	Get order;
	Post process bean factory;
	Convert properties;
	Convert property;
	Convert property value;
	Handle process properties

33.35. Add a class for runtime bean name reference. It allows to:

	Instantiate runtime bean name reference;
	Get bean name;
	Set source;
	Get source;
	Check if runtime bean name reference equals;
	Hash code;
	Convert runtime bean name reference to string

33.36. Add a class for runtime bean reference. It allows to:

	Instantiate runtime bean reference;
	Get bean name;
	Check if runtime bean reference is to parent;
	Set source;
	Get source;
	Check if runtime bean reference equals;
	Hash code;
	Convert runtime bean reference to string

33.37. Add an interface declaration  for scope. It allows to:

	Get object factory;
	Remove scope;
	Register destruction callback;
	Resolve contextual object;
	Get conversation id

33.38. Add a class for set factory bean. It allows to:

	Set source set;
	Set target set class;
	Get object type;
	Create instance

33.39. Add a class for simple scope tests. It allows to:

	Handle setup;
	Get object factory;
	Handle test can get scoped object

33.40. Add an interface declaration  for singleton bean registry. It allows to:

	Register singleton;
	Get singleton;
	Check if singleton bean registry contains singleton;
	Get singleton names;
	Get singleton count;
	Get singleton mutex

33.41. Add an interface declaration  for smart instantiation aware bean post processor. It allows to:

	Predict bean type;
	Determine candidate constructors;
	Get smart instantiation aware bean post processor early bean reference

33.42. Add a class for test types

Add a local a class for no op scope. It allows to:

	Get object factory;
	Remove no op scope;
	Register destruction callback;
	Resolve contextual object;
	Get conversation id

33.43. Add a class for typed string value. It allows to:

	Instantiate typed string value;
	Instantiate typed string value  with target type class;
	Get set value;
	Get value;
	Set target type;
	Get target type;
	Set target type name;
	Get target type name;
	Check if typed string value has target type;
	Resolve target type;
	Set source;
	Get source;
	Set specified type name;
	Get specified type name;
	Set dynamic;
	Check if typed string value is dynamic;
	Check if typed string value equals;
	Hash code;
	Convert typed string value to string

33.44. Add a class for yaml map factory bean. It allows to:

	Set singleton;
	Check if yaml map factory bean is singleton;
	Handle after properties set;
	Get object;
	Get object type;
	Create map;
	Merge output map

33.45. Add a class for yaml map factory bean tests. It allows to:

	Handle test set ignore resource not found;
	Handle test set barf on resource not found;
	Handle test get object;
	Handle test override and remove defaults;
	Handle test first found;
	Get description;
	Get input stream;
	Handle test map with periods in key;
	Handle test map with integer value;
	Handle test duplicate key

33.46. Add a class for yaml processor tests. It allows to:

	Convert array converted;
	Handle test string resource;
	Handle test bad document start;
	Handle test bad resource;
	Map converted  to indexed bean reference;
	Handle integer key behaves;
	Handle integer deep key behaves;
	Get flattened map is same as properties but ordered

33.47. Add a class for yaml properties factory bean. It allows to:

	Set singleton;
	Check if yaml properties factory bean is singleton;
	Handle after properties set;
	Get object;
	Get object type;
	Create properties

33.48. Add a class for yaml properties factory bean tests. It allows to:

	Handle test load resource;
	Handle test bad resource;
	Handle test load resources with override;
	Handle test load resources with internal override;
	Handle test load resources with nested internal override;
	Handle test load resource with multiple documents;
	Handle test load resource with selected documents;
	Handle test load resource with default match;
	Handle test load resource without default match;
	Get matches;
	Handle test load resource with default match skipping missed match;
	Handle test load non existent resource;
	Handle test load null;
	Handle test load empty array value;
	Handle test load array of string;
	Handle test load array of integer;
	Handle test load array of object;
	Handle test yaml

34. Changes to package org.springframework.beans.factory.parsing:  

34.1. Add a class for abstract component definition. It allows to:

	Get description;
	Get bean definitions;
	Get inner bean definitions;
	Get bean references;
	Convert abstract component definition to string

34.2. Add a class for alias definition. It allows to:

	Instantiate alias definition;
	Get bean name;
	Get alias definition alias;
	Get source

34.3. Add a class for bean component definition. It allows to:

	Instantiate bean component definition  with bean definition;
	Instantiate bean component definition  with bean definition holder;
	Get name;
	Get description;
	Get bean definitions;
	Get inner bean definitions;
	Get bean references;
	Convert bean component definition to string;
	Check if bean component definition equals

34.4. Add a class for bean definition parsing exception. It allows to:

	Instantiate bean definition parsing exception  with problem

34.5. Add a class for bean entry. It allows to:

	Instantiate bean entry;
	Convert bean entry to string

34.6. Add an interface declaration  for component definition. It allows to:

	Get name;
	Get description;
	Get bean definitions;
	Get inner bean definitions;
	Get bean references

34.7. Add a class for composite component definition. It allows to:

	Instantiate composite component definition;
	Get name;
	Get source;
	Add nested component;
	Get nested components

34.8. Add a class for constructor argument entry. It allows to:

	Instantiate constructor argument entry;
	Convert constructor argument entry to string

34.9. Add a class for constructor argument entry tests. It allows to:

	Handle test ctor bails on negative ctor index argument

34.10. Add an interface declaration  for defaults definition

34.11. Add a class for empty reader event listener. It allows to:

	Handle defaults registered;
	Handle component registered;
	Handle alias registered;
	Handle import processed

34.12. Add a class for fail fast problem reporter. It allows to:

	Set logger;
	Handle fatal;
	Handle error;
	Warning problem

34.13. Add a class for fail fast problem reporter tests. It allows to:

	Handle test error;
	Handle test warn

34.14. Add a class for import definition. It allows to:

	Instantiate import definition;
	Instantiate import definition  with actual resources;
	Get imported resource;
	Get actual resources;
	Get source

34.15. Add a class for location. It allows to:

	Instantiate location  with resource;
	Get resource;
	Get source

34.16. Add a class for null source extractor. It allows to:

	Extract source

34.17. Add a class for null source extractor tests. It allows to:

	Handle test pass through contract;
	Handle test pass through contract even with null

34.18. Add a class for pass through source extractor. It allows to:

	Extract source

34.19. Add a class for pass through source extractor tests. It allows to:

	Handle test pass through contract;
	Handle test pass through contract even with null

34.20. Add a class for problem. It allows to:

	Instantiate problem  with location;
	Instantiate problem  with location, parse state and parse state;
	Instantiate problem  with location, parse state, root cause throwable and root cause throwable;
	Get message;
	Get location;
	Get resource description;
	Get parse state;
	Get root cause;
	Convert problem to string

34.21. Add an interface declaration  for problem reporter. It allows to:

	Handle fatal;
	Handle error;
	Warning problem

34.22. Add a class for property entry. It allows to:

	Instantiate property entry;
	Convert property entry to string

34.23. Add a class for property entry tests. It allows to:

	Handle test ctor bails on null property name argument;
	Handle test ctor bails on empty property name argument;
	Handle test ctor bails on whitespaced property name argument

34.24. Add a class for qualifier entry. It allows to:

	Instantiate qualifier entry;
	Convert qualifier entry to string

34.25. Add a class for reader context. It allows to:

	Instantiate reader context  with resource, problem reporter, reader event listener, source extractor and source extractor;
	Get resource;
	Handle fatal;
	Handle error;
	Warning reader context;
	Warning cause throwable;
	Warning parse state;
	Handle fire defaults registered;
	Handle fire component registered;
	Fire alias registered;
	Handle fire import processed;
	Get source extractor;
	Extract source

34.26. Add an interface declaration  for reader event listener. It allows to:

	Handle defaults registered;
	Handle component registered;
	Handle alias registered;
	Handle import processed

34.27. Add an interface declaration  for source extractor. It allows to:

	Extract source

35. Changes to package org.springframework.beans.factory.serviceloader:  

35.1. Add a class for abstract service loader based factory bean. It allows to:

	Set service type;
	Get service type;
	Set bean class loader;
	Create instance;
	Get object  to expose

35.2. Add a class for service factory bean. It allows to:

	Get object  to expose;
	Get object type

35.3. Add a class for service list factory bean. It allows to:

	Get object  to expose;
	Get object type

35.4. Add a class for service loader factory bean. It allows to:

	Get object  to expose;
	Get object type

35.5. Add a class for service loader tests. It allows to:

	Handle test service loader factory bean;
	Handle test service factory bean;
	Handle test service list factory bean

36. Changes to package org.springframework.beans.factory.support:  

36.1. Add a class for abstract bean definition. It allows to:

	Instantiate abstract bean definition;
	Instantiate abstract bean definition  with cargs constructor argument values, pvs mutable property values and pvs mutable property values;
	Instantiate abstract bean definition  with original bean definition;
	Override  from other bean definition;
	Apply defaults;
	Set bean class name;
	Get bean class name;
	Set bean class;
	Get bean class;
	Check if abstract bean definition has bean class;
	Resolve bean class;
	Set scope;
	Get scope;
	Check if abstract bean definition is singleton;
	Check if abstract bean definition is prototype;
	Set abstract;
	Check if abstract bean definition is abstract;
	Set lazy init;
	Check if abstract bean definition is lazy init;
	Get lazy init;
	Set autowire mode;
	Get autowire mode;
	Get resolved  autowire mode;
	Set dependency check;
	Get dependency check;
	Set depends  on;
	Get depends  on;
	Set autowire candidate;
	Check if abstract bean definition is autowire candidate;
	Set primary;
	Check if abstract bean definition is primary;
	Add qualifier;
	Check if abstract bean definition has qualifier;
	Get qualifier;
	Get qualifiers;
	Copy qualifiers  from source abstract bean definition;
	Set instance supplier;
	Get instance supplier;
	Set non public access allowed;
	Check if abstract bean definition is non public access allowed;
	Set lenient constructor resolution;
	Check if abstract bean definition is lenient constructor resolution;
	Set factory bean name;
	Get factory bean name;
	Set factory method name;
	Get factory method name;
	Set constructor argument values;
	Get constructor argument values;
	Check if abstract bean definition has constructor argument values;
	Set property values;
	Get property values;
	Check if abstract bean definition has property values;
	Set method overrides;
	Get method overrides;
	Check if abstract bean definition has method overrides;
	Set init method name;
	Get init method name;
	Set enforce init method;
	Check if abstract bean definition is enforce init method;
	Set destroy method name;
	Get destroy method name;
	Set enforce destroy method;
	Check if abstract bean definition is enforce destroy method;
	Set synthetic;
	Check if abstract bean definition is synthetic;
	Set role;
	Get role;
	Set description;
	Get description;
	Set resource;
	Get resource;
	Set resource description;
	Get resource description;
	Set originating bean definition;
	Get originating bean definition;
	Validate abstract bean definition;
	Prepare method overrides;
	Prepare method override;
	Clone abstract bean definition;
	Clone bean definition;
	Check if abstract bean definition equals;
	Hash code;
	Convert abstract bean definition to string

36.2. Add a class for abstract bean definition reader. It allows to:

	Instantiate abstract bean definition reader  with bean definition registry;
	Get bean factory;
	Get registry;
	Set resource loader;
	Get resource loader;
	Set bean class loader;
	Get bean class loader;
	Set environment;
	Get environment;
	Set bean name generator;
	Get bean name generator;
	Load bean definitions;

36.3. Add a class for abstract bean factory. It allows to:

	Instantiate abstract bean factory;
	Instantiate abstract bean factory  with parent bean factory;
	Get bean;
	Do get bean;
	Check if abstract bean factory contains bean;
	Check if abstract bean factory is singleton;
	Check if abstract bean factory is prototype;
	Check if abstract bean factory is type match;
	Get type;
	Get aliases;
	Get parent bean factory;
	Check if abstract bean factory contains local bean;
	Set parent bean factory;
	Set bean class loader;
	Get bean class loader;
	Set temp class loader;
	Get temp class loader;
	Set cache bean metadata;
	Check if abstract bean factory is cache bean metadata;
	Set bean expression resolver;
	Get bean expression resolver;
	Set conversion service;
	Get conversion service;
	Add property editor registrar;
	Get property editor registrars;
	Register custom editor;
	Copy registered editors  to property editor registry;
	Get custom editors;
	Set type converter;
	Get custom type converter;
	Get type converter;
	Add embedded value resolver;
	Check if abstract bean factory has embedded value resolver;
	Resolve embedded value;
	Add bean post processor;
	Get bean post processor count;
	Get bean post processors;
	Check if abstract bean factory has instantiation aware bean post processors;
	Check if abstract bean factory has destruction aware bean post processors;
	Register scope;
	Get registered scope names;
	Get registered scope;
	Set security context provider;
	Get access control context;
	Copy configuration  from other factory;
	Get merged bean definition;
	Check if abstract bean factory is factory bean;
	Check if abstract bean factory is actually in creation;
	Check if abstract bean factory is prototype currently in creation;
	Process abstract bean factory abstract bean factory before prototype creation;
	Process abstract bean factory abstract bean factory after prototype creation;
	Destroy bean;
	Destroy scoped bean;
	Get transformed bean name;
	Handle original bean name;
	Init bean wrapper;
	Register custom editors;
	Get merged local bean definition;
	Check merged bean definition;
	Handle clear merged bean definition;
	Handle clear metadata cache;
	Resolve bean class;
	Do resolve bean class;
	Evaluate bean definition string;
	Predict bean type;
	Get type  for factory bean;
	Handle mark bean as created;
	Handle cleanup after bean creation failure;
	Check if abstract bean factory is bean eligible for metadata caching;
	Remove singleton  if created for type check only;
	Check if abstract bean factory has bean creation started;
	Get object  for bean instance;
	Check if abstract bean factory is bean name in use;
	Check if abstract bean factory requires destruction;
	Register disposable bean  if necessary;
	Check if abstract bean factory contains bean definition;
	Get bean definition;
	Create bean

36.4. Add a class for autowire candidate qualifier. It allows to:

	Instantiate autowire candidate qualifier  with type class;
	Instantiate autowire candidate qualifier;
	Get type name

36.5. Add an interface declaration  for autowire candidate resolver. It allows to:

	Check if autowire candidate resolver is autowire candidate;
	Check if autowire candidate resolver is required;
	Check if autowire candidate resolver has qualifier;
	Get suggested value;
	Get lazy resolution proxy  if necessary

36.6. Add a class for bean definition builder. It allows to:

	Handle generic bean definition;
	Root bean definition;
	Get child bean definition;
	Instantiate bean definition builder  with abstract bean definition;
	Get raw bean definition;
	Get bean definition;
	Set parent name;
	Set factory method;
	Set factory method  on bean;
	Add constructor arg value;
	Add constructor arg reference;
	Add property value;
	Add property reference;
	Set init method name;
	Set destroy method name;
	Set scope;
	Set abstract;
	Set lazy init;
	Set autowire mode;
	Set dependency check;
	Add depends  on;
	Set role;
	Apply customizers

36.7. Add a class for bean definition builder tests. It allows to:

	Handle bean class with simple property;
	Handle bean class with factory method;
	Handle bean class name;
	Handle bean class name with factory method

36.8. Add a class for bean definition defaults. It allows to:

	Set lazy init;
	Check if bean definition defaults is lazy init;
	Get lazy init;
	Set autowire mode;
	Get autowire mode;
	Set dependency check;
	Get dependency check;
	Set init method name;
	Get init method name;
	Set destroy method name;
	Get destroy method name

36.9. Add an interface declaration  for bean definition reader. It allows to:

	Get registry;
	Get resource loader;
	Get bean class loader;
	Get bean name generator;
	Load bean definitions;

36.10. Add a class for bean definition reader utils. It allows to:

	Create bean definition;
	Generate bean name;
	Handle unique bean name;
	Register bean definition;
	Register abstract bean definition with generated name

36.11. Add an interface declaration  for bean definition registry. It allows to:

	Register bean definition;
	Remove bean definition;
	Get bean definition;
	Check if bean definition registry contains bean definition;
	Get bean definition names;
	Get bean definition count;
	Check if bean definition registry is bean name in use

36.12. Add an interface declaration  for bean definition registry post processor. It allows to:

	Post process bean definition registry

36.13. Add a class for bean definition resource. It allows to:

	Instantiate bean definition resource  with bean definition;
	Get bean definition;
	Check if bean definition resource exists;
	Check if bean definition resource is readable;
	Get input stream;
	Get description;
	Check if bean definition resource equals;
	Hash code

36.14. Add a class for bean definition tests. It allows to:

	Handle bean definition equality;
	Handle bean definition equality with property values;
	Handle bean definition equality with constructor arguments;
	Handle bean definition equality with typed constructor arguments;
	Handle bean definition holder equality;
	Handle bean definition merging

36.15. Add a class for bean definition validation exception. It allows to:

	Instantiate bean definition validation exception;
	Instantiate bean definition validation exception  with cause throwable

36.16. Add an interface declaration  for bean name generator. It allows to:

	Generate bean name

36.17. Add a class for child bean definition. It allows to:

	Instantiate child bean definition;
	Instantiate child bean definition  with pvs mutable property values;
	Instantiate child bean definition  with cargs constructor argument values, pvs mutable property values and pvs mutable property values;
	Instantiate child bean definition  with bean class, cargs constructor argument values, pvs mutable property values and pvs mutable property values;
	Instantiate child bean definition  with original child bean definition;
	Set parent name;
	Get parent name;
	Validate child bean definition;
	Clone bean definition;
	Check if child bean definition equals;
	Hash code;
	Convert child bean definition to string

36.18. Add a class for default bean name generator. It allows to:

	Generate bean name

36.19. Add a class for default singleton bean registry. It allows to:

	Register singleton;
	Add singleton;
	Add singleton factory;
	Get singleton;
	Process default singleton bean registry default singleton bean registry on suppressed exception;
	Remove singleton;
	Check if default singleton bean registry contains singleton;
	Get singleton names;
	Get singleton count;
	Set default singleton bean registry currently in creation;
	Check if default singleton bean registry is currently in creation;
	Check if default singleton bean registry is actually in creation;
	Check if default singleton bean registry is singleton currently in creation;
	Process default singleton bean registry default singleton bean registry before singleton creation;
	Process default singleton bean registry default singleton bean registry after singleton creation;
	Register disposable bean;
	Register contained bean;
	Register dependent bean;
	Check if default singleton bean registry is dependent;
	Check if default singleton bean registry has dependent bean;
	Get dependent beans;
	Get dependencies  for bean;
	Destroy singletons;
	Handle clear singleton cache;
	Destroy singleton;
	Destroy bean;
	Get singleton mutex

36.20. Add a class for default singleton bean registry tests. It allows to:

	Handle test singletons;
	Get object;
	Handle test disposable bean;
	Handle test dependent registration

36.21. Add a class for definition metadata equals hash code tests. It allows to:

	Root bean definition;
	Root bean definition and method overrides  with different overloaded values;
	Handle child bean definition;
	Runtime bean reference;
	Set base properties;
	Assert equals and hash code contracts

36.22. Add a class for disposable bean adapter. It allows to:

	Instantiate disposable bean adapter  with root bean definition, post processors list, access control context and access control context;
	Instantiate disposable bean adapter  with post processors list, access control context and access control context;
	Instantiate disposable bean adapter  with post processors list;
	Infer destroy method  if necessary;
	Get filter post processors;
	Run disposable bean adapter;
	Destroy disposable bean adapter;
	Determine destroy method;
	Find destroy method;
	Invoke custom destroy method;
	Replace disposable bean adapter;
	Check if disposable bean adapter has destroy method;
	Check if disposable bean adapter has applicable processors

36.23. Add a class for factory bean registry support. It allows to:

	Get type  for factory bean;
	Get cached object  for factory bean;
	Get object  from factory bean;
	Do get object  from factory bean;
	Post process object  from factory bean;
	Get factory bean;
	Remove singleton;
	Handle clear singleton cache;
	Get access control context

36.24. Add a class for generic bean definition. It allows to:

	Instantiate generic bean definition;
	Instantiate generic bean definition  with original bean definition;
	Set parent name;
	Get parent name;
	Clone bean definition;
	Check if generic bean definition equals;
	Convert generic bean definition to string

36.25. Add a class for generic type aware autowire candidate resolver. It allows to:

	Set bean factory;
	Get bean factory;
	Check if generic type aware autowire candidate resolver is autowire candidate;
	Check generic type match;
	Get resolved decorated definition;
	Get return type  for factory method

36.26. Add an interface declaration  for instantiation strategy. It allows to:

	Get instantiate;

36.27. Add a class for lookup override. It allows to:

	Instantiate lookup override;
	Instantiate lookup override  with method;
	Get bean name;
	Handle matches;
	Check if lookup override equals;
	Hash code;
	Convert lookup override to string

36.28. Add a class for managed array. It allows to:

	Instantiate managed array

36.29. Add a class for managed list. It allows to:

	Instantiate managed list;
	Set source;
	Get source;
	Set element type name;
	Get element type name;
	Get set merge enabled;
	Check if managed list is merge enabled;
	Merge managed list

36.30. Add a class for managed list tests. It allows to:

	Merge sunny day;
	Merge managed list tests with null parent;
	Merge managed list tests not allowed when merge not enabled;
	Merge managed list tests with non compatible parent type;
	Merge empty child;
	Merge child values override the parents

36.31. Add a class for managed map. It allows to:

	Instantiate managed map;
	Set source;
	Get source;
	Set key type name;
	Get key type name;
	Get set value type name;
	Get value type name;
	Get set merge enabled;
	Check if managed map is merge enabled;
	Merge managed map

36.32. Add a class for managed map tests. It allows to:

	Merge sunny day;
	Merge managed map tests with null parent;
	Merge managed map tests with non compatible parent type;
	Merge managed map tests not allowed when merge not enabled;
	Merge empty child;
	Merge child values override the parents

36.33. Add a class for managed properties. It allows to:

	Set source;
	Get source;
	Get set merge enabled;
	Check if managed properties is merge enabled;
	Merge managed properties

36.34. Add a class for managed properties tests. It allows to:

	Merge sunny day;
	Merge managed properties tests with null parent;
	Merge managed properties tests with non compatible parent type;
	Merge managed properties tests not allowed when merge not enabled;
	Merge empty child;
	Merge child values override the parents

36.35. Add a class for managed set. It allows to:

	Instantiate managed set;
	Set source;
	Get source;
	Set element type name;
	Get element type name;
	Get set merge enabled;
	Check if managed set is merge enabled;
	Merge managed set

36.36. Add a class for managed set tests. It allows to:

	Merge sunny day;
	Merge managed set tests with null parent;
	Merge managed set tests not allowed when merge not enabled;
	Merge managed set tests with non compatible parent type;
	Merge empty child;
	Merge child values override the parents

36.37. Add an interface declaration  for merged bean definition post processor. It allows to:

	Post process merged bean definition;
	Reset bean definition

36.38. Add a class for method override. It allows to:

	Instantiate method override;
	Get method name;
	Set overloaded;
	Check if method override is overloaded;
	Set source;
	Get source;
	Handle matches;
	Check if method override equals;
	Hash code

36.39. Add a class for method overrides. It allows to:

	Instantiate method overrides;
	Instantiate method overrides  with other method overrides;
	Add overrides;
	Add override;
	Get overrides;
	Check if method overrides is empty;
	Get override;
	Check if method overrides equals;
	Hash code

36.40. Add an interface declaration  for method replacer. It allows to:

	Get reimplement

36.41. Add a class for properties bean definition reader. It allows to:

	Instantiate properties bean definition reader  with bean definition registry;
	Set default parent bean;
	Get default parent bean;
	Set properties persister;
	Get properties persister;
	Load bean definitions;
	Register bean definitions;
	Register bean definition;
	Read value

36.42. Add a class for properties bean definition reader tests. It allows to:

	Process properties bean definition reader tests properties bean definition reader tests with simple constructor arg;
	Process properties bean definition reader tests properties bean definition reader tests with constructor arg ref;
	Process properties bean definition reader tests properties bean definition reader tests with multiple constructors args

36.43. Add a class for replace override. It allows to:

	Instantiate replace override;
	Get method replacer bean name;
	Add type identifier;
	Handle matches;
	Check if replace override equals;
	Hash code;
	Convert replace override to string

36.44. Add a class for root bean definition. It allows to:

	Instantiate root bean definition;
	Instantiate root bean definition  with bean class;
	Instantiate root bean definition  with bean class, instance supplier and instance supplier;
	Instantiate root bean definition  with bean class, cargs constructor argument values, pvs mutable property values and pvs mutable property values;
	Instantiate root bean definition  with cargs constructor argument values, pvs mutable property values and pvs mutable property values;
	Instantiate root bean definition  with original root bean definition;
	Instantiate root bean definition  with original bean definition;
	Get parent name;
	Set parent name;
	Set decorated definition;
	Get decorated definition;
	Set qualified element;
	Get qualified element;
	Set target type;
	Get target type;
	Get resolvable type;
	Get preferred constructors;
	Set unique factory method name;
	Set root bean definition non unique factory method name;
	Check if root bean definition is factory method;
	Set resolved factory method;
	Get resolved factory method;
	Register config member externally managed config member;
	Check if root bean definition is externally managed config member;
	Register root bean definition externally managed init method;
	Check if root bean definition is externally managed init method;
	Register root bean definition externally managed destroy method;
	Check if root bean definition is externally managed destroy method;
	Clone bean definition;
	Check if root bean definition equals;
	Convert root bean definition to string

36.45. Add an interface declaration  for security context provider. It allows to:

	Get access control context

36.46. Add a class for simple autowire candidate resolver. It allows to:

	Check if simple autowire candidate resolver is autowire candidate;
	Check if simple autowire candidate resolver is required;
	Get suggested value;
	Get lazy resolution proxy  if necessary

36.47. Add a class for simple bean definition registry. It allows to:

	Register bean definition;
	Remove bean definition;
	Get bean definition;
	Check if simple bean definition registry contains bean definition;
	Get bean definition names;
	Get bean definition count;
	Check if simple bean definition registry is bean name in use

36.48. Add a class for simple instantiation strategy. It allows to:

	Get simple instantiation strategy currently invoked factory method;
	Get instantiate;
	Handle instantiate with method injection;

36.49. Add a class for simple security context provider. It allows to:

	Instantiate simple security context provider;
	Instantiate simple security context provider  with access control context;
	Get access control context

36.50. Add a class for static listable bean factory. It allows to:

	Instantiate static listable bean factory;
	Instantiate static listable bean factory  with beans map;
	Add bean;
	Get bean;
	Get bean provider;
	Get object;
	Get  if available;
	Get  if unique;
	Get stream;
	Get ordered stream;
	Check if static listable bean factory contains bean;
	Check if static listable bean factory is singleton;
	Check if static listable bean factory is prototype;
	Check if static listable bean factory is type match;
	Get type;
	Get aliases;
	Check if static listable bean factory contains bean definition;
	Get bean definition count;
	Get bean definition names;
	Get bean names  for type;
	Get beans  of type;
	Get bean names  for annotation;
	Get beans  with annotation;
	Find annotation  on bean

37. Changes to package org.springframework.beans.factory.support.security.support:  

37.1. Add a class for constructor bean. It allows to:

	Instantiate constructor bean;

37.2. Add a class for custom callback bean. It allows to:

	Handle init;
	Destroy custom callback bean

37.3. Add a class for custom factory bean. It allows to:

	Get object;
	Get object type;
	Check if custom factory bean is singleton

37.4. Add a class for destroy bean. It allows to:

	Destroy destroy bean

37.5. Add an object creator class for factory bean. It allows to:

	Make static instance;
	Get protected static instance;
	Make instance

37.6. Add a class for init bean. It allows to:

	Handle after properties set

37.7. Add a class for property bean. It allows to:

	Set security property;
	Set property

38. Changes to package org.springframework.beans.factory.wiring:  

38.1. Add a class for bean configurer support. It allows to:

	Set bean wiring info resolver;
	Set bean factory;
	Create default bean wiring info resolver;
	Handle after properties set;
	Destroy bean configurer support;
	Configure bean

38.2. Add a class for bean wiring info. It allows to:

	Instantiate bean wiring info;
	Check if bean wiring info indicates autowiring;
	Get bean name;
	Check if bean wiring info is default bean name;
	Get autowire mode;
	Get dependency check

38.3. Add an interface declaration  for bean wiring info resolver. It allows to:

	Resolve wiring info

38.4. Add a class for bean wiring info tests. It allows to:

	Ctor bean wiring info tests with null bean name;
	Ctor bean wiring info tests with whitespaced bean name;
	Ctor bean wiring info tests with empty bean name;
	Ctor bean wiring info tests with negative illegal autowiring value;
	Ctor bean wiring info tests with positive out of range autowiring value;
	Using autowire ctor indicates autowiring;
	Using bean name ctor does  not indicate autowiring;
	Handle no dependency check value is preserved;
	Handle dependency check value is preserved

38.5. Add an object creator class for class name bean wiring info resolver. It allows to:

	Resolve wiring info

38.6. Add a class for class name bean wiring info resolver tests. It allows to:

	Resolve wiring info  with null bean instance;
	Resolve wiring info

39. Changes to package org.springframework.beans.factory.xml:  

39.1. Add a class for abstract bean definition parser. It allows to:

	Parse element;
	Resolve id;
	Register bean definition;
	Parse internal;
	Should generate id;
	Should generate id  as fallback;
	Should parse name  as aliases;
	Should fire events;
	Post process component definition

39.2. Add a class for abstract listable bean factory tests. It allows to:

	Get listable bean factory;
	Handle count;
	Assert count;
	Assert test bean count;
	Get definitions  for no such class;
	Get count  for factory class;
	Check if abstract listable bean factory tests contains bean definition

39.3. Add a class for abstract simple bean definition parser. It allows to:

	Parse element;
	Check if abstract simple bean definition parser is eligible attribute;
	Extract property name;
	Post process

39.4. Add a class for abstract single bean definition parser. It allows to:

	Parse internal;
	Get parent name;
	Get bean class;
	Get bean class name;
	Parse element;

39.5. Add a class for autowire with exclusion tests. It allows to:

	Process autowire with exclusion tests autowire with exclusion tests by type autowire with auto self exclusion;
	Process autowire with exclusion tests autowire with exclusion tests by type autowire with exclusion;
	Process autowire with exclusion tests autowire with exclusion tests by type autowire with exclusion in parent factory;
	Process autowire with exclusion tests autowire with exclusion tests by type autowire with primary in parent factory;
	Process autowire with exclusion tests autowire with exclusion tests by type autowire with primary overriding parent factory;
	Process autowire with exclusion tests autowire with exclusion tests by type autowire with primary in parent and child;
	Process autowire with exclusion tests autowire with exclusion tests by type autowire with inclusion;
	Process autowire with exclusion tests autowire with exclusion tests by type autowire with selective inclusion;
	Handle constructor autowire with auto self exclusion;
	Handle constructor autowire with exclusion;
	Get bean factory

39.6. Add an interface declaration  for bean definition decorator. It allows to:

	Decorate node

39.7. Add an interface declaration  for bean definition document reader. It allows to:

	Register bean definitions

39.8. Add an interface declaration  for bean definition parser. It allows to:

	Parse element

39.9. Add a class for bean definition parser delegate. It allows to:

	Instantiate bean definition parser delegate  with xml reader context;
	Get reader context;
	Extract source;
	Handle error;
	Handle init defaults;
	Populate defaults;
	Get defaults;
	Get bean definition defaults;
	Get autowire candidate patterns;
	Parse bean definition element;
	Check name uniqueness;
	Parse bean definition attributes;
	Create bean definition;
	Parse meta elements;
	Get autowire mode;
	Parse constructor arg elements;
	Parse property elements;
	Parse qualifier elements;
	Parse lookup override sub elements;
	Parse replaced method sub elements;
	Parse constructor arg element;
	Parse property element;
	Parse qualifier element;
	Parse property value;
	Parse property sub element;
	Parse id ref element;
	Parse value element;
	Build typed string value;
	Parse array element;
	Parse list element;
	Parse set element;
	Parse collection elements;
	Parse map element;
	Build typed string value  for map;
	Parse key element;
	Parse props element;
	Parse merge attribute;
	Parse custom element;
	Decorate bean definition  if required;
	Decorate node if required;
	Parse nested custom element;
	Get namespace URI;
	Get local name;
	Node name equals;
	Check if bean definition parser delegate is default namespace;
	Check if bean definition parser delegate is default value;
	Check if bean definition parser delegate is candidate element

39.10. Add a class for bean name generation tests. It allows to:

	Set bean name generation tests;
	Naming bean name generation tests

39.11. Add a class for beans dtd resolver. It allows to:

	Resolve entity;
	Convert beans dtd resolver to string

39.12. Add a class for collection merging tests. It allows to:

	Set collection merging tests;
	Merge list;
	Merge list  with inner bean as list element;
	Merge set;
	Merge set  with inner bean as set element;
	Merge map;
	Merge map  with inner bean as map entry value;
	Merge properties;
	Merge list  in constructor;
	Merge list  with inner bean as list element in constructor;
	Merge set  in constructor;
	Merge set  with inner bean as set element in constructor;
	Merge map  in constructor;
	Merge map  with inner bean as map entry value in constructor;
	Merge properties  in constructor

39.13. Add a class for collections with default types tests. It allows to:

	Instantiate collections with default types tests;
	Handle test list has default type;
	Handle test set has default type;
	Handle test map has default key and value type;
	Handle test map with nested elements has default key and value type;
	Assert map;
	Handle test build collection from mixture of references and values

39.14. Add a class for constructor dependencies bean. It allows to:

	Instantiate constructor dependencies bean;
	Instantiate constructor dependencies bean  with spouse 1 test bean;
	Instantiate constructor dependencies bean  with spouse 1 test bean, spouse 2 test bean and spouse 2 test bean;
	Instantiate constructor dependencies bean  with spouse 1 test bean, spouse 2 test bean, other indexed test bean and other indexed test bean;
	Get age;
	Get name;
	Get spouse 1;
	Get spouse 2;
	Get other;
	Set age;
	Set name

39.15. Add a class for counting factory. It allows to:

	Reset counting factory;
	Get factory bean instance count;
	Instantiate counting factory;
	Set test bean;
	Get object;
	Get object type;
	Check if counting factory is singleton

39.16. Add a class for default bean definition document reader. It allows to:

	Register bean definitions;
	Get reader context;
	Extract source;
	Do register bean definitions;
	Create delegate;
	Parse bean definitions;
	Parse default element;
	Handle import bean definition resource;
	Handle process alias registration;
	Handle process bean definition;
	Pre process xml;
	Post process xml

39.17. Add a class for default document loader. It allows to:

	Load document;
	Create document builder factory;
	Create document builder

39.18. Add a class for default namespace handler resolver. It allows to:

	Instantiate default namespace handler resolver;
	Instantiate default namespace handler resolver  with class loader;
	Resolve default namespace handler resolver;
	Get handler mappings;
	Convert default namespace handler resolver to string

39.19. Add a class for delegating entity resolver. It allows to:

	Instantiate delegating entity resolver  with class loader;
	Instantiate delegating entity resolver  with dtd resolver, schema resolver and schema resolver;
	Resolve entity;
	Convert delegating entity resolver to string

39.20. Add a class for document defaults definition. It allows to:

	Set lazy init;
	Get lazy init;
	Get set merge;
	Merge document defaults definition;
	Set autowire;
	Get autowire;
	Set autowire candidates;
	Get autowire candidates;
	Set init method;
	Get init method;
	Set destroy method;
	Get destroy method;
	Set source;
	Get source

39.21. Add an interface declaration  for document loader. It allows to:

	Load document

39.22. Add a class for dummy referencer. It allows to:

	Instantiate dummy referencer;
	Instantiate dummy referencer  with dummy factory;
	Set dummy factory;
	Get dummy factory;
	Set test bean 1;
	Get test bean 1;
	Set test bean 2;
	Get test bean 2

39.23. Add a class for duplicate bean id tests. It allows to:

	Duplicate bean ids  within same nesting level raises error;
	Duplicate bean ids  across nesting levels

39.24. Add a class for event publication tests. It allows to:

	Set event publication tests;
	Handle defaults event received;
	Handle bean event received;
	Handle alias event received;
	Handle import event received

39.25. Add a class for factory method tests. It allows to:

	Handle test factory methods singleton on target class;
	Handle test factory methods with invalid destroy method;
	Handle test factory methods with null instance;
	Handle test factory methods with null value;
	Handle test factory methods with autowire;
	Handle test protected factory method;
	Handle test private factory method;
	Handle test factory methods prototype on target class;
	Handle test factory methods on external class;
	Handle test instance factory method without args;
	Handle test factory method no matching static method;
	Handle test non existing factory method;
	Handle test factory method arguments for non existing method;
	Handle test can specify factory method arguments on factory method prototype;
	Handle test can specify factory method arguments on singleton;
	Handle test can not specify factory method arguments on singleton after creation;
	Handle test factory method with different return type;
	Handle test factory method for java mail session

Add a local a class for mail session. It allows to:

	Instantiate mail session;
	Set properties;
	Get default instance;
	Get property

39.26. Add a class for generated name bean. It allows to:

	Set bean name;
	Get bean name;
	Set child;
	Get child

39.27. Add a class for instance factory. It allows to:

	Instantiate instance factory;
	Set factory bean property;
	Get factory bean property;
	Get default instance;
	Handle new instance;

39.28. Add a class for lookup method wrapped by cglib proxy tests. It allows to:

	Set lookup method wrapped by cglib proxy tests;
	Handle test auto proxied lookup;
	Handle test regularly proxied lookup;
	Assert interceptor count;
	Reset interceptor;
	Get interceptor

Add a local a class for overload lookup. It allows to:

	Handle new test bean;
	Get test method

39.29. Add a class for metadata attachment tests. It allows to:

	Set metadata attachment tests;
	Handle metadata attachment;
	Handle metadata is inherited;
	Handle property metadata

39.30. Add a class for mixed collection bean. It allows to:

	Set jumble;
	Get jumble

39.31. Add an interface declaration  for namespace handler. It allows to:

	Handle init;
	Parse element;
	Decorate source node

39.32. Add an interface declaration  for namespace handler resolver. It allows to:

	Resolve namespace handler resolver

39.33. Add a class for namespace handler support. It allows to:

	Parse element;
	Find parser  for element;
	Decorate node;
	Find decorator  for node;
	Register bean definition parser;
	Register bean definition decorator;
	Register bean definition decorator  for attribute

39.34. Add a class for nested beans element attribute recursion tests. It allows to:

	Handle default lazy init;
	Handle default lazy init with non validating parser;
	Assert lazy inits;
	Handle default merge;
	Handle default merge with non validating parser;
	Merge bf default listable bean factory;
	Handle default autowire candidates;
	Handle default autowire candidates with non validating parser;
	Assert autowire candidates;
	Handle init method

Add a local a class for init destroy bean. It allows to:

	Handle init method 1;
	Handle init method 2;
	Handle init method 3;
	Destroy method 1;
	Destroy method 2;
	Destroy method 3

39.35. Add a class for nested beans element tests. It allows to:

	Get bean  without active profile;
	Get bean  with active profile

39.36. Add a class for parser context. It allows to:

	Instantiate parser context  with xml reader context, bean definition parser delegate and bean definition parser delegate;
	Instantiate parser context  with xml reader context, bean definition parser delegate, containing bean definition and containing bean definition;
	Get reader context;
	Get registry;
	Get delegate;
	Get containing bean definition;
	Check if parser context is nested;
	Check if parser context is default lazy init;
	Extract source;
	Get containing component;
	Push containing component;
	Pop containing component;
	Handle pop and register containing component;
	Register component;
	Register bean component

39.37. Add a class for pluggable schema resolver. It allows to:

	Instantiate pluggable schema resolver  with class loader;
	Resolve entity;
	Get schema mappings;
	Convert pluggable schema resolver to string

39.38. Add a class for profile xml bean definition tests. It allows to:

	Handle test profile validation;
	Handle test profile permutations;
	Handle test default profile;
	Handle test default and non default profile;
	Get bean factory for;
	Check if profile xml bean definition tests contains bean definition;
	Describe  to description;
	Check if  matches safely;
	Check if profile xml bean definition tests contains target bean

39.39. Add a class for resource entity resolver. It allows to:

	Instantiate resource entity resolver  with resource loader;
	Resolve entity

39.40. Add a class for schema validation tests. It allows to:

	Process schema validation tests schema validation tests with autodetection;
	Process schema validation tests schema validation tests with explicit validation mode;
	Load definitions

39.41. Add a class for simple constructor namespace handler. It allows to:

	Handle init;
	Parse element;
	Decorate node;
	Check if simple constructor namespace handler contains arg with name;
	Check name

39.42. Add a class for simple constructor namespace handler tests. It allows to:

	Handle simple value;
	Handle simple ref;
	Name value;
	Name ref;
	Handle type indexed value;
	Handle type indexed ref;
	Handle ambiguous constructor;
	Handle constructor with name ending in ref;
	Create factory

39.43. Add a class for simple property namespace handler. It allows to:

	Handle init;
	Parse element;
	Decorate node

39.44. Add a class for simple property namespace handler tests. It allows to:

	Handle simple bean configured;
	Handle inner bean configured;
	Process simple property namespace handler tests simple property namespace handler tests with property defined twice;
	Handle property with name ending in ref

39.45. Add a class for simple property namespace handler with expression language tests. It allows to:

	Combine simple property namespace handler with expression language tests with expression language

39.46. Add a class for test bean creator. It allows to:

	Create test bean;

39.47. Add a class for util namespace handler tests. It allows to:

	Set util namespace handler tests;
	Handle test constant;
	Handle test constant with default name;
	Handle test events;
	Handle test nested properties;
	Handle test property path;
	Handle test nested property path;
	Handle test simple map;
	Handle test scoped map;
	Handle test simple list;
	Handle test scoped list;
	Handle test simple set;
	Handle test scoped set;
	Handle test map with ref;
	Handle test map with types;
	Handle test nested collections;
	Handle test nested shortcut collections;
	Handle test nested in collections;
	Handle test circular collections;
	Handle test circular collection beans starting with list;
	Handle test circular collection beans starting with set;
	Handle test circular collection beans starting with map;
	Handle test nested in constructor;
	Handle test load properties;
	Handle test scoped properties;
	Handle test local properties;
	Handle test merged properties;
	Handle test local override default;
	Handle test local override false;
	Handle test local override true

39.48. Add a class for xml bean definition reader. It allows to:

	Instantiate xml bean definition reader  with bean definition registry;
	Validating xml bean definition reader;
	Set validation mode name;
	Set validation mode;
	Get validation mode;
	Set namespace aware;
	Check if xml bean definition reader is namespace aware;
	Set problem reporter;
	Set event listener;
	Set source extractor;
	Set namespace handler resolver;
	Set document loader;
	Set entity resolver;
	Get entity resolver;
	Set error handler;
	Set document reader class;
	Load bean definitions;
	Do load bean definitions;
	Do load document;
	Get validation mode  for resource;
	Detect validation mode;
	Register bean definitions;
	Create bean definition document reader;
	Create reader context;
	Get namespace handler resolver;
	Create default namespace handler resolver

39.49. Add a class for xml bean definition reader tests. It allows to:

	Set parser class sunny day;
	Process xml bean definition reader tests xml bean definition reader tests with open input stream;
	Process xml bean definition reader tests xml bean definition reader tests with open input stream and explicit validation mode;
	Process xml bean definition reader tests xml bean definition reader tests with import;
	Process xml bean definition reader tests xml bean definition reader tests with wildcard import;
	Process xml bean definition reader tests xml bean definition reader tests with input source;
	Process xml bean definition reader tests xml bean definition reader tests with input source and explicit validation mode;
	Process xml bean definition reader tests xml bean definition reader tests with fresh input stream;
	Handle test bean definitions;
	Dtd validation autodetect;
	Handle xsd validation autodetect;
	Do test validation

39.50. Add a class for xml bean definition store exception. It allows to:

	Instantiate xml bean definition store exception  with cause SAX exception;
	Get line number

39.51. Add a class for xml bean factory. It allows to:

	Instantiate xml bean factory  with resource;
	Instantiate xml bean factory  with resource, parent bean factory and parent bean factory

39.52. Add a class for xml bean factory test types

Add a local a class for constructor dependencies bean. It allows to:

	Instantiate constructor dependencies bean;
	Instantiate constructor dependencies bean  with spouse 1 test bean;
	Instantiate constructor dependencies bean  with spouse 1 test bean, spouse 2 test bean and spouse 2 test bean;
	Instantiate constructor dependencies bean  with spouse 1 test bean, spouse 2 test bean, other indexed test bean and other indexed test bean;
	Get age;
	Get name;
	Get spouse 1;
	Get spouse 2;
	Get other;
	Set age;
	Set name

Add a local a class for simple constructor arg bean. It allows to:

	Instantiate simple constructor arg bean;
	Get age;
	Get name

Add a local a class for constructor injected overrides. It allows to:

	Instantiate constructor injected overrides  with tb test bean;
	Get test bean;
	Create factory methods;
	Get setter string;
	Set setter string

Add a local a class for derived constructor dependencies bean. It allows to:

	Instantiate derived constructor dependencies bean  with spouse 1 test bean, spouse 2 test bean, other indexed test bean and other indexed test bean;
	Instantiate derived constructor dependencies bean  with spouse 1 test bean, other indexed test bean and other indexed test bean;
	Handle init;
	Destroy derived constructor dependencies bean

Add a local an interface declaration  for dummy bo. It allows to:

	Handle something

Add a local a class for dummy bo impl. It allows to:

	Instantiate dummy bo impl  with dummy dao;
	Handle something

Add a local a class for dummy dao

Add a local a class for dummy referencer. It allows to:

	Instantiate dummy referencer;
	Instantiate dummy referencer  with dummy factory;
	Set dummy factory;
	Get dummy factory;
	Set test bean 1;
	Get test bean 1;
	Set test bean 2;
	Get test bean 2

Add a local a class for factory methods. It allows to:

	Handle null instance;
	Get default instance;
	Handle new instance;
	Get list instance;
	Instantiate factory methods  with tb test bean;
	Set string value;
	Get string value;
	Get test bean;
	Get protected get test bean;
	Handle private get test bean;
	Get num;
	Get name;
	Set name

Add a local a class for fixed method replacer. It allows to:

	Get reimplement

Add a local a class for map and set. It allows to:

	Instantiate map and set  with map;
	Instantiate map and set  with set;
	Get object

Add a local a class for method replace candidate. It allows to:

	Replace method replace candidate

Add a local a class for mixed collection bean. It allows to:

	Set jumble;
	Get jumble

Add a local an interface declaration  for override interface. It allows to:

	Get prototype dependency;

Add a local a class for override one method. It allows to:

	Handle protected override singleton;
	Get prototype dependency;
	Check if override one method invokes overridden method on self;
	Echo override one method;
	Replace override one method;

Add a local a class for override one method subclass. It allows to:

	Do something

Add a local an object creator class for reverse method replacer. It allows to:

	Get reimplement

Add a local a class for serializable method replacer candidate

Add a local a class for single simple type constructor bean. It allows to:

	Instantiate single simple type constructor bean;
	Check if single simple type constructor bean is single boolean;
	Check if single simple type constructor bean is second boolean;
	Get test string

39.53. Add a class for xml listable bean factory tests. It allows to:

	Handle setup;
	Post process  before initialization;
	Post process  after initialization;
	Get bean factory;
	Handle count;
	Handle bean count;
	Handle lifecycle methods;
	Get protected lifecycle methods;
	Handle description but no properties;
	Handle auto aliasing;
	Handle factory nesting;
	Handle factory references;
	Handle prototype references;
	Handle bean post processor;
	Handle empty values;
	Handle comments and cdata in value

39.54. Add a class for xml reader context. It allows to:

	Instantiate xml reader context  with resource, problem reporter, reader event listener, source extractor, xml bean definition reader, namespace handler resolver and namespace handler resolver;
	Get reader;
	Get registry;
	Get resource loader;
	Get bean class loader;
	Get environment;
	Get namespace handler resolver;
	Generate bean name;
	Register bean definition with generated name;
	Read document  from string

40. Changes to package org.springframework.beans.factory.xml.support:  

40.1. Add a class for default namespace handler resolver tests. It allows to:

	Handle test resolved mapped handler;
	Handle test resolved mapped handler with no arg ctor;
	Handle test non existent handler class;
	Handle test resolve invalid handler;
	Handle test ctor with null class loader argument;
	Handle test ctor with null class loader argument and null mapping location argument;
	Handle test ctor with non existent mapping location argument

41. Changes to package org.springframework.beans.propertyeditors:  

41.1. Add a class for byte array property editor. It allows to:

	Get set as text;
	Get byte array property editor as text

41.2. Add a class for byte array property editor tests. It allows to:

	Handle sunny day set as text;
	Get byte array property editor tests as text returns empty string if value is null

41.3. Add a class for char array property editor. It allows to:

	Get set as text;
	Get char array property editor as text

41.4. Add a class for char array property editor tests. It allows to:

	Handle sunny day set as text;
	Get char array property editor tests as text returns empty string if value is null

41.5. Add a class for character editor. It allows to:

	Instantiate character editor;
	Get set as text;
	Get character editor as text;
	Check if character editor is unicode character sequence;
	Get set as unicode

41.6. Add a class for charset editor. It allows to:

	Get set as text;
	Get charset editor as text

41.7. Add a class for class array editor. It allows to:

	Instantiate class array editor;
	Instantiate class array editor  with class loader;
	Get set as text;
	Get class array editor as text

41.8. Add a class for class editor. It allows to:

	Instantiate class editor;
	Instantiate class editor  with class loader;
	Get set as text;
	Get class editor as text

41.9. Add a class for currency editor. It allows to:

	Get set as text;
	Get currency editor as text

41.10. Add a class for custom boolean editor. It allows to:

	Instantiate custom boolean editor;
	Get set as text;
	Get custom boolean editor as text

41.11. Add a class for custom collection editor. It allows to:

	Instantiate custom collection editor  with collection type class;
	Get set as text;
	Get set value;
	Create collection;
	Always create new collection;
	Convert element;
	Get custom collection editor as text

41.12. Add a class for custom date editor. It allows to:

	Instantiate custom date editor  with date format;
	Get set as text;
	Get custom date editor as text

41.13. Add a class for custom map editor. It allows to:

	Instantiate custom map editor  with map type class;
	Get set as text;
	Get set value;
	Create map;
	Always create new map;
	Convert key;
	Convert value;
	Get custom map editor as text

41.14. Add a class for custom number editor. It allows to:

	Instantiate custom number editor  with number class;
	Instantiate custom number editor  with number class, number format and number format;
	Get set as text;
	Get set value;
	Get custom number editor as text

41.15. Add a class for file editor. It allows to:

	Instantiate file editor;
	Instantiate file editor  with resource editor;
	Get set as text;
	Get file editor as text

41.16. Add a class for file editor tests. It allows to:

	Handle test classpath file name;
	Handle test with non existent resource;
	Handle test with non existent file;
	Handle test absolute file name;
	Handle test unqualified file name found;
	Handle test unqualified file name not found

41.17. Add a class for input source editor. It allows to:

	Instantiate input source editor;
	Instantiate input source editor  with resource editor;
	Get set as text;
	Get input source editor as text

41.18. Add a class for input stream editor. It allows to:

	Instantiate input stream editor;
	Instantiate input stream editor  with resource editor;
	Get set as text;
	Get input stream editor as text

41.19. Add a class for input stream editor tests. It allows to:

	Handle test ctor with null resource editor;
	Handle test sunny day;
	Handle test when resource does not exist;
	Handle test get as text returns null by default

41.20. Add a class for locale editor. It allows to:

	Get set as text;
	Get locale editor as text

41.21. Add a class for pattern editor. It allows to:

	Instantiate pattern editor;
	Get set as text;
	Get pattern editor as text

41.22. Add a class for properties editor. It allows to:

	Get set as text;
	Get set value

41.23. Add a class for properties editor tests. It allows to:

	One property;
	Two properties;
	Check if properties editor tests handles equals in value;
	Check if properties editor tests handles empty property;
	Check if properties editor tests handles empty property without equals;
	Check if properties editor tests ignores comment lines and empty lines;
	Check if properties editor tests ignores leading spaces and tabs;
	Handle null value;
	Handle empty string;
	Using map  as value source

41.24. Add a class for reader editor. It allows to:

	Instantiate reader editor;
	Instantiate reader editor  with resource editor;
	Get set as text;
	Get reader editor as text

41.25. Add a class for reader editor tests. It allows to:

	Handle test ctor with null resource editor;
	Handle test sunny day;
	Handle test when resource does not exist;
	Handle test get as text returns null by default

41.26. Add a class for resource bundle editor. It allows to:

	Get set as text

41.27. Add a class for resource bundle editor tests. It allows to:

	Handle test set as text with just base name;
	Handle test set as text with base name that ends in default separator;
	Handle test set as text with base name and language code;
	Handle test set as text with base name language and country code;
	Handle test set as text with the kitchen sink;
	Handle test set as text with null;
	Handle test set as text with empty string;
	Handle test set as text with white space string;
	Handle test set as text with just separator string

41.28. Add a class for string array property editor. It allows to:

	Instantiate string array property editor;
	Get set as text;
	Get string array property editor as text

41.29. Add a class for string array property editor tests. It allows to:

	Process string array property editor tests string array property editor tests with default separator;
	Handle trim by default;
	No trim;
	Process string array property editor tests string array property editor tests with custom separator;
	Process string array property editor tests string array property editor tests with chars to delete;
	Process string array property editor tests string array property editor tests with empty array;
	Process string array property editor tests string array property editor tests with empty array as null

41.30. Add a class for string trimmer editor. It allows to:

	Instantiate string trimmer editor;
	Get set as text;
	Get string trimmer editor as text

41.31. Add a class for time zone editor. It allows to:

	Get set as text;
	Get time zone editor as text

41.32. Add a class for uRI editor. It allows to:

	Instantiate uRI editor;
	Instantiate uRI editor  with class loader;
	Get set as text;
	Create URI;
	Get uRI editor as text

41.33. Add a class for uRI editor tests. It allows to:

	Handle standard URI;
	Process uRI editor tests uRI editor tests with non existent resource;
	Handle standard URL;
	Handle standard URL with fragment;
	Handle standard URL with whitespace;
	Handle classpath URL;
	Handle classpath URL with whitespace;
	Handle classpath URL as is;
	Get set as text with null;
	Get uRI editor tests as text returns empty string if value not set;
	Encode URI;
	Encode uRI editor tests already encoded URI;
	Do test URI

41.34. Add a class for uRL editor. It allows to:

	Instantiate uRL editor;
	Instantiate uRL editor  with resource editor;
	Get set as text;
	Get uRL editor as text

41.35. Add a class for uRL editor tests. It allows to:

	Handle test ctor with null resource editor;
	Test standard URI;
	Test standard URL;
	Handle test classpath URL;
	Handle test with non existent resource;
	Handle test set as text with null;
	Handle test get as text returns empty string if value not set

41.36. Add a class for uUID editor. It allows to:

	Get set as text;
	Get uUID editor as text

41.37. Add a class for zone id editor. It allows to:

	Get set as text;
	Get zone id editor as text

41.38. Add a class for zone id editor tests. It allows to:

	Handle america chicago;
	Handle america los angeles;
	Get null  as text;
	Get value  as text

42. Changes to package org.springframework.beans.support:  

42.1. Add a class for argument converting method invoker. It allows to:

	Set type converter;
	Get type converter;
	Get default type converter;
	Register custom editor;
	Find matching method;
	Do find matching method

42.2. Add a class for derived from protected base bean

42.3. Add a class for mutable sort definition. It allows to:

	Instantiate mutable sort definition;
	Instantiate mutable sort definition  with source sort definition;
	Set property;
	Get property;
	Set ignore case;
	Check if mutable sort definition is ignore case;
	Ascending mutable sort definition;
	Check if mutable sort definition is ascending;
	Set toggle ascending  on property;
	Check if mutable sort definition is toggle ascending on property;
	Check if mutable sort definition equals;
	Hash code

42.4. Add a class for paged list holder. It allows to:

	Instantiate paged list holder;
	Instantiate paged list holder  with source list;
	Instantiate paged list holder  with source list, sort definition and sort definition;
	Set source;
	Get source;
	Get refresh date;
	Set sort;
	Get sort;
	Set page size;
	Get page size;
	Set page;
	Get page;
	Set max linked pages;
	Get max linked pages;
	Get page count;
	Check if paged list holder is first page;
	Check if paged list holder is last page;
	Handle previous page;
	Handle next page;
	Get nr  of elements;
	Get first element  on page;
	Get last element  on page;
	Get page list;
	Get paged list holder first linked page;
	Get last linked page;
	Handle resort;
	Copy sort definition;
	Do sort

42.5. Add a class for property comparator. It allows to:

	Instantiate property comparator  with sort definition;
	Instantiate property comparator;
	Get sort definition;
	Compare o 1;
	Get property value;
	Handle sort;

42.6. Add a class for protected base bean. It allows to:

	Set some property;
	Get some property

42.7. Add a class for resource editor registrar. It allows to:

	Instantiate resource editor registrar  with resource loader, property resolver and property resolver;
	Register custom editors;
	Do register editor

42.8. Add an interface declaration  for sort definition. It allows to:

	Get property;
	Check if sort definition is ignore case;
	Check if sort definition is ascending

43. Changes to package org.springframework.cache:  

43.1. Add a class for abstract cache tests. It allows to:

	Get cache;
	Get native cache;
	Handle test cache name;
	Handle test native cache;
	Handle test cache put;
	Handle test cache put if absent;
	Handle test cache remove;
	Handle test cache clear;
	Handle test cache get callable;
	Handle test cache get callable with null;
	Do test cache get callable;
	Handle test cache get callable not invoked with hit;
	Handle test cache get callable not invoked with hit null;
	Do test cache get callable  not invoked with hit;
	Handle test cache get callable fail;
	Handle test cache get synchronized;
	Create random key

43.2. Add an interface declaration  for cache manager. It allows to:

	Get cache;
	Get cache names

43.3. Add a class for cache test utils. It allows to:

	Create simple cache manager;
	Assert cache miss;
	Assert cache hit

43.4. Add a class for no op cache manager tests. It allows to:

	Handle test get cache;
	Handle test no op cache;
	Handle test cache name;
	Handle test cache callable;
	Handle test cache get callable fail;
	Create random key

44. Changes to package org.springframework.cache.annotation:  

44.1. Add a class for abstract caching configuration. It allows to:

	Set import metadata;
	Set configurers;
	Use caching configurer

44.2. Add an interface declaration  for cache annotation parser. It allows to:

	Check if cache annotation parser is candidate class;
	Parse cache annotations;

44.3. Add a class for caching configuration selector. It allows to:

	Handle select imports;
	Get proxy imports;
	Get aspect J imports

44.4. Add an interface declaration  for caching configurer. It allows to:

	Get cache manager;
	Get cache resolver;
	Handle key generator;
	Get error handler

44.5. Add a class for caching configurer support. It allows to:

	Get cache manager;
	Get cache resolver;
	Handle key generator;
	Get error handler

44.6. Add a class for proxy caching configuration. It allows to:

	Get cache advisor;
	Handle cache operation source;
	Get cache interceptor

45. Changes to package org.springframework.cache.aspectj:  

45.1. Add a class for any throw. It allows to:

	Instantiate any throw;
	Throw unchecked;
	Throw throwable

45.2. Add a class for aspect J cache annotation tests. It allows to:

	Get application context;
	Handle test key strategy;
	Handle test multi evict

45.3. Add a class for aspect J caching configuration. It allows to:

	Get cache aspect

45.4. Add a class for aspect JJ cache configuration. It allows to:

	Get cache aspect

45.5. Add an object creator class for j cache aspect J namespace config tests. It allows to:

	Get application context

46. Changes to package org.springframework.cache.caffeine:  

46.1. Add a class for caffeine cache manager. It allows to:

	Instantiate caffeine cache manager;
	Set cache names;
	Set caffeine;
	Set caffeine spec;
	Set cache specification;
	Set cache loader;
	Set allow null values;
	Check if caffeine cache manager is allow null values;
	Get cache names;
	Get cache;
	Create caffeine cache;
	Create native caffeine cache;
	Do set caffeine;
	Refresh known caches

46.2. Add a class for caffeine cache manager tests. It allows to:

	Handle test dynamic mode;
	Handle test static mode;
	Change caffeine recreate cache;
	Change caffeine spec recreate cache;
	Change cache specification recreate cache;
	Change cache loader recreate cache;
	Set cache name null restore dynamic mode;
	Handle cache loader use loading cache;
	Get load;
	Handle mock cache loader

46.3. Add a class for caffeine cache tests. It allows to:

	Set caffeine cache tests;
	Get cache;
	Get native cache;
	Handle test put if absent null value

47. Changes to package org.springframework.cache.concurrent:  

47.1. Add a class for concurrent map cache. It allows to:

	Instantiate concurrent map cache;
	Instantiate concurrent map cache  with store concurrent map;
	Instantiate concurrent map cache  with store concurrent map, serialization delegate and serialization delegate;
	Check if concurrent map cache is store by value;
	Get name;
	Get native cache;
	Get lookup;
	Get value loader callable;
	Put concurrent map cache;
	Put concurrent map cache if absent;
	Evict concurrent map cache;
	Handle clear;
	Convert concurrent map cache to store value;
	Serialize value;
	Process concurrent map cache concurrent map cache from store value;
	Handle deserialize value

47.2. Add a class for concurrent map cache factory bean. It allows to:

	Set name;
	Set store;
	Set allow null values;
	Set bean name;
	Handle after properties set;
	Get object;
	Get object type;
	Check if concurrent map cache factory bean is singleton

47.3. Add a class for concurrent map cache manager. It allows to:

	Instantiate concurrent map cache manager;
	Set cache names;
	Set allow null values;
	Check if concurrent map cache manager is allow null values;
	Set store  by value;
	Check if concurrent map cache manager is store by value;
	Set bean class loader;
	Get cache names;
	Get cache;
	Recreate caches;
	Create concurrent map cache

47.4. Add a class for concurrent map cache manager tests. It allows to:

	Handle test dynamic mode;
	Handle test static mode;
	Handle test change store by value

47.5. Add a class for concurrent map cache tests. It allows to:

	Set concurrent map cache tests;
	Get cache;
	Get native cache;
	Handle test is store by reference by default;
	Handle test serializer;
	Handle test non serializable content;
	Handle test invalid serialized content;
	Create cache  with store by value

48. Changes to package org.springframework.cache.config:  

48.1. Add a class for abstract cache annotation tests. It allows to:

	Get application context;
	Handle setup;
	Close abstract cache annotation tests;
	Handle test cacheable;
	Handle test cacheable null;
	Handle test cacheable sync;
	Handle test cacheable sync null;
	Handle test evict;
	Handle test evict early;
	Handle test evict exception;
	Handle test evict W key;
	Handle test evict W key early;
	Handle test evict all;
	Handle test conditional expression;
	Handle test conditional expression sync;
	Handle test unless expression;
	Handle test key expression;
	Handle test var args key;
	Handle test null value;
	Handle test method name;
	Handle test root vars;
	Handle test checked throwable;
	Handle test unchecked throwable;
	Handle test checked throwable sync;
	Handle test unchecked throwable sync;
	Handle test null arg;
	Handle test cache update;
	Handle test conditional cache update;
	Handle test multi cache;
	Handle test multi evict;
	Handle test multi put;
	Convert test put refers;
	Handle test multi cache and evict;
	Handle test multi conditional cache and evict;
	Handle test invalidate;
	Handle test early invalidate;
	Handle test evict with exception;
	Handle test invalidate with key;
	Handle test early invalidate with key;
	Handle test class cache unless expression;
	Handle test class cache cacheable;
	Handle test class cache invalidate;
	Handle test class early invalidate;
	Handle test class evict all;
	Handle test class evict with exception;
	Handle test class cache invalidate W key;
	Handle test class early invalidate with key;
	Handle test class null value;
	Handle test class method name;
	Handle test class root vars;
	Handle test custom key generator;
	Handle test unknown custom key generator;
	Handle test custom cache manager;
	Handle test unknown custom cache manager;
	Handle test class null arg;
	Handle test checked exception;
	Handle test class checked exception;
	Handle test checked exception sync;
	Handle test class checked exception sync;
	Handle test unchecked exception;
	Handle test class unchecked exception;
	Handle test unchecked exception sync;
	Handle test class unchecked exception sync;
	Handle test update;
	Handle test class update;
	Handle test conditional update;
	Handle test class conditional update;
	Handle test class multi cache;
	Handle test class multi evict;
	Handle test class multi put;
	Convert test class put refers;
	Handle test class multi cache and evict;
	Handle test class multi conditional cache and evict

48.2. Add a class for annotated class cacheable service. It allows to:

	Get cache;
	Get cache null;
	Cache sync;
	Cache sync  null;
	Handle conditional;
	Handle conditional sync;
	Process annotated class cacheable service annotated class cacheable service unless;
	Invalidate annotated class cacheable service;
	Evict annotated class cacheable service with exception;
	Evict annotated class cacheable service;
	Evict annotated class cacheable service early;
	Invalidate annotated class cacheable service early;
	Handle key;
	Var args key;
	Name annotated class cacheable service;
	Root vars;
	Get custom key generator;
	Handle unknown custom key generator;
	Get custom cache manager;
	Handle unknown custom cache manager;
	Update annotated class cacheable service;
	Handle conditional update;
	Handle null value;
	Handle null invocations;
	Checked annotated class cacheable service;
	Throw unchecked;
	Throw checked sync;
	Throw unchecked sync;
	Get multi cache;
	Get multi evict;
	Get multi cache and evict;
	Get multi conditional cache and evict;
	Get multi update;
	Put refers  to result

48.3. Add a class for annotated J cacheable service. It allows to:

	Instantiate annotated J cacheable service  with default cache;
	Get cache;
	Get cache null;
	Get cache with exception;
	Cache annotated J cacheable service with checked exception;
	Get cache always invoke;
	Get cache with partial key;
	Get cache with custom cache resolver;
	Get cache with custom key generator;
	Put annotated J cacheable service;
	Put annotated J cacheable service with exception;
	Handle early put;
	Early put  with exception;
	Remove annotated J cacheable service;
	Remove annotated J cacheable service with exception;
	Remove remove;
	Early remove  with exception;
	Remove all  with exception;
	Early remove all;
	Early remove all  with exception;
	No annotation;
	Get exception invocations;
	Throw exception;
	Throw checked exception

48.4. Add an object creator class for annotation driven cache config tests. It allows to:

	Get application context

48.5. Add a class for annotation namespace driven tests. It allows to:

	Get application context;
	Handle test key strategy;
	Handle cache resolver;
	Handle both set only resolver is used;
	Handle test cache error handler

48.6. Add a class for cache advice namespace tests. It allows to:

	Get application context;
	Handle test key strategy

48.7. Add a class for cache advice parser tests. It allows to:

	Handle key and key generator can not be set together

48.8. Add a class for cache management config utils

48.9. Add a class for cache namespace handler. It allows to:

	Extract cache manager;
	Parse key generator;
	Handle init

48.10. Add an interface declaration  for cacheable service. It allows to:

	Get cache;
	Get cache null;
	Cache sync;
	Cache sync  null;
	Invalidate cacheable service;
	Evict cacheable service early;
	Evict cacheable service;
	Evict cacheable service with exception;
	Invalidate cacheable service early;
	Handle conditional;
	Handle conditional sync;
	Process cacheable service cacheable service unless;
	Handle key;
	Var args key;
	Name cacheable service;
	Handle null value;
	Update cacheable service;
	Handle conditional update;
	Handle null invocations;
	Root vars;
	Get custom key generator;
	Handle unknown custom key generator;
	Get custom cache manager;
	Handle unknown custom cache manager;
	Checked cacheable service;
	Throw unchecked;
	Throw checked sync;
	Throw unchecked sync;
	Get multi cache;
	Get multi evict;
	Get multi cache and evict;
	Get multi conditional cache and evict;
	Get multi update;
	Put refers  to result

48.11. Add a class for default cacheable service. It allows to:

	Get cache;
	Get cache null;
	Cache sync;
	Cache sync  null;
	Invalidate default cacheable service;
	Evict default cacheable service with exception;
	Evict default cacheable service;
	Evict default cacheable service early;
	Invalidate default cacheable service early;
	Handle conditional;
	Handle conditional sync;
	Process default cacheable service default cacheable service unless;
	Handle key;
	Var args key;
	Name default cacheable service;
	Root vars;
	Get custom key generator;
	Handle unknown custom key generator;
	Get custom cache manager;
	Handle unknown custom cache manager;
	Update default cacheable service;
	Handle conditional update;
	Handle null value;
	Handle null invocations;
	Checked default cacheable service;
	Throw unchecked;
	Throw checked sync;
	Throw unchecked sync;
	Get multi cache;
	Get multi evict;
	Get multi cache and evict;
	Get multi conditional cache and evict;
	Get multi update;
	Put refers  to result

48.12. Add a class for some custom key generator. It allows to:

	Generate method;
	Generate key

48.13. Add a class for some key generator

48.14. Add a class for test entity. It allows to:

	Get id;
	Set id;
	Hash code;
	Check if test entity equals

49. Changes to package org.springframework.cache.ehcache:  

49.1. Add a class for eh cache cache. It allows to:

	Instantiate eh cache cache  with ehcache;
	Get name;
	Get native cache;
	Get eh cache cache;
	Get value loader callable;
	Get load value;
	Get type class;
	Put eh cache cache;
	Put eh cache cache if absent;
	Evict eh cache cache;
	Handle clear;
	Get lookup;
	Convert eh cache cache to value wrapper

49.2. Add a class for eh cache cache manager. It allows to:

	Instantiate eh cache cache manager;
	Instantiate eh cache cache manager  with net sf ehcache cache manager;
	Set cache manager;
	Get cache manager;
	Handle after properties set;
	Load caches;
	Get missing cache

49.3. Add a class for eh cache cache manager tests. It allows to:

	Handle setup;
	Handle shutdown;
	Get cache manager;
	Get cache type;
	Add native cache;
	Remove native cache

49.4. Add a class for eh cache cache tests. It allows to:

	Handle setup;
	Handle shutdown;
	Get cache;
	Get native cache;
	Handle test expired elements

49.5. Add a class for eh cache factory bean. It allows to:

	Instantiate eh cache factory bean;
	Set cache manager;
	Set cache name;
	Set time  to live;
	Set time  to idle;
	Set disk spool buffer size;
	Blocking eh cache factory bean;
	Set cache entry factory;
	Set bootstrap cache loader;
	Set cache event listeners;
	Set disabled;
	Set bean name;
	Handle after properties set;
	Create cache;
	Decorate cache;
	Get object;
	Get object type;
	Check if eh cache factory bean is singleton

49.6. Add a class for eh cache manager factory bean. It allows to:

	Set config location;
	Set cache manager name;
	Set eh cache manager factory bean;
	Shared eh cache manager factory bean;
	Handle after properties set;
	Get object;
	Get object type;
	Check if eh cache manager factory bean is singleton;
	Destroy eh cache manager factory bean

49.7. Add an object creator class for eh cache manager utils. It allows to:

	Build cache manager;
	Parse configuration

49.8. Add a class for eh cache support tests. It allows to:

	Handle test blank cache manager;
	Handle test cache manager conflict;
	Handle test accept existing cache manager;
	Handle test cache manager from config file;
	Handle test eh cache factory bean with default cache manager;
	Handle test eh cache factory bean with explicit cache manager;
	Do test eh cache factory bean;
	Handle test eh cache factory bean with blocking cache;
	Handle test eh cache factory bean with self populating cache;
	Handle test eh cache factory bean with updating self populating cache;
	Create entry;
	Update entry value

50. Changes to package org.springframework.cache.interceptor:  

50.1. Add a class for abstract cache invoker. It allows to:

	Instantiate abstract cache invoker;
	Instantiate abstract cache invoker  with cache error handler;
	Set error handler;
	Get error handler;
	Get cache;
	Put cache;
	Evict cache;
	Do clear

50.2. Add a class for abstract cache resolver. It allows to:

	Instantiate abstract cache resolver;
	Instantiate abstract cache resolver  with cache manager;
	Set cache manager;
	Get cache manager;
	Handle after properties set;
	Resolve caches;
	Get cache names

50.3. Add a class for abstract fallback cache operation source. It allows to:

	Get cache operations;
	Get cache key;
	Compute cache operations;
	Find cache operations;
	Allow public methods  only

50.4. Add an interface declaration  for basic operation. It allows to:

	Get cache names

50.5. Add a class for bean factory cache operation source advisor. It allows to:

	Get cache operation source;
	Set cache operation source;
	Set class filter;
	Get pointcut

50.6. Add an interface declaration  for cache error handler. It allows to:

	Handle cache get error;
	Handle cache put error;
	Handle cache evict error;
	Handle cache clear error

50.7. Add a class for cache evaluation context. It allows to:

	Instantiate cache evaluation context  with method, parameter name discoverer and parameter name discoverer;
	Add unavailable variable;
	Lookup variable

50.8. Add a class for cache expression root object. It allows to:

	Instantiate cache expression root object  with caches collection, method, target class and target class;
	Get caches;
	Get method;
	Get method name;
	Get args;
	Get target;
	Get target class

50.9. Add a class for cache interceptor. It allows to:

	Invoke method invocation

50.10. Add a class for cache operation expression evaluator. It allows to:

	Create evaluation context;
	Handle key;
	Handle condition;
	Process cache operation expression evaluator cache operation expression evaluator unless;
	Handle clear

50.11. Add an interface declaration  for cache operation invocation context. It allows to:

	Get operation;
	Get target;
	Get method;
	Get args

50.12. Add an interface declaration  for cache operation source. It allows to:

	Check if cache operation source is candidate class;
	Get cache operations

50.13. Add a class for cache proxy factory bean. It allows to:

	Set cache operation sources;
	Set key generator;
	Set cache resolver;
	Set cache manager;
	Set pointcut;
	Set bean factory;
	Handle after singletons instantiated;
	Create main interceptor

50.14. Add an interface declaration  for cache resolver. It allows to:

	Resolve caches

50.15. Add a class for composite cache operation source. It allows to:

	Instantiate composite cache operation source  with cache operation sources;
	Get cache operation sources;
	Check if composite cache operation source is candidate class;
	Get cache operations

50.16. Add an interface declaration  for key generator. It allows to:

	Generate method

50.17. Add a class for name match cache operation source. It allows to:

	Set name map;
	Add cache method;
	Get cache operations;
	Check if name match cache operation source is match;
	Check if name match cache operation source equals;
	Hash code;
	Convert name match cache operation source to string

50.18. Add a class for named cache resolver. It allows to:

	Instantiate named cache resolver;
	Instantiate named cache resolver  with cache manager;
	Set cache names;
	Get cache names

50.19. Add a class for simple cache error handler. It allows to:

	Handle cache get error;
	Handle cache put error;
	Handle cache evict error;
	Handle cache clear error

50.20. Add a class for simple cache resolver. It allows to:

	Instantiate simple cache resolver;
	Instantiate simple cache resolver  with cache manager;
	Get cache names;
	O cache manager

50.21. Add a class for simple key. It allows to:

	Instantiate simple key;
	Check if simple key equals;
	Hash code;
	Convert simple key to string

50.22. Add a class for simple key generator. It allows to:

	Generate method;
	Generate key

50.23. Add a class for simple key generator tests. It allows to:

	No values;
	Handle single value;
	Handle multiple values;
	Handle single null value;
	Handle multiple null values;
	Handle plain array;
	Handle array with extra parameter;
	Generate key

50.24. Add a class for variable not available exception. It allows to:

	Instantiate variable not available exception;
	Get name

51. Changes to package org.springframework.cache.jcache:  

51.1. Add a class for abstract J cache tests. It allows to:

	Create simple cache manager

51.2. Add a class for j cache cache manager. It allows to:

	Instantiate j cache cache manager;
	Instantiate j cache cache manager  with cache manager;
	Set cache manager;
	Get cache manager;
	Set allow null values;
	Check if j cache cache manager is allow null values;
	Handle after properties set;
	Load caches;
	Get missing cache

51.3. Add a class for j cache eh cache api tests. It allows to:

	Handle setup;
	Get caching provider;
	Handle shutdown;
	Get cache;
	Get native cache

51.4. Add a class for j cache manager factory bean. It allows to:

	Set cache manager uri;
	Set cache manager properties;
	Set bean class loader;
	Handle after properties set;
	Get object;
	Get object type;
	Check if j cache manager factory bean is singleton;
	Destroy j cache manager factory bean

52. Changes to package org.springframework.cache.jcache.config:  

52.1. Add a class for abstract J cache annotation tests. It allows to:

	Get application context;
	Set abstract J cache annotation tests;
	Handle cache;
	Handle cache null;
	Handle cache exception;
	Handle cache exception vetoed;
	Handle cache checked exception;
	Handle cache exception rewrite call stack;
	Handle cache always invoke;
	Handle cache with partial key;
	Handle cache with custom cache resolver;
	Handle cache with custom key generator;
	Put abstract J cache annotation tests;
	Put abstract J cache annotation tests with exception;
	Put abstract J cache annotation tests with exception veto put;
	Handle early put;
	Early put  with exception;
	Handle early put with exception veto put;
	Remove abstract J cache annotation tests;
	Remove abstract J cache annotation tests with exception;
	Remove abstract J cache annotation tests with exception veto remove;
	Remove remove;
	Early remove  with exception;
	Early remove  with exception veto remove;
	Remove all  with exception;
	Remove all  with exception veto remove;
	Early remove all;
	Early remove all  with exception;
	Early remove all  with exception veto remove;
	Check if abstract J cache annotation tests is empty;
	Create key;
	Get cache;
	Get method in call stack;
	Contain throwable

52.2. Add a class for abstract J cache configuration. It allows to:

	Use caching configurer;
	Handle cache operation source

52.3. Add an interface declaration  for j cache configurer. It allows to:

	Get exception cache resolver

52.4. Add a class for j cache configurer support. It allows to:

	Get exception cache resolver

52.5. Add a class for j cache namespace driven tests. It allows to:

	Get application context;
	Handle cache resolver;
	Handle test cache error handler

52.6. Add an object creator class for j cache standalone config tests. It allows to:

	Get application context

52.7. Add an interface declaration  for j cacheable service. It allows to:

	Get cache;
	Get cache null;
	Get cache with exception;
	Cache j cacheable service with checked exception;
	Get cache always invoke;
	Get cache with partial key;
	Get cache with custom cache resolver;
	Get cache with custom key generator;
	Put j cacheable service;
	Put j cacheable service with exception;
	Handle early put;
	Early put  with exception;
	Remove j cacheable service;
	Remove j cacheable service with exception;
	Remove remove;
	Early remove  with exception;
	Remove all  with exception;
	Early remove all;
	Early remove all  with exception;
	Get exception invocations

52.8. Add a class for proxy J cache configuration. It allows to:

	Get cache advisor;
	Get cache interceptor

53. Changes to package org.springframework.cache.jcache.interceptor:  

53.1. Add a class for abstract cache interceptor. It allows to:

	Instantiate abstract cache interceptor  with cache error handler;
	Invoke cache operation invocation context;
	Resolve cache;
	Extract  from caches collection

53.2. Add a class for abstract cache operation tests. It allows to:

	Create simple operation;
	Handle simple;
	Assert cache invocation parameter;
	Create annotation type class;
	Get cache name

53.3. Add a class for abstract fallback J cache operation source. It allows to:

	Get cache operation;
	Compute cache operation;
	Find cache operation;
	Allow public methods  only

53.4. Add a class for abstract J cache key operation. It allows to:

	Instantiate abstract J cache key operation  with cache method details, cache resolver, key generator and key generator;
	Get key generator;
	Get key parameters;
	Initialize key parameter details

53.5. Add a class for abstract key cache interceptor. It allows to:

	Instantiate abstract key cache interceptor  with cache error handler;
	Generate key;
	Create cache key invocation context

53.6. Add a class for annotated J cacheable service. It allows to:

	Instantiate annotated J cacheable service  with default cache;
	Get cache;
	Get cache null;
	Get cache with exception;
	Cache annotated J cacheable service with checked exception;
	Get cache always invoke;
	Get cache with partial key;
	Get cache with custom cache resolver;
	Get cache with custom key generator;
	Put annotated J cacheable service;
	Put annotated J cacheable service with exception;
	Handle early put;
	Early put  with exception;
	Remove annotated J cacheable service;
	Remove annotated J cacheable service with exception;
	Remove remove;
	Early remove  with exception;
	Remove all  with exception;
	Early remove all;
	Early remove all  with exception;
	No annotation;
	Get exception invocations;
	Throw exception;
	Throw checked exception

53.7. Add a class for annotation J cache operation source. It allows to:

	Find cache operation;
	Get cache defaults;
	Create cache result operation;
	Create cache put operation;
	Create cache remove operation;
	Create cache remove all operation;
	Create method details;
	Get cache resolver;
	Get exception cache resolver;
	Determine cache resolver factory;
	Determine key generator;
	Determine cache name;
	Generate default cache name;
	Count annotation J cache operation source non null;
	Get bean;
	Get default cache resolver;
	Get default exception cache resolver;
	Get default key generator

53.8. Add a class for bean factory J cache operation source advisor. It allows to:

	Get cache operation source;
	Set cache operation source;
	Set class filter;
	Get pointcut

53.9. Add a class for cache put interceptor. It allows to:

	Instantiate cache put interceptor  with cache error handler;
	Invoke cache operation invocation context;
	Handle cache value

53.10. Add a class for cache put operation. It allows to:

	Instantiate cache put operation  with cache method details, cache resolver, key generator and key generator;
	Get exception type filter;
	Check if cache put operation is early put;
	Get value parameter;
	Initialize value parameter detail

53.11. Add a class for cache put operation tests. It allows to:

	Create simple operation;
	Handle simple put;
	No cache value;
	Handle multi cache values;
	Invoke cache put operation tests with wrong parameters;
	Handle full put config;
	Create default operation

53.12. Add a class for cache remove all interceptor. It allows to:

	Instantiate cache remove all interceptor  with cache error handler;
	Invoke cache operation invocation context;
	Remove cache operation invocation context

53.13. Add a class for cache remove all operation. It allows to:

	Instantiate cache remove all operation  with cache method details, cache resolver and cache resolver;
	Get exception type filter;
	Check if cache remove all operation is early remove

53.14. Add a class for cache remove all operation tests. It allows to:

	Create simple operation;
	Handle simple remove all

53.15. Add a class for cache remove entry interceptor. It allows to:

	Instantiate cache remove entry interceptor  with cache error handler;
	Invoke cache operation invocation context;
	Remove value

53.16. Add a class for cache remove operation. It allows to:

	Instantiate cache remove operation  with cache method details, cache resolver, key generator and key generator;
	Get exception type filter;
	Check if cache remove operation is early remove

53.17. Add a class for cache remove operation tests. It allows to:

	Create simple operation;
	Handle simple remove

53.18. Add a class for cache resolver adapter. It allows to:

	Instantiate cache resolver adapter  with target javax cache annotation cache resolver;
	Get target;
	Resolve caches

53.19. Add a class for cache result interceptor. It allows to:

	Instantiate cache result interceptor  with cache error handler;
	Invoke cache operation invocation context;
	Check exception cache for cached exception;
	Handle cache exception;
	Resolve exception cache;
	Rewrite call stack;
	Clone exception;
	Find common ancestor index

53.20. Add a class for cache result operation. It allows to:

	Instantiate cache result operation  with cache method details, cache resolver, key generator, exception cache resolver and exception cache resolver;
	Get exception type filter;
	Check if cache result operation is always invoked;
	Get exception cache resolver;
	Get exception cache name

53.21. Add a class for cache result operation tests. It allows to:

	Create simple operation;
	Handle simple get;
	Handle multi parameter key;
	Invoke cache result operation tests with wrong parameters;
	Too many key values;
	Handle annotated get;
	Handle full get config;
	Create default operation

53.22. Add a class for default cache invocation context. It allows to:

	Instantiate default cache invocation context  with J cache operation;
	Get operation;
	Get method;
	Get args;
	Get annotations;
	Get cache annotation;
	Get cache name;
	Get target;
	Get all parameters;
	Get unwrap;
	Convert default cache invocation context to string

53.23. Add a class for default cache key invocation context. It allows to:

	Instantiate default cache key invocation context  with abstract J cache key operation;
	Get key parameters;
	Get value parameter

53.24. Add a class for default cache method details. It allows to:

	Instantiate default cache method details  with method, cache annotation and cache annotation;
	Get method;
	Get annotations;
	Get cache annotation;
	Get cache name;
	Convert default cache method details to string

53.25. Add a class for j cache interceptor. It allows to:

	Instantiate j cache interceptor;
	Instantiate j cache interceptor  with error handler supplier;
	Invoke method invocation

53.26. Add an interface declaration  for j cache operation. It allows to:

	Get cache resolver;
	Get all parameters

53.27. Add an interface declaration  for j cache operation source. It allows to:

	Get cache operation

53.28. Add a class for j cache operation source pointcut. It allows to:

	Handle matches;
	Get cache operation source;
	Check if j cache operation source pointcut equals;
	Hash code;
	Convert j cache operation source pointcut to string

53.29. Add a class for key generator adapter. It allows to:

	Instantiate key generator adapter  with J cache operation source, target key generator and target key generator;
	Instantiate key generator adapter  with J cache operation source, target cache key generator and target cache key generator;
	Get target;
	Generate method;
	Generate key generator;
	Create cache key invocation context

53.30. Add a class for sample object. It allows to:

	Handle simple get;
	Handle simple put;
	Handle simple remove;
	Handle simple remove all;
	Another simple get;
	Get multi keys get;
	No cache value;
	Handle multi cache values;
	Handle annotated get;
	Handle full get config;
	Handle full put config

53.31. Add a class for simple exception cache resolver. It allows to:

	Instantiate simple exception cache resolver  with cache manager;
	Get cache names

54. Changes to package org.springframework.cache.jcache.support:  

54.1. Add a class for testable cache resolver. It allows to:

	Resolve cache

54.2. Add an object creator class for testable cache resolver factory. It allows to:

	Get cache resolver;
	Get exception cache resolver

55. Changes to package org.springframework.cache.support:  

55.1. Add a class for abstract cache manager. It allows to:

	Handle after properties set;
	Initialize caches;
	Load caches;
	Get cache;
	Get cache names;
	Lookup cache;
	Add cache;
	Update cache names;
	Decorate cache;
	Get missing cache

55.2. Add a class for abstract value adapting cache. It allows to:

	Instantiate abstract value adapting cache;
	Check if abstract value adapting cache is allow null values;
	Get abstract value adapting cache;
	Get type class;
	Get lookup;
	Process abstract value adapting cache abstract value adapting cache from store value;
	Convert abstract value adapting cache to store value;
	Convert abstract value adapting cache to value wrapper

55.3. Add a class for composite cache manager. It allows to:

	Instantiate composite cache manager;
	Instantiate composite cache manager  with cache managers;
	Set cache managers;
	Set fallback  to no op cache;
	Handle after properties set;
	Get cache;
	Get cache names

55.4. Add a class for no op cache manager. It allows to:

	Get cache;
	Get cache names

55.5. Add a class for null value. It allows to:

	Instantiate null value;
	Read resolve;
	Check if null value equals;
	Hash code;
	Convert null value to string

55.6. Add a class for simple cache manager. It allows to:

	Set caches;
	Load caches

55.7. Add a class for simple value wrapper. It allows to:

	Instantiate simple value wrapper;
	Get simple value wrapper

56. Changes to package org.springframework.cache.transaction:  

56.1. Add a class for abstract transaction supporting cache manager. It allows to:

	Set transaction aware;
	Check if abstract transaction supporting cache manager is transaction aware;
	Decorate cache

56.2. Add a class for abstract transaction supporting cache manager tests. It allows to:

	Get cache manager;
	Get cache type;
	Add native cache;
	Remove native cache;
	Get abstract transaction supporting cache manager tests on existing cache;
	Get abstract transaction supporting cache manager tests on new cache;
	Get abstract transaction supporting cache manager tests on unknown cache;
	Get transactional  on existing cache;
	Get transactional  on new cache

56.3. Add a class for transaction aware cache decorator. It allows to:

	Instantiate transaction aware cache decorator  with target cache;
	Get target cache;
	Get name;
	Get native cache;
	Get transaction aware cache decorator;
	Get type class;
	Get value loader callable;
	Put transaction aware cache decorator;
	Commit commit;
	Put transaction aware cache decorator if absent;
	Evict transaction aware cache decorator;
	Handle clear;

56.4. Add a class for transaction aware cache decorator tests. It allows to:

	Create transaction aware cache decorator tests with null target;
	Get target cache;
	Handle regular operations on target;
	Put non transactional;
	Put transactional;
	Put transaction aware cache decorator tests if absent;
	Evict non transactional;
	Evict transactional;
	Handle clear non transactional;
	Handle clear transactional

56.5. Add a class for transaction aware cache manager proxy. It allows to:

	Instantiate transaction aware cache manager proxy;
	Instantiate transaction aware cache manager proxy  with target cache manager;
	Set target cache manager;
	Handle after properties set;
	Get cache;
	Get cache names

57. Changes to package org.springframework.cglib:  

57.1. Add a class for spring cglib info

58. Changes to package org.springframework.cglib.core:  

58.1. Add a class for spring naming policy. It allows to:

	Get tag

59. Changes to package org.springframework.context:  

59.1. Add a class for aCA tester. It allows to:

	Set application context;
	Get application context

59.2. Add an interface declaration  for application context. It allows to:

	Get id;
	Get application name;
	Get display name;
	Get startup date;
	Get parent;
	Get autowire capable bean factory

59.3. Add an interface declaration  for application context aware. It allows to:

	Set application context

59.4. Add a class for application context exception. It allows to:

	Instantiate application context exception;
	Instantiate application context exception  with cause throwable

59.5. Add an interface declaration  for application context initializer. It allows to:

	Initialize application context

59.6. Add a class for application event. It allows to:

	Instantiate application event;
	Get timestamp

59.7. Add an interface declaration  for application event publisher. It allows to:

	Publish event;

59.8. Add an interface declaration  for application event publisher aware. It allows to:

	Set application event publisher

59.9. Add an interface declaration  for application listener. It allows to:

	Process application listener application listener on application event

59.10. Add a class for bean that broadcasts. It allows to:

	Set application context

59.11. Add a class for bean that listens. It allows to:

	Instantiate bean that listens;
	Instantiate bean that listens  with bean that broadcasts;
	Process bean that listens bean that listens on application event;
	Get event count;
	Zero bean that listens

59.12. Add an interface declaration  for configurable application context. It allows to:

	Set id;
	Set parent;
	Set environment;
	Get environment;
	Add bean factory post processor;
	Add application listener;
	Add protocol resolver;
	Refresh configurable application context;
	Register shutdown hook;
	Close configurable application context;
	Check if configurable application context is active;
	Get bean factory

59.13. Add an interface declaration  for embedded value resolver aware. It allows to:

	Set embedded value resolver

59.14. Add an interface declaration  for environment aware. It allows to:

	Set environment

59.15. Add an interface declaration  for hierarchical message source. It allows to:

	Set parent message source;
	Get parent message source

59.16. Add an interface declaration  for lifecycle. It allows to:

	Start lifecycle;
	Stop lifecycle;
	Check if lifecycle is running

59.17. Add a class for lifecycle context bean. It allows to:

	Set bean factory;
	Handle after properties set;
	Set application context

59.18. Add an interface declaration  for lifecycle processor. It allows to:

	Process lifecycle processor lifecycle processor on refresh;
	Process lifecycle processor lifecycle processor on close

59.19. Add an interface declaration  for message source. It allows to:

	Get message;

59.20. Add an interface declaration  for message source aware. It allows to:

	Set message source

59.21. Add an interface declaration  for message source resolvable. It allows to:

	Get codes;
	Get arguments;
	Get default message

59.22. Add a class for no such message exception. It allows to:

	Instantiate no such message exception  with locale;
	Instantiate no such message exception

59.23. Add a class for payload application event. It allows to:

	Instantiate payload application event  with payload;
	Get resolvable type;
	Get payload

59.24. Add an interface declaration  for phased. It allows to:

	Get phase

59.25. Add an interface declaration  for resource loader aware. It allows to:

	Set resource loader

59.26. Add an interface declaration  for smart lifecycle. It allows to:

	Check if smart lifecycle is auto startup;
	Stop callback runnable;
	Get phase

59.27. Add a class for test listener. It allows to:

	Get event count;
	Zero counter;
	Process test listener test listener on application event

60. Changes to package org.springframework.context.annotation:  

60.1. Add a class for advice mode import selector. It allows to:

	Get advice mode attribute name;
	Handle select imports;

60.2. Add a class for annotated bean definition reader. It allows to:

	Instantiate annotated bean definition reader  with bean definition registry;
	Instantiate annotated bean definition reader  with bean definition registry, environment and environment;
	Get registry;
	Set environment;
	Set bean name generator;
	Set scope metadata resolver;
	Register annotated classes;
	Register bean;
	Do register bean;
	Get or create environment

60.3. Add a class for annotation bean name generator. It allows to:

	Generate bean name;
	Determine bean name  from annotation;
	Check if annotation bean name generator is stereotype with name value;
	Build default bean name;

60.4. Add a class for annotation config application context. It allows to:

	Instantiate annotation config application context;
	Instantiate annotation config application context  with default listable bean factory;
	Instantiate annotation config application context  with annotated classes;
	Set environment;
	Set bean name generator;
	Set scope metadata resolver;
	Register annotated classes;
	Scan annotation config application context;
	Register bean

60.5. Add a class for annotation config bean definition parser. It allows to:

	Parse element

60.6. Add an interface declaration  for annotation config registry. It allows to:

	Register annotated classes;
	Scan annotation config registry

60.7. Add a class for annotation config utils. It allows to:

	Register annotation config processors;
	Register post processor;
	Handle unwrap default listable bean factory;
	Handle process common definition annotations;
	Apply scoped proxy mode;
	Get attributes for;
	Get attributes for repeatable;
	Add attributes  if not null

60.8. Add a class for annotation scope metadata resolver. It allows to:

	Instantiate annotation scope metadata resolver;
	Instantiate annotation scope metadata resolver  with default proxy mode;
	Set scope annotation type;
	Resolve scope metadata

60.9. Add a class for asm circular import detection tests. It allows to:

	Handle new parser;
	Get load as configuration source

60.10. Add a class for aspect J auto proxy registrar. It allows to:

	Register bean definitions

60.11. Add a class for auto proxy registrar. It allows to:

	Register bean definitions

60.12. Add a class for bean annotation helper. It allows to:

	Check if bean annotation helper is bean annotated;
	Determine bean name  for bean method;
	Check if bean annotation helper is scoped proxy

60.13. Add a class for class path bean definition scanner. It allows to:

	Instantiate class path bean definition scanner  with bean definition registry;
	Instantiate class path bean definition scanner  with bean definition registry, environment and environment;
	Instantiate class path bean definition scanner  with bean definition registry, environment, resource loader and resource loader;
	Get registry;
	Set bean definition defaults;
	Get bean definition defaults;
	Set autowire candidate patterns;
	Set bean name generator;
	Set scope metadata resolver;
	Set scoped proxy mode;
	Set include annotation config;
	Scan class path bean definition scanner;
	Post process bean definition;
	Register bean definition;
	Check candidate;
	Check if class path bean definition scanner is compatible;
	Get or create environment

60.14. Add a class for class path scanning candidate component provider. It allows to:

	Instantiate class path scanning candidate component provider;
	Instantiate class path scanning candidate component provider  with environment;
	Set resource pattern;
	Add include filter;
	Add exclude filter;
	Reset filters;
	Register default filters;
	Set environment;
	Get environment;
	Get registry;
	Set resource loader;
	Get resource loader;
	Get resource pattern resolver;
	Set metadata reader factory;
	Get metadata reader factory;
	Find candidate components;
	Handle index supports include filters;
	Handle index supports include filter;
	Extract stereotype;
	Add candidate components  from index;
	Scan candidate components;
	Resolve base package;
	Check if class path scanning candidate component provider is candidate component;
	Check if class path scanning candidate component provider is condition match;
	Handle clear cache

60.15. Add an object creator class for component scan annotated config. It allows to:

	Get test bean

Add a local an object creator class for component scan annotated config with value attribute. It allows to:

	Get test bean

Add a local a class for component scan with no packages config

Add a local a class for component scan with bean name generator

Add a local a class for my bean name generator. It allows to:

	Generate bean name

Add a local a class for component scan with scope resolver

Add a local a class for multi component scan

Add a local a class for my scope metadata resolver. It allows to:

	Instantiate my scope metadata resolver

Add a local a class for component scan with custom type filter. It allows to:

	Get custom autowire configurer;
	Get test bean

Add a local a class for component scan with aware type filter

Add a local a class for component scan with scoped proxy

Add a local a class for component scan with scoped proxy through regex

Add a local a class for component scan with scoped proxy through aspect J pattern

Add a local a class for component scan with multiple annotation include filters 1

Add a local a class for component scan with multiple annotation include filters 2

Add a local a class for component scan with base packages and value alias

60.16. Add a class for component scan annotation parser. It allows to:

	Instantiate component scan annotation parser  with environment, resource loader, bean name generator, bean definition registry and bean definition registry;
	Parse component scan annotation attributes;
	Match class name;
	Get type filters for

60.17. Add a class for component scan annotation recursion tests. It allows to:

	Handle recursion;
	Handle even circular scans are supported

60.18. Add a class for component scan annotation tests. It allows to:

	Handle noop

Add a local a class for my config

Add a local a class for simple config

60.19. Add a class for component scan bean definition parser. It allows to:

	Parse element;
	Configure scanner;
	Create scanner;
	Register components;
	Parse bean name generator;
	Parse scope;
	Parse type filters;
	Create type filter;
	Handle instantiate user defined strategy

60.20. Add a class for component scan parser scoped proxy tests. It allows to:

	Handle test default scoped proxy;
	Handle test no scoped proxy;
	Handle test interfaces scoped proxy;
	Handle test target class scoped proxy;
	Handle test invalid config scoped proxy

60.21. Add a class for component scan parser with user defined strategies tests. It allows to:

	Handle test custom bean name generator;
	Handle test custom scope metadata resolver;
	Handle test invalid constructor bean name generator;
	Handle test invalid class name scope metadata resolver

60.22. Add an interface declaration  for condition. It allows to:

	Handle matches

60.23. Add an interface declaration  for condition context. It allows to:

	Get registry;
	Get bean factory;
	Get environment;
	Get resource loader;
	Get class loader

60.24. Add a class for configuration class utils. It allows to:

	Check configuration class candidate;
	Check if configuration class utils is configuration candidate;
	Get order;

60.25. Add an interface declaration  for configuration condition. It allows to:

	Get configuration phase

60.26. Add a class for configuration method. It allows to:

	Instantiate configuration method  with method metadata, configuration class and configuration class;
	Get metadata;
	Get configuration class;
	Get resource location;
	Get configuration method fully qualified method name;
	Get short method name;
	Validate problem reporter;
	Convert configuration method to string

60.27. Add a class for conflicting bean definition exception. It allows to:

	Instantiate conflicting bean definition exception

60.28. Add a class for context annotation autowire candidate resolver. It allows to:

	Get lazy resolution proxy  if necessary;
	Check if context annotation autowire candidate resolver is lazy;
	Build lazy resolution proxy;
	Get target class;
	Check if  is static;
	Get target;
	Release target

60.29. Add a class for double scan tests. It allows to:

	Get config locations

60.30. Add a class for foo service dependent converter. It allows to:

	Set foo service;
	Convert foo service dependent converter

60.31. Add an interface declaration  for import aware. It allows to:

	Set import metadata

60.32. Add an interface declaration  for import bean definition registrar. It allows to:

	Register bean definitions;

60.33. Add an interface declaration  for import registry. It allows to:

	Get importing class  for;
	Remove importing class

60.34. Add an interface declaration  for import selector. It allows to:

	Handle select imports

60.35. Add a class for invalid configuration class definition tests. It allows to:

	Handle configuration classes may not be final

60.36. Add a class for jsr 330 scope metadata resolver. It allows to:

	Instantiate jsr 330 scope metadata resolver;
	Register scope;
	Resolve scope name;
	Resolve scope metadata

60.37. Add a class for load time weaving configuration. It allows to:

	Set import metadata;
	Set load time weaving configurer;
	Set bean class loader;
	Load time weaver

60.38. Add an interface declaration  for load time weaving configurer. It allows to:

	Get load time weaver

60.39. Add a class for m bean export configuration. It allows to:

	Set import metadata;
	Set environment;
	Set bean factory;
	Handle mbean exporter;
	Handle setup domain;
	Handle setup server;
	Handle setup registration policy;
	Get M bean server;
	Handle specific platform;
	Get m bean export configuration

60.40. Add a class for profile condition. It allows to:

	Handle matches

60.41. Add a class for scanned generic bean definition. It allows to:

	Instantiate scanned generic bean definition  with metadata reader;
	Get metadata;
	Get factory method metadata

60.42. Add a class for scope metadata. It allows to:

	Set scope name;
	Get scope name;
	Set scoped proxy mode;
	Get scoped proxy mode

60.43. Add an interface declaration  for scope metadata resolver. It allows to:

	Resolve scope metadata

60.44. Add a class for scoped proxy creator. It allows to:

	Instantiate scoped proxy creator;
	Create scoped proxy;
	Get target bean name

60.45. Add a class for simple config tests. It allows to:

	Handle test foo service;
	Get config locations

60.46. Add a class for simple scan tests. It allows to:

	Get config locations;
	Handle test foo service

60.47. Add a class for test bean. It allows to:

	Hash code;
	Check if test bean equals

60.48. Add a class for test bean name generator. It allows to:

	Generate bean name

60.49. Add a class for test scope metadata resolver. It allows to:

	Resolve scope metadata

61. Changes to package org.springframework.context.annotation.aspectj:  

61.1. Add a class for spring configured configuration. It allows to:

	Get bean configurer aspect

62. Changes to package org.springframework.context.annotation.componentscan.cycle.left:  

62.1. Add a class for left config

63. Changes to package org.springframework.context.annotation.componentscan.cycle.right:  

63.1. Add a class for right config

64. Changes to package org.springframework.context.annotation.componentscan.importing:  

64.1. Add a class for importing config

65. Changes to package org.springframework.context.annotation.componentscan.level1:  

65.1. Add an object creator class for level 1 config. It allows to:

	Get level 1 bean

66. Changes to package org.springframework.context.annotation.componentscan.level2:  

66.1. Add an object creator class for level 2 config. It allows to:

	Convert level

67. Changes to package org.springframework.context.annotation.componentscan.level3:  

67.1. Add a class for level 3 component

68. Changes to package org.springframework.context.annotation.componentscan.simple:  

68.1. Add a class for simple component. It allows to:

	Get example bean

69. Changes to package org.springframework.context.annotation.configuration:  

69.1. Add a class for bean annotation attribute propagation tests. It allows to:

	Handle autowire metadata is propagated;
	Handle autowire candidate metadata is propagated;
	Handle init method metadata is propagated;
	Destroy method metadata is propagated;
	Check if bean annotation attribute propagation tests depends on metadata is propagated;
	Handle primary metadata is propagated;
	Handle primary metadata is false by default;
	Handle lazy metadata is propagated;
	Handle lazy metadata is false by default;
	Convert default lazy configuration propagates;
	Handle eager bean overrides default lazy configuration;
	Handle eager configuration produces eager bean definitions;
	Get bean def

69.2. Add a class for spr 7167 tests. It allows to:

	Handle test

Add a local an object creator class for my config. It allows to:

	Some dependency;
	The post processor

Add a local a class for dependency

Add a local a class for my post processor. It allows to:

	Instantiate my post processor  with some dependency;
	Post process bean factory

70. Changes to package org.springframework.context.annotation.configuration.a:  

70.1. Add a class for base config. It allows to:

	Package private bar;
	Get repro bar;
	Handle protected bar;
	Handle workaround bar

71. Changes to package org.springframework.context.annotation.configuration.spr8955:  

71.1. Add a class for spr 8955 tests. It allows to:

	Handle repro

72. Changes to package org.springframework.context.annotation.configuration.spr9031.scanpackage:  

72.1. Add a class for spr 9031 component

73. Changes to package org.springframework.context.annotation.jsr330:  

73.1. Add a class for spring at inject tck. It allows to:

	Get suite

74. Changes to package org.springframework.context.annotation.role:  

74.1. Add a class for component with role

74.2. Add a class for component without role

75. Changes to package org.springframework.context.annotation.spr10546:  

75.1. Add a class for imported config. It allows to:

	My bean

75.2. Add a class for parent config. It allows to:

	My bean

75.3. Add a class for parent with component scan config

75.4. Add a class for parent with import config

75.5. Add a class for parent with import resource config

75.6. Add a class for parent with parent config

76. Changes to package org.springframework.context.annotation.spr12111:  

76.1. Add a class for test profile bean

77. Changes to package org.springframework.context.annotation.spr8761:  

77.1. Add a class for spr 8761 tests. It allows to:

	Handle repro

Add a local a class for with nested annotation

78. Changes to package org.springframework.context.annotation.spr8808:  

78.1. Add a class for spr 8808 tests. It allows to:

	Handle repro

Add a local a class for config

79. Changes to package org.springframework.context.annotation2:  

79.1. Add a class for named stub dao 2. It allows to:

	Find named stub dao 2

80. Changes to package org.springframework.context.annotation3:  

80.1. Add a class for stub foo dao. It allows to:

	Find foo

81. Changes to package org.springframework.context.annotation4:  

81.1. Add a class for dependency bean

81.2. Add an object creator class for factory method component. It allows to:

	Handle null instance;
	Handle public instance;
	Get protected instance;
	Handle private instance;
	Get request scoped instance;
	Handle second instance

81.3. Add an object creator class for simple bean. It allows to:

	Get public instance

82. Changes to package org.springframework.context.annotation5:  

82.1. Add a class for other foo dao. It allows to:

	Find foo

83. Changes to package org.springframework.context.annotation6:  

83.1. Add a class for component for scanning

83.2. Add an object creator class for config for scanning. It allows to:

	Get test bean

83.3. Add a class for jsr 330 named for scanning

84. Changes to package org.springframework.context.config:  

84.1. Add a class for abstract property loading bean definition parser. It allows to:

	Should generate id;
	Parse element

84.2. Add a class for context namespace handler. It allows to:

	Handle init

84.3. Add a class for context namespace handler tests. It allows to:

	Tear context namespace handler tests;
	Handle property placeholder;
	Handle property placeholder system properties;
	Handle property placeholder environment properties;
	Handle property placeholder location;
	Handle property placeholder location with system property for one location;
	Handle property placeholder location with system property for multiple locations;
	Handle property placeholder location with system property missing;
	Handle property placeholder ignored;
	Handle property override

84.4. Add a class for load time weaver bean definition parser. It allows to:

	Get bean class name;
	Resolve id;
	Parse element;
	Check if load time weaver bean definition parser is aspect J weaving enabled;
	Check if load time weaver bean definition parser is bean configurer aspect enabled

84.5. Add a class for m bean export bean definition parser. It allows to:

	Resolve id;
	Parse internal

84.6. Add a class for m bean server bean definition parser. It allows to:

	Resolve id;
	Parse internal;
	Find server  for special environment

84.7. Add a class for property override bean definition parser. It allows to:

	Get bean class;
	Parse element

84.8. Add a class for property placeholder bean definition parser. It allows to:

	Get bean class;
	Parse element

84.9. Add a class for spring configured bean definition parser. It allows to:

	Parse element

85. Changes to package org.springframework.context.conversionservice:  

85.1. Add a class for bar. It allows to:

	Instantiate bar;
	Get value

85.2. Add a class for conversion service context config tests. It allows to:

	Handle test config ok

85.3. Add an object creator class for string to bar converter. It allows to:

	Convert string to bar converter

85.4. Add a class for test client. It allows to:

	Get bars;
	Set bars;
	Check if test client is bool;
	Set bool;
	Get string list;
	Set string list;
	Get resource array;
	Set resource array;
	Get resource list;
	Set resource list;
	Get resource map;
	Set resource map

86. Changes to package org.springframework.context.event:  

86.1. Add a class for application context event. It allows to:

	Instantiate application context event  with source application context;
	Get application context

86.2. Add an interface declaration  for application event multicaster. It allows to:

	Add application listener;
	Add application listener bean;
	Remove application listener;
	Remove application listener bean;
	Remove all listeners;
	Handle multicast event;

86.3. Add a class for application listener method adapter. It allows to:

	Instantiate application listener method adapter  with target class, method and method;
	Resolve declared event types;
	Resolve order;
	Handle init;
	Process application listener method adapter application listener method adapter on application event;
	Check if application listener method adapter supports event type;
	Check if application listener method adapter supports source type;
	Get order;
	Handle process event;
	Resolve arguments;
	Handle result;
	Publish event;
	Handle application event;
	Invoke application listener method adapter;
	Get target bean;
	Get condition;
	Get detailed error message;
	Assert target bean;
	Get invocation error message;
	Get resolvable type;
	Convert application listener method adapter to string

86.4. Add a class for context closed event. It allows to:

	Instantiate context closed event  with source application context

86.5. Add a class for context refreshed event. It allows to:

	Instantiate context refreshed event  with source application context

86.6. Add a class for context started event. It allows to:

	Instantiate context started event  with source application context

86.7. Add a class for context stopped event. It allows to:

	Instantiate context stopped event  with source application context

86.8. Add a class for default event listener factory. It allows to:

	Get set order;
	Get order;
	Check if default event listener factory supports method;
	Create application listener

86.9. Add a class for event expression evaluator. It allows to:

	Handle condition

86.10. Add a class for event expression root object. It allows to:

	Instantiate event expression root object  with application event;
	Get event;
	Get args

86.11. Add an interface declaration  for event listener factory. It allows to:

	Check if event listener factory supports method;
	Create application listener

86.12. Add a class for event listener method processor. It allows to:

	Set application context;
	Post process bean factory;
	Handle after singletons instantiated;
	Handle process bean;
	Check if event listener method processor is spring container class

86.13. Add a class for event publication interceptor. It allows to:

	Set application event class;
	Set application event publisher;
	Handle after properties set;
	Invoke method invocation

86.14. Add an interface declaration  for generic application listener. It allows to:

	Check if generic application listener supports event type;
	Check if generic application listener supports source type;
	Get order

86.15. Add a class for generic application listener adapter. It allows to:

	Instantiate generic application listener adapter  with delegate application listener;
	Process generic application listener adapter generic application listener adapter on application event;
	Check if generic application listener adapter supports event type;
	Check if generic application listener adapter supports source type;
	Get order;
	Resolve declared event type;

86.16. Add a class for generic application listener adapter tests. It allows to:

	Check if generic application listener adapter tests supports event type with smart application listener;
	Check if generic application listener adapter tests supports source type with smart application listener;
	Handle generic listener strict type;
	Handle generic listener strict type type erasure;
	Handle generic listener strict type and resolvable type;
	Handle generic listener strict type and resolvable type provider;
	Handle generic listener strict type event sub type;
	Handle generic listener strict type not matching;
	Handle generic listener strict type event sub type not matching;
	Handle generic listener strict type not match type erasure;
	Handle generic listener strict type sub class;
	Handle generic listener upper bound type;
	Handle generic listener upper bound type not matching;
	Handle generic listener wildcard type;
	Handle generic listener wildcard type type erasure;
	Handle generic listener raw type;
	Handle generic listener raw type type erasure;
	Check if generic application listener adapter tests supports event type

86.17. Add a class for simple application event multicaster. It allows to:

	Instantiate simple application event multicaster;
	Instantiate simple application event multicaster  with bean factory;
	Set task executor;
	Get task executor;
	Set error handler;
	Get error handler;
	Handle multicast event;
	Resolve default event type;
	Invoke listener;
	Do invoke listener;
	Check if simple application event multicaster matches class cast message

86.18. Add an interface declaration  for smart application listener. It allows to:

	Check if smart application listener supports event type;
	Check if smart application listener supports source type;
	Get order

86.19. Add a class for source filtering listener. It allows to:

	Instantiate source filtering listener  with delegate application listener;
	Instantiate source filtering listener;
	Process source filtering listener source filtering listener on application event;
	Check if source filtering listener supports event type;
	Check if source filtering listener supports source type;
	Get order;
	Process source filtering listener source filtering listener on application event internal

87. Changes to package org.springframework.context.event.test:  

87.1. Add a class for abstract identifiable. It allows to:

	Instantiate abstract identifiable;
	Get id;
	Check if abstract identifiable equals;
	Hash code

87.2. Add a class for another test event. It allows to:

	Instantiate another test event

87.3. Add a class for event collector. It allows to:

	Add event;
	Get events;
	Assert no event received;
	Assert event;
	Assert total events count;
	Handle clear

87.4. Add a class for generic event pojo. It allows to:

	Instantiate generic event pojo  with value;
	Get resolvable type;
	Check if generic event pojo equals;
	Hash code

87.5. Add an interface declaration  for identifiable. It allows to:

	Get id

87.6. Add a class for identifiable application event. It allows to:

	Instantiate identifiable application event;
	Get id;
	Check if identifiable application event equals;
	Hash code

87.7. Add a class for test event. It allows to:

	Instantiate test event;

88. Changes to package org.springframework.context.expression:  

88.1. Add a class for annotated element key. It allows to:

	Instantiate annotated element key  with annotated element, target class and target class;
	Check if annotated element key equals;
	Hash code;
	Convert annotated element key to string;
	Compare  to other annotated element key

88.2. Add a class for annotated element key tests. It allows to:

	Handle same instance equals;
	Check if annotated element key tests equals;
	Check if annotated element key tests equals no target;
	No target class  not equals;
	Assert key equals

88.3. Add a class for bean expression context accessor. It allows to:

	Read evaluation context;
	Write evaluation context;
	Get specific target classes

88.4. Add a class for bean factory accessor. It allows to:

	Get specific target classes;
	Read evaluation context;
	Write evaluation context;

88.5. Add a class for bean factory resolver. It allows to:

	Instantiate bean factory resolver  with bean factory;
	Resolve evaluation context

88.6. Add a class for environment accessor. It allows to:

	Get specific target classes;
	Read evaluation context;
	Write evaluation context;

88.7. Add a class for environment accessor integration tests. It allows to:

	Brace access

88.8. Add a class for method based evaluation context. It allows to:

	Instantiate method based evaluation context  with method, parameter name discoverer and parameter name discoverer;
	Lookup variable;
	Handle lazy load arguments

88.9. Add a class for standard bean expression resolver. It allows to:

	Check if  is template;
	Get expression prefix;
	Get expression suffix;
	Instantiate standard bean expression resolver;
	Instantiate standard bean expression resolver  with bean class loader;
	Set expression prefix;
	Set expression suffix;
	Set expression parser;
	Evaluate eval context;
	Customize evaluation context

89. Changes to package org.springframework.context.groovy:  

89.1. Add a class for groovy application context tests. It allows to:

	Handle test loading config file;
	Handle test loading multiple config files;
	Handle test loading multiple config files with relative class;
	Handle test config file parsing error

90. Changes to package org.springframework.context.i18n:  

90.1. Add an interface declaration  for locale context. It allows to:

	Get locale

90.2. Add a class for locale context holder. It allows to:

	Instantiate locale context holder;
	Reset locale context;
	Set locale context;
	Get locale context;
	Set locale;
	Set default locale;
	Get locale;
	Set time zone;
	Set default time zone;
	Get time zone;

90.3. Add a class for locale context holder tests. It allows to:

	Handle test set locale context;
	Handle test set time zone aware locale context;
	Handle test set locale;
	Handle test set time zone;
	Handle test set locale and set time zone mixed

90.4. Add a class for simple locale context. It allows to:

	Instantiate simple locale context  with locale;
	Get locale;
	Convert simple locale context to string

90.5. Add a class for simple time zone aware locale context. It allows to:

	Instantiate simple time zone aware locale context  with locale, time zone and time zone;
	Get time zone;
	Convert simple time zone aware locale context to string

90.6. Add an interface declaration  for time zone aware locale context. It allows to:

	Get time zone

91. Changes to package org.springframework.context.support:  

91.1. Add a class for abstract application context. It allows to:

	Instantiate abstract application context;
	Instantiate abstract application context  with parent application context;
	Set id;
	Get id;
	Get application name;
	Set display name;
	Get display name;
	Get parent;
	Set environment;
	Get environment;
	Create environment;
	Get autowire capable bean factory;
	Get startup date;
	Publish event;
	Get application event multicaster;
	Get lifecycle processor;
	Get resource pattern resolver;
	Set parent;
	Add bean factory post processor;
	Get bean factory post processors;
	Add application listener;
	Get application listeners;
	Refresh abstract application context;
	Handle init property sources;
	Obtain fresh bean factory;
	Prepare bean factory;
	Post process bean factory;
	Invoke bean factory post processors;
	Register bean post processors;
	Handle init message source;
	Handle init application event multicaster;
	Handle init lifecycle processor;
	Process abstract application context abstract application context on refresh;
	Register listeners;
	Finish bean factory initialization;
	Refresh beans exception;
	Reset common caches;
	Register shutdown hook;
	Run;
	Destroy abstract application context;
	Close abstract application context;
	Do abstract application context close;
	Destroy beans;
	Process abstract application context abstract application context on close;
	Check if abstract application context is active;
	Assert bean factory active;
	Get bean;
	Get bean provider;
	Check if abstract application context contains bean;
	Check if abstract application context is singleton;
	Check if abstract application context is prototype;
	Check if abstract application context is type match;
	Get type;
	Get aliases;
	Check if abstract application context contains bean definition;
	Get bean definition count;
	Get bean definition names;
	Get bean names  for type;
	Get beans  of type;
	Get bean names  for annotation;
	Get beans  with annotation;
	Find annotation  on bean;
	Get parent bean factory;
	Check if abstract application context contains local bean;
	Get internal parent bean factory;
	Get message;
	Get message source;
	Get internal parent message source;
	Get resources;
	Start abstract application context;
	Stop abstract application context;
	Check if abstract application context is running;
	Refresh bean factory;
	Close bean factory;
	Get bean factory;
	Convert abstract application context to string

91.2. Add a class for abstract message source. It allows to:

	Set parent message source;
	Get parent message source;
	Set common messages;
	Get common messages;
	Get set use code as default message;
	Check if abstract message source is use code as default message;
	Get message;
	Get message internal;
	Get message  from parent;
	Get default message;
	Resolve arguments;
	Resolve code  without arguments;
	Resolve code

91.3. Add a class for abstract refreshable application context. It allows to:

	Instantiate abstract refreshable application context;
	Instantiate abstract refreshable application context  with parent application context;
	Set allow bean definition overriding;
	Set allow circular references;
	Refresh bean factory;
	Refresh beans exception;
	Close bean factory;
	Check if abstract refreshable application context has bean factory;
	Get bean factory;
	Assert bean factory active;
	Create bean factory;
	Customize bean factory;
	Load bean definitions

91.4. Add a class for abstract refreshable config application context. It allows to:

	Instantiate abstract refreshable config application context;
	Instantiate abstract refreshable config application context  with parent application context;
	Set config location;
	Set config locations;
	Get config locations;
	Get default config locations;
	Resolve path;
	Set id;
	Set bean name;
	Handle after properties set

91.5. Add a class for abstract resource based message source. It allows to:

	Set basename;
	Set basenames;
	Add basenames;
	Get basename set;
	Set default encoding;
	Get default encoding;
	Set fallback  to system locale;
	Check if abstract resource based message source is fallback to system locale;
	Set cache seconds;
	Set cache millis;
	Get cache millis

91.6. Add a class for abstract xml application context. It allows to:

	Instantiate abstract xml application context;
	Instantiate abstract xml application context  with parent application context;
	Validating abstract xml application context;
	Load bean definitions;
	Init bean definition reader;
	Get config resources

91.7. Add a class for application context aware processor. It allows to:

	Instantiate application context aware processor  with configurable application context;
	Post process  before initialization;
	Invoke aware interfaces;
	Post process  after initialization

91.8. Add a class for application context lifecycle tests. It allows to:

	Handle test beans start;
	Handle test beans stop;
	Handle test start order;
	Handle test stop order

91.9. Add a class for application object support. It allows to:

	Set application context;
	Check if application object support is context required;
	Get required context class;
	Handle init application context;
	Get application context;
	Obtain application context;
	Get message source accessor

91.10. Add a class for assembler. It allows to:

	Set service;
	Set logic;
	Set bean name;
	Handle test;
	Handle output

91.11. Add a class for autowired service. It allows to:

	Set message source;
	Get message source

91.12. Add a class for class path xml application context. It allows to:

	Instantiate class path xml application context;
	Instantiate class path xml application context  with parent application context;
	Instantiate class path xml application context  with clazz class;
	Instantiate class path xml application context  with clazz class, parent application context and parent application context;
	Get config resources

91.13. Add a class for class path xml application context tests. It allows to:

	Handle test single config location;
	Handle test multiple config locations;
	Handle test config location pattern;
	Handle test single config location with class;
	Handle test alias with placeholder;
	Handle test context with invalid value type;
	Check exception  from invalid value type;
	Handle test context with invalid lazy class;
	Handle test context with class name that contains placeholder;
	Handle test multiple config locations with class;
	Handle test factory bean and application listener;
	Handle test message source aware;
	Handle test resource array property editor;
	Handle test child with proxy;
	Handle test alias for parent context;
	Handle test alias that overrides parent;
	Handle test alias that overrides earlier bean;
	Assert one message source  only ctx class path xml application context;
	Handle test resource and input stream;
	Get resource;
	Handle test generic application context with xml bean definitions;
	Handle test generic application context with xml bean definitions and class loader null;
	Handle test generic application context with xml bean definitions and specified id

91.14. Add a class for conversion service factory bean. It allows to:

	Set converters;
	Handle after properties set;
	Create conversion service;
	Get object;
	Get object type;
	Check if conversion service factory bean is singleton

91.15. Add a class for default message source resolvable. It allows to:

	Instantiate default message source resolvable;
	Instantiate default message source resolvable  with message source resolvable;
	Get code;
	Get codes;
	Get arguments;
	Get default message;
	Should render default message;
	Handle resolvable to string;
	Convert default message source resolvable to string;
	Check if default message source resolvable equals;
	Hash code

91.16. Add a class for delegating message source. It allows to:

	Set parent message source;
	Get parent message source;
	Get message;
	Convert delegating message source to string

91.17. Add a class for embedded value resolution support. It allows to:

	Set embedded value resolver;
	Resolve embedded value

91.18. Add a class for environment integration tests. It allows to:

	Handle repro

91.19. Add a class for factory bean and application listener. It allows to:

	Get object;
	Get object type;
	Check if factory bean and application listener is singleton;
	Process factory bean and application listener factory bean and application listener on application event

91.20. Add an object creator class for file system xml application context. It allows to:

	Instantiate file system xml application context;
	Instantiate file system xml application context  with parent application context;
	Get resource  by path

91.21. Add a class for generic groovy application context. It allows to:

	Instantiate generic groovy application context;
	Instantiate generic groovy application context  with resources;
	Instantiate generic groovy application context  with relative class;
	Get reader;
	Set environment;
	Handle load;
	Set meta class;
	Get meta class;
	Invoke method;
	Set property;
	Get property

91.22. Add a class for generic xml application context. It allows to:

	Instantiate generic xml application context;
	Instantiate generic xml application context  with resources;
	Instantiate generic xml application context  with relative class;
	Get reader;
	Validating generic xml application context;
	Set environment;
	Handle load;

91.23. Add a class for generic xml application context tests. It allows to:

	Handle class relative resource loading ctor;
	Handle class relative resource loading load;
	Fully qualified resource loading ctor;
	Fully qualified resource loading load

91.24. Add a class for lifecycle test bean. It allows to:

	Get start order;
	Get stop order;
	Check if lifecycle test bean is running;
	Start lifecycle test bean;
	Stop lifecycle test bean

91.25. Add a class for live beans view. It allows to:

	Register application context;
	Handle unregister application context;
	Set application context;
	Get snapshot  as json;
	Find application contexts;
	Generate json;
	Check if live beans view is bean eligible;
	Get escaped resource description;
	Append array

91.26. Add an interface declaration  for live beans view M bean. It allows to:

	Get snapshot  as json

91.27. Add a class for logic. It allows to:

	Set assembler;
	Set bean name;
	Handle output

91.28. Add a class for message source accessor. It allows to:

	Instantiate message source accessor  with message source;
	Instantiate message source accessor  with message source, default locale and default locale;
	Get default locale;
	Get message;

91.29. Add a class for message source resource bundle. It allows to:

	Instantiate message source resource bundle  with message source, locale and locale;
	Instantiate message source resource bundle  with message source, locale, parent resource bundle and parent resource bundle;
	Handle get object;
	Check if message source resource bundle contains key;
	Get keys;
	Get locale

91.30. Add a class for message source support. It allows to:

	Set message source support always use message format;
	Check if message source support is always use message format;
	Render default message;
	Get format message;
	Create message format;
	Resolve arguments

91.31. Add a class for no op advice. It allows to:

	Process no op advice no op advice after throwing

91.32. Add a class for property resource configurer integration tests. It allows to:

	Handle test property placeholder configurer with system property in location;
	Handle test property placeholder configurer with system properties in location;
	Handle test property placeholder configurer with unresolvable system properties in location;
	Handle test property placeholder configurer with multi level circular reference;
	Handle test property placeholder configurer with nested circular reference;
	Handle test property placeholder configurer with nested unresolvable reference;
	Handle test property placeholder configurer with autowire by type

91.33. Add a class for property sources placeholder configurer. It allows to:

	Set property sources;
	Set environment;
	Post process bean factory;
	Get property;
	Handle process properties;
	Get applied property sources

91.34. Add a class for resource bundle message source tests. It allows to:

	Handle test message access with default message source;
	Handle test message access with default message source and message format;
	Convert test message access with default message source and fallback;
	Handle test message access with default message source and fallback turned off;
	Convert test message access with default message source and fallback turned off and fallback;
	Handle test message access with reloadable message source;
	Handle test message access with reloadable message source and message format;
	Convert test message access with reloadable message source and fallback;
	Handle test message access with reloadable message source and fallback turned off;
	Convert test message access with reloadable message source and fallback turned off and fallback;
	Do test message access;
	Handle test default application context message source;
	Handle test default application context message source with parent;
	Handle test static application context message source with static parent;
	Handle test static application context message source with default parent;
	Handle test resource bundle message source standalone;
	Handle test resource bundle message source with whitespace in basename;
	Handle test resource bundle message source with default charset;
	Handle test resource bundle message source with inappropriate default charset;
	Handle test reloadable resource bundle message source standalone;
	Handle test reloadable resource bundle message source with cache seconds;
	Handle test reloadable resource bundle message source with non concurrent refresh;
	Handle test reloadable resource bundle message source with common messages;
	Handle test reloadable resource bundle message source with whitespace in basename;
	Handle test reloadable resource bundle message source with default charset;
	Handle test reloadable resource bundle message source with inappropriate default charset;
	Handle test reloadable resource bundle message source with inappropriate english charset;
	Handle test reloadable resource bundle message source with inappropriate german charset;
	Handle test reloadable resource bundle message source file name calculation;
	Handle test message source resource bundle;
	Tear resource bundle message source tests

91.35. Add an object creator class for resource converter. It allows to:

	Convert resource converter

91.36. Add a class for serializable bean factory memory leak tests. It allows to:

	Zero out factory count;
	Handle generic context;
	Handle abstract refreshable context;
	Handle generic context with misconfigured bean;
	Handle abstract refreshable context with misconfigured bean;
	Customize bean factory;
	Assert factory count  throughout lifecycle;
	Register misconfigured bean definition;
	Handle serializable factory count;
	Get serializable factory map

91.37. Add a class for service. It allows to:

	Set application context;
	Set message source;
	Get message source;
	Get set resources;
	Get resources;
	Destroy service;
	Run;
	Check if service is properly destroyed

91.38. Add a class for simple thread scope. It allows to:

	Handle initial value;
	Get object factory;
	Remove simple thread scope;
	Register destruction callback;
	Resolve contextual object;
	Get conversation id

91.39. Add a class for simple thread scope tests. It allows to:

	Get simple thread scope tests from scope;
	Get multiple instances

91.40. Add a class for static application context. It allows to:

	Instantiate static application context;
	Instantiate static application context  with parent application context;
	Assert bean factory active;
	Get static message source;
	Register singleton;
	Register prototype;
	Add message

91.41. Add a class for static application context tests. It allows to:

	Create context;
	Handle count

91.42. Add a class for static message source. It allows to:

	Resolve code  without arguments;
	Resolve code;
	Add message;
	Add messages;
	Convert static message source to string

91.43. Add a class for static message source tests. It allows to:

	Handle count;
	Handle message source;
	Get message  with default passed in and found in msg catalog;
	Get message  with default passed in and not found in msg catalog;
	Get message  with message already looked for;
	Get message  with no default passed in and found in msg catalog;
	Get message  with no default passed in and not found in msg catalog;
	Handle message source resolvable;
	Create context;
	Handle nested message source with param in child;
	Handle nested message source with param in parent

91.44. Add an interface declaration  for test IF

91.45. Add a class for test proxy factory bean. It allows to:

	Create main interceptor;
	Set bean factory

92. Changes to package org.springframework.context.weaving:  

92.1. Add a class for default context load time weaver. It allows to:

	Instantiate default context load time weaver;
	Instantiate default context load time weaver  with bean class loader;
	Set bean class loader;
	Create server specific load time weaver;
	Destroy default context load time weaver;
	Add transformer;
	Get instrumentable class loader;
	Get throwaway class loader

92.2. Add an interface declaration  for load time weaver aware. It allows to:

	Set load time weaver

92.3. Add a class for load time weaver aware processor. It allows to:

	Instantiate load time weaver aware processor;
	Instantiate load time weaver aware processor  with load time weaver;
	Instantiate load time weaver aware processor  with bean factory;
	Set bean factory;
	Post process  before initialization;
	Post process  after initialization

93. Changes to package org.springframework.core:  

93.1. Add an interface declaration  for alias registry. It allows to:

	Register alias registry alias;
	Remove alias registry alias;
	Check if alias registry is alias;
	Get aliases

93.2. Add an interface declaration  for attribute accessor. It allows to:

	Set attribute;
	Get attribute;
	Remove attribute;
	Check if attribute accessor has attribute;
	Attribute names

93.3. Add a class for attribute accessor support. It allows to:

	Set attribute;
	Get attribute;
	Remove attribute;
	Check if attribute accessor support has attribute;
	Attribute names;
	Copy attributes  from source attribute accessor;
	Check if attribute accessor support equals;
	Hash code

93.4. Add a class for bridge method resolver. It allows to:

	Instantiate bridge method resolver;
	Find bridged method;
	Check if bridge method resolver is bridged candidate for;
	Search candidates;
	Check if bridge method resolver is bridge method for;
	Check if bridge method resolver is resolved type match;
	Find generic declaration;
	Search interfaces;
	Get search for match;
	Check if bridge method resolver is visibility bridge method pair

93.5. Add a class for collection factory. It allows to:

	Instantiate collection factory;
	Check if collection factory is approximable collection type;
	Create approximate collection;
	Create collection;
	Check if collection factory is approximable map type;
	Create approximate map;
	Create map;
	Create string adapting properties;
	Get property;
	Process collection factory collection factory as enum type

93.6. Add a class for collection factory tests. It allows to:

	Create approximate collection is  not type safe for enum set;
	Create collection is  not type safe for enum set;
	Create approximate map is  not type safe for enum map;
	Create map is  not type safe for enum map;
	Create map is  not type safe for linked multi value map;
	Create approximate collection  from empty hash set;
	Create approximate collection  from non empty hash set;
	Create approximate collection  from empty enum set;
	Create approximate collection  from non empty enum set;
	Create approximate map  from empty hash map;
	Create approximate map  from non empty hash map;
	Create approximate map  from empty enum map;
	Create approximate map  from non empty enum map;
	Check if collection factory tests creates collections correctly;
	Check if collection factory tests creates enum set;
	Check if collection factory tests creates enum set subclass;
	Check if collection factory tests rejects invalid element type for enum set;
	Check if collection factory tests rejects null element type for enum set;
	Check if collection factory tests rejects null collection type;
	Check if collection factory tests creates maps correctly;
	Check if collection factory tests creates enum map;
	Check if collection factory tests rejects invalid key type for enum map;
	Check if collection factory tests rejects null key type for enum map;
	Check if collection factory tests rejects null map type

93.7. Add a class for configurable object input stream. It allows to:

	Instantiate configurable object input stream  with input stream, class loader and class loader;
	Resolve class;
	Resolve proxy class;
	Resolve fallback  if possible;
	Get fallback class loader

93.8. Add a class for conventions. It allows to:

	Instantiate conventions;
	Get variable name;
	Get variable name  for parameter;
	Get variable name  for return type;
	Attribute name  to property name;
	Get qualified attribute name;
	Get class  for value;
	Pluralize conventions;
	Get peek ahead

93.9. Add a class for decorating class loader. It allows to:

	Instantiate decorating class loader;
	Instantiate decorating class loader  with parent class loader;
	Exclude package;
	Exclude class;
	Check if decorating class loader is excluded

93.10. Add an interface declaration  for decorating proxy. It allows to:

	Get decorated class

93.11. Add a class for default parameter name discoverer. It allows to:

	Instantiate default parameter name discoverer

93.12. Add a class for exception depth comparator. It allows to:

	Instantiate exception depth comparator  with exception throwable;
	Instantiate exception depth comparator  with exception type class;
	Compare o 1 class;
	Get depth;
	Find closest match

93.13. Add an interface declaration  for infrastructure proxy. It allows to:

	Get wrapped object

93.14. Add a class for method class key. It allows to:

	Instantiate method class key  with method, target class and target class;
	Check if method class key equals;
	Hash code;
	Convert method class key to string;
	Compare  to other method class key

93.15. Add a class for named inheritable thread local. It allows to:

	Instantiate named inheritable thread local;
	Convert named inheritable thread local to string

93.16. Add a class for named thread local. It allows to:

	Instantiate named thread local;
	Convert named thread local to string

93.17. Add a class for nested checked exception. It allows to:

	Instantiate nested checked exception;
	Instantiate nested checked exception  with cause throwable;
	Get message;
	Get root cause;
	Get nested checked exception most specific cause;
	Check if nested checked exception contains

93.18. Add a class for nested exception tests. It allows to:

	Handle nested runtime exception with no root cause;
	Handle nested runtime exception with root cause;
	Handle nested checked exception with no root cause;
	Handle nested checked exception with root cause

93.19. Add a class for nested exception utils. It allows to:

	Build message;
	Get root cause;
	Get original throwable most specific cause

93.20. Add a class for nested IO exception. It allows to:

	Instantiate nested IO exception;
	Instantiate nested IO exception  with cause throwable;
	Get message

93.21. Add a class for nested runtime exception. It allows to:

	Instantiate nested runtime exception;
	Instantiate nested runtime exception  with cause throwable;
	Get message;
	Get root cause;
	Get nested runtime exception most specific cause;
	Check if nested runtime exception contains

93.22. Add an interface declaration  for ordered. It allows to:

	Get order

93.23. Add a class for overriding class loader. It allows to:

	Instantiate overriding class loader  with parent class loader;
	Instantiate overriding class loader  with parent class loader, override delegate class loader and override delegate class loader;
	Load class;
	Check if overriding class loader is eligible for overriding;
	Load class  for overriding;
	Load bytes  for class;
	Handle open stream for class;
	Transform overriding class loader if necessary

93.24. Add an interface declaration  for parameter name discoverer. It allows to:

	Get parameter names;

93.25. Add a class for parameterized type reference. It allows to:

	Instantiate parameterized type reference;
	Instantiate parameterized type reference  with type;
	Get type;
	Check if parameterized type reference equals;
	Hash code;
	Convert parameterized type reference to string;
	Process parameterized type reference parameterized type reference for type;
	Find parameterized type reference subclass

93.26. Add a class for parameterized type reference tests. It allows to:

	String type reference;
	Map type reference;
	Handle list type reference;
	Handle reflective type reference with specific declaration;
	Handle reflective type reference with generic declaration;
	Map method;
	Get list method

93.27. Add a class for prioritized parameter name discoverer. It allows to:

	Add discoverer;
	Get parameter names;

93.28. Add a class for prioritized parameter name discoverer tests. It allows to:

	Get parameter names;
	Instantiate prioritized parameter name discoverer tests;
	No parameters discoverers;
	Get ordered parameter discoverers 1;
	Get ordered parameter discoverers 2

93.29. Add an interface declaration  for priority ordered

93.30. Add an interface declaration  for resolvable type provider. It allows to:

	Get resolvable type

93.31. Add a class for simple alias registry. It allows to:

	Register simple alias registry alias;
	Allow alias overriding;
	Check if simple alias registry has alias;
	Remove simple alias registry alias;
	Check if simple alias registry is alias;
	Get aliases;
	Retrieve aliases;
	Resolve aliases;
	Check simple alias registry for alias circle;
	Handle canonical name

93.32. Add an interface declaration  for smart class loader. It allows to:

	Check if smart class loader is class reloadable

93.33. Add a class for spring properties. It allows to:

	Instantiate spring properties;
	Set property;
	Get property;
	Set flag;
	Get flag

93.34. Add a class for spring version. It allows to:

	Instantiate spring version;
	Get version

93.35. Add a class for standard reflection parameter name discoverer. It allows to:

	Get parameter names;

94. Changes to package org.springframework.core.annotation:  

94.1. Add a class for annotation attributes. It allows to:

	Instantiate annotation attributes;
	Instantiate annotation attributes  with map;
	Instantiate annotation attributes  with other annotation attributes;
	Instantiate annotation attributes  with annotation type class;
	Instantiate annotation attributes  with class loader;
	Get annotation type;
	Get string;
	Get string array;
	Get boolean;
	Get number;
	Get enum;
	Get class;
	Get class array;
	Get annotation;
	Get annotation array;
	Get required attribute;
	Assert attribute presence;
	Assert annotation attributes not exception;
	Assert attribute type;
	Put annotation attributes if absent;
	Convert annotation attributes to string;
	Convert value;
	Process annotation attributes annotation attributes from map

94.2. Add a class for annotation attributes tests. It allows to:

	Handle type safe attribute access;
	Handle unresolvable class;
	Handle single element to single element array conversion support;
	Handle nested annotations;
	Get enum  with null attribute name;
	Get enum  with empty attribute name;
	Get enum  with unknown attribute name;
	Get enum  with type mismatch;
	Get aliased string  with implicit aliases;
	Get aliased string array  with implicit aliases;
	Get classes;
	Get pattern

Add a local a class for filtered class

94.3. Add a class for annotation aware order comparator. It allows to:

	Find order;
	Find order  from annotation;
	Get priority;
	Handle sort;
	Sort annotation aware order comparator if necessary

94.4. Add a class for annotation configuration exception. It allows to:

	Instantiate annotation configuration exception;
	Instantiate annotation configuration exception  with cause throwable

94.5. Add a class for order utils. It allows to:

	Get order;
	Get order  from annotations;
	Find order;
	Get priority

94.6. Add an interface declaration  for synthesized annotation

94.7. Add a class for synthesizing method parameter. It allows to:

	Instantiate synthesizing method parameter  with method;
	Instantiate synthesizing method parameter  with constructor;
	Instantiate synthesizing method parameter  with original synthesizing method parameter;
	Adapt annotation;
	Adapt annotation array;
	Clone synthesizing method parameter;
	Process synthesizing method parameter synthesizing method parameter for executable;
	Process synthesizing method parameter synthesizing method parameter for parameter

94.8. Add a class for web controller. It allows to:

	Handle mapped  with value attribute;
	Handle mapped  with path attribute;
	Get mapped  with value attribute;
	Get mapped  with path attribute;
	Post mapped  with path attribute;
	Handle mapped  with same path and value attributes;
	Handle mapped  with different path and value attributes

Add a local a class for config hierarchy test case

Add a local a class for broken config hierarchy test case

Add a local a class for simple config test case

Add a local a class for group of chars class

Add a local a class for alias for with missing attribute declaration class

Add a local a class for alias for with duplicate attribute declaration class

Add a local a class for alias for nonexistent attribute class

Add a local a class for alias for without mirrored alias for class

Add a local a class for alias for with mirrored alias for wrong attribute class

Add a local a class for alias for attribute of different type class

Add a local a class for alias for with missing default values class

Add a local a class for alias for attribute with different default value class

Add a local a class for aliased composed context config not meta present class

Add a local a class for groovy implicit aliases context config class

Add a local a class for xml implicit aliases context config class

Add a local a class for value implicit aliases context config class

Add a local a class for location 1 implicit aliases context config class

Add a local a class for location 2 implicit aliases context config class

Add a local a class for location 3 implicit aliases context config class

Add a local a class for value implicit aliases with implied alias names omitted context config class

Add a local a class for locations implicit aliases with implied alias names omitted context config class

Add a local a class for xml files implicit aliases with implied alias names omitted context config class

Add a local a class for implicit aliases with missing default values context config class

Add a local a class for implicit aliases with different default values context config class

Add a local a class for implicit aliases with duplicate values context config class

Add a local a class for implicit aliases for alias pair context config class

Add a local a class for transitive implicit aliases context config class

Add a local a class for transitive implicit aliases for alias pair context config class

Add a local a class for component scan class

Add a local a class for component scan single filter class

Add a local an interface declaration  for context config mismatch

Add a local a class for test repeatables class

95. Changes to package org.springframework.core.annotation.subpackage:  

95.1. Add a class for non public aliased annotated class

95.2. Add a class for non public annotated class

96. Changes to package org.springframework.core.convert:  

96.1. Add a class for conversion exception. It allows to:

	Instantiate conversion exception;
	Instantiate conversion exception  with cause throwable

96.2. Add a class for conversion failed exception. It allows to:

	Instantiate conversion failed exception  with source type descriptor, target type descriptor, cause throwable and cause throwable;
	Get source type;
	Get target type;
	Get value

96.3. Add an interface declaration  for conversion service. It allows to:

	Convert source type class;
	Convert source type descriptor;
	Convert target type class;

96.4. Add a class for converter not found exception. It allows to:

	Instantiate converter not found exception  with source type descriptor, target type descriptor and target type descriptor;
	Get source type;
	Get target type

96.5. Add a class for property. It allows to:

	Instantiate property  with object type class, read method, write method and write method;
	Get object type;
	Get name;
	Get type;
	Get read method;
	Get write method;
	Get method parameter;
	Get annotations;
	Resolve name;
	Resolve method parameter;
	Resolve read method parameter;
	Resolve write method parameter;
	Resolve parameter type;
	Resolve annotations;
	Add annotations  to map;
	Get field;
	Declaring class;
	Check if property equals;
	Hash code

97. Changes to package org.springframework.core.convert.converter:  

97.1. Add an interface declaration  for conditional converter. It allows to:

	Handle matches

97.2. Add an interface declaration  for conditional generic converter

97.3. Add an interface declaration  for converter. It allows to:

	Convert source

97.4. Add an interface declaration  for converter factory. It allows to:

	Get converter

97.5. Add an interface declaration  for converter registry. It allows to:

	Add converter;
	Add converter factory;
	Remove convertible

98. Changes to package org.springframework.core.convert.support:  

98.1. Add a class for abstract conditional enum converter. It allows to:

	Instantiate abstract conditional enum converter  with conversion service;
	Handle matches

98.2. Add a class for array to array converter. It allows to:

	Instantiate array to array converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor

98.3. Add a class for array to collection converter. It allows to:

	Instantiate array to collection converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor

98.4. Add a class for array to object converter. It allows to:

	Instantiate array to object converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor

98.5. Add a class for array to string converter. It allows to:

	Instantiate array to string converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor

98.6. Add a class for byte buffer converter. It allows to:

	Instantiate byte buffer converter  with conversion service;
	Get convertible types;
	Handle matches;
	Handle matches from byte buffer;
	Check if byte buffer converter matches to byte buffer;
	Convert source type descriptor;
	Convert source byte buffer from byte buffer;
	Convert source type descriptor to byte buffer

98.7. Add a class for collection to array converter. It allows to:

	Instantiate collection to array converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor

98.8. Add a class for collection to collection converter. It allows to:

	Instantiate collection to collection converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor

98.9. Add a class for collection to object converter. It allows to:

	Instantiate collection to object converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor

98.10. Add a class for collection to string converter. It allows to:

	Instantiate collection to string converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor

98.11. Add an interface declaration  for configurable conversion service

98.12. Add a class for conversion service factory. It allows to:

	Instantiate conversion service factory;
	Register converters

98.13. Add a class for conversion utils. It allows to:

	Invoke converter;
	Can convert elements;
	Get enum type

98.14. Add a class for converting property editor adapter. It allows to:

	Instantiate converting property editor adapter  with conversion service, target descriptor and target descriptor;
	Get set as text;
	Get converting property editor adapter as text

98.15. Add a class for default conversion service. It allows to:

	Instantiate default conversion service;
	Get shared instance;
	Add default converters;
	Add collection converters;
	Add scalar converters

98.16. Add a class for enum to integer converter. It allows to:

	Instantiate enum to integer converter  with conversion service;
	Convert source enum

98.17. Add a class for enum to string converter. It allows to:

	Instantiate enum to string converter  with conversion service;
	Convert source enum

98.18. Add a class for fallback object to string converter. It allows to:

	Get convertible types;
	Handle matches;
	Convert source type descriptor

98.19. Add a class for id to entity converter. It allows to:

	Instantiate id to entity converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor;
	Finder entity class;
	Get entity name

98.20. Add a class for my string to raw collection converter. It allows to:

	Convert my string to raw collection converter

Add a local a class for my string to generic collection converter. It allows to:

	Convert my string to generic collection converter

Add a local a class for my enum interface to string converter. It allows to:

	Convert source

Add a local a class for my string to string collection converter. It allows to:

	Convert my string to string collection converter

Add a local a class for my string to integer collection converter. It allows to:

	Convert my string to integer collection converter

Add a local a class for untyped converter. It allows to:

	Convert untyped converter

Add a local a class for color converter. It allows to:

	Convert color converter

Add a local a class for my conditional color converter. It allows to:

	Handle matches;
	Convert my conditional color converter

98.21. Add a class for number to character converter. It allows to:

	Convert source number

98.22. Add a class for object to array converter. It allows to:

	Instantiate object to array converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor

98.23. Add a class for object to collection converter. It allows to:

	Instantiate object to collection converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor

98.24. Add a class for object to object converter. It allows to:

	Get convertible types;
	Handle matches;
	Convert source type descriptor;
	Check if object to object converter has conversion method or constructor;
	Get validated member;
	Check if object to object converter is applicable;
	Determine target class to method;
	Determine factory method;
	Determine factory constructor

98.25. Add a class for object to string converter. It allows to:

	Convert object to string converter

98.26. Add a class for properties to string converter. It allows to:

	Convert source properties

98.27. Add a class for stream converter. It allows to:

	Instantiate stream converter  with conversion service;
	Get convertible types;
	Handle matches;
	Handle matches from stream;
	Check if stream converter matches to stream;
	Convert source type descriptor;
	Convert source stream from stream;
	Convert source type descriptor to stream;
	Create convertible types

98.28. Add a class for string to array converter. It allows to:

	Instantiate string to array converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor

98.29. Add a class for string to boolean converter. It allows to:

	Convert string to boolean converter

98.30. Add a class for string to character converter. It allows to:

	Convert string to character converter

98.31. Add a class for string to charset converter. It allows to:

	Convert string to charset converter

98.32. Add a class for string to collection converter. It allows to:

	Instantiate string to collection converter  with conversion service;
	Get convertible types;
	Handle matches;
	Convert source type descriptor

98.33. Add a class for string to currency converter. It allows to:

	Convert string to currency converter

98.34. Add a class for string to locale converter. It allows to:

	Convert string to locale converter

98.35. Add a class for string to properties converter. It allows to:

	Convert string to properties converter

98.36. Add a class for string to time zone converter. It allows to:

	Convert string to time zone converter

98.37. Add a class for string to UUID converter. It allows to:

	Convert string to UUID converter

98.38. Add a class for zone id to time zone converter. It allows to:

	Convert source zone id

98.39. Add a class for zoned date time to calendar converter. It allows to:

	Convert source zoned date time

99. Changes to package org.springframework.core.env:  

99.1. Add a class for abstract environment. It allows to:

	Instantiate abstract environment;
	Customize property sources;
	Get reserved default profiles;
	Get active profiles;
	Do get active profiles;
	Set active profiles;
	Add active profile;
	Get default profiles;
	Do get default profiles;
	Set default profiles;
	Check if abstract environment accepts profiles;
	Check if abstract environment is profile active;
	Validate profile;
	Get property sources;
	Get system properties;
	Get system attribute;
	Get system environment;
	Suppress getenv access;
	Merge parent configurable environment;
	Get conversion service;
	Set conversion service;
	Set placeholder prefix;
	Set placeholder suffix;
	Get set value separator;
	Set ignore unresolvable nested placeholders;
	Set required properties;
	Validate required properties;
	Check if abstract environment contains property;
	Get property;
	Get required property;
	Resolve placeholders;
	Resolve required placeholders;
	Convert abstract environment to string

99.2. Add a class for abstract property resolver. It allows to:

	Get conversion service;
	Set conversion service;
	Set placeholder prefix;
	Set placeholder suffix;
	Get set value separator;
	Set ignore unresolvable nested placeholders;
	Set required properties;
	Validate required properties;
	Check if abstract property resolver contains property;
	Get property;
	Get required property;
	Resolve placeholders;
	Resolve required placeholders;
	Resolve nested placeholders;
	Create placeholder helper;
	Do resolve placeholders;
	Convert value  if necessary;
	Get property  as raw string

99.3. Add a class for command line args. It allows to:

	Add option  arg;
	Get option names;
	Check if command line args contains option;
	Get option values;
	Add non option arg;
	Get non option args

99.4. Add a class for command line property source. It allows to:

	Instantiate command line property source  with source;
	Set non option args property name;
	Check if command line property source contains property;
	Get property;
	Check if command line property source contains option;
	Get option values;
	Get non option args

99.5. Add a class for composite property source. It allows to:

	Instantiate composite property source;
	Get property;
	Check if composite property source contains property;
	Get property names;
	Add property source;
	Add first property source;
	Get property sources;
	Convert composite property source to string

99.6. Add a class for composite property source tests. It allows to:

	Add composite property source tests first

99.7. Add an interface declaration  for configurable environment. It allows to:

	Set active profiles;
	Add active profile;
	Set default profiles;
	Get property sources;
	Get system properties;
	Get system environment;
	Merge parent configurable environment

99.8. Add an interface declaration  for configurable property resolver. It allows to:

	Get conversion service;
	Set conversion service;
	Set placeholder prefix;
	Set placeholder suffix;
	Get set value separator;
	Set ignore unresolvable nested placeholders;
	Set required properties;
	Validate required properties

99.9. Add a class for custom environment tests. It allows to:

	Control custom environment tests;
	Process custom environment tests custom environment tests with no reserved default profile;
	Process custom environment tests custom environment tests with single custom reserved default profile;
	Process custom environment tests custom environment tests with multi custom reserved default profile;
	Get default profile

99.10. Add a class for dummy environment. It allows to:

	Check if dummy environment contains property;
	Get property;
	Get required property;
	Resolve placeholders;
	Resolve required placeholders;
	Get active profiles;
	Get default profiles;
	Check if dummy environment accepts profiles;

99.11. Add a class for enumerable property source. It allows to:

	Instantiate enumerable property source  with source;
	Instantiate enumerable property source;
	Check if enumerable property source contains property;
	Get property names

99.12. Add an interface declaration  for environment. It allows to:

	Get active profiles;
	Get default profiles;
	Check if environment accepts profiles;

99.13. Add an interface declaration  for environment capable. It allows to:

	Get environment

99.14. Add a class for j opt command line property source. It allows to:

	Instantiate j opt command line property source  with options set;
	Check if j opt command line property source contains option;
	Get property names;
	Get option values;
	Get non option args

99.15. Add a class for j opt command line property source tests. It allows to:

	Process j opt command line property source tests j opt command line property source tests with required arg and arg is present;
	Process j opt command line property source tests j opt command line property source tests with optional arg and arg is missing;
	Process j opt command line property source tests j opt command line property source tests with no arg;
	Process j opt command line property source tests j opt command line property source tests with required arg and multiple args present using delimiter;
	Process j opt command line property source tests j opt command line property source tests with required arg and multiple args present using repeated option;
	Process j opt command line property source tests j opt command line property source tests with missing option;
	Process j opt command line property source tests j opt command line property source tests with dotted option name;
	Process j opt command line property source tests j opt command line property source tests with default non option args name and no non option args present;
	Process j opt command line property source tests j opt command line property source tests with default non option args name and non option args present;
	Process j opt command line property source tests j opt command line property source tests with custom non option args name and no non option args present;
	Process j opt command line property source tests j opt command line property source tests with required arg of type enum

99.16. Add a class for map property source. It allows to:

	Instantiate map property source  with source map;
	Get property;
	Check if map property source contains property;
	Get property names

99.17. Add a class for missing required properties exception. It allows to:

	Add missing required property;
	Get message;
	Get missing required properties

99.18. Add a class for mutable property sources. It allows to:

	Instantiate mutable property sources;
	Instantiate mutable property sources  with property sources;
	Get iterator;
	Get spliterator;
	Get stream;
	Check if mutable property sources contains;
	Get mutable property sources;
	Add  first property source;
	Add last;
	Add  before property source;
	Add  after property source;
	Get precedence of;
	Remove mutable property sources;
	Replace property source;
	Get size;
	Convert mutable property sources to string;
	Assert legal relative addition;
	Remove property source if present;
	Add property source at index;
	Assert present and get index

99.19. Add a class for mutable property sources tests. It allows to:

	Handle test;
	Get mutable property sources tests non existent property source returns null;
	Handle iterator contains property source;
	Handle iterator is empty for empty sources;
	Handle stream contains property source;
	Handle stream is empty for empty sources

99.20. Add a class for properties property source. It allows to:

	Instantiate properties property source  with source properties;
	Instantiate properties property source  with source map

99.21. Add a class for property placeholder configurer environment integration tests. It allows to:

	Handle test

99.22. Add an interface declaration  for property resolver. It allows to:

	Check if property resolver contains property;
	Get property;
	Get required property;
	Resolve placeholders;
	Resolve required placeholders

99.23. Add a class for property source tests. It allows to:

	Check if property source tests equals;
	Handle collections operations

99.24. Add an interface declaration  for property sources. It allows to:

	Get stream;
	Check if property sources contains;
	Get property sources

99.25. Add a class for property sources property resolver. It allows to:

	Instantiate property sources property resolver  with property sources;
	Check if property sources property resolver contains property;
	Get property;
	Get property  as raw string;
	Log key found

99.26. Add a class for property sources property resolver tests. It allows to:

	Set property sources property resolver tests;
	Check if property sources property resolver tests contains property;
	Get property;
	Get property  with default value;
	Get property property source search order is FIFO;
	Get property  with explicit null value;
	Get property  with target type and default value;
	Get property  with string array conversion;
	Get property  with non convertible target type;
	Get property does  not cache replace existing key post construction;
	Get property does  not cache add new key post construction;
	Get property sources replace property source;
	Get required property;
	Get required property  with string array conversion;
	Resolve placeholders;
	Resolve placeholders  with unresolvable;
	Resolve placeholders  with default value;
	Resolve placeholders  with null input;
	Resolve required placeholders;
	Resolve required placeholders  with unresolvable;
	Resolve required placeholders  with default value;
	Resolve required placeholders  with null input;
	Set required properties and validate required properties;
	Resolve nested property placeholders;
	Ignore unresolvable nested placeholders is configurable

99.27. Add a class for read only system attributes map. It allows to:

	Check if read only system attributes map contains key;
	Get read only system attributes map;
	Check if read only system attributes map is empty;
	Get system attribute;
	Get size;
	Put read only system attributes map;
	Check if read only system attributes map contains value;
	Remove read only system attributes map;
	Handle clear;
	Handle key set;
	Put map;
	Get values;
	Get entry set

99.28. Add a class for simple command line args parser. It allows to:

	Parse simple command line args parser

99.29. Add a class for simple command line parser tests. It allows to:

	Process simple command line parser tests simple command line parser tests with no options;
	Process simple command line parser tests simple command line parser tests with single option and no value;
	Process simple command line parser tests simple command line parser tests with single option and value;
	Process simple command line parser tests simple command line parser tests with mix of options having value and options having no value;
	Process simple command line parser tests simple command line parser tests with empty option text;
	Process simple command line parser tests simple command line parser tests with empty option name;
	Process simple command line parser tests simple command line parser tests with empty option value;
	Process simple command line parser tests simple command line parser tests with empty option name and empty option value;
	Process simple command line parser tests simple command line parser tests with non option arguments;
	Assert option names is unmodifiable;
	Assert non option args is unmodifiable

99.30. Add a class for simple command line property source. It allows to:

	Instantiate simple command line property source;
	Get property names;
	Check if simple command line property source contains option;
	Get option values;
	Get non option args

99.31. Add a class for simple command line property source tests. It allows to:

	Process simple command line property source tests simple command line property source tests with default name;
	Process simple command line property source tests simple command line property source tests with custom name;
	Process simple command line property source tests simple command line property source tests with no args;
	Process simple command line property source tests simple command line property source tests with option args only;
	Process simple command line property source tests simple command line property source tests with default non option args name and no non option args present;
	Process simple command line property source tests simple command line property source tests with default non option args name and non option args present;
	Process simple command line property source tests simple command line property source tests with custom non option args name and no non option args present;
	Handle covert non option args to string array and list

99.32. Add a class for standard environment. It allows to:

	Customize property sources

99.33. Add a class for standard environment tests. It allows to:

	Merge standard environment tests;
	Handle property source order;
	Handle property source types;
	Handle active profiles is empty by default;
	Handle default profiles contains default profile by default;
	Set active profiles;
	Set active profiles  with null profile array;
	Set active profiles  with null profile;
	Set active profiles  with empty profile;
	Set active profiles  with not operator;
	Set default profiles  with null profile array;
	Set default profiles  with null profile;
	Set default profiles  with empty profile;
	Set default profiles  with not operator;
	Add active profile;
	Add active profile when active profiles property is  already set;
	Get reserved default profile;
	Handle default profile with circular placeholder;
	Get active profiles system properties empty;
	Get active profiles  from system properties;
	Get active profiles  from system properties with multiple profiles;
	Get active profiles  from system properties with mulitple profiles with whitespace;
	Get default profiles;
	Set default profiles;
	Check if standard environment tests accepts profiles with empty argument list;
	Check if standard environment tests accepts profiles with null argument list;
	Check if standard environment tests accepts profiles with null argument;
	Check if standard environment tests accepts profiles with empty argument;
	Check if standard environment tests accepts profiles active profile set programmatically;
	Check if standard environment tests accepts profiles active profile set via property;
	Check if standard environment tests accepts profiles default profile;
	Check if standard environment tests accepts profiles with not operator;
	Check if standard environment tests accepts profiles with invalid not operator;
	Check if standard environment tests accepts profiles with profile expression;
	Handle environment subclass with custom profile validation;
	Validate profile;
	Suppress getenv access  through system property;
	Suppress getenv access  through spring property;
	Suppress getenv access  through spring flag;
	Get system properties  with and without security manager;
	Check properties access;
	Check property access;
	Check permission;
	Get system environment  with and without security manager;
	Get modifiable system environment

99.34. Add a class for system environment property source. It allows to:

	Instantiate system environment property source  with source map;
	Check if system environment property source contains property;
	Get property;
	Resolve property name;
	Check property name;
	Check if system environment property source contains key;
	Check if system environment property source is security manager present

99.35. Add a class for system environment property source tests. It allows to:

	Set system environment property source tests;
	Handle none;
	Handle normal without period;
	Handle normal with period;
	Process system environment property source tests system environment property source tests with underscore;
	Process system environment property source tests system environment property source tests with both period and underscore;
	Process system environment property source tests system environment property source tests with uppercase;
	Process system environment property source tests system environment property source tests with security constraints;
	Check if  contains key;
	Handle key set;
	Check if  is security manager present

100. Changes to package org.springframework.core.env.scan1:  

100.1. Add a class for config

Add a local an object creator class for dev config. It allows to:

	Dev bean

Add a local an object creator class for prod config. It allows to:

	Prod bean

101. Changes to package org.springframework.core.env.scan2:  

101.1. Add a class for dev bean

Add a local a class for prod bean

102. Changes to package org.springframework.core.io:  

102.1. Add a class for abstract resource. It allows to:

	Check if abstract resource exists;
	Check if abstract resource is readable;
	Check if abstract resource is open;
	Check if abstract resource is file;
	Get URL;
	Get URI;
	Get file;
	Handle readable channel;
	Handle content length;
	Handle last modified;
	Get file  for last modified check;
	Create relative;
	Get filename;
	Check if abstract resource equals;
	Hash code;
	Convert abstract resource to string

102.2. Add a class for byte array resource. It allows to:

	Instantiate byte array resource;
	Get byte array;
	Check if byte array resource exists;
	Handle content length;
	Get input stream;
	Get description;
	Check if byte array resource equals;
	Hash code

102.3. Add a class for class path resource. It allows to:

	Instantiate class path resource;
	Instantiate class path resource  with class loader;
	Instantiate class path resource  with clazz class;
	Instantiate class path resource  with class loader, clazz class and clazz class;
	Get path;
	Get class loader;
	Check if class path resource exists;
	Resolve URL;
	Get input stream;
	Get URL;
	Create relative;
	Get filename;
	Get description;
	Check if class path resource equals;
	Hash code

102.4. Add a class for class path resource tests. It allows to:

	String constructor raises exception  with fully qualified path;
	Handle class literal constructor raises exception with fully qualified path;
	Handle class loader constructor raises exception with fully qualified path;
	Get description  with string constructor;
	Get description  with string constructor and leading slash;
	Get description  with class literal constructor;
	Get description  with class literal constructor and leading slash;
	Get description  with class loader constructor;
	Get description  with class loader constructor and leading slash;
	Drop leading slash  for class loader access;
	Preserve leading slash  for class relative access;
	Handle directory not readable;
	Assert description contains expected path;
	Assert exception contains  fully qualified path

102.5. Add an interface declaration  for context resource. It allows to:

	Get path  within context

102.6. Add a class for descriptive resource. It allows to:

	Instantiate descriptive resource;
	Check if descriptive resource exists;
	Check if descriptive resource is readable;
	Get input stream;
	Get description;
	Check if descriptive resource equals;
	Hash code

102.7. Add a class for file system resource. It allows to:

	Instantiate file system resource;
	Instantiate file system resource  with file;
	Instantiate file system resource  with file path;
	Instantiate file system resource  with file system;
	Get path;
	Check if file system resource exists;
	Check if file system resource is readable;
	Get input stream;
	Check if file system resource is writable;
	Get output stream;
	Get URL;
	Get URI;
	Check if file system resource is file;
	Get file;
	Handle readable channel;
	Handle writable channel;
	Handle content length;
	Handle last modified;
	Create relative;
	Get filename;
	Get description;
	Check if file system resource equals;
	Hash code

102.8. Add a class for input stream resource. It allows to:

	Instantiate input stream resource  with input stream;
	Check if input stream resource exists;
	Check if input stream resource is open;
	Get input stream;
	Get description;
	Check if input stream resource equals;
	Hash code

102.9. Add an interface declaration  for input stream source. It allows to:

	Get input stream

102.10. Add a class for path resource. It allows to:

	Instantiate path resource  with path;
	Instantiate path resource;
	Instantiate path resource  with URI;
	Get path;
	Check if path resource exists;
	Check if path resource is readable;
	Get input stream;
	Check if path resource is writable;
	Get output stream;
	Get URL;
	Get URI;
	Check if path resource is file;
	Get file;
	Handle readable channel;
	Handle writable channel;
	Handle content length;
	Handle last modified;
	Create relative;
	Get filename;
	Get description;
	Check if path resource equals;
	Hash code

102.11. Add a class for path resource tests. It allows to:

	Get platform path;
	Handle null path;
	Handle null path string;
	Handle null uri;
	Create path resource tests from path;
	Create path resource tests from string;
	Create path resource tests from uri;
	Get path  for file;
	Get path  for dir;
	Exists path resource tests;
	Handle dir exists;
	File does  not exist;
	Handle file is readable;
	Check if path resource tests does not exist is not readable;
	Handle directory is not readable;
	Get input stream;
	Get input stream  for dir;
	Get input stream does  not exist;
	Get url;
	Get uri;
	Get file;
	Get file unsupported;
	Handle content length;
	Handle content length for directory;
	Handle last modified;
	Create relative  from dir;
	Create relative  from file;
	Handle filename;
	Handle description;
	Handle file is writable;
	Handle directory is not writable;
	Handle output stream;
	Check if path resource tests does not exist output stream;
	Handle directory output stream;
	Get readable byte channel;
	Get readable byte channel  for dir;
	Get readable byte channel does  not exist;
	Get writable channel

102.12. Add an interface declaration  for protocol resolver. It allows to:

	Resolve resource loader

102.13. Add an interface declaration  for resource. It allows to:

	Check if resource exists;
	Check if resource is readable;
	Check if resource is open;
	Check if resource is file;
	Get URL;
	Get URI;
	Get file;
	Handle readable channel;
	Handle content length;
	Handle last modified;
	Create relative;
	Get filename;
	Get description

102.14. Add a class for resource editor. It allows to:

	Instantiate resource editor;
	Instantiate resource editor  with resource loader, property resolver and property resolver;
	Get set as text;
	Resolve path;
	Get resource editor as text

102.15. Add a class for resource editor tests. It allows to:

	Handle sunny day;
	Ctor resource editor tests with null ctor args;
	Set and get  as text with null;
	Set and get  as text with whitespace resource;
	Handle test system property replacement;
	Test strict system property replacement

102.16. Add an interface declaration  for resource loader. It allows to:

	Get resource;
	Get class loader

102.17. Add a class for resource tests. It allows to:

	Handle test byte array resource;
	Handle test byte array resource with description;
	Handle test input stream resource;
	Handle test input stream resource with description;
	Handle test class path resource;
	Handle test class path resource with class loader;
	Handle test class path resource with class;
	Handle test file system resource;
	Handle test file system resource with file path;
	Handle test file system resource with plain path;
	Handle test url resource;
	Do test resource;
	Handle test class path resource with relative path;
	Handle test file system resource with relative path;
	Handle test url resource with relative path;
	Handle test non file resource exists;
	Handle test abstract resource exceptions;
	Get description;
	Get input stream;
	Handle test content length;
	Handle test readable channel;
	Handle test input stream not found on file system resource;
	Handle test readable channel not found on file system resource;
	Handle test input stream not found on class path resource;
	Handle test readable channel not found on class path resource

102.18. Add a class for url resource. It allows to:

	Instantiate url resource  with URI;
	Instantiate url resource  with URL;
	Instantiate url resource;
	Get cleaned url;
	Get input stream;
	Get URL;
	Get URI;
	Check if url resource is file;
	Get file;
	Create relative;
	Get filename;
	Get description;
	Check if url resource equals;
	Hash code

102.19. Add a class for vfs resource. It allows to:

	Instantiate vfs resource;
	Get input stream;
	Check if vfs resource exists;
	Check if vfs resource is readable;
	Get URL;
	Get URI;
	Get file;
	Handle content length;
	Handle last modified;
	Create relative;
	Get filename;
	Get description;
	Check if vfs resource equals;
	Hash code

102.20. Add a class for vfs utils. It allows to:

	Invoke vfs method;
	Check if vfs utils exists;
	Check if vfs utils is readable;
	Get size;
	Get last modified;
	Get input stream;
	Get URL;
	Get URI;
	Get name;
	Get relative;
	Get child;
	Get file;
	Get root;
	Do get visitor attributes;
	Do get path

102.21. Add an interface declaration  for writable resource. It allows to:

	Check if writable resource is writable;
	Get output stream;
	Handle writable channel

103. Changes to package org.springframework.core.io.support:  

103.1. Add an object creator class for default property source factory. It allows to:

	Create property source

103.2. Add an interface declaration  for dummy factory. It allows to:

	Get string

103.3. Add a class for dummy package private factory

103.4. Add a class for encoded resource. It allows to:

	Instantiate encoded resource  with resource;
	Instantiate encoded resource  with resource, charset and charset;
	Get resource;
	Encoding encoded resource;
	Get charset;
	Check if encoded resource requires reader;
	Get reader;
	Get input stream;
	Check if encoded resource equals;
	Hash code;
	Convert encoded resource to string

103.5. Add a class for encoded resource tests. It allows to:

	Check if encoded resource tests equals with null other object;
	Check if encoded resource tests equals with same encoding;
	Check if encoded resource tests equals with different encoding;
	Check if encoded resource tests equals with same charset;
	Check if encoded resource tests equals with different charset;
	Check if encoded resource tests equals with encoding and charset

103.6. Add a class for localized resource helper. It allows to:

	Instantiate localized resource helper;
	Instantiate localized resource helper  with resource loader;
	Set separator;
	Find localized resource

103.7. Add a class for my dummy factory 1. It allows to:

	Get string

103.8. Add a class for my dummy factory 2. It allows to:

	Get string

103.9. Add a class for path matching resource pattern resolver tests. It allows to:

	Handle invalid prefix with pattern element in it;
	Handle single resource on file system;
	Handle single resource in jar;
	Handle classpath star with pattern on file system;
	Handle classpath with pattern in jar;
	Handle classpath star with pattern in jar;
	Root pattern retrieval  in jar files;
	Assert protocol and filenames;
	Assert filename  in resource

103.10. Add a class for properties loader support. It allows to:

	Set properties;
	Set properties array;
	Set location;
	Set locations;
	Set local override;
	Set ignore resource  not found;
	Set file encoding;
	Set properties persister;
	Merge properties;
	Load properties

103.11. Add a class for properties loader utils. It allows to:

	Load properties;
	Fill properties;
	Load all properties;

103.12. Add an interface declaration  for property source factory. It allows to:

	Create property source

103.13. Add a class for resource array property editor. It allows to:

	Instantiate resource array property editor;
	Instantiate resource array property editor  with resource pattern resolver, property resolver and property resolver;
	Get set as text;
	Get set value;
	Resolve path

103.14. Add a class for resource array property editor tests. It allows to:

	Handle test vanilla resource;
	Handle test pattern resource;
	Handle test system property replacement;
	Test strict system property replacement

103.15. Add an interface declaration  for resource pattern resolver. It allows to:

	Get resources

103.16. Add a class for resource pattern utils. It allows to:

	Check if resource pattern utils is url;
	Get resource pattern resolver

103.17. Add an object creator class for resource property source. It allows to:

	Instantiate resource property source  with encoded resource;
	Instantiate resource property source  with resource;
	Instantiate resource property source  with class loader;
	Instantiate resource property source;
	Instantiate resource property source  with source map;
	Process resource property source resource property source with name;
	Process resource property source resource property source with resource name;
	Get name  for resource

103.18. Add a class for resource property source tests. It allows to:

	Process resource property source tests resource property source tests with location and generated name;
	Handle xml with location and generated name;
	Process resource property source tests resource property source tests with location and explicit name;
	Process resource property source tests resource property source tests with location and explicit name and explicit class loader;
	Process resource property source tests resource property source tests with location and generated name and explicit class loader;
	Process resource property source tests resource property source tests with resource and generated name;
	Process resource property source tests resource property source tests with resource and explicit name;
	Process resource property source tests resource property source tests with resource having no description

103.19. Add a class for resource region. It allows to:

	Instantiate resource region  with resource;
	Get resource;
	Get position;
	Get count

103.20. Add a class for resource region tests. It allows to:

	Should throw exception  with null resource;
	Should throw exception  for negative position;
	Should throw exception  for negative count

103.21. Add a class for spring factories loader. It allows to:

	Instantiate spring factories loader;
	Load factories;
	Load factory names;
	Load spring factories;
	Handle instantiate factory

103.22. Add a class for spring factories loader tests. It allows to:

	Load factories  in correct order;
	Load package private factory;
	Attempt spring factories loader tests to load factory of incompatible type

103.23. Add a class for vfs pattern utils. It allows to:

	Get visitor attributes;
	Get path;
	Find root;
	Handle visit

104. Changes to package org.springframework.core.serializer:  

104.1. Add a class for default deserializer. It allows to:

	Instantiate default deserializer;
	Instantiate default deserializer  with class loader;
	Get deserialize

104.2. Add a class for default serializer. It allows to:

	Serialize output stream

104.3. Add an interface declaration  for deserializer. It allows to:

	Get deserialize

104.4. Add an interface declaration  for serializer. It allows to:

	Serialize object

105. Changes to package org.springframework.core.serializer.support:  

105.1. Add a class for deserializing converter. It allows to:

	Instantiate deserializing converter;
	Instantiate deserializing converter  with class loader;
	Instantiate deserializing converter  with deserializer;
	Convert deserializing converter

105.2. Add a class for serialization delegate. It allows to:

	Instantiate serialization delegate  with class loader;
	Instantiate serialization delegate  with serializer, deserializer and deserializer;
	Serialize output stream;
	Get deserialize

105.3. Add a class for serialization failed exception. It allows to:

	Instantiate serialization failed exception;
	Instantiate serialization failed exception  with cause throwable

105.4. Add a class for serializing converter. It allows to:

	Instantiate serializing converter;
	Instantiate serializing converter  with serializer;
	Convert serializing converter

106. Changes to package org.springframework.core.style:  

106.1. Add a class for default to string styler. It allows to:

	Instantiate default to string styler  with value styler;
	Get value styler;
	Handle style start;
	Handle style identity hash code;
	Handle style end;
	Handle style field;
	Handle style field start;
	Handle style field end;
	Handle style value;
	Handle style field separator

106.2. Add a class for default value styler. It allows to:

	Get style;
	Get collection type string;
	Get style array

106.3. Add a class for styler utils. It allows to:

	Get style

106.4. Add a class for to string creator. It allows to:

	Instantiate to string creator;
	Instantiate to string creator  with value styler;
	Instantiate to string creator  with to string styler;
	Append to string creator;
	Print field separator  if necessary;
	Convert to string creator to string

106.5. Add an interface declaration  for to string styler. It allows to:

	Handle style start;
	Handle style end;
	Handle style field;
	Handle style value;
	Handle style field separator

106.6. Add an interface declaration  for value styler. It allows to:

	Get style

107. Changes to package org.springframework.core.task:  

107.1. Add an interface declaration  for async listenable task executor. It allows to:

	Submit listenable;

107.2. Add an interface declaration  for async task executor. It allows to:

	Execute task runnable;
	Submit task runnable;
	Submit task callable

107.3. Add a class for mock runnable. It allows to:

	Run mock runnable;
	Get was executed

107.4. Add a class for no op runnable. It allows to:

	Run no op runnable

107.5. Add a class for stub task executor. It allows to:

	Execute task runnable

107.6. Add a class for sync task executor. It allows to:

	Execute task runnable

107.7. Add an interface declaration  for task decorator. It allows to:

	Decorate runnable

107.8. Add an interface declaration  for task executor. It allows to:

	Execute task runnable

107.9. Add a class for task rejected exception. It allows to:

	Instantiate task rejected exception;
	Instantiate task rejected exception  with cause throwable

107.10. Add a class for task timeout exception. It allows to:

	Instantiate task timeout exception;
	Instantiate task timeout exception  with cause throwable

108. Changes to package org.springframework.core.task.support:  

108.1. Add a class for concurrent executor adapter. It allows to:

	Instantiate concurrent executor adapter  with task executor;
	Execute command runnable

108.2. Add a class for executor service adapter. It allows to:

	Instantiate executor service adapter  with task executor;
	Execute task runnable;
	Handle shutdown;
	Get shutdown now;
	Await termination;
	Check if executor service adapter is shutdown;
	Check if executor service adapter is terminated

108.3. Add a class for task executor adapter. It allows to:

	Instantiate task executor adapter  with concurrent executor;
	Set task decorator;
	Execute task runnable;
	Submit task runnable;
	Submit task callable;
	Submit listenable;
	Execute concurrent executor

109. Changes to package org.springframework.core.type:  

109.1. Add an interface declaration  for annotated type metadata. It allows to:

	Check if annotated type metadata is annotated;
	Get annotation attributes;
	Get all annotation attributes;

109.2. Add an interface declaration  for annotation metadata. It allows to:

	Get annotation types;
	Get meta annotation types;
	Check if annotation metadata has annotation;
	Check if annotation metadata has meta annotation;
	Check if annotation metadata has annotated methods;
	Get annotated methods

109.3. Add a class for annotation metadata tests. It allows to:

	Handle standard annotation metadata;
	Handle asm annotation metadata;
	Handle standard annotation metadata for subclass;
	Handle asm annotation metadata for subclass;
	Do test sub class annotation info;
	Handle standard annotation metadata for interface;
	Handle asm annotation metadata for interface;
	Do test metadata  for interface class;
	Handle standard annotation metadata for annotation;
	Handle asm annotation metadata for annotation;
	Do test metadata  for annotation class;
	Handle standard annotation metadata nested annotations as map false;
	Handle meta annotation overrides using standard annotation metadata;
	Handle meta annotation overrides using annotation metadata reading visitor;
	Assert meta annotation overrides;
	Handle multiple annotations with identical attribute names using standard annotation metadata;
	Handle multiple annotations with identical attribute names using annotation metadata reading visitor;
	Get composed annotation with meta annotations with identical attribute names using standard annotation metadata;
	Get composed annotation with meta annotations with identical attribute names using annotation metadata reading visitor;
	Get inherited annotation with meta annotations with identical attribute names using standard annotation metadata;
	Get inherited annotation with meta annotations with identical attribute names using annotation metadata reading visitor;
	Assert multiple annotations  with identical attribute names;
	Do test annotation info;
	Do test method annotation info

Add a local a class for annotated component. It allows to:

	Do work;
	Sleep annotated component;
	Handle meta

Add a local a class for annotated component sub class

Add a local a class for composed configuration with attribute overrides class

Add a local a class for named annotations class

Add a local a class for named composed annotation class

Add a local a class for named composed annotation extended

109.4. Add a class for caching metadata reader leak tests. It allows to:

	Handle test significant load;
	Check if  equals;
	Hash code

109.5. Add an interface declaration  for class metadata. It allows to:

	Get class name;
	Check if class metadata is interface;
	Check if class metadata is annotation;
	Check if class metadata is abstract;
	Check if class metadata is concrete;
	Check if class metadata is final;
	Check if class metadata is independent;
	Check if class metadata has enclosing class;
	Get enclosing class name;
	Check if class metadata has super class;
	Get super class name;
	Get interface names;
	Get member class names

109.6. Add a class for classloading assertions. It allows to:

	Check if classloading assertions is class loaded;
	Assert class  not loaded

109.7. Add an interface declaration  for method metadata. It allows to:

	Get method name;
	Get declaring class name;
	Get return type name;
	Check if method metadata is abstract;
	Check if method metadata is static;
	Check if method metadata is final;
	Check if method metadata is overridable

109.8. Add a class for standard annotation metadata. It allows to:

	Instantiate standard annotation metadata  with introspected class;
	Get annotation types;
	Get meta annotation types;
	Check if standard annotation metadata has annotation;
	Check if standard annotation metadata has meta annotation;
	Check if standard annotation metadata is annotated;
	Get annotation attributes;
	Get all annotation attributes;
	Check if standard annotation metadata has annotated methods;
	Get annotated methods

109.9. Add a class for standard class metadata. It allows to:

	Instantiate standard class metadata  with introspected class;
	Get introspected class;
	Get class name;
	Check if standard class metadata is interface;
	Check if standard class metadata is annotation;
	Check if standard class metadata is abstract;
	Check if standard class metadata is concrete;
	Check if standard class metadata is final;
	Check if standard class metadata is independent;
	Check if standard class metadata has enclosing class;
	Get enclosing class name;
	Check if standard class metadata has super class;
	Get super class name;
	Get interface names;
	Get member class names

109.10. Add an object creator class for standard class metadata member class tests. It allows to:

	Get class metadata  for clazz class

109.11. Add a class for standard method metadata. It allows to:

	Instantiate standard method metadata  with introspected method;
	Get introspected method;
	Get method name;
	Get declaring class name;
	Get return type name;
	Check if standard method metadata is abstract;
	Check if standard method metadata is static;
	Check if standard method metadata is final;
	Check if standard method metadata is overridable;
	Check if standard method metadata is annotated;
	Get annotation attributes;
	Get all annotation attributes;

110. Changes to package org.springframework.core.type.classreading:  

110.1. Add a class for abstract recursive annotation visitor. It allows to:

	Instantiate abstract recursive annotation visitor  with class loader, annotation attributes and annotation attributes;
	Handle visit;
	Visit annotation;
	Visit array;
	Visit enum;
	Get enum value

110.2. Add a class for annotation attributes reading visitor. It allows to:

	Instantiate annotation attributes reading visitor  with attributes map, meta annotation map, class loader and class loader;
	Visit end;
	Recursively collect meta annotations

110.3. Add a class for annotation metadata reading visitor. It allows to:

	Instantiate annotation metadata reading visitor  with class loader;
	Visit method;
	Visit annotation;
	Get annotation types;
	Get meta annotation types;
	Check if annotation metadata reading visitor has annotation;
	Check if annotation metadata reading visitor has meta annotation;
	Check if annotation metadata reading visitor is annotated;
	Get annotation attributes;
	Get all annotation attributes;
	Check if annotation metadata reading visitor has annotated methods;
	Get annotated methods

110.4. Add a class for annotation reading visitor utils. It allows to:

	Convert class values;
	Get merged annotation attributes

110.5. Add a class for class metadata reading visitor member class tests. It allows to:

	Get class metadata  for clazz class

110.6. Add an interface declaration  for metadata reader. It allows to:

	Get resource;
	Get class metadata;
	Get annotation metadata

110.7. Add an interface declaration  for metadata reader factory. It allows to:

	Get metadata reader;

110.8. Add a class for method metadata reading visitor. It allows to:

	Instantiate method metadata reading visitor  with class loader, method metadata set and method metadata set;
	Visit annotation;
	Get method name;
	Check if method metadata reading visitor is abstract;
	Check if method metadata reading visitor is static;
	Check if method metadata reading visitor is final;
	Check if method metadata reading visitor is overridable;
	Check if method metadata reading visitor is annotated;
	Get annotation attributes;
	Get all annotation attributes;
	Get declaring class name;
	Get return type name

110.9. Add a class for recursive annotation array visitor. It allows to:

	Instantiate recursive annotation array visitor  with annotation attributes, class loader and class loader;
	Handle visit;
	Visit annotation;
	Visit end

110.10. Add a class for recursive annotation attributes visitor. It allows to:

	Instantiate recursive annotation attributes visitor  with annotation attributes, class loader and class loader;
	Visit end

110.11. Add a class for simple metadata reader. It allows to:

	Instantiate simple metadata reader  with resource, class loader and class loader;
	Get resource;
	Get class metadata;
	Get annotation metadata

110.12. Add a class for simple metadata reader factory. It allows to:

	Instantiate simple metadata reader factory;
	Instantiate simple metadata reader factory  with resource loader;
	Instantiate simple metadata reader factory  with class loader;
	Get resource loader;
	Get metadata reader;

111. Changes to package org.springframework.core.type.filter:  

111.1. Add a class for abstract class testing type filter. It allows to:

	Match metadata reader;
	Match class metadata

111.2. Add a class for abstract type hierarchy traversing filter. It allows to:

	Instantiate abstract type hierarchy traversing filter;
	Match metadata reader;
	Match metadata reader factory;
	Match self;
	Match class name;
	Match super class;
	Match interface

111.3. Add a class for annotation type filter. It allows to:

	Instantiate annotation type filter  with annotation type class;
	Get annotation type;
	Match self;
	Match super class;
	Match interface;
	Check if annotation type filter has annotation

111.4. Add a class for aspect J type filter. It allows to:

	Instantiate aspect J type filter  with class loader;
	Match metadata reader

111.5. Add a class for assignable type filter. It allows to:

	Instantiate assignable type filter  with target type class;
	Get target type;
	Match class name;
	Match super class;
	Match interface;
	Match target type

111.6. Add a class for regex pattern type filter. It allows to:

	Instantiate regex pattern type filter  with pattern;
	Match class metadata

111.7. Add an interface declaration  for type filter. It allows to:

	Match metadata reader

112. Changes to package org.springframework.dao:  

112.1. Add a class for can not acquire lock exception. It allows to:

	Instantiate can not acquire lock exception;
	Instantiate can not acquire lock exception  with cause throwable

112.2. Add a class for can not serialize transaction exception. It allows to:

	Instantiate can not serialize transaction exception;
	Instantiate can not serialize transaction exception  with cause throwable

112.3. Add a class for cleanup failure data access exception. It allows to:

	Instantiate cleanup failure data access exception  with cause throwable

112.4. Add a class for concurrency failure exception. It allows to:

	Instantiate concurrency failure exception;
	Instantiate concurrency failure exception  with cause throwable

112.5. Add a class for data access exception. It allows to:

	Instantiate data access exception;
	Instantiate data access exception  with cause throwable

112.6. Add a class for data access resource failure exception. It allows to:

	Instantiate data access resource failure exception;
	Instantiate data access resource failure exception  with cause throwable

112.7. Add a class for data integrity violation exception. It allows to:

	Instantiate data integrity violation exception;
	Instantiate data integrity violation exception  with cause throwable

112.8. Add a class for data retrieval failure exception. It allows to:

	Instantiate data retrieval failure exception;
	Instantiate data retrieval failure exception  with cause throwable

112.9. Add a class for deadlock loser data access exception. It allows to:

	Instantiate deadlock loser data access exception  with cause throwable

112.10. Add a class for duplicate key exception. It allows to:

	Instantiate duplicate key exception;
	Instantiate duplicate key exception  with cause throwable

112.11. Add a class for empty result data access exception. It allows to:

	Instantiate empty result data access exception;
	Instantiate empty result data access exception  with ex throwable

112.12. Add a class for incorrect result size data access exception. It allows to:

	Instantiate incorrect result size data access exception;
	Instantiate incorrect result size data access exception  with ex throwable;
	Get expected size;
	Get actual size

112.13. Add a class for incorrect update semantics data access exception. It allows to:

	Instantiate incorrect update semantics data access exception;
	Instantiate incorrect update semantics data access exception  with cause throwable;
	Get was data updated

112.14. Add a class for invalid data access api usage exception. It allows to:

	Instantiate invalid data access api usage exception;
	Instantiate invalid data access api usage exception  with cause throwable

112.15. Add a class for invalid data access resource usage exception. It allows to:

	Instantiate invalid data access resource usage exception;
	Instantiate invalid data access resource usage exception  with cause throwable

112.16. Add a class for non transient data access exception. It allows to:

	Instantiate non transient data access exception;
	Instantiate non transient data access exception  with cause throwable

112.17. Add a class for non transient data access resource exception. It allows to:

	Instantiate non transient data access resource exception;
	Instantiate non transient data access resource exception  with cause throwable

112.18. Add a class for optimistic locking failure exception. It allows to:

	Instantiate optimistic locking failure exception;
	Instantiate optimistic locking failure exception  with cause throwable

112.19. Add a class for permission denied data access exception. It allows to:

	Instantiate permission denied data access exception  with cause throwable

112.20. Add a class for pessimistic locking failure exception. It allows to:

	Instantiate pessimistic locking failure exception;
	Instantiate pessimistic locking failure exception  with cause throwable

112.21. Add a class for query timeout exception. It allows to:

	Instantiate query timeout exception;
	Instantiate query timeout exception  with cause throwable

112.22. Add a class for recoverable data access exception. It allows to:

	Instantiate recoverable data access exception;
	Instantiate recoverable data access exception  with cause throwable

112.23. Add a class for transient data access exception. It allows to:

	Instantiate transient data access exception;
	Instantiate transient data access exception  with cause throwable

112.24. Add a class for transient data access resource exception. It allows to:

	Instantiate transient data access resource exception;
	Instantiate transient data access resource exception  with cause throwable

112.25. Add a class for type mismatch data access exception. It allows to:

	Instantiate type mismatch data access exception;
	Instantiate type mismatch data access exception  with cause throwable

112.26. Add a class for uncategorized data access exception. It allows to:

	Instantiate uncategorized data access exception  with cause throwable

113. Changes to package org.springframework.dao.annotation:  

113.1. Add a class for persistence exception translation advisor. It allows to:

	Instantiate persistence exception translation advisor  with persistence exception translator, repository annotation type class and repository annotation type class;
	Instantiate persistence exception translation advisor  with listable bean factory, repository annotation type class and repository annotation type class;
	Get advice;
	Get pointcut

113.2. Add a class for persistence exception translation interceptor tests. It allows to:

	Add persistence exception translation

113.3. Add a class for persistence exception translation post processor. It allows to:

	Set repository annotation type;
	Set bean factory

114. Changes to package org.springframework.dao.support:  

114.1. Add a class for chained persistence exception translator. It allows to:

	Add delegate;
	Get delegates;
	Translate exception  if possible

114.2. Add a class for chained persistence exception translator tests. It allows to:

	Handle empty;
	Handle exception translation with translation

114.3. Add a class for dao support. It allows to:

	Handle after properties set;
	Check dao config;
	Handle init dao

114.4. Add a class for data access utils. It allows to:

	Handle single result;
	Get required single result;
	Handle nullable single result;
	Handle unique result;
	Get required unique result;
	Object result;
	Handle int result;
	Handle long result;
	Translate raw exception if necessary

114.5. Add a class for persistence exception translation interceptor. It allows to:

	Instantiate persistence exception translation interceptor;
	Instantiate persistence exception translation interceptor  with pet persistence exception translator;
	Instantiate persistence exception translation interceptor  with listable bean factory;
	Set persistence exception translator;
	Set persistence exception translation interceptor always translate;
	Set bean factory;
	Handle after properties set;
	Invoke mi method invocation;
	Detect persistence exception translators

114.6. Add an interface declaration  for persistence exception translator. It allows to:

	Translate exception  if possible

115. Changes to package org.springframework.ejb.access:  

115.1. Add a class for abstract remote slsb invoker interceptor. It allows to:

	Set refresh home  on connect failure;
	Check if abstract remote slsb invoker interceptor is home refreshable;
	Get create method;
	Invoke method invocation in context;
	Check if abstract remote slsb invoker interceptor is connect failure;
	Handle remote connect failure;
	Refresh method invocation;
	Invoke method invocation;
	Handle new session bean instance;
	Remove session bean instance

115.2. Add a class for abstract slsb invoker interceptor. It allows to:

	Set lookup home  on startup;
	Set cache home;
	Set expose access context;
	Handle after properties set;
	Refresh home;
	Get create method;
	Get home;
	Check if abstract slsb invoker interceptor is home refreshable;
	Invoke method invocation;
	Invoke method invocation in context;
	Create abstract slsb invoker interceptor

115.3. Add a class for ejb access exception. It allows to:

	Instantiate ejb access exception;
	Instantiate ejb access exception  with cause throwable

115.4. Add a class for local slsb invoker interceptor. It allows to:

	Invoke method invocation in context;
	Get create method;
	Get session bean instance;
	Release session bean instance;
	Handle new session bean instance;
	Remove session bean instance

115.5. Add a class for local stateless session proxy factory bean. It allows to:

	Set business interface;
	Get business interface;
	Set bean class loader;
	Handle after properties set;
	Get object;
	Get object type;
	Check if local stateless session proxy factory bean is singleton

115.6. Add a class for simple remote slsb invoker interceptor. It allows to:

	Set cache session bean;
	Invoke method invocation;
	Get session bean instance;
	Release session bean instance;
	Refresh home;
	Destroy simple remote slsb invoker interceptor

115.7. Add a class for simple remote stateless session proxy factory bean. It allows to:

	Set business interface;
	Get business interface;
	Set bean class loader;
	Handle after properties set;
	Get object;
	Get object type;
	Check if simple remote stateless session proxy factory bean is singleton

116. Changes to package org.springframework.ejb.config:  

116.1. Add a class for abstract jndi locating bean definition parser. It allows to:

	Check if abstract jndi locating bean definition parser is eligible attribute;
	Post process

116.2. Add a class for jee namespace handler. It allows to:

	Handle init

116.3. Add a class for jee namespace handler event tests. It allows to:

	Set jee namespace handler event tests;
	Handle test jndi lookup component event received;
	Handle test local slsb component event received;
	Handle test remote slsb component event received

116.4. Add a class for jee namespace handler tests. It allows to:

	Set jee namespace handler tests;
	Handle test simple definition;
	Handle test complex definition;
	Handle test with environment;
	Handle test with referenced environment;
	Handle test simple local slsb;
	Handle test simple remote slsb;
	Handle test complex local slsb;
	Handle test complex remote slsb;
	Handle test lazy init jndi lookup;
	Assert property value

116.5. Add a class for jndi lookup bean definition parser. It allows to:

	Get bean class;
	Check if jndi lookup bean definition parser is eligible attribute;
	Parse element

116.6. Add a class for local stateless session bean definition parser. It allows to:

	Get bean class name

116.7. Add a class for remote stateless session bean definition parser. It allows to:

	Get bean class name

117. Changes to package org.springframework.expression:  

117.1. Add a class for access exception. It allows to:

	Instantiate access exception;
	Instantiate access exception  with cause exception

117.2. Add an interface declaration  for bean resolver. It allows to:

	Resolve evaluation context

117.3. Add an interface declaration  for constructor executor. It allows to:

	Execute evaluation context

117.4. Add an interface declaration  for constructor resolver. It allows to:

	Resolve evaluation context

117.5. Add an interface declaration  for evaluation context. It allows to:

	Get root object;
	Get property accessors;
	Get constructor resolvers;
	Get method resolvers;
	Get bean resolver;
	Get type locator;
	Get type converter;
	Get type comparator;
	Get operator overloader;
	Set variable;
	Lookup variable

117.6. Add a class for evaluation exception. It allows to:

	Instantiate evaluation exception;
	Instantiate evaluation exception  with cause throwable;

117.7. Add an interface declaration  for expression. It allows to:

	Get expression string;
	Get value;
	Get value type;
	Get value type descriptor;
	Check if expression is writable;
	Get set value;

117.8. Add a class for expression exception. It allows to:

	Instantiate expression exception;
	Instantiate expression exception  with cause throwable;
	Get expression string;
	Get position;
	Get message;
	Convert expression exception to detailed string;
	Get simple message

117.9. Add a class for expression invocation target exception. It allows to:

	Instantiate expression invocation target exception  with cause throwable;
	Instantiate expression invocation target exception;

117.10. Add an interface declaration  for expression parser. It allows to:

	Parse expression;

117.11. Add an interface declaration  for method executor. It allows to:

	Execute evaluation context

117.12. Add an interface declaration  for method filter. It allows to:

	Get filter

117.13. Add an interface declaration  for method resolver. It allows to:

	Resolve evaluation context

117.14. Add an interface declaration  for operator overloader. It allows to:

	Handle overrides operation;
	Operate operation

117.15. Add a class for parse exception. It allows to:

	Instantiate parse exception;
	Instantiate parse exception  with cause throwable;

117.16. Add an interface declaration  for parser context. It allows to:

	Check if parser context is template;
	Get expression prefix;
	Get expression suffix;
	Check if  is template;

117.17. Add an interface declaration  for property accessor. It allows to:

	Get specific target classes;
	Read evaluation context;
	Write evaluation context;

117.18. Add an interface declaration  for type comparator. It allows to:

	Compare type comparator;

117.19. Add an interface declaration  for type converter. It allows to:

	Convert source type descriptor;
	Convert value

117.20. Add an interface declaration  for type locator. It allows to:

	Find type

117.21. Add a class for typed value. It allows to:

	Instantiate typed value;
	Instantiate typed value  with type descriptor;
	Get value;
	Get type descriptor;
	Check if typed value equals;
	Hash code;
	Convert typed value to string

118. Changes to package org.springframework.expression.common:  

118.1. Add a class for composite string expression. It allows to:

	Instantiate composite string expression  with expressions;
	Get expression string;
	Get expressions;
	Get value;
	Get value type;
	Get value type descriptor;
	Check if composite string expression is writable;
	Get set value;

118.2. Add a class for expression utils. It allows to:

	Convert typed value;
	Convert expression utils to int;
	Convert expression utils to boolean;
	Convert expression utils to double;
	Convert expression utils to long;
	Convert expression utils to char;
	Convert expression utils to short;
	Convert expression utils to float;
	Convert expression utils to byte;
	Convert value

118.3. Add a class for literal expression. It allows to:

	Instantiate literal expression;
	Get expression string;
	Get value type;
	Get value;
	Get value type descriptor;
	Check if literal expression is writable;
	Get set value;

118.4. Add a class for template parser context. It allows to:

	Instantiate template parser context;
	Check if template parser context is template;
	Get expression prefix;
	Get expression suffix

119. Changes to package org.springframework.expression.spel:  

119.1. Add a class for abstract expression tests. It allows to:

	Evaluate expected result type class;
	Evaluate and ask  for return type;
	Evaluate expected class of result;
	Evaluate and check error;
	Parse and check error;
	String value  of;

119.2. Add a class for array constructor tests. It allows to:

	Handle simple array with initializer;
	Handle conversion;
	Handle multidimensional arrays;
	Handle primitive type array constructors;
	Handle primitive type array constructors elements;
	Handle error cases;
	Handle type array constructors;
	Handle basic array;
	Handle multi dimensional array;
	Handle constructor invocation 03;
	Handle constructor invocation 04;
	Evaluate array building expression

119.3. Add a class for boolean expression tests. It allows to:

	Handle test boolean true;
	Handle test boolean false;
	Handle test or;
	Handle test and;
	Handle test not;
	Handle test combinations 01;
	Handle test writability;
	Handle test boolean errors 01;
	Handle test convert and handle null;
	Convert null source

119.4. Add an interface declaration  for compilable property accessor. It allows to:

	Check if compilable property accessor is compilable;
	Get property type;
	Generate code

119.5. Add a class for compiled expression. It allows to:

	Get value

119.6. Add a class for default comparator unit tests. It allows to:

	Handle test primitives;
	Handle test non primitive numbers;
	Handle test nulls;
	Handle test objects;
	Handle test can compare

119.7. Add a class for expression state tests. It allows to:

	Handle test construction;
	Handle test local variables;
	Handle test variables;
	Handle test no variable interference;
	Handle test local variable nested scopes;
	Handle test root context object;
	Test active context object;
	Handle test populated nested scopes;
	Handle test root object constructor;
	Handle test populated nested scopes map;
	Handle test operators;
	Handle test comparator;
	Handle test type locator;
	Handle test type conversion;
	Handle test property accessors;
	Get state;
	Get context

119.8. Add a class for in progress tests. It allows to:

	Handle test rel operators between 01;
	Handle test rel operators between errors 01;
	Handle test rel operators between errors 03;
	Handle test projection 01;
	Handle test projection 02;
	Handle test projection 05;
	Handle test projection 06;
	Handle test selection 02;
	Handle test selection error non boolean selection criteria;
	Handle test selection 03;
	Handle test selection 04;
	Handle test selection 05;
	Handle test selection first 01;
	Handle test selection first 02;
	Handle test selection last 01;
	Handle test selection last 02;
	Handle test selection AST;
	Handle test set construction 01

119.9. Add a class for internal parse exception. It allows to:

	Instantiate internal parse exception  with cause spel parse exception;
	Get cause

119.10. Add a class for list tests. It allows to:

	Handle test inline list creation 01;
	Handle test inline list creation 02;
	Handle test inline list creation 03;
	Handle test inline list creation 04;
	Handle test inline list and nesting;
	Handle test inline list error;
	Handle test rel operators is 02;
	Handle test inline list creation 05;
	Handle test inline list creation 06;
	Handle test inline list and projection selection;
	Handle test set construction 01;
	Handle test rel operators between 01;
	Handle test rel operators between 02;
	Handle test rel operators between 03;
	Handle test rel operators between 04;
	Handle test rel operators between errors 02;
	Handle test constant representation 1;
	Check constant list;
	Handle test inline list writing

119.11. Add a class for literal tests. It allows to:

	Handle test literal boolean 01;
	Handle test literal boolean 02;
	Handle test literal integer 01;
	Handle test literal integer 02;
	Handle test literal string 01;
	Handle test literal string 02;
	Handle test literal string 03;
	Handle test literal string 04;
	Handle test literal string 05;
	Handle test literal string 06;
	Handle test hex int literal 01;
	Handle test long int literal 01;
	Handle test long int interactions 01;
	Handle test signed int literals;
	Handle test literal real 01 creating doubles;
	Handle test literal real 02 creating floats;
	Handle test literal real 03 using exponents;
	Handle test literal real 04 bad expressions;
	Handle test literal null 01;
	Handle test conversions;
	Handle test not writable

119.12. Add a class for parser error messages tests. It allows to:

	Test broken expression 01;
	Test broken expression 02;
	Test broken expression 04;
	Test broken expression 05;
	Test broken expression 07

119.13. Add a class for parsing tests. It allows to:

	Handle test literal boolean 01;
	Handle test literal long 01;
	Handle test literal boolean 02;
	Handle test literal boolean 03;
	Handle test literal integer 01;
	Handle test literal integer 02;
	Handle test literal string 01;
	Handle test literal string 02;
	Handle test literal string 03;
	Handle test literal real 01;
	Handle test literal hex 01;
	Handle test literal date 01;
	Handle test literal date 02;
	Handle test literal null 01;
	Handle test boolean operators or 01;
	Handle test boolean operators or 02;
	Handle test boolean operators or 03;
	Handle test boolean operators or 04;
	Handle test boolean operators mix 01;
	Handle test rel operators GT 01;
	Handle test rel operators LT 01;
	Handle test rel operators LE 01;
	Handle test rel operators GE 01;
	Handle test rel operators GE 02;
	Handle test elvis;
	Handle test rel operators is 01;
	Handle test rel operators matches 01;
	Handle test rel operators matches 02;
	Handle test math operators add 01;
	Handle test math operators add 02;
	Handle test math operators add 03;
	Handle test math operators subtract 01;
	Handle test math operators multiply 01;
	Handle test math operators divide 01;
	Handle test math operator modulus 01;
	Handle test mixed operators 01;
	Handle test references 01;
	Handle test references 03;
	Handle test properties 01;
	Handle test properties 02;
	Handle test properties 03;
	Handle test inline list creation 01;
	Handle test inline list creation 02;
	Handle test inline map creation 01;
	Handle test inline map creation 02;
	Handle test methods 01;
	Handle test methods 02;
	Handle test methods 03;
	Handle test constructors 01;
	Handle test variables 01;
	Handle test functions 01;
	Handle test functions 02;
	Convert test assignment;
	Handle test ternary operator 01;
	Handle test type references 01;
	Handle test type references 02;
	Handle test inline list 1;
	Parse check;

119.14. Add a class for performance tests. It allows to:

	Handle test performance of property access;
	Handle test performance of method access

119.15. Add a class for set value tests. It allows to:

	Handle test set property;
	Handle test set nested property;
	Handle test set array element value;
	Handle test error case;
	Handle test set element of null;
	Handle test set array element value all primitive types;
	Handle test is writable for invalid expressions SPR 10610;
	Handle test set array element value all primitive types errors;
	Handle test set array element nested value;
	Handle test set list element value;
	Handle test set generic list element value type coersion;
	Handle test set generic list element value type coersion OK;
	Handle test set list element nested value;
	Handle test set array element invalid index;
	Handle test set map elements;
	Handle test indexing into unsupported type;
	Handle test set property type coersion;
	Handle test set property type coersion through setter;
	Handle test assign;
	Handle test set generic map element requires coercion;
	Parse set value tests;
	Get set value expect error;
	Get set value;

119.16. Add a class for spel evaluation exception. It allows to:

	Instantiate spel evaluation exception  with spel message;
	Instantiate spel evaluation exception  with cause throwable, spel message and spel message;
	Set position;
	Get message code;
	Get inserts

119.17. Add an interface declaration  for spel node. It allows to:

	Get value;
	Get typed value;
	Check if spel node is writable;
	Get set value;
	Convert spel node to string AST;
	Get child count;
	Get child;
	Get object class;
	Get start position;
	Get end position

119.18. Add a class for spel parse exception. It allows to:

	Instantiate spel parse exception  with spel message;
	Instantiate spel parse exception  with cause throwable, spel message and spel message;
	Get message code;
	Get inserts

119.19. Add a class for spel parser configuration. It allows to:

	Instantiate spel parser configuration;
	Instantiate spel parser configuration  with spel compiler mode, compiler class loader and compiler class loader;
	Get compiler mode;
	Get compiler class loader;
	Check if spel parser configuration is auto grow null references;
	Check if spel parser configuration is auto grow collections;
	Get maximum auto grow size

119.20. Add a class for spel utilities. It allows to:

	Print abstract syntax tree;
	Print AST

119.21. Add a class for standard type locator tests. It allows to:

	Handle test imports

119.22. Add a class for test scenario creator. It allows to:

	Get test evaluation context;
	Populate functions;
	Populate variables;
	Handle setup root context object;
	Check if test scenario creator is even;
	Reverse int;
	Reverse string;
	Get varargs function reverse strings and merge;
	Convert varargs function reverse strings and merge

119.23. Add a class for variable and function tests. It allows to:

	Handle test variable access 01;
	Handle test variable access well known variables;
	Handle test function access 01;
	Handle test function access 02;
	Handle test call varargs function;
	Handle test calling illegal functions;
	Non static

120. Changes to package org.springframework.expression.spel.ast:  

120.1. Add a class for assign. It allows to:

	Instantiate assign  with operands spel node impl;
	Get value internal;
	Convert assign to string AST

120.2. Add a class for ast utils. It allows to:

	Get property accessors  to try

120.3. Add a class for bean reference. It allows to:

	Instantiate bean reference;
	Get value internal;
	Convert bean reference to string AST

120.4. Add a class for boolean literal. It allows to:

	Instantiate boolean literal;
	Get literal value;
	Check if boolean literal is compilable;
	Generate code

120.5. Add a class for compound expression. It allows to:

	Instantiate compound expression  with expression components spel node impl;
	Get value ref;
	Get value internal;
	Get set value;
	Check if compound expression is writable;
	Convert compound expression to string AST;
	Check if compound expression is compilable;
	Generate code

120.6. Add a class for constructor reference. It allows to:

	Instantiate constructor reference  with arguments spel node impl;
	Instantiate constructor reference  with dimensions spel node impl, arguments spel node impl and arguments spel node impl;
	Get value internal;
	Create new instance;
	Find executor  for constructor;
	Convert constructor reference to string AST;
	Create array;
	Populate reference type array;
	Populate byte array;
	Populate float array;
	Populate double array;
	Populate short array;
	Populate expression state long array;
	Populate char array;
	Populate boolean array;
	Populate int array;
	Check if constructor reference has initializer;
	Check if constructor reference is compilable;
	Generate code

120.7. Add a class for elvis. It allows to:

	Instantiate elvis  with args spel node impl;
	Get value internal;
	Convert elvis to string AST;
	Check if elvis is compilable;
	Generate code;
	Compute exit type descriptor

120.8. Add a class for float literal. It allows to:

	Instantiate float literal;
	Get literal value;
	Check if float literal is compilable;
	Generate code

120.9. Add a class for format helper. It allows to:

	Get format method for message;
	Get format class name for message

120.10. Add a class for format helper tests. It allows to:

	Handle format method with single argument for message;
	Handle format method with multiple arguments for message

120.11. Add a class for function reference. It allows to:

	Instantiate function reference  with arguments spel node impl;
	Get value internal;
	Execute function JLR method;
	Convert function reference to string AST;
	Get arguments;
	Check if function reference is compilable;
	Generate code

120.12. Add a class for identifier. It allows to:

	Instantiate identifier;
	Convert identifier to string AST;
	Get value internal

120.13. Add a class for inline list. It allows to:

	Instantiate inline list  with args spel node impl;
	Check inline list if constant;
	Get value internal;
	Convert inline list to string AST;
	Check if inline list is constant;
	Get constant value;
	Check if inline list is compilable;
	Generate code;
	Generate clinit code

120.14. Add a class for inline map. It allows to:

	Instantiate inline map  with args spel node impl;
	Check inline map if constant;
	Get value internal;
	Convert inline map to string AST;
	Check if inline map is constant;
	Get constant value

120.15. Add a class for int literal. It allows to:

	Instantiate int literal;
	Get literal value;
	Check if int literal is compilable;
	Generate code

120.16. Add a class for literal. It allows to:

	Instantiate literal;
	Get original value;
	Get value internal;
	Convert literal to string;
	Convert literal to string AST;
	Get literal value;
	Get literal int literal;
	Get literal long literal;
	Get real literal

120.17. Add a class for long literal. It allows to:

	Instantiate long literal;
	Get literal value;
	Check if long literal is compilable;
	Generate code

120.18. Add a class for null literal. It allows to:

	Instantiate null literal;
	Get literal value;
	Convert null literal to string;
	Check if null literal is compilable;
	Generate code

120.19. Add a class for op and. It allows to:

	Instantiate op and  with operands spel node impl;
	Get value internal;
	Get boolean value;
	Assert value  not null;
	Check if op and is compilable;
	Generate code

120.20. Add a class for op dec. It allows to:

	Instantiate op dec  with operands spel node impl;
	Get value internal;
	Convert op dec to string AST;
	Get right operand

120.21. Add a class for op divide. It allows to:

	Instantiate op divide  with operands spel node impl;
	Get value internal;
	Check if op divide is compilable;
	Generate code

120.22. Add a class for op EQ. It allows to:

	Instantiate op EQ  with operands spel node impl;
	Get value internal;
	Check if op EQ is compilable;
	Generate code

120.23. Add a class for op GE. It allows to:

	Instantiate op GE  with operands spel node impl;
	Get value internal;
	Check if op GE is compilable;
	Generate code

120.24. Add a class for op GT. It allows to:

	Instantiate op GT  with operands spel node impl;
	Get value internal;
	Check if op GT is compilable;
	Generate code

120.25. Add a class for op inc. It allows to:

	Instantiate op inc  with operands spel node impl;
	Get value internal;
	Convert op inc to string AST;
	Get right operand

120.26. Add a class for op LE. It allows to:

	Instantiate op LE  with operands spel node impl;
	Get value internal;
	Check if op LE is compilable;
	Generate code

120.27. Add a class for op LT. It allows to:

	Instantiate op LT  with operands spel node impl;
	Get value internal;
	Check if op LT is compilable;
	Generate code

120.28. Add a class for op minus. It allows to:

	Instantiate op minus  with operands spel node impl;
	Get value internal;
	Convert op minus to string AST;
	Get right operand;
	Check if op minus is compilable;
	Generate code

120.29. Add a class for op modulus. It allows to:

	Instantiate op modulus  with operands spel node impl;
	Get value internal;
	Check if op modulus is compilable;
	Generate code

120.30. Add a class for op multiply. It allows to:

	Instantiate op multiply  with operands spel node impl;
	Get value internal;
	Check if op multiply is compilable;
	Generate code

120.31. Add a class for op NE. It allows to:

	Instantiate op NE  with operands spel node impl;
	Get value internal;
	Check if op NE is compilable;
	Generate code

120.32. Add a class for op or. It allows to:

	Instantiate op or  with operands spel node impl;
	Get value internal;
	Get boolean value;
	Assert value  not null;
	Check if op or is compilable;
	Generate code

120.33. Add a class for op plus. It allows to:

	Instantiate op plus  with operands spel node impl;
	Get value internal;
	Convert op plus to string AST;
	Get right operand;
	Convert typed value  to string;
	Check if op plus is compilable;
	Walk mv method visitor;
	Generate code

120.34. Add a class for op plus tests. It allows to:

	Handle test empty operands;
	Handle test unary plus with string literal;
	Handle test unary plus with number operand;
	Handle test binary plus with number operands;
	Handle test binary plus with string operands;
	Handle test binary plus with left string operand;
	Handle test binary plus with right string operand;
	Convert test binary plus with time;
	Handle test binary plus with time converted

120.35. Add a class for operator between. It allows to:

	Instantiate operator between  with operands spel node impl;
	Get value internal

120.36. Add a class for operator instanceof. It allows to:

	Instantiate operator instanceof  with operands spel node impl;
	Get value internal;
	Check if operator instanceof is compilable;
	Generate code

120.37. Add a class for operator not. It allows to:

	Instantiate operator not  with operand spel node impl;
	Get value internal;
	Convert operator not to string AST;
	Check if operator not is compilable;
	Generate code

120.38. Add an object creator class for operator power. It allows to:

	Instantiate operator power  with operands spel node impl;
	Get value internal

120.39. Add a class for projection. It allows to:

	Instantiate projection  with expression spel node impl;
	Get value internal;
	Get value ref;
	Convert projection to string AST;
	Determine common type

120.40. Add a class for qualified identifier. It allows to:

	Instantiate qualified identifier  with operands spel node impl;
	Get value internal;
	Convert qualified identifier to string AST

120.41. Add a class for real literal. It allows to:

	Instantiate real literal;
	Get literal value;
	Check if real literal is compilable;
	Generate code

120.42. Add a class for selection. It allows to:

	Instantiate selection  with expression spel node impl;
	Get value internal;
	Get value ref;
	Convert selection to string AST;
	Prefix selection

120.43. Add a class for spel node impl. It allows to:

	Instantiate spel node impl  with operands spel node impl;
	Handle next child is;
	Get value;
	Get typed value;
	Check if spel node impl is writable;
	Get set value;
	Get child;
	Get child count;
	Get object class;
	Get start position;
	Get end position;
	Check if spel node impl is compilable;
	Generate code;
	Get exit descriptor;
	Get value ref;
	Get value internal;
	Generate code  for arguments;
	Generate code  for argument

120.44. Add a class for string literal. It allows to:

	Instantiate string literal;
	Get literal value;
	Convert string literal to string;
	Check if string literal is compilable;
	Generate code

120.45. Add a class for ternary. It allows to:

	Instantiate ternary  with args spel node impl;
	Get value internal;
	Convert ternary to string AST;
	Compute exit type descriptor;
	Check if ternary is compilable;
	Generate code

120.46. Add a class for type reference. It allows to:

	Instantiate type reference  with qualified id spel node impl;
	Get value internal;
	Make array  if necessary;
	Convert type reference to string AST;
	Check if type reference is compilable;
	Generate code

121. Changes to package org.springframework.expression.spel.spr10210:  

121.1. Add a class for a. It allows to:

	Bridge method

121.2. Add a class for d

122. Changes to package org.springframework.expression.spel.spr10210.comp:  

122.1. Add a class for b

123. Changes to package org.springframework.expression.spel.spr10210.infra:  

123.1. Add an interface declaration  for c

124. Changes to package org.springframework.expression.spel.standard:  

124.1. Add a class for internal spel expression parser. It allows to:

	Instantiate internal spel expression parser  with spel parser configuration;
	Do parse expression;
	Eat expression;
	Eat logical or expression;
	Eat logical and expression;
	Eat relational expression;
	Eat sum expression;
	Eat product expression;
	Eat power inc dec expression;
	Eat unary expression;
	Eat primary expression;
	Eat node;
	Eat non dotted node;
	Eat dotted node;
	Maybe eat function or var;
	Maybe eat method args;
	Eat constructor args;
	Consume arguments;
	Get position of;
	Eat start node;
	Maybe eat bean reference;
	Maybe eat type reference;
	Maybe eat null reference;
	Maybe eat projection;
	Maybe eat inline list or map;
	Maybe eat indexer;
	Maybe eat selection;
	Eat internal spel expression parser possibly qualified id;
	Check if internal spel expression parser is valid qualified id;
	Maybe eat method or property;
	Maybe eat constructor reference;
	Push new node impl;
	Get pop;
	Maybe eat literal;
	Maybe eat paren expression;
	Maybe eat relational operator;
	Eat token;
	Handle peek token;
	Handle peek identifier token;
	Handle peek select token;
	Take token;
	Handle next token;
	Get peek token;
	Convert internal spel expression parser to string;
	Check operands;
	Check left operand;
	Check right operand;
	Handle internal exception

124.2. Add a class for spel expression. It allows to:

	Instantiate spel expression  with ast spel node impl, spel parser configuration and spel parser configuration;
	Set evaluation context;
	Get evaluation context;
	Get expression string;
	Get value;
	Get value type;
	Get value type descriptor;
	Check if spel expression is writable;
	Get set value;
	Compile expression state;
	Compile expression;
	Revert spel expression to interpreted;
	Get AST;
	Convert spel expression to string AST;
	Convert spel expression to typed value

124.3. Add a class for spel expression parser. It allows to:

	Instantiate spel expression parser;
	Instantiate spel expression parser  with spel parser configuration;
	Parse raw;
	Do parse expression

124.4. Add a class for spel parser tests. It allows to:

	The most basic;
	Handle value type;
	Handle whitespace;
	Handle arithmetic plus 1;
	Convert arithmetic plus;
	Handle arithmetic multiply 1;
	Handle arithmetic precedence 1;
	Handle general expressions;
	Convert arithmetic precedence;
	Handle arithmetic precedence 3;
	Handle arithmetic precedence 4;
	Handle arithmetic precedence 5;
	Handle arithmetic precedence 6;
	Handle boolean operators;
	Handle boolean operators symbolic spr 9614;
	String literals;
	String literals 2;
	Handle test string literals double quotes spr 9620;
	Convert test string literals double quotes spr 9620;
	Handle positional information;
	Handle token kind;
	Handle token;
	Handle exceptions;
	Parse methods  on numbers;
	Handle numerics;
	Check number;
	Check number error

124.5. Add a class for token. It allows to:

	Instantiate token  with token kind;
	Get kind;
	Check if token is identifier;
	Check if token is numeric relational operator;
	String value;
	Process token token as instance of token;
	Process token token as matches token;
	Process token token as between token;
	Convert token to string

124.6. Add a class for tokenizer. It allows to:

	Instantiate tokenizer;
	Get process;
	Lex quoted string literal;
	Lex double quoted string literal;
	Lex numeric literal;
	Lex identifier;
	Push int token;
	Push hex int token;
	Push real token;
	Get subarray;
	Check if tokenizer is two char token;
	Push char token;
	Push pair token;
	Push one char or two char token;
	Check if tokenizer is identifier;
	Check if tokenizer is char;
	Check if tokenizer is exponent char;
	Check if tokenizer is float suffix;
	Check if tokenizer is double suffix;
	Check if tokenizer is sign;
	Check if tokenizer is digit;
	Check if tokenizer is alphabetic;
	Check if tokenizer is hexadecimal digit;
	Check if tokenizer is exhausted;
	Raise parse exception

125. Changes to package org.springframework.expression.spel.support:  

125.1. Add a class for bean factory type converter. It allows to:

	Instantiate bean factory type converter;
	Instantiate bean factory type converter  with conversion service;
	Set conversion service;
	Set bean factory;
	Convert source type class;
	Convert source type descriptor;
	Convert value

125.2. Add a class for boolean typed value. It allows to:

	Instantiate boolean typed value;
	Process boolean typed value boolean typed value for value

125.3. Add a class for reflective constructor executor. It allows to:

	Instantiate reflective constructor executor  with constructor;
	Execute evaluation context;
	Get constructor

125.4. Add an object creator class for reflective constructor resolver. It allows to:

	Resolve evaluation context

125.5. Add a class for reflective method executor. It allows to:

	Instantiate reflective method executor  with method;
	Get method;
	Get public declaring class;
	Discover public declaring class;
	Get did argument conversion occur;
	Execute evaluation context

125.6. Add a class for reflective method resolver. It allows to:

	Instantiate reflective method resolver;
	Register method filter;
	Resolve evaluation context;
	Get methods;
	Check if reflective method resolver is candidate for invocation

125.7. Add a class for standard components tests. It allows to:

	Test standard evaluation context;
	Test standard operator overloader;
	Test standard type locator;
	Test standard type converter

125.8. Add a class for standard evaluation context. It allows to:

	Instantiate standard evaluation context;
	Set root object;
	Get root object;
	Set property accessors;
	Get property accessors;
	Add property accessor;
	Remove property accessor;
	Set constructor resolvers;
	Get constructor resolvers;
	Add constructor resolver;
	Remove constructor resolver;
	Set method resolvers;
	Get method resolvers;
	Add method resolver;
	Remove method resolver;
	Set bean resolver;
	Get bean resolver;
	Set type locator;
	Get type locator;
	Set type converter;
	Get type converter;
	Set type comparator;
	Get type comparator;
	Set operator overloader;
	Get operator overloader;
	Set variable;
	Set variables;
	Register function;
	Lookup variable;
	Register method filter;
	Handle init property accessors;
	Handle init constructor resolvers;
	Handle init method resolvers;
	Add resolvers list before default

125.9. Add a class for standard operator overloader. It allows to:

	Handle overrides operation;
	Operate operation

125.10. Add a class for standard type comparator. It allows to:

	Compare standard type comparator;

125.11. Add a class for standard type converter. It allows to:

	Instantiate standard type converter;
	Instantiate standard type converter  with conversion service;
	Convert source type descriptor;
	Convert value

125.12. Add a class for standard type locator. It allows to:

	Instantiate standard type locator;
	Instantiate standard type locator  with class loader;
	Register import;
	Remove import;
	Get import prefixes;
	Find type

126. Changes to package org.springframework.expression.spel.testdata:  

126.1. Add a class for person in other package. It allows to:

	Instantiate person in other package;
	Get age;
	Set age

127. Changes to package org.springframework.expression.spel.testresources:  

127.1. Add a class for array container. It allows to:

	Instantiate array container

127.2. Add a class for company. It allows to:

	Instantiate company;
	Get address

127.3. Add a class for fruit. It allows to:

	Instantiate fruit  with color;
	Get color;
	Instantiate fruit;
	Get stringscount;
	Convert fruit to string

127.4. Add a class for person. It allows to:

	Instantiate person;
	Instantiate person  with company;
	Get name;
	Set name;
	Get company

127.5. Add a class for place of birth. It allows to:

	Convert place of birth to string;
	Get city;
	Set city;
	Instantiate place of birth;
	Double place of birth;
	Check if place of birth equals;
	Hash code

127.6. Add a class for test address. It allows to:

	Get street;
	Set street;
	Get cross streets;
	Set cross streets

127.7. Add a class for test person. It allows to:

	Get name;
	Set name;
	Get address;
	Set address

128. Changes to package org.springframework.expression.spel.testresources.le.div.mod.reserved:  

128.1. Add a class for reserver

129. Changes to package org.springframework.format:  

129.1. Add an interface declaration  for annotation formatter factory. It allows to:

	Get field types;
	Get printer;
	Get parser

129.2. Add an interface declaration  for formatter

129.3. Add an interface declaration  for formatter registrar. It allows to:

	Register formatters

129.4. Add an interface declaration  for formatter registry. It allows to:

	Add formatter;
	Add formatter  for field type;
	Add formatter  for field annotation

129.5. Add an interface declaration  for parser. It allows to:

	Parse locale

129.6. Add an interface declaration  for printer. It allows to:

	Get print

130. Changes to package org.springframework.format.datetime:  

130.1. Add a class for date formatter. It allows to:

	Instantiate date formatter;
	Set pattern;
	Set iso;
	Set style;
	Set style pattern;
	Set time zone;
	Set lenient;
	Get print;
	Parse locale;
	Get date format;
	Create date format;
	Get style pattern  for char

130.2. Add a class for date formatter tests. It allows to:

	Should print and parse default;
	Should print and parse  from pattern;
	Should print and parse short;
	Should print and parse medium;
	Should print and parse  long;
	Should print and parse full;
	Should print and parse ISO date;
	Should print and parse ISO time;
	Should print and parse ISO date time;
	Should support joda style patterns;
	Handle test joda style patterns;
	Should throw on unsupported style pattern;
	Should use correct order;
	Get date;

130.3. Add a class for date time format annotation formatter factory. It allows to:

	Get field types;
	Get printer;
	Get parser;
	Get formatter

131. Changes to package org.springframework.format.datetime.joda:  

131.1. Add a class for date time formatter factory. It allows to:

	Instantiate date time formatter factory;
	Set pattern;
	Set iso;
	Set style;
	Set time zone;
	Create date time formatter;

131.2. Add a class for date time formatter factory bean. It allows to:

	Handle after properties set;
	Get object;
	Get object type;
	Check if date time formatter factory bean is singleton

131.3. Add a class for date time formatter factory bean tests. It allows to:

	Check if date time formatter factory bean tests is singleton;
	Get object type;
	Get object;
	Get object is  always singleton

131.4. Add a class for date time formatter factory tests. It allows to:

	Create date time formatter;
	Create date time formatter  with pattern;
	Create date time formatter  with null fallback;
	Create date time formatter  with fallback;
	Create date time formatter  in order of property priority;
	Create date time formatter  with time zone;
	Apply locale

131.5. Add a class for date time parser. It allows to:

	Instantiate date time parser  with date time formatter;
	Parse locale

131.6. Add a class for duration formatter. It allows to:

	Parse locale;
	Get print

131.7. Add a class for joda date time format annotation formatter factory. It allows to:

	Get field types;
	Get printer;
	Get parser;
	Get formatter

131.8. Add a class for joda time context. It allows to:

	Set chronology;
	Get chronology;
	Set time zone;
	Get time zone;
	Get formatter

131.9. Add a class for joda time context holder. It allows to:

	Instantiate joda time context holder;
	Reset joda time context;
	Set joda time context;
	Get joda time context;
	Get formatter

131.10. Add a class for joda time formatter registrar. It allows to:

	Instantiate joda time formatter registrar;
	Get set use iso format;
	Set date style;
	Set time style;
	Set date time style;
	Set date formatter;
	Set time formatter;
	Set date time formatter;
	Register formatters;
	Get formatter;
	Get fallback formatter;
	Add formatter  for fields

131.11. Add a class for local date parser. It allows to:

	Instantiate local date parser  with date time formatter;
	Parse locale

131.12. Add a class for local date time parser. It allows to:

	Instantiate local date time parser  with date time formatter;
	Parse locale

131.13. Add a class for local time parser. It allows to:

	Instantiate local time parser  with date time formatter;
	Parse locale

131.14. Add a class for millisecond instant printer. It allows to:

	Instantiate millisecond instant printer  with date time formatter;
	Get print

131.15. Add a class for month day formatter. It allows to:

	Parse locale;
	Get print

131.16. Add a class for period formatter. It allows to:

	Parse locale;
	Get print

131.17. Add a class for readable instant printer. It allows to:

	Instantiate readable instant printer  with date time formatter;
	Get print

131.18. Add a class for readable partial printer. It allows to:

	Instantiate readable partial printer  with date time formatter;
	Get print

131.19. Add a class for year month formatter. It allows to:

	Parse locale;
	Get print

132. Changes to package org.springframework.format.datetime.standard:  

132.1. Add a class for date time context. It allows to:

	Set chronology;
	Get chronology;
	Set time zone;
	Get time zone;
	Get formatter

132.2. Add a class for date time context holder. It allows to:

	Instantiate date time context holder;
	Reset date time context;
	Set date time context;
	Get date time context;
	Get formatter

132.3. Add a class for date time formatter factory. It allows to:

	Instantiate date time formatter factory;
	Set pattern;
	Set iso;
	Set date style;
	Set time style;
	Set date time style;
	Set style pattern;
	Convert style character;
	Set time zone;
	Create date time formatter;

132.4. Add a class for date time formatter factory bean. It allows to:

	Handle after properties set;
	Get object;
	Get object type;
	Check if date time formatter factory bean is singleton

132.5. Add a class for date time formatter factory bean tests. It allows to:

	Check if date time formatter factory bean tests is singleton;
	Get object type;
	Get object;
	Get object is  always singleton

132.6. Add a class for date time formatter factory tests. It allows to:

	Create date time formatter;
	Create date time formatter  with pattern;
	Create date time formatter  with null fallback;
	Create date time formatter  with fallback;
	Create date time formatter  in order of property priority;
	Create date time formatter  with time zone;
	Apply locale

132.7. Add a class for date time formatter registrar. It allows to:

	Instantiate date time formatter registrar;
	Get set use iso format;
	Set date style;
	Set time style;
	Set date time style;
	Set date formatter;
	Set time formatter;
	Set date time formatter;
	Register formatters;
	Get formatter;
	Get fallback formatter

132.8. Add a class for duration formatter. It allows to:

	Parse locale;
	Get print

132.9. Add a class for instant formatter. It allows to:

	Parse locale;
	Get print

132.10. Add a class for jsr 310 date time format annotation formatter factory. It allows to:

	Get field types;
	Get printer;
	Get parser;
	Get formatter;
	Check if jsr 310 date time format annotation formatter factory is local

132.11. Add a class for month day formatter. It allows to:

	Parse locale;
	Get print

132.12. Add a class for period formatter. It allows to:

	Parse locale;
	Get print

132.13. Add a class for temporal accessor parser. It allows to:

	Instantiate temporal accessor parser  with temporal accessor type class, date time formatter and date time formatter;
	Parse locale

132.14. Add a class for temporal accessor printer. It allows to:

	Instantiate temporal accessor printer  with date time formatter;
	Get print

132.15. Add a class for year month formatter. It allows to:

	Parse locale;
	Get print

133. Changes to package org.springframework.format.number:  

133.1. Add a class for abstract number formatter. It allows to:

	Set lenient;
	Get print;
	Parse locale;
	Get number format

133.2. Add a class for currency style formatter. It allows to:

	Set fraction digits;
	Set rounding mode;
	Set currency;
	Set pattern;
	Parse locale;
	Get number format

133.3. Add a class for currency style formatter tests. It allows to:

	Handle format value;
	Parse value;
	Parse bogus value;
	Parse value default round  down;
	Parse whole value;
	Parse value  not lenient failure

133.4. Add a class for number format annotation formatter factory. It allows to:

	Get field types;
	Get printer;
	Get parser;
	Configure formatter  from annotation number format

133.5. Add a class for number style formatter. It allows to:

	Instantiate number style formatter;
	Set pattern;
	Get number format

133.6. Add a class for number style formatter tests. It allows to:

	Handle format value;
	Parse value;
	Parse bogus value;
	Parse percent value  not lenient failure

133.7. Add a class for percent style formatter. It allows to:

	Get number format

133.8. Add a class for percent style formatter tests. It allows to:

	Handle format value;
	Parse value;
	Parse bogus value;
	Parse percent value  not lenient failure

134. Changes to package org.springframework.format.number.money:  

134.1. Add a class for currency unit formatter. It allows to:

	Get print;
	Parse locale

134.2. Add a class for monetary amount formatter. It allows to:

	Instantiate monetary amount formatter;
	Set format name;
	Get print;
	Parse locale;
	Get monetary amount format

135. Changes to package org.springframework.format.support:  

135.1. Add a class for default formatting conversion service. It allows to:

	Instantiate default formatting conversion service;
	Instantiate default formatting conversion service  with embedded value resolver;
	Add default formatters

135.2. Add a class for formatter property editor adapter. It allows to:

	Instantiate formatter property editor adapter  with formatter;
	Get field type;
	Get set as text;
	Get formatter property editor adapter as text

135.3. Add a class for formatting conversion service factory bean. It allows to:

	Set converters;
	Set formatters;
	Set formatter registrars;
	Set register default formatters;
	Set embedded value resolver;
	Handle after properties set;
	Register formatters;
	Get object;
	Get object type;
	Check if formatting conversion service factory bean is singleton

136. Changes to package org.springframework.http:  

136.1. Add a class for cache control. It allows to:

	Instantiate cache control;
	Handle empty;
	Max age;
	No cache;
	No store;
	Revalidate cache control;
	Transform cache control;
	Handle cache public;
	Handle cache private;
	Handle proxy revalidate;
	S max age;
	Handle stale while revalidate;
	Handle stale if error;
	Get header value;
	Convert cache control to header value;
	Append directive;
	Convert cache control to string

136.2. Add a class for cache control tests. It allows to:

	Handle empty cache control;
	Max age;
	Max age duration;
	Max age and directives;
	Max age and S max age;
	Max age and S max age duration;
	No cache private;
	No store;
	Handle stale if error;
	Handle stale if error duration;
	Handle stale while revalidate;
	Handle stale while revalidate duration

136.3. Add a class for http entity. It allows to:

	Instantiate http entity;
	Instantiate http entity  with body;
	Instantiate http entity  with headers multi value map;
	Instantiate http entity  with body, headers multi value map and headers multi value map;
	Get headers;
	Get body;
	Check if http entity has body;
	Check if http entity equals;
	Hash code;
	Convert http entity to string

136.4. Add a class for http entity tests. It allows to:

	No headers;
	Http headers;
	Handle multi value map;
	Handle test equals;
	Handle response entity;
	Handle request entity

136.5. Add a class for http headers. It allows to:

	Instantiate http headers;
	Instantiate http headers  with headers multi value map;
	Accept acceptable media types list;
	Accept http headers;
	Set accept language;
	Get accept language;
	Set accept language  as locales;
	Get accept language  as locales;
	Set access control allow credentials;
	Get access control allow credentials;
	Set access control allow headers;
	Get access control allow headers;
	Set access control allow methods;
	Get access control allow methods;
	Set access control allow origin;
	Get access control allow origin;
	Set access control expose headers;
	Get access control expose headers;
	Set access control max age;
	Get access control max age;
	Set access control request headers;
	Get access control request headers;
	Set access control request method;
	Get access control request method;
	Set accept charset;
	Get accept charset;
	Allow allowed methods set;
	Allow http headers;
	Set basic auth;
	Set bearer  auth;
	Set cache control;
	Get cache control;
	Set connection;
	Get connection;
	Set content disposition form data;
	Set content disposition;
	Get content disposition;
	Set content language;
	Get content language;
	Set content length;
	Get content length;
	Set content type;
	Get content type;
	Set date;
	Get date;
	Set E tag;
	Get E tag;
	Expires expires zoned date time;
	Expires expires instant;
	Expires http headers;
	Set host;
	Get host;
	Set http headers if match;
	Set if match list if match;
	Get http headers if match;
	Set  if modified since if modified since zoned date time;
	Set  if modified since if modified since instant;
	Set http headers if modified since;
	Get http headers if modified since;
	Set http headers if none match;
	Set if none match list if none match;
	Get http headers if none match;
	Set  if unmodified since if unmodified since zoned date time;
	Set  if unmodified since if unmodified since instant;
	Set http headers if unmodified since;
	Get http headers if unmodified since;
	Get set last modified;
	Get last modified;
	Set location;
	Get location;
	Set origin;
	Get origin;
	Set pragma;
	Get pragma;
	Set range;
	Get range;
	Set upgrade;
	Get upgrade;
	Vary request headers list;
	Vary http headers;
	Set zoned date time;
	Set instant;
	Get first date;
	Get http headers first zoned date time;
	Get values  as list;
	Get E tag values  as list;
	Get field values;
	Convert http headers to comma delimited string;
	Set http headers;
	Get http headers first;
	Add http headers;
	Add values list;
	Add values map;
	Set values map;
	Convert http headers to single value map;
	Get size;
	Check if http headers is empty;
	Check if http headers contains key;
	Check if http headers contains value;
	Get http headers;
	Put value list;
	Remove http headers;
	Put map;
	Handle clear;
	Handle key set;
	Get values;
	Get entry set;
	Check if http headers equals;
	Hash code;
	Convert http headers to string;
	Read http headers only http headers;
	Handle writable http headers;
	Get format headers;
	Get format date

136.6. Add a class for http headers tests. It allows to:

	Get http headers tests first;
	Accept http headers tests;
	Accept http headers tests with multiple header values;
	Accept http headers tests with multiple comma separated header values;
	Accept charsets;
	Accept charset wildcard;
	Allow http headers tests;
	Handle content length;
	Handle content type;
	Handle location;
	E tag;
	Handle host;
	Handle host no port;
	Handle ipv 6 host;
	Handle illegal E tag;
	Process http headers tests http headers tests if match;
	Process http headers tests http headers tests if match illegal header;
	Process http headers tests http headers tests if match multiple headers;
	Process http headers tests http headers tests if none match;
	Process http headers tests http headers tests if none match wild card;
	Process http headers tests http headers tests if none match list;
	Handle date;
	Handle date invalid;
	Handle date other locale;
	Handle last modified;
	Check if http headers tests expires long;
	Check if http headers tests expires zoned date time;
	Check if http headers tests expires invalid date;
	Process http headers tests http headers tests if modified since;
	Handle invalid if modified since header;
	Handle pragma;
	Handle cache control;
	Handle cache control builder;
	Handle cache control empty;
	Handle cache control all values;
	Handle content disposition;
	Get allow empty set;
	Handle access control allow credentials;
	Handle access control allow headers;
	Handle access control allow headers multiple values;
	Handle access control allow methods;
	Handle access control allow origin;
	Handle access control expose headers;
	Handle access control max age;
	Handle access control request headers;
	Handle access control request method;
	Accept language;
	Accept language  with empty value;
	Handle content language;
	Handle content language serialized;
	Handle first date;
	First zoned date time;
	Handle basic auth;
	Handle basic auth illegal char;
	Handle bearer auth

136.7. Add an interface declaration  for http input message. It allows to:

	Get body

136.8. Add an interface declaration  for http message. It allows to:

	Get headers

136.9. Add an interface declaration  for http output message. It allows to:

	Get body

136.10. Add a class for http range tests. It allows to:

	Handle invalid first position;
	Handle invalid last less than first;
	Handle invalid suffix length;
	Handle byte range;
	Handle byte range without last position;
	Handle byte range of zero length;
	Handle suffix range;
	Handle suffix range shorter than representation;
	Parse ranges;
	Parse ranges validations;
	Convert range;
	Convert http range tests to resource region;
	Convert http range tests to resource region input stream resource;
	Convert http range tests to resource region illegal length;
	Convert http range tests to resource region exception length;
	Convert http range tests to resource regions validations

136.11. Add an interface declaration  for http request. It allows to:

	Get method;
	Get method value;
	Get URI

136.12. Add a class for http status tests. It allows to:

	Create status codes;
	Process http status tests http status tests from map to enum;
	Process http status tests http status tests from enum to map

136.13. Add a class for invalid media type exception. It allows to:

	Instantiate invalid media type exception;
	Instantiate invalid media type exception  with invalid mime type exception;
	Get media type

136.14. Add a class for media type. It allows to:

	Instantiate media type;
	Instantiate media type  with charset;
	Instantiate media type  with other media type, charset and charset;
	Instantiate media type  with other media type, parameters map and parameters map;
	Instantiate media type  with parameters map;
	Check parameters;
	Get quality value;
	Check if media type includes;
	Check if media type is compatible with;
	Copy quality value;
	Remove quality value;
	Get value of;
	Parse media type;
	Parse media types;
	Process media type media type as media types;
	Process media type media type as media type;
	Convert media type to string;
	Handle sort by specificity;
	Handle sort by quality value;
	Handle sort by specificity and quality;
	Compare parameters

136.15. Add a class for media type editor. It allows to:

	Get set as text;
	Get media type editor as text

136.16. Add a class for media type tests. It allows to:

	Convert test;
	Slash media type tests in type;
	Slash media type tests in subtype;
	Get default quality value;
	Parse media type;
	Parse media type no subtype;
	Parse media type no subtype slash;
	Parse media type type range;
	Parse media type illegal type;
	Parse media type illegal subtype;
	Parse media type empty parameter attribute;
	Parse media type empty parameter value;
	Parse media type illegal parameter attribute;
	Parse media type illegal parameter value;
	Parse media type illegal quality factor;
	Parse media type illegal charset;
	Parse URL connection media type;
	Parse media types;
	Compare media type tests to;
	Compare media type tests to consistent with equals;
	Compare media type tests to case sensitivity;
	Handle specificity comparator;
	Handle sort by specificity related;
	Handle sort by specificity unrelated;
	Handle quality comparator;
	Handle sort by quality related;
	Handle sort by quality unrelated;
	Handle test with conversion service;
	Check if media type tests is concrete

136.17. Add a class for mock http input message. It allows to:

	Instantiate mock http input message;
	Instantiate mock http input message  with body input stream;
	Get headers;
	Get body

136.18. Add a class for mock http output message. It allows to:

	Get headers;
	Get written headers;
	Get body;
	Get body  as bytes;
	Get body  as string;
	Write headers

136.19. Add a class for request entity tests. It allows to:

	Handle normal;
	Handle uri variables expansion;
	Get request entity tests;
	Handle headers;
	Handle methods;
	Handle types

136.20. Add a class for response entity tests. It allows to:

	Handle normal;
	Ok no body;
	Handle ok entity;
	Process response entity tests response entity tests of optional;
	Process response entity tests response entity tests of empty optional;
	Get created location;
	Get accepted no body;
	Get accepted no body with alternative body type;
	No content;
	Handle bad request;
	Handle not found;
	Handle unprocessable entity;
	Handle headers;
	Handle etagheader;
	Handle headers copy;
	Handle headers copy with empty and null;
	Handle empty cache control;
	Handle cache control;
	Handle cache control no cache;
	Handle status code as int;
	Handle custom status code

137. Changes to package org.springframework.http.client:  

137.1. Add a class for abstract async client http request. It allows to:

	Get headers;
	Get body;
	Execute async;
	Assert abstract async client http request not executed;
	Get body internal;
	Execute internal

137.2. Add a class for abstract async http request factory test case. It allows to:

	Create factory;
	Destroy factory;
	Create request factory;
	Handle status;
	Handle status callback;
	Process  on success;
	Process  on failure;
	Echo abstract async http request factory test case;
	Handle multiple writes;
	Handle headers after execute;
	Http methods;
	Assert http method;
	Cancel abstract async http request factory test case

137.3. Add a class for abstract buffering async client http request. It allows to:

	Get body internal;
	Execute internal;

137.4. Add a class for abstract buffering client http request. It allows to:

	Get body internal;
	Execute internal;

137.5. Add a class for abstract client http request. It allows to:

	Get headers;
	Get body;
	Execute abstract client http request;
	Assert abstract client http request not executed;
	Get body internal;
	Execute internal

137.6. Add a class for abstract client http request factory wrapper. It allows to:

	Instantiate abstract client http request factory wrapper  with client http request factory;
	Create request;

137.7. Add a class for abstract client http response. It allows to:

	Get status code

137.8. Add a class for abstract http request factory test case. It allows to:

	Create factory;
	Destroy factory;
	Create request factory;
	Handle status;
	Echo abstract http request factory test case;
	Handle multiple writes;
	Handle headers after execute;
	Http methods;
	Assert http method;
	Handle query parameters

137.9. Add an interface declaration  for async client http request. It allows to:

	Execute async

137.10. Add an interface declaration  for async client http request execution. It allows to:

	Execute async

137.11. Add an interface declaration  for async client http request factory. It allows to:

	Create async request

137.12. Add an interface declaration  for async client http request interceptor. It allows to:

	Intercept http request

137.13. Add a class for buffered simple async http request factory tests. It allows to:

	Create request factory;
	Http methods

137.14. Add a class for buffering client http request factory. It allows to:

	Instantiate buffering client http request factory  with client http request factory;
	Create request;
	Buffer URI

137.15. Add a class for buffering client http request factory tests. It allows to:

	Create request factory;
	Handle repeatable read

137.16. Add a class for buffering client http request wrapper. It allows to:

	Instantiate buffering client http request wrapper  with client http request;
	Get method;
	Get method value;
	Get URI;
	Execute internal

137.17. Add a class for buffering client http response wrapper. It allows to:

	Instantiate buffering client http response wrapper  with client http response;
	Get status code;
	Get raw status code;
	Get status text;
	Get headers;
	Get body;
	Close buffering client http response wrapper

137.18. Add an interface declaration  for client http request. It allows to:

	Execute client http request

137.19. Add an interface declaration  for client http request execution. It allows to:

	Execute http request

137.20. Add an interface declaration  for client http request factory. It allows to:

	Create request

137.21. Add an interface declaration  for client http request interceptor. It allows to:

	Intercept http request

137.22. Add an interface declaration  for client http response. It allows to:

	Get status code;
	Get raw status code;
	Get status text;
	Close client http response

137.23. Add a class for http components async client http request factory. It allows to:

	Instantiate http components async client http request factory;
	Instantiate http components async client http request factory  with http async client;
	Instantiate http components async client http request factory  with closeable http async client;
	Instantiate http components async client http request factory  with http client, http async client and http async client;
	Instantiate http components async client http request factory  with closeable http client, closeable http async client and closeable http async client;
	Set async client;
	Get async client;
	Set http async client;
	Get http async client;
	Handle after properties set;
	Start async client;
	Create async request;
	Destroy http components async client http request factory

137.24. Add a class for http components async client http request factory tests. It allows to:

	Create request factory;
	Http methods;
	Handle custom http async client uses its default;
	Handle default settings of http async client lost on executor customization

137.25. Add a class for http components async client http response. It allows to:

	Instantiate http components async client http response  with http response;
	Get raw status code;
	Get status text;
	Get headers;
	Get body;
	Close http components async client http response

137.26. Add a class for http components client http request. It allows to:

	Instantiate http components client http request  with http client, http uri request, http context and http context;
	Get method value;
	Get URI;
	Get http context;
	Execute internal;
	Add headers

137.27. Add a class for http components client http request factory tests. It allows to:

	Create request factory;
	Http methods;
	Assert custom config;
	Handle default settings of http client merged on executor customization;
	Handle local settings override client default settings;
	Merge based  on current http client;
	Get http client;
	Retrieve request config;
	Create http uri request;
	Handle test request body allowed

137.28. Add a class for http components client http response. It allows to:

	Instantiate http components client http response  with http response;
	Get raw status code;
	Get status text;
	Get headers;
	Get body;
	Close http components client http response

137.29. Add an object creator class for intercepting async client http request factory. It allows to:

	Instantiate intercepting async client http request factory  with delegate async client http request factory, interceptors list and interceptors list;
	Create async request

137.30. Add an object creator class for intercepting client http request factory. It allows to:

	Instantiate intercepting client http request factory  with client http request factory, interceptors list and interceptors list;
	Create request

137.31. Add a class for netty 4 async client http request factory tests. It allows to:

	Create event loop group;
	Handle shutdown event loop group;
	Create request factory;
	Http methods

137.32. Add a class for netty 4 client http request factory. It allows to:

	Instantiate netty 4 client http request factory;
	Instantiate netty 4 client http request factory  with event loop group;
	Set max response size;
	Set ssl context;
	Set connect timeout;
	Set read timeout;
	Handle after properties set;
	Get default client ssl context;
	Create request;
	Create async request;
	Create request internal;
	Get bootstrap;
	Build bootstrap;
	Handle init channel;
	Configure channel;
	Destroy netty 4 client http request factory

137.33. Add a class for netty 4 client http request factory tests. It allows to:

	Create event loop group;
	Handle shutdown event loop group;
	Create request factory;
	Http methods

137.34. Add a class for netty 4 client http response. It allows to:

	Instantiate netty 4 client http response  with channel handler context, netty response and netty response;
	Get raw status code;
	Get status text;
	Get headers;
	Get body;
	Close netty 4 client http response

137.35. Add a class for no output streaming buffered simple http request factory tests. It allows to:

	Create request factory

137.36. Add a class for no output streaming streaming simple http request factory tests. It allows to:

	Create request factory

137.37. Add a class for ok http 3 async client http request factory tests. It allows to:

	Create request factory;
	Http methods

137.38. Add a class for ok http 3 client http request. It allows to:

	Instantiate ok http 3 client http request  with ok http client, URI, http method and http method;
	Get method;
	Get method value;
	Get URI;
	Execute internal

137.39. Add a class for ok http 3 client http request factory. It allows to:

	Instantiate ok http 3 client http request factory;
	Instantiate ok http 3 client http request factory  with ok http client;
	Set read timeout;
	Set write timeout;
	Set connect timeout;
	Create request;
	Create async request;
	Destroy ok http 3 client http request factory;
	Build request;
	Get content type

137.40. Add a class for ok http 3 client http request factory tests. It allows to:

	Create request factory;
	Http methods

137.41. Add a class for ok http 3 client http response. It allows to:

	Instantiate ok http 3 client http response  with response;
	Get raw status code;
	Get status text;
	Get body;
	Get headers;
	Close ok http 3 client http response

137.42. Add a class for simple buffering async client http request. It allows to:

	Instantiate simple buffering async client http request  with http URL connection, async listenable task executor and async listenable task executor;
	Get method value;
	Get URI;
	Execute internal;
	Call

137.43. Add a class for simple buffering client http request. It allows to:

	Instantiate simple buffering client http request  with http URL connection;
	Get method value;
	Get URI;
	Execute internal;
	Add headers

137.44. Add a class for simple client http request factory. It allows to:

	Set proxy;
	Set buffer request body;
	Set chunk size;
	Set connect timeout;
	Set read timeout;
	Set output streaming;
	Set task executor;
	Create request;
	Create async request;
	Handle open connection;
	Prepare connection

137.45. Add a class for simple client http request factory tests. It allows to:

	Header simple client http request factory tests with null value

137.46. Add a class for simple client http response. It allows to:

	Instantiate simple client http response  with http URL connection;
	Get raw status code;
	Get status text;
	Get headers;
	Get body;
	Close simple client http response

137.47. Add a class for simple streaming async client http request. It allows to:

	Instantiate simple streaming async client http request  with http URL connection, async listenable task executor and async listenable task executor;
	Get method value;
	Get URI;
	Get body internal;
	Execute internal;
	Call

137.48. Add a class for simple streaming client http request. It allows to:

	Instantiate simple streaming client http request  with http URL connection;
	Get method value;
	Get URI;
	Get body internal;
	Execute internal

137.49. Add a class for streaming http components client http request factory tests. It allows to:

	Create request factory;
	Http methods

138. Changes to package org.springframework.http.client.support:  

138.1. Add a class for async http accessor. It allows to:

	Set async request factory;
	Get async request factory;
	Create async request

138.2. Add a class for http accessor. It allows to:

	Set request factory;
	Get request factory;
	Create request

138.3. Add a class for http request wrapper. It allows to:

	Instantiate http request wrapper  with http request;
	Get request;
	Get method;
	Get method value;
	Get URI;
	Get headers

138.4. Add a class for intercepting async http accessor. It allows to:

	Set interceptors;
	Get interceptors;
	Get async request factory

138.5. Add a class for intercepting http accessor. It allows to:

	Set interceptors;
	Get interceptors;
	Set request factory;
	Get request factory

138.6. Add a class for proxy factory bean. It allows to:

	Set type;
	Set hostname;
	Set port;
	Handle after properties set;
	Get object;
	Get object type;
	Check if proxy factory bean is singleton

138.7. Add a class for proxy factory bean tests. It allows to:

	Set proxy factory bean tests;
	No type;
	No hostname;
	No port;
	Handle normal

139. Changes to package org.springframework.http.converter:  

139.1. Add a class for abstract generic http message converter. It allows to:

	Instantiate abstract generic http message converter;
	Instantiate abstract generic http message converter  with supported media type;
	Instantiate abstract generic http message converter  with supported media types;
	Handle supports;
	Read type;
	Write type;
	Write T;
	Write internal;

139.2. Add a class for abstract http message converter. It allows to:

	Instantiate abstract http message converter;
	Instantiate abstract http message converter  with supported media type;
	Instantiate abstract http message converter  with supported media types;
	Instantiate abstract http message converter  with default charset, supported media types and supported media types;
	Set supported media types;
	Get supported media types;
	Set default charset;
	Get default charset;
	Read clazz class;
	Read media type;
	Write clazz class;
	Write media type;
	Write T;
	Add default headers;
	Get default content type;
	Get content length;
	Handle supports;
	Read internal;
	Write internal

139.3. Add a class for buffered image http message converter. It allows to:

	Instantiate buffered image http message converter;
	Set default content type;
	Get default content type;
	Set cache dir;
	Read clazz class;
	Check if buffered image http message converter is readable;
	Write clazz class;
	Check if buffered image http message converter is writable;
	Get supported media types;
	Create image input stream;
	Write buffered image;
	Get content type;
	Write internal;
	Create image output stream;
	Handle process;

139.4. Add a class for buffered image http message converter tests. It allows to:

	Set buffered image http message converter tests;
	Read buffered image http message converter tests;
	Write buffered image http message converter tests;
	Write default content type

139.5. Add a class for byte array http message converter. It allows to:

	Instantiate byte array http message converter;
	Handle supports;
	Read internal;
	Get content length;
	Write internal

139.6. Add a class for byte array http message converter tests. It allows to:

	Set byte array http message converter tests;
	Read byte array http message converter tests;
	Write byte array http message converter tests;

139.7. Add an interface declaration  for generic http message converter. It allows to:

	Read type;
	Write type;
	Write T

139.8. Add a class for http message conversion exception. It allows to:

	Instantiate http message conversion exception;
	Instantiate http message conversion exception  with cause throwable

139.9. Add an interface declaration  for http message converter. It allows to:

	Read clazz class;
	Write clazz class;
	Get supported media types;
	Write T

139.10. Add a class for http message not readable exception. It allows to:

	Instantiate http message not readable exception;
	Instantiate http message not readable exception  with cause throwable;
	Instantiate http message not readable exception  with http input message;
	Instantiate http message not readable exception  with cause throwable, http input message and http input message;
	Get http input message

139.11. Add a class for http message not writable exception. It allows to:

	Instantiate http message not writable exception;
	Instantiate http message not writable exception  with cause throwable

139.12. Add a class for object to string http message converter. It allows to:

	Instantiate object to string http message converter  with conversion service;
	Instantiate object to string http message converter  with conversion service, default charset and default charset;
	Set write accept charset;
	Read clazz class;
	Write clazz class;
	Handle supports;
	Read internal;
	Write internal;
	Get content length

139.13. Add a class for object to string http message converter tests. It allows to:

	Handle setup;
	Read object to string http message converter tests;
	Write object to string http message converter tests;
	Handle default charset;
	Handle default charset modified;
	Write accept charset;
	Write accept charset turned off;
	Write utf 16;
	Handle test conversion service required

139.14. Add a class for resource http message converter. It allows to:

	Instantiate resource http message converter;
	Handle supports;
	Read internal;
	Get filename;
	Get default content type;
	Get content length;
	Write internal;
	Write content

139.15. Add a class for resource http message converter tests. It allows to:

	Can read resource;
	Can write resource;
	Should read image resource;
	Should read input stream resource;
	Should resource http message converter tests not read input stream resource;
	Should write image resource;
	Write byte array null media type;
	Write content  not getting input stream;
	Write content  not closing input stream;
	Write content input stream throwing null pointer exception

139.16. Add a class for resource region http message converter. It allows to:

	Instantiate resource region http message converter;
	Get default content type;
	Read clazz class;
	Read type;
	Read internal;
	Write clazz class;
	Write type;
	Write internal;
	Write resource region;
	Write resource region collection;
	Handle println;
	Handle print

139.17. Add a class for resource region http message converter tests. It allows to:

	Can read resource;
	Can write resource;
	Can write resource collection;
	Should write partial content byte range;
	Should write partial content byte range no end;
	Handle partial content multiple byte ranges;
	Handle application octet stream default content type

139.18. Add a class for string http message converter. It allows to:

	Instantiate string http message converter;
	Instantiate string http message converter  with default charset;
	Set write accept charset;
	Handle supports;
	Read internal;
	Get content length;
	Write internal;
	Get accepted charsets;
	Get content type charset

139.19. Add a class for string http message converter tests. It allows to:

	Set string http message converter tests;
	Read string http message converter tests;
	Write string http message converter tests;
	Write default charset;
	Write UTF 8;
	Write override requested content type

140. Changes to package org.springframework.http.converter.feed:  

140.1. Add a class for abstract wire feed http message converter. It allows to:

	Instantiate abstract wire feed http message converter  with supported media type;
	Read internal;
	Write internal

140.2. Add a class for atom feed http message converter. It allows to:

	Instantiate atom feed http message converter;
	Handle supports

140.3. Add a class for atom feed http message converter tests. It allows to:

	Set atom feed http message converter tests;
	Read atom feed http message converter tests;
	Write atom feed http message converter tests;
	Write other charset

140.4. Add a class for rss channel http message converter. It allows to:

	Instantiate rss channel http message converter;
	Handle supports

140.5. Add a class for rss channel http message converter tests. It allows to:

	Set rss channel http message converter tests;
	Read rss channel http message converter tests;
	Write rss channel http message converter tests;
	Write other charset;
	Check if rss channel http message converter tests is similar to

141. Changes to package org.springframework.http.converter.json:  

141.1. Add a class for abstract jackson 2 http message converter. It allows to:

	Instantiate abstract jackson 2 http message converter  with object mapper;
	Instantiate abstract jackson 2 http message converter  with object mapper, supported media type and supported media type;
	Instantiate abstract jackson 2 http message converter  with object mapper, supported media types and supported media types;
	Set object mapper;
	Get object mapper;
	Set abstract jackson 2 http message converter pretty print;
	Configure abstract jackson 2 http message converter pretty print;
	Read clazz class;
	Read type;
	Write clazz class;
	Log warning  if necessary;
	Read internal;
	Read java type;
	Write internal;
	Write prefix;
	Write suffix;
	Get java type;
	Get json encoding;
	Get default content type;
	Get content length

141.2. Add a class for gson factory bean. It allows to:

	Set base 64 encode byte arrays;
	Set serialize nulls;
	Set gson factory bean pretty printing;
	Set disable html escaping;
	Set date format pattern;
	Handle after properties set;
	Get object;
	Get object type;
	Check if gson factory bean is singleton

141.3. Add a class for gson http message converter. It allows to:

	Instantiate gson http message converter;
	Instantiate gson http message converter  with gson;
	Set gson;
	Get gson;
	Read internal;
	Write internal

141.4. Add a class for jackson 2 object mapper factory bean. It allows to:

	Set object mapper;
	Set create xml mapper;
	Set factory;
	Set date format;
	Set simple date format;
	Set locale;
	Set time zone;
	Set annotation introspector;
	Set property naming strategy;
	Set default typing;
	Set serialization inclusion;
	Set filters;
	Set mix ins;
	Set serializers;
	Set serializers  by type;
	Set deserializers;
	Set deserializers  by type;
	Set auto detect fields;
	Set auto detect getters setters;
	Set default view inclusion;
	Set fail  on unknown properties;
	Set fail  on empty beans;
	Set indent output;
	Set default use wrapper;
	Set features  to enable;
	Set features  to disable;
	Set modules;
	Set modules  to install;
	Set find modules  via service loader;
	Set bean class loader;
	Set handler instantiator;
	Set application context;
	Handle after properties set;
	Get object;
	Get object type;
	Check if jackson 2 object mapper factory bean is singleton

141.5. Add a class for mapping jackson 2 http message converter. It allows to:

	Instantiate mapping jackson 2 http message converter;
	Instantiate mapping jackson 2 http message converter  with object mapper;
	Set json prefix;
	Set prefix json;
	Write prefix

141.6. Add a class for mapping jackson input message. It allows to:

	Instantiate mapping jackson input message  with body input stream, http headers and http headers;
	Instantiate mapping jackson input message  with body input stream, http headers, deserialization view class and deserialization view class;
	Get body;
	Get headers;
	Set deserialization view;
	Get deserialization view

141.7. Add a class for mapping jackson value. It allows to:

	Instantiate mapping jackson value;
	Get set value;
	Get value;
	Set serialization view;
	Get serialization view;
	Set filters;
	Get filters

141.8. Add a class for spring handler instantiator. It allows to:

	Instantiate spring handler instantiator  with autowire capable bean factory;
	Handle deserializer instance;
	Handle key deserializer instance;
	Handle serializer instance;
	Get type resolver builder instance;
	Get type id resolver instance;
	Get value instantiator instance;
	Object id generator instance;
	Resolver id generator instance;
	Naming strategy instance;
	Get converter instance;
	Handle virtual property writer instance

142. Changes to package org.springframework.http.converter.protobuf:  

142.1. Add an interface declaration  for extension registry initializer. It allows to:

	Initialize extension registry

142.2. Add a class for protobuf http message converter tests. It allows to:

	Handle setup;
	Handle extension registry initialized;
	Handle extension registry initializer null;
	Handle extension registry null;
	Read protobuf http message converter tests;
	Write protobuf http message converter tests;
	Read no content type;
	Write protobuf;
	Write json  with google protobuf;
	Write json  with java format;
	Handle default content type;
	Get content length

143. Changes to package org.springframework.http.converter.support:  

143.1. Add a class for all encompassing form http message converter. It allows to:

	Instantiate all encompassing form http message converter

144. Changes to package org.springframework.http.converter.xml:  

144.1. Add a class for abstract jaxb 2 http message converter. It allows to:

	Create marshaller;
	Customize marshaller;
	Create unmarshaller;
	Customize unmarshaller;
	Get jaxb context

144.2. Add a class for abstract xml http message converter. It allows to:

	Instantiate abstract xml http message converter;
	Read internal;
	Write internal;
	Transform source;
	Read clazz class from source;
	Write T to result

144.3. Add a class for jaxb 2 collection http message converter. It allows to:

	Read clazz class;
	Read type;
	Write clazz class;
	Write type;
	Handle supports;
	Read clazz class from source;
	Create collection;
	Move XML stream reader to first child of root element;
	Move XML stream reader to next element;
	Write T;
	Write T to result;
	Create xml input factory

144.4. Add a class for jaxb 2 root element http message converter. It allows to:

	Set support dtd;
	Check if jaxb 2 root element http message converter is support dtd;
	Set process external entities;
	Check if jaxb 2 root element http message converter is process external entities;
	Read clazz class;
	Write clazz class;
	Handle supports;
	Read clazz class from source;
	Get process source;
	Write http headers to result;
	Set charset

144.5. Add a class for mapping jackson 2 xml http message converter. It allows to:

	Instantiate mapping jackson 2 xml http message converter;
	Instantiate mapping jackson 2 xml http message converter  with object mapper;
	Set object mapper

144.6. Add a class for marshalling http message converter. It allows to:

	Instantiate marshalling http message converter;
	Instantiate marshalling http message converter  with marshaller;
	Instantiate marshalling http message converter  with marshaller, unmarshaller and unmarshaller;
	Set marshaller;
	Set unmarshaller;
	Read clazz class;
	Write clazz class;
	Handle supports;
	Read clazz class from source;
	Write http headers to result

144.7. Add a class for marshalling http message converter tests. It allows to:

	Read marshalling http message converter tests;
	Write marshalling http message converter tests;
	Read marshalling http message converter tests with type mismatch exception;
	Read marshalling http message converter tests with marshalling failure exception;
	Write marshalling http message converter tests with marshalling failure exception;
	Handle supports

144.8. Add a class for source http message converter tests. It allows to:

	Handle setup;
	Read source http message converter tests;
	Write source http message converter tests;
	Read DOM source;
	Read DOM source external;
	Read dom source  with xml bomb;
	Read SAX source;
	Read SAX source external;
	Handle characters;
	Read SAX source  with xml bomb;
	Read st AX source;
	Read st AX source external;
	Read st AX source  with xml bomb;
	Read stream source;
	Read source;
	Write DOM source;
	Write SAX source;
	Write stream source

145. Changes to package org.springframework.http.server:  

145.1. Add an interface declaration  for server http async request control. It allows to:

	Start server http async request control;
	Check if server http async request control is started;
	Complete server http async request control;
	Check if server http async request control is completed

145.2. Add an interface declaration  for server http request. It allows to:

	Get principal;
	Get local address;
	Get remote address;
	Get async request control

145.3. Add an interface declaration  for server http response. It allows to:

	Set status code;
	Handle flush;
	Close server http response

145.4. Add a class for servlet server http async request control. It allows to:

	Instantiate servlet server http async request control  with servlet server http request, servlet server http response and servlet server http response;
	Check if servlet server http async request control is started;
	Check if servlet server http async request control is completed;
	Start servlet server http async request control;
	Complete servlet server http async request control;
	Process servlet server http async request control servlet server http async request control on complete;
	Process servlet server http async request control servlet server http async request control on start async;
	Process servlet server http async request control servlet server http async request control on error;
	Process servlet server http async request control servlet server http async request control on timeout

145.5. Add a class for servlet server http request. It allows to:

	Instantiate servlet server http request  with http servlet request;
	Get servlet request;
	Get method;
	Get method value;
	Get URI;
	Get headers;
	Get principal;
	Get local address;
	Get remote address;
	Get body;
	Get async request control;
	Check if servlet server http request is form post;
	Get body  from servlet request parameters

145.6. Add a class for servlet server http request tests. It allows to:

	Create servlet server http request tests;
	Get method;
	Get uri  for simple path;
	Get uri  with query string;
	Get uri  with query param;
	Get uri  with malformed query param;
	Get uri  with encoding;
	Get headers;
	Get headers  with empty content type and encoding;
	Get body;
	Get form body

145.7. Add a class for servlet server http response tests. It allows to:

	Create servlet server http response tests;
	Set status code;
	Get headers;
	Pre existing headers  from http servlet response;
	Get body

146. Changes to package org.springframework.instrument:  

146.1. Add a class for instrumentation saving agent. It allows to:

	Instantiate instrumentation saving agent;
	Premain instrumentation;
	Handle agentmain;
	Get instrumentation

147. Changes to package org.springframework.instrument.classloading:  

147.1. Add a class for instrumentable class loader tests. It allows to:

	Handle test default load time weaver

147.2. Add an interface declaration  for load time weaver. It allows to:

	Add transformer;
	Get instrumentable class loader;
	Get throwaway class loader

147.3. Add a class for reflective load time weaver. It allows to:

	Instantiate reflective load time weaver;
	Instantiate reflective load time weaver  with class loader;
	Add transformer;
	Get instrumentable class loader;
	Get throwaway class loader

147.4. Add a class for resource overriding shadowing class loader. It allows to:

	Check if  has more elements;
	Handle next element;
	Instantiate resource overriding shadowing class loader  with enclosing class loader;
	Override resource overriding shadowing class loader;
	Suppress resource overriding shadowing class loader;
	Copy overrides;
	Get resource;
	Get resource  as stream;
	Get resources

147.5. Add a class for resource overriding shadowing class loader tests. It allows to:

	Handle test finds existing resource with get resource and no overrides;
	Handle test does not find existing resource with get resource and null override;
	Handle test finds existing resource with get resource as stream and no overrides;
	Handle test does not find existing resource with get resource as stream and null override;
	Handle test finds existing resource with get resources and no overrides;
	Handle test does not find existing resource with get resources and null override;
	Count elements

147.6. Add a class for shadowing class loader. It allows to:

	Instantiate shadowing class loader  with enclosing class loader;
	Add transformer;
	Copy transformers;
	Load class;
	Shadow shadowing class loader;
	Check if shadowing class loader is eligible for shadowing;
	Do load class;
	Apply transformers;
	Get resource;
	Get resource  as stream;
	Get resources

147.7. Add a class for simple instrumentable class loader. It allows to:

	Instantiate simple instrumentable class loader  with parent class loader;
	Add transformer;
	Transform simple instrumentable class loader if necessary

147.8. Add a class for simple load time weaver. It allows to:

	Instantiate simple load time weaver;
	Instantiate simple load time weaver  with simple instrumentable class loader;
	Add transformer;
	Get instrumentable class loader;
	Get throwaway class loader

147.9. Add a class for simple throwaway class loader. It allows to:

	Instantiate simple throwaway class loader  with parent class loader

147.10. Add a class for weaving transformer. It allows to:

	Instantiate weaving transformer  with class loader;
	Add transformer;
	Transform weaving transformer if necessary;
	Transform pd protection domain if necessary

148. Changes to package org.springframework.instrument.classloading.glassfish:  

148.1. Add a class for glass fish load time weaver. It allows to:

	Instantiate glass fish load time weaver;
	Instantiate glass fish load time weaver  with class loader;
	Add transformer;
	Get instrumentable class loader;
	Get throwaway class loader

149. Changes to package org.springframework.instrument.classloading.jboss:  

149.1. Add a class for j boss load time weaver. It allows to:

	Instantiate j boss load time weaver;
	Instantiate j boss load time weaver  with class loader;
	Add transformer;
	Get instrumentable class loader;
	Get throwaway class loader

150. Changes to package org.springframework.instrument.classloading.tomcat:  

150.1. Add a class for tomcat load time weaver. It allows to:

	Instantiate tomcat load time weaver;
	Instantiate tomcat load time weaver  with class loader;
	Add transformer;
	Get instrumentable class loader;
	Get throwaway class loader

151. Changes to package org.springframework.instrument.classloading.weblogic:  

151.1. Add a class for web logic class loader adapter. It allows to:

	Instantiate web logic class loader adapter  with class loader;
	Add transformer;
	Get class loader;
	Get throwaway class loader

151.2. Add a class for web logic class pre processor adapter. It allows to:

	Instantiate web logic class pre processor adapter  with class file transformer, class loader and class loader;
	Invoke method;
	Initialize params hashtable;
	Pre process;
	Convert web logic class pre processor adapter to string

151.3. Add a class for web logic load time weaver. It allows to:

	Instantiate web logic load time weaver;
	Instantiate web logic load time weaver  with class loader;
	Add transformer;
	Get instrumentable class loader;
	Get throwaway class loader

152. Changes to package org.springframework.instrument.classloading.websphere:  

152.1. Add a class for web sphere class loader adapter. It allows to:

	Instantiate web sphere class loader adapter  with class loader;
	Get class loader;
	Add transformer;
	Get throwaway class loader

152.2. Add a class for web sphere load time weaver. It allows to:

	Instantiate web sphere load time weaver;
	Instantiate web sphere load time weaver  with class loader;
	Add transformer;
	Get instrumentable class loader;
	Get throwaway class loader

153. Changes to package org.springframework.jca:  

153.1. Add a class for stub activation spec. It allows to:

	Validate stub activation spec;
	Get resource adapter;
	Set resource adapter

153.2. Add a class for stub resource adapter. It allows to:

	Start bootstrap context;
	Stop stub resource adapter;
	Handle endpoint activation;
	Handle endpoint deactivation;
	Get XA resources

154. Changes to package org.springframework.jca.cci:  

154.1. Add a class for can not create record exception. It allows to:

	Instantiate can not create record exception  with resource exception

154.2. Add a class for can not get cci connection exception. It allows to:

	Instantiate can not get cci connection exception  with resource exception

154.3. Add a class for cci local transaction tests. It allows to:

	Handle test local transaction commit;
	Do transaction status in transaction without result;
	Handle test local transaction rollback;
	Do transaction status in transaction

154.4. Add a class for cci operation not supported exception. It allows to:

	Instantiate cci operation not supported exception  with resource exception

154.5. Add a class for cci template tests. It allows to:

	Handle test create indexed record;
	Handle test create mapped record;
	Handle test template execute input output;
	Handle test template execute with creator and record factory not supported;
	Create record;
	Convert test template execute input true with creator;
	Handle test template execute input false;
	Handle test template execute input extractor true with creator;
	Handle test template execute input extractor false;
	Handle test template execute input generator true with creator;
	Handle test template execute input generator false;
	Handle test template execute input generator extractor true with creator;
	Handle test template execute input generator extractor false;
	Handle test template execute input output connection spec;
	Handle test template execute input output results set false;
	Handle test template execute connection callback;
	Handle test template execute interaction callback;
	Handle test template execute input true true with creator;
	Handle test template execute input true true;
	Handle test template execute input false true

154.6. Add a class for invalid result set access exception. It allows to:

	Instantiate invalid result set access exception  with SQL exception

154.7. Add a class for record type not supported exception. It allows to:

	Instantiate record type not supported exception  with resource exception

155. Changes to package org.springframework.jca.cci.connection:  

155.1. Add a class for connection holder. It allows to:

	Instantiate connection holder  with connection;
	Get connection

155.2. Add a class for connection spec connection factory adapter. It allows to:

	Set connection spec;
	Set connection spec  for current thread;
	Remove connection spec  from current thread;
	Get connection;
	Do get connection

155.3. Add a class for delegating connection factory. It allows to:

	Set target connection factory;
	Get target connection factory;
	Obtain target connection factory;
	Handle after properties set;
	Get connection;
	Get record factory;
	Get meta data;
	Get reference;
	Set reference

155.4. Add a class for not supported record factory. It allows to:

	Create mapped record;
	Create indexed record

156. Changes to package org.springframework.jca.cci.core:  

156.1. Add an interface declaration  for cci operations. It allows to:

	Execute action connection callback;
	Execute interaction callback;
	Execute interaction spec;

156.2. Add an interface declaration  for connection callback. It allows to:

	Do connection in connection

156.3. Add an interface declaration  for interaction callback. It allows to:

	Do interaction in interaction

156.4. Add an interface declaration  for record creator. It allows to:

	Create record

156.5. Add an interface declaration  for record extractor. It allows to:

	Extract data

157. Changes to package org.springframework.jca.cci.core.support:  

157.1. Add a class for cci dao support. It allows to:

	Set connection factory;
	Create cci template;
	Get connection factory;
	Set cci template;
	Get cci template;
	Check dao config;
	Get connection;
	Release connection

157.2. Add a class for comm area record. It allows to:

	Instantiate comm area record;
	Set record name;
	Get record name;
	Set record short description;
	Get record short description;
	Read input stream;
	Write output stream;
	Convert comm area record to byte array;
	Clone comm area record

158. Changes to package org.springframework.jca.cci.object:  

158.1. Add a class for eis operation. It allows to:

	Set cci template;
	Get cci template;
	Set connection factory;
	Set interaction spec;
	Get interaction spec;
	Handle after properties set

158.2. Add a class for mapping comm area operation. It allows to:

	Instantiate mapping comm area operation;
	Instantiate mapping comm area operation  with connection factory, interaction spec and interaction spec;
	Create input record;
	Extract output data;
	Object mapping comm area operation to bytes;
	Convert bytes

158.3. Add a class for simple record operation. It allows to:

	Instantiate simple record operation;
	Instantiate simple record operation  with connection factory, interaction spec and interaction spec;
	Execute input record;

159. Changes to package org.springframework.jca.context:  

159.1. Add an interface declaration  for bootstrap context aware. It allows to:

	Set bootstrap context

159.2. Add a class for bootstrap context aware processor. It allows to:

	Instantiate bootstrap context aware processor  with bootstrap context;
	Post process  before initialization;
	Post process  after initialization

159.3. Add a class for resource adapter application context. It allows to:

	Instantiate resource adapter application context  with bootstrap context;
	Post process bean factory

159.4. Add a class for spring context resource adapter. It allows to:

	Set context config location;
	Get context config location;
	Create environment;
	Start bootstrap context;
	Create application context;
	Load bean definitions;
	Stop spring context resource adapter;
	Handle endpoint activation;
	Handle endpoint deactivation;
	Get XA resources;
	Check if spring context resource adapter equals;
	Hash code

160. Changes to package org.springframework.jca.endpoint:  

160.1. Add a class for generic message endpoint manager. It allows to:

	Set resource adapter;
	Get resource adapter;
	Set message endpoint factory;
	Get message endpoint factory;
	Set activation spec;
	Get activation spec;
	Set auto startup;
	Check if generic message endpoint manager is auto startup;
	Set phase;
	Get phase;
	Handle after properties set;
	Start generic message endpoint manager;
	Stop generic message endpoint manager;
	Stop callback runnable;
	Check if generic message endpoint manager is running;
	Destroy generic message endpoint manager

161. Changes to package org.springframework.jca.support:  

161.1. Add a class for local connection factory bean. It allows to:

	Set managed connection factory;
	Set connection manager;
	Handle after properties set;
	Get object;
	Get object type;
	Check if local connection factory bean is singleton

161.2. Add a class for local connection factory bean tests. It allows to:

	Handle test managed connection factory is required;
	Handle test is singleton;
	Handle test get object type is null if connection factory has not been configured;
	Handle test creates vanilla connection factory if no connection manager has been configured;
	Handle test creates managed connection factory if A connection manager has been configured

161.3. Add a class for resource adapter factory bean. It allows to:

	Set resource adapter class;
	Set resource adapter;
	Set bootstrap context;
	Set work manager;
	Set xa terminator;
	Handle after properties set;
	Get object;
	Get object type;
	Check if resource adapter factory bean is singleton;
	Destroy resource adapter factory bean

161.4. Add a class for simple bootstrap context. It allows to:

	Instantiate simple bootstrap context  with work manager;
	Instantiate simple bootstrap context  with work manager, XA terminator and XA terminator;
	Instantiate simple bootstrap context  with work manager, XA terminator, transaction synchronization registry and transaction synchronization registry;
	Get work manager;
	Get XA terminator;
	Create timer;
	Check if simple bootstrap context is context supported;
	Get transaction synchronization registry

162. Changes to package org.springframework.jca.work:  

162.1. Add a class for delegating work. It allows to:

	Instantiate delegating work  with delegate runnable;
	Get delegate;
	Run delegating work;
	Handle release

162.2. Add a class for work manager task executor. It allows to:

	Instantiate work manager task executor;
	Instantiate work manager task executor  with work manager;
	Set work manager;
	Set work manager name;
	Set bootstrap context;
	Set block  until started;
	Set block  until completed;
	Set work listener;
	Set task decorator;
	Handle after properties set;
	Get default work manager;
	Obtain work manager;
	Execute task runnable;
	Submit task runnable;
	Submit task callable;
	Submit listenable;
	Do work;
	Start work;
	Handle schedule work;

163. Changes to package org.springframework.jdbc:  

163.1. Add a class for bad sql grammar exception. It allows to:

	Instantiate bad sql grammar exception  with SQL exception;
	Get SQL exception;
	Get sql

163.2. Add a class for can not get jdbc connection exception. It allows to:

	Instantiate can not get jdbc connection exception;
	Instantiate can not get jdbc connection exception  with SQL exception

163.3. Add a class for customer. It allows to:

	Get id;
	Set id;
	Get forename;
	Set forename;
	Convert customer to string

163.4. Add a class for incorrect result set column count exception. It allows to:

	Instantiate incorrect result set column count exception;
	Get expected count;
	Get actual count

163.5. Add a class for invalid result set access exception. It allows to:

	Instantiate invalid result set access exception  with SQL exception;
	Get SQL exception;
	Get sql

163.6. Add a class for jdbc update affected incorrect number of rows exception. It allows to:

	Instantiate jdbc update affected incorrect number of rows exception;
	Get expected rows affected;
	Get actual rows affected;
	Get was data updated

163.7. Add a class for lob retrieval failure exception. It allows to:

	Instantiate lob retrieval failure exception;
	Instantiate lob retrieval failure exception  with IO exception

163.8. Add a class for sQL warning exception. It allows to:

	Instantiate sQL warning exception  with ex SQL warning;
	Handle sQL warning

163.9. Add a class for uncategorized SQL exception. It allows to:

	Instantiate uncategorized SQL exception  with SQL exception;
	Get SQL exception;
	Get sql

164. Changes to package org.springframework.jdbc.config:  

164.1. Add a class for database populator config utils. It allows to:

	Set database populator;
	Create database populator;
	Get separator

164.2. Add a class for embedded database bean definition parser. It allows to:

	Parse internal;
	Should generate id  as fallback;
	Set generate unique database name flag;
	Set database name;
	Set database type

164.3. Add a class for initialize database bean definition parser. It allows to:

	Parse internal;
	Should generate id

164.4. Add a class for jdbc namespace handler. It allows to:

	Handle init

164.5. Add a class for jdbc namespace integration tests. It allows to:

	Create embedded database;
	Create embedded database  again;
	Create jdbc namespace integration tests with resource pattern;
	Create jdbc namespace integration tests with anonymous data source and default database name;
	Create jdbc namespace integration tests with implicit database name;
	Create jdbc namespace integration tests with explicit database name;
	Create jdbc namespace integration tests with generated database name;
	Create jdbc namespace integration tests with endings;
	Create jdbc namespace integration tests with endings nested;
	Create jdbc namespace integration tests;
	Create and destroy nested  with hsql;
	Create and destroy nested  with H 2;
	Handle multiple data sources have different database names;
	Initialize jdbc namespace integration tests with custom separator;
	Get embedded with custom separator;
	Get context;
	Assert bean property value  of default listable bean factory;
	Assert num rows  in test table;
	Assert correct setup;
	Assert correct setup and close context;
	Assert correct setup  for single data source

164.6. Add a class for sorted resources factory bean. It allows to:

	Instantiate sorted resources factory bean  with locations list;
	Instantiate sorted resources factory bean  with resource loader, locations list and locations list;
	Set resource loader;
	Get object type;
	Create instance

165. Changes to package org.springframework.jdbc.core:  

165.1. Add a class for argument prepared statement setter. It allows to:

	Instantiate argument prepared statement setter;
	Set values;
	Do set value;
	Handle cleanup parameters

165.2. Add a class for argument type prepared statement setter. It allows to:

	Instantiate argument type prepared statement setter;
	Set values;
	Do set value;
	Handle cleanup parameters

165.3. Add an interface declaration  for batch prepared statement setter. It allows to:

	Set values;
	Get batch size

165.4. Add a class for batch update utils. It allows to:

	Execute batch update;
	Set values;
	Get batch size;
	Get set statement parameters

165.5. Add a class for bean property row mapper. It allows to:

	Instantiate bean property row mapper;
	Instantiate bean property row mapper  with mapped class;
	Set mapped class;
	Get mapped class;
	Set check  fully populated;
	Check if bean property row mapper is check fully populated;
	Get set primitives defaulted for null value;
	Check if bean property row mapper is primitives defaulted for null value;
	Set conversion service;
	Get conversion service;
	Initialize mapped class;
	Underscore name;
	Handle lower case name;
	Map row;
	Init bean wrapper;
	Get column value;
	Handle new instance

165.6. Add a class for bean property row mapper tests. It allows to:

	Handle test overriding different class defined for mapping;
	Handle test overriding same class defined for mapping;
	Handle test static query with row mapper;
	Handle test mapping with inheritance;
	Handle test mapping with no unpopulated fields found;
	Handle test mapping with unpopulated fields not checked;
	Handle test mapping with unpopulated fields not accepted;
	Handle test mapping null value;
	Handle test query with space in column name and local date time;
	Handle test query with space in column name and local date

165.7. Add an interface declaration  for callable statement callback. It allows to:

	Do cs callable statement in callable statement

165.8. Add an interface declaration  for callable statement creator. It allows to:

	Create callable statement

165.9. Add a class for column map row mapper. It allows to:

	Map row;
	Create column map;
	Get column key;
	Get column value

165.10. Add an interface declaration  for connection callback. It allows to:

	Do connection in connection

165.11. Add an interface declaration  for disposable sql type value. It allows to:

	Handle cleanup

165.12. Add an interface declaration  for interruptible batch prepared statement setter. It allows to:

	Check if interruptible batch prepared statement setter is batch exhausted

165.13. Add an interface declaration  for jdbc operations. It allows to:

	Execute action connection callback;
	Execute action statement callback;
	Execute jdbc operations;
	Get query;
	Handle query;
	Get query for object;
	Get query for map;
	Get query for list;
	Get query for row set;
	Update jdbc operations;
	Get batch update;
	Execute psc prepared statement creator;
	Execute action prepared statement callback;
	Update psc prepared statement creator;
	Update pss prepared statement setter;
	Execute csc callable statement creator;
	Execute action callable statement callback;
	Call csc callable statement creator

165.14. Add a class for jdbc template query tests. It allows to:

	Set jdbc template query tests;
	Handle test query for list;
	Handle test query for list with empty result;
	Handle test query for list with single row and column;
	Handle test query for list with integer element;
	Handle test query for map with single row and column;
	Handle test query for object throws incorrect result size for more than one row;
	Handle test query for object with row mapper;
	Map row;
	Handle test query for object with string;
	Handle test query for object with big integer;
	Handle test query for object with big decimal;
	Handle test query for object with integer;
	Handle test query for object with integer and null;
	Handle test query for int;
	Handle test query for int primitive;
	Handle test query for long;
	Handle test query for long primitive;
	Handle test query for list with args;
	Handle test query for list is not confused by named parameter prefix;
	Do test query  for list with args;
	Handle test query for list with args and empty result;
	Handle test query for list with args and single row and column;
	Handle test query for list with args and integer element and single row and column;
	Handle test query for map with args and single row and column;
	Handle test query for object with args and row mapper;
	Handle test query for object with args and integer;
	Handle test query for int with args;
	Handle test query for long with args

165.15. Add an interface declaration  for parameter disposer. It allows to:

	Handle cleanup parameters

165.16. Add an interface declaration  for parameter mapper. It allows to:

	Create map

165.17. Add an interface declaration  for parameterized prepared statement setter. It allows to:

	Set values

165.18. Add an interface declaration  for prepared statement callback. It allows to:

	Do ps prepared statement in prepared statement

165.19. Add an interface declaration  for prepared statement creator. It allows to:

	Create prepared statement

165.20. Add an interface declaration  for prepared statement setter. It allows to:

	Set values

165.21. Add an interface declaration  for result set extractor. It allows to:

	Extract data

165.22. Add a class for result set supporting sql parameter. It allows to:

	Instantiate result set supporting sql parameter;
	Instantiate result set supporting sql parameter  with rse result set extractor;
	Instantiate result set supporting sql parameter  with rch row callback handler;
	Instantiate result set supporting sql parameter  with rm row mapper;
	Check if result set supporting sql parameter is result set supported;
	Get result set extractor;
	Get row callback handler;
	Get row mapper;
	Check if result set supporting sql parameter is input value provided

165.23. Add an interface declaration  for row callback handler. It allows to:

	Handle process row

165.24. Add a class for row count callback handler. It allows to:

	Handle process row;
	Get column types;
	Get column names;
	Get row count;
	Get column count

165.25. Add an interface declaration  for row mapper. It allows to:

	Map row

165.26. Add a class for row mapper result set extractor. It allows to:

	Instantiate row mapper result set extractor  with row mapper;
	Extract data

165.27. Add a class for row mapper tests. It allows to:

	Set row mapper tests;
	Closed row mapper tests;
	Verify results;
	Handle static query with row mapper;
	Handle prepared statement creator with row mapper;
	Handle prepared statement setter with row mapper;
	Handle query with args and row mapper;
	Handle query with args and types and row mapper

165.28. Add a class for simple row count callback handler. It allows to:

	Handle process row;
	Get count

165.29. Add a class for single column row mapper. It allows to:

	Instantiate single column row mapper;
	Instantiate single column row mapper  with required type class;
	Set required type;
	Set conversion service;
	Map row;
	Get column value;
	Convert value  to required type;
	Handle new instance;

165.30. Add a class for sql in out parameter. It allows to:

	Instantiate sql in out parameter;
	Instantiate sql in out parameter  with sql return type;
	Instantiate sql in out parameter  with rse result set extractor;
	Instantiate sql in out parameter  with rch row callback handler;
	Instantiate sql in out parameter  with rm row mapper;
	Check if sql in out parameter is input value provided

165.31. Add a class for sql out parameter. It allows to:

	Instantiate sql out parameter;
	Instantiate sql out parameter  with sql return type;
	Instantiate sql out parameter  with rse result set extractor;
	Instantiate sql out parameter  with rch row callback handler;
	Instantiate sql out parameter  with rm row mapper;
	Get sql out parameter sql return type;
	Check if sql out parameter is return type supported

165.32. Add a class for sql parameter. It allows to:

	Instantiate sql parameter;
	Instantiate sql parameter  with other parameter;
	Get name;
	Get sql parameter sql type;
	Get type name;
	Get scale;
	Check if sql parameter is input value provided;
	Check if sql parameter is results parameter;
	Convert sql types

165.33. Add a class for sql parameter value. It allows to:

	Instantiate sql parameter value;
	Instantiate sql parameter value  with declared parameter;
	Get value

165.34. Add an interface declaration  for sql provider. It allows to:

	Get sql

165.35. Add a class for sql return result set. It allows to:

	Instantiate sql return result set  with result set extractor;
	Instantiate sql return result set  with row callback handler;
	Instantiate sql return result set  with row mapper;
	Check if sql return result set is results parameter

165.36. Add an interface declaration  for sql return type. It allows to:

	Get type value

165.37. Add a class for sql return update count. It allows to:

	Instantiate sql return update count;
	Check if sql return update count is input value provided;
	Check if sql return update count is results parameter

165.38. Add a class for sql row set result set extractor. It allows to:

	Extract data;
	Create sql row set;
	Handle new cached row set

165.39. Add an interface declaration  for sql type value. It allows to:

	Set type value

165.40. Add an interface declaration  for statement callback. It allows to:

	Do stmt statement in statement

165.41. Add a class for statement creator utils. It allows to:

	Convert java type;
	Set parameter value;
	Set parameter value internal;
	Set null;
	Get set value;
	Check if statement creator utils is string value;
	Check if statement creator utils is date value;
	Handle cleanup parameters;

165.42. Add a class for statement creator utils tests. It allows to:

	Set statement creator utils tests;
	Handle test set parameter value with null and type;
	Handle test set parameter value with null and type name;
	Handle test set parameter value with null and unknown type;
	Handle test set parameter value with null and unknown type on informix;
	Handle test set parameter value with null and unknown type on derby embedded;
	Handle test set parameter value with null and get parameter type working;
	Handle test set parameter value with string;
	Handle test set parameter value with string and special type;
	Handle test set parameter value with string and unknown type;
	Handle test set parameter value with sql date;
	Handle test set parameter value with date and util date;
	Handle test set parameter value with date and calendar;
	Handle test set parameter value with sql time;
	Handle test set parameter value with time and util date;
	Handle test set parameter value with time and calendar;
	Handle test set parameter value with sql timestamp;
	Handle test set parameter value with timestamp and util date;
	Handle test set parameter value with timestamp and calendar;
	Handle test set parameter value with date and unknown type;
	Handle test set parameter value with calendar and unknown type;
	Handle test set parameter value with string and vendor specific type;
	Handle test set parameter value with null and vendor specific type

166. Changes to package org.springframework.jdbc.core.metadata:  

166.1. Add a class for call meta data context. It allows to:

	Set function return name;
	Get function return name;
	Set limited  in parameter names;
	Get limited  in parameter names;
	Set out parameter names;
	Get out parameter names;
	Set procedure name;
	Get procedure name;
	Set catalog name;
	Get catalog name;
	Set schema name;
	Get schema name;
	Set function;
	Check if call meta data context is function;
	Set return value required;
	Check if call meta data context is return value required;
	Set access call parameter meta data;
	Check if call meta data context is access call parameter meta data;
	Set named binding;
	Check if call meta data context is named binding;
	Initialize meta data;
	Obtain meta data provider;
	Create return result set parameter;
	Get scalar  out parameter name;
	Get call parameters;
	Handle process parameters;
	Reconcile parameters;
	Match sql parameter source in parameter values with call parameters;
	Match in parameters map in parameter values with call parameters;
	Match call meta data context in parameter values with call parameters;
	Create call string;
	Create parameter binding;
	Handle lower case

166.2. Add an interface declaration  for call meta data provider. It allows to:

	Initialize database meta data with meta data;
	Initialize database meta data with procedure column meta data;
	Convert procedure name;
	Convert catalog name;
	Convert schema name;
	Handle meta data catalog name to use;
	Handle meta data schema name to use;
	Convert parameter name;
	Create default  out parameter;
	Create default  in out parameter;
	Create default  in parameter;
	Get user name;
	Check if call meta data provider is return result set supported;
	Check if call meta data provider is ref cursor supported;
	Get ref cursor sql type;
	Check if call meta data provider is procedure column meta data used;
	Process call meta data provider call meta data provider by pass return parameter;
	Get call parameter meta data;
	Check if call meta data provider is supports catalogs in procedure calls;
	Check if call meta data provider is supports schemas in procedure calls

166.3. Add a class for call meta data provider factory. It allows to:

	Instantiate call meta data provider factory;
	Create meta data provider

166.4. Add a class for call parameter meta data. It allows to:

	Instantiate call parameter meta data;
	Get parameter name;
	Get parameter type;
	Check if call parameter meta data is return parameter;
	Get call parameter meta data sql type;
	Get type name;
	Check if call parameter meta data is nullable

166.5. Add a class for db 2 call meta data provider. It allows to:

	Instantiate db 2 call meta data provider  with database meta data;
	Initialize database meta data with meta data;
	Handle meta data schema name to use

166.6. Add a class for derby call meta data provider. It allows to:

	Instantiate derby call meta data provider  with database meta data;
	Handle meta data schema name to use

166.7. Add a class for derby table meta data provider. It allows to:

	Instantiate derby table meta data provider  with database meta data;
	Initialize database meta data with meta data;
	Check if derby table meta data provider is get generated keys supported

166.8. Add a class for generic call meta data provider. It allows to:

	Instantiate generic call meta data provider  with database meta data;
	Initialize database meta data with meta data;
	Initialize database meta data with procedure column meta data;
	Get call parameter meta data;
	Convert procedure name;
	Convert catalog name;
	Convert schema name;
	Handle meta data catalog name to use;
	Handle meta data schema name to use;
	Convert parameter name;
	Process generic call meta data provider generic call meta data provider by pass return parameter;
	Create default  out parameter;
	Create default  in out parameter;
	Create default  in parameter;
	Get user name;
	Check if generic call meta data provider is return result set supported;
	Check if generic call meta data provider is ref cursor supported;
	Get ref cursor sql type;
	Check if generic call meta data provider is procedure column meta data used;
	Set supports catalogs  in procedure calls;
	Check if generic call meta data provider is supports catalogs in procedure calls;
	Set supports schemas  in procedure calls;
	Check if generic call meta data provider is supports schemas in procedure calls;
	Set stores upper case identifiers;
	Check if generic call meta data provider is stores upper case identifiers;
	Set stores lower case identifiers;
	Check if generic call meta data provider is stores lower case identifiers;
	Handle process procedure columns

166.9. Add a class for hana call meta data provider. It allows to:

	Instantiate hana call meta data provider  with database meta data;
	Initialize database meta data with meta data

166.10. Add a class for hsql table meta data provider. It allows to:

	Instantiate hsql table meta data provider  with database meta data;
	Check if hsql table meta data provider is get generated keys simulated;
	Get simple query  for get generated key

166.11. Add a class for oracle call meta data provider. It allows to:

	Instantiate oracle call meta data provider  with database meta data;
	Check if oracle call meta data provider is return result set supported;
	Check if oracle call meta data provider is ref cursor supported;
	Get ref cursor sql type;
	Handle meta data catalog name to use;
	Handle meta data schema name to use;
	Create default  out parameter

166.12. Add a class for oracle table meta data provider. It allows to:

	Instantiate oracle table meta data provider  with database meta data;
	Lookup default schema;
	Get default schema;
	Initialize database meta data with table column meta data

166.13. Add a class for postgres call meta data provider. It allows to:

	Instantiate postgres call meta data provider  with database meta data;
	Check if postgres call meta data provider is return result set supported;
	Check if postgres call meta data provider is ref cursor supported;
	Get ref cursor sql type;
	Handle meta data schema name to use;
	Create default  out parameter;
	Process postgres call meta data provider postgres call meta data provider by pass return parameter

166.14. Add a class for postgres table meta data provider. It allows to:

	Instantiate postgres table meta data provider  with database meta data;
	Check if postgres table meta data provider is get generated keys simulated;
	Get simple query  for get generated key

166.15. Add a class for sql server call meta data provider. It allows to:

	Instantiate sql server call meta data provider  with database meta data;
	Convert parameter name;
	Process sql server call meta data provider sql server call meta data provider by pass return parameter

166.16. Add a class for sybase call meta data provider. It allows to:

	Instantiate sybase call meta data provider  with database meta data;
	Convert parameter name;
	Process sybase call meta data provider sybase call meta data provider by pass return parameter

166.17. Add a class for table meta data context. It allows to:

	Set table name;
	Get table name;
	Set catalog name;
	Get catalog name;
	Set schema name;
	Get schema name;
	Set access table column meta data;
	Check if table meta data context is access table column meta data;
	Set override include synonyms default;
	Check if table meta data context is override include synonyms default;
	Get table columns;
	Handle process meta data;
	Obtain meta data provider;
	Reconcile columns  to use;
	Match sql parameter source in parameter values with insert columns;
	Match in parameters map in parameter values with insert columns;
	Create insert string;
	Create insert types;
	Check if table meta data context is get generated keys supported;
	Check if table meta data context is get generated keys simulated;
	Get simulation query  for get generated key;
	Get simple query  for get generated key;
	Check if table meta data context is generated keys column name array supported

166.18. Add an interface declaration  for table meta data provider. It allows to:

	Initialize database meta data with meta data;
	Initialize database meta data with table column meta data;
	Convert table name;
	Convert catalog name;
	Convert schema name;
	Handle meta data catalog name to use;
	Handle meta data schema name to use;
	Check if table meta data provider is table column meta data used;
	Check if table meta data provider is get generated keys supported;
	Check if table meta data provider is get generated keys simulated;
	Get simple query  for get generated key;
	Check if table meta data provider is generated keys column name array supported;
	Get table parameter meta data

166.19. Add a class for table meta data provider factory. It allows to:

	Instantiate table meta data provider factory;
	Create meta data provider

166.20. Add a class for table parameter meta data. It allows to:

	Instantiate table parameter meta data;
	Get parameter name;
	Get table parameter meta data sql type;
	Check if table parameter meta data is nullable

167. Changes to package org.springframework.jdbc.core.namedparam:  

167.1. Add a class for abstract sql parameter source. It allows to:

	Register sql type;
	Register type name;
	Get abstract sql parameter source sql type;
	Get type name;
	Convert abstract sql parameter source to string

167.2. Add a class for bean property sql parameter source. It allows to:

	Instantiate bean property sql parameter source;
	Check if bean property sql parameter source has value;
	Get value;
	Get bean property sql parameter source sql type;
	Get parameter names;
	Get readable property names

167.3. Add a class for empty sql parameter source. It allows to:

	Check if empty sql parameter source has value;
	Get value;
	Get empty sql parameter source sql type;
	Get type name;
	Get parameter names

167.4. Add a class for map sql parameter source. It allows to:

	Instantiate map sql parameter source;
	Instantiate map sql parameter source  with values map;
	Add value;
	Add values;
	Get values;
	Check if map sql parameter source has value;
	Get value;
	Get parameter names

167.5. Add a class for map sql parameter source tests. It allows to:

	Handle null parameter values passed to ctor is ok;
	Get value chokes  if parameter is not present;
	Handle sql parameter value registers sql type;
	Convert map sql parameter source tests to string shows parameter details;
	Convert map sql parameter source tests to string shows custom sql type;
	Convert map sql parameter source tests to string does not show type unknown

167.6. Add a class for named parameter batch update utils. It allows to:

	Execute batch update  with named parameters;
	Set values;
	Get batch size

167.7. Add a class for named parameter jdbc dao support. It allows to:

	Handle init template config;
	Get named parameter jdbc template

167.8. Add an interface declaration  for named parameter jdbc operations. It allows to:

	Get jdbc operations;
	Execute parameter source;
	Execute param map;
	Execute action prepared statement callback;
	Get query;
	Handle query;
	Get query for object;
	Get query for map;
	Get query for list;
	Get query for row set;
	Update parameter source;
	Update param map;
	Get batch update;

167.9. Add a class for named parameter jdbc template. It allows to:

	Remove eldest entry;
	Instantiate named parameter jdbc template  with data source;
	Instantiate named parameter jdbc template  with classic jdbc operations;
	Get jdbc operations;
	Get jdbc template;
	Set cache limit;
	Get cache limit;
	Execute parameter source;
	Execute param map;
	Execute action prepared statement callback;
	Get query;
	Handle query;
	Get query for object;
	Get query for map;
	Get query for list;
	Get query for row set;
	Update parameter source;
	Update param map;
	Get batch update;
	Set values;
	Get batch size;
	Get prepared statement creator;
	Get parsed sql;
	Get prepared statement creator factory

167.10. Add a class for named parameter jdbc template tests. It allows to:

	Handle setup;
	Convert test null data source provided;
	Convert test null jdbc template provided;
	Handle test template configuration;
	Handle test execute;
	Handle test execute array;
	Handle test execute with typed parameters;
	Handle test execute no parameters;
	Handle test query with result set extractor;
	Handle test query with result set extractor no parameters;
	Handle test query with row callback handler;
	Handle test query with row callback handler no parameters;
	Handle test query with row mapper;
	Handle test query with row mapper no parameters;
	Handle test query for object with row mapper;
	Handle test update;
	Handle test update with typed parameters;
	Handle test batch update with plain map;
	Handle test batch update with empty map;
	Handle test batch update with sql parameter source;
	Handle test batch update with in clause;
	Handle test batch update with sql parameter source plus type info

167.11. Add a class for named parameter utils tests. It allows to:

	Parse sql;
	Substitute named parameters;
	Convert param map  to array;
	Convert type map  to array;
	Convert type map  to sql parameter list;
	Build value array  with missing parameter value;
	Substitute named parameters  with string containing quotes;
	Handle test parse sql statement with string containing quotes;
	Parse sql containing comments;
	Parse sql statement  with postgres casting;
	Parse sql statement  with postgres contained operator;
	Parse sql statement  with postgres any array strings exists operator;
	Parse sql statement  with postgres all array strings exists operator;
	Parse sql statement  with escaped colon;
	Parse sql statement  with bracket delimited parameter names;
	Parse sql statement  with empty brackets or brackets in quotes;
	Parse sql statement  with single letter in brackets;
	Parse sql statement  with logical and;
	Substitute named parameters  with logical and;
	Handle variable assignment operator;
	Parse sql statement  with quoted single quote;
	Parse sql statement  with quotes and comment before;
	Parse sql statement  with quotes and comment after

167.12. Add a class for parsed sql. It allows to:

	Instantiate parsed sql;
	Get original sql;
	Add named parameter;
	Get parameter names;
	Get parameter indexes;
	Set named parameter count;
	Get named parameter count;
	Set unnamed parameter count;
	Get unnamed parameter count;
	Set total parameter count;
	Get total parameter count;
	Convert parsed sql to string

167.13. Add an interface declaration  for sql parameter source. It allows to:

	Check if sql parameter source has value;
	Get value;
	Get sql parameter source sql type;
	Get type name;
	Get parameter names

167.14. Add a class for sql parameter source utils. It allows to:

	Create batch;
	Get typed value;
	Extract case insensitive parameter names

168. Changes to package org.springframework.jdbc.core.simple:  

168.1. Add a class for abstract jdbc call. It allows to:

	Instantiate abstract jdbc call  with data source;
	Instantiate abstract jdbc call  with jdbc template;
	Get jdbc template;
	Set procedure name;
	Get procedure name;
	Get set in parameter names;
	Get abstract jdbc call in parameter names;
	Set catalog name;
	Get catalog name;
	Set schema name;
	Get schema name;
	Set function;
	Check if abstract jdbc call is function;
	Set return value required;
	Check if abstract jdbc call is return value required;
	Set named binding;
	Check if abstract jdbc call is named binding;
	Set access call parameter meta data;
	Get call string;
	Get callable statement factory;
	Add declared parameter;
	Add declared row mapper;
	Compile abstract jdbc call;
	Compile internal;
	Process abstract jdbc call abstract jdbc call on compile internal;
	Check if abstract jdbc call is compiled;
	Compiled abstract jdbc call;
	Execute sql parameter source;
	Execute abstract jdbc call;
	Execute args map;
	Execute call internal;
	Get scalar  out parameter name;
	Get call parameters;
	Match sql parameter source in parameter values with call parameters;
	Match abstract jdbc call in parameter values with call parameters;
	Match args map in parameter values with call parameters

168.2. Add a class for abstract jdbc insert. It allows to:

	Instantiate abstract jdbc insert  with data source;
	Instantiate abstract jdbc insert  with jdbc template;
	Get jdbc template;
	Set table name;
	Get table name;
	Set schema name;
	Get schema name;
	Set catalog name;
	Get catalog name;
	Set column names;
	Get column names;
	Set generated key name;
	Set generated key names;
	Get generated key names;
	Set access table column meta data;
	Set override include synonyms default;
	Get insert string;
	Get insert types;
	Compile abstract jdbc insert;
	Compile internal;
	Process abstract jdbc insert abstract jdbc insert on compile internal;
	Check if abstract jdbc insert is compiled;
	Compiled abstract jdbc insert;
	Check abstract jdbc insert if configuration modification is allowed;
	Execute args map;
	Execute sql parameter source;
	Execute insert internal;
	Do execute and return key;
	Do execute and return key holder;
	Execute insert and return key internal;
	Execute insert and return key holder internal;
	Prepare statement  for generated keys;
	Do execute batch;
	Execute batch internal;
	Set values;
	Get batch size;
	Set parameter values;
	Match sql parameter source in parameter values with insert columns;
	Match args map in parameter values with insert columns

168.3. Add a class for call meta data context tests. It allows to:

	Set call meta data context tests;
	Closed call meta data context tests;
	Handle test match parameter values and sql in out parameters

168.4. Add a class for simple jdbc call. It allows to:

	Instantiate simple jdbc call  with data source;
	Instantiate simple jdbc call  with jdbc template;
	Process simple jdbc call simple jdbc call with procedure name;
	Process simple jdbc call simple jdbc call with function name;
	Process simple jdbc call simple jdbc call with schema name;
	Process simple jdbc call simple jdbc call with catalog name;
	Process simple jdbc call simple jdbc call with return value;
	Declare parameters;
	Use simple jdbc call in parameter names;
	Returning result set;
	Process simple jdbc call simple jdbc call without procedure column meta data access;
	Process simple jdbc call simple jdbc call with named binding;
	Execute function;
	Execute object;
	Execute simple jdbc call;
	Execute args map;
	Execute sql parameter source

168.5. Add an interface declaration  for simple jdbc call operations. It allows to:

	Process simple jdbc call operations simple jdbc call operations with procedure name;
	Process simple jdbc call operations simple jdbc call operations with function name;
	Process simple jdbc call operations simple jdbc call operations with schema name;
	Process simple jdbc call operations simple jdbc call operations with catalog name;
	Process simple jdbc call operations simple jdbc call operations with return value;
	Declare parameters;
	Use simple jdbc call operations in parameter names;
	Returning result set;
	Process simple jdbc call operations simple jdbc call operations without procedure column meta data access;
	Process simple jdbc call operations simple jdbc call operations with named binding;
	Execute function;
	Execute object;
	Execute simple jdbc call operations;
	Execute args map;
	Execute args sql parameter source

168.6. Add a class for simple jdbc call tests. It allows to:

	Set simple jdbc call tests;
	Handle test no such stored procedure;
	Handle test unnamed parameter handling;
	Handle test add invoice proc without meta data using map param source;
	Handle test add invoice proc without meta data using array params;
	Handle test add invoice proc with meta data using map param source;
	Handle test add invoice proc with meta data using array params;
	Handle test add invoice func without meta data using map param source;
	Handle test add invoice func without meta data using array params;
	Handle test add invoice func with meta data using map param source;
	Handle test add invoice func with meta data using array params;
	Handle test correct function statement;
	Handle test correct function statement named;
	Handle test correct procedure statement named;
	Verify statement;
	Initialize add invoice  without meta data;
	Verify add invoice  without meta data;
	Initialize add invoice  with meta data;
	Verify add invoice  with meta data

168.7. Add a class for simple jdbc insert. It allows to:

	Instantiate simple jdbc insert  with data source;
	Instantiate simple jdbc insert  with jdbc template;
	Process simple jdbc insert simple jdbc insert with table name;
	Process simple jdbc insert simple jdbc insert with schema name;
	Process simple jdbc insert simple jdbc insert with catalog name;
	Using columns;
	Using generated key columns;
	Process simple jdbc insert simple jdbc insert without table column meta data access;
	Include synonyms  for table column meta data;
	Execute args map;
	Execute sql parameter source;
	Execute and return key;
	Execute and return key holder;
	Execute batch;

168.8. Add an interface declaration  for simple jdbc insert operations. It allows to:

	Process simple jdbc insert operations simple jdbc insert operations with table name;
	Process simple jdbc insert operations simple jdbc insert operations with schema name;
	Process simple jdbc insert operations simple jdbc insert operations with catalog name;
	Using columns;
	Using generated key columns;
	Process simple jdbc insert operations simple jdbc insert operations without table column meta data access;
	Include synonyms  for table column meta data;
	Execute args map;
	Execute sql parameter source;
	Execute and return key;
	Execute and return key holder;
	Execute batch;

168.9. Add a class for simple jdbc insert tests. It allows to:

	Set simple jdbc insert tests;
	Closed simple jdbc insert tests;
	Handle test no such table

168.10. Add a class for table meta data context tests. It allows to:

	Set table meta data context tests;
	Handle test match in parameters and sql type info wrapping;
	Handle test table with single column generated key

169. Changes to package org.springframework.jdbc.core.support:  

169.1. Add a class for abstract interruptible batch prepared statement setter. It allows to:

	Set values;
	Check if abstract interruptible batch prepared statement setter is batch exhausted;
	Get batch size;
	Set values  if available

169.2. Add a class for abstract lob creating prepared statement callback. It allows to:

	Instantiate abstract lob creating prepared statement callback  with lob handler;
	Do ps prepared statement in prepared statement;
	Set values

169.3. Add a class for abstract lob streaming result set extractor. It allows to:

	Extract data;
	Handle no row found;
	Handle multiple rows found;
	Handle stream data

169.4. Add a class for abstract sql type value. It allows to:

	Set type value;
	Create type value

169.5. Add a class for jdbc bean definition reader. It allows to:

	Instantiate jdbc bean definition reader  with bean definition registry;
	Instantiate jdbc bean definition reader  with properties bean definition reader;
	Get set data source;
	Set jdbc template;
	Load bean definitions

169.6. Add a class for jdbc bean definition reader tests. It allows to:

	Handle test valid

169.7. Add a class for jdbc dao support. It allows to:

	Get set data source;
	Create jdbc template;
	Get data source;
	Set jdbc template;
	Get jdbc template;
	Handle init template config;
	Check dao config;
	Get exception translator;
	Get connection;
	Release connection

169.8. Add a class for jdbc dao support tests. It allows to:

	Handle test jdbc dao support with data source;
	Handle init dao;
	Handle test jdbc dao support with jdbc template;

169.9. Add a class for lob support tests. It allows to:

	Handle test creating prepared statement callback;
	Set values;
	Handle test abstract lob streaming result set extractor no rows;
	Handle test abstract lob streaming result set extractor one row;
	Handle test abstract lob streaming result set extractor multiple rows;
	Handle test abstract lob streaming result set extractor correct exception;
	Get result set extractor;
	Handle stream data

169.10. Add a class for sql lob value. It allows to:

	Instantiate sql lob value;
	Instantiate sql lob value  with lob handler;
	Instantiate sql lob value  with input stream;
	Instantiate sql lob value  with input stream, lob handler and lob handler;
	Instantiate sql lob value  with reader;
	Instantiate sql lob value  with reader, lob handler and lob handler;
	Set type value;
	Handle cleanup

169.11. Add a class for sql lob value tests. It allows to:

	Set sql lob value tests;
	Handle test 1;
	Convert test;
	Handle test 3;
	Test sql lob value tests;
	Handle test 5;
	Handle test 6;
	Handle test 7;
	Handle test other constructors;
	Handle test correct cleanup;
	Handle test other sql type

170. Changes to package org.springframework.jdbc.core.test:  

170.1. Add a class for abstract person. It allows to:

	Get name;
	Set name;
	Get age;
	Set age;
	Get birth date;
	Set birth date

170.2. Add a class for concrete person. It allows to:

	Get balance;
	Set balance

170.3. Add a class for extended person. It allows to:

	Get some field;
	Set some field

170.4. Add a class for person. It allows to:

	Get name;
	Set name;
	Get age;
	Set age;
	Get birth date;
	Set birth date;
	Get balance;
	Set balance

170.5. Add a class for space person. It allows to:

	Get last name;
	Get set last name;
	Get age;
	Set age;
	Get birth date;
	Set birth date;
	Get balance;
	Set balance

171. Changes to package org.springframework.jdbc.datasource:  

171.1. Add a class for abstract data source. It allows to:

	Get login timeout;
	Set login timeout;
	Get log writer;
	Set log writer;
	Get unwrap;
	Check if abstract data source is wrapper for;
	Get parent logger

171.2. Add a class for abstract driver based data source. It allows to:

	Set url;
	Get url;
	Set username;
	Get username;
	Set password;
	Get password;
	Set catalog;
	Get catalog;
	Set schema;
	Get schema;
	Set connection properties;
	Get connection properties;
	Get connection;
	Get connection  from driver;

171.3. Add an interface declaration  for connection handle. It allows to:

	Get connection;
	Release connection

171.4. Add a class for connection holder. It allows to:

	Instantiate connection holder  with connection handle;
	Instantiate connection holder  with connection;
	Get connection handle;
	Check if connection holder has connection;
	Set transaction active;
	Check if connection holder is transaction active;
	Set connection;
	Get connection;
	Handle supports savepoints;
	Create savepoint;
	Get released;
	Handle clear

171.5. Add an interface declaration  for connection proxy. It allows to:

	Get target connection

171.6. Add a class for data source jta transaction tests. It allows to:

	Handle setup;
	Verify transaction synchronization manager state;
	Handle test jta transaction commit;
	Handle test jta transaction rollback;
	Do test jta transaction;
	Do transaction status in transaction without result;
	Handle test jta transaction commit with propagation requires new;
	Handle test jta transaction commit with propagation requires new with access after resume;
	Handle test jta transaction commit with propagation requires new with open outer connection;
	Handle test jta transaction commit with propagation requires new with open outer connection accessed;
	Handle test jta transaction commit with propagation requires new with transaction aware data source;
	Handle test jta transaction rollback with propagation requires new;
	Handle test jta transaction rollback with propagation requires new with access after resume;
	Handle test jta transaction rollback with propagation requires new with open outer connection;
	Handle test jta transaction rollback with propagation requires new with open outer connection accessed;
	Handle test jta transaction rollback with propagation requires new with transaction aware data source;
	Do test jta transaction  with propagation requires new;
	Handle test jta transaction commit with propagation required within supports;
	Handle test jta transaction commit with propagation required within not supported;
	Handle test jta transaction commit with propagation requires new within supports;
	Handle test jta transaction commit with propagation requires new within not supported;
	Do test jta transaction commit  with new transaction within empty transaction;
	Handle test jta transaction commit with propagation requires new and suspend exception;
	Handle test jta transaction commit with propagation requires new with open outer connection and suspend exception;
	Handle test jta transaction commit with propagation requires new with transaction aware data source and suspend exception;
	Handle test jta transaction commit with propagation requires new with open outer connection and transaction aware data source and suspend exception;
	Handle test jta transaction commit with propagation requires new and begin exception;
	Handle test jta transaction commit with propagation requires new with open outer connection and begin exception;
	Handle test jta transaction commit with propagation requires new with open outer connection and transaction aware data source and begin exception;
	Handle test jta transaction commit with propagation requires new with transaction aware data source and begin exception;
	Do test jta transaction  with propagation requires new and begin exception;
	Handle test jta transaction with connection holder still bound;
	Do register  after completion with jta transaction;
	Run;
	Handle test jta transaction with isolation level data source adapter;
	Handle test jta transaction with isolation level data source router;
	Handle test jta transaction with isolation level data source router with data source lookup;
	Do test jta transaction  with isolation level data source router;

171.7. Add a class for delegating data source. It allows to:

	Instantiate delegating data source;
	Instantiate delegating data source  with target data source;
	Set target data source;
	Get target data source;
	Obtain target data source;
	Handle after properties set;
	Get connection;
	Get log writer;
	Set log writer;
	Get login timeout;
	Set login timeout;
	Get unwrap;
	Check if delegating data source is wrapper for;
	Get parent logger

171.8. Add a class for driver manager data source. It allows to:

	Instantiate driver manager data source;
	Instantiate driver manager data source  with con props properties;
	Set driver class name;
	Get connection  from driver;
	Get connection  from driver manager

171.9. Add a class for driver manager data source tests. It allows to:

	Test standard usage;
	Handle test usage with connection properties;
	Handle test usage with connection properties and user credentials;
	Handle test invalid class name

171.10. Add a class for isolation level data source adapter. It allows to:

	Set isolation level name;
	Set isolation level;
	Get isolation level;
	Do get connection;
	Get current isolation level;
	Get current read  only flag

171.11. Add a class for jdbc transaction object support. It allows to:

	Set connection holder;
	Get connection holder;
	Check if jdbc transaction object support has connection holder;
	Set previous isolation level;
	Get previous isolation level;
	Set savepoint allowed;
	Check if jdbc transaction object support is savepoint allowed;
	Handle flush;
	Create savepoint;
	Convert rollback;
	Release savepoint;
	Get connection holder  for savepoint

171.12. Add a class for simple connection handle. It allows to:

	Instantiate simple connection handle  with connection;
	Get connection;
	Convert simple connection handle to string

171.13. Add a class for simple driver data source. It allows to:

	Instantiate simple driver data source;
	Instantiate simple driver data source  with driver;
	Instantiate simple driver data source  with driver, con props properties and con props properties;
	Set driver class;
	Set driver;
	Get driver;
	Get connection  from driver

171.14. Add an interface declaration  for smart data source. It allows to:

	Close connection

171.15. Add a class for test data source wrapper. It allows to:

	Set target;
	Get connection;

171.16. Add a class for user credentials data source adapter tests. It allows to:

	Handle test static credentials;
	Handle test no credentials;
	Handle test thread bound credentials

171.17. Add a class for web sphere data source adapter. It allows to:

	Instantiate web sphere data source adapter;
	Handle after properties set;
	Do get connection;
	Create connection spec;
	Invoke jdbc method

172. Changes to package org.springframework.jdbc.datasource.embedded:  

172.1. Add a class for abstract embedded database configurer. It allows to:

	Handle shutdown

172.2. Add an interface declaration  for connection properties. It allows to:

	Set driver class;
	Set url;
	Set username;
	Set password

172.3. Add an interface declaration  for data source factory. It allows to:

	Get connection properties;
	Get data source

172.4. Add a class for derby embedded database configurer. It allows to:

	Get instance;
	Instantiate derby embedded database configurer;
	Configure connection properties;
	Handle shutdown

172.5. Add an interface declaration  for embedded database. It allows to:

	Handle shutdown

172.6. Add a class for embedded database builder. It allows to:

	Instantiate embedded database builder;
	Instantiate embedded database builder  with resource loader;
	Generate unique name;
	Set name;
	Set type;
	Get set data source factory;
	Add default scripts;
	Add script;
	Add scripts;
	Set script encoding;
	Set separator;
	Set comment prefix;
	Set block comment start delimiter;
	Set block comment end delimiter;
	Continue embedded database builder on error;
	Ignore failed drops;
	Build embedded database builder

172.7. Add a class for embedded database builder tests. It allows to:

	Add default scripts;
	Run;
	Add script  with bogus file name;
	Add script;
	Add scripts;
	Add scripts  with default comment prefix;
	Add scripts  with custom comment prefix;
	Add scripts  with custom block comments;
	Set type  to H 2;
	Set type  to derby and ignore failed drops;
	Create same schema  twice without unique db names;
	Create same schema  twice with generated unique db names;
	Do  twice test runnable;
	Assert num rows  in test table;
	Assert database created;
	Assert database created and shutdown

172.8. Add an interface declaration  for embedded database configurer. It allows to:

	Configure connection properties;
	Handle shutdown

172.9. Add a class for embedded database configurer factory. It allows to:

	Instantiate embedded database configurer factory;
	Get configurer

172.10. Add a class for embedded database factory bean. It allows to:

	Set database cleaner;
	Handle after properties set;
	Get object;
	Get object type;
	Check if embedded database factory bean is singleton;
	Destroy embedded database factory bean

172.11. Add a class for embedded database factory bean tests. It allows to:

	Get resource;
	Handle test factory bean lifecycle

172.12. Add a class for h 2 embedded database configurer. It allows to:

	Get instance;
	Instantiate h 2 embedded database configurer  with driver class;
	Configure connection properties

172.13. Add a class for hsql embedded database configurer. It allows to:

	Get instance;
	Instantiate hsql embedded database configurer  with driver class;
	Configure connection properties

172.14. Add a class for output stream factory. It allows to:

	Instantiate output stream factory;
	Get noop output stream;
	Write

172.15. Add a class for simple driver data source factory. It allows to:

	Get connection properties;
	Set driver class;
	Set url;
	Set username;
	Set password;
	Get data source

173. Changes to package org.springframework.jdbc.datasource.init:  

173.1. Add a class for abstract database initialization tests. It allows to:

	Set abstract database initialization tests;
	Shut abstract database initialization tests;
	Get embedded database type;
	Get resource;
	Get default schema;
	Get users schema;
	Assert users database created

173.2. Add a class for abstract database populator tests. It allows to:

	Handle script with single line comments and failed drop;
	Handle script with standard escaped literal;
	Handle script with my sql escaped literal;
	Handle script with multiple statements;
	Handle script with multiple statements and long separator;
	Handle script with multiple statements and whitespace separator;
	Handle script with multiple statements and newline separator;
	Handle script with multiple statements and multiple newline separator;
	Handle script with eol between tokens;
	Handle script with comments within statements;
	Handle script without statement separator;
	Handle constructor with multiple script resources;
	Handle script with select statements;
	Handle uses bound connection if available;
	Check if abstract database populator tests executes huge script in reasonable time;
	Assert test database created;

173.3. Add a class for can not read script exception. It allows to:

	Instantiate can not read script exception  with encoded resource, cause throwable and cause throwable

173.4. Add a class for composite database populator. It allows to:

	Instantiate composite database populator;
	Instantiate composite database populator  with populators collection;
	Instantiate composite database populator  with populators;
	Set populators;
	Add populators;
	Populate connection

173.5. Add a class for data source initializer. It allows to:

	Get set data source;
	Set database populator;
	Set database cleaner;
	Enabled data source initializer;
	Handle after properties set;
	Destroy data source initializer;
	Execute database populator

173.6. Add an interface declaration  for database populator. It allows to:

	Populate connection

173.7. Add a class for database populator utils. It allows to:

	Execute database populator

173.8. Add a class for h 2 database populator tests. It allows to:

	Get embedded database type;
	Convert script with H

173.9. Add a class for hsql database populator tests. It allows to:

	Get embedded database type

173.10. Add a class for resource database populator. It allows to:

	Instantiate resource database populator;
	Instantiate resource database populator  with scripts resource;
	Add script;
	Add scripts;
	Set scripts;
	Assert contents  of script array;
	Set sql script encoding;
	Set separator;
	Set comment prefix;
	Set block comment start delimiter;
	Set block comment end delimiter;
	Set continue  on error;
	Set ignore failed drops;
	Populate connection;
	Execute data source

173.11. Add a class for resource database populator tests. It allows to:

	Construct resource database populator tests with null resource;
	Construct resource database populator tests with null resource array;
	Construct resource database populator tests with resource;
	Construct resource database populator tests with multiple resources;
	Construct resource database populator tests with multiple resources and then add script;
	Add scripts  with null resource;
	Add scripts  with null resource array;
	Set scripts  with null resource;
	Set scripts  with null resource array;
	Set scripts and  then add script

173.12. Add a class for script exception. It allows to:

	Instantiate script exception;
	Instantiate script exception  with cause throwable

173.13. Add a class for script parse exception. It allows to:

	Instantiate script parse exception  with encoded resource;
	Instantiate script parse exception  with encoded resource, cause throwable and cause throwable;
	Build message

173.14. Add a class for script statement failed exception. It allows to:

	Instantiate script statement failed exception  with encoded resource, cause throwable and cause throwable;
	Build error message

173.15. Add a class for script utils. It allows to:

	Handle split sql script;
	Read script;
	Append separator  to script if necessary;
	Check if script utils contains sql script delimiters;
	Execute sql script;

173.16. Add a class for script utils integration tests. It allows to:

	Get embedded database type;
	Set up schema;
	Execute sql script containing multi line comments;
	Execute sql script containing single quotes nested  inside double quotes

173.17. Add a class for script utils unit tests. It allows to:

	Handle split sql script delimited with semicolon;
	Handle split sql script delimited with new line;
	Handle split sql script delimited with new line but default delimiter specified;
	Split script  with single quotes nested inside double quotes;
	Read and split script  with multiple newlines as separator;
	Read and split script containing comments;
	Read and split script containing comments  with leading tabs;
	Read and split script containing multi line comments;
	Read and split script containing multi line nested comments;
	Check if script utils unit tests contains delimiters;
	Read script

173.18. Add a class for uncategorized script exception. It allows to:

	Instantiate uncategorized script exception;
	Instantiate uncategorized script exception  with cause throwable

174. Changes to package org.springframework.jdbc.datasource.lookup:  

174.1. Add a class for abstract routing data source. It allows to:

	Set target data sources;
	Set default target data source;
	Set lenient fallback;
	Get set data source lookup;
	Handle after properties set;
	Resolve specified lookup key;
	Resolve specified data source;
	Get connection;
	Get unwrap;
	Check if abstract routing data source is wrapper for;
	Determine target data source;
	Determine current lookup key

174.2. Add a class for bean factory data source lookup. It allows to:

	Instantiate bean factory data source lookup;
	Instantiate bean factory data source lookup  with bean factory;
	Set bean factory;
	Get data source

174.3. Add a class for bean factory data source lookup tests. It allows to:

	Handle test lookup sunny day;
	Handle test lookup where bean factory yields non data source type;
	Handle test lookup where bean factory has not been supplied

174.4. Add an interface declaration  for data source lookup. It allows to:

	Get data source

174.5. Add a class for data source lookup failure exception. It allows to:

	Instantiate data source lookup failure exception;
	Instantiate data source lookup failure exception  with cause throwable

174.6. Add a class for isolation level data source router. It allows to:

	Resolve specified lookup key;
	Determine current lookup key

174.7. Add a class for jndi data source lookup. It allows to:

	Instantiate jndi data source lookup;
	Get data source

174.8. Add a class for jndi data source lookup tests. It allows to:

	Handle test sunny day;
	Get lookup;
	Handle test no data source at jndi location;

174.9. Add a class for map data source lookup. It allows to:

	Instantiate map data source lookup;
	Instantiate map data source lookup  with data sources map;
	Instantiate map data source lookup  with data source;
	Get set data sources;
	Get data sources;
	Add data source;
	Get data source

174.10. Add a class for map data source lookup tests. It allows to:

	Get data sources returns unmodifiable map;
	Lookup sunny day;
	Get set data sources is an idempotent operation;
	Adding data source permits override;
	Get data source where supplied map has non data source type  under specified key;
	Get data source where supplied map has no entry  for specified key

174.11. Add a class for single data source lookup. It allows to:

	Instantiate single data source lookup  with data source;
	Get data source

174.12. Add a class for stub data source. It allows to:

	Get connection;

175. Changes to package org.springframework.jdbc.object:  

175.1. Add a class for batch sql update. It allows to:

	Instantiate batch sql update;
	Instantiate batch sql update  with ds data source;
	Set batch size;
	Set track rows affected;
	Check if batch sql update supports lob parameters;
	Update batch sql update;
	Handle flush;
	Get batch size;
	Set values;
	Get queue count;
	Get execution count;
	Get rows affected;
	Reset batch sql update

175.2. Add a class for batch sql update tests. It allows to:

	Handle test batch update with explicit flush;
	Handle test batch update with flush through batch size;
	Do test batch update

175.3. Add a class for customer mapper. It allows to:

	Map row

175.4. Add a class for generic sql query. It allows to:

	Set row mapper;
	Set row mapper class;
	Handle after properties set;
	Handle new row mapper

175.5. Add a class for generic sql query tests. It allows to:

	Set generic sql query tests;
	Handle test customer query with placeholders;
	Handle test customer query with named parameters;
	Handle test customer query with row mapper instance;
	Do test customer query

175.6. Add a class for generic stored procedure

175.7. Add a class for generic stored procedure tests. It allows to:

	Handle test add invoices

175.8. Add a class for mapping sql query. It allows to:

	Instantiate mapping sql query;
	Instantiate mapping sql query  with ds data source;
	Map row;

175.9. Add a class for rdbms operation. It allows to:

	Set jdbc template;
	Get jdbc template;
	Get set data source;
	Set fetch size;
	Set max rows;
	Set query timeout;
	Set result set type;
	Get result set type;
	Set updatable results;
	Check if rdbms operation is updatable results;
	Set return generated keys;
	Check if rdbms operation is return generated keys;
	Set generated keys column names;
	Get generated keys column names;
	Set sql;
	Get sql;
	Resolve sql;
	Set types;
	Declare parameter;
	Set parameters;
	Get declared parameters;
	Handle after properties set;
	Compile rdbms operation;
	Check if rdbms operation is compiled;
	Compiled rdbms operation;
	Validate parameters;
	Validate named parameters;
	Validate parameter count;
	Compile internal;
	Check if rdbms operation supports lob parameters;
	Check if rdbms operation allows unused parameters

175.10. Add a class for sql call. It allows to:

	Instantiate sql call;
	Instantiate sql call  with ds data source;
	Set function;
	Check if sql call is function;
	Set sql ready  for use;
	Check if sql call is sql ready for use;
	Compile internal;
	Process sql call sql call on compile internal;
	Get call string;
	Handle new callable statement creator;

175.11. Add a class for sql function. It allows to:

	Instantiate sql function;
	Instantiate sql function  with ds data source;
	Instantiate sql function  with ds data source, result type class and result type class;
	Set result type;
	Map row;
	Run sql function;
	Run generic;

175.12. Add a class for sql operation. It allows to:

	Compile internal;
	Process sql operation sql operation on compile internal;
	Get parsed sql;
	Handle new prepared statement setter;
	Handle new prepared statement creator;

175.13. Add a class for sql query. It allows to:

	Instantiate sql query;
	Instantiate sql query  with ds data source;
	Set rows expected;
	Get rows expected;
	Execute context map;
	Execute sql query;
	Execute param map by named param;
	Find object;
	Find object  by named param;
	Handle new row mapper

175.14. Add a class for sql update. It allows to:

	Instantiate sql update;
	Instantiate sql update  with ds data source;
	Set max rows affected;
	Set required rows affected;
	Check rows affected;
	Update sql update;
	Update generated key holder;
	Update param map by named param;

175.15. Add a class for stored procedure. It allows to:

	Instantiate stored procedure;
	Instantiate stored procedure  with ds data source;
	Instantiate stored procedure  with jdbc template;
	Check if stored procedure allows unused parameters;
	Declare parameter;
	Execute stored procedure;
	Execute in params map;
	Execute in parameter mapper

176. Changes to package org.springframework.jdbc.support:  

176.1. Add a class for abstract fallback SQL exception translator. It allows to:

	Set fallback translator;
	Get fallback translator;
	Translate SQL exception;
	Build message

176.2. Add a class for custom error code exception. It allows to:

	Instantiate custom error code exception;
	Instantiate custom error code exception  with ex throwable

176.3. Add a class for custom SQL error codes translation. It allows to:

	Set error codes;
	Get error codes;
	Set exception class;
	Get exception class

176.4. Add a class for custom SQL exception translator registrar. It allows to:

	Set translators;
	Handle after properties set

176.5. Add a class for custom SQL exception translator registrar tests. It allows to:

	Handle custom error code translation

176.6. Add a class for custom SQL exception translator registry. It allows to:

	Get instance;
	Instantiate custom SQL exception translator registry;
	Register translator;
	Find translator  for database

176.7. Add an object creator class for custom sql exception translator. It allows to:

	Translate SQL exception

176.8. Add a class for data field max value incrementer tests. It allows to:

	Handle test hana sequence max value incrementer;
	Handle test hsql max value incrementer;
	Handle test hsql max value incrementer with delete specific values;
	Test my SQL max value incrementer;
	Handle test oracle sequence max value incrementer;
	Handle test postgres sequence max value incrementer

176.9. Add an interface declaration  for database meta data callback. It allows to:

	Get process meta data

176.10. Add a class for database startup validator. It allows to:

	Get set data source;
	Set validation query;
	Set interval;
	Set timeout;
	Handle after properties set

176.11. Add a class for default lob handler tests. It allows to:

	Handle test get blob as bytes;
	Handle test get blob as binary stream;
	Handle test get clob as string;
	Handle test get clob as ascii stream;
	Handle test get clob as character stream;
	Handle test set blob as bytes;
	Handle test set blob as binary stream;
	Handle test set blob as binary stream without length;
	Handle test set clob as string;
	Handle test set clob as ascii stream;
	Handle test set clob as ascii stream without length;
	Handle test set clob as character stream;
	Handle test set clob as character stream without length

176.12. Add a class for generated key holder. It allows to:

	Instantiate generated key holder;
	Instantiate generated key holder  with key list;
	Get key;
	Get keys;
	Get key list

176.13. Add a class for jdbc accessor. It allows to:

	Get set data source;
	Get data source;
	Obtain data source;
	Set database product name;
	Set exception translator;
	Get exception translator;
	Set lazy init;
	Check if jdbc accessor is lazy init;
	Handle after properties set

176.14. Add a class for jdbc utils. It allows to:

	Close connection;
	Close statement;
	Handle close result set;
	Get result set value;
	Extract database meta data;
	Check if jdbc utils supports batch updates;
	Handle common database name;
	Check if jdbc utils is numeric;
	Resolve type name;
	Lookup column name;
	Convert underscore name  to property name

176.15. Add a class for jdbc utils tests. It allows to:

	Handle common database name;
	Resolve type name;
	Convert underscore name  to property name

176.16. Add an interface declaration  for key holder. It allows to:

	Get key;
	Get keys;
	Get key list

176.17. Add a class for key holder tests. It allows to:

	Handle single key;
	Handle single key non numeric;
	No key returned  in map;
	Handle multiple keys;
	Handle multiple key rows

176.18. Add a class for meta data access exception. It allows to:

	Instantiate meta data access exception;
	Instantiate meta data access exception  with cause throwable

176.19. Add a class for sQL error code SQL exception translator. It allows to:

	Instantiate sQL error code SQL exception translator;
	Instantiate sQL error code SQL exception translator  with data source;
	Instantiate sQL error code SQL exception translator  with sec SQL error codes;
	Get set data source;
	Set database product name;
	Set sql error codes;
	Get sQL error code SQL exception translator sql error codes;
	Translate SQL exception;
	Get custom translate;
	Create custom exception;
	Log translation

176.20. Add a class for sQL error code SQL exception translator tests. It allows to:

	Handle error code translation;
	Check translation;
	Handle batch exception translation;
	Handle data truncation translation;
	Handle custom translate method translation;
	Get custom translate;
	Handle custom exception translation

176.21. Add a class for sQL error codes. It allows to:

	Set database product name;
	Get database product name;
	Set database product names;
	Get database product names;
	Get set use sql state for translation;
	Check if sQL error codes is use sql state for translation;
	Set bad sql grammar codes;
	Get bad sql grammar codes;
	Set invalid result set access codes;
	Get invalid result set access codes;
	Get duplicate key codes;
	Set duplicate key codes;
	Get set data integrity violation codes;
	Get data integrity violation codes;
	Set permission denied codes;
	Get permission denied codes;
	Get set data access resource failure codes;
	Get data access resource failure codes;
	Set transient data access resource codes;
	Get transient data access resource codes;
	Set can  not acquire lock codes;
	Get can  not acquire lock codes;
	Set deadlock loser codes;
	Get deadlock loser codes;
	Set can  not serialize transaction codes;
	Get can  not serialize transaction codes;
	Set custom translations;
	Get custom translations;
	Set custom sql exception translator class;
	Set custom sql exception translator;
	Get custom sql exception translator

176.22. Add a class for sQL error codes factory. It allows to:

	Get instance;
	Instantiate sQL error codes factory;
	Load resource;
	Get error codes;
	Register database;
	Handle unregister database;
	Identify data source;
	Check custom translator registry

176.23. Add a class for sQL error codes factory tests. It allows to:

	Handle test default instance with no such database;
	Handle test default instance with oracle;
	Assert is oracle;
	Assert is SQL server;
	Assert is hsql;
	Assert is DB 2;
	Assert is hana;
	Handle test lookup order;
	Handle test find user defined codes;
	Handle test invalid user defined code format;
	Handle test find custom codes;
	Handle test data source with null metadata;
	Handle test get from data source with SQL exception;
	Assert is empty;
	Get error codes  from data source;
	Handle test SQL server recognized from metadata;
	Handle test oracle recognized from metadata;
	Handle test hsql recognized from metadata;
	Convert test DB;
	Handle test hana is recognized from metadata;
	Handle test wild card name recognized

176.24. Add a class for sQL exception custom translator tests. It allows to:

	Handle bad sql grammar exception;
	Handle data access resource exception

176.25. Add an object creator class for sQL exception subclass factory. It allows to:

	Handle new SQL data exception;
	Handle new SQL feature not supported exception;
	Handle new SQL integrity constraint violation exception;
	Handle new SQL invalid authorization spec exception;
	Handle new SQL non transient connection exception;
	Handle new SQL syntax error exception;
	Handle new SQL transaction rollback exception;
	Handle new SQL transient connection exception;
	Handle new SQL timeout exception;
	Handle new SQL recoverable exception

176.26. Add an object creator class for sQL exception subclass translator. It allows to:

	Instantiate sQL exception subclass translator;
	Translate SQL exception

176.27. Add a class for sQL exception subclass translator tests. It allows to:

	Handle error code translation

176.28. Add an interface declaration  for sQL exception translator. It allows to:

	Translate SQL exception

176.29. Add a class for sQL state exception translator tests. It allows to:

	Handle bad sql grammar;
	Handle invalid sql state code;
	Handle malformed sql state codes;
	Handle test malformed sql state code

176.30. Add a class for sQL state SQL exception translator. It allows to:

	Translate SQL exception;
	Get SQL exception sql state

176.31. Add a class for sQL state SQL exception translator tests. It allows to:

	Handle test translate null exception;
	Handle test translate bad sql grammar;
	Handle test translate data integrity violation;
	Handle test translate data access resource failure;
	Handle test translate transient data access resource failure;
	Handle test translate concurrency failure;
	Handle test translate uncategorized;
	Do test

176.32. Add an interface declaration  for sql value. It allows to:

	Get set value;
	Handle cleanup

177. Changes to package org.springframework.jdbc.support.incrementer:  

177.1. Add a class for abstract column max value incrementer. It allows to:

	Instantiate abstract column max value incrementer;
	Instantiate abstract column max value incrementer  with data source;
	Set column name;
	Get column name;
	Set cache size;
	Get cache size;
	Handle after properties set

177.2. Add a class for abstract data field max value incrementer. It allows to:

	Instantiate abstract data field max value incrementer;
	Instantiate abstract data field max value incrementer  with data source;
	Get set data source;
	Get data source;
	Set incrementer name;
	Get incrementer name;
	Set padding length;
	Get padding length;
	Handle after properties set;
	Handle next int value;
	Handle next long value;
	Handle next string value;
	Get next key

177.3. Add a class for abstract identity column max value incrementer. It allows to:

	Instantiate abstract identity column max value incrementer;
	Instantiate abstract identity column max value incrementer  with data source;
	Set delete specific values;
	Check if abstract identity column max value incrementer is delete specific values;
	Get next key;
	Get increment statement;
	Get identity statement;
	Get delete statement

177.4. Add a class for abstract sequence max value incrementer. It allows to:

	Instantiate abstract sequence max value incrementer;
	Instantiate abstract sequence max value incrementer  with data source;
	Get next key;
	Get sequence query

177.5. Add a class for dB 2 mainframe sequence max value incrementer. It allows to:

	Instantiate dB 2 mainframe sequence max value incrementer;
	Instantiate dB 2 mainframe sequence max value incrementer  with data source;
	Get sequence query

177.6. Add a class for dB 2 sequence max value incrementer. It allows to:

	Instantiate dB 2 sequence max value incrementer;
	Instantiate dB 2 sequence max value incrementer  with data source

177.7. Add an interface declaration  for data field max value incrementer. It allows to:

	Handle next int value;
	Handle next long value;
	Handle next string value

177.8. Add a class for derby max value incrementer. It allows to:

	Instantiate derby max value incrementer;
	Instantiate derby max value incrementer  with data source;
	Set dummy name;
	Get dummy name;
	Get increment statement;
	Get identity statement

177.9. Add a class for h 2 sequence max value incrementer. It allows to:

	Instantiate h 2 sequence max value incrementer;
	Instantiate h 2 sequence max value incrementer  with data source;
	Get sequence query

177.10. Add a class for hsql max value incrementer. It allows to:

	Instantiate hsql max value incrementer;
	Instantiate hsql max value incrementer  with data source;
	Get increment statement;
	Get identity statement

177.11. Add a class for hsql sequence max value incrementer. It allows to:

	Instantiate hsql sequence max value incrementer;
	Instantiate hsql sequence max value incrementer  with data source;
	Get sequence query

177.12. Add a class for my SQL max value incrementer. It allows to:

	Instantiate my SQL max value incrementer;
	Instantiate my SQL max value incrementer  with data source;
	Get set use new connection;
	Get next key

177.13. Add a class for oracle sequence max value incrementer. It allows to:

	Instantiate oracle sequence max value incrementer;
	Instantiate oracle sequence max value incrementer  with data source;
	Get sequence query

177.14. Add a class for postgre SQL sequence max value incrementer. It allows to:

	Instantiate postgre SQL sequence max value incrementer;
	Instantiate postgre SQL sequence max value incrementer  with data source

177.15. Add a class for sql server max value incrementer. It allows to:

	Instantiate sql server max value incrementer;
	Instantiate sql server max value incrementer  with data source;
	Get increment statement;
	Get identity statement

177.16. Add a class for sybase anywhere max value incrementer. It allows to:

	Instantiate sybase anywhere max value incrementer;
	Instantiate sybase anywhere max value incrementer  with data source;
	Get increment statement

177.17. Add a class for sybase max value incrementer. It allows to:

	Instantiate sybase max value incrementer;
	Instantiate sybase max value incrementer  with data source;
	Get increment statement;
	Get identity statement

178. Changes to package org.springframework.jdbc.support.lob:  

178.1. Add a class for abstract lob handler. It allows to:

	Get blob  as bytes;
	Get blob  as binary stream;
	Get clob  as string;
	Get clob  as ascii stream;
	Get clob  as character stream

178.2. Add an interface declaration  for lob creator. It allows to:

	Set blob  as bytes;
	Set blob  as binary stream;
	Set clob  as string;
	Set clob  as ascii stream;
	Set clob  as character stream;
	Close lob creator

178.3. Add an interface declaration  for lob handler. It allows to:

	Get blob  as bytes;
	Get blob  as binary stream;
	Get clob  as string;
	Get clob  as ascii stream;
	Get clob  as character stream;
	Get lob creator

178.4. Add a class for pass through blob. It allows to:

	Instantiate pass through blob;
	Instantiate pass through blob  with binary stream;
	Get length;
	Get binary stream;
	Set binary stream;
	Get bytes;
	Set bytes;
	Get position;
	Truncate pass through blob;
	Handle free

178.5. Add a class for pass through clob. It allows to:

	Instantiate pass through clob;
	Instantiate pass through clob  with character stream reader;
	Instantiate pass through clob  with ascii stream;
	Get length;
	Get character stream;
	Get ascii stream;
	Set character stream;
	Set ascii stream;
	Get sub string;
	Set string;
	Get position;
	Truncate pass through clob;
	Handle free

178.6. Add a class for temporary lob creator. It allows to:

	Set blob  as bytes;
	Set blob  as binary stream;
	Set clob  as string;
	Set clob  as ascii stream;
	Set clob  as character stream;
	Close temporary lob creator

179. Changes to package org.springframework.jdbc.support.rowset:  

179.1. Add a class for result set wrapping row set tests. It allows to:

	Handle setup;
	Handle test get big decimal int;
	Handle test get big decimal string;
	Handle test get string int;
	Handle test get string string;
	Handle test get timestamp int;
	Handle test get timestamp string;
	Handle test get date int;
	Handle test get date string;
	Handle test get time int;
	Handle test get time string;
	Handle test get object int;
	Handle test get object string;
	Handle test get int int;
	Handle test get int string;
	Handle test get float int;
	Handle test get float string;
	Handle test get double int;
	Handle test get double string;
	Handle test get long int;
	Handle test get long string;
	Handle test get boolean int;
	Handle test get boolean string;
	Do test

179.2. Add a class for result set wrapping sql row set. It allows to:

	Instantiate result set wrapping sql row set  with result set;
	Get result set;
	Get meta data;
	Find column;
	Get big decimal;
	Get boolean;
	Get byte;
	Get date;
	Get result set wrapping sql row set double;
	Get float;
	Get int;
	Get result set wrapping sql row set long;
	Get N string;
	Get object;
	Get short;
	Get string;
	Get time;
	Get timestamp;
	Handle absolute;
	Process result set wrapping sql row set result set wrapping sql row set after last;
	Process result set wrapping sql row set result set wrapping sql row set before first;
	First result set wrapping sql row set;
	Get row;
	Check if result set wrapping sql row set is after last;
	Check if result set wrapping sql row set is before first;
	Check if result set wrapping sql row set is first;
	Check if result set wrapping sql row set is last;
	Handle last;
	Handle next;
	Handle previous;
	Handle relative;
	Get was null

179.3. Add a class for result set wrapping sql row set meta data. It allows to:

	Instantiate result set wrapping sql row set meta data  with result set meta data;
	Get catalog name;
	Get column class name;
	Get column count;
	Get column names;
	Get column display size;
	Get column label;
	Get column name;
	Get column type;
	Get column type name;
	Get precision;
	Get scale;
	Get schema name;
	Get table name;
	Check if result set wrapping sql row set meta data is case sensitive;
	Check if result set wrapping sql row set meta data is currency;
	Check if result set wrapping sql row set meta data is signed

179.4. Add an interface declaration  for sql row set. It allows to:

	Get meta data;
	Find column;
	Get big decimal;
	Get boolean;
	Get byte;
	Get date;
	Get sql row set double;
	Get float;
	Get int;
	Get sql row set long;
	Get N string;
	Get object;
	Get short;
	Get string;
	Get time;
	Get timestamp;
	Handle absolute;
	Process sql row set sql row set after last;
	Process sql row set sql row set before first;
	First sql row set;
	Get row;
	Check if sql row set is after last;
	Check if sql row set is before first;
	Check if sql row set is first;
	Check if sql row set is last;
	Handle last;
	Handle next;
	Handle previous;
	Handle relative;
	Get was null

179.5. Add an interface declaration  for sql row set meta data. It allows to:

	Get catalog name;
	Get column class name;
	Get column count;
	Get column names;
	Get column display size;
	Get column label;
	Get column name;
	Get column type;
	Get column type name;
	Get precision;
	Get scale;
	Get schema name;
	Get table name;
	Check if sql row set meta data is case sensitive;
	Check if sql row set meta data is currency;
	Check if sql row set meta data is signed

180. Changes to package org.springframework.jdbc.support.xml:  

180.1. Add a class for sql xml feature not implemented exception. It allows to:

	Instantiate sql xml feature not implemented exception;
	Instantiate sql xml feature not implemented exception  with cause throwable

180.2. Add an interface declaration  for sql xml handler. It allows to:

	Get rs result set xml as string;
	Get rs result set xml as binary stream;
	Get rs result set xml as character stream;
	Get rs result set xml as source;
	Handle new sql xml value;

180.3. Add an interface declaration  for sql xml value

180.4. Add an interface declaration  for xml binary stream provider. It allows to:

	Provide xml

180.5. Add an interface declaration  for xml character stream provider. It allows to:

	Provide xml

180.6. Add an interface declaration  for xml result provider. It allows to:

	Provide xml

181. Changes to package org.springframework.jms:  

181.1. Add a class for illegal state exception. It allows to:

	Instantiate illegal state exception  with cause javax jms illegal state exception

181.2. Add a class for invalid client ID exception. It allows to:

	Instantiate invalid client ID exception  with cause javax jms invalid client ID exception

181.3. Add a class for invalid destination exception. It allows to:

	Instantiate invalid destination exception  with cause javax jms invalid destination exception

181.4. Add a class for invalid selector exception. It allows to:

	Instantiate invalid selector exception  with cause javax jms invalid selector exception

181.5. Add a class for jms exception. It allows to:

	Instantiate jms exception;
	Instantiate jms exception  with cause throwable;
	Get error code;
	Get message

181.6. Add a class for jms security exception. It allows to:

	Instantiate jms security exception  with cause javax jms JMS security exception

181.7. Add a class for message EOF exception. It allows to:

	Instantiate message EOF exception  with cause javax jms message EOF exception

181.8. Add a class for message format exception. It allows to:

	Instantiate message format exception  with cause javax jms message format exception

181.9. Add a class for message not readable exception. It allows to:

	Instantiate message not readable exception  with cause javax jms message not readable exception

181.10. Add a class for message not writeable exception. It allows to:

	Instantiate message not writeable exception  with cause javax jms message not writeable exception

181.11. Add a class for resource allocation exception. It allows to:

	Instantiate resource allocation exception  with cause javax jms resource allocation exception

181.12. Add a class for stub connection factory. It allows to:

	Create connection;
	Create context;

181.13. Add a class for stub queue. It allows to:

	Instantiate stub queue;
	Get queue name

181.14. Add a class for stub text message. It allows to:

	Instantiate stub text message;
	Get text;
	Set text;
	Acknowledge stub text message;
	Handle clear body;
	Handle clear properties;
	Get boolean property;
	Get byte property;
	Get double property;
	Get float property;
	Get int property;
	Get JMS correlation ID;
	Get JMS correlation ID  as bytes;
	Get JMS delivery mode;
	Get JMS destination;
	Get JMS expiration;
	Get JMS message ID;
	Get JMS priority;
	Get JMS redelivered;
	Get JMS reply  to;
	Get JMS timestamp;
	Get JMS type;
	Get JMS delivery time;
	Get stub text message long property;
	Get object property;
	Get property names;
	Get short property;
	Get string property;
	Handle property exists;
	Set boolean property;
	Set byte property;
	Set double property;
	Set float property;
	Set int property;
	Set JMS correlation ID;
	Set JMS correlation ID  as bytes;
	Set JMS delivery mode;
	Set JMS destination;
	Set JMS expiration;
	Set JMS message ID;
	Set JMS priority;
	Set JMS redelivered;
	Set JMS reply  to reply to destination;
	Set JMS timestamp;
	Set JMS type;
	Set JMS delivery time;
	Set long property;
	Set object property;
	Set short property;
	Set string property;
	Get body;
	Check if stub text message is body assignable to

181.15. Add a class for stub topic. It allows to:

	Instantiate stub topic;
	Get topic name

181.16. Add a class for transaction in progress exception. It allows to:

	Instantiate transaction in progress exception  with cause javax jms transaction in progress exception

181.17. Add a class for transaction rolled back exception. It allows to:

	Instantiate transaction rolled back exception  with cause javax jms transaction rolled back exception

181.18. Add a class for uncategorized jms exception. It allows to:

	Instantiate uncategorized jms exception;
	Instantiate uncategorized jms exception  with cause throwable;

182. Changes to package org.springframework.jms.annotation:  

182.1. Add an object creator class for jms bootstrap configuration. It allows to:

	Get jms listener annotation processor;
	Get default jms listener endpoint registry

182.2. Add an interface declaration  for jms listener configurer. It allows to:

	Configure jms listeners

183. Changes to package org.springframework.jms.config:  

183.1. Add a class for abstract jms listener container factory. It allows to:

	Set connection factory;
	Set destination resolver;
	Set error handler;
	Set message converter;
	Set session transacted;
	Set session acknowledge mode;
	Set pub sub domain;
	Set reply pub sub domain;
	Set reply qos settings;
	Set subscription durable;
	Set subscription shared;
	Set client id;
	Set phase;
	Set auto startup;
	Create listener container;
	Create container instance;
	Initialize container

183.2. Add a class for abstract listener container parser. It allows to:

	Parse element;
	Parse listener;
	Parse listener configuration;
	Parse common container properties;
	Parse specific container properties;
	Create container factory;
	Create container;
	Parse acknowledge mode

183.3. Add a class for annotation driven jms bean definition parser. It allows to:

	Parse element;
	Register default endpoint registry;
	Register infrastructure bean

183.4. Add a class for default jca listener container factory. It allows to:

	Set resource adapter;
	Set activation spec factory;
	Set destination resolver;
	Set transaction manager;
	Set phase;
	Create listener container;
	Create container instance

183.5. Add a class for default jms listener container factory. It allows to:

	Set task executor;
	Set transaction manager;
	Set cache level;
	Set cache level name;
	Set concurrency;
	Set max messages  per task;
	Set receive timeout;
	Set recovery interval;
	Set back off;
	Create container instance;
	Initialize container

183.6. Add a class for jca listener container parser. It allows to:

	Create container factory;
	Create container;
	Parse common container properties;
	Parse specific container properties

183.7. Add a class for jms listener config utils

183.8. Add an interface declaration  for jms listener container factory. It allows to:

	Create listener container

183.9. Add a class for jms listener container factory tests. It allows to:

	Create simple container;
	Create jms container full config;
	Create jca container full config;
	Handle jca exclusive properties;
	Back jms listener container factory tests off overrides recovery interval;
	Handle endpoint concurrency takes precedence;
	Set default jms config;
	Assert default jms config;
	Set default jca config;
	Assert default jca config

183.10. Add a class for jms listener container parser. It allows to:

	Create container factory;
	Create container;
	Parse specific container properties

183.11. Add a class for jms listener container test factory. It allows to:

	Set auto startup;
	Get listener containers;
	Get listener container;
	Create listener container

183.12. Add an interface declaration  for jms listener endpoint. It allows to:

	Get id;
	Handle setup listener container

183.13. Add a class for jms listener endpoint registrar tests. It allows to:

	Handle setup;
	Register null endpoint;
	Register null endpoint id;
	Register empty endpoint id;
	Register null container factory is allowed;
	Register null container factory  with no default;
	Register container  without factory

183.14. Add a class for jms listener endpoint registry tests. It allows to:

	Create jms listener endpoint registry tests with null endpoint;
	Create jms listener endpoint registry tests with null endpoint id;
	Create jms listener endpoint registry tests with null container factory;
	Create jms listener endpoint registry tests with duplicate endpoint id;
	Create endpoint

183.15. Add a class for jms listener endpoint tests. It allows to:

	Handle setup jms message container full config;
	Handle setup jca message container full config;
	Handle setup concurrency simple container;
	Handle setup message container no listener;
	Handle setup message container unsupported container

183.16. Add a class for jms namespace handler. It allows to:

	Handle init

183.17. Add a class for message listener test container. It allows to:

	Instantiate message listener test container  with jms listener endpoint;
	Set auto startup;
	Get endpoint;
	Check if message listener test container is started;
	Check if message listener test container is stopped;
	Start message listener test container;
	Stop message listener test container;
	Check if message listener test container is running;
	Get phase;
	Check if message listener test container is auto startup;
	Stop callback runnable;
	Handle setup message listener;
	Get message converter;
	Get destination resolver;
	Check if message listener test container is pub sub domain;
	Check if message listener test container is reply pub sub domain;
	Get reply qos settings;
	Handle after properties set;
	Destroy message listener test container;
	Convert message listener test container to string

183.18. Add a class for method jms listener endpoint. It allows to:

	Set bean;
	Get bean;
	Set method;
	Get method;
	Set most specific method most specific method;
	Get method jms listener endpoint most specific method;
	Set message handler method factory;
	Set embedded value resolver;
	Set bean factory;
	Create message listener;
	Create message listener instance;
	Get default response destination;
	Get send  to specific method;
	Resolve method jms listener endpoint;
	Get endpoint description

183.19. Add an object creator class for simple jms listener container factory. It allows to:

	Create container instance

183.20. Add a class for simple jms listener endpoint. It allows to:

	Set message listener;
	Get message listener;
	Create message listener;
	Get endpoint description

183.21. Add a class for simple jms listener endpoint tests. It allows to:

	Create listener

184. Changes to package org.springframework.jms.connection:  

184.1. Add a class for cached message consumer. It allows to:

	Instantiate cached message consumer  with target message consumer;
	Get message selector;
	Get queue;
	Get topic;
	Get no local;
	Get message listener;
	Set message listener;
	Receive cached message consumer;
	Receive no wait;
	Close cached message consumer;
	Convert cached message consumer to string

184.2. Add a class for cached message producer. It allows to:

	Instantiate cached message producer  with target message producer;
	Set disable message ID;
	Get disable message ID;
	Set disable message timestamp;
	Get disable message timestamp;
	Set delivery delay;
	Get delivery delay;
	Set delivery mode;
	Get delivery mode;
	Set priority;
	Get priority;
	Set time  to live;
	Get time  to live;
	Get destination;
	Get queue;
	Get topic;
	Send message;
	Send destination;
	Send queue;
	Publish message;
	Publish topic;
	Close cached message producer;
	Convert cached message producer to string

184.3. Add a class for chained exception listener. It allows to:

	Add delegate;
	Get delegates;
	Process chained exception listener chained exception listener on exception

184.4. Add a class for delegating connection factory. It allows to:

	Set target connection factory;
	Get target connection factory;
	Obtain target connection factory;
	Set should stop connections;
	Handle after properties set;
	Create connection;
	Create queue connection;
	Create topic connection;
	Create context;
	Stop connection

184.5. Add a class for jms resource holder. It allows to:

	Instantiate jms resource holder;
	Instantiate jms resource holder  with connection factory;
	Instantiate jms resource holder  with session;
	Instantiate jms resource holder  with connection, session and session;
	Instantiate jms resource holder  with connection factory, connection, session and session;
	Check if jms resource holder is frozen;
	Add connection;
	Add session;
	Check if jms resource holder contains session;
	Get connection;
	Get original session;
	Get session;
	Commit jms resource holder;
	Close jms resource holder

184.6. Add a class for jms transaction manager tests. It allows to:

	Verify transaction synchronization manager state;
	Handle test transaction commit;
	Handle test transaction rollback;
	Handle test participating transaction with commit;
	Do transaction status in transaction without result;
	Handle test participating transaction with rollback only;
	Handle test suspended transaction;
	Handle test transaction suspension;
	Handle test transaction commit with message producer;
	Handle test lazy transactional session;
	Handle test lazy without session access

184.7. Add an interface declaration  for session proxy. It allows to:

	Get target session

184.8. Add a class for single connection factory tests. It allows to:

	Handle test with connection;
	Handle test with queue connection;
	Handle test with topic connection;
	Handle test with connection factory;
	Handle test with queue connection factory and jms 11 usage;
	Handle test with queue connection factory and jms 102 usage;
	Handle test with topic connection factory and jms 11 usage;
	Handle test with topic connection factory and jms 102 usage;
	Handle test with connection aggregated start stop;
	Handle test with connection factory and client id;
	Handle test with connection factory and exception listener;
	Handle test with connection factory and reconnect on exception;
	Handle test with connection factory and exception listener and reconnect on exception;
	Handle test with connection factory and local exception listener with cleanup;
	Process  on exception;
	Handle test with connection factory and local exception listener with reconnect;
	Handle test caching connection factory;
	Handle test caching connection factory with queue connection factory and jms 102 usage;
	Handle test caching connection factory with topic connection factory and jms 102 usage

184.9. Add an interface declaration  for smart connection factory. It allows to:

	Stop connection

184.10. Add a class for synched local transaction failed exception. It allows to:

	Instantiate synched local transaction failed exception  with cause JMS exception

184.11. Add a class for test connection. It allows to:

	Create session;
	Get client ID;
	Set client ID;
	Get meta data;
	Get exception listener;
	Set exception listener;
	Start test connection;
	Stop test connection;
	Close test connection;
	Create connection consumer;
	Create durable connection consumer;
	Create shared connection consumer;
	Create shared durable connection consumer;
	Get start count;
	Get test connection close count

184.12. Add a class for test exception listener. It allows to:

	Process test exception listener test exception listener on exception;
	Get count

185. Changes to package org.springframework.jms.core:  

185.1. Add an interface declaration  for browser callback. It allows to:

	Do session in jms

185.2. Add an interface declaration  for jms message operations. It allows to:

	Send message;
	Convert jms message operations;
	Convert headers map;
	Convert message post processor;
	Receive jms message operations;
	Receive target class;
	Send request message;
	Convert target class;

185.3. Add a class for jms messaging template tests. It allows to:

	Handle setup;
	Validate jms template;
	Handle payload converter is consistent constructor;
	Handle payload converter is consistent setter;
	Handle custom converter always takes precedence;
	Assert payload converter;
	Send jms messaging template tests;
	Send name;
	Send default destination;
	Send default destination name;
	Send no default set;
	Send property injection;
	Convert and send payload;
	Convert and send payload name;
	Convert and send default destination;
	Convert and send default destination name;
	Convert and send no default set;
	Convert and send custom jms message converter;
	Convert to message;
	Convert and send payload and headers;
	Convert and send payload and headers name;
	Receive jms messaging template tests;
	Receive name;
	Receive default destination;
	Receive default destination name;
	Receive no default set;
	Receive and convert name;
	Receive and convert default destination;
	Receive and convert default destination name;
	Receive and convert  with conversion;
	Receive and convert no converter;
	Receive and convert no input;
	Send and receive name;
	Send and receive default destination;
	Send and receive default destination name;
	Send and receive no default set;
	Convert send and receive payload;
	Convert send and receive payload name;
	Convert send and receive default destination;
	Convert send and receive default destination name;
	Convert send and receive no default set;
	Convert message conversion exception  on send;
	Convert message conversion exception  on receive;
	Convert message  not readable exception;
	Convert destination resolution exception  on send;
	Convert destination resolution exception  on receive;
	Convert message format exception;
	Convert message  not writable exception;
	Convert invalid destination exception  on send and receive with name;
	Convert invalid destination exception  on send and receive;
	Invoke message creator;
	Create text message;
	Create jms text message;
	Assert text message;

185.4. Add an interface declaration  for jms operations. It allows to:

	Execute action session callback;
	Execute action producer callback;
	Execute destination;
	Send message creator;
	Send destination;
	Convert jms operations;
	Convert destination;
	Convert message post processor;
	Receive jms operations;
	Receive destination;
	Selected jms operations;
	Selected destination;
	Browse action browser callback;
	Browse queue;
	Selected action browser callback;
	Selected queue;

185.5. Add a class for jms template jta tests. It allows to:

	Use transacted session;
	Use transacted template

185.6. Add a class for jms template tests. It allows to:

	Handle setup mocks;
	Create template;
	Create initial context;
	Use transacted session;
	Use transacted template;
	Get local session;
	Handle test exception stack trace;
	Handle test producer callback;
	Handle test producer callback with id and timestamp disabled;
	Handle test session callback;
	Do session in jms;
	Handle test session callback within synchronized transaction;
	Handle test send destination;
	Handle test send destination name;
	Handle test send destination with QOS;
	Handle test send destination name with QOS;
	Handle test send default destination;
	Handle test send default destination name;
	Handle test send default destination with QOS;
	Handle test send default destination name with QOS;
	Do test send destination;
	Create message;
	Handle test converter;
	Handle test receive default destination;
	Handle test receive default destination name;
	Handle test receive destination;
	Handle test receive destination with client acknowledge;
	Handle test receive destination name;
	Handle test receive default destination with selector;
	Handle test receive default destination name with selector;
	Handle test receive destination with selector;
	Handle test receive destination with client acknowledge with selector;
	Handle test receive destination name with selector;
	Handle test receive and convert default destination;
	Handle test receive and convert default destination name;
	Handle test receive and convert destination name;
	Handle test receive and convert destination;
	Handle test receive and convert default destination with selector;
	Handle test receive and convert destination name with selector;
	Handle test receive and convert destination with selector;
	Do test receive;
	Handle test send and receive default destination;
	Handle test send and receive default destination name;
	Handle test send and receive destination;
	Handle test send and receive destination name;
	Do test send and receive;
	Handle test illegal state exception;
	Handle test invalid client ID exception;
	Handle test invalid destination exception;
	Handle test invalid selector exception;
	Handle test jms security exception;
	Handle test message EOF exception;
	Handle test message format exception;
	Handle test message not readable exception;
	Handle test message not writeable exception;
	Handle test resource allocation exception;
	Handle test transaction in progress exception;
	Handle test transaction rolled back exception;
	Handle test uncategorized jms exception;
	Do test jms exception

185.7. Add a class for jms template transacted tests. It allows to:

	Handle setup mocks;
	Get local session;
	Use transacted session;
	Use transacted template

185.8. Add an interface declaration  for message creator. It allows to:

	Create message

185.9. Add an interface declaration  for message post processor. It allows to:

	Post process message

185.10. Add an interface declaration  for producer callback. It allows to:

	Do session in jms

185.11. Add an interface declaration  for session callback. It allows to:

	Do session in jms

186. Changes to package org.springframework.jms.core.support:  

186.1. Add a class for jms gateway support. It allows to:

	Set connection factory;
	Create jms template;
	Get connection factory;
	Set jms template;
	Get jms template;
	Handle after properties set;
	Handle init gateway

186.2. Add a class for jms gateway support tests. It allows to:

	Handle test jms gateway support with connection factory;
	Handle init gateway;
	Handle test jms gateway support with jms template;

187. Changes to package org.springframework.jms.listener:  

187.1. Add a class for locally exposed jms resource holder. It allows to:

	Instantiate locally exposed jms resource holder  with session

187.2. Add an interface declaration  for message listener container. It allows to:

	Handle setup message listener;
	Get message converter;
	Get destination resolver;
	Check if message listener container is pub sub domain;
	Check if message listener container is reply pub sub domain;
	Get reply qos settings

187.3. Add an interface declaration  for session aware message listener. It allows to:

	Process session aware message listener session aware message listener on message

187.4. Add a class for simple message listener container. It allows to:

	Set connect  lazily;
	Set concurrency;
	Set concurrent consumers;
	Set task executor;
	Validate configuration;
	Get shared connection enabled;
	Initialize simple message listener container;
	Start simple message listener container;
	Prepare shared connection;
	Process simple message listener container simple message listener container on exception;
	Initialize consumers;
	Create listener consumer;
	Handle process message;
	Do shutdown

187.5. Add an interface declaration  for subscription name provider. It allows to:

	Get subscription name

188. Changes to package org.springframework.jms.listener.adapter:  

188.1. Add a class for jms response tests. It allows to:

	Handle destination does not use destination resolver;
	Resolve destination  for queue;
	Create jms response tests with nul response;
	Create jms response tests with null queue name;
	Create jms response tests with null topic name;
	Create jms response tests with nul destination

188.2. Add a class for listener execution failed exception. It allows to:

	Instantiate listener execution failed exception  with cause throwable

188.3. Add an interface declaration  for message contents delegate. It allows to:

	Handle message;

188.4. Add an interface declaration  for message delegate. It allows to:

	Handle message;

188.5. Add a class for message listener adapter. It allows to:

	Instantiate message listener adapter;
	Set delegate;
	Get delegate;
	Set default listener method;
	Get default listener method;
	Process message listener adapter message listener adapter on message;
	Get subscription name;
	Get listener method name;
	Build listener arguments;
	Invoke listener method

188.6. Add a class for messaging message listener adapter. It allows to:

	Set handler method;
	Get handler method;
	Process messaging message listener adapter messaging message listener adapter on message;
	Pre process response;
	Convert messaging message listener adapter to messaging message;
	Invoke handler;
	Create messaging error message

188.7. Add a class for reply failure exception. It allows to:

	Instantiate reply failure exception  with cause throwable

188.8. Add an interface declaration  for responsive jms text message returning message delegate. It allows to:

	Handle message

188.9. Add an interface declaration  for responsive message delegate. It allows to:

	Handle message;

188.10. Add a class for stub message listener adapter. It allows to:

	Get was called;
	Handle message;
	Handle listener exception

189. Changes to package org.springframework.jms.listener.endpoint:  

189.1. Add a class for default jms activation spec factory. It allows to:

	Determine activation spec class;
	Populate activation spec properties;
	Apply acknowledge mode

189.2. Add a class for jms activation spec config. It allows to:

	Set destination name;
	Get destination name;
	Set pub sub domain;
	Check if jms activation spec config is pub sub domain;
	Set reply pub sub domain;
	Check if jms activation spec config is reply pub sub domain;
	Set reply qos settings;
	Get reply qos settings;
	Set subscription durable;
	Check if jms activation spec config is subscription durable;
	Set subscription shared;
	Check if jms activation spec config is subscription shared;
	Set subscription name;
	Get subscription name;
	Set durable subscription name;
	Get durable subscription name;
	Set client id;
	Get client id;
	Set message selector;
	Get message selector;
	Set acknowledge mode name;
	Set acknowledge mode;
	Get acknowledge mode;
	Set concurrency;
	Set max concurrency;
	Get max concurrency;
	Set prefetch size;
	Get prefetch size;
	Set message converter;
	Get message converter

189.3. Add an interface declaration  for jms activation spec factory. It allows to:

	Create activation spec

189.4. Add a class for jms message endpoint manager. It allows to:

	Set message listener;
	Get message listener;
	Set transaction manager;
	Set activation spec factory;
	Set destination resolver;
	Set activation spec config;
	Get activation spec config;
	Set bean name;
	Handle after properties set;
	Handle setup message listener;
	Get message converter;
	Get destination resolver;
	Check if jms message endpoint manager is pub sub domain;
	Check if jms message endpoint manager is reply pub sub domain;
	Get reply qos settings

189.5. Add a class for jms message endpoint manager tests. It allows to:

	Check if jms message endpoint manager tests is pub sub domain with queue;
	Check if jms message endpoint manager tests is pub sub domain with topic;
	Handle pub sub domain custom for reply;
	Handle custom reply qos settings;
	Check if jms message endpoint manager tests is pub sub domain with no config;
	Check if jms message endpoint manager tests is reply pub sub domain with no config;
	Get reply qos settings  with no config;
	Get message converter no config;
	Get destination resolver no config

189.6. Add a class for standard jms activation spec factory. It allows to:

	Set activation spec class;
	Set default properties;
	Set destination resolver;
	Get destination resolver;
	Create activation spec;
	Determine activation spec class;
	Populate activation spec properties;
	Apply acknowledge mode

189.7. Add a class for stub jms activation spec. It allows to:

	Get destination type;
	Set destination type;
	Get subscription durability;
	Set subscription durability;
	Get subscription name;
	Set subscription name;
	Get client id;
	Set client id;
	Get message selector;
	Set message selector;
	Get acknowledge mode;
	Set acknowledge mode

189.8. Add an object creator class for stub jms activation spec factory. It allows to:

	Create activation spec

190. Changes to package org.springframework.jms.remoting:  

190.1. Add a class for jms invoker client interceptor. It allows to:

	Set connection factory;
	Get connection factory;
	Set queue;
	Set queue name;
	Set destination resolver;
	Set remote invocation factory;
	Set message converter;
	Set receive timeout;
	Get receive timeout;
	Handle after properties set;
	Invoke method invocation;
	Create remote invocation;
	Execute request;
	Create connection;
	Create session;
	Resolve queue;
	Resolve queue name;
	Create request message;
	Do execute request;
	Extract invocation result;
	Process jms invoker client interceptor jms invoker client interceptor on receive timeout;
	Process jms invoker client interceptor jms invoker client interceptor on invalid response;
	Recreate remote invocation result;
	Convert jms invoker access exception

190.2. Add a class for jms invoker proxy factory bean. It allows to:

	Set service interface;
	Set bean class loader;
	Handle after properties set;
	Get object;
	Get object type;
	Check if jms invoker proxy factory bean is singleton

190.3. Add a class for jms invoker service exporter. It allows to:

	Set message converter;
	Set ignore invalid requests;
	Handle after properties set;
	Process jms invoker service exporter jms invoker service exporter on message;
	Read remote invocation;
	Write remote invocation result;
	Create response message;
	Process jms invoker service exporter jms invoker service exporter on invalid request

191. Changes to package org.springframework.jms.support:  

191.1. Add a class for jms accessor. It allows to:

	Set connection factory;
	Get connection factory;
	Obtain connection factory;
	Set session transacted;
	Check if jms accessor is session transacted;
	Set session acknowledge mode name;
	Set session acknowledge mode;
	Get session acknowledge mode;
	Handle after properties set;
	Convert jms access exception;
	Create connection;
	Create session;
	Check if jms accessor is client acknowledge

191.2. Add an interface declaration  for jms header mapper

191.3. Add an interface declaration  for jms headers

191.4. Add a class for jms message header accessor. It allows to:

	Instantiate jms message header accessor  with native headers map;
	Instantiate jms message header accessor  with message;
	Get correlation id;
	Get destination;
	Get delivery mode;
	Get expiration;
	Get message id;
	Get priority;
	Get reply  to;
	Redelivered jms message header accessor;
	Get type;
	Get timestamp;
	Wrap message

191.5. Add a class for jms message header accessor tests. It allows to:

	Validate jms headers

191.6. Add a class for jms utils. It allows to:

	Close connection;
	Close session;
	Close message producer;
	Close message consumer;
	Close queue browser;
	Close queue requestor;
	Commit session if necessary;
	Handle rollback if necessary;
	Build exception message;
	Convert jms access exception

191.7. Add a class for simple jms header mapper. It allows to:

	Process simple jms header mapper simple jms header mapper from headers;
	Convert simple jms header mapper to headers;
	Process simple jms header mapper simple jms header mapper from header name;
	Convert simple jms header mapper to header name

191.8. Add a class for simple jms header mapper tests. It allows to:

	Convert jms reply;
	Handle jms correlation id mapped from header;
	Convert jms correlation id number converts;
	Handle jms correlation id ignored if incorrect type;
	Handle jms type mapped from header;
	Handle jms type ignored if incorrect type;
	Handle jms read only properties not mapped;
	Handle content type property mapped from header;
	Handle user defined property mapped from header;
	Handle user defined property mapped from header with custom prefix;
	Handle user defined property with unsupported type;
	Attempt simple jms header mapper tests to read disallowed correlation id property is not fatal;
	Get JMS correlation ID;
	Attempt simple jms header mapper tests to read disallowed destination property is not fatal;
	Get JMS destination;
	Attempt simple jms header mapper tests to read disallowed delivery mode property is not fatal;
	Get JMS delivery mode;
	Attempt simple jms header mapper tests to read disallowed expiration property is not fatal;
	Get JMS expiration;
	Attempt simple jms header mapper tests to read disallowed message id property is not fatal;
	Get JMS message ID;
	Attempt simple jms header mapper tests to read disallowed priority property is not fatal;
	Get JMS priority;
	Attempt simple jms header mapper tests to read disallowed reply to property is not fatal;
	Get JMS reply  to;
	Attempt simple jms header mapper tests to read disallowed redelivered property is not fatal;
	Get JMS redelivered;
	Attempt simple jms header mapper tests to read disallowed type property is not fatal;
	Get JMS type;
	Attempt simple jms header mapper tests to read disallowed timestamp property is not fatal;
	Get JMS timestamp;
	Attempt simple jms header mapper tests to read disallowed user property is not fatal;
	Get object property;
	Convert jms correlation id mapped;
	Convert destination mapped;
	Convert jms delivery mode mapped;
	Convert jms expiration mapped;
	Convert jms message id mapped;
	Convert jms priority mapped;
	Convert jms type mapped;
	Convert jms timestamp mapped;
	Handle content type property mapped to header;
	Convert user defined property mapped;
	Handle property mapping exception is not fatal;
	Set object property;
	Handle illegal argument exception is not fatal;
	Attempt simple jms header mapper tests to write disallowed reply to property is not fatal;
	Set JMS reply  to reply to destination;
	Attempt simple jms header mapper tests to write disallowed type property is not fatal;
	Set JMS type;
	Attempt simple jms header mapper tests to write disallowed correlation id string property is not fatal;
	Set JMS correlation ID;
	Attempt simple jms header mapper tests to write disallowed correlation id number property is not fatal;
	Assert inbound header;
	Assert attempt read disallowed property is  not fatal;
	Handle init builder

191.9. Add a class for simple message converter tests. It allows to:

	Handle test string conversion;
	Handle test byte array conversion;
	Answer invocation on mock;
	Handle test map conversion;
	Handle test serializable conversion;
	Convert test;
	Handle test from message simply returns message as is if supplied with message;
	Handle test map conversion where map has non string types for keys;
	Handle test map conversion where map has N null for key

192. Changes to package org.springframework.jms.support.converter:  

192.1. Add a class for mapping jackson 2 message converter. It allows to:

	Instantiate mapping jackson 2 message converter;
	Set object mapper;
	Set target type;
	Set encoding;
	Set encoding property name;
	Set type id property name;
	Set type id mappings;
	Set bean class loader;
	Convert mapping jackson 2 message converter to message;
	Process mapping jackson 2 message converter mapping jackson 2 message converter from message;
	Map session to text message;
	Map session to bytes message;
	Map session to message;
	Set type id  on message;
	Convert message to object;
	Convert text message from text message;
	Convert bytes message from bytes message;
	Convert message from message;
	Get java type  for message;
	Get serialization view;
	Extract view class

192.2. Add a class for marshalling message converter. It allows to:

	Instantiate marshalling message converter;
	Instantiate marshalling message converter  with marshaller;
	Instantiate marshalling message converter  with marshaller, unmarshaller and unmarshaller;
	Set marshaller;
	Set unmarshaller;
	Set target type;
	Handle after properties set;
	Convert marshalling message converter to message;
	Process marshalling message converter marshalling message converter from message;
	Convert marshal;
	Handle unmarshal from text message;
	Handle unmarshal from bytes message;
	Handle unmarshal from message

192.3. Add a class for marshalling message converter tests. It allows to:

	Handle setup;
	Convert marshalling message converter tests to bytes message;
	Process marshalling message converter tests marshalling message converter tests from bytes message;
	Convert marshalling message converter tests to text message;
	Process marshalling message converter tests marshalling message converter tests from text message

192.4. Add a class for message conversion exception. It allows to:

	Instantiate message conversion exception;
	Instantiate message conversion exception  with cause throwable

192.5. Add an interface declaration  for message converter. It allows to:

	Convert message converter to message;
	Process message converter message converter from message

192.6. Add a class for messaging message converter. It allows to:

	Instantiate messaging message converter;
	Instantiate messaging message converter  with payload converter;
	Instantiate messaging message converter  with payload converter, jms header mapper and jms header mapper;
	Set payload converter;
	Set header mapper;
	Handle after properties set;
	Convert messaging message converter to message;
	Process messaging message converter messaging message converter from message;
	Extract payload;
	Create message  for payload;
	Extract headers

192.7. Add a class for simple message converter. It allows to:

	Convert simple message converter to message;
	Process simple message converter simple message converter from message;
	Create message  for string;
	Create message  for byte array;
	Create message  for map;
	Create message  for serializable;
	Extract string  from message;
	Extract byte array  from message;
	Extract map  from message;
	Extract serializable  from message

192.8. Add an interface declaration  for smart message converter. It allows to:

	Convert smart message converter to message

193. Changes to package org.springframework.jms.support.destination:  

193.1. Add a class for bean factory destination resolver. It allows to:

	Instantiate bean factory destination resolver;
	Instantiate bean factory destination resolver  with bean factory;
	Set bean factory;
	Resolve destination name

193.2. Add an interface declaration  for caching destination resolver. It allows to:

	Remove caching destination resolver from cache;
	Handle clear cache

193.3. Add a class for destination resolution exception. It allows to:

	Instantiate destination resolution exception;
	Instantiate destination resolution exception  with cause throwable

193.4. Add an interface declaration  for destination resolver. It allows to:

	Resolve destination name

193.5. Add a class for dynamic destination resolver. It allows to:

	Resolve destination name;
	Resolve topic;
	Resolve queue

193.6. Add a class for dynamic destination resolver tests. It allows to:

	Resolve dynamic destination resolver tests with pub sub topic session;
	Resolve dynamic destination resolver tests with pub sub vanilla session;
	Resolve dynamic destination resolver tests with point to point queue session;
	Resolve dynamic destination resolver tests with point to point vanilla session;
	Handle test resolve destination

193.7. Add a class for jms destination accessor. It allows to:

	Set destination resolver;
	Get destination resolver;
	Set pub sub domain;
	Check if jms destination accessor is pub sub domain;
	Resolve destination name;
	Receive message consumer from consumer

193.8. Add a class for jndi destination resolver. It allows to:

	Set cache;
	Set fallback  to dynamic destination;
	Set dynamic destination resolver;
	Resolve destination name;
	Validate destination;
	Remove jndi destination resolver from cache;
	Handle clear cache

194. Changes to package org.springframework.jmx:  

194.1. Add a class for abstract jmx tests. It allows to:

	Process abstract jmx tests abstract jmx tests on set up;
	Process abstract jmx tests abstract jmx tests on tear down;
	Get application context path;
	Get context

194.2. Add a class for abstract M bean server tests. It allows to:

	Set abstract M bean server tests;
	Load context;
	Tear abstract M bean server tests;
	Release server;
	Process abstract M bean server tests abstract M bean server tests on tear down;
	Process abstract M bean server tests abstract M bean server tests on set up;
	Get server;
	Start M bean exporter;
	Assert object name;
	Assert is  not registered

194.3. Add an interface declaration  for i jmx test bean. It allows to:

	Add i jmx test bean;
	My operation;
	Get age;
	Set age;
	Set name;
	Get name;
	Handle dont expose me

194.4. Add a class for jmx exception. It allows to:

	Instantiate jmx exception;
	Instantiate jmx exception  with cause throwable

194.5. Add a class for jmx test bean. It allows to:

	Get age;
	Set age;
	My operation;
	Set name;
	Get name;
	Set nick name;
	Get nick name;
	Set superman;
	Check if jmx test bean is superman;
	Add jmx test bean;
	Handle dont expose me;
	Some protected method;
	Some private method;
	Get something;
	Get something  else

194.6. Add a class for m bean server not found exception. It allows to:

	Instantiate m bean server not found exception;
	Instantiate m bean server not found exception  with cause throwable

195. Changes to package org.springframework.jmx.access:  

195.1. Add a class for connector delegate. It allows to:

	Connect JMX service URL;
	Close connector delegate

195.2. Add a class for invalid invocation exception. It allows to:

	Instantiate invalid invocation exception

195.3. Add a class for invocation failure exception. It allows to:

	Instantiate invocation failure exception;
	Instantiate invocation failure exception  with cause throwable

195.4. Add a class for m bean connect failure exception. It allows to:

	Instantiate m bean connect failure exception  with cause throwable

195.5. Add a class for m bean info retrieval exception. It allows to:

	Instantiate m bean info retrieval exception;
	Instantiate m bean info retrieval exception  with cause throwable

195.6. Add a class for m bean proxy factory bean. It allows to:

	Set proxy interface;
	Set bean class loader;
	Handle after properties set;
	Get object;
	Get object type;
	Check if m bean proxy factory bean is singleton

195.7. Add a class for notification listener registrar. It allows to:

	Set server;
	Set environment;
	Get environment;
	Set service url;
	Set agent id;
	Handle after properties set;
	Prepare notification listener registrar;
	Destroy notification listener registrar

195.8. Add a class for remote M bean client interceptor tests. It allows to:

	Process remote M bean client interceptor tests remote M bean client interceptor tests on set up;
	Get service url;
	Get server connection;
	Tear remote M bean client interceptor tests

196. Changes to package org.springframework.jmx.export:  

196.1. Add a class for custom date editor registrar. It allows to:

	Register custom editors

196.2. Add a class for custom editor configurer tests. It allows to:

	Get application context path;
	Handle test dates in jmx;
	Handle test get dates;
	Get start date;
	Get end date

196.3. Add a class for date range. It allows to:

	Get start date;
	Set start date;
	Get end date;
	Set end date

196.4. Add a class for exception on init bean. It allows to:

	Get name;
	Set name;
	Set exception on init bean except on init;
	Instantiate exception on init bean

196.5. Add a class for lazy init M bean tests. It allows to:

	Invoke lazy init M bean tests on lazy init bean

196.6. Add a class for m bean export exception. It allows to:

	Instantiate m bean export exception;
	Instantiate m bean export exception  with cause throwable

196.7. Add an interface declaration  for m bean export operations. It allows to:

	Register managed resource;
	Handle unregister managed resource

196.8. Add an interface declaration  for m bean exporter listener. It allows to:

	Handle mbean registered;
	Handle mbean unregistered

196.9. Add a class for m bean exporter operations tests. It allows to:

	Handle test register managed resource with user supplied object name;
	Handle test register existing M bean with user supplied object name;
	Handle test register managed resource with generated object name;
	Get object name;
	Handle test register managed resource with generated object name without uniqueness;
	Assert object name matches template

196.10. Add a class for notification listener bean. It allows to:

	Instantiate notification listener bean;
	Instantiate notification listener bean  with notification listener;
	Handle after properties set;
	Replace object name

196.11. Add a class for property placeholder configurer tests. It allows to:

	Get application context path;
	Handle test properties replaced;
	Handle test properties correct in jmx

196.12. Add a class for spring model M bean. It allows to:

	Instantiate spring model M bean;
	Instantiate spring model M bean  with mbi model bean info;
	Set managed resource;
	Invoke spring model M bean;
	Get attribute;
	Get attributes;
	Set attribute;
	Set attributes

196.13. Add a class for test dynamic M bean. It allows to:

	Set fail  on init;
	Get attribute;
	Set attribute;
	Get attributes;
	Set attributes;
	Invoke test dynamic M bean;
	Get M bean info;
	Check if test dynamic M bean equals;
	Hash code

196.14. Add a class for unable to register M bean exception. It allows to:

	Instantiate unable to register M bean exception;
	Instantiate unable to register M bean exception  with cause throwable

197. Changes to package org.springframework.jmx.export.annotation:  

197.1. Add a class for annotation jmx attribute source. It allows to:

	Set bean factory;
	Get managed resource;
	Get managed attribute;
	Get managed metric;
	Get managed operation;
	Get managed operation parameters;
	Get managed notifications;
	Get repeatable annotations;
	Copy properties  to bean array;
	Copy properties  to bean

197.2. Add a class for annotation lazy init M bean tests. It allows to:

	Handle lazy naming;
	Handle lazy assembling;
	Handle component scan

197.3. Add a class for annotation M bean exporter. It allows to:

	Instantiate annotation M bean exporter;
	Set default domain;
	Set bean factory

197.4. Add a class for annotation metadata assembler tests. It allows to:

	Handle test attribute from interface;
	Handle test operation from interface;
	Handle test operation on getter;
	Handle test registration on interface;
	Get attribute source;
	Get object name;
	Create jmx test bean;
	Get application context path;
	Get expected attribute count;
	Get expected operation count

197.5. Add a class for annotation test bean. It allows to:

	Get age;
	Set age;
	My operation;
	Set name;
	Get name;
	Set nick name;
	Get nick name;
	Set superman;
	Check if annotation test bean is superman;
	Add annotation test bean;
	Handle dont expose me;
	Get queue size;
	Get cache entries

197.6. Add a class for annotation test bean factory. It allows to:

	Instantiate annotation test bean factory;
	Get object;
	Get object type;
	Check if annotation test bean factory is singleton

197.7. Add a class for annotation test sub bean. It allows to:

	My operation;
	Set age;
	Get age;
	Get color;
	Set color;
	Process annotation test sub bean annotation test sub bean from interface;
	Get expensive  to calculate

197.8. Add an interface declaration  for another annotation test bean. It allows to:

	Handle foo;
	Get bar;
	Set bar;
	Get cache entries

197.9. Add a class for another annotation test bean impl. It allows to:

	Handle foo;
	Do another annotation test bean impl not expose;
	Get bar;
	Set bar;
	Get cache entries

197.10. Add a class for factory created annotation test bean

197.11. Add an interface declaration  for i annotation test bean. It allows to:

	Get color;
	Set color;
	Process i annotation test bean i annotation test bean from interface;
	Get expensive  to calculate

198. Changes to package org.springframework.jmx.export.assembler:  

198.1. Add a class for abstract autodetect tests. It allows to:

	Handle autodetect;
	Get assembler

198.2. Add a class for abstract configurable M bean info assembler. It allows to:

	Set notification infos;
	Set notification info mappings;
	Get notification info;
	Extract notification metadata

198.3. Add a class for abstract jmx assembler tests. It allows to:

	Get object name;
	Handle test M bean registration;
	Handle test register operations;
	Handle test register attributes;
	Handle test get M bean info;
	Handle test get M bean attribute info;
	Handle test get M bean operation info;
	Handle test description not null;
	Handle test set attribute;
	Handle test get attribute;
	Handle test operation invocation;
	Handle test attribute info has descriptors;
	Handle test attribute has corresponding operations;
	Handle test notification metadata;
	Get M bean info  from assembler;
	Get bean;
	Get M bean info;
	Get object instance;
	Get expected operation count;
	Get expected attribute count;
	Get assembler

198.4. Add a class for abstract M bean info assembler. It allows to:

	Get M bean info;
	Check managed bean;
	Get target class;
	Get class  to expose;
	Get class name;
	Get description;
	Populate M bean descriptor;
	Get constructor info;
	Get notification info;
	Get attribute info;
	Get operation info

198.5. Add a class for abstract metadata assembler autodetect tests. It allows to:

	Get assembler;
	Get attribute source

198.6. Add a class for abstract metadata assembler tests. It allows to:

	Handle test description;
	Handle test attribute description on setter;
	Handle test attribute description on getter;
	Handle test read only attribute;
	Handle test read write attribute;
	Handle test with only setter;
	Handle test with only getter;
	Handle test managed resource descriptor;
	Handle test attribute descriptor;
	Handle test operation descriptor;
	Handle test operation parameter metadata;
	Handle test with cglib proxy;
	Handle test metric description;
	Handle test metric descriptor;
	Handle test metric descriptor defaults;
	Get object name;
	Get expected attribute count;
	Get expected operation count;
	Create jmx test bean;
	Get assembler;
	Get attribute source

198.7. Add a class for abstract reflective M bean info assembler. It allows to:

	Set default currency time limit;
	Get default currency time limit;
	Get set use strict casing;
	Check if abstract reflective M bean info assembler is use strict casing;
	Set expose class descriptor;
	Check if abstract reflective M bean info assembler is expose class descriptor;
	Set parameter name discoverer;
	Get parameter name discoverer;
	Get attribute info;
	Get operation info;
	Create model M bean operation info;
	Get class  for descriptor;
	Include read attribute;
	Include write attribute;
	Include operation;
	Get attribute description;
	Get operation description;
	Get operation parameters;
	Populate M bean descriptor;
	Populate attribute descriptor;
	Populate operation descriptor;
	Apply default currency time limit;
	Apply currency time limit

198.8. Add an interface declaration  for autodetect capable M bean info assembler. It allows to:

	Include bean

198.9. Add an interface declaration  for i additional test methods. It allows to:

	Get nick name;
	Set nick name

198.10. Add an interface declaration  for i custom base. It allows to:

	Add i custom base;
	My operation

198.11. Add an interface declaration  for i custom jmx bean. It allows to:

	Get name;
	Set name;
	Get age

198.12. Add a class for interface based M bean info assembler. It allows to:

	Set managed interfaces;
	Set interface mappings;
	Set bean class loader;
	Handle after properties set;
	Resolve interface mappings;
	Resolve class names;
	Include read attribute;
	Include write attribute;
	Include operation;
	Check if interface based M bean info assembler is public in interface;
	Check if interface based M bean info assembler is declared in interface

198.13. Add a class for interface based M bean info assembler custom tests. It allows to:

	Get object name;
	Get expected operation count;
	Get expected attribute count;
	Get assembler;
	Handle test get age is read only;
	Get application context path

198.14. Add a class for interface based M bean info assembler mapped tests. It allows to:

	Handle test get age is read only;
	Handle test with unknown class;
	Handle test with non interface;
	Handle test with fall through;
	Handle test nick name is exposed;
	Get object name;
	Get expected operation count;
	Get expected attribute count;
	Get assembler;
	Get application context path;
	Get interface based M bean info assembler mapped tests with mapping;
	Assert nick name

198.15. Add a class for interface based M bean info assembler tests. It allows to:

	Get object name;
	Get expected operation count;
	Get expected attribute count;
	Get assembler;
	Get application context path

198.16. Add an interface declaration  for m bean info assembler. It allows to:

	Get M bean info

198.17. Add a class for metadata M bean info assembler. It allows to:

	Instantiate metadata M bean info assembler;
	Instantiate metadata M bean info assembler  with jmx attribute source;
	Set attribute source;
	Handle after properties set;
	Obtain attribute source;
	Check managed bean;
	Include bean;
	Include read attribute;
	Include write attribute;
	Include operation;
	Check if metadata M bean info assembler has managed attribute;
	Check if metadata M bean info assembler has managed metric;
	Check if metadata M bean info assembler has managed operation;
	Get description;
	Get attribute description;
	Get operation description;
	Get operation parameters;
	Get notification info;
	Populate M bean descriptor;
	Populate attribute descriptor;
	Populate metric descriptor;
	Populate operation descriptor;
	Resolve int descriptor;
	Resolve object descriptor;
	Resolve string descriptor

198.18. Add a class for method exclusion M bean info assembler. It allows to:

	Set ignored methods;
	Set ignored method mappings;
	Include read attribute;
	Include write attribute;
	Include operation;
	Check if method exclusion M bean info assembler is not ignored

198.19. Add a class for method exclusion M bean info assembler combo tests. It allows to:

	Handle test get age is read only;
	Handle test nick name is exposed;
	Get object name;
	Get expected operation count;
	Get expected attribute count;
	Get application context path;
	Get assembler

198.20. Add a class for method exclusion M bean info assembler mapped tests. It allows to:

	Handle test get age is read only;
	Handle test nick name is exposed;
	Get object name;
	Get expected operation count;
	Get expected attribute count;
	Get application context path;
	Get assembler

198.21. Add a class for method exclusion M bean info assembler not mapped tests. It allows to:

	Handle test get age is read only;
	Handle test nick name is exposed;
	Get object name;
	Get expected operation count;
	Get expected attribute count;
	Get application context path;
	Get assembler

198.22. Add a class for method exclusion M bean info assembler tests. It allows to:

	Get object name;
	Get expected operation count;
	Get expected attribute count;
	Get application context path;
	Get assembler;
	Handle test superman is read only;
	Handle test is not ignored doesnt ignore unspecified bean methods

198.23. Add a class for method name based M bean info assembler. It allows to:

	Set managed methods;
	Set method mappings;
	Include read attribute;
	Include write attribute;
	Include operation;
	Check if method name based M bean info assembler is match

198.24. Add a class for method name based M bean info assembler mapped tests. It allows to:

	Handle test get age is read only;
	Handle test with fall through;
	Handle test nick name is exposed;
	Get object name;
	Get expected operation count;
	Get expected attribute count;
	Get assembler;
	Get application context path;
	Get method name based M bean info assembler mapped tests with mapping;
	Assert nick name

198.25. Add a class for method name based M bean info assembler tests. It allows to:

	Get object name;
	Get expected operation count;
	Get expected attribute count;
	Get assembler;
	Handle test get age is read only;
	Handle test set name parameter is named;
	Get application context path

198.26. Add a class for reflective assembler tests. It allows to:

	Get object name;
	Get expected operation count;
	Get expected attribute count;
	Get assembler;
	Get application context path

198.27. Add a class for simple reflective M bean info assembler. It allows to:

	Include read attribute;
	Include write attribute;
	Include operation

199. Changes to package org.springframework.jmx.export.metadata:  

199.1. Add a class for abstract jmx attribute. It allows to:

	Set description;
	Get description;
	Set currency time limit;
	Get currency time limit

199.2. Add a class for invalid metadata exception. It allows to:

	Instantiate invalid metadata exception

199.3. Add an interface declaration  for jmx attribute source. It allows to:

	Get managed resource;
	Get managed attribute;
	Get managed metric;
	Get managed operation;
	Get managed operation parameters;
	Get managed notifications

199.4. Add an object creator class for jmx metadata utils. It allows to:

	Convert notification to model M bean notification info

199.5. Add a class for managed attribute. It allows to:

	Set default value;
	Get default value;
	Get set persist policy;
	Get persist policy;
	Set persist period;
	Get persist period

199.6. Add a class for managed metric. It allows to:

	Set category;
	Get category;
	Set display name;
	Get display name;
	Set metric type;
	Get metric type;
	Set persist period;
	Get persist period;
	Get set persist policy;
	Get persist policy;
	Set unit;
	Get unit

199.7. Add a class for managed notification. It allows to:

	Set notification type;
	Set notification types;
	Get notification types;
	Set name;
	Get name;
	Set description;
	Get description

199.8. Add a class for managed operation

199.9. Add a class for managed operation parameter. It allows to:

	Set index;
	Get index;
	Set name;
	Get name;
	Set description;
	Get description

199.10. Add a class for managed resource. It allows to:

	Set object name;
	Get object name;
	Log managed resource;
	Check if managed resource is log;
	Set log file;
	Get log file;
	Get set persist policy;
	Get persist policy;
	Set persist period;
	Get persist period;
	Set persist name;
	Get persist name;
	Set persist location;
	Get persist location

200. Changes to package org.springframework.jmx.export.naming:  

200.1. Add a class for abstract naming strategy tests. It allows to:

	Naming abstract naming strategy tests;
	Get strategy;
	Get managed resource;
	Get key;
	Get correct object name

200.2. Add a class for identity naming strategy. It allows to:

	Get object name

200.3. Add a class for identity naming strategy tests. It allows to:

	Naming identity naming strategy tests

200.4. Add a class for key naming strategy. It allows to:

	Set mappings;
	Set mapping location;
	Set mapping locations;
	Handle after properties set;
	Get object name

200.5. Add a class for key naming strategy tests. It allows to:

	Get strategy;
	Get managed resource;
	Get key;
	Get correct object name

200.6. Add a class for metadata naming strategy. It allows to:

	Instantiate metadata naming strategy;
	Instantiate metadata naming strategy  with jmx attribute source;
	Set attribute source;
	Set default domain;
	Handle after properties set;
	Get object name

200.7. Add an interface declaration  for object naming strategy. It allows to:

	Get object name

200.8. Add a class for properties file naming strategy tests. It allows to:

	Get strategy

200.9. Add a class for properties naming strategy tests. It allows to:

	Get strategy;
	Get managed resource;
	Get key;
	Get correct object name

200.10. Add an interface declaration  for self naming. It allows to:

	Get object name

201. Changes to package org.springframework.jmx.export.notification:  

201.1. Add a class for model M bean notification publisher. It allows to:

	Instantiate model M bean notification publisher  with model M bean notification broadcaster, object name and object name;
	Send notification;
	Replace notification source  if necessary

201.2. Add an interface declaration  for notification publisher. It allows to:

	Send notification

201.3. Add an interface declaration  for notification publisher aware. It allows to:

	Set notification publisher

201.4. Add a class for unable to send notification exception. It allows to:

	Instantiate unable to send notification exception;
	Instantiate unable to send notification exception  with cause throwable

202. Changes to package org.springframework.jmx.support:  

202.1. Add a class for connector server factory bean. It allows to:

	Set service url;
	Set environment;
	Set environment map;
	Set forwarder;
	Set object name;
	Threaded connector server factory bean;
	Set daemon;
	Handle after properties set;
	Run;
	Get object;
	Get object type;
	Check if connector server factory bean is singleton;
	Destroy connector server factory bean

202.2. Add a class for connector server factory bean tests. It allows to:

	Handle startup with located server;
	Handle startup with supplied server;
	Register connector server factory bean tests with M bean server;
	No register  with M bean server;
	Check server connection

202.3. Add a class for jmx utils. It allows to:

	Locate M bean server;
	Convert parameter info;
	Get method signature;
	Get attribute name;
	Append identity  to object name;
	Get class  to expose;
	Check if jmx utils is M bean;
	Get M bean interface;
	Get MX bean interface

202.4. Add a class for m bean registration support. It allows to:

	Set server;
	Get server;
	Set registration policy;
	Register object name;
	Handle unregister beans;
	Do unregister;
	Get registered object names;
	Process m bean registration support m bean registration support on register;
	Process m bean registration support m bean registration support on unregister

202.5. Add a class for m bean server connection factory bean tests. It allows to:

	Get JMX service url;
	Get connector server;
	Handle test test valid connection;
	Handle test with no service url;
	Handle test test with lazy connection;
	Handle test with lazy connection and no access

202.6. Add a class for m bean server factory bean. It allows to:

	Set locate existing server  if possible;
	Set agent id;
	Set default domain;
	Set register  with factory;
	Handle after properties set;
	Locate M bean server;
	Create M bean server;
	Get object;
	Get object type;
	Check if m bean server factory bean is singleton;
	Destroy m bean server factory bean

202.7. Add a class for m bean server factory bean tests. It allows to:

	Set m bean server factory bean tests;
	Tear m bean server factory bean tests;
	Get object;
	Handle default domain;
	Process m bean server factory bean tests m bean server factory bean tests with locate existing and existing server;
	Process m bean server factory bean tests m bean server factory bean tests with locate existing and fallback to platform server;
	Process m bean server factory bean tests m bean server factory bean tests with empty agent id and fallback to platform server;
	Create M bean server;
	Handle new M bean server;
	Handle test creation

202.8. Add a class for notification listener holder. It allows to:

	Set notification listener;
	Get notification listener;
	Set notification filter;
	Get notification filter;
	Set handback;
	Get handback;
	Set mapped object name;
	Set mapped object names;
	Get resolved object names;
	Check if notification listener holder equals;
	Hash code

202.9. Add a class for object name manager. It allows to:

	Instantiate object name manager;
	Get instance;

202.10. Add a class for web sphere M bean server factory bean. It allows to:

	Handle after properties set;
	Get object;
	Get object type;
	Check if web sphere M bean server factory bean is singleton

203. Changes to package org.springframework.jndi:  

203.1. Add a class for jndi accessor. It allows to:

	Set jndi template;
	Get jndi template;
	Set jndi environment;
	Get jndi environment

203.2. Add an interface declaration  for jndi callback. It allows to:

	Do ctx context in context

203.3. Add a class for jndi locator delegate. It allows to:

	Get lookup;
	Create default resource ref locator;
	Check if jndi locator delegate is default jndi environment available

203.4. Add a class for jndi locator delegate tests. It allows to:

	Check if jndi locator delegate tests is default jndi environment available false

203.5. Add a class for jndi locator support. It allows to:

	Set resource ref;
	Check if jndi locator support is resource ref;
	Get lookup;
	Convert jndi name

203.6. Add a class for jndi lookup failure exception. It allows to:

	Instantiate jndi lookup failure exception  with cause naming exception

203.7. Add a class for jndi object factory bean tests. It allows to:

	Handle test no jndi name;
	Handle test lookup with full name and resource ref true;
	Handle test lookup with full name and resource ref false;
	Handle test lookup with scheme name and resource ref true;
	Handle test lookup with scheme name and resource ref false;
	Handle test lookup with short name and resource ref true;
	Handle test lookup with short name and resource ref false;
	Handle test lookup with arbitrary name and resource ref false;
	Handle test lookup with expected type and match;
	Handle test lookup with expected type and no match;
	Handle test lookup with default object;
	Handle test lookup with default object and expected type;
	Handle test lookup with default object and expected type conversion;
	Handle test lookup with default object and expected type conversion via bean factory;
	Handle test lookup with default object and expected type no match;
	Handle test lookup with proxy interface;
	Handle test lookup with proxy interface and default object;
	Handle test lookup with proxy interface and lazy lookup;
	Get lookup;
	Handle test lookup with proxy interface with not cache;
	Handle test lookup with proxy interface with lazy lookup and not cache;
	Handle test lazy lookup without proxy interface;
	Handle test not cache without proxy interface;
	Handle test lookup with proxy interface and expected type and match;
	Handle test lookup with proxy interface and expected type and no match;
	Handle test lookup with expose access context;
	Create initial context

203.8. Add a class for jndi object locator. It allows to:

	Set jndi name;
	Get jndi name;
	Set expected type;
	Get expected type;
	Handle after properties set;
	Get lookup

203.9. Add a class for jndi object target source. It allows to:

	Set lookup  on startup;
	Set cache;
	Handle after properties set;
	Get target class;
	Check if jndi object target source is static;
	Get target;
	Release target

203.10. Add a class for jndi property source. It allows to:

	Instantiate jndi property source;
	Instantiate jndi property source  with jndi locator delegate;
	Get property

203.11. Add a class for jndi property source tests. It allows to:

	Non existent property;
	Name bound  without prefix;
	Create initial context;
	Name bound  with prefix;
	Handle property with default clause in resource ref mode;
	Get lookup;
	Handle property with colon in non resource ref mode;

203.12. Add a class for jndi template. It allows to:

	Instantiate jndi template;
	Instantiate jndi template  with environment properties;
	Set environment;
	Get environment;
	Execute context callback;
	Get context;
	Release context;
	Create initial context;
	Get lookup;
	Handle bind;
	Rebind jndi template;
	Unbind jndi template

203.13. Add a class for jndi template editor. It allows to:

	Get set as text

203.14. Add a class for jndi template editor tests. It allows to:

	Handle test null is illegal argument;
	Handle test empty string means null environment;
	Handle test custom environment

203.15. Add a class for jndi template tests. It allows to:

	Handle test lookup succeeds;
	Create initial context;
	Handle test lookup fails;
	Handle test lookup returns null;
	Handle test lookup fails with type mismatch;
	Handle test bind;
	Handle test rebind;
	Handle test unbind;

203.16. Add a class for type mismatch naming exception. It allows to:

	Instantiate type mismatch naming exception  with required type class, actual type class and actual type class;
	Get required type;
	Get actual type

204. Changes to package org.springframework.jndi.support:  

204.1. Add a class for simple jndi bean factory. It allows to:

	Instantiate simple jndi bean factory;
	Add shareable resource;
	Set shareable resources;
	Get bean;
	Get bean provider;
	Get object;
	Get  if available;
	Get  if unique;
	Check if simple jndi bean factory contains bean;
	Check if simple jndi bean factory is singleton;
	Check if simple jndi bean factory is prototype;
	Check if simple jndi bean factory is type match;
	Get type;
	Get aliases;
	Do get singleton;
	Do get type

205. Changes to package org.springframework.mail:  

205.1. Add a class for mail authentication exception. It allows to:

	Instantiate mail authentication exception;
	Instantiate mail authentication exception  with cause throwable;

205.2. Add a class for mail exception. It allows to:

	Instantiate mail exception;
	Instantiate mail exception  with cause throwable

205.3. Add an interface declaration  for mail message. It allows to:

	Get set from;
	Set reply  to;
	Set mail message to;
	Set cc;
	Set bcc;
	Set sent date;
	Set subject;
	Set text

205.4. Add a class for mail parse exception. It allows to:

	Instantiate mail parse exception;
	Instantiate mail parse exception  with cause throwable;

205.5. Add a class for mail preparation exception. It allows to:

	Instantiate mail preparation exception;
	Instantiate mail preparation exception  with cause throwable;

205.6. Add a class for mail send exception. It allows to:

	Instantiate mail send exception;
	Instantiate mail send exception  with cause throwable;
	Instantiate mail send exception  with cause throwable, failed messages map and failed messages map;
	Instantiate mail send exception  with failed messages map;
	Get failed messages;
	Get message exceptions;
	Get message;
	Convert mail send exception to string;
	Print ps print stream;
	Print pw print writer

205.7. Add an interface declaration  for mail sender. It allows to:

	Send simple mail message;

205.8. Add a class for simple mail message. It allows to:

	Instantiate simple mail message;
	Instantiate simple mail message  with original simple mail message;
	Get set from;
	Get simple mail message from;
	Set reply  to;
	Get reply  to;
	Set simple mail message to;
	Get simple mail message to;
	Set cc;
	Get simple mail message;
	Set bcc;
	Get bcc;
	Set sent date;
	Get sent date;
	Set subject;
	Get subject;
	Set text;
	Get text;
	Copy  to target mail message;
	Check if simple mail message equals;
	Hash code;
	Convert simple mail message to string;
	Copy simple mail message;
	Get copy

205.9. Add a class for simple mail message tests. It allows to:

	Handle test simple message copy ctor;
	Handle test deep copy of string array typed fields on copy ctor;
	Handle test hash code;
	Handle test equals object;
	Handle test copy ctor chokes on null original message;
	Convert test copy

206. Changes to package org.springframework.mail.javamail:  

206.1. Add a class for configurable mime file type map. It allows to:

	Set mapping location;
	Set mappings;
	Handle after properties set;
	Get file type map;
	Create file type map;
	Get content type;

206.2. Add a class for configurable mime file type map tests. It allows to:

	Process configurable mime file type map tests configurable mime file type map tests against default configuration;
	Process configurable mime file type map tests configurable mime file type map tests against default configuration with file path;
	Process configurable mime file type map tests configurable mime file type map tests with additional mappings;
	Process configurable mime file type map tests configurable mime file type map tests with custom mapping location

206.3. Add a class for internet address editor. It allows to:

	Get set as text;
	Get internet address editor as text

206.4. Add a class for internet address editor tests. It allows to:

	Handle uninitialized;
	Set null;
	Set empty;
	All whitespace;
	Handle simple good address;
	Handle excess whitespace;
	Handle simple bad address

206.5. Add an interface declaration  for java mail sender. It allows to:

	Create mime message;
	Send mime message;
	Send mime messages;
	Send mime message preparator;
	Send mime message preparators

206.6. Add a class for java mail sender impl. It allows to:

	Instantiate java mail sender impl;
	Set java mail properties;
	Get java mail properties;
	Set session;
	Get session;
	Set protocol;
	Get protocol;
	Set host;
	Get host;
	Set port;
	Get port;
	Set username;
	Get username;
	Set password;
	Get password;
	Set default encoding;
	Get default encoding;
	Set default file type map;
	Get default file type map;
	Send simple mail message;
	Create mime message;
	Send mime message;
	Send mime messages;
	Send mime message preparator;
	Send mime message preparators;
	Handle test connection;
	Connect transport;
	Get transport

206.7. Add a class for mime mail message. It allows to:

	Instantiate mime mail message  with mime message helper;
	Instantiate mime mail message  with mime message;
	Get mime message helper;
	Get mime message;
	Get set from;
	Set reply  to;
	Set mime mail message to;
	Set cc;
	Set bcc;
	Set sent date;
	Set subject;
	Set text

206.8. Add a class for mime message helper. It allows to:

	Instantiate mime message helper  with mime message;
	Get mime message;
	Create mime multiparts;
	Set mime multiparts;
	Check if mime message helper is multipart;
	Get root mime multipart;
	Get mime multipart;
	Get default encoding;
	Encoding mime message helper;
	Get default file type map;
	Set file type map;
	Get file type map;
	Set validate addresses;
	Check if mime message helper is validate addresses;
	Validate address;
	Validate addresses;
	Get set from;
	Set reply  to reply to internet address;
	Set reply  to;
	Set  to to internet address;
	Set mime message helper to;
	Add  to to internet address;
	Add mime message helper to;
	Set cc;
	Add cc;
	Set bcc;
	Add bcc;
	Parse address;
	Set priority;
	Set sent date;
	Set subject;
	Set text;
	Get main part;
	Set plain text  to mime part;
	Set html text  to mime part;
	Add inline;
	Add attachment;
	Create data source;
	Get input stream;
	Get output stream;
	Get content type;
	Get name

206.9. Add an interface declaration  for mime message preparator. It allows to:

	Prepare mime message

206.10. Add a class for smart mime message. It allows to:

	Instantiate smart mime message  with session, default file type map and default file type map;
	Get default encoding;
	Get default file type map

207. Changes to package org.springframework.messaging:  

207.1. Add an interface declaration  for message. It allows to:

	Get payload;
	Get headers

207.2. Add an interface declaration  for message channel. It allows to:

	Send message;

207.3. Add a class for message delivery exception. It allows to:

	Instantiate message delivery exception;
	Instantiate message delivery exception  with undelivered message;
	Instantiate message delivery exception  with message, cause throwable and cause throwable;
	Instantiate message delivery exception  with undelivered message, cause throwable and cause throwable

207.4. Add an interface declaration  for message handler. It allows to:

	Handle message

207.5. Add a class for message handling exception. It allows to:

	Instantiate message handling exception  with failed message;
	Instantiate message handling exception  with message;
	Instantiate message handling exception  with failed message, cause throwable and cause throwable;
	Instantiate message handling exception  with message, cause throwable and cause throwable

207.6. Add a class for message headers. It allows to:

	Instantiate message headers  with headers map;
	Instantiate message headers  with headers map, UUID and UUID;
	Instantiate message headers  with original message headers, keys to ignore set and keys to ignore set;
	Get raw headers;
	Get id generator;
	Get id;
	Get timestamp;
	Get reply channel;
	Get error channel;
	Get type class;
	Check if message headers contains key;
	Check if message headers contains value;
	Get entry set;
	Get message headers;
	Check if message headers is empty;
	Handle key set;
	Get size;
	Get values;
	Put message headers;
	Put map;
	Remove message headers;
	Handle clear;
	Write object;
	Read object;
	Check if message headers equals;
	Hash code;
	Convert message headers to string

207.7. Add a class for message headers tests. It allows to:

	Handle test timestamp;
	Handle test timestamp overwritten;
	Handle test timestamp provided;
	Handle test timestamp provided null value;
	Handle test timestamp none;
	Handle test id overwritten;
	Handle test id;
	Handle test id provided;
	Handle test id provided null value;
	Handle test id none;
	Handle test non typed access of header value;
	Handle test typed access of header value;
	Handle test header value access with incorrect type;
	Handle test null header value;
	Handle test null header value with typed access;
	Handle test header keys;
	Serialize message headers tests with all serializable headers;
	Serialize message headers tests with non serializable header;
	Handle subclass with custom id and no timestamp

207.8. Add a class for messaging exception. It allows to:

	Instantiate messaging exception  with message;
	Instantiate messaging exception;
	Instantiate messaging exception  with cause throwable;
	Instantiate messaging exception  with message, cause throwable and cause throwable;
	Get failed message;
	Convert messaging exception to string

207.9. Add an interface declaration  for pollable channel. It allows to:

	Receive pollable channel;

207.10. Add a class for stub message channel. It allows to:

	Get messages;
	Send message;
	Subscribe message handler;
	Handle unsubscribe

207.11. Add an interface declaration  for subscribable channel. It allows to:

	Subscribe message handler;
	Handle unsubscribe

208. Changes to package org.springframework.messaging.converter:  

208.1. Add a class for abstract message converter. It allows to:

	Instantiate abstract message converter  with supported mime type;
	Instantiate abstract message converter  with supported mime types collection;
	Get supported mime types;
	Set content type resolver;
	Get content type resolver;
	Set strict content type match;
	Check if abstract message converter is strict content type match;
	Set serialized payload class;
	Get serialized payload class;
	Get default content type;
	Process abstract message converter abstract message converter from message;
	Can convert  from;
	Convert abstract message converter to message;
	Convert can convert;
	Check if abstract message converter supports mime type;
	Get mime type;
	Handle supports;
	Convert message from internal;
	Convert message headers to internal

208.2. Add a class for byte array message converter. It allows to:

	Instantiate byte array message converter;
	Handle supports;
	Convert message from internal;
	Convert message headers to internal

208.3. Add a class for composite message converter. It allows to:

	Instantiate composite message converter  with converters collection;
	Process composite message converter composite message converter from message;
	Convert composite message converter to message;
	Get converters;
	Convert composite message converter to string

208.4. Add an interface declaration  for content type resolver. It allows to:

	Resolve message headers

208.5. Add a class for default content type resolver. It allows to:

	Set default mime type;
	Get default mime type;
	Resolve message headers;
	Convert default content type resolver to string

208.6. Add a class for default content type resolver tests. It allows to:

	Handle setup;
	Resolve default content type resolver tests;
	Resolve string content type;
	Resolve invalid string content type;
	Resolve unknown header type;
	Resolve no content type header;
	Resolve default mime type

208.7. Add a class for generic message converter. It allows to:

	Instantiate generic message converter;
	Instantiate generic message converter  with conversion service;
	Process generic message converter generic message converter from message

208.8. Add a class for generic message converter tests. It allows to:

	Process generic message converter tests generic message converter tests from message with conversion;
	Process generic message converter tests generic message converter tests from message no converter;
	Process generic message converter tests generic message converter tests from message with failed conversion

208.9. Add a class for mapping jackson 2 message converter. It allows to:

	Instantiate mapping jackson 2 message converter;
	Instantiate mapping jackson 2 message converter  with supported mime types;
	Handle init object mapper;
	Set object mapper;
	Get object mapper;
	Set mapping jackson 2 message converter pretty print;
	Configure mapping jackson 2 message converter pretty print;
	Can convert  from;
	Convert can convert;
	Log warning  if necessary;
	Handle supports;
	Convert message from internal;
	Get java type;
	Convert message headers to internal;
	Get serialization view;
	Extract view class;
	Get json encoding

208.10. Add a class for marshalling message converter. It allows to:

	Instantiate marshalling message converter;
	Instantiate marshalling message converter  with supported mime types;
	Instantiate marshalling message converter  with marshaller;
	Set marshaller;
	Get marshaller;
	Set unmarshaller;
	Get unmarshaller;
	Can convert  from;
	Convert can convert;
	Handle supports;
	Convert message from internal;
	Get source;
	Convert message headers to internal

208.11. Add a class for message conversion exception. It allows to:

	Instantiate message conversion exception;
	Instantiate message conversion exception  with cause throwable;
	Instantiate message conversion exception  with failed message;
	Instantiate message conversion exception  with failed message, cause throwable and cause throwable

208.12. Add an interface declaration  for message converter. It allows to:

	Process message converter message converter from message;
	Convert message converter to message

208.13. Add a class for simple message converter. It allows to:

	Process simple message converter simple message converter from message;
	Convert simple message converter to message

208.14. Add a class for simple message converter tests. It allows to:

	Convert simple message converter tests to message with payload and headers;
	Convert simple message converter tests to message with payload and mutable headers

208.15. Add an interface declaration  for smart message converter. It allows to:

	Process smart message converter smart message converter from message;
	Convert smart message converter to message

208.16. Add a class for string message converter. It allows to:

	Instantiate string message converter;
	Instantiate string message converter  with default charset;
	Handle supports;
	Convert message from internal;
	Convert message headers to internal;
	Get content type charset

208.17. Add a class for string message converter tests. It allows to:

	Process string message converter tests string message converter tests from byte array message;
	Process string message converter tests string message converter tests from string message;
	Process string message converter tests string message converter tests from message no content type header;
	Process string message converter tests string message converter tests from message charset;
	Process string message converter tests string message converter tests from message default charset;
	Handle from message target class not supported;
	Process string message converter tests string message converter tests from message byte array;
	Convert string message converter tests to message

209. Changes to package org.springframework.messaging.core:  

209.1. Add a class for abstract destination resolving messaging template. It allows to:

	Set destination resolver;
	Get destination resolver;
	Send message;
	Resolve destination;
	Convert payload;
	Receive abstract destination resolving messaging template;
	Receive target class;
	Send request message;
	Convert target class;
	Convert headers map;

209.2. Add a class for abstract message receiving template. It allows to:

	Receive abstract message receiving template;
	Receive destination;
	Receive target class;
	Convert message

209.3. Add a class for abstract message sending template. It allows to:

	Set default destination;
	Get default destination;
	Set message converter;
	Get message converter;
	Send message;
	Get required default destination;
	Send destination;
	Convert abstract message sending template;
	Convert destination;
	Convert message post processor;
	Convert headers map;
	Convert process headers

209.4. Add a class for abstract messaging template. It allows to:

	Send request message;
	Send destination;
	Do destination;
	Convert target class;
	Convert destination;

209.5. Add a class for bean factory message channel destination resolver. It allows to:

	Instantiate bean factory message channel destination resolver;
	Instantiate bean factory message channel destination resolver  with bean factory;
	Set bean factory;
	Resolve destination

209.6. Add a class for caching destination resolver proxy. It allows to:

	Instantiate caching destination resolver proxy;
	Instantiate caching destination resolver proxy  with target destination resolver;
	Set target destination resolver;
	Handle after properties set;
	Resolve destination

209.7. Add a class for caching destination resolver tests. It allows to:

	Get cached destination;
	No target set;
	Handle null target through constructor

209.8. Add a class for destination resolution exception. It allows to:

	Instantiate destination resolution exception;
	Instantiate destination resolution exception  with cause throwable

209.9. Add an interface declaration  for destination resolver. It allows to:

	Resolve destination

209.10. Add an interface declaration  for destination resolving message receiving operations. It allows to:

	Receive destination resolving message receiving operations;
	Receive target class

209.11. Add an interface declaration  for destination resolving message request reply operations. It allows to:

	Send request message;
	Convert target class;
	Convert headers map;

209.12. Add an interface declaration  for destination resolving message sending operations. It allows to:

	Send message;
	Convert payload;

209.13. Add an interface declaration  for message post processor. It allows to:

	Post process message

209.14. Add an interface declaration  for message receiving operations. It allows to:

	Receive message receiving operations;
	Receive destination;
	Receive target class;

209.15. Add an interface declaration  for message request reply operations. It allows to:

	Send request message;
	Send destination;
	Convert target class;
	Convert destination;

209.16. Add an interface declaration  for message sending operations. It allows to:

	Send message;
	Send destination;
	Convert message sending operations;
	Convert destination;
	Convert message post processor;

209.17. Add a class for test message channel destination resolver. It allows to:

	Register message channel;
	Resolve destination

209.18. Add a class for test message post processor. It allows to:

	Get message;
	Post process message

210. Changes to package org.springframework.messaging.handler:  

210.1. Add a class for abstract message condition. It allows to:

	Check if abstract message condition equals;
	Hash code;
	Convert abstract message condition to string;
	Get content;
	Get abstract message condition to string infix

210.2. Add a class for destination patterns message condition. It allows to:

	Instantiate destination patterns message condition;
	Instantiate destination patterns message condition  with path matcher;
	Instantiate destination patterns message condition  with patterns collection, path matcher and path matcher;
	Prepend patterns collection;
	Get patterns;
	Get content;
	Get destination patterns message condition to string infix;
	Combine other destination patterns message condition;
	Get matching condition;
	Compare  to other destination patterns message condition

210.3. Add a class for destination patterns message condition tests. It allows to:

	Slash destination patterns message condition tests;
	Prepend slash  with custom path separator;
	Prepend non empty patterns  only;
	Combine empty sets;
	Combine one pattern  with empty set;
	Combine multiple patterns;
	Match direct path;
	Match pattern;
	Match sort patterns;
	Compare equal patterns;
	Compare pattern specificity;
	Compare number  of matching patterns;
	Get condition;
	Convert message

210.4. Add an interface declaration  for message condition. It allows to:

	Combine other;
	Get matching condition;
	Compare  to other

210.5. Add an interface declaration  for messaging advice bean. It allows to:

	Get bean type;
	Resolve bean;
	Check if messaging advice bean is applicable to bean type

211. Changes to package org.springframework.messaging.handler.annotation:  

211.1. Add an interface declaration  for value constants

212. Changes to package org.springframework.messaging.handler.annotation.support:  

212.1. Add a class for annotation exception handler method resolver. It allows to:

	Instantiate annotation exception handler method resolver  with handler type class;
	Handle init exception mappings

212.2. Add a class for default message handler method factory. It allows to:

	Set conversion service;
	Set message converter;
	Set validator;
	Set custom argument resolvers;
	Set argument resolvers;
	Set bean factory;
	Handle after properties set;
	Create invocable handler method;
	Handle init argument resolvers

212.3. Add a class for destination variable method argument resolver tests. It allows to:

	Check if destination variable method argument resolver tests supports parameter;
	Resolve argument;
	Resolve argument  not found;
	Handle message

212.4. Add a class for headers method argument resolver. It allows to:

	Check if headers method argument resolver supports parameter;
	Resolve argument

212.5. Add an interface declaration  for message handler method factory. It allows to:

	Create invocable handler method

212.6. Add a class for message method argument resolver. It allows to:

	Instantiate message method argument resolver;
	Instantiate message method argument resolver  with message converter;
	Check if message method argument resolver supports parameter;
	Resolve argument;
	Get payload type;
	Check if message method argument resolver is empty payload;
	Convert payload

212.7. Add a class for method argument not valid exception. It allows to:

	Instantiate method argument not valid exception  with message, method parameter and method parameter;
	Instantiate method argument not valid exception  with message, method parameter, binding result and binding result;
	Get binding result;
	Get validation error message

212.8. Add a class for method argument type mismatch exception. It allows to:

	Instantiate method argument type mismatch exception  with message, method parameter and method parameter

212.9. Add a class for payload argument resolver. It allows to:

	Instantiate payload argument resolver  with message converter;
	Instantiate payload argument resolver  with message converter, validator and validator;
	Check if payload argument resolver supports parameter;
	Resolve argument;
	Get parameter name;
	Check if payload argument resolver is empty payload;
	Validate message

212.10. Add a class for payload argument resolver tests. It allows to:

	Handle setup;
	Check if payload argument resolver tests supports parameter;
	Required payload argument resolver tests;
	Resolve required empty;
	Resolve required empty non annotated parameter;
	Resolve payload argument resolver tests not required;
	Resolve non convertible param;
	Resolve spel expression  not supported;
	Resolve validation;
	Resolve fail validation;
	Resolve fail validation no conversion necessary;
	Resolve non annotated parameter;
	Resolve non annotated parameter fail validation;
	Get test validator;
	Handle supports;
	Validate errors;
	Handle message

213. Changes to package org.springframework.messaging.handler.invocation:  

213.1. Add a class for abstract async return value handler. It allows to:

	Check if abstract async return value handler is async return value;
	Handle return value

213.2. Add a class for abstract exception handler method resolver. It allows to:

	Instantiate abstract exception handler method resolver  with mapped methods;
	Get exceptions  from method signature;
	Check if abstract exception handler method resolver has exception mappings;
	Resolve method;
	Resolve method  by exception type;
	Get mapped method

213.3. Add an interface declaration  for async handler method return value handler. It allows to:

	Check if async handler method return value handler is async return value;
	Convert async handler method return value handler to listenable future

213.4. Add a class for completable future return value handler. It allows to:

	Check if completable future return value handler supports return type;
	Convert completable future return value handler to listenable future

213.5. Add an interface declaration  for handler method argument resolver. It allows to:

	Check if handler method argument resolver supports parameter;
	Resolve argument

213.6. Add a class for handler method argument resolver composite. It allows to:

	Add resolver;
	Add resolvers;
	Get resolvers;
	Handle clear;
	Check if handler method argument resolver composite supports parameter;
	Resolve argument;
	Get argument resolver

213.7. Add an interface declaration  for handler method return value handler. It allows to:

	Check if handler method return value handler supports return type;
	Handle return value

213.8. Add a class for handler method return value handler composite. It allows to:

	Set logger;
	Get logger;
	Get return value handlers;
	Handle clear;
	Add handler;
	Add handlers;
	Check if handler method return value handler composite supports return type;
	Get return value handler;
	Handle return value;
	Check if handler method return value handler composite is async return value;
	Convert handler method return value handler composite to listenable future

213.9. Add a class for listenable future return value handler. It allows to:

	Check if listenable future return value handler supports return type;
	Convert listenable future return value handler to listenable future

214. Changes to package org.springframework.messaging.simp:  

214.1. Add a class for simp attributes. It allows to:

	Instantiate simp attributes  with attributes map;
	Get attribute;
	Set attribute;
	Remove attribute;
	Get attribute names;
	Register destruction callback;
	Remove destruction callback;
	Get session id;
	Get session mutex;
	Check if simp attributes is session completed;
	Handle session completed;
	Execute destruction callbacks;
	Process simp attributes simp attributes from message

214.2. Add a class for simp attributes context holder. It allows to:

	Reset attributes;
	Set attributes;
	Set attributes  from message;
	Get attributes;
	Handle current attributes

214.3. Add a class for simp attributes context holder tests. It allows to:

	Set simp attributes context holder tests;
	Tear simp attributes context holder tests;
	Reset attributes;
	Get attributes;
	Set attributes;
	Set attributes  from message;
	Set attributes  from message with missing session id;
	Set attributes  from message with missing session attributes;
	Handle current attributes;
	Handle current attributes none

214.4. Add a class for simp attributes tests. It allows to:

	Handle setup;
	Get attribute;
	Get attribute names;
	Register destruction callback;
	Register destruction callback  after session completed;
	Remove destruction callback;
	Get session mutex;
	Get session mutex explicit;
	Handle session completed;
	Handle session completed is idempotent

214.5. Add a class for simp message header accessor. It allows to:

	Instantiate simp message header accessor  with simp message type, external source headers map and external source headers map;
	Instantiate simp message header accessor  with message;
	Create accessor;
	Set message type  if not set;
	Get message type;
	Set destination;
	Get destination;
	Set subscription id;
	Get subscription id;
	Set session id;
	Get session id;
	Set session attributes;
	Get session attributes;
	Set user;
	Get user;
	Get short log message;
	Get detailed log message;
	Get base log message;
	Create simp message header accessor;
	Create simp message type;
	Wrap message;
	Get heartbeat

214.6. Add a class for simp message header accessor tests. It allows to:

	Get short log message;
	Get log message  with values set;
	Get detailed log message  with values set

214.7. Add a class for simp message mapping info. It allows to:

	Instantiate simp message mapping info  with simp message type message condition, destination patterns message condition and destination patterns message condition;
	Instantiate simp message mapping info  with delegate composite message condition;
	Get message type message condition;
	Get destination conditions;
	Combine other simp message mapping info;
	Get matching condition;
	Compare  to other simp message mapping info;
	Check if simp message mapping info equals;
	Hash code;
	Convert simp message mapping info to string

214.8. Add an interface declaration  for simp message sending operations. It allows to:

	Convert and send  to user;

214.9. Add a class for simp message type message condition. It allows to:

	Instantiate simp message type message condition  with simp message type;
	Get message type;
	Get content;
	Get simp message type message condition to string infix;
	Combine other simp message type message condition;
	Get matching condition;
	Compare  to other simp message type message condition

214.10. Add a class for simp message type message condition tests. It allows to:

	Combine simp message type message condition tests;
	Get matching condition;
	Get matching condition no message type;
	Compare simp message type message condition tests to;
	Get message;
	Get condition

214.11. Add a class for simp messaging template. It allows to:

	Instantiate simp messaging template  with message channel;
	Get message channel;
	Set user destination prefix;
	Get user destination prefix;
	Set send timeout;
	Get send timeout;
	Set header initializer;
	Get header initializer;
	Send message;
	Send internal;
	Handle init headers;
	Convert and send  to user;
	Convert process headers

214.12. Add a class for simp messaging template tests. It allows to:

	Handle setup;
	Convert and send  to user;
	Convert and send  to user with encoding;
	Convert and send  with custom header;
	Convert and send  with custom header non native;
	Convert and send  with custom destination prefix;
	Convert and send  with mutable simp message headers;
	Convert process headers;
	Do send  with mutable headers;
	Do send  with stomp headers

214.13. Add a class for simp session scope. It allows to:

	Get object factory;
	Remove simp session scope;
	Register destruction callback;
	Resolve contextual object;
	Get conversation id

214.14. Add a class for simp session scope tests. It allows to:

	Set simp session scope tests;
	Tear simp session scope tests;
	Get simp session scope tests;
	Get simp session scope tests with object factory;
	Remove simp session scope tests;
	Register destruction callback;
	Get session id

214.15. Add a class for test principal. It allows to:

	Instantiate test principal;
	Get name;
	Check if test principal equals;
	Hash code

215. Changes to package org.springframework.messaging.simp.annotation.support:  

215.1. Add a class for missing session user exception. It allows to:

	Instantiate missing session user exception  with message

215.2. Add a class for principal method argument resolver. It allows to:

	Check if principal method argument resolver supports parameter;
	Resolve argument

215.3. Add a class for simp annotation method message handler. It allows to:

	Instantiate simp annotation method message handler  with client inbound channel, client outbound channel, broker template simp message sending operations and broker template simp message sending operations;
	Set destination prefixes;
	Append slashes;
	Set message converter;
	Get message converter;
	Set conversion service;
	Get conversion service;
	Set path matcher;
	Get path matcher;
	Get validator;
	Set validator;
	Set embedded value resolver;
	Set header initializer;
	Get header initializer;
	Start simp annotation method message handler;
	Stop simp annotation method message handler;
	Stop callback runnable;
	Check if simp annotation method message handler is running;
	Handle init argument resolvers;
	Handle init return value handlers;
	Get return value handler logger;
	Get handler method logger;
	Check if simp annotation method message handler is handler;
	Get mapping  for method;
	Create message mapping condition;
	Create subscribe mapping condition;
	Resolve embedded values  in destinations;
	Get direct lookup destinations;
	Get destination;
	Get lookup destination;
	Get matching mapping;
	Get mapping comparator;
	Handle match;
	Create exception handler method resolver  for bean type class

215.4. Add a class for subscription method return value handler. It allows to:

	Instantiate subscription method return value handler  with template message sending operations;
	Set header initializer;
	Get header initializer;
	Check if subscription method return value handler supports return type;
	Handle return value;
	Create headers

216. Changes to package org.springframework.messaging.simp.broker:  

216.1. Add a class for abstract subscription registry. It allows to:

	Register subscription;
	Handle unregister subscription;
	Find subscriptions;
	Add subscription internal;
	Remove subscription internal;
	Find subscriptions internal

216.2. Add a class for broker availability event. It allows to:

	Instantiate broker availability event;
	Check if broker availability event is broker available;
	Convert broker availability event to string

216.3. Add a class for default subscription registry tests. It allows to:

	Register subscription invalid input;
	Register subscription;
	Register subscription one session;
	Register subscription multiple sessions;
	Register subscription  with destination pattern;
	Register subscriptions  with simple and pattern destinations;
	Register and unregister multiple destinations;
	Register subscription  with destination pattern regex;
	Register subscription  with selector;
	Register subscription  with selector not supported;
	Register subscription  twice and unregister;
	Handle unregister subscription;
	Handle unregister all subscriptions;
	Handle unregister all subscriptions no match;
	Find subscriptions no matches;
	Find subscriptions returns map safe  to iterate;
	Find subscriptions returns map safe  to iterate including values;
	Handle cache limit exceeded;
	Create message;
	Subscribe message;
	Handle unsubscribe message;
	Get sort

216.4. Add a class for simple broker message handler tests. It allows to:

	Handle setup;
	Publish simple broker message handler tests;
	Subscribe simple broker message handler tests;
	Connect simple broker message handler tests;
	Handle heartbeat value with and without task scheduler;
	Start simple broker message handler tests with heartbeat value without task scheduler;
	Start and stop  with heartbeat value;
	Start simple broker message handler tests with one zero heartbeat value;
	Read inactivity;
	Write inactivity;
	Read write interval calculation;
	Start session;
	Create subscription message;
	Create connect message;
	Create message;
	Handle message captured

216.5. Add an interface declaration  for subscription registry. It allows to:

	Register subscription;
	Handle unregister subscription;
	Handle unregister all subscriptions;
	Find subscriptions

217. Changes to package org.springframework.messaging.simp.config:  

217.1. Add a class for abstract broker registration. It allows to:

	Instantiate abstract broker registration  with client inbound channel, client outbound channel and client outbound channel;
	Get client inbound channel;
	Get client outbound channel;
	Get destination prefixes;
	Get message handler

217.2. Add a class for abstract message broker configuration. It allows to:

	Instantiate abstract message broker configuration;
	Set application context;
	Get application context;
	Get client inbound channel;
	Get client inbound channel executor;
	Get client inbound channel registration;
	Configure client inbound channel;
	Get client outbound channel;
	Get client outbound channel executor;
	Get client outbound channel registration;
	Configure client outbound channel;
	Get broker channel;
	Get broker channel executor;
	Get broker registry;
	Configure message broker;
	Get path matcher;
	Simp annotation method message handler;
	Create annotation method message handler;
	Add argument resolvers;
	Add return value handlers;
	Handle simple broker message handler;
	Update user destination resolver;
	Stomp broker relay message handler;
	Get user destination message handler;
	Get user registry message handler;
	Get message broker task scheduler;
	Get broker messaging template;
	Get broker message converter;
	Create jackson converter;
	Configure message converters;
	Get user destination resolver;
	Get user registry;
	Create local user registry;
	Simp validator;
	Handle supports;
	Validate errors;
	Get validator

217.3. Add a class for channel registration. It allows to:

	Get task executor;
	Get interceptors;
	Set interceptors;
	Check if channel registration has task executor;
	Check if channel registration has interceptors;

217.4. Add a class for message broker registry. It allows to:

	Instantiate message broker registry  with client inbound channel, client outbound channel and client outbound channel;
	Enable simple broker;
	Enable stomp broker relay;
	Configure broker channel;
	Get broker channel registration;
	Get user destination broadcast;
	Get user registry broadcast;
	Set application destination prefixes;
	Get application destination prefixes;
	Set user destination prefix;
	Get user destination prefix;
	Set user registry order;
	Get user registry order;
	Set path matcher;
	Get path matcher;
	Set cache limit;
	Set preserve publish order;
	Get simple broker;
	Get stomp broker relay

217.5. Add a class for simple broker registration. It allows to:

	Instantiate simple broker registration  with in channel, out channel and out channel;
	Set task scheduler;
	Set heartbeat value;
	Set selector header name;
	Get message handler

217.6. Add a class for stomp broker relay registration. It allows to:

	Instantiate stomp broker relay registration  with client inbound channel, client outbound channel and client outbound channel;
	Set relay host;
	Set relay port;
	Set client login;
	Set client passcode;
	Set system login;
	Set system passcode;
	Set system heartbeat send interval;
	Set system heartbeat receive interval;
	Get set virtual host;
	Set tcp client;
	Set auto startup;
	Set user destination broadcast;
	Get user destination broadcast;
	Set user registry broadcast;
	Get user registry broadcast;
	Get message handler

217.7. Add a class for stomp broker relay registration tests. It allows to:

	Handle test

217.8. Add a class for task executor registration. It allows to:

	Instantiate task executor registration;
	Instantiate task executor registration  with thread pool task executor;
	Handle core pool size;
	Max pool size;
	Keep alive seconds;
	Queue capacity;
	Get task executor

218. Changes to package org.springframework.messaging.simp.stomp:  

218.1. Add a class for buffering stomp decoder. It allows to:

	Instantiate buffering stomp decoder  with stomp decoder;
	Get stomp decoder;
	Get buffer size limit;
	Decode new buffer;
	Assemble chunks and reset;
	Check buffer limits;
	Get buffer size;
	Get expected content length

218.2. Add a class for buffering stomp decoder tests. It allows to:

	Handle basic;
	One message  in two chunks;
	Two messages  in one chunk;
	One full and one split message content length;
	One full and one split message no content length;
	One full and one split  with content length exceeding buffer size;
	Buffer size limit;
	Handle incomplete command;
	Handle incomplete header with partial escape sequence;
	Handle invalid escape sequence;
	Handle invalid escape sequence with single slash at end of header value;
	Convert buffering stomp decoder tests to byte buffer

218.3. Add an interface declaration  for connection handling stomp session. It allows to:

	Get session future

218.4. Add a class for connection lost exception. It allows to:

	Instantiate connection lost exception

218.5. Add a class for default stomp session tests. It allows to:

	Set default stomp session tests;
	Process default stomp session tests default stomp session tests after connected;
	Process default stomp session tests default stomp session tests after connected with specific version;
	Process default stomp session tests default stomp session tests after connect failure;
	Handle connected frame;
	Handle heartbeat values;
	Handle heartbeat not supported by server;
	Handle heartbeat tasks;
	Handle error frame;
	Handle error frame  with empty payload;
	Handle error frame  with conversion exception;
	Handle message frame;
	Handle message frame  with conversion exception;
	Handle failure;
	Handle after connection closed;
	Send default stomp session tests;
	Send default stomp session tests with receipt;
	Send default stomp session tests with conversion exception;
	Send default stomp session tests with execution exception;
	Subscribe default stomp session tests;
	Subscribe default stomp session tests with headers;
	Handle unsubscribe;
	Handle unsubscribe with custom header;
	Handle ack;
	Handle nack;
	Handle receipt received;
	Handle receipt received before task added;
	Handle receipt not received;
	Disconnect default stomp session tests

218.6. Add a class for stomp client support. It allows to:

	Set message converter;
	Get message converter;
	Set task scheduler;
	Get task scheduler;
	Set default heartbeat;
	Get default heartbeat;
	Check if stomp client support is default heartbeat enabled;
	Set receipt time limit;
	Get receipt time limit;
	Create session;
	Get process connect headers

218.7. Add a class for stomp client support tests. It allows to:

	Handle default heartbeat validation;
	Try set default heartbeat;
	Handle default heartbeat value;
	Check if stomp client support tests is default heartbeat enabled;
	Handle process connect headers default;
	Handle process connect headers with explicit heartbeat

218.8. Add a class for stomp conversion exception. It allows to:

	Instantiate stomp conversion exception  with cause throwable;
	Instantiate stomp conversion exception

218.9. Add a class for stomp decoder. It allows to:

	Set header initializer;
	Get header initializer;
	Decode byte buffer;
	Decode message;
	Handle init headers;
	Skip leading eol;
	Read command;
	Read headers;
	Handle unescape;
	Read payload;
	Try consume end  of line

218.10. Add a class for stomp encoder. It allows to:

	Remove eldest entry;
	Encode message;
	Encode headers map;
	Write headers;
	Encode header key;
	Encode header value;
	Escape stomp encoder;
	Get string builder;
	Write body

218.11. Add an interface declaration  for stomp frame handler. It allows to:

	Get payload type;
	Handle frame

218.12. Add a class for stomp header accessor tests. It allows to:

	Create stomp header accessor tests with command;
	Create stomp header accessor tests with subscribe native headers;
	Create stomp header accessor tests with unubscribe native headers;
	Create stomp header accessor tests with message frame native headers;
	Create stomp header accessor tests with connect native headers;
	Convert stomp header accessor tests to native headers subscribe;
	Convert stomp header accessor tests to native headers unsubscribe;
	Convert stomp header accessor tests to native headers message frame;
	Convert stomp header accessor tests to native headers content type;
	Encode connect  with login and passcode;
	Modify custom native header;
	Handle message id and timestamp default behavior;
	Handle message id and timestamp enabled;
	Get accessor;
	Get short log message

218.13. Add a class for stomp headers. It allows to:

	Instantiate stomp headers;
	Instantiate stomp headers  with headers map;
	Set content type;
	Get content type;
	Set content length;
	Get content length;
	Set receipt;
	Get receipt;
	Set host;
	Get host;
	Set accept version;
	Get accept version;
	Set login;
	Get login;
	Set passcode;
	Get passcode;
	Set heartbeat;
	Get heartbeat;
	Check if stomp headers is heartbeat enabled;
	Set session;
	Get session;
	Set server;
	Get server;
	Set destination;
	Get destination;
	Set id;
	Get id;
	Set ack;
	Get ack;
	Set subscription;
	Get subscription;
	Set message id;
	Get message id;
	Set receipt id;
	Get receipt id;
	Get stomp headers first;
	Add stomp headers;
	Add header values list;
	Add values map;
	Set stomp headers;
	Set values map;
	Convert stomp headers to single value map;
	Get size;
	Check if stomp headers is empty;
	Check if stomp headers contains key;
	Check if stomp headers contains value;
	Get stomp headers;
	Put value list;
	Remove stomp headers;
	Put map;
	Handle clear;
	Handle key set;
	Get values;
	Get entry set;
	Check if stomp headers equals;
	Hash code;
	Convert stomp headers to string;
	Read headers map only stomp headers

218.14. Add an interface declaration  for stomp session handler. It allows to:

	Process stomp session handler stomp session handler after connected;
	Handle exception;
	Handle transport error

218.15. Add a class for stomp session handler adapter. It allows to:

	Get payload type;
	Handle frame;
	Process stomp session handler adapter stomp session handler adapter after connected;
	Handle exception;
	Handle transport error

219. Changes to package org.springframework.messaging.simp.user:  

219.1. Add a class for default user destination resolver tests. It allows to:

	Handle setup;
	Subscribe default user destination resolver tests;
	Handle subscribe  for destination without leading slash;
	Handle subscribe one user multiple sessions;
	Handle subscribe no user;
	Handle unsubscribe;
	Handle message;
	Handle message  for destination with dot separator;
	Handle message  to other user;
	Handle message encoded user name;
	Handle message  with no user;
	Ignore message;
	Create message

219.2. Add an interface declaration  for destination user name provider. It allows to:

	Get destination user name

219.3. Add a class for multi server user registry tests. It allows to:

	Handle setup;
	Get user  from local registry;
	Get user  from remote registry;
	Find subscriptions  from remote registry;
	Get sessions when user is connected  to multiple servers;
	Purge expired registries

219.4. Add an interface declaration  for simp session. It allows to:

	Get id;
	Get user;
	Get subscriptions

219.5. Add an interface declaration  for simp subscription. It allows to:

	Get id;
	Get session;
	Get destination

219.6. Add an interface declaration  for simp subscription matcher. It allows to:

	Match simp subscription

219.7. Add an interface declaration  for simp user. It allows to:

	Get name;
	Check if simp user has sessions;
	Get session;
	Get sessions

219.8. Add an interface declaration  for simp user registry. It allows to:

	Get user;
	Get users;
	Get user count;
	Find subscriptions

219.9. Add a class for test simp session. It allows to:

	Instantiate test simp session;
	Get id;
	Get user;
	Set user;
	Get subscriptions;
	Add subscriptions;
	Check if test simp session equals;
	Hash code;
	Convert test simp session to string

219.10. Add a class for test simp subscription. It allows to:

	Instantiate test simp subscription;
	Get id;
	Get session;
	Set session;
	Get destination;
	Check if test simp subscription equals;
	Hash code;
	Convert test simp subscription to string

219.11. Add a class for test simp user. It allows to:

	Instantiate test simp user;
	Get name;
	Get sessions;
	Check if test simp user has sessions;
	Get session;
	Add sessions;
	Check if test simp user equals;
	Hash code;
	Convert test simp user to string

219.12. Add a class for user destination message handler tests. It allows to:

	Handle setup;
	Subscribe user destination message handler tests;
	Handle unsubscribe;
	Handle message;
	Handle message  without active session;
	Handle message  from broker with active session;
	Handle message  from broker without active session;
	Ignore message;
	Create  with simp message type

219.13. Add an interface declaration  for user destination resolver. It allows to:

	Resolve destination

219.14. Add a class for user destination result. It allows to:

	Instantiate user destination result  with target destinations set;
	Get source destination;
	Get target destinations;
	Get subscribe destination;
	Get user;
	Convert user destination result to string

219.15. Add a class for user registry message handler tests. It allows to:

	Set user registry message handler tests;
	Handle broker available event;
	Handle broker unavailable event;
	Broadcast registry;
	Handle message;
	Handle message  from own broadcast;
	Get user registry task

220. Changes to package org.springframework.messaging.support:  

220.1. Add a class for abstract header mapper. It allows to:

	Set inbound prefix;
	Set outbound prefix;
	Process abstract header mapper abstract header mapper from header name;
	Convert abstract header mapper to header name;
	Get header  if available

220.2. Add a class for abstract subscribable channel. It allows to:

	Get subscribers;
	Check if abstract subscribable channel has subscription;
	Subscribe message handler;
	Handle unsubscribe

220.3. Add an interface declaration  for channel interceptor. It allows to:

	Send message;
	Process channel interceptor channel interceptor after send completion;
	Receive message channel;
	Receive message;
	Process channel interceptor channel interceptor after receive completion

220.4. Add a class for channel interceptor adapter. It allows to:

	Send message;
	Process channel interceptor adapter channel interceptor adapter after send completion;
	Receive message channel;
	Receive message;
	Process channel interceptor adapter channel interceptor adapter after receive completion

220.5. Add a class for error message. It allows to:

	Instantiate error message  with payload throwable;
	Instantiate error message  with payload throwable, headers map and headers map;
	Instantiate error message  with payload throwable, message headers and message headers;
	Instantiate error message  with payload throwable, original message and original message;
	Instantiate error message  with payload throwable, headers map, original message and original message;
	Instantiate error message  with payload throwable, message headers, original message and original message;
	Get original message;
	Convert error message to string

220.6. Add an interface declaration  for executor channel interceptor. It allows to:

	Handle handle;
	Handle after message handled

220.7. Add a class for generic message. It allows to:

	Instantiate generic message  with payload;
	Instantiate generic message  with payload, headers map and headers map;
	Instantiate generic message  with payload, message headers and message headers;
	Get payload;
	Get headers;
	Check if generic message equals;
	Hash code;
	Convert generic message to string

220.8. Add an interface declaration  for header mapper. It allows to:

	Process header mapper header mapper from headers;
	Convert header mapper to headers

220.9. Add a class for id timestamp message header initializer. It allows to:

	Set id generator;
	Get id generator;
	Set disable id generation;
	Set enable timestamp;
	Check if id timestamp message header initializer is enable timestamp;
	Handle init headers

220.10. Add a class for immutable message channel interceptor. It allows to:

	Send message

220.11. Add an interface declaration  for interceptable channel. It allows to:

	Set interceptors;
	Add interceptor;
	Get interceptors;
	Remove interceptor;

220.12. Add a class for message builder. It allows to:

	Instantiate message builder  with original message;
	Instantiate message builder  with payload, message header accessor and message header accessor;
	Set headers;
	Set header;
	Set header  if absent;
	Remove headers;
	Remove header;
	Copy headers;
	Copy headers  if absent;
	Set reply channel;
	Set reply channel name;
	Set error channel;
	Set error channel name;
	Build message builder;
	Process message builder message builder from message;
	Process message builder message builder with payload;
	Create message

220.13. Add a class for message builder tests. It allows to:

	Handle test simple message creation;
	Handle test header values;
	Handle test copied header values;
	Handle test id header value read only;
	Handle test timestamp value read only;
	Copy headers  if absent;
	Create message builder tests from message;
	Create id regenerated;
	Handle test remove;
	Convert test setting;
	Handle test not modified same message;
	Handle test contains header not modified same message;
	Handle test same header value added not modified same message;
	Handle test copy same header values not modified same message;
	Handle test build message with mutable headers;
	Handle test build message with default mutability;
	Handle test build message without id and timestamp;
	Generate id;
	Handle test build multiple messages

220.14. Add an interface declaration  for message handling runnable. It allows to:

	Get message;
	Get message handler

220.15. Add an interface declaration  for message header initializer. It allows to:

	Handle init headers

220.16. Add a class for native message header accessor. It allows to:

	Instantiate native message header accessor;
	Instantiate native message header accessor  with native headers map;
	Instantiate native message header accessor  with message;
	Get native headers;
	Convert native message header accessor to native header map;
	Set immutable;
	Check if native message header accessor contains native header;
	Get native header;
	Get native message header accessor first native header;
	Set native header;
	Add native header;
	Add native headers;
	Remove native header;
	Get headers map first native header

220.17. Add a class for native message header accessor tests. It allows to:

	Create native message header accessor tests from native header map;
	Create native message header accessor tests from message;
	Create native message header accessor tests from message null;
	Create native message header accessor tests from message and modify;
	Set native header;
	Set native header null value;
	Set native header lazy init;
	Set native header lazy init null value;
	Set native header immutable;
	Add native header;
	Add native header null value;
	Add native header lazy init;
	Add native header lazy init null value;
	Add native header immutable;
	Set immutable idempotent

221. Changes to package org.springframework.messaging.tcp:  

221.1. Add a class for fixed interval reconnect strategy. It allows to:

	Instantiate fixed interval reconnect strategy;
	Get time  to next attempt

221.2. Add an interface declaration  for reconnect strategy. It allows to:

	Get time  to next attempt

221.3. Add an interface declaration  for tcp connection. It allows to:

	Send message;
	Process tcp connection tcp connection on read inactivity;
	Process tcp connection tcp connection on write inactivity;
	Close tcp connection

221.4. Add an interface declaration  for tcp connection handler. It allows to:

	Process tcp connection handler tcp connection handler after connected;
	Process tcp connection handler tcp connection handler after connect failure;
	Handle message;
	Handle failure;
	Handle after connection closed

221.5. Add an interface declaration  for tcp operations. It allows to:

	Connect tcp connection handler;
	Get shutdown

222. Changes to package org.springframework.mock.env:  

222.1. Add a class for mock environment. It allows to:

	Instantiate mock environment;
	Set property;
	Process mock environment mock environment with property

222.2. Add a class for mock property source. It allows to:

	Instantiate mock property source;
	Instantiate mock property source  with properties;
	Set property;
	Process mock property source mock property source with property

223. Changes to package org.springframework.mock.http:  

223.1. Add a class for mock http input message. It allows to:

	Instantiate mock http input message;
	Instantiate mock http input message  with body input stream;
	Get headers;
	Get body

223.2. Add a class for mock http output message. It allows to:

	Get headers;
	Get body;
	Get body  as bytes;
	Get body  as string;

224. Changes to package org.springframework.mock.http.client:  

224.1. Add a class for mock async client http request. It allows to:

	Instantiate mock async client http request;
	Instantiate mock async client http request  with http method, URI and URI;
	Execute async

224.2. Add a class for mock client http request. It allows to:

	Instantiate mock client http request;
	Instantiate mock client http request  with http method, URI and URI;
	Set method;
	Get method;
	Get method value;
	Set URI;
	Get URI;
	Set response;
	Check if mock client http request is executed;
	Execute mock client http request;
	Execute internal;
	Convert mock client http request to string

224.3. Add a class for mock client http response. It allows to:

	Instantiate mock client http response  with status;
	Instantiate mock client http response  with body input stream, status and status;
	Get status code;
	Get raw status code;
	Get status text;
	Close mock client http response

225. Changes to package org.springframework.mock.jndi:  

225.1. Add a class for expected lookup template. It allows to:

	Instantiate expected lookup template;
	Add object;
	Get lookup

225.2. Add a class for simple naming context builder. It allows to:

	Get current context builder;
	Handle empty activated context builder;
	Activate simple naming context builder;
	Deactivate simple naming context builder;
	Handle clear;
	Handle bind;
	Create initial context factory

226. Changes to package org.springframework.mock.web:  

226.1. Add a class for delegating servlet input stream. It allows to:

	Instantiate delegating servlet input stream  with source stream;
	Get source stream;
	Read delegating servlet input stream;
	Handle available;
	Close delegating servlet input stream;
	Check if delegating servlet input stream is finished;
	Check if delegating servlet input stream is ready;
	Set read listener

226.2. Add a class for delegating servlet output stream. It allows to:

	Instantiate delegating servlet output stream  with target stream;
	Get target stream;
	Write delegating servlet output stream;
	Handle flush;
	Close delegating servlet output stream;
	Check if delegating servlet output stream is ready;
	Set write listener

226.3. Add a class for header value holder. It allows to:

	Get set value;
	Add value;
	Add values;
	Add value array;
	Get values;
	Get string values;
	Get value;
	Get string value;
	Convert header value holder to string;
	Get headers map by name

226.4. Add a class for mock async context. It allows to:

	Instantiate mock async context  with servlet request, servlet response and servlet response;
	Add dispatch handler;
	Get request;
	Get response;
	Check if mock async context has original request and response;
	Dispatch mock async context;
	Dispatch servlet context;
	Get dispatched path;
	Complete mock async context;
	Start runnable;
	Add listener;
	Get listeners;
	Create listener;
	Set timeout;
	Get timeout

226.5. Add a class for mock body content. It allows to:

	Instantiate mock body content  with http servlet response;
	Instantiate mock body content  with target writer;
	Instantiate mock body content  with http servlet response, target writer and target writer;
	Adapt jsp writer;
	Get reader;
	Get string;
	Write writer;
	Handle clear;
	Handle clear buffer;
	Close mock body content;
	Remaining mock body content;
	Handle new line;
	Write mock body content;
	Handle print;
	Handle println;

226.6. Add a class for mock expression evaluator. It allows to:

	Instantiate mock expression evaluator  with page context;
	Parse expression;
	Evaluate javax servlet jsp el variable resolver;
	Evaluate expected type class;

226.7. Add a class for mock filter config. It allows to:

	Instantiate mock filter config;
	Instantiate mock filter config  with servlet context;
	Get filter name;
	Get servlet context;
	Add init parameter;
	Get init parameter;
	Get init parameter names

226.8. Add a class for mock http servlet request. It allows to:

	Instantiate mock http servlet request;
	Instantiate mock http servlet request  with servlet context;
	Get servlet context;
	Check if mock http servlet request is active;
	Close mock http servlet request;
	Invalidate mock http servlet request;
	Check active;
	Get attribute;
	Get attribute names;
	Get character encoding;
	Set character encoding;
	Update content type header;
	Set content;
	Get content  as byte array;
	Get content  as string;
	Get content length;
	Get content length  long;
	Set content type;
	Get content type;
	Get input stream;
	Set parameter;
	Set parameters;
	Add parameter;
	Add parameters;
	Remove parameter;
	Remove all parameters;
	Get parameter;
	Get parameter names;
	Get parameter values;
	Get parameter map;
	Set protocol;
	Get protocol;
	Set scheme;
	Get scheme;
	Set server name;
	Get server name;
	Set server port;
	Get server port;
	Get reader;
	Set remote addr;
	Get remote addr;
	Set remote host;
	Get remote host;
	Set attribute;
	Remove attribute;
	Handle clear attributes;
	Add preferred locale;
	Set preferred locales;
	Update accept language header;
	Get locale;
	Get locales;
	Set secure;
	Check if mock http servlet request is secure;
	Get request dispatcher;
	Get real path;
	Set remote port;
	Get remote port;
	Set local name;
	Get local name;
	Set local addr;
	Get local addr;
	Set local port;
	Get local port;
	Start async;
	Set async started;
	Check if mock http servlet request is async started;
	Set async supported;
	Check if mock http servlet request is async supported;
	Set async context;
	Get async context;
	Set dispatcher type;
	Get dispatcher type;
	Set auth type;
	Get auth type;
	Set cookies;
	Get cookies;
	Add header;
	Do add header value;
	Remove header;
	Get date header;
	Parse date header;
	Get header;
	Get headers;
	Get header names;
	Get int header;
	Set method;
	Get method;
	Set path info;
	Get path info;
	Get path translated;
	Set context path;
	Get context path;
	Set query string;
	Get query string;
	Set remote user;
	Get remote user;
	Add user role;
	Check if mock http servlet request is user in role;
	Set user principal;
	Get user principal;
	Set requested session id;
	Get requested session id;
	Set request URI;
	Get request URI;
	Get request URL;
	Set servlet path;
	Get servlet path;
	Set session;
	Get session;
	Change session id;
	Set requested session id valid;
	Check if mock http servlet request is requested session id valid;
	Set requested session id  from cookie;
	Check if mock http servlet request is requested session id from cookie;
	Set requested session id  from URL;
	Check if mock http servlet request is requested session id from URL;
	Check if mock http servlet request is requested session id from url;
	Authenticate http servlet response;
	Handle login;
	Handle logout;
	Add part;
	Get part;
	Get parts;
	Upgrade handler class

226.9. Add a class for mock http servlet request tests. It allows to:

	Handle protocol and scheme;
	Set content and get input stream;
	Set content and get reader;
	Set content and get content  as byte array;
	Get content  as string without setting character encoding;
	Set content and get content  as string with explicit character encoding;
	No content;
	Get reader  twice;
	Get input stream  twice;
	Get reader  after getting input stream;
	Get input stream  after getting reader;
	Set content type;
	Set content type UTF 8;
	Handle content type header;
	Handle content type header UTF 8;
	Set content type header  with more complex charset syntax;
	Set content type  then character encoding;
	Set character encoding  then content type;
	Http header name casing is preserved;
	Set multiple parameters;
	Add multiple parameters;
	Remove all parameters;
	Handle cookies;
	No cookies;
	Handle default locale;
	Set preferred locales  with null list;
	Set preferred locales  with empty list;
	Set preferred locales;
	Get preferred locales from accept language header;
	Handle invalid accept language header;
	Get server name  with default name;
	Get server name  with custom name;
	Get server name  via host header without port;
	Get server name  via host header with port;
	Get server name  via host header as ipv 6 address without port;
	Get server name  via host header as ipv 6 address with port;
	Get server port  with default port;
	Get server port  with custom port;
	Get server port  via host header as ipv 6 address without port;
	Get server port  via host header as ipv 6 address with port;
	Get server port  via host header without port;
	Get server port  via host header with port;
	Get request URL;
	Get request URL  with defaults;
	Get request URL  with host header;
	Get request URL  with host header and port;
	Get request URL  with null request uri;
	Get request URL  with defaults and https;
	Get request URL  with negative port;
	Check if mock http servlet request tests is secure with http scheme and secure flag is false;
	Check if mock http servlet request tests is secure with http scheme and secure flag is true;
	Check if mock http servlet request tests is secure with https scheme and secure flag is false;
	Check if mock http servlet request tests is secure with https scheme and secure flag is true;
	Http header date;
	Http header timestamp;
	Http header rfc formatted date;
	Http header  first variant formatted date;
	Http header second variant formatted date;
	Http header formatted date error;
	Assert equal enumerations

226.10. Add a class for mock http servlet response tests. It allows to:

	Set content type;
	Set content type UTF 8;
	Handle content type header;
	Handle content type header UTF 8;
	Handle content type header with more complex charset syntax;
	Set content type  then character encoding;
	Set character encoding  then content type;
	Handle content length;
	Handle content length header;
	Handle content length int header;
	Http header name casing is preserved;
	Handle cookies;
	Handle servlet output stream committed when buffer size exceeded;
	Handle servlet output stream committed on flush buffer;
	Handle servlet writer committed when buffer size exceeded;
	Handle servlet output stream committed on output stream flush;
	Handle servlet writer committed on writer flush;
	Handle servlet writer committed on writer close;
	Handle servlet writer auto flushed for string;
	Handle servlet writer auto flushed for char;
	Handle servlet writer auto flushed for char array;
	Send redirect;
	Handle location header updates get redirected url;
	Set date header;
	Add date header;
	Get date header;
	Get invalid date header;
	Get mock http servlet response tests non existent date header;
	Modify status  after send error;
	Modify status message  after send error;
	Set cookie header valid;
	Add mock cookie

226.11. Add a class for mock http session. It allows to:

	Instantiate mock http session;
	Instantiate mock http session  with servlet context;
	Get creation time;
	Get id;
	Change session id;
	Handle access;
	Get last accessed time;
	Get servlet context;
	Set max inactive interval;
	Get max inactive interval;
	Get session context;
	Get attribute;
	Get value;
	Get attribute names;
	Get value names;
	Set attribute;
	Put value;
	Remove attribute;
	Remove value;
	Handle clear attributes;
	Invalidate mock http session;
	Check if mock http session is invalid;
	Assert is valid;
	Set new;
	Check if mock http session is new;
	Serialize state;
	Handle deserialize state

226.12. Add a class for mock jsp writer. It allows to:

	Instantiate mock jsp writer  with http servlet response;
	Instantiate mock jsp writer  with target writer;
	Instantiate mock jsp writer  with http servlet response, target writer and target writer;
	Get target writer;
	Handle clear;
	Handle clear buffer;
	Handle flush;
	Close mock jsp writer;
	Remaining mock jsp writer;
	Handle new line;
	Write mock jsp writer;
	Handle print;
	Handle println;

226.13. Add a class for mock multipart file. It allows to:

	Instantiate mock multipart file;
	Instantiate mock multipart file  with content stream;
	Get name;
	Get original filename;
	Get content type;
	Check if mock multipart file is empty;
	Get size;
	Get bytes;
	Get input stream;
	Transfer  to dest file

226.14. Add a class for mock multipart http servlet request. It allows to:

	Instantiate mock multipart http servlet request;
	Instantiate mock multipart http servlet request  with servlet context;
	Add file;
	Get file names;
	Get file;
	Get files;
	Get file map;
	Get multi file map;
	Get multipart content type;
	Get request method;
	Get request headers;
	Get multipart headers

226.15. Add a class for mock multipart http servlet request tests. It allows to:

	Handle mock multipart http servlet request with byte array;
	Handle mock multipart http servlet request with input stream;
	Do test multipart http servlet request

226.16. Add a class for mock page context. It allows to:

	Instantiate mock page context;
	Instantiate mock page context  with servlet context;
	Instantiate mock page context  with servlet context, http servlet request and http servlet request;
	Instantiate mock page context  with servlet context, http servlet request, http servlet response and http servlet response;
	Instantiate mock page context  with servlet context, http servlet request, http servlet response, servlet config and servlet config;
	Initialize servlet;
	Handle release;
	Set attribute;
	Get attribute;
	Find attribute;
	Remove attribute;
	Get attributes scope;
	Get attribute names;
	Get attribute names  in scope;
	Get mock page context;
	Get expression evaluator;
	Get EL context;
	Get variable resolver;
	Get session;
	Get page;
	Get request;
	Get response;
	Get exception;
	Get servlet config;
	Get servlet context;
	Forward mock page context;
	Include mock page context;
	Get content  as byte array;
	Get content  as string;
	Handle page exception;

226.17. Add a class for mock page context tests. It allows to:

	Set attribute  with no scope uses page scope;
	Remove attribute  with no scope specified removes value from all scopes

226.18. Add a class for mock request dispatcher. It allows to:

	Instantiate mock request dispatcher;
	Forward mock request dispatcher;
	Include servlet request;
	Get mock http servlet response

226.19. Add a class for mock servlet config. It allows to:

	Instantiate mock servlet config;
	Instantiate mock servlet config  with servlet context;
	Get servlet name;
	Get servlet context;
	Add init parameter;
	Get init parameter;
	Get init parameter names

226.20. Add a class for mock servlet context. It allows to:

	Instantiate mock servlet context;
	Instantiate mock servlet context  with resource loader;
	Get resource location;
	Set context path;
	Get context path;
	Register context;
	Get context;
	Set major version;
	Get major version;
	Set minor version;
	Get minor version;
	Set effective major version;
	Get effective major version;
	Set effective minor version;
	Get effective minor version;
	Get mime type;
	Add mime type;
	Get resource paths;
	Get resource;
	Get resource  as stream;
	Get request dispatcher;
	Get named dispatcher;
	Register named dispatcher;
	Handle unregister named dispatcher;
	Get default servlet name;
	Set default servlet name;
	Get servlet;
	Get servlets;
	Get servlet names;
	Log mock servlet context;
	Log exception;
	Log ex throwable;
	Get real path;
	Get server info;
	Get init parameter;
	Get init parameter names;
	Set init parameter;
	Add init parameter;
	Get attribute;
	Get attribute names;
	Set attribute;
	Remove attribute;
	Set servlet context name;
	Get servlet context name;
	Get class loader;
	Declare roles;
	Get declared roles;
	Set session tracking modes;
	Get default session tracking modes;
	Get effective session tracking modes;
	Get session cookie config;
	Set session timeout;
	Get session timeout;
	Set request character encoding;
	Get request character encoding;
	Set response character encoding;
	Get response character encoding;
	Get jsp config descriptor;
	Add jsp file;
	Add servlet;
	Create servlet;
	Get servlet registration;
	Get servlet registrations;
	Add filter;
	Create filter;
	Get filter registration;
	Get filter registrations;
	Add listener;
	Create listener;
	Get virtual server name

226.21. Add a class for mock servlet context tests. It allows to:

	Handle list files;
	Handle list subdirectories;
	Handle list non directory;
	Handle list invalid path;
	Register context and get context;
	Get mime type;
	Get mime type  with custom configured type;
	Handle servlet version;
	Register and unregister named dispatcher;
	Get named dispatcher  for default servlet;
	Set default servlet name;
	Get servlet registration;
	Get servlet registrations;
	Get filter registration;
	Get filter registrations

226.22. Add a class for mock session cookie config. It allows to:

	Set name;
	Get name;
	Set domain;
	Get domain;
	Set path;
	Get path;
	Set comment;
	Get comment;
	Set http  only;
	Check if mock session cookie config is http only;
	Set secure;
	Check if mock session cookie config is secure;
	Set max age;
	Get max age

226.23. Add a class for pass through filter chain. It allows to:

	Instantiate pass through filter chain  with filter, next filter chain and next filter chain;
	Instantiate pass through filter chain  with servlet;
	Do filter

227. Changes to package org.springframework.mock.web.test:  

227.1. Add a class for delegating servlet input stream. It allows to:

	Instantiate delegating servlet input stream  with source stream;
	Get source stream;
	Read delegating servlet input stream;
	Handle available;
	Close delegating servlet input stream;
	Check if delegating servlet input stream is finished;
	Check if delegating servlet input stream is ready;
	Set read listener

227.2. Add a class for delegating servlet output stream. It allows to:

	Instantiate delegating servlet output stream  with target stream;
	Get target stream;
	Write delegating servlet output stream;
	Handle flush;
	Close delegating servlet output stream;
	Check if delegating servlet output stream is ready;
	Set write listener

227.3. Add a class for header value holder. It allows to:

	Get set value;
	Add value;
	Add values;
	Add value array;
	Get values;
	Get string values;
	Get value;
	Get string value;
	Convert header value holder to string;
	Get headers map by name

227.4. Add a class for mock async context. It allows to:

	Instantiate mock async context  with servlet request, servlet response and servlet response;
	Add dispatch handler;
	Get request;
	Get response;
	Check if mock async context has original request and response;
	Dispatch mock async context;
	Dispatch servlet context;
	Get dispatched path;
	Complete mock async context;
	Start runnable;
	Add listener;
	Get listeners;
	Create listener;
	Set timeout;
	Get timeout

227.5. Add a class for mock body content. It allows to:

	Instantiate mock body content  with http servlet response;
	Instantiate mock body content  with target writer;
	Instantiate mock body content  with http servlet response, target writer and target writer;
	Adapt jsp writer;
	Get reader;
	Get string;
	Write writer;
	Handle clear;
	Handle clear buffer;
	Close mock body content;
	Remaining mock body content;
	Handle new line;
	Write mock body content;
	Handle print;
	Handle println;

227.6. Add a class for mock expression evaluator. It allows to:

	Instantiate mock expression evaluator  with page context;
	Parse expression;
	Evaluate javax servlet jsp el variable resolver;
	Evaluate expected type class;

227.7. Add a class for mock filter config. It allows to:

	Instantiate mock filter config;
	Instantiate mock filter config  with servlet context;
	Get filter name;
	Get servlet context;
	Add init parameter;
	Get init parameter;
	Get init parameter names

227.8. Add a class for mock http servlet request. It allows to:

	Instantiate mock http servlet request;
	Instantiate mock http servlet request  with servlet context;
	Get servlet context;
	Check if mock http servlet request is active;
	Close mock http servlet request;
	Invalidate mock http servlet request;
	Check active;
	Get attribute;
	Get attribute names;
	Get character encoding;
	Set character encoding;
	Update content type header;
	Set content;
	Get content  as byte array;
	Get content  as string;
	Get content length;
	Get content length  long;
	Set content type;
	Get content type;
	Get input stream;
	Set parameter;
	Set parameters;
	Add parameter;
	Add parameters;
	Remove parameter;
	Remove all parameters;
	Get parameter;
	Get parameter names;
	Get parameter values;
	Get parameter map;
	Set protocol;
	Get protocol;
	Set scheme;
	Get scheme;
	Set server name;
	Get server name;
	Set server port;
	Get server port;
	Get reader;
	Set remote addr;
	Get remote addr;
	Set remote host;
	Get remote host;
	Set attribute;
	Remove attribute;
	Handle clear attributes;
	Add preferred locale;
	Set preferred locales;
	Update accept language header;
	Get locale;
	Get locales;
	Set secure;
	Check if mock http servlet request is secure;
	Get request dispatcher;
	Get real path;
	Set remote port;
	Get remote port;
	Set local name;
	Get local name;
	Set local addr;
	Get local addr;
	Set local port;
	Get local port;
	Start async;
	Set async started;
	Check if mock http servlet request is async started;
	Set async supported;
	Check if mock http servlet request is async supported;
	Set async context;
	Get async context;
	Set dispatcher type;
	Get dispatcher type;
	Set auth type;
	Get auth type;
	Set cookies;
	Get cookies;
	Add header;
	Do add header value;
	Remove header;
	Get date header;
	Parse date header;
	Get header;
	Get headers;
	Get header names;
	Get int header;
	Set method;
	Get method;
	Set path info;
	Get path info;
	Get path translated;
	Set context path;
	Get context path;
	Set query string;
	Get query string;
	Set remote user;
	Get remote user;
	Add user role;
	Check if mock http servlet request is user in role;
	Set user principal;
	Get user principal;
	Set requested session id;
	Get requested session id;
	Set request URI;
	Get request URI;
	Get request URL;
	Set servlet path;
	Get servlet path;
	Set session;
	Get session;
	Change session id;
	Set requested session id valid;
	Check if mock http servlet request is requested session id valid;
	Set requested session id  from cookie;
	Check if mock http servlet request is requested session id from cookie;
	Set requested session id  from URL;
	Check if mock http servlet request is requested session id from URL;
	Check if mock http servlet request is requested session id from url;
	Authenticate http servlet response;
	Handle login;
	Handle logout;
	Add part;
	Get part;
	Get parts;
	Upgrade handler class

227.9. Add a class for mock http session. It allows to:

	Instantiate mock http session;
	Instantiate mock http session  with servlet context;
	Get creation time;
	Get id;
	Change session id;
	Handle access;
	Get last accessed time;
	Get servlet context;
	Set max inactive interval;
	Get max inactive interval;
	Get session context;
	Get attribute;
	Get value;
	Get attribute names;
	Get value names;
	Set attribute;
	Put value;
	Remove attribute;
	Remove value;
	Handle clear attributes;
	Invalidate mock http session;
	Check if mock http session is invalid;
	Assert is valid;
	Set new;
	Check if mock http session is new;
	Serialize state;
	Handle deserialize state

227.10. Add a class for mock jsp writer. It allows to:

	Instantiate mock jsp writer  with http servlet response;
	Instantiate mock jsp writer  with target writer;
	Instantiate mock jsp writer  with http servlet response, target writer and target writer;
	Get target writer;
	Handle clear;
	Handle clear buffer;
	Handle flush;
	Close mock jsp writer;
	Remaining mock jsp writer;
	Handle new line;
	Write mock jsp writer;
	Handle print;
	Handle println;

227.11. Add a class for mock multipart file. It allows to:

	Instantiate mock multipart file;
	Instantiate mock multipart file  with content stream;
	Get name;
	Get original filename;
	Get content type;
	Check if mock multipart file is empty;
	Get size;
	Get bytes;
	Get input stream;
	Transfer  to dest file

227.12. Add a class for mock multipart http servlet request. It allows to:

	Instantiate mock multipart http servlet request;
	Instantiate mock multipart http servlet request  with servlet context;
	Add file;
	Get file names;
	Get file;
	Get files;
	Get file map;
	Get multi file map;
	Get multipart content type;
	Get request method;
	Get request headers;
	Get multipart headers

227.13. Add a class for mock page context. It allows to:

	Instantiate mock page context;
	Instantiate mock page context  with servlet context;
	Instantiate mock page context  with servlet context, http servlet request and http servlet request;
	Instantiate mock page context  with servlet context, http servlet request, http servlet response and http servlet response;
	Instantiate mock page context  with servlet context, http servlet request, http servlet response, servlet config and servlet config;
	Initialize servlet;
	Handle release;
	Set attribute;
	Get attribute;
	Find attribute;
	Remove attribute;
	Get attributes scope;
	Get attribute names;
	Get attribute names  in scope;
	Get mock page context;
	Get expression evaluator;
	Get EL context;
	Get variable resolver;
	Get session;
	Get page;
	Get request;
	Get response;
	Get exception;
	Get servlet config;
	Get servlet context;
	Forward mock page context;
	Include mock page context;
	Get content  as byte array;
	Get content  as string;
	Handle page exception;

227.14. Add a class for mock part. It allows to:

	Instantiate mock part;
	Get name;
	Get submitted file name;
	Get content type;
	Get size;
	Get input stream;
	Write mock part;
	Delete mock part;
	Get header;
	Get headers;
	Get header names;

227.15. Add a class for mock request dispatcher. It allows to:

	Instantiate mock request dispatcher;
	Forward mock request dispatcher;
	Include servlet request;
	Get mock http servlet response

227.16. Add a class for mock servlet config. It allows to:

	Instantiate mock servlet config;
	Instantiate mock servlet config  with servlet context;
	Get servlet name;
	Get servlet context;
	Add init parameter;
	Get init parameter;
	Get init parameter names

227.17. Add a class for mock servlet context. It allows to:

	Instantiate mock servlet context;
	Instantiate mock servlet context  with resource loader;
	Get resource location;
	Set context path;
	Get context path;
	Register context;
	Get context;
	Set major version;
	Get major version;
	Set minor version;
	Get minor version;
	Set effective major version;
	Get effective major version;
	Set effective minor version;
	Get effective minor version;
	Get mime type;
	Add mime type;
	Get resource paths;
	Get resource;
	Get resource  as stream;
	Get request dispatcher;
	Get named dispatcher;
	Register named dispatcher;
	Handle unregister named dispatcher;
	Get default servlet name;
	Set default servlet name;
	Get servlet;
	Get servlets;
	Get servlet names;
	Log mock servlet context;
	Log exception;
	Log ex throwable;
	Get real path;
	Get server info;
	Get init parameter;
	Get init parameter names;
	Set init parameter;
	Add init parameter;
	Get attribute;
	Get attribute names;
	Set attribute;
	Remove attribute;
	Set servlet context name;
	Get servlet context name;
	Get class loader;
	Declare roles;
	Get declared roles;
	Set session tracking modes;
	Get default session tracking modes;
	Get effective session tracking modes;
	Get session cookie config;
	Set session timeout;
	Get session timeout;
	Set request character encoding;
	Get request character encoding;
	Set response character encoding;
	Get response character encoding;
	Get jsp config descriptor;
	Add jsp file;
	Add servlet;
	Create servlet;
	Get servlet registration;
	Get servlet registrations;
	Add filter;
	Create filter;
	Get filter registration;
	Get filter registrations;
	Add listener;
	Create listener;
	Get virtual server name

227.18. Add a class for mock session cookie config. It allows to:

	Set name;
	Get name;
	Set domain;
	Get domain;
	Set path;
	Get path;
	Set comment;
	Get comment;
	Set http  only;
	Check if mock session cookie config is http only;
	Set secure;
	Check if mock session cookie config is secure;
	Set max age;
	Get max age

227.19. Add a class for pass through filter chain. It allows to:

	Instantiate pass through filter chain  with filter, next filter chain and next filter chain;
	Instantiate pass through filter chain  with servlet;
	Do filter

228. Changes to package org.springframework.objenesis:  

228.1. Add a class for spring objenesis. It allows to:

	Instantiate spring objenesis;
	Instantiate spring objenesis  with instantiator strategy;
	Check if spring objenesis is worth trying;
	Handle new instance;
	Get instantiator  of clazz class;
	Handle new instantiator of

229. Changes to package org.springframework.orm:  

229.1. Add a class for object optimistic locking failure exception. It allows to:

	Instantiate object optimistic locking failure exception  with cause throwable;
	Instantiate object optimistic locking failure exception  with persistent class;
	Instantiate object optimistic locking failure exception  with persistent class, cause throwable and cause throwable;
	Instantiate object optimistic locking failure exception;
	Get persistent class;
	Get persistent class name;
	Get identifier

229.2. Add a class for object retrieval failure exception. It allows to:

	Instantiate object retrieval failure exception  with cause throwable;
	Instantiate object retrieval failure exception  with persistent class;
	Instantiate object retrieval failure exception  with persistent class, cause throwable and cause throwable;
	Instantiate object retrieval failure exception;
	Get persistent class;
	Get persistent class name;
	Get identifier

230. Changes to package org.springframework.orm.jpa:  

230.1. Add a class for abstract container entity manager factory integration tests. It allows to:

	Handle test entity manager factory implements entity manager factory info;
	Handle test state clean;
	Handle test jdbc tx 1 1;
	Convert test jdbc tx 1;
	Handle test jdbc tx 1 3;
	Convert test jdbc tx;
	Handle test entity manager proxy is proxy;
	Handle test bogus query;
	Handle test get reference when no row;
	Handle test lazy loading;
	Handle test multiple results;
	Insert person;
	Handle test entity manager proxy rejects programmatic tx management;
	Handle test instantiate and save with shared em proxy;
	Handle test instantiate and save;
	Handle test query no persons;
	Handle test query no persons not transactional;
	Handle test query no persons shared;
	Handle test query no persons shared not transactional;
	Handle test can serialize proxies

230.2. Add a class for abstract entity manager factory integration tests. It allows to:

	Set entity manager factory;
	Set transaction manager;
	Get set data source;
	Handle setup;
	Get config locations;
	Handle cleanup;
	Close context;
	Create container managed entity manager;
	Set complete;
	End transaction;
	Start new transaction;
	Delete abstract entity manager factory integration tests from tables;
	Count rows  in table;
	Execute sql script

230.3. Add a class for application managed entity manager integration tests. It allows to:

	Handle test entity manager proxy is proxy;
	Handle test entity manager proxy accepts programmatic tx joining;
	Handle test instantiate and save;
	Handle test can not flush without getting transaction;
	Do instantiate and save;
	Handle test state clean;
	Handle test reuse in new transaction;
	Delete all people using entity manager;
	Handle test rollback occurs;
	Handle test commit occurs

230.4. Add a class for container managed entity manager integration tests. It allows to:

	Handle test exception translation with dialect found on introduced entity manager info;
	Handle test exception translation with dialect found on entity manager factory bean;
	Do test exception translation  with dialect found;
	Handle test entity manager proxy is proxy;
	Handle test entity manager proxy rejects programmatic tx management;
	Handle test container entity manager proxy allows join transaction in transaction;
	Handle test container entity manager proxy rejects join transaction without transaction;
	Handle test instantiate and save;
	Do instantiate and save;
	Handle test reuse in new transaction;
	Handle test rollback occurs;
	Handle test commit occurs

230.5. Add a class for default jpa dialect. It allows to:

	Begin transaction;
	Prepare transaction;
	Handle cleanup transaction;
	Get jdbc connection;
	Release jdbc connection;
	Translate exception  if possible

230.6. Add a class for default jpa dialect tests. It allows to:

	Handle test default transaction definition;
	Handle test default begin transaction;
	Handle test translate exception

230.7. Add a class for entity manager factory accessor. It allows to:

	Set entity manager factory;
	Get entity manager factory;
	Obtain entity manager factory;
	Set persistence unit name;
	Get persistence unit name;
	Set jpa properties;
	Set jpa property map;
	Get jpa property map;
	Set bean factory;
	Create entity manager;
	Get transactional entity manager

230.8. Add a class for entity manager factory bean support tests. It allows to:

	Handle test hook is called

230.9. Add an interface declaration  for entity manager factory info. It allows to:

	Get native entity manager factory;
	Get persistence provider;
	Get persistence unit info;
	Get persistence unit name;
	Get data source;
	Get entity manager interface;
	Get jpa dialect;
	Get bean class loader

230.10. Add a class for entity manager factory utils tests. It allows to:

	Handle test do get entity manager;
	Handle test do get entity manager with tx;
	Handle test translates illegal state exception;
	Handle test translates illegal argument exception;
	Handle test does not translate unfamiliar exception;
	Handle test convert jpa persistence exception

230.11. Add a class for entity manager holder. It allows to:

	Instantiate entity manager holder  with entity manager;
	Get entity manager;
	Set transaction active;
	Check if entity manager holder is transaction active;
	Set savepoint manager;
	Get savepoint manager;
	Handle clear

230.12. Add an interface declaration  for entity manager proxy. It allows to:

	Get target entity manager

230.13. Add an interface declaration  for jpa dialect. It allows to:

	Begin transaction;
	Prepare transaction;
	Handle cleanup transaction;
	Get jdbc connection;
	Release jdbc connection

230.14. Add a class for jpa object retrieval failure exception. It allows to:

	Instantiate jpa object retrieval failure exception  with entity not found exception

230.15. Add a class for jpa optimistic locking failure exception. It allows to:

	Instantiate jpa optimistic locking failure exception  with optimistic lock exception

230.16. Add a class for jpa system exception. It allows to:

	Instantiate jpa system exception  with runtime exception

230.17. Add a class for jpa transaction manager tests. It allows to:

	Handle setup;
	Verify transaction synchronization manager state;
	Handle test transaction commit;
	Do transaction status in transaction;
	Handle test transaction commit with rollback exception;
	Handle test transaction rollback;
	Handle test transaction rollback with already rolled back;
	Handle test transaction rollback only;
	Handle test participating transaction with commit;
	Handle test participating transaction with rollback;
	Handle test participating transaction with rollback only;
	Handle test participating transaction with requires new;
	Handle test participating transaction with requires new and prebound;
	Handle test propagation supports and requires new;
	Handle test propagation supports and requires new and early access;
	Handle test transaction with requires new in after completion;
	Process  after completion;
	Handle test transaction commit with propagation supports;
	Handle test transaction rollback with propagation supports;
	Handle test transaction commit with prebound;
	Handle test transaction rollback with prebound;
	Handle test transaction commit with prebound and propagation supports;
	Handle test transaction rollback with prebound and propagation supports;
	Handle test invalid isolation;
	Do transaction status in transaction without result;
	Handle test transaction flush;

230.18. Add an interface declaration  for jpa vendor adapter. It allows to:

	Get persistence provider;
	Get persistence provider root package;
	Get jpa property map;
	Get jpa dialect;
	Get entity manager factory interface;
	Get entity manager interface;
	Post process entity manager factory

230.19. Add a class for local container entity manager factory bean. It allows to:

	Set persistence unit manager;
	Set persistence xml location;
	Set persistence unit name;
	Set persistence unit root location;
	Set packages  to scan;
	Set mapping resources;
	Set shared cache mode;
	Set validation mode;
	Get set data source;
	Set jta data source;
	Set persistence unit post processors;
	Set load time weaver;
	Set resource loader;
	Handle after properties set;
	Create native entity manager factory;
	Determine persistence unit info;
	Post process entity manager factory;
	Get persistence unit info;
	Get persistence unit name;
	Get data source

230.20. Add a class for local entity manager factory bean. It allows to:

	Create native entity manager factory

230.21. Add a class for shared entity manager creator tests. It allows to:

	Proxying works  if info returns null entity manager interface;
	Handle transaction required exception on join transaction;
	Handle transaction required exception on flush;
	Handle transaction required exception on persist;
	Handle transaction required exception on merge;
	Handle transaction required exception on remove;
	Handle transaction required exception on refresh;
	Get deferred query with update;
	Get deferred query with single result;
	Get deferred query with result list;
	Get deferred query with result stream;
	Get deferred stored procedure query with indexed parameters;
	Get deferred stored procedure query with named parameters

231. Changes to package org.springframework.orm.jpa.domain:  

231.1. Add a class for drivers license. It allows to:

	Instantiate drivers license;
	Get serial number

231.2. Add a class for person. It allows to:

	Get id;
	Set test bean;
	Get test bean;
	Set first name;
	Get person first name;
	Get set last name;
	Get last name;
	Set drivers license;
	Get drivers license;
	Convert person to string

232. Changes to package org.springframework.orm.jpa.eclipselink:  

232.1. Add a class for eclipse link entity manager factory integration tests. It allows to:

	Convert test can cast native entity manager factory;
	Convert test can cast shared entity manager proxy

233. Changes to package org.springframework.orm.jpa.hibernate:  

233.1. Add a class for hibernate entity manager factory integration tests. It allows to:

	Get config locations;
	Convert test can cast native entity manager factory;
	Convert test can cast shared entity manager proxy;
	Handle test can unwrap aop proxy;
	Handle test read only

233.2. Add a class for hibernate multi entity manager factory integration tests. It allows to:

	Get config locations;
	Handle test entity manager factory implements entity manager factory info;
	Convert test entity manager factory

234. Changes to package org.springframework.orm.jpa.persistenceunit:  

234.1. Add a class for class file transformer adapter. It allows to:

	Instantiate class file transformer adapter  with class transformer;
	Transform class loader;
	Convert class file transformer adapter to string

234.2. Add a class for default persistence unit manager. It allows to:

	Set persistence xml location;
	Set persistence xml locations;
	Set default persistence unit root location;
	Set default persistence unit name;
	Set packages  to scan;
	Set mapping resources;
	Set shared cache mode;
	Set validation mode;
	Get set data sources;
	Get set data source lookup;
	Get data source lookup;
	Set default data source;
	Get default data source;
	Set default jta data source;
	Get default jta data source;
	Set persistence unit post processors;
	Get persistence unit post processors;
	Set load time weaver;
	Get load time weaver;
	Set resource loader;
	Handle after properties set;
	Prepare persistence unit infos;
	Read persistence unit infos;
	Build default persistence unit info;
	Scan package;
	Check if default persistence unit manager matches filter;
	Determine default persistence unit root url;
	Get orm xml  for default persistence unit;
	Get persistence unit info;
	Post process persistence unit info;
	Check if default persistence unit manager is persistence unit override allowed;
	Obtain default persistence unit info;
	Obtain persistence unit info

234.3. Add a class for mutable persistence unit info. It allows to:

	Set persistence unit name;
	Get persistence unit name;
	Set persistence provider class name;
	Get persistence provider class name;
	Set transaction type;
	Get transaction type;
	Set jta data source;
	Get jta data source;
	Set non jta data source;
	Get non jta data source;
	Add mapping file name;
	Get mapping file names;
	Add jar file url;
	Get jar file urls;
	Set persistence unit root url;
	Get persistence unit root url;
	Add managed class name;
	Get managed class names;
	Add managed package;
	Get managed packages;
	Set exclude unlisted classes;
	Exclude unlisted classes;
	Set shared cache mode;
	Get shared cache mode;
	Set validation mode;
	Get validation mode;
	Add property;
	Set properties;
	Get properties;
	Set persistence XML schema version;
	Get persistence XML schema version;
	Set persistence provider package name;
	Get persistence provider package name;
	Get class loader;
	Add transformer;
	Get new temp class loader;
	Convert mutable persistence unit info to string

234.4. Add an interface declaration  for persistence unit manager. It allows to:

	Obtain default persistence unit info;
	Obtain persistence unit info

234.5. Add an interface declaration  for persistence unit post processor. It allows to:

	Post process persistence unit info

234.6. Add a class for persistence unit reader. It allows to:

	Instantiate persistence unit reader  with resource pattern resolver, data source lookup and data source lookup;
	Read persistence unit infos;
	Build document;
	Parse document;
	Parse persistence unit info;
	Parse properties;
	Parse managed classes;
	Parse mapping files;
	Parse jar files;
	Determine persistence unit root url

234.7. Add a class for persistence xml parsing tests. It allows to:

	Handle test meta inf case;
	Handle test example 1;
	Convert test example;
	Handle test example 3;
	Handle test example 4;
	Handle test example 5;
	Handle test example complex;
	Handle test example 6;
	Handle test invalid persistence;
	Handle test no schema persistence;
	Handle test persistence unit root url;
	Handle test persistence unit root url with jar;
	Handle test jpa 1 exclude unlisted;
	Convert test jpa

234.8. Add an interface declaration  for smart persistence unit info. It allows to:

	Get managed packages;
	Set persistence provider package name

234.9. Add a class for spring persistence unit info. It allows to:

	Handle init;
	Get class loader;
	Add transformer;
	Get new temp class loader

235. Changes to package org.springframework.orm.jpa.support:  

235.1. Add a class for async request interceptor. It allows to:

	Instantiate async request interceptor  with em factory, em holder and em holder;
	Pre process;
	Handle bind entity manager;
	Post process;
	Handle timeout;
	Handle error;
	Process async request interceptor async request interceptor after completion;
	Close entity manager;

235.2. Add a class for open entity manager in view filter. It allows to:

	Set entity manager factory bean name;
	Get entity manager factory bean name;
	Set persistence unit name;
	Get persistence unit name;
	Should open entity manager in view filter not filter async dispatch;
	Should open entity manager in view filter not filter error dispatch;
	Do filter internal;
	Lookup entity manager factory;
	Create entity manager;
	Apply entity manager binding interceptor

235.3. Add a class for open entity manager in view interceptor. It allows to:

	Handle web request;
	Process open entity manager in view interceptor open entity manager in view interceptor after completion;
	Handle decrement participate count;
	Handle after concurrent handling started;
	Get participate attribute name;
	Apply entity manager binding interceptor

235.4. Add a class for persistence injection integration tests. It allows to:

	Handle test default persistence context setter injection;
	Handle test setter injection of named persistence context

235.5. Add a class for shared entity manager bean. It allows to:

	Set entity manager interface;
	Set synchronized  with transaction;
	Handle after properties set;
	Get object;
	Get object type;
	Check if shared entity manager bean is singleton

235.6. Add a class for shared entity manager factory tests. It allows to:

	Handle test valid usage

236. Changes to package org.springframework.orm.jpa.vendor:  

236.1. Add a class for abstract jpa vendor adapter. It allows to:

	Set database;
	Get database;
	Set database platform;
	Get database platform;
	Set generate ddl;
	Check if abstract jpa vendor adapter is generate ddl;
	Set show sql;
	Check if abstract jpa vendor adapter is show sql;
	Get persistence provider root package;
	Get jpa property map;
	Get jpa dialect;
	Get entity manager factory interface;
	Get entity manager interface;
	Post process entity manager factory

236.2. Add a class for eclipse link jpa vendor adapter. It allows to:

	Get persistence provider;
	Get jpa property map;
	Determine target database name;
	Get jpa dialect;
	Get entity manager interface

236.3. Add a class for hibernate jpa session factory bean. It allows to:

	Get object;
	Get object type;
	Check if hibernate jpa session factory bean is singleton

236.4. Add a class for hibernate jpa vendor adapter. It allows to:

	Instantiate hibernate jpa vendor adapter;
	Set prepare connection;
	Get persistence provider;
	Get persistence provider root package;
	Get jpa property map;
	Build jpa property map;
	Determine database dialect class;
	Get jpa dialect;
	Get entity manager factory interface;
	Get entity manager interface

237. Changes to package org.springframework.oxm:  

237.1. Add a class for abstract marshaller tests. It allows to:

	Set abstract marshaller tests;
	Create marshaller;
	Create flights;
	Handle marshal DOM result;
	Handle marshal empty DOM result;
	Handle marshal stream result writer;
	Handle marshal stream result output stream;
	Handle marshal stax result stream writer;
	Handle marshal stax result event writer;
	Handle marshal jaxp 14 stax result stream writer;
	Handle marshal jaxp 14 stax result event writer;
	Check if abstract marshaller tests is similar to

237.2. Add a class for abstract unmarshaller tests. It allows to:

	Set abstract unmarshaller tests;
	Create unmarshaller;
	Handle test flights;
	Handle test flight;
	Handle unmarshal dom source;
	Handle unmarshal stream source reader;
	Handle unmarshal stream source input stream;
	Handle unmarshal SAX source;
	Handle unmarshal stax source xml stream reader;
	Handle unmarshal stax source xml event reader;
	Handle unmarshal jaxp 14 stax source xml stream reader;
	Handle unmarshal jaxp 14 stax source xml event reader;
	Handle unmarshal partial stax source xml stream reader

237.3. Add an interface declaration  for generic marshaller. It allows to:

	Handle supports

237.4. Add an interface declaration  for generic unmarshaller. It allows to:

	Handle supports

237.5. Add an interface declaration  for marshaller. It allows to:

	Handle supports;
	Handle marshal

237.6. Add a class for marshalling exception. It allows to:

	Instantiate marshalling exception;
	Instantiate marshalling exception  with cause throwable

237.7. Add a class for marshalling failure exception. It allows to:

	Instantiate marshalling failure exception;
	Instantiate marshalling failure exception  with cause throwable

237.8. Add a class for uncategorized mapping exception. It allows to:

	Instantiate uncategorized mapping exception  with cause throwable

237.9. Add an interface declaration  for unmarshaller. It allows to:

	Handle supports;
	Handle unmarshal

237.10. Add a class for unmarshalling failure exception. It allows to:

	Instantiate unmarshalling failure exception;
	Instantiate unmarshalling failure exception  with cause throwable

237.11. Add a class for validation failure exception. It allows to:

	Instantiate validation failure exception;
	Instantiate validation failure exception  with cause throwable

237.12. Add a class for xml mapping exception. It allows to:

	Instantiate xml mapping exception;
	Instantiate xml mapping exception  with cause throwable

238. Changes to package org.springframework.oxm.config:  

238.1. Add a class for jaxb 2 marshaller bean definition parser. It allows to:

	Get bean class name;
	Parse element

238.2. Add a class for jibx marshaller bean definition parser. It allows to:

	Get bean class name

238.3. Add a class for oxm namespace handler. It allows to:

	Handle init

238.4. Add a class for oxm namespace handler tests. It allows to:

	Convert jaxb;

239. Changes to package org.springframework.oxm.jaxb:  

239.1. Add a class for airplane. It allows to:

	Get name;
	Set name

239.2. Add a class for binary object. It allows to:

	Instantiate binary object;
	Instantiate binary object  with data handler;
	Get bytes;
	Get data handler;
	Get swa data handler

239.3. Add a class for class path jaxb 2 type scanner. It allows to:

	Instantiate class path jaxb 2 type scanner  with class loader;
	Scan packages;
	Check if class path jaxb 2 type scanner is jaxb 2 class

239.4. Add a class for jaxb 2 unmarshaller tests. It allows to:

	Create unmarshaller;
	Handle test flights;
	Handle test flight;
	Handle marshal attachments;
	Handle unmarshal partial stax source xml stream reader;
	Handle unmarshal an xml refering to A wrapped xml element decl;
	Handle unmarshal file

239.5. Add an object creator class for primitives. It allows to:

	Handle primitive boolean;
	Handle primitive byte;
	Handle primitive short;
	Handle primitive integer;
	Handle primitive long;
	Handle primitive double;
	Handle primitive byte array

239.6. Add an object creator class for standard classes. It allows to:

	Instantiate standard classes;
	Handle standard class string;
	Handle standard class big integer;
	Handle standard class big decimal;
	Handle standard class calendar;
	Handle standard class gregorian calendar;
	Handle standard class date;
	Handle standard class Q name;
	Handle standard class URI;
	Handle standard class XML gregorian calendar;
	Handle standard class duration;
	Handle standard class image;
	Handle standard class data handler;
	Handle standard class UUID

239.7. Add an object creator class for xml reg object factory. It allows to:

	Create airplane

240. Changes to package org.springframework.oxm.jibx:  

240.1. Add a class for flight type. It allows to:

	Get airline;
	Set airline;
	Get number;
	Set number

240.2. Add a class for flights. It allows to:

	Add flight;
	Get flight;
	Get size flight list

240.3. Add a class for jibx marshaller. It allows to:

	Set target class;
	Set target package;
	Set binding name;
	Set indent;
	Set encoding;
	Get default encoding;
	Set standalone;
	Set doc type root element name;
	Set doc type system id;
	Set doc type public id;
	Set doc type internal subset;
	Handle after properties set;
	Handle supports;
	Handle marshal output stream;
	Handle marshal writer;
	Handle marshal document;
	Handle marshal dom node;
	Handle marshal xml event writer;
	Handle marshal xml stream writer;
	Handle marshal sax handlers;
	Transform and marshal;
	Handle unmarshal xml event reader;
	Handle unmarshal xml stream reader;
	Handle unmarshal input stream;
	Handle unmarshal reader;
	Handle unmarshal dom node;
	Handle unmarshal sax reader;
	Transform and unmarshal;
	Create marshalling context;
	Create unmarshalling context;
	Convert jibx exception

240.4. Add a class for jibx marshaller tests. It allows to:

	Handle compiler assumptions;
	Create marshaller;
	Create flights;
	Process jibx marshaller tests jibx marshaller tests after properties set no context path;
	Handle indentation;
	Encoding and standalone;
	Dtd jibx marshaller tests;
	Handle supports

240.5. Add a class for jibx unmarshaller tests. It allows to:

	Handle compiler assumptions;
	Create unmarshaller;
	Handle test flights;
	Handle test flight;
	Handle unmarshal partial stax source xml stream reader;
	Handle unmarshal stream source input stream using non default encoding

241. Changes to package org.springframework.oxm.mime:  

241.1. Add an interface declaration  for mime container. It allows to:

	Check if mime container is xop package;
	Convert mime container to xop package;
	Add attachment;
	Get attachment

241.2. Add an interface declaration  for mime marshaller. It allows to:

	Handle marshal

241.3. Add an interface declaration  for mime unmarshaller. It allows to:

	Handle unmarshal

242. Changes to package org.springframework.oxm.support:  

242.1. Add a class for abstract marshaller. It allows to:

	Set support dtd;
	Check if abstract marshaller is support dtd;
	Set process external entities;
	Check if abstract marshaller is process external entities;
	Build document;
	Create document builder factory;
	Create document builder;
	Create xml reader;
	Get default encoding;
	Handle marshal;
	Handle marshal dom result;
	Handle marshal stax result;
	Handle marshal sax result;
	Handle marshal stream result;
	Handle unmarshal;
	Handle unmarshal dom source;
	Handle unmarshal stax source;
	Handle unmarshal sax source;
	Handle unmarshal stream source;
	Handle marshal dom node;
	Handle marshal xml event writer;
	Handle marshal xml stream writer;
	Handle marshal sax handlers;
	Handle marshal output stream;
	Handle marshal writer;
	Handle unmarshal dom node;
	Handle unmarshal xml event reader;
	Handle unmarshal xml stream reader;
	Handle unmarshal sax reader;
	Handle unmarshal input stream;
	Handle unmarshal reader

242.2. Add a class for sax resource utils. It allows to:

	Create input source;
	Get system id

243. Changes to package org.springframework.oxm.xstream:  

243.1. Add a class for catch all converter. It allows to:

	Convert type class;
	Handle marshal;
	Handle unmarshal

243.2. Add a class for flight. It allows to:

	Get flight number;
	Set flight number

243.3. Add a class for flight subclass

243.4. Add a class for flights. It allows to:

	Get flights;
	Set flights;
	Get strings;
	Set strings

243.5. Add a class for x stream marshaller. It allows to:

	Set reflection provider;
	Set stream driver;
	Get default driver;
	Set mapper;
	Set mapper wrappers;
	Set converter lookup;
	Set converter registry;
	Set converters;
	Set marshalling strategy;
	Set mode;
	Set aliases;
	Set aliases  by type;
	Set field aliases;
	Get set use attribute for types;
	Get set use attribute for;
	Set implicit collections;
	Set omitted fields;
	Set annotated classes;
	Set autodetect annotations;
	Set encoding;
	Get default encoding;
	Set name coder;
	Set supported classes;
	Set bean class loader;
	Handle after properties set;
	Build X stream;
	Construct X stream;
	Wrap mapper;
	Configure X stream;
	Convert x stream marshaller to class map;
	Customize X stream;
	Get X stream;
	Handle supports;
	Handle marshal dom node;
	Handle marshal xml event writer;
	Handle marshal xml stream writer;
	Handle marshal sax handlers;
	Handle marshal output stream;
	Handle marshal writer;
	Do marshal;
	Handle unmarshal stream source;
	Handle unmarshal dom node;
	Handle unmarshal xml event reader;
	Handle unmarshal xml stream reader;
	Handle unmarshal sax reader;
	Handle unmarshal input stream;
	Handle unmarshal reader;
	Do unmarshal;
	Convert X stream exception

243.6. Add a class for x stream marshaller tests. It allows to:

	Create marshaller;
	Handle marshal DOM result;
	Handle marshal DOM result to existent document;
	Handle marshal stream result writer;
	Handle marshal stream result output stream;
	Handle marshal sax result;
	Handle marshal stax result XML stream writer;
	Handle marshal stax result XML event writer;
	Handle converters;
	Use attributes  for;
	Use attributes  for string class map;
	Use attributes  for class string map;
	Use attributes  for class string list map;
	Handle aliases by type string class map;
	Handle aliases by type string string map;
	Handle field aliases;
	Omit fields;
	Handle implicit collections;
	Jettison driver;
	Handle json driver;
	Create writer;
	Handle annotated marshal stream result writer;
	Assert xpath exists;
	Assert xpath  not exists;
	Get count

243.7. Add a class for x stream unmarshaller tests. It allows to:

	Create unmarshaller;
	Handle test flight;
	Handle unmarshal dom source;
	Handle unmarshal stax source xml stream reader;
	Handle unmarshal stream source input stream;
	Handle unmarshal stream source reader

244. Changes to package org.springframework.protobuf:  

244.1. Add an interface declaration  for msg or builder. It allows to:

	Check if msg or builder has foo;
	Get foo;
	Get foo bytes;
	Check if msg or builder has blah;
	Blah msg or builder;
	Get blah or builder

244.2. Add a class for outer sample. It allows to:

	Instantiate outer sample;
	Register all extensions;
	Get descriptor;
	Assign descriptors

244.3. Add an interface declaration  for second msg or builder. It allows to:

	Check if second msg or builder has blah;
	Blah second msg or builder

245. Changes to package org.springframework.remoting:  

245.1. Add a class for remote access exception. It allows to:

	Instantiate remote access exception;
	Instantiate remote access exception  with cause throwable

245.2. Add a class for remote connect failure exception. It allows to:

	Instantiate remote connect failure exception  with cause throwable

245.3. Add a class for remote invocation failure exception. It allows to:

	Instantiate remote invocation failure exception  with cause throwable

245.4. Add a class for remote lookup failure exception. It allows to:

	Instantiate remote lookup failure exception;
	Instantiate remote lookup failure exception  with cause throwable

245.5. Add a class for remote proxy failure exception. It allows to:

	Instantiate remote proxy failure exception  with cause throwable

245.6. Add a class for remote timeout exception. It allows to:

	Instantiate remote timeout exception;
	Instantiate remote timeout exception  with cause throwable

246. Changes to package org.springframework.remoting.caucho:  

246.1. Add a class for hessian client interceptor. It allows to:

	Set proxy factory;
	Set serializer factory;
	Set send collection type;
	Set allow non serializable;
	Set overload enabled;
	Set username;
	Set password;
	Set debug;
	Set chunked post;
	Set connection factory;
	Set connect timeout;
	Set read timeout;
	Set hessian 2;
	Set hessian 2 request;
	Set hessian 2 reply;
	Handle after properties set;
	Prepare hessian client interceptor;
	Create hessian proxy;
	Invoke method invocation;
	Convert hessian access exception

246.2. Add a class for hessian exporter. It allows to:

	Set serializer factory;
	Set send collection type;
	Set allow non serializable;
	Set remote resolver;
	Set debug;
	Handle after properties set;
	Prepare hessian exporter;
	Invoke input stream;
	Invoke hessian skeleton

246.3. Add a class for hessian proxy factory bean. It allows to:

	Handle after properties set;
	Get object;
	Get object type;
	Check if hessian proxy factory bean is singleton

246.4. Add a class for hessian service exporter. It allows to:

	Handle request

246.5. Add a class for simple hessian service exporter. It allows to:

	Handle http exchange

247. Changes to package org.springframework.remoting.httpinvoker:  

247.1. Add a class for abstract http invoker request executor. It allows to:

	Set content type;
	Get content type;
	Set accept gzip encoding;
	Check if abstract http invoker request executor is accept gzip encoding;
	Set bean class loader;
	Get bean class loader;
	Execute request;
	Get byte array output stream;
	Write remote invocation;
	Decorate output stream;
	Do write remote invocation;
	Do execute request;
	Read remote invocation result;
	Decorate input stream;
	Create object input stream;
	Do read remote invocation result

247.2. Add a class for http components http invoker request executor. It allows to:

	Instantiate http components http invoker request executor;
	Instantiate http components http invoker request executor  with http client;
	Instantiate http components http invoker request executor  with http client, request config and request config;
	Create default http client;
	Set http client;
	Get http client;
	Set connect timeout;
	Set connection request timeout;
	Set read timeout;
	Clone request config;
	Do execute request;
	Create http post;
	Create request config;
	Merge request config;
	Set request body;
	Execute http post;
	Validate response;
	Get response body;
	Check if http components http invoker request executor is gzip response

247.3. Add a class for http components http invoker request executor tests. It allows to:

	Customize connection timeout;
	Customize connection request timeout;
	Customize read timeout;
	Handle default settings of http client merged on executor customization;
	Handle local settings override client default settings;
	Merge based  on current http client;
	Get http client;
	Ignore factory settings;
	Create request config;
	Handle mock http invoker client configuration

247.4. Add an interface declaration  for http invoker client configuration. It allows to:

	Get service url;
	Get codebase url

247.5. Add a class for http invoker client interceptor. It allows to:

	Set codebase url;
	Get codebase url;
	Set http invoker request executor;
	Get http invoker request executor;
	Handle after properties set;
	Invoke method invocation;
	Execute request;
	Convert http invoker access exception

247.6. Add a class for http invoker proxy factory bean. It allows to:

	Handle after properties set;
	Get object;
	Get object type;
	Check if http invoker proxy factory bean is singleton

247.7. Add an interface declaration  for http invoker request executor. It allows to:

	Execute request

247.8. Add a class for simple http invoker request executor. It allows to:

	Set connect timeout;
	Set read timeout;
	Do execute request;
	Handle open connection;
	Prepare connection;
	Write request body;
	Validate response;
	Read response body;
	Check if simple http invoker request executor is gzip response

247.9. Add a class for simple http invoker service exporter. It allows to:

	Handle http exchange;
	Read remote invocation;
	Decorate input stream;
	Write remote invocation result;
	Decorate output stream

248. Changes to package org.springframework.remoting.jaxws:  

248.1. Add a class for abstract jax ws service exporter. It allows to:

	Set endpoint properties;
	Set executor;
	Set binding type;
	Set endpoint features;
	Set bean factory;
	Handle after properties set;
	Publish endpoints;
	Create endpoint;
	Publish endpoint;
	Destroy abstract jax ws service exporter

248.2. Add a class for jax ws port client interceptor. It allows to:

	Set jax ws service;
	Get jax ws service;
	Set port name;
	Get port name;
	Set username;
	Get username;
	Set password;
	Get password;
	Set endpoint address;
	Get endpoint address;
	Set maintain session;
	Check if jax ws port client interceptor is maintain session;
	Get set use soap action;
	Check if jax ws port client interceptor is use soap action;
	Set soap action uri;
	Get soap action uri;
	Set custom properties;
	Get custom properties;
	Add custom property;
	Set port features;
	Set service interface;
	Get service interface;
	Set lookup service  on startup;
	Set bean class loader;
	Get bean class loader;
	Handle after properties set;
	Prepare jax ws port client interceptor;
	Apply defaults  from annotation;
	Check if jax ws port client interceptor is prepared;
	Get port Q name;
	Get port stub;
	Prepare port stub;
	Invoke method invocation;

248.3. Add a class for jax ws port proxy factory bean. It allows to:

	Handle after properties set;
	Get object;
	Get object type;
	Check if jax ws port proxy factory bean is singleton

248.4. Add a class for jax ws soap fault exception. It allows to:

	Instantiate jax ws soap fault exception  with original SOAP fault exception;
	Get fault;
	Get fault code;
	Get fault code  as Q name;
	Get fault string;
	Get fault actor

248.5. Add a class for local jax ws service factory. It allows to:

	Set wsdl document url;
	Set wsdl document resource;
	Get wsdl document url;
	Set namespace uri;
	Get namespace uri;
	Set service name;
	Get service name;
	Set service features;
	Set executor;
	Set handler resolver;
	Create jax ws service;
	Get Q name

248.6. Add a class for local jax ws service factory bean. It allows to:

	Handle after properties set;
	Get object;
	Get object type;
	Check if local jax ws service factory bean is singleton

248.7. Add a class for order not found exception. It allows to:

	Instantiate order not found exception;
	Get fault info

248.8. Add an interface declaration  for order service. It allows to:

	Get order

248.9. Add a class for order service impl. It allows to:

	Get order

248.10. Add a class for simple http server jax ws service exporter. It allows to:

	Set server;
	Set port;
	Set hostname;
	Set backlog;
	Set shutdown delay;
	Set base path;
	Set filters;
	Set authenticator;
	Handle after properties set;
	Publish endpoint;
	Build http context;
	Calculate endpoint path;
	Destroy simple http server jax ws service exporter

248.11. Add a class for simple jax ws service exporter. It allows to:

	Set base address;
	Publish endpoint;
	Calculate endpoint address

249. Changes to package org.springframework.remoting.rmi:  

249.1. Add a class for codebase aware object input stream. It allows to:

	Instantiate codebase aware object input stream  with input stream;
	Instantiate codebase aware object input stream  with input stream, class loader and class loader;
	Resolve fallback  if possible;
	Get fallback class loader

249.2. Add a class for jndi rmi client interceptor. It allows to:

	Set service interface;
	Get service interface;
	Set remote invocation factory;
	Get remote invocation factory;
	Set lookup stub  on startup;
	Set cache stub;
	Set refresh stub  on connect failure;
	Set expose access context;
	Handle after properties set;
	Prepare jndi rmi client interceptor;
	Lookup stub;
	Get stub;
	Invoke method invocation;
	Check if jndi rmi client interceptor is connect failure;
	Handle remote connect failure;
	Refresh method invocation;
	Create remote invocation;
	Convert rmi access exception

249.3. Add a class for jndi rmi proxy factory bean. It allows to:

	Set bean class loader;
	Handle after properties set;
	Get object;
	Get object type;
	Check if jndi rmi proxy factory bean is singleton

249.4. Add a class for jndi rmi service exporter. It allows to:

	Set jndi template;
	Set jndi environment;
	Set jndi name;
	Handle after properties set;
	Prepare jndi rmi service exporter;
	Rebind jndi rmi service exporter;
	Destroy jndi rmi service exporter;
	Invoke portable remote object

249.5. Add a class for remote invocation serializing exporter. It allows to:

	Set content type;
	Get content type;
	Set accept proxy classes;
	Check if remote invocation serializing exporter is accept proxy classes;
	Handle after properties set;
	Prepare remote invocation serializing exporter;
	Get proxy;
	Create object input stream;
	Do read remote invocation;
	Create object output stream;
	Do write remote invocation result

249.6. Add a class for rmi based exporter. It allows to:

	Get object  to export;
	Invoke remote invocation

249.7. Add a class for rmi client interceptor utils. It allows to:

	Invoke remote method;
	Convert rmi access exception;
	Check if rmi client interceptor utils is connect failure

249.8. Add an interface declaration  for rmi invocation handler. It allows to:

	Get target interface name;
	Invoke remote invocation

249.9. Add a class for rmi invocation wrapper. It allows to:

	Instantiate rmi invocation wrapper  with rmi based exporter;
	Get target interface name;
	Invoke remote invocation

249.10. Add a class for rmi proxy factory bean. It allows to:

	Handle after properties set;
	Get object;
	Get object type;
	Check if rmi proxy factory bean is singleton

249.11. Add a class for rmi registry factory bean. It allows to:

	Set host;
	Get host;
	Set port;
	Get port;
	Set client socket factory;
	Set server socket factory;
	Set rmi registry factory bean always create;
	Handle after properties set;
	Get registry;
	Handle test registry;
	Get object;
	Get object type;
	Check if rmi registry factory bean is singleton;
	Destroy rmi registry factory bean

249.12. Add a class for rmi service exporter. It allows to:

	Set service name;
	Set service port;
	Set client socket factory;
	Set server socket factory;
	Set registry;
	Set registry host;
	Set registry port;
	Set registry client socket factory;
	Set registry server socket factory;
	Set rmi service exporter always create registry;
	Set replace existing binding;
	Handle after properties set;
	Prepare rmi service exporter;
	Get registry;
	Handle test registry;
	Destroy rmi service exporter;
	Handle unexport object silently

250. Changes to package org.springframework.remoting.soap:  

250.1. Add a class for soap fault exception. It allows to:

	Instantiate soap fault exception  with cause throwable;
	Get fault code;
	Get fault code  as Q name;
	Get fault string;
	Get fault actor

251. Changes to package org.springframework.remoting.support:  

251.1. Add a class for default remote invocation executor. It allows to:

	Invoke remote invocation

251.2. Add an object creator class for default remote invocation factory. It allows to:

	Create remote invocation

251.3. Add a class for remote accessor. It allows to:

	Set service interface;
	Get service interface

251.4. Add a class for remote exporter. It allows to:

	Set service;
	Get service;
	Set service interface;
	Get service interface;
	Set register trace interceptor;
	Set interceptors;
	Check service;
	Check service interface;
	Get proxy  for service;
	Get exporter name

251.5. Add a class for remote invocation. It allows to:

	Instantiate remote invocation  with method invocation;
	Instantiate remote invocation  with parameter types class;
	Instantiate remote invocation;
	Set method name;
	Get method name;
	Set parameter types;
	Get parameter types;
	Set arguments;
	Get arguments;
	Add attribute;
	Get attribute;
	Set attributes;
	Get attributes;
	Invoke remote invocation;
	Convert remote invocation to string

251.6. Add a class for remote invocation based accessor. It allows to:

	Set remote invocation factory;
	Get remote invocation factory;
	Create remote invocation;
	Recreate remote invocation result

251.7. Add a class for remote invocation based exporter. It allows to:

	Set remote invocation executor;
	Get remote invocation executor;
	Invoke remote invocation;
	Invoke and create result

251.8. Add an interface declaration  for remote invocation executor. It allows to:

	Invoke remote invocation

251.9. Add an interface declaration  for remote invocation factory. It allows to:

	Create remote invocation

251.10. Add a class for remote invocation result. It allows to:

	Instantiate remote invocation result;
	Instantiate remote invocation result  with exception throwable;
	Get set value;
	Get value;
	Set exception;
	Get exception;
	Check if remote invocation result has exception;
	Check if remote invocation result has invocation target exception;
	Recreate remote invocation result

251.11. Add a class for remote invocation trace interceptor. It allows to:

	Instantiate remote invocation trace interceptor;
	Invoke method invocation

251.12. Add a class for remote invocation utils. It allows to:

	Fill ex throwable in client stack trace if possible

251.13. Add a class for remote invocation utils tests. It allows to:

	Fill remote invocation utils tests in client stack trace if possible sunny day;
	Fill remote invocation utils tests in client stack trace if possible with null throwable

251.14. Add a class for remoting support. It allows to:

	Set bean class loader;
	Get bean class loader;
	Override thread context class loader;
	Reset thread context class loader

251.15. Add a class for simple http server factory bean. It allows to:

	Set port;
	Set hostname;
	Set backlog;
	Set shutdown delay;
	Set executor;
	Set contexts;
	Set filters;
	Set authenticator;
	Handle after properties set;
	Get object;
	Get object type;
	Check if simple http server factory bean is singleton;
	Destroy simple http server factory bean

251.16. Add a class for url based remote accessor. It allows to:

	Set service url;
	Get service url;
	Handle after properties set

252. Changes to package org.springframework.scheduling:  

252.1. Add an interface declaration  for scheduling aware runnable. It allows to:

	Check if scheduling aware runnable is long lived

252.2. Add a class for scheduling exception. It allows to:

	Instantiate scheduling exception;
	Instantiate scheduling exception  with cause throwable

252.3. Add an interface declaration  for scheduling task executor. It allows to:

	Check if scheduling task executor prefers short lived tasks

252.4. Add an interface declaration  for task scheduler. It allows to:

	Get schedule;
	Get schedule at fixed rate;
	Get schedule with fixed delay;

252.5. Add an interface declaration  for trigger. It allows to:

	Handle next execution time

252.6. Add an interface declaration  for trigger context. It allows to:

	Handle last scheduled execution time;
	Handle last actual execution time;
	Handle last completion time

253. Changes to package org.springframework.scheduling.annotation:  

253.1. Add a class for abstract async configuration. It allows to:

	Set import metadata;
	Set configurers

253.2. Add a class for annotation async execution interceptor. It allows to:

	Instantiate annotation async execution interceptor  with default executor;
	Instantiate annotation async execution interceptor  with default executor, async uncaught exception handler and async uncaught exception handler;
	Get executor qualifier

253.3. Add a class for annotation async execution interceptor tests. It allows to:

	Handle test get executor qualifier

253.4. Add a class for async annotation advisor. It allows to:

	Instantiate async annotation advisor;
	Instantiate async annotation advisor  with executor, async uncaught exception handler and async uncaught exception handler;
	Instantiate async annotation advisor  with executor supplier, exception handler supplier and exception handler supplier;
	Set async annotation type;
	Set bean factory;
	Get advice;
	Get pointcut;
	Build advice;
	Build pointcut

253.5. Add a class for async annotation bean post processor. It allows to:

	Instantiate async annotation bean post processor;
	Configure executor supplier;
	Set executor;
	Set exception handler;
	Set async annotation type;
	Set bean factory

253.6. Add a class for async configuration selector. It allows to:

	Handle select imports

253.7. Add an interface declaration  for async configurer. It allows to:

	Get async executor;
	Get async uncaught exception handler

253.8. Add a class for async configurer support. It allows to:

	Get async executor;
	Get async uncaught exception handler

253.9. Add a class for async result. It allows to:

	Instantiate async result  with value;
	Instantiate async result  with value, ex throwable and ex throwable;
	Cancel async result;
	Check if async result is canceled;
	Check if async result is done;
	Get async result;
	Get time unit;
	Add callback;
	Handle completable;
	Process async result async result for value;
	Process async result async result for execution exception;
	Get exposed exception

253.10. Add a class for async result tests. It allows to:

	Handle async result with callback and value;
	Process  on success;
	Process  on failure;
	Handle async result with callback and exception;
	Handle async result with separate callbacks and value;
	Handle async result with separate callbacks and exception

253.11. Add a class for proxy async configuration. It allows to:

	Handle async advisor

253.12. Add a class for scheduled annotation bean post processor. It allows to:

	Instantiate scheduled annotation bean post processor;
	Instantiate scheduled annotation bean post processor  with scheduled task registrar;
	Get order;
	Set scheduler;
	Set embedded value resolver;
	Set bean name;
	Set bean factory;
	Set application context;
	Handle after singletons instantiated;
	Process scheduled annotation bean post processor scheduled annotation bean post processor on application event;
	Finish registration;
	Resolve scheduler bean;
	Post process merged bean definition;
	Post process  before initialization;
	Post process  after initialization;
	Handle process scheduled;
	Create runnable;
	Parse delay  as long;
	Check if scheduled annotation bean post processor is P;
	Get scheduled tasks;
	Post process  before destruction;
	Check if scheduled annotation bean post processor requires destruction;
	Destroy scheduled annotation bean post processor

253.13. Add an object creator class for scheduling configuration. It allows to:

	Get scheduled annotation processor

253.14. Add an interface declaration  for scheduling configurer. It allows to:

	Configure tasks

254. Changes to package org.springframework.scheduling.aspectj:  

254.1. Add a class for annotation driven bean definition parser tests. It allows to:

	Handle setup;
	Process annotation driven bean definition parser tests annotation driven bean definition parser tests after;
	Handle async aspect registered;
	Handle async post processor executor reference;
	Handle async post processor exception handler reference

254.2. Add a class for aspect J async configuration. It allows to:

	Handle async advisor

255. Changes to package org.springframework.scheduling.commonj:  

255.1. Add a class for delegating timer listener. It allows to:

	Instantiate delegating timer listener  with runnable;
	Handle timer expired

255.2. Add a class for delegating work. It allows to:

	Instantiate delegating work  with delegate runnable;
	Get delegate;
	Run delegating work;
	Check if delegating work is daemon;
	Handle release

255.3. Add a class for scheduled timer listener. It allows to:

	Instantiate scheduled timer listener;
	Instantiate scheduled timer listener  with timer listener;
	Instantiate scheduled timer listener  with timer task runnable;
	Set runnable;
	Set timer listener;
	Get timer listener;
	Set delay;
	Get delay;
	Set period;
	Get period;
	Check if scheduled timer listener is one time task;
	Set fixed rate;
	Check if scheduled timer listener is fixed rate

255.4. Add a class for timer manager accessor. It allows to:

	Set timer manager;
	Set timer manager name;
	Shared timer manager accessor;
	Handle after properties set;
	Get timer manager;
	Obtain timer manager;
	Start timer manager accessor;
	Stop timer manager accessor;
	Check if timer manager accessor is running;
	Destroy timer manager accessor

255.5. Add a class for timer manager factory bean. It allows to:

	Set scheduled timer listeners;
	Handle after properties set;
	Get object;
	Get object type;
	Check if timer manager factory bean is singleton;
	Destroy timer manager factory bean

255.6. Add a class for work manager task executor. It allows to:

	Set work manager;
	Set work manager name;
	Set work listener;
	Set task decorator;
	Handle after properties set;
	Obtain work manager;
	Execute task runnable;
	Submit task runnable;
	Submit task callable;
	Submit listenable;
	Get schedule;
	Wait work items collection for all;
	Wait work items collection for any

256. Changes to package org.springframework.scheduling.concurrent:  

256.1. Add a class for concurrent task executor tests. It allows to:

	Build executor;
	Handle shutdown executor;
	Handle zero arg ctor results in default task executor being used;
	Passing null executor  to ctor results in default task executor being used;
	Passing null executor  to setter results in default task executor being used

256.2. Add a class for customizable thread factory. It allows to:

	Instantiate customizable thread factory;
	Handle new thread

256.3. Add a class for default managed aware thread factory. It allows to:

	Set jndi template;
	Set jndi environment;
	Set resource ref;
	Set jndi name;
	Handle after properties set;
	Handle new thread

256.4. Add a class for default managed task executor. It allows to:

	Set jndi template;
	Set jndi environment;
	Set resource ref;
	Set jndi name;
	Handle after properties set

256.5. Add a class for default managed task scheduler. It allows to:

	Set jndi template;
	Set jndi environment;
	Set resource ref;
	Set jndi name;
	Handle after properties set

256.6. Add a class for executor configuration support. It allows to:

	Set thread factory;
	Set thread name prefix;
	Set rejected execution handler;
	Set wait  for tasks to complete on shutdown;
	Get set await termination seconds;
	Set bean name;
	Handle after properties set;
	Initialize executor configuration support;
	Initialize executor;
	Destroy executor configuration support;
	Handle shutdown;
	Cancel remaining task;
	Await termination  if necessary

256.7. Add a class for fork join pool factory bean. It allows to:

	Set common pool;
	Set parallelism;
	Set thread factory;
	Set uncaught exception handler;
	Set async mode;
	Get set await termination seconds;
	Handle after properties set;
	Get object;
	Get object type;
	Check if fork join pool factory bean is singleton;
	Destroy fork join pool factory bean

256.8. Add a class for rescheduling runnable. It allows to:

	Instantiate rescheduling runnable  with delegate runnable, trigger, scheduled executor service, error handler and error handler;
	Get schedule;
	Obtain current future;
	Run rescheduling runnable;
	Cancel rescheduling runnable;
	Check if rescheduling runnable is canceled;
	Check if rescheduling runnable is done;
	Get rescheduling runnable;
	Get time unit;
	Get delay;
	Compare  to other delayed

256.9. Add a class for scheduled executor factory bean. It allows to:

	Set pool size;
	Set scheduled executor tasks;
	Set remove  on cancel policy;
	Set continue scheduled execution  after exception;
	Set expose unconfigurable executor;
	Initialize executor;
	Create executor;
	Register tasks;
	Get runnable  to schedule;
	Get object;
	Get object type;
	Check if scheduled executor factory bean is singleton

256.10. Add a class for scheduled executor task. It allows to:

	Instantiate scheduled executor task;
	Instantiate scheduled executor task  with executor task runnable;
	Set runnable;
	Get runnable;
	Set delay;
	Get delay;
	Set period;
	Get period;
	Check if scheduled executor task is one time task;
	Set time unit;
	Get time unit;
	Set fixed rate;
	Check if scheduled executor task is fixed rate

256.11. Add a class for thread pool executor factory bean. It allows to:

	Set core pool size;
	Set max pool size;
	Set keep alive seconds;
	Set allow core thread time  out;
	Set queue capacity;
	Set expose unconfigurable executor;
	Initialize executor;
	Create executor;
	Create queue;
	Get object;
	Get object type;
	Check if thread pool executor factory bean is singleton

256.12. Add a class for thread pool task executor. It allows to:

	Set core pool size;
	Get core pool size;
	Set max pool size;
	Get max pool size;
	Set keep alive seconds;
	Get keep alive seconds;
	Set queue capacity;
	Set allow core thread time  out;
	Set task decorator;
	Initialize executor;
	Execute command runnable;
	Create queue;
	Get thread pool executor;
	Get pool size;
	Get active count;
	Execute task runnable;
	Submit task runnable;
	Submit task callable;
	Submit listenable;
	Cancel remaining task

257. Changes to package org.springframework.scheduling.config:  

257.1. Add a class for annotation driven bean definition parser. It allows to:

	Parse element;
	Register async execution aspect;
	Register post processor

257.2. Add a class for annotation driven bean definition parser tests. It allows to:

	Close application context;
	Handle async post processor registered;
	Get scheduled post processor registered;
	Handle async post processor executor reference;
	Get scheduled post processor scheduler reference;
	Handle async post processor exception handler reference

257.3. Add a class for context lifecycle scheduled task registrar. It allows to:

	Handle after properties set;
	Handle after singletons instantiated

257.4. Add a class for cron task. It allows to:

	Instantiate cron task  with runnable;
	Instantiate cron task  with runnable, cron trigger and cron trigger;
	Get expression

257.5. Add a class for executor bean definition parser. It allows to:

	Get bean class name;
	Parse element;
	Configure rejection policy

257.6. Add a class for executor bean definition parser tests. It allows to:

	Handle setup;
	Handle default executor;
	Call;
	Handle single size;
	Handle invalid pool size;
	Handle range with bounded queue;
	Handle range with unbounded queue;
	Handle property placeholder with single size;
	Handle property placeholder with range;
	Handle property placeholder with range and core thread timeout;
	Handle property placeholder with invalid pool size;
	Handle thread name prefix;
	Handle type check;
	Get core pool size;
	Get max pool size;
	Get queue capacity;
	Get keep alive seconds;
	Get allow core thread time  out

257.7. Add a class for interval task. It allows to:

	Instantiate interval task  with runnable;
	Get interval;
	Get initial delay

257.8. Add a class for scheduled task. It allows to:

	Instantiate scheduled task  with task;
	Get task;
	Cancel scheduled task;
	Convert scheduled task to string

257.9. Add a class for scheduled task registrar. It allows to:

	Set task scheduler;
	Set scheduler;
	Get scheduler;
	Set trigger tasks;
	Set trigger tasks list;
	Get trigger task list;
	Set cron tasks;
	Set cron tasks list;
	Get cron task list;
	Set fixed rate tasks;
	Set fixed rate tasks list;
	Get fixed rate task list;
	Set fixed delay tasks;
	Set fixed delay tasks list;
	Get fixed delay task list;
	Add trigger task;
	Add cron task;
	Add fixed rate task;
	Add fixed delay task;
	Check if scheduled task registrar has tasks;
	Handle after properties set;
	Schedule tasks;
	Add scheduled task;
	Get schedule trigger task;
	Schedule cron task;
	Schedule fixed rate task;
	Schedule fixed delay task;
	Get scheduled tasks;
	Destroy scheduled task registrar

257.10. Add a class for scheduled task registrar tests. It allows to:

	Handle empty task lists;
	Get trigger tasks;
	Get cron tasks;
	Get fixed rate tasks;
	Get fixed delay tasks

257.11. Add a class for scheduled tasks bean definition parser. It allows to:

	Should generate id;
	Get bean class name;
	Parse element;
	Check if scheduled tasks bean definition parser is scheduled element;
	Handle runnable reference;
	Handle interval task reference;
	Cron task reference;
	Trigger task reference;
	Get bean reference

257.12. Add a class for scheduler bean definition parser. It allows to:

	Get bean class name;
	Parse element

257.13. Add a class for scheduler bean definition parser tests. It allows to:

	Handle setup;
	Handle default scheduler;
	Handle custom scheduler;
	Handle thread name prefix

257.14. Add a class for task. It allows to:

	Instantiate task  with runnable;
	Get runnable;
	Convert task to string

257.15. Add a class for task executor factory bean. It allows to:

	Set pool size;
	Set queue capacity;
	Set rejected execution handler;
	Set keep alive seconds;
	Set bean name;
	Handle after properties set;
	Determine pool size range;
	Get object;
	Get object type;
	Check if task executor factory bean is singleton;
	Destroy task executor factory bean

257.16. Add a class for task management config utils

257.17. Add a class for task namespace handler. It allows to:

	Handle init

257.18. Add a class for trigger task. It allows to:

	Instantiate trigger task  with runnable, trigger and trigger;
	Get trigger

258. Changes to package org.springframework.scheduling.quartz:  

258.1. Add a class for adaptable job factory. It allows to:

	Handle new job;
	Create job instance;
	Adapt job

258.2. Add a class for cron trigger factory bean. It allows to:

	Set name;
	Set group;
	Set job detail;
	Set job data map;
	Get job data map;
	Set job data  as map;
	Set start time;
	Set start delay;
	Set cron expression;
	Set time zone;
	Set calendar name;
	Set priority;
	Set misfire instruction;
	Set misfire instruction name;
	Set description;
	Set bean name;
	Handle after properties set;
	Get object;
	Get object type;
	Check if cron trigger factory bean is singleton

258.3. Add a class for cron trigger factory bean tests. It allows to:

	Create cron trigger factory bean tests without job detail

258.4. Add a class for delegating job. It allows to:

	Instantiate delegating job  with delegate runnable;
	Get delegate;
	Execute job execution context

258.5. Add a class for job detail factory bean. It allows to:

	Set name;
	Set group;
	Set job class;
	Set job data map;
	Get job data map;
	Set job data  as map;
	Set durability;
	Set requests recovery;
	Set description;
	Set bean name;
	Set application context;
	Set application context job data key;
	Handle after properties set;
	Get object;
	Get object type;
	Check if job detail factory bean is singleton

258.6. Add a class for job method invocation failed exception. It allows to:

	Instantiate job method invocation failed exception  with method invoker, cause throwable and cause throwable

258.7. Add a class for local data source job store. It allows to:

	Initialize class load helper;
	Get connection;
	Handle shutdown;
	Initialize;
	Close connection

258.8. Add a class for local task executor thread pool. It allows to:

	Set instance id;
	Set instance name;
	Initialize local task executor thread pool;
	Handle shutdown;
	Get pool size;
	Run runnable in thread;
	Block local task executor thread pool for available threads

258.9. Add a class for quartz job bean. It allows to:

	Execute job execution context;
	Execute internal

258.10. Add a class for quartz scheduler lifecycle tests. It allows to:

	Destroy lazy init scheduler  with default shutdown order does not hang;
	Destroy lazy init scheduler  with custom shutdown order does not hang

258.11. Add a class for quartz test bean. It allows to:

	Do import;
	Do export;
	Get import count;
	Get export count

258.12. Add a class for resource loader class load helper. It allows to:

	Instantiate resource loader class load helper;
	Instantiate resource loader class load helper  with resource loader;
	Initialize resource loader class load helper;
	Load class;
	Get resource;
	Get resource  as stream;
	Get class loader

258.13. Add a class for scheduler accessor. It allows to:

	Set overwrite existing jobs;
	Set job scheduling data location;
	Set job scheduling data locations;
	Set job details;
	Set calendars;
	Triggers triggers;
	Set scheduler listeners;
	Set global job listeners;
	Set global trigger listeners;
	Set transaction manager;
	Set resource loader;
	Register jobs and triggers;
	Add job  to scheduler;
	Add trigger  to scheduler;
	Register listeners;
	Get scheduler

258.14. Add a class for scheduler accessor bean. It allows to:

	Set scheduler name;
	Set scheduler;
	Get scheduler;
	Set bean factory;
	Handle after properties set;
	Find scheduler;
	Find default scheduler

258.15. Add an interface declaration  for scheduler context aware. It allows to:

	Set scheduler context

258.16. Add a class for scheduler factory bean. It allows to:

	Get config time resource loader;
	Get config time task executor;
	Get config time data source;
	Get config time non transactional data source;
	Set scheduler factory;
	Set scheduler factory class;
	Set scheduler name;
	Set config location;
	Set quartz properties;
	Set task executor;
	Get set data source;
	Set non transactional data source;
	Set scheduler context  as map;
	Set application context scheduler context key;
	Set job factory;
	Set auto startup;
	Check if scheduler factory bean is auto startup;
	Set phase;
	Get phase;
	Set startup delay;
	Set expose scheduler  in repository;
	Set wait  for jobs to complete on shutdown;
	Set bean name;
	Set application context;
	Handle after properties set;
	Prepare scheduler factory;
	Handle init scheduler factory;
	Prepare scheduler;
	Create scheduler;
	Populate scheduler context;
	Start scheduler;
	Run;
	Get scheduler;
	Get object;
	Get object type;
	Check if scheduler factory bean is singleton;
	Start scheduler factory bean;
	Stop scheduler factory bean;
	Check if scheduler factory bean is running;
	Destroy scheduler factory bean

258.17. Add a class for simple thread pool task executor. It allows to:

	Set wait  for jobs to complete on shutdown;
	Handle after properties set;
	Execute task runnable;
	Submit task runnable;
	Submit task callable;
	Submit listenable;
	Destroy simple thread pool task executor

258.18. Add a class for simple trigger factory bean. It allows to:

	Set name;
	Set group;
	Set job detail;
	Set job data map;
	Get job data map;
	Set job data  as map;
	Set start time;
	Set start delay;
	Set repeat interval;
	Set repeat count;
	Set priority;
	Set misfire instruction;
	Set misfire instruction name;
	Set description;
	Set bean name;
	Handle after properties set;
	Get object;
	Get object type;
	Check if simple trigger factory bean is singleton

258.19. Add a class for simple trigger factory bean tests. It allows to:

	Create simple trigger factory bean tests without job detail

258.20. Add a class for spring bean job factory. It allows to:

	Set ignored unknown properties;
	Set application context;
	Set scheduler context;
	Create job instance;
	Check if spring bean job factory is eligible for property population

259. Changes to package org.springframework.scheduling.support:  

259.1. Add a class for cron sequence generator. It allows to:

	Instantiate cron sequence generator;
	Instantiate cron sequence generator  with time zone;
	Get expression;
	Handle next;
	Do next;
	Find next day;
	Find next;
	Reset calendar;
	Parse cron sequence generator;
	Replace ordinals;
	Set days  of month;
	Set days;
	Set months;
	Set number hits;
	Get range;
	Check if cron sequence generator is valid expression;
	Are valid cron fields;
	Check if cron sequence generator equals;
	Hash code;
	Convert cron sequence generator to string

259.2. Add a class for cron sequence generator tests. It allows to:

	Process cron sequence generator tests cron sequence generator tests at 50 seconds;
	Process cron sequence generator tests cron sequence generator tests at 0 seconds;
	Process cron sequence generator tests cron sequence generator tests at 0 minutes;
	Process cron sequence generator tests cron sequence generator tests with 0 increment;
	Process cron sequence generator tests cron sequence generator tests with negative increment;
	Process cron sequence generator tests cron sequence generator tests with inverted minute range;
	Process cron sequence generator tests cron sequence generator tests with inverted hour range;
	Process cron sequence generator tests cron sequence generator tests with same minute range;
	Process cron sequence generator tests cron sequence generator tests with same hour range;
	Handle valid expression;
	Handle invalid expression with length;
	Handle invalid expression with seconds;
	Handle invalid expression with months;
	Handle null expression

259.3. Add a class for cron trigger. It allows to:

	Instantiate cron trigger;
	Instantiate cron trigger  with time zone;
	Get expression;
	Handle next execution time;
	Check if cron trigger equals;
	Hash code;
	Convert cron trigger to string

259.4. Add a class for cron trigger tests. It allows to:

	Instantiate cron trigger tests  with date, time zone and time zone;
	Get parameters;
	Handle roundup;
	Set cron trigger tests;
	Handle test match all;
	Handle test match last second;
	Handle test match specific second;
	Handle test increment second by one;
	Handle test increment second with previous execution too early;
	Handle test increment second and rollover;
	Handle test second range;
	Handle test increment minute;
	Handle test increment minute by one;
	Handle test increment minute and rollover;
	Handle test increment hour;
	Handle test increment hour and rollover;
	Handle test increment day of month;
	Handle test increment day of month by one;
	Handle test increment day of month and rollover;
	Handle test daily trigger in short month;
	Handle test daily trigger in long month;
	Handle test daily trigger on daylight saving boundary;
	Handle test increment month;
	Handle test increment month and rollover;
	Handle test monthly trigger in long month;
	Handle test monthly trigger in short month;
	Handle test increment day of week by one;
	Handle test increment day of week and rollover;
	Handle test specific minute second;
	Handle test specific hour second;
	Handle test specific minute hour;
	Handle test specific day of month second;
	Handle test specific date;
	Handle test non existent specific date;
	Handle test leap year specific date;
	Handle test week day sequence;
	Handle test day of week indifferent;
	Handle test second incrementer;
	Handle test second incrementer with range;
	Handle test hour incrementer;
	Handle test day names;
	Handle test Sunday is zero;
	Handle test Sunday synonym;
	Handle test month names;
	Handle test month names mixed case;
	Handle test second invalid;
	Handle test second range invalid;
	Handle test minute invalid;
	Handle test minute range invalid;
	Handle test hour invalid;
	Test hour range invalid;
	Handle test day invalid;
	Handle test day range invalid;
	Handle test month invalid;
	Handle test month invalid too small;
	Handle test day of month invalid;
	Handle test month range invalid;
	Handle test whitespace;
	Handle test month sequence;
	Handle test daylight saving missing hour;
	Assert matches next second;
	Get trigger context

259.5. Add a class for delegating error handling runnable. It allows to:

	Instantiate delegating error handling runnable  with delegate runnable, error handler and error handler;
	Run delegating error handling runnable;
	Convert delegating error handling runnable to string

259.6. Add a class for method invoking runnable. It allows to:

	Set bean class loader;
	Resolve class name;
	Handle after properties set;
	Run method invoking runnable;
	Get invocation failure message

259.7. Add a class for periodic trigger. It allows to:

	Instantiate periodic trigger;
	Instantiate periodic trigger  with time unit;
	Get period;
	Get time unit;
	Set initial delay;
	Get initial delay;
	Set fixed rate;
	Check if periodic trigger is fixed rate;
	Handle next execution time;
	Check if periodic trigger equals;
	Hash code

259.8. Add a class for scheduled method runnable. It allows to:

	Instantiate scheduled method runnable  with method;
	Instantiate scheduled method runnable;
	Get target;
	Get method;
	Run scheduled method runnable;
	Convert scheduled method runnable to string

259.9. Add a class for simple trigger context. It allows to:

	Instantiate simple trigger context;
	Instantiate simple trigger context  with last scheduled execution time date, last actual execution time date, last completion time date and last completion time date;
	Update last scheduled execution time date;
	Handle last scheduled execution time;
	Handle last actual execution time;
	Handle last completion time

260. Changes to package org.springframework.scripting:  

260.1. Add an interface declaration  for calculator. It allows to:

	Add calculator

260.2. Add an interface declaration  for call counter. It allows to:

	Before call counter;
	Get calls

260.3. Add an interface declaration  for configurable messenger. It allows to:

	Set message

260.4. Add an interface declaration  for context script bean. It allows to:

	Get test bean;
	Get application context

260.5. Add an interface declaration  for messenger. It allows to:

	Get message

260.6. Add an object creator class for messenger scrambler. It allows to:

	Scramble pjp proceeding join point

260.7. Add an interface declaration  for script bean. It allows to:

	Get name;
	Set name;
	Get age;
	Set age

260.8. Add a class for script compilation exception. It allows to:

	Instantiate script compilation exception;
	Instantiate script compilation exception  with cause throwable;
	Instantiate script compilation exception  with script source;
	Instantiate script compilation exception  with script source, cause throwable and cause throwable;
	Get script source

260.9. Add an interface declaration  for script evaluator. It allows to:

	Evaluate script source;

260.10. Add an interface declaration  for script factory. It allows to:

	Get script source locator;
	Get script interfaces;
	Check if script factory requires config interface;
	Get scripted object;
	Get scripted object type;
	Check if script factory requires scripted object refresh

260.11. Add an interface declaration  for script source. It allows to:

	Get script  as string;
	Check if script source is modified;
	Handle suggested class name

260.12. Add an interface declaration  for test bean aware messenger. It allows to:

	Get test bean;
	Set test bean

261. Changes to package org.springframework.scripting.bsh:  

261.1. Add a class for bsh script evaluator. It allows to:

	Instantiate bsh script evaluator;
	Instantiate bsh script evaluator  with class loader;
	Set bean class loader;
	Evaluate script source;

261.2. Add a class for bsh script evaluator tests. It allows to:

	Handle test bsh script from string;
	Handle test bsh script from file;
	Handle test groovy script with arguments

261.3. Add a class for bsh script factory. It allows to:

	Instantiate bsh script factory;
	Instantiate bsh script factory  with script interfaces class;
	Set bean class loader;
	Get script source locator;
	Get script interfaces;
	Check if bsh script factory requires config interface;
	Get scripted object;
	Get scripted object type;
	Check if bsh script factory requires scripted object refresh;
	Convert bsh script factory to string

262. Changes to package org.springframework.scripting.config:  

262.1. Add an interface declaration  for i test bean. It allows to:

	Check if i test bean is initialized;
	Check if i test bean is destroyed;
	Get other bean

262.2. Add a class for lang namespace handler. It allows to:

	Handle init;
	Register script bean definition parser

262.3. Add a class for lang namespace utils. It allows to:

	Register script factory post processor  if necessary

262.4. Add a class for other test bean. It allows to:

	Get other bean;
	Check if other test bean is initialized;
	Check if other test bean is destroyed

262.5. Add a class for script bean definition parser. It allows to:

	Instantiate script bean definition parser;
	Parse internal;
	Resolve script source;
	Should generate id  as fallback

262.6. Add a class for scripting defaults parser. It allows to:

	Parse element

262.7. Add a class for scripting defaults tests. It allows to:

	Handle default refresh check delay;
	Handle default init method;
	Name scripting defaults tests as alias;
	Handle default destroy method;
	Handle default autowire;
	Handle default proxy target class

263. Changes to package org.springframework.scripting.groovy:  

263.1. Add a class for concrete messenger. It allows to:

	Get message;
	Set message

263.2. Add a class for groovy aspect integration tests. It allows to:

	Handle test java bean;
	Handle test groovy bean interface;
	Handle test groovy bean dynamic;
	Handle test groovy bean proxy target class;
	Close groovy aspect integration tests

263.3. Add a class for groovy aspect tests. It allows to:

	Handle manual groovy bean with unconditional pointcut;
	Handle manual groovy bean with static pointcut;
	Handle manual groovy bean with dynamic pointcut;
	Handle manual groovy bean with dynamic pointcut proxy target class;
	Handle test advice;

263.4. Add a class for groovy class loading tests. It allows to:

	Handle class loading

263.5. Add an interface declaration  for groovy object customizer. It allows to:

	Customize goo groovy object

263.6. Add a class for groovy script evaluator. It allows to:

	Instantiate groovy script evaluator;
	Instantiate groovy script evaluator  with class loader;
	Set compiler configuration;
	Get compiler configuration;
	Set compilation customizers;
	Set bean class loader;
	Evaluate script source;

263.7. Add a class for groovy script evaluator tests. It allows to:

	Handle test groovy script from string;
	Handle test groovy script from file;
	Handle test groovy script with arguments;
	Handle test groovy script with compiler configuration;
	Handle test groovy script with import customizer;
	Handle test groovy script from string using jsr 223;
	Handle test groovy script from file using jsr 223;
	Handle test groovy script with arguments using jsr 223

263.8. Add a class for log user advice. It allows to:

	Before log user advice;
	Process log user advice log user advice after throwing;
	Get count  before;
	Get count throws;
	Reset log user advice

263.9. Add a class for test exception. It allows to:

	Instantiate test exception

263.10. Add an interface declaration  for test service. It allows to:

	Say test service

263.11. Add a class for test service impl. It allows to:

	Say test service impl

264. Changes to package org.springframework.scripting.support:  

264.1. Add a class for refreshable script target source. It allows to:

	Instantiate refreshable script target source  with bean factory, script factory, script source and script source;
	Check if refreshable script target source requires refresh;
	Obtain fresh bean

264.2. Add a class for refreshable script target source tests. It allows to:

	Create refreshable script target source tests with null script source

264.3. Add a class for resource script source. It allows to:

	Instantiate resource script source  with encoded resource;
	Instantiate resource script source  with resource;
	Get resource;
	Set encoding;
	Get script  as string;
	Check if resource script source is modified;
	Retrieve last modified time;
	Handle suggested class name;
	Convert resource script source to string

264.4. Add a class for resource script source tests. It allows to:

	Check if resource script source tests does not propagate fatal exception on resource that can not be resolved to A file;
	Check if resource script source tests begins in modified state;
	Handle last modified works with resource that does not support file based reading;
	Handle last modified works with resource that does not support file based access at all

264.5. Add a class for script factory post processor. It allows to:

	Set default refresh check delay;
	Set default proxy target class;
	Set bean class loader;
	Set bean factory;
	Set resource loader;
	Get order;
	Predict bean type;
	Post process properties;
	Post process  before instantiation;
	Prepare script beans;
	Resolve refresh check delay;
	Resolve proxy target class;
	Create script factory bean definition;
	Get script source;
	Convert resource loader to script source;
	Create config interface;
	Create composite interface;
	Create scripted object bean definition;
	Create refreshable proxy;
	Destroy script factory post processor

264.6. Add a class for standard script eval exception. It allows to:

	Instantiate standard script eval exception  with script exception;
	Get script exception;
	Fill standard script eval exception in stack trace

264.7. Add a class for standard script evaluator. It allows to:

	Instantiate standard script evaluator;
	Instantiate standard script evaluator  with class loader;
	Instantiate standard script evaluator  with script engine manager;
	Set language;
	Set engine name;
	Set global bindings;
	Set bean class loader;
	Evaluate script source;
	Get script engine

264.8. Add a class for standard script factory. It allows to:

	Instantiate standard script factory;
	Instantiate standard script factory  with script interfaces class;
	Set bean class loader;
	Get script source locator;
	Get script interfaces;
	Check if standard script factory requires config interface;
	Get scripted object;
	Evaluate script;
	Retrieve script engine;
	Adapt script source to interfaces;
	Get scripted object type;
	Check if standard script factory requires scripted object refresh;
	Convert standard script factory to string

264.9. Add a class for standard script factory tests. It allows to:

	Handle test jsr 223 from tag with interface;
	Handle test refreshable jsr 223 from tag with interface;
	Handle test inline jsr 223 from tag with interface

264.10. Add a class for standard script utils. It allows to:

	Retrieve engine  by name;
	Get bindings

264.11. Add a class for static script source. It allows to:

	Instantiate static script source;
	Set script;
	Get script  as string;
	Check if static script source is modified;
	Handle suggested class name;
	Convert static script source to string

264.12. Add a class for static script source tests. It allows to:

	Create static script source tests with null script;
	Create static script source tests with empty script;
	Create static script source tests with whitespace only script;
	Check if static script source tests is modified is true by default;
	Getting script toggles is modified;
	Getting script  via to string does not toggle is modified;
	Check if static script source tests is modified toggled when different script is set;
	Check if static script source tests is modified not toggled when same script is set

264.13. Add a class for stub messenger. It allows to:

	Set message;
	Get message

265. Changes to package org.springframework.test.annotation:  

265.1. Add an interface declaration  for profile value source. It allows to:

	Get profile value source

265.2. Add a class for profile value utils. It allows to:

	Retrieve profile value source;
	Check if profile value utils is test enabled in this environment;

265.3. Add a class for system profile value source. It allows to:

	Get instance;
	Instantiate system profile value source;
	Get system profile value source

265.4. Add a class for test annotation utils. It allows to:

	Get timeout;
	Get repeat count

266. Changes to package org.springframework.test.context:  

266.1. Add an interface declaration  for active profiles resolver. It allows to:

	Resolve test class

266.2. Add an interface declaration  for bootstrap context. It allows to:

	Get test class;
	Get cache aware context loader delegate

266.3. Add a class for bootstrap test utils. It allows to:

	Instantiate bootstrap test utils;
	Build bootstrap context;
	Resolve test context bootstrapper

266.4. Add a class for bootstrap utils. It allows to:

	Create bootstrap context;
	Create cache aware context loader delegate;
	Resolve test context bootstrapper;
	Resolve explicit test context bootstrapper;
	Resolve default test context bootstrapper

266.5. Add an interface declaration  for cache aware context loader delegate. It allows to:

	Check if cache aware context loader delegate is context loaded;
	Load context;
	Close context

266.6. Add a class for context configuration attributes. It allows to:

	Instantiate context configuration attributes  with declaring class;
	Instantiate context configuration attributes  with declaring class, context configuration and context configuration;
	Instantiate context configuration attributes  with declaring class, annotation attributes and annotation attributes;
	Instantiate context configuration attributes  with declaring class, classes, initializers class, context loader class and context loader class;
	Get declaring class;
	Set classes;
	Get classes;
	Check if context configuration attributes has classes;
	Set locations;
	Get locations;
	Check if context configuration attributes has locations;
	Check if context configuration attributes has resources;
	Check if context configuration attributes is inherit locations;
	Get initializers;
	Check if context configuration attributes is inherit initializers;
	Get name;
	Get context loader class;
	Check if context configuration attributes equals;
	Hash code;
	Convert context configuration attributes to string

266.7. Add an interface declaration  for context customizer. It allows to:

	Customize context

266.8. Add an interface declaration  for context customizer factory. It allows to:

	Create context customizer

266.9. Add an interface declaration  for context loader. It allows to:

	Get process locations;
	Load context

266.10. Add a class for merged context configuration. It allows to:

	Instantiate merged context configuration  with test class, classes, context loader and context loader;
	Instantiate merged context configuration  with test class, classes, context initializer classes set, context loader and context loader;
	Instantiate merged context configuration  with test class, classes, context initializer classes set, context loader, cache aware context loader delegate, parent merged context configuration and parent merged context configuration;
	Instantiate merged context configuration  with merged context configuration;
	Instantiate merged context configuration  with test class, classes, context initializer classes set, context customizers set, context loader, cache aware context loader delegate, parent merged context configuration and parent merged context configuration;
	Get test class;
	Get locations;
	Get classes;
	Check if merged context configuration has locations;
	Check if merged context configuration has classes;
	Check if merged context configuration has resources;
	Get context initializer classes;
	Get active profiles;
	Get property source locations;
	Get property source properties;
	Get context customizers;
	Get context loader;
	Get parent;
	Get parent application context;
	Check if merged context configuration equals;
	Hash code;
	Convert merged context configuration to string;
	Get process strings;
	Get process classes;
	Get process context initializer classes;
	Get process context customizers;
	Process active profiles;
	Handle null safe class name

266.11. Add an interface declaration  for smart context loader. It allows to:

	Handle process context configuration;
	Load context

266.12. Add an interface declaration  for test context. It allows to:

	Check if test context has application context;
	Get application context;
	Publish event;
	Get test class;
	Get test instance;
	Get test method;
	Get test exception;
	Handle mark application context dirty;
	Update state

266.13. Add an interface declaration  for test context bootstrapper. It allows to:

	Set bootstrap context;
	Get bootstrap context;
	Build test context;
	Build merged context configuration;
	Get test execution listeners

266.14. Add a class for test context manager. It allows to:

	Get;
	Instantiate test context manager  with test class;
	Instantiate test context manager  with test context bootstrapper;
	Get test context;
	Register test execution listeners;
	Get test execution listeners;
	Get reversed test execution listeners;
	Process test context manager test context manager before test class;
	Prepare test instance;
	Process test context manager test context manager before test method;
	Process test context manager test context manager before test execution;
	Process test context manager test context manager after test execution;
	Process test context manager test context manager after test method;
	Process test context manager test context manager after test class;
	Prepare test method for before callback;
	Prepare test method for after callback;
	Handle ex throwable before exception;
	Log exception;
	Copy test context

266.15. Add a class for test context test utils. It allows to:

	Build test context;

266.16. Add an interface declaration  for test execution listener. It allows to:

	Process test execution listener test execution listener before test class;
	Prepare test instance;
	Process test execution listener test execution listener before test method;
	Process test execution listener test execution listener before test execution;
	Process test execution listener test execution listener after test execution;
	Process test execution listener test execution listener after test method;
	Process test execution listener test execution listener after test class

267. Changes to package org.springframework.test.context.cache:  

267.1. Add an interface declaration  for context cache. It allows to:

	Check if context cache contains;
	Get key merged context configuration;
	Put key merged context configuration;
	Remove key merged context configuration;
	Get size;
	Get parent context count;
	Get hit count;
	Get miss count;
	Reset context cache;
	Handle clear;
	Handle clear statistics;
	Log statistics

267.2. Add a class for context cache test utils. It allows to:

	Reset context cache;
	Assert context cache statistics;

267.3. Add a class for context cache utils. It allows to:

	Retrieve max cache size

267.4. Add a class for context cache utils tests. It allows to:

	Handle clear properties;
	Retrieve max cache size  from default;
	Retrieve max cache size  from bogus system property;
	Retrieve max cache size  from bogus spring property;
	Retrieve max cache size  from decimal spring property;
	Retrieve max cache size  from system property;
	Retrieve max cache size  from system property containing whitespace;
	Retrieve max cache size  from spring property;
	Assert default value

267.5. Add a class for default cache aware context loader delegate. It allows to:

	Instantiate default cache aware context loader delegate;
	Instantiate default cache aware context loader delegate  with context cache;
	Get context cache;
	Load context internal;
	Check if default cache aware context loader delegate is context loaded;
	Load context;
	Close context

267.6. Add a class for spring runner context cache tests. It allows to:

	Verify initial cache state;
	Verify final cache state;
	Handle dirty context;
	Verify context dirty;
	Verify context  not dirty

268. Changes to package org.springframework.test.context.configuration:  

268.1. Add a class for context configuration with properties extending properties and inherited loader tests. It allows to:

	Verify extended annotation autowired fields

268.2. Add a class for context configuration with properties extending properties tests. It allows to:

	Verify extended annotation autowired fields

269. Changes to package org.springframework.test.context.configuration.interfaces:  

269.1. Add an interface declaration  for active profiles test interface

269.2. Add a class for bootstrap with interface tests. It allows to:

	Get injected bean

269.3. Add a class for context configuration interface tests. It allows to:

	Profile context configuration interface tests from test interface

269.4. Add a class for context hierarchy interface tests. It allows to:

	Load context hierarchy

269.5. Add an interface declaration  for context hierarchy test interface

269.6. Add an interface declaration  for dirties context test interface

269.7. Add a class for sql config interface tests. It allows to:

	Handle method level scripts;
	Assert num users

269.8. Add an interface declaration  for sql config test interface

269.9. Add an interface declaration  for test property source test interface

269.10. Add a class for web app configuration interface tests. It allows to:

	Handle wac loaded

270. Changes to package org.springframework.test.context.env:  

270.1. Add a class for extended default properties file detection test property source tests. It allows to:

	Verify properties are available  in environment

270.2. Add a class for inherited relative path properties file test property source tests

270.3. Add a class for merged properties files overridden by inlined properties test property source tests. It allows to:

	Verify properties are available  in environment;
	Verify extended properties are available  in environment

270.4. Add a class for merged properties files test property source tests. It allows to:

	Verify extended properties are available  in environment

271. Changes to package org.springframework.test.context.env.subpackage:  

271.1. Add a class for subpackage inherited relative path properties file test property source tests

272. Changes to package org.springframework.test.context.groovy:  

272.1. Add a class for absolute path groovy spring context tests

272.2. Add a class for default script detection groovy spring context tests. It allows to:

	Verify annotation autowired fields

272.3. Add a class for default script detection xml supersedes groovy spring context tests. It allows to:

	Handle foo

272.4. Add a class for groovy control group tests. It allows to:

	Verify script using generic groovy application context

272.5. Add a class for groovy spring context tests. It allows to:

	Get set employee;
	Set bar;
	Set bean name;
	Handle after properties set;
	Verify bean name set;
	Verify bean initialized;
	Verify annotation autowired fields;
	Verify annotation autowired methods;
	Verify resource annotation wired fields;
	Verify resource annotation wired methods

272.6. Add a class for mixed xml and groovy spring context tests. It allows to:

	Verify annotation autowired fields

272.7. Add a class for relative path groovy spring context tests

273. Changes to package org.springframework.test.context.hierarchies.meta:  

273.1. Add a class for dev config. It allows to:

	Get foo

Add a local a class for production config. It allows to:

	Get foo

273.2. Add a class for meta hierarchy level one tests. It allows to:

	Handle foo

274. Changes to package org.springframework.test.context.hierarchies.standard:  

274.1. Add a class for test hierarchy level two with single level context hierarchy and mixed config types tests. It allows to:

	Load context hierarchy

275. Changes to package org.springframework.test.context.hierarchies.web:  

275.1. Add a class for dispatcher wac root wac ear tests. It allows to:

	Verify ear config;
	Verify root wac config;
	Verify dispatcher wac config

276. Changes to package org.springframework.test.context.jdbc:  

276.1. Add a class for composed annotation sql scripts tests. It allows to:

	Get composed sql annotation

276.2. Add a class for custom script syntax sql scripts tests. It allows to:

	Handle method level scripts;
	Assert num users

276.3. Add a class for default script detection sql scripts tests. It allows to:

	Handle class level;
	Handle method level;
	Assert num users

276.4. Add an object creator class for empty database config. It allows to:

	Get transaction manager;
	Get data source

276.5. Add a class for global custom script syntax sql scripts tests. It allows to:

	Handle method level scripts;
	Assert num users

276.6. Add a class for merged sql config. It allows to:

	Instantiate merged sql config  with local sql config, test class and test class;
	Get data source;
	Get transaction manager;
	Get transaction mode;
	Encoding merged sql config;
	Get separator;
	Get comment prefix;
	Get block comment start delimiter;
	Get block comment end delimiter;
	Get error mode;
	Convert merged sql config to string;
	Get enum;
	Get string

276.7. Add a class for meta annotation sql scripts tests. It allows to:

	Handle meta sql annotation;
	Handle meta sql group annotation;
	Assert num users

276.8. Add a class for non transactional sql scripts tests. It allows to:

	Get set data source;
	Handle test 01 class level scripts;
	Handle test 02 method level scripts;
	Assert num users

276.9. Add an object creator class for populated schema database config. It allows to:

	Get transaction manager;
	Get data source;
	Handle jdbc template

276.10. Add a class for populated schema transactional sql scripts tests. It allows to:

	Verify pre and post transaction database state;
	Handle method level scripts;
	Assert num users

276.11. Add a class for repeatable sql annotation sql scripts tests. It allows to:

	Handle test 01 class level scripts;
	Handle test 02 method level scripts;
	Assert num users

276.12. Add a class for sql scripts test execution listener. It allows to:

	Get order;
	Process sql scripts test execution listener sql scripts test execution listener before test method;
	Process sql scripts test execution listener sql scripts test execution listener after test method;
	Execute sql scripts;
	Get data source  from transaction manager;
	Get scripts;
	Detect default script

276.13. Add a class for transactional after test method sql scripts tests. It allows to:

	Process transactional after test method sql scripts tests transactional after test method sql scripts tests after transaction;
	Handle test 01;
	Handle test 02;
	Assert num users

276.14. Add a class for transactional inlined statements sql scripts tests. It allows to:

	Get set data source;
	Handle test 01 class level scripts;
	Handle test 02 method level scripts;
	Count rows  in table;
	Assert num users

276.15. Add a class for transactional sql scripts tests. It allows to:

	Get set data source;
	Handle test 01 class level scripts;
	Handle test 02 method level scripts;
	Count rows  in table;
	Assert num users

277. Changes to package org.springframework.test.context.junit4:  

277.1. Add a class for absolute path spring J unit 4 class runner app ctx tests

277.2. Add a class for abstract J unit 4 spring context tests. It allows to:

	Set application context

277.3. Add a class for abstract transactional J unit 4 spring context tests. It allows to:

	Get set data source;
	Set sql script encoding;
	Count rows  in table;
	Count rows  in table where;
	Delete abstract transactional J unit 4 spring context tests from tables;
	Delete abstract transactional J unit 4 spring context tests from table where;
	Drop tables;
	Execute sql script

277.4. Add a class for abstract transactional spring runner tests. It allows to:

	Handle clear person table;
	Count rows  in person table;
	Add person;
	Delete person

277.5. Add a class for before and after transaction annotation tests. It allows to:

	Get set data source;
	Process before and after transaction annotation tests before and after transaction annotation tests before class;
	Process before and after transaction annotation tests before and after transaction annotation tests after class;
	Process before and after transaction annotation tests before and after transaction annotation tests before transaction;
	Process before and after transaction annotation tests before and after transaction annotation tests after transaction;
	Before before and after transaction annotation tests;
	Assert should be  in transaction;
	Process before and after transaction annotation tests before and after transaction annotation tests after;
	Handle transactional method 1;
	Handle transactional method 2;
	Non transactional method

277.6. Add a class for class level transactional spring runner tests. It allows to:

	Get set data source;
	Verify final test data;
	Verify initial test data;
	Modify test data  within transaction;
	Modify test data  without transaction

277.7. Add a class for class path resource spring J unit 4 class runner app ctx tests

277.8. Add a class for concrete transactional J unit 4 spring context tests. It allows to:

	Get set employee;
	Set bar;
	Set bean name;
	Handle after properties set;
	Set concrete transactional J unit 4 spring context tests;
	Tear concrete transactional J unit 4 spring context tests;
	Process concrete transactional J unit 4 spring context tests concrete transactional J unit 4 spring context tests before transaction;
	Process concrete transactional J unit 4 spring context tests concrete transactional J unit 4 spring context tests after transaction;
	Verify bean name set;
	Verify application context;
	Verify bean initialized;
	Verify annotation autowired fields;
	Verify annotation autowired methods;
	Verify resource annotation wired fields;
	Verify resource annotation wired methods;
	Modify test data  within transaction;
	Add person;
	Delete person;
	Count rows  in person table

277.9. Add a class for default rollback false rollback annotation transactional tests. It allows to:

	Get set data source;
	Verify initial test data;
	Modify test data  within transaction;
	Verify final test data

277.10. Add a class for default rollback true rollback annotation transactional tests. It allows to:

	Get set data source;
	Verify initial test data;
	Modify test data  within transaction;
	Verify final test data

277.11. Add an object creator class for embedded person database tests config. It allows to:

	Tx mgr;
	Get data source

277.12. Add a class for enabled and ignored spring runner tests. It allows to:

	Set profile value;
	Verify num tests executed;
	Handle test if profile value disabled;
	Handle test if profile value enabled via single value;
	Handle test if profile value enabled via multiple values;
	Handle test if profile value not configured;
	Handle test J unit ignore annotation

277.13. Add a class for inherited config spring J unit 4 class runner app ctx tests

277.14. Add a class for j unit testing utils. It allows to:

	Run tests and assert counters;

277.15. Add a class for method level transactional spring runner tests. It allows to:

	Get set data source;
	Verify final test data;
	Verify initial test data;
	Modify test data  within transaction;
	Modify test data  without transaction

277.16. Add a class for multiple resources spring J unit 4 class runner app ctx tests

277.17. Add a class for parameterized dependency injection tests. It allows to:

	Get employee data;
	Process parameterized dependency injection tests parameterized dependency injection tests before class;
	Inject dependencies;
	Verify pet and employee;
	Verify num parameterized runs

277.18. Add a class for properties based spring J unit 4 class runner app ctx tests. It allows to:

	Verify annotation autowired fields

277.19. Add a class for relative path spring J unit 4 class runner app ctx tests

277.20. Add a class for rollback override default rollback false rollback annotation transactional tests. It allows to:

	Get set data source;
	Verify initial test data;
	Modify test data  within transaction;
	Verify final test data

277.21. Add a class for rollback override default rollback false transactional tests. It allows to:

	Get set data source;
	Verify initial test data;
	Modify test data  within transaction;
	Verify final test data

277.22. Add a class for rollback override default rollback true rollback annotation transactional tests. It allows to:

	Get set data source;
	Verify initial test data;
	Modify test data  within transaction;
	Verify final test data

277.23. Add a class for rollback override default rollback true transactional tests. It allows to:

	Get set data source;
	Verify initial test data;
	Modify test data  within transaction;
	Verify final test data

277.24. Add a class for spring J unit 47 class runner rule tests. It allows to:

	Handle test A;
	Handle test B

277.25. Add a class for spring J unit 4 class runner. It allows to:

	Ensure spring rules are  not present;
	Instantiate spring J unit 4 class runner  with clazz class;
	Create test context manager;
	Get test context manager;
	Get description;
	Run run notifier;
	Process spring J unit 4 class runner spring J unit 4 class runner with before classes;
	Process spring J unit 4 class runner spring J unit 4 class runner with after classes;
	Create test;
	Run child;
	Get method block;
	Run reflective call;
	Process spring J unit 4 class runner spring J unit 4 class runner with rules reflectively;
	Check if spring J unit 4 class runner is test method ignored;
	Possibly expecting exceptions;
	Get expected exception;
	Process spring J unit 4 class runner spring J unit 4 class runner with potential timeout;
	Get J unit timeout;
	Get spring timeout;
	Process spring J unit 4 class runner spring J unit 4 class runner with before test execution callbacks;
	Process spring J unit 4 class runner spring J unit 4 class runner with after test execution callbacks;
	Process spring J unit 4 class runner spring J unit 4 class runner with befores;
	Process spring J unit 4 class runner spring J unit 4 class runner with afters;
	Process spring J unit 4 class runner spring J unit 4 class runner with potential repeat

277.26. Add a class for spring J unit 4 class runner app ctx tests. It allows to:

	Get set employee;
	Set bar;
	Set literal parameter value;
	Set spel parameter value;
	Set bean name;
	Set application context;
	Handle after properties set;
	Verify bean name set;
	Verify application context set;
	Verify bean initialized;
	Verify annotation autowired and injected fields;
	Verify annotation autowired methods;
	Verify autowired  at value fields;
	Verify autowired  at value methods;
	Verify resource annotation injected fields;
	Verify resource annotation injected methods

277.27. Add a class for spring J unit 4 class runner tests. It allows to:

	Check that exceptions are  not silently swallowed;
	Create test context manager;
	Prepare test instance;
	Get spring timeout  via meta annotation;
	Get spring timeout  via meta annotation with override;
	Handle spring timeout with meta annotation;
	Handle spring timeout with meta annotation and override

277.28. Add a class for spring J unit 4 test suite

277.29. Add a class for spring runner. It allows to:

	Instantiate spring runner  with clazz class

277.30. Add a class for standard J unit 4 features spring runner tests

277.31. Add a class for standard J unit 4 features tests. It allows to:

	Handle increment static before counter;
	Handle always fails but should be ignored;
	Succeeds succeeds;
	Expecting an index  out of bounds exception;
	Get failed assumption should preclude imminent failure;
	Handle increment before counter;
	No op should  not time out;
	Verify standard J unit 4 features tests before annotation;
	Verify standard J unit 4 features tests before class annotation

277.32. Add a class for timed transactional spring runner tests. It allows to:

	Handle transactional with spring timeout;
	Handle transactional with J unit timeout;
	Not transactional  with spring timeout;
	Not transactional  with J unit timeout

277.33. Add a class for tracking run listener. It allows to:

	Get test failure count;
	Get test started count;
	Get test finished count;
	Get test assumption failure count;
	Get test ignored count;
	Handle test failure;
	Handle test started;
	Handle test finished;
	Handle test assumption failure;
	Handle test ignored

278. Changes to package org.springframework.test.context.junit4.aci:  

278.1. Add a class for aci test suite

278.2. Add a class for dev profile initializer. It allows to:

	Initialize generic application context

278.3. Add a class for foo bar alias initializer. It allows to:

	Initialize generic application context

279. Changes to package org.springframework.test.context.junit4.aci.annotation:  

279.1. Add a class for bar config. It allows to:

	Get bar

279.2. Add a class for dev profile config. It allows to:

	Get baz

279.3. Add a class for foo config. It allows to:

	Get foo

279.4. Add a class for global config. It allows to:

	Get foo;
	Get baz

279.5. Add a class for merged initializers annotation config tests. It allows to:

	Handle active beans

279.6. Add a class for multiple initializers annotation config tests. It allows to:

	Handle active beans

279.7. Add a class for overridden initializers annotation config tests. It allows to:

	Handle active beans

279.8. Add a class for single initializer annotation config tests. It allows to:

	Handle active beans

280. Changes to package org.springframework.test.context.junit4.aci.xml:  

280.1. Add a class for multiple initializers xml config tests. It allows to:

	Handle active beans

281. Changes to package org.springframework.test.context.junit4.annotation:  

281.1. Add a class for annotation config spring J unit 4 class runner app ctx tests

281.2. Add a class for annotation config test suite

281.3. Add a class for bean overriding explicit config classes inherited tests. It allows to:

	Verify employee set  from base context config

281.4. Add a class for default loader bean overriding explicit config classes inherited tests. It allows to:

	Verify employee set  from base context config

281.5. Add a class for default loader explicit config classes base tests. It allows to:

	Verify employee set  from base context config

281.6. Add a class for default loader explicit config classes inherited tests. It allows to:

	Verify pet set  from extended context config

281.7. Add a class for explicit config classes base tests. It allows to:

	Verify employee set  from base context config

281.8. Add a class for explicit config classes inherited tests. It allows to:

	Verify pet set  from extended context config

281.9. Add a class for pojo and string config. It allows to:

	Get employee;
	Get pet;
	Get foo;
	Get bar;
	Quux pojo and string config

282. Changes to package org.springframework.test.context.junit4.annotation.meta:  

282.1. Add a class for config classes and profile resolver with custom defaults meta config tests. It allows to:

	Handle foo

282.2. Add a class for config classes and profile resolver with custom defaults meta config with overrides tests. It allows to:

	Handle foo

Add a local a class for local dev config. It allows to:

	Get foo

Add a local a class for dev resolver. It allows to:

	Resolve test class

282.3. Add a class for config classes and profiles with custom defaults meta config tests. It allows to:

	Handle foo

282.4. Add a class for config classes and profiles with custom defaults meta config with overrides tests. It allows to:

	Verify employee;
	Verify pet;
	Verify foo

282.5. Add a class for meta meta config defaults tests. It allows to:

	Handle foo

283. Changes to package org.springframework.test.context.junit4.hybrid:  

283.1. Add a class for hybrid context loader. It allows to:

	Validate merged context configuration;
	Handle process context configuration;
	Load bean definitions;
	Create bean definition reader;
	Get resource suffix

284. Changes to package org.springframework.test.context.junit4.orm:  

284.1. Add a class for hibernate session flushing tests. It allows to:

	Handle setup;
	Find sam;
	Find sam  with read only session;
	Save juergen  with drivers license;
	Save juergen  with null drivers license;
	Update sam  with null drivers license without session flush;
	Update sam  with null drivers license with session flush;
	Update sam  with null drivers license

285. Changes to package org.springframework.test.context.junit4.orm.domain:  

285.1. Add a class for drivers license. It allows to:

	Instantiate drivers license;
	Get id;
	Set id;
	Get number;
	Set number

285.2. Add a class for person. It allows to:

	Instantiate person;
	Instantiate person  with drivers license;
	Get id;
	Set id;
	Get name;
	Set name;
	Get drivers license;
	Set drivers license

286. Changes to package org.springframework.test.context.junit4.orm.repository:  

286.1. Add an interface declaration  for person repository. It allows to:

	Find person repository by name;
	Save person

287. Changes to package org.springframework.test.context.junit4.orm.repository.hibernate:  

287.1. Add a class for hibernate person repository. It allows to:

	Instantiate hibernate person repository  with session factory;
	Save person;
	Find hibernate person repository by name

288. Changes to package org.springframework.test.context.junit4.orm.service:  

288.1. Add an interface declaration  for person service. It allows to:

	Find person service by name;
	Save person

289. Changes to package org.springframework.test.context.junit4.orm.service.impl:  

289.1. Add a class for standard person service. It allows to:

	Instantiate standard person service  with person repository;
	Find standard person service by name;
	Save person

290. Changes to package org.springframework.test.context.junit4.profile.annotation:  

290.1. Add a class for default profile annotation config tests. It allows to:

	Handle pet;
	Handle employee

290.2. Add an object creator class for default profile config. It allows to:

	Get pet

290.3. Add a class for dev profile annotation config tests. It allows to:

	Handle employee

290.4. Add a class for dev profile config. It allows to:

	Get employee

290.5. Add a class for dev profile resolver annotation config tests. It allows to:

	Resolve test class

290.6. Add a class for profile annotation config test suite

291. Changes to package org.springframework.test.context.junit4.profile.importresource:  

291.1. Add a class for default profile annotation config tests. It allows to:

	Handle pet;
	Handle employee

291.2. Add an object creator class for default profile config. It allows to:

	Get pet

291.3. Add a class for dev profile annotation config tests. It allows to:

	Handle employee

291.4. Add a class for dev profile resolver annotation config tests. It allows to:

	Resolve test class

292. Changes to package org.springframework.test.context.junit4.profile.resolver:  

292.1. Add a class for class name active profiles resolver. It allows to:

	Resolve test class

293. Changes to package org.springframework.test.context.junit4.profile.xml:  

293.1. Add a class for default profile xml config tests. It allows to:

	Handle pet;
	Handle employee

293.2. Add a class for dev profile resolver xml config tests. It allows to:

	Resolve test class

293.3. Add a class for dev profile xml config tests. It allows to:

	Handle employee

293.4. Add a class for profile xml config test suite

294. Changes to package org.springframework.test.context.junit4.rules:  

294.1. Add a class for basic annotation config wac spring rule tests

294.2. Add a class for before and after transaction annotation spring rule tests

294.3. Add a class for class level disabled spring rule tests

294.4. Add a class for enabled and ignored spring rule tests

294.5. Add a class for parameterized spring rule tests. It allows to:

	Get employee data;
	Process parameterized spring rule tests parameterized spring rule tests before class;
	Verify pet and employee;
	Verify num parameterized runs

294.6. Add an object creator class for spring method rule. It allows to:

	Apply base statement;
	Process spring method rule spring method rule with before test method callbacks;
	Process spring method rule spring method rule with after test method callbacks;
	Process spring method rule spring method rule with test instance preparation;
	Process spring method rule spring method rule with potential repeat;
	Process spring method rule spring method rule with potential timeout;
	Process spring method rule spring method rule with profile value check

294.7. Add a class for timed transactional spring rule tests. It allows to:

	Handle transactional with J unit timeout;
	Handle transactional with J unit rule based timeout

294.8. Add a class for transactional sql scripts spring rule tests. It allows to:

	Handle test 01 class level scripts;
	Handle test 02 method level scripts

295. Changes to package org.springframework.test.context.junit4.spr3896:  

295.1. Add a class for bean overriding default locations inherited tests. It allows to:

	Verify employee set  from base context config

295.2. Add a class for bean overriding explicit locations inherited tests. It allows to:

	Verify employee set  from base context config

295.3. Add a class for default locations base tests. It allows to:

	Verify employee set  from base context config

295.4. Add a class for default locations inherited tests. It allows to:

	Verify pet set  from extended context config

295.5. Add a class for explicit locations base tests. It allows to:

	Verify employee set  from base context config

295.6. Add a class for explicit locations inherited tests. It allows to:

	Verify pet set  from extended context config

295.7. Add a class for spr 3896 suite tests

296. Changes to package org.springframework.test.context.junit4.spr4868:  

296.1. Add a class for lifecycle bean. It allows to:

	Handle init;
	Destroy lifecycle bean

297. Changes to package org.springframework.test.context.junit4.spr6128:  

297.1. Add a class for autowired qualifier tests. It allows to:

	Handle test

298. Changes to package org.springframework.test.context.junit4.spr8849:  

298.1. Add a class for spr 8849 tests

299. Changes to package org.springframework.test.context.junit4.spr9051:  

299.1. Add a class for abstract transactional annotated config class tests. It allows to:

	Set transaction manager;
	Get set data source;
	Count rows  in table;
	Create person;
	Delete person;
	Assert num rows  in person table;
	Assert add person;
	Autowiring abstract transactional annotated config class tests from config class;
	Process abstract transactional annotated config class tests abstract transactional annotated config class tests before transaction;
	Set abstract transactional annotated config class tests;
	Modify test data  within transaction;
	Tear abstract transactional annotated config class tests;
	Process abstract transactional annotated config class tests abstract transactional annotated config class tests after transaction

299.2. Add a class for lifecycle bean. It allows to:

	Instantiate lifecycle bean;
	Get name;
	Handle init;
	Check if lifecycle bean is initialized

300. Changes to package org.springframework.test.context.junit4.spr9799:  

300.1. Add a class for spr 9799 xml config tests. It allows to:

	Handle application context loads

301. Changes to package org.springframework.test.context.junit4.statements:  

301.1. Add a class for profile value checker. It allows to:

	Instantiate profile value checker  with next statement, test class, test method and test method;
	Evaluate profile value checker

301.2. Add a class for run after test class callbacks. It allows to:

	Instantiate run after test class callbacks  with next statement, test context manager and test context manager;
	Evaluate run after test class callbacks

301.3. Add a class for run after test method callbacks. It allows to:

	Instantiate run after test method callbacks  with next statement, test method, test context manager and test context manager;
	Evaluate run after test method callbacks

301.4. Add a class for run before test class callbacks. It allows to:

	Instantiate run before test class callbacks  with next statement, test context manager and test context manager;
	Evaluate run before test class callbacks

301.5. Add a class for run before test method callbacks. It allows to:

	Instantiate run before test method callbacks  with next statement, test method, test context manager and test context manager;
	Evaluate run before test method callbacks

301.6. Add a class for run prepare test instance callbacks. It allows to:

	Instantiate run prepare test instance callbacks  with next statement, test context manager and test context manager;
	Evaluate run prepare test instance callbacks

301.7. Add a class for spring fail on timeout. It allows to:

	Instantiate spring fail on timeout  with next statement, test method and test method;
	Instantiate spring fail on timeout  with next statement;
	Evaluate spring fail on timeout

301.8. Add a class for spring repeat. It allows to:

	Instantiate spring repeat  with next statement, test method and test method;
	Evaluate spring repeat

302. Changes to package org.springframework.test.context.support:  

302.1. Add a class for abstract context loader. It allows to:

	Handle process context configuration;
	Prepare context;
	Invoke application context initializers;
	Customize context;
	Get process locations;
	Generate default locations;
	Modify locations;
	Check if abstract context loader is generate default locations;
	Get resource suffixes;
	Get resource suffix

302.2. Add a class for abstract delegating smart context loader. It allows to:

	Get xml loader;
	Get annotation config loader;
	Get process locations;
	Load context;
	Handle process context configuration;
	Delegate processing;
	Loading smart context loader;
	Handle supports;
	Name smart context loader

302.3. Add a class for abstract dirties context test execution listener. It allows to:

	Get order;
	Handle dirty context;
	Process abstract dirties context test execution listener abstract dirties context test execution listener before or after test method;
	Process abstract dirties context test execution listener abstract dirties context test execution listener before or after test class

302.4. Add a class for abstract generic context loader. It allows to:

	Load context;
	Validate merged context configuration;
	Prepare context;
	Customize bean factory;
	Load bean definitions;
	Create bean definition reader;
	Customize context

302.5. Add a class for abstract test context bootstrapper. It allows to:

	Set bootstrap context;
	Get bootstrap context;
	Build test context;
	Get test execution listeners;
	Handle instantiate listeners;
	Get default test execution listener classes;
	Get default test execution listener class names;
	Build merged context configuration;
	Build default merged context configuration;
	Get context customizers;
	Get context customizer factories;
	Resolve context loader;
	Resolve explicit context loader class;
	Get cache aware context loader delegate;
	Get default context loader class;
	Get process merged context configuration;
	Are all empty

302.6. Add a class for abstract test execution listener. It allows to:

	Get order

302.7. Add a class for active profiles utils. It allows to:

	Resolve active profiles

302.8. Add a class for annotation config context loader. It allows to:

	Handle process context configuration;
	Detect default configuration classes;
	Modify locations;
	Generate default locations;
	Get resource suffix;
	Validate merged context configuration;
	Load bean definitions;
	Create bean definition reader

302.9. Add a class for annotation config context loader tests. It allows to:

	Handle config must not contain locations;
	Detect default configuration classes  for annotated inner class;
	Detect default configuration classes  for multiple annotated inner classes;
	Detect default configuration classes  for non annotated inner class;
	Detect default configuration classes  for final annotated inner class;
	Detect default configuration classes  for private annotated inner class;
	Detect default configuration classes  for non static annotated inner class

302.10. Add a class for annotation config context loader utils. It allows to:

	Detect default configuration classes;
	Check if annotation config context loader utils is default configuration class candidate;
	Check if annotation config context loader utils is static non private and non final

302.11. Add a class for application context initializer utils. It allows to:

	Resolve initializer classes

302.12. Add a class for context loader utils. It allows to:

	Resolve context hierarchy attributes;
	Build context hierarchy map;
	Resolve context configuration attributes;
	Convert context config  to config attributes and add to list

302.13. Add a class for customized generic xml context loader tests. It allows to:

	Customize context;

302.14. Add a class for default active profiles resolver. It allows to:

	Resolve test class

302.15. Add a class for default bootstrap context. It allows to:

	Instantiate default bootstrap context  with test class, cache aware context loader delegate and cache aware context loader delegate;
	Get test class;
	Get cache aware context loader delegate;
	Convert default bootstrap context to string

302.16. Add a class for default test context. It allows to:

	Instantiate default test context  with default test context;
	Instantiate default test context  with test class, merged context configuration, cache aware context loader delegate and cache aware context loader delegate;
	Check if default test context has application context;
	Get application context;
	Handle mark application context dirty;
	Get test class;
	Get test instance;
	Get test method;
	Get test exception;
	Update state;
	Set attribute;
	Get attribute;
	Remove attribute;
	Check if default test context has attribute;
	Attribute names;
	Convert default test context to string

302.17. Add a class for default test context bootstrapper. It allows to:

	Get default context loader class

302.18. Add a class for delegating smart context loader. It allows to:

	Instantiate delegating smart context loader;
	Get xml loader;
	Get annotation config loader

302.19. Add a class for dependency injection test execution listener. It allows to:

	Get order;
	Prepare test instance;
	Process dependency injection test execution listener dependency injection test execution listener before test method;
	Inject dependencies

302.20. Add a class for dirties context before modes test execution listener. It allows to:

	Get order;
	Process dirties context before modes test execution listener dirties context before modes test execution listener before test class;
	Process dirties context before modes test execution listener dirties context before modes test execution listener before test method

302.21. Add a class for dirties context test execution listener. It allows to:

	Get order;
	Process dirties context test execution listener dirties context test execution listener after test method;
	Process dirties context test execution listener dirties context test execution listener after test class

302.22. Add a class for generic groovy xml context loader. It allows to:

	Load bean definitions;
	Get resource suffixes;
	Get resource suffix

302.23. Add a class for generic properties context loader. It allows to:

	Create bean definition reader;
	Get resource suffix;
	Validate merged context configuration

302.24. Add a class for generic properties context loader tests. It allows to:

	Handle config must not contain annotated classes

302.25. Add a class for generic xml context loader. It allows to:

	Create bean definition reader;
	Get resource suffix;
	Validate merged context configuration

302.26. Add a class for generic xml context loader resource locations tests. It allows to:

	Get context configuration locations data;
	Instantiate generic xml context loader resource locations tests;
	Assert context configuration locations

302.27. Add a class for generic xml context loader tests. It allows to:

	Handle config must not contain annotated classes

302.28. Add a class for merged test property sources. It allows to:

	Instantiate merged test property sources;
	Get locations;
	Get properties

302.29. Add a class for test property source attributes. It allows to:

	Instantiate test property source attributes  with declaring class, test property source and test property source;
	Instantiate test property source attributes  with declaring class;
	Get declaring class;
	Get locations;
	Check if test property source attributes is inherit locations;
	Get properties;
	Check if test property source attributes is inherit properties;
	Convert test property source attributes to string;
	Detect default properties file

302.30. Add a class for test property source utils. It allows to:

	Build merged test property sources;
	Resolve test property source attributes;
	Merge locations;
	Merge properties;
	Add properties files  to environment;
	Add inlined properties  to environment;
	Convert inlined properties  to map

303. Changes to package org.springframework.test.context.testng:  

303.1. Add a class for abstract test NG spring context tests. It allows to:

	Instantiate abstract test NG spring context tests;
	Set application context;
	Handle spring test context before test class;
	Handle spring test context prepare test instance;
	Handle spring test context before test method;
	Run I hook call back;
	Handle spring test context after test method;
	Handle spring test context after test class;
	Get test result exception;
	Throw throwable as unchecked exception;
	Throw  as throwable

303.2. Add a class for abstract transactional test NG spring context tests. It allows to:

	Get set data source;
	Set sql script encoding;
	Count rows  in table;
	Count rows  in table where;
	Delete abstract transactional test NG spring context tests from tables;
	Delete abstract transactional test NG spring context tests from table where;
	Drop tables;
	Execute sql script

303.3. Add a class for concrete transactional test NG spring context tests. It allows to:

	Get set employee;
	Set bar;
	Set bean name;
	Handle after properties set;
	Process concrete transactional test NG spring context tests concrete transactional test NG spring context tests before class;
	Process concrete transactional test NG spring context tests concrete transactional test NG spring context tests after class;
	Set concrete transactional test NG spring context tests;
	Tear concrete transactional test NG spring context tests;
	Process concrete transactional test NG spring context tests concrete transactional test NG spring context tests before transaction;
	Process concrete transactional test NG spring context tests concrete transactional test NG spring context tests after transaction;
	Verify bean name set;
	Verify application context set;
	Verify bean initialized;
	Verify annotation autowired fields;
	Verify annotation autowired methods;
	Verify resource annotation injected fields;
	Verify resource annotation injected methods;
	Modify test data  within transaction;
	Create person;
	Delete person;
	Assert num rows  in person table;
	Assert add person

303.4. Add a class for dirties context transactional test NG spring context tests. It allows to:

	Perform common assertions;
	Handle dirty context;
	Verify context was dirtied;
	Verify context was  not dirtied

303.5. Add a class for timed transactional test NG spring context tests. It allows to:

	Handle test without timeout;
	Handle test with timeout

303.6. Add a class for tracking test NG test listener. It allows to:

	Process tracking test NG test listener tracking test NG test listener on finish;
	Process tracking test NG test listener tracking test NG test listener on start;
	Process tracking test NG test listener tracking test NG test listener on test failed but within success percentage;
	Process tracking test NG test listener tracking test NG test listener on test failure;
	Handle on test skipped;
	Process tracking test NG test listener tracking test NG test listener on test start;
	Process tracking test NG test listener tracking test NG test listener on test success

304. Changes to package org.springframework.test.context.testng.transaction.ejb:  

304.1. Add a class for abstract ejb tx dao test NG tests. It allows to:

	Handle test 1 initial state;
	Convert test;
	Convert test 3 increment count;
	Synchronize persistence context

304.2. Add a class for commit for required ejb tx dao test NG tests

304.3. Add a class for commit for requires new ejb tx dao test NG tests

304.4. Add a class for rollback for required ejb tx dao test NG tests. It allows to:

	Convert test 3 increment count

304.5. Add a class for rollback for requires new ejb tx dao test NG tests

305. Changes to package org.springframework.test.context.transaction:  

305.1. Add a class for test transaction. It allows to:

	Instantiate test transaction;
	Check if test transaction is active;
	Check if test transaction is flagged for rollback;
	Handle flag for rollback;
	Handle flag for commit;
	Start test transaction;
	End test transaction;
	Require current transaction context;
	Set flagged  for rollback

305.2. Add a class for transaction context. It allows to:

	Instantiate transaction context  with test context, platform transaction manager, transaction definition and transaction definition;
	Get transaction status;
	Check if transaction context is flagged for rollback;
	Set flagged  for rollback;
	Start transaction;
	End transaction

305.3. Add a class for transaction context holder. It allows to:

	Instantiate transaction context holder;
	Set current transaction context;
	Get current transaction context;
	Remove current transaction context

305.4. Add a class for transactional test execution listener. It allows to:

	Get order;
	Process transactional test execution listener transactional test execution listener before test method;
	Process transactional test execution listener transactional test execution listener after test method;
	Run test context before transaction methods;
	Run test context after transaction methods;
	Get transaction manager;
	Check if transactional test execution listener is default rollback;
	Check if transactional test execution listener is rollback;
	Get annotated methods

306. Changes to package org.springframework.test.context.transaction.ejb:  

306.1. Add a class for abstract ejb tx dao tests. It allows to:

	Handle test 1 initial state;
	Convert test;
	Convert test 3 increment count;
	Synchronize persistence context

306.2. Add a class for commit for required ejb tx dao tests

306.3. Add a class for commit for requires new ejb tx dao tests

306.4. Add a class for rollback for required ejb tx dao tests. It allows to:

	Handle test 1 initial state;
	Convert test;
	Convert test 3 increment count

306.5. Add a class for rollback for requires new ejb tx dao tests

307. Changes to package org.springframework.test.context.transaction.ejb.dao:  

307.1. Add a class for abstract ejb tx test entity dao. It allows to:

	Get test entity;
	Get count internal;
	Get increment count internal

307.2. Add a class for required ejb tx test entity dao. It allows to:

	Get count;
	Get increment count

307.3. Add a class for requires new ejb tx test entity dao. It allows to:

	Get count;
	Get increment count

307.4. Add an interface declaration  for test entity dao. It allows to:

	Get count;
	Get increment count

308. Changes to package org.springframework.test.context.transaction.ejb.model:  

308.1. Add a class for test entity. It allows to:

	Instantiate test entity;
	Get name;
	Set name;
	Get count;
	Set count

309. Changes to package org.springframework.test.context.util:  

309.1. Add a class for test context resource utils. It allows to:

	Convert clazz class to classpath resource paths;
	Convert resource loader to resources;
	Convert resource loader to resource list;
	Get stream

310. Changes to package org.springframework.test.context.web:  

310.1. Add a class for abstract basic wac tests. It allows to:

	Set servlet context;
	Handle basic wac features

310.2. Add a class for abstract generic web context loader. It allows to:

	Load context;
	Validate merged context configuration;
	Configure web resources;
	Customize bean factory;
	Load bean definitions;
	Customize context;

310.3. Add a class for annotation config web context loader. It allows to:

	Handle process context configuration;
	Detect default configuration classes;
	Modify locations;
	Generate default locations;
	Get resource suffix;
	Load bean definitions;
	Validate merged context configuration

310.4. Add a class for annotation config web context loader tests. It allows to:

	Handle config must not contain locations

310.5. Add a class for basic groovy wac tests. It allows to:

	Handle groovy foo autowired

310.6. Add a class for basic xml wac tests. It allows to:

	Handle foo bar autowired

310.7. Add a class for foo config. It allows to:

	Get foo

310.8. Add a class for generic groovy xml web context loader. It allows to:

	Load bean definitions;
	Get resource suffixes;
	Get resource suffix

310.9. Add a class for generic xml web context loader. It allows to:

	Load bean definitions;
	Get resource suffix;
	Validate merged context configuration

310.10. Add a class for generic xml web context loader tests. It allows to:

	Handle config must not contain annotated classes

310.11. Add a class for meta annotation config wac tests. It allows to:

	Handle foo enigma autowired;
	Handle basic wac features

310.12. Add a class for request and session scoped beans wac tests. It allows to:

	Handle request scope;
	Handle session scope

310.13. Add a class for servlet context aware bean. It allows to:

	Set servlet context

310.14. Add a class for servlet context aware bean wac tests. It allows to:

	Ensure servlet context aware bean is processed  properly when executing J unit manually

310.15. Add a class for servlet test execution listener. It allows to:

	Get order;
	Prepare test instance;
	Process servlet test execution listener servlet test execution listener before test method;
	Process servlet test execution listener servlet test execution listener after test method;
	Check if servlet test execution listener is activated;
	Already populated request context holder;
	Set up request context  if necessary

310.16. Add a class for web context loader test suite

310.17. Add a class for web delegating smart context loader. It allows to:

	Instantiate web delegating smart context loader;
	Get xml loader;
	Get annotation config loader

310.18. Add a class for web merged context configuration. It allows to:

	Instantiate web merged context configuration  with merged context configuration;
	Instantiate web merged context configuration  with test class, classes, context initializer classes set, context loader, cache aware context loader delegate, parent merged context configuration and parent merged context configuration;
	Instantiate web merged context configuration  with test class, classes, context initializer classes set, context customizers set, context loader, cache aware context loader delegate, parent merged context configuration and parent merged context configuration;
	Get resource base path;
	Check if web merged context configuration equals;
	Hash code;
	Convert web merged context configuration to string

310.19. Add a class for web test context bootstrapper. It allows to:

	Get default context loader class;
	Get process merged context configuration

311. Changes to package org.springframework.test.jdbc:  

311.1. Add a class for jdbc test utils. It allows to:

	Count rows  in table;
	Count rows  in table where;
	Delete jdbc template from tables;
	Delete jdbc template from table where;
	Drop tables

311.2. Add a class for jdbc test utils tests. It allows to:

	Delete jdbc test utils tests without where clause;
	Delete jdbc test utils tests with where clause;
	Delete jdbc test utils tests with where clause and arguments

312. Changes to package org.springframework.test.transaction:  

312.1. Add a class for transaction test utils. It allows to:

	Process transaction test utils transaction test utils in transaction;
	Assert transaction test utils in transaction;
	Fail transaction test utils;
	Assert condition

313. Changes to package org.springframework.test.util:  

313.1. Add a class for aop test utils. It allows to:

	Get target object;
	Get ultimate target object

313.2. Add a class for assertion errors. It allows to:

	Fail assertion errors;
	Assert true;
	Equals assertion errors;
	Assert assertion errors not equals

313.3. Add a class for json expectations helper. It allows to:

	Assert json equal;
	Assert json  not equal;

313.4. Add a class for json path expectations helper. It allows to:

	Instantiate json path expectations helper;
	Assert value;
	Assert value is string;
	Assert value is boolean;
	Assert value is number;
	Assert value is array;
	Assert value is map;
	Check if json path expectations helper exists;
	Check if json path expectations helper does not exist;
	Assert value is empty;
	Assert value is  not empty;
	Check if json path expectations helper has json path;
	Check if json path expectations helper does not have json path;
	Get failure reason;
	Evaluate json path;
	Assert exists and return;
	Handle path is indefinite

313.5. Add a class for json path expectations helper tests. It allows to:

	Check if json path expectations helper tests exists;
	Check if json path expectations helper tests exists for an empty array;
	Check if json path expectations helper tests exists for an empty map;
	Check if json path expectations helper tests exists for indefinate path with results;
	Check if json path expectations helper tests exists for indefinate path with empty results;
	Check if json path expectations helper tests does not exist;
	Check if json path expectations helper tests does not exist for an empty array;
	Check if json path expectations helper tests does not exist for an empty map;
	Check if json path expectations helper tests does not exist for indefinate path with results;
	Check if json path expectations helper tests does not exist for indefinate path with empty results;
	Assert value is empty  for an empty string;
	Assert value is empty  for an empty array;
	Assert value is empty  for an empty map;
	Assert value is empty  for indefinate path with empty results;
	Assert value is empty  for indefinate path with results;
	Assert value is empty  for whitespace;
	Assert value is  not empty for string;
	Assert value is  not empty for number;
	Assert value is  not empty for boolean;
	Assert value is  not empty for array;
	Assert value is  not empty for map;
	Assert value is  not empty for indefinate path with results;
	Assert value is  not empty for indefinate path with empty results;
	Assert value is  not empty for an empty string;
	Assert value is  not empty for an empty array;
	Assert value is  not empty for an empty map;
	Check if json path expectations helper tests has json path;
	Check if json path expectations helper tests has json path with null;
	Check if json path expectations helper tests has json path for indefinate path with results;
	Check if json path expectations helper tests has json path for indefinate path with empty results;
	Check if json path expectations helper tests does not have json path;
	Check if json path expectations helper tests does not have json path with null;
	Check if json path expectations helper tests does not have json path for indefinate path with empty results;
	Check if json path expectations helper tests does not have empty path for indefinate path with results;
	Assert value;
	Assert value  with number conversion;
	Assert value  with number conversion and matcher;
	Assert value is string;
	Assert value is string  for an empty string;
	Assert value is string  for non string;
	Assert value is number;
	Assert value is number  for non number;
	Assert value is boolean;
	Assert value is boolean  for non boolean;
	Assert value is array;
	Assert value is array  for an empty array;
	Assert value is array  for non array;
	Assert value is map;
	Assert value is map  for an empty map;
	Assert value is map  for non map

313.6. Add a class for reflection test utils. It allows to:

	Set field;
	Get field;
	Invoke setter method;
	Invoke getter method;
	Invoke method;
	Handle safe to string

313.7. Add a class for reflection test utils tests. It allows to:

	Reset static fields;
	Set field  with null target object;
	Get field  with null target object;
	Set field  with null target class;
	Get field  with null target class;
	Set field  with null name and null type;
	Set field  with bogus name;
	Set field  with wrong type;
	Set field and get field  for standard use cases;
	Set field and get field  via jdk dynamic proxy;
	Set field and get field  via cglib proxy;
	Assert set field and get field behavior;
	Assert set field and get field behavior  for proxy;
	Set field  with null values for non primitives;
	Set field  with null value for primitive long;
	Set field  with null value for primitive int;
	Set field  with null value for primitive boolean;
	Set static field  via class;
	Set static field  via class with explicit type;
	Set static field  via instance;
	Get static field  via class;
	Get static field  via instance;
	Invoke setter method and invoke getter method  with explicit method names;
	Invoke setter method and invoke getter method  with java bean property names;
	Invoke setter method  with null values for non primitives;
	Invoke setter method  with null value for primitive long;
	Invoke setter method  with null value for primitive int;
	Invoke setter method  with null value for primitive boolean;
	Invoke method  with autoboxing and unboxing;
	Invoke method  with primitive var args;
	Invoke method  with primitive var args as single argument;
	Invoke method simulating lifecycle events;
	Invoke init method  before autowiring;
	Invoke method  with incompatible argument types;
	Invoke method  with too few arguments;
	Invoke method  with too many arguments;
	Get field  on legacy entity with side effects in to string;
	Set field  on legacy entity with side effects in to string;
	Invoke method  on legacy entity with side effects in to string;
	Invoke getter method  on legacy entity with side effects in to string;
	Invoke setter method  on legacy entity with side effects in to string

313.8. Add a class for xpath expectations helper. It allows to:

	Instantiate xpath expectations helper  with namespaces map;
	Compile xpath expression;
	Get xpath expression;
	Assert node;
	Check if xpath expectations helper exists;
	Check if xpath expectations helper does not exist;
	Assert node count;
	Assert string;
	Assert number;
	Assert boolean;
	Evaluate xpath;
	Parse xml byte array;
	Convert xpath expectations helper to Q name

314. Changes to package org.springframework.test.util.subpackage:  

314.1. Add a class for component. It allows to:

	Get number;
	Get text;
	Configure number integer;
	Handle init;
	Destroy component;
	Subtract component;
	Add component;
	Multiply args integer

314.2. Add a class for legacy entity. It allows to:

	Convert to string;
	Configure number integer;
	Get number;
	Get text;
	Get collaborator;
	Set collaborator;
	Convert legacy entity to string

314.3. Add a class for persistent entity. It allows to:

	Get id;
	Set id

314.4. Add an interface declaration  for person. It allows to:

	Get id;
	Get name;
	Get age;
	Get eye color;
	Check if person likes pets;
	Get favorite number

314.5. Add a class for person entity. It allows to:

	Get name;
	Set name;
	Get age;
	Set age;
	Get eye color;
	Set eye color;
	Check if person entity likes pets;
	Set likes pets;
	Get favorite number;
	Set favorite number;
	Convert person entity to string

314.6. Add a class for static fields. It allows to:

	Reset static fields;
	Get private field

315. Changes to package org.springframework.test.web:  

315.1. Add a class for model and view assert. It allows to:

	Assert and return model attribute  of type;
	Assert compare list model attribute;
	Assert model attribute available;
	Assert model attribute value;
	Assert model attribute values;
	Assert sort and compare list model attribute;
	Assert view name;
	Append non matching sets error message

315.2. Add a class for person. It allows to:

	Instantiate person;
	Get name;
	Set name;
	Get some double;
	Set some double;
	Check if person is some boolean;
	Set some boolean;
	Check if person equals;
	Hash code;
	Convert person to string

316. Changes to package org.springframework.test.web.client:  

316.1. Add a class for default request expectation tests. It allows to:

	Match default request expectation tests;
	Match default request expectation tests with failed expectation;
	Check if default request expectation tests has remaining count;
	Check if default request expectation tests is satisfied;
	Create request

316.2. Add an object creator class for expected count. It allows to:

	Instantiate expected count;
	Get min count;
	Get max count;
	Once expected count;
	Twice expected count;
	Handle many times;
	Get times;
	Get min;
	Get max;
	Never expected count;
	Process expected count expected count between

316.3. Add a class for mock mvc client http request factory. It allows to:

	Instantiate mock mvc client http request factory  with mock mvc;
	Create request;
	Execute internal;
	Create async request;
	Get client http response;
	Get response headers

316.4. Add an interface declaration  for request expectation. It allows to:

	Check if request expectation has remaining count;
	Handle increment and validate;
	Check if request expectation is satisfied

316.5. Add an interface declaration  for request expectation manager. It allows to:

	Expect request;
	Verify request expectation manager;
	Reset request expectation manager;
	Validate request

316.6. Add an interface declaration  for request matcher. It allows to:

	Match client http request

316.7. Add an interface declaration  for response actions. It allows to:

	Expect request matcher;
	Respond response creator

316.8. Add an interface declaration  for response creator. It allows to:

	Create response

316.9. Add a class for simple request expectation manager. It allows to:

	Handle after expectations declared;
	Match request;
	Reset simple request expectation manager

316.10. Add a class for simple request expectation manager tests. It allows to:

	Handle unexpected request;
	Zero expected requests;
	Handle sequential requests;
	Handle sequential requests too many;
	Handle sequential requests too few;
	Get repeated requests;
	Get repeated requests too many;
	Get repeated requests too few;
	Get repeated requests not in order;
	Handle sequential requests with different count;
	Get repeated requests in sequential order;
	Handle sequential requests with first failing;
	Create request

316.11. Add a class for unordered request expectation manager. It allows to:

	Handle after expectations declared;
	Match request;
	Reset unordered request expectation manager

316.12. Add a class for unordered request expectation manager tests. It allows to:

	Handle unexpected request;
	Zero expected requests;
	Handle multiple requests;
	Get repeated requests;
	Get repeated requests too many;
	Get repeated requests too few;
	Create request

317. Changes to package org.springframework.test.web.client.match:  

317.1. Add a class for content request matchers tests. It allows to:

	Set content request matchers tests;
	Handle test content type;
	Handle test content type no match 1;
	Convert test content type no match;
	Handle test string;
	Handle test string no match;
	Handle test bytes;
	Handle test bytes no match;
	Handle test form data;
	Handle test xml;
	Handle test xml no match;
	Handle test node matcher;
	Handle test node matcher no match;
	Handle test json lenient match;
	Handle test json strict match;
	Handle test json lenient no match;
	Handle test json strict no match

317.2. Add a class for json path request matchers tests. It allows to:

	Handle value with mismatch;
	Handle value with direct match;
	Handle value with number conversion;
	Handle value with matcher;
	Handle value with matcher and number conversion;
	Handle value with matcher and mismatch;
	Check if json path request matchers tests exists;
	Check if json path request matchers tests exists for an empty array;
	Check if json path request matchers tests exists for an empty map;
	Check if json path request matchers tests exists no match;
	Check if json path request matchers tests does not exist;
	Check if json path request matchers tests does not exist no match;
	Check if json path request matchers tests does not exist for an empty array;
	Check if json path request matchers tests does not exist for an empty map;
	Check if json path request matchers tests is empty for an empty string;
	Check if json path request matchers tests is empty for an empty array;
	Check if json path request matchers tests is empty for an empty map;
	Check if json path request matchers tests is not empty for string;
	Check if json path request matchers tests is not empty for number;
	Check if json path request matchers tests is not empty for boolean;
	Check if json path request matchers tests is not empty for array;
	Check if json path request matchers tests is not empty for map;
	Check if json path request matchers tests is not empty for an empty string;
	Check if json path request matchers tests is not empty for an empty array;
	Check if json path request matchers tests is not empty for an empty map;
	Check if json path request matchers tests is array;
	Check if json path request matchers tests is array for an empty array;
	Check if json path request matchers tests is array no match;
	Check if json path request matchers tests is map;
	Check if json path request matchers tests is map for an empty map;
	Check if json path request matchers tests is map no match;
	Check if json path request matchers tests is boolean;
	Check if json path request matchers tests is boolean no match;
	Check if json path request matchers tests is number;
	Check if json path request matchers tests is number no match;
	Check if json path request matchers tests is string;
	Check if json path request matchers tests is string no match

317.3. Add a class for mock rest request matchers. It allows to:

	Get anything;
	Get method;
	Convert request;
	Handle query param;
	Get query params;
	Assert value count;
	Get header;
	Handle content;
	Handle json path;
	Get xpath;

317.4. Add a class for mock rest request matchers tests. It allows to:

	Convert request;
	Handle method;
	Handle method no match;
	Handle header;
	Handle header missing;
	Handle header missing value;
	Handle header contains;
	Handle header contains with missing header;
	Handle header contains with missing value;
	Handle headers;
	Handle headers with missing header;
	Handle headers with missing value;
	Handle query param;
	Handle query param missing;
	Handle query param missing value;
	Handle query param contains;
	Handle query param contains with missing value

317.5. Add a class for xpath request matchers tests. It allows to:

	Set xpath request matchers tests;
	Handle test node matcher;
	Handle test node matcher no match;
	Handle test exists;
	Handle test exists no match;
	Handle test does not exist;
	Handle test does not exist no match;
	Handle test node count;
	Handle test node count no match;
	Handle test string;
	Handle test string no match;
	Test number;
	Test number no match;
	Handle test boolean;
	Handle test boolean no match

318. Changes to package org.springframework.test.web.client.response:  

318.1. Add a class for default response creator. It allows to:

	Instantiate default response creator  with status;
	Get body;
	Handle content type;
	Get location;
	Get headers;
	Create response

318.2. Add an object creator class for mock rest response creators. It allows to:

	Process mock rest response creators mock rest response creators with success;
	Process mock rest response creators mock rest response creators with created entity;
	Process mock rest response creators mock rest response creators with no content;
	Process mock rest response creators mock rest response creators with bad request;
	Process mock rest response creators mock rest response creators with unauthorized request;
	Process mock rest response creators mock rest response creators with server error;
	Process mock rest response creators mock rest response creators with status

318.3. Add a class for response creators tests. It allows to:

	Handle success;
	Handle success with content;
	Handle success with content without content type;
	Get created;
	No content;
	Handle bad request;
	Handle unauthorized;
	Handle server error;
	Process response creators tests response creators tests with status

319. Changes to package org.springframework.test.web.client.samples:  

319.1. Add a class for sample async tests. It allows to:

	Get sample async tests;
	Perform get many times;
	Perform get  with response body from file;
	Verify sample async tests

320. Changes to package org.springframework.test.web.client.samples.matchers:  

320.1. Add a class for content request matchers integration tests. It allows to:

	Handle setup;
	Handle content type;
	Handle content type no match;
	Handle content as string;
	Handle content string starts with;
	Handle content as bytes;
	Execute content request matchers integration tests

320.2. Add a class for header request matchers integration tests. It allows to:

	Handle setup;
	Handle test string;
	Handle test string contains;
	Execute header request matchers integration tests

320.3. Add a class for json path request matchers integration tests. It allows to:

	Check if json path request matchers integration tests exists;
	Check if json path request matchers integration tests does not exist;
	Handle value;
	Handle hamcrest matchers;
	Handle hamcrest matchers with parameterized json paths;
	Check if json path request matchers integration tests is array;
	Check if json path request matchers integration tests is string;
	Check if json path request matchers integration tests is number;
	Check if json path request matchers integration tests is boolean;
	Execute json path request matchers integration tests

321. Changes to package org.springframework.test.web.servlet:  

321.1. Add a class for default mvc result. It allows to:

	Instantiate default mvc result  with mock http servlet request, mock http servlet response and mock http servlet response;
	Get request;
	Get response;
	Set handler;
	Get handler;
	Set interceptors;
	Get interceptors;
	Set resolved exception;
	Get resolved exception;
	Set model and view;
	Get model and view;
	Get flash map;
	Set async result;
	Get async result;
	Await async dispatch;
	Set async dispatch latch

321.2. Add a class for default mvc result tests. It allows to:

	Get async result success;
	Get async result failure

321.3. Add a class for mock mvc. It allows to:

	Instantiate mock mvc  with test dispatcher servlet, filters and filters;
	Set default request;
	Set global result matchers;
	Set global result handlers;
	Get dispatcher servlet;
	Perform request builder;
	Expect result matcher;
	Do result handler;
	Return;
	Handle unwrap response if necessary;
	Apply default result actions

321.4. Add an interface declaration  for mock mvc builder. It allows to:

	Build mock mvc builder

321.5. Add an interface declaration  for mvc result. It allows to:

	Get request;
	Get response;
	Get handler;
	Get interceptors;
	Get model and view;
	Get resolved exception;
	Get flash map;
	Get async result;

321.6. Add an interface declaration  for request builder. It allows to:

	Build request

321.7. Add an interface declaration  for result actions. It allows to:

	Expect result matcher;
	Do result handler;
	Return result actions

321.8. Add an interface declaration  for result handler. It allows to:

	Handle mvc result

321.9. Add an interface declaration  for result matcher. It allows to:

	Match mvc result;
	Match matchers

321.10. Add an interface declaration  for smart request builder. It allows to:

	Post process request

321.11. Add a class for stub mvc result. It allows to:

	Instantiate stub mvc result  with mock http servlet request, interceptors, resolved exception, mav model and view, flash map, mock http servlet response and mock http servlet response;
	Get request;
	Get handler;
	Get interceptors;
	Get resolved exception;
	Get model and view;
	Get flash map;
	Get response;
	Get mav;
	Set mav;
	Set request;
	Set handler;
	Set interceptors;
	Set resolved exception;
	Set flash map;
	Set response;
	Get async result;

321.12. Add a class for test dispatcher servlet. It allows to:

	Instantiate test dispatcher servlet  with web application context;
	Handle service;
	Register async result interceptors;
	Post process;
	Get mvc result;
	Get handler;
	Render mv model and view;
	Get process handler exception

322. Changes to package org.springframework.test.web.servlet.htmlunit:  

322.1. Add a class for abstract web request matcher tests. It allows to:

	Assert matches;
	Assert does  not match

322.2. Add a class for forward controller. It allows to:

	Forward forward controller

322.3. Add a class for forward request post processor. It allows to:

	Instantiate forward request post processor;
	Post process request

322.4. Add a class for hello controller. It allows to:

	Get header

322.5. Add a class for host request matcher. It allows to:

	Instantiate host request matcher;
	Handle matches

322.6. Add a class for host request matcher tests. It allows to:

	Handle localhost;
	Handle multiple hosts;
	Handle specific port;
	Handle default http port;
	Handle default https port

322.7. Add a class for html unit request builder tests. It allows to:

	Handle setup;
	Handle constructor null sessions;
	Handle constructor null web client;
	Handle constructor null web request;
	Build request basic auth;
	Build request character encoding;
	Build request default character encoding;
	Build request content length;
	Build request content type;
	Build request content type  with form submission;
	Build request context path uses first segment  by default;
	Build request context path uses no first segment  with default;
	Build request context path invalid;
	Build request context path empty;
	Build request context path explicit;
	Build request context path multi;
	Build request cookies  null;
	Build request cookies single;
	Build request cookies multi;
	Build request input stream;
	Build request local addr;
	Build request locale default;
	Build request locale da;
	Build request locale  en gb Q 08;
	Build request locale  en Q 07;
	Build request locale  en us;
	Build request locale fr;
	Build request locale multi;
	Build request local name;
	Build request local port;
	Build request local missing;
	Build request methods;
	Build request parameter map  via web request dot set request parameters with single request param;
	Build request parameter map  via web request dot set request parameters with single request param with null value;
	Build request parameter map  via web request dot set request parameters with single request param with empty value;
	Build request parameter map  via web request dot set request parameters with single request param with value set to space;
	Build request parameter map  via web request dot set request parameters with multiple request params;
	Build request parameter map  from single query param;
	Build request parameter map decodes parameter name;
	Build request parameter map decodes parameter value;
	Build request parameter map  from single query param without value and without equals sign;
	Build request parameter map  from single query param without value but with equals sign;
	Build request parameter map  from single query param with value set to encoded space;
	Build request parameter map  from multiple query params;
	Build request path info;
	Build request path info  null;
	Build request and ant path request matcher;
	Build request protocol;
	Build request query  with single query param;
	Build request query  with single query param without value and without equals sign;
	Build request query  with single query param without value but with equals sign;
	Build request query  with single query param with value set to encoded space;
	Build request query  with multiple query params;
	Build request reader;
	Build request remote addr;
	Build request remote host;
	Build request remote port;
	Build request remote port 8080;
	Build request remote port 80  with default;
	Build request requested session id;
	Build request requested session id null;
	Build request uri;
	Build request url;
	Build request scheme http;
	Build request scheme https;
	Build request server name;
	Build request server port;
	Build request server port default;
	Build request servlet context;
	Build request servlet path;
	Build request session;
	Build request session  with existing session;
	Build request session true;
	Build request session false is null;
	Build request session false  with existing session;
	Build request session is new;
	Build request session is new false;
	Build request session invalidate;
	Set context path  null;
	Set context path empty string;
	Set context path does  not start with slash;
	Set context path ends  with slash;
	Set context path;
	Merge header;
	Merge session;
	Merge session  not initialized;
	Merge parameter;
	Merge cookie;
	Merge request attribute;
	Merge does  not corrupt path info on parent;
	Assert single session cookie;
	Get context path

322.8. Add a class for mock mvc web client builder. It allows to:

	Instantiate mock mvc web client builder  with mock mvc;
	Instantiate mock mvc web client builder  with web application context;
	Instantiate mock mvc web client builder  with web application context, mock mvc configurer and mock mvc configurer;
	Handle mock mvc setup;
	Get web app context setup;
	Process mock mvc web client builder mock mvc web client builder with delegate;
	Build mock mvc web client builder

322.9. Add a class for mock mvc web connection. It allows to:

	Instantiate mock mvc web connection  with mock mvc, web client and web client;
	Validate context path;
	Set web client;
	Get response;
	Handle store cookies;
	Create cookie;
	Close mock mvc web connection

322.10. Add a class for mock mvc web connection builder support. It allows to:

	Instantiate mock mvc web connection builder support  with mock mvc;
	Instantiate mock mvc web connection builder support  with web application context;
	Instantiate mock mvc web connection builder support  with web application context, mock mvc configurer and mock mvc configurer;
	Get context path;
	Always use mock mvc;
	Use mock mvc;
	Use mock mvc  for hosts;
	Create connection;

322.11. Add a class for mock mvc web connection tests. It allows to:

	Handle context path null;
	Handle context path explicit;
	Handle context path empty;
	Forward mock mvc web connection tests;
	Handle context path does not start with slash;
	Handle context path ends with slash

322.12. Add a class for mock web response builder. It allows to:

	Instantiate mock web response builder  with web request, mock http servlet response and mock http servlet response;
	Build mock web response builder;
	Get web response data;
	Get status message;
	Get response headers

322.13. Add a class for mock web response builder tests. It allows to:

	Handle setup;
	Handle constructor with null web request;
	Handle constructor with null response;
	Build content;
	Build content charset;
	Build content type;
	Build response headers;
	Build response headers null domain defaulted;
	Build status;
	Build status  not ok;
	Build status  with custom message;
	Build web request

322.14. Add a class for url regex request matcher. It allows to:

	Instantiate url regex request matcher;
	Instantiate url regex request matcher  with pattern;
	Handle matches

322.15. Add a class for url regex request matcher tests. It allows to:

	Verify example  in class level javadoc

322.16. Add an interface declaration  for web request matcher. It allows to:

	Handle matches

323. Changes to package org.springframework.test.web.servlet.htmlunit.webdriver:  

323.1. Add a class for mock mvc html unit driver builder. It allows to:

	Instantiate mock mvc html unit driver builder  with mock mvc;
	Instantiate mock mvc html unit driver builder  with web application context;
	Instantiate mock mvc html unit driver builder  with web application context, mock mvc configurer and mock mvc configurer;
	Handle mock mvc setup;
	Get web app context setup;
	Handle javascript enabled;
	Process mock mvc html unit driver builder mock mvc html unit driver builder with delegate;
	Build mock mvc html unit driver builder

323.2. Add a class for web connection html unit driver. It allows to:

	Instantiate web connection html unit driver;
	Instantiate web connection html unit driver  with browser version;
	Instantiate web connection html unit driver  with capabilities;
	Modify web client;
	Modify web client internal;
	Get web client;
	Set web connection;
	Get web connection

323.3. Add a class for web connection html unit driver tests. It allows to:

	Handle setup;
	Get web connection default  not null;
	Set web connection  to null;
	Set web connection

324. Changes to package org.springframework.test.web.servlet.request:  

324.1. Add an interface declaration  for configurable smart request builder. It allows to:

	Process configurable smart request builder configurable smart request builder with

324.2. Add a class for mock http servlet request builder. It allows to:

	Instantiate mock http servlet request builder  with http method;
	Instantiate mock http servlet request builder  with http method, url URI and url URI;
	Instantiate mock http servlet request builder  with url URI;
	Get context path;
	Handle servlet path;
	Get path info;
	Secure mock http servlet request builder;
	Get character encoding;
	Handle content;
	Handle content type;
	Accept media types;
	Accept mock http servlet request builder;
	Get header;
	Get headers;
	Get param;
	Get params;
	Get cookie;
	Get locale;
	Get request attr;
	Get session attr;
	Get session attrs;
	Flash attr;
	Flash attrs;
	Get session;
	Handle principal;
	Process mock http servlet request builder mock http servlet request builder with;
	Check if mock http servlet request builder is merge enabled;
	Merge mock http servlet request builder;
	Check if mock http servlet request builder contains cookie;
	Build request;
	Create servlet request;
	Update path request properties;
	Add request params;
	Parse form data;
	Get body;
	Get flash map manager;
	Post process request;
	Add map to map;
	Add multi value map to multi value map

324.3. Add a class for mock multipart http servlet request builder. It allows to:

	Instantiate mock multipart http servlet request builder;
	Instantiate mock multipart http servlet request builder  with URI;
	Get file;
	Get part;
	Merge mock multipart http servlet request builder;
	Create servlet request

324.4. Add a class for mock multipart http servlet request builder tests. It allows to:

	Handle test

324.5. Add an object creator class for mock mvc request builders. It allows to:

	Get mock mvc request builders;
	Get URI;
	Get post;
	Put mock mvc request builders;
	Put URI;
	Get patch;
	Delete mock mvc request builders;
	Delete URI;
	Get options;
	Get head;
	Get request;
	Handle multipart;
	File upload;
	Handle async dispatch

324.6. Add an interface declaration  for request post processor. It allows to:

	Post process request

325. Changes to package org.springframework.test.web.servlet.result:  

325.1. Add a class for content result matchers. It allows to:

	Instantiate content result matchers;
	Handle content type;
	Handle content type compatible with;
	Encoding content result matchers;
	Get string;
	Get bytes;
	Get xml;
	Node matcher;
	Get source;
	Get json;

325.2. Add a class for content result matchers tests. It allows to:

	Handle type matches;
	Handle type no match;
	Encoding content result matchers tests;
	Encoding no match;
	Handle string;
	String no match;
	String matcher;
	String matcher no match;
	Handle bytes;
	Handle bytes no match;
	Handle json lenient match;
	Json strict match;
	Handle json lenient no match;
	Json strict no match;
	Get stub mvc result

325.3. Add a class for cookie result matchers. It allows to:

	Instantiate cookie result matchers;
	Get value;
	Check if cookie result matchers exists;
	Check if cookie result matchers does not exist;
	Max age;
	Get path;
	Get domain;
	Comment matcher;
	Comment cookie result matchers;
	Get version;
	Secure cookie result matchers;
	Http cookie result matchers only;
	Get cookie

325.4. Add a class for flash attribute result matchers. It allows to:

	Instantiate flash attribute result matchers;
	Attribute matcher;
	Attribute flash attribute result matchers;
	Exists flash attribute result matchers;
	Attribute count

325.5. Add a class for flash attribute result matchers tests. It allows to:

	Exists flash attribute result matchers tests;
	Attribute exists doesnt exist;
	Attribute flash attribute result matchers tests;
	Attribute incorrect value;
	Get stub mvc result

325.6. Add a class for handler result matchers. It allows to:

	Instantiate handler result matchers;
	Get handler type;
	Get method call;
	Get method name;
	Get method;
	Get handler method

325.7. Add a class for header result matchers. It allows to:

	Instantiate header result matchers;
	Get string;
	String values;
	Check if header result matchers exists;
	Check if header result matchers does not exist;
	Handle long value;
	Get date value

325.8. Add a class for json path result matchers. It allows to:

	Instantiate json path result matchers;
	Prefix json path result matchers;
	Get value;
	Check if json path result matchers exists;
	Check if json path result matchers does not exist;
	Check if json path result matchers is empty;
	Check if json path result matchers is not empty;
	Check if json path result matchers has json path;
	Check if json path result matchers does not have json path;
	Check if json path result matchers is string;
	Check if json path result matchers is boolean;
	Check if json path result matchers is number;
	Check if json path result matchers is array;
	Check if json path result matchers is map;
	Get content

325.9. Add a class for json path result matchers tests. It allows to:

	Handle value with mismatch;
	Handle value with direct match;
	Handle value with number conversion;
	Handle value with matcher;
	Handle value with matcher and number conversion;
	Handle value with matcher and mismatch;
	Check if json path result matchers tests exists;
	Check if json path result matchers tests exists for an empty array;
	Check if json path result matchers tests exists for an empty map;
	Check if json path result matchers tests exists no match;
	Check if json path result matchers tests does not exist;
	Check if json path result matchers tests does not exist no match;
	Check if json path result matchers tests does not exist for an empty array;
	Check if json path result matchers tests does not exist for an empty map;
	Check if json path result matchers tests is empty for an empty string;
	Check if json path result matchers tests is empty for an empty array;
	Check if json path result matchers tests is empty for an empty map;
	Check if json path result matchers tests is not empty for string;
	Check if json path result matchers tests is not empty for number;
	Check if json path result matchers tests is not empty for boolean;
	Check if json path result matchers tests is not empty for array;
	Check if json path result matchers tests is not empty for map;
	Check if json path result matchers tests is not empty for an empty string;
	Check if json path result matchers tests is not empty for an empty array;
	Check if json path result matchers tests is not empty for an empty map;
	Check if json path result matchers tests is array;
	Check if json path result matchers tests is array for an empty array;
	Check if json path result matchers tests is array no match;
	Check if json path result matchers tests is map;
	Check if json path result matchers tests is map for an empty map;
	Check if json path result matchers tests is map no match;
	Check if json path result matchers tests is boolean;
	Check if json path result matchers tests is boolean no match;
	Check if json path result matchers tests is number;
	Check if json path result matchers tests is number no match;
	Check if json path result matchers tests is string;
	Check if json path result matchers tests is string no match;
	Handle value with json prefix not configured;
	Handle value with json wrong prefix;
	Handle value with json prefix;
	Prefix json path result matchers tests with payload not long enough;
	Create prefixed stub mvc result

325.10. Add an object creator class for mock mvc result matchers. It allows to:

	Get request;
	Get handler;
	Get model;
	View mock mvc result matchers;
	Flash mock mvc result matchers;
	Get forwarded url;
	Get forwarded url template;
	Get forwarded url pattern;
	Get redirected url;
	Get redirected url template;
	Get redirected url pattern;
	Get status;
	Get header;
	Handle content;
	Handle json path;
	Get xpath;
	Get cookie

325.11. Add a class for mock mvc result matchers tests. It allows to:

	Redirect mock mvc result matchers tests;
	Redirect mock mvc result matchers tests with url template;
	Redirect mock mvc result matchers tests with matching pattern;
	Redirect mock mvc result matchers tests with non matching pattern;
	Forward mock mvc result matchers tests;
	Forward mock mvc result matchers tests with query string;
	Forward mock mvc result matchers tests with url template;
	Forward mock mvc result matchers tests with matching pattern;
	Forward mock mvc result matchers tests with non matching pattern;
	Get redirected url stub mvc result;
	Get forwarded url stub mvc result

325.12. Add a class for model result matchers. It allows to:

	Instantiate model result matchers;
	Attribute matcher;
	Attribute model result matchers;
	Exists model result matchers;
	Attribute does  not exist;
	Attribute error count;
	Attribute has errors;
	Attribute has no errors;
	Attribute has field errors;
	Attribute has field error code;
	Get error count;
	Check if model result matchers has errors;
	Check if model result matchers has no errors;
	Get size;
	Get model and view;
	Get binding result;

325.13. Add a class for model result matchers tests. It allows to:

	Set model result matchers tests;
	Exists model result matchers tests;
	Attribute exists does  not exist;
	Attribute does  not exist;
	Attribute does  not exist does exist;
	Attribute equal;
	Attribute model result matchers tests not equal;
	Check if model result matchers tests has no errors;
	Check if model result matchers tests has no errors with errors;
	Attribute has errors;
	Attribute has errors  without errors;
	Attribute has no errors;
	Attribute has no errors  without attribute;
	Attribute has no errors  with errors;
	Attribute has field errors;
	Attribute has field errors  without attribute;
	Attribute has field errors  without errors for attribute;
	Attribute has field errors  without errors for field;
	Attribute has field error code;
	Attribute has field error code  without error on field;
	Attribute has field error code starts  with;
	Attribute has field error code starts  with without error on field;
	Get mvc result

325.14. Add a class for request result matchers. It allows to:

	Instantiate request result matchers;
	Handle async started;
	Handle async not started;
	Handle async result;
	Attribute matcher;
	Attribute request result matchers;
	Get session attribute;
	Assert async started

325.15. Add a class for status result matchers. It allows to:

	Instantiate status result matchers;
	I matcher;
	I status result matchers;
	Check if status result matchers is 1 xx informational;
	Check if status result matchers is 2 xx successful;
	Check if status result matchers is 3 xx redirection;
	Check if status result matchers is 4 xx client error;
	Check if status result matchers is 5 xx server error;
	Get http status series;
	Get reason;
	Check if status result matchers is continue;
	Check if status result matchers is switching protocols;
	Check if status result matchers is processing;
	Check if status result matchers is checkpoint;
	Check if status result matchers is ok;
	Check if status result matchers is created;
	Check if status result matchers is accepted;
	Check if status result matchers is non authoritative information;
	Check if status result matchers is no content;
	Check if status result matchers is reset content;
	Check if status result matchers is partial content;
	Check if status result matchers is multi status;
	Check if status result matchers is already reported;
	Check if status result matchers is im used;
	Check if status result matchers is multiple choices;
	Check if status result matchers is moved permanently;
	Check if status result matchers is found;
	Check if status result matchers is moved temporarily;
	Check if status result matchers is see other;
	Check if status result matchers is not modified;
	Check if status result matchers is use proxy;
	Check if status result matchers is temporary redirect;
	Check if status result matchers is permanent redirect;
	Check if status result matchers is bad request;
	Check if status result matchers is unauthorized;
	Check if status result matchers is payment required;
	Check if status result matchers is forbidden;
	Check if status result matchers is not found;
	Check if status result matchers is method not allowed;
	Check if status result matchers is not acceptable;
	Check if status result matchers is proxy authentication required;
	Check if status result matchers is request timeout;
	Check if status result matchers is conflict;
	Check if status result matchers is gone;
	Check if status result matchers is length required;
	Check if status result matchers is precondition failed;
	Check if status result matchers is payload too large;
	Check if status result matchers is request entity too large;
	Check if status result matchers is uri too long;
	Check if status result matchers is request uri too long;
	Check if status result matchers is unsupported media type;
	Check if status result matchers is requested range not satisfiable;
	Check if status result matchers is expectation failed;
	Check if status result matchers is I am A teapot;
	Check if status result matchers is insufficient space on resource;
	Check if status result matchers is method failure;
	Check if status result matchers is destination locked;
	Check if status result matchers is unprocessable entity;
	Check if status result matchers is locked;
	Check if status result matchers is failed dependency;
	Check if status result matchers is upgrade required;
	Check if status result matchers is precondition required;
	Check if status result matchers is too many requests;
	Check if status result matchers is request header fields too large;
	Check if status result matchers is unavailable for legal reasons;
	Check if status result matchers is internal server error;
	Check if status result matchers is not implemented;
	Check if status result matchers is bad gateway;
	Check if status result matchers is service unavailable;
	Check if status result matchers is gateway timeout;
	Check if status result matchers is http version not supported;
	Check if status result matchers is variant also negotiates;
	Check if status result matchers is insufficient storage;
	Check if status result matchers is loop detected;
	Check if status result matchers is bandwidth limit exceeded;
	Check if status result matchers is not extended;
	Check if status result matchers is network authentication required;
	Matcher http status

325.16. Add a class for status result matchers tests. It allows to:

	Handle setup;
	Handle test http status code result matchers;
	Get method  for http status;
	Handle status ranges

325.17. Add a class for view result matchers. It allows to:

	Instantiate view result matchers;
	Name matcher;
	Name view result matchers

325.18. Add a class for xpath result matchers. It allows to:

	Instantiate xpath result matchers  with namespaces map;
	Node matcher;
	Get defined encoding;
	Check if xpath result matchers exists;
	Check if xpath result matchers does not exist;
	Node count;
	Get string;
	Get number;
	Handle boolean value

325.19. Add a class for xpath result matchers tests. It allows to:

	Node xpath result matchers tests;
	Node no match;
	Check if xpath result matchers tests exists;
	Check if xpath result matchers tests exists no match;
	Check if xpath result matchers tests does not exist;
	Check if xpath result matchers tests does not exist no match;
	Node count;
	Node count no match;
	Handle string;
	String no match;
	Handle number;
	Handle number no match;
	Handle boolean value;
	Handle boolean value no match;
	String encoding detection;
	Get stub mvc result

326. Changes to package org.springframework.test.web.servlet.samples.context:  

326.1. Add a class for person controller. It allows to:

	Instantiate person controller  with person dao;
	Get person

326.2. Add an interface declaration  for person dao. It allows to:

	Get person

326.3. Add a class for web app resource tests. It allows to:

	Handle setup;
	Handle tiles definitions;
	Handle resource request;
	Handle resources via default servlet

326.4. Add a class for xml config tests. It allows to:

	Handle setup;
	Handle person;
	Handle tiles definitions

327. Changes to package org.springframework.test.web.servlet.setup:  

327.1. Add a class for abstract mock mvc builder. It allows to:

	Add filters;
	Add filter;
	Get default request;
	Expect expect;
	Do do;
	Add dispatcher servlet customizer;
	Dispatch options;
	Apply mock mvc configurer;
	Get self;
	Build abstract mock mvc builder;
	Handle init web app context

327.2. Add an interface declaration  for configurable mock mvc builder. It allows to:

	Add filters;
	Add filter;
	Get default request;
	Expect expect;
	Do do;
	Dispatch options;
	Apply mock mvc configurer

327.3. Add a class for default mock mvc builder. It allows to:

	Instantiate default mock mvc builder  with web application context;
	Handle init web app context

327.4. Add a class for default mock mvc builder tests. It allows to:

	Handle web app context setup with null wac;
	Handle web app context setup with null servlet context;
	Root wac servlet container attribute  previously set;
	Root wac servlet container attribute  previously set with context hierarchy;
	Root wac servlet container attribute  not previously set;
	Root wac servlet container attribute  not previously set with context hierarchy;
	Handle dispatcher servlet customizer;
	Handle dispatcher servlet customizer processed in order

327.5. Add an object creator class for mock mvc builders. It allows to:

	Instantiate mock mvc builders;
	Get web app context setup;
	Handle standalone setup

327.6. Add an interface declaration  for mock mvc configurer. It allows to:

	Handle after configurer added;
	Handle before mock mvc created

327.7. Add a class for mock mvc configurer adapter. It allows to:

	Handle after configurer added;
	Handle before mock mvc created

327.8. Add a class for pattern mapping filter proxy. It allows to:

	Instantiate pattern mapping filter proxy  with delegate filter;
	Add url pattern;
	Do filter;
	Handle matches;
	Handle init;
	Destroy pattern mapping filter proxy

328. Changes to package org.springframework.tests:  

328.1. Add a class for matchers. It allows to:

	Get exception cause;
	Handle matches;
	Describe  to description

328.2. Add a class for test group tests. It allows to:

	Parse null;
	Parse empty string;
	Parse blank string;
	Parse test group tests with spaces;
	Parse test group tests in mixed case;
	Missing test group tests;
	Parse test group tests;
	Parse all  except performance;
	Parse all  except missing

328.3. Add an object creator class for test resource utils. It allows to:

	Get qualified resource

328.4. Add an interface declaration  for time stamped. It allows to:

	Get time stamp

329. Changes to package org.springframework.tests.aop.advice:  

329.1. Add a class for counting after returning advice. It allows to:

	Process counting after returning advice counting after returning advice after returning

329.2. Add a class for counting before advice. It allows to:

	Before counting before advice

329.3. Add a class for method counter. It allows to:

	Handle count;
	Get calls;
	Check if method counter equals;
	Hash code

329.4. Add a class for my throws handler. It allows to:

	Process my throws handler my throws handler after throwing;

329.5. Add a class for timestamp introduction advisor. It allows to:

	Instantiate timestamp introduction advisor

330. Changes to package org.springframework.tests.aop.interceptor:  

330.1. Add a class for nop interceptor. It allows to:

	Invoke method invocation;
	Handle increment;
	Get count;
	Check if nop interceptor equals;
	Hash code

330.2. Add a class for serializable nop interceptor. It allows to:

	Get count;
	Handle increment

330.3. Add a class for timestamp introduction interceptor. It allows to:

	Instantiate timestamp introduction interceptor;
	Set time;
	Get time stamp

331. Changes to package org.springframework.tests.beans:  

331.1. Add a class for collecting reader event listener. It allows to:

	Handle defaults registered;
	Get defaults;
	Handle component registered;
	Get component definition;
	Get component definitions;
	Handle alias registered;
	Get aliases;
	Handle import processed;
	Get imports

332. Changes to package org.springframework.tests.context:  

332.1. Add a class for simple map scope. It allows to:

	Instantiate simple map scope;
	Get map;
	Get object factory;
	Remove simple map scope;
	Register destruction callback;
	Resolve contextual object;
	Close simple map scope;
	Get conversation id

332.2. Add a class for test method invoking task. It allows to:

	Do something;
	Wait test method invoking task;
	Stop test method invoking task

333. Changes to package org.springframework.tests.mock.jndi:  

333.1. Add a class for expected lookup template. It allows to:

	Instantiate expected lookup template;
	Add object;
	Get lookup

333.2. Add a class for simple naming context builder. It allows to:

	Get current context builder;
	Handle empty activated context builder;
	Activate simple naming context builder;
	Deactivate simple naming context builder;
	Handle clear;
	Handle bind;
	Create initial context factory

334. Changes to package org.springframework.tests.sample.beans:  

334.1. Add a class for bean with object property. It allows to:

	Get object;
	Set object

334.2. Add a class for boolean test bean. It allows to:

	Check if boolean test bean is bool 1;
	Set bool 1;
	Get bool 2;
	Set bool 2

334.3. Add a class for color. It allows to:

	Instantiate color;
	Convert color to string

334.4. Add a class for counting test bean. It allows to:

	Instantiate counting test bean

334.5. Add a class for dependencies bean. It allows to:

	Set age;
	Get age;
	Set name;
	Get name;
	Set spouse;
	Get spouse;
	Set bean factory;
	Get bean factory

334.6. Add a class for derived test bean. It allows to:

	Instantiate derived test bean;
	Create derived test bean;
	Set bean name;
	Get bean name;
	Set actual spouse;
	Set spouse ref;
	Get spouse;
	Initialize derived test bean;
	Get was initialized;
	Destroy derived test bean;
	Get was destroyed

334.7. Add a class for dummy bean. It allows to:

	Instantiate dummy bean;
	Instantiate dummy bean  with spouse test bean;
	Get value;
	Get name;
	Get age;
	Get spouse

334.8. Add a class for dummy factory. It allows to:

	Reset dummy factory;
	Instantiate dummy factory;
	Check if dummy factory is singleton;
	Set singleton;
	Set bean name;
	Get bean name;
	Set bean factory;
	Get bean factory;
	Set post processed;
	Check if dummy factory is post processed;
	Set other test bean;
	Get other test bean;
	Handle after properties set;
	Get was initialized;
	Get was prototype created;
	Get object;
	Get object type;
	Destroy dummy factory

334.9. Add a class for employee. It allows to:

	Instantiate employee;
	Get company;
	Get set company

334.10. Add a class for factory methods. It allows to:

	Handle null instance

334.11. Add a class for field access bean. It allows to:

	Get name;
	Get age;
	Get spouse

334.12. Add a class for generic bean. It allows to:

	Instantiate generic bean;
	Instantiate generic bean  with integer set;
	Instantiate generic bean  with integer set, resource list and resource list;
	Instantiate generic bean  with integer set, short map and short map;
	Instantiate generic bean  with short map, resource and resource;
	Instantiate generic bean  with plain map, short map and short map;
	Instantiate generic bean  with long map;
	Instantiate generic bean  with collection map;
	Get integer set;
	Set integer set;
	Get number set;
	Set number set;
	Get test bean set;
	Set test bean set;
	Get resource list;
	Set resource list;
	Get test bean list;
	Set test bean list;
	Get list  of lists;
	Get list  of arrays;
	Set list  of arrays;
	Set list  of lists;
	Get list  of maps;
	Set list  of maps;
	Get plain map;
	Get short map;
	Set short map;
	Get generic bean long map;
	Set long map;
	Get collection map;
	Set collection map;
	Get map  of maps;
	Set map  of maps;
	Get map  of lists;
	Set map  of lists;
	Get generic property;
	Set generic property;
	Get generic list property;
	Set generic list property;
	Get custom enum;
	Set custom enum;
	Get custom enum array;
	Set custom enum array;
	Get custom enum set;
	Set custom enum set;
	Get custom enum set mismatch;
	Set custom enum set mismatch;
	Get standard enum set;
	Set standard enum set;
	Get standard enum map;
	Set standard enum map;
	Create instance;

334.13. Add a class for generic integer bean

334.14. Add a class for generic set of integer bean

334.15. Add a class for has map. It allows to:

	Instantiate has map;
	Get map;
	Set map;
	Set has map;
	Set set;
	Get props;
	Set props;
	Get object array;
	Set object array;
	Get integer array;
	Set integer array;
	Get class array;
	Set class array;
	Get class list;
	Set class list;
	Get identity map;
	Set identity map;
	Get concurrent set;
	Set concurrent set

334.16. Add an interface declaration  for i nested test bean. It allows to:

	Get company

334.17. Add an interface declaration  for i other. It allows to:

	Handle absquatulate

334.18. Add an interface declaration  for i test bean. It allows to:

	Get name;
	Set name;
	Get spouse;
	Set spouse;
	Get spouses;
	Get string array;
	Set string array;
	Get nested integer array;
	Get some integer array;
	Set some integer array;
	Set nested integer array;
	Get some int array;
	Set some int array;
	Get nested int array;
	Set nested int array;
	Handle exceptional;
	Get returns this;
	Get doctor;
	Get lawyer;
	Get nested indexed bean;
	Have birthday;
	Handle unreliable file operation

334.19. Add a class for indexed test bean. It allows to:

	Instantiate indexed test bean;
	Populate indexed test bean;
	Get array;
	Set array;
	Get collection;
	Set collection;
	Get list;
	Set list;
	Set indexed test bean;
	Set set;
	Get sorted set;
	Set sorted set;
	Get map;
	Set map;
	Get sorted map;
	Set sorted map

334.20. Add a class for must be initialized. It allows to:

	Handle after properties set;
	Handle business method

334.21. Add a class for nested test bean. It allows to:

	Instantiate nested test bean;
	Get set company;
	Get company;
	Check if nested test bean equals;
	Hash code;
	Convert nested test bean to string

334.22. Add a class for number test bean. It allows to:

	Get short 1;
	Set short 1;
	Get short 2;
	Set short 2;
	Get int 1;
	Set int 1;
	Get int 2;
	Set int 2;
	Get number test bean long 1;
	Set number test bean long 1;
	Get number test bean long 2;
	Set number test bean long 2;
	Get big integer;
	Set big integer;
	Get number test bean;
	Set float 1;
	Set float 2;
	Get number test bean double 1;
	Set double 1;
	Get double 2;
	Set double 2;
	Get big decimal;
	Set big decimal

334.23. Add a class for package level visible bean

334.24. Add an interface declaration  for person. It allows to:

	Get name;
	Set name;
	Get age;
	Set age;
	Echo person

334.25. Add a class for pet. It allows to:

	Instantiate pet;
	Get name;
	Convert pet to string;
	Check if pet equals;
	Hash code

334.26. Add a class for resource test bean. It allows to:

	Instantiate resource test bean;
	Instantiate resource test bean  with resource, input stream and input stream;
	Get resource;
	Set resource;
	Get context resource;
	Set context resource;
	Get input stream;
	Set input stream;
	Get resource array;
	Set resource array;
	Get resource map;
	Set resource map;
	Get resource array map;
	Set resource array map

334.27. Add a class for serializable person. It allows to:

	Get name;
	Set name;
	Get age;
	Set age;
	Echo serializable person;
	Check if serializable person equals;
	Hash code

334.28. Add a class for side effect bean. It allows to:

	Set count;
	Get count;
	Do work

334.29. Add a class for test bean. It allows to:

	Instantiate test bean;
	Instantiate test bean  with spouse test bean;
	Instantiate test bean  with spouse test bean, some properties and some properties;
	Instantiate test bean  with some list;
	Instantiate test bean  with some set;
	Instantiate test bean  with some map;
	Instantiate test bean  with some properties;
	Set bean name;
	Get bean name;
	Set bean factory;
	Get bean factory;
	Set post processed;
	Check if test bean is post processed;
	Get name;
	Set name;
	Get sex;
	Set sex;
	Get age;
	Set age;
	Check if test bean is jedi;
	Set jedi;
	Get spouse;
	Set spouse;
	Get spouses;
	Get touchy;
	Set touchy;
	Get country;
	Set country;
	Get string array;
	Set string array;
	Get some integer array;
	Set some integer array;
	Get nested integer array;
	Set nested integer array;
	Get some int array;
	Set some int array;
	Get nested int array;
	Set nested int array;
	Get date;
	Set date;
	Get my float;
	Set my float;
	Get friends;
	Set friends;
	Get some set;
	Set some set;
	Get some map;
	Set some map;
	Get some list;
	Set some list;
	Get some properties;
	Set some properties;
	Get doctor;
	Set doctor;
	Get lawyer;
	Set lawyer;
	Get some number;
	Set some number;
	Get favorite color;
	Set favorite color;
	Get some boolean;
	Set some boolean;
	Get nested indexed bean;
	Set nested indexed bean;
	Get other colors;
	Set other colors;
	Get pets;
	Set pets;
	Handle exceptional;
	Handle unreliable file operation;
	Get returns this;
	Handle absquatulate;
	Have birthday;
	Destroy test bean;
	Get was destroyed;
	Check if test bean equals;
	Hash code;
	Compare test bean to;
	Convert test bean to string

335. Changes to package org.springframework.tests.sample.beans.factory:  

335.1. Add a class for dummy factory. It allows to:

	Reset dummy factory;
	Instantiate dummy factory;
	Check if dummy factory is singleton;
	Set singleton;
	Set bean name;
	Get bean name;
	Set bean factory;
	Get bean factory;
	Set post processed;
	Check if dummy factory is post processed;
	Set other test bean;
	Get other test bean;
	Handle after properties set;
	Get was initialized;
	Get was prototype created;
	Get object;
	Get object type;
	Destroy dummy factory

336. Changes to package org.springframework.tests.sample.beans.subpkg:  

336.1. Add a class for deep bean. It allows to:

	A method

337. Changes to package org.springframework.tests.sample.objects:  

337.1. Add a class for derived test object

337.2. Add a class for generic object. It allows to:

	Get resource list;
	Set resource list

337.3. Add an interface declaration  for i test interface. It allows to:

	Handle absquatulate

337.4. Add an interface declaration  for i test object. It allows to:

	Get name;
	Set name;
	Get age;
	Set age;
	Get spouse;
	Set spouse

337.5. Add a class for test object. It allows to:

	Instantiate test object;
	Get name;
	Set name;
	Get age;
	Set age;
	Get spouse;
	Set spouse;
	Handle absquatulate;
	Compare test object to

338. Changes to package org.springframework.tests.transaction:  

338.1. Add a class for call counting transaction manager. It allows to:

	Do get transaction;
	Begin transaction definition;
	Commit default transaction status;
	Do rollback;
	Handle clear

338.2. Add a class for mock jta transaction. It allows to:

	Get status;
	Register synchronization;
	Get synchronization;
	Enlist resource;
	Delist resource;
	Commit mock jta transaction;
	Handle rollback;
	Set rollback  only

339. Changes to package org.springframework.transaction:  

339.1. Add a class for can not create transaction exception. It allows to:

	Instantiate can not create transaction exception;
	Instantiate can not create transaction exception  with cause throwable

339.2. Add a class for heuristic completion exception. It allows to:

	Get state string;
	Instantiate heuristic completion exception  with cause throwable;
	Get outcome state

339.3. Add a class for illegal transaction state exception. It allows to:

	Instantiate illegal transaction state exception;
	Instantiate illegal transaction state exception  with cause throwable

339.4. Add a class for invalid isolation level exception. It allows to:

	Instantiate invalid isolation level exception

339.5. Add a class for invalid timeout exception. It allows to:

	Instantiate invalid timeout exception;
	Get timeout

339.6. Add a class for jndi jta transaction manager tests. It allows to:

	Handle jta transaction manager with default jndi lookups 1;
	Handle jta transaction manager with default jndi lookups 2;
	Handle jta transaction manager with default jndi lookups and no tm found;
	Handle jta transaction manager with default jndi lookups and no ut found;
	Do test jta transaction manager  with default jndi lookups;
	Do transaction status in transaction without result;
	Handle jta transaction manager with custom jndi lookups;
	Handle jta transaction manager with not cache user transaction;
	Tear jndi jta transaction manager tests

339.7. Add a class for jta transaction manager tests. It allows to:

	Handle jta transaction manager with commit;
	Do transaction status in transaction without result;
	Handle jta transaction manager with commit and synchronization on actual;
	Handle jta transaction manager with commit and synchronization never;
	Handle jta transaction manager with rollback;
	Handle jta transaction manager with rollback and synchronization on actual;
	Handle jta transaction manager with rollback and synchronization never;
	Handle jta transaction manager with existing transaction and rollback only;
	Handle jta transaction manager with existing transaction and exception;
	Handle jta transaction manager with existing transaction and commit exception;
	Handle jta transaction manager with existing transaction and rollback only and no global rollback;
	Handle jta transaction manager with existing transaction and exception and no global rollback;
	Handle jta transaction manager with existing transaction and jta synchronization;
	Handle jta transaction manager with existing transaction and synchronization on actual;
	Handle jta transaction manager with existing transaction and synchronization never;
	Handle jta transaction manager with existing and propagation supports;
	Handle jta transaction manager with propagation supports;
	Handle jta transaction manager with propagation supports and synchronization on actual;
	Handle jta transaction manager with propagation supports and synchronization never;
	Handle jta transaction manager with propagation not supported;
	Handle jta transaction manager with propagation requires new;
	Handle jta transaction manager with propagation requires new within supports;
	Handle jta transaction manager with propagation requires new and existing;
	Handle jta transaction manager with propagation requires new and existing with suspend exception;
	Handle jta transaction manager with propagation requires new and existing with begin exception;
	Handle jta transaction manager with propagation requires new and adapter;
	Handle jta transaction manager with propagation requires new and suspension not supported;
	Handle jta transaction manager with isolation level;
	Handle jta transaction manager with system exception on is existing;
	Handle jta transaction manager with nested begin;
	Handle jta transaction manager with not supported exception on nested begin;
	Handle jta transaction manager with unsupported operation exception on nested begin;
	Handle jta transaction manager with system exception on begin;
	Handle jta transaction manager with rollback exception on commit;
	Process  after completion;
	Handle jta transaction manager with no exception on global rollback only;
	Handle jta transaction manager with no exception on global rollback only and fail early;
	Do test jta transaction manager  with no exception on global rollback only;
	Handle jta transaction manager with heuristic mixed exception on commit;
	Handle jta transaction manager with heuristic rollback exception on commit;
	Handle jta transaction manager with system exception on commit;
	Handle jta transaction manager with system exception on rollback;
	Handle jta transaction manager with illegal state exception on rollback only;
	Handle jta transaction manager with system exception on rollback only;
	Handle jta transaction manager with double commit;
	Handle jta transaction manager with double rollback;
	Handle jta transaction manager with rollback and commit;
	Handle new jta transaction manager;
	Tear jta transaction manager tests

339.8. Add a class for mock callback preferring transaction manager. It allows to:

	Execute transaction definition;
	Get definition;
	Get status;
	Get transaction;
	Commit transaction status;
	Handle rollback

339.9. Add a class for nested transaction not supported exception. It allows to:

	Instantiate nested transaction not supported exception;
	Instantiate nested transaction not supported exception  with cause throwable

339.10. Add a class for no transaction exception. It allows to:

	Instantiate no transaction exception;
	Instantiate no transaction exception  with cause throwable

339.11. Add an interface declaration  for platform transaction manager. It allows to:

	Get transaction;
	Commit transaction status;
	Handle rollback

339.12. Add an interface declaration  for savepoint manager. It allows to:

	Create savepoint;
	Convert rollback;
	Release savepoint

339.13. Add a class for test transaction manager. It allows to:

	Instantiate test transaction manager;
	Do get transaction;
	Check if test transaction manager is existing transaction;
	Begin transaction definition;
	Commit default transaction status;
	Do rollback;
	Do set rollback  only default transaction status

339.14. Add an interface declaration  for transaction definition. It allows to:

	Get propagation behavior;
	Get isolation level;
	Get timeout;
	Check if transaction definition is read only;
	Get name

339.15. Add a class for transaction exception. It allows to:

	Instantiate transaction exception;
	Instantiate transaction exception  with cause throwable

339.16. Add an interface declaration  for transaction status. It allows to:

	Check if transaction status is new transaction;
	Check if transaction status has savepoint;
	Set rollback  only;
	Check if transaction status is rollback only;
	Handle flush;
	Check if transaction status is completed

339.17. Add a class for transaction support tests. It allows to:

	No existing transaction;
	Existing transaction;
	Commit transaction support tests without existing transaction;
	Handle rollback without existing transaction;
	Handle rollback only without existing transaction;
	Commit transaction support tests with existing transaction;
	Handle rollback with existing transaction;
	Handle rollback only with existing transaction;
	Handle transaction template;
	Do transaction status in transaction without result;
	Handle transaction template with callback preference;
	Handle transaction template with exception;
	Handle transaction template with rollback exception;
	Do rollback;
	Handle transaction template with error;
	Handle transaction template initialization;
	Handle transaction template equality;
	Handle clear

339.18. Add a class for transaction suspension not supported exception. It allows to:

	Instantiate transaction suspension not supported exception;
	Instantiate transaction suspension not supported exception  with cause throwable

339.19. Add a class for transaction system exception. It allows to:

	Instantiate transaction system exception;
	Instantiate transaction system exception  with cause throwable;
	Handle init application exception;
	Get application exception;
	Get original exception;
	Check if transaction system exception contains

339.20. Add a class for transaction timed out exception. It allows to:

	Instantiate transaction timed out exception;
	Instantiate transaction timed out exception  with cause throwable

339.21. Add a class for transaction usage exception. It allows to:

	Instantiate transaction usage exception;
	Instantiate transaction usage exception  with cause throwable

339.22. Add a class for tx namespace handler event tests. It allows to:

	Set tx namespace handler event tests;
	Handle component event received

339.23. Add a class for tx namespace handler tests. It allows to:

	Handle setup;
	Check if tx namespace handler tests is proxy;
	Invoke transactional;
	Handle rollback rules;
	Get test bean

339.24. Add a class for unexpected rollback exception. It allows to:

	Instantiate unexpected rollback exception;
	Instantiate unexpected rollback exception  with cause throwable

340. Changes to package org.springframework.transaction.annotation:  

340.1. Add a class for abstract transaction management configuration. It allows to:

	Set import metadata;
	Set configurers;
	Handle transactional event listener factory

340.2. Add a class for annotation transaction attribute source. It allows to:

	Instantiate annotation transaction attribute source;
	Instantiate annotation transaction attribute source  with transaction annotation parser;
	Instantiate annotation transaction attribute source  with annotation parser;
	Instantiate annotation transaction attribute source  with annotation parsers set;
	Check if annotation transaction attribute source is candidate class;
	Find transaction attribute;
	Determine transaction attribute;
	Allow public methods  only;
	Check if annotation transaction attribute source equals;
	Hash code

340.3. Add a class for jta transaction annotation parser. It allows to:

	Check if jta transaction annotation parser is candidate class;
	Parse transaction annotation;
	Check if jta transaction annotation parser equals;
	Hash code

340.4. Add a class for proxy annotation discovery tests. It allows to:

	Handle annotated service without interface PTC true;
	Handle annotated service without interface PTC false;
	Non annotated service PTC true;
	Non annotated service PTC false;
	Handle annotated service PTC true;
	Handle annotated service PTC false

Add a local a class for pTC false

Add a local a class for pTC true

Add a local an interface declaration  for non annotated service. It allows to:

	M non annotated service

Add a local an interface declaration  for annotated service. It allows to:

	M annotated service

Add a local a class for non annotated service impl. It allows to:

	M non annotated service impl

Add a local a class for annotated service impl. It allows to:

	M annotated service impl

Add a local a class for annotated service without interface. It allows to:

	M annotated service without interface

340.5. Add a class for proxy transaction management configuration. It allows to:

	Get transaction advisor;
	Get transaction attribute source;
	Get transaction interceptor

340.6. Add a class for spring transaction annotation parser. It allows to:

	Check if spring transaction annotation parser is candidate class;
	Parse transaction annotation;
	Check if spring transaction annotation parser equals;
	Hash code

340.7. Add an interface declaration  for transaction annotation parser. It allows to:

	Check if transaction annotation parser is candidate class;
	Parse transaction annotation

340.8. Add a class for transaction management configuration selector. It allows to:

	Handle select imports;
	Determine transaction aspect class

340.9. Add an interface declaration  for transaction management configurer. It allows to:

	Get annotation driven transaction manager

341. Changes to package org.springframework.transaction.aspectj:  

341.1. Add a class for aspect J transaction management configuration. It allows to:

	Get transaction aspect

341.2. Add a class for class with private annotated member. It allows to:

	Do something;
	Do class with private annotated member in transaction

341.3. Add a class for class with protected annotated member. It allows to:

	Do something;
	Do class with protected annotated member in transaction

341.4. Add an interface declaration  for i transactional. It allows to:

	Echo throwable

341.5. Add a class for method annotation on class with no interface. It allows to:

	Echo throwable;
	No transaction attribute

341.6. Add a class for transactional annotation only on class with no interface. It allows to:

	Echo throwable;
	Non transactional method

342. Changes to package org.springframework.transaction.config:  

342.1. Add a class for jta transaction manager bean definition parser. It allows to:

	Get bean class name;
	Resolve id

342.2. Add a class for jta transaction manager factory bean. It allows to:

	Instantiate jta transaction manager factory bean;
	Handle after properties set;
	Get object;
	Get object type;
	Check if jta transaction manager factory bean is singleton;
	Resolve jta transaction manager class name

342.3. Add a class for no synch transaction manager. It allows to:

	Instantiate no synch transaction manager

342.4. Add a class for synch transaction manager

342.5. Add a class for transaction management config utils

342.6. Add a class for transaction manager configuration. It allows to:

	Get transaction manager 1;
	Convert transaction manager

342.7. Add a class for transactional service. It allows to:

	Set something;
	Do something

342.8. Add a class for tx advice bean definition parser. It allows to:

	Get bean class;
	Parse element;
	Parse attribute source;
	Add rollback rule attributes  to rollback rules list;
	Add no rollback rule attributes  to rollback rules list

342.9. Add a class for tx namespace handler. It allows to:

	Get transaction manager name;
	Handle init

343. Changes to package org.springframework.transaction.event:  

343.1. Add a class for transactional event listener factory. It allows to:

	Get set order;
	Get order;
	Check if transactional event listener factory supports method;
	Create application listener

344. Changes to package org.springframework.transaction.interceptor:  

344.1. Add a class for abstract fallback transaction attribute source. It allows to:

	Convert to string;
	Get transaction attribute;
	Get cache key;
	Compute transaction attribute;
	Find transaction attribute;
	Allow public methods  only

344.2. Add a class for abstract transaction aspect tests. It allows to:

	Handle setup;
	No transaction;
	Handle transaction should succeed;
	Handle transaction should succeed with callback preference;
	Handle transaction exception propagated with callback preference;
	Two transactions should succeed;
	Handle transaction should succeed with not new;
	Enclosing transaction  with non transaction method on advised inside;
	Handle exceptional;
	Get name;
	Enclosing transaction  with nested transaction on advised inside;
	Handle rollback on checked exception;
	No rollback  on checked exception;
	Handle rollback on unchecked exception;
	No rollback  on unchecked exception;
	Handle rollback on checked exception with rollback exception;
	No rollback  on checked exception with rollback exception;
	Handle rollback on unchecked exception with rollback exception;
	No rollback  on unchecked exception with rollback exception;
	Do test rollback  on exception;
	Handle rollback on;
	Handle programmatic rollback;
	Can abstract transaction aspect tests not create transaction;
	Can abstract transaction aspect tests not commit transaction;
	Check transaction status;
	Get advised;

344.3. Add a class for bean factory transaction attribute source advisor. It allows to:

	Get transaction attribute source;
	Set transaction attribute source;
	Set class filter;
	Get pointcut

344.4. Add a class for composite transaction attribute source. It allows to:

	Instantiate composite transaction attribute source  with transaction attribute sources;
	Get transaction attribute sources;
	Check if composite transaction attribute source is candidate class;
	Get transaction attribute

344.5. Add a class for default transaction attribute. It allows to:

	Instantiate default transaction attribute;
	Instantiate default transaction attribute  with other transaction attribute;
	Set qualifier;
	Get qualifier;
	Set descriptor;
	Get descriptor;
	Handle rollback on;
	Get attribute description

344.6. Add a class for delegating transaction attribute. It allows to:

	Instantiate delegating transaction attribute  with target attribute;
	Get qualifier;
	Handle rollback on

344.7. Add a class for implements no interfaces. It allows to:

	Set dependency;
	Get name;
	Set name

344.8. Add a class for map transaction attribute source. It allows to:

	Register clazz class;
	Register method;
	Find transaction attribute;

344.9. Add a class for match always transaction attribute source. It allows to:

	Set transaction attribute;
	Get transaction attribute;
	Check if match always transaction attribute source equals;
	Hash code;
	Convert match always transaction attribute source to string

344.10. Add a class for method map transaction attribute source. It allows to:

	Set method map;
	Set bean class loader;
	Handle after properties set;
	Handle init method map;
	Add transactional method;
	Check if method map transaction attribute source is match;
	Get transaction attribute;
	Check if method map transaction attribute source equals;
	Hash code;
	Convert method map transaction attribute source to string

344.11. Add a class for my runtime exception. It allows to:

	Instantiate my runtime exception

344.12. Add a class for name match transaction attribute source. It allows to:

	Set name map;
	Set properties;
	Add transactional method;
	Get transaction attribute;
	Check if name match transaction attribute source is match;
	Check if name match transaction attribute source equals;
	Hash code;
	Convert name match transaction attribute source to string

344.13. Add a class for no rollback rule attribute. It allows to:

	Instantiate no rollback rule attribute  with clazz class;
	Instantiate no rollback rule attribute;
	Convert no rollback rule attribute to string

344.14. Add a class for platform transaction manager facade. It allows to:

	Get transaction;
	Commit transaction status;
	Handle rollback

344.15. Add a class for rollback rule attribute. It allows to:

	Instantiate rollback rule attribute  with clazz class;
	Instantiate rollback rule attribute;
	Get exception name;
	Get depth;
	Check if rollback rule attribute equals;
	Hash code;
	Convert rollback rule attribute to string

344.16. Add a class for rollback rule tests. It allows to:

	Get found immediately with string;
	Get found immediately with class;
	Handle not found;
	Handle ancestry;
	Always true  for throwable;
	Ctor arg must be A throwable class  with non throwable type;
	Ctor arg must be A throwable class  with null throwable type;
	Ctor arg exception string name version  with null

344.17. Add a class for rule based transaction attribute. It allows to:

	Instantiate rule based transaction attribute;
	Instantiate rule based transaction attribute  with other rule based transaction attribute;
	Instantiate rule based transaction attribute  with rollback rules list;
	Set rollback rules;
	Get rollback rules;
	Handle rollback on;
	Convert rule based transaction attribute to string

344.18. Add an interface declaration  for transaction attribute. It allows to:

	Get qualifier;
	Handle rollback on

344.19. Add a class for transaction attribute editor. It allows to:

	Get set as text

344.20. Add a class for transaction attribute editor tests. It allows to:

	Handle test null;
	Handle test empty string;
	Handle test valid propagation code only;
	Handle test invalid propagation code only;
	Handle test valid propagation code and isolation code;
	Handle test valid propagation and isolation codes and invalid rollback rule;
	Handle test valid propagation code and isolation code and rollback rules 1;
	Convert test valid propagation code and isolation code and rollback rules;
	Convert test default transaction attribute;
	Convert test rule based transaction attribute

344.21. Add an interface declaration  for transaction attribute source. It allows to:

	Check if transaction attribute source is candidate class;
	Get transaction attribute

344.22. Add a class for transaction attribute source advisor. It allows to:

	Get transaction attribute source;
	Instantiate transaction attribute source advisor;
	Instantiate transaction attribute source advisor  with transaction interceptor;
	Set transaction interceptor;
	Set class filter;
	Get advice;
	Get pointcut

344.23. Add a class for transaction attribute source advisor tests. It allows to:

	Handle serializability

344.24. Add a class for transaction attribute source editor. It allows to:

	Get set as text

344.25. Add a class for transaction attribute source editor tests. It allows to:

	Handle null value;
	Handle invalid format;
	Handle matches specific;
	Check if transaction attribute source editor tests matches all;
	Check transaction properties

344.26. Add a class for transaction attribute source tests. It allows to:

	Match transaction attribute source tests always transaction attribute source;
	Name match transaction attribute source  with star at start of method name;
	Name match transaction attribute source  with star at end of method name;
	Name match transaction attribute source  most specific method name is definitely matched;
	Name match transaction attribute source  with empty method name

344.27. Add a class for transaction interceptor. It allows to:

	Instantiate transaction interceptor;
	Instantiate transaction interceptor  with ptm platform transaction manager, attributes properties and attributes properties;
	Instantiate transaction interceptor  with ptm platform transaction manager, tas transaction attribute source and tas transaction attribute source;
	Invoke method invocation;
	Write object;
	Read object

344.28. Add a class for transaction proxy factory bean. It allows to:

	Set transaction manager;
	Set transaction attributes;
	Set transaction attribute source;
	Set pointcut;
	Set bean factory;
	Create main interceptor;
	Post process proxy factory

344.29. Add an interface declaration  for transactional proxy

345. Changes to package org.springframework.transaction.jta:  

345.1. Add a class for jta after completion synchronization. It allows to:

	Instantiate jta after completion synchronization  with synchronizations list;
	Process jta after completion synchronization jta after completion synchronization before completion;
	Process jta after completion synchronization jta after completion synchronization after completion

345.2. Add a class for jta transaction manager. It allows to:

	Instantiate jta transaction manager;
	Instantiate jta transaction manager  with user transaction;
	Instantiate jta transaction manager  with user transaction, transaction manager and transaction manager;
	Instantiate jta transaction manager  with transaction manager;
	Set jndi template;
	Get jndi template;
	Set jndi environment;
	Get jndi environment;
	Set user transaction;
	Get user transaction;
	Set user transaction name;
	Set autodetect user transaction;
	Set cache user transaction;
	Set transaction manager;
	Get transaction manager;
	Set transaction manager name;
	Set autodetect transaction manager;
	Set transaction synchronization registry;
	Get transaction synchronization registry;
	Set transaction synchronization registry name;
	Set autodetect transaction synchronization registry;
	Set allow custom isolation levels;
	Handle after properties set;
	Init user transaction and transaction manager;
	Check user transaction and transaction manager;
	Handle init transaction synchronization registry;
	Build user transaction;
	Lookup user transaction;
	Lookup transaction manager;
	Lookup transaction synchronization registry;
	Retrieve user transaction;
	Retrieve transaction manager;
	Retrieve transaction synchronization registry;
	Find user transaction;
	Find transaction manager;
	Find transaction synchronization registry;
	Do get transaction;
	Do get jta transaction;
	Check if jta transaction manager is existing transaction;
	Use savepoint  for nested transaction;
	Begin transaction definition;
	Do jta begin;
	Apply isolation level;
	Apply timeout;
	Suspend jta transaction manager;
	Do jta suspend;
	Resume jta transaction manager;
	Do jta resume;
	Should commit  on global rollback only;
	Commit default transaction status;
	Do rollback;
	Do set rollback  only default transaction status;
	Register synchronizations list after completion with existing transaction;
	Do register  after completion with jta transaction;
	Do cleanup  after completion;
	Create transaction;
	Handle supports resource adapter managed transactions;
	Read object

345.3. Add a class for jta transaction object. It allows to:

	Instantiate jta transaction object  with user transaction;
	Get user transaction;
	Check if jta transaction object is rollback only;
	Handle flush

345.4. Add a class for managed transaction adapter. It allows to:

	Instantiate managed transaction adapter  with transaction manager;
	Get transaction manager;
	Commit managed transaction adapter;
	Handle rollback;
	Set rollback  only;
	Get status;
	Enlist resource;
	Delist resource;
	Register synchronization

345.5. Add a class for mock UOW manager. It allows to:

	Run UOW action under UOW;
	Get UOW type;
	Joined mock UOW manager;
	Get local UOW id;
	Set UOW timeout;
	Get UOW timeout;
	Set rollback  only;
	Get rollback  only;
	Set UOW status;
	Get UOW status;
	Put resource;
	Get resource;
	Register interposed synchronization;
	Get synchronizations

345.6. Add a class for simple transaction factory. It allows to:

	Instantiate simple transaction factory  with transaction manager;
	Create transaction;
	Handle supports resource adapter managed transactions

345.7. Add a class for spring jta synchronization adapter. It allows to:

	Instantiate spring jta synchronization adapter  with spring synchronization;
	Instantiate spring jta synchronization adapter  with spring synchronization, jta user transaction and jta user transaction;
	Instantiate spring jta synchronization adapter  with spring synchronization, jta transaction manager and jta transaction manager;
	Process spring jta synchronization adapter spring jta synchronization adapter before completion;
	Set rollback  only if possible;
	Process spring jta synchronization adapter spring jta synchronization adapter after completion

345.8. Add an interface declaration  for transaction factory. It allows to:

	Create transaction;
	Handle supports resource adapter managed transactions

345.9. Add a class for user transaction adapter. It allows to:

	Instantiate user transaction adapter  with transaction manager;
	Get transaction manager;
	Set transaction timeout;
	Begin user transaction adapter;
	Commit user transaction adapter;
	Handle rollback;
	Set rollback  only;
	Get status

345.10. Add a class for web logic jta transaction manager. It allows to:

	Handle after properties set;
	Retrieve user transaction;
	Retrieve transaction manager;
	Load web logic transaction helper;
	Load web logic transaction classes;
	Obtain transaction manager;
	Do jta begin;
	Do jta resume;
	Create transaction

345.11. Add a class for web sphere uow transaction manager tests. It allows to:

	Handle uow manager found in jndi;
	Do transaction status in transaction;
	Handle uow manager and user transaction found in jndi;
	Handle propagation mandatory fails in case of no existing transaction;
	Handle new transaction synchronization using propagation supports;
	Handle new transaction synchronization using propagation not supported;
	Handle new transaction synchronization using propagation never;
	Handle new transaction synchronization using propagation supports and synch on actual;
	Handle new transaction synchronization using propagation not supported and synch on actual;
	Handle new transaction synchronization using propagation never and synch on actual;
	Handle new transaction synchronization using propagation supports and synch never;
	Handle new transaction synchronization using propagation not supported and synch never;
	Handle new transaction synchronization using propagation never and synch never;
	Do test new transaction synchronization;
	Handle new transaction with commit using propagation required;
	Handle new transaction with commit using propagation requires new;
	Handle new transaction with commit using propagation nested;
	Handle new transaction with commit using propagation required and synch on actual;
	Handle new transaction with commit using propagation requires new and synch on actual;
	Handle new transaction with commit using propagation nested and synch on actual;
	Handle new transaction with commit using propagation required and synch never;
	Handle new transaction with commit using propagation requires new and synch never;
	Handle new transaction with commit using propagation nested and synch never;
	Do test new transaction  with commit;
	Handle new transaction with commit and timeout;
	Handle new transaction with commit exception;
	Run UOW action under UOW;
	Handle new transaction with rollback;
	Handle new transaction with rollback only;
	Existing non spring transaction;
	Handle propagation never fails in case of existing transaction;
	Handle propagation nested fails in case of existing transaction;
	Existing transaction  with participation using propagation required;
	Existing transaction  with participation using propagation supports;
	Existing transaction  with participation using propagation mandatory;
	Do test existing transaction  with participation;
	Existing transaction  with suspension using propagation requires new;
	Existing transaction  with suspension using propagation not supported;
	Do test existing transaction  with suspension;
	Existing transaction using propagation  not supported;

346. Changes to package org.springframework.transaction.support:  

346.1. Add a class for abstract transaction status. It allows to:

	Set rollback  only;
	Check if abstract transaction status is rollback only;
	Check if abstract transaction status is local rollback only;
	Check if abstract transaction status is global rollback only;
	Handle flush;
	Completed abstract transaction status;
	Check if abstract transaction status is completed;
	Set savepoint;
	Get savepoint;
	Check if abstract transaction status has savepoint;
	Create and hold savepoint;
	Convert rollback;
	Release held savepoint;
	Create savepoint;
	Release savepoint;
	Get savepoint manager

346.2. Add an interface declaration  for callback preferring platform transaction manager. It allows to:

	Execute transaction definition

346.3. Add a class for default transaction definition. It allows to:

	Instantiate default transaction definition;
	Instantiate default transaction definition  with other transaction definition;
	Set propagation behavior name;
	Set propagation behavior;
	Get propagation behavior;
	Set isolation level name;
	Set isolation level;
	Get isolation level;
	Set timeout;
	Get timeout;
	Set read  only;
	Check if default transaction definition is read only;
	Set name;
	Get name;
	Check if default transaction definition equals;
	Hash code;
	Convert default transaction definition to string;
	Get definition description

346.4. Add a class for default transaction status. It allows to:

	Instantiate default transaction status;
	Get transaction;
	Check if default transaction status has transaction;
	Check if default transaction status is new transaction;
	Check if default transaction status is new synchronization;
	Check if default transaction status is read only;
	Check if default transaction status is debug;
	Get suspended resources;
	Check if default transaction status is global rollback only;
	Handle flush;
	Get savepoint manager;
	Check if default transaction status is transaction savepoint manager

346.5. Add a class for delegating transaction definition. It allows to:

	Instantiate delegating transaction definition  with target definition;
	Get propagation behavior;
	Get isolation level;
	Get timeout;
	Check if delegating transaction definition is read only;
	Get name;
	Check if delegating transaction definition equals;
	Hash code;
	Convert delegating transaction definition to string

346.6. Add a class for jta transaction manager serialization tests. It allows to:

	Handle serializable

346.7. Add an interface declaration  for resource holder. It allows to:

	Reset resource holder;
	Handle unbound;
	Check if resource holder is void

346.8. Add a class for resource holder support. It allows to:

	Set synchronized  with transaction;
	Check if resource holder support is synchronized with transaction;
	Set rollback  only;
	Reset rollback  only;
	Check if resource holder support is rollback only;
	Set timeout  in seconds;
	Set timeout  in millis;
	Check if resource holder support has timeout;
	Get deadline;
	Get time  to live in seconds;
	Get time  to live in millis;
	Check transaction timeout;
	Get requested;
	Get released;
	Check if resource holder support is open;
	Handle clear;
	Reset resource holder support;
	Handle unbound;
	Check if resource holder support is void

346.9. Add a class for resource holder synchronization. It allows to:

	Instantiate resource holder synchronization  with resource holder, resource key and resource key;
	Suspend resource holder synchronization;
	Resume resource holder synchronization;
	Handle flush;
	Commit commit;
	Process resource holder synchronization resource holder synchronization before completion;
	Process resource holder synchronization resource holder synchronization after completion;
	Should unbind  at completion;
	Should release  before completion;
	Should release  after completion;
	Handle flush resource;
	Handle process resource after commit;
	Release resource;
	Handle cleanup resource

346.10. Add an interface declaration  for resource transaction manager. It allows to:

	Get resource factory

346.11. Add a class for simple transaction scope tests. It allows to:

	Get simple transaction scope tests from scope;
	Get simple transaction scope tests with transaction manager

346.12. Add a class for simple transaction status. It allows to:

	Instantiate simple transaction status;
	Check if simple transaction status is new transaction

346.13. Add an interface declaration  for smart transaction object. It allows to:

	Check if smart transaction object is rollback only;
	Handle flush

346.14. Add an interface declaration  for transaction callback. It allows to:

	Do transaction status in transaction

346.15. Add a class for transaction callback without result. It allows to:

	Do transaction status in transaction;
	Do transaction status in transaction without result

346.16. Add an interface declaration  for transaction operations. It allows to:

	Execute transaction callback

346.17. Add an interface declaration  for transaction synchronization. It allows to:

	Suspend transaction synchronization;
	Resume transaction synchronization;
	Handle flush;
	Commit commit;
	Process transaction synchronization transaction synchronization before completion;
	Process transaction synchronization transaction synchronization after completion

346.18. Add a class for transaction synchronization adapter. It allows to:

	Get order;
	Suspend transaction synchronization adapter;
	Resume transaction synchronization adapter;
	Handle flush;
	Commit commit;
	Process transaction synchronization adapter transaction synchronization adapter before completion;
	Process transaction synchronization adapter transaction synchronization adapter after completion

346.19. Add a class for transaction synchronization manager. It allows to:

	Get resource map;
	Check if transaction synchronization manager has resource;
	Get resource;
	Do get resource;
	Handle bind resource;
	Unbind resource;
	Unbind resource  if possible;
	Do unbind resource;
	Check if transaction synchronization manager is synchronization active;
	Handle init synchronization;
	Register synchronization;
	Get synchronizations;
	Handle clear synchronization;
	Set current transaction name;
	Get current transaction name;
	Set current transaction read  only;
	Check if transaction synchronization manager is current transaction read only;
	Set current transaction isolation level;
	Get current transaction isolation level;
	Set actual transaction active;
	Check if transaction synchronization manager is actual transaction active;
	Handle clear

346.20. Add a class for transaction template. It allows to:

	Instantiate transaction template;
	Instantiate transaction template  with platform transaction manager;
	Instantiate transaction template  with platform transaction manager, transaction definition and transaction definition;
	Set transaction manager;
	Get transaction manager;
	Handle after properties set;
	Execute transaction callback;
	Handle rollback on exception;
	Check if transaction template equals

347. Changes to package org.springframework.ui:  

347.1. Add a class for extended model map. It allows to:

	Add attribute;
	Add all attributes;
	Merge attributes;
	Process extended model map extended model map as map

347.2. Add an interface declaration  for model. It allows to:

	Add attribute;
	Add all attributes;
	Merge attributes;
	Check if model contains attribute;
	Get attribute;
	Process model model as map

347.3. Add a class for model map. It allows to:

	Instantiate model map;
	Add attribute;
	Add all attributes;
	Merge attributes;
	Check if model map contains attribute;
	Get attribute

348. Changes to package org.springframework.ui.context:  

348.1. Add an interface declaration  for hierarchical theme source. It allows to:

	Set parent theme source;
	Get parent theme source

348.2. Add an interface declaration  for theme. It allows to:

	Get name;
	Get message source

348.3. Add an interface declaration  for theme source. It allows to:

	Get theme

349. Changes to package org.springframework.ui.context.support:  

349.1. Add a class for delegating theme source. It allows to:

	Set parent theme source;
	Get parent theme source;
	Get theme

349.2. Add a class for resource bundle theme source. It allows to:

	Set parent theme source;
	Get parent theme source;
	Set basename prefix;
	Set default encoding;
	Set fallback  to system locale;
	Set bean class loader;
	Get theme;
	Create message source;
	Handle init parent

349.3. Add a class for simple theme. It allows to:

	Instantiate simple theme  with message source;
	Get name;
	Get message source

349.4. Add a class for ui application context utils. It allows to:

	Handle init theme source

350. Changes to package org.springframework.ui.freemarker:  

350.1. Add a class for free marker configuration factory. It allows to:

	Set config location;
	Set freemarker settings;
	Set freemarker variables;
	Set default encoding;
	Set pre template loaders;
	Set post template loaders;
	Set template loader path;
	Set template loader paths;
	Set resource loader;
	Get resource loader;
	Set prefer file system access;
	Check if free marker configuration factory is prefer file system access;
	Create configuration;
	Handle new configuration;
	Get template loader  for path;
	Post process template loaders;
	Get aggregate template loader;
	Post process configuration

350.2. Add a class for free marker configuration factory bean. It allows to:

	Handle after properties set;
	Get object;
	Get object type;
	Check if free marker configuration factory bean is singleton

350.3. Add a class for free marker template utils. It allows to:

	Get process template into string

350.4. Add a class for spring template loader. It allows to:

	Instantiate spring template loader  with resource loader;
	Find template source;
	Get reader;
	Get last modified;
	Close template source

351. Changes to package org.springframework.util:  

351.1. Add an object creator class for alternative jdk id generator. It allows to:

	Instantiate alternative jdk id generator;
	Generate id

351.2. Add a class for ant path matcher tests. It allows to:

	Match ant path matcher tests;
	Match ant path matcher tests with trim tokens enabled;
	Process ant path matcher tests ant path matcher tests with match start;
	Handle unique deliminator;
	Extract path  within pattern;
	Extract uri template variables;
	Extract uri template variables regex;
	Extract uri template vars regex qualifiers;
	Extract uri template vars regex capturing groups;
	Combine ant path matcher tests;
	Combine ant path matcher tests with two file extension patterns;
	Handle pattern comparator;
	Handle pattern comparator sort;
	Handle trim tokens off;
	Handle case insensitive;
	Handle default cache setting;
	Handle cache patterns set to true;
	Prevent creating string matchers  if path does not starts with pattern prefix;
	Creating string matchers  if pattern prefix can not determine if path match;
	Handle cache patterns set to false;
	Handle extension mapping with dot path separator

351.3. Add a class for assert. It allows to:

	Handle state;
	Check if assert is true;
	Check if assert is null;
	Not null;
	Check if assert has length;
	Check if assert has text;
	Check if assert does not contain;
	Not empty;
	No null elements;
	Check if assert is instance of;
	Check if assert is assignable;
	Handle instance check failed;
	Handle assignable check failed;
	Handle ends with separator;
	Get message with type name;
	Handle null safe get

351.4. Add a class for assert tests. It allows to:

	Handle state with message;
	Handle state with false expression and message;
	Handle state with message supplier;
	Handle state with false expression and message supplier;
	Handle state with false expression and null message supplier;
	Check if assert tests is true with message;
	Check if assert tests is true with false;
	Check if assert tests is true with message supplier;
	Check if assert tests is true with false and message supplier;
	Check if assert tests is true with false and null message supplier;
	Check if assert tests is null with message;
	Check if assert tests is null with message supplier;
	Check if assert tests is null with non null object and message supplier;
	Check if assert tests is null with non null object and null message supplier;
	Not null  with message;
	Not null  with message supplier;
	Not null  with null and message supplier;
	Not null  with null and null message supplier;
	Check if assert tests has length;
	Check if assert tests has length with whitespace only;
	Check if assert tests has length with empty string;
	Check if assert tests has length with null;
	Check if assert tests has length with message supplier;
	Check if assert tests has length with whitespace only and message supplier;
	Check if assert tests has length with empty string and message supplier;
	Check if assert tests has length with null and message supplier;
	Check if assert tests has length with null and null message supplier;
	Check if assert tests has text;
	Check if assert tests has text with whitespace only;
	Check if assert tests has text with empty string;
	Check if assert tests has text with null;
	Check if assert tests has text with message supplier;
	Check if assert tests has text with whitespace only and message supplier;
	Check if assert tests has text with empty string and message supplier;
	Check if assert tests has text with null and message supplier;
	Check if assert tests has text with null and null message supplier;
	Check if assert tests does not contain with null search string;
	Check if assert tests does not contain with null substring;
	Check if assert tests does not contain with empty substring;
	Check if assert tests does not contain with null search string and null substring;
	Check if assert tests does not contain with message supplier;
	Check if assert tests does not contain with null search string and message supplier;
	Check if assert tests does not contain with null substring and message supplier;
	Check if assert tests does not contain with null search string and null substring and message supplier;
	Check if assert tests does not contain with substring present in search string and message supplier;
	Check if assert tests does not contain with null message supplier;
	Not empty array;
	Not empty array  with empty array;
	Not empty array  with null array;
	Not empty array  with message supplier;
	Not empty array  with empty array and message supplier;
	Not empty array  with null array and message supplier;
	Not empty array  with empty array and null message supplier;
	No null elements;
	No null elements  with empty array;
	No null elements  with message supplier;
	No null elements  with empty array and message supplier;
	No null elements  with null array and message supplier;
	No null elements  with null elements and message supplier;
	No null elements  with null elements and null message supplier;
	Not empty collection;
	Not empty collection  with empty collection;
	Not empty collection  with null collection;
	Not empty collection  with message supplier;
	Not empty collection  with empty collection and message supplier;
	Not empty collection  with null collection and message supplier;
	Not empty collection  with empty collection and null message supplier;
	Not empty map;
	Not empty map  with null map;
	Not empty map  with empty map;
	Not empty map  with message supplier;
	Not empty map  with empty map and message supplier;
	Not empty map  with null map and message supplier;
	Not empty map  with empty map and null message supplier;
	Check if assert tests is instance of;
	Check if assert tests is instance of with null type;
	Check if assert tests is instance of with null instance;
	Check if assert tests is instance of with type mismatch and null message;
	Check if assert tests is instance of with type mismatch and custom message;
	Check if assert tests is instance of with type mismatch and custom message with separator;
	Check if assert tests is instance of with type mismatch and custom message with space;
	Check if assert tests is instance of with message supplier;
	Check if assert tests is instance of with null type and message supplier;
	Check if assert tests is instance of with null instance and message supplier;
	Check if assert tests is instance of with type mismatch and null message supplier;
	Check if assert tests is instance of with type mismatch and message supplier;
	Check if assert tests is assignable;
	Check if assert tests is assignable with null supertype;
	Check if assert tests is assignable with null subtype;
	Check if assert tests is assignable with type mismatch and null message;
	Check if assert tests is assignable with type mismatch and custom message;
	Check if assert tests is assignable with type mismatch and custom message with separator;
	Check if assert tests is assignable with type mismatch and custom message with space;
	Check if assert tests is assignable with message supplier;
	Check if assert tests is assignable with null supertype and message supplier;
	Check if assert tests is assignable with null subtype and message supplier;
	Check if assert tests is assignable with type mismatch and null message supplier;
	Check if assert tests is assignable with type mismatch and message supplier;
	Handle state;
	Handle state with false expression

351.5. Add a class for base 64 utils. It allows to:

	Encode base 64 utils;
	Decode base 64 utils;
	Encode url safe;
	Decode url safe;
	Encode base 64 utils to string;
	Decode base 64 utils from string;
	Encode base 64 utils to url safe string;
	Decode base 64 utils from url safe string

351.6. Add a class for base 64 utils tests. It allows to:

	Encode base 64 utils tests;
	Encode base 64 utils tests to string with jdk 8 vs jaxb;
	Encode decode url safe

351.7. Add a class for class utils. It allows to:

	Register common classes;
	Get default class loader;
	Override thread context class loader;
	Process class utils class utils for name;
	Resolve class name;
	Check if class utils is present;
	Check if class utils is visible;
	Check if class utils is cache safe;
	Check if class utils is loadable;
	Resolve primitive class name;
	Check if class utils is primitive wrapper;
	Check if class utils is primitive or wrapper;
	Check if class utils is primitive array;
	Check if class utils is primitive wrapper array;
	Resolve primitive  if necessary;
	Check if class utils is assignable;
	Check if class utils is assignable value;
	Convert resource path  to class name;
	Convert class name  to resource path;
	Add resource path  to package path;
	Get class package as resource path;
	Convert class names;
	Convert class utils to class array;
	Get all interfaces;
	Get all interfaces  for class;
	Get all interfaces  as set;
	Get all interfaces  for class as set;
	Create composite interface;
	Determine common ancestor;
	Check if class utils is java language interface;
	Check if class utils is inner class;
	Check if class utils is cglib proxy;
	Check if class utils is cglib proxy class;
	Check if class utils is cglib proxy class name;
	Get user class;
	Get descriptive type;
	Check if class utils matches type name;
	Get short name;
	Get short name  as property;
	Get class file name;
	Get package name;
	Get qualified name;
	Get qualified method name;
	Check if class utils has constructor;
	Get constructor  if available;
	Check if class utils has method;
	Get method;
	Get method  if available;
	Get method count  for name;
	Check if class utils has at least one method with name;
	Get method most specific method;
	Get interface method  if possible;
	Check if class utils is user level method;
	Check if class utils is groovy object method;
	Check if class utils is overridable;
	Get static method;
	Find method candidates  by name

351.8. Add a class for commons log writer. It allows to:

	Instantiate commons log writer  with logger;
	Write commons log writer;
	Handle flush;
	Close commons log writer

351.9. Add a class for composite iterator. It allows to:

	Add iterator;
	Check if composite iterator has next;
	Handle next;
	Remove composite iterator

351.10. Add a class for composite iterator tests. It allows to:

	Handle test no iterators;
	Handle test single iterator;
	Handle test multiple iterators;
	Handle test in use;
	Handle test duplicate iterators

351.11. Add a class for concurrency throttle support. It allows to:

	Set concurrency limit;
	Get concurrency limit;
	Check if concurrency throttle support is throttle active;
	Process concurrency throttle support concurrency throttle support before access;
	Process concurrency throttle support concurrency throttle support after access;
	Read object

351.12. Add a class for customizable thread creator. It allows to:

	Instantiate customizable thread creator;
	Set thread name prefix;
	Get thread name prefix;
	Set thread priority;
	Get thread priority;
	Set daemon;
	Check if customizable thread creator is daemon;
	Set thread group name;
	Set thread group;
	Get thread group;
	Create thread;
	Handle next thread name;
	Get default thread name prefix

351.13. Add a class for default properties persister. It allows to:

	Handle load;
	Handle store;
	Handle load from xml;
	Convert store;

351.14. Add a class for digest utils. It allows to:

	Md digest utils;
	Md input stream;
	Md 5 digest  as hex;
	Append md 5 digest  as hex;
	Digest digest utils;
	Digest input stream;
	Digest digest utils as hex string;
	Digest input stream as hex string;
	Append digest  as hex;
	Digest digest utils as hex chars;
	Digest input stream as hex chars;
	Encode hex

351.15. Add a class for digest utils tests. It allows to:

	Create bytes;
	Md digest utils tests;
	Md 5 hex;
	Md 5 string builder

351.16. Add an interface declaration  for error handler. It allows to:

	Handle error

351.17. Add a class for exception type filter. It allows to:

	Instantiate exception type filter  with includes collection, excludes collection and excludes collection;
	Match instance class

351.18. Add a class for exception type filter tests. It allows to:

	Handle sub class match

351.19. Add a class for exponential back off tests. It allows to:

	Handle default instance;
	Handle simple increase;
	Get fixed increase;
	Handle max interval reached;
	Max attempts reached;
	Start return different instances;
	Handle invalid interval;
	Max interval reached  immediately;
	Convert exponential back off tests to string content

351.20. Add a class for fast byte array output stream tests. It allows to:

	Handle size;
	Resize fast byte array output stream tests;
	Handle auto grow;
	Write fast byte array output stream tests;
	Reset fast byte array output stream tests;
	Close fast byte array output stream tests;
	Convert fast byte array output stream tests to byte array unsafe;
	Write fast byte array output stream tests to;
	Get input stream;
	Get input stream available;
	Get input stream read;
	Get input stream read byte promotion;
	Get input stream read all;
	Get input stream read  beyond end of stream;
	Get input stream skip;
	Get input stream skip all;
	Update message digest;
	Update message digest many buffers;
	Assert byte array equals string

351.21. Add a class for file copy utils. It allows to:

	Get copy;
	Handle copy;
	Copy in file to byte array;
	Copy input stream to byte array;
	Copy in reader to string

351.22. Add a class for file copy utils tests. It allows to:

	Copy file copy utils tests from input stream;
	Copy file copy utils tests from byte array;
	Copy file copy utils tests to byte array;
	Copy file copy utils tests from reader;
	Copy file copy utils tests from string;
	Copy file copy utils tests to string

351.23. Add a class for file system utils. It allows to:

	Delete  recursively root file;
	Delete  recursively root path;
	Visit file;
	Post visit directory;
	Copy  recursively src file;
	Copy  recursively src path;
	Pre visit directory;

351.24. Add a class for file system utils tests. It allows to:

	Delete file system utils tests recursively;
	Copy file system utils tests recursively;
	Tear file system utils tests

351.25. Add a class for fixed back off tests. It allows to:

	Handle default instance;
	No attempt  at all;
	Max attempts reached;
	Start return different instances;
	Update fixed back off tests;
	Convert fixed back off tests to string content

351.26. Add an interface declaration  for id generator. It allows to:

	Generate id

351.27. Add a class for instance filter. It allows to:

	Instantiate instance filter  with includes collection, excludes collection and excludes collection;
	Match instance;
	Convert instance filter to string

351.28. Add a class for instance filter tests. It allows to:

	Handle empty filter apply match if empty;
	Check if instance filter tests includes filter;
	Check if instance filter tests excludes filter;
	Check if instance filter tests includes and excludes filters;
	Check if instance filter tests includes and excludes filters conflict;
	Match instance filter;
	Do instance filter not match

351.29. Add a class for invalid mime type exception. It allows to:

	Instantiate invalid mime type exception;
	Get mime type

351.30. Add a class for jdk id generator. It allows to:

	Generate id

351.31. Add a class for linked case insensitive map. It allows to:

	Instantiate linked case insensitive map;
	Instantiate linked case insensitive map  with locale;
	Check if  contains key;
	Remove eldest entry;
	Instantiate linked case insensitive map  with other linked case insensitive map;
	Get size;
	Check if linked case insensitive map is empty;
	Check if linked case insensitive map contains key;
	Check if linked case insensitive map contains value;
	Get linked case insensitive map;
	Get default value;
	Put value;
	Put map;
	Put value if absent;
	Compute mapping function if absent;
	Remove linked case insensitive map;
	Handle clear;
	Handle key set;
	Get values;
	Get entry set;
	Clone linked case insensitive map;
	Check if linked case insensitive map equals;
	Hash code;
	Convert linked case insensitive map to string;
	Get locale;
	Convert key;

351.32. Add a class for linked case insensitive map tests. It allows to:

	Put linked case insensitive map tests;
	Put linked case insensitive map tests with overlapping keys;
	Get linked case insensitive map tests;
	Get or default  with null value;
	Compute linked case insensitive map tests if absent with existing value;
	Compute linked case insensitive map tests if absent with computed value;
	Map clone

351.33. Add a class for linked multi value map. It allows to:

	Instantiate linked multi value map;
	Instantiate linked multi value map  with other map;
	Get  first key;
	Add key;
	Add values map;
	Set key;
	Set values map;
	Convert linked multi value map to single value map;
	Get size;
	Check if linked multi value map is empty;
	Check if linked multi value map contains key;
	Check if linked multi value map contains value;
	Get linked multi value map;
	Put key;
	Remove linked multi value map;
	Put map;
	Handle clear;
	Handle key set;
	Get values;
	Get entry set;
	Handle deep copy;
	Clone linked multi value map;
	Check if linked multi value map equals;
	Hash code;
	Convert linked multi value map to string

351.34. Add a class for linked multi value map tests. It allows to:

	Add linked multi value map tests;
	Get linked multi value map tests first;
	Set linked multi value map tests;
	Check if linked multi value map tests equals

351.35. Add a class for m bean test utils. It allows to:

	Reset M bean servers

351.36. Add a class for method invoker. It allows to:

	Set target class;
	Get target class;
	Set target object;
	Get target object;
	Set target method;
	Get target method;
	Set static method;
	Set arguments;
	Get arguments;
	Prepare method invoker;
	Resolve class name;
	Find matching method;
	Get prepared method;
	Check if method invoker is prepared;
	Invoke method invoker;
	Get type difference weight

351.37. Add a class for mime type tests. It allows to:

	Slash mime type tests in subtype;
	Handle value of no subtype;
	Handle value of no subtype slash;
	Handle value of illegal type;
	Handle value of illegal subtype;
	Handle value of illegal charset;
	Parse charset;
	Parse quoted charset;
	Parse quoted separator;
	Process mime type tests mime type tests with conversion service;
	Check if mime type tests includes;
	Check if mime type tests is compatible;
	Convert test;
	Parse mime type;
	Parse mime type no subtype;
	Parse mime type no subtype slash;
	Parse mime type type range;
	Parse mime type illegal type;
	Parse mime type illegal subtype;
	Parse mime type missing type and subtype;
	Parse mime type empty parameter attribute;
	Parse mime type empty parameter value;
	Parse mime type illegal parameter attribute;
	Parse mime type illegal parameter value;
	Parse mime type illegal charset;
	Parse mime type quoted parameter value;
	Parse mime type single quoted parameter value;
	Parse mime type  with spaces around equals;
	Parse mime type  with spaces around equals and quoted value;
	Parse mime type illegal quoted parameter value;
	Parse mime types;
	Parse mime types  with quoted parameters;
	Handle test with quoted parameters;
	Compare mime type tests to;
	Compare mime type tests to case sensitivity;
	Check if mime type tests equals is case insensitive for charsets

351.38. Add an interface declaration  for multi value map. It allows to:

	Get  first key;
	Add key;
	Add values map;
	Set key;
	Set values map;
	Convert multi value map to single value map

351.39. Add a class for number utils. It allows to:

	Convert number  to target class;
	Get checked long value;
	Raise overflow exception;
	Parse number;
	Check if number utils is hex number;
	Decode big integer

351.40. Add a class for number utils tests. It allows to:

	Parse number;
	Parse number using number format;
	Parse number requiring trim;
	Parse number requiring trim using number format;
	Parse number  as hex;
	Parse number  as negative hex;
	Convert double  to big integer;
	Convert big decimal  to big integer;
	Convert non exact big decimal  to big integer;
	Parse big decimal number 1;
	Parse big decimal number 2;
	Parse big decimal number 3;
	Parse localized big decimal number 1;
	Parse localized big decimal number 2;
	Parse localized big decimal number 3;
	Parse overflow;
	Parse negative overflow;
	Parse overflow using number format;
	Parse negative overflow using number format;
	Convert number utils tests to integer;
	Convert number utils tests to long;
	Assert number utils tests long equals;
	Assert integer equals;
	Assert short equals;
	Assert byte equals;
	Assert negative long equals;
	Assert negative integer equals;
	Assert negative short equals;
	Assert negative byte equals;
	Assert number to number overflow

351.41. Add a class for object utils. It allows to:

	Check if object utils is checked exception;
	Check if object utils is compatible with throws clause;
	Check if object utils is array;
	Check if object utils is empty;
	Handle unwrap optional;
	Check if object utils contains element;
	Check if object utils contains constant;
	Get case insensitive value of;
	Add object  to array;
	Convert object utils to object array;
	Handle null safe equals;
	Handle array equals;
	Handle null safe hash code;
	Hash code;
	Convert identity;
	Get identity hex string;
	Get display string;
	Handle null safe class name;
	Handle null safe to string;

351.42. Add a class for object utils tests. It allows to:

	Check if object utils tests is checked exception;
	Check if object utils tests is compatible with throws clause;
	Check if object utils tests is empty null;
	Check if object utils tests is empty array;
	Check if object utils tests is empty collection;
	Check if object utils tests is empty map;
	Check if object utils tests is empty char sequence;
	Check if object utils tests is empty unsupported object type;
	Convert object utils tests to object array;
	Convert object utils tests to object array with null;
	Convert object utils tests to object array with empty primitive array;
	Convert object utils tests to object array with non array type;
	Convert object utils tests to object array with non primitive array;
	Add object  to array sunny day;
	Add object  to array when empty;
	Add object  to single non null element array;
	Add object  to single null element array;
	Add object  to null array;
	Add null object  to null array;
	Handle null safe equals with arrays;
	Hash code  with boolean false;
	Hash code  with boolean true;
	Hash code  with double;
	Hash code  with float;
	Hash code  with long;
	Convert identity;
	Check if object utils tests is array of primitives with boolean array;
	Check if object utils tests is array of primitives with object array;
	Check if object utils tests is array of primitives with non array;
	Check if object utils tests is primitive or wrapper with boolean primitive class;
	Check if object utils tests is primitive or wrapper with boolean wrapper class;
	Check if object utils tests is primitive or wrapper with byte primitive class;
	Check if object utils tests is primitive or wrapper with byte wrapper class;
	Check if object utils tests is primitive or wrapper with character class;
	Check if object utils tests is primitive or wrapper with char class;
	Check if object utils tests is primitive or wrapper with double primitive class;
	Check if object utils tests is primitive or wrapper with double wrapper class;
	Check if object utils tests is primitive or wrapper with float primitive class;
	Check if object utils tests is primitive or wrapper with float wrapper class;
	Check if object utils tests is primitive or wrapper with int class;
	Check if object utils tests is primitive or wrapper with integer class;
	Check if object utils tests is primitive or wrapper with long primitive class;
	Check if object utils tests is primitive or wrapper with long wrapper class;
	Check if object utils tests is primitive or wrapper with non primitive or wrapper class;
	Check if object utils tests is primitive or wrapper with short primitive class;
	Check if object utils tests is primitive or wrapper with short wrapper class;
	Handle null safe hash code with boolean array;
	Handle null safe hash code with boolean array equal to null;
	Handle null safe hash code with byte array;
	Handle null safe hash code with byte array equal to null;
	Handle null safe hash code with char array;
	Handle null safe hash code with char array equal to null;
	Handle null safe hash code with double array;
	Handle null safe hash code with double array equal to null;
	Handle null safe hash code with float array;
	Handle null safe hash code with float array equal to null;
	Handle null safe hash code with int array;
	Handle null safe hash code with int array equal to null;
	Handle null safe hash code with long array;
	Handle null safe hash code with long array equal to null;
	Handle null safe hash code with object;
	Handle null safe hash code with object array;
	Handle null safe hash code with object array equal to null;
	Handle null safe hash code with object being boolean array;
	Handle null safe hash code with object being byte array;
	Handle null safe hash code with object being char array;
	Handle null safe hash code with object being double array;
	Handle null safe hash code with object being float array;
	Handle null safe hash code with object being int array;
	Handle null safe hash code with object being long array;
	Handle null safe hash code with object being object array;
	Handle null safe hash code with object being short array;
	Handle null safe hash code with object equal to null;
	Handle null safe hash code with short array;
	Handle null safe hash code with short array equal to null;
	Handle null safe to string with boolean array;
	Handle null safe to string with boolean array being empty;
	Handle null safe to string with boolean array equal to null;
	Handle null safe to string with byte array;
	Handle null safe to string with byte array being empty;
	Handle null safe to string with byte array equal to null;
	Handle null safe to string with char array;
	Handle null safe to string with char array being empty;
	Handle null safe to string with char array equal to null;
	Handle null safe to string with double array;
	Handle null safe to string with double array being empty;
	Handle null safe to string with double array equal to null;
	Handle null safe to string with float array;
	Handle null safe to string with float array being empty;
	Handle null safe to string with float array equal to null;
	Handle null safe to string with int array;
	Handle null safe to string with int array being empty;
	Handle null safe to string with int array equal to null;
	Handle null safe to string with long array;
	Handle null safe to string with long array being empty;
	Handle null safe to string with long array equal to null;
	Handle null safe to string with plain old string;
	Handle null safe to string with object array;
	Handle null safe to string with object array being empty;
	Handle null safe to string with object array equal to null;
	Handle null safe to string with short array;
	Handle null safe to string with short array being empty;
	Handle null safe to string with short array equal to null;
	Handle null safe to string with string array;
	Handle null safe to string with string array being empty;
	Handle null safe to string with string array equal to null;
	Check if object utils tests contains constant;
	Handle case insensitive value of;
	Assert equal hash codes

351.43. Add an interface declaration  for path matcher. It allows to:

	Check if path matcher is pattern;
	Match path matcher;
	Match start;
	Extract path  within pattern;
	Extract uri template variables;
	Get pattern comparator;
	Combine path matcher

351.44. Add a class for pattern match utils. It allows to:

	Handle simple match;

351.45. Add a class for pattern match utils tests. It allows to:

	Handle test trivial;
	Handle test starts with;
	Handle test ends with;
	Handle test between;
	Handle test starts ends;
	Handle test starts ends between;
	Handle test ridiculous;
	Handle test pattern variants;
	Do test

351.46. Add an interface declaration  for properties persister. It allows to:

	Handle load;
	Handle store;
	Handle load from xml;
	Convert store;

351.47. Add a class for properties persister tests. It allows to:

	Handle properties persister;
	Handle properties persister with whitespace;
	Handle properties persister with header;
	Handle properties persister with empty value;
	Handle properties persister with reader;
	Handle properties persister with reader and whitespace;
	Handle properties persister with reader and header;
	Handle properties persister with reader and empty value;
	Load properties;
	Get store properties

351.48. Add a class for property placeholder helper tests. It allows to:

	Handle test with properties;
	Handle test with multiple properties;
	Handle test recurse in property;
	Handle test recurse in placeholder;
	Handle test with resolver;
	Resolve placeholder;
	Handle test unresolved placeholder is ignored;
	Handle test unresolved placeholder as error

351.49. Add a class for resizable byte array output stream. It allows to:

	Instantiate resizable byte array output stream;
	Resize resizable byte array output stream;
	Grow resizable byte array output stream;
	Get capacity

351.50. Add a class for resizable byte array output stream tests. It allows to:

	Set resizable byte array output stream tests;
	Resize resizable byte array output stream tests;
	Handle auto grow;
	Grow resizable byte array output stream tests;
	Write resizable byte array output stream tests;
	Assert byte array equals string

351.51. Add a class for resource utils. It allows to:

	Check if resource utils is url;
	Get URL;
	Get file;
	Check if resource utils is file URL;
	Check if resource utils is jar URL;
	Check if resource utils is jar file URL;
	Extract jar file URL;
	Extract archive URL;
	Convert resource utils to URI;
	Use caches  if necessary

351.52. Add a class for serialization test utils. It allows to:

	Handle test serialization;
	Check if serialization test utils is serializable;
	Serialize serialization test utils

351.53. Add a class for serialization utils. It allows to:

	Serialize serialization utils;
	Get deserialize

351.54. Add a class for serialization utils tests. It allows to:

	Serialize cycle sunny day;
	Handle deserialize undefined;
	Serialize non serializable;
	Handle deserialize non serializable;
	Serialize null;
	Handle deserialize null

351.55. Add an object creator class for simple id generator. It allows to:

	Generate id

351.56. Add a class for socket utils. It allows to:

	Instantiate socket utils;
	Find available tcp port;
	Find available tcp ports;
	Find available udp port;
	Find available udp ports;
	Check if socket utils is port available;
	Find random port;
	Find available port;
	Find available ports

351.57. Add a class for socket utils tests. It allows to:

	Handle can be instantiated;
	Find available tcp port  with zero min port;
	Find available tcp port  with negative min port;
	Find available tcp port;
	Find available tcp port  with min port equal to max port;
	Find available tcp port when port  on loopback interface is not available;
	Find available tcp port  with min;
	Find available tcp port  in range;
	Find 4 available tcp ports;
	Find 50 available tcp ports;
	Find 4 available tcp ports  in range;
	Find 50 available tcp ports  in range;
	Find available tcp ports  with requested number greater than size of range;
	Find available udp port  with zero min port;
	Find available udp port  with negative min port;
	Find available udp port;
	Find available udp port when port  on loopback interface is not available;
	Find available udp port  with min;
	Find available udp port  in range;
	Find 4 available udp ports;
	Find 50 available udp ports;
	Find 4 available udp ports  in range;
	Find 50 available udp ports  in range;
	Find available udp ports  with requested number greater than size of range;
	Find available tcp ports;
	Find available udp ports;
	Assert port  in range;
	Assert available ports

351.58. Add a class for stop watch tests. It allows to:

	Handle valid usage;
	Handle valid usage not keeping task list;
	Convert failure;
	Check if stop watch tests rejects start twice

351.59. Add a class for stream utils tests. It allows to:

	Handle setup;
	Copy stream utils tests to byte array;
	Copy stream utils tests to string;
	Copy bytes;
	Copy string;
	Copy stream;
	Copy range;
	Non closing input stream;
	Non closing output stream

351.60. Add a class for string utils. It allows to:

	Check if string utils is empty;
	Check if string utils has length;
	Check if string utils has text;
	Check if string utils contains text;
	Check if string utils contains whitespace;
	Handle trim whitespace;
	Trim all whitespace;
	Handle trim leading whitespace;
	Handle trim trailing whitespace;
	Handle trim leading character;
	Handle trim trailing character;
	Starts string utils with ignore case;
	Handle ends with ignore case;
	Substring match;
	Count occurrences  of;
	Replace string utils;
	Delete string utils;
	Quote string utils;
	Quote string utils if string;
	Handle unqualify;
	Capitalize string utils;
	Handle uncapitalize;
	Change first character case;
	Get filename;
	Get filename extension;
	Get strip filename extension;
	Apply relative path;
	Handle clean path;
	Handle path equals;
	Handle uri decode;
	Parse locale;
	Parse locale string;
	Handle tokenize locale source;
	Parse locale tokens;
	Validate locale part;
	Convert string utils to language tag;
	Parse time zone string;
	Convert string utils to string array;
	Add string  to array;
	Handle concatenate string arrays;
	Merge string arrays;
	Get sort string array;
	Handle trim array elements;
	Remove duplicate strings;
	Get split;
	Split array elements  into properties;
	Tokenize string utils to string array;
	Handle delimited list to string array;
	Convert comma delimited list;
	Convert collection;
	Convert array;

351.61. Add a class for string utils tests. It allows to:

	Handle test has text blank;
	Handle test has text null empty;
	Handle test has text valid;
	Handle test contains whitespace;
	Handle test trim whitespace;
	Handle test trim all whitespace;
	Handle test trim leading whitespace;
	Handle test trim trailing whitespace;
	Handle test trim leading character;
	Handle test trim trailing character;
	Handle test starts with ignore case;
	Handle test ends with ignore case;
	Handle test substring match;
	Handle test count occurrences of;
	Handle test replace;
	Handle test delete;
	Handle test delete any;
	Handle test quote;
	Handle test quote if string;
	Handle test unqualify;
	Handle test capitalize;
	Handle test uncapitalize;
	Handle test get filename;
	Handle test get filename extension;
	Handle test strip filename extension;
	Handle test clean path;
	Handle test path equals;
	Handle test concatenate string arrays;
	Handle test merge string arrays;
	Handle test sort string array;
	Handle test remove duplicate strings;
	Handle test split array elements into properties;
	Handle test split array elements into properties and deleted chars;
	Convert test tokenize;
	Convert test comma delimited list;
	Convert test delimited list;
	Do test string array reverse transformation matches;
	Do test comma delimited list  to string array legal match;
	Handle test parse locale string sunny day;
	Handle test parse locale string with malformed locale string;
	Handle test parse locale string with empty locale string yields null locale;
	Handle test parse locale with multi special characters in variant;
	Handle test parse locale with multi valued variant;
	Handle test parse locale with multi valued variant using spaces as separators;
	Handle test parse locale with multi valued variant using mixture of underscores and spaces as separators;
	Handle test parse locale with multi valued variant using spaces as separators with lots of leading whitespace;
	Handle test parse locale with multi valued variant using underscores as separators with lots of leading whitespace;
	Handle test parse locale with invalid characters;
	Handle test parse locale with same lowercase token for language and country;
	Handle test parse locale with variant containing country code;
	Handle test parse java 7 variant;
	Handle test available locales with locale string;
	Handle test available locales with language tag;
	Handle test invalid locale with locale string;
	Handle test invalid locale with language tag

351.62. Add an interface declaration  for string value resolver. It allows to:

	Resolve string value

351.63. Add a class for system property utils tests. It allows to:

	Handle test replace from system property;
	Handle test replace from system property with default;
	Handle test replace from system property with expression default;
	Handle test replace from system property with expression containing default;
	Handle test replace with default;
	Handle test replace with expression default;
	Handle test replace with expression containing default;
	Handle test replace with no default;
	Handle test replace with no default ignored;
	Handle test replace with empty default;
	Handle test recursive from system property;
	Handle test replace from env

351.64. Add a class for type utils. It allows to:

	Check if type utils is assignable;
	Check if type utils is assignable bound

351.65. Add a class for type utils tests. It allows to:

	Process type utils tests type utils tests with classes;
	Process type utils tests type utils tests with parameterized types;
	Process type utils tests type utils tests with wildcard types;
	Process type utils tests type utils tests with generic array types

351.66. Add a class for update message digest input stream. It allows to:

	Update message digest;

352. Changes to package org.springframework.util.backoff:  

352.1. Add an interface declaration  for back off. It allows to:

	Start back off

352.2. Add an interface declaration  for back off execution. It allows to:

	Handle next back off

353. Changes to package org.springframework.util.comparator:  

353.1. Add a class for boolean comparator. It allows to:

	Instantiate boolean comparator;
	Compare v 1 boolean;
	Check if boolean comparator equals;
	Hash code;
	Convert boolean comparator to string

353.2. Add a class for boolean comparator tests. It allows to:

	Should compare  with true low;
	Should compare  with true high;
	Should compare  from true low;
	Should compare  from true high

353.3. Add a class for comparable comparator. It allows to:

	Compare o 1

353.4. Add a class for comparable comparator tests. It allows to:

	Handle test comparable comparator;
	Should need comparable

353.5. Add a class for compound comparator. It allows to:

	Instantiate compound comparator;
	Instantiate compound comparator  with comparators;
	Add comparator;
	Set comparator;
	Handle invert order;
	Set ascending order;
	Set descending order;
	Get comparator count;
	Compare o 1;
	Check if compound comparator equals;
	Hash code;
	Convert compound comparator to string

353.6. Add a class for compound comparator tests. It allows to:

	Should need  at least one comparator

353.7. Add a class for instance comparator. It allows to:

	Instantiate instance comparator  with instance order class;
	Compare o 1;
	Get order

353.8. Add a class for invertible comparator. It allows to:

	Instantiate invertible comparator  with comparator;
	Ascending invertible comparator;
	Check if invertible comparator is ascending;
	Handle invert order;
	Compare o 1;
	Check if invertible comparator equals;
	Hash code;
	Convert invertible comparator to string

353.9. Add a class for invertible comparator tests. It allows to:

	Should need comparator;
	Should need comparator  with ascending;
	Convert should default;
	Invert invertible comparator tests;
	Should invertible comparator tests;

353.10. Add a class for null safe comparator. It allows to:

	Instantiate null safe comparator;
	Instantiate null safe comparator  with comparator;
	Compare o 1;
	Check if null safe comparator equals;
	Hash code;
	Convert null safe comparator to string

353.11. Add a class for null safe comparator tests. It allows to:

	Should compare  with nulls low;
	Should compare  with nulls high

354. Changes to package org.springframework.util.concurrent:  

354.1. Add a class for completable to listenable future adapter. It allows to:

	Instantiate completable to listenable future adapter  with completion stage;
	Instantiate completable to listenable future adapter  with completable future;
	Add callback;
	Handle completable;
	Cancel completable to listenable future adapter;
	Check if completable to listenable future adapter is canceled;
	Check if completable to listenable future adapter is done;
	Get completable to listenable future adapter;
	Get time unit

354.2. Add an interface declaration  for failure callback. It allows to:

	Process failure callback failure callback on failure

354.3. Add a class for future adapter. It allows to:

	Instantiate future adapter  with adaptee future;
	Get future adapter adaptee;
	Cancel future adapter;
	Check if future adapter is canceled;
	Check if future adapter is done;
	Get future adapter;
	Get time unit;
	Adapt internal;
	Adapt adaptee result

354.4. Add a class for future adapter tests. It allows to:

	Set future adapter tests;
	Adapt adaptee result integer;
	Cancel future adapter tests;
	Check if future adapter tests is canceled;
	Check if future adapter tests is done;
	Get future adapter tests;
	Get time  out

354.5. Add an interface declaration  for listenable future. It allows to:

	Add callback;
	Handle completable

354.6. Add a class for listenable future adapter. It allows to:

	Instantiate listenable future adapter  with adaptee listenable future;
	Add callback;
	Process  on success;
	Process  on failure

354.7. Add an interface declaration  for listenable future callback

354.8. Add a class for listenable future callback registry. It allows to:

	Add callback;
	Notify success;
	Notify failure;
	Add success callback;
	Add failure callback;
	Handle success;
	Handle failure

354.9. Add a class for listenable future task. It allows to:

	Instantiate listenable future task  with callable;
	Instantiate listenable future task  with runnable, result and result;
	Add callback;
	Handle completable;
	Get done

354.10. Add a class for listenable future task tests. It allows to:

	Handle success;
	Process  on success;
	Process  on failure;
	Handle failure;
	Handle success with lambdas;
	Handle failure with lambdas

354.11. Add an interface declaration  for success callback. It allows to:

	Process success callback success callback on success

355. Changes to package org.springframework.util.xml:  

355.1. Add a class for abstract stax handler. It allows to:

	Start document;
	End document;
	Start prefix mapping;
	End prefix mapping;
	Start element;
	End element;
	Handle characters;
	Handle ignorable whitespace;
	Processing instruction;
	Get skipped entity;
	Start DTD;
	End DTD;
	Start CDATA;
	End CDATA;
	Comment abstract stax handler;
	Start entity;
	End entity;
	Convert abstract stax handler to Q name;
	Check if abstract stax handler is namespace declaration;
	Handle current namespace mapping;
	Handle new namespace mapping;
	Remove namespace mapping;
	Remove all namespace mappings;
	Start document internal;
	End document internal;
	Start element internal;
	End element internal;
	Handle characters internal;
	Handle c data internal;
	Handle ignorable whitespace internal;
	Processing instruction internal;
	Get skipped entity internal;
	Dtd internal;
	Comment internal

355.2. Add a class for abstract stax handler test case. It allows to:

	Create XML reader;
	No namespace prefixes;
	Handle namespace prefixes;
	No namespace prefixes dom;
	Handle namespace prefixes dom;
	Create stax handler

355.3. Add a class for abstract XML reader. It allows to:

	Set content handler;
	Get content handler;
	Set DTD handler;
	Get DTD handler;
	Set entity resolver;
	Get entity resolver;
	Set error handler;
	Get error handler;
	Get lexical handler;
	Get feature;
	Set feature;
	Get property;
	Set property

355.4. Add a class for abstract XML stream reader. It allows to:

	Get element text;
	Get attribute local name;
	Get attribute namespace;
	Get attribute prefix;
	Get namespace URI;
	Check if abstract XML stream reader has text;
	Get prefix;
	Check if abstract XML stream reader has name;
	Check if abstract XML stream reader is white space;
	Check if abstract XML stream reader is start element;
	Check if abstract XML stream reader is end element;
	Check if abstract XML stream reader is characters;
	Handle next tag;
	Require abstract XML stream reader;
	Get attribute value;
	Check if abstract XML stream reader has next;
	Get local name;
	Get text characters;
	Get text length

355.5. Add a class for dom content handler. It allows to:

	Instantiate dom content handler  with node;
	Get parent;
	Start element;
	End element;
	Handle characters;
	Processing instruction;
	Set document locator;
	Start document;
	End document;
	Start prefix mapping;
	End prefix mapping;
	Handle ignorable whitespace;
	Get skipped entity

355.6. Add a class for dom content handler tests. It allows to:

	Set dom content handler tests;
	Handle content handler document namespace prefixes;
	Handle content handler document no namespace prefixes;
	Handle content handler element

355.7. Add a class for dom utils. It allows to:

	Get child elements  by tag name;
	Get child element  by tag name;
	Get child element value  by tag name;
	Get child elements;
	Get text value;
	Node name equals;
	Create content handler;
	Node name match;

355.8. Add a class for simple namespace context. It allows to:

	Get namespace URI;
	Get prefix;
	Get prefixes;
	Get prefixes set;
	Set bindings;
	Handle bind default namespace uri;
	Handle bind namespace uri;
	Remove binding;
	Handle clear;
	Get bound prefixes

355.9. Add a class for simple namespace context tests. It allows to:

	Get namespace URI  with null;
	Get namespace URI;
	Get prefix  with null;
	Get prefix;
	Get prefixes  with null;
	Get prefixes iterator is  not modifiable;
	Get prefixes;
	Handle bind namespace uri with null namespace uri;
	Handle bind namespace uri with null prefix;
	Handle bind namespace uri;
	Get bound prefixes;
	Handle clear;
	Remove binding;
	Get item set;
	Make set

355.10. Add a class for simple sax error handler. It allows to:

	Instantiate simple sax error handler  with logger;
	Warning SAX parse exception;
	Handle error;
	Handle fatal error

355.11. Add a class for simple transform error listener. It allows to:

	Instantiate simple transform error listener  with logger;
	Warning transformer exception;
	Handle error;
	Handle fatal error

355.12. Add an object creator class for stax event handler tests. It allows to:

	Create stax handler

355.13. Add a class for stax event XML reader. It allows to:

	Instantiate stax event XML reader  with XML event reader;
	Parse internal;
	Handle start document;
	Get column number;
	Get line number;
	Get public id;
	Get system id;
	Get XML version;
	Encoding;
	Handle start element;
	Handle characters;
	Handle end element;
	Handle end document;
	Handle notation declaration;
	Handle entity declaration;
	Handle processing instruction;
	Handle comment;
	Handle dtd;
	Handle entity reference;
	Get attributes

355.14. Add a class for stax event XML reader tests. It allows to:

	Create stax xml reader;
	Handle partial

355.15. Add a class for stax result. It allows to:

	Instantiate stax result  with XML event writer;
	Instantiate stax result  with XML stream writer;
	Get XML event writer;
	Get XML stream writer;
	Set handler;
	Set lexical handler

355.16. Add a class for stax result tests. It allows to:

	Set stax result tests;
	Handle stream writer source;
	Handle event writer source

355.17. Add a class for stax source. It allows to:

	Instantiate stax source  with XML event reader;
	Instantiate stax source  with XML stream reader;
	Get XML event reader;
	Get XML stream reader;
	Set input source;
	Set XML reader

355.18. Add a class for stax source tests. It allows to:

	Set stax source tests;
	Convert stream reader source;
	Convert event reader source;

355.19. Add a class for stax stream handler. It allows to:

	Instantiate stax stream handler  with XML stream writer;
	Start document internal;
	End document internal;
	Start element internal;
	End element internal;
	Handle characters internal;
	Handle c data internal;
	Handle ignorable whitespace internal;
	Processing instruction internal;
	Dtd internal;
	Comment internal;
	Set document locator;
	Start entity;
	End entity;
	Get skipped entity internal

355.20. Add an object creator class for stax stream handler tests. It allows to:

	Create stax handler

355.21. Add a class for stax stream XML reader. It allows to:

	Instantiate stax stream XML reader  with XML stream reader;
	Parse internal;
	Handle start document;
	Get column number;
	Get line number;
	Get public id;
	Get system id;
	Get XML version;
	Encoding;
	Handle start element;
	Handle end element;
	Handle characters;
	Handle comment;
	Handle dtd;
	Handle entity reference;
	Handle end document;
	Handle processing instruction;
	Get attributes

355.22. Add a class for stax stream XML reader tests. It allows to:

	Create stax xml reader;
	Handle partial

355.23. Add an object creator class for stax utils. It allows to:

	Create defensive input factory;
	Create stax source;
	Create custom stax source;
	Check if stax utils is stax source;
	Get XML stream reader;
	Get XML event reader;
	Create stax result;
	Create custom stax result;
	Check if stax utils is stax result;
	Get XML stream writer;
	Get XML event writer;
	Create XML event reader;
	Create content handler;
	Create XML reader;
	Create event stream reader;
	Create event stream writer;

355.24. Add a class for stax utils tests. It allows to:

	Check if stax utils tests is stax source invalid;
	Check if stax utils tests is stax source;
	Check if stax utils tests is stax source jaxp 14;
	Check if stax utils tests is stax result invalid;
	Check if stax utils tests is stax result;
	Check if stax utils tests is stax result jaxp 14

355.25. Add a class for transformer utils. It allows to:

	Enable indenting;
	Disable indenting

355.26. Add a class for xML event stream reader. It allows to:

	Instantiate xML event stream reader  with XML event reader;
	Get name;
	Get location;
	Get event type;
	Get version;
	Get property;
	Check if xML event stream reader is standalone;
	Handle standalone set;
	Encoding xML event stream reader;
	Get character encoding scheme;
	Get PI target;
	Get PI data;
	Get text start;
	Get text;
	Get attribute count;
	Check if xML event stream reader is attribute specified;
	Get attribute name;
	Get attribute type;
	Get attribute value;
	Get attribute;
	Get namespace context;
	Get namespace count;
	Get namespace prefix;
	Get namespace URI;
	Get namespace;
	Handle next;
	Close xML event stream reader;
	Count iterator

355.27. Add a class for xML event stream reader tests. It allows to:

	Create stream reader;
	Read xML event stream reader tests;
	Read correct

355.28. Add a class for xML event stream writer. It allows to:

	Instantiate xML event stream writer  with XML event writer, XML event factory and XML event factory;
	Set namespace context;
	Get namespace context;
	Set prefix;
	Get prefix;
	Set default namespace;
	Get property;
	Write start document;
	Write start element;
	Do write start element;
	Write empty element;
	Close empty element  if necessary;
	Write end element;
	Write attribute;
	Write namespace;
	Write default namespace;
	Do write namespace;
	Write characters;
	Write C data;
	Write comment;
	Write processing instruction;
	Write DTD;
	Write entity ref;
	Write end document;
	Handle flush;
	Close xML event stream writer

355.29. Add a class for xML event stream writer tests. It allows to:

	Create stream reader;
	Write xML event stream writer tests

355.30. Add a class for xml validation mode detector. It allows to:

	Detect validation mode;
	Check if xml validation mode detector has doctype;
	Check if xml validation mode detector has opening tag;
	Consume comment tokens;
	Consume xml validation mode detector;
	Start comment;
	End comment;
	Comment token

356. Changes to package org.springframework.validation:  

356.1. Add a class for abstract binding result. It allows to:

	Instantiate abstract binding result;
	Set message codes resolver;
	Get message codes resolver;
	Get object name;
	Reject abstract binding result;
	Reject value;
	Add all errors;
	Check if abstract binding result has errors;
	Get error count;
	Get all errors;
	Get global errors;
	Get global error;
	Get field errors;
	Get field error;
	Get field value;
	Get field type;
	Get model;
	Get raw field value;
	Find editor;
	Get property editor registry;
	Resolve message codes;
	Add error;
	Handle record field value;
	Record suppressed field;
	Get suppressed fields;
	Check if abstract binding result equals;
	Hash code;
	Get target;
	Get actual field value;
	Get format field value

356.2. Add a class for abstract errors. It allows to:

	Set nested path;
	Get nested path;
	Push nested path;
	Pop nested path;
	Do set nested path;
	Handle fixed field;
	Handle canonical field name;
	Reject abstract errors;
	Reject value;
	Check if abstract errors has errors;
	Get error count;
	Get all errors;
	Check if abstract errors has global errors;
	Get global error count;
	Get global error;
	Check if abstract errors has field errors;
	Get field error count;
	Get field error;
	Get field errors;
	Get field type;
	Check if abstract errors is matching field error;
	Convert abstract errors to string

356.3. Add a class for abstract property binding result. It allows to:

	Instantiate abstract property binding result;
	Handle init conversion;
	Get property editor registry;
	Handle canonical field name;
	Get field type;
	Get actual field value;
	Get format field value;
	Get custom editor;
	Find editor;
	Get property accessor

356.4. Add a class for bean property binding result. It allows to:

	Instantiate bean property binding result;
	Get target;
	Get property accessor;
	Create bean wrapper

356.5. Add a class for bind exception. It allows to:

	Instantiate bind exception  with binding result;
	Instantiate bind exception;
	Get binding result;
	Get object name;
	Set nested path;
	Get nested path;
	Push nested path;
	Pop nested path;
	Reject bind exception;
	Reject value;
	Add all errors;
	Check if bind exception has errors;
	Get error count;
	Get all errors;
	Check if bind exception has global errors;
	Get global error count;
	Get global errors;
	Get global error;
	Check if bind exception has field errors;
	Get field error count;
	Get field errors;
	Get field error;
	Get field value;
	Get field type;
	Get target;
	Get model;
	Get raw field value;
	Find editor;
	Get property editor registry;
	Resolve message codes;
	Add error;
	Handle record field value;
	Record suppressed field;
	Get suppressed fields;
	Get message;
	Check if bind exception equals;
	Hash code

356.6. Add an interface declaration  for binding error processor. It allows to:

	Handle process missing field error;
	Handle process property access exception

356.7. Add an interface declaration  for binding result. It allows to:

	Get target;
	Get model;
	Get raw field value;
	Find editor;
	Get property editor registry;
	Resolve message codes;
	Add error;
	Handle record field value;
	Record suppressed field;
	Get suppressed fields

356.8. Add a class for binding result utils. It allows to:

	Get binding result;
	Get required binding result

356.9. Add a class for data binder. It allows to:

	Instantiate data binder;
	Get target;
	Get object name;
	Set auto grow nested paths;
	Check if data binder is auto grow nested paths;
	Set auto grow collection limit;
	Get auto grow collection limit;
	Init bean property access;
	Create bean property binding result;
	Handle init direct field access;
	Create direct field binding result;
	Get internal binding result;
	Get property accessor;
	Get simple type converter;
	Get property editor registry;
	Get type converter;
	Get binding result;
	Set ignore unknown fields;
	Check if data binder is ignore unknown fields;
	Set ignore invalid fields;
	Check if data binder is ignore invalid fields;
	Set allowed fields;
	Get allowed fields;
	Set disallowed fields;
	Get disallowed fields;
	Set required fields;
	Get required fields;
	Set message codes resolver;
	Set binding error processor;
	Get binding error processor;
	Set validator;
	Assert validators;
	Add validators;
	Replace validators;
	Get validator;
	Get validators;
	Set conversion service;
	Get conversion service;
	Add custom formatter;
	Register custom editor;
	Find custom editor;
	Convert required type class if necessary;
	Handle bind;
	Do bind;
	Check allowed fields;
	Check if data binder is allowed;
	Check required fields;
	Apply property values;
	Validate data binder;
	Close data binder

356.10. Add a class for data binder field access tests. It allows to:

	Handle binding no errors;
	Handle binding no errors not ignore unknown;
	Handle binding with errors;
	Get nested binding with default conversion no errors;
	Get nested binding with disabled auto grow;
	Handle binding with errors and custom editors;
	Get set as text;
	Get  as text

356.11. Add a class for default binding error processor. It allows to:

	Handle process missing field error;
	Handle process property access exception;
	Get arguments  for bind error

356.12. Add a class for default message codes resolver. It allows to:

	Set prefix;
	Get prefix;
	Set message code formatter;
	Resolve message codes;
	Add codes;
	Add code;
	Build field list;
	Post process message code;
	Get format;
	Convert default message codes resolver to delimited string

356.13. Add a class for default message codes resolver tests. It allows to:

	Should resolve message code;
	Should resolve field message code;
	Should resolve indexed field message code;
	Should resolve message code  with prefix;
	Should resolve field message code  with prefix;
	Should support null prefix;
	Should support malformed index field;
	Should support null field type;
	Should support postfix format;
	Should support field postfix format;
	Should support custom format;
	Get format

356.14. Add a class for direct field binding result. It allows to:

	Instantiate direct field binding result;
	Get target;
	Get property accessor;
	Create direct field accessor

356.15. Add an interface declaration  for errors. It allows to:

	Get object name;
	Set nested path;
	Get nested path;
	Push nested path;
	Pop nested path;
	Reject errors;
	Reject value;
	Add all errors;
	Check if errors has errors;
	Get error count;
	Get all errors;
	Check if errors has global errors;
	Get global error count;
	Get global errors;
	Get global error;
	Check if errors has field errors;
	Get field error count;
	Get field errors;
	Get field error;
	Get field value;
	Get field type

356.16. Add a class for field error. It allows to:

	Instantiate field error;
	Get field;
	Get rejected value;
	Check if field error is binding failure;
	Check if field error equals;
	Hash code;
	Convert field error to string

356.17. Add a class for map binding result. It allows to:

	Instantiate map binding result  with target map;
	Get target map;
	Get target;
	Get actual field value

356.18. Add an interface declaration  for message code formatter. It allows to:

	Get format

356.19. Add an interface declaration  for message codes resolver. It allows to:

	Resolve message codes;

356.20. Add a class for object error. It allows to:

	Instantiate object error;
	Get object name;
	Wrap object error;
	Get unwrap;
	Check if object error contains;
	Check if object error equals;
	Hash code;
	Convert object error to string

356.21. Add an interface declaration  for smart validator. It allows to:

	Validate errors;
	Validate value

356.22. Add a class for validation utils. It allows to:

	Invoke validator;
	Reject errors if empty;
	Reject errors if empty or whitespace;

356.23. Add an interface declaration  for validator. It allows to:

	Handle supports;
	Validate errors

357. Changes to package org.springframework.validation.beanvalidation:  

357.1. Add a class for bean validation post processor. It allows to:

	Set validator;
	Set validator factory;
	Get set after initialization;
	Handle after properties set;
	Post process  before initialization;
	Post process  after initialization;
	Validate bean validation post processor

357.2. Add a class for custom validator bean. It allows to:

	Set validator factory;
	Set message interpolator;
	Set traversable resolver;
	Handle after properties set

357.3. Add a class for locale context message interpolator. It allows to:

	Instantiate locale context message interpolator  with target interpolator;
	Interpolate context;

357.4. Add an object creator class for message source resource bundle locator. It allows to:

	Instantiate message source resource bundle locator  with message source;
	Get resource bundle

357.5. Add a class for method validation interceptor. It allows to:

	Instantiate method validation interceptor;
	Instantiate method validation interceptor  with validator factory;
	Instantiate method validation interceptor  with validator;
	Invoke method invocation;
	Check if method validation interceptor is factory bean metadata method;
	Determine validation groups

357.6. Add a class for method validation post processor. It allows to:

	Set validated annotation type;
	Set validator;
	Set validator factory;
	Handle after properties set;
	Create method validation advice

357.7. Add a class for optional validator factory bean. It allows to:

	Handle after properties set

357.8. Add a class for spring constraint validator factory. It allows to:

	Instantiate spring constraint validator factory  with autowire capable bean factory;
	Get instance;
	Release instance

358. Changes to package org.springframework.validation.support:  

358.1. Add a class for binding aware model map. It allows to:

	Put binding aware model map;
	Put map;
	Remove binding result  if necessary

359. Changes to package org.springframework.web:  

359.1. Add a class for http media type exception. It allows to:

	Instantiate http media type exception;
	Instantiate http media type exception  with supported media types list;
	Get supported media types

359.2. Add a class for http media type not acceptable exception. It allows to:

	Instantiate http media type not acceptable exception;
	Instantiate http media type not acceptable exception  with supported media types list

359.3. Add a class for http media type not supported exception. It allows to:

	Instantiate http media type not supported exception;
	Instantiate http media type not supported exception  with content type, supported media types list and supported media types list;
	Get content type

359.4. Add an interface declaration  for http request handler. It allows to:

	Handle request

359.5. Add a class for http request method not supported exception. It allows to:

	Instantiate http request method not supported exception;
	Instantiate http request method not supported exception  with supported methods collection;
	Get method;
	Get supported methods;
	Get supported http methods

359.6. Add a class for http session required exception. It allows to:

	Instantiate http session required exception;
	Get expected attribute

359.7. Add a class for spring servlet container initializer. It allows to:

	Process spring servlet container initializer spring servlet container initializer on startup

359.8. Add an interface declaration  for web application initializer. It allows to:

	Process web application initializer web application initializer on startup

360. Changes to package org.springframework.web.accept:  

360.1. Add a class for abstract mapping content negotiation strategy. It allows to:

	Instantiate abstract mapping content negotiation strategy  with media types map;
	Get set use registered extensions only;
	Check if abstract mapping content negotiation strategy is use registered extensions only;
	Set ignore unknown extensions;
	Check if abstract mapping content negotiation strategy is ignore unknown extensions;
	Resolve media types;
	Resolve media type key;
	Get media type key;
	Handle match;
	Handle no match

360.2. Add a class for content negotiation manager. It allows to:

	Instantiate content negotiation manager  with strategies content negotiation strategy;
	Instantiate content negotiation manager  with strategies collection;
	Instantiate content negotiation manager;
	Get strategies;
	Get strategy;
	Add file extension resolvers;
	Resolve media types;
	Resolve file extensions;
	Get all file extensions

360.3. Add a class for content negotiation manager factory bean. It allows to:

	Set strategies;
	Set favor path extension;
	Get set media types;
	Add media type;
	Add media types;
	Set ignore unknown path extensions;
	Get set use jaf;
	Get set use registered extensions only;
	Use registered extensions  only;
	Set favor parameter;
	Set parameter name;
	Set ignore accept header;
	Set default content type;
	Set default content types;
	Set default content type strategy;
	Set servlet context;
	Handle after properties set;
	Build content negotiation manager factory bean;
	Get object;
	Get object type;
	Check if content negotiation manager factory bean is singleton

360.4. Add an interface declaration  for content negotiation strategy. It allows to:

	Resolve media types

360.5. Add a class for fixed content negotiation strategy. It allows to:

	Instantiate fixed content negotiation strategy  with content type;
	Instantiate fixed content negotiation strategy  with content types list;
	Get content types;
	Resolve media types

360.6. Add a class for header content negotiation strategy. It allows to:

	Resolve media types

360.7. Add a class for header content negotiation strategy tests. It allows to:

	Resolve media types;
	Resolve media types  from multiple header values;
	Resolve media types parse error

360.8. Add a class for mapping media type file extension resolver. It allows to:

	Instantiate mapping media type file extension resolver  with media types map;
	Get media types;
	Get all media types;
	Add mapping;
	Resolve file extensions;
	Get all file extensions;
	Lookup media type

360.9. Add a class for mapping media type file extension resolver tests. It allows to:

	Resolve extensions;
	Resolve extensions no match;
	Lookup media type case insensitive

360.10. Add an interface declaration  for media type file extension resolver. It allows to:

	Resolve file extensions;
	Get all file extensions

360.11. Add a class for parameter content negotiation strategy. It allows to:

	Instantiate parameter content negotiation strategy  with media types map;
	Set parameter name;
	Get parameter name;
	Get media type key

360.12. Add a class for path extension content negotiation strategy. It allows to:

	Instantiate path extension content negotiation strategy;
	Instantiate path extension content negotiation strategy  with media types map;
	Set url path helper;
	Get set use jaf;
	Get media type key;
	Get media type  for resource

360.13. Add a class for path extension content negotiation strategy tests. It allows to:

	Handle setup;
	Resolve media types  from mapping;
	Resolve media types  from media type factory;
	Get media type filename  with context path;
	Get media type filename  with encoded URI;
	Resolve media types ignore unknown extension;
	Resolve media types do  not ignore unknown extension

360.14. Add a class for servlet path extension content negotiation strategy. It allows to:

	Instantiate servlet path extension content negotiation strategy  with servlet context;
	Instantiate servlet path extension content negotiation strategy  with servlet context, media types map and media types map;
	Handle no match;
	Get media type  for resource

361. Changes to package org.springframework.web.bind:  

361.1. Add a class for escaped errors. It allows to:

	Instantiate escaped errors  with source errors;
	Get source;
	Get object name;
	Set nested path;
	Get nested path;
	Push nested path;
	Pop nested path;
	Reject escaped errors;
	Reject value;
	Add all errors;
	Check if escaped errors has errors;
	Get error count;
	Get all errors;
	Check if escaped errors has global errors;
	Get global error count;
	Get global errors;
	Get global error;
	Check if escaped errors has field errors;
	Get field error count;
	Get field errors;
	Get field error;
	Get field value;
	Get field type;
	Escape object error;
	Escape object errors

361.2. Add a class for escaped errors tests. It allows to:

	Handle test escaped errors

361.3. Add a class for method argument not valid exception. It allows to:

	Instantiate method argument not valid exception  with method parameter, binding result and binding result;
	Get parameter;
	Get binding result;
	Get message

361.4. Add a class for missing path variable exception. It allows to:

	Instantiate missing path variable exception  with method parameter;
	Get message;
	Get variable name;
	Get parameter

361.5. Add a class for missing servlet request parameter exception. It allows to:

	Instantiate missing servlet request parameter exception;
	Get message;
	Get parameter name;
	Get parameter type

361.6. Add a class for servlet request binding exception. It allows to:

	Instantiate servlet request binding exception;
	Instantiate servlet request binding exception  with cause throwable

361.7. Add a class for servlet request data binder. It allows to:

	Instantiate servlet request data binder;
	Handle bind;
	Add bind values;
	Close no catch

361.8. Add a class for servlet request data binder tests. It allows to:

	Handle test binding with nested object creation;
	Get set as text;
	Handle test field prefix causes field reset;
	Handle test field prefix causes field reset with ignore unknown fields;
	Handle test field default;
	Handle test field default preempts field marker;
	Handle test field default non boolean;
	Handle test with comma separated string array;
	Handle test binding with nested object creation and wrong order;
	Handle test no prefix;
	Handle test prefix;
	Handle test no parameters;
	Handle test multiple values for parameter;
	Do test tony

361.9. Add a class for servlet request parameter property values. It allows to:

	Instantiate servlet request parameter property values  with servlet request;

361.10. Add a class for servlet request utils tests. It allows to:

	Handle test int parameter;
	Handle test int parameters;
	Handle test long parameter;
	Handle test long parameters;
	Handle test float parameter;
	Handle test float parameters;
	Handle test double parameter;
	Handle test double parameters;
	Handle test boolean parameter;
	Handle test boolean parameters;
	Handle test string parameter;
	Handle test get int parameter with default value handling is fast enough;
	Handle test get long parameter with default value handling is fast enough;
	Handle test get float parameter with default value handling is fast enough;
	Handle test get double parameter with default value handling is fast enough;
	Handle test get boolean parameter with default value handling is fast enough;
	Handle test get string parameter with default value handling is fast enough

361.11. Add a class for unsatisfied servlet request parameter exception. It allows to:

	Instantiate unsatisfied servlet request parameter exception  with actual params map;
	Instantiate unsatisfied servlet request parameter exception  with param conditions list, actual params map and actual params map;
	Get message;
	Get param conditions;
	Get param condition groups;
	Get actual params;
	Convert request parameter map

361.12. Add a class for web data binder. It allows to:

	Instantiate web data binder;
	Set field marker prefix;
	Get field marker prefix;
	Set field default prefix;
	Get field default prefix;
	Set bind empty multipart files;
	Check if web data binder is bind empty multipart files;
	Do bind;
	Check field defaults;
	Check field markers;
	Get empty value;
	Handle bind multipart

362. Changes to package org.springframework.web.bind.annotation:  

362.1. Add an interface declaration  for value constants

363. Changes to package org.springframework.web.bind.support:  

363.1. Add a class for configurable web binding initializer. It allows to:

	Set auto grow nested paths;
	Check if configurable web binding initializer is auto grow nested paths;
	Set direct field access;
	Check if configurable web binding initializer is direct field access;
	Set message codes resolver;
	Get message codes resolver;
	Set binding error processor;
	Get binding error processor;
	Set validator;
	Get validator;
	Set conversion service;
	Get conversion service;
	Set property editor registrar;
	Set property editor registrars;
	Get property editor registrars;
	Handle init binder

363.2. Add a class for default data binder factory. It allows to:

	Instantiate default data binder factory  with web binding initializer;
	Create binder;
	Create binder instance;
	Handle init binder

363.3. Add a class for default session attribute store. It allows to:

	Set attribute name prefix;
	Handle store attribute;
	Retrieve attribute;
	Handle cleanup attribute;
	Get attribute name  in session

363.4. Add an interface declaration  for session attribute store. It allows to:

	Handle store attribute;
	Retrieve attribute;
	Handle cleanup attribute

363.5. Add an interface declaration  for session status. It allows to:

	Set complete;
	Check if session status is complete

363.6. Add a class for simple session status. It allows to:

	Set complete;
	Check if simple session status is complete

363.7. Add a class for spring web constraint validator factory. It allows to:

	Get instance;
	Release instance;
	Get web application context

363.8. Add an interface declaration  for web argument resolver. It allows to:

	Resolve argument

363.9. Add an interface declaration  for web binding initializer. It allows to:

	Handle init binder;

363.10. Add an interface declaration  for web data binder factory. It allows to:

	Create binder

363.11. Add a class for web request data binder. It allows to:

	Instantiate web request data binder;
	Handle bind;
	Check if web request data binder is multipart request;
	Handle bind parts;
	Close no catch

364. Changes to package org.springframework.web.client:  

364.1. Add an interface declaration  for async request callback. It allows to:

	Do org springframework http client async client http request with request

364.2. Add an interface declaration  for async rest operations. It allows to:

	Get rest operations;
	Get response type class for entity;
	Get url URI for entity;
	Head async rest operations for headers;
	Head uri variables map for headers;
	Head url URI for headers;
	Post request http entity for location;
	Post url URI for location;
	Post request http entity for entity;
	Post url URI for entity;
	Put request http entity;
	Put url URI;
	Delete async rest operations;
	Delete uri variables map;
	Delete url URI;
	Get options for allow;
	Get exchange;
	Execute http method;
	Execute url URI

364.3. Add a class for default response error handler. It allows to:

	Check if default response error handler has error;
	Handle error;
	Get http status code;
	Get response body;
	Get charset

364.4. Add a class for http message converter extractor. It allows to:

	Instantiate http message converter extractor  with response type class, message converters list and message converters list;
	Instantiate http message converter extractor  with response type, message converters list and message converters list;
	Instantiate http message converter extractor  with response type, message converters list, logger and logger;
	Extract data;
	Get content type

364.5. Add a class for http message converter extractor tests. It allows to:

	No content;
	Handle not modified;
	Handle informational;
	Zero content length;
	Handle empty message body;
	Handle null message body;
	Handle normal;
	Can http message converter extractor tests not read;
	Handle generics;
	Handle converter throws IO exception;
	Handle converter throws http message not readable exception;
	Create converter list

364.6. Add a class for http status code exception. It allows to:

	Instantiate http status code exception  with status;
	Instantiate http status code exception  with status, response charset and response charset;
	Instantiate http status code exception  with status, response headers, response charset and response charset;
	Get message;
	Get status code

364.7. Add a class for http status code exception tests. It allows to:

	Handle test serializability;
	Handle empty status text

364.8. Add a class for message body client http response wrapper. It allows to:

	Instantiate message body client http response wrapper  with client http response;
	Check if message body client http response wrapper has message body;
	Check if message body client http response wrapper has empty message body;
	Get headers;
	Get body;
	Get status code;
	Get raw status code;
	Get status text;
	Close message body client http response wrapper

364.9. Add an interface declaration  for request callback. It allows to:

	Do client http request with request

364.10. Add a class for resource access exception. It allows to:

	Instantiate resource access exception;
	Instantiate resource access exception  with IO exception

364.11. Add an interface declaration  for response error handler. It allows to:

	Check if response error handler has error;
	Handle error;

364.12. Add an interface declaration  for response extractor. It allows to:

	Extract data

364.13. Add a class for rest client exception. It allows to:

	Instantiate rest client exception;
	Instantiate rest client exception  with ex throwable

364.14. Add a class for rest client response exception. It allows to:

	Instantiate rest client response exception  with response headers, response charset and response charset;
	Get raw status code;
	Get status text;
	Get response headers;
	Get response body  as byte array;
	Get response body  as string

364.15. Add an interface declaration  for rest operations. It allows to:

	Get response type class for object;
	Get url URI for object;
	Get response type class for entity;
	Get url URI for entity;
	Head rest operations for headers;
	Head uri variables map for headers;
	Head url URI for headers;
	Post rest operations for location;
	Post uri variables map for location;
	Post url URI for location;
	Post response type class for object;
	Post url URI for object;
	Post response type class for entity;
	Post url URI for entity;
	Put rest operations;
	Put uri variables map;
	Put url URI;
	Get patch for object;
	Delete rest operations;
	Delete uri variables map;
	Delete url URI;
	Get options for allow;
	Get exchange;
	Execute http method;
	Execute url URI

364.16. Add a class for rest template tests. It allows to:

	Handle setup;
	Var args template variables;
	Handle var args null template variable;
	Map template variables;
	Map null template variable;
	Handle uri template with trailing slash;
	Handle error handling;
	Get rest template tests for object;
	Get unsupported media type;
	Handle request avoids duplicate accept header values;
	Get rest template tests for entity;
	Get rest template tests for object with custom uri template handler;
	Head rest template tests for headers;
	Post rest template tests for location;
	Post rest template tests for location entity content type;
	Post rest template tests for location entity custom header;
	Post rest template tests for location no location;
	Post rest template tests for location null;
	Post rest template tests for object;
	Post rest template tests for entity;
	Post rest template tests for object null;
	Post rest template tests for entity null;
	Put rest template tests;
	Put null;
	Handle patch for object;
	Handle patch for object null;
	Delete rest template tests;
	Handle options for allow;
	Io exception;
	Io exception  with empty query string;
	Handle exchange;
	Handle exchange parameterized type;
	Handle request interceptor can add existing header value without body;
	Handle request interceptor can add existing header value with body;
	Handle mock sent request;
	Handle mock response status;
	Handle mock text plain http message converter;
	Handle mock http message converter;
	Handle mock text response body;
	Handle mock response body

364.17. Add a class for unknown http status code exception. It allows to:

	Instantiate unknown http status code exception  with response headers, response charset and response charset

365. Changes to package org.springframework.web.client.support:  

365.1. Add a class for rest gateway support. It allows to:

	Instantiate rest gateway support;
	Instantiate rest gateway support  with client http request factory;
	Set rest template;
	Get rest template

366. Changes to package org.springframework.web.context:  

366.1. Add a class for abstract context loader initializer. It allows to:

	Process abstract context loader initializer abstract context loader initializer on startup;
	Register context loader listener;
	Create root application context;
	Get root application context initializers

366.2. Add an interface declaration  for configurable web application context. It allows to:

	Set servlet context;
	Set servlet config;
	Get servlet config;
	Set namespace;
	Get namespace;
	Set config location;
	Set config locations;
	Get config locations

366.3. Add an interface declaration  for configurable web environment. It allows to:

	Handle init property sources

366.4. Add a class for context cleanup listener. It allows to:

	Handle context initialized;
	Handle context destroyed;
	Handle cleanup attributes

366.5. Add a class for context loader. It allows to:

	Instantiate context loader;
	Instantiate context loader  with web application context;
	Set context initializers;
	Init web application context;
	Create web application context;
	Determine context class;
	Configure and refresh web application context;
	Customize context;
	Determine context initializer classes;
	Get load initializer class;
	Load parent context;
	Close web application context;
	Get current web application context

366.6. Add a class for context loader listener. It allows to:

	Instantiate context loader listener;
	Instantiate context loader listener  with web application context;
	Handle context initialized;
	Handle context destroyed

366.7. Add an interface declaration  for servlet config aware. It allows to:

	Set servlet config

366.8. Add a class for servlet config aware bean. It allows to:

	Set servlet config;
	Get servlet config

366.9. Add an interface declaration  for servlet context aware. It allows to:

	Set servlet context

366.10. Add a class for servlet context aware bean. It allows to:

	Set servlet context;
	Get servlet context

366.11. Add a class for servlet context aware processor tests. It allows to:

	Handle servlet context aware with servlet context;
	Handle servlet context aware with servlet config;
	Handle servlet context aware with servlet context and servlet config;
	Handle servlet context aware with null servlet context and non null servlet config;
	Handle servlet context aware with non null servlet context and null servlet config;
	Handle servlet context aware with null servlet context;
	Handle servlet config aware with servlet context only;
	Handle servlet config aware with servlet config;
	Handle servlet config aware with servlet context and servlet config;
	Handle servlet config aware with null servlet context and non null servlet config;
	Handle servlet config aware with non null servlet context and null servlet config;
	Handle servlet config aware with null servlet context

366.12. Add an interface declaration  for web application context. It allows to:

	Get servlet context

367. Changes to package org.springframework.web.context.request:  

367.1. Add a class for abstract request attributes. It allows to:

	Handle request completed;
	Check if abstract request attributes is request active;
	Register request destruction callback;
	Remove request destruction callback;
	Execute request destruction callbacks;
	Update accessed session attributes

367.2. Add a class for abstract request attributes scope. It allows to:

	Get object factory;
	Remove abstract request attributes scope;
	Register destruction callback;
	Resolve contextual object;
	Get scope

367.3. Add an interface declaration  for async web request interceptor. It allows to:

	Handle after concurrent handling started

367.4. Add a class for destruction callback binding listener. It allows to:

	Instantiate destruction callback binding listener  with destruction callback runnable;
	Handle value bound;
	Handle value unbound

367.5. Add a class for faces request attributes. It allows to:

	Instantiate faces request attributes  with faces context;
	Get faces context;
	Get external context;
	Get attribute map;
	Get attribute;
	Set attribute;
	Remove attribute;
	Get attribute names;
	Register destruction callback;
	Resolve reference;
	Get session id;
	Get session mutex

367.6. Add a class for faces web request. It allows to:

	Instantiate faces web request  with faces context;
	Get native request;
	Get native response;
	Get header;
	Get header values;
	Get header names;
	Get parameter;
	Get parameter names;
	Get parameter values;
	Get parameter map;
	Get locale;
	Get context path;
	Get remote user;
	Get user principal;
	Check if faces web request is user in role;
	Check if faces web request is secure;
	Check faces web request not modified;
	Get description;
	Convert faces web request to string

367.7. Add an interface declaration  for native web request. It allows to:

	Get native request;
	Get native response;

367.8. Add a class for request and session scoped bean tests. It allows to:

	Handle test put bean in request;
	Handle test put bean in session

367.9. Add an interface declaration  for request attributes. It allows to:

	Get attribute;
	Set attribute;
	Remove attribute;
	Get attribute names;
	Register destruction callback;
	Resolve reference;
	Get session id;
	Get session mutex

367.10. Add a class for request context listener. It allows to:

	Handle request initialized;
	Handle request destroyed

367.11. Add a class for request context listener tests. It allows to:

	Handle request context listener with same thread;
	Handle request context listener with same thread and attributes gone;
	Handle request context listener with different thread;
	Run

367.12. Add a class for request scope. It allows to:

	Get scope;
	Get conversation id

367.13. Add a class for request scope tests. It allows to:

	Handle setup;
	Reset request attributes;
	Get request scope tests from scope;
	Handle destruction at request completion;
	Get request scope tests from factory bean in scope;
	Convert circle leads;
	Handle inner bean inherits containing bean scope by default;
	Handle request scoped inner bean destroyed while contained by singleton

367.14. Add a class for request scoped proxy tests. It allows to:

	Handle setup;
	Handle test get from scope;
	Handle test get from scope through dynamic proxy;
	Handle test destruction at request completion;
	Handle test get from factory bean in scope;
	Handle test get inner bean from scope;
	Handle test get anonymous inner bean from scope

367.15. Add a class for servlet request attributes. It allows to:

	Instantiate servlet request attributes  with http servlet request;
	Instantiate servlet request attributes  with http servlet request, http servlet response and http servlet response;
	Get request;
	Get response;
	Get session;
	Obtain session;
	Get attribute;
	Set attribute;
	Remove attribute;
	Get attribute names;
	Register destruction callback;
	Resolve reference;
	Get session id;
	Get session mutex;
	Update accessed session attributes;
	Check if servlet request attributes is immutable session attribute;
	Register session destruction callback;
	Convert servlet request attributes to string

367.16. Add a class for servlet request attributes tests. It allows to:

	Ctor rejects null arg;
	Set request scoped attribute;
	Set request scoped attribute  after completion;
	Set session scoped attribute;
	Set session scoped attribute  after completion;
	Get session scoped attribute does  not force creation of session;
	Remove session scoped attribute;
	Remove session scoped attribute does  not force creation of session;
	Update accessed attributes;
	Skip immutable string;
	Skip immutable character;
	Skip immutable boolean;
	Skip immutable integer;
	Skip immutable float;
	Skip immutable big integer;
	Do skip immutable value

367.17. Add a class for servlet web request. It allows to:

	Instantiate servlet web request  with http servlet request;
	Instantiate servlet web request  with http servlet request, http servlet response and http servlet response;
	Get native request;
	Get native response;
	Get http method;
	Get header;
	Get header values;
	Get header names;
	Get parameter;
	Get parameter values;
	Get parameter names;
	Get parameter map;
	Get locale;
	Get context path;
	Get remote user;
	Get user principal;
	Check if servlet web request is user in role;
	Check if servlet web request is secure;
	Check servlet web request not modified;
	Validate servlet web request if unmodified since;
	Validate servlet web request if none match;
	Get pad etag if necessary;
	Validate servlet web request if modified since;
	Check if servlet web request is not modified;
	Parse date header;
	Parse date value;
	Get description;
	Convert servlet web request to string

367.18. Add a class for servlet web request http methods tests. It allows to:

	Handle safe methods;
	Handle setup;
	Check servlet web request http methods tests not modified non 2 xx status;
	Check servlet web request http methods tests not modified invalid status;
	Check servlet web request http methods tests not modified invalid if none match header;
	Check servlet web request http methods tests not modified header already set;
	Check servlet web request http methods tests not modified timestamp;
	Check modified timestamp;
	Check servlet web request http methods tests not modified E tag;
	Check servlet web request http methods tests not modified E tag with separator chars;
	Check modified E tag;
	Check servlet web request http methods tests not modified unpadded E tag;
	Check modified unpadded E tag;
	Check servlet web request http methods tests not modified wildcard is ignored;
	Check servlet web request http methods tests not modified E tag and timestamp;
	Check servlet web request http methods tests not modified E tag and modified timestamp;
	Check modified E tag and  not modified timestamp;
	Check servlet web request http methods tests not modified E tag weak strong;
	Check servlet web request http methods tests not modified E tag strong weak;
	Check servlet web request http methods tests not modified multiple E tags;
	Check servlet web request http methods tests not modified timestamp with length part;
	Check modified timestamp  with length part;
	Check servlet web request http methods tests not modified timestamp conditional put;
	Check servlet web request http methods tests not modified timestamp conditional put conflict

367.19. Add a class for servlet web request tests. It allows to:

	Handle setup;
	Handle parameters;
	Handle locale;
	Handle native request;
	Get decorated native request

367.20. Add a class for session scope. It allows to:

	Get scope;
	Get conversation id;
	Get object factory;
	Remove session scope

367.21. Add a class for web application context scope tests. It allows to:

	Handle init application context;
	Handle test request scope;
	Handle test session scope;
	Handle test application scope

367.22. Add an interface declaration  for web request. It allows to:

	Get header;
	Get header values;
	Get header names;
	Get parameter;
	Get parameter values;
	Get parameter names;
	Get parameter map;
	Get locale;
	Get context path;
	Get remote user;
	Get user principal;
	Check if web request is user in role;
	Check if web request is secure;
	Check web request not modified;
	Get description

367.23. Add an interface declaration  for web request interceptor. It allows to:

	Handle web request;
	Process web request interceptor web request interceptor after completion

368. Changes to package org.springframework.web.context.request.async:  

368.1. Add an interface declaration  for async web request. It allows to:

	Set timeout;
	Add timeout handler;
	Add error handler;
	Add completion handler;
	Start async;
	Check if async web request is async started;
	Dispatch async web request;
	Check if async web request is async complete

368.2. Add a class for callable interceptor chain. It allows to:

	Instantiate callable interceptor chain  with interceptors list;
	Set task future;
	Apply native web request before concurrent handling;
	Apply pre process;
	Apply post process;
	Trigger native web request after timeout;
	Cancel task;
	Trigger native web request after error;
	Trigger native web request after completion

368.3. Add an interface declaration  for callable processing interceptor. It allows to:

	Process callable processing interceptor callable processing interceptor before concurrent handling;
	Pre process;
	Post process;
	Handle timeout;
	Handle error;
	Process callable processing interceptor callable processing interceptor after completion

368.4. Add a class for callable processing interceptor adapter. It allows to:

	Process callable processing interceptor adapter callable processing interceptor adapter before concurrent handling;
	Pre process;
	Post process;
	Handle timeout;
	Handle error;
	Process callable processing interceptor adapter callable processing interceptor adapter after completion

368.5. Add a class for deferred result interceptor chain. It allows to:

	Instantiate deferred result interceptor chain  with interceptors list;
	Apply native web request before concurrent handling;
	Apply pre process;
	Apply post process;
	Trigger native web request after timeout;
	Trigger native web request after error;
	Trigger native web request after completion

368.6. Add an interface declaration  for deferred result processing interceptor. It allows to:

	Process deferred result processing interceptor deferred result processing interceptor before concurrent handling;
	Pre process;
	Post process;
	Handle timeout;
	Handle error;
	Process deferred result processing interceptor deferred result processing interceptor after completion

368.7. Add a class for deferred result processing interceptor adapter. It allows to:

	Process deferred result processing interceptor adapter deferred result processing interceptor adapter before concurrent handling;
	Pre process;
	Post process;
	Handle timeout;
	Handle error;
	Process deferred result processing interceptor adapter deferred result processing interceptor adapter after completion

368.8. Add a class for deferred result tests. It allows to:

	Set result;
	Set result  twice;
	Check if deferred result tests is set or expired;
	Check if deferred result tests has result;
	Process deferred result tests deferred result tests on completion;
	Run;
	Process deferred result tests deferred result tests on timeout;
	Process deferred result tests deferred result tests on error;
	Accept throwable

368.9. Add a class for standard servlet async web request. It allows to:

	Instantiate standard servlet async web request  with http servlet request, http servlet response and http servlet response;
	Set timeout;
	Add timeout handler;
	Add error handler;
	Add completion handler;
	Check if standard servlet async web request is async started;
	Check if standard servlet async web request is async complete;
	Start async;
	Dispatch standard servlet async web request;
	Process standard servlet async web request standard servlet async web request on start async;
	Process standard servlet async web request standard servlet async web request on error;
	Process standard servlet async web request standard servlet async web request on timeout;
	Process standard servlet async web request standard servlet async web request on complete

368.10. Add a class for standard servlet async web request tests. It allows to:

	Handle setup;
	Check if standard servlet async web request tests is async started;
	Start async;
	Start async multiple times;
	Start async  not supported;
	Start async  after completed;
	Process standard servlet async web request tests standard servlet async web request tests on timeout default behavior;
	Process standard servlet async web request tests standard servlet async web request tests on timeout handler;
	Process standard servlet async web request tests standard servlet async web request tests on error handler;
	Set timeout  during concurrent handling;
	Process standard servlet async web request tests standard servlet async web request tests on completion handler;
	Process standard servlet async web request tests standard servlet async web request tests on error handler after on error event;
	Process standard servlet async web request tests standard servlet async web request tests on completion handler after on complete event

368.11. Add an object creator class for timeout callable processing interceptor. It allows to:

	Handle timeout

368.12. Add a class for timeout deferred result processing interceptor. It allows to:

	Handle timeout

368.13. Add a class for web async manager. It allows to:

	Instantiate web async manager;
	Set async web request;
	Set task executor;
	Check if web async manager is concurrent handling started;
	Check if web async manager has concurrent result;
	Get concurrent result;
	Get concurrent result context;
	Get callable interceptor;
	Get deferred result interceptor;
	Register callable interceptor;
	Register callable interceptors;
	Register deferred result interceptor;
	Register deferred result interceptors;
	Handle clear concurrent result;
	Start callable processing;
	Log executor warning;
	Get format request uri;
	Set concurrent result and dispatch;
	Start deferred result processing;
	Start async processing

368.14. Add a class for web async task. It allows to:

	Instantiate web async task  with callable;
	Instantiate web async task  with async task executor, callable and callable;
	Get callable;
	Get timeout;
	Set bean factory;
	Get executor;
	Process web async task web async task on timeout;
	Process web async task web async task on error;
	Process web async task web async task on completion;
	Get interceptor;
	Handle timeout;
	Handle error;
	Process  after completion

368.15. Add a class for web async utils. It allows to:

	Get async manager;
	Create async web request

369. Changes to package org.springframework.web.context.support:  

369.1. Add a class for abstract refreshable web application context. It allows to:

	Instantiate abstract refreshable web application context;
	Set servlet context;
	Get servlet context;
	Set servlet config;
	Get servlet config;
	Set namespace;
	Get namespace;
	Get config locations;
	Get application name;
	Create environment;
	Post process bean factory;
	Get resource  by path;
	Get resource pattern resolver;
	Process abstract refreshable web application context abstract refreshable web application context on refresh;
	Handle init property sources;
	Get theme

369.2. Add a class for annotation config web application context. It allows to:

	Set bean name generator;
	Get bean name generator;
	Set scope metadata resolver;
	Get scope metadata resolver;
	Register annotated classes;
	Scan annotation config web application context;
	Load bean definitions;
	Get annotated bean definition reader;
	Get class path bean definition scanner

369.3. Add a class for context exposing http servlet request. It allows to:

	Instantiate context exposing http servlet request  with original request, web application context and web application context;
	Instantiate context exposing http servlet request  with original request, web application context, exposed context bean names set and exposed context bean names set;
	Get web application context;
	Get attribute;
	Set attribute

369.4. Add a class for generic web application context. It allows to:

	Instantiate generic web application context;
	Instantiate generic web application context  with servlet context;
	Instantiate generic web application context  with default listable bean factory;
	Instantiate generic web application context  with default listable bean factory, servlet context and servlet context;
	Set servlet context;
	Get servlet context;
	Get application name;
	Create environment;
	Post process bean factory;
	Get resource  by path;
	Get resource pattern resolver;
	Process generic web application context generic web application context on refresh;
	Handle init property sources;
	Get theme;
	Set servlet config;
	Get servlet config;
	Set namespace;
	Get namespace;
	Set config location;
	Set config locations;
	Get config locations

369.5. Add a class for groovy web application context. It allows to:

	Load bean definitions;
	Init bean definition reader;
	Get default config locations;
	Set meta class;
	Get meta class;
	Invoke method;
	Set property;
	Get property

369.6. Add a class for http request handler servlet. It allows to:

	Handle init;
	Handle service

369.7. Add a class for http request handler tests. It allows to:

	Handle test http request handler servlet pass through;
	Handle request

369.8. Add a class for live beans view servlet. It allows to:

	Handle init;
	Build live beans view;
	Get http servlet request

369.9. Add a class for request handled event. It allows to:

	Instantiate request handled event;
	Instantiate request handled event  with failure cause throwable;
	Get processing time millis;
	Get session id;
	Get user name;
	Get was failure;
	Get failure cause;
	Get short description;
	Get description;
	Convert request handled event to string

369.10. Add a class for resource tests. It allows to:

	Handle test servlet context resource;
	Handle test servlet context resource with relative path;
	Do test resource

369.11. Add a class for servlet config property source. It allows to:

	Instantiate servlet config property source  with servlet config;
	Get property names;
	Get property

369.12. Add a class for servlet context attribute exporter. It allows to:

	Set attributes;
	Set servlet context

369.13. Add a class for servlet context attribute factory bean. It allows to:

	Set attribute name;
	Set servlet context;
	Get object;
	Get object type;
	Check if servlet context attribute factory bean is singleton

369.14. Add a class for servlet context aware processor. It allows to:

	Instantiate servlet context aware processor;
	Instantiate servlet context aware processor  with servlet context;
	Instantiate servlet context aware processor  with servlet config;
	Instantiate servlet context aware processor  with servlet context, servlet config and servlet config;
	Get servlet context;
	Get servlet config;
	Post process  before initialization;
	Post process  after initialization

369.15. Add a class for servlet context live beans view. It allows to:

	Instantiate servlet context live beans view  with servlet context;
	Find application contexts

369.16. Add a class for servlet context parameter factory bean. It allows to:

	Set init param name;
	Set servlet context;
	Get object;
	Get object type;
	Check if servlet context parameter factory bean is singleton

369.17. Add a class for servlet context property source. It allows to:

	Instantiate servlet context property source  with servlet context;
	Get property names;
	Get property

369.18. Add a class for servlet context resource. It allows to:

	Instantiate servlet context resource  with servlet context;
	Get servlet context;
	Get path;
	Check if servlet context resource exists;
	Check if servlet context resource is readable;
	Check if servlet context resource is file;
	Get input stream;
	Get URL;
	Get file;
	Create relative;
	Get filename;
	Get description;
	Get path  within context;
	Check if servlet context resource equals;
	Hash code

369.19. Add an object creator class for servlet context resource loader. It allows to:

	Instantiate servlet context resource loader  with servlet context;
	Get resource  by path

369.20. Add a class for servlet context resource pattern resolver. It allows to:

	Instantiate servlet context resource pattern resolver  with servlet context;
	Instantiate servlet context resource pattern resolver  with resource loader;
	Do find path matching file resources;
	Do retrieve matching servlet context resources;
	Do retrieve matching jar entries

369.21. Add a class for servlet context scope. It allows to:

	Instantiate servlet context scope  with servlet context;
	Get object factory;
	Remove servlet context scope;
	Register destruction callback;
	Resolve contextual object;
	Get conversation id;
	Destroy servlet context scope

369.22. Add a class for servlet context support tests. It allows to:

	Handle test servlet context attribute factory bean;
	Handle test servlet context attribute factory bean with attribute not found;
	Handle test servlet context parameter factory bean;
	Handle test servlet context parameter factory bean with attribute not found;
	Handle test servlet context attribute exporter;
	Handle test servlet context resource loader;
	Handle test servlet context resource pattern resolver;
	Get resource paths;
	Handle test servlet context resource pattern resolver with pattern path;
	Handle test servlet context resource pattern resolver with unbounded pattern path;
	Handle test servlet context resource pattern resolver with absolute paths;

369.23. Add a class for servlet request handled event. It allows to:

	Instantiate servlet request handled event;
	Instantiate servlet request handled event  with failure cause throwable;
	Get request url;
	Get client address;
	Get method;
	Get servlet name;
	Get status code;
	Get short description;
	Get description;
	Convert servlet request handled event to string

369.24. Add a class for spr 8510 tests. It allows to:

	Handle abstract refreshable WAC respects programmatic config locations;
	Handle abstract refreshable WAC respects init param over programmatic config locations;
	Handle abstract refreshable WAC falls back to init param;
	Convert custom abstract refreshable WAC falls back;
	Get default config locations;
	Handle abstract refreshable WAC falls back to convention based naming;
	Handle generic WAC;
	Handle annotation config WAC

369.25. Add a class for spring bean autowiring support. It allows to:

	Instantiate spring bean autowiring support;
	Handle process injection based on current context;
	Handle process injection based on servlet context

369.26. Add a class for standard servlet environment. It allows to:

	Customize property sources;
	Handle init property sources

369.27. Add a class for standard servlet environment tests. It allows to:

	Handle property source order

369.28. Add a class for static web application context. It allows to:

	Instantiate static web application context;
	Set servlet context;
	Get servlet context;
	Set servlet config;
	Get servlet config;
	Set namespace;
	Get namespace;
	Set config location;
	Set config locations;
	Get config locations;
	Post process bean factory;
	Get resource  by path;
	Get resource pattern resolver;
	Create environment;
	Process static web application context static web application context on refresh;
	Handle init property sources;
	Get theme

369.29. Add a class for web application object support. It allows to:

	Set servlet context;
	Check if web application object support is context required;
	Handle init application context;
	Handle init servlet context;
	Get web application context;
	Get servlet context;
	Get temp dir

369.30. Add a class for xml web application context. It allows to:

	Load bean definitions;
	Init bean definition reader;
	Get default config locations

370. Changes to package org.springframework.web.cors:  

370.1. Add a class for cors configuration. It allows to:

	Instantiate cors configuration;
	Instantiate cors configuration  with other cors configuration;
	Set allowed origins;
	Get allowed origins;
	Add allowed origin;
	Set allowed methods;
	Get allowed methods;
	Add allowed method;
	Set allowed headers;
	Get allowed headers;
	Add allowed header;
	Set exposed headers;
	Get exposed headers;
	Add exposed header;
	Set allow credentials;
	Get allow credentials;
	Set max age;
	Get max age;
	Apply permit default values;
	Combine other cors configuration;
	Combine source list;
	Check origin;
	Check http method;
	Check headers

370.2. Add an interface declaration  for cors configuration source. It allows to:

	Get cors configuration

370.3. Add a class for cors configuration tests. It allows to:

	Set null values;
	Set values;
	Handle asterisk wild card on add exposed header;
	Handle asterisk wild card on set exposed headers;
	Combine cors configuration tests with null;
	Combine cors configuration tests with null properties;
	Combine cors configuration tests with default permit values;
	Combine cors configuration tests with asterisk wild card;
	Combine cors configuration tests with duplicated elements;
	Combine cors configuration tests;
	Check origin allowed;
	Check origin  not allowed;
	Check method allowed;
	Check method  not allowed;
	Check headers allowed;
	Check headers  not allowed;
	Change permit default values

370.4. Add an interface declaration  for cors processor. It allows to:

	Handle process request

370.5. Add a class for cors utils. It allows to:

	Check if cors utils is cors request;
	Get port;
	Check if cors utils is pre flight request

370.6. Add a class for cors utils tests. It allows to:

	Check if cors utils tests is cors request;
	Check if cors utils tests is not cors request;
	Check if cors utils tests is pre flight request;
	Check if cors utils tests is not pre flight request

370.7. Add a class for default cors processor. It allows to:

	Handle process request;
	Reject request;
	Handle internal;
	Check origin;
	Check methods;
	Get method  to use;
	Check headers;
	Get headers  to use

370.8. Add a class for default cors processor tests. It allows to:

	Handle setup;
	Handle request without origin header;
	Handle same origin request;
	Handle actual request with origin header;
	Handle actual request with origin header and null config;
	Handle actual request with origin header and allowed origin;
	Handle actual request credentials;
	Handle actual request credentials with origin wildcard;
	Handle actual request case insensitive origin match;
	Handle actual request exposed headers;
	Handle preflight request all origins allowed;
	Handle preflight request wrong allowed method;
	Handle preflight request matched allowed method;
	Handle preflight request test with origin but without other headers;
	Handle preflight request without request method;
	Handle preflight request with request and method header but no config;
	Handle preflight request valid request and config;
	Handle preflight request credentials;
	Handle preflight request credentials with origin wildcard;
	Handle preflight request allowed headers;
	Handle preflight request allows all headers;
	Handle preflight request with empty headers;
	Handle preflight request with null config

370.9. Add a class for url based cors configuration source. It allows to:

	Set path matcher;
	Set url based cors configuration source always use full path;
	Set url decode;
	Set lookup path attribute name;
	Set remove semicolon content;
	Set url path helper;
	Set cors configurations;
	Get cors configurations;
	Register cors configuration;
	Get cors configuration

370.10. Add a class for url based cors configuration source tests. It allows to:

	Handle empty;
	Register url based cors configuration source tests;
	Handle unmodifiable configurations map

371. Changes to package org.springframework.web.filter:  

371.1. Add a class for abstract request logging filter. It allows to:

	Set include query string;
	Check if abstract request logging filter is include query string;
	Set include client info;
	Check if abstract request logging filter is include client info;
	Set include headers;
	Check if abstract request logging filter is include headers;
	Set include payload;
	Check if abstract request logging filter is include payload;
	Set header predicate;
	Get header predicate;
	Set max payload length;
	Get max payload length;
	Get set before message prefix;
	Get set before message suffix;
	Get set after message prefix;
	Get set after message suffix;
	Should abstract request logging filter not filter async dispatch;
	Do filter internal;
	Get http servlet request before message;
	Get http servlet request after message;
	Create message;
	Get message payload;
	Log http servlet request;
	Process abstract request logging filter abstract request logging filter before request;
	Process abstract request logging filter abstract request logging filter after request

371.2. Add a class for character encoding filter. It allows to:

	Instantiate character encoding filter;
	Set encoding;
	Encoding character encoding filter;
	Set force encoding;
	Set force request encoding;
	Check if character encoding filter is force request encoding;
	Set force response encoding;
	Check if character encoding filter is force response encoding;
	Do filter internal

371.3. Add a class for character encoding filter tests. It allows to:

	Force encoding  always sets encoding;
	Encoding character encoding filter tests if empty and not forced;
	Check if character encoding filter tests does not if encoding is not empty and not forced;
	Process character encoding filter tests character encoding filter tests with bean initialization;
	Process character encoding filter tests character encoding filter tests with incomplete initialization;
	Set force encoding  on request only;
	Get filtered name

371.4. Add a class for commons request logging filter. It allows to:

	Log http servlet request;
	Process commons request logging filter commons request logging filter before request;
	Process commons request logging filter commons request logging filter after request

371.5. Add a class for cors filter. It allows to:

	Instantiate cors filter  with configuration source;
	Set cors processor;
	Do filter internal

371.6. Add a class for cors filter tests. It allows to:

	Handle setup;
	Non cors request;
	Handle same origin request;
	Handle valid actual request;
	Handle invalid actual request;
	Handle valid pre flight request;
	Handle invalid pre flight request

371.7. Add a class for delegating filter proxy. It allows to:

	Instantiate delegating filter proxy;
	Instantiate delegating filter proxy  with delegate filter;
	Instantiate delegating filter proxy  with wac web application context;
	Set context attribute;
	Get context attribute;
	Set target bean name;
	Get target bean name;
	Set target filter lifecycle;
	Check if delegating filter proxy is target filter lifecycle;
	Handle init filter bean;
	Do filter;
	Destroy delegating filter proxy;
	Find web application context;
	Handle init delegate;
	Invoke delegate;
	Destroy delegate

371.8. Add a class for forwarded header filter tests. It allows to:

	Handle setup;
	Handle context path empty;
	Handle context path with trailing slash;
	Handle context path with trailing slashes;
	Handle context path with forwarded prefix;
	Handle context path with forwarded prefix trailing slash;
	Get filter and get context path;
	Get filter and get wrapped request;
	Handle context path preserve encoding;
	Handle request uri;
	Handle request uri with trailing slash;
	Handle request uri preserve encoding;
	Handle request uri equals context path;
	Handle request uri root url;
	Handle request uri preserve semicolon content;
	Handle case insensitive forwarded prefix;
	Get header;
	Should filter;
	Handle test should filter;
	Should forwarded header filter tests not filter;
	Get forwarded request;
	Get forwarded request in remove only mode;
	Get forwarded request with ssl;
	Get forwarded request with servlet forward;
	Handle request uri with forwarded prefix;
	Handle request uri with forwarded prefix trailing slash;
	Handle request URL new string buffer;
	Send redirect  with absolute path;
	Send redirect  with absolute path query param and fragment;
	Send redirect  with context path;
	Send redirect  with relative path;
	Send redirect  with file in path and relative redirect;
	Send redirect  with relative path ignores file;
	Send redirect  with location dot dot path;
	Send redirect  with location has scheme;
	Send redirect  with location slash slash;
	Send redirect  with location slash slash parent dot dot;
	Send redirect  with no X forwarded and absolute path;
	Send redirect  with no X forwarded and dot dot path;
	Send redirect when request  only and X forwarded then uses relative redirects;
	Send redirect when request  only and no X forwarded then uses relative redirects;
	Send redirect;
	Do filter internal

371.9. Add a class for hidden http method filter tests. It allows to:

	Handle filter with parameter;
	Handle filter with parameter disallowed methods;
	Handle filter with no parameter;
	Handle filter with parameter for method;
	Do filter

371.10. Add a class for once per request filter. It allows to:

	Do filter;
	Dispatch http servlet request;
	Check if once per request filter is async dispatch;
	Check if once per request filter is async started;
	Get once per request filter already filtered attribute name;
	Should http servlet request not filter;
	Should once per request filter not filter async dispatch;
	Should once per request filter not filter error dispatch;
	Do filter internal

371.11. Add a class for request context filter. It allows to:

	Set thread context inheritable;
	Should request context filter not filter async dispatch;
	Should request context filter not filter error dispatch;
	Do filter internal;
	Handle init context holders;
	Reset context holders

371.12. Add a class for request context filter tests. It allows to:

	Handle happy path;
	Process request context filter tests request context filter tests with exception;
	Handle test filter invocation

371.13. Add a class for servlet context request logging filter. It allows to:

	Process servlet context request logging filter servlet context request logging filter before request;
	Process servlet context request logging filter servlet context request logging filter after request

371.14. Add a class for shallow etag header filter tests. It allows to:

	Check if shallow etag header filter tests is eligible for etag;
	Handle filter no match;
	Handle filter no match weak E tag;
	Handle filter match;
	Handle filter match weak etag;
	Handle filter writer;
	Handle filter writer with disabled caching;
	Handle filter send error;
	Handle filter send error message;
	Handle filter send redirect;
	Handle filter flush response

372. Changes to package org.springframework.web.jsf:  

372.1. Add a class for decorating navigation handler. It allows to:

	Instantiate decorating navigation handler;
	Instantiate decorating navigation handler  with original navigation handler;
	Get decorated navigation handler;
	Handle navigation;
	Call next handler  in chain

372.2. Add a class for delegating navigation handler proxy. It allows to:

	Instantiate delegating navigation handler proxy;
	Instantiate delegating navigation handler proxy  with original navigation handler;
	Handle navigation;
	Get delegate;
	Get target bean name;
	Get bean factory;
	Get web application context

372.3. Add a class for delegating phase listener multicaster. It allows to:

	Get phase id;
	Process delegating phase listener multicaster delegating phase listener multicaster before phase;
	Process delegating phase listener multicaster delegating phase listener multicaster after phase;
	Get delegates;
	Get bean factory;
	Get web application context

372.4. Add a class for faces context utils. It allows to:

	Get web application context;
	Get required web application context;
	Get session mutex

372.5. Add a class for mock faces context. It allows to:

	Get application;
	Set application;
	Get client ids  with messages;
	Get external context;
	Set external context;
	Get maximum severity;
	Get messages;
	Get render kit;
	Get render response;
	Get response complete;
	Get response stream;
	Set response stream;
	Get response writer;
	Set response writer;
	Get view root;
	Set view root;
	Add message;
	Handle release;
	Render response;
	Handle response complete

372.6. Add a class for mock lifecycle. It allows to:

	Add phase listener;
	Execute faces context;
	Get phase listeners;
	Remove phase listener;
	Render faces context

373. Changes to package org.springframework.web.jsf.el:  

373.1. Add a class for spring bean faces EL resolver. It allows to:

	Get value;
	Get type;
	Get set value;
	Check if spring bean faces EL resolver is read only;
	Get feature descriptors;
	Get common property type;
	Get web application context

373.2. Add a class for web application context faces EL resolver. It allows to:

	Get value;
	Get type;
	Get set value;
	Check if web application context faces EL resolver is read only;
	Get feature descriptors;
	Get common property type;
	Get web application context

374. Changes to package org.springframework.web.method:  

374.1. Add a class for controller advice bean. It allows to:

	Instantiate controller advice bean;
	Instantiate controller advice bean  with bean factory;
	Get order;
	Get bean type;
	Resolve bean;
	Obtain bean factory;
	Check if controller advice bean is applicable to bean type;
	Check if controller advice bean equals;
	Hash code;
	Convert controller advice bean to string;
	Find annotated beans;
	Handle init order from bean;
	Handle init order from bean type

375. Changes to package org.springframework.web.method.annotation:  

375.1. Add a class for abstract web argument resolver adapter. It allows to:

	Instantiate abstract web argument resolver adapter  with adaptee web argument resolver;
	Check if abstract web argument resolver adapter supports parameter;
	Resolve argument;
	Get web request

375.2. Add a class for errors method argument resolver. It allows to:

	Check if errors method argument resolver supports parameter;
	Resolve argument

375.3. Add a class for exception handler method resolver. It allows to:

	Instantiate exception handler method resolver  with handler type class;
	Detect exception mappings;
	Detect annotation exception mappings;
	Add exception mapping;
	Check if exception handler method resolver has exception mappings;
	Resolve method;
	Resolve method  by throwable;
	Resolve method  by exception type;
	Get mapped method

375.4. Add a class for expression value method argument resolver tests. It allows to:

	Set expression value method argument resolver tests;
	Handle teardown;
	Check if expression value method argument resolver tests supports parameter;
	Resolve system property;
	Resolve context path;
	Handle params

375.5. Add a class for init binder data binder factory. It allows to:

	Instantiate init binder data binder factory  with binder methods list, web binding initializer and web binding initializer;
	Handle init binder;
	Check if init binder data binder factory is binder method applicable

375.6. Add a class for map method processor. It allows to:

	Check if map method processor supports parameter;
	Resolve argument;
	Check if map method processor supports return type;
	Handle return value

375.7. Add a class for map method processor tests. It allows to:

	Set map method processor tests;
	Check if map method processor tests supports parameter;
	Check if map method processor tests supports return type;
	Resolve argument value;
	Handle map return value;
	Handle map

375.8. Add a class for method argument conversion not supported exception. It allows to:

	Instantiate method argument conversion not supported exception  with required type class, method parameter, cause throwable and cause throwable;
	Get name;
	Get parameter

375.9. Add a class for method argument type mismatch exception. It allows to:

	Instantiate method argument type mismatch exception  with required type class, method parameter, cause throwable and cause throwable;
	Get name;
	Get parameter

375.10. Add a class for model method processor. It allows to:

	Check if model method processor supports parameter;
	Resolve argument;
	Check if model method processor supports return type;
	Handle return value

375.11. Add a class for model method processor tests. It allows to:

	Set model method processor tests;
	Check if model method processor tests supports parameter;
	Check if model method processor tests supports return type;
	Resolve argument value;
	Handle model return value;
	Get model

375.12. Add a class for request header map method argument resolver. It allows to:

	Check if request header map method argument resolver supports parameter;
	Resolve argument

375.13. Add a class for request header map method argument resolver tests. It allows to:

	Handle setup;
	Check if request header map method argument resolver tests supports parameter;
	Resolve map argument;
	Resolve multi value map argument;
	Resolve http headers argument;
	Handle params

375.14. Add a class for request header method argument resolver tests. It allows to:

	Handle setup;
	Reset request header method argument resolver tests;
	Check if request header method argument resolver tests supports parameter;
	Resolve string argument;
	Resolve string array argument;
	Resolve default value;
	Resolve default value  from system property;
	Resolve name  from system property through expression;
	Resolve name  from system property through placeholder;
	Resolve default value  from request;
	Handle not found;
	Handle date conversion;
	Handle instant conversion;
	Handle params

375.15. Add a class for request param map method argument resolver. It allows to:

	Check if request param map method argument resolver supports parameter;
	Resolve argument

375.16. Add a class for request param map method argument resolver tests. It allows to:

	Check if request param map method argument resolver tests supports parameter;
	Resolve map  of string;
	Resolve multi value map  of string;
	Resolve map  of multipart file;
	Resolve multi value map  of multipart file;
	Resolve map  of part;
	Resolve multi value map  of part;
	Handle param 1 map

375.17. Add a class for request param method argument resolver tests. It allows to:

	Check if request param method argument resolver tests supports parameter;
	Resolve string;
	Resolve string array;
	Resolve multipart file;
	Resolve multipart file list;
	Resolve multipart file array;
	Resolve part;
	Resolve part list;
	Resolve part array;
	Resolve multipart file  not annot;
	Resolve multipart file list notannot;
	Check if request param method argument resolver tests is multipart request;
	Check if request param method argument resolver tests is multipart request http put;
	No multipart content;
	Missing multipart file;
	Resolve part  not annot;
	Resolve default value;
	Missing request param;
	Missing request param empty value converted  to null;
	Missing request param empty value  not required;
	Resolve simple type param;
	Resolve simple type param  to null;
	Resolve empty value  to default;
	Resolve empty value  without default;
	Resolve empty value required  without default;
	Resolve optional param value;
	Missing optional param value;
	Resolve optional param array;
	Missing optional param array;
	Resolve optional param list;
	Missing optional param list;
	Resolve optional multipart file;
	Missing optional multipart file;
	Handle optional multipart file without multipart request;
	Handle param 3 map

375.18. Add a class for session attributes handler. It allows to:

	Instantiate session attributes handler  with handler type class, session attribute store and session attribute store;
	Check if session attributes handler has session attributes;
	Check if session attributes handler is handler session attribute;
	Handle store attributes;
	Retrieve attributes;
	Handle cleanup attributes;
	Retrieve attribute

375.19. Add a class for session status method argument resolver. It allows to:

	Check if session status method argument resolver supports parameter;
	Resolve argument

376. Changes to package org.springframework.web.method.support:  

376.1. Add an interface declaration  for async handler method return value handler. It allows to:

	Check if async handler method return value handler is async return value

376.2. Add a class for composite uri components contributor. It allows to:

	Instantiate composite uri components contributor  with contributors;
	Instantiate composite uri components contributor  with contributors collection;
	Instantiate composite uri components contributor  with contributors collection, cs conversion service and cs conversion service;
	Check if composite uri components contributor has contributors;
	Check if composite uri components contributor supports parameter;
	Contribute method argument;

376.3. Add a class for composite uri components contributor tests. It allows to:

	Check if composite uri components contributor tests supports parameter;
	Handle request

376.4. Add an interface declaration  for handler method argument resolver. It allows to:

	Check if handler method argument resolver supports parameter;
	Resolve argument

376.5. Add a class for handler method argument resolver composite. It allows to:

	Add resolver;
	Add resolvers;
	Get resolvers;
	Handle clear;
	Check if handler method argument resolver composite supports parameter;
	Resolve argument;
	Get argument resolver

376.6. Add a class for handler method argument resolver composite tests. It allows to:

	Set handler method argument resolver composite tests;
	Check if handler method argument resolver composite tests supports parameter;
	Resolve argument;
	Check argument resolver order;
	No suitable argument resolver;
	Handle arg 1 integer

376.7. Add an interface declaration  for handler method return value handler. It allows to:

	Check if handler method return value handler supports return type;
	Handle return value

376.8. Add a class for handler method return value handler composite. It allows to:

	Get handlers;
	Check if handler method return value handler composite supports return type;
	Get return value handler;
	Handle return value;
	Handle select handler;
	Check if handler method return value handler composite is async return value;
	Add handler;
	Add handlers

376.9. Add a class for invocable handler method. It allows to:

	Instantiate invocable handler method  with handler method;
	Instantiate invocable handler method  with method;
	Instantiate invocable handler method  with parameter types class;
	Get set data binder factory;
	Set handler method argument resolvers;
	Set parameter name discoverer;
	Invoke native web request for request;
	Get method argument values;
	Invoke invocable handler method

376.10. Add a class for model and view container. It allows to:

	Set ignore default model  on redirect;
	Set view name;
	Get view name;
	Set view;
	Get view;
	Check if model and view container is view reference;
	Get model;
	Use default model;
	Get default model;
	Set redirect model;
	Set redirect model scenario;
	Set status;
	Get status;
	Set binding disabled;
	Check if model and view container is binding disabled;
	Set binding;
	Get session status;
	Set request handled;
	Check if model and view container is request handled;
	Add attribute;
	Add all attributes;
	Merge attributes;
	Remove attributes;
	Check if model and view container contains attribute;
	Convert model and view container to string

376.11. Add a class for model and view container tests. It allows to:

	Handle setup;
	Get model;
	Redirect scenario  with redirect model;
	Redirect scenario  without redirect model;
	Ignore default model;
	Ignore default model and  without redirect model

376.12. Add a class for stub argument resolver. It allows to:

	Instantiate stub argument resolver;
	Instantiate stub argument resolver  with value type class;
	Get resolved parameters;
	Check if stub argument resolver supports parameter;
	Resolve argument

376.13. Add an interface declaration  for uri components contributor. It allows to:

	Check if uri components contributor supports parameter;
	Contribute method argument

377. Changes to package org.springframework.web.multipart:  

377.1. Add a class for max upload size exceeded exception. It allows to:

	Instantiate max upload size exceeded exception;
	Instantiate max upload size exceeded exception  with ex throwable;
	Get max upload size

377.2. Add a class for multipart exception. It allows to:

	Instantiate multipart exception;
	Instantiate multipart exception  with cause throwable

377.3. Add an interface declaration  for multipart file. It allows to:

	Get name;
	Get original filename;
	Get content type;
	Check if multipart file is empty;
	Get size;
	Get bytes;
	Get input stream;
	Get resource;
	Transfer  to dest file;
	Transfer  to dest path

377.4. Add an interface declaration  for multipart http servlet request. It allows to:

	Get request method;
	Get request headers;
	Get multipart headers

377.5. Add an interface declaration  for multipart request. It allows to:

	Get file names;
	Get file;
	Get files;
	Get file map;
	Get multi file map;
	Get multipart content type

377.6. Add an interface declaration  for multipart resolver. It allows to:

	Check if multipart resolver is multipart;
	Resolve multipart;
	Handle cleanup multipart

378. Changes to package org.springframework.web.multipart.commons:  

378.1. Add a class for commons multipart file. It allows to:

	Instantiate commons multipart file  with file item;
	Get file item;
	Set preserve filename;
	Get name;
	Get original filename;
	Get content type;
	Check if commons multipart file is empty;
	Get size;
	Get bytes;
	Get input stream;
	Transfer  to dest file;
	Transfer  to dest path;
	Check if commons multipart file is available;
	Get storage description

378.2. Add a class for commons multipart resolver. It allows to:

	Instantiate commons multipart resolver;
	Instantiate commons multipart resolver  with servlet context;
	Set resolve  lazily;
	Handle new file upload;
	Set servlet context;
	Check if commons multipart resolver is multipart;
	Resolve multipart;
	Initialize multipart;
	Parse request;
	Determine encoding;
	Handle cleanup multipart

379. Changes to package org.springframework.web.multipart.support:  

379.1. Add a class for abstract multipart http servlet request. It allows to:

	Instantiate abstract multipart http servlet request  with http servlet request;
	Get request;
	Get request method;
	Get request headers;
	Get file names;
	Get file;
	Get files;
	Get file map;
	Get multi file map;
	Check if abstract multipart http servlet request is resolved;
	Set multipart files;
	Get multipart files;
	Initialize multipart

379.2. Add a class for byte array multipart file editor. It allows to:

	Get set value;
	Get byte array multipart file editor as text

379.3. Add a class for byte array multipart file editor tests. It allows to:

	Get set value as byte array;
	Get set value as string;
	Get set value as custom object invokes to string;
	Convert to string;
	Get set value as null gets back empty string;
	Get set value as multipart file;
	Get set value as multipart file with bad bytes

379.4. Add a class for default multipart http servlet request. It allows to:

	Instantiate default multipart http servlet request  with http servlet request, mp files multi value map, mp params map, mp param content types map and mp param content types map;
	Instantiate default multipart http servlet request  with http servlet request;
	Get parameter;
	Get parameter values;
	Get parameter names;
	Get parameter map;
	Get multipart content type;
	Get multipart headers;
	Set multipart parameters;
	Get multipart parameters;
	Set multipart parameter content types;
	Get multipart parameter content types

379.5. Add a class for missing servlet request part exception. It allows to:

	Instantiate missing servlet request part exception;
	Get request part name

379.6. Add a class for multipart filter. It allows to:

	Set multipart resolver bean name;
	Get multipart resolver bean name;
	Do filter internal;
	Lookup multipart resolver;

379.7. Add a class for multipart resolution delegate. It allows to:

	Instantiate multipart resolution delegate;
	Resolve multipart request;
	Check if multipart resolution delegate is multipart request;
	Check if multipart resolution delegate is multipart content;
	Process multipart resolution delegate multipart resolution delegate as multipart http servlet request;
	Check if multipart resolution delegate is multipart argument;
	Resolve multipart argument;
	Check if multipart resolution delegate is multipart file collection;
	Check if multipart resolution delegate is multipart file array;
	Check if multipart resolution delegate is part collection;
	Check if multipart resolution delegate is part array;
	Get collection parameter type;
	Resolve part list

379.8. Add a class for request part servlet server http request. It allows to:

	Instantiate request part servlet server http request  with http servlet request;
	Get headers;
	Get body;
	Determine charset

379.9. Add a class for request part servlet server http request tests. It allows to:

	Get method;
	Get URI;
	Get content type;
	Get body;
	Get body  with wrapped request;
	Get body  via request parameter;
	Get multipart headers;
	Get body  via request parameter with request encoding;

379.10. Add a class for standard servlet multipart resolver. It allows to:

	Set resolve  lazily;
	Check if standard servlet multipart resolver is multipart;
	Resolve multipart;
	Handle cleanup multipart

379.11. Add a class for string multipart file editor. It allows to:

	Instantiate string multipart file editor;
	Get set as text;
	Get set value

380. Changes to package org.springframework.web.servlet:  

380.1. Add an interface declaration  for async handler interceptor. It allows to:

	Handle after concurrent handling started

380.2. Add a class for dispatcher servlet. It allows to:

	Instantiate dispatcher servlet;
	Instantiate dispatcher servlet  with web application context;
	Set detect all handler mappings;
	Set detect all handler adapters;
	Set detect all handler exception resolvers;
	Set detect all view resolvers;
	Set throw exception  if no handler found;
	Set cleanup  after include;
	Process dispatcher servlet dispatcher servlet on refresh;
	Handle init strategies;
	Handle init multipart resolver;
	Handle init locale resolver;
	Handle init theme resolver;
	Handle init handler mappings;
	Handle init handler adapters;
	Handle init handler exception resolvers;
	Handle init request to view name translator;
	Init view resolvers;
	Handle init flash map manager;
	Get theme source;
	Get multipart resolver;
	Get handler mappings;
	Get default strategy;
	Get default strategies;
	Create default strategy;
	Do service;
	Log request;
	Dispatch http servlet request;
	Apply default view name;
	Handle process dispatch result;
	Build locale context;
	Check multipart;
	Check if dispatcher servlet has multipart exception;
	Handle cleanup multipart;
	Get handler;
	Handle no handler found;
	Get handler adapter;
	Get process handler exception;
	Render mv model and view;
	Get default view name;
	Resolve view name;
	Trigger http servlet request after completion;
	Restore attributes  after include;
	Get request uri

380.3. Add a class for flash map. It allows to:

	Set target request path;
	Get target request path;
	Add target request params;
	Add target request param;
	Get target request params;
	Start expiration period;
	Set expiration time;
	Get expiration time;
	Check if flash map is expired;
	Compare  to other flash map;
	Check if flash map equals;
	Hash code;
	Convert flash map to string

380.4. Add an interface declaration  for flash map manager. It allows to:

	Retrieve http servlet request;
	Save output flash map

380.5. Add a class for flash map tests. It allows to:

	Check if flash map tests is expired;
	Handle not expired;
	Compare flash map tests to;
	Add target request param null value;
	Add target request params null value;
	Add target request param null key;
	Add target request params null key

380.6. Add an interface declaration  for handler adapter. It allows to:

	Handle supports;
	Handle http servlet request;
	Get last modified

380.7. Add an interface declaration  for handler exception resolver. It allows to:

	Resolve exception

380.8. Add a class for handler execution chain. It allows to:

	Instantiate handler execution chain;
	Instantiate handler execution chain  with interceptors;
	Get handler;
	Add interceptor;
	Add interceptors;
	Handle init interceptor list;
	Get interceptors;
	Apply http servlet request;
	Apply post handle;
	Trigger http servlet request after completion;
	Apply http servlet request after concurrent handling started;
	Convert handler execution chain to string

380.9. Add a class for handler execution chain tests. It allows to:

	Handle setup;
	Handle success scenario;
	Handle success async scenario;
	Handle early exit in pre handle;
	Handle exception before pre handle;
	Handle exception during pre handle;
	Handle exception after pre handle

380.10. Add an interface declaration  for handler interceptor. It allows to:

	Handle http servlet request;
	Process handler interceptor handler interceptor after completion

380.11. Add an interface declaration  for handler mapping. It allows to:

	Get handler

380.12. Add an interface declaration  for locale context resolver. It allows to:

	Resolve locale context;
	Set locale context

380.13. Add an interface declaration  for locale resolver. It allows to:

	Resolve locale;
	Set locale

380.14. Add a class for model and view. It allows to:

	Instantiate model and view;
	Instantiate model and view  with view;
	Instantiate model and view  with model map;
	Instantiate model and view  with view, model map and model map;
	Instantiate model and view  with http status;
	Instantiate model and view  with model map, http status and http status;
	Set view name;
	Get view name;
	Set view;
	Get view;
	Check if model and view has view;
	Check if model and view is reference;
	Get model internal;
	Get model map;
	Get model;
	Set status;
	Get status;
	Add object;
	Add all objects;
	Handle clear;
	Check if model and view is empty;
	Get was cleared;
	Convert model and view to string;
	Get format view

380.15. Add a class for model and view defining exception. It allows to:

	Instantiate model and view defining exception  with model and view;
	Get model and view

380.16. Add a class for no handler found exception. It allows to:

	Instantiate no handler found exception  with http headers;
	Get http method;
	Get request URL;
	Get headers

380.17. Add an interface declaration  for request to view name translator. It allows to:

	Get view name

380.18. Add an interface declaration  for smart view. It allows to:

	Check if smart view is redirect view

380.19. Add an interface declaration  for theme resolver. It allows to:

	Resolve theme name;
	Set theme name

380.20. Add an interface declaration  for view. It allows to:

	Get content type;
	Render model map

380.21. Add an interface declaration  for view resolver. It allows to:

	Resolve view name

381. Changes to package org.springframework.web.servlet.config:  

381.1. Add a class for annotation driven bean definition parser tests. It allows to:

	Handle test message codes resolver;
	Handle test path matching configuration;
	Handle test message converters;
	Handle test message converters without default registrations;
	Handle test argument resolvers;
	Handle test return value handlers;
	Handle bean name url handler mapping;
	Load bean definitions;
	Verify message converters;
	Verify response body advice;
	Verify request response body advice

Add a local a class for test web argument resolver. It allows to:

	Resolve argument

Add a local a class for test handler method argument resolver. It allows to:

	Check if test handler method argument resolver supports parameter;
	Resolve argument

Add a local a class for test handler method return value handler. It allows to:

	Check if test handler method return value handler supports return type;
	Handle return value

Add a local a class for test message codes resolver. It allows to:

	Resolve message codes;

Add a local a class for test path matcher

Add a local a class for test path helper

381.2. Add a class for cors bean definition parser. It allows to:

	Parse element

381.3. Add a class for default servlet handler bean definition parser. It allows to:

	Parse element

381.4. Add a class for free marker configurer bean definition parser. It allows to:

	Get bean class name;
	Resolve id;
	Parse element

381.5. Add a class for groovy markup configurer bean definition parser. It allows to:

	Resolve id;
	Get bean class name;
	Check if groovy markup configurer bean definition parser is eligible attribute

381.6. Add a class for interceptors bean definition parser. It allows to:

	Parse element;
	Get include patterns

381.7. Add a class for mvc namespace handler. It allows to:

	Handle init

381.8. Add a class for mvc namespace utils. It allows to:

	Register default components;
	Register url path helper;
	Register path matcher;
	Register bean name url handler mapping;
	Register http request handler adapter;
	Register simple controller handler adapter;
	Register cors configurations;
	Register handler mapping introspector;
	Get content negotiation manager

381.9. Add a class for resources bean definition parser. It allows to:

	Parse element;
	Register url provider;
	Register resource handler;
	Parse cache control;
	Parse resource chain;
	Parse resource cache;
	Parse resource resolvers transformers;
	Parse version resolver

381.10. Add a class for script template configurer bean definition parser. It allows to:

	Resolve id;
	Get bean class name;
	Parse element;
	Check if script template configurer bean definition parser is eligible attribute

381.11. Add a class for tiles configurer bean definition parser. It allows to:

	Get bean class name;
	Resolve id;
	Parse element

381.12. Add a class for view controller bean definition parser. It allows to:

	Parse element;
	Register handler mapping;
	Get redirect view

381.13. Add a class for view resolvers bean definition parser. It allows to:

	Parse element;
	Add url based view resolver properties;
	Create content negotiating view resolver

382. Changes to package org.springframework.web.servlet.config.annotation:  

382.1. Add a class for async support configurer. It allows to:

	Set task executor;
	Set default timeout;
	Register callable interceptors;
	Register deferred result interceptors;
	Get task executor;
	Get timeout;
	Get callable interceptors;
	Get deferred result interceptors

382.2. Add a class for content negotiation configurer. It allows to:

	Instantiate content negotiation configurer  with servlet context;
	Handle strategies;
	Favor path extension;
	Get media type;
	Get media types;
	Replace media types;
	Ignore unknown path extensions;
	Use jaf;
	Use registered extensions  only;
	Favor parameter;
	Get parameter name;
	Ignore accept header;
	Get default content type;
	Get default content type strategy;
	Build content negotiation manager

382.3. Add a class for content negotiation configurer tests. It allows to:

	Handle setup;
	Handle default settings;
	Add media types;
	Favor parameter;
	Ignore accept header;
	Set default content type;
	Set multiple default content types;
	Set default content type strategy

382.4. Add a class for cors registration. It allows to:

	Instantiate cors registration;
	Get allowed origins;
	Get allowed methods;
	Get allowed headers;
	Get exposed headers;
	Allow credentials;
	Max age;
	Get path pattern;
	Get cors configuration

382.5. Add a class for cors registry. It allows to:

	Add mapping;
	Get cors configurations

382.6. Add a class for cors registry tests. It allows to:

	Set cors registry tests;
	No mapping;
	Handle multiple mappings;
	Get customized mapping

382.7. Add a class for default servlet handler configurer. It allows to:

	Instantiate default servlet handler configurer  with servlet context;
	Enable default servlet handler configurer;
	Build handler mapping

382.8. Add a class for delegating web mvc configuration. It allows to:

	Set configurers;
	Configure path match;
	Configure content negotiation;
	Configure async support;
	Configure default servlet handling;
	Add formatters;
	Add interceptors;
	Add resource handlers;
	Add cors mappings;
	Add view controllers;
	Configure view resolvers;
	Add argument resolvers;
	Add return value handlers;
	Configure message converters;
	Extend message converters;
	Configure handler exception resolvers;
	Extend handler exception resolvers;
	Get validator;
	Get message codes resolver

382.9. Add a class for delegating web mvc configuration tests. It allows to:

	Set delegating web mvc configuration tests;
	Handle request mapping handler adapter;
	Configure message converters;
	Extend message converters;
	Get custom validator;
	Get custom message codes resolver;
	Handle handler exception resolver;
	Configure exception resolvers;
	Configure handler exception resolvers;
	Configure path match;

382.10. Add a class for interceptor registration. It allows to:

	Instantiate interceptor registration  with handler interceptor;
	Add path patterns;
	Exclude path patterns;
	Get path matcher;
	Get order;
	Get interceptor

382.11. Add a class for interceptor registry. It allows to:

	Add interceptor;
	Add web request interceptor;
	Get interceptors

382.12. Add a class for path match configurer. It allows to:

	Get set use suffix pattern match;
	Get set use trailing slash match;
	Get set use registered suffix pattern match;
	Set url path helper;
	Set path matcher;
	Add path prefix;
	Check if path match configurer is use suffix pattern match;
	Check if path match configurer is use trailing slash match;
	Check if path match configurer is use registered suffix pattern match;
	Get url path helper;
	Get path matcher;
	Get path prefixes

382.13. Add a class for redirect view controller registration. It allows to:

	Instantiate redirect view controller registration;
	Set status code;
	Set context relative;
	Set keep query params;
	Set application context;
	Get url path;
	Get view controller

382.14. Add a class for resource chain registration. It allows to:

	Instantiate resource chain registration;
	Instantiate resource chain registration  with cache;
	Add resolver;
	Add transformer;
	Get resource resolvers;
	Get resource transformers

382.15. Add a class for resource handler registration. It allows to:

	Instantiate resource handler registration;
	Add resource locations;
	Set cache period;
	Set cache control;
	Get resource chain;
	Get path patterns;
	Get request handler

382.16. Add a class for resource handler registry. It allows to:

	Instantiate resource handler registry  with application context, servlet context and servlet context;
	Instantiate resource handler registry  with application context, servlet context, content negotiation manager and content negotiation manager;
	Instantiate resource handler registry  with application context, servlet context, content negotiation manager, url path helper and url path helper;
	Add resource handler;
	Check if resource handler registry has mapping for pattern;
	Get set order;
	Get handler mapping

382.17. Add a class for resource handler registry tests. It allows to:

	Set resource handler registry tests;
	No resource handlers;
	Map path  to location;
	Handle cache period;
	Handle cache control;
	Handle order;
	Check if resource handler registry tests has mapping for pattern;
	Handle resource chain;
	Handle resource chain without caching;
	Handle resource chain with version resolver;
	Handle resource chain with overrides;
	Handle url resource with charset;
	Get handler

382.18. Add a class for url based view resolver registration. It allows to:

	Instantiate url based view resolver registration  with url based view resolver;
	Get view resolver;
	Prefix url based view resolver registration;
	Get suffix;
	View class;
	View names;
	Get attributes;
	Handle cache limit;
	Get cache

382.19. Add a class for view controller registration. It allows to:

	Instantiate view controller registration;
	Set status code;
	Set view name;
	Set application context;
	Get url path;
	Get view controller

382.20. Add a class for view controller registry. It allows to:

	Instantiate view controller registry  with application context;
	Add view controller;
	Add redirect view controller;
	Add status controller;
	Get set order;
	Build handler mapping

382.21. Add a class for view controller registry tests. It allows to:

	Handle setup;
	No view controllers;
	Add view controller;
	Add view controller  with default view name;
	Add redirect view controller;
	Add redirect view controller  with custom settings;
	Add status controller;
	Handle order;
	Get controller;
	Get redirect view

382.22. Add a class for view resolver registry tests. It allows to:

	Handle setup;
	Handle order;
	Check if view resolver registry tests has registrations;
	Check if view resolver registry tests has registrations when content negotiation enabled;
	No resolvers;
	Handle custom view resolver;
	Handle bean name;
	Handle jsp default values;
	Handle jsp;
	Handle jsp multiple resolvers;
	Handle tiles;
	Handle free marker;
	Handle free marker default values;
	Handle groovy markup;
	Handle groovy markup default values;
	Handle script template;
	Handle script template default values;
	Handle content negotiation;
	Handle content negotiation adds default view registrations;
	Check and get resolver;
	Check property values

382.23. Add an interface declaration  for web mvc configurer. It allows to:

	Configure path match;
	Configure content negotiation;
	Configure async support;
	Configure default servlet handling;
	Add formatters;
	Add interceptors;
	Add resource handlers;
	Add cors mappings;
	Add view controllers;
	Configure view resolvers;
	Add argument resolvers;
	Add return value handlers;
	Configure message converters;
	Extend message converters;
	Configure handler exception resolvers;
	Extend handler exception resolvers;
	Get validator;
	Get message codes resolver

382.24. Add a class for web mvc configurer adapter. It allows to:

	Configure path match;
	Configure content negotiation;
	Configure async support;
	Configure default servlet handling;
	Add formatters;
	Add interceptors;
	Add resource handlers;
	Add cors mappings;
	Add view controllers;
	Configure view resolvers;
	Add argument resolvers;
	Add return value handlers;
	Configure message converters;
	Extend message converters;
	Configure handler exception resolvers;
	Extend handler exception resolvers;
	Get validator;
	Get message codes resolver

382.25. Add a class for web mvc configurer composite. It allows to:

	Add web mvc configurers;
	Configure path match;
	Configure content negotiation;
	Configure async support;
	Configure default servlet handling;
	Add formatters;
	Add interceptors;
	Add resource handlers;
	Add cors mappings;
	Add view controllers;
	Configure view resolvers;
	Add argument resolvers;
	Add return value handlers;
	Configure message converters;
	Extend message converters;
	Configure handler exception resolvers;
	Extend handler exception resolvers;
	Get validator;
	Get message codes resolver

383. Changes to package org.springframework.web.servlet.handler:  

383.1. Add a class for abstract detecting url handler mapping. It allows to:

	Set detect handlers  in ancestor contexts;
	Handle init application context;
	Detect handlers;
	Determine urls  for handler

383.2. Add a class for abstract handler exception resolver. It allows to:

	Get set order;
	Get order;
	Set mapped handlers;
	Set mapped handler classes;
	Set warn log category;
	Set prevent response caching;
	Resolve exception;
	Convert should apply;
	Log exception;
	Build log message;
	Prepare response;
	Prevent caching;
	Do resolve exception

383.3. Add a class for abstract handler method exception resolver. It allows to:

	Convert should apply;
	Do resolve exception;
	Do resolve handler method exception

383.4. Add a class for bean name url handler mapping. It allows to:

	Determine urls  for handler

383.5. Add a class for bean name url handler mapping tests. It allows to:

	Set bean name url handler mapping tests;
	Handle requests without handlers;
	Handle requests with sub paths;
	Handle requests with sub paths in parent context;
	Do test requests  with sub paths;
	Handle requests with full paths;
	Handle asterisk matches;
	Overlapping mappings;
	Handle double mappings

383.6. Add a class for conversion service exposing interceptor. It allows to:

	Instantiate conversion service exposing interceptor  with conversion service;
	Handle http servlet request

383.7. Add a class for dispatcher servlet web request. It allows to:

	Instantiate dispatcher servlet web request  with http servlet request;
	Instantiate dispatcher servlet web request  with http servlet request, http servlet response and http servlet response;
	Get locale

383.8. Add a class for handler exception resolver composite. It allows to:

	Set exception resolvers;
	Get exception resolvers;
	Get set order;
	Get order;
	Resolve exception

383.9. Add a class for handler interceptor adapter. It allows to:

	Handle http servlet request;
	Process handler interceptor adapter handler interceptor adapter after completion;
	Handle after concurrent handling started

383.10. Add an interface declaration  for handler method mapping naming strategy. It allows to:

	Get name

383.11. Add a class for mapped interceptor. It allows to:

	Instantiate mapped interceptor  with handler interceptor;
	Instantiate mapped interceptor  with web request interceptor;
	Set path matcher;
	Get path matcher;
	Get path patterns;
	Get interceptor;
	Handle matches;
	Handle http servlet request;
	Process mapped interceptor mapped interceptor after completion

383.12. Add a class for path matching url handler mapping tests. It allows to:

	Set path matching url handler mapping tests;
	Handle requests with handlers;
	Handle actual path matching;
	Handle default mapping;
	Mapping exposed  in request;
	Get handler

383.13. Add a class for simple mapping exception resolver. It allows to:

	Set exception mappings;
	Set excluded exceptions;
	Set default error view;
	Set status codes;
	Add status code;
	Get status codes  as map;
	Set default status code;
	Set exception attribute;
	Do resolve exception;
	Determine view name;
	Find matching view name;
	Get depth;
	Determine status code;
	Apply status code  if possible;
	Get model and view;

383.14. Add a class for simple servlet handler adapter. It allows to:

	Handle supports;
	Handle http servlet request;
	Get last modified

383.15. Add a class for simple url handler mapping. It allows to:

	Set mappings;
	Set url map;
	Get url map;
	Handle init application context;
	Register handlers

383.16. Add a class for simple url handler mapping tests. It allows to:

	Handle handler bean not found;
	Handle url mapping with url map;
	Handle url mapping with props;
	Handle test newline in request;
	Check mappings;
	Get handler

383.17. Add a class for user role authorization interceptor. It allows to:

	Set authorized roles;
	Handle http servlet request;
	Handle http servlet request not authorized

383.18. Add a class for web request handler interceptor adapter. It allows to:

	Instantiate web request handler interceptor adapter  with web request interceptor;
	Handle http servlet request;
	Process web request handler interceptor adapter web request handler interceptor adapter after completion;
	Handle after concurrent handling started

384. Changes to package org.springframework.web.servlet.i18n:  

384.1. Add a class for abstract locale context resolver. It allows to:

	Set default time zone;
	Get default time zone;
	Resolve locale;
	Set locale

384.2. Add a class for abstract locale resolver. It allows to:

	Set default locale;
	Get default locale

384.3. Add a class for accept header locale resolver. It allows to:

	Set supported locales;
	Get supported locales;
	Set default locale;
	Get default locale;
	Resolve locale;
	Find supported locale;
	Set locale

384.4. Add a class for accept header locale resolver tests. It allows to:

	Resolve accept header locale resolver tests;
	Resolve preferred  not supported;
	Resolve preferred  against language only;
	Resolve preferred  against country if possible;
	Resolve preferred  against language with multiple supported locales;
	Resolve preferred  not supported with default;
	Handle default locale;
	Get request

384.5. Add a class for cookie locale resolver. It allows to:

	Instantiate cookie locale resolver;
	Set language tag compliant;
	Check if cookie locale resolver is language tag compliant;
	Set default locale;
	Get default locale;
	Set default time zone;
	Get default time zone;
	Resolve locale;
	Resolve locale context;
	Get locale;
	Get time zone;
	Parse locale cookie  if necessary;
	Set locale;
	Set locale context;
	Parse locale value;
	Convert cookie locale resolver to locale value;
	Determine default locale;
	Determine default time zone

384.6. Add a class for cookie locale resolver tests. It allows to:

	Handle test resolve locale;
	Handle test resolve locale context;
	Handle test resolve locale context with time zone;
	Handle test resolve locale context with invalid locale;
	Handle test resolve locale context with invalid locale on error dispatch;
	Handle test resolve locale context with invalid time zone;
	Handle test resolve locale context with invalid time zone on error dispatch;
	Handle test set and resolve locale;
	Handle test set and resolve locale context;
	Handle test set and resolve locale context with time zone;
	Handle test set and resolve locale context with time zone only;
	Handle test set and resolve locale with country;
	Handle test set and resolve locale with country as legacy java;
	Handle test custom cookie;
	Handle test resolve locale without cookie;
	Handle test resolve locale context without cookie;
	Handle test resolve locale without cookie and default locale;
	Handle test resolve locale context without cookie and default locale;
	Handle test resolve locale with cookie without locale;
	Handle test resolve locale context with cookie without locale;
	Convert test set locale;
	Convert test set locale context;

384.7. Add a class for fixed locale resolver. It allows to:

	Instantiate fixed locale resolver;
	Instantiate fixed locale resolver  with locale;
	Instantiate fixed locale resolver  with locale, time zone and time zone;
	Resolve locale;
	Resolve locale context;
	Get locale;
	Get time zone;
	Set locale context

384.8. Add a class for locale change interceptor. It allows to:

	Set param name;
	Get param name;
	Set http methods;
	Get http methods;
	Set ignore invalid locale;
	Check if locale change interceptor is ignore invalid locale;
	Set language tag compliant;
	Check if locale change interceptor is language tag compliant;
	Handle http servlet request;
	Check http method;
	Parse locale value

384.9. Add a class for locale resolver tests. It allows to:

	Handle test accept header locale resolver;
	Handle test fixed locale resolver;
	Handle test cookie locale resolver;
	Handle test session locale resolver;
	Do test

384.10. Add a class for session locale resolver. It allows to:

	Set locale attribute name;
	Set time zone attribute name;
	Resolve locale;
	Resolve locale context;
	Get locale;
	Get time zone;
	Set locale context;
	Determine default locale;
	Determine default time zone

384.11. Add a class for session locale resolver tests. It allows to:

	Handle test resolve locale;
	Handle test set and resolve locale;
	Handle test resolve locale without session;
	Handle test resolve locale without session and default locale;
	Convert test set locale

385. Changes to package org.springframework.web.servlet.mvc:  

385.1. Add a class for abstract controller. It allows to:

	Instantiate abstract controller;
	Set synchronize  on session;
	Check if abstract controller is synchronize on session;
	Handle request;
	Handle request internal

385.2. Add a class for abstract url view controller. It allows to:

	Set abstract url view controller always use full path;
	Set url decode;
	Set remove semicolon content;
	Set url path helper;
	Get url path helper;
	Handle request internal;
	Get view name  for request

385.3. Add an interface declaration  for controller. It allows to:

	Handle request

385.4. Add a class for http request handler adapter. It allows to:

	Handle supports;
	Handle http servlet request;
	Get last modified

385.5. Add an interface declaration  for last modified. It allows to:

	Get last modified

385.6. Add a class for parameterizable view controller. It allows to:

	Instantiate parameterizable view controller;
	Set view name;
	Get view name;
	Set view;
	Get view;
	Set status code;
	Get status code;
	Set status  only;
	Check if parameterizable view controller is status only;
	Handle request internal;
	Convert parameterizable view controller to string;
	Get format status and view

385.7. Add a class for parameterizable view controller tests. It allows to:

	Handle setup;
	Handle request  with view name;
	Handle request  without view name;
	Handle request  with flash attributes;
	Handle request http options

385.8. Add a class for servlet forwarding controller. It allows to:

	Instantiate servlet forwarding controller;
	Set servlet name;
	Set bean name;
	Handle request internal;
	Include http servlet request

385.9. Add a class for simple controller handler adapter. It allows to:

	Handle supports;
	Handle http servlet request;
	Get last modified

385.10. Add a class for url filename view controller. It allows to:

	Set prefix;
	Get prefix;
	Set suffix;
	Get suffix;
	Get view name  for request;
	Extract operable url;
	Get view name  for url path;
	Extract view name  from url path;
	Post process view name

385.11. Add a class for url filename view controller tests. It allows to:

	Process url filename view controller tests url filename view controller tests with plain filename;
	Process url filename view controller tests url filename view controller tests with filename plus extension;
	Process url filename view controller tests url filename view controller tests with filename and matrix variables;
	Process url filename view controller tests url filename view controller tests with prefix and suffix;
	Process url filename view controller tests url filename view controller tests with prefix;
	Process url filename view controller tests url filename view controller tests with suffix;
	Handle multi level;
	Handle multi level with mapping;
	Handle multi level mapping with fallback;
	Process url filename view controller tests url filename view controller tests with context mapping;
	Setting prefix  to null causes empty string to be used;
	Setting suffix  to null causes empty string to be used;
	Handle nested pathis used as view name in breaking change from spring 12 line;
	Process url filename view controller tests url filename view controller tests with flash attributes;
	Expose path  in mapping

385.12. Add a class for web content interceptor. It allows to:

	Instantiate web content interceptor;
	Set web content interceptor always use full path;
	Set url decode;
	Set url path helper;
	Set cache mappings;
	Add cache mapping;
	Set path matcher;
	Handle http servlet request;
	Lookup cache control;
	Lookup cache seconds;
	Process web content interceptor web content interceptor after completion

385.13. Add a class for web content interceptor tests. It allows to:

	Handle cache resources configuration;
	Get mapped cache configuration overrides global;
	Prevent cache configuration;
	Handle empty cache configuration;
	Caching config and pragma header;
	Http 10 caching config and pragma header;
	Http 10 caching config and specific mapping;
	Check if web content interceptor tests throws exception with null path matcher

386. Changes to package org.springframework.web.servlet.mvc.annotation:  

386.1. Add an interface declaration  for model and view resolver. It allows to:

	Resolve model and view

386.2. Add a class for response status exception resolver. It allows to:

	Set message source;
	Do resolve exception;
	Resolve response status;
	Resolve response status exception;
	Apply status and reason

387. Changes to package org.springframework.web.servlet.mvc.condition:  

387.1. Add a class for abstract media type expression. It allows to:

	Instantiate abstract media type expression;
	Instantiate abstract media type expression  with media type;
	Get media type;
	Check if abstract media type expression is negated;
	Compare  to other abstract media type expression;
	Check if abstract media type expression equals;
	Hash code;
	Convert abstract media type expression to string

387.2. Add a class for abstract name value expression. It allows to:

	Instantiate abstract name value expression;
	Get name;
	Get value;
	Check if abstract name value expression is negated;
	Match http servlet request;
	Check if abstract name value expression is case sensitive name;
	Parse value;
	Match name;
	Match value;
	Check if abstract name value expression equals;
	Hash code;
	Convert abstract name value expression to string

387.3. Add a class for abstract request condition. It allows to:

	Check if abstract request condition is empty;
	Get content;
	Get abstract request condition to string infix;
	Check if abstract request condition equals;
	Hash code;
	Convert abstract request condition to string

387.4. Add a class for composite request condition. It allows to:

	Instantiate composite request condition  with request conditions;
	Instantiate composite request condition  with request condition holder;
	Wrap raw conditions;
	Check if composite request condition is empty;
	Get conditions;
	Get unwrap;
	Get content;
	Get composite request condition to string infix;
	Get length;
	Combine other composite request condition;
	Assert number  of conditions;
	Get matching condition;
	Compare  to other composite request condition

387.5. Add a class for composite request condition tests. It allows to:

	Handle setup;
	Combine composite request condition tests;
	Combine empty;
	Combine different length;
	Match composite request condition tests;
	No match;
	Match empty;
	Compare composite request condition tests;
	Compare empty;
	Compare different length

387.6. Add a class for consumes request condition tests. It allows to:

	Check if consumes request condition tests consumes match;
	Get negated consumes match;
	Get consumable media types negated expression;
	Check if consumes request condition tests consumes wildcard match;
	Check if consumes request condition tests consumes multiple match;
	Check if consumes request condition tests consumes single no match;
	Check if consumes request condition tests consumes parse error;
	Check if consumes request condition tests consumes parse error with negation;
	Compare consumes request condition tests to single;
	Compare consumes request condition tests to multiple;
	Combine consumes request condition tests;
	Combine consumes request condition tests with default;
	Parse consumes and headers;
	Get matching condition;
	Assert conditions

387.7. Add a class for headers request condition tests. It allows to:

	Handle header equals;
	Handle header present;
	Handle header present no match;
	Header headers request condition tests not present;
	Handle header value match;
	Handle header value no match;
	Handle header case sensitive value match;
	Handle header value match negated;
	Handle header value no match negated;
	Compare headers request condition tests to;
	Compare headers request condition tests to with more specific match by value;
	Compare headers request condition tests to with negated match;
	Combine headers request condition tests;
	Get matching condition

387.8. Add an interface declaration  for media type expression. It allows to:

	Get media type;
	Check if media type expression is negated

387.9. Add an interface declaration  for name value expression. It allows to:

	Get name;
	Get value;
	Check if name value expression is negated

387.10. Add a class for params request condition tests. It allows to:

	Handle param equals;
	Param present;
	Param present null value;
	Param present no match;
	Param params request condition tests not present;
	Handle param value match;
	Handle param value no match;
	Compare params request condition tests to;
	Compare params request condition tests to with more specific match by value;
	Compare params request condition tests to with negated match;
	Combine params request condition tests

387.11. Add a class for patterns request condition. It allows to:

	Instantiate patterns request condition;
	Instantiate patterns request condition  with url path helper, path matcher and path matcher;
	Instantiate patterns request condition  with url path helper, path matcher, file extensions list and file extensions list;
	Instantiate patterns request condition  with patterns collection, url path helper, path matcher, file extensions list and file extensions list;
	Instantiate patterns request condition  with patterns set, other patterns request condition and other patterns request condition;
	Prepend patterns collection;
	Get patterns;
	Get content;
	Get patterns request condition to string infix;
	Combine other patterns request condition;
	Get matching condition;
	Get matching patterns;
	Get matching pattern;
	Compare  to other patterns request condition

387.12. Add a class for patterns request condition tests. It allows to:

	Slash patterns request condition tests;
	Prepend non empty patterns  only;
	Combine empty sets;
	Combine one pattern  with empty set;
	Combine multiple patterns;
	Match direct path;
	Match pattern;
	Match sort patterns;
	Match suffix pattern;
	Match suffix pattern using file extensions;
	Match suffix pattern using file extensions 2;
	Match patterns request condition tests;
	Match pattern contains extension;
	Compare equal patterns;
	Compare pattern specificity;
	Compare number  of matching patterns

387.13. Add a class for produces request condition tests. It allows to:

	Match produces request condition tests;
	Negated produces request condition tests;
	Match negated  without accept header;
	Get producible media types;
	Match wildcard;
	Match multiple;
	Match single;
	Match produces request condition tests with parameters;
	Match parse error;
	Match parse error  with negation;
	Match produces request condition tests by request parameter;
	Match produces request condition tests with negation and media type all with quality parameter;
	Compare produces request condition tests to;
	Compare produces request condition tests to with single expression;
	Compare produces request condition tests to multiple expressions;
	Compare produces request condition tests to multiple expressions and multiple accept header values;
	Compare produces request condition tests to media type all;
	Compare produces request condition tests to media type all with parameter;
	Compare produces request condition tests to equal match;
	Combine produces request condition tests;
	Combine produces request condition tests with default;
	Handle instantiate with produces and header conditions;
	Get matching condition;
	Create request;
	Assert conditions

387.14. Add an interface declaration  for request condition. It allows to:

	Combine other;
	Get matching condition;
	Compare  to other

387.15. Add a class for request condition holder. It allows to:

	Instantiate request condition holder  with request condition;
	Get condition;
	Get content;
	Get request condition holder to string infix;
	Combine other request condition holder;
	Assert equal condition types;
	Get matching condition;
	Compare  to other request condition holder

387.16. Add a class for request condition holder tests. It allows to:

	Combine request condition holder tests;
	Combine empty;
	Combine incompatible;
	Match request condition holder tests;
	No match;
	Match empty;
	Compare request condition holder tests;
	Compare empty;
	Compare incompatible

387.17. Add a class for request methods request condition. It allows to:

	Instantiate request methods request condition  with request methods;
	Instantiate request methods request condition  with request methods collection;
	Get methods;
	Get content;
	Get request methods request condition to string infix;
	Combine other request methods request condition;
	Get matching condition;
	Match pre flight;
	Match request method;
	Compare  to other request methods request condition

387.18. Add a class for request methods request condition tests. It allows to:

	Get matching condition;
	Get matching condition  with http head;
	Get matching condition  with empty conditions;
	Get matching condition  with custom method;
	Get matching condition  with cors pre flight;
	Get matching condition  with http options in error dispatch;
	Compare request methods request condition tests to;
	Combine request methods request condition tests;
	Handle test match;
	Handle test no match

388. Changes to package org.springframework.web.servlet.mvc.method:  

388.1. Add a class for abstract handler method adapter. It allows to:

	Instantiate abstract handler method adapter;
	Get set order;
	Get order;
	Handle supports;
	Handle supports internal;
	Handle http servlet request;
	Handle internal;
	Get last modified;
	Get last modified internal

388.2. Add a class for request mapping info handler method mapping naming strategy. It allows to:

	Get name

388.3. Add a class for request mapping info tests. It allows to:

	Create empty;
	Match patterns condition;
	Match params condition;
	Match headers condition;
	Match consumes condition;
	Match produces condition;
	Match custom condition;
	Compare request mapping info tests to with impicit vs explicit http method declaration;
	Compare request mapping info tests to with http head mapping;
	Check if request mapping info tests equals;
	Pre flight request

389. Changes to package org.springframework.web.servlet.mvc.method.annotation:  

389.1. Add a class for abstract mapping jackson response body advice. It allows to:

	Handle supports;
	Before body write;
	Get or create container;
	Before body write internal

389.2. Add a class for abstract message converter method processor. It allows to:

	Instantiate abstract message converter method processor  with converters list;
	Instantiate abstract message converter method processor  with converters list, content negotiation manager and content negotiation manager;
	Instantiate abstract message converter method processor  with converters list, content negotiation manager, request response body advice list and request response body advice list;
	Handle init path strategy;
	Create output message;
	Write value with message converters;
	Get return value type;
	Check if abstract message converter method processor is resource type;
	Get generic type;
	Get producible media types;
	Get acceptable media types;
	Get accept type most specific media type;
	Add content disposition header;
	Handle safe extension;
	Handle safe media types for extension;
	Handle safe media type

389.3. Add a class for abstract servlet handler method tests. It allows to:

	Get servlet;
	Tear abstract servlet handler method tests;
	Handle init servlet with controllers;
	Handle init servlet;
	Create web application context

389.4. Add a class for async task method return value handler. It allows to:

	Instantiate async task method return value handler  with bean factory;
	Check if async task method return value handler supports return type;
	Handle return value

389.5. Add a class for callable method return value handler. It allows to:

	Check if callable method return value handler supports return type;
	Handle return value

389.6. Add a class for deferred result method return value handler. It allows to:

	Check if deferred result method return value handler supports return type;
	Handle return value;
	Adapt listenable future;
	Process  on success;
	Process  on failure;
	Adapt completion stage

389.7. Add a class for exception handler exception resolver. It allows to:

	Instantiate exception handler exception resolver;
	Set custom argument resolvers;
	Get custom argument resolvers;
	Set argument resolvers;
	Get argument resolvers;
	Set custom return value handlers;
	Get custom return value handlers;
	Set return value handlers;
	Get return value handlers;
	Set message converters;
	Get message converters;
	Set content negotiation manager;
	Get content negotiation manager;
	Set response body advice;
	Set application context;
	Get application context;
	Handle after properties set;
	Handle init exception handler advice cache;
	Get exception handler advice cache;
	Get default argument resolvers;
	Get default return value handlers;
	Do resolve handler method exception;
	Get exception handler method

389.8. Add a class for extended servlet request data binder. It allows to:

	Instantiate extended servlet request data binder;
	Add bind values

389.9. Add a class for extended servlet request data binder tests. It allows to:

	Handle setup;
	Create binder;
	Handle uri template var and request param;
	No uri template vars

389.10. Add a class for http entity method processor. It allows to:

	Instantiate http entity method processor  with converters list;
	Instantiate http entity method processor  with converters list, content negotiation manager and content negotiation manager;
	Instantiate http entity method processor  with converters list, request response body advice list and request response body advice list;
	Instantiate http entity method processor  with converters list, content negotiation manager, request response body advice list and request response body advice list;
	Check if http entity method processor supports parameter;
	Check if http entity method processor supports return type;
	Resolve argument;
	Get http entity type;
	Handle return value;
	Get vary request headers  to add;
	Check if http entity method processor is resource not modified;
	Save flash attributes;
	Get return value type

389.11. Add a class for http headers return value handler. It allows to:

	Check if http headers return value handler supports return type;
	Handle return value

389.12. Add a class for json view request body advice. It allows to:

	Handle supports;
	Process json view request body advice json view request body advice before body read

389.13. Add a class for json view response body advice. It allows to:

	Handle supports;
	Before body write internal

389.14. Add a class for matrix variable map method argument resolver. It allows to:

	Check if matrix variable map method argument resolver supports parameter;
	Resolve argument;
	Check if matrix variable map method argument resolver is single value map

389.15. Add a class for matrix variables map method argument resolver tests. It allows to:

	Handle setup;
	Check if matrix variables map method argument resolver tests supports parameter;
	Resolve argument;
	Resolve argument path variable;
	Resolve argument no params;
	Resolve argument no match;
	Get variables  for;
	Handle map

389.16. Add a class for matrix variables method argument resolver tests. It allows to:

	Handle setup;
	Check if matrix variables method argument resolver tests supports parameter;
	Resolve argument;
	Resolve argument path variable;
	Resolve argument default value;
	Resolve argument multiple matches;
	Resolve argument required;
	Resolve argument no match;
	Get variables  for;
	Handle colors list

389.17. Add a class for model and view method return value handler. It allows to:

	Set redirect patterns;
	Get redirect patterns;
	Check if model and view method return value handler supports return type;
	Handle return value;
	Check if model and view method return value handler is redirect view name

389.18. Add a class for model and view method return value handler tests. It allows to:

	Handle setup;
	Check if model and view method return value handler tests supports return type;
	Handle view reference;
	Handle view instance;
	Handle null;
	Handle redirect attributes  with view reference;
	Handle redirect attributes  with view name;
	Handle redirect attributes  with custom prefix;
	Handle redirect attributes  without redirect;
	Handle redirect  with ignore default model;
	Get return value param;
	Get model and view;
	View name

389.19. Add a class for model and view resolver method return value handler. It allows to:

	Instantiate model and view resolver method return value handler  with mav resolvers list;
	Check if model and view resolver method return value handler supports return type;
	Handle return value

389.20. Add a class for path variable map method argument resolver. It allows to:

	Check if path variable map method argument resolver supports parameter;
	Resolve argument

389.21. Add a class for path variable map method argument resolver tests. It allows to:

	Handle setup;
	Check if path variable map method argument resolver tests supports parameter;
	Resolve argument;
	Resolve argument no uri vars;
	Handle map

389.22. Add a class for path variable method argument resolver tests. It allows to:

	Handle setup;
	Check if path variable method argument resolver tests supports parameter;
	Resolve argument;
	Resolve argument  not required;
	Resolve argument wrapped  as optional;
	Resolve argument  with existing path vars;
	Handle missing value;
	Handle null if not required;
	Wrap empty  with optional;
	Handle param 4 optional

389.23. Add a class for redirect attributes method argument resolver. It allows to:

	Check if redirect attributes method argument resolver supports parameter;
	Resolve argument

389.24. Add a class for request attribute method argument resolver. It allows to:

	Check if request attribute method argument resolver supports parameter;
	Create named value info;
	Resolve name;
	Handle missing value

389.25. Add a class for request attribute method argument resolver tests. It allows to:

	Create resolver;
	Get handle method name;
	Get scope

389.26. Add an interface declaration  for request body advice. It allows to:

	Handle supports;
	Process request body advice request body advice before body read;
	Process request body advice request body advice after body read;
	Handle empty body

389.27. Add a class for request body advice adapter. It allows to:

	Process request body advice adapter request body advice adapter before body read;
	Process request body advice adapter request body advice adapter after body read;
	Handle empty body

389.28. Add a class for request mapping handler adapter. It allows to:

	Instantiate request mapping handler adapter;
	Set custom argument resolvers;
	Get custom argument resolvers;
	Set argument resolvers;
	Get argument resolvers;
	Set init binder argument resolvers;
	Get init binder argument resolvers;
	Set custom return value handlers;
	Get custom return value handlers;
	Set return value handlers;
	Get return value handlers;
	Set model and view resolvers;
	Get model and view resolvers;
	Set content negotiation manager;
	Set message converters;
	Get message converters;
	Set request body advice;
	Set response body advice;
	Set web binding initializer;
	Get web binding initializer;
	Set task executor;
	Set async request timeout;
	Set callable interceptors;
	Set deferred result interceptors;
	Set reactive adapter registry;
	Get reactive adapter registry;
	Set ignore default model  on redirect;
	Set session attribute store;
	Set cache seconds  for session attribute handlers;
	Set synchronize  on session;
	Set parameter name discoverer;
	Set bean factory;
	Get bean factory;
	Handle after properties set;
	Handle init controller advice cache;
	Get body advice count;
	Get default argument resolvers;
	Get default init binder argument resolvers;
	Get default return value handlers;
	Handle supports internal;
	Handle internal;
	Get last modified internal;
	Get session attributes handler;
	Invoke handler method;
	Create invocable handler method;
	Get model factory;
	Create model attribute method;
	Get data binder factory;
	Create init binder method;
	Create data binder factory;
	Get model and view

389.29. Add a class for request mapping handler mapping. It allows to:

	Get set use suffix pattern match;
	Get set use registered suffix pattern match;
	Get set use trailing slash match;
	Set path prefixes;
	Get path prefixes;
	Set content negotiation manager;
	Get content negotiation manager;
	Set embedded value resolver;
	Handle after properties set;
	Use suffix pattern match;
	Use registered suffix pattern match;
	Use trailing slash match;
	Get file extensions;
	Check if request mapping handler mapping is handler;
	Get mapping  for method;
	Get path prefix;
	Create request mapping info;
	Get custom type condition;
	Get custom method condition;
	Resolve embedded values  in patterns;
	Match http servlet request;
	Handle init cors configuration;
	Update cors config;
	Resolve cors annotation value

389.30. Add a class for request part method argument resolver. It allows to:

	Instantiate request part method argument resolver  with message converters list;
	Instantiate request part method argument resolver  with message converters list, request response body advice list and request response body advice list;
	Check if request part method argument resolver supports parameter;
	Resolve argument;
	Get part name

389.31. Add a class for request response body advice chain. It allows to:

	Instantiate request response body advice chain  with request response body advice list;
	Get advice  by type;
	Handle supports;
	Process request response body advice chain request response body advice chain before body read;
	Process request response body advice chain request response body advice chain after body read;
	Before body write;
	Handle empty body;
	Get process body;
	Get matching advice;
	Get advice

389.32. Add a class for request response body method processor. It allows to:

	Instantiate request response body method processor  with converters list;
	Instantiate request response body method processor  with converters list, content negotiation manager and content negotiation manager;
	Instantiate request response body method processor  with converters list, request response body advice list and request response body advice list;
	Instantiate request response body method processor  with converters list, content negotiation manager, request response body advice list and request response body advice list;
	Check if request response body method processor supports parameter;
	Check if request response body method processor supports return type;
	Resolve argument;
	Read native web request with message converters;
	Required method parameter;
	Handle return value

389.33. Add an interface declaration  for response body advice. It allows to:

	Handle supports;
	Before body write

389.34. Add a class for response body emitter tests. It allows to:

	Handle setup;
	Send response body emitter tests before handler initialized;
	Send duplicate  before handler initialized;
	Send response body emitter tests before handler initialized with error;
	Send fails  after complete;
	Send response body emitter tests after handler initialized;
	Send response body emitter tests after handler initialized with error;
	Send response body emitter tests with error;
	Handle on timeout before handler initialized;
	Handle on timeout after handler initialized;
	Handle on completion before handler initialized;
	Handle on completion after handler initialized

389.35. Add a class for response entity exception handler. It allows to:

	Handle exception;
	Handle http request method  not supported;
	Handle http media type  not supported;
	Handle http media type  not acceptable;
	Handle missing path variable;
	Handle missing servlet request parameter;
	Handle servlet request binding exception;
	Handle conversion  not supported;
	Handle type mismatch;
	Handle http message  not readable;
	Handle http message  not writable;
	Handle method argument  not valid;
	Handle missing servlet request part;
	Handle bind exception;
	Handle no handler found exception;
	Handle async request timeout exception;
	Handle exception internal

389.36. Add a class for servlet cookie value method argument resolver. It allows to:

	Instantiate servlet cookie value method argument resolver  with configurable bean factory;
	Set url path helper;
	Resolve name

389.37. Add a class for servlet cookie value method argument resolver tests. It allows to:

	Handle setup;
	Resolve cookie argument;
	Resolve cookie string argument;
	Handle params

389.38. Add a class for servlet model attribute method processor. It allows to:

	Instantiate servlet model attribute method processor;
	Create attribute;
	Get request value  for attribute;
	Get uri template variables;
	Create attribute  from request value;
	Handle bind request parameters

389.39. Add an object creator class for servlet request data binder factory. It allows to:

	Instantiate servlet request data binder factory  with binder methods list, web binding initializer and web binding initializer;
	Create binder instance

389.40. Add a class for servlet request method argument resolver tests. It allows to:

	Handle setup;
	Handle servlet request;
	Handle session;
	Handle principal;
	Handle principal as null;
	Handle locale;
	Handle locale from resolver;
	Handle time zone;
	Handle time zone from resolver;
	Handle zone id;
	Handle zone id from resolver;
	Handle input stream;
	Handle reader;
	Handle web request;
	Http method;
	Push builder;
	Handle new push builder;
	Get supported params

389.41. Add a class for servlet response method argument resolver. It allows to:

	Check if servlet response method argument resolver supports parameter;
	Resolve argument;
	Resolve native response;

389.42. Add a class for servlet response method argument resolver tests. It allows to:

	Handle setup;
	Handle servlet response;
	Handle servlet response no mav container;
	Handle output stream;
	Handle writer;
	Get supported params

389.43. Add an object creator class for servlet web argument resolver adapter. It allows to:

	Instantiate servlet web argument resolver adapter  with adaptee web argument resolver;
	Get web request

389.44. Add a class for session attribute method argument resolver. It allows to:

	Check if session attribute method argument resolver supports parameter;
	Create named value info;
	Resolve name;
	Handle missing value

389.45. Add a class for session attribute method argument resolver tests. It allows to:

	Create resolver;
	Get handle method name;
	Get scope

389.46. Add an interface declaration  for streaming response body. It allows to:

	Write  to output stream

389.47. Add a class for uri components builder method argument resolver. It allows to:

	Check if uri components builder method argument resolver supports parameter;
	Resolve argument

389.48. Add a class for uri components builder method argument resolver tests. It allows to:

	Handle setup;
	Check if uri components builder method argument resolver tests supports parameter;
	Resolve argument;
	Handle uri components builder

389.49. Add a class for view method return value handler. It allows to:

	Check if view method return value handler supports return type;
	Handle return value

389.50. Add a class for view method return value handler tests. It allows to:

	Handle setup;
	Check if view method return value handler tests supports return type;
	Return view;
	Return view redirect;
	Create return value param;
	View view method return value handler tests

389.51. Add a class for view name method return value handler. It allows to:

	Set redirect patterns;
	Get redirect patterns;
	Check if view name method return value handler supports return type;
	Handle return value;
	Check if view name method return value handler is redirect view name

389.52. Add a class for view name method return value handler tests. It allows to:

	Handle setup;
	Check if view name method return value handler tests supports return type;
	Return view name;
	Return view name redirect;
	Return view custom redirect;
	Return view redirect  with custom redirect pattern;
	View name

390. Changes to package org.springframework.web.servlet.mvc.support:  

390.1. Add an object creator class for default handler exception resolver. It allows to:

	Instantiate default handler exception resolver;
	Do resolve exception;
	Handle http request method  not supported;
	Handle http media type  not supported;
	Handle http media type  not acceptable;
	Handle missing path variable;
	Handle missing servlet request parameter;
	Handle servlet request binding exception;
	Handle conversion  not supported;
	Handle type mismatch;
	Handle http message  not readable;
	Handle http message  not writable;
	Handle method argument  not valid exception;
	Handle missing servlet request part exception;
	Handle bind exception;
	Handle no handler found exception;
	Handle async request timeout exception;
	Send server error

390.2. Add a class for default handler exception resolver tests. It allows to:

	Handle setup;
	Handle http request method  not supported;
	Handle http media type  not supported;
	Handle missing path variable;
	Handle missing servlet request parameter;
	Handle servlet request binding exception;
	Handle type mismatch;
	Handle http message  not readable;
	Handle http message  not writable;
	Handle method argument  not valid;
	Handle missing servlet request part exception;
	Handle bind exception;
	Handle no handler found exception;
	Handle conversion  not supported exception;
	Handle async request timeout exception;
	Handle default handler exception resolver tests

390.3. Add a class for parameterizable view controller tests. It allows to:

	Handle default view name;
	View name;
	View name and status;
	View name and status 204;
	Redirect status;
	Redirect status  with redirect prefix;
	Redirect view;
	Handle status only

390.4. Add an interface declaration  for redirect attributes. It allows to:

	Add attribute;
	Add all attributes;
	Merge attributes;
	Add flash attribute;
	Get flash attributes

390.5. Add a class for redirect attributes model map. It allows to:

	Instantiate redirect attributes model map;
	Instantiate redirect attributes model map  with data binder;
	Get flash attributes;
	Add attribute;
	Get format value;
	Add all attributes;
	Merge attributes;
	Process redirect attributes model map redirect attributes model map as map;
	Put redirect attributes model map;
	Put map;
	Add flash attribute;

391. Changes to package org.springframework.web.servlet.resource:  

391.1. Add a class for abstract resource resolver. It allows to:

	Resolve resource;
	Resolve url path;
	Resolve resource internal;
	Resolve url path internal

391.2. Add a class for app cache manifest transformer tests. It allows to:

	Handle setup;
	Create url provider;
	No transform  if extension does not match;
	Handle syntax error in manifest;
	Transform manifest;
	Get resource

391.3. Add a class for caching resource resolver. It allows to:

	Instantiate caching resource resolver  with cache;
	Instantiate caching resource resolver  with cache manager;
	Get cache;
	Set content codings;
	Get content codings;
	Resolve resource internal;
	Compute key;
	Get content coding key;
	Resolve url path internal

391.4. Add a class for caching resource resolver tests. It allows to:

	Handle setup;
	Resolve resource internal;
	Resolve resource internal  from cache;
	Resolve resource internal no match;
	Resolver url path;
	Resolver url path  from cache;
	Resolver url path no match;
	Resolve resource accept encoding  in cache key;
	Resolve resource no accept encoding;
	Resolve resource matching encoding;
	Get resource key

391.5. Add a class for caching resource transformer. It allows to:

	Instantiate caching resource transformer  with cache;
	Instantiate caching resource transformer  with cache manager;
	Get cache;
	Transform http servlet request

391.6. Add a class for content based version strategy tests. It allows to:

	Handle setup;
	Extract version;
	Remove version;
	Get resource version;
	Add version  to url

391.7. Add a class for content version strategy. It allows to:

	Instantiate content version strategy;
	Get resource version

391.8. Add a class for css link resource transformer tests. It allows to:

	Set css link resource transformer tests;
	Create url provider;
	Transform css link resource transformer tests;
	Transform no links;
	Transform ext links  not allowed;
	Transform skipped  for non css resource;
	Transform skipped  for gzipped resource;
	Transform empty url function;
	Get resource

391.9. Add a class for default resource resolver chain. It allows to:

	Instantiate default resource resolver chain  with resolvers list;
	Handle init chain;
	Instantiate default resource resolver chain  with resource resolver, resource resolver chain and resource resolver chain;
	Resolve resource;
	Resolve url path

391.10. Add a class for default resource transformer chain. It allows to:

	Instantiate default resource transformer chain  with resource resolver chain, transformers list and transformers list;
	Handle init transformer chain;
	Instantiate default resource transformer chain  with resource resolver chain, resource transformer, resource transformer chain and resource transformer chain;
	Get resolver chain;
	Transform http servlet request

391.11. Add a class for default servlet http request handler. It allows to:

	Set default servlet name;
	Set servlet context;
	Handle request

391.12. Add a class for fixed version strategy. It allows to:

	Instantiate fixed version strategy;
	Get resource version

391.13. Add a class for fixed version strategy tests. It allows to:

	Handle setup;
	Handle empty prefix version;
	Extract version;
	Remove version;
	Add version;
	Add version relative path

391.14. Add a class for path resource resolver. It allows to:

	Set allowed locations;
	Get allowed locations;
	Set location charsets;
	Get location charsets;
	Set url path helper;
	Get url path helper;
	Resolve resource internal;
	Resolve url path internal;
	Get resource;
	Check resource;
	Check if path resource resolver is resource under location;
	Encode http servlet request if necessary;
	Should encode relative path;
	Check if path resource resolver is invalid encoded path

391.15. Add a class for resource http request handler. It allows to:

	Instantiate resource http request handler;
	Set location values;
	Set locations;
	Get locations;
	Set resource resolvers;
	Get resource resolvers;
	Set resource transformers;
	Get resource transformers;
	Set resource http message converter;
	Get resource http message converter;
	Set resource region http message converter;
	Get resource region http message converter;
	Set content negotiation manager;
	Get content negotiation manager;
	Set cors configuration;
	Get cors configuration;
	Set url path helper;
	Get url path helper;
	Set embedded value resolver;
	Handle after properties set;
	Resolve resource locations;
	Handle init allowed locations;
	Handle init content negotiation strategy;
	Handle request;
	Get resource;
	Get process path;
	Handle clean duplicate slashes;
	Handle clean leading slash;
	Check if resource http request handler is invalid encoded path;
	Check if resource http request handler is invalid path;
	Get media type;
	Set headers;
	Convert resource http request handler to string;
	Get format locations

391.16. Add an interface declaration  for resource resolver. It allows to:

	Resolve resource;
	Resolve url path

391.17. Add an interface declaration  for resource resolver chain. It allows to:

	Resolve resource;
	Resolve url path

391.18. Add an interface declaration  for resource transformer. It allows to:

	Transform http servlet request

391.19. Add an interface declaration  for resource transformer chain. It allows to:

	Get resolver chain;
	Transform http servlet request

391.20. Add a class for resource transformer support. It allows to:

	Set resource url provider;
	Get resource url provider;
	Resolve url path;
	Convert resource transformer support to absolute path;
	Find resource url provider

391.21. Add a class for resource url encoding filter tests. It allows to:

	Create filter;
	Create resource url provider;
	Encode URL;
	Encode url  with context;
	Encode url  with context and forwarded request;
	Encode context path url  without suffix;
	Encode context path url  with suffix;
	Encode empty url  with context;
	Encode url  with request params;
	Encode url prevent string  out of bounds;
	Encode url  with fragment;
	Handle test encode url

391.22. Add a class for resource url provider. It allows to:

	Set url path helper;
	Get url path helper;
	Set path matcher;
	Get path matcher;
	Set handler map;
	Get handler map;
	Check if resource url provider is autodetect;
	Process resource url provider resource url provider on application event;
	Detect resource handlers;
	Get http servlet request for request url;
	Get lookup path index;
	Get end path index;
	Get resource url provider for lookup path

391.23. Add a class for resource url provider exposing interceptor. It allows to:

	Instantiate resource url provider exposing interceptor  with resource url provider;
	Handle http servlet request

391.24. Add a class for transformed resource. It allows to:

	Instantiate transformed resource  with original resource;
	Get filename;
	Handle last modified

391.25. Add an interface declaration  for version path strategy. It allows to:

	Extract version;
	Remove version;
	Add version

391.26. Add a class for version resource resolver tests. It allows to:

	Handle setup;
	Resolve resource existing;
	Resolve resource no version strategy;
	Resolve resource no version  in path;
	Resolve resource no resource  after version removed;
	Resolve resource version does  not match;
	Resolve resource success;
	Get strategy  for path;
	Should configure fixed prefix  automatically;
	Resolve url path no version strategy

391.27. Add an interface declaration  for version strategy. It allows to:

	Get resource version

391.28. Add a class for web jars resource resolver. It allows to:

	Instantiate web jars resource resolver;
	Instantiate web jars resource resolver  with web jar asset locator;
	Resolve resource internal;
	Resolve url path internal;
	Find web jar resource path

391.29. Add a class for web jars resource resolver tests. It allows to:

	Handle setup;
	Resolve url existing;
	Resolve url existing  not in jar file;
	Resolve url web jar resource;
	Resolve url web jar resource  not found;
	Resolve resource existing;
	Resolve resource  not found;
	Resolve resource web jar

392. Changes to package org.springframework.web.servlet.support:  

392.1. Add a class for abstract annotation config dispatcher servlet initializer. It allows to:

	Create root application context;
	Create servlet application context;
	Get root config classes;
	Get servlet config classes

392.2. Add a class for abstract dispatcher servlet initializer. It allows to:

	Process abstract dispatcher servlet initializer abstract dispatcher servlet initializer on startup;
	Register dispatcher servlet;
	Get servlet name;
	Create servlet application context;
	Create dispatcher servlet;
	Get servlet application context initializers;
	Get servlet mappings;
	Get servlet filters;
	Register servlet filter;
	Get dispatcher types;
	Check if abstract dispatcher servlet initializer is async supported;
	Customize registration

392.3. Add a class for abstract flash map manager. It allows to:

	Set flash map timeout;
	Get flash map timeout;
	Set url path helper;
	Get url path helper;
	Retrieve http servlet request;
	Get expired flash maps;
	Get matching flash map;
	Check if abstract flash map manager is flash map for request;
	Get originating request params;
	Save output flash map;
	Decode and normalize path;
	Retrieve flash maps;
	Update flash maps;
	Get flash maps  mutex http servlet request

392.4. Add a class for bind status. It allows to:

	Instantiate bind status  with request context;
	Handle init error codes;
	Get path;
	Get expression;
	Get value;
	Get value type;
	Get actual value;
	Get display value;
	Check if bind status is error;
	Get error codes;
	Get error code;
	Get error messages;
	Get error message;
	Get error messages  as string;
	Handle init error messages;
	Get errors;
	Get editor;
	Find editor;
	Convert bind status to string

392.5. Add a class for mock filter registration. It allows to:

	Get mappings;
	Check if mock filter registration is async supported;
	Set async supported;
	Add mapping  for servlet names;
	Get name;
	Get servlet name mappings;
	Add mapping  for url patterns;
	Get url pattern mappings;
	Get class name;
	Set init parameter;
	Get init parameter;
	Set init parameters;
	Get init parameters

392.6. Add a class for mock servlet registration. It allows to:

	Get load  on startup;
	Set load  on startup;
	Set run  as role;
	Add mapping;
	Get mappings;
	Get run  as role;
	Set async supported;
	Check if mock servlet registration is async supported;
	Get name;
	Set multipart config;
	Set servlet security;
	Get class name;
	Set init parameter;
	Get init parameter;
	Set init parameters;
	Get init parameters

392.7. Add a class for request context tests. It allows to:

	Handle init;
	Handle test get context url;
	Handle test get context url with map;
	Handle test get context url with map escaping;
	Convert test path

392.8. Add a class for request context utils. It allows to:

	Find web application context;
	Get locale resolver;
	Get locale;
	Get time zone;
	Get theme resolver;
	Get theme source;
	Get theme;
	Get input flash map;
	Get output flash map;
	Get flash map manager;
	Save output flash map

392.9. Add an interface declaration  for request data value processor. It allows to:

	Get process action;
	Get process form field value;
	Get extra hidden fields;
	Get process url

392.10. Add a class for request data value processor wrapper. It allows to:

	Set request data value processor;
	Get process url;
	Get process form field value;
	Get process action;
	Get extra hidden fields

392.11. Add a class for servlet uri components builder. It allows to:

	Instantiate servlet uri components builder;
	Instantiate servlet uri components builder  with other servlet uri components builder;
	Process servlet uri components builder servlet uri components builder from context path;
	Process servlet uri components builder servlet uri components builder from servlet mapping;
	Process servlet uri components builder servlet uri components builder from request uri;
	Process servlet uri components builder servlet uri components builder from request;
	Get init from request;
	Process servlet uri components builder servlet uri components builder from current context path;
	Process servlet uri components builder servlet uri components builder from current servlet mapping;
	Process servlet uri components builder servlet uri components builder from current request uri;
	Process servlet uri components builder servlet uri components builder from current request;
	Get current request;
	Handle init path;
	Remove path extension;
	Clone builder

392.12. Add a class for servlet uri components builder tests. It allows to:

	Handle setup;
	Process servlet uri components builder tests servlet uri components builder tests from request;
	Process servlet uri components builder tests servlet uri components builder tests from request encoded path;
	Process servlet uri components builder tests servlet uri components builder tests from request atypical http port;
	Process servlet uri components builder tests servlet uri components builder tests from request atypical https port;
	Process servlet uri components builder tests servlet uri components builder tests from request with forwarded host and port;
	Process servlet uri components builder tests servlet uri components builder tests from request uri;
	Process servlet uri components builder tests servlet uri components builder tests from request with forwarded prefix;
	Process servlet uri components builder tests servlet uri components builder tests from request with forwarded prefix trailing slash;
	Process servlet uri components builder tests servlet uri components builder tests from request with forwarded prefix root;
	Process servlet uri components builder tests servlet uri components builder tests from context path;
	Process servlet uri components builder tests servlet uri components builder tests from context path with forwarded prefix;
	Process servlet uri components builder tests servlet uri components builder tests from servlet mapping;
	Process servlet uri components builder tests servlet uri components builder tests from servlet mapping with forwarded prefix;
	Process servlet uri components builder tests servlet uri components builder tests from current request;
	Handle path extension;
	Handle path extension none;
	Adapt http servlet request from forwarded headers

392.13. Add a class for session flash map manager. It allows to:

	Retrieve flash maps;
	Update flash maps;
	Get flash maps  mutex http servlet request

392.14. Add a class for web content generator. It allows to:

	Instantiate web content generator;
	Set supported methods;
	Get supported methods;
	Handle init allow header;
	Get allow header;
	Set require session;
	Check if web content generator is require session;
	Set cache control;
	Get cache control;
	Set cache seconds;
	Get cache seconds;
	Get set vary by request headers;
	Get vary  by request headers;
	Get set use expires header;
	Check if web content generator is use expires header;
	Get set use cache control header;
	Check if web content generator is use cache control header;
	Get set use cache control no store;
	Check if web content generator is use cache control no store;
	Set web content generator always must revalidate;
	Check if web content generator is always must revalidate;
	Check request;
	Prepare response;
	Apply cache control;
	Apply cache seconds;
	Check http servlet request;
	Cache http servlet response for seconds;
	Prevent caching;
	Get vary request headers  to add

393. Changes to package org.springframework.web.servlet.tags:  

393.1. Add a class for abstract tag tests. It allows to:

	Create page context;
	Process abstract tag tests abstract tag tests in dispatcher servlet

393.2. Add an interface declaration  for argument aware. It allows to:

	Add argument

393.3. Add a class for argument tag. It allows to:

	Get set value;
	Do end tag;
	Handle release

393.4. Add a class for bind errors tag. It allows to:

	Set name;
	Get name;
	Do start tag internal;
	Do end tag;
	Get errors;
	Do bind errors tag finally

393.5. Add a class for bind tag. It allows to:

	Set path;
	Get path;
	Set ignore nested path;
	Check if bind tag is ignore nested path;
	Do start tag internal;
	Do end tag;
	Get status;
	Get property;
	Get errors;
	Get editor;
	Do bind tag finally

393.6. Add a class for bind tag outside dispatcher servlet tests. It allows to:

	Process bind tag outside dispatcher servlet tests bind tag outside dispatcher servlet tests in dispatcher servlet

393.7. Add a class for bind tag tests. It allows to:

	Handle bind tag without errors;
	Handle bind tag with global errors;
	Handle bind tag with global errors and no default message;
	Handle bind tag with global errors and default message only;
	Handle bind status get error messages as string;
	Handle bind tag with field errors;
	Handle bind tag with field errors and no default message;
	Handle bind tag with field errors and default message only;
	Handle bind tag with nested field errors;
	Handle property exposing;
	Handle bind tag with indexed properties;
	Handle bind tag with mapped properties;
	Handle bind tag with indexed properties and custom editor;
	Get  as text;
	Convert bind tag with;
	Handle bind tag with set value and html escaping;
	Handle bind tag with field but without errors instance;
	Handle bind tag with field but without errors instance and html escaping;
	Handle bind tag with bean but without errors instance;
	Handle bind tag without bean;
	Handle bind errors tag without errors;
	Handle bind errors tag with errors;
	Handle bind errors tag without bean;
	Handle nested path do end tag;
	Handle nested path do end tag with nesting;
	Handle nested path do start tag internal;
	Handle nested path do start tag internal with nesting;
	Handle nested path with bind tag;
	Handle nested path with bind tag with ignore nested path;
	Transform tag correct behavior;
	Transform tag  with html escape;
	Transform tag  outside bind tag;
	Transform tag non existing value;
	Transform tag  with setting of scope;
	Handle nesting in form tag;
	Create tag writer

393.8. Add an interface declaration  for editor aware tag. It allows to:

	Get editor

393.9. Add a class for escape body tag. It allows to:

	Set java script escape;
	Do start tag internal;
	Do init body;
	Set body content;
	Do escape body tag after body;
	Read body content;
	Write body content

393.10. Add a class for html escape tag. It allows to:

	Set default html escape;
	Do start tag internal

393.11. Add a class for html escape tag outside dispatcher servlet tests. It allows to:

	Process html escape tag outside dispatcher servlet tests html escape tag outside dispatcher servlet tests in dispatcher servlet

393.12. Add a class for html escape tag tests. It allows to:

	Handle html escape tag;
	Do start tag internal;
	Handle html escape tag with context param true;
	Handle html escape tag with context param false;
	Escape body;
	Read body content;
	Write body content;
	Escape body  with html escape;
	Escape body  with java script escape;
	Escape body  with html escape and java script escape;

393.13. Add a class for html escaping aware tag. It allows to:

	Set html escape;
	Check if html escaping aware tag is html escape;
	Check if html escaping aware tag is default html escape;
	Check if html escaping aware tag is response encoded html escape;
	Handle html escape

393.14. Add a class for message tag. It allows to:

	Set message;
	Set code;
	Set arguments;
	Set argument separator;
	Add argument;
	Set text;
	Set var;
	Set scope;
	Set java script escape;
	Do start tag internal;
	Do end tag;
	Handle release;
	Resolve message;
	Append arguments;
	Resolve arguments;
	Write message;
	Get message source;
	Get no such message exception description

393.15. Add a class for message tag outside dispatcher servlet tests. It allows to:

	Process message tag outside dispatcher servlet tests message tag outside dispatcher servlet tests in dispatcher servlet

393.16. Add a class for message tag tests. It allows to:

	Handle message tag with message source resolvable;
	Write message;
	Handle message tag with code;
	Handle message tag with code and argument;
	Handle message tag with code and arguments;
	Handle message tag with code and string argument with custom separator;
	Handle message tag with code and array argument;
	Handle message tag with code and object argument;
	Handle message tag with code and argument and nested argument;
	Handle message tag with code and nested argument;
	Handle message tag with code and nested arguments;
	Handle message tag with code and text;
	Handle message tag with text;
	Handle message tag with text encoding escaped;
	Handle message tag with text and java script escape;
	Handle message tag with text and html escape and java script escape;
	Handle message with var and scope;
	Handle message with var;
	Handle null message source;
	Handle request context

393.17. Add a class for nested path tag. It allows to:

	Set path;
	Get path;
	Do start tag;
	Do end tag;
	Catch throwable;
	Do nested path tag finally

393.18. Add a class for param. It allows to:

	Set name;
	Get name;
	Get set value;
	Get value;
	Convert param to string

393.19. Add an interface declaration  for param aware. It allows to:

	Add param

393.20. Add a class for param tag. It allows to:

	Set name;
	Get set value;
	Do end tag;
	Handle release

393.21. Add a class for param tests. It allows to:

	Name param tests;
	Handle value;
	Handle null defaults

393.22. Add a class for request context aware tag. It allows to:

	Do start tag;
	Get request context;
	Do start tag internal;
	Catch throwable;
	Do request context aware tag finally

393.23. Add a class for theme tag. It allows to:

	Get message source;
	Get no such message exception description

393.24. Add a class for theme tag tests. It allows to:

	Handle theme tag;
	Write message;
	Handle request context

393.25. Add a class for transform tag. It allows to:

	Get set value;
	Set var;
	Set scope;
	Do start tag internal

393.26. Add a class for url tag. It allows to:

	Get set value;
	Set context;
	Set var;
	Set scope;
	Set java script escape;
	Add param;
	Do start tag internal;
	Do end tag;
	Create url;
	Create query string;
	Replace uri template params

393.27. Add a class for url tag tests. It allows to:

	Handle setup;
	Param support;
	Do start tag;
	Do end tag;
	Handle var default scope;
	Handle var explicit scope;
	Set html escape default;
	Set html escape false;
	Set html escape true;
	Set java script escape true;
	Set html and java script escape true;
	Create query string no params;
	Create query string one param;
	Create query string one param  for exsisting query string;
	Create query string one param empty value;
	Create query string one param null value;
	Create query string one param  already used;
	Create query string two params;
	Create query string url encoding;
	Create query string param null name;
	Create query string param empty name;
	Replace uri template params no params;
	Replace uri template params template  without param match;
	Replace uri template params template  with param match;
	Replace uri template params template  with param match name pre encoding;
	Replace uri template params template  with param match value encoded;
	Replace uri template params template  with path segment;
	Replace uri template params template  with path;
	Create url remote server;
	Create url relative;
	Create url local context;
	Create url remote context;
	Create url remote context  with slash;
	Create url remote context single slash;
	Create url  with params;
	Create url  with template params;
	Create url  with param and existing query string

394. Changes to package org.springframework.web.servlet.tags.form:  

394.1. Add a class for abstract checked element tag. It allows to:

	Render tag writer from value;
	Check if abstract checked element tag is option selected;
	Render bound value boolean from boolean;
	Handle autogenerate id;
	Write tag content;
	Check if abstract checked element tag is valid dynamic attribute;
	Get input type

394.2. Add a class for abstract data bound form element tag. It allows to:

	Set path;
	Get path;
	Set id;
	Get id;
	Write default attributes;
	Resolve id;
	Handle autogenerate id;
	Get name;
	Get bind status;
	Get nested path;
	Get property path;
	Get bound value;
	Get property editor;
	Get editor;
	Convert abstract data bound form element tag to display string;
	Get process field value;
	Do abstract data bound form element tag finally

394.3. Add a class for abstract form tag. It allows to:

	Evaluate abstract form tag;
	Write optional attribute;
	Create tag writer;
	Do start tag internal;
	Get display string;
	Check if abstract form tag is default html escape;
	Write tag content

394.4. Add a class for abstract form tag tests. It allows to:

	Extend request;
	Create test bean;
	Extend page context;
	Get form tag

394.5. Add a class for abstract html element body tag. It allows to:

	Write tag content;
	Do end tag;
	Render body content from body content;
	Do abstract html element body tag finally;
	Process abstract html element body tag abstract html element body tag on write tag content;
	Render abstract html element body tag;
	Expose attributes;
	Remove attributes;
	Handle flush buffered body content;
	Render default content;
	Do init body;
	Set body content

394.6. Add a class for abstract html element tag. It allows to:

	Set css class;
	Get css class;
	Set css error class;
	Get css error class;
	Set css style;
	Get css style;
	Set lang;
	Get lang;
	Set title;
	Get title;
	Set dir;
	Get dir;
	Set tabindex;
	Get tabindex;
	Set onclick;
	Get onclick;
	Set ondblclick;
	Get ondblclick;
	Set onmousedown;
	Get onmousedown;
	Set onmouseup;
	Get onmouseup;
	Set onmouseover;
	Get onmouseover;
	Set onmousemove;
	Get onmousemove;
	Set onmouseout;
	Get onmouseout;
	Set onkeypress;
	Get onkeypress;
	Set onkeyup;
	Get onkeyup;
	Set onkeydown;
	Get onkeydown;
	Get dynamic attributes;
	Set dynamic attribute;
	Check if abstract html element tag is valid dynamic attribute;
	Write default attributes;
	Write optional attributes;
	Resolve css class

394.7. Add a class for abstract html element tag tests. It allows to:

	Set abstract html element tag tests;
	Create and populate page context;
	Extend page context;
	Extend request;
	Process abstract html element tag tests abstract html element tag tests on set up;
	Get page context;
	Get writer;
	Get output;
	Get request context;
	Get mock request data value processor;
	Expose binding result;
	Assert contains attribute;
	Assert attribute  not present;
	Assert block tag contains

394.8. Add a class for abstract html input element tag. It allows to:

	Set onfocus;
	Get onfocus;
	Set onblur;
	Get onblur;
	Set onchange;
	Get onchange;
	Set accesskey;
	Get accesskey;
	Set disabled;
	Check if abstract html input element tag is disabled;
	Set abstract html input element tag readonly;
	Check if abstract html input element tag is readonly;
	Write optional attributes

394.9. Add a class for abstract multi checked element tag. It allows to:

	Set items;
	Get items;
	Set item value;
	Get item value;
	Set item label;
	Get item label;
	Set delimiter;
	Get delimiter;
	Set element;
	Get element;
	Resolve id;
	Write tag content;
	Write object entry;
	Write map entry;
	Write element tag

394.10. Add a class for abstract single checked element tag. It allows to:

	Get set value;
	Get value;
	Set label;
	Get label;
	Write tag content;
	Write tag details

394.11. Add a class for button tag. It allows to:

	Set name;
	Get name;
	Get set value;
	Get value;
	Set disabled;
	Check if button tag is disabled;
	Write tag content;
	Write value;
	Get default value;
	Get type;
	Do end tag

394.12. Add a class for button tag tests. It allows to:

	Process button tag tests button tag tests on set up;
	Handle button tag;
	Handle disabled;
	Create test bean;
	Assert tag closed;
	Assert tag opened;
	Create tag;
	Create tag writer

394.13. Add a class for checkbox tag. It allows to:

	Write tag content;
	Write tag details;
	Get input type

394.14. Add a class for checkboxes tag. It allows to:

	Write tag content;
	Get input type

394.15. Add a class for country. It allows to:

	Instantiate country;
	Get iso code;
	Get name;
	Convert country to string;
	Get country  with iso code;
	Get countries

394.16. Add a class for errors tag. It allows to:

	Set element;
	Get element;
	Set delimiter;
	Get delimiter;
	Handle autogenerate id;
	Get name;
	Render errors tag;
	Render default content;
	Expose attributes;
	Remove attributes

394.17. Add a class for errors tag tests. It allows to:

	Process errors tag tests errors tag tests on set up;
	Create tag writer;
	Create test bean;
	Process errors tag tests errors tag tests with explicit non whitespace body content;
	Process errors tag tests errors tag tests with explicit whitespace body content;
	Process errors tag tests errors tag tests with explicit empty whitespace body content;
	Process errors tag tests errors tag tests with errors;
	Process errors tag tests errors tag tests with errors and dynamic attributes;
	Process errors tag tests errors tag tests with escaped errors;
	Process errors tag tests errors tag tests with non escaped errors;
	Process errors tag tests errors tag tests with errors and custom element;
	Process errors tag tests errors tag tests without errors;
	Process errors tag tests errors tag tests without errors instance;
	Process errors tag tests errors tag tests as body tag;
	Process errors tag tests errors tag tests as body tag with existing messages attribute;
	Handle as body tag with errors and existing messages attribute in non page scope are not clobbered;
	Handle as body tag with no errors and existing messages attribute in application scope are not clobbered;
	Handle as body tag with no errors and existing messages attribute in session scope are not clobbered;
	Handle as body tag with no errors and existing messages attribute in page scope are not clobbered;
	Handle as body tag with no errors and existing messages attribute in request scope are not clobbered;
	Get omitted path matches object errors only;
	Handle specific path matches specific field only;
	Handle star matches all errors;
	Expose binding result;
	Assert element tag opened;
	Assert element tag closed;
	Assert when no errors existing messages  in scope are not clobbered

394.18. Add a class for form tag. It allows to:

	Set model attribute;
	Get model attribute;
	Set name;
	Get name;
	Set action;
	Get action;
	Set servlet relative action;
	Get servlet relative action;
	Set method;
	Get method;
	Set target;
	Get target;
	Set enctype;
	Get enctype;
	Set accept charset;
	Get accept charset;
	Set onsubmit;
	Get onsubmit;
	Set onreset;
	Get onreset;
	Set autocomplete;
	Get autocomplete;
	Set method param;
	Get method param;
	Check if form tag is method browser supported;
	Write tag content;
	Get http method;
	Assert http method;
	Handle autogenerate id;
	Resolve model attribute;
	Resolve action;
	Get process action;
	Do end tag;
	Write hidden fields;
	Do form tag finally;
	Resolve css class;
	Set path;
	Set css error class

394.19. Add a class for form tag tests. It allows to:

	Process form tag tests form tag tests on set up;
	Create tag writer;
	Extend request;
	Write form;
	Process form tag tests form tag tests with action from request;
	Prepend servlet path;
	Process form tag tests form tag tests with null resolved command;
	Handle xss exploit when action is resolved from query string;
	Get form tag tests;
	Handle post;
	Put form tag tests;
	Delete form tag tests;
	Handle custom method parameter;
	Handle clear attributes on finally;
	Handle request data value processor hooks;
	Handle default action encoded;
	Get form tag;
	Get input tag;
	Assert form tag opened;
	Assert form tag closed

394.20. Add a class for hidden input tag. It allows to:

	Set disabled;
	Check if hidden input tag is disabled;
	Check if hidden input tag is valid dynamic attribute;
	Write tag content

394.21. Add a class for hidden input tag tests. It allows to:

	Process hidden input tag tests hidden input tag tests on set up;
	Create tag writer;
	Render hidden input tag tests;
	Process hidden input tag tests hidden input tag tests with custom binder;
	Handle dynamic type attribute;
	Handle disabled true;
	Handle disabled false;
	Assert tag closed;
	Assert tag opened;
	Create test bean

394.22. Add a class for input tag. It allows to:

	Set size;
	Get size;
	Set maxlength;
	Get maxlength;
	Set input tag alt;
	Get input tag alt;
	Set onselect;
	Get onselect;
	Set autocomplete;
	Get autocomplete;
	Write tag content;
	Write value;
	Check if input tag is valid dynamic attribute;
	Get type

394.23. Add a class for input tag tests. It allows to:

	Process input tag tests input tag tests on set up;
	Create test bean;
	Get tag;
	Handle simple bind;
	Handle simple bind tag within form;
	Handle simple bind with html escaping;
	Assert value attribute;
	Handle complex bind;
	Process input tag tests input tag tests with all attributes;
	Process input tag tests input tag tests with nested bind;
	Process input tag tests input tag tests with nested bind tag within form;
	Process input tag tests input tag tests with errors;
	Handle disabled false;
	Process input tag tests input tag tests with custom binder;
	Read input tag tests only attribute rendering when readonly is true;
	Handle dynamic type attribute;
	Handle dynamic type radio attribute;
	Handle dynamic type checkbox attribute;
	Assert tag closed;
	Assert tag opened;
	Create tag;
	Create tag writer;
	Get type

394.24. Add a class for label tag. It allows to:

	Set label tag for;
	Get label tag for;
	Write tag content;
	Get name;
	Resolve label tag for;
	Autogenerate label tag for;
	Do end tag;
	Do label tag finally

394.25. Add a class for label tag tests. It allows to:

	Process label tag tests label tag tests on set up;
	Create tag writer;
	Extend page context;
	Handle simple render;
	Handle simple render with dynamic attributes;
	Handle simple render with map element;
	Override label tag tests for;
	Create test bean

394.26. Add a class for option tag. It allows to:

	Get set value;
	Get value;
	Set disabled;
	Check if option tag is disabled;
	Set label;
	Get label;
	Render default content;
	Render body content from body content;
	Process option tag option tag on write tag content;
	Expose attributes;
	Get bind status;
	Remove attributes;
	Render option;
	Handle autogenerate id;
	Get label value;
	Assert option tag under select tag;
	Get select tag;
	Check if option tag is selected;
	Resolve value

394.27. Add a class for option tag enum tests. It allows to:

	Process option tag enum tests option tag enum tests on set up;
	Create tag writer;
	Get name;
	Process option tag enum tests option tag enum tests with java enum;
	Assert option tag opened;
	Assert option tag closed

394.28. Add a class for option writer. It allows to:

	Instantiate option writer  with bind status;
	Write options;
	Render tag writer from array;
	Render tag writer from map;
	Render tag writer from collection;
	Render tag writer from enum;
	Do render  from collection;
	Render option;
	Get display string;
	Get process option value;
	Check if option writer is option selected;
	Check if option writer is option disabled;
	Write common attributes

394.29. Add a class for options tag tests. It allows to:

	Process options tag tests options tag tests on set up;
	Create tag writer;
	Get name;
	Process options tag tests options tag tests with collection;
	Process options tag tests options tag tests with collection and dynamic attributes;
	Process options tag tests options tag tests with collection and custom editor;
	Process options tag tests options tag tests with items null reference;
	Process options tag tests options tag tests without items;
	Process options tag tests options tag tests without items enum parent;
	Process options tag tests options tag tests without items enum parent with explicit labels and values;
	Extend request;
	Expose binding result

394.30. Add a class for password input tag. It allows to:

	Set show password;
	Check if password input tag is show password;
	Check if password input tag is valid dynamic attribute;
	Get type;
	Write value

394.31. Add a class for password input tag tests. It allows to:

	Handle password value is not rendered by default;
	Convert password value is rendered if show password attribute is set;
	Convert password value is not rendered if show password attribute is set;
	Handle dynamic type attribute;
	Assert value attribute;
	Get type;
	Create tag;
	Create tag writer;
	Get password tag

394.32. Add a class for radio button tag. It allows to:

	Write tag details;
	Get input type

394.33. Add a class for radio buttons tag. It allows to:

	Get input type

394.34. Add a class for select tag. It allows to:

	Set items;
	Get items;
	Set item value;
	Get item value;
	Set item label;
	Get item label;
	Set size;
	Get size;
	Set multiple;
	Get multiple;
	Write tag content;
	Get process option value;
	Write hidden tag  if necessary;
	Check if select tag is multiple;
	Force multiple;
	Handle type requires multiple;
	Do end tag;
	Do select tag finally

394.35. Add a class for selected value comparator. It allows to:

	Check if selected value comparator is selected;
	Handle collection compare;
	Compare bound map;
	Handle exhaustive collection compare;
	Handle exhaustive compare

394.36. Add a class for simple float editor. It allows to:

	Get set as text;
	Get simple float editor as text

394.37. Add a class for tag id generator. It allows to:

	Handle next id

394.38. Add a class for tag id generator tests. It allows to:

	Handle next id;
	Assert next id

394.39. Add a class for tag writer tests. It allows to:

	Handle simple tag;
	Handle empty tag;
	Handle simple block tag;
	Block tag  with attributes;
	Get nested tags;
	Handle multiple nested tags;
	Write interleaved  with force block;
	Appending value

394.40. Add a class for test bean with real country. It allows to:

	Set real country;
	Get real country

394.41. Add a class for test types

Add a local a class for bean with enum. It allows to:

	Get test enum;
	Set test enum;
	Get enum label;
	Get enum value;
	Convert bean with enum to string

394.42. Add a class for textarea tag. It allows to:

	Set rows;
	Get rows;
	Set cols;
	Get cols;
	Set onselect;
	Get onselect;
	Write tag content

394.43. Add a class for textarea tag tests. It allows to:

	Process textarea tag tests textarea tag tests on set up;
	Create tag writer;
	Handle simple bind;
	Handle simple bind with dynamic attributes;
	Handle complex bind;
	Handle simple bind with html escaping;
	Handle custom bind;
	First new line;
	Create test bean

394.44. Add a class for value formatter. It allows to:

	Get display string;

395. Changes to package org.springframework.web.servlet.theme:  

395.1. Add a class for abstract theme resolver. It allows to:

	Set default theme name;
	Get default theme name

395.2. Add a class for cookie theme resolver. It allows to:

	Instantiate cookie theme resolver;
	Set default theme name;
	Get default theme name;
	Resolve theme name;
	Set theme name

395.3. Add a class for fixed theme resolver. It allows to:

	Resolve theme name;
	Set theme name

395.4. Add a class for session theme resolver. It allows to:

	Resolve theme name;
	Set theme name

395.5. Add a class for theme change interceptor. It allows to:

	Set param name;
	Get param name;
	Handle http servlet request

395.6. Add a class for theme resolver tests. It allows to:

	Handle internal test;
	Get fixed theme resolver;
	Handle cookie theme resolver;
	Handle session theme resolver;
	Handle session theme resolver with default

396. Changes to package org.springframework.web.servlet.view:  

396.1. Add a class for abstract caching view resolver. It allows to:

	Get content type;
	Render model map;
	Remove eldest entry;
	Set cache limit;
	Get cache limit;
	Set cache;
	Check if abstract caching view resolver is cache;
	Set cache unresolved;
	Check if abstract caching view resolver is cache unresolved;
	Resolve view name;
	Get format key;
	Get cache key;
	Remove locale from cache;
	Handle clear cache;
	Create view;
	Load view

396.2. Add a class for abstract template view. It allows to:

	Set expose request attributes;
	Set allow request override;
	Set expose session attributes;
	Set allow session override;
	Set expose spring macro helpers;
	Render merged output model;
	Apply content type;
	Render merged template model

396.3. Add a class for abstract template view resolver. It allows to:

	Get required view class;
	Set expose request attributes;
	Set allow request override;
	Set expose session attributes;
	Set allow session override;
	Set expose spring macro helpers;
	Build view

396.4. Add a class for abstract url based view. It allows to:

	Instantiate abstract url based view;
	Set url;
	Get url;
	Handle after properties set;
	Check if abstract url based view is url required;
	Check resource;
	Convert abstract url based view to string

396.5. Add a class for abstract view. It allows to:

	Set content type;
	Get content type;
	Set request context attribute;
	Get request context attribute;
	Set attributes CSV;
	Set attributes;
	Get set attributes map;
	Get attributes map;
	Add static attribute;
	Get static attributes;
	Set expose path variables;
	Check if abstract view is expose path variables;
	Set expose context beans  as attributes;
	Set exposed context bean names;
	Set bean name;
	Get bean name;
	Render model map;
	Create merged output model;
	Create request context;
	Prepare response;
	Check if abstract view generates download content;
	Get request  to expose;
	Render merged output model;
	Expose model  as request attributes;
	Create temporary output stream;
	Write http servlet response to response;
	Set response content type;
	Convert abstract view to string;
	Get format view name

396.6. Add a class for bean name view resolver. It allows to:

	Get set order;
	Get order;
	Resolve view name

396.7. Add a class for content negotiating view resolver. It allows to:

	Set content negotiation manager;
	Get content negotiation manager;
	Get set use not acceptable status code;
	Check if content negotiating view resolver is use not acceptable status code;
	Set default views;
	Get default views;
	Set view resolvers;
	Get view resolvers;
	Get set order;
	Get order;
	Handle init servlet context;
	Handle after properties set;
	Resolve view name;
	Get media types;
	Get producible media types;
	Get accept type most specific media type;
	Get candidate views;
	Get best view;
	Get content type;
	Render model map

396.8. Add a class for content negotiating view resolver tests. It allows to:

	Create view resolver;
	Reset request context holder;
	Get media type accept header  with produces;
	Resolve view name  with path extension;
	Resolve view name  with accept header;
	Resolve view name  with invalid accept header;
	Resolve view name  with request parameter;
	Resolve view name  with default content type;
	Resolve view name accept header;
	Resolve view name accept header sort  by quality;
	Resolve view name accept header  with suffix;
	Resolve view name accept header default view;
	Resolve view name filename;
	Resolve view name filename default view;
	Resolve view content type  null;
	Resolve view name redirect view;
	Resolve view no match;
	Resolve view no match use unacceptable status;
	Handle nested view resolver is not spring bean

396.9. Add a class for default request to view name translator. It allows to:

	Set prefix;
	Set suffix;
	Set separator;
	Set strip leading slash;
	Set strip trailing slash;
	Set strip extension;
	Set default request to view name translator always use full path;
	Set url decode;
	Set remove semicolon content;
	Set url path helper;
	Get view name;
	Transform path

396.10. Add a class for default request to view name translator tests. It allows to:

	Set default request to view name translator tests;
	Handle test get view name leaves leading slash if so configured;
	Handle test get view name leaves trailing slash if so configured;
	Handle test get view name leaves extension if so configured;
	Handle test get view name with default configuration;
	Handle test get view name with custom separator;
	Handle test get view name with no extension;
	Handle test get view name with semicolon content;
	Handle test get view name with prefix;
	Handle test get view name with null prefix;
	Handle test get view name with suffix;
	Handle test get view name with null suffix;
	Convert test try set url path helper;
	Assert view name

396.11. Add a class for dummy macro request context. It allows to:

	Instantiate dummy macro request context  with http servlet request;
	Set message map;
	Set theme message map;
	Get message;
	Get theme message;
	Set context path;
	Get context path;
	Get context url;
	Get bind status;

396.12. Add a class for internal resource view. It allows to:

	Instantiate internal resource view;
	Set internal resource view always include;
	Set prevent dispatch loop;
	Check if internal resource view is context required;
	Render merged output model;
	Expose helpers;
	Prepare http servlet request for rendering;
	Get request dispatcher;
	Include http servlet request

396.13. Add a class for internal resource view resolver. It allows to:

	Instantiate internal resource view resolver;
	Get required view class;
	Set internal resource view resolver always include;
	Build view

396.14. Add a class for internal resource view tests. It allows to:

	Check if internal resource view tests rejects null url;
	Forward internal resource view tests;
	Get minor version;
	Include include;
	Include internal resource view tests on attribute;
	Include internal resource view tests on committed

396.15. Add a class for jstl view. It allows to:

	Instantiate jstl view;
	Instantiate jstl view  with message source;
	Handle init servlet context;
	Expose helpers

396.16. Add a class for redirect view. It allows to:

	Instantiate redirect view;
	Set context relative;
	Set http 10 compatible;
	Set expose model attributes;
	Set encoding scheme;
	Set status code;
	Set expand uri template variables;
	Set propagate query params;
	Check if redirect view is propagate query properties;
	Set hosts;
	Get hosts;
	Check if redirect view is redirect view;
	Check if redirect view is context required;
	Render merged output model;
	Create target url;
	Get context path;
	Replace uri template variables;
	Get current request uri variables;
	Append current query params;
	Append query properties;
	Get query properties;
	Check if redirect view is eligible property;
	Check if redirect view is eligible value;
	Get url encode;
	Update target url;
	Send redirect;
	Check if redirect view is remote host;
	Get http 11 status code

396.17. Add a class for redirect view uri template tests. It allows to:

	Set redirect view uri template tests;
	Handle uri template;
	Uri redirect view uri template tests;
	Handle uri template and array query param;
	Handle uri template with object conversion;
	Handle uri template reuse current request vars;
	Handle uri template null value;
	Handle empty redirect string;
	Handle dont apply uri variables

396.18. Add a class for resource bundle view resolver. It allows to:

	Set basename;
	Set basenames;
	Set bundle class loader;
	Get bundle class loader;
	Set default parent view;
	Set locales  to initialize;
	Get set order;
	Get order;
	Handle after properties set;
	Load view;
	Handle init factory;
	Get bundle;
	Destroy resource bundle view resolver

396.19. Add a class for resource bundle view resolver no cache tests. It allows to:

	Get cache

396.20. Add a class for url based view resolver. It allows to:

	Set view class;
	Get view class;
	Get required view class;
	Set prefix;
	Get prefix;
	Set suffix;
	Get suffix;
	Set content type;
	Get content type;
	Set redirect context relative;
	Check if url based view resolver is redirect context relative;
	Set redirect http 10 compatible;
	Check if url based view resolver is redirect http 10 compatible;
	Set redirect hosts;
	Get redirect hosts;
	Set request context attribute;
	Get request context attribute;
	Set attributes;
	Get set attributes map;
	Get attributes map;
	Set expose path variables;
	Get expose path variables;
	Set expose context beans  as attributes;
	Get expose context beans  as attributes;
	Set exposed context bean names;
	Get exposed context bean names;
	Set view names;
	Get view names;
	Get set order;
	Get order;
	Handle init application context;
	Get cache key;
	Create view;
	Handle locale;
	Load view;
	Build view;
	Apply lifecycle methods

396.21. Add a class for view resolver composite. It allows to:

	Set view resolvers;
	Get view resolvers;
	Get set order;
	Get order;
	Set application context;
	Set servlet context;
	Handle after properties set;
	Resolve view name

396.22. Add a class for xml view resolver. It allows to:

	Set location;
	Get set order;
	Get order;
	Handle after properties set;
	Get cache key;
	Load view;
	Handle init factory;
	Destroy xml view resolver

397. Changes to package org.springframework.web.servlet.view.document:  

397.1. Add a class for abstract pdf stamper view. It allows to:

	Instantiate abstract pdf stamper view;
	Check if abstract pdf stamper view generates download content;
	Render merged output model;
	Read pdf resource;
	Merge pdf document

397.2. Add a class for abstract pdf view. It allows to:

	Instantiate abstract pdf view;
	Check if abstract pdf view generates download content;
	Render merged output model;
	Handle new document;
	Handle new writer;
	Prepare writer;
	Get viewer preferences;
	Build pdf metadata;
	Build pdf document

397.3. Add a class for abstract xls view. It allows to:

	Instantiate abstract xls view;
	Check if abstract xls view generates download content;
	Render merged output model;
	Create workbook;
	Render workbook;
	Build excel document

397.4. Add a class for abstract xlsx streaming view. It allows to:

	Create workbook;
	Render workbook

397.5. Add an object creator class for abstract xlsx view. It allows to:

	Instantiate abstract xlsx view;
	Create workbook

397.6. Add a class for xls view tests. It allows to:

	Handle test xls;
	Build excel document;
	Handle test xlsx view;
	Handle test xlsx streaming view;

398. Changes to package org.springframework.web.servlet.view.feed:  

398.1. Add a class for abstract atom feed view. It allows to:

	Instantiate abstract atom feed view;
	Set feed type;
	Handle new feed;
	Build feed entries;

398.2. Add a class for abstract feed view. It allows to:

	Render merged output model;
	Handle new feed;
	Build feed metadata;
	Build feed entries

398.3. Add a class for abstract rss feed view. It allows to:

	Instantiate abstract rss feed view;
	Handle new feed;
	Build feed entries;
	Build feed items

399. Changes to package org.springframework.web.servlet.view.freemarker:  

399.1. Add an interface declaration  for free marker config. It allows to:

	Get configuration;
	Get taglib factory

399.2. Add a class for free marker configurer. It allows to:

	Set configuration;
	Set servlet context;
	Handle after properties set;
	Post process template loaders;
	Get configuration;
	Get taglib factory

399.3. Add a class for free marker configurer tests. It allows to:

	Handle free marker configuration factory bean with config location;
	Handle free marker configuration factory bean with resource loader path;
	Handle free marker configuration factory bean with non file resource loader path;
	Get resource;
	Get class loader;
	Handle free marker configuration as bean

399.4. Add a class for free marker macro tests. It allows to:

	Set free marker macro tests;
	Handle test expose spring macro helpers;
	Handle process template;
	Handle test spring macro request context attribute used;
	Handle test name;
	Handle test age;
	Handle test message;
	Handle test default message;
	Handle test message args;
	Handle test message args with default message;
	Handle test theme;
	Handle test default theme;
	Handle test theme args;
	Handle test theme args with default message;
	Handle test url;
	Handle test url params;
	Handle test form 1;
	Convert test form;
	Handle test form 3;
	Handle test form 4;
	Handle test form 9;
	Handle test form 10;
	Handle test form 11;
	Handle test form 12;
	Handle test form 13;
	Handle test form 15;
	Handle test form 16;
	Handle test form 17;
	Handle test form 18;
	Get macro output;
	Fetch macro

399.5. Add a class for free marker view resolver. It allows to:

	Instantiate free marker view resolver;
	Get required view class

400. Changes to package org.springframework.web.servlet.view.groovy:  

400.1. Add an interface declaration  for groovy markup config. It allows to:

	Get template engine

400.2. Add a class for groovy markup view. It allows to:

	Set template engine;
	Handle init application context;
	Handle autodetect markup template engine;
	Check resource;
	Render merged template model;
	Get template

400.3. Add a class for groovy markup view resolver. It allows to:

	Instantiate groovy markup view resolver;
	Get required view class;
	Get cache key

400.4. Add a class for groovy markup view resolver tests. It allows to:

	View class;
	Cache key

401. Changes to package org.springframework.web.servlet.view.json:  

401.1. Add a class for abstract jackson 2 view. It allows to:

	Instantiate abstract jackson 2 view  with object mapper;
	Set object mapper;
	Get object mapper;
	Set encoding;
	Encoding abstract jackson 2 view;
	Set abstract jackson 2 view pretty print;
	Configure abstract jackson 2 view pretty print;
	Set disable caching;
	Set update content length;
	Prepare response;
	Render merged output model;
	Get filter and wrap model;
	Write content;
	Set model key;
	Get filter model;
	Write prefix;
	Write suffix

401.2. Add a class for mapping jackson 2 json view. It allows to:

	Instantiate mapping jackson 2 json view;
	Instantiate mapping jackson 2 json view  with object mapper;
	Set json prefix;
	Set prefix json;
	Set model key;
	Set model keys;
	Get model keys;
	Set extract value  from single key model;
	Get filter model;
	Write prefix

402. Changes to package org.springframework.web.servlet.view.script:  

402.1. Add an interface declaration  for script template config. It allows to:

	Get engine;
	Get engine name;
	Check if script template config is shared engine;
	Get scripts;
	Get render object;
	Get render function;
	Get content type;
	Get charset;
	Get resource loader path

402.2. Add a class for script template configurer. It allows to:

	Instantiate script template configurer;
	Set engine;
	Get engine;
	Set engine name;
	Get engine name;
	Set shared engine;
	Check if script template configurer is shared engine;
	Set scripts;
	Get scripts;
	Set render object;
	Get render object;
	Set render function;
	Get render function;
	Set content type;
	Get content type;
	Set charset;
	Get charset;
	Set resource loader path;
	Get resource loader path

402.3. Add a class for script template view resolver. It allows to:

	Instantiate script template view resolver;
	Get required view class

402.4. Add a class for script template view resolver tests. It allows to:

	View class

403. Changes to package org.springframework.web.servlet.view.tiles3:  

403.1. Add a class for abstract spring preparer factory. It allows to:

	Get preparer;

403.2. Add a class for simple spring preparer factory. It allows to:

	Get preparer

403.3. Add a class for spring bean preparer factory. It allows to:

	Get preparer

403.4. Add a class for spring locale resolver. It allows to:

	Resolve locale

403.5. Add a class for spring wildcard servlet tiles application context. It allows to:

	Instantiate spring wildcard servlet tiles application context  with servlet context;
	Get resource;
	Get resources

403.6. Add a class for tiles view. It allows to:

	Set renderer;
	Set expose jstl attributes;
	Set tiles view always include;
	Handle after properties set;
	Check resource;
	Get request locale;
	Render merged output model;
	Create tiles request;

403.7. Add a class for tiles view resolver. It allows to:

	Instantiate tiles view resolver;
	Get required view class;
	Set renderer;
	Set always include boolean always include;
	Build view

403.8. Add a class for tiles view resolver tests. It allows to:

	Set tiles view resolver tests;
	Handle test resolve

403.9. Add a class for tiles view tests. It allows to:

	Set tiles view tests;
	Render tiles view tests;
	Always include defaults;
	Handle always include enabled

404. Changes to package org.springframework.web.servlet.view.xml:  

404.1. Add a class for mapping jackson 2 xml view. It allows to:

	Instantiate mapping jackson 2 xml view;
	Instantiate mapping jackson 2 xml view  with xml mapper;
	Set model key;
	Get filter model

404.2. Add a class for marshalling view. It allows to:

	Instantiate marshalling view;
	Instantiate marshalling view  with marshaller;
	Set marshaller;
	Set model key;
	Handle init application context;
	Render merged output model;
	Locate model map to be marshalled;
	Check if marshalling view is eligible for marshalling

404.3. Add a class for marshalling view tests. It allows to:

	Create view;
	Get content type;
	Check if marshalling view tests is expose path vars;
	Check if marshalling view tests is expose path vars default constructor;
	Render model key;
	Render model key  with jaxb element;
	Render invalid model key;
	Render null model value;
	Render model key unsupported;
	Render no model key;
	Render no model key and binding result  first;
	Handle test render unsupported model

405. Changes to package org.springframework.web.servlet.view.xslt:  

405.1. Add a class for xslt view. It allows to:

	Set transformer factory class;
	Set source key;
	Set URI resolver;
	Set error listener;
	Set indent;
	Set output properties;
	Set cache templates;
	Handle init application context;
	Handle new transformer factory;
	Get transformer factory;
	Render merged output model;
	Create result;
	Locate source;
	Get source types;
	Convert source;
	Configure transformer;
	Configure indentation;
	Copy output properties;
	Copy model parameters;
	Configure response;
	Load templates;
	Create transformer;
	Get stylesheet source;
	Close source  if necessary

405.2. Add a class for xslt view resolver. It allows to:

	Instantiate xslt view resolver;
	Get required view class;
	Set source key;
	Set URI resolver;
	Set error listener;
	Set indent;
	Set output properties;
	Set cache templates;
	Build view

405.3. Add a class for xslt view resolver tests. It allows to:

	Resolve view

405.4. Add a class for xslt view tests. It allows to:

	Process xslt view tests xslt view tests with no source;
	Process xslt view tests xslt view tests without url;
	Handle simple transform with source;
	Handle test simple transform with document;
	Handle test simple transform with node;
	Handle test simple transform with input stream;
	Handle test simple transform with reader;
	Handle test simple transform with resource;
	Handle test with source key;
	Handle test content type carried from template;
	Handle test model parameters carried across;
	Handle test static attributes carried across;
	Get dom document;
	Do test  with model;
	Assert html output;
	Assert row element;
	Get xslt view;
	Get product data resource

406. Changes to package org.springframework.web.socket:  

406.1. Add a class for abstract http request tests. It allows to:

	Handle setup;
	Set request;
	Reset request and response;
	Reset request;
	Reset response

406.2. Add a class for abstract web socket message. It allows to:

	Instantiate abstract web socket message  with payload;
	Get payload;
	Check if abstract web socket message is last;
	Check if abstract web socket message equals;
	Hash code;
	Convert abstract web socket message to string;
	Convert abstract web socket message to string payload

406.3. Add a class for binary message. It allows to:

	Instantiate binary message  with payload byte buffer;
	Instantiate binary message;
	Get payload length;
	Convert binary message to string payload

406.4. Add a class for close status. It allows to:

	Instantiate close status;
	Get code;
	Get reason;
	Process close status close status with reason;
	Check if close status equals code;
	Check if close status equals;
	Hash code;
	Convert close status to string

406.5. Add a class for context loader test utils. It allows to:

	Set current web application context;
	Get current context  per thread from context loader

406.6. Add a class for jetty web socket test server. It allows to:

	Handle setup;
	Deploy config;
	Get dispatcher types;
	Handle undeploy config;
	Start jetty web socket test server;
	Stop jetty web socket test server;
	Get port;
	Get servlet context

406.7. Add a class for ping message. It allows to:

	Instantiate ping message;
	Instantiate ping message  with payload byte buffer;
	Get payload length;
	Convert ping message to string payload

406.8. Add a class for pong message. It allows to:

	Instantiate pong message;
	Instantiate pong message  with payload byte buffer;
	Get payload length;
	Convert pong message to string payload

406.9. Add an interface declaration  for sub protocol capable. It allows to:

	Get sub protocols

406.10. Add a class for text message. It allows to:

	Instantiate text message  with payload char sequence;
	Instantiate text message;
	Get payload length;
	Process text message text message as bytes;
	Convert text message to string payload

406.11. Add a class for text message tests. It allows to:

	Convert text message tests to string with ascii;
	Convert text message tests to string with multibyte string

406.12. Add a class for tomcat web socket test server. It allows to:

	Handle setup;
	Create temp dir;
	Deploy config;
	Handle undeploy config;
	Start tomcat web socket test server;
	Stop tomcat web socket test server;
	Get port;
	Get servlet context

406.13. Add a class for web socket extension. It allows to:

	Instantiate web socket extension;
	Instantiate web socket extension  with parameters map;
	Get name;
	Get parameters;
	Check if web socket extension equals;
	Hash code;
	Convert web socket extension to string;
	Parse extensions;
	Parse extension

406.14. Add a class for web socket extension tests. It allows to:

	Parse header single;
	Parse header multiple

406.15. Add an interface declaration  for web socket handler. It allows to:

	Handle after connection established;
	Handle message;
	Handle transport error;
	Handle after connection closed;
	Handle supports partial messages

406.16. Add a class for web socket http headers. It allows to:

	Instantiate web socket http headers;
	Instantiate web socket http headers  with http headers;
	Read web socket http headers only web socket http headers;
	Set sec web socket accept;
	Get sec web socket accept;
	Get sec web socket extensions;
	Set sec web socket extensions;
	Set sec web socket key;
	Get sec web socket key;
	Set sec web socket protocol;
	Get sec web socket protocol;
	Set sec web socket version;
	Get sec web socket version;
	Get web socket http headers first;
	Add web socket http headers;
	Set web socket http headers;
	Set values map;
	Convert web socket http headers to single value map;
	Get size;
	Check if web socket http headers is empty;
	Check if web socket http headers contains key;
	Check if web socket http headers contains value;
	Get web socket http headers;
	Put value list;
	Remove web socket http headers;
	Put map;
	Handle clear;
	Handle key set;
	Get values;
	Get entry set;
	Check if web socket http headers equals;
	Hash code;
	Convert web socket http headers to string

406.17. Add an interface declaration  for web socket message. It allows to:

	Get payload;
	Get payload length;
	Check if web socket message is last

406.18. Add an interface declaration  for web socket session. It allows to:

	Get id;
	Get uri;
	Get handshake headers;
	Get attributes;
	Get principal;
	Get local address;
	Get remote address;
	Get accepted protocol;
	Set text message size limit;
	Get text message size limit;
	Set binary message size limit;
	Get binary message size limit;
	Get extensions;
	Send message;
	Check if web socket session is open;
	Close web socket session;

406.19. Add an interface declaration  for web socket test server. It allows to:

	Handle setup;
	Deploy config;
	Handle undeploy config;
	Start web socket test server;
	Stop web socket test server;
	Get port;
	Get servlet context

407. Changes to package org.springframework.web.socket.adapter:  

407.1. Add a class for abstract web socket session. It allows to:

	Instantiate abstract web socket session  with attributes map;
	Get attributes;
	Get native session;
	Initialize native session;
	Check native session initialized;
	Send message;
	Send text message;
	Send binary message;
	Send ping message;
	Send pong message;
	Close abstract web socket session;
	Close internal;
	Convert abstract web socket session to string

407.2. Add an interface declaration  for native web socket session. It allows to:

	Get native session;

408. Changes to package org.springframework.web.socket.adapter.jetty:  

408.1. Add a class for jetty web socket handler adapter. It allows to:

	Instantiate jetty web socket handler adapter  with web socket handler, ws session and ws session;
	Process jetty web socket handler adapter jetty web socket handler adapter on web socket connect;
	Process jetty web socket handler adapter jetty web socket handler adapter on web socket text;
	Process jetty web socket handler adapter jetty web socket handler adapter on web socket binary;
	Process jetty web socket handler adapter jetty web socket handler adapter on web socket frame;
	Process jetty web socket handler adapter jetty web socket handler adapter on web socket close;
	Process jetty web socket handler adapter jetty web socket handler adapter on web socket error

408.2. Add a class for jetty web socket handler adapter tests. It allows to:

	Handle setup;
	Process jetty web socket handler adapter tests jetty web socket handler adapter tests on open;
	Process jetty web socket handler adapter tests jetty web socket handler adapter tests on close;
	Process jetty web socket handler adapter tests jetty web socket handler adapter tests on error

408.3. Add a class for jetty web socket session. It allows to:

	Instantiate jetty web socket session  with attributes map;
	Instantiate jetty web socket session  with attributes map, user principal and user principal;
	Get id;
	Get uri;
	Get handshake headers;
	Get accepted protocol;
	Get extensions;
	Get principal;
	Get local address;
	Get remote address;
	Set text message size limit;
	Get text message size limit;
	Set binary message size limit;
	Get binary message size limit;
	Check if jetty web socket session is open;
	Initialize native session;
	Send text message;
	Send binary message;
	Send ping message;
	Send pong message;
	Get remote endpoint;
	Close internal

408.4. Add a class for jetty web socket session tests. It allows to:

	Get principal  with constructor arg;
	Get principal  from native session;
	Get principal  not available;
	Get accepted protocol

408.5. Add a class for web socket to jetty extension config adapter. It allows to:

	Instantiate web socket to jetty extension config adapter  with web socket extension

409. Changes to package org.springframework.web.socket.adapter.standard:  

409.1. Add a class for standard to web socket extension adapter. It allows to:

	Instantiate standard to web socket extension adapter  with extension;
	Handle init parameters

409.2. Add a class for standard web socket handler adapter. It allows to:

	Instantiate standard web socket handler adapter  with web socket handler, ws session and ws session;
	Process standard web socket handler adapter standard web socket handler adapter on open;
	Process  on message;
	Handle text message;
	Handle binary message;
	Handle pong message;
	Process standard web socket handler adapter standard web socket handler adapter on close;
	Process standard web socket handler adapter standard web socket handler adapter on error

409.3. Add a class for standard web socket handler adapter tests. It allows to:

	Handle setup;
	Process standard web socket handler adapter tests standard web socket handler adapter tests on open;
	Process standard web socket handler adapter tests standard web socket handler adapter tests on close;
	Process standard web socket handler adapter tests standard web socket handler adapter tests on error

409.4. Add a class for standard web socket session. It allows to:

	Instantiate standard web socket session  with http headers, attributes map, local address, remote address and remote address;
	Instantiate standard web socket session  with http headers, attributes map, local address, remote address, user principal and user principal;
	Get id;
	Get uri;
	Get handshake headers;
	Get accepted protocol;
	Get extensions;
	Get principal;
	Get local address;
	Get remote address;
	Set text message size limit;
	Get text message size limit;
	Set binary message size limit;
	Get binary message size limit;
	Check if standard web socket session is open;
	Initialize native session;
	Send text message;
	Send binary message;
	Send ping message;
	Send pong message;
	Close internal

409.5. Add a class for standard web socket session tests. It allows to:

	Get principal  with constructor arg;
	Get principal  with native session;
	Get principal none;
	Get accepted protocol

409.6. Add a class for web socket to standard extension adapter. It allows to:

	Instantiate web socket to standard extension adapter  with web socket extension;
	Get name;
	Get value;
	Get parameters

410. Changes to package org.springframework.web.socket.client:  

410.1. Add a class for abstract web socket client. It allows to:

	Do handshake;
	Assert uri;
	Do handshake internal

410.2. Add a class for connection manager support. It allows to:

	Instantiate connection manager support;
	Get uri;
	Set auto startup;
	Check if connection manager support is auto startup;
	Set phase;
	Get phase;
	Start connection manager support;
	Start internal;
	Stop connection manager support;
	Stop callback runnable;
	Stop internal;
	Check if connection manager support is running;
	Handle open connection;
	Close connection;
	Check if connection manager support is connected

410.3. Add an interface declaration  for web socket client. It allows to:

	Do handshake;

410.4. Add a class for web socket connection manager. It allows to:

	Instantiate web socket connection manager  with web socket client, web socket handler and web socket handler;
	Decorate web socket handler;
	Set sub protocols;
	Get sub protocols;
	Set origin;
	Get origin;
	Set headers;
	Get headers;
	Start internal;
	Stop internal;
	Handle open connection;
	Process  on success;
	Process  on failure;
	Close connection;
	Check if web socket connection manager is connected

411. Changes to package org.springframework.web.socket.client.jetty:  

411.1. Add a class for jetty web socket client. It allows to:

	Instantiate jetty web socket client;
	Instantiate jetty web socket client  with web socket client;
	Set task executor;
	Get task executor;
	Start jetty web socket client;
	Stop jetty web socket client;
	Check if jetty web socket client is running;
	Do handshake;
	Do handshake internal;
	Get user

412. Changes to package org.springframework.web.socket.client.standard:  

412.1. Add a class for annotated endpoint connection manager. It allows to:

	Instantiate annotated endpoint connection manager;
	Instantiate annotated endpoint connection manager  with endpoint class;
	Set web socket container;
	Get web socket container;
	Set bean factory;
	Set task executor;
	Get task executor;
	Handle open connection;
	Close connection;
	Check if annotated endpoint connection manager is connected

412.2. Add a class for endpoint connection manager. It allows to:

	Instantiate endpoint connection manager  with endpoint;
	Instantiate endpoint connection manager  with endpoint class;
	Set supported protocols;
	Set extensions;
	Set encoders;
	Set decoders;
	Set configurator;
	Set web socket container;
	Get web socket container;
	Set bean factory;
	Set task executor;
	Get task executor;
	Handle open connection;
	Close connection;
	Check if endpoint connection manager is connected

412.3. Add a class for standard web socket client tests. It allows to:

	Handle setup;
	Handle test get local address;
	Handle test get local address wss;
	Handle test get local address no scheme;
	Handle test get remote address;
	Handle handshake headers;
	Handle client endpoint config;
	Handle client endpoint config with user properties;
	Handle standard web socket client configurator inserts handshake headers;
	Handle task executor

412.4. Add a class for web socket container factory bean. It allows to:

	Set async send timeout;
	Get async send timeout;
	Set max session idle timeout;
	Get max session idle timeout;
	Set max text message buffer size;
	Get max text message buffer size;
	Set max binary message buffer size;
	Get max binary message buffer size;
	Get object;
	Get object type;
	Check if web socket container factory bean is singleton

413. Changes to package org.springframework.web.socket.config:  

413.1. Add a class for handlers bean definition parser tests. It allows to:

	Handle web socket handlers;
	Handle web socket handlers attributes;
	Handle sock js;
	Handle sock js attributes;
	Load bean definitions;
	Unwrap and check decorated handler type

Add a local a class for test web socket handler. It allows to:

	Handle after connection established;
	Handle message;
	Handle transport error;
	Handle after connection closed;
	Handle supports partial messages

Add a local a class for foo web socket handler

Add a local a class for test handshake handler. It allows to:

	Do handshake

Add a local a class for test channel interceptor

Add a local a class for foo test interceptor. It allows to:

	Process foo test interceptor foo test interceptor before handshake;
	Process foo test interceptor foo test interceptor after handshake

Add a local a class for bar test interceptor

Add a local a class for test task scheduler. It allows to:

	Get schedule;
	Get schedule at fixed rate;
	Get schedule with fixed delay;

Add a local a class for test message codec. It allows to:

	Encode test message codec;
	Decode test message codec;
	Decode input stream

413.2. Add a class for message broker bean definition parser tests. It allows to:

	Handle simple broker;
	Stomp broker relay;
	Handle annotation method message handler;
	Handle custom channels;
	Handle custom channels with default executor;
	Handle custom argument and return value types;
	Handle message converters;
	Handle message converters defaults off;
	Handle test channel;
	Handle test executor;
	Load bean definitions;
	Handle unwrap web socket handler

Add a local a class for custom argument resolver. It allows to:

	Check if custom argument resolver supports parameter;
	Resolve argument

Add a local a class for custom return value handler. It allows to:

	Check if custom return value handler supports return type;
	Handle return value

Add a local an object creator class for test web socket handler decorator factory. It allows to:

	Decorate web socket handler

Add a local a class for test web socket handler decorator. It allows to:

	Instantiate test web socket handler decorator  with delegate web socket handler;
	Handle after connection established

Add a local a class for test stomp error handler

Add a local a class for test validator. It allows to:

	Handle supports;
	Validate errors

413.3. Add a class for web socket message broker stats. It allows to:

	Set sub protocol web socket handler;
	Handle init stomp sub protocol handler;
	Set stomp broker relay;
	Set inbound channel executor;
	Set outbound channel executor;
	Set sock js task scheduler;
	Handle init logging task;
	Set logging period;
	Get logging period;
	Get web socket session stats info;
	Get stomp sub protocol stats info;
	Get stomp broker relay stats info;
	Get client inbound executor stats info;
	Get client outbound executor stats info;
	Get sock js task scheduler stats info;
	Get executor stats info;
	Convert web socket message broker stats to string

413.4. Add a class for web socket namespace handler. It allows to:

	Handle init

413.5. Add a class for web socket namespace utils. It allows to:

	Register handshake handler;
	Register sock js service;
	Register scheduler;
	Parse bean sub elements

414. Changes to package org.springframework.web.socket.config.annotation:  

414.1. Add a class for abstract web socket handler registration. It allows to:

	Add handler;
	Set handshake handler;
	Get handshake handler;
	Add interceptors;
	Set allowed origins;
	Process abstract web socket handler registration abstract web socket handler registration with sock JS;
	Get interceptors;
	Get sock js service registration;
	Get mappings;
	Get or create handshake handler;
	Create mappings;
	Add sock js service mapping;
	Add web socket handler mapping

414.2. Add a class for abstract web socket message broker configurer. It allows to:

	Configure web socket transport;
	Configure client inbound channel;
	Configure client outbound channel;
	Configure message converters;
	Add argument resolvers;
	Add return value handlers;
	Configure message broker

414.3. Add a class for delegating web socket configuration. It allows to:

	Set configurers;
	Register web socket handlers

414.4. Add a class for delegating web socket message broker configuration. It allows to:

	Set configurers;
	Register stomp endpoints;
	Configure web socket transport;
	Configure client inbound channel;
	Configure client outbound channel;
	Add argument resolvers;
	Add return value handlers;
	Configure message converters;
	Configure message broker

414.5. Add a class for servlet web socket handler registration. It allows to:

	Create mappings;
	Add sock js service mapping;
	Add web socket handler mapping

414.6. Add a class for servlet web socket handler registry. It allows to:

	Instantiate servlet web socket handler registry;
	Add handler;
	Get set order;
	Get order;
	Set url path helper;
	Get url path helper;
	Check if servlet web socket handler registry requires task scheduler;
	Set task scheduler;
	Get handler mapping

414.7. Add a class for sock js service registration. It allows to:

	Instantiate sock js service registration;
	Set task scheduler;
	Set client library url;
	Set stream bytes limit;
	Set session cookie needed;
	Set heartbeat time;
	Set disconnect delay;
	Set http message cache size;
	Set web socket enabled;
	Set transport handlers;
	Set transport handler overrides;
	Set interceptors;
	Set allowed origins;
	Set supress cors;
	Set message codec;
	Get sock js service;
	Get task scheduler;
	Create sock js service

414.8. Add an interface declaration  for stomp endpoint registry. It allows to:

	Add endpoint;
	Get set order;
	Set url path helper;
	Set error handler

414.9. Add an interface declaration  for stomp web socket endpoint registration. It allows to:

	Process stomp web socket endpoint registration stomp web socket endpoint registration with sock JS;
	Set handshake handler;
	Add interceptors;
	Set allowed origins

414.10. Add a class for web mvc stomp endpoint registry. It allows to:

	Instantiate web mvc stomp endpoint registry  with web socket handler, web socket transport registration, default sock js task scheduler and default sock js task scheduler;
	Handle unwrap sub protocol web socket handler;
	Add endpoint;
	Get set order;
	Get order;
	Set url path helper;
	Get url path helper;
	Set error handler;
	Set application context;
	Get handler mapping

414.11. Add a class for web mvc stomp endpoint registry tests. It allows to:

	Handle setup;
	Stomp protocol handler;
	Handle handler mapping;
	Handle error handler

414.12. Add a class for web mvc stomp web socket endpoint registration. It allows to:

	Instantiate web mvc stomp web socket endpoint registration  with web socket handler, sock js task scheduler and sock js task scheduler;
	Set handshake handler;
	Add interceptors;
	Set allowed origins;
	Process web mvc stomp web socket endpoint registration web mvc stomp web socket endpoint registration with sock JS;
	Get interceptors;
	Get mappings

414.13. Add a class for web mvc stomp web socket endpoint registration tests. It allows to:

	Handle setup;
	Handle minimal registration;
	Get allowed origins;
	Handle same origin;
	Get allowed origins with sock js service;
	Disable cors  with sock js service;
	Handle handshake handler and interceptor;
	Handle handshake handler and interceptor with allowed origins;
	Handle handshake handler interceptor with sock js service;
	Handle handshake handler interceptor with sock js service and allowed origins

414.14. Add a class for web socket configuration support. It allows to:

	Get web socket handler mapping;
	Handle init handler registry;
	Register web socket handlers;
	Get default sock js task scheduler

414.15. Add an interface declaration  for web socket configurer. It allows to:

	Register web socket handlers

414.16. Add an interface declaration  for web socket handler registration. It allows to:

	Add handler;
	Set handshake handler;
	Add interceptors;
	Set allowed origins;
	Process web socket handler registration web socket handler registration with sock JS

414.17. Add an interface declaration  for web socket handler registry. It allows to:

	Add handler

414.18. Add a class for web socket message broker configuration support. It allows to:

	Create annotation method message handler;
	Create local user registry;
	Stomp web socket handler mapping;
	Get sub protocol web socket handler;
	Decorate web socket handler;
	Get transport registration;
	Configure web socket transport;
	Register stomp endpoints;
	Get web socket scope configurer;
	Get web socket message broker stats;
	Create jackson converter

414.19. Add an interface declaration  for web socket message broker configurer. It allows to:

	Register stomp endpoints;
	Configure web socket transport;
	Configure client inbound channel;
	Configure client outbound channel;
	Add argument resolvers;
	Add return value handlers;
	Configure message converters;
	Configure message broker

414.20. Add a class for web socket transport registration. It allows to:

	Set message size limit;
	Get message size limit;
	Set send time limit;
	Get send time limit;
	Set send buffer size limit;
	Get send buffer size limit;
	Set time  to first message;
	Get time  to first message;
	Set decorator factories;
	Add decorator factory;
	Get decorator factories

415. Changes to package org.springframework.web.socket.handler:  

415.1. Add a class for abstract web socket handler. It allows to:

	Handle after connection established;
	Handle message;
	Handle text message;
	Handle binary message;
	Handle pong message;
	Handle transport error;
	Handle after connection closed;
	Handle supports partial messages

415.2. Add a class for bean creating handler provider. It allows to:

	Instantiate bean creating handler provider  with handler type class;
	Set bean factory;
	Destroy handler;
	Get handler type;
	Get handler;
	Convert bean creating handler provider to string

415.3. Add a class for binary web socket handler. It allows to:

	Handle text message

415.4. Add a class for concurrent web socket session decorator. It allows to:

	Instantiate concurrent web socket session decorator  with delegate web socket session;
	Instantiate concurrent web socket session decorator  with delegate web socket session, overflow strategy and overflow strategy;
	Get send time limit;
	Get buffer size limit;
	Get buffer size;
	Get time  since send started;
	Send message;
	Should concurrent web socket session decorator not send;
	Try flush message buffer;
	Check session limits;
	Exceeded concurrent web socket session decorator;
	Close concurrent web socket session decorator;
	Convert concurrent web socket session decorator to string

415.5. Add a class for exception web socket handler decorator. It allows to:

	Instantiate exception web socket handler decorator  with delegate web socket handler;
	Handle after connection established;
	Handle message;
	Handle transport error;
	Handle after connection closed;
	Try web socket session close with error

415.6. Add a class for exception web socket handler decorator tests. It allows to:

	Handle setup;
	Handle after connection established;
	Handle message;
	Handle transport error;
	Handle after connection closed

415.7. Add a class for logging web socket handler decorator. It allows to:

	Instantiate logging web socket handler decorator  with delegate web socket handler;
	Handle after connection established;
	Handle message;
	Handle transport error;
	Handle after connection closed

415.8. Add a class for per connection web socket handler. It allows to:

	Instantiate per connection web socket handler  with handler type class;
	Set bean factory;
	Handle after connection established;
	Handle message;
	Handle transport error;
	Handle after connection closed;
	Handle supports partial messages;
	Get handler;
	Destroy handler;
	Convert per connection web socket handler to string

415.9. Add a class for session limit exceeded exception. It allows to:

	Instantiate session limit exceeded exception  with close status;
	Get status

415.10. Add a class for test principal. It allows to:

	Instantiate test principal;
	Get name;
	Check if test principal equals;
	Hash code

415.11. Add a class for test web socket session. It allows to:

	Instantiate test web socket session;
	Get id;
	Set id;
	Get uri;
	Set uri;
	Get handshake headers;
	Get headers;
	Set headers;
	Set attributes;
	Get attributes;
	Get principal;
	Set principal;
	Get local address;
	Set local address;
	Get remote address;
	Set remote address;
	Get accepted protocol;
	Set accepted protocol;
	Set text message size limit;
	Get text message size limit;
	Set binary message size limit;
	Get binary message size limit;
	Get extensions;
	Set extensions;
	Check if test web socket session is open;
	Set open;
	Get sent messages;
	Get test web socket session close status;
	Send message;
	Close test web socket session;

415.12. Add a class for text web socket handler. It allows to:

	Handle binary message

415.13. Add a class for web socket handler decorator. It allows to:

	Instantiate web socket handler decorator  with delegate web socket handler;
	Get delegate;
	Get last handler;
	Get unwrap;
	Handle after connection established;
	Handle message;
	Handle transport error;
	Handle after connection closed;
	Handle supports partial messages;
	Convert web socket handler decorator to string

415.14. Add an interface declaration  for web socket handler decorator factory. It allows to:

	Decorate web socket handler

415.15. Add a class for web socket handler decorator tests. It allows to:

	Get last handler

415.16. Add a class for web socket http headers tests. It allows to:

	Set web socket http headers tests;
	Parse web socket extensions

415.17. Add a class for web socket session decorator. It allows to:

	Instantiate web socket session decorator  with web socket session;
	Get delegate;
	Get last session;
	Get unwrap;
	Get id;
	Get uri;
	Get handshake headers;
	Get attributes;
	Get principal;
	Get local address;
	Get remote address;
	Get accepted protocol;
	Get extensions;
	Set text message size limit;
	Get text message size limit;
	Set binary message size limit;
	Get binary message size limit;
	Check if web socket session decorator is open;
	Send message;
	Close web socket session decorator;
	Convert web socket session decorator to string

416. Changes to package org.springframework.web.socket.messaging:  

416.1. Add a class for abstract sub protocol event. It allows to:

	Instantiate abstract sub protocol event  with message;
	Instantiate abstract sub protocol event  with message, user principal and user principal;
	Get message;
	Get user;
	Convert abstract sub protocol event to string

416.2. Add a class for session connect event. It allows to:

	Instantiate session connect event  with message;
	Instantiate session connect event  with message, user principal and user principal

416.3. Add a class for session connected event. It allows to:

	Instantiate session connected event  with message;
	Instantiate session connected event  with message, user principal and user principal

416.4. Add a class for session disconnect event. It allows to:

	Instantiate session disconnect event  with message, close status and close status;
	Instantiate session disconnect event  with message, close status, user principal and user principal;
	Get session id;
	Get session disconnect event close status;
	Convert session disconnect event to string

416.5. Add a class for session subscribe event. It allows to:

	Instantiate session subscribe event  with message;
	Instantiate session subscribe event  with message, user principal and user principal

416.6. Add a class for session unsubscribe event. It allows to:

	Instantiate session unsubscribe event  with message;
	Instantiate session unsubscribe event  with message, user principal and user principal

416.7. Add a class for stomp sub protocol error handler. It allows to:

	Handle client message processing error;
	Handle error message  to client;
	Handle internal

416.8. Add a class for stomp sub protocol error handler tests. It allows to:

	Set stomp sub protocol error handler tests;
	Handle client message processing error;
	Handle client message processing error  with receipt

416.9. Add a class for stomp text message builder. It allows to:

	Instantiate stomp text message builder  with stomp command;
	Create stomp command;
	Get headers;
	Get body;
	Build stomp text message builder

416.10. Add an interface declaration  for sub protocol error handler. It allows to:

	Handle client message processing error;
	Handle error message  to client

416.11. Add an interface declaration  for sub protocol handler. It allows to:

	Get supported protocols;
	Handle message  from client;
	Handle message  to client;
	Resolve session id;
	Handle after session started;
	Handle after session ended

416.12. Add a class for sub protocol web socket handler tests. It allows to:

	Handle setup;
	Handle sub protocol match;
	Handle sub protocol default handler only;
	Handle sub protocol no match;
	Handle null sub protocol;
	Handle empty sub protocol;
	No sub protocol one handler;
	No sub protocol two handlers;
	No sub protocol no default handler;
	Check session

417. Changes to package org.springframework.web.socket.server:  

417.1. Add a class for handshake failure exception. It allows to:

	Instantiate handshake failure exception;
	Instantiate handshake failure exception  with cause throwable

417.2. Add an interface declaration  for handshake handler. It allows to:

	Do handshake

417.3. Add an interface declaration  for handshake interceptor. It allows to:

	Process handshake interceptor handshake interceptor before handshake;
	Process handshake interceptor handshake interceptor after handshake

417.4. Add an interface declaration  for request upgrade strategy. It allows to:

	Get supported versions;
	Get supported extensions;
	Upgrade server http request

418. Changes to package org.springframework.web.socket.server.standard:  

418.1. Add a class for abstract standard upgrade strategy. It allows to:

	Get container;
	Get http servlet request;
	Get http servlet response;
	Get supported extensions;
	Get installed extensions;
	Upgrade server http request;
	Upgrade internal

418.2. Add a class for abstract tyrus request upgrade strategy. It allows to:

	Get endpoint constructor;
	Get supported versions;
	Get installed extensions;
	Upgrade internal;
	Create tyrus endpoint;
	Create request context;
	Handle unregister tyrus endpoint;
	Create endpoint;
	Register tyrus web socket engine;
	Handle unregister;
	Handle success

418.3. Add a class for glass fish request upgrade strategy. It allows to:

	Handle success;
	Handle new servlet writer

418.4. Add a class for server endpoint exporter. It allows to:

	Set annotated endpoint classes;
	Set server container;
	Get server container;
	Handle init servlet context;
	Check if server endpoint exporter is context required;
	Handle after properties set;
	Handle after singletons instantiated;
	Register endpoints;
	Register endpoint;

418.5. Add a class for server endpoint registration. It allows to:

	Instantiate server endpoint registration  with endpoint;
	Instantiate server endpoint registration  with endpoint class;
	Get path;
	Get endpoint class;
	Get endpoint;
	Set subprotocols;
	Get subprotocols;
	Set extensions;
	Get extensions;
	Set encoders;
	Get encoders;
	Set decoders;
	Get decoders;
	Set user properties;
	Get user properties;
	Get configurator;
	Get endpoint instance;
	Modify handshake;
	Set bean factory;
	Convert server endpoint registration to string

418.6. Add a class for servlet server container factory bean. It allows to:

	Set async send timeout;
	Get async send timeout;
	Set max session idle timeout;
	Get max session idle timeout;
	Set max text message buffer size;
	Get max text message buffer size;
	Set max binary message buffer size;
	Get max binary message buffer size;
	Set servlet context;
	Handle after properties set;
	Get object;
	Get object type;
	Check if servlet server container factory bean is singleton

418.7. Add a class for spring configurator. It allows to:

	Get endpoint instance;
	Get bean name  by type

418.8. Add a class for tomcat request upgrade strategy. It allows to:

	Get supported versions;
	Upgrade internal;
	Get container

418.9. Add a class for undertow request upgrade strategy. It allows to:

	Get supported versions;
	Upgrade internal;
	Get container

418.10. Add a class for web sphere request upgrade strategy. It allows to:

	Get supported versions;
	Upgrade internal

419. Changes to package org.springframework.web.socket.server.support:  

419.1. Add a class for abstract handshake handler. It allows to:

	Instantiate abstract handshake handler;
	Instantiate abstract handshake handler  with request upgrade strategy;
	Handle init request upgrade strategy;
	Get request upgrade strategy;
	Set supported protocols;
	Get supported protocols;
	Start abstract handshake handler;
	Stop abstract handshake handler;
	Check if abstract handshake handler is running;
	Do handshake;
	Handle invalid upgrade header;
	Handle invalid connect header;
	Check if abstract handshake handler is web socket version supported;
	Get supported versions;
	Handle web socket version  not supported;
	Check if abstract handshake handler is valid origin;
	Handle select protocol;
	Determine handler supported protocols;
	Get filter requested extensions;
	Determine user

419.2. Add a class for default handshake handler. It allows to:

	Instantiate default handshake handler;
	Instantiate default handshake handler  with request upgrade strategy;
	Set servlet context

419.3. Add a class for handshake interceptor chain. It allows to:

	Instantiate handshake interceptor chain  with interceptors list, ws handler and ws handler;
	Apply server http request before handshake;
	Apply server http request after handshake

419.4. Add a class for handshake interceptor chain tests. It allows to:

	Handle setup;
	Handle success;
	Apply handshake interceptor chain tests before handshake with false return value;
	Apply handshake interceptor chain tests after handshake only

419.5. Add a class for http session handshake interceptor. It allows to:

	Instantiate http session handshake interceptor;
	Instantiate http session handshake interceptor  with attribute names collection;
	Get attribute names;
	Get set copy all attributes;
	Check if http session handshake interceptor is copy all attributes;
	Get set copy http session id;
	Check if http session handshake interceptor is copy http session id;
	Set create session;
	Check if http session handshake interceptor is create session;
	Process http session handshake interceptor http session handshake interceptor before handshake;
	Get session;
	Process http session handshake interceptor http session handshake interceptor after handshake

419.6. Add a class for http session handshake interceptor tests. It allows to:

	Handle default constructor;
	Handle constructor with attribute names;
	Do http session handshake interceptor tests not copy http session id;
	Do http session handshake interceptor tests not copy attributes;
	Do http session handshake interceptor tests not cause session creation

419.7. Add a class for origin handshake interceptor. It allows to:

	Instantiate origin handshake interceptor;
	Instantiate origin handshake interceptor  with allowed origins collection;
	Set allowed origins;
	Get allowed origins;
	Process origin handshake interceptor origin handshake interceptor before handshake;
	Process origin handshake interceptor origin handshake interceptor after handshake

419.8. Add a class for origin handshake interceptor tests. It allows to:

	Handle invalid input;
	Handle origin value match;
	Handle origin value no match;
	Handle origin list match;
	Handle origin list no match;
	Handle origin no match with null hostile collection;
	Handle origin match all;
	Handle same origin match with empty allowed origins;
	Handle same origin match with allowed origins;
	Handle same origin no match

419.9. Add a class for web socket handler mapping. It allows to:

	Handle init servlet context;
	Start web socket handler mapping;
	Stop web socket handler mapping;
	Check if web socket handler mapping is running

419.10. Add a class for web socket http request handler. It allows to:

	Instantiate web socket http request handler  with ws handler;
	Instantiate web socket http request handler  with ws handler, handshake handler and handshake handler;
	Get web socket handler;
	Get handshake handler;
	Set handshake interceptors;
	Get handshake interceptors;
	Set servlet context;
	Start web socket http request handler;
	Stop web socket http request handler;
	Check if web socket http request handler is running;
	Handle request

420. Changes to package org.springframework.web.socket.sockjs:  

420.1. Add a class for sock js exception. It allows to:

	Instantiate sock js exception  with cause throwable;
	Get sock js session id

420.2. Add a class for sock js message delivery exception. It allows to:

	Instantiate sock js message delivery exception  with undelivered messages list, cause throwable and cause throwable;
	Instantiate sock js message delivery exception  with undelivered messages list;
	Get undelivered messages

420.3. Add an interface declaration  for sock js service. It allows to:

	Handle request

420.4. Add a class for sock js transport failure exception. It allows to:

	Instantiate sock js transport failure exception  with cause throwable;

421. Changes to package org.springframework.web.socket.sockjs.client:  

421.1. Add a class for abstract client sock js session. It allows to:

	Instantiate abstract client sock js session  with transport request, web socket handler, connect future and connect future;
	Get id;
	Get uri;
	Get handshake headers;
	Get attributes;
	Get principal;
	Get message codec;
	Get web socket handler;
	Get timeout task;
	Run;
	Check if abstract client sock js session is open;
	Check if abstract client sock js session is disconnected;
	Send message;
	Send internal;
	Close abstract client sock js session;
	Check if abstract client sock js session is user set status;
	Handle silent close;
	Close internal;
	Disconnect close status;
	Handle frame;
	Handle open frame;
	Handle message frame;
	Handle close frame;
	Handle transport error;
	Handle after transport closed;
	Convert abstract client sock js session to string

421.2. Add a class for abstract xhr transport. It allows to:

	Get transport types;
	Set xhr streaming disabled;
	Check if abstract xhr transport is xhr streaming disabled;
	Connect transport request;
	Connect internal;
	Execute info request;
	Execute info request internal;
	Execute send request;
	Execute send request internal

421.3. Add a class for default transport request tests. It allows to:

	Handle setup;
	Connect default transport request tests;
	Handle fallback after transport error;
	Handle fallback after timeout;
	Create transport request

421.4. Add an interface declaration  for info receiver. It allows to:

	Execute info request

421.5. Add a class for sock js client tests. It allows to:

	Handle setup;
	Connect web socket;
	Connect web socket disabled;
	Connect xhr streaming disabled;
	Connect sock js client tests with handshake headers;
	Connect and use subset  of handshake headers for http requests;
	Connect sock js info;
	Connect sock js info cached;
	Connect info request failure;
	Get setup info request

421.6. Add a class for sock js url info. It allows to:

	Instantiate sock js url info  with sock js url URI;
	Get sock js url;
	Get server id;
	Get session id;
	Get uuid;
	Get info url;
	Get transport url;
	Get scheme;
	Convert sock js url info to string

421.7. Add a class for sock js url info tests. It allows to:

	Handle server id;
	Handle session id;
	Info url;
	Handle test info url;
	Transport url;
	Handle test transport url

421.8. Add an interface declaration  for transport. It allows to:

	Get transport types;
	Connect transport request

421.9. Add an interface declaration  for transport request. It allows to:

	Get sock js url info;
	Get handshake headers;
	Get http request headers;
	Get transport url;
	Get user;
	Get message codec;
	Add timeout task

421.10. Add a class for web socket client sock js session. It allows to:

	Instantiate web socket client sock js session  with transport request, web socket handler, connect future and connect future;
	Get native session;
	Get local address;
	Get remote address;
	Get accepted protocol;
	Set text message size limit;
	Get text message size limit;
	Set binary message size limit;
	Get binary message size limit;
	Get extensions;
	Initialize delegate session;
	Send internal;
	Disconnect close status

421.11. Add a class for xhr client sock js session. It allows to:

	Instantiate xhr client sock js session  with transport request, web socket handler, xhr transport, connect future and connect future;
	Get headers;
	Get local address;
	Get remote address;
	Get accepted protocol;
	Set text message size limit;
	Get text message size limit;
	Set binary message size limit;
	Get binary message size limit;
	Get extensions;
	Send internal;
	Disconnect close status

421.12. Add an interface declaration  for xhr transport. It allows to:

	Check if xhr transport is xhr streaming disabled;
	Execute send request

422. Changes to package org.springframework.web.socket.sockjs.frame:  

422.1. Add a class for abstract sock js message codec. It allows to:

	Encode abstract sock js message codec;
	Apply json quoting;
	Escape sock js special chars;
	Check if abstract sock js message codec is sock js special char

422.2. Add a class for default sock js frame format. It allows to:

	Instantiate default sock js frame format;
	Get format;
	Pre process content

422.3. Add a class for jackson 2 sock js message codec. It allows to:

	Instantiate jackson 2 sock js message codec;
	Instantiate jackson 2 sock js message codec  with object mapper;
	Decode jackson 2 sock js message codec;
	Decode input stream;
	Apply json quoting

422.4. Add a class for sock js frame. It allows to:

	Instantiate sock js frame;
	Get type;
	Get content;
	Get content bytes;
	Get frame data;
	Check if sock js frame equals;
	Hash code;
	Convert sock js frame to string;
	Handle open frame;
	Get heartbeat frame;
	Get message frame;
	Close frame go  away;
	Close frame another connection open;
	Close frame

422.5. Add an interface declaration  for sock js frame format. It allows to:

	Get format

422.6. Add a class for sock js frame tests. It allows to:

	Handle open frame;
	Handle heartbeat frame;
	Handle message array frame;
	Handle message array frame empty;
	Close frame;
	Close frame empty

422.7. Add an interface declaration  for sock js message codec. It allows to:

	Encode sock js message codec;
	Decode sock js message codec;
	Decode input stream

423. Changes to package org.springframework.web.socket.sockjs.support:  

423.1. Add a class for sock js http request handler. It allows to:

	Instantiate sock js http request handler  with sock js service, web socket handler and web socket handler;
	Get sock js service;
	Get web socket handler;
	Set servlet context;
	Start sock js http request handler;
	Stop sock js http request handler;
	Check if sock js http request handler is running;
	Handle request;
	Get sock js path;
	Get cors configuration

424. Changes to package org.springframework.web.socket.sockjs.transport:  

424.1. Add an interface declaration  for sock js service config. It allows to:

	Get task scheduler;
	Get stream bytes limit;
	Get heartbeat time;
	Get http message cache size;
	Get message codec

424.2. Add an interface declaration  for sock js session. It allows to:

	Get time  since last active;
	Disable heartbeat

424.3. Add an interface declaration  for sock js session factory. It allows to:

	Create session

424.4. Add an interface declaration  for transport handler. It allows to:

	Initialize sock js service config;
	Get transport type;
	Check session type;
	Handle request

424.5. Add a class for transport handling sock js service. It allows to:

	Instantiate transport handling sock js service  with task scheduler, handlers and handlers;
	Instantiate transport handling sock js service  with task scheduler, handlers collection and handlers collection;
	Get transport handlers;
	Set message codec;
	Get message codec;
	Set handshake interceptors;
	Get handshake interceptors;
	Start transport handling sock js service;
	Stop transport handling sock js service;
	Check if transport handling sock js service is running;
	Handle raw web socket request;
	Handle transport request;
	Validate request;
	Create sock js session;
	Schedule session task

424.6. Add a class for transport type tests. It allows to:

	Handle test from value

425. Changes to package org.springframework.web.socket.sockjs.transport.handler:  

425.1. Add a class for abstract http receiving transport handler. It allows to:

	Check session type;
	Handle request;
	Handle request internal;
	Handle read error;
	Read messages;
	Get response status

425.2. Add a class for abstract http sending transport handler. It allows to:

	Handle request;
	Handle request internal;
	Get content type;
	Get frame format;
	Get callback param

425.3. Add a class for abstract transport handler. It allows to:

	Initialize sock js service config;
	Get service config

425.4. Add a class for default sock js service. It allows to:

	Instantiate default sock js service  with task scheduler;
	Instantiate default sock js service  with task scheduler, handler and handler;
	Instantiate default sock js service  with task scheduler, handler overrides collection and handler overrides collection;
	Get default transport handlers;
	Set servlet context

425.5. Add a class for http receiving transport handler tests. It allows to:

	Read messages xhr;
	Read messages bad content;
	Read messages no session;
	Delegate message exception;
	Handle request;
	Handle request and expect failure

425.6. Add a class for http sending transport handler tests. It allows to:

	Handle setup;
	Handle request xhr;
	Handle request xhr streaming;
	Handle html file transport;
	Handle event source transport;
	Frame formats

425.7. Add a class for sock js web socket handler. It allows to:

	Instantiate sock js web socket handler  with sock js service config, web socket handler, web socket server sock js session and web socket server sock js session;
	Get sub protocols;
	Get sock js config;
	Handle after connection established;
	Handle text message;
	Handle after connection closed;
	Handle transport error

425.8. Add a class for sock js web socket handler tests. It allows to:

	Get sub protocols;
	Get sub protocols none

425.9. Add a class for web socket transport handler. It allows to:

	Instantiate web socket transport handler  with handshake handler;
	Get transport type;
	Get handshake handler;
	Set servlet context;
	Start web socket transport handler;
	Stop web socket transport handler;
	Check if web socket transport handler is running;
	Check session type;
	Create session;
	Handle request;
	Do handshake

425.10. Add a class for xhr polling transport handler. It allows to:

	Get transport type;
	Get content type;
	Get frame format;
	Check session type;
	Create session

425.11. Add a class for xhr receiving transport handler. It allows to:

	Get transport type;
	Read messages;
	Get response status

426. Changes to package org.springframework.web.socket.sockjs.transport.session:  

426.1. Add a class for abstract http sock js session. It allows to:

	Instantiate abstract http sock js session  with sock js service config, ws handler, attributes map and attributes map;
	Get uri;
	Get handshake headers;
	Get principal;
	Get local address;
	Get remote address;
	Set accepted protocol;
	Get accepted protocol;
	Get message cache;
	Check if abstract http sock js session is active;
	Set text message size limit;
	Get text message size limit;
	Set binary message size limit;
	Get binary message size limit;
	Get extensions;
	Handle initial request;
	Handle successive request;
	Disable shallow etag header filter;
	Handle request internal;
	Send message internal;
	Handle flush cache;
	Disconnect close status;
	Reset request;
	Write frame internal

426.2. Add a class for abstract sock js session tests. It allows to:

	Set abstract sock js session tests;
	Init sock js session;
	Assert new;
	Assert open;
	Closed abstract sock js session tests;
	Assert state

426.3. Add a class for polling sock js session. It allows to:

	Instantiate polling sock js session  with sock js service config, ws handler, attributes map and attributes map;
	Handle request internal;
	Handle flush cache;
	Write frame

426.4. Add a class for sock js session tests. It allows to:

	Init sock js session;
	Get time  since last active;
	Delegate connection established;
	Delegate error;
	Delegate messages;
	Delegate messages  with error and connection closing;
	Delegate connection closed;
	Close when  not open;
	Close when  not active;
	Close sock js session tests;
	Close sock js session tests with write frame exceptions;
	Close sock js session tests with web socket handler exceptions;
	Try sock js session tests close with web socket handler exceptions;
	Write frame;
	Write frame io exception;
	Send heartbeat;
	Schedule heartbeat  not active;
	Send heartbeat when disabled;
	Handle schedule and cancel heartbeat

426.5. Add a class for streaming sock js session. It allows to:

	Instantiate streaming sock js session  with sock js service config, ws handler, attributes map and attributes map;
	Get prelude;
	Handle request internal;
	Handle flush cache

426.6. Add a class for stub sock js service config. It allows to:

	Get stream bytes limit;
	Set stream bytes limit;
	Get heartbeat time;
	Set heartbeat time;
	Get task scheduler;
	Set task scheduler;
	Get message codec;
	Set message codec;
	Get http message cache size;
	Set http message cache size

426.7. Add a class for test http sock js session. It allows to:

	Instantiate test http sock js session  with sock js service config, ws handler, attributes map and attributes map;
	Get prelude;
	Get accepted protocol;
	Set accepted protocol;
	Get test http sock js session close status;
	Check if test http sock js session is active;
	Set active;
	Get sock js frames written;
	Set exception  on write;
	Get number  of last active time updates;
	Get did cancel heartbeat;
	Update last active time;
	Cancel heartbeat;
	Write frame internal;
	Disconnect close status;
	Handle flush cache

426.8. Add a class for test sock js session. It allows to:

	Instantiate test sock js session  with sock js service config, ws handler, attributes map and attributes map;
	Set uri;
	Get uri;
	Get handshake headers;
	Get headers;
	Set headers;
	Get principal;
	Set principal;
	Get local address;
	Set local address;
	Get remote address;
	Set remote address;
	Get accepted protocol;
	Set accepted protocol;
	Set text message size limit;
	Get text message size limit;
	Set binary message size limit;
	Get binary message size limit;
	Get extensions;
	Set extensions;
	Get test sock js session close status;
	Check if test sock js session is active;
	Set active;
	Get sock js frames written;
	Set exception  on write;
	Get number  of last active time updates;
	Get did cancel heartbeat;
	Update last active time;
	Cancel heartbeat;
	Send message internal;
	Write frame internal;
	Disconnect close status

426.9. Add a class for web socket server sock js session. It allows to:

	Instantiate web socket server sock js session  with sock js service config, web socket handler, attributes map and attributes map;
	Get uri;
	Get handshake headers;
	Get principal;
	Get local address;
	Get remote address;
	Get accepted protocol;
	Set text message size limit;
	Get text message size limit;
	Set binary message size limit;
	Get binary message size limit;
	Get extensions;
	Get native session;
	Initialize delegate session;
	Check if web socket server sock js session is active;
	Handle message;
	Send message internal;
	Write frame internal;
	Disconnect close status

427. Changes to package org.springframework.web.util:  

427.1. Add a class for abstract uri template handler. It allows to:

	Set base url;
	Get base url;
	Set default uri variables;
	Get default uri variables;
	Expand uri variables map;
	Expand abstract uri template handler;
	Expand internal;
	Insert base url

427.2. Add a class for content caching request wrapper tests. It allows to:

	Handle cached content;
	Handle cached content with limit;
	Handle cached content with overflow;
	Handle content overflow;
	Handle request params;
	Handle input stream form post request

427.3. Add a class for cookie generator. It allows to:

	Set cookie name;
	Get cookie name;
	Set cookie domain;
	Get cookie domain;
	Set cookie path;
	Get cookie path;
	Set cookie max age;
	Get cookie max age;
	Set cookie secure;
	Check if cookie generator is cookie secure;
	Set cookie http  only;
	Check if cookie generator is cookie http only;
	Add cookie;
	Remove cookie;
	Create cookie

427.4. Add a class for default uri template handler. It allows to:

	Set parse path;
	Should parse path;
	Set strict encoding;
	Check if default uri template handler is strict encoding;
	Expand internal;
	Handle init uri components builder;
	Expand uri components builder;
	Create uri

427.5. Add a class for default uri template handler tests. It allows to:

	Handle base url without path;
	Handle base url with path;
	Handle default uri variables;
	Parse path is  off;
	Parse path is  on;
	Handle strict encoding is off with map;
	Handle strict encoding off with array;
	Handle strict encoding on with map;
	Handle strict encoding on with array;
	Handle strict encoding and default uri variables

427.6. Add a class for hierarchical uri components. It allows to:

	Instantiate hierarchical uri components  with path component, query multi value map and query multi value map;
	Instantiate hierarchical uri components  with path component, query params multi value map, encode state, variable encoder unary operator and variable encoder unary operator;
	Get scheme specific part;
	Get user info;
	Get host;
	Get port;
	Get path;
	Get path segments;
	Get query;
	Get query params;
	Encode template;
	Encode charset;
	Encode query params;
	Encode uri component;
	Get host type;
	Verify hierarchical uri components;
	Verify uri component;
	Expand internal;
	Expand query params;
	Normalize hierarchical uri components;
	Convert hierarchical uri components to uri string;
	Convert hierarchical uri components to uri;
	Copy uri components builder to uri components builder;
	Check if hierarchical uri components equals;
	Hash code;
	Check if hierarchical uri components is allowed;
	Check if hierarchical uri components is alpha;
	Check if hierarchical uri components is digit;
	Check if hierarchical uri components is generic delimiter;
	Check if hierarchical uri components is sub delimiter;
	Check if hierarchical uri components is reserved;
	Check if hierarchical uri components is unreserved;
	Check if hierarchical uri components is pchar;
	Check if hierarchical uri components is encoded

Add a local a class for uri template encoder. It allows to:

	Instantiate uri template encoder  with charset;
	Apply type;
	Encode and append current literal;
	Handle clear

Add a local an interface declaration  for path component. It allows to:

	Get path;
	Get path segments;
	Encode encoder bi function;
	Verify path component;
	Expand uri template variables;
	Copy uri components builder to uri components builder

Add a local a class for full path component. It allows to:

	Instantiate full path component;
	Get path;
	Get path segments;
	Encode encoder bi function;
	Verify full path component;
	Expand uri template variables;
	Copy uri components builder to uri components builder;
	Check if full path component equals;
	Hash code

Add a local a class for path segment component. It allows to:

	Instantiate path segment component  with path segments list;
	Get path;
	Get path segments;
	Encode encoder bi function;
	Verify path segment component;
	Expand uri template variables;
	Copy uri components builder to uri components builder;
	Check if path segment component equals;
	Hash code

Add a local a class for path component composite. It allows to:

	Instantiate path component composite  with path components list;
	Get path;
	Get path segments;
	Encode encoder bi function;
	Verify path component composite;
	Expand uri template variables;
	Copy uri components builder to uri components builder

Add a local a class for query uri template variables. It allows to:

	Instantiate query uri template variables  with delegate uri template variables;
	Get value

427.7. Add a class for html character entity decoder. It allows to:

	Instantiate html character entity decoder  with html character entity references;
	Decode html character entity decoder;
	Find next potential reference;
	Copy characters  till potential reference;
	Handle process possible reference;
	Handle process numbered reference;
	Handle process named reference;
	Get reference substring

427.8. Add a class for html character entity references. It allows to:

	Instantiate html character entity references;
	Get supported reference count;
	Check if html character entity references is mapped to reference;
	Convert html character entity references to reference;
	Convert html character entity references to character

427.9. Add a class for html utils. It allows to:

	Handle html escape;
	Handle html escape decimal;
	Handle html escape hex;
	Handle html unescape

427.10. Add a class for html utils tests. It allows to:

	Handle test html escape;
	Handle test html unescape;
	Handle test encode into html character set;
	Handle test encode into html character set from utf 8;
	Handle test decode from html character set

427.11. Add a class for introspector cleanup listener. It allows to:

	Handle context initialized;
	Handle context destroyed

427.12. Add a class for java script utils. It allows to:

	Handle java script escape

427.13. Add a class for java script utils tests. It allows to:

	Escape java script utils tests;
	Escape ps ls line terminators;
	Escape less  than greater than signs

427.14. Add a class for nested servlet exception. It allows to:

	Instantiate nested servlet exception;
	Instantiate nested servlet exception  with cause throwable;
	Get message

427.15. Add a class for nested servlet exception tests. It allows to:

	Handle test nested servlet exception string;
	Handle test nested servlet exception string throwable;
	Handle test nested servlet exception string null throwable

427.16. Add a class for opaque uri components. It allows to:

	Instantiate opaque uri components;
	Get scheme specific part;
	Get user info;
	Get host;
	Get port;
	Get path;
	Get path segments;
	Get query;
	Get query params;
	Encode charset;
	Expand internal;
	Normalize opaque uri components;
	Convert opaque uri components to uri string;
	Convert opaque uri components to uri;
	Copy uri components builder to uri components builder;
	Check if opaque uri components equals;
	Hash code

427.17. Add a class for servlet context property utils tests. It allows to:

	Resolve servlet context property utils tests as servlet context init parameter;
	Handle fallback to system properties

427.18. Add a class for tag utils. It allows to:

	Get scope;
	Check if tag utils has ancestor of type;
	Assert has ancestor  of type

427.19. Add a class for uri components builder tests. It allows to:

	Plain uri components builder tests;
	Handle multiple from same builder;
	Process uri components builder tests uri components builder tests from path;
	Process uri components builder tests uri components builder tests from hierarchical uri;
	Process uri components builder tests uri components builder tests from opaque uri;
	Process uri components builder tests uri components builder tests from uri encoded query;
	Process uri components builder tests uri components builder tests from uri string;
	Process uri components builder tests uri components builder tests from uri string query param with reserved char in value;
	Process uri components builder tests uri components builder tests from uri string query param encoded and containing plus;
	Process uri components builder tests uri components builder tests from http url string case insesitive scheme;
	Process uri components builder tests uri components builder tests from http url string invalid I pv 6 host;
	Process uri components builder tests uri components builder tests from uri string I pv 6 host;
	Process uri components builder tests uri components builder tests from uri string no path with reserved char in query;
	Process uri components builder tests uri components builder tests from http request;
	Process uri components builder tests uri components builder tests from http request resets port before setting it;
	Process uri components builder tests uri components builder tests from http request with forwarded I pv 4 host;
	Process uri components builder tests uri components builder tests from http request with forwarded I pv 6;
	Process uri components builder tests uri components builder tests from http request with forwarded I pv 6 host;
	Process uri components builder tests uri components builder tests from http request with forwarded I pv 6 host and port;
	Process uri components builder tests uri components builder tests from http request with forwarded host;
	Process uri components builder tests uri components builder tests from http request with forwarded host including port;
	Process uri components builder tests uri components builder tests from http request with forwarded host multi valued header;
	Process uri components builder tests uri components builder tests from http request with forwarded host and port;
	Process uri components builder tests uri components builder tests from http request with forwarded host with default port;
	Process uri components builder tests uri components builder tests from http request with forwarded proto with default port;
	Process uri components builder tests uri components builder tests from http request with forwarded ssl;
	Process uri components builder tests uri components builder tests from http request with forwarded host with forwarded scheme;
	Process uri components builder tests uri components builder tests from http request with forwarded proto and default port;
	Process uri components builder tests uri components builder tests from http request with forwarded port multi value header;
	Process uri components builder tests uri components builder tests from http request with forwarded proto multi value header;
	Process uri components builder tests uri components builder tests from http request with trailing slash;
	Process uri components builder tests uri components builder tests from http request with empty scheme;
	Get method value;
	Get URI;
	Get headers;
	Handle path;
	Handle path segments;
	Handle path then path;
	Handle path then path segments;
	Handle path segments then path segments;
	Handle path segments then path;
	Handle path segments some empty;
	Handle path with duplicate slashes;
	Replace path;
	Replace query;
	Handle query params;
	Handle empty query param;
	Replace query param;
	Build and expand hierarchical;
	Build and expand opaque;
	Handle query param with value with equals;
	Handle query param without value with equals;
	Handle query param without value without equals;
	Handle relative urls;
	Handle empty segments;
	Check if uri components builder tests parses empty fragment;
	Check if uri components builder tests parses empty uri;
	Handle test clone;
	Process uri components builder tests uri components builder tests from http request forwarded header;
	Handle from http request forwarded header quoted;
	Process uri components builder tests uri components builder tests from http request multiple forwarded header;
	Process uri components builder tests uri components builder tests from http request multiple forwarded header comma;
	Process uri components builder tests uri components builder tests from http request forwarded header with host port and without server port;
	Process uri components builder tests uri components builder tests from http request forwarded header with host port and server port;
	Process uri components builder tests uri components builder tests from http request forwarded header without host port and with server port;
	Process uri components builder tests uri components builder tests from http request forwarded header with proto and server port;
	Handle uri components not equal after normalization;
	Handle uri components with merged query params;
	Convert uri components builder tests to uri string with curly braces

427.20. Add a class for uri components tests. It allows to:

	Expand uri components tests;
	Encode uri components tests;
	Encode and expand  partially;
	Encode and expand  with dollar sign;
	Convert uri components tests to uri encoded;
	Handle to uri not encoded;
	Handle to uri already encoded;
	Handle to uri with ipv 6 host already encoded;
	Expand uri components tests with regex var;
	Handle uir template expand with mismatched curly braces;
	Expand uri components tests with fragment order;
	Handle port;
	Encoded uri components tests;
	Handle invalid characters;
	Handle invalid encoded sequence;
	Normalize uri components tests;
	Handle serializable;
	Copy uri components tests to uri components builder;
	Check if uri components tests equals hierarchical uri components;
	Check if uri components tests equals opaque uri components

427.21. Add an interface declaration  for uri template handler. It allows to:

	Expand uri variables map;
	Expand uri template handler

427.22. Add a class for uri template tests. It allows to:

	Get variable names;
	Expand var args;
	Expand var args  with array value;
	Expand var args  not enough variables;
	Expand map;
	Expand map duplicate variables;
	Expand map non string;
	Expand map encoded;
	Expand map unbound variables;
	Encoded uri template tests;
	Handle matches;
	Check if uri template tests matches custom regex;
	Match uri template tests;
	Match custom regex;
	Match custom regex  with nested curly braces;
	Duplicate uri template tests;
	Match multiple  in one segment;
	Match uri template tests with multiple segments at the end;
	Handle query variables;
	Handle fragments;
	Handle matches with slash at the end;
	Expand uri template tests with dollar;
	Expand uri template tests with at sign

427.23. Add a class for uri utils. It allows to:

	Encode scheme;
	Encode authority;
	Encode user info;
	Encode host;
	Encode port;
	Encode path;
	Encode path segment;
	Encode query;
	Encode query param;
	Encode fragment;
	Encode uri utils;
	Encode charset;
	Encode uri variables;
	Encode hierarchical uri components type;
	Decode uri utils;
	Decode charset;
	Extract file extension

427.24. Add a class for uri utils tests. It allows to:

	Encode scheme;
	Encode user info;
	Encode host;
	Encode port;
	Encode path;
	Encode path segment;
	Encode query;
	Encode query param;
	Encode fragment;
	Encode uri utils tests;
	Decode uri utils tests;
	Decode invalid sequence;
	Extract file extension

427.25. Add a class for url path helper. It allows to:

	Set url path helper always use full path;
	Set url decode;
	Check if url path helper is url decode;
	Set remove semicolon content;
	Should remove semicolon content;
	Set default encoding;
	Get default encoding;
	Get lookup path  for request;
	Get path  within servlet mapping;
	Get path  within application;
	Get remaining path;
	Get sanitized path;
	Get request uri;
	Get context path;
	Get servlet path;
	Get originating request uri;
	Get originating context path;
	Get originating servlet path;
	Get originating query string;
	Decode and clean uri string;
	Decode request string;
	Decode internal;
	Determine encoding;
	Remove semicolon content;
	Remove semicolon content internal;
	Remove jsessionid;
	Decode path variables;
	Decode matrix variables;
	Should remove trailing servlet path slash

427.26. Add a class for url path helper tests. It allows to:

	Get path  within application;
	Get path  within application for root with no leading slash;
	Get path  within application for slash context path;
	Get path  within servlet;
	Always use full path;
	Get path  within servlet without url decoding;
	Get request uri;
	Get request remove semicolon content;
	Get request keep semicolon content;
	Get lookup path  with semicolon content;
	Get lookup path  with semicolon content and null path info;
	Tomcat default servlet root;
	Tomcat default servlet file;
	Tomcat default servlet folder;
	Remove duplicate slashes  in path;
	Get was default servlet root;
	Get was default servlet root with compliant setting;
	Get was default servlet file;
	Get was default servlet file with compliant setting;
	Get was default servlet folder;
	Get was default servlet folder with compliant setting;
	Tomcat casual servlet root;
	Tomcat casual servlet root  with missing slash;
	Tomcat casual servlet file;
	Tomcat casual servlet folder;
	Get was casual servlet root;
	Get was casual servlet root with compliant setting;
	Get was casual servlet root with missing slash;
	Get was casual servlet root with missing slash with compliant setting;
	Get was casual servlet file;
	Get was casual servlet file with compliant setting;
	Get was casual servlet folder;
	Get was casual servlet folder with compliant setting;
	Get originating request uri;
	Get originating request uri websphere;
	Get originating request uri default;
	Get originating query string;
	Get originating query string  not present;
	Get originating query string is null

427.27. Add a class for web app root listener. It allows to:

	Handle context initialized;
	Handle context destroyed

427.28. Add a class for web utils. It allows to:

	Set web app root system property;
	Remove web app root system property;
	Get default html escape;
	Get response encoded html escape;
	Get temp dir;
	Get real path;
	Get session id;
	Get session attribute;
	Get required session attribute;
	Set session attribute;
	Get session mutex;
	Get native request;
	Get native response;
	Check if web utils is include request;
	Expose error request attributes;
	Expose request attribute  if not present;
	Handle clear error request attributes;
	Get cookie;
	Check if web utils has submit parameter;
	Find parameter value;
	Get parameters starting  with servlet request;
	Parse matrix variables;
	Check if web utils is valid origin;
	Check if web utils is same origin;
	Get port

427.29. Add a class for web utils tests. It allows to:

	Find parameter value;
	Parse matrix variables string;
	Check if web utils tests is valid origin;
	Check if web utils tests is same origin;
	Check if web utils tests is same origin with X forwarded headers;
	Check if web utils tests is same origin with forwarded header;
	Check valid origin;
	Check same origin;
	Handle test with X forwarded headers;
	Handle test with forwarded header;
	Adapt http servlet request from forwarded headers

428. Changes to package test.aop:  

428.1. Add a class for default lockable. It allows to:

	Lock default lockable;
	Unlock default lockable;
	Get locked

428.2. Add an interface declaration  for lockable. It allows to:

	Lock lockable;
	Unlock lockable;
	Get locked

428.3. Add a class for per target aspect. It allows to:

	Return count  as age;
	Count setter;
	Get order;
	Get set order

428.4. Add a class for per this aspect. It allows to:

	Get invocations;
	Change age

428.5. Add a class for two advice aspect. It allows to:

	Return call count;
	Count set

429. Changes to package test.aspect:  

429.1. Add a class for per target aspect. It allows to:

	Return count  as age;
	Count setter;
	Get order;
	Get set order

429.2. Add a class for per this aspect. It allows to:

	Get invocations;
	Change age

429.3. Add a class for two advice aspect. It allows to:

	Return call count;
	Count set

430. Changes to package test.mixin:  

430.1. Add a class for default lockable. It allows to:

	Lock default lockable;
	Unlock default lockable;
	Get locked

430.2. Add a class for lock mixin. It allows to:

	Lock lock mixin;
	Unlock lock mixin;
	Get locked;
	Invoke method invocation

430.3. Add a class for lock mixin advisor. It allows to:

	Instantiate lock mixin advisor

430.4. Add an interface declaration  for lockable. It allows to:

	Lock lockable;
	Unlock lockable;
	Get locked

430.5. Add a class for locked exception. It allows to:

	Instantiate locked exception

