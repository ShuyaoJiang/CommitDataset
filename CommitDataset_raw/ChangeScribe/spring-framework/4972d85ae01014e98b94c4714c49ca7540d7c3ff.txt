BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. 
 This change set is mainly composed of:  

1. Changes to package org.springframework.core.annotation:  

1.1. Add a class for abstract merged annotation. It allows to:

	Check if abstract merged annotation is directly present;
	Check if abstract merged annotation is meta present;
	Check if abstract merged annotation has non default value;
	Get byte;
	Get byte array;
	Get boolean;
	Get boolean array;
	Get char;
	Get char array;
	Get short;
	Get short array;
	Get int;
	Get int array;
	Get abstract merged annotation long;
	Get abstract merged annotation long array;
	Get abstract merged annotation double;
	Get double array;
	Get float;
	Get float array;
	Get string;
	Get string array;
	Get class;
	Get class array;
	Get enum;
	Get enum array;
	Get value;
	Get default value;
	Get filter default values;
	Process abstract merged annotation abstract merged annotation as annotation attributes;
	Synthesize condition predicate;
	Synthesize abstract merged annotation;
	Get required attribute value;
	Get attribute value;
	Synthesized abstract merged annotation

1.2. Add an interface declaration  for annotation filter. It allows to:

	Handle matches;
	Convert to string;
	Get packages

1.3. Add an interface declaration  for annotations processor. It allows to:

	Do context with aggregate;
	Do context with annotations;
	Finish result

1.4. Add a class for annotations scanner. It allows to:

	Instantiate annotations scanner;
	Scan context;
	Get process;
	Process class;
	Process class inherited annotations;
	Process class hierarchy;
	Get process method;
	Get process method inherited annotations;
	Get process method hierarchy;
	Get base type methods;
	Check if annotations scanner is override;
	Check if annotations scanner has same parameter types;
	Check if annotations scanner has same generic type parameters;
	Get process method annotations;
	Get process element;
	Get declared annotations;
	Get declared annotation;
	Check if annotations scanner is filtered;
	Check if annotations scanner is ignorable;
	Check if annotations scanner is known empty;
	Check if annotations scanner has plain java annotations only;
	Check if annotations scanner is without hierarchy;
	Handle clear cache

1.5. Add a class for attribute methods. It allows to:

	Instantiate attribute methods  with annotation type class, attribute methods and attribute methods;
	Check if attribute methods is only value attribute;
	Check if attribute methods is valid;
	Validate annotation;
	Assert annotation;
	Get attribute methods;
	Can throw type  not present exception;
	Get index of;
	Get size;
	Check if attribute methods has default value method;
	Check if attribute methods has nested annotation;
	Process attribute methods attribute methods for annotation type;
	Compute annotation type class;
	Check if attribute methods is attribute method;
	Describe attribute method;
	Describe annotation type class

1.6. Add a class for attribute methods tests. It allows to:

	Process attribute methods tests attribute methods tests for annotation type when null returns none;
	Process attribute methods tests attribute methods tests for annotation type when has no attributes returns none;
	Process attribute methods tests attribute methods tests for annotation type when has multiple attributes returns attributes;
	Check if attribute methods tests is only value attribute when has only value attribute returns true;
	Check if attribute methods tests is only value attribute when has only single non value attribute returns false;
	Check if attribute methods tests is only value attribute when has only multiple attributes including value returns false;
	Handle index of name returns index;
	Handle index of method returns index;
	Handle size returns size;
	Can throw type  not present exception when has class attribute returns true;
	Can throw type  not present exception when has class array attribute returns true;
	Can throw type  not present exception when not class or class array attribute returns false;
	Check if attribute methods tests has default value method when has default value method returns true;
	Check if attribute methods tests has default value method when has no default value methods returns false;
	Check if attribute methods tests is valid when has type not present exception returns false;
	Check if attribute methods tests is valid when does not have type not present exception returns true;
	Validate when has type  not present exception throws exception;
	Validate when does  not have type not present exception throws nothing;
	Get attributes methods;
	Handle mock annotation

1.7. Add a class for class with inherited annotation

Add a local a class for sub class with inherited annotation

Add a local a class for sub sub class with inherited annotation

Add a local a class for class with inherited composed annotation

Add a local a class for sub class with inherited composed annotation

Add a local a class for sub sub class with inherited composed annotation

Add a local a class for meta and local tx config class

Add a local a class for tx config

Add a local a class for derived tx config

Add a local a class for tx from multiple composed annotations

Add a local an interface declaration  for interface with inherited annotation. It allows to:

	Handle interface with inherited annotation from interface

Add a local a class for abstract class with inherited annotation. It allows to:

	Handle abstract class with inherited annotation;
	Parameterized T

Add a local a class for concrete class with inherited annotation. It allows to:

	Handle concrete class with inherited annotation;
	Parameterized concrete class with inherited annotation;
	Handle concrete class with inherited annotation from interface

Add a local an interface declaration  for generic parameter. It allows to:

	Get  for cls class

Add a local a class for string generic parameter. It allows to:

	Get  for cls class;
	Get  for integer

Add a local an interface declaration  for inherited annotation interface

Add a local an interface declaration  for sub inherited annotation interface

Add a local an interface declaration  for sub sub inherited annotation interface

Add a local an interface declaration  for non inherited annotation interface

Add a local an interface declaration  for sub non inherited annotation interface

Add a local an interface declaration  for sub sub non inherited annotation interface

Add a local a class for convention based composed context configuration class

Add a local a class for invalid convention based composed context configuration class

Add a local a class for half convention based and half aliased composed context configuration class 1

Add a local a class for half convention based and half aliased composed context configuration class 2

Add a local a class for aliased composed context configuration class

Add a local a class for aliased value composed context configuration class

Add a local a class for implicit aliases context configuration class 1

Add a local a class for implicit aliases context configuration class 2

Add a local a class for implicit aliases context configuration class 3

Add a local a class for transitive implicit aliases context configuration class

Add a local a class for single location transitive implicit aliases context configuration class

Add a local a class for transitive implicit aliases with skipped level context configuration class

Add a local a class for single location transitive implicit aliases with skipped level context configuration class

Add a local a class for composed implicit aliases context configuration class

Add a local a class for shadowed alias composed context configuration class

Add a local a class for aliased composed context configuration and test property source class

Add a local a class for component scan with base packages and value alias class

Add a local a class for test component scan class

Add a local a class for convention based single package component scan class

Add a local a class for alias for based single package component scan class

Add a local a class for spring application configuration class

Add a local a class for resource holder

Add a local an interface declaration  for transactional service. It allows to:

	Do transactional service

Add a local a class for transactional service impl. It allows to:

	Do transactional service impl

Add a local an interface declaration  for interface with meta annotation

Add a local a class for class with local meta annotation and meta annotated interface

Add a local a class for class with inherited meta annotation

Add a local a class for sub class with inherited meta annotation

Add a local a class for sub sub class with inherited meta annotation

Add a local a class for meta meta annotated class

Add a local a class for meta meta meta annotated class

Add a local a class for meta cycle annotated class

Add a local an interface declaration  for annotated interface. It allows to:

	Process annotated interface annotated interface from interface implemented by root

Add a local an interface declaration  for nullable annotated interface. It allows to:

	Process nullable annotated interface nullable annotated interface from interface implemented by root

Add a local a class for root. It allows to:

	Get annotated on root;
	Handle meta annotated on root;
	Override root to annotate;
	Override root without new annotation;
	Handle not annotated;
	Process root root from interface implemented by root

Add a local a class for leaf. It allows to:

	Get annotated on leaf;
	Handle meta annotated on leaf;
	Handle meta meta annotated on leaf;
	Override leaf to annotate;
	Override leaf without new annotation

Add a local a class for simple generic. It allows to:

	Handle something

Add a local a class for transactional string generic. It allows to:

	Handle something

Add a local a class for inherited annotation class

Add a local a class for sub inherited annotation class

Add a local a class for non inherited annotation class

Add a local a class for sub non inherited annotation class

Add a local a class for transactional class

Add a local a class for transactional and ordered class

Add a local a class for sub transactional and ordered class

Add a local an interface declaration  for interface with annotated method. It allows to:

	Handle foo

Add a local a class for implements interface with annotated method. It allows to:

	Handle foo

Add a local a class for sub of implements interface with annotated method. It allows to:

	Handle foo

Add a local a class for abstract does not implement interface with annotated method

Add a local a class for sub of abstract implements interface with annotated method. It allows to:

	Handle foo

Add a local an interface declaration  for interface with generic annotated method. It allows to:

	Handle foo

Add a local a class for implements interface with generic annotated method. It allows to:

	Handle foo

Add a local a class for base class with generic annotated method. It allows to:

	Handle foo

Add a local a class for extends base class with generic annotated method. It allows to:

	Handle foo

Add a local an interface declaration  for interface with repeated. It allows to:

	Handle foo

Add a local a class for my repeatable class

Add a local a class for sub my repeatable class

Add a local a class for sub my repeatable with additional local declarations class

Add a local a class for sub sub my repeatable with additional local declarations class

Add a local a class for web controller. It allows to:

	Handle mapped  with value attribute;
	Handle mapped  with path attribute;
	Get mapped  with value attribute;
	Get mapped  with path attribute;
	Post mapped  with path attribute;
	Handle mapped  with same path and value attributes;
	Handle mapped  with different path and value attributes

Add a local a class for hierarchy class

Add a local a class for broken hierarchy class

Add a local a class for test configuration class

Add a local a class for group of chars class

Add a local a class for alias for with missing attribute declaration class

Add a local a class for alias for with duplicate attribute declaration class

Add a local a class for alias for nonexistent attribute class

Add a local a class for alias for without mirrored alias for class

Add a local a class for alias for with mirrored alias for wrong attribute class

Add a local a class for alias for attribute of different type class

Add a local a class for alias for with missing default values class

Add a local a class for alias for attribute with different default value class

Add a local a class for aliased composed test configuration not meta present class

Add a local a class for groovy implicit aliases simple test configuration class

Add a local a class for xml implicit aliases test configuration class

Add a local a class for value implicit aliases test configuration class

Add a local a class for location 1 implicit aliases test configuration class

Add a local a class for location 2 implicit aliases test configuration class

Add a local a class for location 3 implicit aliases test configuration class

Add a local a class for value implicit aliases with implied alias names omitted test configuration class

Add a local a class for locations implicit aliases with implied alias names omitted test configuration class

Add a local a class for xml files implicit aliases with implied alias names omitted test configuration class

Add a local a class for implicit aliases with missing default values test configuration class

Add a local a class for implicit aliases with different default values test configuration class

Add a local a class for implicit aliases with duplicate values test configuration class

Add a local a class for implicit aliases for alias pair test configuration class

Add a local a class for transitive implicit aliases test configuration class

Add a local a class for transitive implicit aliases for alias pair test configuration class

Add a local a class for component scan class

Add a local a class for component scan single filter class

Add a local an interface declaration  for test configuration mismatch

Add a local a class for default override class

Add a local a class for default override implicit alias meta class 1

Add a local a class for default override implicit alias meta class 2

Add a local a class for default override explicit alias root meta meta class

Add a local a class for value attribute meta meta class

1.8. Add an interface declaration  for merged annotation. It allows to:

	Get type;
	Check if merged annotation is present;
	Check if merged annotation is directly present;
	Check if merged annotation is meta present;
	Get depth;
	Get aggregate index;
	Get source;
	Get parent;
	Check if merged annotation has non default value;
	Check if merged annotation has default value;
	Get byte;
	Get byte array;
	Get boolean;
	Get boolean array;
	Get char;
	Get char array;
	Get short;
	Get short array;
	Get int;
	Get int array;
	Get merged annotation long;
	Get merged annotation long array;
	Get merged annotation double;
	Get double array;
	Get float;
	Get float array;
	Get string;
	Get string array;
	Get class;
	Get class array;
	Get enum;
	Get enum array;
	Get annotation;
	Get annotation array;
	Get value;
	Get default value;
	Get filter default values;
	Get filter attributes;
	Process merged annotation merged annotation with non merged attributes;
	Process merged annotation merged annotation as annotation attributes;
	Process merged annotation merged annotation as map;
	Synthesize merged annotation;
	Synthesize condition predicate;
	Missing merged annotation;
	Process merged annotation merged annotation from;
	Check if merged annotation is in;
	Get values;
	Add result set if true

1.9. Add a class for merged annotation collectors. It allows to:

	Instantiate merged annotation collectors;
	Convert merged annotation collectors to annotation set;
	Convert merged annotation collectors to annotation array;
	Convert merged annotation collectors to multi value map;
	Check if merged annotation collectors is same instance;
	Add list;
	Merge multi value map

1.10. Add an interface declaration  for merged annotation selector. It allows to:

	Check if merged annotation selector is best candidate;
	Select existing merged annotation

1.11. Add an interface declaration  for merged annotations. It allows to:

	Check if merged annotations is present;
	Check if merged annotations is directly present;
	Get annotation type class;
	Get merged annotations;
	Get predicate;
	Get stream;
	Process merged annotations merged annotations from;

1.12. Add a class for missing merged annotation. It allows to:

	Instantiate missing merged annotation;
	Get type;
	Check if missing merged annotation is present;
	Get source;
	Get parent;
	Get depth;
	Get aggregate index;
	Check if missing merged annotation has non default value;
	Check if missing merged annotation has default value;
	Get value;
	Get default value;
	Get filter attributes;
	Process missing merged annotation missing merged annotation with non merged attributes;
	Process missing merged annotation missing merged annotation as annotation attributes;
	Process missing merged annotation missing merged annotation as map;
	Convert missing merged annotation to string;
	Get annotation;
	Get annotation array;
	Get attribute value;
	Synthesized missing merged annotation;
	Get instance

1.13. Add a class for packages annotation filter. It allows to:

	Instantiate packages annotation filter;
	Handle matches;
	Check if packages annotation filter equals;
	Hash code;
	Convert packages annotation filter to string

1.14. Add a class for packages annotation filter tests. It allows to:

	Create when packages is null throws exception;
	Create when packages contains null throws exception;
	Create when packages contains empty text throws exception;
	Handle matches when in package returns true;
	Handle matches when not in package returns false;
	Handle matches when in similar package returns false;
	Check if packages annotation filter tests equals and hash code

1.15. Add a class for synthesized merged annotation invocation handler. It allows to:

	Instantiate synthesized merged annotation invocation handler  with merged annotation, type class and type class;
	Invoke method;
	Check if synthesized merged annotation invocation handler is annotation type method;
	Handle annotation equals;
	Get annotation hash code;
	Compute hash code;
	Get value hash code;
	Get attribute value;
	Create proxy;
	Check if synthesized merged annotation invocation handler is visible

1.16. Add a class for type mapped annotation. It allows to:

	Instantiate type mapped annotation  with annotation type mapping, value extractor bi function and value extractor bi function;
	Instantiate type mapped annotation  with annotation type mapping, value extractor bi function, attribute filter predicate and attribute filter predicate;
	Get type;
	Check if type mapped annotation is present;
	Get depth;
	Get aggregate index;
	Get source;
	Get parent;
	Check if type mapped annotation has default value;
	Get annotation;
	Get annotation array;
	Get default value;
	Get filter attributes;
	Process type mapped annotation type mapped annotation with non merged attributes;
	Process type mapped annotation type mapped annotation as map;
	Get type  for map options;
	Adapt value  for map options;
	Synthesized type mapped annotation;
	Convert type mapped annotation to string;
	Get attribute value;
	Get required value;
	Get value;
	Get value  from meta annotation;
	Get value  for mirror resolution;
	Adapt attribute method;
	Adapt attribute method for attribute;
	Adapt annotation type class to merged annotation;
	Get value extractor;
	Get default adapt type;
	Get attribute index;
	Check if type mapped annotation is filtered;
	Process type mapped annotation type mapped annotation from;
	Create annotation type mapping if possible;
	Extract attribute method from map

