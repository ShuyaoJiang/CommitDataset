BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (gradle.properties, README.txt, gradle-wrapper.properties, ... ).  renames some files.
 This change set is mainly composed of:  

1. Changes to package org.apache.commons.logging:  

1. Changes to package org.springframework.aop.interceptor:  

1. Changes to package org.springframework.aop.support:  

1. Changes to package org.springframework.asm:  

1. Changes to package org.springframework.beans.annotation:  

1. Changes to package org.springframework.beans.factory.annotation:  

1.1. Add a class for parameter resolution delegate. It allows to:

	Get annotation;
	Get annotations;
	Get declared annotations;
	Instantiate parameter resolution delegate;
	Check if parameter resolution delegate is autowirable;
	Resolve dependency;
	Get effective annotated parameter

2. Changes to package org.springframework.beans.factory.config:  

2. Changes to package org.springframework.beans.factory.support:  

2. Changes to package org.springframework.beans.propertyeditors:  

2. Changes to package org.springframework.cache.annotation:  

2. Changes to package org.springframework.cache.interceptor:  

2. Changes to package org.springframework.context:  

2. Changes to package org.springframework.context.annotation:  

2. Changes to package org.springframework.context.config:  

2. Changes to package org.springframework.context.event:  

2. Changes to package org.springframework.context.weaving:  

2. Changes to package org.springframework.core:  

2. Changes to package org.springframework.core.annotation:  

2.1. Add a class for abstract merged annotation. It allows to:

	Check if abstract merged annotation is directly present;
	Check if abstract merged annotation is meta present;
	Check if abstract merged annotation has non default value;
	Get byte;
	Get byte array;
	Get boolean;
	Get boolean array;
	Get char;
	Get char array;
	Get short;
	Get short array;
	Get int;
	Get int array;
	Get abstract merged annotation long;
	Get abstract merged annotation long array;
	Get abstract merged annotation double;
	Get double array;
	Get float;
	Get float array;
	Get string;
	Get string array;
	Get class;
	Get class array;
	Get enum;
	Get enum array;
	Get value;
	Get default value;
	Get filter default values;
	Process abstract merged annotation abstract merged annotation as annotation attributes;
	Synthesize condition predicate;
	Synthesize abstract merged annotation;
	Get required attribute value;
	Get attribute value;
	Synthesized abstract merged annotation

2.2. Add an interface declaration  for annotation filter. It allows to:

	Handle matches;
	Convert to string;
	Get packages

2.3. Add an interface declaration  for annotations processor. It allows to:

	Do context with aggregate;
	Do context with annotations;
	Finish result

2.4. Add a class for annotations scanner. It allows to:

	Instantiate annotations scanner;
	Scan context;
	Get process;
	Process class;
	Process class inherited annotations;
	Process class hierarchy;
	Get process method;
	Get process method inherited annotations;
	Get process method hierarchy;
	Get base type methods;
	Check if annotations scanner is override;
	Check if annotations scanner has same parameter types;
	Check if annotations scanner has same generic type parameters;
	Get process method annotations;
	Get process element;
	Get declared annotations;
	Get declared annotation;
	Check if annotations scanner is filtered;
	Check if annotations scanner is ignorable;
	Check if annotations scanner is known empty;
	Check if annotations scanner has plain java annotations only;
	Check if annotations scanner is without hierarchy;
	Handle clear cache

2.5. Add a class for attribute methods. It allows to:

	Instantiate attribute methods  with annotation type class, attribute methods and attribute methods;
	Check if attribute methods is only value attribute;
	Check if attribute methods is valid;
	Validate annotation;
	Assert annotation;
	Get attribute methods;
	Can throw type  not present exception;
	Get index of;
	Get size;
	Check if attribute methods has default value method;
	Check if attribute methods has nested annotation;
	Process attribute methods attribute methods for annotation type;
	Compute annotation type class;
	Check if attribute methods is attribute method;
	Describe attribute method;
	Describe annotation type class

2.6. Add a class for attribute methods tests. It allows to:

	Process attribute methods tests attribute methods tests for annotation type when null returns none;
	Process attribute methods tests attribute methods tests for annotation type when has no attributes returns none;
	Process attribute methods tests attribute methods tests for annotation type when has multiple attributes returns attributes;
	Check if attribute methods tests is only value attribute when has only value attribute returns true;
	Check if attribute methods tests is only value attribute when has only single non value attribute returns false;
	Check if attribute methods tests is only value attribute when has only multiple attributes including value returns false;
	Handle index of name returns index;
	Handle index of method returns index;
	Handle size returns size;
	Can throw type  not present exception when has class attribute returns true;
	Can throw type  not present exception when has class array attribute returns true;
	Can throw type  not present exception when not class or class array attribute returns false;
	Check if attribute methods tests has default value method when has default value method returns true;
	Check if attribute methods tests has default value method when has no default value methods returns false;
	Check if attribute methods tests is valid when has type not present exception returns false;
	Check if attribute methods tests is valid when does not have type not present exception returns true;
	Validate when has type  not present exception throws exception;
	Validate when does  not have type not present exception throws nothing;
	Get attributes methods;
	Handle mock annotation

2.7. Add a class for class with inherited annotation

Add a local a class for sub class with inherited annotation

Add a local a class for sub sub class with inherited annotation

Add a local a class for class with inherited composed annotation

Add a local a class for sub class with inherited composed annotation

Add a local a class for sub sub class with inherited composed annotation

Add a local a class for meta and local tx config class

Add a local a class for tx config

Add a local a class for derived tx config

Add a local a class for tx from multiple composed annotations

Add a local an interface declaration  for interface with inherited annotation. It allows to:

	Handle interface with inherited annotation from interface

Add a local a class for abstract class with inherited annotation. It allows to:

	Handle abstract class with inherited annotation;
	Parameterized T

Add a local a class for concrete class with inherited annotation. It allows to:

	Handle concrete class with inherited annotation;
	Parameterized concrete class with inherited annotation;
	Handle concrete class with inherited annotation from interface

Add a local an interface declaration  for generic parameter. It allows to:

	Get  for cls class

Add a local a class for string generic parameter. It allows to:

	Get  for cls class;
	Get  for integer

Add a local an interface declaration  for inherited annotation interface

Add a local an interface declaration  for sub inherited annotation interface

Add a local an interface declaration  for sub sub inherited annotation interface

Add a local an interface declaration  for non inherited annotation interface

Add a local an interface declaration  for sub non inherited annotation interface

Add a local an interface declaration  for sub sub non inherited annotation interface

Add a local a class for convention based composed context configuration class

Add a local a class for invalid convention based composed context configuration class

Add a local a class for half convention based and half aliased composed context configuration class 1

Add a local a class for half convention based and half aliased composed context configuration class 2

Add a local a class for aliased composed context configuration class

Add a local a class for aliased value composed context configuration class

Add a local a class for implicit aliases context configuration class 1

Add a local a class for implicit aliases context configuration class 2

Add a local a class for implicit aliases context configuration class 3

Add a local a class for transitive implicit aliases context configuration class

Add a local a class for single location transitive implicit aliases context configuration class

Add a local a class for transitive implicit aliases with skipped level context configuration class

Add a local a class for single location transitive implicit aliases with skipped level context configuration class

Add a local a class for composed implicit aliases context configuration class

Add a local a class for shadowed alias composed context configuration class

Add a local a class for aliased composed context configuration and test property source class

Add a local a class for component scan with base packages and value alias class

Add a local a class for test component scan class

Add a local a class for convention based single package component scan class

Add a local a class for alias for based single package component scan class

Add a local a class for spring application configuration class

Add a local a class for resource holder

Add a local an interface declaration  for transactional service. It allows to:

	Do transactional service

Add a local a class for transactional service impl. It allows to:

	Do transactional service impl

Add a local an interface declaration  for interface with meta annotation

Add a local a class for class with local meta annotation and meta annotated interface

Add a local a class for class with inherited meta annotation

Add a local a class for sub class with inherited meta annotation

Add a local a class for sub sub class with inherited meta annotation

Add a local a class for meta meta annotated class

Add a local a class for meta meta meta annotated class

Add a local a class for meta cycle annotated class

Add a local an interface declaration  for annotated interface. It allows to:

	Process annotated interface annotated interface from interface implemented by root

Add a local an interface declaration  for nullable annotated interface. It allows to:

	Process nullable annotated interface nullable annotated interface from interface implemented by root

Add a local a class for root. It allows to:

	Get annotated on root;
	Handle meta annotated on root;
	Override root to annotate;
	Override root without new annotation;
	Handle not annotated;
	Process root root from interface implemented by root

Add a local a class for leaf. It allows to:

	Get annotated on leaf;
	Handle meta annotated on leaf;
	Handle meta meta annotated on leaf;
	Override leaf to annotate;
	Override leaf without new annotation

Add a local a class for simple generic. It allows to:

	Handle something

Add a local a class for transactional string generic. It allows to:

	Handle something

Add a local a class for inherited annotation class

Add a local a class for sub inherited annotation class

Add a local a class for non inherited annotation class

Add a local a class for sub non inherited annotation class

Add a local a class for transactional class

Add a local a class for transactional and ordered class

Add a local a class for sub transactional and ordered class

Add a local an interface declaration  for interface with annotated method. It allows to:

	Handle foo

Add a local a class for implements interface with annotated method. It allows to:

	Handle foo

Add a local a class for sub of implements interface with annotated method. It allows to:

	Handle foo

Add a local a class for abstract does not implement interface with annotated method

Add a local a class for sub of abstract implements interface with annotated method. It allows to:

	Handle foo

Add a local an interface declaration  for interface with generic annotated method. It allows to:

	Handle foo

Add a local a class for implements interface with generic annotated method. It allows to:

	Handle foo

Add a local a class for base class with generic annotated method. It allows to:

	Handle foo

Add a local a class for extends base class with generic annotated method. It allows to:

	Handle foo

Add a local an interface declaration  for interface with repeated. It allows to:

	Handle foo

Add a local a class for my repeatable class

Add a local a class for sub my repeatable class

Add a local a class for sub my repeatable with additional local declarations class

Add a local a class for sub sub my repeatable with additional local declarations class

Add a local a class for web controller. It allows to:

	Handle mapped  with value attribute;
	Handle mapped  with path attribute;
	Get mapped  with value attribute;
	Get mapped  with path attribute;
	Post mapped  with path attribute;
	Handle mapped  with same path and value attributes;
	Handle mapped  with different path and value attributes

Add a local a class for hierarchy class

Add a local a class for broken hierarchy class

Add a local a class for test configuration class

Add a local a class for group of chars class

Add a local a class for alias for with missing attribute declaration class

Add a local a class for alias for with duplicate attribute declaration class

Add a local a class for alias for nonexistent attribute class

Add a local a class for alias for without mirrored alias for class

Add a local a class for alias for with mirrored alias for wrong attribute class

Add a local a class for alias for attribute of different type class

Add a local a class for alias for with missing default values class

Add a local a class for alias for attribute with different default value class

Add a local a class for aliased composed test configuration not meta present class

Add a local a class for groovy implicit aliases simple test configuration class

Add a local a class for xml implicit aliases test configuration class

Add a local a class for value implicit aliases test configuration class

Add a local a class for location 1 implicit aliases test configuration class

Add a local a class for location 2 implicit aliases test configuration class

Add a local a class for location 3 implicit aliases test configuration class

Add a local a class for value implicit aliases with implied alias names omitted test configuration class

Add a local a class for locations implicit aliases with implied alias names omitted test configuration class

Add a local a class for xml files implicit aliases with implied alias names omitted test configuration class

Add a local a class for implicit aliases with missing default values test configuration class

Add a local a class for implicit aliases with different default values test configuration class

Add a local a class for implicit aliases with duplicate values test configuration class

Add a local a class for implicit aliases for alias pair test configuration class

Add a local a class for transitive implicit aliases test configuration class

Add a local a class for transitive implicit aliases for alias pair test configuration class

Add a local a class for component scan class

Add a local a class for component scan single filter class

Add a local an interface declaration  for test configuration mismatch

Add a local a class for default override class

Add a local a class for default override implicit alias meta class 1

Add a local a class for default override implicit alias meta class 2

Add a local a class for default override explicit alias root meta meta class

Add a local a class for value attribute meta meta class

2.8. Add an interface declaration  for merged annotation. It allows to:

	Get type;
	Check if merged annotation is present;
	Check if merged annotation is directly present;
	Check if merged annotation is meta present;
	Get depth;
	Get aggregate index;
	Get source;
	Get parent;
	Check if merged annotation has non default value;
	Check if merged annotation has default value;
	Get byte;
	Get byte array;
	Get boolean;
	Get boolean array;
	Get char;
	Get char array;
	Get short;
	Get short array;
	Get int;
	Get int array;
	Get merged annotation long;
	Get merged annotation long array;
	Get merged annotation double;
	Get double array;
	Get float;
	Get float array;
	Get string;
	Get string array;
	Get class;
	Get class array;
	Get enum;
	Get enum array;
	Get annotation;
	Get annotation array;
	Get value;
	Get default value;
	Get filter default values;
	Get filter attributes;
	Process merged annotation merged annotation with non merged attributes;
	Process merged annotation merged annotation as annotation attributes;
	Process merged annotation merged annotation as map;
	Synthesize merged annotation;
	Synthesize condition predicate;
	Missing merged annotation;
	Process merged annotation merged annotation from;
	Check if merged annotation is in;
	Get values;
	Add result set if true

2.9. Add a class for merged annotation collectors. It allows to:

	Instantiate merged annotation collectors;
	Convert merged annotation collectors to annotation set;
	Convert merged annotation collectors to annotation array;
	Convert merged annotation collectors to multi value map;
	Check if merged annotation collectors is same instance;
	Add list;
	Merge multi value map

2.10. Add an interface declaration  for merged annotation selector. It allows to:

	Check if merged annotation selector is best candidate;
	Select existing merged annotation

2.11. Add an interface declaration  for merged annotations. It allows to:

	Check if merged annotations is present;
	Check if merged annotations is directly present;
	Get annotation type class;
	Get merged annotations;
	Get predicate;
	Get stream;
	Process merged annotations merged annotations from;

2.12. Add a class for missing merged annotation. It allows to:

	Instantiate missing merged annotation;
	Get type;
	Check if missing merged annotation is present;
	Get source;
	Get parent;
	Get depth;
	Get aggregate index;
	Check if missing merged annotation has non default value;
	Check if missing merged annotation has default value;
	Get value;
	Get default value;
	Get filter attributes;
	Process missing merged annotation missing merged annotation with non merged attributes;
	Process missing merged annotation missing merged annotation as annotation attributes;
	Process missing merged annotation missing merged annotation as map;
	Convert missing merged annotation to string;
	Get annotation;
	Get annotation array;
	Get attribute value;
	Synthesized missing merged annotation;
	Get instance

2.13. Add a class for packages annotation filter. It allows to:

	Instantiate packages annotation filter;
	Handle matches;
	Check if packages annotation filter equals;
	Hash code;
	Convert packages annotation filter to string

2.14. Add a class for packages annotation filter tests. It allows to:

	Create when packages is null throws exception;
	Create when packages contains null throws exception;
	Create when packages contains empty text throws exception;
	Handle matches when in package returns true;
	Handle matches when not in package returns false;
	Handle matches when in similar package returns false;
	Check if packages annotation filter tests equals and hash code

2.15. Add a class for synthesized merged annotation invocation handler. It allows to:

	Instantiate synthesized merged annotation invocation handler  with merged annotation, type class and type class;
	Invoke method;
	Check if synthesized merged annotation invocation handler is annotation type method;
	Handle annotation equals;
	Get annotation hash code;
	Compute hash code;
	Get value hash code;
	Get attribute value;
	Create proxy;
	Check if synthesized merged annotation invocation handler is visible

2.16. Add a class for type mapped annotation. It allows to:

	Instantiate type mapped annotation  with annotation type mapping, value extractor bi function and value extractor bi function;
	Instantiate type mapped annotation  with annotation type mapping, value extractor bi function, attribute filter predicate and attribute filter predicate;
	Get type;
	Check if type mapped annotation is present;
	Get depth;
	Get aggregate index;
	Get source;
	Get parent;
	Check if type mapped annotation has default value;
	Get annotation;
	Get annotation array;
	Get default value;
	Get filter attributes;
	Process type mapped annotation type mapped annotation with non merged attributes;
	Process type mapped annotation type mapped annotation as map;
	Get type  for map options;
	Adapt value  for map options;
	Synthesized type mapped annotation;
	Convert type mapped annotation to string;
	Get attribute value;
	Get required value;
	Get value;
	Get value  from meta annotation;
	Get value  for mirror resolution;
	Adapt attribute method;
	Adapt attribute method for attribute;
	Adapt annotation type class to merged annotation;
	Get value extractor;
	Get default adapt type;
	Get attribute index;
	Check if type mapped annotation is filtered;
	Process type mapped annotation type mapped annotation from;
	Create annotation type mapping if possible;
	Extract attribute method from map

3. Changes to package org.springframework.core.codec:  

3. Changes to package org.springframework.core.convert.converter:  

3. Changes to package org.springframework.core.env:  

3. Changes to package org.springframework.core.io.support:  

3. Changes to package org.springframework.core.log:  

3. Changes to package org.springframework.core.type:  

3. Changes to package org.springframework.core.type.filter:  

3. Changes to package org.springframework.expression.spel.ast:  

3. Changes to package org.springframework.expression.spel.standard:  

3. Changes to package org.springframework.http:  

3. Changes to package org.springframework.http.client:  

3. Changes to package org.springframework.http.client.reactive:  

3. Changes to package org.springframework.http.codec:  

3.1. Add a class for resource http message reader. It allows to:

	Instantiate resource http message reader;
	Instantiate resource http message reader  with resource decoder;
	Get read hints

4. Changes to package org.springframework.http.codec.json:  

4. Changes to package org.springframework.http.codec.multipart:  

4. Changes to package org.springframework.http.codec.support:  

4. Changes to package org.springframework.http.server:  

4. Changes to package org.springframework.http.server.reactive:  

4. Changes to package org.springframework.instrument.classloading:  

4. Changes to package org.springframework.jdbc.core.metadata:  

4. Changes to package org.springframework.jdbc.core.namedparam:  

4. Changes to package org.springframework.jdbc.core.simple:  

4. Changes to package org.springframework.jdbc.support:  

4. Changes to package org.springframework.jmx.export.annotation:  

4. Changes to package org.springframework.jmx.support:  

4. Changes to package org.springframework.jndi:  

4. Changes to package org.springframework.messaging:  

4.1. Add an interface declaration  for reactive message handler. It allows to:

	Handle message

5. Changes to package org.springframework.messaging.converter:  

5. Changes to package org.springframework.messaging.handler:  

5.1. Add a class for composite message condition. It allows to:

	Instantiate composite message condition  with message conditions;
	Instantiate composite message condition  with message conditions list;
	Get message conditions;
	Get condition;
	Combine other composite message condition;
	Combine first message condition;
	Get matching condition;
	Compare  to other composite message condition;
	Compare first message condition;
	Check compatible;
	Check if composite message condition equals;
	Hash code;
	Convert composite message condition to string

6. Changes to package org.springframework.messaging.handler.annotation.support:  

6. Changes to package org.springframework.messaging.handler.annotation.support.reactive:  

6.1. Add a class for destination variable method argument resolver tests. It allows to:

	Check if destination variable method argument resolver tests supports parameter;
	Resolve argument;
	Resolve argument  not found;
	Handle message

6.2. Add a class for headers method argument resolver. It allows to:

	Check if headers method argument resolver supports parameter;
	Resolve argument value

6.3. Add a class for message mapping message handler. It allows to:

	Instantiate message mapping message handler;
	Set handlers;
	Set handler predicate;
	Get handler predicate;
	Set auto detect disabled;
	Set decoders;
	Get decoders;
	Set validator;
	Get validator;
	Set path matcher;
	Get path matcher;
	Set conversion service;
	Get conversion service;
	Set embedded value resolver;
	Handle init argument resolvers;
	Handle init return value handlers;
	Handle init handler predicate;
	Get mapping  for method;
	Get condition;
	Get direct lookup mappings;
	Get destination;
	Get matching mapping;
	Get mapping comparator;
	Create exception method resolver  for bean type class

6.4. Add a class for payload method argument resolver. It allows to:

	Instantiate payload method argument resolver  with decoders list, validator, reactive adapter registry and reactive adapter registry;
	Get decoders;
	Get validator;
	Get adapter registry;
	Check if payload method argument resolver is use default resolution;
	Check if payload method argument resolver supports parameter;
	Resolve argument;
	Extract content;
	Get unexpected payload error;
	Get mime type;
	Decode content;
	Handle read error;
	Handle missing body;

7. Changes to package org.springframework.messaging.handler.invocation:  

7.1. Add a class for test exception resolver. It allows to:

	Instantiate test exception resolver  with handler type class;
	Handle init exception mappings

8. Changes to package org.springframework.messaging.handler.invocation.reactive:  

8.1. Add a class for abstract encoder method return value handler. It allows to:

	Instantiate abstract encoder method return value handler  with encoders list, reactive adapter registry and reactive adapter registry;
	Get encoders;
	Get adapter registry;
	Check if abstract encoder method return value handler supports return type;
	Handle return value;
	Encode content;
	Get element type;
	Get encoder;
	Encode value;
	Handle encoded content;
	Handle no content

8.2. Add a class for argument resolver configurer. It allows to:

	Add custom resolver;
	Get custom resolvers

8.3. Add an interface declaration  for handler method argument resolver. It allows to:

	Check if handler method argument resolver supports parameter;
	Resolve argument

8.4. Add a class for handler method argument resolver composite. It allows to:

	Add resolver;
	Add resolvers;
	Get resolvers;
	Handle clear;
	Check if handler method argument resolver composite supports parameter;
	Resolve argument;
	Get argument resolver

8.5. Add an interface declaration  for handler method return value handler. It allows to:

	Check if handler method return value handler supports return type;
	Handle return value

8.6. Add a class for handler method return value handler composite. It allows to:

	Get return value handlers;
	Handle clear;
	Add handler;
	Add handlers;
	Check if handler method return value handler composite supports return type;
	Handle return value;
	Get return value handler

8.7. Add a class for invocable handler method. It allows to:

	Instantiate invocable handler method  with handler method;
	Instantiate invocable handler method  with method;
	Set argument resolvers;
	Get resolvers;
	Set parameter name discoverer;
	Get parameter name discoverer;
	Set reactive adapter registry;
	Invoke message;
	Get method argument values;
	Log argument error  if necessary;
	Check if invocable handler method is async void return type

8.8. Add a class for invocable helper. It allows to:

	Instantiate invocable helper  with exception method resolver factory function;
	Add argument resolvers;
	Add return value handlers;
	Set reactive adapter registry;
	Get reactive adapter registry;
	Register exception handler advice;
	Handle init message mapping method;
	Handle init exception handler method;
	Handle message;
	Handle return value

8.9. Add a class for return value handler configurer. It allows to:

	Add custom handler;
	Get custom handlers

8.10. Add a class for stub argument resolver. It allows to:

	Instantiate stub argument resolver;
	Instantiate stub argument resolver  with value type class;
	Get resolved parameters;
	Check if stub argument resolver supports parameter;
	Resolve argument

8.11. Add an interface declaration  for sync handler method argument resolver. It allows to:

	Resolve argument;
	Resolve argument value

8.12. Add a class for test encoder method return value handler. It allows to:

	Instantiate test encoder method return value handler  with encoders list, reactive adapter registry and reactive adapter registry;
	Get content;
	Get content  as strings;
	Handle encoded content;
	Handle no content

8.13. Add a class for test return value handler. It allows to:

	Get last return value;
	Check if test return value handler supports return type;
	Handle return value;
	Save value

9. Changes to package org.springframework.messaging.rsocket:  

9.1. Add a class for message handler acceptor. It allows to:

	Set default data mime type;
	Accept connection setup payload;
	Apply sending R socket;
	Create R socket

9.2. Add a class for messaging R socket. It allows to:

	Instantiate messaging R socket  with handler function, sending R socket, default data mime type, R socket strategies and R socket strategies;
	Handle connection setup payload;
	Get fire and forget;
	Get request response;
	Get request stream;
	Get request channel;
	Handle metadata push;
	Handle payload;
	Ref count;
	Handle first payload;
	Get destination;
	Retain data and release payload;
	Create headers

9.3. Add a class for payload utils. It allows to:

	Retain data and release payload;
	Create payload;

9.4. Add a class for r socket message handler. It allows to:

	Set encoders;
	Get encoders;
	Set R socket strategies;
	Get R socket strategies;
	Handle after properties set;
	Handle init return value handlers;
	Handle no match

9.5. Add a class for r socket payload return value handler. It allows to:

	Instantiate r socket payload return value handler  with encoders list, reactive adapter registry and reactive adapter registry;
	Handle encoded content;
	Handle no content;
	Get reply mono

9.6. Add a class for r socket requester method argument resolver. It allows to:

	Check if r socket requester method argument resolver supports parameter;
	Resolve argument

10. Changes to package org.springframework.messaging.simp:  

10. Changes to package org.springframework.mock.web:  

10. Changes to package org.springframework.oxm:  

10. Changes to package org.springframework.oxm.config:  

10. Changes to package org.springframework.oxm.jaxb:  

10. Changes to package org.springframework.remoting.httpinvoker:  

10. Changes to package org.springframework.scheduling.annotation:  

10. Changes to package org.springframework.scheduling.config:  

10. Changes to package org.springframework.test.annotation:  

10. Changes to package org.springframework.test.context:  

10. Changes to package org.springframework.test.context.event:  

10.1. Add a class for after test class event. It allows to:

	Instantiate after test class event  with source test context

10.2. Add a class for after test execution event. It allows to:

	Instantiate after test execution event  with source test context

10.3. Add a class for after test method event. It allows to:

	Instantiate after test method event  with source test context

10.4. Add a class for before test class event. It allows to:

	Instantiate before test class event  with source test context

10.5. Add a class for before test execution event. It allows to:

	Instantiate before test execution event  with source test context

10.6. Add a class for before test method event. It allows to:

	Instantiate before test method event  with source test context

10.7. Add a class for event publishing test execution listener. It allows to:

	Get order;
	Process event publishing test execution listener event publishing test execution listener before test class;
	Prepare test instance;
	Process event publishing test execution listener event publishing test execution listener before test method;
	Process event publishing test execution listener event publishing test execution listener before test execution;
	Process event publishing test execution listener event publishing test execution listener after test execution;
	Process event publishing test execution listener event publishing test execution listener after test method;
	Process event publishing test execution listener event publishing test execution listener after test class

10.8. Add a class for event publishing test execution listener tests. It allows to:

	Configure mock;
	Publish event publishing test execution listener tests before test class event;
	Publish prepare test instance event;
	Publish event publishing test execution listener tests before test method event;
	Publish event publishing test execution listener tests before test execution event;
	Publish event publishing test execution listener tests after test execution event;
	Publish event publishing test execution listener tests after test method event;
	Publish event publishing test execution listener tests after test class event;
	Check if event publishing test execution listener tests does not publish before test class event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish prepare test instance event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish before test method event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish before test execution event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish after test execution event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish after test method event if application context has not been loaded;
	Check if event publishing test execution listener tests does not publish after test class event if application context has not been loaded;
	Assert event;
	Assert no event

10.9. Add a class for prepare test instance event. It allows to:

	Instantiate prepare test instance event  with source test context

10.10. Add a class for test context event. It allows to:

	Instantiate test context event  with source test context;
	Get source;
	Get test context

11. Changes to package org.springframework.test.context.junit.jupiter:  

11. Changes to package org.springframework.test.context.junit4:  

11. Changes to package org.springframework.test.context.transaction:  

11. Changes to package org.springframework.test.web.servlet.htmlunit:  

11. Changes to package org.springframework.test.web.servlet.setup:  

11. Changes to package org.springframework.tests.sample.beans:  

11. Changes to package org.springframework.transaction:  

11. Changes to package org.springframework.transaction.annotation:  

11. Changes to package org.springframework.transaction.config:  

11. Changes to package org.springframework.transaction.interceptor:  

11. Changes to package org.springframework.ui:  

11. Changes to package org.springframework.util:  

11. Changes to package org.springframework.util.xml:  

11. Changes to package org.springframework.web.client:  

11. Changes to package org.springframework.web.context.support:  

11. Changes to package org.springframework.web.cors:  

11. Changes to package org.springframework.web.cors.reactive:  

11. Changes to package org.springframework.web.filter:  

11. Changes to package org.springframework.web.filter.reactive:  

11. Changes to package org.springframework.web.method:  

11. Changes to package org.springframework.web.method.annotation:  

11. Changes to package org.springframework.web.multipart.commons:  

11. Changes to package org.springframework.web.multipart.support:  

11. Changes to package org.springframework.web.reactive:  

11. Changes to package org.springframework.web.reactive.function.client:  

11. Changes to package org.springframework.web.reactive.function.server:  

11. Changes to package org.springframework.web.reactive.handler:  

11. Changes to package org.springframework.web.reactive.resource:  

11. Changes to package org.springframework.web.reactive.result.condition:  

11. Changes to package org.springframework.web.reactive.result.method:  

11. Changes to package org.springframework.web.reactive.result.method.annotation:  

11.1. Add a class for continuation handler method argument resolver. It allows to:

	Check if continuation handler method argument resolver supports parameter;
	Resolve argument

12. Changes to package org.springframework.web.reactive.socket.adapter:  

12. Changes to package org.springframework.web.reactive.socket.client:  

12. Changes to package org.springframework.web.reactive.socket.server.upgrade:  

12. Changes to package org.springframework.web.server.handler:  

12. Changes to package org.springframework.web.servlet.function:  

12.1. Add a class for default entity response builder tests. It allows to:

	Get message converters;
	Process default entity response builder tests default entity response builder tests from object;
	Process default entity response builder tests default entity response builder tests from object type reference;
	Handle status;
	Allow default entity response builder tests;
	Handle content length;
	Handle content type;
	Handle etag;
	Handle last modified;
	Handle cache control tag;
	Vary default entity response builder tests by;
	Handle header;
	Handle headers;
	Handle cookie;
	Handle cookies;
	Not modified etag;
	Handle not modified last modified

12.2. Add a class for default rendering response tests. It allows to:

	Get message converters;
	Create default rendering response tests;
	Handle status;
	Handle headers;
	Handle model attribute;
	Handle model attribute conventions;
	Handle model attributes;
	Handle model attributes conventions;
	Handle cookies;
	Not modified etag;
	Handle not modified last modified

12.3. Add a class for default server request builder tests. It allows to:

	Process default server request builder tests default server request builder tests from

12.4. Add a class for default server request tests. It allows to:

	Handle method;
	Handle uri;
	Handle uri builder;
	Attribute default server request tests;
	Handle params;
	Handle empty query param;
	Handle absent query param;
	Handle path variable;
	Handle path variable not found;
	Handle path variables;
	Handle header;
	Handle cookies;
	Handle body class;
	Handle body parameterized type reference;
	Handle body unacceptable;
	Handle session;
	Handle principal;
	Get name

12.5. Add a class for default server response builder tests. It allows to:

	Get message converters;
	Handle status;
	Process default server response builder tests default server response builder tests from;
	O default server response builder tests;
	Get created;
	Get accepted;
	No content;
	See other;
	Handle temporary redirect;
	Handle permanent redirect;
	Handle bad request;
	Handle not found;
	Handle unprocessable entity;
	Allow default server response builder tests;
	Handle content length;
	Handle content type;
	E tag;
	Handle last modified;
	Handle cache control tag;
	Vary default server response builder tests by;
	Handle status code;
	Handle headers;
	Handle cookies;
	Build default server response builder tests;
	Not modified etag;
	Handle not modified last modified;
	Handle body;
	Handle body with parameterized type reference;
	Handle body completion stage;
	Handle body publisher

12.6. Add an interface declaration  for handler filter function. It allows to:

	Get filter;
	And after handler filter function then;
	Apply handler function;
	Process handler filter function handler filter function of request processor;
	Process handler filter function handler filter function of response processor;
	Process handler filter function handler filter function of error handler

12.7. Add an interface declaration  for handler function. It allows to:

	Handle server request

12.8. Add a class for path resource lookup function. It allows to:

	Instantiate path resource lookup function  with location resource;
	Apply server request;
	Get process path;
	Check if path resource lookup function is invalid path;
	Check if path resource lookup function is resource under location;
	Convert path resource lookup function to string

12.9. Add a class for path resource lookup function tests. It allows to:

	Handle normal;
	Sub path;
	Handle not found;
	Compose resource lookup function

12.10. Add an interface declaration  for request predicate. It allows to:

	Handle test;
	And other request predicate;
	Negate request predicate;
	O other request predicate;
	Get nest;
	Accept request predicates visitor

12.11. Add a class for request predicate tests. It allows to:

	Create request;
	And request predicate tests;
	Negate request predicate tests;
	O request predicate tests

12.12. Add a class for request predicates tests. It allows to:

	All request predicates tests;
	Handle method;
	Handle methods;
	All methods;
	Handle path;
	Handle path encoded;
	Handle path predicates;
	Handle headers;
	Handle content type;
	Accept request predicates tests;
	Handle path extension;
	Handle param

12.13. Add a class for resource handler function tests. It allows to:

	Create context;
	Get message converters;
	Get resource handler function tests;
	Handle head;
	Handle options

12.14. Add an interface declaration  for router function. It allows to:

	Get route;
	And other router function;
	And other;
	And route;
	And nest;
	Get filter;
	Accept router functions visitor

12.15. Add a class for router function builder. It allows to:

	Add router function;
	Add request predicate;
	GET handler function;
	GET request predicate;
	HEAD handler function;
	HEAD request predicate;
	POST handler function;
	POST request predicate;
	PUT handler function;
	PUT request predicate;
	PATCH handler function;
	PATCH request predicate;
	DELETE handler function;
	DELETE request predicate;
	Get oPTIONS;
	Get resources;
	Get nest;
	Get path;
	Get filter;
	Before router function builder;
	Process router function builder router function builder after;
	Process router function builder router function builder on error;
	Build router function builder

12.16. Add a class for router function builder tests. It allows to:

	Handle route;
	Handle handler function;
	Handle resources;
	Handle nest;
	Handle filters

12.17. Add a class for router function tests. It allows to:

	And router function tests;
	And other;
	And route;
	Handle filter;
	Get handler method

12.18. Add a class for router functions tests. It allows to:

	Handle route match;
	Handle route no match;
	Handle nest match;
	Handle nest no match

12.19. Add a class for to string visitor. It allows to:

	Nested request predicate;
	Handle route;
	Handle resources;
	Handle unknown;
	Indent to string visitor;
	Handle method;
	Handle path;
	Handle path extension;
	Handle header;
	Handle param;
	Start to string visitor;
	And to string visitor;
	End to string visitor;
	O to string visitor;
	Negate to string visitor;
	Convert to string visitor to string

13. Changes to package org.springframework.web.servlet.function.support:  

13.1. Add a class for router function mapping. It allows to:

	Instantiate router function mapping;
	Instantiate router function mapping  with router function;
	Set router function;
	Get router function;
	Set message converters;
	Set detect handler functions  in ancestor contexts;
	Handle after properties set;
	Handle init router function;
	Handle init message converters;
	Get handler internal

14. Changes to package org.springframework.web.servlet.handler:  

14. Changes to package org.springframework.web.servlet.mvc.condition:  

14. Changes to package org.springframework.web.servlet.resource:  

14. Changes to package org.springframework.web.servlet.tags.form:  

14. Changes to package org.springframework.web.socket.server.support:  

14. Changes to package org.springframework.web.socket.sockjs.client:  

14. Changes to package org.springframework.web.util:  

