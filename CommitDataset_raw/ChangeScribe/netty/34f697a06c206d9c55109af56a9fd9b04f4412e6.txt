BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. 
 This change set is mainly composed of:  

1. Changes to package io.netty.handler.codec.marshalling:  

1.1. Add a class for abstract compatible marshalling decoder test. It allows to:

	Handle test simple unmarshalling;
	Get input;
	Handle test fragmented unmarshalling;
	Handle test too big object;
	Process abstract compatible marshalling decoder test abstract compatible marshalling decoder test on too big frame;
	Create decoder;
	Create provider;
	Create marshaller factory;
	Create marshalling config

1.2. Add a class for abstract compatible marshalling encoder test. It allows to:

	Handle test marshalling;
	Truncate byte buf;
	Create encoder;
	Create provider;
	Create marshaller factory;
	Create marshalling config

1.3. Add a class for channel buffer byte input. It allows to:

	Instantiate channel buffer byte input  with buffer;
	Close channel buffer byte input;
	Handle available;
	Read channel buffer byte input;
	Skip channel buffer byte input

1.4. Add a class for channel buffer byte output. It allows to:

	Instantiate channel buffer byte output  with buffer;
	Close channel buffer byte output;
	Handle flush;
	Write channel buffer byte output;
	Get buffer

1.5. Add a class for compatible marshalling decoder. It allows to:

	Instantiate compatible marshalling decoder  with unmarshaller provider;
	Decode ctx channel handler context;
	Decode last;
	Handle exception caught

1.6. Add a class for compatible marshalling encoder. It allows to:

	Instantiate compatible marshalling encoder  with marshaller provider;
	Encode ctx channel handler context

1.7. Add a class for context bound unmarshaller provider. It allows to:

	Instantiate context bound unmarshaller provider  with marshaller factory, marshalling configuration and marshalling configuration;
	Get unmarshaller

1.8. Add a class for default marshaller provider. It allows to:

	Instantiate default marshaller provider  with marshaller factory, marshalling configuration and marshalling configuration;
	Get marshaller

1.9. Add a class for default unmarshaller provider. It allows to:

	Instantiate default unmarshaller provider  with marshaller factory, marshalling configuration and marshalling configuration;
	Get unmarshaller

1.10. Add an interface declaration  for marshaller provider. It allows to:

	Get marshaller

1.11. Add a class for marshalling decoder. It allows to:

	Instantiate marshalling decoder  with unmarshaller provider;
	Decode ctx channel handler context;
	Extract frame

1.12. Add a class for marshalling encoder. It allows to:

	Instantiate marshalling encoder  with marshaller provider;
	Encode ctx channel handler context

1.13. Add a class for river compatible marshalling decoder test. It allows to:

	Create marshaller factory;
	Create marshalling config

1.14. Add a class for river compatible marshalling encoder test. It allows to:

	Create marshaller factory;
	Create marshalling config

1.15. Add an object creator class for river context bound compatible marshalling decoder test. It allows to:

	Create provider

1.16. Add an object creator class for river context bound marshalling decoder test. It allows to:

	Create provider

1.17. Add a class for river marshalling decoder test. It allows to:

	Get input;
	Create decoder;
	Process river marshalling decoder test river marshalling decoder test on too big frame

1.18. Add a class for river marshalling encoder test. It allows to:

	Truncate byte buf;
	Create encoder

1.19. Add an object creator class for river thread local compatible marshalling decoder test. It allows to:

	Create provider

1.20. Add an object creator class for river thread local compatible marshalling encoder test. It allows to:

	Create provider

1.21. Add an object creator class for river thread local marshalling decoder test. It allows to:

	Create provider

1.22. Add an object creator class for river thread local marshalling encoder test. It allows to:

	Create provider

1.23. Add a class for serial compatible marshalling decoder test. It allows to:

	Create marshaller factory;
	Create marshalling config

1.24. Add a class for serial compatible marshalling encoder test. It allows to:

	Create marshaller factory;
	Create marshalling config

1.25. Add an object creator class for serial context bound compatible marshalling decoder test. It allows to:

	Create provider

1.26. Add an object creator class for serial context bound marshalling decoder test. It allows to:

	Create provider

1.27. Add a class for serial marshalling decoder test. It allows to:

	Get input;
	Create decoder;
	Process serial marshalling decoder test serial marshalling decoder test on too big frame

1.28. Add a class for serial marshalling encoder test. It allows to:

	Truncate byte buf;
	Create encoder

1.29. Add an object creator class for serial thread local compatible marshalling decoder test. It allows to:

	Create provider

1.30. Add an object creator class for serial thread local compatible marshalling encoder test. It allows to:

	Create provider

1.31. Add an object creator class for serial thread local marshalling decoder test. It allows to:

	Create provider

1.32. Add an object creator class for serial thread local marshalling encoder test. It allows to:

	Create provider

1.33. Add a class for thread local marshaller provider. It allows to:

	Instantiate thread local marshaller provider  with marshaller factory, marshalling configuration and marshalling configuration;
	Get marshaller

1.34. Add a class for thread local unmarshaller provider. It allows to:

	Instantiate thread local unmarshaller provider  with marshaller factory, marshalling configuration and marshalling configuration;
	Get unmarshaller

1.35. Add an interface declaration  for unmarshaller provider. It allows to:

	Get unmarshaller

