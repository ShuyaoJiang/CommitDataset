BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. 
 This change set is mainly composed of:  

1. Changes to package io.netty.buffer:  

1.1. Add a class for consolidation test. It allows to:

	Should wrap  in sequence;
	Should consolidation  in sequence

2. Changes to package io.netty.example.http.upload:  

2.1. Add a class for http upload client. It allows to:

	Handle main;
	Get formget;
	Get formpost;
	Handle formpostmultipart

2.2. Add a class for http upload client handler. It allows to:

	Channel ctx channel handler context;
	Handle exception caught

2.3. Add a class for http upload server. It allows to:

	Handle main

2.4. Add a class for http upload server handler. It allows to:

	Channel inactive;
	Channel ctx channel handler context;
	Reset http upload server handler;
	Read http data chunk  by chunk;
	Write http data;
	Write response;
	Write menu;
	Handle exception caught

2.5. Add a class for http upload server initializer. It allows to:

	Instantiate http upload server initializer  with ssl context;
	Handle init channel

3. Changes to package io.netty.handler.codec.http.multipart:  

3.1. Add a class for abstract disk http data. It allows to:

	Instantiate abstract disk http data  with charset;
	Get disk filename;
	Get prefix;
	Get base directory;
	Get postfix;
	Delete abstract disk http data on exit;
	Temp file;
	Set content;
	Add content;
	Delete abstract disk http data;
	Get abstract disk http data;
	Get byte buf;
	Get chunk;
	Get string;
	Check if abstract disk http data is in memory;
	Rename  to dest file;
	Read  from src file;
	Get file;
	Touch abstract disk http data;

3.2. Add a class for abstract http data. It allows to:

	Instantiate abstract http data  with charset;
	Get max size;
	Set max size;
	Check size;
	Get name;
	Check if abstract http data is completed;
	Completed abstract http data;
	Get charset;
	Set charset;
	Get length;
	Get defined length;
	Handle content;
	Handle deallocate;
	Retain abstract http data;
	Touch abstract http data;

3.3. Add a class for abstract memory http data. It allows to:

	Instantiate abstract memory http data  with charset;
	Set content;
	Add content;
	Delete abstract memory http data;
	Get abstract memory http data;
	Get string;
	Get byte buf;
	Get chunk;
	Check if abstract memory http data is in memory;
	Rename  to dest file;
	Get file;
	Touch abstract memory http data;

3.4. Add an interface declaration  for attribute. It allows to:

	Get value;
	Get set value;
	Get copy;
	Duplicate attribute;
	Get retained duplicate;
	Replace content byte buf;
	Retain attribute;
	Touch attribute;

3.5. Add a class for case ignoring comparator. It allows to:

	Instantiate case ignoring comparator;
	Compare o 1 char sequence;
	Read resolve

3.6. Add a class for default http data factory. It allows to:

	Instantiate default http data factory;
	Instantiate default http data factory  with charset;
	Set max limit;
	Get list;
	Create attribute;
	Check http data size;
	Create file upload;
	Remove http data  from clean;
	Handle clean request http data;
	Clean all http data;
	Handle clean request http datas;
	Clean all http datas

3.7. Add a class for disk attribute. It allows to:

	Instantiate disk attribute;
	Instantiate disk attribute  with charset;
	Get http data type;
	Get value;
	Get set value;
	Add content;
	Hash code;
	Check if disk attribute equals;
	Compare  to o interface http data;
	Compare  to o attribute;
	Convert disk attribute to string;
	Delete disk attribute on exit;
	Get base directory;
	Get disk filename;
	Get postfix;
	Get prefix;
	Get copy;
	Duplicate disk attribute;
	Get retained duplicate;
	Replace content byte buf;
	Retain disk attribute;
	Touch disk attribute;

3.8. Add a class for disk file upload. It allows to:

	Instantiate disk file upload  with charset;
	Get http data type;
	Get filename;
	Set filename;
	Hash code;
	Check if disk file upload equals;
	Compare  to o interface http data;
	Compare  to file upload;
	Set content type;
	Get content type;
	Get content transfer encoding;
	Set content transfer encoding;
	Convert disk file upload to string;
	Delete disk file upload on exit;
	Get base directory;
	Get disk filename;
	Get postfix;
	Get prefix;
	Get copy;
	Duplicate disk file upload;
	Get retained duplicate;
	Replace content byte buf;
	Retain disk file upload;
	Touch disk file upload;

3.9. Add an interface declaration  for file upload. It allows to:

	Get filename;
	Set filename;
	Set content type;
	Get content type;
	Set content transfer encoding;
	Get content transfer encoding;
	Get copy;
	Duplicate file upload;
	Get retained duplicate;
	Replace content byte buf;
	Retain file upload;
	Touch file upload;

3.10. Add an interface declaration  for http data. It allows to:

	Get max size;
	Set max size;
	Check size;
	Set content;
	Add content;
	Check if http data is completed;
	Get length;
	Get defined length;
	Delete http data;
	Get http data;
	Get byte buf;
	Get chunk;
	Get string;
	Set charset;
	Get charset;
	Rename  to dest file;
	Check if http data is in memory;
	Get file;
	Get copy;
	Duplicate http data;
	Get retained duplicate;
	Replace content byte buf;
	Retain http data;
	Touch http data;

3.11. Add an interface declaration  for http data factory. It allows to:

	Set max limit;
	Create attribute;
	Create file upload;
	Remove http data  from clean;
	Handle clean request http data;
	Clean all http data;
	Handle clean request http datas;
	Clean all http datas

3.12. Add an interface declaration  for interface http data. It allows to:

	Get name;
	Get http data type;
	Retain interface http data;
	Touch interface http data;

3.13. Add a class for internal attribute. It allows to:

	Instantiate internal attribute  with charset;
	Get http data type;
	Add value;
	Get set value;
	Hash code;
	Check if internal attribute equals;
	Compare  to o interface http data;
	Compare  to o internal attribute;
	Convert internal attribute to string;
	Get size;
	Convert internal attribute to byte buf;
	Get name;
	Handle deallocate;
	Retain internal attribute;
	Touch internal attribute;

3.14. Add a class for memory attribute. It allows to:

	Instantiate memory attribute;
	Instantiate memory attribute  with charset;
	Get http data type;
	Get value;
	Get set value;
	Add content;
	Hash code;
	Check if memory attribute equals;
	Compare  to other interface http data;
	Compare  to o attribute;
	Convert memory attribute to string;
	Get copy;
	Duplicate memory attribute;
	Get retained duplicate;
	Replace content byte buf;
	Retain memory attribute;
	Touch memory attribute;

3.15. Add a class for memory file upload. It allows to:

	Instantiate memory file upload  with charset;
	Get http data type;
	Get filename;
	Set filename;
	Hash code;
	Check if memory file upload equals;
	Compare  to o interface http data;
	Compare  to file upload;
	Set content type;
	Get content type;
	Get content transfer encoding;
	Set content transfer encoding;
	Convert memory file upload to string;
	Get copy;
	Duplicate memory file upload;
	Get retained duplicate;
	Replace content byte buf;
	Retain memory file upload;
	Touch memory file upload;

3.16. Add a class for mixed attribute. It allows to:

	Instantiate mixed attribute;
	Instantiate mixed attribute  with charset;
	Get max size;
	Set max size;
	Check size;
	Add content;
	Delete mixed attribute;
	Get mixed attribute;
	Get byte buf;
	Get charset;
	Get string;
	Check if mixed attribute is completed;
	Check if mixed attribute is in memory;
	Get length;
	Get defined length;
	Rename  to dest file;
	Set charset;
	Set content;
	Get http data type;
	Get name;
	Hash code;
	Check if mixed attribute equals;
	Compare  to o interface http data;
	Convert mixed attribute to string;
	Get value;
	Get set value;
	Get chunk;
	Get file;
	Get copy;
	Duplicate mixed attribute;
	Get retained duplicate;
	Replace content byte buf;
	Handle content;
	Ref cnt;
	Retain mixed attribute;
	Touch mixed attribute;
	Handle release;

3.17. Add a class for mixed file upload. It allows to:

	Instantiate mixed file upload  with charset;
	Get max size;
	Set max size;
	Check size;
	Add content;
	Delete mixed file upload;
	Get mixed file upload;
	Get byte buf;
	Get charset;
	Get content type;
	Get content transfer encoding;
	Get filename;
	Get string;
	Check if mixed file upload is completed;
	Check if mixed file upload is in memory;
	Get length;
	Get defined length;
	Rename  to dest file;
	Set charset;
	Set content;
	Set content type;
	Set content transfer encoding;
	Set filename;
	Get http data type;
	Get name;
	Hash code;
	Check if mixed file upload equals;
	Compare  to o interface http data;
	Convert mixed file upload to string;
	Get chunk;
	Get file;
	Get copy;
	Duplicate mixed file upload;
	Get retained duplicate;
	Replace content byte buf;
	Handle content;
	Ref cnt;
	Retain mixed file upload;
	Touch mixed file upload;
	Handle release;

