BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  renames some files.
 This change set is mainly composed of:  

1. Changes to package io.netty.channel:  

1. Changes to package io.netty.handler.codec.dns:  

1.1. Add a class for abstract dns message. It allows to:

	Instantiate abstract dns message;
	Instantiate abstract dns message  with dns op code;
	I abstract dns message;
	Set id;
	Op code;
	Set op code;
	Check if abstract dns message is recursion desired;
	Set recursion desired;
	Z abstract dns message;
	Set Z;
	Get count;
	Record  at dns section;
	Record abstract dns message at;
	Set record;
	Add record;
	Remove record;
	Handle clear;
	Touch abstract dns message;
	Retain abstract dns message;
	Handle deallocate;
	Check if abstract dns message equals;
	Hash code;
	Get section at;
	Set section;
	Get section ordinal;
	Check question;
	Cast record;
	Handle new record list

1.2. Add a class for abstract dns record. It allows to:

	Instantiate abstract dns record  with dns record type;
	Append abstract dns record;
	Name abstract dns record;
	Get type;
	Get dns class;
	Convert time;
	Check if abstract dns record equals;
	Hash code;
	Convert abstract dns record to string

1.3. Add a class for datagram dns query. It allows to:

	Instantiate datagram dns query  with sender inet socket address, recipient inet socket address and recipient inet socket address;
	Instantiate datagram dns query  with sender inet socket address, recipient inet socket address, dns op code and dns op code;
	Handle content;
	Get sender;
	Handle recipient;
	Set id;
	Set op code;
	Set recursion desired;
	Set Z;
	Set record;
	Add record;
	Handle clear;
	Touch datagram dns query;
	Retain datagram dns query;
	Check if datagram dns query equals;
	Hash code

1.4. Add a class for datagram dns query encoder. It allows to:

	Instantiate datagram dns query encoder;
	Instantiate datagram dns query encoder  with dns record encoder;
	Encode ctx channel handler context;
	Allocate buffer;
	Encode header;
	Encode questions;
	Encode records

1.5. Add a class for datagram dns response. It allows to:

	Instantiate datagram dns response  with sender inet socket address, recipient inet socket address and recipient inet socket address;
	Instantiate datagram dns response  with sender inet socket address, recipient inet socket address, dns op code and dns op code;
	Instantiate datagram dns response  with sender inet socket address, recipient inet socket address, dns op code, dns response code and dns response code;
	Handle content;
	Get sender;
	Handle recipient;
	Set authoritative answer;
	Truncated datagram dns response;
	Set recursion available;
	Set code;
	Set id;
	Set op code;
	Set recursion desired;
	Set Z;
	Set record;
	Add record;
	Handle clear;
	Touch datagram dns response;
	Retain datagram dns response;
	Check if datagram dns response equals;
	Hash code

1.6. Add a class for datagram dns response decoder. It allows to:

	Instantiate datagram dns response decoder;
	Instantiate datagram dns response decoder  with dns record decoder;
	Decode ctx channel handler context;
	Handle new response;
	Decode questions;
	Decode records

1.7. Add a class for default dns query. It allows to:

	Instantiate default dns query;
	Instantiate default dns query  with dns op code;
	Set id;
	Set op code;
	Set recursion desired;
	Set Z;
	Set record;
	Add record;
	Handle clear;
	Touch default dns query;
	Retain default dns query;
	Convert default dns query to string

1.8. Add a class for default dns question. It allows to:

	Instantiate default dns question  with dns record type;
	Convert default dns question to string

1.9. Add a class for default dns raw record. It allows to:

	Instantiate default dns raw record  with dns record type, content byte buf and content byte buf;
	Handle content;
	Get copy;
	Duplicate default dns raw record;
	Get retained duplicate;
	Replace content byte buf;
	Ref cnt;
	Retain default dns raw record;
	Handle release;
	Touch default dns raw record;
	Convert default dns raw record to string

1.10. Add a class for default dns record decoder. It allows to:

	Instantiate default dns record decoder;
	Decode question;
	Decode record;
	Decode name 0;
	Decode name

1.11. Add a class for default dns record encoder. It allows to:

	Instantiate default dns record encoder;
	Encode question;
	Encode record;
	Encode record 0;
	Encode ptr record;
	Encode opt pseudo record;
	Encode opt ecs record;
	Calculate ecs address length;
	Encode raw record;
	Encode name;
	Get pad with zeros

1.12. Add a class for default dns response. It allows to:

	Instantiate default dns response;
	Instantiate default dns response  with dns op code;
	Instantiate default dns response  with dns op code, dns response code and dns response code;
	Check if default dns response is authoritative answer;
	Set authoritative answer;
	Check if default dns response is truncated;
	Truncated default dns response;
	Check if default dns response is recursion available;
	Set recursion available;
	Get code;
	Set code;
	Set id;
	Set op code;
	Set recursion desired;
	Set Z;
	Set record;
	Add record;
	Handle clear;
	Touch default dns response;
	Retain default dns response;
	Convert default dns response to string

1.13. Add a class for dns message util. It allows to:

	Append query;
	Append response;
	Append record class;
	Append query header;
	Append response header;
	Append addresses;
	Append all records;
	Append records;
	Instantiate dns message util

1.14. Add a class for dns op code. It allows to:

	Get value of;
	Instantiate dns op code;
	Handle byte value;
	Hash code;
	Check if dns op code equals;
	Compare  to dns op code;
	Convert dns op code to string

1.15. Add an interface declaration  for dns raw record. It allows to:

	Get copy;
	Duplicate dns raw record;
	Get retained duplicate;
	Replace content byte buf;
	Retain dns raw record;
	Touch dns raw record;

1.16. Add an interface declaration  for dns record. It allows to:

	Name dns record;
	Get type;
	Get dns class;
	Convert time

1.17. Add an interface declaration  for dns record decoder. It allows to:

	Decode question;
	Decode record

1.18. Add an interface declaration  for dns record encoder. It allows to:

	Encode question;
	Encode record

1.19. Add a class for dns record type. It allows to:

	Get value of;
	Instantiate dns record type;
	Name dns record type;
	Get int value;
	Hash code;
	Check if dns record type equals;
	Compare  to dns record type;
	Convert dns record type to string

1.20. Add a class for dns record type test. It allows to:

	All types;
	Handle test sanity;
	Handle test hash code;
	Handle test equals;
	Handle test find

2. Changes to package io.netty.resolver.dns:  

2. Changes to package io.netty.util.internal:  

