BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (pom.xml). 
 This change set is mainly composed of:  

1. Changes to package io.netty.channel.epoll:  

1.1. Add a class for epoll socket ssl greeting test. It allows to:

	Instantiate epoll socket ssl greeting test  with server ctx ssl context, client ctx ssl context and client ctx ssl context;
	Handle new factories

2. Changes to package io.netty.example.http.snoop:  

2. Changes to package io.netty.example.http.upload:  

2. Changes to package io.netty.example.portunification:  

2. Changes to package io.netty.example.securechat:  

2. Changes to package io.netty.example.spdy.client:  

2. Changes to package io.netty.example.spdy.server:  

2. Changes to package io.netty.handler.ssl:  

2.1. Add a class for jdk ssl client context. It allows to:

	Instantiate jdk ssl client context;
	Instantiate jdk ssl client context  with cert chain file;
	Instantiate jdk ssl client context  with trust manager factory;
	Instantiate jdk ssl client context  with cert chain file, trust manager factory and trust manager factory;
	Instantiate jdk ssl client context  with cert chain file, trust manager factory, ciphers iterable, next protocols iterable and next protocols iterable;
	Instantiate jdk ssl client context  with cert chain file, trust manager factory, ciphers iterable, cipher suite filter, apn application protocol config and apn application protocol config;
	Instantiate jdk ssl client context  with cert chain file, trust manager factory, ciphers iterable, cipher suite filter, apn jdk application protocol negotiator and apn jdk application protocol negotiator;
	Instantiate jdk ssl client context  with provider, trust cert collection file, trust manager factory, ciphers iterable, cipher suite filter, apn jdk application protocol negotiator and apn jdk application protocol negotiator;
	Instantiate jdk ssl client context  with trust cert collection file, trust manager factory, key cert chain file, key file, key manager factory, ciphers iterable, cipher suite filter, apn application protocol config and apn application protocol config;
	Instantiate jdk ssl client context  with trust cert collection file, trust manager factory, key cert chain file, key file, key manager factory, ciphers iterable, cipher suite filter, apn jdk application protocol negotiator and apn jdk application protocol negotiator;
	Instantiate jdk ssl client context  with ssl context provider, trust certificate, trust manager factory, key certificate, private key, key manager factory, ciphers iterable, cipher suite filter, apn application protocol config and apn application protocol config;
	Handle new SSL context

2.2. Add a class for jdk ssl context. It allows to:

	Get default protocols;
	Get supported ciphers;
	Get default ciphers;
	Check if jdk ssl context is tls V 13 supported;
	Instantiate jdk ssl context  with SSL context, client auth and client auth;
	Instantiate jdk ssl context  with SSL context, ciphers iterable, cipher suite filter, apn application protocol config, client auth and client auth;
	Instantiate jdk ssl context  with SSL context, ciphers iterable, cipher suite filter, apn jdk application protocol negotiator, client auth and client auth;
	Get context;
	Check if jdk ssl context is client;
	Get session context;
	Get cipher suites;
	Get session cache size;
	Get session timeout;
	Handle new engine;
	Configure and wrap engine;
	Get application protocol negotiator;
	Convert jdk ssl context to negotiator;
	Build key manager factory;

2.3. Add a class for jdk ssl server context. It allows to:

	Instantiate jdk ssl server context  with cert chain file, key file and key file;
	Instantiate jdk ssl server context  with cert chain file, key file, ciphers iterable, next protocols iterable and next protocols iterable;
	Instantiate jdk ssl server context  with cert chain file, key file, ciphers iterable, cipher suite filter, apn application protocol config and apn application protocol config;
	Instantiate jdk ssl server context  with cert chain file, key file, ciphers iterable, cipher suite filter, apn jdk application protocol negotiator and apn jdk application protocol negotiator;
	Instantiate jdk ssl server context  with provider, cert chain file, key file, ciphers iterable, cipher suite filter, apn jdk application protocol negotiator and apn jdk application protocol negotiator;
	Instantiate jdk ssl server context  with trust cert collection file, trust manager factory, key cert chain file, key file, key manager factory, ciphers iterable, cipher suite filter, apn application protocol config and apn application protocol config;
	Instantiate jdk ssl server context  with trust cert collection file, trust manager factory, key cert chain file, key file, key manager factory, ciphers iterable, cipher suite filter, apn jdk application protocol negotiator and apn jdk application protocol negotiator;
	Instantiate jdk ssl server context  with provider, trust certificate, trust manager factory, key certificate, private key, key manager factory, ciphers iterable, cipher suite filter, apn application protocol config, client auth and client auth;
	Handle new SSL context

2.4. Add a class for open ssl. It allows to:

	Run;
	Get self signed certificate;
	Check if open ssl does support ocsp;
	Check if open ssl does support protocol;
	Check if open ssl is available;
	Check if open ssl is alpn supported;
	Check if open ssl is ocsp supported;
	Get version;
	Get version string;
	Ensure availability;
	Get unavailability cause;
	Handle available cipher suites;
	Handle available open ssl cipher suites;
	Handle available java cipher suites;
	Check if open ssl is cipher suite available;
	Handle supports key manager factory;
	Handle supports hostname validation;
	Use key manager factory;
	Get memory address;
	Instantiate open ssl;
	Load tc native;
	Initialize tc native;
	Release reference counted if needed;
	Check if open ssl is tlsv 13 supported;
	Check if open ssl is boring SSL

2.5. Add a class for open ssl engine. It allows to:

	Instantiate open ssl engine  with open ssl context, byte buf allocator and byte buf allocator;
	Finalize open ssl engine

2.6. Add a class for open ssl server context. It allows to:

	Instantiate open ssl server context  with cert chain file, key file and key file;
	Instantiate open ssl server context  with cert chain file, key file, ciphers iterable, apn application protocol config and apn application protocol config;
	Instantiate open ssl server context  with cert chain file, key file, ciphers iterable, next protocols iterable and next protocols iterable;
	Instantiate open ssl server context  with cert chain file, key file, trust manager factory, ciphers iterable, application protocol config and application protocol config;
	Instantiate open ssl server context  with cert chain file, key file, trust manager factory, ciphers iterable, apn open ssl application protocol negotiator and apn open ssl application protocol negotiator;
	Instantiate open ssl server context  with cert chain file, key file, ciphers iterable, cipher suite filter, apn application protocol config and apn application protocol config;
	Instantiate open ssl server context  with trust cert collection file, trust manager factory, key cert chain file, key file, key manager factory, ciphers iterable, cipher suite filter, application protocol config and application protocol config;
	Instantiate open ssl server context  with cert chain file, key file, trust manager factory, ciphers iterable, cipher suite filter, application protocol config and application protocol config;
	Instantiate open ssl server context  with cert chain file, key file, trust manager factory, ciphers iterable, cipher suite filter, apn open ssl application protocol negotiator and apn open ssl application protocol negotiator;
	Instantiate open ssl server context  with trust cert collection file, trust manager factory, key cert chain file, key file, key manager factory, ciphers iterable, cipher suite filter, apn open ssl application protocol negotiator and apn open ssl application protocol negotiator;
	Instantiate open ssl server context  with trust certificate, trust manager factory, key certificate, private key, key manager factory, ciphers iterable, cipher suite filter, apn application protocol config, client auth and client auth;
	Instantiate open ssl server context  with trust certificate, trust manager factory, key certificate, private key, key manager factory, ciphers iterable, cipher suite filter, apn open ssl application protocol negotiator, client auth and client auth;
	Get session context

2.7. Add a class for open ssl session stats. It allows to:

	Instantiate open ssl session stats  with reference counted open ssl context;
	Get number;
	Connect open ssl session stats;
	Connect good;
	Renegotiate open ssl session stats;
	Accept open ssl session stats;
	Accept good;
	Get hits;
	Cb hits;
	Check if open ssl session stats misses;
	Get timeouts;
	Cache full;
	Get ticket key fail;
	Get ticket key new;
	Get ticket key renew;
	Get ticket key resume

2.8. Add a class for pem reader. It allows to:

	Read certificates;
	Read private key;
	Read content;
	Handle safe close;
	Instantiate pem reader

2.9. Add a class for ssl context. It allows to:

	Get default server provider;
	Get default client provider;
	Get default provider;
	Handle new server context;
	Handle new server context internal;
	Verify null ssl context provider;
	Handle new client context;
	Handle new client context internal;
	Convert ssl context to application protocol config;
	Instantiate ssl context;
	Check if ssl context is server;
	Check if ssl context is client;
	Get cipher suites;
	Get session cache size;
	Get session timeout;
	Handle next protocols;
	Get application protocol negotiator;
	Handle new engine;
	Get session context;
	Handle new handler;
	Generate key spec;
	Build key store;
	Convert ssl context to private key;
	Get private key  from byte buffer;
	Build trust manager factory;
	Convert ssl context to X 509 certificates;
	Get certificates  from buffers;
	Convert ssl context to private key internal;
	Convert ssl context to X 509 certificates internal;
	Build key manager factory;
	Handle key store password

3. Changes to package io.netty.handler.ssl.util:  

3.1. Add a class for bouncy castle self signed cert generator. It allows to:

	Generate keypair pair;
	Instantiate bouncy castle self signed cert generator

3.2. Add a class for fingerprint trust manager factory. It allows to:

	Handle initial value;
	Check client trusted;
	Check server trusted;
	Trusted chain 509 certificate;
	Get fingerprint;
	Get accepted issuers;
	Instantiate fingerprint trust manager factory  with fingerprints iterable;
	Instantiate fingerprint trust manager factory;
	Convert fingerprint trust manager factory to fingerprint array;
	Handle engine init;
	Get engine get trust managers

3.3. Add a class for insecure trust manager factory. It allows to:

	Check client trusted;
	Check server trusted;
	Get accepted issuers;
	Instantiate insecure trust manager factory;
	Handle engine init;
	Get engine get trust managers

3.4. Add a class for open jdk self signed cert generator. It allows to:

	Generate keypair pair;
	Instantiate open jdk self signed cert generator

3.5. Add a class for self signed certificate. It allows to:

	Instantiate self signed certificate;
	Instantiate self signed certificate  with not before date, not after date and not after date;
	Instantiate self signed certificate  with secure random;
	Instantiate self signed certificate  with secure random, not before date, not after date and not after date;
	Get certificate;
	Handle private key;
	Get cert;
	Handle key;
	Delete self signed certificate;
	Handle new self signed certificate;
	Handle safe delete;
	Handle safe close

3.6. Add a class for thread local insecure random. It allows to:

	Handle current;
	Instantiate thread local insecure random;
	Get algorithm;
	Set seed;
	Handle next bytes;
	Generate seed;
	Handle next int;
	Handle next boolean;
	Handle next long;
	Handle next float;
	Handle next double;
	Handle next gaussian;
	Handle random

4. Changes to package io.netty.util.internal:  

