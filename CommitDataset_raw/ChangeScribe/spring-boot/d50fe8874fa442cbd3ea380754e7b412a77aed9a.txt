BUG - FEATURE: <type-ID> 

This is a degenerate modifier commit: this change set is composed of empty, incidental, and abstract methods. These methods indicate that a new feature is planned. This commit  includes changes to internationalization, properties or configuration files (pom.xml).  renames some files.
 This change set is mainly composed of:  

1. Changes to package org.springframework.boot.actuate.autoconfigure.cloudfoundry:  

1.1. Add a class for security response. It allows to:

	Instantiate security response  with http status;
	Get status;
	Get message;
	Get success

2. Changes to package org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive:  

2.1. Add a class for reactive cloud foundry security interceptor tests. It allows to:

	Handle setup;
	Pre handle when request is pre flight should be ok;
	Pre handle when token is missing should return missing authorization;
	Pre handle when token is  not bearer should return missing authorization;
	Pre handle when application id is null should return error;
	Pre handle when cloud foundry security service is null should return error;
	Pre handle when access is  not allowed should return access denied;
	Pre handle successful  with full access;
	Pre handle successful  with restricted access;
	Handle mock access token

2.2. Add a class for reactive cloud foundry security service. It allows to:

	Instantiate reactive cloud foundry security service  with web client builder;
	Build trust all ssl connector;
	Create ssl context;
	Get access level;
	Map error;
	Get permissions uri;
	Fetch token keys;
	Extract token keys;
	Get uaa url

2.3. Add a class for reactive cloud foundry security service tests. It allows to:

	Handle setup;
	Handle shutdown;
	Get access level when space developer should return full;
	Get access level when  not space developer should return restricted;
	Get access level when token is  not valid should throw exception;
	Get access level when forbidden should throw exception;
	Get access level when cloud controller is  not reachable throws exception;
	Fetch token keys when successful should return list  of keys from UAA;
	Fetch token keys when no keys returned  from UAA;
	Fetch token keys when unsuccessful should throw exception;
	Get uaa url should call cloud controller info  only once;
	Get uaa url when cloud controller url is  not reachable should throw exception;
	Prepare response;
	Expect request;
	Expect request count

2.4. Add a class for reactive token validator. It allows to:

	Instantiate reactive token validator  with reactive cloud foundry security service;
	Validate token;
	Validate algorithm;
	Validate key id and signature;
	Get token key;
	Handle cache token keys;
	Check if reactive token validator has valid signature;
	Get public key;
	Validate expiry;
	Validate issuer;
	Validate audience

2.5. Add a class for reactive token validator tests. It allows to:

	Handle setup;
	Validate token when kid validation fails  twice should throw exception;
	Validate token when kid validation succeeds  in the second attempt;
	Validate token when cache is empty should fetch token keys;
	Validate token when cache empty and invalid key should throw exception;
	Validate token when cache valid should  not fetch token keys;
	Validate token when signature invalid should throw exception;
	Validate token when token algorithm is  not RS 256 should throw exception;
	Validate token when expired should throw exception;
	Validate token when issuer is  not valid should throw exception;
	Validate token when audience is  not valid should throw exception;
	Get signed token;
	Get private key;
	Dot concat

3. Changes to package org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet:  

3.1. Add an object creator class for cloud foundry security interceptor. It allows to:

	Instantiate cloud foundry security interceptor  with token validator, cloud foundry security service and cloud foundry security service;
	Handle http servlet request;
	Check http servlet request;
	Get token

3.2. Add a class for cloud foundry security interceptor tests. It allows to:

	Handle setup;
	Pre handle when request is pre flight should return true;
	Pre handle when token is missing should return false;
	Pre handle when token is  not bearer should return false;
	Pre handle when application id is null should return false;
	Pre handle when cloud foundry security service is null should return false;
	Pre handle when access is  not allowed should return false;
	Pre handle successful  with full access;
	Pre handle successful  with restricted access;
	Handle mock access token

3.3. Rename type CloudFoundrySecurityService with CloudFoundrySecurityService

3.4. Rename type CloudFoundrySecurityServiceTests with CloudFoundrySecurityServiceTests

3.5. Rename type SkipSslVerificationHttpRequestFactoryTests with SkipSslVerificationHttpRequestFactoryTests

3.6. Rename type TokenValidator with TokenValidator

3.7. Rename type TokenValidatorTests with TokenValidatorTests

